// Auto generated by JuleC.
// JuleC version: jule0.0.15 @master
// Date: 15/8/2024 (DD/MM/YYYY) UTC
//
// Recomended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer dist/ir.cpp

#define __JULE_ENABLE__PRODUCTION
#include "std/jule/integrated/integrated.hpp"                                   
#include <sys/time.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <dirent.h>
#include <fcntl.h>
#include <unistd.h>
#include <cstdio>
#include <sys/stat.h>
#include <signal.h>
#include <sys/wait.h>
#include <chrono>
#include <time.h>


#include "api/jule.hpp"                                   


struct _1d654c399_comptimeRangeKind{};
struct _1d65929e9_Importer{};
struct _1d667757e_Kind{};
struct _1d669756b_Lookup{};
struct _1d7ccee38_CommonFlag{};
struct _2194b4a3c_Range16;
struct _2194b506a_Range32;
struct _2194b5521_RangeTable;
struct _1e0129522_acceptRange;
struct _1e01838bc_StrBuilder;
struct _1e018e576_lazyBuff;
struct _216764ce0_DirEntry;
struct _216765054_Directory;
struct _216766bb0_File;
struct _216768ca0_Status;
struct _1e034b821_cmdAttrs;
struct _1e0235a7e_Log;
struct _1d42ea2c0_floatInfo;
struct _1d42eacd7_decimalSlice;
struct _1d430d03b_leftCheat;
struct _1d430da64_decimal;
struct _1d4321208_Const;
struct _1d64d5cd3_Token;
struct _1d64db59c_File;
struct _1d64dd6c0_kindPair;
struct _1d64e47d6_lex;
struct _1d64e9423_Ast;
struct _1d64ea3d0_Node;
struct _1d64ea7ed_Directive;
struct _1d64eb3d1_TypeDecl;
struct _1d64eb9db_IdentTypeDecl;
struct _1d64ebcd8_SubIdentTypeDecl;
struct _1d64ec17e_NamespaceTypeDecl;
struct _1d64ec47b_SptrTypeDecl;
struct _1d64ec811_SlcTypeDecl;
struct _1d64ecb0d_TupleTypeDecl;
struct _1d64ece0a_PtrTypeDecl;
struct _1d64ed69c_ArrTypeDecl;
struct _1d64eddea_MapTypeDecl;
struct _1d64ee2c4_RetTypeDecl;
struct _1d6500715_Expr;
struct _1d6500a12_RangeExpr;
struct _1d65010d9_UseExpr;
struct _1d65013d6_TupleExpr;
struct _1d65017b0_LitExpr;
struct _1d6501b89_UnsafeExpr;
struct _1d6502140_IdentExpr;
struct _1d65027c2_UnaryExpr;
struct _1d6502b9b_VariadicExpr;
struct _1d6503075_CastExpr;
struct _1d650344e_NsSelectionExpr;
struct _1d6503828_SubIdentExpr;
struct _1d6503cce_BinaryExpr;
struct _1d650443e_FnCallExpr;
struct _1d6504e34_FieldExprPair;
struct _1d650575e_StructLit;
struct _1d6505c15_BraceLit;
struct _1d6506540_KeyValPair;
struct _1d6506c38_SliceExpr;
struct _1d65076c8_IndexingExpr;
struct _1d6507d38_SlicingExpr;
struct _1d6508135_Constraint;
struct _1d65085db_GenericDecl;
struct _1d65089b5_LabelSt;
struct _1d6508d8e_GotoSt;
struct _1d650918b_FallSt;
struct _1d65097eb_AssignLeft;
struct _1d6509d7e_AssignSt;
struct _1d650ac92_Stmt;
struct _1d650b402_ScopeTree;
struct _1d650bb3e_ParamDecl;
struct _1d650d091_FnDecl;
struct _1d650e24b_VarDecl;
struct _1d650e625_RetSt;
struct _1d650ed95_Iter;
struct _1d65106c0_WhileKind;
struct _1d65110c7_RangeKind;
struct _1d65114a1_BreakSt;
struct _1d651187a_ContSt;
struct _1d6511d31_If;
struct _1d651220a_Else;
struct _1d65126b1_Conditional;
struct _1d6512ded_TypeAliasDecl;
struct _1d65133a4_Case;
struct _1d6513bbd_MatchCase;
struct _1d65144d7_UseDecl;
struct _1d651498d_EnumItemDecl;
struct _1d651554e_EnumDecl;
struct _1d6515d79_TypeEnumItemDecl;
struct _1d65164d9_TypeEnumDecl;
struct _1d65167a3_FieldDecl;
struct _1d6517199_StructDecl;
struct _1d65178d6_TraitDecl;
struct _1d6518046_Impl;
struct _1d65193dd_Field;
struct _1d651b3bd_Operators;
struct _1d651c2d1_Struct;
struct _1d651e4ae_FieldIns;
struct _1d652400d_OperandExprModel;
struct _1d6524508_BinaryExprModel;
struct _1d65248d2_UnaryExprModel;
struct _1d6524e10_StructArgExprModel;
struct _1d65252a6_StructLitExprModel;
struct _1d65255a3_AllocStructLitExprModel;
struct _1d6525b36_CastingExprModel;
struct _1d65264d8_FnCallExprModel;
struct _1d65268b2_SliceExprModel;
struct _1d6526d68_IndexingExprModel;
struct _1d6527242_AnonFnExprModel;
struct _1d652761b_KeyValPairExprModel;
struct _1d6527ac2_MapExprModel;
struct _1d6528155_SlicingExprModel;
struct _1d65286d8_TraitSubIdentExprModel;
struct _1d6529079_StructSubIdentExprModel;
struct _1d6529530_StructStaticIdentExprModel;
struct _1d6529909_ArrayExprModel;
struct _1d6529c06_TupleExprModel;
struct _1d652a0d0_BuiltinOutCallExprModel;
struct _1d652a4a9_BuiltinOutlnCallExprModel;
struct _1d652a883_BuiltinNewCallExprModel;
struct _1d652ac5c_BuiltinPanicCallExprModel;
struct _1d652b213_BuiltinAssertCallExprModel;
struct _1d652b6b9_BuiltinMakeCallExprModel;
struct _1d652ba93_BuiltinAppendCallExprModel;
struct _1d652bd90_BuiltinLenCallExprModel;
struct _1d652c18c_BuiltinCapCallExprModel;
struct _1d652c566_BuiltinDeleteCallExprModel;
struct _1d652c940_BuiltinCopyCallExprModel;
struct _1d652cd19_BuiltinErrorCallExprModel;
struct _1d65288c5_SizeofExprModel;
struct _1d652d545_AlignofExprModel;
struct _1d652d842_RuneExprModel;
struct _1d652db3e_IntegratedToStrExprModel;
struct _1d652e018_BackendEmitExprModel;
struct _1d652e315_FreeExprModel;
struct _1d6530019_RetType;
struct _1d653079a_Param;
struct _1d653226e_Fn;
struct _1d65341c7_ParamIns;
struct _1d6535173_FnIns;
struct _1d6538341_ReferenceStack;
struct _1d653985e_Pass;
struct _1d653e424_symbolBuilder;
struct _1d654554b_Trait;
struct _1d65471da_EnumItem;
struct _1d6547c57_Enum;
struct _1d6548d8a_TypeEnumItem;
struct _1d6549462_TypeEnum;
struct _1d654c5b9_comptimeRange;
struct _1d654d08c_comptimeStructField;
struct _1d654ec4d_comptimeStructFields;
struct _1d6551348_comptimeStatic;
struct _1d6553009_comptimeStatics;
struct _1d6554604_comptimeEnumField;
struct _1d655599b_comptimeEnumFields;
struct _1d6557096_comptimeParam;
struct _1d655930c_comptimeParams;
struct _1d655a907_comptimeTypeInfos;
struct _1d655c002_comptimeTypeInfo;
struct _1d6563514_comptimeValue;
struct _1d6565d63_comptimeFiles;
struct _1d656745d_comptimeFile;
struct _1d656b86e_constraintChecker;
struct _1d656dbc3_Impl;
struct _1d6574129_Scope;
struct _1d6574547_If;
struct _1d6574844_Else;
struct _1d6574c62_Conditional;
struct _1d657505e_InfIter;
struct _1d6575515_WhileIter;
struct _1d6575e61_RangeIter;
struct _1d65762e6_ContSt;
struct _1d65766c0_BreakSt;
struct _1d65769bc_Label;
struct _1d6576d96_GotoSt;
struct _1d6577270_Postfix;
struct _1d6577726_Assign;
struct _1d6577b00_MultiAssign;
struct _1d6578260_Match;
struct _1d6578d98_Case;
struct _1d6579492_FallSt;
struct _1d6579827_RetSt;
struct _1d6579e87_scopeLabel;
struct _1d657a51a_scopeGoto;
struct _1d657b42d_scopeChecker;
struct _1d658e463_directiveChecker;
struct _1d659590e_ImportInfo;
struct _1d6598835_Package;
struct _1d65b5159_commonSemaMeta;
struct _1d65b5c81_Sema;
struct _1d65d594e_missingRetChecker;
struct _1d65d7d5d_IterRelation;
struct _1d65d9018_Var;
struct _1d65d9d2c_FuncPattern;
struct _1d662e14b_typeCompatibilityChecker;
struct _1d6630dea_assignTypeChecker;
struct _1d66327c0_dynamicTypeAnnotation;
struct _1d663762c_fnCallArgChecker;
struct _1d663a564_structLitChecker;
struct _1d663c346_rangeChecker;
struct _1d663eaa7_retTypeChecker;
struct _1d6641d73_SymbolTable;
struct _1d664721e_Data;
struct _1d6648363_Value;
struct _1d6648e13_Eval;
struct _1d666763a_unaryEval;
struct _1d66695c6_binaryEval;
struct _1d667614e_InsGeneric;
struct _1d6676c43_TypeAlias;
struct _1d6677a35_TypeKind;
struct _1d667ec07_TypeSymbol;
struct _1d668060e_Prim;
struct _1d668413a_Sptr;
struct _1d6684b0d_Slc;
struct _1d6685702_Tuple;
struct _1d66862a2_Map;
struct _1d6686e2e_Arr;
struct _1d6687902_Ptr;
struct _1d6688903_referencer;
struct _1d66898e3_typeChecker;
struct _1d6692577_identTypeLookup;
struct _1d70d5b8a_FileInfo;
struct _1d712e123_stmt;
struct _1d712e9b4_scopeParser;
struct _1d713c3d9_exprBuilder;
struct _1d714987a_assignInfo;
struct _1d714cc79_parser;
struct _1d715ee56_typeBuilder;
struct _1d6879198_CompileInfo;
struct _1d687a672_directiveEval;
struct _1d7163e49_JuleImporter;
struct _1d7168e3d_OrderedDefines;
struct _1d71691a2_defineOrderer;
struct _1d729282a_liveTable;
struct _1d72c7024_scopeDeadCode;
struct _1d72cb27b_exprDeadCode;
struct _1d6771403_SwapExprModel;
struct _1d6771821_EmptyCompareExprModel;
struct _1d6771b1d_RefExprModel;
struct _1d677214b_StrCompExprModel;
struct _1d67726ce_MutSlicingExprModel;
struct _1d67729cb_UnsafeBinaryExprModel;
struct _1d6772cc8_UnsafeIndexingExprModel;
struct _1d6773207_PushToSliceExprModel;
struct _1d67735d1_AppendToSliceExprModel;
struct _1d677478b_scopeOptimizer;
struct _1d677a929_exprOptimizer;
struct _1d72d32e9_Optimizer;
struct _1d730ade3_AnsiEscape;
struct _1d730c510_Logger;
struct _1d7c42bd1_AbsTime;
struct _1d7c433a7_Time;
struct _1d7b69355_scopeCoder;
struct _1d7b734d5_exprCoder;
struct _1d7b83cba_TestCoder;
struct _1d7b86a8c_identCoder;
struct _1d7c4ad3d_SerializationInfo;
struct _1d7c4b415_traitHash;
struct _1d7c4b7de_traitCast;
struct _1d7c5bea3_customType;
struct _1d7c5cab9_typeCoder;
struct _1d7c65e8a_resultCoder;
struct _1db2bb663_Flag;
struct _1db2c0007_Flag;
struct _1db2c3703_Flag;
struct _1db2c6e43_Flag;
struct _1db2ca63e_Flag;
struct _1d7cd19d9_FlagSet;
struct _1d7cd446a_argParser;
struct _1d7c4c856_ObjectCoder;
struct _1d7292c15_ObjectDeadCode;
struct _1d7166787_IR;
struct _1d652005e_StructIns;
struct _1e02e7aa8_Cmd;
struct _2194b4a3c_Range16 {
	jule::U16 _field_Lo = 0;
	jule::U16 _field_Hi = 0;
	jule::U16 _field_Stride = 0;
	

	inline bool operator==(_2194b4a3c_Range16 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_2194b4a3c_Range16 _other) { return !this->operator==(_other); }


};
struct _2194b506a_Range32 {
	jule::U32 _field_Lo = 0;
	jule::U32 _field_Hi = 0;
	jule::U32 _field_Stride = 0;
	

	inline bool operator==(_2194b506a_Range32 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_2194b506a_Range32 _other) { return !this->operator==(_other); }


};
struct _2194b5521_RangeTable {
	jule::Slice<_2194b4a3c_Range16> _field_R16;
	jule::Slice<_2194b506a_Range32> _field_R32;
	jule::I64 _field_LatinOffset = 0;
	


};
struct _1e0129522_acceptRange {
	jule::U8 _field_lo = 0;
	jule::U8 _field_hi = 0;
	

	inline bool operator==(_1e0129522_acceptRange _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi;
	}

	inline bool operator!=(_1e0129522_acceptRange _other) { return !this->operator==(_other); }


};
struct _1e01838bc_StrBuilder {
	jule::Slice<jule::U8> _field_buf;
	


};
struct _1e018e576_lazyBuff {
	jule::Str _field_path;
	jule::Slice<jule::U8> _field_buff;
	jule::I64 _field_w = 0;
	jule::Str _field_volAndPath;
	jule::I64 _field_volLen = 0;
	


};
struct _216764ce0_DirEntry {
	jule::Str _field_Name;
	jule::Ptr<_216768ca0_Status> _field_Stat;
	

	inline bool operator==(_216764ce0_DirEntry _other) {
		return 
			this->_field_Name == _other._field_Name &&
			this->_field_Stat == _other._field_Stat;
	}

	inline bool operator!=(_216764ce0_DirEntry _other) { return !this->operator==(_other); }


};
struct _216765054_Directory {
	

	inline bool operator==(_216765054_Directory _other) { return true; }

	inline bool operator!=(_216765054_Directory _other) { return !this->operator==(_other); }


};
struct _216766bb0_File {
	jule::Uintptr _field_handle = 0;
	

	inline bool operator==(_216766bb0_File _other) {
		return 
			this->_field_handle == _other._field_handle;
	}

	inline bool operator!=(_216766bb0_File _other) { return !this->operator==(_other); }


};
struct _216768ca0_Status {
	jule::I64 _field_mode = 0LL;
	jule::U64 _field_size = 0;
	

	inline bool operator==(_216768ca0_Status _other) {
		return 
			this->_field_mode == _other._field_mode &&
			this->_field_size == _other._field_size;
	}

	inline bool operator!=(_216768ca0_Status _other) { return !this->operator==(_other); }


};
struct _1e034b821_cmdAttrs {
	jule::I64 _field_pid = -1LL;
	

	inline bool operator==(_1e034b821_cmdAttrs _other) {
		return 
			this->_field_pid == _other._field_pid;
	}

	inline bool operator!=(_1e034b821_cmdAttrs _other) { return !this->operator==(_other); }


};
struct _1e0235a7e_Log {
	jule::I64 _field_Kind = 0LL;
	jule::I64 _field_Row = 0;
	jule::I64 _field_Column = 0;
	jule::Str _field_Path;
	jule::Str _field_Text;
	jule::Str _field_Line;
	jule::Str _field_Suggestion;
	

	inline bool operator==(_1e0235a7e_Log _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Path == _other._field_Path &&
			this->_field_Text == _other._field_Text &&
			this->_field_Line == _other._field_Line &&
			this->_field_Suggestion == _other._field_Suggestion;
	}

	inline bool operator!=(_1e0235a7e_Log _other) { return !this->operator==(_other); }


};
struct _1d42ea2c0_floatInfo {
	jule::U64 _field_mantbits = 0;
	jule::U64 _field_expbits = 0;
	jule::I64 _field_bias = 0;
	

	inline bool operator==(_1d42ea2c0_floatInfo _other) {
		return 
			this->_field_mantbits == _other._field_mantbits &&
			this->_field_expbits == _other._field_expbits &&
			this->_field_bias == _other._field_bias;
	}

	inline bool operator!=(_1d42ea2c0_floatInfo _other) { return !this->operator==(_other); }


};
struct _1d42eacd7_decimalSlice {
	jule::Slice<jule::U8> _field_d;
	jule::I64 _field_nd = 0;
	jule::I64 _field_dp = 0;
	jule::Bool _field_neg = false;
	


};
struct _1d430d03b_leftCheat {
	jule::I64 _field_delta = 0;
	jule::Str _field_cutoff;
	

	inline bool operator==(_1d430d03b_leftCheat _other) {
		return 
			this->_field_delta == _other._field_delta &&
			this->_field_cutoff == _other._field_cutoff;
	}

	inline bool operator!=(_1d430d03b_leftCheat _other) { return !this->operator==(_other); }


};
struct _1d430da64_decimal {
	jule::Array<jule::U8,800> _field_d = jule::Array<jule::U8,800>(0);
	jule::I64 _field_nd = 0;
	jule::I64 _field_dp = 0;
	jule::Bool _field_neg = false;
	jule::Bool _field_trunc = false;
	

	inline bool operator==(_1d430da64_decimal _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg &&
			this->_field_trunc == _other._field_trunc;
	}

	inline bool operator!=(_1d430da64_decimal _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d4326cad_Eq(_1d4321208_Const*, _1d4321208_Const);
inline jule::Bool _1d43270ee_Lt(_1d4321208_Const*, _1d4321208_Const);
inline jule::Bool _1d4327440_LtEq(_1d4321208_Const*, _1d4321208_Const);
inline jule::Bool _1d4327781_Gt(_1d4321208_Const*, _1d4321208_Const);
inline jule::Bool _1d4327ac2_GtEq(_1d4321208_Const*, _1d4321208_Const);
struct _1d4321208_Const {
	jule::Str _field_Kind;
	jule::Any _field_data;
	

	inline jule::Bool operator==(_1d4321208_Const _other) { return _1d4326cad_Eq(this, _other); }

	inline bool operator!=(_1d4321208_Const _other) { return !this->operator==(_other); }

	inline jule::Bool operator>(_1d4321208_Const _other) { return _1d4327781_Gt(this, _other); }

	inline jule::Bool operator>=(_1d4321208_Const _other) { return _1d4327ac2_GtEq(this, _other); }

	inline jule::Bool operator<(_1d4321208_Const _other) { return _1d43270ee_Lt(this, _other); }

	inline jule::Bool operator<=(_1d4321208_Const _other) { return _1d4327440_LtEq(this, _other); }


};
struct _1d64d5cd3_Token {
	jule::Ptr<_1d64db59c_File> _field_File;
	jule::I64 _field_Row = 0;
	jule::I64 _field_Column = 0;
	jule::Str _field_Kind;
	jule::U64 _field_Id = 0LLU;
	

	inline bool operator==(_1d64d5cd3_Token _other) {
		return 
			this->_field_File == _other._field_File &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Id == _other._field_Id;
	}

	inline bool operator!=(_1d64d5cd3_Token _other) { return !this->operator==(_other); }


};
struct _1d64db59c_File {
	jule::Str _field_Path;
	jule::Slice<jule::U8> _field_Data;
	jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _field_Tokens;
	


};
struct _1d64dd6c0_kindPair {
	jule::Str _field_kind = jule::Str::lit("::", 2);
	jule::U64 _field_id = 0LLU;
	

	inline bool operator==(_1d64dd6c0_kindPair _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_id == _other._field_id;
	}

	inline bool operator!=(_1d64dd6c0_kindPair _other) { return !this->operator==(_other); }


};
struct _1d64e47d6_lex {
	jule::I64 _field_mode = 0LL;
	jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _field_tokens;
	jule::Ptr<_1d64db59c_File> _field_file;
	jule::I64 _field_pos = 0;
	jule::I64 _field_column = 0;
	jule::I64 _field_row = 0;
	jule::Slice<_1e0235a7e_Log> _field_errors;
	


};
struct _1d64e9423_Ast {
	jule::Ptr<_1d64db59c_File> _field_File;
	jule::Slice<jule::Ptr<_1d64ea7ed_Directive>> _field_TopDirectives;
	jule::Slice<jule::Ptr<_1d65144d7_UseDecl>> _field_UseDecls;
	jule::Slice<_1d64ea3d0_Node> _field_Nodes;
	


};
struct _1d64ea3d0_Node {
	jule::Ptr<_1d64d5cd3_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

	inline bool operator==(_1d64ea3d0_Node _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1d64ea3d0_Node _other) { return !this->operator==(_other); }


};
struct _1d64ea7ed_Directive {
	jule::Ptr<_1d64d5cd3_Token> _field_Tag;
	jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _field_Args;
	


};
struct _1d64eb3d1_TypeDecl {
	jule::Ptr<_1d64d5cd3_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	

	inline bool operator==(_1d64eb3d1_TypeDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1d64eb3d1_TypeDecl _other) { return !this->operator==(_other); }


};
struct _1d64eb9db_IdentTypeDecl {
	jule::Ptr<_1d64d5cd3_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_1d64eb3d1_TypeDecl>> _field_Generics;
	


};
struct _1d64ebcd8_SubIdentTypeDecl {
	jule::Slice<jule::Ptr<_1d64eb9db_IdentTypeDecl>> _field_Idents;
	


};
struct _1d64ec17e_NamespaceTypeDecl {
	jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _field_Idents;
	jule::Ptr<_1d64eb3d1_TypeDecl> _field_Kind;
	


};
struct _1d64ec47b_SptrTypeDecl {
	jule::Ptr<_1d64eb3d1_TypeDecl> _field_Elem;
	

	inline bool operator==(_1d64ec47b_SptrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1d64ec47b_SptrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1d64ec811_SlcTypeDecl {
	jule::Ptr<_1d64eb3d1_TypeDecl> _field_Elem;
	

	inline bool operator==(_1d64ec811_SlcTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1d64ec811_SlcTypeDecl _other) { return !this->operator==(_other); }


};
struct _1d64ecb0d_TupleTypeDecl {
	jule::Slice<jule::Ptr<_1d64eb3d1_TypeDecl>> _field_Types;
	


};
struct _1d64ece0a_PtrTypeDecl {
	jule::Ptr<_1d64eb3d1_TypeDecl> _field_Elem;
	

	inline bool operator==(_1d64ece0a_PtrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1d64ece0a_PtrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1d64ed69c_ArrTypeDecl {
	jule::Ptr<_1d64eb3d1_TypeDecl> _field_Elem;
	jule::Ptr<_1d6500715_Expr> _field_Size;
	

	inline bool operator==(_1d64ed69c_ArrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem &&
			this->_field_Size == _other._field_Size;
	}

	inline bool operator!=(_1d64ed69c_ArrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1d64eddea_MapTypeDecl {
	jule::Ptr<_1d64eb3d1_TypeDecl> _field_Key;
	jule::Ptr<_1d64eb3d1_TypeDecl> _field_Val;
	

	inline bool operator==(_1d64eddea_MapTypeDecl _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1d64eddea_MapTypeDecl _other) { return !this->operator==(_other); }


};
struct _1d64ee2c4_RetTypeDecl {
	jule::Ptr<_1d64eb3d1_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _field_Idents;
	


};
struct _1d6500715_Expr {
	jule::Ptr<_1d64d5cd3_Token> _field_Token;
	jule::Ptr<_1d64d5cd3_Token> _field_End;
	jule::Any _field_Kind = jule::Any(nullptr);
	

	inline bool operator==(_1d6500715_Expr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1d6500715_Expr _other) { return !this->operator==(_other); }


};
struct _1d6500a12_RangeExpr {
	jule::Ptr<_1d6500715_Expr> _field_Expr;
	

	inline bool operator==(_1d6500a12_RangeExpr _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1d6500a12_RangeExpr _other) { return !this->operator==(_other); }


};
struct _1d65010d9_UseExpr {
	jule::Ptr<_1d64d5cd3_Token> _field_Token;
	jule::Ptr<_1d6500715_Expr> _field_Expr;
	

	inline bool operator==(_1d65010d9_UseExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1d65010d9_UseExpr _other) { return !this->operator==(_other); }


};
struct _1d65013d6_TupleExpr {
	jule::Slice<jule::Ptr<_1d6500715_Expr>> _field_Expr;
	


};
struct _1d65017b0_LitExpr {
	jule::Ptr<_1d64d5cd3_Token> _field_Token;
	jule::Str _field_Value;
	

	inline bool operator==(_1d65017b0_LitExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_1d65017b0_LitExpr _other) { return !this->operator==(_other); }


};
struct _1d6501b89_UnsafeExpr {
	jule::Ptr<_1d64d5cd3_Token> _field_Token;
	jule::Ptr<_1d6500715_Expr> _field_Expr;
	

	inline bool operator==(_1d6501b89_UnsafeExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1d6501b89_UnsafeExpr _other) { return !this->operator==(_other); }


};
struct _1d6502140_IdentExpr {
	jule::Ptr<_1d64d5cd3_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	

	inline bool operator==(_1d6502140_IdentExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Binded == _other._field_Binded;
	}

	inline bool operator!=(_1d6502140_IdentExpr _other) { return !this->operator==(_other); }


};
struct _1d65027c2_UnaryExpr {
	jule::Ptr<_1d64d5cd3_Token> _field_Op;
	jule::Ptr<_1d6500715_Expr> _field_Expr;
	

	inline bool operator==(_1d65027c2_UnaryExpr _other) {
		return 
			this->_field_Op == _other._field_Op &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1d65027c2_UnaryExpr _other) { return !this->operator==(_other); }


};
struct _1d6502b9b_VariadicExpr {
	jule::Ptr<_1d64d5cd3_Token> _field_Token;
	jule::Ptr<_1d6500715_Expr> _field_Expr;
	

	inline bool operator==(_1d6502b9b_VariadicExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1d6502b9b_VariadicExpr _other) { return !this->operator==(_other); }


};
struct _1d6503075_CastExpr {
	jule::Ptr<_1d64eb3d1_TypeDecl> _field_Kind;
	jule::Ptr<_1d6500715_Expr> _field_Expr;
	

	inline bool operator==(_1d6503075_CastExpr _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1d6503075_CastExpr _other) { return !this->operator==(_other); }


};
struct _1d650344e_NsSelectionExpr {
	jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _field_Ns;
	jule::Ptr<_1d64d5cd3_Token> _field_Ident;
	


};
struct _1d6503828_SubIdentExpr {
	jule::Ptr<_1d6500715_Expr> _field_Expr;
	jule::Ptr<_1d64d5cd3_Token> _field_Ident;
	

	inline bool operator==(_1d6503828_SubIdentExpr _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1d6503828_SubIdentExpr _other) { return !this->operator==(_other); }


};
struct _1d6503cce_BinaryExpr {
	jule::Ptr<_1d6500715_Expr> _field_Left;
	jule::Ptr<_1d6500715_Expr> _field_Right;
	jule::Ptr<_1d64d5cd3_Token> _field_Op;
	

	inline bool operator==(_1d6503cce_BinaryExpr _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1d6503cce_BinaryExpr _other) { return !this->operator==(_other); }


};
struct _1d650443e_FnCallExpr {
	jule::Ptr<_1d64d5cd3_Token> _field_Token;
	jule::Ptr<_1d6500715_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1d6500715_Expr>> _field_Args;
	jule::Ptr<_1d650b402_ScopeTree> _field_Exception;
	jule::Bool _field_IsCo = false;
	


};
struct _1d6504e34_FieldExprPair {
	jule::Ptr<_1d64d5cd3_Token> _field_Field;
	jule::Ptr<_1d6500715_Expr> _field_Expr;
	

	inline bool operator==(_1d6504e34_FieldExprPair _other) {
		return 
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1d6504e34_FieldExprPair _other) { return !this->operator==(_other); }


};
struct _1d650575e_StructLit {
	jule::Ptr<_1d64d5cd3_Token> _field_End;
	jule::Ptr<_1d64eb3d1_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1d6500715_Expr>> _field_Exprs;
	


};
struct _1d6505c15_BraceLit {
	jule::Ptr<_1d64d5cd3_Token> _field_Token;
	jule::Ptr<_1d64d5cd3_Token> _field_End;
	jule::Slice<jule::Ptr<_1d6500715_Expr>> _field_Exprs;
	


};
struct _1d6506540_KeyValPair {
	jule::Ptr<_1d6500715_Expr> _field_Key;
	jule::Ptr<_1d6500715_Expr> _field_Val;
	jule::Ptr<_1d64d5cd3_Token> _field_Colon;
	

	inline bool operator==(_1d6506540_KeyValPair _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val &&
			this->_field_Colon == _other._field_Colon;
	}

	inline bool operator!=(_1d6506540_KeyValPair _other) { return !this->operator==(_other); }


};
struct _1d6506c38_SliceExpr {
	jule::Ptr<_1d64d5cd3_Token> _field_Token;
	jule::Ptr<_1d64d5cd3_Token> _field_End;
	jule::Slice<jule::Ptr<_1d6500715_Expr>> _field_Exprs;
	


};
struct _1d65076c8_IndexingExpr {
	jule::Ptr<_1d64d5cd3_Token> _field_Token;
	jule::Ptr<_1d64d5cd3_Token> _field_End;
	jule::Ptr<_1d6500715_Expr> _field_Expr;
	jule::Ptr<_1d6500715_Expr> _field_Index;
	

	inline bool operator==(_1d65076c8_IndexingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_1d65076c8_IndexingExpr _other) { return !this->operator==(_other); }


};
struct _1d6507d38_SlicingExpr {
	jule::Ptr<_1d64d5cd3_Token> _field_Token;
	jule::Ptr<_1d64d5cd3_Token> _field_End;
	jule::Ptr<_1d6500715_Expr> _field_Expr;
	jule::Ptr<_1d6500715_Expr> _field_Start;
	jule::Ptr<_1d6500715_Expr> _field_To;
	

	inline bool operator==(_1d6507d38_SlicingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Start == _other._field_Start &&
			this->_field_To == _other._field_To;
	}

	inline bool operator!=(_1d6507d38_SlicingExpr _other) { return !this->operator==(_other); }


};
struct _1d6508135_Constraint {
	jule::Slice<jule::Ptr<_1d64eb3d1_TypeDecl>> _field_Mask;
	


};
struct _1d65085db_GenericDecl {
	jule::Ptr<_1d64d5cd3_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1d6508135_Constraint> _field_Constraint;
	

	inline bool operator==(_1d65085db_GenericDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Constraint == _other._field_Constraint;
	}

	inline bool operator!=(_1d65085db_GenericDecl _other) { return !this->operator==(_other); }


};
struct _1d65089b5_LabelSt {
	jule::Ptr<_1d64d5cd3_Token> _field_Token;
	jule::Str _field_Ident;
	

	inline bool operator==(_1d65089b5_LabelSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1d65089b5_LabelSt _other) { return !this->operator==(_other); }


};
struct _1d6508d8e_GotoSt {
	jule::Ptr<_1d64d5cd3_Token> _field_Token;
	jule::Ptr<_1d64d5cd3_Token> _field_Label;
	

	inline bool operator==(_1d6508d8e_GotoSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1d6508d8e_GotoSt _other) { return !this->operator==(_other); }


};
struct _1d650918b_FallSt {
	jule::Ptr<_1d64d5cd3_Token> _field_Token;
	

	inline bool operator==(_1d650918b_FallSt _other) {
		return 
			this->_field_Token == _other._field_Token;
	}

	inline bool operator!=(_1d650918b_FallSt _other) { return !this->operator==(_other); }


};
struct _1d65097eb_AssignLeft {
	jule::Ptr<_1d64d5cd3_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Str _field_Ident;
	jule::Ptr<_1d6500715_Expr> _field_Expr;
	

	inline bool operator==(_1d65097eb_AssignLeft _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1d65097eb_AssignLeft _other) { return !this->operator==(_other); }


};
struct _1d6509d7e_AssignSt {
	jule::Bool _field_Declarative = false;
	jule::Ptr<_1d64d5cd3_Token> _field_Setter;
	jule::Slice<jule::Ptr<_1d65097eb_AssignLeft>> _field_Left;
	jule::Ptr<_1d6500715_Expr> _field_Right;
	


};
struct _1d650ac92_Stmt {
	jule::Ptr<_1d64d5cd3_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

	inline bool operator==(_1d650ac92_Stmt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1d650ac92_Stmt _other) { return !this->operator==(_other); }


};
struct _1d650b402_ScopeTree {
	jule::Ptr<_1d650b402_ScopeTree> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<_1d650ac92_Stmt> _field_Stmts;
	jule::Ptr<_1d64d5cd3_Token> _field_End;
	


};
struct _1d650bb3e_ParamDecl {
	jule::Ptr<_1d64d5cd3_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1d64eb3d1_TypeDecl> _field_Kind;
	jule::Str _field_Ident;
	

	inline bool operator==(_1d650bb3e_ParamDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1d650bb3e_ParamDecl _other) { return !this->operator==(_other); }


};
struct _1d650d091_FnDecl {
	jule::Ptr<_1d64d5cd3_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1d64ea7ed_Directive>> _field_Directives;
	jule::Ptr<_1d650b402_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1d65085db_GenericDecl>> _field_Generics;
	jule::Ptr<_1d64ee2c4_RetTypeDecl> _field_Result;
	jule::Slice<jule::Ptr<_1d650bb3e_ParamDecl>> _field_Params;
	


};
struct _1d650e24b_VarDecl {
	jule::Ptr<_1d650b402_ScopeTree> _field_Scope;
	jule::Ptr<_1d64d5cd3_Token> _field_Token;
	jule::Ptr<_1d64d5cd3_Token> _field_Setter;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Slice<jule::Ptr<_1d64ea7ed_Directive>> _field_Directives;
	jule::Ptr<_1d64eb3d1_TypeDecl> _field_Kind;
	jule::Ptr<_1d6500715_Expr> _field_Expr;
	


};
struct _1d650e625_RetSt {
	jule::Ptr<_1d64d5cd3_Token> _field_Token;
	jule::Ptr<_1d6500715_Expr> _field_Expr;
	

	inline bool operator==(_1d650e625_RetSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1d650e625_RetSt _other) { return !this->operator==(_other); }


};
struct _1d650ed95_Iter {
	jule::Bool _field_Comptime = false;
	jule::Ptr<_1d64d5cd3_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	jule::Ptr<_1d650b402_ScopeTree> _field_Scope;
	

	inline bool operator==(_1d650ed95_Iter _other) {
		return 
			this->_field_Comptime == _other._field_Comptime &&
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1d650ed95_Iter _other) { return !this->operator==(_other); }


};
struct _1d65106c0_WhileKind {
	jule::Ptr<_1d6500715_Expr> _field_Expr;
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_1d64d5cd3_Token> _field_NextToken;
	

	inline bool operator==(_1d65106c0_WhileKind _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_NextToken == _other._field_NextToken;
	}

	inline bool operator!=(_1d65106c0_WhileKind _other) { return !this->operator==(_other); }


};
struct _1d65110c7_RangeKind {
	jule::Ptr<_1d64d5cd3_Token> _field_InToken;
	jule::Ptr<_1d6500715_Expr> _field_Expr;
	jule::Ptr<_1d650e24b_VarDecl> _field_KeyA;
	jule::Ptr<_1d650e24b_VarDecl> _field_KeyB;
	

	inline bool operator==(_1d65110c7_RangeKind _other) {
		return 
			this->_field_InToken == _other._field_InToken &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_1d65110c7_RangeKind _other) { return !this->operator==(_other); }


};
struct _1d65114a1_BreakSt {
	jule::Ptr<_1d64d5cd3_Token> _field_Token;
	jule::Ptr<_1d64d5cd3_Token> _field_Label;
	

	inline bool operator==(_1d65114a1_BreakSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1d65114a1_BreakSt _other) { return !this->operator==(_other); }


};
struct _1d651187a_ContSt {
	jule::Ptr<_1d64d5cd3_Token> _field_Token;
	jule::Ptr<_1d64d5cd3_Token> _field_Label;
	

	inline bool operator==(_1d651187a_ContSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1d651187a_ContSt _other) { return !this->operator==(_other); }


};
struct _1d6511d31_If {
	jule::Ptr<_1d64d5cd3_Token> _field_Token;
	jule::Ptr<_1d6500715_Expr> _field_Expr;
	jule::Ptr<_1d650b402_ScopeTree> _field_Scope;
	

	inline bool operator==(_1d6511d31_If _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1d6511d31_If _other) { return !this->operator==(_other); }


};
struct _1d651220a_Else {
	jule::Ptr<_1d64d5cd3_Token> _field_Token;
	jule::Ptr<_1d650b402_ScopeTree> _field_Scope;
	

	inline bool operator==(_1d651220a_Else _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1d651220a_Else _other) { return !this->operator==(_other); }


};
struct _1d65126b1_Conditional {
	jule::Ptr<_1d6511d31_If> _field_Head;
	jule::Slice<jule::Ptr<_1d6511d31_If>> _field_Tail;
	jule::Ptr<_1d651220a_Else> _field_Default;
	


};
struct _1d6512ded_TypeAliasDecl {
	jule::Ptr<_1d650b402_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Ptr<_1d64d5cd3_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1d64eb3d1_TypeDecl> _field_Kind;
	

	inline bool operator==(_1d6512ded_TypeAliasDecl _other) {
		return 
			this->_field_Scope == _other._field_Scope &&
			this->_field_Public == _other._field_Public &&
			this->_field_Binded == _other._field_Binded &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1d6512ded_TypeAliasDecl _other) { return !this->operator==(_other); }


};
struct _1d65133a4_Case {
	jule::Ptr<_1d64d5cd3_Token> _field_Token;
	jule::Ptr<_1d650b402_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1d6500715_Expr>> _field_Exprs;
	


};
struct _1d6513bbd_MatchCase {
	jule::Bool _field_Comptime = false;
	jule::Ptr<_1d64d5cd3_Token> _field_Token;
	jule::Ptr<_1d64d5cd3_Token> _field_End;
	jule::Bool _field_TypeMatch = false;
	jule::Ptr<_1d6500715_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1d65133a4_Case>> _field_Cases;
	jule::Ptr<_1d651220a_Else> _field_Default;
	


};
struct _1d65144d7_UseDecl {
	jule::Ptr<_1d64d5cd3_Token> _field_Token;
	jule::Str _field_LinkPath;
	jule::Str _field_Alias;
	jule::Bool _field_Full = false;
	jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _field_Selected;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Std = false;
	


};
struct _1d651498d_EnumItemDecl {
	jule::Ptr<_1d64d5cd3_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1d6500715_Expr> _field_Expr;
	

	inline bool operator==(_1d651498d_EnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1d651498d_EnumItemDecl _other) { return !this->operator==(_other); }


};
struct _1d651554e_EnumDecl {
	jule::Ptr<_1d64d5cd3_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_1d64eb3d1_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1d651498d_EnumItemDecl>> _field_Items;
	jule::Ptr<_1d64d5cd3_Token> _field_End;
	


};
struct _1d6515d79_TypeEnumItemDecl {
	jule::Ptr<_1d64d5cd3_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1d64eb3d1_TypeDecl> _field_Kind;
	

	inline bool operator==(_1d6515d79_TypeEnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1d6515d79_TypeEnumItemDecl _other) { return !this->operator==(_other); }


};
struct _1d65164d9_TypeEnumDecl {
	jule::Ptr<_1d64d5cd3_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1d6515d79_TypeEnumItemDecl>> _field_Items;
	jule::Ptr<_1d64d5cd3_Token> _field_End;
	


};
struct _1d65167a3_FieldDecl {
	jule::Ptr<_1d64d5cd3_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_1d64eb3d1_TypeDecl> _field_Kind;
	jule::Ptr<_1d6500715_Expr> _field_Default;
	

	inline bool operator==(_1d65167a3_FieldDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1d65167a3_FieldDecl _other) { return !this->operator==(_other); }


};
struct _1d6517199_StructDecl {
	jule::Ptr<_1d64d5cd3_Token> _field_Token;
	jule::Ptr<_1d64d5cd3_Token> _field_End;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1d65167a3_FieldDecl>> _field_Fields;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_1d64ea7ed_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1d65085db_GenericDecl>> _field_Generics;
	


};
struct _1d65178d6_TraitDecl {
	jule::Ptr<_1d64d5cd3_Token> _field_Token;
	jule::Ptr<_1d64d5cd3_Token> _field_End;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Slice<jule::Ptr<_1d64eb3d1_TypeDecl>> _field_Inherits;
	jule::Slice<jule::Ptr<_1d650d091_FnDecl>> _field_Methods;
	


};
struct _1d6518046_Impl {
	jule::Ptr<_1d64d5cd3_Token> _field_End;
	jule::Ptr<_1d64eb3d1_TypeDecl> _field_Base;
	jule::Ptr<_1d64eb3d1_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1d650d091_FnDecl>> _field_Methods;
	jule::Slice<jule::Ptr<_1d650e24b_VarDecl>> _field_Statics;
	


};
struct _1d65193dd_Field {
	jule::Ptr<_1d651c2d1_Struct> _field_Owner;
	jule::Ptr<_1d64d5cd3_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_1d667ec07_TypeSymbol> _field_Kind;
	jule::Ptr<_1d6500715_Expr> _field_Default;
	

	inline bool operator==(_1d65193dd_Field _other) {
		return 
			this->_field_Owner == _other._field_Owner &&
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1d65193dd_Field _other) { return !this->operator==(_other); }


};
struct _1d651b3bd_Operators {
	jule::Ptr<_1d6535173_FnIns> _field_Eq;
	jule::Ptr<_1d6535173_FnIns> _field_Gt;
	jule::Ptr<_1d6535173_FnIns> _field_GtEq;
	jule::Ptr<_1d6535173_FnIns> _field_Lt;
	jule::Ptr<_1d6535173_FnIns> _field_LtEq;
	jule::Ptr<_1d6535173_FnIns> _field_Shl;
	jule::Ptr<_1d6535173_FnIns> _field_Shr;
	jule::Ptr<_1d6535173_FnIns> _field_Add;
	jule::Ptr<_1d6535173_FnIns> _field_Sub;
	jule::Ptr<_1d6535173_FnIns> _field_Div;
	jule::Ptr<_1d6535173_FnIns> _field_Mul;
	jule::Ptr<_1d6535173_FnIns> _field_Mod;
	jule::Ptr<_1d6535173_FnIns> _field_BitAnd;
	jule::Ptr<_1d6535173_FnIns> _field_BitOr;
	jule::Ptr<_1d6535173_FnIns> _field_BitXor;
	jule::Ptr<_1d6535173_FnIns> _field_Neg;
	jule::Ptr<_1d6535173_FnIns> _field_Pos;
	jule::Ptr<_1d6535173_FnIns> _field_BitNot;
	jule::Ptr<_1d6535173_FnIns> _field_AddAssign;
	jule::Ptr<_1d6535173_FnIns> _field_SubAssign;
	jule::Ptr<_1d6535173_FnIns> _field_DivAssign;
	jule::Ptr<_1d6535173_FnIns> _field_MulAssign;
	jule::Ptr<_1d6535173_FnIns> _field_ModAssign;
	jule::Ptr<_1d6535173_FnIns> _field_ShlAssign;
	jule::Ptr<_1d6535173_FnIns> _field_ShrAssign;
	jule::Ptr<_1d6535173_FnIns> _field_BitOrAssign;
	jule::Ptr<_1d6535173_FnIns> _field_BitAndAssign;
	jule::Ptr<_1d6535173_FnIns> _field_BitXorAssign;
	

	inline bool operator==(_1d651b3bd_Operators _other) {
		return 
			this->_field_Eq == _other._field_Eq &&
			this->_field_Gt == _other._field_Gt &&
			this->_field_GtEq == _other._field_GtEq &&
			this->_field_Lt == _other._field_Lt &&
			this->_field_LtEq == _other._field_LtEq &&
			this->_field_Shl == _other._field_Shl &&
			this->_field_Shr == _other._field_Shr &&
			this->_field_Add == _other._field_Add &&
			this->_field_Sub == _other._field_Sub &&
			this->_field_Div == _other._field_Div &&
			this->_field_Mul == _other._field_Mul &&
			this->_field_Mod == _other._field_Mod &&
			this->_field_BitAnd == _other._field_BitAnd &&
			this->_field_BitOr == _other._field_BitOr &&
			this->_field_BitXor == _other._field_BitXor &&
			this->_field_Neg == _other._field_Neg &&
			this->_field_Pos == _other._field_Pos &&
			this->_field_BitNot == _other._field_BitNot &&
			this->_field_AddAssign == _other._field_AddAssign &&
			this->_field_SubAssign == _other._field_SubAssign &&
			this->_field_DivAssign == _other._field_DivAssign &&
			this->_field_MulAssign == _other._field_MulAssign &&
			this->_field_ModAssign == _other._field_ModAssign &&
			this->_field_ShlAssign == _other._field_ShlAssign &&
			this->_field_ShrAssign == _other._field_ShrAssign &&
			this->_field_BitOrAssign == _other._field_BitOrAssign &&
			this->_field_BitAndAssign == _other._field_BitAndAssign &&
			this->_field_BitXorAssign == _other._field_BitXorAssign;
	}

	inline bool operator!=(_1d651b3bd_Operators _other) { return !this->operator==(_other); }


};
struct _1d651c2d1_Struct {
	jule::Ptr<_1d65b5c81_Sema> _field_sema;
	jule::Slice<jule::Ptr<_1d651c2d1_Struct>> _field_Depends;
	jule::Slice<jule::Ptr<_1d651c2d1_Struct>> _field_Uses;
	jule::Ptr<_1d64d5cd3_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1d65193dd_Field>> _field_Fields;
	jule::Slice<jule::Ptr<_1d653226e_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1d65d9018_Var>> _field_Statics;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_1d64ea7ed_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1d65085db_GenericDecl>> _field_Generics;
	jule::Slice<jule::Ptr<_1d654554b_Trait>> _field_Implements;
	jule::Slice<jule::Ptr<_1d652005e_StructIns>> _field_Instances;
	


};
struct _1d651e4ae_FieldIns {
	jule::Ptr<_1d65193dd_Field> _field_Decl;
	jule::Ptr<_1d6677a35_TypeKind> _field_Kind;
	jule::Ptr<_1d664721e_Data> _field_Default;
	

	inline bool operator==(_1d651e4ae_FieldIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1d651e4ae_FieldIns _other) { return !this->operator==(_other); }


};
struct _1d652400d_OperandExprModel {
	jule::Ptr<_1d6677a35_TypeKind> _field_Kind;
	jule::Any _field_Model = jule::Any(nullptr);
	

	inline bool operator==(_1d652400d_OperandExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Model == _other._field_Model;
	}

	inline bool operator!=(_1d652400d_OperandExprModel _other) { return !this->operator==(_other); }


};
struct _1d6524508_BinaryExprModel {
	jule::Ptr<_1d652400d_OperandExprModel> _field_Left;
	jule::Ptr<_1d652400d_OperandExprModel> _field_Right;
	jule::Ptr<_1d64d5cd3_Token> _field_Op;
	

	inline bool operator==(_1d6524508_BinaryExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1d6524508_BinaryExprModel _other) { return !this->operator==(_other); }


};
struct _1d65248d2_UnaryExprModel {
	jule::Ptr<_1d664721e_Data> _field_Expr;
	jule::Ptr<_1d64d5cd3_Token> _field_Op;
	

	inline bool operator==(_1d65248d2_UnaryExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1d65248d2_UnaryExprModel _other) { return !this->operator==(_other); }


};
struct _1d6524e10_StructArgExprModel {
	jule::Ptr<_1d64d5cd3_Token> _field_Token;
	jule::Ptr<_1d651e4ae_FieldIns> _field_Field;
	jule::Ptr<_1d664721e_Data> _field_Expr;
	

	inline bool operator==(_1d6524e10_StructArgExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1d6524e10_StructArgExprModel _other) { return !this->operator==(_other); }


};
struct _1d65252a6_StructLitExprModel {
	jule::Ptr<_1d652005e_StructIns> _field_Strct;
	jule::Slice<jule::Ptr<_1d6524e10_StructArgExprModel>> _field_Args;
	


};
struct _1d65255a3_AllocStructLitExprModel {
	jule::Ptr<_1d65252a6_StructLitExprModel> _field_Lit;
	

	inline bool operator==(_1d65255a3_AllocStructLitExprModel _other) {
		return 
			this->_field_Lit == _other._field_Lit;
	}

	inline bool operator!=(_1d65255a3_AllocStructLitExprModel _other) { return !this->operator==(_other); }


};
struct _1d6525b36_CastingExprModel {
	jule::Ptr<_1d64d5cd3_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1d6677a35_TypeKind> _field_Kind;
	jule::Ptr<_1d6677a35_TypeKind> _field_ExprKind;
	

	inline bool operator==(_1d6525b36_CastingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_ExprKind == _other._field_ExprKind;
	}

	inline bool operator!=(_1d6525b36_CastingExprModel _other) { return !this->operator==(_other); }


};
struct _1d65264d8_FnCallExprModel {
	jule::Ptr<_1d64d5cd3_Token> _field_Token;
	jule::Ptr<_1d6535173_FnIns> _field_Func;
	jule::Bool _field_IsCo = false;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Slice<jule::Any> _field_Args;
	jule::Ptr<_1d6574129_Scope> _field_Except;
	jule::Bool _field_Assigned = false;
	


};
struct _1d65268b2_SliceExprModel {
	jule::Ptr<_1d6677a35_TypeKind> _field_ElemKind;
	jule::Slice<jule::Any> _field_Elems;
	


};
struct _1d6526d68_IndexingExprModel {
	jule::Ptr<_1d64d5cd3_Token> _field_Token;
	jule::Ptr<_1d664721e_Data> _field_Expr;
	jule::Ptr<_1d664721e_Data> _field_Index;
	

	inline bool operator==(_1d6526d68_IndexingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_1d6526d68_IndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1d6527242_AnonFnExprModel {
	jule::Ptr<_1d6535173_FnIns> _field_Func;
	jule::Bool _field_Global = false;
	

	inline bool operator==(_1d6527242_AnonFnExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Global == _other._field_Global;
	}

	inline bool operator!=(_1d6527242_AnonFnExprModel _other) { return !this->operator==(_other); }


};
struct _1d652761b_KeyValPairExprModel {
	jule::Any _field_Key = jule::Any(nullptr);
	jule::Any _field_Val = jule::Any(nullptr);
	

	inline bool operator==(_1d652761b_KeyValPairExprModel _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1d652761b_KeyValPairExprModel _other) { return !this->operator==(_other); }


};
struct _1d6527ac2_MapExprModel {
	jule::Ptr<_1d6677a35_TypeKind> _field_KeyKind;
	jule::Ptr<_1d6677a35_TypeKind> _field_ValKind;
	jule::Slice<jule::Ptr<_1d652761b_KeyValPairExprModel>> _field_Entries;
	


};
struct _1d6528155_SlicingExprModel {
	jule::Ptr<_1d64d5cd3_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

	inline bool operator==(_1d6528155_SlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1d6528155_SlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1d65286d8_TraitSubIdentExprModel {
	jule::Ptr<_1d64d5cd3_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1d653226e_Fn> _field_Method;
	jule::Ptr<_1d654554b_Trait> _field_Trt;
	

	inline bool operator==(_1d65286d8_TraitSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Trt == _other._field_Trt;
	}

	inline bool operator!=(_1d65286d8_TraitSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1d6529079_StructSubIdentExprModel {
	jule::Ptr<_1d64d5cd3_Token> _field_Token;
	jule::Ptr<_1d664721e_Data> _field_Expr;
	jule::Ptr<_1d6535173_FnIns> _field_Method;
	jule::Ptr<_1d651e4ae_FieldIns> _field_Field;
	jule::Ptr<_1d652005e_StructIns> _field_Owner;
	

	inline bool operator==(_1d6529079_StructSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Field == _other._field_Field &&
			this->_field_Owner == _other._field_Owner;
	}

	inline bool operator!=(_1d6529079_StructSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1d6529530_StructStaticIdentExprModel {
	jule::Ptr<_1d652005e_StructIns> _field_Structure;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1d6535173_FnIns> _field_Method;
	

	inline bool operator==(_1d6529530_StructStaticIdentExprModel _other) {
		return 
			this->_field_Structure == _other._field_Structure &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method;
	}

	inline bool operator!=(_1d6529530_StructStaticIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1d6529909_ArrayExprModel {
	jule::Ptr<_1d6686e2e_Arr> _field_Kind;
	jule::Slice<jule::Any> _field_Elems;
	


};
struct _1d6529c06_TupleExprModel {
	jule::Slice<jule::Ptr<_1d664721e_Data>> _field_Datas;
	


};
struct _1d652a0d0_BuiltinOutCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

	inline bool operator==(_1d652a0d0_BuiltinOutCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_1d652a0d0_BuiltinOutCallExprModel _other) { return !this->operator==(_other); }


};
struct _1d652a4a9_BuiltinOutlnCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

	inline bool operator==(_1d652a4a9_BuiltinOutlnCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_1d652a4a9_BuiltinOutlnCallExprModel _other) { return !this->operator==(_other); }


};
struct _1d652a883_BuiltinNewCallExprModel {
	jule::Ptr<_1d6677a35_TypeKind> _field_Kind;
	jule::Any _field_Init = jule::Any(nullptr);
	

	inline bool operator==(_1d652a883_BuiltinNewCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Init == _other._field_Init;
	}

	inline bool operator!=(_1d652a883_BuiltinNewCallExprModel _other) { return !this->operator==(_other); }


};
struct _1d652ac5c_BuiltinPanicCallExprModel {
	jule::Ptr<_1d64d5cd3_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1d652ac5c_BuiltinPanicCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1d652ac5c_BuiltinPanicCallExprModel _other) { return !this->operator==(_other); }


};
struct _1d652b213_BuiltinAssertCallExprModel {
	jule::Ptr<_1d64d5cd3_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Log;
	

	inline bool operator==(_1d652b213_BuiltinAssertCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Log == _other._field_Log;
	}

	inline bool operator!=(_1d652b213_BuiltinAssertCallExprModel _other) { return !this->operator==(_other); }


};
struct _1d652b6b9_BuiltinMakeCallExprModel {
	jule::Ptr<_1d6677a35_TypeKind> _field_Kind;
	jule::Any _field_Len = jule::Any(nullptr);
	jule::Any _field_Cap = jule::Any(nullptr);
	

	inline bool operator==(_1d652b6b9_BuiltinMakeCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Len == _other._field_Len &&
			this->_field_Cap == _other._field_Cap;
	}

	inline bool operator!=(_1d652b6b9_BuiltinMakeCallExprModel _other) { return !this->operator==(_other); }


};
struct _1d652ba93_BuiltinAppendCallExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Elements = jule::Any(nullptr);
	

	inline bool operator==(_1d652ba93_BuiltinAppendCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elements == _other._field_Elements;
	}

	inline bool operator!=(_1d652ba93_BuiltinAppendCallExprModel _other) { return !this->operator==(_other); }


};
struct _1d652bd90_BuiltinLenCallExprModel {
	jule::Ptr<_1d664721e_Data> _field_Expr;
	

	inline bool operator==(_1d652bd90_BuiltinLenCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1d652bd90_BuiltinLenCallExprModel _other) { return !this->operator==(_other); }


};
struct _1d652c18c_BuiltinCapCallExprModel {
	jule::Ptr<_1d664721e_Data> _field_Expr;
	

	inline bool operator==(_1d652c18c_BuiltinCapCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1d652c18c_BuiltinCapCallExprModel _other) { return !this->operator==(_other); }


};
struct _1d652c566_BuiltinDeleteCallExprModel {
	jule::Ptr<_1d664721e_Data> _field_Dest;
	jule::Ptr<_1d664721e_Data> _field_Key;
	

	inline bool operator==(_1d652c566_BuiltinDeleteCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Key == _other._field_Key;
	}

	inline bool operator!=(_1d652c566_BuiltinDeleteCallExprModel _other) { return !this->operator==(_other); }


};
struct _1d652c940_BuiltinCopyCallExprModel {
	jule::Ptr<_1d664721e_Data> _field_Dest;
	jule::Ptr<_1d664721e_Data> _field_Src;
	

	inline bool operator==(_1d652c940_BuiltinCopyCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Src == _other._field_Src;
	}

	inline bool operator!=(_1d652c940_BuiltinCopyCallExprModel _other) { return !this->operator==(_other); }


};
struct _1d652cd19_BuiltinErrorCallExprModel {
	jule::Ptr<_1d6535173_FnIns> _field_Func;
	jule::Ptr<_1d664721e_Data> _field_Err;
	

	inline bool operator==(_1d652cd19_BuiltinErrorCallExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Err == _other._field_Err;
	}

	inline bool operator!=(_1d652cd19_BuiltinErrorCallExprModel _other) { return !this->operator==(_other); }


};
struct _1d65288c5_SizeofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1d65288c5_SizeofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1d65288c5_SizeofExprModel _other) { return !this->operator==(_other); }


};
struct _1d652d545_AlignofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1d652d545_AlignofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1d652d545_AlignofExprModel _other) { return !this->operator==(_other); }


};
struct _1d652d842_RuneExprModel {
	jule::I32 _field_Code = 0;
	

	inline bool operator==(_1d652d842_RuneExprModel _other) {
		return 
			this->_field_Code == _other._field_Code;
	}

	inline bool operator!=(_1d652d842_RuneExprModel _other) { return !this->operator==(_other); }


};
struct _1d652db3e_IntegratedToStrExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1d652db3e_IntegratedToStrExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1d652db3e_IntegratedToStrExprModel _other) { return !this->operator==(_other); }


};
struct _1d652e018_BackendEmitExprModel {
	jule::Str _field_Code;
	jule::Slice<jule::Any> _field_Exprs;
	


};
struct _1d652e315_FreeExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1d652e315_FreeExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1d652e315_FreeExprModel _other) { return !this->operator==(_other); }


};
struct _1d6530019_RetType {
	jule::Ptr<_1d667ec07_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _field_Idents;
	


};
struct _1d653079a_Param {
	jule::Ptr<_1d64d5cd3_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1d667ec07_TypeSymbol> _field_Kind;
	jule::Str _field_Ident;
	

	inline bool operator==(_1d653079a_Param _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1d653079a_Param _other) { return !this->operator==(_other); }


};
struct _1d653226e_Fn {
	jule::Ptr<_1d65b5c81_Sema> _field_sema;
	jule::Ptr<_1d64d5cd3_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1d64ea7ed_Directive>> _field_Directives;
	jule::Ptr<_1d650b402_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1d65085db_GenericDecl>> _field_Generics;
	jule::Ptr<_1d6530019_RetType> _field_Result;
	jule::Slice<jule::Ptr<_1d653079a_Param>> _field_Params;
	jule::Ptr<_1d651c2d1_Struct> _field_Owner;
	jule::Slice<jule::Ptr<_1d6535173_FnIns>> _field_Instances;
	


};
struct _1d65341c7_ParamIns {
	jule::Ptr<_1d653079a_Param> _field_Decl;
	jule::Ptr<_1d6677a35_TypeKind> _field_Kind;
	

	inline bool operator==(_1d65341c7_ParamIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1d65341c7_ParamIns _other) { return !this->operator==(_other); }


};
struct _1d6535173_FnIns {
	jule::Ptr<_1d652005e_StructIns> _field_Owner;
	jule::Ptr<_1d653226e_Fn> _field_Decl;
	jule::Slice<jule::Ptr<_1d667614e_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1d65341c7_ParamIns>> _field_Params;
	jule::Ptr<_1d6677a35_TypeKind> _field_Result;
	jule::Ptr<_1d6574129_Scope> _field_Scope;
	jule::Ptr<_1d6538341_ReferenceStack> _field_Refers;
	jule::Bool _field_Anon = false;
	jule::Fn<jule::Ptr<_1d664721e_Data>(jule::Ptr<_1d6648e13_Eval>*,jule::Ptr<_1d650443e_FnCallExpr>*,jule::Ptr<_1d664721e_Data>*)> _field_caller;
	jule::Bool _field_reloaded = false;
	


};
struct _1d6538341_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer;
	


};
struct _1d653985e_Pass {
	jule::Ptr<_1d64d5cd3_Token> _field_Token;
	jule::Str _field_Text;
	

	inline bool operator==(_1d653985e_Pass _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Text == _other._field_Text;
	}

	inline bool operator!=(_1d653985e_Pass _other) { return !this->operator==(_other); }


};
struct _1d653e424_symbolBuilder {
	jule::Ptr<_1d653e424_symbolBuilder> _field_owner;
	jule::Trait<_1d65929e9_Importer> _field_importer;
	jule::Slice<_1e0235a7e_Log> _field_errors;
	jule::Ptr<_1d64e9423_Ast> _field_ast;
	jule::Ptr<_1d6641d73_SymbolTable> _field_table;
	


};
struct _1d654554b_Trait {
	jule::Ptr<_1d64d5cd3_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Slice<jule::Ptr<_1d667ec07_TypeSymbol>> _field_Inherits;
	jule::Slice<jule::Ptr<_1d653226e_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1d651c2d1_Struct>> _field_Implemented;
	


};
struct _1d65471da_EnumItem {
	jule::Ptr<_1d64d5cd3_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1d6648363_Value> _field_Value;
	

	inline bool operator==(_1d65471da_EnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_1d65471da_EnumItem _other) { return !this->operator==(_other); }


};
struct _1d6547c57_Enum {
	jule::Ptr<_1d64d5cd3_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_1d667ec07_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_1d65471da_EnumItem>> _field_Items;
	


};
struct _1d6548d8a_TypeEnumItem {
	jule::Ptr<_1d64d5cd3_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1d667ec07_TypeSymbol> _field_Kind;
	

	inline bool operator==(_1d6548d8a_TypeEnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1d6548d8a_TypeEnumItem _other) { return !this->operator==(_other); }


};
struct _1d6549462_TypeEnum {
	jule::Ptr<_1d64d5cd3_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1d6548d8a_TypeEnumItem>> _field_Items;
	


};
struct _1d654c5b9_comptimeRange {
	jule::Trait<_1d654c399_comptimeRangeKind> _field_kind;
	

	inline bool operator==(_1d654c5b9_comptimeRange _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1d654c5b9_comptimeRange _other) { return !this->operator==(_other); }


};
struct _1d654d08c_comptimeStructField {
	jule::Ptr<_1d651e4ae_FieldIns> _field_field;
	

	inline bool operator==(_1d654d08c_comptimeStructField _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1d654d08c_comptimeStructField _other) { return !this->operator==(_other); }


};
struct _1d654ec4d_comptimeStructFields {
	jule::Slice<jule::Ptr<_1d651e4ae_FieldIns>> _field_fields;
	


};
struct _1d6551348_comptimeStatic {
	jule::Ptr<_1d65d9018_Var> _field_field;
	

	inline bool operator==(_1d6551348_comptimeStatic _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1d6551348_comptimeStatic _other) { return !this->operator==(_other); }


};
struct _1d6553009_comptimeStatics {
	jule::Slice<jule::Ptr<_1d65d9018_Var>> _field_fields;
	


};
struct _1d6554604_comptimeEnumField {
	jule::Ptr<_1d65471da_EnumItem> _field_field;
	

	inline bool operator==(_1d6554604_comptimeEnumField _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1d6554604_comptimeEnumField _other) { return !this->operator==(_other); }


};
struct _1d655599b_comptimeEnumFields {
	jule::Slice<jule::Ptr<_1d65471da_EnumItem>> _field_fields;
	


};
struct _1d6557096_comptimeParam {
	jule::Ptr<_1d65341c7_ParamIns> _field_param;
	

	inline bool operator==(_1d6557096_comptimeParam _other) {
		return 
			this->_field_param == _other._field_param;
	}

	inline bool operator!=(_1d6557096_comptimeParam _other) { return !this->operator==(_other); }


};
struct _1d655930c_comptimeParams {
	jule::Slice<jule::Ptr<_1d65341c7_ParamIns>> _field_params;
	


};
struct _1d655a907_comptimeTypeInfos {
	jule::Slice<jule::Ptr<_1d655c002_comptimeTypeInfo>> _field_types;
	


};
struct _1d655c002_comptimeTypeInfo {
	jule::Ptr<_1d6677a35_TypeKind> _field_base;
	

	inline bool operator==(_1d655c002_comptimeTypeInfo _other) {
		return 
			this->_field_base == _other._field_base;
	}

	inline bool operator!=(_1d655c002_comptimeTypeInfo _other) { return !this->operator==(_other); }


};
struct _1d6563514_comptimeValue {
	jule::Ptr<_1d664721e_Data> _field_data;
	

	inline bool operator==(_1d6563514_comptimeValue _other) {
		return 
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1d6563514_comptimeValue _other) { return !this->operator==(_other); }


};
struct _1d6565d63_comptimeFiles {
	jule::Slice<jule::Ptr<_1d6641d73_SymbolTable>> _field_files;
	


};
struct _1d656745d_comptimeFile {
	jule::Ptr<_1d6641d73_SymbolTable> _field_file;
	

	inline bool operator==(_1d656745d_comptimeFile _other) {
		return 
			this->_field_file == _other._field_file;
	}

	inline bool operator!=(_1d656745d_comptimeFile _other) { return !this->operator==(_other); }


};
struct _1d656b86e_constraintChecker {
	jule::Ptr<_1d65b5c81_Sema> _field_s;
	jule::Slice<jule::Ptr<_1d65085db_GenericDecl>> _field_genericsD;
	jule::Slice<jule::Ptr<_1d667614e_InsGeneric>> _field_generics;
	jule::Slice<jule::Ptr<_1d6676c43_TypeAlias>> _field_genericsA;
	jule::Ptr<_1d6535173_FnIns> _field_fi;
	jule::Ptr<_1d652005e_StructIns> _field_si;
	jule::Ptr<_1d64d5cd3_Token> _field_et;
	jule::Bool _field_uniq = false;
	


};
struct _1d656dbc3_Impl {
	jule::Ptr<_1d64eb3d1_TypeDecl> _field_Base;
	jule::Ptr<_1d64eb3d1_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1d653226e_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1d65d9018_Var>> _field_Statics;
	


};
struct _1d6574129_Scope {
	jule::Ptr<_1d6574129_Scope> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<jule::Any> _field_Stmts;
	


};
struct _1d6574547_If {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1d6574129_Scope> _field_Scope;
	

	inline bool operator==(_1d6574547_If _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1d6574547_If _other) { return !this->operator==(_other); }


};
struct _1d6574844_Else {
	jule::Ptr<_1d6574129_Scope> _field_Scope;
	

	inline bool operator==(_1d6574844_Else _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1d6574844_Else _other) { return !this->operator==(_other); }


};
struct _1d6574c62_Conditional {
	jule::Slice<jule::Ptr<_1d6574547_If>> _field_Elifs;
	jule::Ptr<_1d6574844_Else> _field_Default;
	


};
struct _1d657505e_InfIter {
	jule::Ptr<_1d6574129_Scope> _field_Scope;
	

	inline bool operator==(_1d657505e_InfIter _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1d657505e_InfIter _other) { return !this->operator==(_other); }


};
struct _1d6575515_WhileIter {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_1d6574129_Scope> _field_Scope;
	

	inline bool operator==(_1d6575515_WhileIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1d6575515_WhileIter _other) { return !this->operator==(_other); }


};
struct _1d6575e61_RangeIter {
	jule::Ptr<_1d664721e_Data> _field_Expr;
	jule::Ptr<_1d6574129_Scope> _field_Scope;
	jule::Ptr<_1d65d9018_Var> _field_KeyA;
	jule::Ptr<_1d65d9018_Var> _field_KeyB;
	

	inline bool operator==(_1d6575e61_RangeIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_1d6575e61_RangeIter _other) { return !this->operator==(_other); }


};
struct _1d65762e6_ContSt {
	jule::Uintptr _field_It = 0;
	

	inline bool operator==(_1d65762e6_ContSt _other) {
		return 
			this->_field_It == _other._field_It;
	}

	inline bool operator!=(_1d65762e6_ContSt _other) { return !this->operator==(_other); }


};
struct _1d65766c0_BreakSt {
	jule::Uintptr _field_It = 0;
	jule::Uintptr _field_Mtch = 0;
	

	inline bool operator==(_1d65766c0_BreakSt _other) {
		return 
			this->_field_It == _other._field_It &&
			this->_field_Mtch == _other._field_Mtch;
	}

	inline bool operator!=(_1d65766c0_BreakSt _other) { return !this->operator==(_other); }


};
struct _1d65769bc_Label {
	jule::Str _field_Ident;
	

	inline bool operator==(_1d65769bc_Label _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1d65769bc_Label _other) { return !this->operator==(_other); }


};
struct _1d6576d96_GotoSt {
	jule::Str _field_Ident;
	jule::Ptr<_1d65769bc_Label> _field_Label;
	

	inline bool operator==(_1d6576d96_GotoSt _other) {
		return 
			this->_field_Ident == _other._field_Ident &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1d6576d96_GotoSt _other) { return !this->operator==(_other); }


};
struct _1d6577270_Postfix {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Op;
	

	inline bool operator==(_1d6577270_Postfix _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1d6577270_Postfix _other) { return !this->operator==(_other); }


};
struct _1d6577726_Assign {
	jule::Ptr<_1d652400d_OperandExprModel> _field_L;
	jule::Ptr<_1d652400d_OperandExprModel> _field_R;
	jule::Ptr<_1d64d5cd3_Token> _field_Op;
	

	inline bool operator==(_1d6577726_Assign _other) {
		return 
			this->_field_L == _other._field_L &&
			this->_field_R == _other._field_R &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1d6577726_Assign _other) { return !this->operator==(_other); }


};
struct _1d6577b00_MultiAssign {
	jule::Slice<jule::Ptr<_1d664721e_Data>> _field_L;
	jule::Any _field_R = jule::Any(nullptr);
	


};
struct _1d6578260_Match {
	jule::Ptr<_1d664721e_Data> _field_Expr;
	jule::Bool _field_TypeMatch = false;
	jule::Bool _field_Comptime = false;
	jule::Slice<jule::Ptr<_1d6578d98_Case>> _field_Cases;
	jule::Ptr<_1d6578d98_Case> _field_Default;
	


};
struct _1d6578d98_Case {
	jule::Ptr<_1d6578260_Match> _field_Owner;
	jule::Ptr<_1d6574129_Scope> _field_Scope;
	jule::Slice<jule::Ptr<_1d664721e_Data>> _field_Exprs;
	jule::Ptr<_1d6578d98_Case> _field_Next;
	


};
struct _1d6579492_FallSt {
	jule::Uintptr _field_DestCase = 0;
	

	inline bool operator==(_1d6579492_FallSt _other) {
		return 
			this->_field_DestCase == _other._field_DestCase;
	}

	inline bool operator!=(_1d6579492_FallSt _other) { return !this->operator==(_other); }


};
struct _1d6579827_RetSt {
	jule::Ptr<_1d6535173_FnIns> _field_Func;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1d6579827_RetSt _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1d6579827_RetSt _other) { return !this->operator==(_other); }


};
struct _1d6579e87_scopeLabel {
	jule::Ptr<_1d64d5cd3_Token> _field_token;
	jule::Ptr<_1d65769bc_Label> _field_label;
	jule::I64 _field_pos = 0;
	jule::Ptr<_1d657b42d_scopeChecker> _field_scope;
	jule::Bool _field_used = false;
	

	inline bool operator==(_1d6579e87_scopeLabel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label &&
			this->_field_pos == _other._field_pos &&
			this->_field_scope == _other._field_scope &&
			this->_field_used == _other._field_used;
	}

	inline bool operator!=(_1d6579e87_scopeLabel _other) { return !this->operator==(_other); }


};
struct _1d657a51a_scopeGoto {
	jule::Ptr<_1d6576d96_GotoSt> _field_st;
	jule::Ptr<_1d6508d8e_GotoSt> _field_gt;
	jule::Ptr<_1d657b42d_scopeChecker> _field_scope;
	jule::I64 _field_pos = 0;
	

	inline bool operator==(_1d657a51a_scopeGoto _other) {
		return 
			this->_field_st == _other._field_st &&
			this->_field_gt == _other._field_gt &&
			this->_field_scope == _other._field_scope &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_1d657a51a_scopeGoto _other) { return !this->operator==(_other); }


};
struct _1d657b42d_scopeChecker {
	jule::Ptr<_1d64d5cd3_Token> _field_calledFrom;
	jule::Ptr<_1d65b5c81_Sema> _field_s;
	jule::Ptr<_1d6535173_FnIns> _field_owner;
	jule::Ptr<_1d657b42d_scopeChecker> _field_parent;
	jule::I64 _field_childIndex = 0;
	jule::Ptr<_1d6641d73_SymbolTable> _field_table;
	jule::Ptr<_1d6574129_Scope> _field_scope;
	jule::Ptr<_1d650b402_ScopeTree> _field_tree;
	jule::Ptr<_1d6535173_FnIns> _field_result;
	jule::Uintptr _field_it = 0;
	jule::Uintptr _field_cse = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_1d6579e87_scopeLabel>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1d657a51a_scopeGoto>>> _field_gotos;
	jule::I64 _field_i = 0;
	

	inline bool operator==(_1d657b42d_scopeChecker _other) {
		return 
			this->_field_calledFrom == _other._field_calledFrom &&
			this->_field_s == _other._field_s &&
			this->_field_owner == _other._field_owner &&
			this->_field_parent == _other._field_parent &&
			this->_field_childIndex == _other._field_childIndex &&
			this->_field_table == _other._field_table &&
			this->_field_scope == _other._field_scope &&
			this->_field_tree == _other._field_tree &&
			this->_field_result == _other._field_result &&
			this->_field_it == _other._field_it &&
			this->_field_cse == _other._field_cse &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1d657b42d_scopeChecker _other) { return !this->operator==(_other); }


};
struct _1d658e463_directiveChecker {
	jule::Ptr<_1d65b5c81_Sema> _field_s;
	jule::Ptr<jule::Slice<jule::Ptr<_1d64ea7ed_Directive>>> _field_d;
	jule::Any _field_o;
	

	inline bool operator==(_1d658e463_directiveChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_d == _other._field_d &&
			this->_field_o == _other._field_o;
	}

	inline bool operator!=(_1d658e463_directiveChecker _other) { return !this->operator==(_other); }


};
struct _1d659590e_ImportInfo {
	jule::Ptr<_1d64d5cd3_Token> _field_Token;
	jule::Str _field_Path;
	jule::Str _field_LinkPath;
	jule::Str _field_Ident;
	jule::Str _field_Alias;
	jule::Bool _field_Duplicate = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Std = false;
	jule::Bool _field_ImportAll = false;
	jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _field_Selected;
	jule::Ptr<_1d6598835_Package> _field_Package;
	jule::I64 _field_ModId = 0;
	


};
struct _1d6598835_Package {
	jule::Slice<jule::Ptr<_1d6641d73_SymbolTable>> _field_Files;
	


};
struct _1d65b5159_commonSemaMeta {
	jule::Slice<jule::Ptr<_1d655c002_comptimeTypeInfo>> _field_comptimeTypeInfos;
	


};
struct _1d65b5c81_Sema {
	jule::Slice<_1e0235a7e_Log> _field_errors;
	jule::Slice<jule::Ptr<_1d6641d73_SymbolTable>> _field_files;
	jule::Ptr<_1d6641d73_SymbolTable> _field_file;
	jule::I64 _field_flags = 0LL;
	jule::Ptr<_1d65b5159_commonSemaMeta> _field_meta;
	


};
struct _1d65d594e_missingRetChecker {
	jule::Slice<jule::Uintptr> _field_breaked;
	jule::Bool _field_falled = false;
	


};
struct _1d65d7d5d_IterRelation {
	jule::Ptr<_1d65d9018_Var> _field_Range;
	

	inline bool operator==(_1d65d7d5d_IterRelation _other) {
		return 
			this->_field_Range == _other._field_Range;
	}

	inline bool operator!=(_1d65d7d5d_IterRelation _other) { return !this->operator==(_other); }


};
struct _1d65d9018_Var {
	jule::Ptr<_1d6574129_Scope> _field_Scope;
	jule::Ptr<_1d64d5cd3_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1d667ec07_TypeSymbol> _field_Kind;
	jule::Ptr<_1d6648363_Value> _field_Value;
	jule::Ptr<_1d6538341_ReferenceStack> _field_Refers;
	jule::Slice<jule::Ptr<_1d64ea7ed_Directive>> _field_Directives;
	jule::Ptr<_1d65d7d5d_IterRelation> _field_IterRelation;
	jule::I64 _field_RetOrder = -2LL;
	jule::Slice<jule::Ptr<_1d65d9018_Var>> _field_Depends;
	


};
struct _1d65d9d2c_FuncPattern {
	


};
struct _1d662e14b_typeCompatibilityChecker {
	jule::Ptr<_1d65b5c81_Sema> _field_s;
	jule::Ptr<_1d6677a35_TypeKind> _field_dest;
	jule::Ptr<_1d6677a35_TypeKind> _field_src;
	jule::Ptr<_1d64d5cd3_Token> _field_errorToken;
	

	inline bool operator==(_1d662e14b_typeCompatibilityChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_src == _other._field_src &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_1d662e14b_typeCompatibilityChecker _other) { return !this->operator==(_other); }


};
struct _1d6630dea_assignTypeChecker {
	jule::Ptr<_1d65b5c81_Sema> _field_s;
	jule::Ptr<_1d6677a35_TypeKind> _field_dest;
	jule::Ptr<_1d664721e_Data> _field_d;
	jule::Ptr<_1d64d5cd3_Token> _field_errorToken;
	

	inline bool operator==(_1d6630dea_assignTypeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_d == _other._field_d &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_1d6630dea_assignTypeChecker _other) { return !this->operator==(_other); }


};
struct _1d66327c0_dynamicTypeAnnotation {
	jule::Ptr<_1d6648e13_Eval> _field_e;
	jule::Ptr<_1d6535173_FnIns> _field_f;
	jule::Ptr<_1d65341c7_ParamIns> _field_p;
	jule::Ptr<_1d664721e_Data> _field_a;
	jule::Ptr<_1d64d5cd3_Token> _field_errorToken;
	jule::Ptr<_1d6677a35_TypeKind>* _field_k = nullptr;
	jule::Ptr<_1d64eb3d1_TypeDecl> _field_c;
	jule::Slice<jule::Ptr<_1d6677a35_TypeKind>> _field_ignored;
	


};
struct _1d663762c_fnCallArgChecker {
	jule::Ptr<_1d6648e13_Eval> _field_e;
	jule::Slice<jule::Ptr<_1d6500715_Expr>> _field_args;
	jule::Ptr<_1d64d5cd3_Token> _field_errorToken;
	jule::Ptr<_1d6535173_FnIns> _field_f;
	jule::Bool _field_dynamicAnnotation = false;
	jule::Slice<jule::Any> _field_argModels;
	jule::Slice<jule::Ptr<_1d6677a35_TypeKind>> _field_ignored;
	


};
struct _1d663a564_structLitChecker {
	jule::Ptr<_1d6648e13_Eval> _field_e;
	jule::Ptr<_1d64d5cd3_Token> _field_errorToken;
	jule::Ptr<_1d652005e_StructIns> _field_s;
	jule::Slice<jule::Ptr<_1d6524e10_StructArgExprModel>> _field_args;
	


};
struct _1d663c346_rangeChecker {
	jule::Ptr<_1d657b42d_scopeChecker> _field_sc;
	jule::Ptr<_1d65110c7_RangeKind> _field_rang;
	jule::Ptr<_1d6575e61_RangeIter> _field_Kind;
	jule::Ptr<_1d664721e_Data> _field_d;
	

	inline bool operator==(_1d663c346_rangeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_rang == _other._field_rang &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_d == _other._field_d;
	}

	inline bool operator!=(_1d663c346_rangeChecker _other) { return !this->operator==(_other); }


};
struct _1d663eaa7_retTypeChecker {
	jule::Ptr<_1d657b42d_scopeChecker> _field_sc;
	jule::Ptr<_1d6535173_FnIns> _field_f;
	jule::Slice<jule::Ptr<_1d6677a35_TypeKind>> _field_types;
	jule::Slice<jule::Ptr<_1d6500715_Expr>> _field_exprs;
	jule::Ptr<_1d64d5cd3_Token> _field_errorToken;
	jule::Any _field_model = jule::Any(nullptr);
	


};
struct _1d6641d73_SymbolTable {
	jule::Ptr<_1d64db59c_File> _field_File;
	jule::Slice<_1d653985e_Pass> _field_Passes;
	jule::Slice<jule::Ptr<_1d659590e_ImportInfo>> _field_Imports;
	jule::Slice<jule::Ptr<_1d65d9018_Var>> _field_Vars;
	jule::Slice<jule::Ptr<_1d6676c43_TypeAlias>> _field_TypeAliases;
	jule::Slice<jule::Ptr<_1d651c2d1_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1d653226e_Fn>> _field_Funcs;
	jule::Slice<jule::Ptr<_1d654554b_Trait>> _field_Traits;
	jule::Slice<jule::Ptr<_1d6547c57_Enum>> _field_Enums;
	jule::Slice<jule::Ptr<_1d6549462_TypeEnum>> _field_TypeEnums;
	jule::Slice<jule::Ptr<_1d656dbc3_Impl>> _field_Impls;
	


};
struct _1d664721e_Data {
	jule::Bool _field_untyped = false;
	jule::Ptr<_1d6677a35_TypeKind> _field_Kind;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Bool _field_Lvalue = false;
	jule::Bool _field_IsRune = false;
	jule::Any _field_Model = jule::Any(nullptr);
	jule::Bool _field_Decl = false;
	jule::Ptr<_1d4321208_Const> _field_Constant;
	

	inline bool operator==(_1d664721e_Data _other) {
		return 
			this->_field_untyped == _other._field_untyped &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Lvalue == _other._field_Lvalue &&
			this->_field_IsRune == _other._field_IsRune &&
			this->_field_Model == _other._field_Model &&
			this->_field_Decl == _other._field_Decl &&
			this->_field_Constant == _other._field_Constant;
	}

	inline bool operator!=(_1d664721e_Data _other) { return !this->operator==(_other); }


};
struct _1d6648363_Value {
	jule::Ptr<_1d6500715_Expr> _field_Expr;
	jule::Ptr<_1d664721e_Data> _field_Data;
	

	inline bool operator==(_1d6648363_Value _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1d6648363_Value _other) { return !this->operator==(_other); }


};
struct _1d6648e13_Eval {
	jule::Ptr<_1d65b5c81_Sema> _field_s;
	jule::Trait<_1d669756b_Lookup> _field_lookup;
	jule::Ptr<_1d6677a35_TypeKind> _field_prefix;
	jule::Bool _field_unsafety = false;
	jule::Bool _field_immutable = false;
	jule::Bool _field_ignored = false;
	jule::Bool _field_disBuiltin = false;
	jule::Ptr<_1d65d9018_Var> _field_owner;
	jule::Ptr<_1d651e4ae_FieldIns> _field_field;
	jule::Bool _field_arg = false;
	

	inline bool operator==(_1d6648e13_Eval _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_prefix == _other._field_prefix &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_immutable == _other._field_immutable &&
			this->_field_ignored == _other._field_ignored &&
			this->_field_disBuiltin == _other._field_disBuiltin &&
			this->_field_owner == _other._field_owner &&
			this->_field_field == _other._field_field &&
			this->_field_arg == _other._field_arg;
	}

	inline bool operator!=(_1d6648e13_Eval _other) { return !this->operator==(_other); }


};
struct _1d666763a_unaryEval {
	jule::Ptr<_1d6648e13_Eval> _field_e;
	jule::Ptr<_1d664721e_Data> _field_d;
	jule::Ptr<_1d65027c2_UnaryExpr> _field_u;
	

	inline bool operator==(_1d666763a_unaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_d == _other._field_d &&
			this->_field_u == _other._field_u;
	}

	inline bool operator!=(_1d666763a_unaryEval _other) { return !this->operator==(_other); }


};
struct _1d66695c6_binaryEval {
	jule::Ptr<_1d6648e13_Eval> _field_e;
	jule::Ptr<_1d664721e_Data> _field_l;
	jule::Ptr<_1d664721e_Data> _field_r;
	jule::Ptr<_1d64d5cd3_Token> _field_op;
	

	inline bool operator==(_1d66695c6_binaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1d66695c6_binaryEval _other) { return !this->operator==(_other); }


};
struct _1d667614e_InsGeneric {
	jule::Ptr<_1d6677a35_TypeKind> _field_Kind;
	jule::Slice<jule::Ptr<_1d6677a35_TypeKind>> _field_Constraint;
	


};
struct _1d6676c43_TypeAlias {
	jule::Ptr<_1d650b402_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Generic = false;
	jule::Ptr<_1d64d5cd3_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1d667ec07_TypeSymbol> _field_Kind;
	jule::Slice<jule::Any> _field_Refers;
	jule::Slice<jule::Ptr<_1d6676c43_TypeAlias>> _field_Generics;
	


};
struct _1d6677a35_TypeKind {
	jule::Str _field_BindIdent;
	jule::Bool _field_Generic = false;
	jule::Bool _field_Variadic = false;
	jule::Trait<_1d667757e_Kind> _field_Kind;
	

	inline bool operator==(_1d6677a35_TypeKind _other) {
		return 
			this->_field_BindIdent == _other._field_BindIdent &&
			this->_field_Generic == _other._field_Generic &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1d6677a35_TypeKind _other) { return !this->operator==(_other); }


};
struct _1d667ec07_TypeSymbol {
	jule::Ptr<_1d64eb3d1_TypeDecl> _field_Decl;
	jule::Ptr<_1d6677a35_TypeKind> _field_Kind;
	

	inline bool operator==(_1d667ec07_TypeSymbol _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1d667ec07_TypeSymbol _other) { return !this->operator==(_other); }


};
struct _1d668060e_Prim {
	jule::Str _field_Kind;
	

	inline bool operator==(_1d668060e_Prim _other) {
		return 
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1d668060e_Prim _other) { return !this->operator==(_other); }


};
struct _1d668413a_Sptr {
	jule::Ptr<_1d6677a35_TypeKind> _field_Elem;
	

	inline bool operator==(_1d668413a_Sptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1d668413a_Sptr _other) { return !this->operator==(_other); }


};
struct _1d6684b0d_Slc {
	jule::Ptr<_1d6677a35_TypeKind> _field_Elem;
	

	inline bool operator==(_1d6684b0d_Slc _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1d6684b0d_Slc _other) { return !this->operator==(_other); }


};
struct _1d6685702_Tuple {
	jule::Slice<jule::Ptr<_1d6677a35_TypeKind>> _field_Types;
	


};
struct _1d66862a2_Map {
	jule::Ptr<_1d6677a35_TypeKind> _field_Key;
	jule::Ptr<_1d6677a35_TypeKind> _field_Val;
	

	inline bool operator==(_1d66862a2_Map _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1d66862a2_Map _other) { return !this->operator==(_other); }


};
struct _1d6686e2e_Arr {
	jule::Bool _field_Auto = false;
	jule::I64 _field_N = 0;
	jule::Ptr<_1d6677a35_TypeKind> _field_Elem;
	

	inline bool operator==(_1d6686e2e_Arr _other) {
		return 
			this->_field_Auto == _other._field_Auto &&
			this->_field_N == _other._field_N &&
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1d6686e2e_Arr _other) { return !this->operator==(_other); }


};
struct _1d6687902_Ptr {
	jule::Ptr<_1d6677a35_TypeKind> _field_Elem;
	

	inline bool operator==(_1d6687902_Ptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1d6687902_Ptr _other) { return !this->operator==(_other); }


};
struct _1d6688903_referencer {
	jule::Str _field_ident;
	jule::Any _field_owner;
	jule::Slice<jule::Any>* _field_refs = nullptr;
	

	inline bool operator==(_1d6688903_referencer _other) {
		return 
			this->_field_ident == _other._field_ident &&
			this->_field_owner == _other._field_owner &&
			this->_field_refs == _other._field_refs;
	}

	inline bool operator!=(_1d6688903_referencer _other) { return !this->operator==(_other); }


};
struct _1d66898e3_typeChecker {
	jule::Ptr<_1d65b5c81_Sema> _field_s;
	jule::Trait<_1d669756b_Lookup> _field_rootLookup;
	jule::Trait<_1d669756b_Lookup> _field_lookup;
	jule::Ptr<_1d6688903_referencer> _field_referencer;
	jule::Ptr<_1d6538341_ReferenceStack> _field_refers;
	jule::Ptr<_1d64d5cd3_Token> _field_errorToken;
	jule::Slice<jule::Ptr<_1d65085db_GenericDecl>> _field_ignoreGenerics;
	jule::Slice<jule::Ptr<_1d6677a35_TypeKind>>* _field_ignoredGenerics = nullptr;
	jule::Slice<jule::Ptr<_1d6676c43_TypeAlias>> _field_useGenerics;
	jule::Bool _field_cycleRisk = true;
	jule::Bool _field_disBuiltin = false;
	jule::Bool _field_selection = false;
	jule::Ptr<_1d6676c43_TypeAlias> _field_ownerAlias;
	jule::Slice<jule::Ptr<_1d6676c43_TypeAlias>> _field_bannedGenerics;
	jule::Bool _field_inscatch = false;
	


};
struct _1d6692577_identTypeLookup {
	

	inline bool operator==(_1d6692577_identTypeLookup _other) { return true; }

	inline bool operator!=(_1d6692577_identTypeLookup _other) { return !this->operator==(_other); }


};
struct _1d70d5b8a_FileInfo {
	jule::Ptr<_1d64e9423_Ast> _field_Ast;
	jule::Slice<_1e0235a7e_Log> _field_Errors;
	


};
struct _1d712e123_stmt {
	jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _field_tokens;
	jule::Bool _field_terminated = false;
	


};
struct _1d712e9b4_scopeParser {
	jule::Ptr<_1d714cc79_parser> _field_p;
	jule::Ptr<_1d650b402_ScopeTree> _field_s;
	jule::Slice<jule::Ptr<_1d712e123_stmt>> _field_stmts;
	jule::I64 _field_pos = 0;
	


};
struct _1d713c3d9_exprBuilder {
	jule::Ptr<_1d714cc79_parser> _field_p;
	

	inline bool operator==(_1d713c3d9_exprBuilder _other) {
		return 
			this->_field_p == _other._field_p;
	}

	inline bool operator!=(_1d713c3d9_exprBuilder _other) { return !this->operator==(_other); }


};
struct _1d714987a_assignInfo {
	jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _field_l;
	jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _field_r;
	jule::Ptr<_1d64d5cd3_Token> _field_setter;
	jule::Bool _field_ok = false;
	


};
struct _1d714cc79_parser {
	jule::Ptr<_1d64e9423_Ast> _field_ast;
	jule::Slice<jule::Ptr<_1d64ea7ed_Directive>> _field_directives;
	jule::Slice<_1e0235a7e_Log> _field_errors;
	jule::Ptr<_1d713c3d9_exprBuilder> _field_ep;
	


};
struct _1d715ee56_typeBuilder {
	jule::Ptr<_1d714cc79_parser> _field_p;
	jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _field_tokens;
	jule::I64* _field_i = nullptr;
	jule::Bool _field_err = false;
	


};
struct _1d6879198_CompileInfo {
	jule::Bool _field_Prod = false;
	jule::Bool _field_Test = false;
	jule::Str _field_Compiler = jule::Str::lit("clang", 5);
	jule::Str _field_CppStd = jule::Str::lit("cpp14", 5);
	

	inline bool operator==(_1d6879198_CompileInfo _other) {
		return 
			this->_field_Prod == _other._field_Prod &&
			this->_field_Test == _other._field_Test &&
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CppStd == _other._field_CppStd;
	}

	inline bool operator!=(_1d6879198_CompileInfo _other) { return !this->operator==(_other); }


};
struct _1d687a672_directiveEval {
	jule::Slice<_1e0235a7e_Log> _field_logs;
	jule::Ptr<_1d64ea7ed_Directive> _field_d;
	jule::Slice<jule::Str> _field_vars;
	


};
struct _1d7163e49_JuleImporter {
	jule::Slice<jule::Str> _field_mods;
	jule::Str _field_mod;
	jule::Slice<jule::Ptr<_1d659590e_ImportInfo>> _field_pkgs;
	jule::Slice<jule::Str> _field_vars;
	


};
struct _1d7168e3d_OrderedDefines {
	jule::Slice<jule::Ptr<_1d651c2d1_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1d65d9018_Var>> _field_Globals;
	


};
struct _1d71691a2_defineOrderer {
	

	inline bool operator==(_1d71691a2_defineOrderer _other) { return true; }

	inline bool operator!=(_1d71691a2_defineOrderer _other) { return !this->operator==(_other); }


};
struct _1d729282a_liveTable {
	jule::Slice<jule::Ptr<_1d65d9018_Var>> _field_vars;
	jule::Slice<jule::Ptr<_1d6535173_FnIns>> _field_fns;
	jule::Slice<jule::Ptr<_1d652005e_StructIns>> _field_structs;
	jule::Slice<jule::Ptr<_1d654554b_Trait>> _field_traits;
	


};
struct _1d72c7024_scopeDeadCode {
	jule::Ptr<_1d72c7024_scopeDeadCode> _field_parent;
	jule::Ptr<_1d6574129_Scope> _field_s;
	jule::Slice<jule::Any>* _field_stmts = nullptr;
	jule::I64 _field_i = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_1d65769bc_Label>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1d6576d96_GotoSt>>> _field_gotos;
	jule::Bool _field_except = false;
	

	inline bool operator==(_1d72c7024_scopeDeadCode _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_i == _other._field_i &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_except == _other._field_except;
	}

	inline bool operator!=(_1d72c7024_scopeDeadCode _other) { return !this->operator==(_other); }


};
struct _1d72cb27b_exprDeadCode {
	jule::Ptr<_1d72c7024_scopeDeadCode> _field_s;
	

	inline bool operator==(_1d72cb27b_exprDeadCode _other) {
		return 
			this->_field_s == _other._field_s;
	}

	inline bool operator!=(_1d72cb27b_exprDeadCode _other) { return !this->operator==(_other); }


};
struct _1d6771403_SwapExprModel {
	jule::Ptr<_1d664721e_Data> _field_Left;
	jule::Ptr<_1d664721e_Data> _field_Right;
	

	inline bool operator==(_1d6771403_SwapExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1d6771403_SwapExprModel _other) { return !this->operator==(_other); }


};
struct _1d6771821_EmptyCompareExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Neg = false;
	

	inline bool operator==(_1d6771821_EmptyCompareExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Neg == _other._field_Neg;
	}

	inline bool operator!=(_1d6771821_EmptyCompareExprModel _other) { return !this->operator==(_other); }


};
struct _1d6771b1d_RefExprModel {
	jule::Ptr<_1d65d9018_Var> _field_Var;
	

	inline bool operator==(_1d6771b1d_RefExprModel _other) {
		return 
			this->_field_Var == _other._field_Var;
	}

	inline bool operator!=(_1d6771b1d_RefExprModel _other) { return !this->operator==(_other); }


};
struct _1d677214b_StrCompExprModel {
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Ptr<_1d4321208_Const> _field_Right;
	jule::Bool _field_NotEq = false;
	

	inline bool operator==(_1d677214b_StrCompExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_NotEq == _other._field_NotEq;
	}

	inline bool operator!=(_1d677214b_StrCompExprModel _other) { return !this->operator==(_other); }


};
struct _1d67726ce_MutSlicingExprModel {
	jule::Ptr<_1d64d5cd3_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

	inline bool operator==(_1d67726ce_MutSlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1d67726ce_MutSlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1d67729cb_UnsafeBinaryExprModel {
	jule::Ptr<_1d6524508_BinaryExprModel> _field_Node;
	

	inline bool operator==(_1d67729cb_UnsafeBinaryExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_1d67729cb_UnsafeBinaryExprModel _other) { return !this->operator==(_other); }


};
struct _1d6772cc8_UnsafeIndexingExprModel {
	jule::Ptr<_1d6526d68_IndexingExprModel> _field_Node;
	

	inline bool operator==(_1d6772cc8_UnsafeIndexingExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_1d6772cc8_UnsafeIndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1d6773207_PushToSliceExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Ptr<_1d65268b2_SliceExprModel> _field_Elems;
	

	inline bool operator==(_1d6773207_PushToSliceExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elems == _other._field_Elems;
	}

	inline bool operator!=(_1d6773207_PushToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _1d67735d1_AppendToSliceExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Slice = jule::Any(nullptr);
	

	inline bool operator==(_1d67735d1_AppendToSliceExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Slice == _other._field_Slice;
	}

	inline bool operator!=(_1d67735d1_AppendToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _1d677478b_scopeOptimizer {
	jule::I64 _field_i = 0;
	jule::Ptr<_1d6574129_Scope> _field_scope;
	

	inline bool operator==(_1d677478b_scopeOptimizer _other) {
		return 
			this->_field_i == _other._field_i &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1d677478b_scopeOptimizer _other) { return !this->operator==(_other); }


};
struct _1d677a929_exprOptimizer {
	jule::Ptr<jule::Any> _field_model;
	

	inline bool operator==(_1d677a929_exprOptimizer _other) {
		return 
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_1d677a929_exprOptimizer _other) { return !this->operator==(_other); }


};
struct _1d72d32e9_Optimizer {
	jule::Ptr<_1d7166787_IR> _field_ir;
	

	inline bool operator==(_1d72d32e9_Optimizer _other) {
		return 
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_1d72d32e9_Optimizer _other) { return !this->operator==(_other); }


};
struct _1d730ade3_AnsiEscape {
	

	inline bool operator==(_1d730ade3_AnsiEscape _other) { return true; }

	inline bool operator!=(_1d730ade3_AnsiEscape _other) { return !this->operator==(_other); }


};
struct _1d730c510_Logger {
	

	inline bool operator==(_1d730c510_Logger _other) { return true; }

	inline bool operator!=(_1d730c510_Logger _other) { return !this->operator==(_other); }


};
struct _1d7c42bd1_AbsTime {
	jule::U64 _field_Day = 0;
	jule::U64 _field_WeekDay = 0;
	jule::U64 _field_YearDay = 0;
	jule::U64 _field_Month = 0;
	jule::U64 _field_Year = 0;
	jule::U64 _field_Second = 0;
	jule::U64 _field_Minute = 0;
	jule::U64 _field_Hour = 0;
	

	inline bool operator==(_1d7c42bd1_AbsTime _other) {
		return 
			this->_field_Day == _other._field_Day &&
			this->_field_WeekDay == _other._field_WeekDay &&
			this->_field_YearDay == _other._field_YearDay &&
			this->_field_Month == _other._field_Month &&
			this->_field_Year == _other._field_Year &&
			this->_field_Second == _other._field_Second &&
			this->_field_Minute == _other._field_Minute &&
			this->_field_Hour == _other._field_Hour;
	}

	inline bool operator!=(_1d7c42bd1_AbsTime _other) { return !this->operator==(_other); }


};
struct _1d7c433a7_Time {
	jule::U64 _field_sec = 0;
	

	inline bool operator==(_1d7c433a7_Time _other) {
		return 
			this->_field_sec == _other._field_sec;
	}

	inline bool operator!=(_1d7c433a7_Time _other) { return !this->operator==(_other); }


};
struct _1d7b69355_scopeCoder {
	jule::Ptr<_1d7c4c856_ObjectCoder> _field_oc;
	

	inline bool operator==(_1d7b69355_scopeCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1d7b69355_scopeCoder _other) { return !this->operator==(_other); }


};
struct _1d7b734d5_exprCoder {
	jule::Ptr<_1d7c4c856_ObjectCoder> _field_oc;
	

	inline bool operator==(_1d7b734d5_exprCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1d7b734d5_exprCoder _other) { return !this->operator==(_other); }


};
struct _1d7b83cba_TestCoder {
	jule::Ptr<_1d652005e_StructIns> _field_t;
	jule::Ptr<_1d653226e_Fn> _field_tmReset;
	jule::Ptr<_1d653226e_Fn> _field_tmFailed;
	jule::Ptr<_1d653226e_Fn> _field_tmSkipped;
	jule::Ptr<_1d7c4c856_ObjectCoder> _field_oc;
	

	inline bool operator==(_1d7b83cba_TestCoder _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_tmReset == _other._field_tmReset &&
			this->_field_tmFailed == _other._field_tmFailed &&
			this->_field_tmSkipped == _other._field_tmSkipped &&
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1d7b83cba_TestCoder _other) { return !this->operator==(_other); }


};
struct _1d7b86a8c_identCoder {
	

	inline bool operator==(_1d7b86a8c_identCoder _other) { return true; }

	inline bool operator!=(_1d7b86a8c_identCoder _other) { return !this->operator==(_other); }


};
struct _1d7c4ad3d_SerializationInfo {
	jule::Str _field_Compiler;
	jule::Str _field_CompilerCommand;
	

	inline bool operator==(_1d7c4ad3d_SerializationInfo _other) {
		return 
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CompilerCommand == _other._field_CompilerCommand;
	}

	inline bool operator!=(_1d7c4ad3d_SerializationInfo _other) { return !this->operator==(_other); }


};
struct _1d7c4b415_traitHash {
	jule::Ptr<_1d654554b_Trait> _field_t;
	jule::Str _field_ti;
	jule::Ptr<_1d652005e_StructIns> _field_s;
	jule::I64 _field_i = 0;
	

	inline bool operator==(_1d7c4b415_traitHash _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_ti == _other._field_ti &&
			this->_field_s == _other._field_s &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1d7c4b415_traitHash _other) { return !this->operator==(_other); }


};
struct _1d7c4b7de_traitCast {
	jule::Ptr<_1d654554b_Trait> _field_t1;
	jule::Ptr<_1d654554b_Trait> _field_t2;
	

	inline bool operator==(_1d7c4b7de_traitCast _other) {
		return 
			this->_field_t1 == _other._field_t1 &&
			this->_field_t2 == _other._field_t2;
	}

	inline bool operator!=(_1d7c4b7de_traitCast _other) { return !this->operator==(_other); }


};
struct _1d7c5bea3_customType {
	jule::Str _field_kind;
	

	inline bool operator==(_1d7c5bea3_customType _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1d7c5bea3_customType _other) { return !this->operator==(_other); }


};
struct _1d7c5cab9_typeCoder {
	jule::Ptr<_1d7c4c856_ObjectCoder> _field_oc;
	jule::Ptr<_1d7c65e8a_resultCoder> _field_rc;
	

	inline bool operator==(_1d7c5cab9_typeCoder _other) {
		return 
			this->_field_oc == _other._field_oc &&
			this->_field_rc == _other._field_rc;
	}

	inline bool operator!=(_1d7c5cab9_typeCoder _other) { return !this->operator==(_other); }


};
struct _1d7c65e8a_resultCoder {
	jule::Ptr<_1d7c5cab9_typeCoder> _field_tc;
	

	inline bool operator==(_1d7c65e8a_resultCoder _other) {
		return 
			this->_field_tc == _other._field_tc;
	}

	inline bool operator!=(_1d7c65e8a_resultCoder _other) { return !this->operator==(_other); }


};
struct _1db2bb663_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::I64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::I64> _field_data;
	

	inline bool operator==(_1db2bb663_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1db2bb663_Flag _other) { return !this->operator==(_other); }


};struct _1db2c0007_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::U64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::U64> _field_data;
	

	inline bool operator==(_1db2c0007_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1db2c0007_Flag _other) { return !this->operator==(_other); }


};struct _1db2c3703_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::F64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::F64> _field_data;
	

	inline bool operator==(_1db2c3703_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1db2c3703_Flag _other) { return !this->operator==(_other); }


};struct _1db2c6e43_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Bool _field_default = false;
	jule::Str _field_what;
	jule::Ptr<jule::Bool> _field_data;
	

	inline bool operator==(_1db2c6e43_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1db2c6e43_Flag _other) { return !this->operator==(_other); }


};struct _1db2ca63e_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Str _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::Str> _field_data;
	

	inline bool operator==(_1db2ca63e_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1db2ca63e_Flag _other) { return !this->operator==(_other); }


};
struct _1d7cd19d9_FlagSet {
	jule::Slice<jule::Trait<_1d7ccee38_CommonFlag>> _field_flags;
	


};
struct _1d7cd446a_argParser {
	_1d7cd19d9_FlagSet _field_set;
	jule::Slice<jule::Str> _field_args;
	jule::Slice<jule::Str> _field_content;
	jule::I64 _field_i = 0;
	


};
struct _1d7c4c856_ObjectCoder {
	_1e01838bc_StrBuilder _field_Buf;
	_1e01838bc_StrBuilder _field_resultDecls;
	_1e01838bc_StrBuilder _field_anyObj;
	jule::Ptr<_1d7166787_IR> _field_ir;
	_1d7c4ad3d_SerializationInfo _field_info;
	jule::Slice<jule::Ptr<_1d7c4b415_traitHash>> _field_tmap;
	jule::Slice<jule::U8> _field_indentBuffer;
	jule::Map<jule::Str,jule::Bool> _field_resultMap;
	jule::Slice<jule::Ptr<_1d6677a35_TypeKind>> _field_anyTypeMap;
	jule::Slice<_1d7c4b7de_traitCast> _field_traitCastMap;
	jule::Ptr<_1d7b734d5_exprCoder> _field_ec;
	jule::Ptr<_1d7b69355_scopeCoder> _field_sc;
	jule::Ptr<_1d7c5cab9_typeCoder> _field_tc;
	jule::I64 _field_headPos = 0;
	jule::I64 _field_declPos = 0;
	


};
struct _1d7292c15_ObjectDeadCode {
	_1d729282a_liveTable _field_live;
	jule::Ptr<_1d7166787_IR> _field_ir;
	


};
struct _1d7166787_IR {
	jule::Str _field_Root;
	jule::Slice<jule::Str> _field_Passes;
	jule::Ptr<_1d6598835_Package> _field_Main;
	jule::Slice<jule::Ptr<_1d659590e_ImportInfo>> _field_Used;
	_1d7168e3d_OrderedDefines _field_Ordered;
	


};
struct _1d652005e_StructIns {
	jule::Bool _field_Checked = false;
	jule::Ptr<_1d651c2d1_Struct> _field_Decl;
	jule::Slice<jule::Ptr<_1d667614e_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1d651e4ae_FieldIns>> _field_Fields;
	jule::Slice<jule::Ptr<_1d65d9018_Var>> _field_Statics;
	jule::Slice<jule::Ptr<_1d653226e_Fn>> _field_Methods;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Comparable = false;
	jule::Ptr<_1d6538341_ReferenceStack> _field_Refers;
	_1d651b3bd_Operators _field_Operators;
	


};
struct _1e02e7aa8_Cmd {
	_1e034b821_cmdAttrs _field_attrs;
	jule::Str _field_path;
	jule::Slice<jule::Str> _field_Args;
	jule::Slice<jule::Str> _field_Env;
	


};
struct __jule_tuple_u64__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1d664721e_Data__jule_tuple_x_1d664721e_Data {
	jule::Ptr<_1d664721e_Data> __jule_result_arg0;
	jule::Ptr<_1d664721e_Data> __jule_result_arg1;
};
struct __jule_tuple_x_1d664721e_Data__jule_tuple_bool {
	jule::Ptr<_1d664721e_Data> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1d6500715_Expr__jule_tuple_bool {
	jule::Slice<jule::Ptr<_1d6500715_Expr>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1d65133a4_Case__jule_tuple_bool {
	jule::Ptr<_1d65133a4_Case> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1d65133a4_Case__jule_tuple_x_1d651220a_Else {
	jule::Slice<jule::Ptr<_1d65133a4_Case>> __jule_result_arg0;
	jule::Ptr<_1d651220a_Else> __jule_result_arg1;
};
struct __jule_tuple__1d650aa3e_StmtData__jule_tuple_bool {
	jule::Any __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1d6509d7e_AssignSt__jule_tuple_bool {
	jule::Ptr<_1d6509d7e_AssignSt> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1d64eb3d1_TypeDecl__jule_tuple_bool {
	jule::Ptr<_1d64eb3d1_TypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1d64ee2c4_RetTypeDecl__jule_tuple_bool {
	jule::Ptr<_1d64ee2c4_RetTypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1d64e9423_Ast__jule_tuple_s_1e0235a7e_Log {
	jule::Slice<jule::Ptr<_1d64e9423_Ast>> __jule_result_arg0;
	jule::Slice<_1e0235a7e_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_s_1e0235a7e_Log {
	jule::Bool __jule_result_arg0;
	jule::Slice<_1e0235a7e_Log> __jule_result_arg1;
};
struct __jule_tuple_i64__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1d7166787_IR__jule_tuple_s_1e0235a7e_Log {
	jule::Ptr<_1d7166787_IR> __jule_result_arg0;
	jule::Slice<_1e0235a7e_Log> __jule_result_arg1;
};
struct __jule_tuple_i32__jule_tuple_int {
	jule::I32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_bool {
	jule::Str __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_int__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_u64 {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_f64 {
	jule::F64 __jule_result_arg0;
	jule::F64 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple__1c69823b0_ConvError {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_bool {
	jule::F32 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
	jule::Bool __jule_result_arg3;
	jule::Bool __jule_result_arg4;
	jule::I64 __jule_result_arg5;
	jule::Bool __jule_result_arg6;
};
struct __jule_tuple_f64__jule_tuple__1c69823b0_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_int__jule_tuple__1c69823b0_ConvError {
	jule::F32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::I64 __jule_result_arg2;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple__1c69823b0_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::I64 __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
	jule::U64 __jule_result_arg2;
	jule::I64 __jule_result_arg3;
};
struct __jule_tuple_u32__jule_tuple_int__jule_tuple_bool {
	jule::U32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u32__jule_tuple_u32 {
	jule::U32 __jule_result_arg0;
	jule::U32 __jule_result_arg1;
};
struct __jule_tuple_su8__jule_tuple_str {
	jule::Slice<jule::U8> __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
struct __jule_tuple_u8__jule_tuple_bool {
	jule::U8 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1d6641d73_SymbolTable__jule_tuple_s_1e0235a7e_Log {
	jule::Ptr<_1d6641d73_SymbolTable> __jule_result_arg0;
	jule::Slice<_1e0235a7e_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1d6598835_Package__jule_tuple_s_1e0235a7e_Log {
	jule::Ptr<_1d6598835_Package> __jule_result_arg0;
	jule::Slice<_1e0235a7e_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1d64e9423_Ast__jule_tuple_s_1e0235a7e_Log {
	jule::Ptr<_1d64e9423_Ast> __jule_result_arg0;
	jule::Slice<_1e0235a7e_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_bool {
	jule::Bool __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1d64d5cd3_Token__jule_tuple_bool {
	jule::Slice<jule::Ptr<_1d64d5cd3_Token>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1d64d5cd3_Token__jule_tuple_sx_1d64d5cd3_Token {
	jule::Slice<jule::Ptr<_1d64d5cd3_Token>> __jule_result_arg0;
	jule::Slice<jule::Ptr<_1d64d5cd3_Token>> __jule_result_arg1;
};
struct __jule_tuple_sx_1d64d5cd3_Token__jule_tuple_int {
	jule::Slice<jule::Ptr<_1d64d5cd3_Token>> __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_ssx_1d64d5cd3_Token__jule_tuple_s_1e0235a7e_Log {
	jule::Slice<jule::Slice<jule::Ptr<_1d64d5cd3_Token>>> __jule_result_arg0;
	jule::Slice<_1e0235a7e_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_u64 {
	jule::Bool __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_str {
	jule::Str __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
inline _1e01838bc_StrBuilder static__1e0183b64_New(jule::I64);
inline void _1e018c442_Write(_1e01838bc_StrBuilder*, jule::Slice<jule::U8>);
inline void _1e018c6ea_WriteStr(_1e01838bc_StrBuilder*, jule::Str);
inline void _1e018c9a3_WriteByte(_1e01838bc_StrBuilder*, jule::U8);
inline jule::Str _1e018cee2_Str(_1e01838bc_StrBuilder*);
inline void _1e018d1e0_Clear(_1e01838bc_StrBuilder*);
inline jule::I64 _1e018d476_Len(_1e01838bc_StrBuilder*);
inline jule::Slice<jule::U8> _1e018d993_Buf(_1e01838bc_StrBuilder*);
inline void _1e018dc4b_SetBuf(_1e01838bc_StrBuilder*, jule::Slice<jule::U8>);
inline jule::U8 _1e018ea0a_index(_1e018e576_lazyBuff*, jule::I64);
inline void _1e018ecb3_append(_1e018e576_lazyBuff*, jule::U8);
inline jule::Str _1e0190049_string(_1e018e576_lazyBuff*);
inline jule::Exceptional<jule::Slice<jule::Ptr<_216764ce0_DirEntry>>> static__1e0193de9_Read(jule::Str);
inline jule::VoidExceptional static__1e019412a_Create(jule::Str);
inline jule::VoidExceptional static__1e019435b_Remove(jule::Str);
inline jule::Exceptional<jule::Ptr<_216766bb0_File>> static__216763c12_Open(jule::Str, jule::I64, jule::I64);
inline jule::VoidExceptional static__216763e43_Remove(jule::Str);
inline jule::Exceptional<jule::I64> _2167643c7_Write(_216766bb0_File*, jule::Slice<jule::U8>);
inline jule::Exceptional<jule::I64> _216764718_Read(_216766bb0_File*, jule::Slice<jule::U8>);
inline jule::Ptr<_216766bb0_File> static__2167670cd_New(jule::Uintptr);
inline jule::Exceptional<jule::Ptr<_216766bb0_File>> static__216767397_Create(jule::Str);
inline jule::Exceptional<jule::Slice<jule::U8>> static__216767661_Read(jule::Str);
inline jule::VoidExceptional static__216767a07_Write(jule::Str, jule::Slice<jule::U8>, jule::I64);
inline jule::VoidExceptional _216768244_Close(_216766bb0_File*);
inline jule::Exceptional<jule::Ptr<_216768ca0_Status>> static__21676596c_Of(jule::Str);
inline jule::Bool _216769179_IsDir(_216768ca0_Status*);
inline jule::Bool _216769410_IsReg(_216768ca0_Status*);
inline jule::U64 _216769696_Size(_216768ca0_Status*);
inline jule::Bool _1d430542e_set(_1d430da64_decimal*, jule::Slice<jule::U8>);
inline __jule_tuple_u64__jule_tuple_bool _1d4305770_floatBits(_1d430da64_decimal*, _1d42ea2c0_floatInfo*);
inline void _1d430de1b_assign(_1d430da64_decimal*, jule::U64);
inline void _1d430e1c4_shift(_1d430da64_decimal*, jule::I64);
inline void _1d430e47c_roundDown(_1d430da64_decimal*, jule::I64);
inline void _1d430e735_roundUp(_1d430da64_decimal*, jule::I64);
inline void _1d430e9dd_round(_1d430da64_decimal*, jule::I64);
inline jule::U64 _1d430ec74_roundedInteger(_1d430da64_decimal*);
inline jule::Ptr<_1d4321208_Const> static__1d4321648_NewI64(jule::I64);
inline jule::Ptr<_1d4321208_Const> static__1d4321912_NewU64(jule::U64);
inline jule::Ptr<_1d4321208_Const> static__1d4321bcb_NewBool(jule::Bool);
inline jule::Ptr<_1d4321208_Const> static__1d4321e95_NewStr(jule::Str);
inline jule::Ptr<_1d4321208_Const> static__1d432225e_NewF64(jule::F64);
inline jule::Ptr<_1d4321208_Const> static__1d432246d_NewNil(void);
inline jule::I64 _1d4322acd_ReadI64(_1d4321208_Const*);
inline jule::U64 _1d4322d64_ReadU64(_1d4321208_Const*);
inline jule::Bool _1d43230ea_ReadBool(_1d4321208_Const*);
inline jule::Str _1d4323381_ReadStr(_1d4321208_Const*);
inline jule::F64 _1d4323617_ReadF64(_1d4321208_Const*);
inline jule::I64 _1d432389d_AsI64(_1d4321208_Const*);
inline jule::U64 _1d4323b34_AsU64(_1d4321208_Const*);
inline jule::F64 _1d4323dba_AsF64(_1d4321208_Const*);
inline void _1d4324173_SetI64(_1d4321208_Const*, jule::I64);
inline void _1d432442b_SetU64(_1d4321208_Const*, jule::U64);
inline void _1d43246d4_SetBool(_1d4321208_Const*, jule::Bool);
inline void _1d432498c_SetStr(_1d4321208_Const*, jule::Str);
inline void _1d4324c45_SetF64(_1d4321208_Const*, jule::F64);
inline jule::Bool _1d43251c9_IsI64(_1d4321208_Const*);
inline jule::Bool _1d4325460_IsU64(_1d4321208_Const*);
inline jule::Bool _1d43256e6_IsBool(_1d4321208_Const*);
inline jule::Bool _1d432597c_IsStr(_1d4321208_Const*);
inline jule::Bool _1d4325c13_IsF64(_1d4321208_Const*);
inline jule::Bool _1d4325e99_IsNil(_1d4321208_Const*);
inline jule::Bool _1d432662b_And(_1d4321208_Const*, _1d4321208_Const);
inline jule::Bool _1d432696c_Or(_1d4321208_Const*, _1d4321208_Const);
inline jule::Bool _1d4327e13_Add(_1d4321208_Const*, _1d4321208_Const);
inline jule::Bool _1d4328254_Sub(_1d4321208_Const*, _1d4321208_Const);
inline jule::Bool _1d4328595_Mul(_1d4321208_Const*, _1d4321208_Const);
inline jule::Bool _1d43288d6_Div(_1d4321208_Const*, _1d4321208_Const);
inline jule::Bool _1d4328c27_Mod(_1d4321208_Const*, _1d4321208_Const);
inline jule::Bool _1d4329068_BitwiseAnd(_1d4321208_Const*, _1d4321208_Const);
inline jule::Bool _1d43293a9_BitwiseOr(_1d4321208_Const*, _1d4321208_Const);
inline jule::Bool _1d43296ea_Xor(_1d4321208_Const*, _1d4321208_Const);
inline jule::Bool _1d4329a3b_Lshift(_1d4321208_Const*, _1d4321208_Const);
inline jule::Bool _1d4329d7c_Rshift(_1d4321208_Const*, _1d4321208_Const);
inline jule::U8 _1d64d6157_Prec(_1d64d5cd3_Token*);
inline void _1d64db987_Fill(_1d64db59c_File*, jule::Slice<jule::U8>);
inline jule::Str _1d64dbc1d_Dir(_1d64db59c_File*);
inline jule::Str _1d64dbea4_Name(_1d64db59c_File*);
inline jule::Str _1d64dc57b_GetRow(_1d64db59c_File*, jule::I64);
inline void _1d64e4d69_pushErr(_1d64e47d6_lex*, jule::Str, jule::Slice<jule::Any>);
inline void _1d64e53ca_lex(_1d64e47d6_lex*);
inline jule::Str _1d64e571b_id(_1d64e47d6_lex*, jule::Slice<jule::U8>*);
inline jule::Slice<jule::U8> _1d64e59a2_resume(_1d64e47d6_lex*);
inline void _1d64e5c5a_lexLineComment(_1d64e47d6_lex*, jule::Ptr<_1d64d5cd3_Token>*);
inline void _1d64e6013_lexRangeComment(_1d64e47d6_lex*, jule::Ptr<_1d64d5cd3_Token>*);
inline jule::Str _1d64e6354_num(_1d64e47d6_lex*, jule::Slice<jule::U8>*);
inline jule::Str _1d64e6695_escapeSeq(_1d64e47d6_lex*, jule::Slice<jule::U8>*);
inline jule::Str _1d64e6a91_getRune(_1d64e47d6_lex*, jule::Slice<jule::U8>*, jule::Bool);
inline jule::Str _1d64e6dd2_lexRune(_1d64e47d6_lex*, jule::Slice<jule::U8>*);
inline jule::Str _1d64e7168_lexStr(_1d64e47d6_lex*);
inline void _1d64e75ec_newLine(_1d64e47d6_lex*);
inline jule::Bool _1d64e7b5d_isOp(_1d64e47d6_lex*, jule::Slice<jule::U8>*, jule::Str, jule::U64, jule::Ptr<_1d64d5cd3_Token>*);
inline jule::Bool _1d64e8059_lexBasicOps(_1d64e47d6_lex*, jule::Slice<jule::U8>, jule::Ptr<_1d64d5cd3_Token>*);
inline jule::Bool _1d64e8455_lexId(_1d64e47d6_lex*, jule::Slice<jule::U8>*, jule::Ptr<_1d64d5cd3_Token>*);
inline jule::Bool _1d64e8851_lexNum(_1d64e47d6_lex*, jule::Slice<jule::U8>*, jule::Ptr<_1d64d5cd3_Token>*);
inline jule::Ptr<_1d64d5cd3_Token> _1d64e8ad7_token(_1d64e47d6_lex*);
inline jule::Bool _1d64ed26d_IsUnsafe(_1d64ece0a_PtrTypeDecl*);
inline jule::Bool _1d64eda10_AutoSized(_1d64ed69c_ArrTypeDecl*);
inline jule::Bool _1d65047b3_Unhandled(_1d650443e_FnCallExpr*);
inline jule::Bool _1d6504a49_Ignored(_1d650443e_FnCallExpr*);
inline jule::Bool _1d650beb3_IsSelf(_1d650bb3e_ParamDecl*);
inline jule::Bool _1d650d404_IsAnon(_1d650d091_FnDecl*);
inline jule::Bool _1d6510208_IsInf(_1d650ed95_Iter*);
inline jule::Bool _1d6510a33_IsWhileNext(_1d65106c0_WhileKind*);
inline jule::Ptr<_1d651e4ae_FieldIns> _1d6519762_instance(jule::Ptr<_1d65193dd_Field>);
inline jule::Ptr<_1d652005e_StructIns> _1d651c743_instance(jule::Ptr<_1d651c2d1_Struct>);
inline jule::Ptr<_1d652005e_StructIns> _1d651ca51_appendInstance(_1d651c2d1_Struct*, jule::Ptr<_1d652005e_StructIns>*);
inline jule::Ptr<_1d653226e_Fn> _1d651ce4c_FindMethod(_1d651c2d1_Struct*, jule::Str, jule::Bool);
inline jule::Ptr<_1d65d9018_Var> _1d651d28d_FindStatic(_1d651c2d1_Struct*, jule::Str);
inline jule::Ptr<_1d65193dd_Field> _1d651d5ce_FindField(_1d651c2d1_Struct*, jule::Str);
inline jule::Bool _1d651d920_IsImplements(_1d651c2d1_Struct*, jule::Ptr<_1d654554b_Trait>);
inline jule::Bool _1d651dc61_IsUses(_1d651c2d1_Struct*, jule::Ptr<_1d651c2d1_Struct>);
inline jule::Ptr<_1d65341c7_ParamIns> _1d6530b30_instance(jule::Ptr<_1d653079a_Param>);
inline jule::Bool _1d6530db6_IsSelf(_1d653079a_Param*);
inline jule::Bool _1d653114c_IsRef(_1d653079a_Param*);
inline jule::Bool _1d65326e2_IsVoid(_1d653226e_Fn*);
inline jule::Bool _1d6532978_IsMethod(_1d653226e_Fn*);
inline jule::Bool _1d6532c0e_IsEntryPoint(_1d653226e_Fn*);
inline jule::Bool _1d6532e95_IsInit(_1d653226e_Fn*);
inline jule::Bool _1d653322b_IsAnon(_1d653226e_Fn*);
inline jule::Bool _1d65334b2_AnyVar(_1d653226e_Fn*);
inline jule::Ptr<_1d6535173_FnIns> _1d6533748_instanceForce(jule::Ptr<_1d653226e_Fn>);
inline jule::Ptr<_1d6535173_FnIns> _1d65339ce_instance(jule::Ptr<_1d653226e_Fn>);
inline jule::Ptr<_1d6535173_FnIns> _1d6533cdc_appendInstance(_1d653226e_Fn*, jule::Ptr<_1d6535173_FnIns>*);
inline jule::Str _1d653453a_Str(_1d65341c7_ParamIns*);
inline jule::Str _1d65354b4_Str(_1d6535173_FnIns*);
inline jule::Bool _1d6535805_Equal(jule::Ptr<_1d6535173_FnIns>, jule::Ptr<_1d6677a35_TypeKind>);
inline jule::Bool _1d6535c9a_EqualFn(jule::Ptr<_1d6535173_FnIns>, jule::Ptr<_1d6535173_FnIns>*);
inline jule::Bool _1d65360db_equalTrait(jule::Ptr<_1d6535173_FnIns>, jule::Ptr<_1d6535173_FnIns>*);
inline jule::Slice<jule::Ptr<_1d6677a35_TypeKind>> _1d6536372_Types(_1d6535173_FnIns*);
inline jule::Bool _1d6536608_IsBuiltin(_1d6535173_FnIns*);
inline jule::Bool _1d653688e_IsAnon(_1d6535173_FnIns*);
inline jule::Bool _1d6536bd0_Same(_1d6535173_FnIns*, jule::Ptr<_1d6535173_FnIns>);
inline jule::Str _1d6537021_GetKindStr(_1d6535173_FnIns*, jule::Bool);
inline jule::Ptr<_1d6538341_ReferenceStack> static__1d653863d_new(void);
inline jule::I64 _1d6538a39_Len(_1d6538341_ReferenceStack*);
inline jule::Any _1d6538d7a_At(_1d6538341_ReferenceStack*, jule::I64);
inline void _1d6539133_Push(_1d6538341_ReferenceStack*, jule::Any);
inline jule::Bool _1da00e176_Exist(_1d6538341_ReferenceStack*, jule::Ptr<_1d6535173_FnIns>);
inline jule::Bool _1da0238a5_Exist(_1d6538341_ReferenceStack*, jule::Ptr<_1d65d9018_Var>);
inline jule::Bool _1da0d4548_Exist(_1d6538341_ReferenceStack*, jule::Ptr<_1d652005e_StructIns>);
inline jule::Bool _1da4177c1_Exist(_1d6538341_ReferenceStack*, jule::Ptr<_1d654554b_Trait>);
inline void _1d653ecb5_pushErr(_1d653e424_symbolBuilder*, jule::Ptr<_1d64d5cd3_Token>*, jule::Str, jule::Slice<jule::Any>);
inline void _1d6540546_pushSuggestion(_1d653e424_symbolBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1d6540942_checkCppUseDeclPath(_1d653e424_symbolBuilder*, jule::Ptr<_1d65144d7_UseDecl>*, jule::Str*);
inline jule::Ptr<_1d659590e_ImportInfo> _1d6540c50_buildCppHeaderImport(_1d653e424_symbolBuilder*, jule::Ptr<_1d65144d7_UseDecl>*);
inline jule::Ptr<_1d659590e_ImportInfo> _1d6541091_buildStdImport(_1d653e424_symbolBuilder*, jule::Ptr<_1d65144d7_UseDecl>*);
inline jule::Ptr<_1d659590e_ImportInfo> _1d65413d2_buildIdentImport(jule::Ptr<_1d653e424_symbolBuilder>, jule::Ptr<_1d65144d7_UseDecl>*);
inline jule::Ptr<_1d659590e_ImportInfo> _1d6541723_buildImport(jule::Ptr<_1d653e424_symbolBuilder>, jule::Ptr<_1d65144d7_UseDecl>*);
inline jule::Bool _1d6541a64_checkDuplicateUseDecl(_1d653e424_symbolBuilder*, jule::Ptr<_1d659590e_ImportInfo>*);
inline void _1d6541dc7_implImportSelections(_1d653e424_symbolBuilder*, jule::Ptr<_1d659590e_ImportInfo>*, jule::Ptr<_1d65144d7_UseDecl>*);
inline jule::Str _1d6542218_getAsLinkPath(jule::Ptr<_1d653e424_symbolBuilder>, jule::Str);
inline void _1d6542636_pushCycleError(jule::Ptr<_1d653e424_symbolBuilder>, jule::Ptr<_1d653e424_symbolBuilder>*, jule::Str, _1e01838bc_StrBuilder*);
inline void _1d6542a54_pushCrossCycleError(jule::Ptr<_1d653e424_symbolBuilder>, jule::Ptr<_1d653e424_symbolBuilder>*, jule::Ptr<_1d659590e_ImportInfo>*, jule::Ptr<_1d64d5cd3_Token>*);
inline jule::Bool _1d6542e50_checkImportCycles(jule::Ptr<_1d653e424_symbolBuilder>, jule::Ptr<_1d659590e_ImportInfo>, jule::Ptr<_1d65144d7_UseDecl>*);
inline void _1d654336d_checkPackageAccessibility(_1d653e424_symbolBuilder*, jule::Ptr<_1d65144d7_UseDecl>*, jule::Str*, jule::Str*);
inline jule::Bool _1d6543769_importPackage(jule::Ptr<_1d653e424_symbolBuilder>, jule::Ptr<_1d659590e_ImportInfo>*, jule::Ptr<_1d65144d7_UseDecl>*);
inline jule::Ptr<_1d659590e_ImportInfo> _1d6543aaa_importUseDecl(jule::Ptr<_1d653e424_symbolBuilder>, jule::Ptr<_1d65144d7_UseDecl>*);
inline void _1d6543ca8_importUseDecls(jule::Ptr<_1d653e424_symbolBuilder>);
inline void _1d6544061_appendNode(_1d653e424_symbolBuilder*, _1d64ea3d0_Node*);
inline void _1d654425e_appendNodes(_1d653e424_symbolBuilder*);
inline void _1d6544517_pushDirectivePass(_1d653e424_symbolBuilder*, jule::Ptr<_1d64ea7ed_Directive>*);
inline void _1d6544715_appendTopDirectives(_1d653e424_symbolBuilder*);
inline void _1d6544913_build(jule::Ptr<_1d653e424_symbolBuilder>);
inline jule::Str _1d6545914_Str(_1d654554b_Trait*);
inline jule::Bool _1d6545c55_Equal(jule::Ptr<_1d654554b_Trait>, jule::Ptr<_1d6677a35_TypeKind>);
inline jule::Ptr<_1d653226e_Fn> _1d65461ea_FindMethod(_1d654554b_Trait*, jule::Str);
inline jule::Ptr<_1d653226e_Fn> _1d654687c_findMethodInherit(_1d654554b_Trait*, jule::Str*);
inline jule::Bool _1d6547592_AutoExpr(_1d65471da_EnumItem*);
inline jule::Str _1d65480cb_Str(_1d6547c57_Enum*);
inline jule::Bool _1d654841c_Equal(jule::Ptr<_1d6547c57_Enum>, jule::Ptr<_1d6677a35_TypeKind>);
inline jule::Ptr<_1d65471da_EnumItem> _1d654884b_FindItem(_1d6547c57_Enum*, jule::Str);
inline jule::Str _1d65497a3_Str(_1d6549462_TypeEnum*);
inline jule::Bool _1d6549ae4_Equal(jule::Ptr<_1d6549462_TypeEnum>, jule::Ptr<_1d6677a35_TypeKind>);
inline jule::Ptr<_1d6548d8a_TypeEnumItem> _1d654a023_FindItem(_1d6549462_TypeEnum*, jule::Str);
inline jule::Str _1d654c93d_Str(_1d654c5b9_comptimeRange*);
inline jule::Bool _1d654cc7e_Equal(jule::Ptr<_1d654c5b9_comptimeRange>, jule::Ptr<_1d6677a35_TypeKind>);
inline jule::Str _1d654d455_Str(_1d654d08c_comptimeStructField*);
inline jule::Bool _1d654d796_Equal(jule::Ptr<_1d654d08c_comptimeStructField>, jule::Ptr<_1d6677a35_TypeKind>);
inline jule::Ptr<_1d664721e_Data> _1d654dd3a__Name(jule::Ptr<_1d654d08c_comptimeStructField>, jule::Ptr<_1d6648e13_Eval>*, jule::Ptr<_1d650443e_FnCallExpr>*);
inline jule::Ptr<_1d664721e_Data> _1d654e236__Type(jule::Ptr<_1d654d08c_comptimeStructField>, jule::Ptr<_1d6648e13_Eval>*, jule::Ptr<_1d650443e_FnCallExpr>*);
inline jule::Ptr<_1d664721e_Data> _1d654e632__Public(jule::Ptr<_1d654d08c_comptimeStructField>, jule::Ptr<_1d6648e13_Eval>*, jule::Ptr<_1d650443e_FnCallExpr>*);
inline jule::Ptr<_1d664721e_Data> _1d654e940_subIdent(jule::Ptr<_1d654d08c_comptimeStructField>, jule::Str*);
inline jule::Str _1d65500c2_Str(_1d654ec4d_comptimeStructFields*);
inline jule::Bool _1d6550413_Equal(jule::Ptr<_1d654ec4d_comptimeStructFields>, jule::Ptr<_1d6677a35_TypeKind>);
inline void _1d6550886_ready(_1d654ec4d_comptimeStructFields*, jule::Ptr<_1d65d9018_Var>*, jule::Ptr<_1d65d9018_Var>*);
inline void _1d6550ca4_step(_1d654ec4d_comptimeStructFields*, jule::I64, jule::Ptr<_1d65d9018_Var>*, jule::Ptr<_1d65d9018_Var>*);
inline jule::I64 _1d655103a_len(_1d654ec4d_comptimeStructFields*);
inline jule::Str _1d65516bc_Str(_1d6551348_comptimeStatic*);
inline jule::Bool _1d6551a0d_Equal(jule::Ptr<_1d6551348_comptimeStatic>, jule::Ptr<_1d6677a35_TypeKind>);
inline jule::Ptr<_1d664721e_Data> _1d655213a__Name(jule::Ptr<_1d6551348_comptimeStatic>, jule::Ptr<_1d6648e13_Eval>*, jule::Ptr<_1d650443e_FnCallExpr>*);
inline jule::Ptr<_1d664721e_Data> _1d6552536__Type(jule::Ptr<_1d6551348_comptimeStatic>, jule::Ptr<_1d6648e13_Eval>*, jule::Ptr<_1d650443e_FnCallExpr>*);
inline jule::Ptr<_1d664721e_Data> _1d6552932__Public(jule::Ptr<_1d6551348_comptimeStatic>, jule::Ptr<_1d6648e13_Eval>*, jule::Ptr<_1d650443e_FnCallExpr>*);
inline jule::Ptr<_1d664721e_Data> _1d6552c73_subIdent(jule::Ptr<_1d6551348_comptimeStatic>, jule::Str*);
inline jule::Str _1d655337d_Str(_1d6553009_comptimeStatics*);
inline jule::Bool _1d65536be_Equal(jule::Ptr<_1d6553009_comptimeStatics>, jule::Ptr<_1d6677a35_TypeKind>);
inline void _1d6553b42_ready(_1d6553009_comptimeStatics*, jule::Ptr<_1d65d9018_Var>*, jule::Ptr<_1d65d9018_Var>*);
inline void _1d6554060_step(_1d6553009_comptimeStatics*, jule::I64, jule::Ptr<_1d65d9018_Var>*, jule::Ptr<_1d65d9018_Var>*);
inline jule::I64 _1d65542e6_len(_1d6553009_comptimeStatics*);
inline jule::Str _1d6554a88_Str(_1d6554604_comptimeEnumField*);
inline jule::Bool _1d6554dc9_Equal(jule::Ptr<_1d6554604_comptimeEnumField>, jule::Ptr<_1d6677a35_TypeKind>);
inline jule::Ptr<_1d664721e_Data> _1d655534c__Name(jule::Ptr<_1d6554604_comptimeEnumField>, jule::Ptr<_1d6648e13_Eval>*, jule::Ptr<_1d650443e_FnCallExpr>*);
inline jule::Ptr<_1d664721e_Data> _1d655568d_subIdent(jule::Ptr<_1d6554604_comptimeEnumField>, jule::Str*);
inline jule::Str _1d6555d20_Str(_1d655599b_comptimeEnumFields*);
inline jule::Bool _1d6556161_Equal(jule::Ptr<_1d655599b_comptimeEnumFields>, jule::Ptr<_1d6677a35_TypeKind>);
inline void _1d65565d4_ready(_1d655599b_comptimeEnumFields*, jule::Ptr<_1d65d9018_Var>*, jule::Ptr<_1d65d9018_Var>*);
inline void _1d6556a02_step(_1d655599b_comptimeEnumFields*, jule::I64, jule::Ptr<_1d65d9018_Var>*, jule::Ptr<_1d65d9018_Var>*);
inline jule::I64 _1d6556c88_len(_1d655599b_comptimeEnumFields*);
inline jule::Str _1d655741a_Str(_1d6557096_comptimeParam*);
inline jule::Bool _1d655775b_Equal(jule::Ptr<_1d6557096_comptimeParam>, jule::Ptr<_1d6677a35_TypeKind>);
inline jule::Ptr<_1d664721e_Data> _1d6557eba__Name(jule::Ptr<_1d6557096_comptimeParam>, jule::Ptr<_1d6648e13_Eval>*, jule::Ptr<_1d650443e_FnCallExpr>*);
inline jule::Ptr<_1d664721e_Data> _1d65583b6__Type(jule::Ptr<_1d6557096_comptimeParam>, jule::Ptr<_1d6648e13_Eval>*, jule::Ptr<_1d650443e_FnCallExpr>*);
inline jule::Ptr<_1d664721e_Data> _1d65587b2__Variadic(jule::Ptr<_1d6557096_comptimeParam>, jule::Ptr<_1d6648e13_Eval>*, jule::Ptr<_1d650443e_FnCallExpr>*);
inline jule::Ptr<_1d664721e_Data> _1d6558bad__Reference(jule::Ptr<_1d6557096_comptimeParam>, jule::Ptr<_1d6648e13_Eval>*, jule::Ptr<_1d650443e_FnCallExpr>*);
inline jule::Ptr<_1d664721e_Data> _1d6558eee_subIdent(jule::Ptr<_1d6557096_comptimeParam>, jule::Str*);
inline jule::Str _1d6559681_Str(_1d655930c_comptimeParams*);
inline jule::Bool _1d65599c2_Equal(jule::Ptr<_1d655930c_comptimeParams>, jule::Ptr<_1d6677a35_TypeKind>);
inline void _1d6559e45_ready(_1d655930c_comptimeParams*, jule::Ptr<_1d65d9018_Var>*, jule::Ptr<_1d65d9018_Var>*);
inline void _1d655a363_step(_1d655930c_comptimeParams*, jule::I64, jule::Ptr<_1d65d9018_Var>*, jule::Ptr<_1d65d9018_Var>*);
inline jule::I64 _1d655a5e9_len(_1d655930c_comptimeParams*);
inline jule::Str _1d655ac7b_Str(_1d655a907_comptimeTypeInfos*);
inline jule::Bool _1d655b0bc_Equal(jule::Ptr<_1d655a907_comptimeTypeInfos>, jule::Ptr<_1d6677a35_TypeKind>);
inline void _1d655b540_ready(_1d655a907_comptimeTypeInfos*, jule::Ptr<_1d65d9018_Var>*, jule::Ptr<_1d65d9018_Var>*);
inline void _1d655b95d_step(_1d655a907_comptimeTypeInfos*, jule::I64, jule::Ptr<_1d65d9018_Var>*, jule::Ptr<_1d65d9018_Var>*);
inline jule::I64 _1d655bbe4_len(_1d655a907_comptimeTypeInfos*);
inline jule::Str _1d655c376_Str(_1d655c002_comptimeTypeInfo*);
inline jule::Bool _1d655c6b7_Equal(jule::Ptr<_1d655c002_comptimeTypeInfo>, jule::Ptr<_1d6677a35_TypeKind>);
inline jule::Ptr<_1d664721e_Data> _1d655cd16__Str(jule::Ptr<_1d655c002_comptimeTypeInfo>, jule::Ptr<_1d6648e13_Eval>*, jule::Ptr<_1d650443e_FnCallExpr>*);
inline jule::Ptr<_1d664721e_Data> _1d655d212__Kind(jule::Ptr<_1d655c002_comptimeTypeInfo>, jule::Ptr<_1d6648e13_Eval>*, jule::Ptr<_1d650443e_FnCallExpr>*);
inline jule::Ptr<_1d664721e_Data> _1d655d60d__Bits(jule::Ptr<_1d655c002_comptimeTypeInfo>, jule::Ptr<_1d6648e13_Eval>*, jule::Ptr<_1d650443e_FnCallExpr>*);
inline jule::Ptr<_1d664721e_Data> _1d655da09__Elem(jule::Ptr<_1d655c002_comptimeTypeInfo>, jule::Ptr<_1d6648e13_Eval>*, jule::Ptr<_1d650443e_FnCallExpr>*);
inline jule::Ptr<_1d664721e_Data> _1d655de05__Size(jule::Ptr<_1d655c002_comptimeTypeInfo>, jule::Ptr<_1d6648e13_Eval>*, jule::Ptr<_1d650443e_FnCallExpr>*);
inline jule::Ptr<_1d664721e_Data> _1d655e301__Key(jule::Ptr<_1d655c002_comptimeTypeInfo>, jule::Ptr<_1d6648e13_Eval>*, jule::Ptr<_1d650443e_FnCallExpr>*);
inline jule::Ptr<_1d664721e_Data> _1d655e6ec__Value(jule::Ptr<_1d655c002_comptimeTypeInfo>, jule::Ptr<_1d6648e13_Eval>*, jule::Ptr<_1d650443e_FnCallExpr>*);
inline jule::Ptr<_1d664721e_Data> _1d655eae8__Fields(jule::Ptr<_1d655c002_comptimeTypeInfo>, jule::Ptr<_1d6648e13_Eval>*, jule::Ptr<_1d650443e_FnCallExpr>*);
inline jule::Ptr<_1d664721e_Data> _1d655eee4__Statics(jule::Ptr<_1d655c002_comptimeTypeInfo>, jule::Ptr<_1d6648e13_Eval>*, jule::Ptr<_1d650443e_FnCallExpr>*);
inline jule::Ptr<_1d664721e_Data> _1d65603e0__Public(jule::Ptr<_1d655c002_comptimeTypeInfo>, jule::Ptr<_1d6648e13_Eval>*, jule::Ptr<_1d650443e_FnCallExpr>*);
inline jule::Ptr<_1d664721e_Data> _1d65607db__Binded(jule::Ptr<_1d655c002_comptimeTypeInfo>, jule::Ptr<_1d6648e13_Eval>*, jule::Ptr<_1d650443e_FnCallExpr>*);
inline jule::Ptr<_1d664721e_Data> _1d6560bd7__Ordered(jule::Ptr<_1d655c002_comptimeTypeInfo>, jule::Ptr<_1d6648e13_Eval>*, jule::Ptr<_1d650443e_FnCallExpr>*);
inline jule::Ptr<_1d664721e_Data> _1d65610d3__Comparable(jule::Ptr<_1d655c002_comptimeTypeInfo>, jule::Ptr<_1d6648e13_Eval>*, jule::Ptr<_1d650443e_FnCallExpr>*);
inline jule::Ptr<_1d664721e_Data> _1d65614ce__Mutable(jule::Ptr<_1d655c002_comptimeTypeInfo>, jule::Ptr<_1d6648e13_Eval>*, jule::Ptr<_1d650443e_FnCallExpr>*);
inline jule::Ptr<_1d664721e_Data> _1d65618ca__Types(jule::Ptr<_1d655c002_comptimeTypeInfo>, jule::Ptr<_1d6648e13_Eval>*, jule::Ptr<_1d650443e_FnCallExpr>*);
inline jule::Ptr<_1d664721e_Data> _1d6561cc6__Exceptional(jule::Ptr<_1d655c002_comptimeTypeInfo>, jule::Ptr<_1d6648e13_Eval>*, jule::Ptr<_1d650443e_FnCallExpr>*);
inline jule::Ptr<_1d664721e_Data> _1d65621c2__CanNil(jule::Ptr<_1d655c002_comptimeTypeInfo>, jule::Ptr<_1d6648e13_Eval>*, jule::Ptr<_1d650443e_FnCallExpr>*);
inline jule::Ptr<_1d664721e_Data> _1d65625bd__RC(jule::Ptr<_1d655c002_comptimeTypeInfo>, jule::Ptr<_1d6648e13_Eval>*, jule::Ptr<_1d650443e_FnCallExpr>*);
inline jule::Ptr<_1d664721e_Data> _1d65629b9__Result(jule::Ptr<_1d655c002_comptimeTypeInfo>, jule::Ptr<_1d6648e13_Eval>*, jule::Ptr<_1d650443e_FnCallExpr>*);
inline jule::Ptr<_1d664721e_Data> _1d6562db5__Params(jule::Ptr<_1d655c002_comptimeTypeInfo>, jule::Ptr<_1d6648e13_Eval>*, jule::Ptr<_1d650443e_FnCallExpr>*);
inline jule::Ptr<_1d664721e_Data> _1d6563206_subIdent(jule::Ptr<_1d655c002_comptimeTypeInfo>, jule::Str*);
inline jule::Str _1d6563888_Str(_1d6563514_comptimeValue*);
inline jule::Bool _1d6563bc9_Equal(jule::Ptr<_1d6563514_comptimeValue>, jule::Ptr<_1d6677a35_TypeKind>);
inline jule::Ptr<_1d664721e_Data> _1d6564229__Unwrap(jule::Ptr<_1d6563514_comptimeValue>, jule::Ptr<_1d6648e13_Eval>*, jule::Ptr<_1d650443e_FnCallExpr>*);
inline jule::Ptr<_1d664721e_Data> _1d6564625__Type(jule::Ptr<_1d6563514_comptimeValue>, jule::Ptr<_1d6648e13_Eval>*, jule::Ptr<_1d650443e_FnCallExpr>*);
inline jule::Ptr<_1d664721e_Data> _1d6564a21__Lvalue(jule::Ptr<_1d6563514_comptimeValue>, jule::Ptr<_1d6648e13_Eval>*, jule::Ptr<_1d650443e_FnCallExpr>*);
inline jule::Ptr<_1d664721e_Data> _1d6564e1c__Mutable(jule::Ptr<_1d6563514_comptimeValue>, jule::Ptr<_1d6648e13_Eval>*, jule::Ptr<_1d650443e_FnCallExpr>*);
inline jule::Ptr<_1d664721e_Data> _1d6565318__Const(jule::Ptr<_1d6563514_comptimeValue>, jule::Ptr<_1d6648e13_Eval>*, jule::Ptr<_1d650443e_FnCallExpr>*);
inline jule::Ptr<_1d664721e_Data> _1d6565714__Field(jule::Ptr<_1d6563514_comptimeValue>, jule::Ptr<_1d6648e13_Eval>*, jule::Ptr<_1d650443e_FnCallExpr>*);
inline jule::Ptr<_1d664721e_Data> _1d6565a55_subIdent(jule::Ptr<_1d6563514_comptimeValue>, jule::Str*);
inline jule::Str _1d65661d7_Str(_1d6565d63_comptimeFiles*);
inline jule::Bool _1d6566528_Equal(jule::Ptr<_1d6565d63_comptimeFiles>, jule::Ptr<_1d6677a35_TypeKind>);
inline void _1d656699b_ready(_1d6565d63_comptimeFiles*, jule::Ptr<_1d65d9018_Var>*, jule::Ptr<_1d65d9018_Var>*);
inline void _1d6566db9_step(_1d6565d63_comptimeFiles*, jule::I64, jule::Ptr<_1d65d9018_Var>*, jule::Ptr<_1d65d9018_Var>*);
inline jule::I64 _1d6567150_len(_1d6565d63_comptimeFiles*);
inline jule::Str _1d6567903_Str(_1d656745d_comptimeFile*);
inline jule::Bool _1d6567c44_Equal(jule::Ptr<_1d656745d_comptimeFile>, jule::Ptr<_1d6677a35_TypeKind>);
inline jule::Ptr<_1d664721e_Data> _1d6568261__Path(jule::Ptr<_1d656745d_comptimeFile>, jule::Ptr<_1d6648e13_Eval>*, jule::Ptr<_1d650443e_FnCallExpr>*);
inline jule::Ptr<_1d664721e_Data> _1d656865c__Name(jule::Ptr<_1d656745d_comptimeFile>, jule::Ptr<_1d6648e13_Eval>*, jule::Ptr<_1d650443e_FnCallExpr>*);
inline jule::Ptr<_1d664721e_Data> _1d6568a58__Dir(jule::Ptr<_1d656745d_comptimeFile>, jule::Ptr<_1d6648e13_Eval>*, jule::Ptr<_1d650443e_FnCallExpr>*);
inline jule::Ptr<_1d664721e_Data> _1d6568d99_subIdent(jule::Ptr<_1d656745d_comptimeFile>, jule::Str*);
inline jule::Fn<jule::Bool(jule::Ptr<_1d65b5c81_Sema>*,jule::Slice<jule::Ptr<_1d6676c43_TypeAlias>>*)> _1d656bc6a_readyFn(jule::Ptr<_1d656b86e_constraintChecker>);
inline jule::Bool _1d656c001_readyFi(jule::Ptr<_1d656b86e_constraintChecker>);
inline jule::Bool _1d656c287_readySi(jule::Ptr<_1d656b86e_constraintChecker>);
inline jule::Bool _1d656c51d_ready(jule::Ptr<_1d656b86e_constraintChecker>);
inline jule::Bool _1d656c7a4_check(jule::Ptr<_1d656b86e_constraintChecker>);
inline jule::Bool _1d656e08b_IsTraitImpl(_1d656dbc3_Impl*);
inline jule::Bool _1d656e322_IsStructImpl(_1d656dbc3_Impl*);
inline jule::Ptr<_1d659590e_ImportInfo> _1d657b8c3_SelectPackage(_1d657b42d_scopeChecker*, jule::Fn<jule::Bool(jule::Ptr<_1d659590e_ImportInfo>)>);
inline jule::Ptr<_1d65d9018_Var> _1d657bcbe_FindVar(_1d657b42d_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1d6676c43_TypeAlias> _1d657c1ba_FindTypeAlias(_1d657b42d_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1d651c2d1_Struct> _1d657c5b6_FindStruct(_1d657b42d_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1d653226e_Fn> _1d657c9b2_FindFn(_1d657b42d_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1d654554b_Trait> _1d657cd03_FindTrait(_1d657b42d_scopeChecker*, jule::Str);
inline jule::Ptr<_1d6547c57_Enum> _1d657d144_FindEnum(_1d657b42d_scopeChecker*, jule::Str);
inline jule::Ptr<_1d6549462_TypeEnum> _1d657d485_FindTypeEnum(_1d657b42d_scopeChecker*, jule::Str);
inline jule::Bool _1d657d7d7_isUnsafe(jule::Ptr<_1d657b42d_scopeChecker>);
inline jule::Bool _1d657da6d_isRoot(_1d657b42d_scopeChecker*);
inline void _1d657dc6b_stop(_1d657b42d_scopeChecker*);
inline jule::Bool _1d657e002_stopped(_1d657b42d_scopeChecker*);
inline jule::Bool _1d657e288_isDeferred(jule::Ptr<_1d657b42d_scopeChecker>);
inline jule::Ptr<_1d657b42d_scopeChecker> _1d657e51e_getRoot(jule::Ptr<_1d657b42d_scopeChecker>);
inline jule::Ptr<_1d657b42d_scopeChecker> _1d657e7a5_getHardRoot(jule::Ptr<_1d657b42d_scopeChecker>);
inline jule::Ptr<_1d65769bc_Label> _1d657eae6_findLabel(_1d657b42d_scopeChecker*, jule::Str*);
inline jule::Ptr<_1d6579e87_scopeLabel> _1d657ee37_findLabelScope(jule::Ptr<_1d657b42d_scopeChecker>, jule::Str*);
inline jule::Ptr<_1d6579e87_scopeLabel> _1d6580278_findLabelAll(_1d657b42d_scopeChecker*, jule::Str*);
inline jule::Bool _1d6580674_isDuplicatedIdent(_1d657b42d_scopeChecker*, jule::Uintptr, jule::Str*);
inline void _1d658092c_checkVarDecl(jule::Ptr<_1d657b42d_scopeChecker>, jule::Ptr<_1d650e24b_VarDecl>);
inline void _1d6580bd5_checkTypeAlias(jule::Ptr<_1d657b42d_scopeChecker>, jule::Ptr<_1d6676c43_TypeAlias>*);
inline void _1d6580e8d_checkTypeAliasDecl(jule::Ptr<_1d657b42d_scopeChecker>, jule::Ptr<_1d6512ded_TypeAliasDecl>);
inline jule::Ptr<_1d6574129_Scope> _1d6581224_getChild(_1d657b42d_scopeChecker*);
inline void _1d6581642_checkChildSsc(jule::Ptr<_1d657b42d_scopeChecker>, jule::Ptr<_1d650b402_ScopeTree>*, jule::Ptr<_1d6574129_Scope>*, jule::Ptr<_1d657b42d_scopeChecker>*);
inline jule::Ptr<_1d6574129_Scope> _1d6581a3d_checkChildSc(jule::Ptr<_1d657b42d_scopeChecker>, jule::Ptr<_1d650b402_ScopeTree>*, jule::Ptr<_1d657b42d_scopeChecker>*);
inline jule::Ptr<_1d6574129_Scope> _1d6581d7e_checkChild(jule::Ptr<_1d657b42d_scopeChecker>, jule::Ptr<_1d650b402_ScopeTree>*);
inline void _1d6582137_checkAnonScope(jule::Ptr<_1d657b42d_scopeChecker>, jule::Ptr<_1d650b402_ScopeTree>);
inline void _1d658249a_processErrorCall(jule::Ptr<_1d657b42d_scopeChecker>, jule::Ptr<_1d652cd19_BuiltinErrorCallExprModel>*, jule::Ptr<_1d64d5cd3_Token>);
inline void _1d6582753_checkExpr(jule::Ptr<_1d657b42d_scopeChecker>, jule::Ptr<_1d6500715_Expr>);
inline jule::Ptr<_1d6574547_If> _1d6582a94_checkIf(jule::Ptr<_1d657b42d_scopeChecker>, jule::Ptr<_1d6511d31_If>);
inline jule::Ptr<_1d6574844_Else> _1d6582dd5_checkElse(jule::Ptr<_1d657b42d_scopeChecker>, jule::Ptr<_1d651220a_Else>);
inline void _1d658318d_checkConditional(jule::Ptr<_1d657b42d_scopeChecker>, jule::Ptr<_1d65126b1_Conditional>);
inline void _1d6583666_checkIterScopeSsc(jule::Ptr<_1d657b42d_scopeChecker>, jule::Uintptr, jule::Ptr<_1d650b402_ScopeTree>, jule::Ptr<_1d6574129_Scope>*, jule::Ptr<_1d657b42d_scopeChecker>);
inline jule::Ptr<_1d6574129_Scope> _1d6583b1c_checkIterScopeSc(jule::Ptr<_1d657b42d_scopeChecker>, jule::Uintptr, jule::Ptr<_1d650b402_ScopeTree>, jule::Ptr<_1d657b42d_scopeChecker>);
inline jule::Ptr<_1d6574129_Scope> _1d6584018_checkIterScope(jule::Ptr<_1d657b42d_scopeChecker>, jule::Uintptr, jule::Ptr<_1d650b402_ScopeTree>*);
inline void _1d65842c1_checkInfIter(jule::Ptr<_1d657b42d_scopeChecker>, jule::Ptr<_1d650ed95_Iter>*);
inline void _1d6584579_checkWhileIter(jule::Ptr<_1d657b42d_scopeChecker>, jule::Ptr<_1d650ed95_Iter>*);
inline void _1d6584997_checkComptimeRangeIter(jule::Ptr<_1d657b42d_scopeChecker>, jule::Ptr<_1d650ed95_Iter>*, jule::Ptr<_1d6575e61_RangeIter>*, jule::Ptr<_1d664721e_Data>*);
inline void _1d6584c50_checkRangeIter(jule::Ptr<_1d657b42d_scopeChecker>, jule::Ptr<_1d650ed95_Iter>*);
inline void _1d6585008_checkIter(jule::Ptr<_1d657b42d_scopeChecker>, jule::Ptr<_1d650ed95_Iter>);
inline jule::Bool _1d6585349_checkValidContLabel(jule::Ptr<_1d657b42d_scopeChecker>, jule::Uintptr);
inline jule::Bool _1d658568a_checkValidBreakLabel(jule::Ptr<_1d657b42d_scopeChecker>, jule::Uintptr);
inline jule::Ptr<_1d65762e6_ContSt> _1d65859cb_checkContValidScope(jule::Ptr<_1d657b42d_scopeChecker>, jule::Ptr<_1d651187a_ContSt>);
inline void _1d6585c84_checkCont(jule::Ptr<_1d657b42d_scopeChecker>, jule::Ptr<_1d651187a_ContSt>);
inline void _1d658603c_checkLabel(jule::Ptr<_1d657b42d_scopeChecker>, jule::Ptr<_1d65089b5_LabelSt>);
inline void _1d65862e5_pushGoto(jule::Ptr<_1d657b42d_scopeChecker>, jule::Ptr<_1d6508d8e_GotoSt>);
inline void _1d658659d_checkPostfix(jule::Ptr<_1d657b42d_scopeChecker>, jule::Ptr<_1d6509d7e_AssignSt>);
inline jule::Bool _1d65868de_isNewAssignIdent(_1d657b42d_scopeChecker*, jule::Str);
inline void _1d6586b97_removeInteriorMutRisk(jule::Ptr<_1d657b42d_scopeChecker>, jule::Ptr<_1d664721e_Data>*);
inline jule::Bool _1d658714d_checkStructureAssignOp(jule::Ptr<_1d657b42d_scopeChecker>, jule::Ptr<_1d652005e_StructIns>*, jule::Ptr<_1d6509d7e_AssignSt>*, jule::Ptr<_1d664721e_Data>*);
inline void _1d6587406_checkSingleAssign(jule::Ptr<_1d657b42d_scopeChecker>, jule::Ptr<_1d6509d7e_AssignSt>*);
inline void _1d6587989_processEndPartOfMultiAssign(_1d657b42d_scopeChecker*, jule::Ptr<_1d6577b00_MultiAssign>*, jule::Ptr<_1d6509d7e_AssignSt>*, jule::Ptr<_1d65097eb_AssignLeft>*, jule::Ptr<_1d664721e_Data>*, jule::Ptr<_1d664721e_Data>*);
inline void _1d6587c42_checkMultiAssign(jule::Ptr<_1d657b42d_scopeChecker>, jule::Ptr<_1d6509d7e_AssignSt>*);
inline void _1d6587eea_checkAssignSt(jule::Ptr<_1d657b42d_scopeChecker>, jule::Ptr<_1d6509d7e_AssignSt>);
inline jule::Ptr<_1d6574129_Scope> _1d65883e6_checkCaseScope(jule::Ptr<_1d657b42d_scopeChecker>, jule::Ptr<_1d6578d98_Case>*, jule::Ptr<_1d650b402_ScopeTree>*);
inline jule::Ptr<_1d6578d98_Case> _1d6588957_checkCase(jule::Ptr<_1d657b42d_scopeChecker>, jule::Ptr<_1d6578260_Match>, jule::I64, jule::Ptr<_1d65133a4_Case>, jule::Ptr<_1d664721e_Data>);
inline void _1d6588d75_checkCases(jule::Ptr<_1d657b42d_scopeChecker>, jule::Ptr<_1d6513bbd_MatchCase>*, jule::Ptr<_1d6578260_Match>, jule::Ptr<_1d664721e_Data>);
inline jule::Ptr<_1d6578d98_Case> _1d6589271_checkDefault(jule::Ptr<_1d657b42d_scopeChecker>, jule::Ptr<_1d6578260_Match>, jule::Ptr<_1d651220a_Else>);
inline void _1d65895d4_checkComptimePanic(jule::Ptr<_1d657b42d_scopeChecker>, jule::Ptr<_1d64d5cd3_Token>, jule::Ptr<_1d6574129_Scope>*);
inline void _1d6589947_processConstMatch(jule::Ptr<_1d657b42d_scopeChecker>, jule::Ptr<_1d6578260_Match>*, jule::Ptr<_1d6513bbd_MatchCase>*);
inline void _1d6589c00_checkTypeMatch(jule::Ptr<_1d657b42d_scopeChecker>, jule::Ptr<_1d6513bbd_MatchCase>*);
inline void _1d6589ea8_checkCommonMatch(jule::Ptr<_1d657b42d_scopeChecker>, jule::Ptr<_1d6513bbd_MatchCase>*);
inline void _1d658a261_checkMatch(jule::Ptr<_1d657b42d_scopeChecker>, jule::Ptr<_1d6513bbd_MatchCase>);
inline void _1d658a519_checkFall(jule::Ptr<_1d657b42d_scopeChecker>, jule::Ptr<_1d650918b_FallSt>);
inline jule::Ptr<_1d65766c0_BreakSt> _1d658a85a_checkBreakWithLabel(jule::Ptr<_1d657b42d_scopeChecker>, jule::Ptr<_1d65114a1_BreakSt>);
inline jule::Ptr<_1d65766c0_BreakSt> _1d658ab9b_checkPlainBreak(jule::Ptr<_1d657b42d_scopeChecker>, jule::Ptr<_1d65114a1_BreakSt>);
inline void _1d658ae54_checkBreak(jule::Ptr<_1d657b42d_scopeChecker>, jule::Ptr<_1d65114a1_BreakSt>);
inline void _1d658b20c_checkRet(jule::Ptr<_1d657b42d_scopeChecker>, jule::Ptr<_1d650e625_RetSt>);
inline void _1d658b4b5_checkUseExpr(jule::Ptr<_1d657b42d_scopeChecker>, jule::Ptr<_1d65010d9_UseExpr>);
inline void _1d658b76d_checkNode(jule::Ptr<_1d657b42d_scopeChecker>, jule::Any*);
inline void _1d658b96b_checkResult(jule::Ptr<_1d657b42d_scopeChecker>);
inline void _1d658bb69_checkTree(jule::Ptr<_1d657b42d_scopeChecker>);
inline void _1d658becc_checkGoto(_1d657b42d_scopeChecker*, jule::Ptr<_1d657a51a_scopeGoto>*, jule::Ptr<_1d6579e87_scopeLabel>*);
inline void _1d658c1ca_checkGotos(_1d657b42d_scopeChecker*);
inline void _1d658c3c8_checkLabels(_1d657b42d_scopeChecker*);
inline void _1d658c5c6_checkVars(_1d657b42d_scopeChecker*);
inline void _1d658c7c4_checkAliases(_1d657b42d_scopeChecker*);
inline void _1d658cb37_check(jule::Ptr<_1d657b42d_scopeChecker>, jule::Ptr<_1d650b402_ScopeTree>*, jule::Ptr<_1d6574129_Scope>*);
inline jule::Ptr<_1d657b42d_scopeChecker> _1d658cdbd_newChildChecker(jule::Ptr<_1d657b42d_scopeChecker>);
inline void _1d658e870_checkCdef(_1d658e463_directiveChecker*, jule::Ptr<_1d64ea7ed_Directive>*);
inline void _1d658eb28_checkTypedef(_1d658e463_directiveChecker*, jule::Ptr<_1d64ea7ed_Directive>*);
inline void _1d658edd1_checkNamespace(_1d658e463_directiveChecker*, jule::Ptr<_1d64ea7ed_Directive>*);
inline void _1d6590189_checkDeprecated(_1d658e463_directiveChecker*, jule::Ptr<_1d64ea7ed_Directive>*);
inline void _1d6590442_checkTest(_1d658e463_directiveChecker*, jule::Ptr<_1d64ea7ed_Directive>*);
inline void _1d65906ea_checkDirective(_1d658e463_directiveChecker*, jule::Ptr<_1d64ea7ed_Directive>*);
inline void _1d65908e8_check(_1d658e463_directiveChecker*);
inline jule::Ptr<_1d659590e_ImportInfo> _1d6595de8_SelectPackage(_1d659590e_ImportInfo*, jule::Fn<jule::Bool(jule::Ptr<_1d659590e_ImportInfo>)>);
inline jule::Ptr<_1d65d9018_Var> _1d65962e4_FindVar(_1d659590e_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1d6676c43_TypeAlias> _1d65966e0_FindTypeAlias(_1d659590e_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1d651c2d1_Struct> _1d6596adb_FindStruct(_1d659590e_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1d653226e_Fn> _1d6596ed7_FindFn(_1d659590e_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1d654554b_Trait> _1d6597328_FindTrait(_1d659590e_ImportInfo*, jule::Str);
inline jule::Ptr<_1d6547c57_Enum> _1d6597669_FindEnum(_1d659590e_ImportInfo*, jule::Str);
inline jule::Ptr<_1d6549462_TypeEnum> _1d65979aa_FindTypeEnum(_1d659590e_ImportInfo*, jule::Str);
inline jule::Bool _1d6597e50_isLookupable(_1d659590e_ImportInfo*, jule::Str*);
inline jule::Bool _1d6598291_existIdent(_1d659590e_ImportInfo*, jule::Str);
inline jule::Bool _1d6598527_isAccessibleViaSelection(_1d659590e_ImportInfo*);
inline jule::Ptr<_1d659590e_ImportInfo> _1d6598cca_SelectPackage(_1d6598835_Package*, jule::Fn<jule::Bool(jule::Ptr<_1d659590e_ImportInfo>)>);
inline jule::Ptr<_1d65d9018_Var> _1d65991c6_FindVar(_1d6598835_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1d6676c43_TypeAlias> _1d65995c2_FindTypeAlias(_1d6598835_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1d651c2d1_Struct> _1d65999bd_FindStruct(_1d6598835_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1d653226e_Fn> _1d6599db9_FindFn(_1d6598835_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1d654554b_Trait> _1d659a20a_FindTrait(_1d6598835_Package*, jule::Str);
inline jule::Ptr<_1d6547c57_Enum> _1d659a54b_FindEnum(_1d6598835_Package*, jule::Str);
inline jule::Ptr<_1d6549462_TypeEnum> _1d659a88c_FindTypeEnum(_1d6598835_Package*, jule::Str);
inline jule::Ptr<_1d655c002_comptimeTypeInfo> _1d65b55bb_pushComptimeTypeInfo(_1d65b5159_commonSemaMeta*, jule::Ptr<_1d6677a35_TypeKind>*);
inline jule::Ptr<_1d659590e_ImportInfo> _1d65b6226_SelectPackage(_1d65b5c81_Sema*, jule::Fn<jule::Bool(jule::Ptr<_1d659590e_ImportInfo>)>);
inline jule::Ptr<_1d65d9018_Var> _1d65b6622_FindVar(_1d65b5c81_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1d6676c43_TypeAlias> _1d65b6a1d_FindTypeAlias(_1d65b5c81_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1d651c2d1_Struct> _1d65b6e19_FindStruct(_1d65b5c81_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1d653226e_Fn> _1d65b7315_FindFn(_1d65b5c81_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1d654554b_Trait> _1d65b7656_FindTrait(_1d65b5c81_Sema*, jule::Str);
inline jule::Ptr<_1d6547c57_Enum> _1d65b7997_FindEnum(_1d65b5c81_Sema*, jule::Str);
inline jule::Ptr<_1d6549462_TypeEnum> _1d65b7cd8_FindTypeEnum(_1d65b5c81_Sema*, jule::Str);
inline jule::Bool _1d65b81e5_isFlag(_1d65b5c81_Sema*, jule::I64);
inline void _1d65b849d_setCurrentFile(_1d65b5c81_Sema*, jule::Ptr<_1d6641d73_SymbolTable>);
inline void _1d65b88bb_pushErr(_1d65b5c81_Sema*, jule::Ptr<_1d64d5cd3_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1d65b8c2e_pushSuggestion(_1d65b5c81_Sema*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1d65b912a_isAccessibleDefine(_1d65b5c81_Sema*, jule::Bool, jule::Ptr<_1d64d5cd3_Token>);
inline jule::Bool _1d65b95d1_isDuplicatedIdent(_1d65b5c81_Sema*, jule::Uintptr, jule::Str*, jule::Bool);
inline void _1d65b9944_checkDirectives(jule::Ptr<_1d65b5c81_Sema>, jule::Slice<jule::Ptr<_1d64ea7ed_Directive>>*, jule::Any);
inline jule::Bool _1d65b9dea_checkGenericQuantity(_1d65b5c81_Sema*, jule::I64, jule::I64, jule::Ptr<_1d64d5cd3_Token>);
inline jule::Bool _1d65ba2e6_isDuplicatedImportSelection(_1d65b5c81_Sema*, jule::Uintptr, jule::Str*);
inline jule::Any _1d65ba6e2_getImportDef(_1d65b5c81_Sema*, jule::Str*, jule::Ptr<_1d659590e_ImportInfo>*);
inline jule::Bool _1d9acb2d7_checkImportSelection(_1d65b5c81_Sema*, jule::Ptr<_1d64d5cd3_Token>*, jule::Ptr<_1d65d9018_Var>*);
inline jule::Bool _1d9ad042e_checkImportSelection(_1d65b5c81_Sema*, jule::Ptr<_1d64d5cd3_Token>*, jule::Ptr<_1d6676c43_TypeAlias>*);
inline jule::Bool _1d9ad4532_checkImportSelection(_1d65b5c81_Sema*, jule::Ptr<_1d64d5cd3_Token>*, jule::Ptr<_1d651c2d1_Struct>*);
inline jule::Bool _1d9ad87bc_checkImportSelection(_1d65b5c81_Sema*, jule::Ptr<_1d64d5cd3_Token>*, jule::Ptr<_1d654554b_Trait>*);
inline jule::Bool _1d9adc8c0_checkImportSelection(_1d65b5c81_Sema*, jule::Ptr<_1d64d5cd3_Token>*, jule::Ptr<_1d6547c57_Enum>*);
inline jule::Bool _1d9ae19c3_checkImportSelection(_1d65b5c81_Sema*, jule::Ptr<_1d64d5cd3_Token>*, jule::Ptr<_1d6549462_TypeEnum>*);
inline jule::Bool _1d9ae5ac6_checkImportSelection(_1d65b5c81_Sema*, jule::Ptr<_1d64d5cd3_Token>*, jule::Ptr<_1d653226e_Fn>*);
inline jule::Bool _1d65bae2e_checkImportSelectedSelections(_1d65b5c81_Sema*, jule::Ptr<_1d659590e_ImportInfo>*);
inline jule::Bool _1d9aea2a1_checkImportsAllSelectionsFromCollection(_1d65b5c81_Sema*, jule::Slice<jule::Ptr<_1d65d9018_Var>>*, jule::Ptr<_1d64d5cd3_Token>*);
inline jule::Bool _1d9aeb439_checkImportsAllSelectionsFromCollection(_1d65b5c81_Sema*, jule::Slice<jule::Ptr<_1d6676c43_TypeAlias>>*, jule::Ptr<_1d64d5cd3_Token>*);
inline jule::Bool _1d9aedbde_checkImportsAllSelectionsFromCollection(_1d65b5c81_Sema*, jule::Slice<jule::Ptr<_1d651c2d1_Struct>>*, jule::Ptr<_1d64d5cd3_Token>*);
inline jule::Bool _1d9b0143e_checkImportsAllSelectionsFromCollection(_1d65b5c81_Sema*, jule::Slice<jule::Ptr<_1d653226e_Fn>>*, jule::Ptr<_1d64d5cd3_Token>*);
inline jule::Bool _1d9b03b39_checkImportsAllSelectionsFromCollection(_1d65b5c81_Sema*, jule::Slice<jule::Ptr<_1d654554b_Trait>>*, jule::Ptr<_1d64d5cd3_Token>*);
inline jule::Bool _1d9b06411_checkImportsAllSelectionsFromCollection(_1d65b5c81_Sema*, jule::Slice<jule::Ptr<_1d6547c57_Enum>>*, jule::Ptr<_1d64d5cd3_Token>*);
inline jule::Bool _1d9b08b1c_checkImportsAllSelectionsFromCollection(_1d65b5c81_Sema*, jule::Slice<jule::Ptr<_1d6549462_TypeEnum>>*, jule::Ptr<_1d64d5cd3_Token>*);
inline jule::Bool _1d65bb66b_checkImportAllSelections(_1d65b5c81_Sema*, jule::Ptr<_1d659590e_ImportInfo>*);
inline jule::Bool _1d65bb9ac_checkImportSelections(_1d65b5c81_Sema*, jule::Ptr<_1d659590e_ImportInfo>*);
inline jule::Bool _1d65bbced_isUseAliasDuplication(_1d65b5c81_Sema*, jule::Ptr<_1d659590e_ImportInfo>*);
inline jule::Bool _1d65bc13e_checkImport(_1d65b5c81_Sema*, jule::Ptr<_1d659590e_ImportInfo>*);
inline void _1d65bc33c_checkImports(_1d65b5c81_Sema*);
inline void _1d65bc53a_implFileImpls(jule::Ptr<_1d65b5c81_Sema>);
inline void _1d65bc738_implImpls(jule::Ptr<_1d65b5c81_Sema>);
inline void _1d65bc936_checkEnums(jule::Ptr<_1d65b5c81_Sema>);
inline void _1d65bcb34_checkFileInherits(jule::Ptr<_1d65b5c81_Sema>);
inline void _1d65bcd32_checkInherits(jule::Ptr<_1d65b5c81_Sema>);
inline _1d66898e3_typeChecker _1d65bd2d8_typeChecker(jule::Ptr<_1d65b5c81_Sema>, jule::Trait<_1d669756b_Lookup>, jule::Slice<jule::Ptr<_1d6676c43_TypeAlias>>, jule::Ptr<_1d6688903_referencer>);
inline jule::Ptr<_1d6677a35_TypeKind> _1d65bd849_buildTypeWithRefers(jule::Ptr<_1d65b5c81_Sema>, jule::Ptr<_1d64eb3d1_TypeDecl>*, jule::Trait<_1d669756b_Lookup>, jule::Slice<jule::Ptr<_1d6676c43_TypeAlias>>, jule::Ptr<_1d6688903_referencer>);
inline jule::Bool _1d65bddaa_checkTypeWithRefers(jule::Ptr<_1d65b5c81_Sema>, jule::Ptr<_1d667ec07_TypeSymbol>*, jule::Trait<_1d669756b_Lookup>, jule::Slice<jule::Ptr<_1d6676c43_TypeAlias>>, jule::Ptr<_1d6688903_referencer>);
inline jule::Ptr<_1d656b86e_constraintChecker> _1d65be141_constraintChecker(jule::Ptr<_1d65b5c81_Sema>);
inline jule::Bool _1d65be53c_checkType(jule::Ptr<_1d65b5c81_Sema>, jule::Ptr<_1d667ec07_TypeSymbol>*, jule::Trait<_1d669756b_Lookup>);
inline jule::Ptr<_1d6677a35_TypeKind> _1d65be9e3_buildTypeWithGenerics(jule::Ptr<_1d65b5c81_Sema>, jule::Ptr<_1d64eb3d1_TypeDecl>*, jule::Slice<jule::Ptr<_1d6676c43_TypeAlias>>, jule::Ptr<_1d6538341_ReferenceStack>);
inline jule::Ptr<_1d6677a35_TypeKind> _1d65c0175_selectType(jule::Ptr<_1d65b5c81_Sema>, jule::Ptr<_1d64eb3d1_TypeDecl>*);
inline jule::Ptr<_1d6648e13_Eval> _1d65c062b_evalpd(jule::Ptr<_1d65b5c81_Sema>, jule::Trait<_1d669756b_Lookup>, jule::Ptr<_1d6677a35_TypeKind>, jule::Ptr<_1d65d9018_Var>);
inline jule::Ptr<_1d6648e13_Eval> _1d65c0a27_evalp(jule::Ptr<_1d65b5c81_Sema>, jule::Trait<_1d669756b_Lookup>, jule::Ptr<_1d6677a35_TypeKind>);
inline jule::Ptr<_1d6648e13_Eval> _1d65c0d68_eval(jule::Ptr<_1d65b5c81_Sema>, jule::Trait<_1d669756b_Lookup>);
inline jule::Bool _1d65c13c9_checkAssignType(jule::Ptr<_1d65b5c81_Sema>, jule::Bool, jule::Ptr<_1d6677a35_TypeKind>*, jule::Ptr<_1d664721e_Data>*, jule::Ptr<_1d64d5cd3_Token>);
inline jule::Bool _1d65c1880__checkTypeCompatibility(jule::Ptr<_1d65b5c81_Sema>, jule::Ptr<_1d6677a35_TypeKind>*, jule::Ptr<_1d6677a35_TypeKind>*, jule::Ptr<_1d64d5cd3_Token>);
inline jule::Bool _1d65c1d36_checkTypeCompatibility(jule::Ptr<_1d65b5c81_Sema>, jule::Ptr<_1d6677a35_TypeKind>*, jule::Ptr<_1d6677a35_TypeKind>*, jule::Ptr<_1d64d5cd3_Token>*);
inline void _1d65c2254_pushCompatiblityError(_1d65b5c81_Sema*, jule::Ptr<_1d6677a35_TypeKind>*, jule::Ptr<_1d664721e_Data>*, jule::Ptr<_1d64d5cd3_Token>*);
inline jule::Bool _1d65c270a_checkTypeCompatibility1(jule::Ptr<_1d65b5c81_Sema>, jule::Ptr<_1d6677a35_TypeKind>*, jule::Ptr<_1d664721e_Data>*, jule::Ptr<_1d64d5cd3_Token>*);
inline jule::Ptr<_1d6677a35_TypeKind> _1d65c2bb1_buildNonGenericTypeKind(jule::Ptr<_1d65b5c81_Sema>, jule::Ptr<_1d64eb3d1_TypeDecl>*, jule::Slice<jule::Ptr<_1d65085db_GenericDecl>>*, jule::Slice<jule::Ptr<_1d6677a35_TypeKind>>*);
inline jule::Bool _1d65c30ac_buildFnNonGenericTypeKinds(jule::Ptr<_1d65b5c81_Sema>, jule::Ptr<_1d6535173_FnIns>*, jule::Slice<jule::Ptr<_1d6677a35_TypeKind>>*);
inline jule::Ptr<_1d6535173_FnIns> _1d65c33ed_getTraitCheckFnKind(jule::Ptr<_1d65b5c81_Sema>, jule::Ptr<_1d653226e_Fn>*);
inline jule::Bool _1d65c38a4_checkConstraintsFn(jule::Ptr<_1d65b5c81_Sema>, jule::Ptr<_1d6535173_FnIns>*, jule::Ptr<_1d64d5cd3_Token>*, jule::Ptr<_1d6535173_FnIns>);
inline jule::Bool _1d65c3d5a_checkConstraintsStruct(jule::Ptr<_1d65b5c81_Sema>, jule::Ptr<_1d652005e_StructIns>*, jule::Ptr<_1d64d5cd3_Token>*, jule::Ptr<_1d652005e_StructIns>);
inline jule::Bool _1d65c4256_fnEnvironment(jule::Ptr<_1d65b5c81_Sema>, jule::Ptr<_1d6535173_FnIns>*, jule::Fn<jule::Bool(jule::Ptr<_1d65b5c81_Sema>*,jule::Slice<jule::Ptr<_1d6676c43_TypeAlias>>*)>);
inline void _1d65c450e_checkFnParamKind(jule::Ptr<_1d65b5c81_Sema>, jule::Ptr<_1d65341c7_ParamIns>*);
inline jule::Bool _1d65c4850_reloadFnInsTypes(jule::Ptr<_1d65b5c81_Sema>, jule::Ptr<_1d6535173_FnIns>);
inline jule::Bool _1d65c4d06_checkRefValidityForInitExpr(jule::Ptr<_1d65b5c81_Sema>, jule::Bool, jule::Ptr<_1d664721e_Data>*, jule::Ptr<_1d64d5cd3_Token>*);
inline jule::Bool _1d65c5147_isMutRiskyStruct(_1d65b5c81_Sema*, jule::Ptr<_1d652005e_StructIns>*);
inline jule::Bool _1d65c5763_checkValidityForInitExpr(jule::Ptr<_1d65b5c81_Sema>, jule::Bool, jule::Bool, jule::Ptr<_1d6677a35_TypeKind>*, jule::Ptr<_1d664721e_Data>*, jule::Ptr<_1d64d5cd3_Token>*);
inline jule::Bool _1d65c5b5e_checkTypeAliasDeclKind(jule::Ptr<_1d65b5c81_Sema>, jule::Ptr<_1d6676c43_TypeAlias>*, jule::Trait<_1d669756b_Lookup>);
inline void _1d65c5ec2_checkTypeAliasDecl(jule::Ptr<_1d65b5c81_Sema>, jule::Ptr<_1d6676c43_TypeAlias>*, jule::Trait<_1d669756b_Lookup>);
inline void _1d65c627a_checkTypeAliasDeclDup(jule::Ptr<_1d65b5c81_Sema>, jule::Ptr<_1d6676c43_TypeAlias>*);
inline jule::Bool _1d65c6511_checkTypeAliasDecls(jule::Ptr<_1d65b5c81_Sema>);
inline void _1d9bab3b7_checkEnumItemsDup(_1d65b5c81_Sema*, jule::Slice<jule::Ptr<_1d65471da_EnumItem>>);
inline void _1d9bb8380_checkEnumItemsDup(_1d65b5c81_Sema*, jule::Slice<jule::Ptr<_1d6548d8a_TypeEnumItem>>);
inline void _1d65c6a72_checkEnumItemsStr(jule::Ptr<_1d65b5c81_Sema>, jule::Ptr<_1d6547c57_Enum>*);
inline void _1d9b8bc6b_checkEnumItemInt(jule::Ptr<_1d65b5c81_Sema>, jule::Ptr<_1d6648e13_Eval>*, jule::Ptr<_1d6547c57_Enum>*, jule::Ptr<_1d668060e_Prim>*, jule::Ptr<_1d65471da_EnumItem>*, jule::U64*);
inline void _1d9b9bdd0_checkEnumItemInt(jule::Ptr<_1d65b5c81_Sema>, jule::Ptr<_1d6648e13_Eval>*, jule::Ptr<_1d6547c57_Enum>*, jule::Ptr<_1d668060e_Prim>*, jule::Ptr<_1d65471da_EnumItem>*, jule::I64*);
inline void _1d9b87e43_checkEnumItemsInt1(jule::Ptr<_1d65b5c81_Sema>, jule::Ptr<_1d668060e_Prim>*, jule::Ptr<_1d6547c57_Enum>*);
inline void _1d9b98ecb_checkEnumItemsInt1(jule::Ptr<_1d65b5c81_Sema>, jule::Ptr<_1d668060e_Prim>*, jule::Ptr<_1d6547c57_Enum>*);
inline void _1d65c7721_checkEnumItemsInt(jule::Ptr<_1d65b5c81_Sema>, jule::Ptr<_1d6547c57_Enum>*);
inline void _1d65c79c9_checkEnumDecl(jule::Ptr<_1d65b5c81_Sema>, jule::Ptr<_1d6547c57_Enum>*);
inline void _1d65c7c82_checkTypeEnumDecl(jule::Ptr<_1d65b5c81_Sema>, jule::Ptr<_1d6549462_TypeEnum>*);
inline jule::Bool _1d65c8018_checkEnumDecls(jule::Ptr<_1d65b5c81_Sema>);
inline jule::Bool _1d65c829e_checkTypeEnumDecls(jule::Ptr<_1d65b5c81_Sema>);
inline jule::Bool _1d65c85e0_checkDeclGenerics(_1d65b5c81_Sema*, jule::Slice<jule::Ptr<_1d65085db_GenericDecl>>*);
inline jule::Bool _1d65c8931_checkFnDeclParamsDup(_1d65b5c81_Sema*, jule::Ptr<_1d653226e_Fn>*);
inline jule::Bool _1d65c8c72_checkFnDeclResultDup(_1d65b5c81_Sema*, jule::Ptr<_1d653226e_Fn>*);
inline jule::Bool _1d65c90b3_checkFnVariadicParam(jule::Ptr<_1d65b5c81_Sema>, jule::Ptr<_1d653226e_Fn>*);
inline void _1d65c936b_checkFnDeclPrototype(jule::Ptr<_1d65b5c81_Sema>, jule::Ptr<_1d653226e_Fn>*);
inline jule::Bool _1d65c9822_catchTraitInheritCycle(jule::Ptr<_1d65b5c81_Sema>, jule::Ptr<_1d654554b_Trait>, jule::Ptr<_1d654554b_Trait>, _1e01838bc_StrBuilder*);
inline jule::Bool _1d65c9b63__checkTraitDeclInherits(jule::Ptr<_1d65b5c81_Sema>, jule::Ptr<_1d654554b_Trait>*);
inline void _1d65c9e1b_checkTraitDeclInherits(jule::Ptr<_1d65b5c81_Sema>, jule::Ptr<_1d654554b_Trait>*);
inline void _1d65ca1c4_checkTraitDeclMethod(jule::Ptr<_1d65b5c81_Sema>, jule::Ptr<_1d653226e_Fn>*);
inline void _1d65ca47c_checkTraitDeclMethods(jule::Ptr<_1d65b5c81_Sema>, jule::Ptr<_1d654554b_Trait>*);
inline void _1d65ca735_checkTraitDecl(jule::Ptr<_1d65b5c81_Sema>, jule::Ptr<_1d654554b_Trait>*);
inline jule::Bool _1d65ca9bb_checkTraitDecls(jule::Ptr<_1d65b5c81_Sema>);
inline jule::Bool _1d65cadb7_checkTraitImplMethods(_1d65b5c81_Sema*, jule::Ptr<_1d654554b_Trait>*, jule::Ptr<_1d656dbc3_Impl>*);
inline jule::Bool _1d65cb2b3_implToStruct(jule::Ptr<_1d65b5c81_Sema>, jule::Ptr<_1d651c2d1_Struct>*, jule::Ptr<_1d656dbc3_Impl>*);
inline void _1d65cb56b_implTrait(jule::Ptr<_1d65b5c81_Sema>, jule::Ptr<_1d656dbc3_Impl>*);
inline void _1d65cb824_implStruct(jule::Ptr<_1d65b5c81_Sema>, jule::Ptr<_1d656dbc3_Impl>*);
inline void _1d65cbacc_implImpl(jule::Ptr<_1d65b5c81_Sema>, jule::Ptr<_1d656dbc3_Impl>*);
inline void _1d65cbe40_checkVarDecl(jule::Ptr<_1d65b5c81_Sema>, jule::Ptr<_1d65d9018_Var>*, jule::Trait<_1d669756b_Lookup>);
inline void _1d65cc1e8_checkGlobalVarDecl(jule::Ptr<_1d65b5c81_Sema>, jule::Ptr<_1d65d9018_Var>*);
inline jule::Bool _1d65cc47e_checkGlobalDecls(jule::Ptr<_1d65b5c81_Sema>);
inline jule::Bool _1d65cc87a_checkStructTraitImpl(jule::Ptr<_1d65b5c81_Sema>, jule::Ptr<_1d651c2d1_Struct>*, jule::Ptr<_1d654554b_Trait>*);
inline jule::Bool _1d65ccbbb_checkStructImpls(jule::Ptr<_1d65b5c81_Sema>, jule::Ptr<_1d651c2d1_Struct>*);
inline jule::Bool _1d65cd00c_checkStructFields(jule::Ptr<_1d65b5c81_Sema>, jule::Ptr<_1d651c2d1_Struct>*);
inline void _1d65cd2b5_checkStructDecl(jule::Ptr<_1d65b5c81_Sema>, jule::Ptr<_1d651c2d1_Struct>*);
inline jule::Bool _1d65cd54b_checkStructDecls(jule::Ptr<_1d65b5c81_Sema>);
inline void _1d65cd804_checkAnonFuncDecl(jule::Ptr<_1d65b5c81_Sema>, jule::Ptr<_1d653226e_Fn>*);
inline void _1d65cdaac_checkFuncDecl(jule::Ptr<_1d65b5c81_Sema>, jule::Ptr<_1d653226e_Fn>*);
inline jule::Bool _1d65cdded_checkFuncDeclsBy(jule::Ptr<_1d65b5c81_Sema>, jule::Slice<jule::Ptr<_1d653226e_Fn>>*);
inline jule::Bool _1d65ce184_checkFuncDecls(jule::Ptr<_1d65b5c81_Sema>);
inline void _1d65ce5a2_pushCycleError(_1d65b5c81_Sema*, jule::Str*, jule::Str*, _1e01838bc_StrBuilder*);
inline void _1d65cec56_checkPackageDecls(jule::Ptr<_1d65b5c81_Sema>);
inline void _1d65d00b9_checkDataForTypeInference(_1d65b5c81_Sema*, jule::Ptr<_1d664721e_Data>*, jule::Ptr<_1d64d5cd3_Token>*);
inline void _1d65d0372_checkVarValue(jule::Ptr<_1d65b5c81_Sema>, jule::Ptr<_1d65d9018_Var>*);
inline void _1d65d06d5_evalVarValue(jule::Ptr<_1d65b5c81_Sema>, jule::Ptr<_1d65d9018_Var>*, jule::Trait<_1d669756b_Lookup>);
inline void _1d65d0a48_checkVar(jule::Ptr<_1d65b5c81_Sema>, jule::Ptr<_1d65d9018_Var>*, jule::Trait<_1d669756b_Lookup>);
inline void _1d65d0c46_checkGlobals(jule::Ptr<_1d65b5c81_Sema>);
inline jule::Ptr<_1d6535173_FnIns> _1d65d1142_readyToCheckFn(jule::Ptr<_1d65b5c81_Sema>, jule::Ptr<_1d652005e_StructIns>*, jule::Ptr<_1d653226e_Fn>*);
inline void _1d65d14a5_checkTypeMethod(jule::Ptr<_1d65b5c81_Sema>, jule::Ptr<_1d652005e_StructIns>*, jule::Ptr<_1d653226e_Fn>*);
inline jule::Ptr<_1d6535173_FnIns> _1d65d195b_checkStructInsOp(jule::Ptr<_1d65b5c81_Sema>, jule::Ptr<_1d652005e_StructIns>*, jule::Ptr<_1d653226e_Fn>*, jule::Fn<jule::Bool(jule::Ptr<_1d653226e_Fn>)>);
inline jule::Bool _1d65d1d57_checkStructEnv(jule::Ptr<_1d65b5c81_Sema>, jule::Ptr<_1d652005e_StructIns>*, jule::Ptr<_1d64d5cd3_Token>);
inline jule::Bool _1d65d2253_precheckStructIns(jule::Ptr<_1d65b5c81_Sema>, jule::Ptr<_1d652005e_StructIns>*, jule::Ptr<_1d64d5cd3_Token>);
inline void _1d65d250b_checkStructIns(jule::Ptr<_1d65b5c81_Sema>, jule::Ptr<_1d652005e_StructIns>*);
inline void _1d65d27b4_checkTypeStruct(jule::Ptr<_1d65b5c81_Sema>, jule::Ptr<_1d651c2d1_Struct>*);
inline void _1d65d29b2_checkStructTypes(jule::Ptr<_1d65b5c81_Sema>);
inline void _1d65d2c6a_checkStructInsOperators(jule::Ptr<_1d65b5c81_Sema>, jule::Ptr<_1d652005e_StructIns>);
inline void _1d65d3023_precheckStructType(jule::Ptr<_1d65b5c81_Sema>, jule::Ptr<_1d651c2d1_Struct>*);
inline void _1d65d3221_precheckStructTypes(jule::Ptr<_1d65b5c81_Sema>);
inline void _1d65d34c9_checkRets(_1d65b5c81_Sema*, jule::Ptr<_1d6535173_FnIns>*);
inline void _1d65d383c_checkFnInsSc(_1d65b5c81_Sema*, jule::Ptr<_1d6535173_FnIns>*, jule::Ptr<_1d657b42d_scopeChecker>*);
inline void _1d65d3ba0_checkFnInsCaller(jule::Ptr<_1d65b5c81_Sema>, jule::Ptr<_1d6535173_FnIns>*, jule::Ptr<_1d64d5cd3_Token>);
inline void _1d65d3e58_checkFnIns(jule::Ptr<_1d65b5c81_Sema>, jule::Ptr<_1d6535173_FnIns>*);
inline void _1d65d4211_checkFunc(jule::Ptr<_1d65b5c81_Sema>, jule::Ptr<_1d653226e_Fn>*);
inline void _1d65d44b9_checkTestFn(_1d65b5c81_Sema*, jule::Ptr<_1d6535173_FnIns>*);
inline void _1d65d4772_precheckFunc(jule::Ptr<_1d65b5c81_Sema>, jule::Ptr<_1d653226e_Fn>*);
inline void _1d65d4970_precheckFuncs(jule::Ptr<_1d65b5c81_Sema>);
inline void _1d65d4b6d_checkFuncs(jule::Ptr<_1d65b5c81_Sema>);
inline void _1d65d4d6b_checkPackageTypes(jule::Ptr<_1d65b5c81_Sema>);
inline void _1d65d5069_setFileSemaFields(jule::Ptr<_1d65b5c81_Sema>);
inline void _1d65d5267_setSemaFields(jule::Ptr<_1d65b5c81_Sema>);
inline void _1d65d5520_check(jule::Ptr<_1d65b5c81_Sema>, jule::Slice<jule::Ptr<_1d6641d73_SymbolTable>>*);
inline _1d65d594e_missingRetChecker static__1d65d5d17_new(void);
inline jule::Bool _1d65d6125_checkConditional(_1d65d594e_missingRetChecker*, jule::Ptr<_1d6574c62_Conditional>);
inline jule::Bool _1d65d6466_checkMatch(_1d65d594e_missingRetChecker*, jule::Ptr<_1d6578260_Match>);
inline jule::Bool _1d65d67a7_checkInfIter(_1d65d594e_missingRetChecker*, jule::Ptr<_1d657505e_InfIter>);
inline jule::Bool _1d65d6ae8_checkScope(_1d65d594e_missingRetChecker*, jule::Ptr<_1d6574129_Scope>);
inline jule::Bool _1d65d6e39_check(_1d65d594e_missingRetChecker*, jule::Ptr<_1d6574129_Scope>);
inline jule::Bool _1d65d939d_IsInitialized(_1d65d9018_Var*);
inline jule::Bool _1d65d9634_IsTypeInferred(_1d65d9018_Var*);
inline jule::Bool _1d65d98ba_untypedConstant(_1d65d9018_Var*);
inline jule::Bool static__1d65da46a_Dispose(jule::Ptr<_1d653226e_Fn>);
inline jule::Bool static__1d65da734_Str(jule::Ptr<_1d653226e_Fn>);
inline jule::Bool static__1d65daaa8_logical(jule::Ptr<_1d653226e_Fn>*, jule::Str);
inline jule::Bool static__1d65dad72_Eq(jule::Ptr<_1d653226e_Fn>);
inline jule::Bool static__1d65db13b_Gt(jule::Ptr<_1d653226e_Fn>);
inline jule::Bool static__1d65db405_GtEq(jule::Ptr<_1d653226e_Fn>);
inline jule::Bool static__1d65db6be_Lt(jule::Ptr<_1d653226e_Fn>);
inline jule::Bool static__1d65db988_LtEq(jule::Ptr<_1d653226e_Fn>);
inline jule::Bool static__1d65dbd0c_result(jule::Ptr<_1d653226e_Fn>*, jule::Str);
inline jule::Bool static__1d65dc0c6_Shl(jule::Ptr<_1d653226e_Fn>);
inline jule::Bool static__1d65dc390_Shr(jule::Ptr<_1d653226e_Fn>);
inline jule::Bool static__1d65dc659_Add(jule::Ptr<_1d653226e_Fn>);
inline jule::Bool static__1d65dc923_Sub(jule::Ptr<_1d653226e_Fn>);
inline jule::Bool static__1d65dcbdc_Div(jule::Ptr<_1d653226e_Fn>);
inline jule::Bool static__1d65dcea6_Mul(jule::Ptr<_1d653226e_Fn>);
inline jule::Bool static__1d65dd270_Mod(jule::Ptr<_1d653226e_Fn>);
inline jule::Bool static__1d65dd539_BitAnd(jule::Ptr<_1d653226e_Fn>);
inline jule::Bool static__1d65dd803_BitOr(jule::Ptr<_1d653226e_Fn>);
inline jule::Bool static__1d65ddabc_BitXor(jule::Ptr<_1d653226e_Fn>);
inline jule::Bool static__1d65dde41_unary(jule::Ptr<_1d653226e_Fn>*, jule::Str);
inline jule::Bool static__1d65de20a_Neg(jule::Ptr<_1d653226e_Fn>);
inline jule::Bool static__1d65de4c4_Pos(jule::Ptr<_1d653226e_Fn>);
inline jule::Bool static__1d65de78d_BitNot(jule::Ptr<_1d653226e_Fn>);
inline jule::Bool static__1d65deb12_assign(jule::Ptr<_1d653226e_Fn>*, jule::Str);
inline jule::Bool static__1d65dedcb_AddAssign(jule::Ptr<_1d653226e_Fn>);
inline jule::Bool static__1d65e0195_SubAssign(jule::Ptr<_1d653226e_Fn>);
inline jule::Bool static__1d65e045e_DivAssign(jule::Ptr<_1d653226e_Fn>);
inline jule::Bool static__1d65e0728_MulAssign(jule::Ptr<_1d653226e_Fn>);
inline jule::Bool static__1d65e09e2_ModAssign(jule::Ptr<_1d653226e_Fn>);
inline jule::Bool static__1d65e0cab_ShlAssign(jule::Ptr<_1d653226e_Fn>);
inline jule::Bool static__1d65e1075_ShrAssign(jule::Ptr<_1d653226e_Fn>);
inline jule::Bool static__1d65e133e_BitOrAssign(jule::Ptr<_1d653226e_Fn>);
inline jule::Bool static__1d65e1608_BitAndAssign(jule::Ptr<_1d653226e_Fn>);
inline jule::Bool static__1d65e18c2_BitXorAssign(jule::Ptr<_1d653226e_Fn>);
inline void _1d662e646_pushErr(_1d662e14b_typeCompatibilityChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1d662e8cc_checkTrait(_1d662e14b_typeCompatibilityChecker*);
inline jule::Bool _1d662eb63_checkPtr(_1d662e14b_typeCompatibilityChecker*);
inline jule::Bool _1d662ede9_checkPrim(_1d662e14b_typeCompatibilityChecker*);
inline jule::Bool _1d66302e5_typeEnum(_1d662e14b_typeCompatibilityChecker*, jule::Ptr<_1d6549462_TypeEnum>*, jule::Ptr<_1d6677a35_TypeKind>*);
inline jule::Bool _1d663057b_checkTypeEnum(_1d662e14b_typeCompatibilityChecker*);
inline jule::Bool _1d6630812_check(_1d662e14b_typeCompatibilityChecker*);
inline void _1d663137e_pushErr(_1d6630dea_assignTypeChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1d6631615_checkValidity(_1d6630dea_assignTypeChecker*);
inline jule::Bool _1d663189b_checkConst(_1d6630dea_assignTypeChecker*);
inline jule::Bool _1d6631b32_checkCompatibility(_1d6630dea_assignTypeChecker*);
inline jule::Bool _1d6631db8_check(_1d6630dea_assignTypeChecker*);
inline jule::Bool _1d9d8e4e0_annotateConstraintElem(_1d66327c0_dynamicTypeAnnotation*, jule::Ptr<_1d6677a35_TypeKind>*);
inline jule::Bool _1d9d8e90d_annotateConstraintElem(_1d66327c0_dynamicTypeAnnotation*, jule::Ptr<_1d6677a35_TypeKind>*);
inline jule::Bool _1d9d90ed6_annotateConstraintElem(_1d66327c0_dynamicTypeAnnotation*, jule::Ptr<_1d6677a35_TypeKind>*);
inline jule::Bool _1d9d9753c_annotateConstraintElem(_1d66327c0_dynamicTypeAnnotation*, jule::Ptr<_1d6677a35_TypeKind>*);
inline jule::Bool _1d66331b6_annotateConstraintMap(_1d66327c0_dynamicTypeAnnotation*, jule::Ptr<_1d6677a35_TypeKind>*);
inline jule::Bool _1d6633507_annotateConstraintTup(_1d66327c0_dynamicTypeAnnotation*, jule::Ptr<_1d6677a35_TypeKind>*);
inline jule::Bool _1d6633848_annotateConstraintFn(_1d66327c0_dynamicTypeAnnotation*, jule::Ptr<_1d6677a35_TypeKind>*);
inline jule::Bool _1d6633b89_annotateConstraintIdent(_1d66327c0_dynamicTypeAnnotation*, jule::Ptr<_1d6677a35_TypeKind>*);
inline jule::Bool _1d6633eca_annotateConstraint(_1d66327c0_dynamicTypeAnnotation*, jule::Ptr<_1d6677a35_TypeKind>*);
inline void _1d663433d_pushGeneric(_1d66327c0_dynamicTypeAnnotation*, jule::Ptr<_1d6677a35_TypeKind>*, jule::I64);
inline jule::Bool _1d663467e_annotatePrim(_1d66327c0_dynamicTypeAnnotation*, jule::Ptr<_1d6677a35_TypeKind>*);
inline jule::Bool _1d66349c0_annotateArr(_1d66327c0_dynamicTypeAnnotation*, jule::Ptr<_1d6677a35_TypeKind>*);
inline jule::Bool _1d6634d11_annotateSlc(_1d66327c0_dynamicTypeAnnotation*, jule::Ptr<_1d6677a35_TypeKind>*);
inline jule::Bool _1d663520c_checkMapKey(_1d66327c0_dynamicTypeAnnotation*, jule::Ptr<_1d6677a35_TypeKind>*, jule::Ptr<_1d6677a35_TypeKind>*);
inline jule::Bool _1d663554d_annotateMap(_1d66327c0_dynamicTypeAnnotation*, jule::Ptr<_1d6677a35_TypeKind>*);
inline jule::Bool _1d663588e_annotateFn(_1d66327c0_dynamicTypeAnnotation*, jule::Ptr<_1d6677a35_TypeKind>*);
inline jule::Bool _1d6635bd0_annotatePtr(_1d66327c0_dynamicTypeAnnotation*, jule::Ptr<_1d6677a35_TypeKind>*);
inline jule::Bool _1d6636021_annotateSptr(_1d66327c0_dynamicTypeAnnotation*, jule::Ptr<_1d6677a35_TypeKind>*);
inline jule::Bool _1d6636362_annotateStruct(_1d66327c0_dynamicTypeAnnotation*, jule::Ptr<_1d6677a35_TypeKind>*);
inline jule::Bool _1d66366a3_annotateAny(_1d66327c0_dynamicTypeAnnotation*, jule::Ptr<_1d6677a35_TypeKind>*);
inline jule::Bool _1d66369e4_annotateKind(_1d66327c0_dynamicTypeAnnotation*, jule::Ptr<_1d6677a35_TypeKind>*);
inline jule::Bool _1d6636c7a_annotate(_1d66327c0_dynamicTypeAnnotation*);
inline void _1d6637bc1_pushErrToken(_1d663762c_fnCallArgChecker*, jule::Ptr<_1d64d5cd3_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1d6638034_pushErr(_1d663762c_fnCallArgChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1d65341c7_ParamIns>> _1d66382ba_getParams(_1d663762c_fnCallArgChecker*);
inline jule::Bool _1d66385c8_checkCounts(_1d663762c_fnCallArgChecker*, jule::Slice<jule::Ptr<_1d65341c7_ParamIns>>*);
inline jule::Bool _1d6638a7e_checkArg(_1d663762c_fnCallArgChecker*, jule::Ptr<_1d65341c7_ParamIns>*, jule::Ptr<_1d664721e_Data>*, jule::Ptr<_1d64d5cd3_Token>*);
inline jule::Bool _1d6638e7a_push(_1d663762c_fnCallArgChecker*, jule::Ptr<_1d65341c7_ParamIns>*, jule::Ptr<_1d6500715_Expr>);
inline jule::Bool _1d6639376_pushVariadic(_1d663762c_fnCallArgChecker*, jule::Ptr<_1d65341c7_ParamIns>*, jule::I64);
inline jule::Bool _1d66396b7_checkArgs(_1d663762c_fnCallArgChecker*, jule::Slice<jule::Ptr<_1d65341c7_ParamIns>>*);
inline jule::Bool _1d663994d_checkDynamicTypeAnnotation(_1d663762c_fnCallArgChecker*);
inline jule::Bool _1d6639bd4_check(_1d663762c_fnCallArgChecker*);
inline void _1d663aab4_pushErr(_1d663a564_structLitChecker*, jule::Ptr<_1d64d5cd3_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1d663ae27_pushSuggestion(_1d663a564_structLitChecker*, jule::Str, jule::Slice<jule::Any>);
inline void _1d663b345_pushMatch(_1d663a564_structLitChecker*, jule::Ptr<_1d651e4ae_FieldIns>*, jule::Ptr<_1d664721e_Data>*, jule::Ptr<_1d64d5cd3_Token>*);
inline void _1d663b6a8_checkPair(_1d663a564_structLitChecker*, jule::Ptr<_1d6504e34_FieldExprPair>*, jule::Slice<jule::Ptr<_1d6500715_Expr>>*);
inline jule::Bool _1d663b9e9_readyExprs(_1d663a564_structLitChecker*, jule::Slice<jule::Ptr<_1d6500715_Expr>>*);
inline void _1d663bca2_check(_1d663a564_structLitChecker*, jule::Slice<jule::Ptr<_1d6500715_Expr>>*);
inline jule::Ptr<_1d65d9018_Var> _1d663c830_buildVar(_1d663c346_rangeChecker*, jule::Ptr<_1d650e24b_VarDecl>*);
inline void _1d663ca2d_setSizeKey(_1d663c346_rangeChecker*);
inline void _1d663ce4b_checkRangeExprValidity(_1d663c346_rangeChecker*, jule::Ptr<_1d664721e_Data>*, jule::Ptr<_1d65d9018_Var>*, jule::Ptr<_1d6677a35_TypeKind>*);
inline void _1d663d149_checkSlice(_1d663c346_rangeChecker*);
inline void _1d663d347_checkArray(_1d663c346_rangeChecker*);
inline void _1d663d545_checkMapKeyA(_1d663c346_rangeChecker*);
inline void _1d663d743_checkMapKeyB(_1d663c346_rangeChecker*);
inline void _1d663d941_checkMap(_1d663c346_rangeChecker*);
inline void _1d663db3e_checkStr(_1d663c346_rangeChecker*);
inline void _1d663dd3c_checkComptime(_1d663c346_rangeChecker*);
inline jule::Bool _1d663e0c3_checkComptimeRange(_1d663c346_rangeChecker*);
inline jule::Bool _1d663e359_check(_1d663c346_rangeChecker*);
inline void _1d663eec5_prepareTypes(_1d663eaa7_retTypeChecker*);
inline void _1d664027d_prepareExprs(_1d663eaa7_retTypeChecker*, jule::Ptr<_1d6500715_Expr>*);
inline void _1d664047b_checkExprs(_1d663eaa7_retTypeChecker*);
inline jule::Bool _1d66407bc_check(_1d663eaa7_retTypeChecker*, jule::Ptr<_1d6500715_Expr>*);
inline jule::Ptr<_1d659590e_ImportInfo> _1d664235c_SelectPackage(_1d6641d73_SymbolTable*, jule::Fn<jule::Bool(jule::Ptr<_1d659590e_ImportInfo>)>);
inline jule::Ptr<_1d65d9018_Var> _1d6642758_FindVar(_1d6641d73_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1d6676c43_TypeAlias> _1d6642b54_FindTypeAlias(_1d6641d73_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1d651c2d1_Struct> _1d6643050_FindStruct(_1d6641d73_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1d653226e_Fn> _1d664344b_FindFn(_1d6641d73_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1d654554b_Trait> _1d664378c_FindTrait(_1d6641d73_SymbolTable*, jule::Str);
inline jule::Ptr<_1d6547c57_Enum> _1d6643acd_FindEnum(_1d6641d73_SymbolTable*, jule::Str);
inline jule::Ptr<_1d6549462_TypeEnum> _1d6643e1e_FindTypeEnum(_1d6641d73_SymbolTable*, jule::Str);
inline jule::Ptr<_1d65d9018_Var> _1d664453a_findVar(_1d6641d73_SymbolTable*, jule::Str*, jule::Bool, jule::Bool);
inline jule::Ptr<_1d6676c43_TypeAlias> _1d66449e1_findTypeAlias(_1d6641d73_SymbolTable*, jule::Str*, jule::Bool, jule::Bool);
inline jule::Any _1d6644ddc_defByIdent(_1d6641d73_SymbolTable*, jule::Str*, jule::Bool);
inline jule::Bool _1d6645393_isDuplicatedIdent(_1d6641d73_SymbolTable*, jule::Uintptr, jule::Str*, jule::Bool);
inline jule::Bool _1d66475c6_IsNil(_1d664721e_Data*);
inline jule::Bool _1d664785c_IsVoid(_1d664721e_Data*);
inline jule::Bool _1d6647ae3_IsConst(_1d664721e_Data*);
inline jule::Bool _1d6647e34_GoodOperand(_1d664721e_Data*, jule::Ptr<_1d664721e_Data>*);
inline void _1d6649463_pushErr(_1d6648e13_Eval*, jule::Ptr<_1d64d5cd3_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1d66497c6_pushSuggestion(_1d6648e13_Eval*, jule::Str, jule::Slice<jule::Any>);
inline void _1d66499c4_allowBuiltin(_1d6648e13_Eval*);
inline void _1d6649bc2_disallowBuiltin(_1d6648e13_Eval*);
inline jule::Bool _1d6649e58_isUnsafe(_1d6648e13_Eval*);
inline jule::Bool _1d664a1de_isGlobal(_1d6648e13_Eval*);
inline jule::Bool _1d664a4ec_applyNumericPrefix(_1d6648e13_Eval*, jule::Ptr<_1d664721e_Data>*);
inline jule::Ptr<_1d664721e_Data> _1d664a83d_litStr(_1d6648e13_Eval*, jule::Ptr<_1d65017b0_LitExpr>*);
inline jule::Ptr<_1d664721e_Data> _1d664ab7e_litRune(_1d6648e13_Eval*, jule::Ptr<_1d65017b0_LitExpr>*);
inline jule::Ptr<_1d664721e_Data> _1d664aec0_litFloat(_1d6648e13_Eval*, jule::Ptr<_1d65017b0_LitExpr>*);
inline jule::Ptr<_1d664721e_Data> _1d664b311_litInt(_1d6648e13_Eval*, jule::Ptr<_1d65017b0_LitExpr>*);
inline jule::Ptr<_1d664721e_Data> _1d664b652_litNum(_1d6648e13_Eval*, jule::Ptr<_1d65017b0_LitExpr>*);
inline jule::Ptr<_1d664721e_Data> _1d664b993_evalLit(_1d6648e13_Eval*, jule::Ptr<_1d65017b0_LitExpr>);
inline jule::Any _1d664bcd4_findBuiltins(_1d6648e13_Eval*, jule::Str*);
inline jule::Any _1d664c1d0_getDef(_1d6648e13_Eval*, jule::Str*, jule::Bool);
inline jule::Ptr<_1d6538341_ReferenceStack> _1d664c466_getOwnerRefers(_1d6648e13_Eval*);
inline void _1da00bd44_pushReference(_1d6648e13_Eval*, jule::Ptr<_1d6535173_FnIns>*);
inline void _1da0215c8_pushReference(_1d6648e13_Eval*, jule::Ptr<_1d65d9018_Var>*);
inline void _1da0d2216_pushReference(_1d6648e13_Eval*, jule::Ptr<_1d652005e_StructIns>*);
inline jule::Ptr<_1d664721e_Data> _1d664ca60__evalEnum(_1d6648e13_Eval*, jule::Ptr<_1d6547c57_Enum>);
inline jule::Ptr<_1d664721e_Data> _1d664ce5b_evalEnum(_1d6648e13_Eval*, jule::Ptr<_1d6547c57_Enum>, jule::Ptr<_1d64d5cd3_Token>);
inline jule::Ptr<_1d664721e_Data> _1d664d29c__evalTypeEnum(_1d6648e13_Eval*, jule::Ptr<_1d6549462_TypeEnum>);
inline jule::Ptr<_1d664721e_Data> _1d664d698_evalTypeEnum(_1d6648e13_Eval*, jule::Ptr<_1d6549462_TypeEnum>, jule::Ptr<_1d64d5cd3_Token>);
inline jule::Ptr<_1d664721e_Data> _1d664d9d9__evalStruct(_1d6648e13_Eval*, jule::Ptr<_1d652005e_StructIns>);
inline jule::Ptr<_1d664721e_Data> _1d664ddd5_evalStruct(_1d6648e13_Eval*, jule::Ptr<_1d652005e_StructIns>, jule::Ptr<_1d64d5cd3_Token>);
inline jule::Ptr<_1d664721e_Data> _1d664e226_evalFnIns(_1d6648e13_Eval*, jule::Ptr<_1d6535173_FnIns>);
inline void _1d664e589_checkDeprecated(_1d6648e13_Eval*, jule::Slice<jule::Ptr<_1d64ea7ed_Directive>>*, jule::Ptr<_1d64d5cd3_Token>);
inline jule::Ptr<_1d664721e_Data> _1d664e985_evalFn(_1d6648e13_Eval*, jule::Ptr<_1d653226e_Fn>, jule::Ptr<_1d64d5cd3_Token>);
inline void _1d664eda3_pushIllegalCycleError(_1d6648e13_Eval*, jule::Ptr<_1d65d9018_Var>*, jule::Ptr<_1d65d9018_Var>*, _1e01838bc_StrBuilder*);
inline jule::Bool _1d665029e_checkCrossCycle(_1d6648e13_Eval*, jule::Ptr<_1d65d9018_Var>*, _1e01838bc_StrBuilder*);
inline jule::Bool _1d665069a_checkIllegalCycles(_1d6648e13_Eval*, jule::Ptr<_1d65d9018_Var>*, jule::Ptr<_1d64d5cd3_Token>);
inline jule::Ptr<_1d664721e_Data> _1d6650a96_evalVar(_1d6648e13_Eval*, jule::Ptr<_1d65d9018_Var>, jule::Ptr<_1d64d5cd3_Token>);
inline jule::Ptr<_1d664721e_Data> _1d6650e92_evalTypeAlias(_1d6648e13_Eval*, jule::Ptr<_1d6676c43_TypeAlias>, jule::Ptr<_1d64d5cd3_Token>);
inline jule::Ptr<_1d664721e_Data> _1d665138d_evalDef(_1d6648e13_Eval*, jule::Any*, jule::Ptr<_1d64d5cd3_Token>);
inline jule::Ptr<_1d664721e_Data> _1d66516ce_evalIdent(_1d6648e13_Eval*, jule::Ptr<_1d6502140_IdentExpr>);
inline jule::Ptr<_1d664721e_Data> _1d6651a20_evalUnary(jule::Ptr<_1d6648e13_Eval>, jule::Ptr<_1d65027c2_UnaryExpr>);
inline jule::Ptr<_1d664721e_Data> _1d6651d61_evalVariadic(jule::Ptr<_1d6648e13_Eval>, jule::Ptr<_1d6502b9b_VariadicExpr>);
inline jule::Ptr<_1d664721e_Data> _1d66521a2_evalUnsafe(jule::Ptr<_1d6648e13_Eval>, jule::Ptr<_1d6501b89_UnsafeExpr>);
inline jule::Ptr<_1d664721e_Data> _1d66524e3_evalArr(jule::Ptr<_1d6648e13_Eval>, jule::Ptr<_1d6506c38_SliceExpr>);
inline jule::Ptr<_1d664721e_Data> _1d6652999_evalExpSlc(jule::Ptr<_1d6648e13_Eval>, jule::Ptr<_1d6506c38_SliceExpr>, jule::Ptr<_1d6677a35_TypeKind>, jule::Any);
inline jule::Ptr<_1d664721e_Data> _1d6652cda_evalSliceExpr(jule::Ptr<_1d6648e13_Eval>, jule::Ptr<_1d6506c38_SliceExpr>);
inline void _1d665314d_checkIntegerIndexingByData(_1d6648e13_Eval*, jule::Ptr<_1d664721e_Data>*, jule::Ptr<_1d64d5cd3_Token>);
inline void _1d665356b_indexingPtr(_1d6648e13_Eval*, jule::Ptr<_1d664721e_Data>*, jule::Ptr<_1d664721e_Data>*, jule::Ptr<_1d65076c8_IndexingExpr>*);
inline void _1d6653989_indexingArr(_1d6648e13_Eval*, jule::Ptr<_1d664721e_Data>*, jule::Ptr<_1d664721e_Data>*, jule::Ptr<_1d65076c8_IndexingExpr>*);
inline void _1d6653da7_indexingSlc(_1d6648e13_Eval*, jule::Ptr<_1d664721e_Data>*, jule::Ptr<_1d664721e_Data>*, jule::Ptr<_1d65076c8_IndexingExpr>*);
inline void _1d66542c5_indexingMap(_1d6648e13_Eval*, jule::Ptr<_1d664721e_Data>*, jule::Ptr<_1d664721e_Data>*, jule::Ptr<_1d65076c8_IndexingExpr>*);
inline void _1d66546e3_indexingStr(_1d6648e13_Eval*, jule::Ptr<_1d664721e_Data>*, jule::Ptr<_1d664721e_Data>*, jule::Ptr<_1d65076c8_IndexingExpr>*);
inline void _1d6654b11_toIndexing(_1d6648e13_Eval*, jule::Ptr<_1d664721e_Data>*, jule::Ptr<_1d664721e_Data>*, jule::Ptr<_1d65076c8_IndexingExpr>*);
inline jule::Bool _1d66550b7_pushGenericsFromExprSubIdent(jule::Ptr<_1d6648e13_Eval>, jule::Ptr<_1d6503828_SubIdentExpr>*, jule::Slice<jule::Ptr<_1d64eb3d1_TypeDecl>>*, jule::Ptr<_1d6500715_Expr>*);
inline jule::Bool _1d66554b3_pushGenericsFromData(jule::Ptr<_1d6648e13_Eval>, jule::Slice<jule::Ptr<_1d64eb3d1_TypeDecl>>*, jule::Ptr<_1d6500715_Expr>*);
inline void _1d6655826_evalIdentDeclFromIndexing(jule::Ptr<_1d6648e13_Eval>, jule::Ptr<_1d664721e_Data>*, jule::Ptr<_1d65076c8_IndexingExpr>*);
inline jule::Bool _1d6655ccc_checkGenericFn(jule::Ptr<_1d6648e13_Eval>, jule::Ptr<_1d6535173_FnIns>*, jule::Ptr<_1d64d5cd3_Token>*, jule::Any*);
inline void _1d6656140_evalFnGenericFromIndexing(jule::Ptr<_1d6648e13_Eval>, jule::Ptr<_1d664721e_Data>*, jule::Ptr<_1d65076c8_IndexingExpr>*);
inline jule::Ptr<_1d664721e_Data> _1d6656481_evalIndexing(jule::Ptr<_1d6648e13_Eval>, jule::Ptr<_1d65076c8_IndexingExpr>);
inline __jule_tuple_x_1d664721e_Data__jule_tuple_x_1d664721e_Data _1d66567c2_evalSlicingExprs(jule::Ptr<_1d6648e13_Eval>, jule::Ptr<_1d6507d38_SlicingExpr>*);
inline void _1d6656a7a_slicingArr(_1d6648e13_Eval*, jule::Ptr<_1d664721e_Data>*);
inline void _1d6656e98_slicingStr(_1d6648e13_Eval*, jule::Ptr<_1d664721e_Data>*, jule::Ptr<_1d664721e_Data>*, jule::Ptr<_1d664721e_Data>*);
inline void _1d6657471_checkSlicing(_1d6648e13_Eval*, jule::Ptr<_1d664721e_Data>*, jule::Ptr<_1d664721e_Data>*, jule::Ptr<_1d664721e_Data>*, jule::Ptr<_1d6507d38_SlicingExpr>*);
inline jule::Ptr<_1d664721e_Data> _1d66577b2_evalSlicing(jule::Ptr<_1d6648e13_Eval>, jule::Ptr<_1d6507d38_SlicingExpr>);
inline void _1d6657bd0_castPtr(_1d6648e13_Eval*, jule::Ptr<_1d6677a35_TypeKind>, jule::Ptr<_1d664721e_Data>, jule::Ptr<_1d64d5cd3_Token>);
inline void _1d66580ed_castStruct(_1d6648e13_Eval*, jule::Ptr<_1d6677a35_TypeKind>, jule::Ptr<_1d664721e_Data>, jule::Ptr<_1d64d5cd3_Token>);
inline void _1d665851b_castRef(_1d6648e13_Eval*, jule::Ptr<_1d6677a35_TypeKind>, jule::Ptr<_1d664721e_Data>, jule::Ptr<_1d64d5cd3_Token>);
inline void _1d6658939_castSlc(_1d6648e13_Eval*, jule::Ptr<_1d6677a35_TypeKind>, jule::Ptr<_1d664721e_Data>, jule::Ptr<_1d64d5cd3_Token>);
inline void _1d6658c9c_castStr(_1d6648e13_Eval*, jule::Ptr<_1d664721e_Data>, jule::Ptr<_1d64d5cd3_Token>);
inline void _1d66591ba_castInt(_1d6648e13_Eval*, jule::Ptr<_1d6677a35_TypeKind>, jule::Ptr<_1d664721e_Data>, jule::Ptr<_1d64d5cd3_Token>);
inline void _1d66595d8_castNum(_1d6648e13_Eval*, jule::Ptr<_1d6677a35_TypeKind>, jule::Ptr<_1d664721e_Data>, jule::Ptr<_1d64d5cd3_Token>);
inline void _1d6659a06_castPrim(_1d6648e13_Eval*, jule::Ptr<_1d6677a35_TypeKind>, jule::Ptr<_1d664721e_Data>, jule::Ptr<_1d64d5cd3_Token>);
inline void _1d6659d69_castConstant(_1d6648e13_Eval*, jule::Ptr<_1d6677a35_TypeKind>*, jule::Ptr<_1d664721e_Data>*);
inline void _1d665a287_castTypeEnum(_1d6648e13_Eval*, jule::Ptr<_1d6677a35_TypeKind>*, jule::Ptr<_1d664721e_Data>*, jule::Ptr<_1d64d5cd3_Token>*);
inline void _1d665a6a5_castTypeEnumT(_1d6648e13_Eval*, jule::Ptr<_1d6677a35_TypeKind>*, jule::Ptr<_1d664721e_Data>*, jule::Ptr<_1d64d5cd3_Token>*);
inline jule::Ptr<_1d664721e_Data> _1d665ab5b_evalCastByTypeNData(_1d6648e13_Eval*, jule::Ptr<_1d6677a35_TypeKind>, jule::Ptr<_1d664721e_Data>, jule::Ptr<_1d64d5cd3_Token>);
inline jule::Ptr<_1d664721e_Data> _1d665b112_evalCastT(jule::Ptr<_1d6648e13_Eval>, jule::Ptr<_1d6677a35_TypeKind>*, jule::Ptr<_1d6500715_Expr>*, jule::Ptr<_1d64d5cd3_Token>*);
inline jule::Ptr<_1d664721e_Data> _1d665b453_evalCast(jule::Ptr<_1d6648e13_Eval>, jule::Ptr<_1d6503075_CastExpr>);
inline jule::Ptr<_1d664721e_Data> _1d665b794_evalNsSelection(_1d6648e13_Eval*, jule::Ptr<_1d650344e_NsSelectionExpr>);
inline jule::Ptr<_1d664721e_Data> _1d665bc4a_evalStructLitExplicit(jule::Ptr<_1d6648e13_Eval>, jule::Ptr<_1d652005e_StructIns>, jule::Slice<jule::Ptr<_1d6500715_Expr>>, jule::Ptr<_1d64d5cd3_Token>);
inline jule::Ptr<_1d664721e_Data> _1d665c08b_evalStructLit(jule::Ptr<_1d6648e13_Eval>, jule::Ptr<_1d650575e_StructLit>);
inline _1d66898e3_typeChecker _1d665c322_typeChecker(_1d6648e13_Eval*);
inline jule::Ptr<_1d664721e_Data> _1d665c663_evalType(_1d6648e13_Eval*, jule::Ptr<_1d64eb3d1_TypeDecl>);
inline void _1d665c9c6_callTypeFn(jule::Ptr<_1d6648e13_Eval>, jule::Ptr<_1d650443e_FnCallExpr>*, jule::Ptr<_1d664721e_Data>*);
inline void _1d665cd39_callBuiltinFn(jule::Ptr<_1d6648e13_Eval>, jule::Ptr<_1d650443e_FnCallExpr>*, jule::Ptr<_1d664721e_Data>*);
inline void _1d665d19c_checkFnOfConcurrentCall(_1d6648e13_Eval*, jule::Ptr<_1d6535173_FnIns>*, jule::Ptr<_1d64d5cd3_Token>);
inline void _1d665d5ba_processExceptionalHandler(_1d6648e13_Eval*, jule::Ptr<_1d6535173_FnIns>*, jule::Ptr<_1d650443e_FnCallExpr>*, jule::Ptr<_1d664721e_Data>*);
inline void _1d665d92d_callFn(jule::Ptr<_1d6648e13_Eval>, jule::Ptr<_1d650443e_FnCallExpr>*, jule::Ptr<_1d664721e_Data>*);
inline jule::Ptr<_1d664721e_Data> _1d665dc6e_evalFnCall(jule::Ptr<_1d6648e13_Eval>, jule::Ptr<_1d650443e_FnCallExpr>);
inline jule::Ptr<_1d664721e_Data> _1d665e16a_evalEnumStatic(_1d6648e13_Eval*, jule::Ptr<_1d6547c57_Enum>, jule::Ptr<_1d64d5cd3_Token>);
inline jule::Ptr<_1d664721e_Data> _1d665e566_evalTypeEnumStatic(_1d6648e13_Eval*, jule::Ptr<_1d6549462_TypeEnum>, jule::Ptr<_1d64d5cd3_Token>);
inline jule::Ptr<_1d664721e_Data> _1d665e962_evalStructStatic(_1d6648e13_Eval*, jule::Ptr<_1d652005e_StructIns>, jule::Ptr<_1d64d5cd3_Token>);
inline jule::Ptr<_1d664721e_Data> _1d665ee18_evalTraitSubIdent(_1d6648e13_Eval*, jule::Ptr<_1d664721e_Data>, jule::Ptr<_1d654554b_Trait>, jule::Ptr<_1d64d5cd3_Token>);
inline jule::Ptr<_1d664721e_Data> _1d6660479_evalStructSubIdentField(_1d6648e13_Eval*, jule::Ptr<_1d664721e_Data>*, jule::Ptr<_1d652005e_StructIns>*, jule::Ptr<_1d64d5cd3_Token>*, jule::Ptr<_1d651e4ae_FieldIns>*);
inline jule::Ptr<_1d664721e_Data> _1d66609da_evalStructSubIdent(_1d6648e13_Eval*, jule::Ptr<_1d664721e_Data>, jule::Ptr<_1d652005e_StructIns>, jule::Ptr<_1d6503828_SubIdentExpr>, jule::Bool);
inline jule::Ptr<_1d664721e_Data> _1d6660d2b_evalIntTypeStatic(_1d6648e13_Eval*, jule::Ptr<_1d64d5cd3_Token>);
inline jule::Ptr<_1d664721e_Data> _1d666116c_evalUintTypeStatic(_1d6648e13_Eval*, jule::Ptr<_1d64d5cd3_Token>);
inline jule::Ptr<_1d664721e_Data> _1d66614ad_evalI8TypeStatic(_1d6648e13_Eval*, jule::Ptr<_1d64d5cd3_Token>);
inline jule::Ptr<_1d664721e_Data> _1d66617ee_evalI16TypeStatic(_1d6648e13_Eval*, jule::Ptr<_1d64d5cd3_Token>);
inline jule::Ptr<_1d664721e_Data> _1d6661b40_evalI32TypeStatic(_1d6648e13_Eval*, jule::Ptr<_1d64d5cd3_Token>);
inline jule::Ptr<_1d664721e_Data> _1d6661e81_evalI64TypeStatic(_1d6648e13_Eval*, jule::Ptr<_1d64d5cd3_Token>);
inline jule::Ptr<_1d664721e_Data> _1d66622c2_evalU8TypeStatic(_1d6648e13_Eval*, jule::Ptr<_1d64d5cd3_Token>);
inline jule::Ptr<_1d664721e_Data> _1d6662613_evalU16TypeStatic(_1d6648e13_Eval*, jule::Ptr<_1d64d5cd3_Token>);
inline jule::Ptr<_1d664721e_Data> _1d6662954_evalU32TypeStatic(_1d6648e13_Eval*, jule::Ptr<_1d64d5cd3_Token>);
inline jule::Ptr<_1d664721e_Data> _1d6662c95_evalU64TypeStatic(_1d6648e13_Eval*, jule::Ptr<_1d64d5cd3_Token>);
inline jule::Ptr<_1d664721e_Data> _1d66630d6_evalF32TypeStatic(_1d6648e13_Eval*, jule::Ptr<_1d64d5cd3_Token>);
inline jule::Ptr<_1d664721e_Data> _1d6663427_evalF64TypeStatic(_1d6648e13_Eval*, jule::Ptr<_1d64d5cd3_Token>);
inline jule::Ptr<_1d664721e_Data> _1d6663823_evalPrimStatic(_1d6648e13_Eval*, jule::Str, jule::Ptr<_1d64d5cd3_Token>);
inline jule::Ptr<_1d664721e_Data> _1d6663c1e_evalTypeStatic(_1d6648e13_Eval*, jule::Ptr<_1d664721e_Data>, jule::Ptr<_1d6503828_SubIdentExpr>);
inline jule::Ptr<_1d664721e_Data> _1da209a14_comptimeObjSubIdent(_1d6648e13_Eval*, jule::Ptr<_1d655c002_comptimeTypeInfo>*, jule::Ptr<_1d664721e_Data>*, jule::Ptr<_1d6503828_SubIdentExpr>*);
inline jule::Ptr<_1d664721e_Data> _1da20e0bd_comptimeObjSubIdent(_1d6648e13_Eval*, jule::Ptr<_1d654d08c_comptimeStructField>*, jule::Ptr<_1d664721e_Data>*, jule::Ptr<_1d6503828_SubIdentExpr>*);
inline jule::Ptr<_1d664721e_Data> _1da213633_comptimeObjSubIdent(_1d6648e13_Eval*, jule::Ptr<_1d6554604_comptimeEnumField>*, jule::Ptr<_1d664721e_Data>*, jule::Ptr<_1d6503828_SubIdentExpr>*);
inline jule::Ptr<_1d664721e_Data> _1da217bdc_comptimeObjSubIdent(_1d6648e13_Eval*, jule::Ptr<_1d6557096_comptimeParam>*, jule::Ptr<_1d664721e_Data>*, jule::Ptr<_1d6503828_SubIdentExpr>*);
inline jule::Ptr<_1d664721e_Data> _1da21c395_comptimeObjSubIdent(_1d6648e13_Eval*, jule::Ptr<_1d6551348_comptimeStatic>*, jule::Ptr<_1d664721e_Data>*, jule::Ptr<_1d6503828_SubIdentExpr>*);
inline jule::Ptr<_1d664721e_Data> _1da22190a_comptimeObjSubIdent(_1d6648e13_Eval*, jule::Ptr<_1d6563514_comptimeValue>*, jule::Ptr<_1d664721e_Data>*, jule::Ptr<_1d6503828_SubIdentExpr>*);
inline jule::Ptr<_1d664721e_Data> _1da225e70_comptimeObjSubIdent(_1d6648e13_Eval*, jule::Ptr<_1d656745d_comptimeFile>*, jule::Ptr<_1d664721e_Data>*, jule::Ptr<_1d6503828_SubIdentExpr>*);
inline __jule_tuple_x_1d664721e_Data__jule_tuple_bool _1d66645c1_tryComptimeObjSubIdent(_1d6648e13_Eval*, jule::Ptr<_1d664721e_Data>*, jule::Ptr<_1d6503828_SubIdentExpr>);
inline jule::Ptr<_1d664721e_Data> _1d66649bc_evalObjSubIdent(_1d6648e13_Eval*, jule::Ptr<_1d664721e_Data>, jule::Ptr<_1d6503828_SubIdentExpr>);
inline jule::Ptr<_1d664721e_Data> _1d6664d0d_evalSubIdent(jule::Ptr<_1d6648e13_Eval>, jule::Ptr<_1d6503828_SubIdentExpr>);
inline jule::Ptr<_1d664721e_Data> _1d666514e_evalTuple(jule::Ptr<_1d6648e13_Eval>, jule::Ptr<_1d65013d6_TupleExpr>);
inline jule::Ptr<_1d664721e_Data> _1d666554a_evalMap(jule::Ptr<_1d6648e13_Eval>, jule::Ptr<_1d66862a2_Map>, jule::Ptr<_1d6505c15_BraceLit>);
inline jule::Ptr<_1d664721e_Data> _1d666588b_evalBraceLit(jule::Ptr<_1d6648e13_Eval>, jule::Ptr<_1d6505c15_BraceLit>);
inline jule::Ptr<_1d664721e_Data> _1d6665bcc_evalAnonFunc(jule::Ptr<_1d6648e13_Eval>, jule::Ptr<_1d650d091_FnDecl>);
inline jule::Ptr<_1d664721e_Data> _1d666601d_evalBinary(jule::Ptr<_1d6648e13_Eval>, jule::Ptr<_1d6503cce_BinaryExpr>);
inline jule::Ptr<_1d664721e_Data> _1d666635e_evalExprKind(jule::Ptr<_1d6648e13_Eval>, jule::Any);
inline jule::Ptr<_1d664721e_Data> _1d66666a0_eval1(jule::Ptr<_1d6648e13_Eval>, jule::Ptr<_1d6500715_Expr>);
inline jule::Ptr<_1d664721e_Data> _1d66669e1_eval(jule::Ptr<_1d6648e13_Eval>, jule::Ptr<_1d6500715_Expr>);
inline jule::Ptr<_1d664721e_Data> _1d6666d32_evalExpr1(jule::Ptr<_1d6648e13_Eval>, jule::Ptr<_1d6500715_Expr>);
inline jule::Ptr<_1d664721e_Data> _1d6667173_evalExpr(jule::Ptr<_1d6648e13_Eval>, jule::Ptr<_1d6500715_Expr>);
inline _1d666763a_unaryEval static__1d6667a7a_new(jule::Ptr<_1d6648e13_Eval>);
inline void _1d6667c78_minus(_1d666763a_unaryEval*);
inline void _1d6667e76_plus(_1d666763a_unaryEval*);
inline void _1d6668174_caret(_1d666763a_unaryEval*);
inline void _1d6668372_excl(_1d666763a_unaryEval*);
inline void _1d6668570_star(_1d666763a_unaryEval*);
inline void _1d666876d_amper(_1d666763a_unaryEval*);
inline void _1d666896b_typeDecl(_1d666763a_unaryEval*);
inline void _1d6668b69_evalData(_1d666763a_unaryEval*);
inline jule::Ptr<_1d664721e_Data> _1d6668eaa_eval(_1d666763a_unaryEval*, jule::Ptr<_1d65027c2_UnaryExpr>);
inline _1d66695c6_binaryEval static__1d6669bae_newPlain(jule::Ptr<_1d6648e13_Eval>);
inline _1d66695c6_binaryEval static__1d666a000_new(jule::Ptr<_1d6648e13_Eval>, jule::Ptr<_1d64d5cd3_Token>);
inline jule::Bool _1d666a286_checkTypeCompatibility(_1d66695c6_binaryEval*);
inline jule::Bool _1d666a51c_checkStructCommonOperatorCompatibility(_1d66695c6_binaryEval*);
inline jule::Ptr<_1d664721e_Data> _1d666a7a3_evalComptimeTypeInfo(_1d66695c6_binaryEval*);
inline jule::Ptr<_1d664721e_Data> _1d666aa39_evalNil(_1d66695c6_binaryEval*);
inline jule::Ptr<_1d664721e_Data> _1d666acc0_evalEnum(_1d66695c6_binaryEval*);
inline jule::Ptr<_1d664721e_Data> _1d666b056_evalTypeEnum(_1d66695c6_binaryEval*);
inline jule::Ptr<_1d664721e_Data> _1d666b2dc_evalSptr(_1d66695c6_binaryEval*);
inline jule::Ptr<_1d664721e_Data> _1d666b573_evalPtr(_1d66695c6_binaryEval*);
inline jule::Ptr<_1d664721e_Data> _1d666b809_evalArr(_1d66695c6_binaryEval*);
inline jule::Ptr<_1d664721e_Data> _1d666ba90_evalSlc(_1d66695c6_binaryEval*);
inline jule::Ptr<_1d664721e_Data> _1d666bd26_evalStruct(_1d66695c6_binaryEval*);
inline jule::Ptr<_1d664721e_Data> _1d666c0ac_evalTrait(_1d66695c6_binaryEval*);
inline jule::Ptr<_1d664721e_Data> _1d666c343_evalAny(_1d66695c6_binaryEval*);
inline jule::Ptr<_1d664721e_Data> _1d666c5c9_evalBool(_1d66695c6_binaryEval*);
inline jule::Ptr<_1d664721e_Data> _1d666c860_evalStr(_1d66695c6_binaryEval*);
inline void _1d666ca5d_setTypeToGreater(_1d66695c6_binaryEval*);
inline void _1d666cd16_checkModData(_1d66695c6_binaryEval*, jule::Ptr<_1d664721e_Data>*);
inline void _1d666d014_mod(_1d66695c6_binaryEval*);
inline jule::Bool _1d666d410_numbersAreCompatibile(_1d66695c6_binaryEval*, jule::Str*, jule::Str*);
inline jule::Ptr<_1d664721e_Data> _1d666d696_evalFloat(_1d66695c6_binaryEval*);
inline jule::Ptr<_1d664721e_Data> _1d666d92c_evalInt(_1d66695c6_binaryEval*);
inline jule::Ptr<_1d664721e_Data> _1d666dbb3_evalPrim(_1d66695c6_binaryEval*);
inline void _1d666ddb1_checkSpecialCases(_1d66695c6_binaryEval*);
inline jule::Ptr<_1d664721e_Data> _1d666e147_evalOp(_1d66695c6_binaryEval*);
inline void _1d666e400_evalConst(_1d66695c6_binaryEval*, jule::Ptr<_1d664721e_Data>*);
inline void _1d666e6a8_checkData(_1d66695c6_binaryEval*, jule::Ptr<_1d664721e_Data>*);
inline void _1d666e8a6_checkDatas(_1d66695c6_binaryEval*);
inline void _1d666eb5e_setModel(_1d66695c6_binaryEval*, jule::Ptr<_1d664721e_Data>*);
inline void _1d666ee17_postEval(_1d66695c6_binaryEval*, jule::Ptr<_1d664721e_Data>*);
inline jule::Ptr<_1d664721e_Data> _1d6670313_solveExplicit(_1d66695c6_binaryEval*, jule::Ptr<_1d664721e_Data>*, jule::Ptr<_1d664721e_Data>*);
inline jule::Ptr<_1d664721e_Data> _1d6670654_eval(_1d66695c6_binaryEval*, jule::Ptr<_1d6503cce_BinaryExpr>*);
inline jule::Str _1d6677ded_Str(_1d6677a35_TypeKind*);
inline jule::Bool _1d667823e_Equal(jule::Ptr<_1d6677a35_TypeKind>, jule::Ptr<_1d6677a35_TypeKind>);
inline jule::Bool _1d667887c_Binded(_1d6677a35_TypeKind*);
inline jule::Bool _1d6678b13_IsNil(_1d6677a35_TypeKind*);
inline jule::Bool _1d6678d99_Void(_1d6677a35_TypeKind*);
inline jule::Bool _1d6679130_Comparable(_1d6677a35_TypeKind*);
inline jule::Bool _1d66793b6_Mutable(_1d6677a35_TypeKind*);
inline jule::Bool _1d667964c_Ordered(_1d6677a35_TypeKind*);
inline jule::Bool _1d66798d3_NilCompatible(_1d6677a35_TypeKind*);
inline jule::Bool _1d6679b69_PerformsRC(_1d6677a35_TypeKind*);
inline jule::Bool _1d6679e00_Variadicable(_1d6677a35_TypeKind*);
inline jule::Ptr<_1d668060e_Prim> _1d667a186_Prim(_1d6677a35_TypeKind*);
inline jule::Ptr<_1d668413a_Sptr> _1d667a41c_Sptr(_1d6677a35_TypeKind*);
inline jule::Ptr<_1d6687902_Ptr> _1d667a6a3_Ptr(_1d6677a35_TypeKind*);
inline jule::Ptr<_1d6547c57_Enum> _1d667a939_Enum(_1d6677a35_TypeKind*);
inline jule::Ptr<_1d6549462_TypeEnum> _1d667abc0_TypeEnum(_1d6677a35_TypeKind*);
inline jule::Ptr<_1d6686e2e_Arr> _1d667ae56_Arr(_1d6677a35_TypeKind*);
inline jule::Ptr<_1d6684b0d_Slc> _1d667b1dc_Slc(_1d6677a35_TypeKind*);
inline jule::Ptr<_1d6535173_FnIns> _1d667b473_Fn(_1d6677a35_TypeKind*);
inline jule::Ptr<_1d652005e_StructIns> _1d667b709_Struct(_1d6677a35_TypeKind*);
inline jule::Ptr<_1d654554b_Trait> _1d667b990_Trait(_1d6677a35_TypeKind*);
inline jule::Ptr<_1d66862a2_Map> _1d667bc26_Map(_1d6677a35_TypeKind*);
inline jule::Ptr<_1d6685702_Tuple> _1d667beac_Tup(_1d6677a35_TypeKind*);
inline jule::Bool _1d667c243_comptime(_1d6677a35_TypeKind*);
inline jule::Ptr<_1d654ec4d_comptimeStructFields> _1d667c4c9_comptimeStructFields(_1d6677a35_TypeKind*);
inline jule::Ptr<_1d654d08c_comptimeStructField> _1d667c760_comptimeStructField(_1d6677a35_TypeKind*);
inline jule::Ptr<_1d655599b_comptimeEnumFields> _1d667c9e6_comptimeEnumFields(_1d6677a35_TypeKind*);
inline jule::Ptr<_1d6554604_comptimeEnumField> _1d667cc7c_comptimeEnumField(_1d6677a35_TypeKind*);
inline jule::Ptr<_1d655930c_comptimeParams> _1d667d013_comptimeParams(_1d6677a35_TypeKind*);
inline jule::Ptr<_1d6557096_comptimeParam> _1d667d299_comptimeParam(_1d6677a35_TypeKind*);
inline jule::Ptr<_1d654c5b9_comptimeRange> _1d667d530_comptimeRange(_1d6677a35_TypeKind*);
inline jule::Ptr<_1d655a907_comptimeTypeInfos> _1d667d7b6_comptimeTypeInfos(_1d6677a35_TypeKind*);
inline jule::Ptr<_1d655c002_comptimeTypeInfo> _1d667da4c_comptimeTypeInfo(_1d6677a35_TypeKind*);
inline jule::Ptr<_1d6553009_comptimeStatics> _1d667dcd3_comptimeStatics(_1d6677a35_TypeKind*);
inline jule::Ptr<_1d6551348_comptimeStatic> _1d667e069_comptimeStatic(_1d6677a35_TypeKind*);
inline jule::Ptr<_1d6563514_comptimeValue> _1d667e300_comptimeValue(_1d6677a35_TypeKind*);
inline jule::Ptr<_1d656745d_comptimeFile> _1d667e586_comptimeFile(_1d6677a35_TypeKind*);
inline jule::Ptr<_1d6565d63_comptimeFiles> _1d667e81c_comptimeFiles(_1d6677a35_TypeKind*);
inline jule::Bool _1d668007b_checked(_1d667ec07_TypeSymbol*);
inline jule::Str _1d6680950_Str(_1d668060e_Prim*);
inline jule::Bool _1d6680c91_Equal(jule::Ptr<_1d668060e_Prim>, jule::Ptr<_1d6677a35_TypeKind>);
inline jule::Bool _1d6681236_IsConstraint(_1d668060e_Prim*);
inline jule::Bool _1d66814bc_IsI8(_1d668060e_Prim*);
inline jule::Bool _1d6681753_IsI16(_1d668060e_Prim*);
inline jule::Bool _1d66819d9_IsI32(_1d668060e_Prim*);
inline jule::Bool _1d6681c70_IsI64(_1d668060e_Prim*);
inline jule::Bool _1d6682006_IsU8(_1d668060e_Prim*);
inline jule::Bool _1d668228c_IsU16(_1d668060e_Prim*);
inline jule::Bool _1d6682523_IsU32(_1d668060e_Prim*);
inline jule::Bool _1d66827a9_IsU64(_1d668060e_Prim*);
inline jule::Bool _1d6682a40_IsF32(_1d668060e_Prim*);
inline jule::Bool _1d6682cc6_IsF64(_1d668060e_Prim*);
inline jule::Bool _1d668305c_IsInt(_1d668060e_Prim*);
inline jule::Bool _1d66832e3_IsUint(_1d668060e_Prim*);
inline jule::Bool _1d6683579_IsUintptr(_1d668060e_Prim*);
inline jule::Bool _1d6683810_IsBool(_1d668060e_Prim*);
inline jule::Bool _1d6683a96_IsStr(_1d668060e_Prim*);
inline jule::Bool _1d6683d2c_IsAny(_1d668060e_Prim*);
inline jule::Str _1d66844ae_Str(_1d668413a_Sptr*);
inline jule::Bool _1d6684800_Equal(jule::Ptr<_1d668413a_Sptr>, jule::Ptr<_1d6677a35_TypeKind>);
inline jule::Str _1d6685092_Str(_1d6684b0d_Slc*);
inline jule::Bool _1d66853d3_Equal(jule::Ptr<_1d6684b0d_Slc>, jule::Ptr<_1d6677a35_TypeKind>);
inline jule::Str _1d6685a76_Str(_1d6685702_Tuple*);
inline jule::Bool _1d6685db7_Equal(jule::Ptr<_1d6685702_Tuple>, jule::Ptr<_1d6677a35_TypeKind>);
inline jule::Str _1d6686626_Str(_1d66862a2_Map*);
inline jule::Bool _1d6686967_Equal(jule::Ptr<_1d66862a2_Map>, jule::Ptr<_1d6677a35_TypeKind>);
inline jule::Str _1d66872a3_Str(_1d6686e2e_Arr*);
inline jule::Bool _1d66875e4_Equal(jule::Ptr<_1d6686e2e_Arr>, jule::Ptr<_1d6677a35_TypeKind>);
inline jule::Str _1d6687c76_Str(_1d6687902_Ptr*);
inline jule::Bool _1d66880b7_Equal(jule::Ptr<_1d6687902_Ptr>, jule::Ptr<_1d6677a35_TypeKind>);
inline jule::Bool _1d668843b_IsUnsafe(_1d6687902_Ptr*);
inline void _1d668a130_pushErr(_1d66898e3_typeChecker*, jule::Ptr<_1d64d5cd3_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1d668a32d_allowBuiltin(_1d66898e3_typeChecker*);
inline void _1d668a52b_disallowBuiltin(_1d66898e3_typeChecker*);
inline void _1da41314b_pushReference(_1d66898e3_typeChecker*, jule::Ptr<_1d652005e_StructIns>*);
inline void _1da415a33_pushReference(_1d66898e3_typeChecker*, jule::Ptr<_1d654554b_Trait>*);
inline void _1d668aa8c_pushReferenceByKind(_1d66898e3_typeChecker*, jule::Ptr<_1d6677a35_TypeKind>*);
inline void _1d668aeaa_pushCycleError(_1d66898e3_typeChecker*, jule::Any, jule::Any, _1e01838bc_StrBuilder*);
inline jule::Bool _1d668b3a6_checkCrossCycle(_1d66898e3_typeChecker*, jule::Any, _1e01838bc_StrBuilder*);
inline jule::Bool _1d668b7a2_checkIllegalCycles(_1d66898e3_typeChecker*, jule::Ptr<_1d64eb9db_IdentTypeDecl>*, jule::Any);
inline jule::Trait<_1d667757e_Kind> _1d668bb9d_fromTypeAlias(_1d66898e3_typeChecker*, jule::Ptr<_1d64eb9db_IdentTypeDecl>*, jule::Ptr<_1d6676c43_TypeAlias>*);
inline jule::Ptr<_1d6547c57_Enum> _1d668c099_fromEnum(_1d66898e3_typeChecker*, jule::Ptr<_1d64eb9db_IdentTypeDecl>*, jule::Ptr<_1d6547c57_Enum>*);
inline jule::Ptr<_1d6549462_TypeEnum> _1d668c495_fromTypeEnum(_1d66898e3_typeChecker*, jule::Ptr<_1d64eb9db_IdentTypeDecl>*, jule::Ptr<_1d6549462_TypeEnum>*);
inline jule::Ptr<_1d654554b_Trait> _1d668c891_fromTrait(_1d66898e3_typeChecker*, jule::Ptr<_1d64eb9db_IdentTypeDecl>*, jule::Ptr<_1d654554b_Trait>*);
inline jule::Bool _1d668cc8c_checkStructIns(_1d66898e3_typeChecker*, jule::Ptr<_1d652005e_StructIns>*, jule::Ptr<_1d64d5cd3_Token>*);
inline void _1d668d045_appendUsedStructReference(_1d66898e3_typeChecker*, jule::Ptr<_1d651c2d1_Struct>*);
inline jule::Ptr<_1d652005e_StructIns> _1d668d441_buildStructInstance(_1d66898e3_typeChecker*, jule::Ptr<_1d64eb9db_IdentTypeDecl>*, jule::Ptr<_1d651c2d1_Struct>*);
inline jule::Ptr<_1d652005e_StructIns> _1d668d83c_fromStruct(_1d66898e3_typeChecker*, jule::Ptr<_1d64eb9db_IdentTypeDecl>*, jule::Ptr<_1d651c2d1_Struct>*);
inline jule::Trait<_1d667757e_Kind> _1d668db7d_getDef(_1d66898e3_typeChecker*, jule::Ptr<_1d64eb9db_IdentTypeDecl>*);
inline jule::Trait<_1d667757e_Kind> _1d668debe_buildIdent(_1d66898e3_typeChecker*, jule::Ptr<_1d64eb9db_IdentTypeDecl>);
inline jule::Trait<_1d667757e_Kind> _1d668e310_buildSubIdent(_1d66898e3_typeChecker*, jule::Ptr<_1d64ebcd8_SubIdentTypeDecl>);
inline jule::Ptr<_1d668413a_Sptr> _1d668e651_buildSptrFromType(_1d66898e3_typeChecker*, jule::Ptr<_1d6677a35_TypeKind>*);
inline jule::Ptr<_1d668413a_Sptr> _1d668e992_buildSptr(_1d66898e3_typeChecker*, jule::Ptr<_1d64ec47b_SptrTypeDecl>);
inline jule::Ptr<_1d6687902_Ptr> _1d668ecd3_buildPtrFromType(_1d66898e3_typeChecker*, jule::Ptr<_1d6677a35_TypeKind>*);
inline jule::Ptr<_1d6687902_Ptr> _1d6690124_buildPtr(_1d66898e3_typeChecker*, jule::Ptr<_1d64ece0a_PtrTypeDecl>);
inline jule::Ptr<_1d6684b0d_Slc> _1d6690465_buildSlc(_1d66898e3_typeChecker*, jule::Ptr<_1d64ec811_SlcTypeDecl>);
inline jule::Ptr<_1d6686e2e_Arr> _1d66907a6_buildArr(_1d66898e3_typeChecker*, jule::Ptr<_1d64ed69c_ArrTypeDecl>);
inline jule::Ptr<_1d66862a2_Map> _1d6690ae7_buildMap(_1d66898e3_typeChecker*, jule::Ptr<_1d64eddea_MapTypeDecl>);
inline jule::Ptr<_1d6685702_Tuple> _1d6690e38_buildTuple(_1d66898e3_typeChecker*, jule::Ptr<_1d64ecb0d_TupleTypeDecl>);
inline jule::Bool _1d6691279_checkFuncTypes(_1d66898e3_typeChecker*, jule::Ptr<_1d6535173_FnIns>*);
inline jule::Ptr<_1d6535173_FnIns> _1d66915ba_buildFunc(_1d66898e3_typeChecker*, jule::Ptr<_1d650d091_FnDecl>);
inline jule::Trait<_1d667757e_Kind> _1d669190b_buildByNamespace(_1d66898e3_typeChecker*, jule::Ptr<_1d64ec17e_NamespaceTypeDecl>);
inline jule::Ptr<_1d6677a35_TypeKind> _1d6691c4c_build(_1d66898e3_typeChecker*, jule::Any*);
inline jule::Ptr<_1d6677a35_TypeKind> _1d669208d_checkDecl(_1d66898e3_typeChecker*, jule::Ptr<_1d64eb3d1_TypeDecl>*);
inline jule::Bool static__1d66929d9_prim(jule::Str*, jule::Ptr<_1d668060e_Prim>);
inline jule::Bool static__1d6692d5d_exist(jule::Str*, jule::Ptr<_1d6677a35_TypeKind>*);
inline void _1d7130135_stop(_1d712e9b4_scopeParser*);
inline jule::Bool _1d71303bb_stopped(_1d712e9b4_scopeParser*);
inline jule::Bool _1d7130652_finished(_1d712e9b4_scopeParser*);
inline jule::Bool _1d71308d8_isLastSt(_1d712e9b4_scopeParser*);
inline void _1d7130c4b_pushErr(_1d712e9b4_scopeParser*, jule::Ptr<_1d64d5cd3_Token>, jule::Str);
inline void _1d71310ae_pushSuggestion(_1d712e9b4_scopeParser*, jule::Str, jule::Slice<jule::Any>);
inline void _1d7131367_insertAsNext(_1d712e9b4_scopeParser*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*);
inline jule::Ptr<_1d712e123_stmt> _1d71315ed_next(_1d712e9b4_scopeParser*);
inline jule::Ptr<_1d650b402_ScopeTree> _1d71319e9_buildScope(_1d712e9b4_scopeParser*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*, jule::Ptr<_1d64d5cd3_Token>);
inline jule::Ptr<_1d650e24b_VarDecl> _1d7131d3a_buildVarSt(_1d712e9b4_scopeParser*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*);
inline jule::Ptr<_1d650e625_RetSt> _1d713217b_buildRetSt(_1d712e9b4_scopeParser*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>);
inline jule::Ptr<_1d650ed95_Iter> _1d71324bc_buildWhileNextIter(_1d712e9b4_scopeParser*, jule::Ptr<_1d712e123_stmt>*);
inline jule::Ptr<_1d65106c0_WhileKind> _1d713280d_buildWhileIterKind(_1d712e9b4_scopeParser*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_1d64d5cd3_Token>>> _1d7132b4e_getRangeKindKeysTokens(_1d712e9b4_scopeParser*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*);
inline jule::Ptr<_1d650e24b_VarDecl> _1d7132e90_buildRangeKindKey(_1d712e9b4_scopeParser*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*);
inline jule::Slice<jule::Ptr<_1d650e24b_VarDecl>> _1d71332d1_buildRangeKindKeys(_1d712e9b4_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_1d64d5cd3_Token>>>*);
inline void _1d7133644_setupRangeKindKeysPlain(_1d712e9b4_scopeParser*, jule::Ptr<_1d65110c7_RangeKind>*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*);
inline void _1d71339a7_setupRangeKindKeysExplicit(_1d712e9b4_scopeParser*, jule::Ptr<_1d65110c7_RangeKind>*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*);
inline void _1d7133d1a_setupRangeKindKeys(_1d712e9b4_scopeParser*, jule::Ptr<_1d65110c7_RangeKind>*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*);
inline jule::Ptr<_1d65110c7_RangeKind> _1d71342c1_buildRangeIterKind(_1d712e9b4_scopeParser*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*, jule::Ptr<_1d64d5cd3_Token>*);
inline jule::Any _1d71346bc_buildCommonIterKind(_1d712e9b4_scopeParser*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*, jule::Ptr<_1d64d5cd3_Token>*);
inline jule::Ptr<_1d650ed95_Iter> _1d7134a0d_buildCommonIter(_1d712e9b4_scopeParser*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>);
inline jule::Ptr<_1d650ed95_Iter> _1d7134d4e_buildIterSt(_1d712e9b4_scopeParser*, jule::Ptr<_1d712e123_stmt>*);
inline jule::Ptr<_1d65114a1_BreakSt> _1d7135190_buildBreakSt(_1d712e9b4_scopeParser*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*);
inline jule::Ptr<_1d651187a_ContSt> _1d71354d1_buildContSt(_1d712e9b4_scopeParser*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*);
inline jule::Ptr<_1d6511d31_If> _1d7135822_buildIf(_1d712e9b4_scopeParser*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*);
inline jule::Ptr<_1d651220a_Else> _1d7135b63_buildElse(_1d712e9b4_scopeParser*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*);
inline jule::Ptr<_1d65126b1_Conditional> _1d7135ea4_buildIfElseChain(_1d712e9b4_scopeParser*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>);
inline jule::Ptr<_1d6500715_Expr> _1d71362e5_buildCoCallSt(_1d712e9b4_scopeParser*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>);
inline jule::Ptr<_1d6508d8e_GotoSt> _1d7136636_buildGotoSt(_1d712e9b4_scopeParser*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*);
inline jule::Ptr<_1d650918b_FallSt> _1d7136977_buildFallSt(_1d712e9b4_scopeParser*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*);
inline jule::Ptr<_1d6512ded_TypeAliasDecl> _1d7136cb8_buildTypeAliasSt(_1d712e9b4_scopeParser*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*);
inline void _1d7137291_pushCaseExpr(_1d712e9b4_scopeParser*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>, jule::Ptr<_1d64d5cd3_Token>, jule::Bool, jule::Slice<jule::Ptr<_1d6500715_Expr>>*);
inline __jule_tuple_sx_1d6500715_Expr__jule_tuple_bool _1d7137747_buildCaseExprs(_1d712e9b4_scopeParser*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*, jule::Ptr<_1d64d5cd3_Token>*, jule::Bool);
inline jule::Ptr<_1d650b402_ScopeTree> _1d7137a88_buildCaseScope(_1d712e9b4_scopeParser*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*);
inline __jule_tuple_x_1d65133a4_Case__jule_tuple_bool _1d7137e84_buildCase(_1d712e9b4_scopeParser*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*, jule::Bool);
inline __jule_tuple_sx_1d65133a4_Case__jule_tuple_x_1d651220a_Else _1d7138380_buildCases(_1d712e9b4_scopeParser*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>, jule::Bool);
inline jule::Ptr<_1d6513bbd_MatchCase> _1d71386c1_buildMatchCase(_1d712e9b4_scopeParser*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>);
inline jule::Ptr<_1d650b402_ScopeTree> _1d7138a12_buildScopeSt(_1d712e9b4_scopeParser*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>);
inline jule::Ptr<_1d65089b5_LabelSt> _1d7138d53_buildLabelSt(_1d712e9b4_scopeParser*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*);
inline __jule_tuple__1d650aa3e_StmtData__jule_tuple_bool _1d7139194_buildIdSt(_1d712e9b4_scopeParser*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*);
inline jule::Ptr<_1d714987a_assignInfo> _1d71394d5_buildAssignInfo(_1d712e9b4_scopeParser*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*);
inline jule::Ptr<_1d65097eb_AssignLeft> _1d7139826_buildAssignL(_1d712e9b4_scopeParser*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*);
inline jule::Slice<jule::Ptr<_1d65097eb_AssignLeft>> _1d7139b67_buildAssignLs(_1d712e9b4_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_1d64d5cd3_Token>>>*);
inline __jule_tuple__1d650aa3e_StmtData__jule_tuple_bool _1d7139ea8_buildPlainAssign(_1d712e9b4_scopeParser*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*);
inline jule::Bool _1d713a3a4_buildDeclAssign1(_1d712e9b4_scopeParser*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*, jule::Ptr<_1d6509d7e_AssignSt>*);
inline __jule_tuple_x_1d6509d7e_AssignSt__jule_tuple_bool _1d713a6e5_buildDeclAssign(_1d712e9b4_scopeParser*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>);
inline __jule_tuple__1d650aa3e_StmtData__jule_tuple_bool _1d713aa36_buildAssignSt(_1d712e9b4_scopeParser*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*);
inline jule::Ptr<_1d65010d9_UseExpr> _1d713ad77_buildUseExpr(_1d712e9b4_scopeParser*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*);
inline jule::Any _1d713b1b8_buildConstSt(_1d712e9b4_scopeParser*, jule::Ptr<_1d712e123_stmt>*);
inline jule::Any _1d713b509_buildSt(_1d712e9b4_scopeParser*, jule::Ptr<_1d712e123_stmt>*);
inline void _1d713b86c_build(_1d712e9b4_scopeParser*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*, jule::Ptr<_1d650b402_ScopeTree>*);
inline void _1d713cbc0_pushErr(_1d713c3d9_exprBuilder*, jule::Ptr<_1d64d5cd3_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1d713d033_pushSuggestion(_1d713c3d9_exprBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1d65013d6_TupleExpr> _1d713d374_buildTuple(_1d713c3d9_exprBuilder*, jule::Slice<jule::Slice<jule::Ptr<_1d64d5cd3_Token>>>*);
inline jule::Ptr<_1d65017b0_LitExpr> _1d713d6b5_buildLit(_1d713c3d9_exprBuilder*, jule::Ptr<_1d64d5cd3_Token>);
inline jule::Any _1d713dd47_buildSingle(_1d713c3d9_exprBuilder*, jule::Ptr<_1d64d5cd3_Token>);
inline jule::Ptr<_1d6502140_IdentExpr> _1d713e188_buildBindIdent(_1d713c3d9_exprBuilder*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*);
inline jule::Ptr<_1d65027c2_UnaryExpr> _1d713e4c9_buildUnary(_1d713c3d9_exprBuilder*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>);
inline jule::Ptr<_1d6503828_SubIdentExpr> _1d713e81a_buildObjSubIdent(_1d713c3d9_exprBuilder*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>);
inline jule::Ptr<_1d650344e_NsSelectionExpr> _1d713eb5b_buildNsSubIdent(_1d713c3d9_exprBuilder*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*);
inline jule::Ptr<_1d64eb3d1_TypeDecl> _1d713ee9c_buildType(_1d713c3d9_exprBuilder*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*);
inline jule::Any _1d71402dd_buildSubIdent(_1d713c3d9_exprBuilder*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*);
inline jule::Ptr<_1d6502b9b_VariadicExpr> _1d714062e_buildVariadic(_1d713c3d9_exprBuilder*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>);
inline jule::Ptr<_1d6500a12_RangeExpr> _1d7140970_buildBetweenParentheses(_1d713c3d9_exprBuilder*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>);
inline jule::Ptr<_1d6503075_CastExpr> _1d7140cb1_tryBuildCast(_1d713c3d9_exprBuilder*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*);
inline void _1d71411ce_pushArg(_1d713c3d9_exprBuilder*, jule::Slice<jule::Ptr<_1d6500715_Expr>>*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>, jule::Ptr<_1d64d5cd3_Token>);
inline jule::Slice<jule::Ptr<_1d6500715_Expr>> _1d7141520_buildArgs(_1d713c3d9_exprBuilder*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>);
inline jule::Ptr<_1d650443e_FnCallExpr> _1d7141d17_buildFnCall(_1d713c3d9_exprBuilder*, jule::Ptr<_1d64d5cd3_Token>*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*);
inline jule::Any _1d7142158_buildParenthesesRange(_1d713c3d9_exprBuilder*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*);
inline jule::Ptr<_1d6501b89_UnsafeExpr> _1d7142499_buildUnsafeExpr(_1d713c3d9_exprBuilder*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>);
inline jule::Ptr<_1d650d091_FnDecl> _1d71427da_buildAnonFn(_1d713c3d9_exprBuilder*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*);
inline jule::Any _1d7142b2b_buildUnsafe(_1d713c3d9_exprBuilder*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*);
inline void _1d7143049_pushRangeLitPart(_1d713c3d9_exprBuilder*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>, jule::Ptr<_1d64d5cd3_Token>, jule::Slice<jule::Slice<jule::Ptr<_1d64d5cd3_Token>>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_1d64d5cd3_Token>>> _1d714338a_getBraceRangeLitExprParts(_1d713c3d9_exprBuilder*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>);
inline jule::Ptr<_1d6504e34_FieldExprPair> _1d71436cb_buildFieldExprPair(_1d713c3d9_exprBuilder*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>);
inline jule::Ptr<_1d6500715_Expr> _1d7143a1c_buildStructLitExpr(_1d713c3d9_exprBuilder*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*);
inline jule::Slice<jule::Ptr<_1d6500715_Expr>> _1d7143d5d_buildStructLitExprs(_1d713c3d9_exprBuilder*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*);
inline jule::Ptr<_1d650575e_StructLit> _1d714419e_buildTypedStructLiteral(_1d713c3d9_exprBuilder*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>);
inline jule::Ptr<_1d6500715_Expr> _1d71444e0_buildBraceLitPart(_1d713c3d9_exprBuilder*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*);
inline jule::Ptr<_1d6505c15_BraceLit> _1d7144831_buildBraceLit(_1d713c3d9_exprBuilder*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*);
inline jule::Any _1d7144b72_buildBraceRange(_1d713c3d9_exprBuilder*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_1d64d5cd3_Token>>> _1d7144eb3_getEnumerableParts(_1d713c3d9_exprBuilder*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>);
inline jule::Ptr<_1d6506c38_SliceExpr> _1d7145304_buildSlice(_1d713c3d9_exprBuilder*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>);
inline jule::Ptr<_1d65076c8_IndexingExpr> _1d71457aa_buildIndexing(_1d713c3d9_exprBuilder*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>, jule::Ptr<_1d64d5cd3_Token>);
inline jule::Ptr<_1d6507d38_SlicingExpr> _1d7145dc6_buildSlicing(_1d713c3d9_exprBuilder*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*, jule::Ptr<_1d64d5cd3_Token>*, jule::Ptr<_1d64d5cd3_Token>);
inline jule::Any _1d7146217_buildBracketRange(_1d713c3d9_exprBuilder*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>);
inline jule::Any _1d7146558_buildExclRight(_1d713c3d9_exprBuilder*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*);
inline jule::Any _1d7146899_buildData(_1d713c3d9_exprBuilder*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*);
inline jule::Any _1d7146c95_buildBinary(_1d713c3d9_exprBuilder*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*, jule::I64);
inline jule::Any _1d71470d6_build(_1d713c3d9_exprBuilder*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*);
inline jule::Any _1d7147427_buildKind(_1d713c3d9_exprBuilder*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*);
inline jule::Ptr<_1d6500715_Expr> _1d7147768_buildFromTokens(_1d713c3d9_exprBuilder*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>);
inline void _1d714d076_stop(_1d714cc79_parser*);
inline jule::Bool _1d714d30c_stopped(_1d714cc79_parser*);
inline void _1d714d72a_pushErr(_1d714cc79_parser*, jule::Ptr<_1d64d5cd3_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1d714da8d_pushSuggestion(_1d714cc79_parser*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1d6500715_Expr> _1d714ddce_buildExpr(jule::Ptr<_1d714cc79_parser>, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*);
inline jule::Ptr<_1d64ea7ed_Directive> _1d714e220_buildDirective(_1d714cc79_parser*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>);
inline void _1d714e4c8_pushDirective(_1d714cc79_parser*, jule::Ptr<_1d64ea7ed_Directive>);
inline jule::Ptr<_1d650b402_ScopeTree> _1d714e8c4_buildScope(jule::Ptr<_1d714cc79_parser>, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*, jule::Ptr<_1d64d5cd3_Token>);
inline __jule_tuple_x_1d64eb3d1_TypeDecl__jule_tuple_bool _1d714ed7a__buildType(jule::Ptr<_1d714cc79_parser>, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*, jule::I64*, jule::Bool);
inline __jule_tuple_x_1d64eb3d1_TypeDecl__jule_tuple_bool _1d7150331_buildType(jule::Ptr<_1d714cc79_parser>, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*, jule::I64*, jule::Bool);
inline jule::Ptr<_1d6512ded_TypeAliasDecl> _1d7150672_buildTypeAliasDecl(jule::Ptr<_1d714cc79_parser>, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*);
inline void _1d71509d5_buildVarTypeAndExpr(jule::Ptr<_1d714cc79_parser>, jule::Ptr<_1d650e24b_VarDecl>*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*);
inline void _1d7150d48_buildVarCommon(jule::Ptr<_1d714cc79_parser>, jule::Ptr<_1d650e24b_VarDecl>*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>);
inline void _1d7151266_buildVarBegin(_1d714cc79_parser*, jule::Ptr<_1d650e24b_VarDecl>*, jule::I64*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*);
inline jule::Ptr<_1d650e24b_VarDecl> _1d71515a7_buildVar(jule::Ptr<_1d714cc79_parser>, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>);
inline jule::Ptr<_1d65085db_GenericDecl> _1d71518e8_buildGeneric(jule::Ptr<_1d714cc79_parser>, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*);
inline jule::Slice<jule::Ptr<_1d65085db_GenericDecl>> _1d7151ce4_buildGenerics(jule::Ptr<_1d714cc79_parser>, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*, jule::Ptr<_1d64d5cd3_Token>*);
inline jule::Ptr<_1d650bb3e_ParamDecl> _1d7152135_buildSelfParam(_1d714cc79_parser*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>);
inline void _1d7152553_paramTypeBegin(_1d714cc79_parser*, jule::Ptr<_1d650bb3e_ParamDecl>*, jule::I64*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*);
inline void _1d71528b6_buildParamType(jule::Ptr<_1d714cc79_parser>, jule::Ptr<_1d650bb3e_ParamDecl>*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*);
inline void _1d7152c29_buildParamBody(jule::Ptr<_1d714cc79_parser>, jule::Ptr<_1d650bb3e_ParamDecl>*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>);
inline jule::Ptr<_1d650bb3e_ParamDecl> _1d715306a_buildParam(jule::Ptr<_1d714cc79_parser>, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>);
inline void _1d7153323_checkParams(_1d714cc79_parser*, jule::Slice<jule::Ptr<_1d650bb3e_ParamDecl>>*);
inline jule::Slice<jule::Ptr<_1d650bb3e_ParamDecl>> _1d715371e_buildParams(jule::Ptr<_1d714cc79_parser>, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*, jule::Bool);
inline __jule_tuple_x_1d64ee2c4_RetTypeDecl__jule_tuple_bool _1d7153b1a_buildMultiRetType(jule::Ptr<_1d714cc79_parser>, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*, jule::I64*);
inline __jule_tuple_x_1d64ee2c4_RetTypeDecl__jule_tuple_bool _1d7154016_buildRetType(jule::Ptr<_1d714cc79_parser>, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*, jule::I64*);
inline jule::Ptr<_1d650d091_FnDecl> _1d71544bc_buildFnPrototype(jule::Ptr<_1d714cc79_parser>, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*, jule::I64*, jule::Bool);
inline jule::Ptr<_1d650d091_FnDecl> _1d7154973_buildFn(jule::Ptr<_1d714cc79_parser>, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*, jule::Bool, jule::Bool);
inline jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _1d7154cb4_getUseDeclSelectors(_1d714cc79_parser*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>);
inline void _1d7155127_buildBindUseDecl(_1d714cc79_parser*, jule::Ptr<_1d65144d7_UseDecl>*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*);
inline jule::Str _1d7155468_useDeclTokstoa(_1d714cc79_parser*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*);
inline void _1d71557cb_buildStdUseDecl(_1d714cc79_parser*, jule::Ptr<_1d65144d7_UseDecl>*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>);
inline void _1d7155b3e_buildIdentUseDecl(_1d714cc79_parser*, jule::Ptr<_1d65144d7_UseDecl>*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>);
inline void _1d7155ea2_parseUseDecl(_1d714cc79_parser*, jule::Ptr<_1d65144d7_UseDecl>*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>);
inline jule::Ptr<_1d65144d7_UseDecl> _1d715639d_buildUseDecl(_1d714cc79_parser*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>, jule::Bool);
inline jule::Ptr<_1d64eb3d1_TypeDecl> _1d7156799_buildTypeEnumItemKind(jule::Ptr<_1d714cc79_parser>, jule::I64*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*);
inline jule::Slice<jule::Ptr<_1d6515d79_TypeEnumItemDecl>> _1d7156ada_buildTypeEnumItems(jule::Ptr<_1d714cc79_parser>, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*);
inline jule::Ptr<_1d65164d9_TypeEnumDecl> _1d7156e2b_buildTypeEnumDecl(jule::Ptr<_1d714cc79_parser>, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*);
inline jule::Ptr<_1d6500715_Expr> _1d7157327_buildEnumItemExpr(jule::Ptr<_1d714cc79_parser>, jule::I64*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*);
inline jule::Slice<jule::Ptr<_1d651498d_EnumItemDecl>> _1d7157668_buildEnumItems(jule::Ptr<_1d714cc79_parser>, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*);
inline jule::Ptr<_1d651554e_EnumDecl> _1d71579a9_buildEnumDecl(jule::Ptr<_1d714cc79_parser>, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*);
inline jule::Any _1d7157cea_buildNodeEnumDecl(jule::Ptr<_1d714cc79_parser>, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*);
inline jule::Ptr<_1d65167a3_FieldDecl> _1d715813b_buildField(jule::Ptr<_1d714cc79_parser>, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>);
inline jule::Slice<jule::Ptr<_1d65167a3_FieldDecl>> _1d715847c_buildStructDeclFields(jule::Ptr<_1d714cc79_parser>, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>);
inline jule::Ptr<_1d6517199_StructDecl> _1d71587bd_buildStructDecl(jule::Ptr<_1d714cc79_parser>, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*);
inline void _1d7158a76_checkMethodReceiver(_1d714cc79_parser*, jule::Ptr<_1d650d091_FnDecl>*);
inline void _1d7158dd9_buildTraitBody(jule::Ptr<_1d714cc79_parser>, jule::Ptr<_1d65178d6_TraitDecl>*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>);
inline jule::Ptr<_1d65178d6_TraitDecl> _1d715922a_buildTraitDecl(jule::Ptr<_1d714cc79_parser>, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*);
inline jule::Ptr<_1d650d091_FnDecl> _1d715956b_buildBindFn(jule::Ptr<_1d714cc79_parser>, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>);
inline jule::Ptr<_1d650e24b_VarDecl> _1d71598ac_buildBindVar(jule::Ptr<_1d714cc79_parser>, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>);
inline jule::Ptr<_1d6517199_StructDecl> _1d7159bed_buildBindStruct(jule::Ptr<_1d714cc79_parser>, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>);
inline jule::Ptr<_1d6512ded_TypeAliasDecl> _1d715a03e_buildBindTypeAlias(jule::Ptr<_1d714cc79_parser>, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>);
inline jule::Ptr<_1d65144d7_UseDecl> _1d715a380_buildBindUse(jule::Ptr<_1d714cc79_parser>, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>);
inline jule::Any _1d715a6c1_buildBind(jule::Ptr<_1d714cc79_parser>, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*);
inline jule::Ptr<_1d650d091_FnDecl> _1d715aa12_getMethod(jule::Ptr<_1d714cc79_parser>, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*);
inline void _1d715ad75_parseImplBody(jule::Ptr<_1d714cc79_parser>, jule::Ptr<_1d6518046_Impl>*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*);
inline jule::Ptr<_1d6518046_Impl> _1d715b1b6_buildImpl(jule::Ptr<_1d714cc79_parser>, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>);
inline jule::Any _1d715b507_buildNodeData(jule::Ptr<_1d714cc79_parser>, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*);
inline void _1d715b7b0_applyFnMeta(_1d714cc79_parser*, jule::Ptr<_1d650d091_FnDecl>*);
inline void _1d715ba68_applyMeta(_1d714cc79_parser*, _1d64ea3d0_Node*);
inline void _1d715bd21_pushUseDecl(jule::Ptr<_1d714cc79_parser>, jule::Ptr<_1d65144d7_UseDecl>*);
inline jule::Bool _1d715c162_pushMetaNodes(jule::Ptr<_1d714cc79_parser>, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*);
inline _1d64ea3d0_Node _1d715c4a3_parseNode(jule::Ptr<_1d714cc79_parser>, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*);
inline void _1d715c75b_appendNode(jule::Ptr<_1d714cc79_parser>, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*);
inline void _1d715cc34_removeRange(_1d714cc79_parser*, jule::I64, jule::U64, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*, jule::Slice<jule::I64>*);
inline void _1d715d152_pushWrongOrderCloseErr(_1d714cc79_parser*, jule::Ptr<_1d64d5cd3_Token>*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*, jule::Slice<jule::I64>*);
inline void _1d715d62a_pushRangeClose(_1d714cc79_parser*, jule::Ptr<_1d64d5cd3_Token>, jule::U64, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*, jule::Slice<jule::I64>*);
inline void _1d715d8d3_checkRanges(_1d714cc79_parser*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*);
inline void _1d715db8b_parse(jule::Ptr<_1d714cc79_parser>, jule::Ptr<_1d64db59c_File>*);
inline void _1d71604ea_pushErr(_1d715ee56_typeBuilder*, jule::Ptr<_1d64d5cd3_Token>, jule::Str);
inline void _1d716085d_pushSuggestion(_1d715ee56_typeBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1d64eb3d1_TypeDecl> _1d7160ae4_buildNamespace(_1d715ee56_typeBuilder*);
inline jule::Slice<jule::Ptr<_1d64eb3d1_TypeDecl>> _1d7160d7a_buildGenerics(_1d715ee56_typeBuilder*);
inline jule::Slice<jule::Slice<jule::Ptr<_1d64d5cd3_Token>>> _1d7161111_identGenerics(_1d715ee56_typeBuilder*);
inline jule::Ptr<_1d64eb3d1_TypeDecl> _1d7161397_buildIdent(_1d715ee56_typeBuilder*);
inline jule::Ptr<_1d64eb3d1_TypeDecl> _1d716162d_buildCppLink(_1d715ee56_typeBuilder*);
inline jule::Ptr<_1d64eb3d1_TypeDecl> _1d71618b4_buildFn(_1d715ee56_typeBuilder*);
inline jule::Ptr<_1d64eb3d1_TypeDecl> _1d7161b4a_buildPtr(_1d715ee56_typeBuilder*);
inline jule::Ptr<_1d64eb3d1_TypeDecl> _1d7161dd1_buildSptr(_1d715ee56_typeBuilder*);
inline jule::Ptr<_1d64eb3d1_TypeDecl> _1d7162167_buildSlc(_1d715ee56_typeBuilder*);
inline jule::Ptr<_1d64eb3d1_TypeDecl> _1d71623ed_buildArr(_1d715ee56_typeBuilder*);
inline jule::Ptr<_1d64eb3d1_TypeDecl> _1d7162684_buildMap(_1d715ee56_typeBuilder*);
inline jule::Ptr<_1d64eb3d1_TypeDecl> _1d716291a_buildEnumerable(_1d715ee56_typeBuilder*);
inline jule::Ptr<_1d64eb3d1_TypeDecl> _1d7162ba1_step(_1d715ee56_typeBuilder*);
inline __jule_tuple_x_1d64eb3d1_TypeDecl__jule_tuple_bool _1d7162e37_build(_1d715ee56_typeBuilder*);
inline void _1d687abc2_pushErr(_1d687a672_directiveEval*, jule::Ptr<_1d64d5cd3_Token>, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Slice<jule::Ptr<_1d64d5cd3_Token>>> _1d687b0bd_splitOperans(_1d687a672_directiveEval*, jule::U64, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*);
inline jule::Bool _1d687b40e_evalDirectiveIdent(_1d687a672_directiveEval*, jule::Str);
inline jule::Bool _1d687b750_evalDirectivePart(_1d687a672_directiveEval*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>);
inline jule::Bool _1d687b9d6_eval(_1d687a672_directiveEval*);
inline jule::Ptr<_1d7163e49_JuleImporter> static__1d7164345_New(_1d6879198_CompileInfo);
inline jule::Slice<jule::Ptr<_1d659590e_ImportInfo>> _1d71645cb_AllPackages(_1d7163e49_JuleImporter*);
inline void _1d7164a1b_SetModPath(_1d7163e49_JuleImporter*, jule::Str);
inline jule::Str _1d7164ca2_GetModPath(_1d7163e49_JuleImporter*);
inline jule::Str _1d71650e3_ModById(_1d7163e49_JuleImporter*, jule::I64);
inline jule::Ptr<_1d659590e_ImportInfo> _1d7165434_GetImport(_1d7163e49_JuleImporter*, jule::Str);
inline __jule_tuple_sx_1d64e9423_Ast__jule_tuple_s_1e0235a7e_Log _1d7165830_ImportPackage(_1d7163e49_JuleImporter*, jule::Str, jule::Bool);
inline void _1d7165ad8_Imported(_1d7163e49_JuleImporter*, jule::Ptr<_1d659590e_ImportInfo>);
inline __jule_tuple_bool__jule_tuple_s_1e0235a7e_Log _1d7166017_isPassBuildDirectives(_1d7163e49_JuleImporter*, jule::Ptr<_1d64e9423_Ast>*);
inline jule::Bool _1daa1c7ee_isCommonOrdered(jule::Slice<jule::Ptr<_1d651c2d1_Struct>>, jule::Ptr<_1d651c2d1_Struct>);
inline jule::Bool _1daa2278d_isCommonOrdered(jule::Slice<jule::Ptr<_1d65d9018_Var>>, jule::Ptr<_1d65d9018_Var>);
inline void _1daa18e5a_orderCommon(jule::Slice<jule::Ptr<_1d651c2d1_Struct>>*);
inline void _1daa1d190_orderCommon(jule::Slice<jule::Ptr<_1d65d9018_Var>>*);
inline void static__1d7169a98_orderStructures(jule::Slice<jule::Ptr<_1d651c2d1_Struct>>*);
inline void static__1d7169cc9_orderVars(jule::Slice<jule::Ptr<_1d65d9018_Var>>*);
inline void _1d72c74ca_optimizeChild(jule::Ptr<_1d72c7024_scopeDeadCode>, jule::Ptr<_1d6574129_Scope>*);
inline void _1d72c7783_optimizeBodyChildExceptional(jule::Ptr<_1d72c7024_scopeDeadCode>, jule::Ptr<_1d6574129_Scope>*);
inline void _1d72c7a3b_optimizeBodyChild(jule::Ptr<_1d72c7024_scopeDeadCode>, jule::Ptr<_1d6574129_Scope>*);
inline void _1d72c7ce4_optimizeExprModel(jule::Ptr<_1d72c7024_scopeDeadCode>, jule::Any*);
inline void _1d72c7ee2_eliminateFollowed(_1d72c7024_scopeDeadCode*);
inline void _1d72c829a_pushGoto(jule::Ptr<_1d72c7024_scopeDeadCode>, jule::Ptr<_1d6576d96_GotoSt>);
inline void _1d72c8553_pushLabel(jule::Ptr<_1d72c7024_scopeDeadCode>, jule::Ptr<_1d65769bc_Label>);
inline void _1d72c880b_optimizeRangeIter(jule::Ptr<_1d72c7024_scopeDeadCode>, jule::Ptr<_1d6575e61_RangeIter>);
inline void _1d72c8ab4_optimizeWhileIter(jule::Ptr<_1d72c7024_scopeDeadCode>, jule::Ptr<_1d6575515_WhileIter>);
inline void _1d72c8d6c_optimizeInfIter(jule::Ptr<_1d72c7024_scopeDeadCode>, jule::Ptr<_1d657505e_InfIter>);
inline void _1d72c9125_optimizeConditional(jule::Ptr<_1d72c7024_scopeDeadCode>, jule::Ptr<_1d6574c62_Conditional>);
inline void _1d72c93cd_optimizeMatch(jule::Ptr<_1d72c7024_scopeDeadCode>, jule::Ptr<_1d6578260_Match>);
inline void _1d72c9686_optimizeAssign(jule::Ptr<_1d72c7024_scopeDeadCode>, jule::Ptr<_1d6577726_Assign>);
inline void _1d72c993e_optimizeMultiAssign(jule::Ptr<_1d72c7024_scopeDeadCode>, jule::Ptr<_1d6577b00_MultiAssign>);
inline void _1d72c9be7_optimizeStmt(jule::Ptr<_1d72c7024_scopeDeadCode>, jule::Any);
inline void _1d72c9de5_optimizeStmts(jule::Ptr<_1d72c7024_scopeDeadCode>);
inline _1d72cb27b_exprDeadCode static__1d72cb8b9_new(jule::Ptr<_1d72c7024_scopeDeadCode>*);
inline void _1d72cbb72_binary(_1d72cb27b_exprDeadCode*, jule::Ptr<_1d6524508_BinaryExprModel>);
inline void _1d72cbe2a_unary(_1d72cb27b_exprDeadCode*, jule::Ptr<_1d65248d2_UnaryExprModel>);
inline void _1d72cc1d3_structureLit(_1d72cb27b_exprDeadCode*, jule::Ptr<_1d65252a6_StructLitExprModel>);
inline void _1d72cc48b_allocStructure(_1d72cb27b_exprDeadCode*, jule::Ptr<_1d65255a3_AllocStructLitExprModel>);
inline void _1d72cc744_casting(_1d72cb27b_exprDeadCode*, jule::Ptr<_1d6525b36_CastingExprModel>);
inline void _1d72cc9ec_args(_1d72cb27b_exprDeadCode*, jule::Slice<jule::Any>*);
inline void _1d72ccca5_funcCall(_1d72cb27b_exprDeadCode*, jule::Ptr<_1d65264d8_FnCallExprModel>);
inline void _1d72cd05d_slice(_1d72cb27b_exprDeadCode*, jule::Ptr<_1d65268b2_SliceExprModel>);
inline void _1d72cd316_array(_1d72cb27b_exprDeadCode*, jule::Ptr<_1d6529909_ArrayExprModel>);
inline void _1d72cd5be_indexing(_1d72cb27b_exprDeadCode*, jule::Ptr<_1d6526d68_IndexingExprModel>);
inline void _1d72cd877_anonFunc(_1d72cb27b_exprDeadCode*, jule::Ptr<_1d6527242_AnonFnExprModel>);
inline void _1d72cdb30_mapExpr(_1d72cb27b_exprDeadCode*, jule::Ptr<_1d6527ac2_MapExprModel>);
inline void _1d72cddd8_slicing(_1d72cb27b_exprDeadCode*, jule::Ptr<_1d6528155_SlicingExprModel>);
inline void _1d72ce191_traitSub(_1d72cb27b_exprDeadCode*, jule::Ptr<_1d65286d8_TraitSubIdentExprModel>);
inline void _1d72ce449_structureSub(_1d72cb27b_exprDeadCode*, jule::Ptr<_1d6529079_StructSubIdentExprModel>);
inline void _1d72ce702_tuple(_1d72cb27b_exprDeadCode*, jule::Ptr<_1d6529c06_TupleExprModel>);
inline void _1d72ce9aa_newCall(_1d72cb27b_exprDeadCode*, jule::Ptr<_1d652a883_BuiltinNewCallExprModel>);
inline void _1d72cec63_outCall(_1d72cb27b_exprDeadCode*, jule::Ptr<_1d652a0d0_BuiltinOutCallExprModel>);
inline void _1d72d001b_outlnCall(_1d72cb27b_exprDeadCode*, jule::Ptr<_1d652a4a9_BuiltinOutlnCallExprModel>);
inline void _1d72d02c4_panicCall(_1d72cb27b_exprDeadCode*, jule::Ptr<_1d652ac5c_BuiltinPanicCallExprModel>);
inline void _1d72d057c_assertCall(_1d72cb27b_exprDeadCode*, jule::Ptr<_1d652b213_BuiltinAssertCallExprModel>);
inline void _1d72d0835_errorCall(_1d72cb27b_exprDeadCode*, jule::Ptr<_1d652cd19_BuiltinErrorCallExprModel>);
inline void _1d72d0add_makeCall(_1d72cb27b_exprDeadCode*, jule::Ptr<_1d652b6b9_BuiltinMakeCallExprModel>);
inline void _1d72d0d96_appendCall(_1d72cb27b_exprDeadCode*, jule::Ptr<_1d652ba93_BuiltinAppendCallExprModel>);
inline void _1d72d114e_lenCall(_1d72cb27b_exprDeadCode*, jule::Ptr<_1d652bd90_BuiltinLenCallExprModel>);
inline void _1d72d1407_capCall(_1d72cb27b_exprDeadCode*, jule::Ptr<_1d652c18c_BuiltinCapCallExprModel>);
inline void _1d72d16b0_deleteCall(_1d72cb27b_exprDeadCode*, jule::Ptr<_1d652c566_BuiltinDeleteCallExprModel>);
inline void _1d72d1968_sizeof(_1d72cb27b_exprDeadCode*, jule::Ptr<_1d65288c5_SizeofExprModel>);
inline void _1d72d1c21_alignof(_1d72cb27b_exprDeadCode*, jule::Ptr<_1d652d545_AlignofExprModel>);
inline void _1d72d1ec9_integratedToStr(_1d72cb27b_exprDeadCode*, jule::Ptr<_1d652db3e_IntegratedToStrExprModel>);
inline void _1d72d2282_free(_1d72cb27b_exprDeadCode*, jule::Ptr<_1d652e315_FreeExprModel>);
inline void _1d72d253a_backendEmit(_1d72cb27b_exprDeadCode*, jule::Ptr<_1d652e018_BackendEmitExprModel>);
inline void _1d72d27e3_optimize(_1d72cb27b_exprDeadCode*, jule::Any*);
inline jule::Ptr<_1d677478b_scopeOptimizer> static__1d6774cca_new(jule::Ptr<_1d6574129_Scope>);
inline void _1d6775083_setCurrentStmt(_1d677478b_scopeOptimizer*, jule::Any);
inline void _1d6775281_removeCurrent(_1d677478b_scopeOptimizer*);
inline void _1d6775539_optimizeData(_1d677478b_scopeOptimizer*, jule::Ptr<_1d664721e_Data>);
inline void _1d67757e2_optimizeVar(_1d677478b_scopeOptimizer*, jule::Ptr<_1d65d9018_Var>);
inline void _1d6775a9a_optimizeConditional(_1d677478b_scopeOptimizer*, jule::Ptr<_1d6574c62_Conditional>);
inline void _1d6775eb8_buildDefaultConstantTrueCase(_1d677478b_scopeOptimizer*, jule::Ptr<_1d6578d98_Case>, jule::I64*, jule::Ptr<_1d6578260_Match>*);
inline void _1d6776271_optimizeMatch(_1d677478b_scopeOptimizer*, jule::Ptr<_1d6578260_Match>);
inline void _1d6776529_optimizeRangeIter(_1d677478b_scopeOptimizer*, jule::Ptr<_1d6575e61_RangeIter>);
inline void _1d67767d2_optimizeWhileIter(_1d677478b_scopeOptimizer*, jule::Ptr<_1d6575515_WhileIter>);
inline jule::Bool _1d6776b23_substr(_1d677478b_scopeOptimizer*, jule::Ptr<_1d6577726_Assign>);
inline jule::Bool _1d6776e64_strAssign(_1d677478b_scopeOptimizer*, jule::Ptr<_1d6577726_Assign>);
inline jule::Bool _1d67772a5_sliceAssign(_1d677478b_scopeOptimizer*, jule::Ptr<_1d6577726_Assign>);
inline void _1d677755d_optimizeAssign(_1d677478b_scopeOptimizer*, jule::Ptr<_1d6577726_Assign>);
inline jule::Bool _1d677789e_tryOptimizeSwap(_1d677478b_scopeOptimizer*, jule::Ptr<_1d6577b00_MultiAssign>*);
inline void _1d6777b57_optimizeMultiAssign(_1d677478b_scopeOptimizer*, jule::Ptr<_1d6577b00_MultiAssign>);
inline void _1d6777e10_optimizeRet(_1d677478b_scopeOptimizer*, jule::Ptr<_1d6579827_RetSt>);
inline void _1d67781b8_optimizeStmt(_1d677478b_scopeOptimizer*, jule::Any);
inline void _1d6778471_optimizeChild(_1d677478b_scopeOptimizer*, jule::Ptr<_1d6574129_Scope>);
inline void _1d677866e_optimize(_1d677478b_scopeOptimizer*);
inline void static__1d677b012_optimize(jule::Any*);
inline jule::Bool _1d677b353_selfCmpCond(_1d677a929_exprOptimizer*, jule::Ptr<_1d6524508_BinaryExprModel>*);
inline jule::Bool _1d677b694_boolCond(_1d677a929_exprOptimizer*, jule::Ptr<_1d6524508_BinaryExprModel>*);
inline jule::Bool _1d677b9d5_strCond(_1d677a929_exprOptimizer*, jule::Ptr<_1d6524508_BinaryExprModel>);
inline jule::Bool _1d677be8b_tryNeutralElement1(_1d677a929_exprOptimizer*, jule::Ptr<_1d6524508_BinaryExprModel>*, jule::Ptr<_1d4321208_Const>, jule::Ptr<_1d652400d_OperandExprModel>*);
inline jule::Bool _1d677c2cc_tryNeutralElement(_1d677a929_exprOptimizer*, jule::Ptr<_1d6524508_BinaryExprModel>*);
inline void _1d677c585_binary(_1d677a929_exprOptimizer*, jule::Ptr<_1d6524508_BinaryExprModel>);
inline void _1d677c83d_unary(_1d677a929_exprOptimizer*, jule::Ptr<_1d65248d2_UnaryExprModel>);
inline void _1d677cae6_structureLit(_1d677a929_exprOptimizer*, jule::Ptr<_1d65252a6_StructLitExprModel>);
inline void _1d677cd9e_allocStructure(_1d677a929_exprOptimizer*, jule::Ptr<_1d65255a3_AllocStructLitExprModel>);
inline void _1d677d157_casting(_1d677a929_exprOptimizer*, jule::Ptr<_1d6525b36_CastingExprModel>);
inline void _1d677d410_args(_1d677a929_exprOptimizer*, jule::Slice<jule::Any>*);
inline void _1d677d6b8_scope(_1d677a929_exprOptimizer*, jule::Ptr<_1d6574129_Scope>*);
inline void _1d677d971_funcCall(_1d677a929_exprOptimizer*, jule::Ptr<_1d65264d8_FnCallExprModel>);
inline void _1d677dc29_slice(_1d677a929_exprOptimizer*, jule::Ptr<_1d65268b2_SliceExprModel>);
inline void _1d677ded2_array(_1d677a929_exprOptimizer*, jule::Ptr<_1d6529909_ArrayExprModel>);
inline void _1d677e28a_indexing(_1d677a929_exprOptimizer*, jule::Ptr<_1d6526d68_IndexingExprModel>);
inline void _1d677e543_anonFunc(_1d677a929_exprOptimizer*, jule::Ptr<_1d6527242_AnonFnExprModel>);
inline void _1d677e7eb_mapExpr(_1d677a929_exprOptimizer*, jule::Ptr<_1d6527ac2_MapExprModel>);
inline void _1d677eaa4_slicing(_1d677a929_exprOptimizer*, jule::Ptr<_1d6528155_SlicingExprModel>);
inline void _1d677ed5c_traitSub(_1d677a929_exprOptimizer*, jule::Ptr<_1d65286d8_TraitSubIdentExprModel>);
inline void _1d6780115_structureSub(_1d677a929_exprOptimizer*, jule::Ptr<_1d6529079_StructSubIdentExprModel>);
inline void _1d67803bd_tuple(_1d677a929_exprOptimizer*, jule::Ptr<_1d6529c06_TupleExprModel>);
inline void _1d6780676_newCall(_1d677a929_exprOptimizer*, jule::Ptr<_1d652a883_BuiltinNewCallExprModel>);
inline void _1d678092e_outCall(_1d677a929_exprOptimizer*, jule::Ptr<_1d652a0d0_BuiltinOutCallExprModel>);
inline void _1d6780bd7_outlnCall(_1d677a929_exprOptimizer*, jule::Ptr<_1d652a4a9_BuiltinOutlnCallExprModel>);
inline void _1d6780e90_panicCall(_1d677a929_exprOptimizer*, jule::Ptr<_1d652ac5c_BuiltinPanicCallExprModel>);
inline void _1d6781248_assertCall(_1d677a929_exprOptimizer*, jule::Ptr<_1d652b213_BuiltinAssertCallExprModel>);
inline void _1d6781501_errorCall(_1d677a929_exprOptimizer*, jule::Ptr<_1d652cd19_BuiltinErrorCallExprModel>);
inline void _1d67817a9_makeCall(_1d677a929_exprOptimizer*, jule::Ptr<_1d652b6b9_BuiltinMakeCallExprModel>);
inline void _1d6781a62_appendCall(_1d677a929_exprOptimizer*, jule::Ptr<_1d652ba93_BuiltinAppendCallExprModel>);
inline void _1d6781d1a_lenCall(_1d677a929_exprOptimizer*, jule::Ptr<_1d652bd90_BuiltinLenCallExprModel>);
inline void _1d67820c3_capCall(_1d677a929_exprOptimizer*, jule::Ptr<_1d652c18c_BuiltinCapCallExprModel>);
inline void _1d678237b_deleteCall(_1d677a929_exprOptimizer*, jule::Ptr<_1d652c566_BuiltinDeleteCallExprModel>);
inline void _1d6782634_sizeof(_1d677a929_exprOptimizer*, jule::Ptr<_1d65288c5_SizeofExprModel>);
inline void _1d67828dc_alignof(_1d677a929_exprOptimizer*, jule::Ptr<_1d652d545_AlignofExprModel>);
inline void _1d6782b95_integratedToStr(_1d677a929_exprOptimizer*, jule::Ptr<_1d652db3e_IntegratedToStrExprModel>);
inline void _1d6782e4d_free(_1d677a929_exprOptimizer*, jule::Ptr<_1d652e315_FreeExprModel>);
inline void _1d6783206_backendEmit(_1d677a929_exprOptimizer*, jule::Ptr<_1d652e018_BackendEmitExprModel>);
inline void _1d6783404_do(_1d677a929_exprOptimizer*);
inline jule::Ptr<_1d72d32e9_Optimizer> static__1d72d376c_New(jule::Ptr<_1d7166787_IR>*);
inline void _1d72d3a25_optimizeGlobal(_1d72d32e9_Optimizer*, jule::Ptr<_1d65d9018_Var>*);
inline void _1d72d3ccd_optimizeFunction(_1d72d32e9_Optimizer*, jule::Ptr<_1d653226e_Fn>*);
inline void _1d72d4086_optimizeStruct(_1d72d32e9_Optimizer*, jule::Ptr<_1d651c2d1_Struct>*);
inline void _1d72d433e_optimizeGlobals(_1d72d32e9_Optimizer*, jule::Ptr<_1d6598835_Package>*);
inline void _1d72d45e7_optimizeFunctions(_1d72d32e9_Optimizer*, jule::Ptr<_1d6598835_Package>*);
inline void _1d72d48a0_optimizeStructs(_1d72d32e9_Optimizer*, jule::Ptr<_1d6598835_Package>*);
inline void _1d72d4b58_optimizePackage(_1d72d32e9_Optimizer*, jule::Ptr<_1d6598835_Package>*);
inline void _1d72d4d56_Optimize(_1d72d32e9_Optimizer*);
inline void static__1d7309cc1_Reset(void);
inline void static__1d730b0d0_Print(jule::Str, jule::Str);
inline void static__1d730c7da_LogFlat(_1e0235a7e_Log*);
inline void static__1d730ca1b_LogError(_1e0235a7e_Log*);
inline void static__1d730cc4c_Log(_1e0235a7e_Log*);
inline void static__1d730ce7d_PrintLogs(jule::Slice<_1e0235a7e_Log>*);
inline _1d7c433a7_Time static__1d7c4375e_Unix(jule::U64);
inline _1d7c433a7_Time static__1d7c4396d_Now(void);
inline _1d7c42bd1_AbsTime _1d7c45156_Abs(_1d7c433a7_Time*);
inline jule::Ptr<_1d7b69355_scopeCoder> static__1d7b69971_new(jule::Ptr<_1d7c4c856_ObjectCoder>*);
inline void _1dad01808_iterHead(jule::Ptr<_1d7b69355_scopeCoder>, jule::Ptr<_1d6575e61_RangeIter>*, jule::Bool*, jule::Str);
inline void _1d7b6a147_rangeIndexIter(jule::Ptr<_1d7b69355_scopeCoder>, jule::Ptr<_1d6575e61_RangeIter>*);
inline void _1d7b6a400_rangeHashmapIter(jule::Ptr<_1d7b69355_scopeCoder>, jule::Ptr<_1d6575e61_RangeIter>*);
inline void _1d7b6a6a8_ifCase(jule::Ptr<_1d7b69355_scopeCoder>, jule::Ptr<_1d6574547_If>);
inline void _1d7b6a961_conditional(jule::Ptr<_1d7b69355_scopeCoder>, jule::Ptr<_1d6574c62_Conditional>);
inline void _1d7b6ac19_infIter(jule::Ptr<_1d7b69355_scopeCoder>, jule::Ptr<_1d657505e_InfIter>);
inline void _1d7b6aec2_whileIter(jule::Ptr<_1d7b69355_scopeCoder>, jule::Ptr<_1d6575515_WhileIter>);
inline void _1d7b6b27a_rangeIter(jule::Ptr<_1d7b69355_scopeCoder>, jule::Ptr<_1d6575e61_RangeIter>);
inline void _1d7b6b533_cont(jule::Ptr<_1d7b69355_scopeCoder>, jule::Ptr<_1d65762e6_ContSt>);
inline void _1d7b6b7db_label(jule::Ptr<_1d7b69355_scopeCoder>, jule::Ptr<_1d65769bc_Label>);
inline void _1d7b6ba94_gotoSt(jule::Ptr<_1d7b69355_scopeCoder>, jule::Ptr<_1d6576d96_GotoSt>);
inline void _1d7b6bd4c_postfix(jule::Ptr<_1d7b69355_scopeCoder>, jule::Ptr<_1d6577270_Postfix>);
inline void _1d7b6c105_assign(jule::Ptr<_1d7b69355_scopeCoder>, jule::Ptr<_1d6577726_Assign>);
inline void _1d7b6c3ad_mapLookupAssign(jule::Ptr<_1d7b69355_scopeCoder>, jule::Ptr<_1d6577b00_MultiAssign>*);
inline void _1d7b6c666_multiAssignTup(jule::Ptr<_1d7b69355_scopeCoder>, jule::Ptr<_1d6577b00_MultiAssign>*);
inline void _1d7b6c91e_multiAssignFn(jule::Ptr<_1d7b69355_scopeCoder>, jule::Ptr<_1d6577b00_MultiAssign>*);
inline void _1d7b6cbc7_multiAssign(jule::Ptr<_1d7b69355_scopeCoder>, jule::Ptr<_1d6577b00_MultiAssign>);
inline jule::Fn<void(void)> _1d7b6d018_matchExpr(jule::Ptr<_1d7b69355_scopeCoder>, jule::Ptr<_1d6578260_Match>);
inline void _1d7b6d37b_case(jule::Ptr<_1d7b69355_scopeCoder>, jule::Ptr<_1d6578260_Match>, jule::Ptr<_1d6578d98_Case>);
inline void _1d7b6d634_matchSt(jule::Ptr<_1d7b69355_scopeCoder>, jule::Ptr<_1d6578260_Match>);
inline void _1d7b6d8dc_fallSt(jule::Ptr<_1d7b69355_scopeCoder>, jule::Ptr<_1d6579492_FallSt>);
inline void _1d7b6db95_breakSt(jule::Ptr<_1d7b69355_scopeCoder>, jule::Ptr<_1d65766c0_BreakSt>);
inline void _1d7b6de4d_setResult(jule::Ptr<_1d7b69355_scopeCoder>, jule::Ptr<_1d6579827_RetSt>);
inline void _1d7b6e206_retSt(jule::Ptr<_1d7b69355_scopeCoder>, jule::Ptr<_1d6579827_RetSt>);
inline void _1d7b6e4ae_var(jule::Ptr<_1d7b69355_scopeCoder>, jule::Ptr<_1d65d9018_Var>);
inline void _1d7b6e767_mutSlicing(jule::Ptr<_1d7b69355_scopeCoder>, jule::Ptr<_1d67726ce_MutSlicingExprModel>);
inline void _1d7b6ea20_swap(jule::Ptr<_1d7b69355_scopeCoder>, jule::Ptr<_1d6771403_SwapExprModel>);
inline void _1d7b6ecc8_st(jule::Ptr<_1d7b69355_scopeCoder>, jule::Any);
inline void _1d7b70081_scopeStmts(jule::Ptr<_1d7b69355_scopeCoder>, jule::Ptr<_1d6574129_Scope>*);
inline void _1d7b70339_scope(jule::Ptr<_1d7b69355_scopeCoder>, jule::Ptr<_1d6574129_Scope>);
inline void _1d7b705e2_funcScope(jule::Ptr<_1d7b69355_scopeCoder>, jule::Ptr<_1d6535173_FnIns>);
inline jule::Ptr<_1d7b734d5_exprCoder> static__1d7b7389d_new(jule::Ptr<_1d7c4c856_ObjectCoder>*);
inline void _1d7b73b56_string(jule::Ptr<_1d7b734d5_exprCoder>, jule::Ptr<_1d4321208_Const>*);
inline void _1d7b73e0e_boolean(jule::Ptr<_1d7b734d5_exprCoder>, jule::Bool);
inline void _1d7b7410c_nilLit(jule::Ptr<_1d7b734d5_exprCoder>);
inline jule::Bool _1d7b7444d_ftoaSpecialCases(jule::Ptr<_1d7b734d5_exprCoder>, jule::F64*);
inline void _1d7b74706_float32(jule::Ptr<_1d7b734d5_exprCoder>, jule::Ptr<_1d4321208_Const>*);
inline void _1d7b749ae_float64(jule::Ptr<_1d7b734d5_exprCoder>, jule::Ptr<_1d4321208_Const>*);
inline void _1d7b74c67_constant(jule::Ptr<_1d7b734d5_exprCoder>, jule::Ptr<_1d4321208_Const>);
inline void _1d7b75185_divByZeroBinary(jule::Ptr<_1d7b734d5_exprCoder>, jule::Ptr<_1d64d5cd3_Token>*, jule::Ptr<_1d652400d_OperandExprModel>*, jule::Ptr<_1d652400d_OperandExprModel>*);
inline void _1d7b7543d_unsafeBinary(jule::Ptr<_1d7b734d5_exprCoder>, jule::Ptr<_1d6524508_BinaryExprModel>);
inline void _1d7b756e6_binary(jule::Ptr<_1d7b734d5_exprCoder>, jule::Ptr<_1d6524508_BinaryExprModel>);
inline void _1d7b7599e_var(jule::Ptr<_1d7b734d5_exprCoder>, jule::Ptr<_1d65d9018_Var>);
inline void _1d7b75c57_structureIns(jule::Ptr<_1d7b734d5_exprCoder>, jule::Ptr<_1d652005e_StructIns>);
inline void _1d7b76010_unary(jule::Ptr<_1d7b734d5_exprCoder>, jule::Ptr<_1d65248d2_UnaryExprModel>);
inline void _1d7b762b8_structureLit(jule::Ptr<_1d7b734d5_exprCoder>, jule::Ptr<_1d65252a6_StructLitExprModel>);
inline void _1d7b76571_allocStructure(jule::Ptr<_1d7b734d5_exprCoder>, jule::Ptr<_1d65255a3_AllocStructLitExprModel>);
inline void _1d7b76829_possibleRefExpr(jule::Ptr<_1d7b734d5_exprCoder>, jule::Any);
inline void _1d7b76c47_castTraitFromTrait(jule::Ptr<_1d7b734d5_exprCoder>, jule::Ptr<_1d6525b36_CastingExprModel>*, jule::Ptr<_1d654554b_Trait>, jule::Ptr<_1d654554b_Trait>);
inline void _1d7b77000_casting(jule::Ptr<_1d7b734d5_exprCoder>, jule::Ptr<_1d6525b36_CastingExprModel>);
inline void _1d7b772a8_models(jule::Ptr<_1d7b734d5_exprCoder>, jule::Slice<jule::Any>);
inline void _1d7b77561_args(jule::Ptr<_1d7b734d5_exprCoder>, jule::Ptr<_1d65264d8_FnCallExprModel>*);
inline void _1d7b77819_modelForCall(jule::Ptr<_1d7b734d5_exprCoder>, jule::Any);
inline void _1d7b77ac2_pushCallInf(jule::Ptr<_1d7b734d5_exprCoder>, jule::Ptr<_1d65264d8_FnCallExprModel>*);
inline jule::Bool _1d7b77e13_isWrapped(jule::Ptr<_1d7b734d5_exprCoder>, jule::Ptr<_1d65264d8_FnCallExprModel>*);
inline void _1d7b781bb_pureFuncCall(jule::Ptr<_1d7b734d5_exprCoder>, jule::Ptr<_1d65264d8_FnCallExprModel>*);
inline void _1d7b78474_coFuncCall(jule::Ptr<_1d7b734d5_exprCoder>, jule::Ptr<_1d65264d8_FnCallExprModel>*);
inline void _1d7b787d7_writeUseExpr(jule::Ptr<_1d7b734d5_exprCoder>, jule::Ptr<_1d6535173_FnIns>*, jule::Ptr<_1d664721e_Data>);
inline void _1d7b78a90_funcCall(jule::Ptr<_1d7b734d5_exprCoder>, jule::Ptr<_1d65264d8_FnCallExprModel>);
inline void _1d7b78d48_slice(jule::Ptr<_1d7b734d5_exprCoder>, jule::Ptr<_1d65268b2_SliceExprModel>);
inline void _1d7b79101_indexing(jule::Ptr<_1d7b734d5_exprCoder>, jule::Ptr<_1d6526d68_IndexingExprModel>);
inline void _1d7b793a9_unsafeIndexing(jule::Ptr<_1d7b734d5_exprCoder>, jule::Ptr<_1d6772cc8_UnsafeIndexingExprModel>);
inline void _1d7b79662_anonFunc(jule::Ptr<_1d7b734d5_exprCoder>, jule::Ptr<_1d6527242_AnonFnExprModel>);
inline void _1d7b7991a_mapExpr(jule::Ptr<_1d7b734d5_exprCoder>, jule::Ptr<_1d6527ac2_MapExprModel>);
inline void _1d7b79bc3_slicing(jule::Ptr<_1d7b734d5_exprCoder>, jule::Ptr<_1d6528155_SlicingExprModel>);
inline void _1d7b79e7b_traitSub(jule::Ptr<_1d7b734d5_exprCoder>, jule::Ptr<_1d65286d8_TraitSubIdentExprModel>);
inline void _1d7b7a234_structureSub(jule::Ptr<_1d7b734d5_exprCoder>, jule::Ptr<_1d6529079_StructSubIdentExprModel>);
inline void _1d7b7a4dc_array(jule::Ptr<_1d7b734d5_exprCoder>, jule::Ptr<_1d6529909_ArrayExprModel>);
inline void _1d7b7a795_funcInsCommon(jule::Ptr<_1d7b734d5_exprCoder>, jule::Ptr<_1d6535173_FnIns>);
inline void _1d7b7aa4d_funcIns(jule::Ptr<_1d7b734d5_exprCoder>, jule::Ptr<_1d6535173_FnIns>);
inline void _1d7b7ad06_tuple(jule::Ptr<_1d7b734d5_exprCoder>, jule::Ptr<_1d6529c06_TupleExprModel>);
inline void _1d7b7b0ae_newCall(jule::Ptr<_1d7b734d5_exprCoder>, jule::Ptr<_1d652a883_BuiltinNewCallExprModel>);
inline void _1d7b7b367_outCall(jule::Ptr<_1d7b734d5_exprCoder>, jule::Ptr<_1d652a0d0_BuiltinOutCallExprModel>);
inline void _1d7b7b620_outlnCall(jule::Ptr<_1d7b734d5_exprCoder>, jule::Ptr<_1d652a4a9_BuiltinOutlnCallExprModel>);
inline void _1d7b7b8c8_panicCall(jule::Ptr<_1d7b734d5_exprCoder>, jule::Ptr<_1d652ac5c_BuiltinPanicCallExprModel>);
inline void _1d7b7bb81_assertCall(jule::Ptr<_1d7b734d5_exprCoder>, jule::Ptr<_1d652b213_BuiltinAssertCallExprModel>);
inline void _1d7b7be39_errorCall(jule::Ptr<_1d7b734d5_exprCoder>, jule::Ptr<_1d652cd19_BuiltinErrorCallExprModel>);
inline void _1d7b7c1e2_copyCall(jule::Ptr<_1d7b734d5_exprCoder>, jule::Ptr<_1d652c940_BuiltinCopyCallExprModel>);
inline void _1d7b7c49a_lenCall(jule::Ptr<_1d7b734d5_exprCoder>, jule::Ptr<_1d652bd90_BuiltinLenCallExprModel>);
inline void _1d7b7c753_capCall(jule::Ptr<_1d7b734d5_exprCoder>, jule::Ptr<_1d652c18c_BuiltinCapCallExprModel>);
inline void _1d7b7ca0b_deleteCall(jule::Ptr<_1d7b734d5_exprCoder>, jule::Ptr<_1d652c566_BuiltinDeleteCallExprModel>);
inline void _1d7b7ccb4_makeCallSlice(jule::Ptr<_1d7b734d5_exprCoder>, jule::Ptr<_1d652b6b9_BuiltinMakeCallExprModel>*);
inline void _1d7b7d06c_makeCallStr(jule::Ptr<_1d7b734d5_exprCoder>, jule::Ptr<_1d652b6b9_BuiltinMakeCallExprModel>*);
inline void _1d7b7d325_makeCall(jule::Ptr<_1d7b734d5_exprCoder>, jule::Ptr<_1d652b6b9_BuiltinMakeCallExprModel>);
inline void _1d7b7d5cd_pushToSlice(jule::Ptr<_1d7b734d5_exprCoder>, jule::Ptr<_1d6773207_PushToSliceExprModel>);
inline void _1d7b7d886_appendToSlice(jule::Ptr<_1d7b734d5_exprCoder>, jule::Ptr<_1d67735d1_AppendToSliceExprModel>);
inline void _1d7b7db3e_appendCall(jule::Ptr<_1d7b734d5_exprCoder>, jule::Ptr<_1d652ba93_BuiltinAppendCallExprModel>);
inline void _1d7b7dde7_sizeof(jule::Ptr<_1d7b734d5_exprCoder>, jule::Ptr<_1d65288c5_SizeofExprModel>);
inline void _1d7b7e1a0_alignof(jule::Ptr<_1d7b734d5_exprCoder>, jule::Ptr<_1d652d545_AlignofExprModel>);
inline void _1d7b7e458_runeLit(jule::Ptr<_1d7b734d5_exprCoder>, jule::Ptr<_1d652d842_RuneExprModel>);
inline void _1d7b7e711_structureStatic(jule::Ptr<_1d7b734d5_exprCoder>, jule::Ptr<_1d6529530_StructStaticIdentExprModel>);
inline void _1d7b7e9b9_integratedToStr(jule::Ptr<_1d7b734d5_exprCoder>, jule::Ptr<_1d652db3e_IntegratedToStrExprModel>);
inline void _1d7b7ec72_backendEmit(jule::Ptr<_1d7b734d5_exprCoder>, jule::Ptr<_1d652e018_BackendEmitExprModel>);
inline void _1d7b8002a_free(jule::Ptr<_1d7b734d5_exprCoder>, jule::Ptr<_1d652e315_FreeExprModel>);
inline void _1d7b802d3_strComp(jule::Ptr<_1d7b734d5_exprCoder>, jule::Ptr<_1d677214b_StrCompExprModel>);
inline void _1d7b8058b_emptyCompare(jule::Ptr<_1d7b734d5_exprCoder>, jule::Ptr<_1d6771821_EmptyCompareExprModel>);
inline void _1d7b80844_model(jule::Ptr<_1d7b734d5_exprCoder>, jule::Any);
inline void _1d7b80aec_initExpr(jule::Ptr<_1d7b734d5_exprCoder>, jule::Ptr<_1d6677a35_TypeKind>);
inline jule::Ptr<_1d7b83cba_TestCoder> static__1d7b8420a_New(jule::Ptr<_1d7c4c856_ObjectCoder>*);
inline jule::Ptr<_1d659590e_ImportInfo> _1d7b84491_findTestingPackage(jule::Ptr<_1d7b83cba_TestCoder>);
inline void _1d7b84749_appendTest(jule::Ptr<_1d7b83cba_TestCoder>, jule::Ptr<_1d6535173_FnIns>);
inline void _1d7b84a02_appendPackageTests(jule::Ptr<_1d7b83cba_TestCoder>, jule::Ptr<_1d6598835_Package>*);
inline jule::Bool _1d7b84c88_readyTestingPackage(jule::Ptr<_1d7b83cba_TestCoder>);
inline void _1d7b84e86_callTmReset(jule::Ptr<_1d7b83cba_TestCoder>);
inline void _1d7b85184_callTmFailed(jule::Ptr<_1d7b83cba_TestCoder>);
inline void _1d7b85382_callTmSkipped(jule::Ptr<_1d7b83cba_TestCoder>);
inline void _1d7b85580_Serialize(jule::Ptr<_1d7b83cba_TestCoder>);
inline void static__1d7b870ba_writeIdentTo(_1e01838bc_StrBuilder*, jule::Str*);
inline void static__1d7b87461_toOut(_1e01838bc_StrBuilder*, jule::Str, jule::Uintptr);
inline void static__1d7b878b2_toLocal(_1e01838bc_StrBuilder*, jule::I64, jule::I64, jule::Str*);
inline void static__1d7b87b9d_func(_1e01838bc_StrBuilder*, jule::Ptr<_1d653226e_Fn>*);
inline void static__1d7b87e89_funcIns(_1e01838bc_StrBuilder*, jule::Ptr<_1d6535173_FnIns>*);
inline void static__1d7b88275_traitDecl(_1e01838bc_StrBuilder*, jule::Ptr<_1d654554b_Trait>);
inline void static__1d7b88561_param(_1e01838bc_StrBuilder*, jule::Ptr<_1d653079a_Param>*);
inline void static__1d7b8884c_structure(_1e01838bc_StrBuilder*, jule::Ptr<_1d651c2d1_Struct>*);
inline void static__1d7b88b38_structureIns(_1e01838bc_StrBuilder*, jule::Ptr<_1d652005e_StructIns>*);
inline void static__1d7b88e24_field(_1e01838bc_StrBuilder*, jule::Ptr<_1d65193dd_Field>*);
inline void static__1d7b89210_var(_1e01838bc_StrBuilder*, jule::Ptr<_1d65d9018_Var>);
inline void static__1d7b894eb_iterBegin(_1e01838bc_StrBuilder*, jule::Uintptr);
inline void static__1d7b897d7_iterEnd(_1e01838bc_StrBuilder*, jule::Uintptr);
inline void static__1d7b89ac3_iterNext(_1e01838bc_StrBuilder*, jule::Uintptr);
inline void static__1d7b89dae_label(_1e01838bc_StrBuilder*, jule::Uintptr);
inline void static__1d7b8a19a_matchEnd(_1e01838bc_StrBuilder*, jule::Uintptr);
inline void static__1d7b8a486_caseBegin(_1e01838bc_StrBuilder*, jule::Uintptr);
inline jule::Str _1d7c5c349_Str(_1d7c5bea3_customType*);
inline jule::Bool _1d7c5c68a_Equal(jule::Ptr<_1d7c5bea3_customType>, jule::Ptr<_1d6677a35_TypeKind>);
inline jule::Ptr<_1d7c5cab9_typeCoder> static__1d7c5d108_new(jule::Ptr<_1d7c4c856_ObjectCoder>*);
inline void _1d7c5d46b_toType(_1d7c5cab9_typeCoder*, _1e01838bc_StrBuilder*, jule::Str);
inline void _1d7c5d7ce_prim(_1d7c5cab9_typeCoder*, _1e01838bc_StrBuilder*, jule::Ptr<_1d668060e_Prim>);
inline void _1d7c5db42_tuple(_1d7c5cab9_typeCoder*, _1e01838bc_StrBuilder*, jule::Ptr<_1d6685702_Tuple>);
inline void _1d7c5dea5_asSptr(_1d7c5cab9_typeCoder*, _1e01838bc_StrBuilder*, jule::Slice<jule::U8>);
inline void _1d7c5e318_sptr(_1d7c5cab9_typeCoder*, _1e01838bc_StrBuilder*, jule::Ptr<_1d668413a_Sptr>);
inline void _1d7c5e67b_ptr(_1d7c5cab9_typeCoder*, _1e01838bc_StrBuilder*, jule::Ptr<_1d6687902_Ptr>);
inline void _1d7c5e9de_enumDecl(_1d7c5cab9_typeCoder*, _1e01838bc_StrBuilder*, jule::Ptr<_1d6547c57_Enum>);
inline void _1d7c5ed52_typeEnumDecl(_1d7c5cab9_typeCoder*, _1e01838bc_StrBuilder*, jule::Ptr<_1d6549462_TypeEnum>);
inline void _1d7c601b5_asSlice(_1d7c5cab9_typeCoder*, _1e01838bc_StrBuilder*, jule::Ptr<_1d6677a35_TypeKind>);
inline void _1d7c60528_slice(_1d7c5cab9_typeCoder*, _1e01838bc_StrBuilder*, jule::Ptr<_1d6684b0d_Slc>);
inline void _1d7c6088b_mapType(_1d7c5cab9_typeCoder*, _1e01838bc_StrBuilder*, jule::Ptr<_1d66862a2_Map>);
inline void _1d7c61062_traitDecl(_1d7c5cab9_typeCoder*, _1e01838bc_StrBuilder*, jule::Ptr<_1d654554b_Trait>);
inline void _1d7c613c5_structure(_1d7c5cab9_typeCoder*, _1e01838bc_StrBuilder*, jule::Ptr<_1d651c2d1_Struct>);
inline void _1d7c61738_structureIns(_1d7c5cab9_typeCoder*, _1e01838bc_StrBuilder*, jule::Ptr<_1d652005e_StructIns>);
inline void _1d7c61a9b_array(_1d7c5cab9_typeCoder*, _1e01838bc_StrBuilder*, jule::Ptr<_1d6686e2e_Arr>);
inline void _1d7c62272_paramIns(_1d7c5cab9_typeCoder*, _1e01838bc_StrBuilder*, jule::Ptr<_1d65341c7_ParamIns>*);
inline void _1d7c62948_funcInsResult(_1d7c5cab9_typeCoder*, _1e01838bc_StrBuilder*, jule::Ptr<_1d6535173_FnIns>*);
inline void _1d7c62cab_anonFunc(_1d7c5cab9_typeCoder*, _1e01838bc_StrBuilder*, jule::Ptr<_1d6535173_FnIns>);
inline void _1d7c6311e_func(_1d7c5cab9_typeCoder*, _1e01838bc_StrBuilder*, jule::Ptr<_1d6535173_FnIns>);
inline void _1d7c63482_kind(_1d7c5cab9_typeCoder*, _1e01838bc_StrBuilder*, jule::Ptr<_1d6677a35_TypeKind>);
inline jule::Ptr<_1d7c65e8a_resultCoder> static__1d7c66463_new(jule::Ptr<_1d7c5cab9_typeCoder>*);
inline void _1d7c667c6_ptr(_1d7c65e8a_resultCoder*, _1e01838bc_StrBuilder*, jule::Ptr<_1d6687902_Ptr>);
inline void _1d7c66b39_sptr(_1d7c65e8a_resultCoder*, _1e01838bc_StrBuilder*, jule::Ptr<_1d668413a_Sptr>);
inline void _1d7c66e9c_mapType(_1d7c65e8a_resultCoder*, _1e01838bc_StrBuilder*, jule::Ptr<_1d66862a2_Map>);
inline void _1d7c67310_slice(_1d7c65e8a_resultCoder*, _1e01838bc_StrBuilder*, jule::Ptr<_1d6684b0d_Slc>);
inline void _1d7c67673_arr(_1d7c65e8a_resultCoder*, _1e01838bc_StrBuilder*, jule::Ptr<_1d6686e2e_Arr>);
inline void _1d7c679d6_func(_1d7c65e8a_resultCoder*, _1e01838bc_StrBuilder*, jule::Ptr<_1d6535173_FnIns>);
inline void _1d7c67d49_tup(_1d7c65e8a_resultCoder*, _1e01838bc_StrBuilder*, jule::Ptr<_1d6685702_Tuple>);
inline void _1d7c681ac_codeMut(_1d7c65e8a_resultCoder*, _1e01838bc_StrBuilder*, jule::Ptr<_1d6677a35_TypeKind>*);
inline void _1d7c68520_codeMut1(_1d7c65e8a_resultCoder*, _1e01838bc_StrBuilder*, jule::Ptr<_1d6677a35_TypeKind>*);
inline jule::Slice<jule::U8> _1d7c6882d_code(_1d7c65e8a_resultCoder*, jule::Ptr<_1d6677a35_TypeKind>*);
inline jule::Str _1db2bb4cb_Name(_1db2bb663_Flag*);
inline jule::Str _1db2bb94e_What(_1db2bb663_Flag*);
inline void _1db2bba92_Reset(_1db2bb663_Flag*);
inline jule::I32 _1db2bbbd5_Short(_1db2bb663_Flag*);
inline jule::Str _1db2beb2d_Name(_1db2c0007_Flag*);
inline jule::Str _1db2c02e3_What(_1db2c0007_Flag*);
inline void _1db2c0436_Reset(_1db2c0007_Flag*);
inline jule::I32 _1db2c0579_Short(_1db2c0007_Flag*);
inline jule::Str _1db2c3329_Name(_1db2c3703_Flag*);
inline jule::Str _1db2c39de_What(_1db2c3703_Flag*);
inline void _1db2c3b32_Reset(_1db2c3703_Flag*);
inline jule::I32 _1db2c3c75_Short(_1db2c3703_Flag*);
inline jule::Str _1db2c6a69_Name(_1db2c6e43_Flag*);
inline jule::Str _1db2c722e_What(_1db2c6e43_Flag*);
inline void _1db2c7372_Reset(_1db2c6e43_Flag*);
inline jule::I32 _1db2c74b5_Short(_1db2c6e43_Flag*);
inline jule::Str _1db2ca265_Name(_1db2ca63e_Flag*);
inline jule::Str _1db2ca92a_What(_1db2ca63e_Flag*);
inline void _1db2caa6d_Reset(_1db2ca63e_Flag*);
inline jule::I32 _1db2cabb1_Short(_1db2ca63e_Flag*);
inline jule::Ptr<_1d7cd19d9_FlagSet> static__1d7cd1cc5_New(void);
inline jule::Trait<_1d7ccee38_CommonFlag> _1d7cd2248_FindFlag(_1d7cd19d9_FlagSet*, jule::Str);
inline jule::Trait<_1d7ccee38_CommonFlag> _1d7cd2589_FindFlagShort(_1d7cd19d9_FlagSet*, jule::I32);
inline jule::Exceptional<jule::Slice<jule::Str>> _1d7cd2b61_Parse(_1d7cd19d9_FlagSet*, jule::Slice<jule::Str>);
inline jule::Ptr<_1db2ca63e_Flag> _1db348d61_addFlagCommon(_1d7cd19d9_FlagSet*, jule::Str, jule::I32, jule::Str);
inline jule::Ptr<_1db2c6e43_Flag> _1db350b8c_addFlagCommon(_1d7cd19d9_FlagSet*, jule::Str, jule::I32, jule::Str);
inline void _1db346a51_AddVar(_1d7cd19d9_FlagSet*, jule::Ptr<jule::Str>, jule::Str, jule::I32, jule::Str);
inline void _1db34d8c1_AddVar(_1d7cd19d9_FlagSet*, jule::Ptr<jule::Bool>, jule::Str, jule::I32, jule::Str);
inline __jule_tuple_i64__jule_tuple_bool _1db2e33c1_parseInteger(_1d7cd446a_argParser*, jule::Str*, jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I64)>);
inline __jule_tuple_u64__jule_tuple_bool _1db2eab9d_parseInteger(_1d7cd446a_argParser*, jule::Str*, jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I64)>);
inline jule::Str _1d7cd4c84_getData(_1d7cd446a_argParser*);
inline jule::VoidExceptional _1d7cd5009_processFlag(_1d7cd446a_argParser*, jule::Trait<_1d7ccee38_CommonFlag>*);
inline jule::VoidExceptional _1d7cd52b2_singleDash(_1d7cd446a_argParser*, jule::Str*);
inline jule::VoidExceptional _1d7cd556a_doubleDash(_1d7cd446a_argParser*, jule::Str*);
inline jule::VoidExceptional _1d7cd5768_tryArg(_1d7cd446a_argParser*);
inline jule::VoidExceptional _1d7cd5966_parse(_1d7cd446a_argParser*);
inline jule::Ptr<_1d7c4c856_ObjectCoder> static__1d7c4cc52_New(jule::Ptr<_1d7166787_IR>*, _1d7c4ad3d_SerializationInfo);
inline void _1d7c4d00a_write(jule::Ptr<_1d7c4c856_ObjectCoder>, jule::Str);
inline void _1d7c4d2b3_writeBytes(jule::Ptr<_1d7c4c856_ObjectCoder>, jule::Slice<jule::U8>);
inline void _1d7c4d4b1_addIndent(jule::Ptr<_1d7c4c856_ObjectCoder>);
inline void _1d7c4d6ae_doneIndent(jule::Ptr<_1d7c4c856_ObjectCoder>);
inline void _1d7c4d8ac_indent(jule::Ptr<_1d7c4c856_ObjectCoder>);
inline jule::I64 _1d7c4dbed_findAnyType(jule::Ptr<_1d7c4c856_ObjectCoder>, jule::Ptr<_1d6677a35_TypeKind>*);
inline jule::I64 _1d7c4e03e_pushAnyType(jule::Ptr<_1d7c4c856_ObjectCoder>, jule::Ptr<_1d6677a35_TypeKind>);
inline void _1d7c4e2e7_pushResultIns(jule::Ptr<_1d7c4c856_ObjectCoder>, jule::Ptr<_1d6535173_FnIns>*);
inline void _1d7c4e5a0_pushResult(jule::Ptr<_1d7c4c856_ObjectCoder>, jule::Ptr<_1d653226e_Fn>*);
inline jule::I64 _1d7c4e99b_findTypeOffsetS(_1d7c4c856_ObjectCoder*, jule::Ptr<_1d654554b_Trait>, jule::Ptr<_1d652005e_StructIns>);
inline jule::I64 _1d7c4ed97_findTypeOffset(_1d7c4c856_ObjectCoder*, jule::Ptr<_1d654554b_Trait>, jule::Ptr<_1d6677a35_TypeKind>);
inline void _1d7c5020a_pushAndWriteMaskMapper(jule::Ptr<_1d7c4c856_ObjectCoder>, jule::Ptr<_1d654554b_Trait>, jule::Ptr<_1d654554b_Trait>);
inline void _1d7c504b3_locInfo(jule::Ptr<_1d7c4c856_ObjectCoder>, jule::Ptr<_1d64d5cd3_Token>*);
inline void _1d7c506b1_head(jule::Ptr<_1d7c4c856_ObjectCoder>);
inline void _1d7c508ae_links(jule::Ptr<_1d7c4c856_ObjectCoder>);
inline void _1d7c50b67_prepareStructure(_1d7c4c856_ObjectCoder*, jule::Ptr<_1d651c2d1_Struct>*);
inline void _1d7c50d65_prepareStructures(jule::Ptr<_1d7c4c856_ObjectCoder>);
inline void _1d7c5111d_iterPackages(jule::Ptr<_1d7c4c856_ObjectCoder>, jule::Fn<void(jule::Ptr<_1d6598835_Package>*)>);
inline void _1d7c5131b_buildTraitMap(jule::Ptr<_1d7c4c856_ObjectCoder>);
inline void _1d7c51519_traitDecls(jule::Ptr<_1d7c4c856_ObjectCoder>);
inline void _1d7c517c2_structurePlainDecl(jule::Ptr<_1d7c4c856_ObjectCoder>, jule::Ptr<_1d651c2d1_Struct>*);
inline void _1d7c519c0_structurePlainDecls(jule::Ptr<_1d7c4c856_ObjectCoder>);
inline void _1d7c51c78_fieldDecl(jule::Ptr<_1d7c4c856_ObjectCoder>, jule::Ptr<_1d651e4ae_FieldIns>*);
inline void _1d7c52031_structureDestructor(jule::Ptr<_1d7c4c856_ObjectCoder>, jule::Ptr<_1d652005e_StructIns>*);
inline void _1d7c52394_structureOperatorEq(jule::Ptr<_1d7c4c856_ObjectCoder>, jule::Slice<jule::U8>, jule::Ptr<_1d652005e_StructIns>*);
inline void _1d7c52707_structureOperatorNotEq(jule::Ptr<_1d7c4c856_ObjectCoder>, jule::Slice<jule::U8>, jule::Ptr<_1d652005e_StructIns>*);
inline void _1d7c52b25_structureOperator(jule::Ptr<_1d7c4c856_ObjectCoder>, jule::Slice<jule::U8>, jule::Ptr<_1d6535173_FnIns>*, jule::Str);
inline void _1d7c52dcd_structureOperators(jule::Ptr<_1d7c4c856_ObjectCoder>, jule::Ptr<_1d652005e_StructIns>*);
inline void _1d7c53186_structureInsDecl(jule::Ptr<_1d7c4c856_ObjectCoder>, jule::Ptr<_1d652005e_StructIns>*);
inline void _1d7c5343e_structureDecl(jule::Ptr<_1d7c4c856_ObjectCoder>, jule::Ptr<_1d651c2d1_Struct>*);
inline void _1d7c5363c_structureDecls(jule::Ptr<_1d7c4c856_ObjectCoder>);
inline void _1d7c5383a_structureMethodDecls(jule::Ptr<_1d7c4c856_ObjectCoder>);
inline void _1d7c53ae3_paramsDecls(jule::Ptr<_1d7c4c856_ObjectCoder>, jule::Slice<jule::Ptr<_1d65341c7_ParamIns>>*);
inline void _1d7c53e56_funcHead(jule::Ptr<_1d7c4c856_ObjectCoder>, jule::Ptr<_1d6535173_FnIns>*, jule::Bool);
inline void _1d7c542b9_funcDeclIns(jule::Ptr<_1d7c4c856_ObjectCoder>, jule::Ptr<_1d6535173_FnIns>*, jule::Bool);
inline void _1d7c5462c_funcDecl(jule::Ptr<_1d7c4c856_ObjectCoder>, jule::Ptr<_1d653226e_Fn>*, jule::Bool);
inline void _1d7c54a4a_funcDeclTrait(jule::Ptr<_1d7c4c856_ObjectCoder>, jule::Ptr<_1d654554b_Trait>*, jule::Ptr<_1d653226e_Fn>*, jule::Bool);
inline void _1d7c54c48_funcDecls(jule::Ptr<_1d7c4c856_ObjectCoder>);
inline void _1d7c550ab_traitDataTypeMethods(jule::Ptr<_1d7c4c856_ObjectCoder>, jule::Ptr<_1d654554b_Trait>*, jule::Ptr<_1d654554b_Trait>*);
inline void _1d7c552a9_traitDataTypes(jule::Ptr<_1d7c4c856_ObjectCoder>);
inline void _1d7c55562_paramIns(jule::Ptr<_1d7c4c856_ObjectCoder>, jule::Ptr<_1d65341c7_ParamIns>*);
inline void _1d7c5581a_paramsIns(jule::Ptr<_1d7c4c856_ObjectCoder>, jule::Slice<jule::Ptr<_1d65341c7_ParamIns>>*);
inline void _1d7c55b7d_varInitExpr(jule::Ptr<_1d7c4c856_ObjectCoder>, jule::Ptr<_1d65d9018_Var>*, jule::Fn<void(void)>);
inline void _1d7c55e36_var(jule::Ptr<_1d7c4c856_ObjectCoder>, jule::Ptr<_1d65d9018_Var>);
inline void _1d7c561de_funcIns(jule::Ptr<_1d7c4c856_ObjectCoder>, jule::Ptr<_1d6535173_FnIns>*);
inline void _1d7c56497_func(jule::Ptr<_1d7c4c856_ObjectCoder>, jule::Ptr<_1d653226e_Fn>*);
inline void _1d7c5680a_funcTrait(jule::Ptr<_1d7c4c856_ObjectCoder>, jule::Ptr<_1d7c4b415_traitHash>*, jule::Ptr<_1d653226e_Fn>*);
inline void _1d7c56b6d_traitWrapper(jule::Ptr<_1d7c4c856_ObjectCoder>, jule::Ptr<_1d653226e_Fn>*, jule::Ptr<_1d7c4b415_traitHash>*);
inline void _1d7c56d6b_traitWrappers(jule::Ptr<_1d7c4c856_ObjectCoder>);
inline void _1d7c571ce_traitDataMethods(jule::Ptr<_1d7c4c856_ObjectCoder>, jule::Ptr<_1d654554b_Trait>*, jule::Ptr<_1d7c4b415_traitHash>*);
inline void _1d7c57542_traitData(jule::Ptr<_1d7c4c856_ObjectCoder>, jule::Ptr<_1d7c4b415_traitHash>*, jule::Ptr<_1d654554b_Trait>*);
inline void _1d7c57740_traitDatas(jule::Ptr<_1d7c4c856_ObjectCoder>);
inline void _1d7c5793d_globals(jule::Ptr<_1d7c4c856_ObjectCoder>);
inline void _1d7c57b3b_decls(jule::Ptr<_1d7c4c856_ObjectCoder>);
inline void _1d7c57de4_structureMethods(jule::Ptr<_1d7c4c856_ObjectCoder>, jule::Ptr<_1d652005e_StructIns>*);
inline void _1d7c5819c_structureOstream(jule::Ptr<_1d7c4c856_ObjectCoder>, jule::Ptr<_1d652005e_StructIns>*);
inline void _1d7c58455_structureIns(jule::Ptr<_1d7c4c856_ObjectCoder>, jule::Ptr<_1d652005e_StructIns>*);
inline void _1d7c5870d_structure(jule::Ptr<_1d7c4c856_ObjectCoder>, jule::Ptr<_1d651c2d1_Struct>*);
inline void _1d7c5890b_structures(jule::Ptr<_1d7c4c856_ObjectCoder>);
inline void _1d7c58b09_funcs(jule::Ptr<_1d7c4c856_ObjectCoder>);
inline void _1d7c58db2_pushInit(jule::Ptr<_1d7c4c856_ObjectCoder>, jule::Ptr<_1d6598835_Package>*);
inline void _1d7c590b0_initCaller(jule::Ptr<_1d7c4c856_ObjectCoder>);
inline void _1d7c592ad_end(jule::Ptr<_1d7c4c856_ObjectCoder>);
inline void _1d7c594ab_serializeHead(jule::Ptr<_1d7c4c856_ObjectCoder>);
inline void _1d7c596a9_Serialize(jule::Ptr<_1d7c4c856_ObjectCoder>);
inline jule::Ptr<_1d7292c15_ObjectDeadCode> static__1d72931aa_new(jule::Ptr<_1d7166787_IR>*);
inline jule::Bool _1daa4a563_isLive(jule::Ptr<_1d7292c15_ObjectDeadCode>, jule::Ptr<_1d654554b_Trait>*);
inline jule::Bool _1daa510d5_isLive(jule::Ptr<_1d7292c15_ObjectDeadCode>, jule::Ptr<_1d6535173_FnIns>*);
inline jule::Bool _1daa56dbb_isLive(jule::Ptr<_1d7292c15_ObjectDeadCode>, jule::Ptr<_1d652005e_StructIns>*);
inline jule::Bool _1daa5e247_isLive(jule::Ptr<_1d7292c15_ObjectDeadCode>, jule::Ptr<_1d65d9018_Var>*);
inline void _1daa4a970_pushLive(jule::Ptr<_1d7292c15_ObjectDeadCode>, jule::Ptr<_1d654554b_Trait>);
inline void _1daa5148c_pushLive(jule::Ptr<_1d7292c15_ObjectDeadCode>, jule::Ptr<_1d6535173_FnIns>);
inline void _1daa574c6_pushLive(jule::Ptr<_1d7292c15_ObjectDeadCode>, jule::Ptr<_1d652005e_StructIns>);
inline void _1daa5e654_pushLive(jule::Ptr<_1d7292c15_ObjectDeadCode>, jule::Ptr<_1d65d9018_Var>);
inline void _1d72c354d_setReferencesAsLive(jule::Ptr<_1d7292c15_ObjectDeadCode>, jule::Ptr<_1d6538341_ReferenceStack>*);
inline void _1d72c3806_inits(jule::Ptr<_1d7292c15_ObjectDeadCode>, jule::Ptr<_1d6598835_Package>*);
inline void _1d72c3aae_collectLivePackage(jule::Ptr<_1d7292c15_ObjectDeadCode>, jule::Ptr<_1d6598835_Package>*);
inline void _1d72c3cac_collectLive(jule::Ptr<_1d7292c15_ObjectDeadCode>);
inline void _1d72c4065_removeDeadGlobals(jule::Ptr<_1d7292c15_ObjectDeadCode>, jule::Slice<jule::Ptr<_1d65d9018_Var>>*);
inline void _1d72c431d_removeDeadFns(jule::Ptr<_1d7292c15_ObjectDeadCode>, jule::Slice<jule::Ptr<_1d653226e_Fn>>*);
inline void _1d72c45c6_removeDeadStructs(jule::Ptr<_1d7292c15_ObjectDeadCode>, jule::Slice<jule::Ptr<_1d651c2d1_Struct>>*);
inline void _1d72c487e_removeDeadTraits(jule::Ptr<_1d7292c15_ObjectDeadCode>, jule::Slice<jule::Ptr<_1d654554b_Trait>>*);
inline void _1d72c4b37_removeDeadsFile(jule::Ptr<_1d7292c15_ObjectDeadCode>, jule::Ptr<_1d6641d73_SymbolTable>*);
inline void _1d72c4de0_removeDeadsPackage(jule::Ptr<_1d7292c15_ObjectDeadCode>, jule::Ptr<_1d6598835_Package>*);
inline void _1d72c50dd_removeDeads(jule::Ptr<_1d7292c15_ObjectDeadCode>);
inline void _1d72c52db_elimanate(jule::Ptr<_1d7292c15_ObjectDeadCode>);
inline __jule_tuple_x_1d7166787_IR__jule_tuple_s_1e0235a7e_Log static__1d7166be9_Build(jule::Str, jule::I64);
inline void _1d71671d3_appendStructs(_1d7166787_IR*, jule::Ptr<_1d6598835_Package>*, jule::Slice<jule::Ptr<_1d651c2d1_Struct>>*);
inline jule::Slice<jule::Ptr<_1d651c2d1_Struct>> _1d7167469_GetAllStructures(_1d7166787_IR*);
inline void _1d71677cc_appendGlobals(_1d7166787_IR*, jule::Ptr<_1d6598835_Package>*, jule::Slice<jule::Ptr<_1d65d9018_Var>>*);
inline jule::Slice<jule::Ptr<_1d65d9018_Var>> _1d7167a63_GetAllGlobals(_1d7166787_IR*);
inline void _1d7167c61_Order(_1d7166787_IR*);
inline jule::Str _1d65203d3_Str(_1d652005e_StructIns*);
inline jule::Bool _1d6520724_Equal(jule::Ptr<_1d652005e_StructIns>, jule::Ptr<_1d6677a35_TypeKind>);
inline jule::Bool _1d6520bca_Same(_1d652005e_StructIns*, jule::Ptr<_1d652005e_StructIns>);
inline jule::Ptr<_1d653226e_Fn> _1d65210c6_FindMethod(_1d652005e_StructIns*, jule::Str, jule::Bool);
inline jule::Ptr<_1d651e4ae_FieldIns> _1d6521417_FindField(_1d652005e_StructIns*, jule::Str);
inline jule::Ptr<_1d65d9018_Var> _1d6521758_FindStatic(_1d652005e_StructIns*, jule::Str);
inline jule::Ptr<_1e02e7aa8_Cmd> static__1e02e7ec6_New(jule::Str);
inline jule::VoidExceptional _1e02e81c4_Spawn(_1e02e7aa8_Cmd*);
inline jule::Exceptional<jule::I64> _1e02e8658_Wait(_1e02e7aa8_Cmd*);
inline jule::VoidExceptional _1e034c58b_spawn(_1e02e7aa8_Cmd*);
inline jule::Exceptional<jule::I64> _1e034ca20_wait(_1e02e7aa8_Cmd*);
inline void _2166de85d_Free(void*);
inline jule::Str _2167201b8_BytePtrToStr(jule::U8*);
inline jule::Slice<jule::U8> _216720482_StrToBytes(jule::Str);
inline jule::I64 _208aec51a_GetLastErrno(void);
inline jule::I64 _21672ec55_Fcntl(jule::I64, jule::I64, jule::I64);
inline jule::I64 _2167300c9_Stat(jule::U8*, struct stat*);
inline jule::I64 _216730508_Open(jule::U8*, jule::I64, jule::I64);
inline jule::U8* _21673087c_Getcwd(jule::U8*, jule::U64);
inline DIR* _216730d77_Opendir(jule::U8*);
inline struct dirent* _216731141_Readdir(DIR*);
inline jule::I64 _21673140a_Closedir(DIR*);
inline jule::I64 _216731d12_Mkdir(jule::U8*, jule::I64);
inline jule::I64 _2167320cb_Rmdir(jule::U8*);
inline jule::I64 _216732395_Unlink(jule::U8*);
inline jule::I64 _216737a3d_Read(jule::I64, void*, jule::U64);
inline jule::I64 _216737dd4_Close(jule::I64);
inline jule::I64 _216738313_Write(jule::I64, void*, jule::U64);
inline void _216738544_Exit(jule::I64);
inline jule::Str _21681c5e5_Str(jule::U8*, jule::I64);
inline jule::Slice<jule::U8> _1d7d6a875_Slice(jule::U8*, jule::I64);
inline jule::Slice<jule::U8> _21682838c_StrBytes(jule::Str);
inline jule::Str _216828656_BytesStr(jule::Slice<jule::U8>);
inline jule::Str _216828920_StrFromBytes(jule::Slice<jule::U8>);
inline jule::I64 _21684dd96_getLastOsError(void);
inline jule::Slice<jule::Str> _2168535b5_Args(void);
inline jule::Exceptional<jule::Str> _216853a5a_WorkingDir(void);
inline jule::Exceptional<jule::Str> _216854495_getwd(void);
inline jule::Bool _21944dc18_IsLetter(jule::I32);
inline jule::Bool _2194b67ca_is16(jule::Slice<_2194b4a3c_Range16>, jule::U16);
inline jule::Bool _2194b6b4e_is32(jule::Slice<_2194b506a_Range32>, jule::U32);
inline jule::Bool _2194b7457_isExcludingLatin(jule::Ptr<_2194b5521_RangeTable>, jule::I32);
inline jule::Bool _2194b7721_IsUpper(jule::I32);
inline __jule_tuple_i32__jule_tuple_int _1e012a138_DecodeRune(jule::Slice<jule::U8>);
inline __jule_tuple_i32__jule_tuple_int _1e012a479_DecodeRuneStr(jule::Str);
inline __jule_tuple_i32__jule_tuple_int _1e012aa0c_DecodeLastRuneStr(jule::Str);
inline jule::Slice<jule::U8> _1e012b59b_AppendRune(jule::Slice<jule::U8>, jule::I32);
inline jule::Slice<jule::U8> _1e012b920_appendRuneNonASCII(jule::Slice<jule::U8>, jule::I32);
inline jule::I64 _1e012bea3_RuneCountStr(jule::Str);
inline jule::Bool _1e012c26c_RuneStart(jule::U8);
inline jule::I64 _1e016ceb1_findLastByte(jule::U8*, jule::U8*, jule::U8);
inline jule::I64 _1e016d643_FindByteStr(jule::Str, jule::U8);
inline jule::I64 _1e016d9b7_FindLastByteStr(jule::Str, jule::U8);
inline jule::Str _1e016dcb4_Repeat(jule::Str, jule::I64);
inline jule::Bool _1e016e237_hasPrefix(jule::Str*, jule::Str*, jule::I64);
inline jule::Bool _1e016e5ab_HasPrefix(jule::Str, jule::Str);
inline jule::Bool _1e016ea62_hasSuffix(jule::Str*, jule::Str*, jule::I64);
inline jule::Bool _1e016eda3_HasSuffix(jule::Str, jule::Str);
inline jule::I64 _1e01702d2_FindAt(jule::Str, jule::Str, jule::I64);
inline jule::I64 _1e0170656_Find(jule::Str, jule::Str);
inline jule::I64 _1e0170b95_FindLastAt(jule::Str, jule::Str, jule::I64);
inline jule::I64 _1e0171019_FindLast(jule::Str, jule::Str);
inline jule::I64 _1e0172768_FindLastByte(jule::Str, jule::U8);
inline jule::I64 _1e0172c96_FindRune(jule::Str, jule::I32);
inline jule::I64 _1e017348e_FindAny(jule::Str, jule::Str);
inline jule::Slice<jule::Str> _1e0173c42_Split(jule::Str, jule::Str, jule::I64);
inline jule::Bool _1e01740b6_Contains(jule::Str, jule::Str);
inline jule::Bool _1e0174b33_ContainsAny(jule::Str, jule::Str);
inline jule::I64 _1e0174ea7_Count(jule::Str, jule::Str);
inline jule::Str _1e0175491_Replace(jule::Str, jule::Str, jule::Str, jule::I64);
inline jule::Str _1e017621c_TrimLeft(jule::Str, jule::Str);
inline jule::Str _1e0176591_TrimRight(jule::Str, jule::Str);
inline jule::Str _1e0176b68_Trim(jule::Str, jule::Str);
inline jule::Str _1e0176dbb_Join(jule::Slice<jule::Str>, jule::Str);
inline jule::Str _1e0190412_Clean(jule::Str);
inline jule::Str _1e01909d9_FromSlash(jule::Str);
inline jule::Str _1e0190c92_Join(jule::Slice<jule::Str>);
inline jule::Str _1e019105b_Ext(jule::Str);
inline __jule_tuple_str__jule_tuple_bool _1e0191325_Abs(jule::Str);
inline jule::Str _1e01915de_Base(jule::Str);
inline jule::Str _1e0191985_Dir(jule::Str);
inline jule::Str _1e0191c4e_VolumeName(jule::Str);
inline jule::Bool _1e0192b40_IsPathSep(jule::U8);
inline jule::Bool _1e0192e4d_IsAbs(jule::Str);
inline jule::I64 _1e0193217_volumeNameLen(jule::Str);
inline __jule_tuple_str__jule_tuple_bool _1e0193558_abs(jule::Str);
inline jule::Str _1e0193822_join(jule::Slice<jule::Str>);
inline jule::I64 _21676320b_getLastFsError(void);
inline __jule_tuple_int__jule_tuple_bool _1e02e91c5_AtoiBp(jule::U8*, jule::I64);
inline jule::Str _1e03480e2_Itoa(jule::I64);
inline jule::Str _1e0348400_Utoa(jule::U64);
inline void _1e0348631_rev(jule::Slice<jule::U8>*);
inline jule::Slice<char*> _1e034bc83_strSliceToCstrSlice(jule::Slice<jule::Str>*, jule::Slice<jule::Slice<jule::U8>>*);
inline jule::I64 _1e034c107_execvp(jule::Str*, jule::Slice<jule::Str>*);
inline jule::VoidExceptional _1e034c338_setenv(jule::Slice<jule::Str>*);
inline jule::I64 _1e034d2b2_processErrorFromCode(jule::I64);
inline jule::I64 _1e034d515_getLastProcessError(void);
inline void _1e034dd2e_Exit(jule::I64);
inline jule::Str _1e034e03d_Executable(void);
inline jule::Bool _1e0228500_IsStdHeaderPath(jule::Str);
inline jule::Bool _1e02287ca_IsValidHeaderExt(jule::Str);
inline jule::Bool _1e0228a94_IsValidCppExt(jule::Str);
inline jule::Str _1e0235ee1_Logf(jule::Str, jule::Slice<jule::Any>);
inline jule::Str _1e02362ee_argToStr(jule::Any);
inline jule::I64 _1e02365b8_findNextFmt(jule::Str);
inline jule::Str _1e0236981_applyFmt(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1e02377ea_IsTopDirective(jule::Str);
inline jule::Bool _1e023daa9_IsWindows(jule::Str);
inline jule::Bool _1e023dd84_IsDarwin(jule::Str);
inline jule::Bool _1e023e14d_IsLinux(jule::Str);
inline jule::Bool _1e023e48e_IsI386(jule::Str);
inline jule::Bool _1e023e758_IsAmd64(jule::Str);
inline jule::Bool _1e023ea22_IsArm64(jule::Str);
inline jule::Bool _1e023ecdb_IsUnix(jule::Str);
inline jule::Bool _1e0240182_Is32Bit(jule::Str);
inline jule::Bool _1e024044b_Is64Bit(jule::Str);
inline void _1e0350319_init(void);
inline jule::I64 _1c75db37b_LeadingZeros64(jule::U64);
inline jule::I64 _1c75dc2d3_TrailingZeros(jule::U64);
inline jule::I64 _1c75dcc40_TrailingZeros32(jule::U32);
inline jule::I64 _1c75dd009_TrailingZeros64(jule::U64);
inline jule::I64 _1c75e39b0_Len32(jule::U32);
inline jule::I64 _1c75e3c79_Len64(jule::U64);
inline __jule_tuple_u64__jule_tuple_u64 _1c75e4a16_Add64(jule::U64, jule::U64, jule::U64);
inline __jule_tuple_u64__jule_tuple_u64 _1c75e6320_Mul64(jule::U64, jule::U64);
inline jule::U32 _1c74ece91_F32Bits(jule::F32);
inline jule::F32 _1c74ed25a_F32FromBits(jule::U32);
inline jule::U64 _1c74ed524_F64Bits(jule::F64);
inline jule::F64 _1c74ed865_F64FromBits(jule::U64);
inline __jule_tuple_f64__jule_tuple_int _1c7500e1c_Frexp(jule::F64);
inline jule::F64 _1c75ed613_NaN(void);
inline jule::Bool _1c75ed921_IsNaN(jule::F64);
inline jule::F64 _1c75edbda_Inf(jule::I64);
inline jule::Bool _1c75ee02b_IsInf(jule::F64, jule::I64);
inline __jule_tuple_f64__jule_tuple_int _1c75ee2e5_normalize(jule::F64);
inline jule::F64 _1c7600cb9_Log(jule::F64);
inline jule::F64 _1c760169e_Abs(jule::F64);
inline __jule_tuple_f64__jule_tuple_f64 _1c7608398_Modf(jule::F64);
inline jule::F64 _1c7608ba1_Log2(jule::F64);
inline jule::Str _1d42eb36a_FmtFloat(jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _1d42eb953_genericFtoa(jule::Slice<jule::U8>, jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _1d42ec15c_bigFtoa(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _1d42ea2c0_floatInfo*);
inline jule::Slice<jule::U8> _1d42ec833_fmtDigits(jule::Slice<jule::U8>, jule::Bool, jule::Bool, _1d42eacd7_decimalSlice, jule::I64, jule::U8);
inline void _1d42ecc84_roundShortest(_1d430da64_decimal*, jule::U64, jule::I64, _1d42ea2c0_floatInfo*);
inline jule::Slice<jule::U8> _1d42ed328_fmtE(jule::Slice<jule::U8>, jule::Bool, _1d42eacd7_decimalSlice, jule::I64, jule::U8);
inline jule::Slice<jule::U8> _1d42ed812_fmtF(jule::Slice<jule::U8>, jule::Bool, _1d42eacd7_decimalSlice, jule::I64);
inline jule::Slice<jule::U8> _1d42ede83_fmtB(jule::Slice<jule::U8>, jule::Bool, jule::U64, jule::I64, _1d42ea2c0_floatInfo*);
inline jule::Slice<jule::U8> _1d42ee68c_fmtX(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _1d42ea2c0_floatInfo*);
inline jule::I64 _1d42eea11_min(jule::I64, jule::I64);
inline jule::I64 _1d42eed85_max(jule::I64, jule::I64);
inline jule::U8 _1d43008d0_lower(jule::U8);
inline __jule_tuple_u64__jule_tuple__1c69823b0_ConvError _1d4300d53_parseUint(jule::Str*, jule::I64, jule::I64);
inline jule::Exceptional<jule::U64> _1d4301282_ParseUint(jule::Str, jule::I64, jule::I64);
inline jule::Exceptional<jule::I64> _1d4301738_ParseInt(jule::Str, jule::I64, jule::I64);
inline __jule_tuple_f64__jule_tuple_bool _1d430242b_eiselLemire64(jule::U64, jule::I64, jule::Bool);
inline __jule_tuple_f32__jule_tuple_bool _1d430286b_eiselLemire32(jule::U64, jule::I64, jule::Bool);
inline jule::I64 _1d43046b4_commonPrefixLenIgnoreCase(jule::Str, jule::Str);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1d43049c2_special(jule::Str);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1d4304c8b_readFloat(jule::Str*);
inline __jule_tuple_f64__jule_tuple_bool _1d430681a_atof64exact(jule::U64, jule::I64, jule::Bool);
inline __jule_tuple_f32__jule_tuple_bool _1d4306c49_atof32exact(jule::U64, jule::I64, jule::Bool);
inline __jule_tuple_f64__jule_tuple__1c69823b0_ConvError _1d43072dd_atofHex(_1d42ea2c0_floatInfo*, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline __jule_tuple_f32__jule_tuple_int__jule_tuple__1c69823b0_ConvError _1d43076b7_atof32(jule::Str);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1c69823b0_ConvError _1d4307981_atof64(jule::Str);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1c69823b0_ConvError _1d4307d05_parseFloatPrefix(jule::Str*, jule::I64);
inline jule::Exceptional<jule::F64> _1d4308179_ParseFloat(jule::Str, jule::I64);
inline void _1d4308982_ryuFtoaFixed32(_1d42eacd7_decimalSlice*, jule::U32, jule::I64, jule::I64);
inline void _1d4308e27_ryuFtoaFixed64(_1d42eacd7_decimalSlice*, jule::U64, jule::I64, jule::I64);
inline void _1d4309774_formatDecimal(_1d42eacd7_decimalSlice*, jule::U64, jule::Bool, jule::Bool, jule::I64);
inline void _1d4309c4c_ryuFtoaShortest(_1d42eacd7_decimalSlice*, jule::U64, jule::I64, _1d42ea2c0_floatInfo*);
inline jule::I64 _1d430a016_mulByLog2Log10(jule::I64);
inline jule::I64 _1d430a2d0_mulByLog10Log2(jule::I64);
inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1d430a70e_computeBounds(jule::U64, jule::I64, _1d42ea2c0_floatInfo*);
inline void _1d430ad2a_ryuDigits(_1d42eacd7_decimalSlice*, jule::U64, jule::U64, jule::U64, jule::Bool, jule::Bool);
inline void _1d430b49b_ryuDigits32(_1d42eacd7_decimalSlice*, jule::U32, jule::U32, jule::U32, jule::Bool, jule::Bool, jule::I64);
inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1d430b8ca_mult64bitPow10(jule::U32, jule::I64, jule::I64);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1d430bd09_mult128bitPow10(jule::U64, jule::I64, jule::I64);
inline jule::Bool _1d430c17d_divisibleByPow5(jule::U64, jule::I64);
inline __jule_tuple_u32__jule_tuple_u32 _1d430c447_divmod1e9(jule::U64);
inline void _1d43103b2_trim(_1d430da64_decimal*);
inline void _1d431069d_rightShift(_1d430da64_decimal*, jule::U64);
inline jule::Bool _1d4310b54_prefixIsLessThan(jule::Array<jule::U8,800>, jule::I64, jule::Str*);
inline void _1d4310e0c_leftShift(_1d430da64_decimal*, jule::U64);
inline jule::Bool _1d4311281_shouldRoundUp(_1d430da64_decimal*, jule::I64);
inline jule::Str _1d4312a68_FmtUint(jule::U64, jule::I64);
inline jule::Str _1d4312e31_FmtInt(jule::I64, jule::I64);
inline jule::Str _1d43131ea_Itoa(jule::I64);
inline jule::Str _1d431353b_small(jule::I64);
inline jule::Bool _1d4313805_isPowerOfTwo(jule::I64);
inline __jule_tuple_su8__jule_tuple_str _1d4313d99_fmtBits(jule::Slice<jule::U8>, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline jule::Str _1d4315296_RealKindOf(jule::Str);
inline jule::I64 _1d4315560_BitsizeOf(jule::Str);
inline jule::Str _1d43158a1_IntFromBits(jule::I64);
inline jule::Str _1d4315b6a_UintFromBits(jule::I64);
inline jule::Str _1d4315e34_FloatFromBits(jule::I64);
inline jule::Bool _1d4316a7d_CheckBitFloat(jule::Str, jule::I64);
inline jule::I64 _1d4316d47_BitsizeOfFloat(jule::F64);
inline jule::I64 _1d4317111_BitsizeOfInt(jule::I64);
inline jule::I64 _1d43173ca_BitsizeOfUint(jule::U64);
inline void _1d4317551_UpdateTarget(void);
inline void _1d43176c7_init(void);
inline jule::I64 _1d431b489_MinI(jule::Str);
inline jule::I64 _1d431b797_MaxI(jule::Str);
inline jule::U64 _1d431ba61_MaxU(jule::Str);
inline jule::F64 _1d431bc92_Min(jule::Str);
inline jule::F64 _1d431c05b_Max(jule::Str);
inline jule::Bool _1d431c4ce_IsI16Greater(jule::Str);
inline jule::Bool _1d431c7dc_IsI32Greater(jule::Str);
inline jule::Bool _1d431caa6_IsI64Greater(jule::Str);
inline jule::Bool _1d431cde7_IsU16Greater(jule::Str);
inline jule::Bool _1d431d1b1_IsU32Greater(jule::Str);
inline jule::Bool _1d431d47a_IsU64Greater(jule::Str);
inline jule::Bool _1d431d744_IsF32Greater(jule::Str);
inline jule::Bool _1d431dada_IsF64Greater(jule::Str);
inline jule::Bool _1d431de5e_IsGreater(jule::Str, jule::Str);
inline jule::Bool _1d432004d_IsSigInt(jule::Str);
inline jule::Bool _1d432035b_IsUnsigInt(jule::Str);
inline jule::Bool _1d4320625_IsInt(jule::Str);
inline jule::Bool _1d4320966_IsFloat(jule::Str);
inline jule::Bool _1d4320c30_IsNum(jule::Str);
inline jule::Bool _1d4320ee9_IsSigNum(jule::Str);
inline void _1d432a223_lshiftUnsig(_1d4321208_Const*, _1d4321208_Const*);
inline void _1d432a553_rshiftUnsig(_1d4321208_Const*, _1d4321208_Const*);
inline jule::Bool _1d64d6520_IsUnaryOp(jule::U64);
inline jule::Bool _1d64d682d_IsBinOp(jule::U64);
inline jule::Bool _1d64d6e38_IsStr(jule::Str);
inline jule::Bool _1d64d7202_IsRawStr(jule::Str);
inline jule::Bool _1d64d74bb_IsRune(jule::Str);
inline jule::Bool _1d64d7de5_IsFloat(jule::Str);
inline jule::Bool _1d64d81ae_IsNum(jule::Str);
inline jule::Bool _1d64d8742_IsIgnoreIdent(jule::Str);
inline jule::Bool _1d64d8a0b_IsAnonIdent(jule::Str);
inline jule::Bool _1d64d908e_IsSpace(jule::I32);
inline jule::Bool _1d64d9512_IsLetter(jule::I32);
inline jule::Bool _1d64d9a95_IsDecimal(jule::U8);
inline jule::Bool _1d64d9d5e_IsBinary(jule::U8);
inline jule::Bool _1d64da128_IsOctal(jule::U8);
inline jule::Bool _1d64da3e2_IsHex(jule::U8);
inline jule::Bool _1d64da6ab_IsAssign(jule::U64);
inline jule::Bool _1d64da975_IsPostfixOp(jule::U64);
inline jule::Bool _1d64dac3e_IsAssignOp(jule::U64);
inline jule::Ptr<_1d64db59c_File> _1d64dc944_NewFileSet(jule::Str);
inline _1e0235a7e_Log _1d64de490_makeErr(jule::I64, jule::I64, jule::Ptr<_1d64db59c_File>*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1d64de858_bytesHasPrefix(jule::Slice<jule::U8>*, jule::Str);
inline jule::Str _1d64debcc_floatFmtE(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1d64e0095_floatFmtP(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1d64e0419_floatFmtDotnp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1d64e078d_floatFmtDotfp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1d64e0b12_floatFmtDotp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1d64e1096_floatNum(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1d64e1360_commonNum(jule::Slice<jule::U8>*);
inline jule::Str _1d64e1629_binaryNum(jule::Slice<jule::U8>*);
inline jule::Bool _1d64e199d_isFloatFmtE(jule::U8, jule::I64);
inline jule::Bool _1d64e1d22_isFloatFmtP(jule::U8, jule::I64);
inline jule::Bool _1d64e2196_isFloatFmtDotnp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Bool _1d64e251a_isFloatFmtDotp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Bool _1d64e288e_isFloatFmtDotfp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1d64e2d12_octalNum(jule::Slice<jule::U8>*);
inline jule::Str _1d64e30cb_hexNum(jule::Slice<jule::U8>*);
inline jule::Str _1d64e3450_hexEscape(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1d64e3719_bigUnicodePointEscape(jule::Slice<jule::U8>*);
inline jule::Str _1d64e39d3_littleUnicodePointEscape(jule::Slice<jule::U8>*);
inline jule::Str _1d64e3c9c_hexByteEscape(jule::Slice<jule::U8>*);
inline jule::Str _1d64e4066_byteEscape(jule::Slice<jule::U8>*);
inline jule::Slice<_1e0235a7e_Log> _1d64e905a_Lex(jule::Ptr<_1d64db59c_File>, jule::I64);
inline jule::Bool _1d65b1e7a_FindModuleFile(jule::Slice<jule::Ptr<_216764ce0_DirEntry>>*);
inline jule::Str _1d65b2233_FindModuleFileDeep(jule::Str);
inline jule::Slice<_1e0235a7e_Log> _1d65b24ec_CheckModuleFile(jule::Str*);
inline jule::Bool _1d65b2d7c_IsPub(jule::Str);
inline jule::Bool _1d660ad81_IsAscii(jule::I32);
inline jule::I32 _1d662b456_ToRune(jule::Str);
inline jule::Str _1d662b676_ToRawStr(jule::Str);
inline jule::Str _1d662b9b7_ToStr(jule::Str);
inline __jule_tuple_u8__jule_tuple_bool _1d662bc81_tryBtoaCommonEsq(jule::Str);
inline jule::I32 _1d662c0c2_runeFromEsqSeq(jule::Str, jule::I64*);
inline void _1d662c468_strEsqSeq(jule::Slice<jule::U8>*, jule::Str, jule::I64*);
inline jule::I64 _1d6755591_findFormatPrefix(jule::Slice<jule::U8>*, jule::I64);
inline jule::Slice<jule::U8> _1d6755915_getFormatRange(jule::I64*, jule::Slice<jule::U8>*);
inline void _1d6755c01_FmtByDefault(_1e01838bc_StrBuilder*, jule::Any*);
inline void _1d675611e_applyFmtByDefault(_1e01838bc_StrBuilder*, jule::I64*, jule::Slice<jule::Any>);
inline void _1d6756570_applyFmt(jule::Slice<jule::U8>*, _1e01838bc_StrBuilder*, jule::I64*, jule::Slice<jule::Any>);
inline jule::Slice<jule::U8> _1d67568b1_Format(jule::Str, jule::Slice<jule::Any>);
inline jule::Str _1d67588d5_Format(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1d6537450_parameterUsesGenerics(jule::Ptr<_1d65341c7_ParamIns>*, jule::Slice<jule::Ptr<_1d65085db_GenericDecl>>*);
inline jule::Ptr<_1d667ec07_TypeSymbol> _1d6539bc2_buildType(jule::Ptr<_1d64eb3d1_TypeDecl>);
inline jule::Ptr<_1d6648363_Value> _1d6539ed0_buildExpr(jule::Ptr<_1d6500715_Expr>);
inline jule::Ptr<_1d6676c43_TypeAlias> _1d653a299_buildTypeAlias(jule::Ptr<_1d6512ded_TypeAliasDecl>);
inline jule::Ptr<_1d65193dd_Field> _1d653a5da_buildField(jule::Ptr<_1d65167a3_FieldDecl>);
inline jule::Slice<jule::Ptr<_1d65193dd_Field>> _1d653a8a4_buildFields(jule::Slice<jule::Ptr<_1d65167a3_FieldDecl>>*);
inline jule::Ptr<_1d651c2d1_Struct> _1d653ab6d_buildStruct(jule::Ptr<_1d6517199_StructDecl>);
inline jule::Ptr<_1d653079a_Param> _1d653ae37_buildParam(jule::Ptr<_1d650bb3e_ParamDecl>);
inline jule::Slice<jule::Ptr<_1d653079a_Param>> _1d653b2cd_buildParams(jule::Slice<jule::Ptr<_1d650bb3e_ParamDecl>>*);
inline jule::Ptr<_1d6530019_RetType> _1d653b597_buildRetType(jule::Ptr<_1d64ee2c4_RetTypeDecl>);
inline jule::Ptr<_1d653226e_Fn> _1d653b861_buildFunc(jule::Ptr<_1d650d091_FnDecl>);
inline jule::Slice<jule::Ptr<_1d653226e_Fn>> _1d653bb2a_buildMethods(jule::Slice<jule::Ptr<_1d650d091_FnDecl>>*);
inline jule::Slice<jule::Ptr<_1d667ec07_TypeSymbol>> _1d653bde4_buildTraitInherits(jule::Slice<jule::Ptr<_1d64eb3d1_TypeDecl>>*);
inline jule::Ptr<_1d654554b_Trait> _1d653c1ad_buildTrait(jule::Ptr<_1d65178d6_TraitDecl>);
inline jule::Ptr<_1d65471da_EnumItem> _1d653c477_buildEnumItem(jule::Ptr<_1d651498d_EnumItemDecl>);
inline jule::Slice<jule::Ptr<_1d65471da_EnumItem>> _1d653c741_buildEnumItems(jule::Slice<jule::Ptr<_1d651498d_EnumItemDecl>>*);
inline jule::Ptr<_1d6547c57_Enum> _1d653cbb4_buildEnum(jule::Ptr<_1d651554e_EnumDecl>);
inline jule::Ptr<_1d6548d8a_TypeEnumItem> _1d653ce7d_buildTypeEnumItem(jule::Ptr<_1d6515d79_TypeEnumItemDecl>);
inline jule::Slice<jule::Ptr<_1d6548d8a_TypeEnumItem>> _1d653d247_buildTypeEnumItems(jule::Slice<jule::Ptr<_1d6515d79_TypeEnumItemDecl>>*);
inline jule::Ptr<_1d6549462_TypeEnum> _1d653d511_buildTypeEnum(jule::Ptr<_1d65164d9_TypeEnumDecl>);
inline jule::Ptr<_1d65d9018_Var> _1d653d7ca_buildVar(jule::Ptr<_1d650e24b_VarDecl>);
inline jule::Slice<jule::Ptr<_1d65d9018_Var>> _1d653da94_buildVars(jule::Slice<jule::Ptr<_1d650e24b_VarDecl>>);
inline jule::Ptr<_1d656dbc3_Impl> _1d653dd5d_buildImpl(jule::Ptr<_1d6518046_Impl>);
inline jule::Ptr<_1d664721e_Data> _1d656921d_buildAsComptimeMethodData(jule::Ptr<_1d6535173_FnIns>*);
inline jule::Ptr<_1d659590e_ImportInfo> _1d656952b_findComptimePackage(jule::Ptr<_1d65b5c81_Sema>*);
inline jule::Ptr<_1d664721e_Data> _1d65698a0_buildComptimeTypeInfoData(jule::Ptr<_1d65b5c81_Sema>*, jule::Ptr<_1d6677a35_TypeKind>*);
inline jule::Ptr<_1d664721e_Data> _1d6569ad1_buildComptimeValue(jule::Ptr<_1d664721e_Data>*);
inline jule::Str _1d656cb6c_toStrConstraints(jule::Ptr<_1d667614e_InsGeneric>);
inline jule::Bool _1d656d035_matchConstraint(jule::Str*, jule::Ptr<_1d6677a35_TypeKind>*);
inline jule::Bool _1d656d2ee_isBuiltinConstraint(jule::Str*);
inline jule::Ptr<_1d657b42d_scopeChecker> _1d6570e06_newScopeCheckerBase(jule::Ptr<_1d65b5c81_Sema>*, jule::Ptr<_1d6535173_FnIns>);
inline jule::Ptr<_1d657b42d_scopeChecker> _1d65712be_newScopeChecker(jule::Ptr<_1d65b5c81_Sema>*, jule::Ptr<_1d6535173_FnIns>);
inline jule::Ptr<_1d6579e87_scopeLabel> _1d6571643_findLabelParent(jule::Str*, jule::Ptr<_1d657b42d_scopeChecker>);
inline jule::Bool _1d6571a0b_modelIsGotoScope(jule::Any, jule::Ptr<_1d6574129_Scope>*);
inline jule::Bool _1d6571d80_stmtIsGotoScope(jule::Any*, jule::Ptr<_1d6574129_Scope>*);
inline jule::I64 _1d6572204_countMatchType(jule::Ptr<_1d6578260_Match>*, jule::Ptr<_1d6677a35_TypeKind>*);
inline jule::Slice<jule::Ptr<_1d664721e_Data>> _1d65724bd_getDatasFromTupleData(jule::Ptr<_1d664721e_Data>*);
inline jule::Bool _1d6572d81_checkMut(jule::Ptr<_1d65b5c81_Sema>*, jule::Ptr<_1d664721e_Data>*, jule::Ptr<_1d664721e_Data>, jule::Ptr<_1d64d5cd3_Token>);
inline jule::Bool _1d657336a_checkAssign(jule::Ptr<_1d65b5c81_Sema>*, jule::Ptr<_1d664721e_Data>*, jule::Ptr<_1d664721e_Data>, jule::Ptr<_1d64d5cd3_Token>);
inline jule::Bool _1d6573634_isValidAstStForNextSt(jule::Any*);
inline jule::Bool _1d65738ed_isValidStForNextSt(jule::Any*);
inline jule::Bool _1d6573bb7_stmtIsDef(jule::Any*);
inline jule::U64 _1d658d242_removeEqFromOp(jule::U64);
inline void _1d658d473_makeComptimeRange(jule::Ptr<_1d664721e_Data>*);
inline jule::Bool _1d658d96d_canComptimeMatch(jule::Ptr<_1d664721e_Data>*);
inline jule::Ptr<_1d65d9018_Var> _1d6592de5_findVarInPackage(jule::Slice<jule::Ptr<_1d6641d73_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Ptr<_1d6676c43_TypeAlias> _1d6593368_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1d6641d73_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Ptr<_1d651c2d1_Struct> _1d6593797_findStructInPackage(jule::Slice<jule::Ptr<_1d6641d73_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Ptr<_1d653226e_Fn> _1d6593c4d_findFnInPackage(jule::Slice<jule::Ptr<_1d6641d73_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Ptr<_1d654554b_Trait> _1d659408e_findTraitInPackage(jule::Slice<jule::Ptr<_1d6641d73_SymbolTable>>*, jule::Str*);
inline jule::Ptr<_1d6547c57_Enum> _1d6594413_findEnumInPackage(jule::Slice<jule::Ptr<_1d6641d73_SymbolTable>>*, jule::Str*);
inline jule::Ptr<_1d6549462_TypeEnum> _1d6594787_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1d6641d73_SymbolTable>>*, jule::Str*);
inline jule::Any _1d6594cc6_defByIdentPackage(jule::Slice<jule::Ptr<_1d6641d73_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Bool _1d659ad10_isStdPackage(jule::Str*, jule::Str);
inline jule::Bool _1d65b3421_isValidModelForRef(jule::Any*);
inline _1e0235a7e_Log _1d65b394e_compilerErr(jule::Ptr<_1d64d5cd3_Token>*, jule::Bool, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1d65b3cc3_impIsLookupable(jule::Ptr<_1d659590e_ImportInfo>*, jule::Str*);
inline void _1d65b407b_appendRetVars(jule::Slice<jule::Ptr<_1d65d9018_Var>>*, jule::Ptr<_1d6535173_FnIns>*);
inline void _1d65b4367_appendParamVars(jule::Slice<jule::Ptr<_1d65d9018_Var>>*, jule::Ptr<_1d6535173_FnIns>*);
inline void _1d65b4653_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1d6676c43_TypeAlias>>*, jule::Ptr<_1d6535173_FnIns>*);
inline jule::Ptr<_1d6641d73_SymbolTable> _1d65b49c7_findFile(jule::Slice<jule::Ptr<_1d6641d73_SymbolTable>>*, jule::Ptr<_1d64db59c_File>*);
inline void _1d65b4e7d_pushSuggestion(_1e0235a7e_Log*, jule::Str, jule::Slice<jule::Any>);
inline void _1d65d72d0_pushImplemented(jule::Ptr<_1d654554b_Trait>, jule::Ptr<_1d651c2d1_Struct>*);
inline void _1d65d75bb_pushImplements(jule::Ptr<_1d651c2d1_Struct>*, jule::Ptr<_1d654554b_Trait>);
inline jule::Bool _1d662cc1b_traitHasReferenceReceiver(jule::Ptr<_1d654554b_Trait>*);
inline jule::Bool _1d662d0a1_floatAssignable(jule::Str*, jule::Ptr<_1d664721e_Data>*);
inline jule::Bool _1d662d425_sigAssignable(jule::Str, jule::Ptr<_1d664721e_Data>*);
inline jule::Bool _1d662d7dd_unsigAssignable(jule::Str, jule::Ptr<_1d664721e_Data>*);
inline jule::Bool _1d662db62_intAssignable(jule::Str, jule::Ptr<_1d664721e_Data>*);
inline void _1d663a07a_checkMutRiskOfStructLit(jule::Ptr<_1d65b5c81_Sema>*, jule::Ptr<_1d65252a6_StructLitExprModel>*);
inline jule::Ptr<_1d6677a35_TypeKind> _1d6640b1e_lenKind(void);
inline jule::Bool _1d6640e71_isGoodValueToInfer(jule::Ptr<_1d664721e_Data>*);
inline jule::Ptr<_1d64ea7ed_Directive> _1d6670a83_findDirective(jule::Slice<jule::Ptr<_1d64ea7ed_Directive>>*, jule::Str);
inline jule::Any _1d6670e4b_findBuiltinsImport(jule::Str*, jule::Ptr<_1d659590e_ImportInfo>);
inline void _1d667117c_fitBitsize(jule::Ptr<_1d664721e_Data>*);
inline void _1d66714ac_makeStructLitAlloc(jule::Ptr<_1d664721e_Data>*, jule::Ptr<_1d65252a6_StructLitExprModel>*);
inline jule::Ptr<_1d65d9018_Var> _1d6671831_buildErrorVar(jule::Ptr<_1d6574129_Scope>*, jule::Ptr<_1d650443e_FnCallExpr>*);
inline jule::Any _1d6671ba5_findBuiltinsSema(jule::Str*, jule::Ptr<_1d65b5c81_Sema>);
inline jule::Bool _1d6671e6e_isOkForShifting(jule::Ptr<_1d664721e_Data>*);
inline jule::Bool _1d6672348_isInstancedStruct(jule::Ptr<_1d652005e_StructIns>);
inline jule::Bool _1d66726bc_isPtrArithmeticCompatible(jule::Ptr<_1d664721e_Data>*, jule::Ptr<_1d664721e_Data>*);
inline void _1d66729a8_applyCastKindModel(jule::Ptr<_1d664721e_Data>*, jule::Ptr<_1d6677a35_TypeKind>*);
inline void _1d6672c94_applyCastKind(jule::Ptr<_1d664721e_Data>*, jule::Ptr<_1d6677a35_TypeKind>*);
inline jule::Ptr<_1d664721e_Data> _1d6672ea3_buildVoidData(void);
inline jule::Str _1d667326c_checkDataForIntegerIndexing(jule::Ptr<_1d664721e_Data>*);
inline void _1d6673558_applyCastModelByEnum(jule::Ptr<_1d664721e_Data>*, jule::Ptr<_1d6547c57_Enum>);
inline void _1d6673844_castConstByType(jule::Str*, jule::Ptr<_1d664721e_Data>*);
inline void _1d6673cd9_updateModelToGenericIns(jule::Any*, jule::Ptr<_1d6535173_FnIns>*);
inline jule::Bool _1d667415d_pushSubIdentFromExpr(jule::Any, jule::Ptr<_1d64ebcd8_SubIdentTypeDecl>*);
inline jule::Str _1d6674427_constoa(jule::Ptr<_1d4321208_Const>*);
inline jule::Ptr<_1d664721e_Data> _1d667479b_evalEnumStatic(jule::Ptr<_1d6547c57_Enum>*, jule::Ptr<_1d65471da_EnumItem>*);
inline jule::Ptr<_1d65252a6_StructLitExprModel> _1d6674a65_isLitBased(jule::Any*);
inline void _1d6674d51_makeImplicitDeref(jule::Ptr<_1d664721e_Data>*, jule::Ptr<_1d64d5cd3_Token>);
inline void _1da09bb2b_updateRefer(jule::Ptr<_1d6538341_ReferenceStack>, jule::Ptr<_1d6535173_FnIns>*, jule::Ptr<_1d6535173_FnIns>*);
inline jule::Bool _1d669328c_kindUsesGenerics(jule::Ptr<_1d6677a35_TypeKind>*, jule::Slice<jule::Ptr<_1d65085db_GenericDecl>>*);
inline jule::Bool _1d6693655_hasDirective(jule::Slice<jule::Ptr<_1d64ea7ed_Directive>>*, jule::Str);
inline jule::Bool _1d669391e_canGetPtr(jule::Ptr<_1d664721e_Data>*);
inline jule::Bool _1d6693c60_isValidForSptrType(jule::Ptr<_1d6677a35_TypeKind>*);
inline jule::Bool _1d6694029_isValidForRef(jule::Ptr<_1d6677a35_TypeKind>*);
inline jule::Bool _1d66942e3_isBuiltinStrConvertable(jule::Ptr<_1d6677a35_TypeKind>*);
inline jule::Str _1d66945ac_buildLinkPathByTokens(jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*);
inline jule::Ptr<_1d668060e_Prim> _1d6694953_buildPrimType(jule::Str);
inline void _1d6695008_applyImplicitCast(jule::Ptr<_1d6677a35_TypeKind>*, jule::Ptr<_1d664721e_Data>*);
inline jule::Bool _1d66952c2_validTypeForXof(jule::Ptr<_1d6677a35_TypeKind>*);
inline __jule_tuple_x_1d6641d73_SymbolTable__jule_tuple_s_1e0235a7e_Log _1d669835d_buildSymbols(jule::Ptr<_1d64e9423_Ast>*, jule::Trait<_1d65929e9_Importer>*, jule::Ptr<_1d653e424_symbolBuilder>);
inline __jule_tuple_x_1d6598835_Package__jule_tuple_s_1e0235a7e_Log _1d66987d1_analyzePackage(jule::Slice<jule::Ptr<_1d64e9423_Ast>>*, jule::Trait<_1d65929e9_Importer>*, jule::I64*);
inline __jule_tuple_x_1d6598835_Package__jule_tuple_s_1e0235a7e_Log _1d6698c10_AnalyzePackage(jule::Slice<jule::Ptr<_1d64e9423_Ast>>, jule::Trait<_1d65929e9_Importer>, jule::I64);
inline jule::Ptr<_1d6535173_FnIns> _1d6759375_findBuiltinFunc(jule::Str*);
inline jule::Ptr<_1d6676c43_TypeAlias> _1d6759683_primTypeAlias(jule::Ptr<_1d6677a35_TypeKind>*);
inline jule::Ptr<_1d65d9018_Var> _1d675d28b_findBuiltinVar(jule::Str*);
inline jule::Ptr<_1d6676c43_TypeAlias> _1d675d4bc_findBuiltinTypeAlias(jule::Str);
inline jule::Any _1d675d786_findBuiltinDef(jule::Str*);
inline jule::Any _1d675da50_findBuiltinDefStdDebug(jule::Str*);
inline jule::Any _1d675dd19_findBuiltinDefStdMem(jule::Str*);
inline jule::Any _1d675e1b0_findBuiltinDefStdComptime(jule::Str*);
inline jule::Any _1d675e479_findBuiltinDefStdJuleIntegrated(jule::Str*);
inline jule::Any _1d675e7ed_findPackageBuiltinDef(jule::Str*, jule::Str*);
inline jule::Ptr<_1d664721e_Data> _1d675ec2c_builtinCallerCommonPlain(jule::Ptr<_1d6648e13_Eval>*, jule::Ptr<_1d650443e_FnCallExpr>*, jule::Ptr<_1d664721e_Data>*);
inline jule::Ptr<_1d664721e_Data> _1d67600a1_builtinCallerError(jule::Ptr<_1d6648e13_Eval>*, jule::Ptr<_1d650443e_FnCallExpr>*);
inline jule::Ptr<_1d664721e_Data> _1d67604d0_builtinCallerOut(jule::Ptr<_1d6648e13_Eval>*, jule::Ptr<_1d650443e_FnCallExpr>*, jule::Ptr<_1d664721e_Data>*);
inline jule::Ptr<_1d664721e_Data> _1d676090e_builtinCallerOutln(jule::Ptr<_1d6648e13_Eval>*, jule::Ptr<_1d650443e_FnCallExpr>*, jule::Ptr<_1d664721e_Data>*);
inline jule::Ptr<_1d664721e_Data> _1d6760d3d_builtinCallerNew(jule::Ptr<_1d6648e13_Eval>*, jule::Ptr<_1d650443e_FnCallExpr>*, jule::Ptr<_1d664721e_Data>*);
inline jule::Ptr<_1d664721e_Data> _1d6761426_builtinCallerPanic(jule::Ptr<_1d6648e13_Eval>*, jule::Ptr<_1d650443e_FnCallExpr>*, jule::Ptr<_1d664721e_Data>*);
inline jule::Ptr<_1d664721e_Data> _1d6761855_builtinCallerMake(jule::Ptr<_1d6648e13_Eval>*, jule::Ptr<_1d650443e_FnCallExpr>*, jule::Ptr<_1d664721e_Data>*);
inline jule::Ptr<_1d664721e_Data> _1d6761c84_builtinCallerAppend(jule::Ptr<_1d6648e13_Eval>*, jule::Ptr<_1d650443e_FnCallExpr>*, jule::Ptr<_1d664721e_Data>*);
inline jule::Ptr<_1d664721e_Data> _1d676226d_callerCopySlice(jule::Ptr<_1d664721e_Data>*, jule::Ptr<_1d6648e13_Eval>*, jule::Ptr<_1d650443e_FnCallExpr>*, jule::Ptr<_1d664721e_Data>*);
inline jule::Ptr<_1d664721e_Data> _1d676269c_builtinCallerCopy(jule::Ptr<_1d6648e13_Eval>*, jule::Ptr<_1d650443e_FnCallExpr>*, jule::Ptr<_1d664721e_Data>*);
inline jule::Ptr<_1d664721e_Data> _1d6762a21_callerLenSlice(jule::Ptr<_1d664721e_Data>*, jule::Ptr<_1d664721e_Data>*);
inline jule::Ptr<_1d664721e_Data> _1d6762d95_callerLenMap(jule::Ptr<_1d664721e_Data>*, jule::Ptr<_1d664721e_Data>*);
inline jule::Ptr<_1d664721e_Data> _1d6763219_callerLenArr(jule::Ptr<_1d664721e_Data>*, jule::Ptr<_1d664721e_Data>*);
inline jule::Ptr<_1d664721e_Data> _1d676358d_callerLenStr(jule::Ptr<_1d664721e_Data>*, jule::Ptr<_1d664721e_Data>*);
inline jule::Ptr<_1d664721e_Data> _1d6763912_callerLenComptime(jule::Ptr<_1d664721e_Data>*, jule::I64);
inline jule::Ptr<_1d664721e_Data> _1d6763d41_builtinCallerLen(jule::Ptr<_1d6648e13_Eval>*, jule::Ptr<_1d650443e_FnCallExpr>*, jule::Ptr<_1d664721e_Data>*);
inline jule::Ptr<_1d664721e_Data> _1d67641b5_callerCapSlice(jule::Ptr<_1d664721e_Data>*, jule::Ptr<_1d664721e_Data>*);
inline jule::Ptr<_1d664721e_Data> _1d67645e4_builtinCallerCap(jule::Ptr<_1d6648e13_Eval>*, jule::Ptr<_1d650443e_FnCallExpr>*, jule::Ptr<_1d664721e_Data>*);
inline jule::Ptr<_1d664721e_Data> _1d6764acd_callerDeleteMap(jule::Ptr<_1d6648e13_Eval>*, jule::Ptr<_1d650443e_FnCallExpr>*, jule::Ptr<_1d664721e_Data>*, jule::Ptr<_1d664721e_Data>*);
inline jule::Ptr<_1d664721e_Data> _1d676500c_builtinCallerDelete(jule::Ptr<_1d6648e13_Eval>*, jule::Ptr<_1d650443e_FnCallExpr>*, jule::Ptr<_1d664721e_Data>*);
inline jule::Ptr<_1d664721e_Data> _1d676543b_builtinCallerAssert(jule::Ptr<_1d6648e13_Eval>*, jule::Ptr<_1d650443e_FnCallExpr>*, jule::Ptr<_1d664721e_Data>*);
inline jule::Ptr<_1d664721e_Data> _1d6765a13_builtinCallerStdComptimeTypeOf(jule::Ptr<_1d6648e13_Eval>*, jule::Ptr<_1d650443e_FnCallExpr>*, jule::Ptr<_1d664721e_Data>*);
inline jule::Ptr<_1d664721e_Data> _1d6765dcb_builtinCallerStdComptimeValueOf(jule::Ptr<_1d6648e13_Eval>*, jule::Ptr<_1d650443e_FnCallExpr>*, jule::Ptr<_1d664721e_Data>*);
inline jule::Ptr<_1d664721e_Data> _1d676630a_builtinCallerStdComptimeLine(jule::Ptr<_1d6648e13_Eval>*, jule::Ptr<_1d650443e_FnCallExpr>*, jule::Ptr<_1d664721e_Data>*);
inline jule::Ptr<_1d664721e_Data> _1d6766739_builtinCallerStdComptimeFile(jule::Ptr<_1d6648e13_Eval>*, jule::Ptr<_1d650443e_FnCallExpr>*, jule::Ptr<_1d664721e_Data>*);
inline jule::Ptr<_1d664721e_Data> _1d6766b68_builtinCallerStdComptimeFiles(jule::Ptr<_1d6648e13_Eval>*, jule::Ptr<_1d650443e_FnCallExpr>*, jule::Ptr<_1d664721e_Data>*);
inline jule::Ptr<_1d664721e_Data> _1d6767097_builtinCallerStdComptimeTypeAlias(jule::Ptr<_1d6648e13_Eval>*, jule::Ptr<_1d650443e_FnCallExpr>*, jule::Ptr<_1d664721e_Data>*);
inline jule::Ptr<_1d664721e_Data> _1d67674c6_builtinCallerStdMemSizeOf(jule::Ptr<_1d6648e13_Eval>*, jule::Ptr<_1d650443e_FnCallExpr>*, jule::Ptr<_1d664721e_Data>*);
inline jule::Ptr<_1d664721e_Data> _1d6767905_builtinCallerStdMemAlignOf(jule::Ptr<_1d6648e13_Eval>*, jule::Ptr<_1d650443e_FnCallExpr>*, jule::Ptr<_1d664721e_Data>*);
inline jule::Ptr<_1d664721e_Data> _1d6767d34_builtinCallerStdMemFree(jule::Ptr<_1d6648e13_Eval>*, jule::Ptr<_1d650443e_FnCallExpr>*, jule::Ptr<_1d664721e_Data>*);
inline jule::Ptr<_1d664721e_Data> _1d676d0c0_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_1d6648e13_Eval>*, jule::Ptr<_1d650443e_FnCallExpr>*, jule::Ptr<_1d664721e_Data>*);
inline jule::Ptr<_1d664721e_Data> _1d676d4ee_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_1d6648e13_Eval>*, jule::Ptr<_1d650443e_FnCallExpr>*, jule::Ptr<_1d664721e_Data>*);
inline jule::Ptr<_1d664721e_Data> _1d676d92d_builtinCallerStdDebugOut(jule::Ptr<_1d6648e13_Eval>*, jule::Ptr<_1d650443e_FnCallExpr>*, jule::Ptr<_1d664721e_Data>*);
inline jule::Ptr<_1d664721e_Data> _1d676dd5c_builtinCallerStdDebugOutln(jule::Ptr<_1d6648e13_Eval>*, jule::Ptr<_1d650443e_FnCallExpr>*, jule::Ptr<_1d664721e_Data>*);
inline jule::Ptr<_1d70d5b8a_FileInfo> _1d70d8a39_ParseFile(jule::Ptr<_1d64db59c_File>);
inline __jule_tuple_x_1d64e9423_Ast__jule_tuple_s_1e0235a7e_Log _1d712c40c_parseFileset(jule::Ptr<_1d64db59c_File>);
inline jule::Ptr<_1d650b402_ScopeTree> _1d712cd9c_newScope(void);
inline __jule_tuple_bool__jule_tuple_bool _1d712d232_isSt(jule::Ptr<_1d64d5cd3_Token>, jule::Ptr<_1d64d5cd3_Token>);
inline jule::Bool _1d712d5a6_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*, jule::I64*);
inline __jule_tuple_int__jule_tuple_bool _1d712d96e_nextStPos(jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*, jule::I64);
inline __jule_tuple_sx_1d64d5cd3_Token__jule_tuple_bool _1d712dce3_skipSt(jule::I64*, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>);
inline jule::Slice<jule::Ptr<_1d712e123_stmt>> _1d712e4ca_splitStmts(jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*);
inline jule::Bool _1d7147b31_isTypeOp(jule::U64*);
inline jule::Bool _1d7147e3e_isTypeRange(jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*);
inline jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _1d7148208_getBlockExpr(jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*);
inline __jule_tuple_sx_1d64d5cd3_Token__jule_tuple_sx_1d64d5cd3_Token _1d71485c1_splitDelim(jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*, jule::U64);
inline jule::I64 _1d714888a_findLowestPrecOp(jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*);
inline jule::Ptr<_1d6502140_IdentExpr> _1d7148b54_buildIdentExpr(jule::Ptr<_1d64d5cd3_Token>*);
inline __jule_tuple_sx_1d64d5cd3_Token__jule_tuple_int _1d7148e1d_getRangeExprTokens(jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*);
inline jule::Bool _1d7149c32_checkAssignTokens(jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*);
inline _1e0235a7e_Log _1d714ae31_makeErr(jule::I64, jule::I64, jule::Ptr<_1d64db59c_File>*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _1d714b42b_range(jule::I64*, jule::U64, jule::U64, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*);
inline __jule_tuple_sx_1d64d5cd3_Token__jule_tuple_sx_1d64d5cd3_Token _1d714b6e5_rangeLast(jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*);
inline __jule_tuple_ssx_1d64d5cd3_Token__jule_tuple_s_1e0235a7e_Log _1d714bb9b_parts(jule::Slice<jule::Ptr<_1d64d5cd3_Token>>*, jule::U64, jule::Bool);
inline jule::U64 _1d714be65_getCloseOfBrace(jule::U64);
inline _1e0235a7e_Log _1d714c394_compilerErr(jule::Ptr<_1d64d5cd3_Token>*, jule::Str*, jule::Slice<jule::Any>);
inline void _1d714c73a_pushSuggestion(_1e0235a7e_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1d64eb3d1_TypeDecl> _1d715e692_buildVoidType(void);
inline __jule_tuple_bool__jule_tuple_bool _1d685d941_checkOs(jule::Str);
inline __jule_tuple_bool__jule_tuple_bool _1d685da84_checkArch(jule::Str);
inline jule::Bool _1d6878340_isPassFileAnnotation(jule::Str);
inline void _1d68794b7_setOsVars(jule::Slice<jule::Str>*);
inline void _1d687973c_setArchVars(jule::Slice<jule::Str>*);
inline void _1d6879a28_initVars(jule::Slice<jule::Str>*, _1d6879198_CompileInfo*);
inline jule::Slice<jule::U8> _1d7163685_readBuff(jule::Str);
inline _1e0235a7e_Log _1d7163960_flatCompilerErr(jule::Str);
inline void _1d7168107_pushPasses(jule::Ptr<_1d6598835_Package>*, jule::Slice<jule::Str>*);
inline jule::Slice<jule::Str> _1d71684c0_getAllUniquePasses(jule::Ptr<_1d6598835_Package>*, jule::Slice<jule::Ptr<_1d659590e_ImportInfo>>);
inline _1d6879198_CompileInfo _1d71686ce_buildCompileInfo(void);
inline void _1d72c561b_EliminateDefines(jule::Ptr<_1d7166787_IR>*);
inline jule::Ptr<_1d64ea7ed_Directive> _1d72c59d4_findDirective(jule::Slice<jule::Ptr<_1d64ea7ed_Directive>>*, jule::Str);
inline jule::Bool _1d72c5d58_hasDirective(jule::Slice<jule::Ptr<_1d64ea7ed_Directive>>*, jule::Str);
inline jule::Bool _1d72c6221_isTraitMethod(jule::Ptr<_1d652005e_StructIns>*, jule::Ptr<_1d6535173_FnIns>*);
inline void _1d72ca225_eliminateDeadCodeOfScope(jule::Ptr<_1d6574129_Scope>);
inline void _1d72ca49a_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1d653226e_Fn>>*);
inline void _1d72ca6cb_eliminateFunctionsScopePackage(jule::Ptr<_1d6598835_Package>*);
inline void _1d72ca984_eliminateScopePackage(jule::Ptr<_1d6598835_Package>*);
inline void _1d72cabb5_EliminateScopes(jule::Ptr<_1d7166787_IR>*);
inline jule::Uintptr _1d676e19d_typeData(jule::Any*);
inline jule::Bool _1d676e566_equalConst(jule::Ptr<_1d4321208_Const>, jule::Ptr<_1d4321208_Const>);
inline jule::Bool _1d676e8da_equalCasting(jule::Ptr<_1d6525b36_CastingExprModel>, jule::Ptr<_1d6525b36_CastingExprModel>);
inline jule::Bool _1d676ec1a_equalUnary(jule::Ptr<_1d65248d2_UnaryExprModel>, jule::Ptr<_1d65248d2_UnaryExprModel>);
inline jule::Bool _1d677008e_equalIndexing(jule::Ptr<_1d6526d68_IndexingExprModel>, jule::Ptr<_1d6526d68_IndexingExprModel>);
inline jule::Bool _1d6770413_equalBinary(jule::Ptr<_1d6524508_BinaryExprModel>, jule::Ptr<_1d6524508_BinaryExprModel>);
inline jule::Bool _1d6770787_equalModels(jule::Any, jule::Any);
inline jule::Bool _1d6778ae2_isStdPackage(jule::Str*, jule::Str);
inline jule::Bool _1d6778e00_isConstantValidConditionalCase(jule::Ptr<_1d6574547_If>*);
inline jule::Bool _1d67791b9_isUnreachableExpr(jule::Any*);
inline jule::Bool _1d677950a_isConstantValidMatchCase(jule::Ptr<_1d6578d98_Case>*);
inline jule::Bool _1d67797c4_isUnreachableConditionalCase(jule::Ptr<_1d6574547_If>*);
inline jule::Bool _1d6779a8d_isUnreachableMatchCase(jule::Ptr<_1d6578d98_Case>*);
inline __jule_tuple_bool__jule_tuple_u64 _1d6783877_checkForBitShiftOpt(jule::Ptr<_1d652400d_OperandExprModel>*, jule::Ptr<_1d652400d_OperandExprModel>*);
inline jule::Bool _1d6783c40_areSameLvalueExprModel(jule::Any*, jule::Any*);
inline void _1d678655b_PushOptLevel(jule::I64);
inline void _1d72d50cb_detectEnabled(void);
inline void _1d730d951_Throw(jule::Str);
inline jule::U64 _1d7c45497_unix(void);
inline jule::Bool _1d7b709aa_isCopyOptimizable(jule::Ptr<_1d664721e_Data>*);
inline jule::Bool _1d7b70d73_isIterCopyOptimizable(jule::Ptr<_1d664721e_Data>*, jule::Ptr<_1d65d9018_Var>*);
inline jule::Str _1d7b80eb5_decomposeCommonEsq(jule::U8);
inline jule::Str _1d7b812c3_sbtoa(jule::U8);
inline void _1d7b815ae_cstrBytes(_1e01838bc_StrBuilder*, jule::Str);
inline void _1d7b818de_cstrLit(_1e01838bc_StrBuilder*, jule::Str);
inline void _1d7b81c85_ftoa(_1e01838bc_StrBuilder*, jule::F64, jule::I64);
inline void _1d7b82071_itoa(_1e01838bc_StrBuilder*, jule::I64);
inline void _1d7b8235c_utoa(_1e01838bc_StrBuilder*, jule::U64);
inline jule::Bool _1d7b82736_isForwarded(jule::Ptr<_1d6574129_Scope>*);
inline jule::Bool _1d7b82a00_isExprComesFromBind(jule::Ptr<_1d664721e_Data>*);
inline jule::Bool _1d7b82cb9_isAny(jule::Ptr<_1d6677a35_TypeKind>*);
inline void _1d7c59a94_iterFiles(jule::Ptr<_1d6598835_Package>*, jule::Fn<void(jule::Ptr<_1d6641d73_SymbolTable>*)>);
inline jule::Slice<jule::U8> _1d7c59da2_concatAllParts(jule::Slice<jule::Ptr<_1d64d5cd3_Token>>);
inline jule::Bool _1d7c5a226_containsTraitMethod(jule::Ptr<_1d654554b_Trait>*, jule::Str*);
inline void _1d7c5a556_pushMethodsFromInherit(jule::Ptr<_1d654554b_Trait>*, jule::Ptr<_1d654554b_Trait>*);
inline void _1d7c5a842_pushMethodsFromInherits(jule::Ptr<_1d654554b_Trait>*, jule::Ptr<_1d654554b_Trait>*);
inline jule::Bool _1d7c5ab0b_isOpMethod(jule::Ptr<_1d653226e_Fn>*);
inline jule::Bool _1d7c5adc5_isHeadDecl(jule::Ptr<_1d653226e_Fn>*);
inline jule::Ptr<_1d64ea7ed_Directive> _1d7c6a28b_findDirective(jule::Slice<jule::Ptr<_1d64ea7ed_Directive>>*, jule::Str);
inline jule::Bool _1d7c6a654_hasDirective(jule::Slice<jule::Ptr<_1d64ea7ed_Directive>>*, jule::Str);
inline jule::Bool _1d7c6a91d_shouldInitialized(jule::Ptr<_1d6677a35_TypeKind>*);
inline void _1e035332d_printErrorMessage(jule::Str);
inline void _1e03535a3_help(jule::Slice<jule::Str>*);
inline void _1e03537d4_version(jule::Slice<jule::Str>*);
inline void _1e03539d2_toolDistos(void);
inline void _1e0353b58_toolDistarch(void);
inline void _1e0353d89_tool(jule::Slice<jule::Str>*);
inline void _1e03540ba_julenv(jule::Slice<jule::Str>*);
inline void _1e03543c8_mod(jule::Slice<jule::Str>*);
inline jule::Bool _1e0354692_processCommand(jule::Slice<jule::Str>*);
inline void _1e0354818_showInfo(void);
void entry_point(void);
inline void _1d7cd71a4_init(void);
inline jule::Ptr<_216766bb0_File> _1d7cd747e_openOutput(jule::Str*);
inline void _1d7cd7605_clearObjects(void);
inline void _1d7cd7935_compileIr(jule::Str, jule::Str);
inline jule::Bool _1d7cd7bee_isCppSourceFile(jule::Str);
inline void _1d7cd7e30_pushCompCmdClang(_1e01838bc_StrBuilder*);
inline void _1d7cd8161_pushCompCmdGcc(_1e01838bc_StrBuilder*);
inline __jule_tuple_str__jule_tuple_str _1d7cd85e5_genCompileCmd(jule::Str, jule::Ptr<_1d7166787_IR>*);
inline jule::Str _1d7cd8804_getCompilePath(void);
inline void _1d7cd8a35_applyTargetIndependentOptimizations(jule::Ptr<_1d7166787_IR>*);
inline void _1d7cd8bab_checkCompilerFlag(void);
inline void _1d7cd8ddc_checkTargetArch(jule::Str);
inline void _1d7cd911d_checkTargetOs(jule::Str);
inline void _1d7cd934e_checkTargetFlag(jule::Str*);
inline void _1d7cd9580_checkOptFlag(jule::Str*);
inline void _1d7cd9915_checkCppStdFlag(void);
inline jule::Slice<jule::Str> _1d7cd9b79_checkFlags(jule::Slice<jule::Str>*);
inline void _1d7cd9daa_setupSemaFlags(jule::I64*);
inline jule::Ptr<_1d7166787_IR> _1d7cda174_buildIr(jule::Slice<jule::Str>*);
inline void _1d7cda3a5_compileCommand(jule::Slice<jule::Str>*);


struct _1d654c399_comptimeRangeKindMptrData {
	void(*_1d654ba91_ready)(jule::Trait<_1d654c399_comptimeRangeKind>, jule::Ptr<_1d65d9018_Var>*, jule::Ptr<_1d65d9018_Var>*);
	void(*_1d654beae_step)(jule::Trait<_1d654c399_comptimeRangeKind>, jule::I64, jule::Ptr<_1d65d9018_Var>*, jule::Ptr<_1d65d9018_Var>*);
	jule::I64(*_1d654c245_len)(jule::Trait<_1d654c399_comptimeRangeKind>);
};

struct _1d65929e9_ImporterMptrData {
	void(*_1d65917c8_SetModPath)(jule::Trait<_1d65929e9_Importer>, jule::Str);
	jule::Str(*_1d6591a5e_GetModPath)(jule::Trait<_1d65929e9_Importer>);
	jule::Str(*_1d6591da0_ModById)(jule::Trait<_1d65929e9_Importer>, jule::I64);
	jule::Ptr<_1d659590e_ImportInfo>(*_1d65921e1_GetImport)(jule::Trait<_1d65929e9_Importer>, jule::Str);
	__jule_tuple_sx_1d64e9423_Ast__jule_tuple_s_1e0235a7e_Log(*_1d65925dc_ImportPackage)(jule::Trait<_1d65929e9_Importer>, jule::Str, jule::Bool);
	void(*_1d6592895_Imported)(jule::Trait<_1d65929e9_Importer>, jule::Ptr<_1d659590e_ImportInfo>);
};

struct _1d667757e_KindMptrData {
	jule::Str(*_1d66770d9_Str)(jule::Trait<_1d667757e_Kind>);
	jule::Bool(*_1d667742a_Equal)(jule::Trait<_1d667757e_Kind>, jule::Ptr<_1d6677a35_TypeKind>);
};

struct _1d669756b_LookupMptrData {
	jule::Ptr<_1d659590e_ImportInfo>(*_1d6695855_SelectPackage)(jule::Trait<_1d669756b_Lookup>, jule::Fn<jule::Bool(jule::Ptr<_1d659590e_ImportInfo>)>);
	jule::Ptr<_1d65d9018_Var>(*_1d6695c51_FindVar)(jule::Trait<_1d669756b_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1d6676c43_TypeAlias>(*_1d669614c_FindTypeAlias)(jule::Trait<_1d669756b_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1d651c2d1_Struct>(*_1d6696548_FindStruct)(jule::Trait<_1d669756b_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1d653226e_Fn>(*_1d6696944_FindFn)(jule::Trait<_1d669756b_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1d654554b_Trait>(*_1d6696c85_FindTrait)(jule::Trait<_1d669756b_Lookup>, jule::Str);
	jule::Ptr<_1d6547c57_Enum>(*_1d66970c6_FindEnum)(jule::Trait<_1d669756b_Lookup>, jule::Str);
	jule::Ptr<_1d6549462_TypeEnum>(*_1d6697417_FindTypeEnum)(jule::Trait<_1d669756b_Lookup>, jule::Str);
};

struct _1d7ccee38_CommonFlagMptrData {
	jule::Str(*_1d7c9e116_Name)(jule::Trait<_1d7ccee38_CommonFlag>);
	jule::I32(*_1d7c9e259_Short)(jule::Trait<_1d7ccee38_CommonFlag>);
	jule::Str(*_1d7cceba2_What)(jule::Trait<_1d7ccee38_CommonFlag>);
	void(*_1d7ccece5_Reset)(jule::Trait<_1d7ccee38_CommonFlag>);
};



inline void _1d654ba91_ready_comptimeRangeKind_0(jule::Trait<_1d654c399_comptimeRangeKind> _self_, jule::Ptr<_1d65d9018_Var>* _2429_keyA, jule::Ptr<_1d65d9018_Var>* _2446_keyB) {
	_1d6550886_ready(_self_.safe_ptr<_1d654ec4d_comptimeStructFields>(), _2429_keyA, _2446_keyB);
}
inline void _1d654beae_step_comptimeRangeKind_0(jule::Trait<_1d654c399_comptimeRangeKind> _self_, jule::I64 _2523_i, jule::Ptr<_1d65d9018_Var>* _2536_keyA, jule::Ptr<_1d65d9018_Var>* _2553_keyB) {
	_1d6550ca4_step(_self_.safe_ptr<_1d654ec4d_comptimeStructFields>(), _2523_i, _2536_keyA, _2553_keyB);
}
inline jule::I64 _1d654c245_len_comptimeRangeKind_0(jule::Trait<_1d654c399_comptimeRangeKind> _self_) {
	return _1d655103a_len(_self_.safe_ptr<_1d654ec4d_comptimeStructFields>());
}
inline void _1d654ba91_ready_comptimeRangeKind_1(jule::Trait<_1d654c399_comptimeRangeKind> _self_, jule::Ptr<_1d65d9018_Var>* _2429_keyA, jule::Ptr<_1d65d9018_Var>* _2446_keyB) {
	_1d6553b42_ready(_self_.safe_ptr<_1d6553009_comptimeStatics>(), _2429_keyA, _2446_keyB);
}
inline void _1d654beae_step_comptimeRangeKind_1(jule::Trait<_1d654c399_comptimeRangeKind> _self_, jule::I64 _2523_i, jule::Ptr<_1d65d9018_Var>* _2536_keyA, jule::Ptr<_1d65d9018_Var>* _2553_keyB) {
	_1d6554060_step(_self_.safe_ptr<_1d6553009_comptimeStatics>(), _2523_i, _2536_keyA, _2553_keyB);
}
inline jule::I64 _1d654c245_len_comptimeRangeKind_1(jule::Trait<_1d654c399_comptimeRangeKind> _self_) {
	return _1d65542e6_len(_self_.safe_ptr<_1d6553009_comptimeStatics>());
}
inline void _1d654ba91_ready_comptimeRangeKind_2(jule::Trait<_1d654c399_comptimeRangeKind> _self_, jule::Ptr<_1d65d9018_Var>* _2429_keyA, jule::Ptr<_1d65d9018_Var>* _2446_keyB) {
	_1d65565d4_ready(_self_.safe_ptr<_1d655599b_comptimeEnumFields>(), _2429_keyA, _2446_keyB);
}
inline void _1d654beae_step_comptimeRangeKind_2(jule::Trait<_1d654c399_comptimeRangeKind> _self_, jule::I64 _2523_i, jule::Ptr<_1d65d9018_Var>* _2536_keyA, jule::Ptr<_1d65d9018_Var>* _2553_keyB) {
	_1d6556a02_step(_self_.safe_ptr<_1d655599b_comptimeEnumFields>(), _2523_i, _2536_keyA, _2553_keyB);
}
inline jule::I64 _1d654c245_len_comptimeRangeKind_2(jule::Trait<_1d654c399_comptimeRangeKind> _self_) {
	return _1d6556c88_len(_self_.safe_ptr<_1d655599b_comptimeEnumFields>());
}
inline void _1d654ba91_ready_comptimeRangeKind_3(jule::Trait<_1d654c399_comptimeRangeKind> _self_, jule::Ptr<_1d65d9018_Var>* _2429_keyA, jule::Ptr<_1d65d9018_Var>* _2446_keyB) {
	_1d6559e45_ready(_self_.safe_ptr<_1d655930c_comptimeParams>(), _2429_keyA, _2446_keyB);
}
inline void _1d654beae_step_comptimeRangeKind_3(jule::Trait<_1d654c399_comptimeRangeKind> _self_, jule::I64 _2523_i, jule::Ptr<_1d65d9018_Var>* _2536_keyA, jule::Ptr<_1d65d9018_Var>* _2553_keyB) {
	_1d655a363_step(_self_.safe_ptr<_1d655930c_comptimeParams>(), _2523_i, _2536_keyA, _2553_keyB);
}
inline jule::I64 _1d654c245_len_comptimeRangeKind_3(jule::Trait<_1d654c399_comptimeRangeKind> _self_) {
	return _1d655a5e9_len(_self_.safe_ptr<_1d655930c_comptimeParams>());
}
inline void _1d654ba91_ready_comptimeRangeKind_4(jule::Trait<_1d654c399_comptimeRangeKind> _self_, jule::Ptr<_1d65d9018_Var>* _2429_keyA, jule::Ptr<_1d65d9018_Var>* _2446_keyB) {
	_1d655b540_ready(_self_.safe_ptr<_1d655a907_comptimeTypeInfos>(), _2429_keyA, _2446_keyB);
}
inline void _1d654beae_step_comptimeRangeKind_4(jule::Trait<_1d654c399_comptimeRangeKind> _self_, jule::I64 _2523_i, jule::Ptr<_1d65d9018_Var>* _2536_keyA, jule::Ptr<_1d65d9018_Var>* _2553_keyB) {
	_1d655b95d_step(_self_.safe_ptr<_1d655a907_comptimeTypeInfos>(), _2523_i, _2536_keyA, _2553_keyB);
}
inline jule::I64 _1d654c245_len_comptimeRangeKind_4(jule::Trait<_1d654c399_comptimeRangeKind> _self_) {
	return _1d655bbe4_len(_self_.safe_ptr<_1d655a907_comptimeTypeInfos>());
}
inline void _1d654ba91_ready_comptimeRangeKind_5(jule::Trait<_1d654c399_comptimeRangeKind> _self_, jule::Ptr<_1d65d9018_Var>* _2429_keyA, jule::Ptr<_1d65d9018_Var>* _2446_keyB) {
	_1d656699b_ready(_self_.safe_ptr<_1d6565d63_comptimeFiles>(), _2429_keyA, _2446_keyB);
}
inline void _1d654beae_step_comptimeRangeKind_5(jule::Trait<_1d654c399_comptimeRangeKind> _self_, jule::I64 _2523_i, jule::Ptr<_1d65d9018_Var>* _2536_keyA, jule::Ptr<_1d65d9018_Var>* _2553_keyB) {
	_1d6566db9_step(_self_.safe_ptr<_1d6565d63_comptimeFiles>(), _2523_i, _2536_keyA, _2553_keyB);
}
inline jule::I64 _1d654c245_len_comptimeRangeKind_5(jule::Trait<_1d654c399_comptimeRangeKind> _self_) {
	return _1d6567150_len(_self_.safe_ptr<_1d6565d63_comptimeFiles>());
}
inline void _1d65917c8_SetModPath_Importer_0(jule::Trait<_1d65929e9_Importer> _self_, jule::Str _1729_path) {
	_1d7164a1b_SetModPath(_self_.safe_ptr<_1d7163e49_JuleImporter>(), _1729_path);
}
inline jule::Str _1d6591a5e_GetModPath_Importer_0(jule::Trait<_1d65929e9_Importer> _self_) {
	return _1d7164ca2_GetModPath(_self_.safe_ptr<_1d7163e49_JuleImporter>());
}
inline jule::Str _1d6591da0_ModById_Importer_0(jule::Trait<_1d65929e9_Importer> _self_, jule::I64 _2522_id) {
	return _1d71650e3_ModById(_self_.safe_ptr<_1d7163e49_JuleImporter>(), _2522_id);
}
inline jule::Ptr<_1d659590e_ImportInfo> _1d65921e1_GetImport_Importer_0(jule::Trait<_1d65929e9_Importer> _self_, jule::Str _3128_path) {
	return _1d7165434_GetImport(_self_.safe_ptr<_1d7163e49_JuleImporter>(), _3128_path);
}
inline __jule_tuple_sx_1d64e9423_Ast__jule_tuple_s_1e0235a7e_Log _1d65925dc_ImportPackage_Importer_0(jule::Trait<_1d65929e9_Importer> _self_, jule::Str _3732_path, jule::Bool _3743_update_mod) {
	return _1d7165830_ImportPackage(_self_.safe_ptr<_1d7163e49_JuleImporter>(), _3732_path, _3743_update_mod);
}
inline void _1d6592895_Imported_Importer_0(jule::Trait<_1d65929e9_Importer> _self_, jule::Ptr<_1d659590e_ImportInfo> _4131__0) {
	_1d7165ad8_Imported(_self_.safe_ptr<_1d7163e49_JuleImporter>(), _4131__0);
}
inline jule::Str _1d66770d9_Str_Kind_0(jule::Trait<_1d667757e_Kind> _self_) {
	return _1d65203d3_Str(_self_.safe_ptr<_1d652005e_StructIns>());
}
inline jule::Bool _1d667742a_Equal_Kind_0(jule::Trait<_1d667757e_Kind> _self_, jule::Ptr<_1d6677a35_TypeKind> _5621_other) {
	return _1d6520724_Equal(_self_.data.as<_1d652005e_StructIns>(), _5621_other);
}
inline jule::Str _1d66770d9_Str_Kind_1(jule::Trait<_1d667757e_Kind> _self_) {
	return _1d65354b4_Str(_self_.safe_ptr<_1d6535173_FnIns>());
}
inline jule::Bool _1d667742a_Equal_Kind_1(jule::Trait<_1d667757e_Kind> _self_, jule::Ptr<_1d6677a35_TypeKind> _5621_other) {
	return _1d6535805_Equal(_self_.data.as<_1d6535173_FnIns>(), _5621_other);
}
inline jule::Str _1d66770d9_Str_Kind_2(jule::Trait<_1d667757e_Kind> _self_) {
	return _1d6545914_Str(_self_.safe_ptr<_1d654554b_Trait>());
}
inline jule::Bool _1d667742a_Equal_Kind_2(jule::Trait<_1d667757e_Kind> _self_, jule::Ptr<_1d6677a35_TypeKind> _5621_other) {
	return _1d6545c55_Equal(_self_.data.as<_1d654554b_Trait>(), _5621_other);
}
inline jule::Str _1d66770d9_Str_Kind_3(jule::Trait<_1d667757e_Kind> _self_) {
	return _1d65480cb_Str(_self_.safe_ptr<_1d6547c57_Enum>());
}
inline jule::Bool _1d667742a_Equal_Kind_3(jule::Trait<_1d667757e_Kind> _self_, jule::Ptr<_1d6677a35_TypeKind> _5621_other) {
	return _1d654841c_Equal(_self_.data.as<_1d6547c57_Enum>(), _5621_other);
}
inline jule::Str _1d66770d9_Str_Kind_4(jule::Trait<_1d667757e_Kind> _self_) {
	return _1d65497a3_Str(_self_.safe_ptr<_1d6549462_TypeEnum>());
}
inline jule::Bool _1d667742a_Equal_Kind_4(jule::Trait<_1d667757e_Kind> _self_, jule::Ptr<_1d6677a35_TypeKind> _5621_other) {
	return _1d6549ae4_Equal(_self_.data.as<_1d6549462_TypeEnum>(), _5621_other);
}
inline jule::Str _1d66770d9_Str_Kind_5(jule::Trait<_1d667757e_Kind> _self_) {
	return _1d654c93d_Str(_self_.safe_ptr<_1d654c5b9_comptimeRange>());
}
inline jule::Bool _1d667742a_Equal_Kind_5(jule::Trait<_1d667757e_Kind> _self_, jule::Ptr<_1d6677a35_TypeKind> _5621_other) {
	return _1d654cc7e_Equal(_self_.data.as<_1d654c5b9_comptimeRange>(), _5621_other);
}
inline jule::Str _1d66770d9_Str_Kind_6(jule::Trait<_1d667757e_Kind> _self_) {
	return _1d654d455_Str(_self_.safe_ptr<_1d654d08c_comptimeStructField>());
}
inline jule::Bool _1d667742a_Equal_Kind_6(jule::Trait<_1d667757e_Kind> _self_, jule::Ptr<_1d6677a35_TypeKind> _5621_other) {
	return _1d654d796_Equal(_self_.data.as<_1d654d08c_comptimeStructField>(), _5621_other);
}
inline jule::Str _1d66770d9_Str_Kind_7(jule::Trait<_1d667757e_Kind> _self_) {
	return _1d65500c2_Str(_self_.safe_ptr<_1d654ec4d_comptimeStructFields>());
}
inline jule::Bool _1d667742a_Equal_Kind_7(jule::Trait<_1d667757e_Kind> _self_, jule::Ptr<_1d6677a35_TypeKind> _5621_other) {
	return _1d6550413_Equal(_self_.data.as<_1d654ec4d_comptimeStructFields>(), _5621_other);
}
inline jule::Str _1d66770d9_Str_Kind_8(jule::Trait<_1d667757e_Kind> _self_) {
	return _1d65516bc_Str(_self_.safe_ptr<_1d6551348_comptimeStatic>());
}
inline jule::Bool _1d667742a_Equal_Kind_8(jule::Trait<_1d667757e_Kind> _self_, jule::Ptr<_1d6677a35_TypeKind> _5621_other) {
	return _1d6551a0d_Equal(_self_.data.as<_1d6551348_comptimeStatic>(), _5621_other);
}
inline jule::Str _1d66770d9_Str_Kind_9(jule::Trait<_1d667757e_Kind> _self_) {
	return _1d655337d_Str(_self_.safe_ptr<_1d6553009_comptimeStatics>());
}
inline jule::Bool _1d667742a_Equal_Kind_9(jule::Trait<_1d667757e_Kind> _self_, jule::Ptr<_1d6677a35_TypeKind> _5621_other) {
	return _1d65536be_Equal(_self_.data.as<_1d6553009_comptimeStatics>(), _5621_other);
}
inline jule::Str _1d66770d9_Str_Kind_10(jule::Trait<_1d667757e_Kind> _self_) {
	return _1d6554a88_Str(_self_.safe_ptr<_1d6554604_comptimeEnumField>());
}
inline jule::Bool _1d667742a_Equal_Kind_10(jule::Trait<_1d667757e_Kind> _self_, jule::Ptr<_1d6677a35_TypeKind> _5621_other) {
	return _1d6554dc9_Equal(_self_.data.as<_1d6554604_comptimeEnumField>(), _5621_other);
}
inline jule::Str _1d66770d9_Str_Kind_11(jule::Trait<_1d667757e_Kind> _self_) {
	return _1d6555d20_Str(_self_.safe_ptr<_1d655599b_comptimeEnumFields>());
}
inline jule::Bool _1d667742a_Equal_Kind_11(jule::Trait<_1d667757e_Kind> _self_, jule::Ptr<_1d6677a35_TypeKind> _5621_other) {
	return _1d6556161_Equal(_self_.data.as<_1d655599b_comptimeEnumFields>(), _5621_other);
}
inline jule::Str _1d66770d9_Str_Kind_12(jule::Trait<_1d667757e_Kind> _self_) {
	return _1d655741a_Str(_self_.safe_ptr<_1d6557096_comptimeParam>());
}
inline jule::Bool _1d667742a_Equal_Kind_12(jule::Trait<_1d667757e_Kind> _self_, jule::Ptr<_1d6677a35_TypeKind> _5621_other) {
	return _1d655775b_Equal(_self_.data.as<_1d6557096_comptimeParam>(), _5621_other);
}
inline jule::Str _1d66770d9_Str_Kind_13(jule::Trait<_1d667757e_Kind> _self_) {
	return _1d6559681_Str(_self_.safe_ptr<_1d655930c_comptimeParams>());
}
inline jule::Bool _1d667742a_Equal_Kind_13(jule::Trait<_1d667757e_Kind> _self_, jule::Ptr<_1d6677a35_TypeKind> _5621_other) {
	return _1d65599c2_Equal(_self_.data.as<_1d655930c_comptimeParams>(), _5621_other);
}
inline jule::Str _1d66770d9_Str_Kind_14(jule::Trait<_1d667757e_Kind> _self_) {
	return _1d655ac7b_Str(_self_.safe_ptr<_1d655a907_comptimeTypeInfos>());
}
inline jule::Bool _1d667742a_Equal_Kind_14(jule::Trait<_1d667757e_Kind> _self_, jule::Ptr<_1d6677a35_TypeKind> _5621_other) {
	return _1d655b0bc_Equal(_self_.data.as<_1d655a907_comptimeTypeInfos>(), _5621_other);
}
inline jule::Str _1d66770d9_Str_Kind_15(jule::Trait<_1d667757e_Kind> _self_) {
	return _1d655c376_Str(_self_.safe_ptr<_1d655c002_comptimeTypeInfo>());
}
inline jule::Bool _1d667742a_Equal_Kind_15(jule::Trait<_1d667757e_Kind> _self_, jule::Ptr<_1d6677a35_TypeKind> _5621_other) {
	return _1d655c6b7_Equal(_self_.data.as<_1d655c002_comptimeTypeInfo>(), _5621_other);
}
inline jule::Str _1d66770d9_Str_Kind_16(jule::Trait<_1d667757e_Kind> _self_) {
	return _1d6563888_Str(_self_.safe_ptr<_1d6563514_comptimeValue>());
}
inline jule::Bool _1d667742a_Equal_Kind_16(jule::Trait<_1d667757e_Kind> _self_, jule::Ptr<_1d6677a35_TypeKind> _5621_other) {
	return _1d6563bc9_Equal(_self_.data.as<_1d6563514_comptimeValue>(), _5621_other);
}
inline jule::Str _1d66770d9_Str_Kind_17(jule::Trait<_1d667757e_Kind> _self_) {
	return _1d65661d7_Str(_self_.safe_ptr<_1d6565d63_comptimeFiles>());
}
inline jule::Bool _1d667742a_Equal_Kind_17(jule::Trait<_1d667757e_Kind> _self_, jule::Ptr<_1d6677a35_TypeKind> _5621_other) {
	return _1d6566528_Equal(_self_.data.as<_1d6565d63_comptimeFiles>(), _5621_other);
}
inline jule::Str _1d66770d9_Str_Kind_18(jule::Trait<_1d667757e_Kind> _self_) {
	return _1d6567903_Str(_self_.safe_ptr<_1d656745d_comptimeFile>());
}
inline jule::Bool _1d667742a_Equal_Kind_18(jule::Trait<_1d667757e_Kind> _self_, jule::Ptr<_1d6677a35_TypeKind> _5621_other) {
	return _1d6567c44_Equal(_self_.data.as<_1d656745d_comptimeFile>(), _5621_other);
}
inline jule::Str _1d66770d9_Str_Kind_19(jule::Trait<_1d667757e_Kind> _self_) {
	return _1d6677ded_Str(_self_.safe_ptr<_1d6677a35_TypeKind>());
}
inline jule::Bool _1d667742a_Equal_Kind_19(jule::Trait<_1d667757e_Kind> _self_, jule::Ptr<_1d6677a35_TypeKind> _5621_other) {
	return _1d667823e_Equal(_self_.data.as<_1d6677a35_TypeKind>(), _5621_other);
}
inline jule::Str _1d66770d9_Str_Kind_20(jule::Trait<_1d667757e_Kind> _self_) {
	return _1d6680950_Str(_self_.safe_ptr<_1d668060e_Prim>());
}
inline jule::Bool _1d667742a_Equal_Kind_20(jule::Trait<_1d667757e_Kind> _self_, jule::Ptr<_1d6677a35_TypeKind> _5621_other) {
	return _1d6680c91_Equal(_self_.data.as<_1d668060e_Prim>(), _5621_other);
}
inline jule::Str _1d66770d9_Str_Kind_21(jule::Trait<_1d667757e_Kind> _self_) {
	return _1d66844ae_Str(_self_.safe_ptr<_1d668413a_Sptr>());
}
inline jule::Bool _1d667742a_Equal_Kind_21(jule::Trait<_1d667757e_Kind> _self_, jule::Ptr<_1d6677a35_TypeKind> _5621_other) {
	return _1d6684800_Equal(_self_.data.as<_1d668413a_Sptr>(), _5621_other);
}
inline jule::Str _1d66770d9_Str_Kind_22(jule::Trait<_1d667757e_Kind> _self_) {
	return _1d6685092_Str(_self_.safe_ptr<_1d6684b0d_Slc>());
}
inline jule::Bool _1d667742a_Equal_Kind_22(jule::Trait<_1d667757e_Kind> _self_, jule::Ptr<_1d6677a35_TypeKind> _5621_other) {
	return _1d66853d3_Equal(_self_.data.as<_1d6684b0d_Slc>(), _5621_other);
}
inline jule::Str _1d66770d9_Str_Kind_23(jule::Trait<_1d667757e_Kind> _self_) {
	return _1d6685a76_Str(_self_.safe_ptr<_1d6685702_Tuple>());
}
inline jule::Bool _1d667742a_Equal_Kind_23(jule::Trait<_1d667757e_Kind> _self_, jule::Ptr<_1d6677a35_TypeKind> _5621_other) {
	return _1d6685db7_Equal(_self_.data.as<_1d6685702_Tuple>(), _5621_other);
}
inline jule::Str _1d66770d9_Str_Kind_24(jule::Trait<_1d667757e_Kind> _self_) {
	return _1d6686626_Str(_self_.safe_ptr<_1d66862a2_Map>());
}
inline jule::Bool _1d667742a_Equal_Kind_24(jule::Trait<_1d667757e_Kind> _self_, jule::Ptr<_1d6677a35_TypeKind> _5621_other) {
	return _1d6686967_Equal(_self_.data.as<_1d66862a2_Map>(), _5621_other);
}
inline jule::Str _1d66770d9_Str_Kind_25(jule::Trait<_1d667757e_Kind> _self_) {
	return _1d66872a3_Str(_self_.safe_ptr<_1d6686e2e_Arr>());
}
inline jule::Bool _1d667742a_Equal_Kind_25(jule::Trait<_1d667757e_Kind> _self_, jule::Ptr<_1d6677a35_TypeKind> _5621_other) {
	return _1d66875e4_Equal(_self_.data.as<_1d6686e2e_Arr>(), _5621_other);
}
inline jule::Str _1d66770d9_Str_Kind_26(jule::Trait<_1d667757e_Kind> _self_) {
	return _1d6687c76_Str(_self_.safe_ptr<_1d6687902_Ptr>());
}
inline jule::Bool _1d667742a_Equal_Kind_26(jule::Trait<_1d667757e_Kind> _self_, jule::Ptr<_1d6677a35_TypeKind> _5621_other) {
	return _1d66880b7_Equal(_self_.data.as<_1d6687902_Ptr>(), _5621_other);
}
inline jule::Str _1d66770d9_Str_Kind_27(jule::Trait<_1d667757e_Kind> _self_) {
	return _1d7c5c349_Str(_self_.safe_ptr<_1d7c5bea3_customType>());
}
inline jule::Bool _1d667742a_Equal_Kind_27(jule::Trait<_1d667757e_Kind> _self_, jule::Ptr<_1d6677a35_TypeKind> _5621_other) {
	return _1d7c5c68a_Equal(_self_.data.as<_1d7c5bea3_customType>(), _5621_other);
}
inline jule::Ptr<_1d659590e_ImportInfo> _1d6695855_SelectPackage_Lookup_0(jule::Trait<_1d669756b_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1d659590e_ImportInfo>)> _932_selector) {
	return _1d657b8c3_SelectPackage(_self_.safe_ptr<_1d657b42d_scopeChecker>(), _932_selector);
}
inline jule::Ptr<_1d65d9018_Var> _1d6695c51_FindVar_Lookup_0(jule::Trait<_1d669756b_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1d657bcbe_FindVar(_self_.safe_ptr<_1d657b42d_scopeChecker>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1d6676c43_TypeAlias> _1d669614c_FindTypeAlias_Lookup_0(jule::Trait<_1d669756b_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1d657c1ba_FindTypeAlias(_self_.safe_ptr<_1d657b42d_scopeChecker>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1d651c2d1_Struct> _1d6696548_FindStruct_Lookup_0(jule::Trait<_1d669756b_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1d657c5b6_FindStruct(_self_.safe_ptr<_1d657b42d_scopeChecker>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1d653226e_Fn> _1d6696944_FindFn_Lookup_0(jule::Trait<_1d669756b_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1d657c9b2_FindFn(_self_.safe_ptr<_1d657b42d_scopeChecker>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1d654554b_Trait> _1d6696c85_FindTrait_Lookup_0(jule::Trait<_1d669756b_Lookup> _self_, jule::Str _2928_ident) {
	return _1d657cd03_FindTrait(_self_.safe_ptr<_1d657b42d_scopeChecker>(), _2928_ident);
}
inline jule::Ptr<_1d6547c57_Enum> _1d66970c6_FindEnum_Lookup_0(jule::Trait<_1d669756b_Lookup> _self_, jule::Str _3327_ident) {
	return _1d657d144_FindEnum(_self_.safe_ptr<_1d657b42d_scopeChecker>(), _3327_ident);
}
inline jule::Ptr<_1d6549462_TypeEnum> _1d6697417_FindTypeEnum_Lookup_0(jule::Trait<_1d669756b_Lookup> _self_, jule::Str _3731_ident) {
	return _1d657d485_FindTypeEnum(_self_.safe_ptr<_1d657b42d_scopeChecker>(), _3731_ident);
}
inline jule::Ptr<_1d659590e_ImportInfo> _1d6695855_SelectPackage_Lookup_1(jule::Trait<_1d669756b_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1d659590e_ImportInfo>)> _932_selector) {
	return _1d6595de8_SelectPackage(_self_.safe_ptr<_1d659590e_ImportInfo>(), _932_selector);
}
inline jule::Ptr<_1d65d9018_Var> _1d6695c51_FindVar_Lookup_1(jule::Trait<_1d669756b_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1d65962e4_FindVar(_self_.safe_ptr<_1d659590e_ImportInfo>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1d6676c43_TypeAlias> _1d669614c_FindTypeAlias_Lookup_1(jule::Trait<_1d669756b_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1d65966e0_FindTypeAlias(_self_.safe_ptr<_1d659590e_ImportInfo>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1d651c2d1_Struct> _1d6696548_FindStruct_Lookup_1(jule::Trait<_1d669756b_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1d6596adb_FindStruct(_self_.safe_ptr<_1d659590e_ImportInfo>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1d653226e_Fn> _1d6696944_FindFn_Lookup_1(jule::Trait<_1d669756b_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1d6596ed7_FindFn(_self_.safe_ptr<_1d659590e_ImportInfo>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1d654554b_Trait> _1d6696c85_FindTrait_Lookup_1(jule::Trait<_1d669756b_Lookup> _self_, jule::Str _2928_ident) {
	return _1d6597328_FindTrait(_self_.safe_ptr<_1d659590e_ImportInfo>(), _2928_ident);
}
inline jule::Ptr<_1d6547c57_Enum> _1d66970c6_FindEnum_Lookup_1(jule::Trait<_1d669756b_Lookup> _self_, jule::Str _3327_ident) {
	return _1d6597669_FindEnum(_self_.safe_ptr<_1d659590e_ImportInfo>(), _3327_ident);
}
inline jule::Ptr<_1d6549462_TypeEnum> _1d6697417_FindTypeEnum_Lookup_1(jule::Trait<_1d669756b_Lookup> _self_, jule::Str _3731_ident) {
	return _1d65979aa_FindTypeEnum(_self_.safe_ptr<_1d659590e_ImportInfo>(), _3731_ident);
}
inline jule::Ptr<_1d659590e_ImportInfo> _1d6695855_SelectPackage_Lookup_2(jule::Trait<_1d669756b_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1d659590e_ImportInfo>)> _932_selector) {
	return _1d6598cca_SelectPackage(_self_.safe_ptr<_1d6598835_Package>(), _932_selector);
}
inline jule::Ptr<_1d65d9018_Var> _1d6695c51_FindVar_Lookup_2(jule::Trait<_1d669756b_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1d65991c6_FindVar(_self_.safe_ptr<_1d6598835_Package>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1d6676c43_TypeAlias> _1d669614c_FindTypeAlias_Lookup_2(jule::Trait<_1d669756b_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1d65995c2_FindTypeAlias(_self_.safe_ptr<_1d6598835_Package>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1d651c2d1_Struct> _1d6696548_FindStruct_Lookup_2(jule::Trait<_1d669756b_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1d65999bd_FindStruct(_self_.safe_ptr<_1d6598835_Package>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1d653226e_Fn> _1d6696944_FindFn_Lookup_2(jule::Trait<_1d669756b_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1d6599db9_FindFn(_self_.safe_ptr<_1d6598835_Package>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1d654554b_Trait> _1d6696c85_FindTrait_Lookup_2(jule::Trait<_1d669756b_Lookup> _self_, jule::Str _2928_ident) {
	return _1d659a20a_FindTrait(_self_.safe_ptr<_1d6598835_Package>(), _2928_ident);
}
inline jule::Ptr<_1d6547c57_Enum> _1d66970c6_FindEnum_Lookup_2(jule::Trait<_1d669756b_Lookup> _self_, jule::Str _3327_ident) {
	return _1d659a54b_FindEnum(_self_.safe_ptr<_1d6598835_Package>(), _3327_ident);
}
inline jule::Ptr<_1d6549462_TypeEnum> _1d6697417_FindTypeEnum_Lookup_2(jule::Trait<_1d669756b_Lookup> _self_, jule::Str _3731_ident) {
	return _1d659a88c_FindTypeEnum(_self_.safe_ptr<_1d6598835_Package>(), _3731_ident);
}
inline jule::Ptr<_1d659590e_ImportInfo> _1d6695855_SelectPackage_Lookup_3(jule::Trait<_1d669756b_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1d659590e_ImportInfo>)> _932_selector) {
	return _1d65b6226_SelectPackage(_self_.safe_ptr<_1d65b5c81_Sema>(), _932_selector);
}
inline jule::Ptr<_1d65d9018_Var> _1d6695c51_FindVar_Lookup_3(jule::Trait<_1d669756b_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1d65b6622_FindVar(_self_.safe_ptr<_1d65b5c81_Sema>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1d6676c43_TypeAlias> _1d669614c_FindTypeAlias_Lookup_3(jule::Trait<_1d669756b_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1d65b6a1d_FindTypeAlias(_self_.safe_ptr<_1d65b5c81_Sema>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1d651c2d1_Struct> _1d6696548_FindStruct_Lookup_3(jule::Trait<_1d669756b_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1d65b6e19_FindStruct(_self_.safe_ptr<_1d65b5c81_Sema>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1d653226e_Fn> _1d6696944_FindFn_Lookup_3(jule::Trait<_1d669756b_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1d65b7315_FindFn(_self_.safe_ptr<_1d65b5c81_Sema>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1d654554b_Trait> _1d6696c85_FindTrait_Lookup_3(jule::Trait<_1d669756b_Lookup> _self_, jule::Str _2928_ident) {
	return _1d65b7656_FindTrait(_self_.safe_ptr<_1d65b5c81_Sema>(), _2928_ident);
}
inline jule::Ptr<_1d6547c57_Enum> _1d66970c6_FindEnum_Lookup_3(jule::Trait<_1d669756b_Lookup> _self_, jule::Str _3327_ident) {
	return _1d65b7997_FindEnum(_self_.safe_ptr<_1d65b5c81_Sema>(), _3327_ident);
}
inline jule::Ptr<_1d6549462_TypeEnum> _1d6697417_FindTypeEnum_Lookup_3(jule::Trait<_1d669756b_Lookup> _self_, jule::Str _3731_ident) {
	return _1d65b7cd8_FindTypeEnum(_self_.safe_ptr<_1d65b5c81_Sema>(), _3731_ident);
}
inline jule::Ptr<_1d659590e_ImportInfo> _1d6695855_SelectPackage_Lookup_4(jule::Trait<_1d669756b_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1d659590e_ImportInfo>)> _932_selector) {
	return _1d664235c_SelectPackage(_self_.safe_ptr<_1d6641d73_SymbolTable>(), _932_selector);
}
inline jule::Ptr<_1d65d9018_Var> _1d6695c51_FindVar_Lookup_4(jule::Trait<_1d669756b_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1d6642758_FindVar(_self_.safe_ptr<_1d6641d73_SymbolTable>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1d6676c43_TypeAlias> _1d669614c_FindTypeAlias_Lookup_4(jule::Trait<_1d669756b_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1d6642b54_FindTypeAlias(_self_.safe_ptr<_1d6641d73_SymbolTable>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1d651c2d1_Struct> _1d6696548_FindStruct_Lookup_4(jule::Trait<_1d669756b_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1d6643050_FindStruct(_self_.safe_ptr<_1d6641d73_SymbolTable>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1d653226e_Fn> _1d6696944_FindFn_Lookup_4(jule::Trait<_1d669756b_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1d664344b_FindFn(_self_.safe_ptr<_1d6641d73_SymbolTable>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1d654554b_Trait> _1d6696c85_FindTrait_Lookup_4(jule::Trait<_1d669756b_Lookup> _self_, jule::Str _2928_ident) {
	return _1d664378c_FindTrait(_self_.safe_ptr<_1d6641d73_SymbolTable>(), _2928_ident);
}
inline jule::Ptr<_1d6547c57_Enum> _1d66970c6_FindEnum_Lookup_4(jule::Trait<_1d669756b_Lookup> _self_, jule::Str _3327_ident) {
	return _1d6643acd_FindEnum(_self_.safe_ptr<_1d6641d73_SymbolTable>(), _3327_ident);
}
inline jule::Ptr<_1d6549462_TypeEnum> _1d6697417_FindTypeEnum_Lookup_4(jule::Trait<_1d669756b_Lookup> _self_, jule::Str _3731_ident) {
	return _1d6643e1e_FindTypeEnum(_self_.safe_ptr<_1d6641d73_SymbolTable>(), _3731_ident);
}
inline jule::Str _1d7c9e116_Name_CommonFlag_0(jule::Trait<_1d7ccee38_CommonFlag> _self_) {
	return _1db2bb4cb_Name(_self_.safe_ptr<_1db2bb663_Flag>());
}
inline jule::I32 _1d7c9e259_Short_CommonFlag_0(jule::Trait<_1d7ccee38_CommonFlag> _self_) {
	return _1db2bbbd5_Short(_self_.safe_ptr<_1db2bb663_Flag>());
}
inline jule::Str _1d7cceba2_What_CommonFlag_0(jule::Trait<_1d7ccee38_CommonFlag> _self_) {
	return _1db2bb94e_What(_self_.safe_ptr<_1db2bb663_Flag>());
}
inline void _1d7ccece5_Reset_CommonFlag_0(jule::Trait<_1d7ccee38_CommonFlag> _self_) {
	_1db2bba92_Reset(_self_.safe_ptr<_1db2bb663_Flag>());
}
inline jule::Str _1d7c9e116_Name_CommonFlag_1(jule::Trait<_1d7ccee38_CommonFlag> _self_) {
	return _1db2beb2d_Name(_self_.safe_ptr<_1db2c0007_Flag>());
}
inline jule::I32 _1d7c9e259_Short_CommonFlag_1(jule::Trait<_1d7ccee38_CommonFlag> _self_) {
	return _1db2c0579_Short(_self_.safe_ptr<_1db2c0007_Flag>());
}
inline jule::Str _1d7cceba2_What_CommonFlag_1(jule::Trait<_1d7ccee38_CommonFlag> _self_) {
	return _1db2c02e3_What(_self_.safe_ptr<_1db2c0007_Flag>());
}
inline void _1d7ccece5_Reset_CommonFlag_1(jule::Trait<_1d7ccee38_CommonFlag> _self_) {
	_1db2c0436_Reset(_self_.safe_ptr<_1db2c0007_Flag>());
}
inline jule::Str _1d7c9e116_Name_CommonFlag_2(jule::Trait<_1d7ccee38_CommonFlag> _self_) {
	return _1db2c3329_Name(_self_.safe_ptr<_1db2c3703_Flag>());
}
inline jule::I32 _1d7c9e259_Short_CommonFlag_2(jule::Trait<_1d7ccee38_CommonFlag> _self_) {
	return _1db2c3c75_Short(_self_.safe_ptr<_1db2c3703_Flag>());
}
inline jule::Str _1d7cceba2_What_CommonFlag_2(jule::Trait<_1d7ccee38_CommonFlag> _self_) {
	return _1db2c39de_What(_self_.safe_ptr<_1db2c3703_Flag>());
}
inline void _1d7ccece5_Reset_CommonFlag_2(jule::Trait<_1d7ccee38_CommonFlag> _self_) {
	_1db2c3b32_Reset(_self_.safe_ptr<_1db2c3703_Flag>());
}
inline jule::Str _1d7c9e116_Name_CommonFlag_3(jule::Trait<_1d7ccee38_CommonFlag> _self_) {
	return _1db2c6a69_Name(_self_.safe_ptr<_1db2c6e43_Flag>());
}
inline jule::I32 _1d7c9e259_Short_CommonFlag_3(jule::Trait<_1d7ccee38_CommonFlag> _self_) {
	return _1db2c74b5_Short(_self_.safe_ptr<_1db2c6e43_Flag>());
}
inline jule::Str _1d7cceba2_What_CommonFlag_3(jule::Trait<_1d7ccee38_CommonFlag> _self_) {
	return _1db2c722e_What(_self_.safe_ptr<_1db2c6e43_Flag>());
}
inline void _1d7ccece5_Reset_CommonFlag_3(jule::Trait<_1d7ccee38_CommonFlag> _self_) {
	_1db2c7372_Reset(_self_.safe_ptr<_1db2c6e43_Flag>());
}
inline jule::Str _1d7c9e116_Name_CommonFlag_4(jule::Trait<_1d7ccee38_CommonFlag> _self_) {
	return _1db2ca265_Name(_self_.safe_ptr<_1db2ca63e_Flag>());
}
inline jule::I32 _1d7c9e259_Short_CommonFlag_4(jule::Trait<_1d7ccee38_CommonFlag> _self_) {
	return _1db2cabb1_Short(_self_.safe_ptr<_1db2ca63e_Flag>());
}
inline jule::Str _1d7cceba2_What_CommonFlag_4(jule::Trait<_1d7ccee38_CommonFlag> _self_) {
	return _1db2ca92a_What(_self_.safe_ptr<_1db2ca63e_Flag>());
}
inline void _1d7ccece5_Reset_CommonFlag_4(jule::Trait<_1d7ccee38_CommonFlag> _self_) {
	_1db2caa6d_Reset(_self_.safe_ptr<_1db2ca63e_Flag>());
}


static _1d654c399_comptimeRangeKindMptrData _1d654c399_comptimeRangeKind_mptr_data[] = {
	{
		._1d654ba91_ready=_1d654ba91_ready_comptimeRangeKind_0,
		._1d654beae_step=_1d654beae_step_comptimeRangeKind_0,
		._1d654c245_len=_1d654c245_len_comptimeRangeKind_0,
	},
	{
		._1d654ba91_ready=_1d654ba91_ready_comptimeRangeKind_1,
		._1d654beae_step=_1d654beae_step_comptimeRangeKind_1,
		._1d654c245_len=_1d654c245_len_comptimeRangeKind_1,
	},
	{
		._1d654ba91_ready=_1d654ba91_ready_comptimeRangeKind_2,
		._1d654beae_step=_1d654beae_step_comptimeRangeKind_2,
		._1d654c245_len=_1d654c245_len_comptimeRangeKind_2,
	},
	{
		._1d654ba91_ready=_1d654ba91_ready_comptimeRangeKind_3,
		._1d654beae_step=_1d654beae_step_comptimeRangeKind_3,
		._1d654c245_len=_1d654c245_len_comptimeRangeKind_3,
	},
	{
		._1d654ba91_ready=_1d654ba91_ready_comptimeRangeKind_4,
		._1d654beae_step=_1d654beae_step_comptimeRangeKind_4,
		._1d654c245_len=_1d654c245_len_comptimeRangeKind_4,
	},
	{
		._1d654ba91_ready=_1d654ba91_ready_comptimeRangeKind_5,
		._1d654beae_step=_1d654beae_step_comptimeRangeKind_5,
		._1d654c245_len=_1d654c245_len_comptimeRangeKind_5,
	},
};
static _1d65929e9_ImporterMptrData _1d65929e9_Importer_mptr_data[] = {
	{
		._1d65917c8_SetModPath=_1d65917c8_SetModPath_Importer_0,
		._1d6591a5e_GetModPath=_1d6591a5e_GetModPath_Importer_0,
		._1d6591da0_ModById=_1d6591da0_ModById_Importer_0,
		._1d65921e1_GetImport=_1d65921e1_GetImport_Importer_0,
		._1d65925dc_ImportPackage=_1d65925dc_ImportPackage_Importer_0,
		._1d6592895_Imported=_1d6592895_Imported_Importer_0,
	},
};
static _1d667757e_KindMptrData _1d667757e_Kind_mptr_data[] = {
	{
		._1d66770d9_Str=_1d66770d9_Str_Kind_0,
		._1d667742a_Equal=_1d667742a_Equal_Kind_0,
	},
	{
		._1d66770d9_Str=_1d66770d9_Str_Kind_1,
		._1d667742a_Equal=_1d667742a_Equal_Kind_1,
	},
	{
		._1d66770d9_Str=_1d66770d9_Str_Kind_2,
		._1d667742a_Equal=_1d667742a_Equal_Kind_2,
	},
	{
		._1d66770d9_Str=_1d66770d9_Str_Kind_3,
		._1d667742a_Equal=_1d667742a_Equal_Kind_3,
	},
	{
		._1d66770d9_Str=_1d66770d9_Str_Kind_4,
		._1d667742a_Equal=_1d667742a_Equal_Kind_4,
	},
	{
		._1d66770d9_Str=_1d66770d9_Str_Kind_5,
		._1d667742a_Equal=_1d667742a_Equal_Kind_5,
	},
	{
		._1d66770d9_Str=_1d66770d9_Str_Kind_6,
		._1d667742a_Equal=_1d667742a_Equal_Kind_6,
	},
	{
		._1d66770d9_Str=_1d66770d9_Str_Kind_7,
		._1d667742a_Equal=_1d667742a_Equal_Kind_7,
	},
	{
		._1d66770d9_Str=_1d66770d9_Str_Kind_8,
		._1d667742a_Equal=_1d667742a_Equal_Kind_8,
	},
	{
		._1d66770d9_Str=_1d66770d9_Str_Kind_9,
		._1d667742a_Equal=_1d667742a_Equal_Kind_9,
	},
	{
		._1d66770d9_Str=_1d66770d9_Str_Kind_10,
		._1d667742a_Equal=_1d667742a_Equal_Kind_10,
	},
	{
		._1d66770d9_Str=_1d66770d9_Str_Kind_11,
		._1d667742a_Equal=_1d667742a_Equal_Kind_11,
	},
	{
		._1d66770d9_Str=_1d66770d9_Str_Kind_12,
		._1d667742a_Equal=_1d667742a_Equal_Kind_12,
	},
	{
		._1d66770d9_Str=_1d66770d9_Str_Kind_13,
		._1d667742a_Equal=_1d667742a_Equal_Kind_13,
	},
	{
		._1d66770d9_Str=_1d66770d9_Str_Kind_14,
		._1d667742a_Equal=_1d667742a_Equal_Kind_14,
	},
	{
		._1d66770d9_Str=_1d66770d9_Str_Kind_15,
		._1d667742a_Equal=_1d667742a_Equal_Kind_15,
	},
	{
		._1d66770d9_Str=_1d66770d9_Str_Kind_16,
		._1d667742a_Equal=_1d667742a_Equal_Kind_16,
	},
	{
		._1d66770d9_Str=_1d66770d9_Str_Kind_17,
		._1d667742a_Equal=_1d667742a_Equal_Kind_17,
	},
	{
		._1d66770d9_Str=_1d66770d9_Str_Kind_18,
		._1d667742a_Equal=_1d667742a_Equal_Kind_18,
	},
	{
		._1d66770d9_Str=_1d66770d9_Str_Kind_19,
		._1d667742a_Equal=_1d667742a_Equal_Kind_19,
	},
	{
		._1d66770d9_Str=_1d66770d9_Str_Kind_20,
		._1d667742a_Equal=_1d667742a_Equal_Kind_20,
	},
	{
		._1d66770d9_Str=_1d66770d9_Str_Kind_21,
		._1d667742a_Equal=_1d667742a_Equal_Kind_21,
	},
	{
		._1d66770d9_Str=_1d66770d9_Str_Kind_22,
		._1d667742a_Equal=_1d667742a_Equal_Kind_22,
	},
	{
		._1d66770d9_Str=_1d66770d9_Str_Kind_23,
		._1d667742a_Equal=_1d667742a_Equal_Kind_23,
	},
	{
		._1d66770d9_Str=_1d66770d9_Str_Kind_24,
		._1d667742a_Equal=_1d667742a_Equal_Kind_24,
	},
	{
		._1d66770d9_Str=_1d66770d9_Str_Kind_25,
		._1d667742a_Equal=_1d667742a_Equal_Kind_25,
	},
	{
		._1d66770d9_Str=_1d66770d9_Str_Kind_26,
		._1d667742a_Equal=_1d667742a_Equal_Kind_26,
	},
	{
		._1d66770d9_Str=_1d66770d9_Str_Kind_27,
		._1d667742a_Equal=_1d667742a_Equal_Kind_27,
	},
};
static _1d669756b_LookupMptrData _1d669756b_Lookup_mptr_data[] = {
	{
		._1d6695855_SelectPackage=_1d6695855_SelectPackage_Lookup_0,
		._1d6695c51_FindVar=_1d6695c51_FindVar_Lookup_0,
		._1d669614c_FindTypeAlias=_1d669614c_FindTypeAlias_Lookup_0,
		._1d6696548_FindStruct=_1d6696548_FindStruct_Lookup_0,
		._1d6696944_FindFn=_1d6696944_FindFn_Lookup_0,
		._1d6696c85_FindTrait=_1d6696c85_FindTrait_Lookup_0,
		._1d66970c6_FindEnum=_1d66970c6_FindEnum_Lookup_0,
		._1d6697417_FindTypeEnum=_1d6697417_FindTypeEnum_Lookup_0,
	},
	{
		._1d6695855_SelectPackage=_1d6695855_SelectPackage_Lookup_1,
		._1d6695c51_FindVar=_1d6695c51_FindVar_Lookup_1,
		._1d669614c_FindTypeAlias=_1d669614c_FindTypeAlias_Lookup_1,
		._1d6696548_FindStruct=_1d6696548_FindStruct_Lookup_1,
		._1d6696944_FindFn=_1d6696944_FindFn_Lookup_1,
		._1d6696c85_FindTrait=_1d6696c85_FindTrait_Lookup_1,
		._1d66970c6_FindEnum=_1d66970c6_FindEnum_Lookup_1,
		._1d6697417_FindTypeEnum=_1d6697417_FindTypeEnum_Lookup_1,
	},
	{
		._1d6695855_SelectPackage=_1d6695855_SelectPackage_Lookup_2,
		._1d6695c51_FindVar=_1d6695c51_FindVar_Lookup_2,
		._1d669614c_FindTypeAlias=_1d669614c_FindTypeAlias_Lookup_2,
		._1d6696548_FindStruct=_1d6696548_FindStruct_Lookup_2,
		._1d6696944_FindFn=_1d6696944_FindFn_Lookup_2,
		._1d6696c85_FindTrait=_1d6696c85_FindTrait_Lookup_2,
		._1d66970c6_FindEnum=_1d66970c6_FindEnum_Lookup_2,
		._1d6697417_FindTypeEnum=_1d6697417_FindTypeEnum_Lookup_2,
	},
	{
		._1d6695855_SelectPackage=_1d6695855_SelectPackage_Lookup_3,
		._1d6695c51_FindVar=_1d6695c51_FindVar_Lookup_3,
		._1d669614c_FindTypeAlias=_1d669614c_FindTypeAlias_Lookup_3,
		._1d6696548_FindStruct=_1d6696548_FindStruct_Lookup_3,
		._1d6696944_FindFn=_1d6696944_FindFn_Lookup_3,
		._1d6696c85_FindTrait=_1d6696c85_FindTrait_Lookup_3,
		._1d66970c6_FindEnum=_1d66970c6_FindEnum_Lookup_3,
		._1d6697417_FindTypeEnum=_1d6697417_FindTypeEnum_Lookup_3,
	},
	{
		._1d6695855_SelectPackage=_1d6695855_SelectPackage_Lookup_4,
		._1d6695c51_FindVar=_1d6695c51_FindVar_Lookup_4,
		._1d669614c_FindTypeAlias=_1d669614c_FindTypeAlias_Lookup_4,
		._1d6696548_FindStruct=_1d6696548_FindStruct_Lookup_4,
		._1d6696944_FindFn=_1d6696944_FindFn_Lookup_4,
		._1d6696c85_FindTrait=_1d6696c85_FindTrait_Lookup_4,
		._1d66970c6_FindEnum=_1d66970c6_FindEnum_Lookup_4,
		._1d6697417_FindTypeEnum=_1d6697417_FindTypeEnum_Lookup_4,
	},
};
static _1d7ccee38_CommonFlagMptrData _1d7ccee38_CommonFlag_mptr_data[] = {
	{
		._1d7c9e116_Name=_1d7c9e116_Name_CommonFlag_0,
		._1d7c9e259_Short=_1d7c9e259_Short_CommonFlag_0,
		._1d7cceba2_What=_1d7cceba2_What_CommonFlag_0,
		._1d7ccece5_Reset=_1d7ccece5_Reset_CommonFlag_0,
	},
	{
		._1d7c9e116_Name=_1d7c9e116_Name_CommonFlag_1,
		._1d7c9e259_Short=_1d7c9e259_Short_CommonFlag_1,
		._1d7cceba2_What=_1d7cceba2_What_CommonFlag_1,
		._1d7ccece5_Reset=_1d7ccece5_Reset_CommonFlag_1,
	},
	{
		._1d7c9e116_Name=_1d7c9e116_Name_CommonFlag_2,
		._1d7c9e259_Short=_1d7c9e259_Short_CommonFlag_2,
		._1d7cceba2_What=_1d7cceba2_What_CommonFlag_2,
		._1d7ccece5_Reset=_1d7ccece5_Reset_CommonFlag_2,
	},
	{
		._1d7c9e116_Name=_1d7c9e116_Name_CommonFlag_3,
		._1d7c9e259_Short=_1d7c9e259_Short_CommonFlag_3,
		._1d7cceba2_What=_1d7cceba2_What_CommonFlag_3,
		._1d7ccece5_Reset=_1d7ccece5_Reset_CommonFlag_3,
	},
	{
		._1d7c9e116_Name=_1d7c9e116_Name_CommonFlag_4,
		._1d7c9e259_Short=_1d7c9e259_Short_CommonFlag_4,
		._1d7cceba2_What=_1d7cceba2_What_CommonFlag_4,
		._1d7ccece5_Reset=_1d7ccece5_Reset_CommonFlag_4,
	},
};


void __jule_any_type0_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
jule::Bool __jule_any_type0_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other); }
jule::Str __jule_any_type0_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type0{.dealloc=__jule_any_type0_dealloc, .eq=__jule_any_type0_eq, .to_str=__jule_any_type0_to_str};
jule::Bool __jule_any_type0_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type0 && __jule_any_type0_eq(any.data.alloc, (void*)&other); }
void __jule_any_type1_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
jule::Bool __jule_any_type1_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other); }
jule::Str __jule_any_type1_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type1{.dealloc=__jule_any_type1_dealloc, .eq=__jule_any_type1_eq, .to_str=__jule_any_type1_to_str};
jule::Bool __jule_any_type1_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type1 && __jule_any_type1_eq(any.data.alloc, (void*)&other); }
void __jule_any_type2_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U64>().dealloc(); }
jule::Bool __jule_any_type2_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U64*>(alloc) == *reinterpret_cast<jule::U64*>(other); }
jule::Str __jule_any_type2_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U64*>(alloc)); }
struct jule::Any::Type __jule_any_type2{.dealloc=__jule_any_type2_dealloc, .eq=__jule_any_type2_eq, .to_str=__jule_any_type2_to_str};
jule::Bool __jule_any_type2_compare(const jule::Any &any, const jule::U64 &other) { return any.type == &__jule_any_type2 && __jule_any_type2_eq(any.data.alloc, (void*)&other); }
void __jule_any_type3_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Bool>().dealloc(); }
jule::Bool __jule_any_type3_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::Bool*>(alloc) == *reinterpret_cast<jule::Bool*>(other); }
jule::Str __jule_any_type3_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::Bool*>(alloc)); }
struct jule::Any::Type __jule_any_type3{.dealloc=__jule_any_type3_dealloc, .eq=__jule_any_type3_eq, .to_str=__jule_any_type3_to_str};
jule::Bool __jule_any_type3_compare(const jule::Any &any, const jule::Bool &other) { return any.type == &__jule_any_type3 && __jule_any_type3_eq(any.data.alloc, (void*)&other); }
void __jule_any_type4_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
jule::Bool __jule_any_type4_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::Str*>(alloc) == *reinterpret_cast<jule::Str*>(other); }
jule::Str __jule_any_type4_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type4{.dealloc=__jule_any_type4_dealloc, .eq=__jule_any_type4_eq, .to_str=__jule_any_type4_to_str};
jule::Bool __jule_any_type4_compare(const jule::Any &any, const jule::Str &other) { return any.type == &__jule_any_type4 && __jule_any_type4_eq(any.data.alloc, (void*)&other); }
void __jule_any_type5_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F64>().dealloc(); }
jule::Bool __jule_any_type5_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::F64*>(alloc) == *reinterpret_cast<jule::F64*>(other); }
jule::Str __jule_any_type5_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::F64*>(alloc)); }
struct jule::Any::Type __jule_any_type5{.dealloc=__jule_any_type5_dealloc, .eq=__jule_any_type5_eq, .to_str=__jule_any_type5_to_str};
jule::Bool __jule_any_type5_compare(const jule::Any &any, const jule::F64 &other) { return any.type == &__jule_any_type5 && __jule_any_type5_eq(any.data.alloc, (void*)&other); }
void __jule_any_type6_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
jule::Bool __jule_any_type6_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other); }
jule::Str __jule_any_type6_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type6{.dealloc=__jule_any_type6_dealloc, .eq=__jule_any_type6_eq, .to_str=__jule_any_type6_to_str};
jule::Bool __jule_any_type6_compare(const jule::Any &any, const jule::I32 &other) { return any.type == &__jule_any_type6 && __jule_any_type6_eq(any.data.alloc, (void*)&other); }
void __jule_any_type7_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d6535173_FnIns>().dealloc(); }
struct jule::Any::Type __jule_any_type7{.dealloc=__jule_any_type7_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type7_compare(const jule::Any &any, const jule::Ptr<_1d6535173_FnIns> &other) { return any.type == &__jule_any_type7 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type8_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d65d9018_Var>().dealloc(); }
struct jule::Any::Type __jule_any_type8{.dealloc=__jule_any_type8_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type8_compare(const jule::Any &any, const jule::Ptr<_1d65d9018_Var> &other) { return any.type == &__jule_any_type8 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type9_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d652005e_StructIns>().dealloc(); }
struct jule::Any::Type __jule_any_type9{.dealloc=__jule_any_type9_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type9_compare(const jule::Any &any, const jule::Ptr<_1d652005e_StructIns> &other) { return any.type == &__jule_any_type9 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type10_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d654554b_Trait>().dealloc(); }
struct jule::Any::Type __jule_any_type10{.dealloc=__jule_any_type10_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type10_compare(const jule::Any &any, const jule::Ptr<_1d654554b_Trait> &other) { return any.type == &__jule_any_type10 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type11_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d6518046_Impl>().dealloc(); }
struct jule::Any::Type __jule_any_type11{.dealloc=__jule_any_type11_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type11_compare(const jule::Any &any, const jule::Ptr<_1d6518046_Impl> &other) { return any.type == &__jule_any_type11 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type12_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d6512ded_TypeAliasDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type12{.dealloc=__jule_any_type12_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type12_compare(const jule::Any &any, const jule::Ptr<_1d6512ded_TypeAliasDecl> &other) { return any.type == &__jule_any_type12 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type13_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d6517199_StructDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type13{.dealloc=__jule_any_type13_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type13_compare(const jule::Any &any, const jule::Ptr<_1d6517199_StructDecl> &other) { return any.type == &__jule_any_type13 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type14_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d650d091_FnDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type14{.dealloc=__jule_any_type14_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type14_compare(const jule::Any &any, const jule::Ptr<_1d650d091_FnDecl> &other) { return any.type == &__jule_any_type14 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type15_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d65178d6_TraitDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type15{.dealloc=__jule_any_type15_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type15_compare(const jule::Any &any, const jule::Ptr<_1d65178d6_TraitDecl> &other) { return any.type == &__jule_any_type15 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type16_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d650e24b_VarDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type16{.dealloc=__jule_any_type16_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type16_compare(const jule::Any &any, const jule::Ptr<_1d650e24b_VarDecl> &other) { return any.type == &__jule_any_type16 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type17_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d651554e_EnumDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type17{.dealloc=__jule_any_type17_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type17_compare(const jule::Any &any, const jule::Ptr<_1d651554e_EnumDecl> &other) { return any.type == &__jule_any_type17 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type18_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d65164d9_TypeEnumDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type18{.dealloc=__jule_any_type18_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type18_compare(const jule::Any &any, const jule::Ptr<_1d65164d9_TypeEnumDecl> &other) { return any.type == &__jule_any_type18 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type19_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d4321208_Const>().dealloc(); }
struct jule::Any::Type __jule_any_type19{.dealloc=__jule_any_type19_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type19_compare(const jule::Any &any, const jule::Ptr<_1d4321208_Const> &other) { return any.type == &__jule_any_type19 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type20_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d64eb9db_IdentTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type20{.dealloc=__jule_any_type20_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type20_compare(const jule::Any &any, const jule::Ptr<_1d64eb9db_IdentTypeDecl> &other) { return any.type == &__jule_any_type20 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type21_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d65769bc_Label>().dealloc(); }
struct jule::Any::Type __jule_any_type21{.dealloc=__jule_any_type21_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type21_compare(const jule::Any &any, const jule::Ptr<_1d65769bc_Label> &other) { return any.type == &__jule_any_type21 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type22_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d6574129_Scope>().dealloc(); }
struct jule::Any::Type __jule_any_type22{.dealloc=__jule_any_type22_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type22_compare(const jule::Any &any, const jule::Ptr<_1d6574129_Scope> &other) { return any.type == &__jule_any_type22 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type23_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d652cd19_BuiltinErrorCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type23{.dealloc=__jule_any_type23_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type23_compare(const jule::Any &any, const jule::Ptr<_1d652cd19_BuiltinErrorCallExprModel> &other) { return any.type == &__jule_any_type23 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type24_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d664721e_Data>().dealloc(); }
struct jule::Any::Type __jule_any_type24{.dealloc=__jule_any_type24_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type24_compare(const jule::Any &any, const jule::Ptr<_1d664721e_Data> &other) { return any.type == &__jule_any_type24 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type25_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d652e018_BackendEmitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type25{.dealloc=__jule_any_type25_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type25_compare(const jule::Any &any, const jule::Ptr<_1d652e018_BackendEmitExprModel> &other) { return any.type == &__jule_any_type25 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type26_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d652ba93_BuiltinAppendCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type26{.dealloc=__jule_any_type26_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type26_compare(const jule::Any &any, const jule::Ptr<_1d652ba93_BuiltinAppendCallExprModel> &other) { return any.type == &__jule_any_type26 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type27_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d652a0d0_BuiltinOutCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type27{.dealloc=__jule_any_type27_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type27_compare(const jule::Any &any, const jule::Ptr<_1d652a0d0_BuiltinOutCallExprModel> &other) { return any.type == &__jule_any_type27 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type28_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d652a4a9_BuiltinOutlnCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type28{.dealloc=__jule_any_type28_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type28_compare(const jule::Any &any, const jule::Ptr<_1d652a4a9_BuiltinOutlnCallExprModel> &other) { return any.type == &__jule_any_type28 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type29_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d652ac5c_BuiltinPanicCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type29{.dealloc=__jule_any_type29_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type29_compare(const jule::Any &any, const jule::Ptr<_1d652ac5c_BuiltinPanicCallExprModel> &other) { return any.type == &__jule_any_type29 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type30_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d652b213_BuiltinAssertCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type30{.dealloc=__jule_any_type30_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type30_compare(const jule::Any &any, const jule::Ptr<_1d652b213_BuiltinAssertCallExprModel> &other) { return any.type == &__jule_any_type30 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type31_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d652c940_BuiltinCopyCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type31{.dealloc=__jule_any_type31_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type31_compare(const jule::Any &any, const jule::Ptr<_1d652c940_BuiltinCopyCallExprModel> &other) { return any.type == &__jule_any_type31 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type32_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d652c566_BuiltinDeleteCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type32{.dealloc=__jule_any_type32_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type32_compare(const jule::Any &any, const jule::Ptr<_1d652c566_BuiltinDeleteCallExprModel> &other) { return any.type == &__jule_any_type32 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type33_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d652e315_FreeExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type33{.dealloc=__jule_any_type33_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type33_compare(const jule::Any &any, const jule::Ptr<_1d652e315_FreeExprModel> &other) { return any.type == &__jule_any_type33 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type34_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d65264d8_FnCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type34{.dealloc=__jule_any_type34_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type34_compare(const jule::Any &any, const jule::Ptr<_1d65264d8_FnCallExprModel> &other) { return any.type == &__jule_any_type34 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type35_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d6574c62_Conditional>().dealloc(); }
struct jule::Any::Type __jule_any_type35{.dealloc=__jule_any_type35_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type35_compare(const jule::Any &any, const jule::Ptr<_1d6574c62_Conditional> &other) { return any.type == &__jule_any_type35 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type36_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d657505e_InfIter>().dealloc(); }
struct jule::Any::Type __jule_any_type36{.dealloc=__jule_any_type36_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type36_compare(const jule::Any &any, const jule::Ptr<_1d657505e_InfIter> &other) { return any.type == &__jule_any_type36 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type37_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d65106c0_WhileKind>().dealloc(); }
struct jule::Any::Type __jule_any_type37{.dealloc=__jule_any_type37_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type37_compare(const jule::Any &any, const jule::Ptr<_1d65106c0_WhileKind> &other) { return any.type == &__jule_any_type37 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type38_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d6575515_WhileIter>().dealloc(); }
struct jule::Any::Type __jule_any_type38{.dealloc=__jule_any_type38_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type38_compare(const jule::Any &any, const jule::Ptr<_1d6575515_WhileIter> &other) { return any.type == &__jule_any_type38 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type39_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d65110c7_RangeKind>().dealloc(); }
struct jule::Any::Type __jule_any_type39{.dealloc=__jule_any_type39_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type39_compare(const jule::Any &any, const jule::Ptr<_1d65110c7_RangeKind> &other) { return any.type == &__jule_any_type39 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type40_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d6575e61_RangeIter>().dealloc(); }
struct jule::Any::Type __jule_any_type40{.dealloc=__jule_any_type40_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type40_compare(const jule::Any &any, const jule::Ptr<_1d6575e61_RangeIter> &other) { return any.type == &__jule_any_type40 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type41_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d65762e6_ContSt>().dealloc(); }
struct jule::Any::Type __jule_any_type41{.dealloc=__jule_any_type41_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type41_compare(const jule::Any &any, const jule::Ptr<_1d65762e6_ContSt> &other) { return any.type == &__jule_any_type41 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type42_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d6576d96_GotoSt>().dealloc(); }
struct jule::Any::Type __jule_any_type42{.dealloc=__jule_any_type42_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type42_compare(const jule::Any &any, const jule::Ptr<_1d6576d96_GotoSt> &other) { return any.type == &__jule_any_type42 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type43_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d6577270_Postfix>().dealloc(); }
struct jule::Any::Type __jule_any_type43{.dealloc=__jule_any_type43_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type43_compare(const jule::Any &any, const jule::Ptr<_1d6577270_Postfix> &other) { return any.type == &__jule_any_type43 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type44_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d6577726_Assign>().dealloc(); }
struct jule::Any::Type __jule_any_type44{.dealloc=__jule_any_type44_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type44_compare(const jule::Any &any, const jule::Ptr<_1d6577726_Assign> &other) { return any.type == &__jule_any_type44 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type45_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d6526d68_IndexingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type45{.dealloc=__jule_any_type45_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type45_compare(const jule::Any &any, const jule::Ptr<_1d6526d68_IndexingExprModel> &other) { return any.type == &__jule_any_type45 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type46_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d6577b00_MultiAssign>().dealloc(); }
struct jule::Any::Type __jule_any_type46{.dealloc=__jule_any_type46_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type46_compare(const jule::Any &any, const jule::Ptr<_1d6577b00_MultiAssign> &other) { return any.type == &__jule_any_type46 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type47_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d6578260_Match>().dealloc(); }
struct jule::Any::Type __jule_any_type47{.dealloc=__jule_any_type47_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type47_compare(const jule::Any &any, const jule::Ptr<_1d6578260_Match> &other) { return any.type == &__jule_any_type47 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type48_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d6579492_FallSt>().dealloc(); }
struct jule::Any::Type __jule_any_type48{.dealloc=__jule_any_type48_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type48_compare(const jule::Any &any, const jule::Ptr<_1d6579492_FallSt> &other) { return any.type == &__jule_any_type48 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type49_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d65766c0_BreakSt>().dealloc(); }
struct jule::Any::Type __jule_any_type49{.dealloc=__jule_any_type49_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type49_compare(const jule::Any &any, const jule::Ptr<_1d65766c0_BreakSt> &other) { return any.type == &__jule_any_type49 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type50_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d6579827_RetSt>().dealloc(); }
struct jule::Any::Type __jule_any_type50{.dealloc=__jule_any_type50_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type50_compare(const jule::Any &any, const jule::Ptr<_1d6579827_RetSt> &other) { return any.type == &__jule_any_type50 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type51_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d650b402_ScopeTree>().dealloc(); }
struct jule::Any::Type __jule_any_type51{.dealloc=__jule_any_type51_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type51_compare(const jule::Any &any, const jule::Ptr<_1d650b402_ScopeTree> &other) { return any.type == &__jule_any_type51 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type52_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d6500715_Expr>().dealloc(); }
struct jule::Any::Type __jule_any_type52{.dealloc=__jule_any_type52_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type52_compare(const jule::Any &any, const jule::Ptr<_1d6500715_Expr> &other) { return any.type == &__jule_any_type52 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type53_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d65126b1_Conditional>().dealloc(); }
struct jule::Any::Type __jule_any_type53{.dealloc=__jule_any_type53_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type53_compare(const jule::Any &any, const jule::Ptr<_1d65126b1_Conditional> &other) { return any.type == &__jule_any_type53 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type54_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d650ed95_Iter>().dealloc(); }
struct jule::Any::Type __jule_any_type54{.dealloc=__jule_any_type54_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type54_compare(const jule::Any &any, const jule::Ptr<_1d650ed95_Iter> &other) { return any.type == &__jule_any_type54 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type55_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d651187a_ContSt>().dealloc(); }
struct jule::Any::Type __jule_any_type55{.dealloc=__jule_any_type55_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type55_compare(const jule::Any &any, const jule::Ptr<_1d651187a_ContSt> &other) { return any.type == &__jule_any_type55 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type56_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d65089b5_LabelSt>().dealloc(); }
struct jule::Any::Type __jule_any_type56{.dealloc=__jule_any_type56_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type56_compare(const jule::Any &any, const jule::Ptr<_1d65089b5_LabelSt> &other) { return any.type == &__jule_any_type56 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type57_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d6508d8e_GotoSt>().dealloc(); }
struct jule::Any::Type __jule_any_type57{.dealloc=__jule_any_type57_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type57_compare(const jule::Any &any, const jule::Ptr<_1d6508d8e_GotoSt> &other) { return any.type == &__jule_any_type57 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type58_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d6509d7e_AssignSt>().dealloc(); }
struct jule::Any::Type __jule_any_type58{.dealloc=__jule_any_type58_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type58_compare(const jule::Any &any, const jule::Ptr<_1d6509d7e_AssignSt> &other) { return any.type == &__jule_any_type58 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type59_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d6513bbd_MatchCase>().dealloc(); }
struct jule::Any::Type __jule_any_type59{.dealloc=__jule_any_type59_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type59_compare(const jule::Any &any, const jule::Ptr<_1d6513bbd_MatchCase> &other) { return any.type == &__jule_any_type59 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type60_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d650918b_FallSt>().dealloc(); }
struct jule::Any::Type __jule_any_type60{.dealloc=__jule_any_type60_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type60_compare(const jule::Any &any, const jule::Ptr<_1d650918b_FallSt> &other) { return any.type == &__jule_any_type60 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type61_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d65114a1_BreakSt>().dealloc(); }
struct jule::Any::Type __jule_any_type61{.dealloc=__jule_any_type61_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type61_compare(const jule::Any &any, const jule::Ptr<_1d65114a1_BreakSt> &other) { return any.type == &__jule_any_type61 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type62_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d650e625_RetSt>().dealloc(); }
struct jule::Any::Type __jule_any_type62{.dealloc=__jule_any_type62_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type62_compare(const jule::Any &any, const jule::Ptr<_1d650e625_RetSt> &other) { return any.type == &__jule_any_type62 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type63_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d65010d9_UseExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type63{.dealloc=__jule_any_type63_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type63_compare(const jule::Any &any, const jule::Ptr<_1d65010d9_UseExpr> &other) { return any.type == &__jule_any_type63 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type64_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d653226e_Fn>().dealloc(); }
struct jule::Any::Type __jule_any_type64{.dealloc=__jule_any_type64_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type64_compare(const jule::Any &any, const jule::Ptr<_1d653226e_Fn> &other) { return any.type == &__jule_any_type64 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type65_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d651c2d1_Struct>().dealloc(); }
struct jule::Any::Type __jule_any_type65{.dealloc=__jule_any_type65_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type65_compare(const jule::Any &any, const jule::Ptr<_1d651c2d1_Struct> &other) { return any.type == &__jule_any_type65 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type66_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d6676c43_TypeAlias>().dealloc(); }
struct jule::Any::Type __jule_any_type66{.dealloc=__jule_any_type66_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type66_compare(const jule::Any &any, const jule::Ptr<_1d6676c43_TypeAlias> &other) { return any.type == &__jule_any_type66 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type67_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d6547c57_Enum>().dealloc(); }
struct jule::Any::Type __jule_any_type67{.dealloc=__jule_any_type67_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type67_compare(const jule::Any &any, const jule::Ptr<_1d6547c57_Enum> &other) { return any.type == &__jule_any_type67 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type68_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d6549462_TypeEnum>().dealloc(); }
struct jule::Any::Type __jule_any_type68{.dealloc=__jule_any_type68_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type68_compare(const jule::Any &any, const jule::Ptr<_1d6549462_TypeEnum> &other) { return any.type == &__jule_any_type68 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type69_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d64ed69c_ArrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type69{.dealloc=__jule_any_type69_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type69_compare(const jule::Any &any, const jule::Ptr<_1d64ed69c_ArrTypeDecl> &other) { return any.type == &__jule_any_type69 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type70_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d64ec811_SlcTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type70{.dealloc=__jule_any_type70_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type70_compare(const jule::Any &any, const jule::Ptr<_1d64ec811_SlcTypeDecl> &other) { return any.type == &__jule_any_type70 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type71_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d64ece0a_PtrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type71{.dealloc=__jule_any_type71_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type71_compare(const jule::Any &any, const jule::Ptr<_1d64ece0a_PtrTypeDecl> &other) { return any.type == &__jule_any_type71 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type72_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d64ec47b_SptrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type72{.dealloc=__jule_any_type72_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type72_compare(const jule::Any &any, const jule::Ptr<_1d64ec47b_SptrTypeDecl> &other) { return any.type == &__jule_any_type72 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type73_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d64eddea_MapTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type73{.dealloc=__jule_any_type73_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type73_compare(const jule::Any &any, const jule::Ptr<_1d64eddea_MapTypeDecl> &other) { return any.type == &__jule_any_type73 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type74_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d64ecb0d_TupleTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type74{.dealloc=__jule_any_type74_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type74_compare(const jule::Any &any, const jule::Ptr<_1d64ecb0d_TupleTypeDecl> &other) { return any.type == &__jule_any_type74 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type75_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d6502b9b_VariadicExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type75{.dealloc=__jule_any_type75_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type75_compare(const jule::Any &any, const jule::Ptr<_1d6502b9b_VariadicExpr> &other) { return any.type == &__jule_any_type75 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type76_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d65268b2_SliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type76{.dealloc=__jule_any_type76_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type76_compare(const jule::Any &any, const jule::Ptr<_1d65268b2_SliceExprModel> &other) { return any.type == &__jule_any_type76 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type77_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d6504e34_FieldExprPair>().dealloc(); }
struct jule::Any::Type __jule_any_type77{.dealloc=__jule_any_type77_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type77_compare(const jule::Any &any, const jule::Ptr<_1d6504e34_FieldExprPair> &other) { return any.type == &__jule_any_type77 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type78_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d6506540_KeyValPair>().dealloc(); }
struct jule::Any::Type __jule_any_type78{.dealloc=__jule_any_type78_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type78_compare(const jule::Any &any, const jule::Ptr<_1d6506540_KeyValPair> &other) { return any.type == &__jule_any_type78 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type79_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d6502140_IdentExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type79{.dealloc=__jule_any_type79_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type79_compare(const jule::Any &any, const jule::Ptr<_1d6502140_IdentExpr> &other) { return any.type == &__jule_any_type79 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type80_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d65013d6_TupleExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type80{.dealloc=__jule_any_type80_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type80_compare(const jule::Any &any, const jule::Ptr<_1d65013d6_TupleExpr> &other) { return any.type == &__jule_any_type80 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type81_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d6529c06_TupleExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type81{.dealloc=__jule_any_type81_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type81_compare(const jule::Any &any, const jule::Ptr<_1d6529c06_TupleExprModel> &other) { return any.type == &__jule_any_type81 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type82_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d652d842_RuneExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type82{.dealloc=__jule_any_type82_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type82_compare(const jule::Any &any, const jule::Ptr<_1d652d842_RuneExprModel> &other) { return any.type == &__jule_any_type82 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type83_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d6677a35_TypeKind>().dealloc(); }
struct jule::Any::Type __jule_any_type83{.dealloc=__jule_any_type83_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type83_compare(const jule::Any &any, const jule::Ptr<_1d6677a35_TypeKind> &other) { return any.type == &__jule_any_type83 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type84_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d6529909_ArrayExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type84{.dealloc=__jule_any_type84_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type84_compare(const jule::Any &any, const jule::Ptr<_1d6529909_ArrayExprModel> &other) { return any.type == &__jule_any_type84 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type85_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d6503828_SubIdentExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type85{.dealloc=__jule_any_type85_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type85_compare(const jule::Any &any, const jule::Ptr<_1d6503828_SubIdentExpr> &other) { return any.type == &__jule_any_type85 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type86_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d64ebcd8_SubIdentTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type86{.dealloc=__jule_any_type86_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type86_compare(const jule::Any &any, const jule::Ptr<_1d64ebcd8_SubIdentTypeDecl> &other) { return any.type == &__jule_any_type86 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type87_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d65027c2_UnaryExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type87{.dealloc=__jule_any_type87_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type87_compare(const jule::Any &any, const jule::Ptr<_1d65027c2_UnaryExpr> &other) { return any.type == &__jule_any_type87 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type88_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d64eb3d1_TypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type88{.dealloc=__jule_any_type88_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type88_compare(const jule::Any &any, const jule::Ptr<_1d64eb3d1_TypeDecl> &other) { return any.type == &__jule_any_type88 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type89_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d650344e_NsSelectionExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type89{.dealloc=__jule_any_type89_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type89_compare(const jule::Any &any, const jule::Ptr<_1d650344e_NsSelectionExpr> &other) { return any.type == &__jule_any_type89 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type90_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d64ec17e_NamespaceTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type90{.dealloc=__jule_any_type90_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type90_compare(const jule::Any &any, const jule::Ptr<_1d64ec17e_NamespaceTypeDecl> &other) { return any.type == &__jule_any_type90 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type91_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d6528155_SlicingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type91{.dealloc=__jule_any_type91_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type91_compare(const jule::Any &any, const jule::Ptr<_1d6528155_SlicingExprModel> &other) { return any.type == &__jule_any_type91 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type92_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d6525b36_CastingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type92{.dealloc=__jule_any_type92_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type92_compare(const jule::Any &any, const jule::Ptr<_1d6525b36_CastingExprModel> &other) { return any.type == &__jule_any_type92 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type93_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d6506c38_SliceExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type93{.dealloc=__jule_any_type93_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type93_compare(const jule::Any &any, const jule::Ptr<_1d6506c38_SliceExpr> &other) { return any.type == &__jule_any_type93 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type94_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d65252a6_StructLitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type94{.dealloc=__jule_any_type94_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type94_compare(const jule::Any &any, const jule::Ptr<_1d65252a6_StructLitExprModel> &other) { return any.type == &__jule_any_type94 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type95_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d6529530_StructStaticIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type95{.dealloc=__jule_any_type95_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type95_compare(const jule::Any &any, const jule::Ptr<_1d6529530_StructStaticIdentExprModel> &other) { return any.type == &__jule_any_type95 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type96_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d65286d8_TraitSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type96{.dealloc=__jule_any_type96_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type96_compare(const jule::Any &any, const jule::Ptr<_1d65286d8_TraitSubIdentExprModel> &other) { return any.type == &__jule_any_type96 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type97_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d6529079_StructSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type97{.dealloc=__jule_any_type97_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type97_compare(const jule::Any &any, const jule::Ptr<_1d6529079_StructSubIdentExprModel> &other) { return any.type == &__jule_any_type97 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type98_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d6527ac2_MapExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type98{.dealloc=__jule_any_type98_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type98_compare(const jule::Any &any, const jule::Ptr<_1d6527ac2_MapExprModel> &other) { return any.type == &__jule_any_type98 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type99_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d6527242_AnonFnExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type99{.dealloc=__jule_any_type99_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type99_compare(const jule::Any &any, const jule::Ptr<_1d6527242_AnonFnExprModel> &other) { return any.type == &__jule_any_type99 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type100_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d6500a12_RangeExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type100{.dealloc=__jule_any_type100_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type100_compare(const jule::Any &any, const jule::Ptr<_1d6500a12_RangeExpr> &other) { return any.type == &__jule_any_type100 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type101_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d65017b0_LitExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type101{.dealloc=__jule_any_type101_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type101_compare(const jule::Any &any, const jule::Ptr<_1d65017b0_LitExpr> &other) { return any.type == &__jule_any_type101 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type102_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d6501b89_UnsafeExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type102{.dealloc=__jule_any_type102_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type102_compare(const jule::Any &any, const jule::Ptr<_1d6501b89_UnsafeExpr> &other) { return any.type == &__jule_any_type102 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type103_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d65076c8_IndexingExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type103{.dealloc=__jule_any_type103_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type103_compare(const jule::Any &any, const jule::Ptr<_1d65076c8_IndexingExpr> &other) { return any.type == &__jule_any_type103 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type104_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d6507d38_SlicingExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type104{.dealloc=__jule_any_type104_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type104_compare(const jule::Any &any, const jule::Ptr<_1d6507d38_SlicingExpr> &other) { return any.type == &__jule_any_type104 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type105_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d6503075_CastExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type105{.dealloc=__jule_any_type105_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type105_compare(const jule::Any &any, const jule::Ptr<_1d6503075_CastExpr> &other) { return any.type == &__jule_any_type105 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type106_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d650575e_StructLit>().dealloc(); }
struct jule::Any::Type __jule_any_type106{.dealloc=__jule_any_type106_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type106_compare(const jule::Any &any, const jule::Ptr<_1d650575e_StructLit> &other) { return any.type == &__jule_any_type106 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type107_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d650443e_FnCallExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type107{.dealloc=__jule_any_type107_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type107_compare(const jule::Any &any, const jule::Ptr<_1d650443e_FnCallExpr> &other) { return any.type == &__jule_any_type107 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type108_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d6505c15_BraceLit>().dealloc(); }
struct jule::Any::Type __jule_any_type108{.dealloc=__jule_any_type108_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type108_compare(const jule::Any &any, const jule::Ptr<_1d6505c15_BraceLit> &other) { return any.type == &__jule_any_type108 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type109_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d6503cce_BinaryExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type109{.dealloc=__jule_any_type109_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type109_compare(const jule::Any &any, const jule::Ptr<_1d6503cce_BinaryExpr> &other) { return any.type == &__jule_any_type109 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type110_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d65248d2_UnaryExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type110{.dealloc=__jule_any_type110_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type110_compare(const jule::Any &any, const jule::Ptr<_1d65248d2_UnaryExprModel> &other) { return any.type == &__jule_any_type110 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type111_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d6524508_BinaryExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type111{.dealloc=__jule_any_type111_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type111_compare(const jule::Any &any, const jule::Ptr<_1d6524508_BinaryExprModel> &other) { return any.type == &__jule_any_type111 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type112_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d65255a3_AllocStructLitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type112{.dealloc=__jule_any_type112_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type112_compare(const jule::Any &any, const jule::Ptr<_1d65255a3_AllocStructLitExprModel> &other) { return any.type == &__jule_any_type112 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type113_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d652a883_BuiltinNewCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type113{.dealloc=__jule_any_type113_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type113_compare(const jule::Any &any, const jule::Ptr<_1d652a883_BuiltinNewCallExprModel> &other) { return any.type == &__jule_any_type113 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type114_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d652b6b9_BuiltinMakeCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type114{.dealloc=__jule_any_type114_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type114_compare(const jule::Any &any, const jule::Ptr<_1d652b6b9_BuiltinMakeCallExprModel> &other) { return any.type == &__jule_any_type114 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type115_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d652bd90_BuiltinLenCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type115{.dealloc=__jule_any_type115_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type115_compare(const jule::Any &any, const jule::Ptr<_1d652bd90_BuiltinLenCallExprModel> &other) { return any.type == &__jule_any_type115 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type116_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d652c18c_BuiltinCapCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type116{.dealloc=__jule_any_type116_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type116_compare(const jule::Any &any, const jule::Ptr<_1d652c18c_BuiltinCapCallExprModel> &other) { return any.type == &__jule_any_type116 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type117_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d65288c5_SizeofExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type117{.dealloc=__jule_any_type117_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type117_compare(const jule::Any &any, const jule::Ptr<_1d65288c5_SizeofExprModel> &other) { return any.type == &__jule_any_type117 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type118_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d652d545_AlignofExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type118{.dealloc=__jule_any_type118_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type118_compare(const jule::Any &any, const jule::Ptr<_1d652d545_AlignofExprModel> &other) { return any.type == &__jule_any_type118 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type119_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d652db3e_IntegratedToStrExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type119{.dealloc=__jule_any_type119_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type119_compare(const jule::Any &any, const jule::Ptr<_1d652db3e_IntegratedToStrExprModel> &other) { return any.type == &__jule_any_type119 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type120_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d67726ce_MutSlicingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type120{.dealloc=__jule_any_type120_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type120_compare(const jule::Any &any, const jule::Ptr<_1d67726ce_MutSlicingExprModel> &other) { return any.type == &__jule_any_type120 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type121_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d6773207_PushToSliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type121{.dealloc=__jule_any_type121_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type121_compare(const jule::Any &any, const jule::Ptr<_1d6773207_PushToSliceExprModel> &other) { return any.type == &__jule_any_type121 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type122_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d67735d1_AppendToSliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type122{.dealloc=__jule_any_type122_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type122_compare(const jule::Any &any, const jule::Ptr<_1d67735d1_AppendToSliceExprModel> &other) { return any.type == &__jule_any_type122 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type123_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d6771403_SwapExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type123{.dealloc=__jule_any_type123_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type123_compare(const jule::Any &any, const jule::Ptr<_1d6771403_SwapExprModel> &other) { return any.type == &__jule_any_type123 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type124_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d6771821_EmptyCompareExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type124{.dealloc=__jule_any_type124_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type124_compare(const jule::Any &any, const jule::Ptr<_1d6771821_EmptyCompareExprModel> &other) { return any.type == &__jule_any_type124 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type125_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d677214b_StrCompExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type125{.dealloc=__jule_any_type125_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type125_compare(const jule::Any &any, const jule::Ptr<_1d677214b_StrCompExprModel> &other) { return any.type == &__jule_any_type125 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type126_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d67729cb_UnsafeBinaryExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type126{.dealloc=__jule_any_type126_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type126_compare(const jule::Any &any, const jule::Ptr<_1d67729cb_UnsafeBinaryExprModel> &other) { return any.type == &__jule_any_type126 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type127_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d6771b1d_RefExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type127{.dealloc=__jule_any_type127_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type127_compare(const jule::Any &any, const jule::Ptr<_1d6771b1d_RefExprModel> &other) { return any.type == &__jule_any_type127 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type128_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d6772cc8_UnsafeIndexingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type128{.dealloc=__jule_any_type128_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type128_compare(const jule::Any &any, const jule::Ptr<_1d6772cc8_UnsafeIndexingExprModel> &other) { return any.type == &__jule_any_type128 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type129_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U8>().dealloc(); }
jule::Bool __jule_any_type129_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U8*>(alloc) == *reinterpret_cast<jule::U8*>(other); }
jule::Str __jule_any_type129_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U8*>(alloc)); }
struct jule::Any::Type __jule_any_type129{.dealloc=__jule_any_type129_dealloc, .eq=__jule_any_type129_eq, .to_str=__jule_any_type129_to_str};
jule::Bool __jule_any_type129_compare(const jule::Any &any, const jule::U8 &other) { return any.type == &__jule_any_type129 && __jule_any_type129_eq(any.data.alloc, (void*)&other); }
void __jule_any_type130_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F32>().dealloc(); }
jule::Bool __jule_any_type130_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::F32*>(alloc) == *reinterpret_cast<jule::F32*>(other); }
jule::Str __jule_any_type130_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::F32*>(alloc)); }
struct jule::Any::Type __jule_any_type130{.dealloc=__jule_any_type130_dealloc, .eq=__jule_any_type130_eq, .to_str=__jule_any_type130_to_str};
jule::Bool __jule_any_type130_compare(const jule::Any &any, const jule::F32 &other) { return any.type == &__jule_any_type130 && __jule_any_type130_eq(any.data.alloc, (void*)&other); }
void __jule_any_type131_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I8>().dealloc(); }
jule::Bool __jule_any_type131_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I8*>(alloc) == *reinterpret_cast<jule::I8*>(other); }
jule::Str __jule_any_type131_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I8*>(alloc)); }
struct jule::Any::Type __jule_any_type131{.dealloc=__jule_any_type131_dealloc, .eq=__jule_any_type131_eq, .to_str=__jule_any_type131_to_str};
jule::Bool __jule_any_type131_compare(const jule::Any &any, const jule::I8 &other) { return any.type == &__jule_any_type131 && __jule_any_type131_eq(any.data.alloc, (void*)&other); }
void __jule_any_type132_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I16>().dealloc(); }
jule::Bool __jule_any_type132_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I16*>(alloc) == *reinterpret_cast<jule::I16*>(other); }
jule::Str __jule_any_type132_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I16*>(alloc)); }
struct jule::Any::Type __jule_any_type132{.dealloc=__jule_any_type132_dealloc, .eq=__jule_any_type132_eq, .to_str=__jule_any_type132_to_str};
jule::Bool __jule_any_type132_compare(const jule::Any &any, const jule::I16 &other) { return any.type == &__jule_any_type132 && __jule_any_type132_eq(any.data.alloc, (void*)&other); }
void __jule_any_type133_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U16>().dealloc(); }
jule::Bool __jule_any_type133_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U16*>(alloc) == *reinterpret_cast<jule::U16*>(other); }
jule::Str __jule_any_type133_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U16*>(alloc)); }
struct jule::Any::Type __jule_any_type133{.dealloc=__jule_any_type133_dealloc, .eq=__jule_any_type133_eq, .to_str=__jule_any_type133_to_str};
jule::Bool __jule_any_type133_compare(const jule::Any &any, const jule::U16 &other) { return any.type == &__jule_any_type133 && __jule_any_type133_eq(any.data.alloc, (void*)&other); }
void __jule_any_type134_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U32>().dealloc(); }
jule::Bool __jule_any_type134_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U32*>(alloc) == *reinterpret_cast<jule::U32*>(other); }
jule::Str __jule_any_type134_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U32*>(alloc)); }
struct jule::Any::Type __jule_any_type134{.dealloc=__jule_any_type134_dealloc, .eq=__jule_any_type134_eq, .to_str=__jule_any_type134_to_str};
jule::Bool __jule_any_type134_compare(const jule::Any &any, const jule::U32 &other) { return any.type == &__jule_any_type134 && __jule_any_type134_eq(any.data.alloc, (void*)&other); }
jule::Array<jule::Array<jule::Str,2>,5> _1e0353141_HelpMap = jule::Array<jule::Array<jule::Str,2>,5>({jule::Array<jule::Str,2>({jule::Str::lit("help", 4),jule::Str::lit("Show help", 9)}),jule::Array<jule::Str,2>({jule::Str::lit("version", 7),jule::Str::lit("Show version", 12)}),jule::Array<jule::Str,2>({jule::Str::lit("tool", 4),jule::Str::lit("Tools for effective Jule", 24)}),jule::Array<jule::Str,2>({jule::Str::lit("julenv", 6),jule::Str::lit("Show information about native jule environment", 46)}),jule::Array<jule::Str,2>({jule::Str::lit("mod", 3),jule::Str::lit("Module management", 17)})});
jule::Str _1d7cd6934_OutDir = jule::Str::lit("dist", 4);
jule::Str _1d7cd6c31_OutName = jule::Str::lit("ir.cpp", 6);
jule::Str _1d7cd6eea_Out = jule::Str();
jule::Str _208a403c5_Compiler = jule::Str();
jule::Str _208a4175b_CompilerPath = jule::Str();
jule::Str _208a419ae_CppStd = jule::Str::lit("cpp17", 5);
jule::Bool _208a41c45_Shadowing = false;
jule::Bool _208a4200e_Transpilation = false;
jule::Bool _208a422c8_Test = false;
jule::Bool _208a42592_RC = true;
jule::Bool _208a4296b_Safety = true;
jule::Bool _208a42c35_Production = false;
jule::Ptr<_2194b5521_RangeTable> _219450cd6__L = jule::new_ptr<_2194b5521_RangeTable>(_2194b5521_RangeTable{._field_R16=jule::Slice<_2194b4a3c_Range16>::make({_2194b4a3c_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=97LLU, ._field_Hi=122LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=170LLU, ._field_Hi=181LLU, ._field_Stride=11LLU},_2194b4a3c_Range16{._field_Lo=186LLU, ._field_Hi=192LLU, ._field_Stride=6LLU},_2194b4a3c_Range16{._field_Lo=193LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=216LLU, ._field_Hi=246LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=248LLU, ._field_Hi=705LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=710LLU, ._field_Hi=721LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=736LLU, ._field_Hi=740LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=748LLU, ._field_Hi=750LLU, ._field_Stride=2LLU},_2194b4a3c_Range16{._field_Lo=880LLU, ._field_Hi=884LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=886LLU, ._field_Hi=887LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=890LLU, ._field_Hi=893LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=895LLU, ._field_Hi=902LLU, ._field_Stride=7LLU},_2194b4a3c_Range16{._field_Lo=904LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_2194b4a3c_Range16{._field_Lo=911LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=931LLU, ._field_Hi=1013LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=1015LLU, ._field_Hi=1153LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=1162LLU, ._field_Hi=1327LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=1369LLU, ._field_Hi=1376LLU, ._field_Stride=7LLU},_2194b4a3c_Range16{._field_Lo=1377LLU, ._field_Hi=1416LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=1488LLU, ._field_Hi=1514LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=1519LLU, ._field_Hi=1522LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=1568LLU, ._field_Hi=1610LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=1646LLU, ._field_Hi=1647LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=1649LLU, ._field_Hi=1747LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=1749LLU, ._field_Hi=1765LLU, ._field_Stride=16LLU},_2194b4a3c_Range16{._field_Lo=1766LLU, ._field_Hi=1774LLU, ._field_Stride=8LLU},_2194b4a3c_Range16{._field_Lo=1775LLU, ._field_Hi=1786LLU, ._field_Stride=11LLU},_2194b4a3c_Range16{._field_Lo=1787LLU, ._field_Hi=1788LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=1791LLU, ._field_Hi=1808LLU, ._field_Stride=17LLU},_2194b4a3c_Range16{._field_Lo=1810LLU, ._field_Hi=1839LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=1869LLU, ._field_Hi=1957LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=1969LLU, ._field_Hi=1994LLU, ._field_Stride=25LLU},_2194b4a3c_Range16{._field_Lo=1995LLU, ._field_Hi=2026LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=2036LLU, ._field_Hi=2037LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=2042LLU, ._field_Hi=2048LLU, ._field_Stride=6LLU},_2194b4a3c_Range16{._field_Lo=2049LLU, ._field_Hi=2069LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=2074LLU, ._field_Hi=2084LLU, ._field_Stride=10LLU},_2194b4a3c_Range16{._field_Lo=2088LLU, ._field_Hi=2112LLU, ._field_Stride=24LLU},_2194b4a3c_Range16{._field_Lo=2113LLU, ._field_Hi=2136LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=2144LLU, ._field_Hi=2154LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=2160LLU, ._field_Hi=2183LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=2185LLU, ._field_Hi=2190LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=2208LLU, ._field_Hi=2249LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=2308LLU, ._field_Hi=2361LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=2365LLU, ._field_Hi=2384LLU, ._field_Stride=19LLU},_2194b4a3c_Range16{._field_Lo=2392LLU, ._field_Hi=2401LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=2417LLU, ._field_Hi=2432LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=2437LLU, ._field_Hi=2444LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=2447LLU, ._field_Hi=2448LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=2451LLU, ._field_Hi=2472LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=2474LLU, ._field_Hi=2480LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=2482LLU, ._field_Hi=2486LLU, ._field_Stride=4LLU},_2194b4a3c_Range16{._field_Lo=2487LLU, ._field_Hi=2489LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=2493LLU, ._field_Hi=2510LLU, ._field_Stride=17LLU},_2194b4a3c_Range16{._field_Lo=2524LLU, ._field_Hi=2525LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=2527LLU, ._field_Hi=2529LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=2544LLU, ._field_Hi=2545LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=2556LLU, ._field_Hi=2565LLU, ._field_Stride=9LLU},_2194b4a3c_Range16{._field_Lo=2566LLU, ._field_Hi=2570LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=2575LLU, ._field_Hi=2576LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=2579LLU, ._field_Hi=2600LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=2602LLU, ._field_Hi=2608LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=2610LLU, ._field_Hi=2611LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=2613LLU, ._field_Hi=2614LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=2616LLU, ._field_Hi=2617LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=2649LLU, ._field_Hi=2652LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=2654LLU, ._field_Hi=2674LLU, ._field_Stride=20LLU},_2194b4a3c_Range16{._field_Lo=2675LLU, ._field_Hi=2676LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=2693LLU, ._field_Hi=2701LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=2703LLU, ._field_Hi=2705LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=2707LLU, ._field_Hi=2728LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=2730LLU, ._field_Hi=2736LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=2738LLU, ._field_Hi=2739LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=2741LLU, ._field_Hi=2745LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=2749LLU, ._field_Hi=2768LLU, ._field_Stride=19LLU},_2194b4a3c_Range16{._field_Lo=2784LLU, ._field_Hi=2785LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=2809LLU, ._field_Hi=2821LLU, ._field_Stride=12LLU},_2194b4a3c_Range16{._field_Lo=2822LLU, ._field_Hi=2828LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=2831LLU, ._field_Hi=2832LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=2835LLU, ._field_Hi=2856LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=2858LLU, ._field_Hi=2864LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=2866LLU, ._field_Hi=2867LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=2869LLU, ._field_Hi=2873LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=2877LLU, ._field_Hi=2908LLU, ._field_Stride=31LLU},_2194b4a3c_Range16{._field_Lo=2909LLU, ._field_Hi=2911LLU, ._field_Stride=2LLU},_2194b4a3c_Range16{._field_Lo=2912LLU, ._field_Hi=2913LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=2929LLU, ._field_Hi=2947LLU, ._field_Stride=18LLU},_2194b4a3c_Range16{._field_Lo=2949LLU, ._field_Hi=2954LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=2958LLU, ._field_Hi=2960LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=2962LLU, ._field_Hi=2965LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=2969LLU, ._field_Hi=2970LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=2972LLU, ._field_Hi=2974LLU, ._field_Stride=2LLU},_2194b4a3c_Range16{._field_Lo=2975LLU, ._field_Hi=2979LLU, ._field_Stride=4LLU},_2194b4a3c_Range16{._field_Lo=2980LLU, ._field_Hi=2984LLU, ._field_Stride=4LLU},_2194b4a3c_Range16{._field_Lo=2985LLU, ._field_Hi=2986LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=2990LLU, ._field_Hi=3001LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=3024LLU, ._field_Hi=3077LLU, ._field_Stride=53LLU},_2194b4a3c_Range16{._field_Lo=3078LLU, ._field_Hi=3084LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=3086LLU, ._field_Hi=3088LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=3090LLU, ._field_Hi=3112LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=3114LLU, ._field_Hi=3129LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=3133LLU, ._field_Hi=3160LLU, ._field_Stride=27LLU},_2194b4a3c_Range16{._field_Lo=3161LLU, ._field_Hi=3162LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=3165LLU, ._field_Hi=3168LLU, ._field_Stride=3LLU},_2194b4a3c_Range16{._field_Lo=3169LLU, ._field_Hi=3200LLU, ._field_Stride=31LLU},_2194b4a3c_Range16{._field_Lo=3205LLU, ._field_Hi=3212LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=3214LLU, ._field_Hi=3216LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=3218LLU, ._field_Hi=3240LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=3242LLU, ._field_Hi=3251LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=3253LLU, ._field_Hi=3257LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=3261LLU, ._field_Hi=3293LLU, ._field_Stride=32LLU},_2194b4a3c_Range16{._field_Lo=3294LLU, ._field_Hi=3296LLU, ._field_Stride=2LLU},_2194b4a3c_Range16{._field_Lo=3297LLU, ._field_Hi=3313LLU, ._field_Stride=16LLU},_2194b4a3c_Range16{._field_Lo=3314LLU, ._field_Hi=3332LLU, ._field_Stride=18LLU},_2194b4a3c_Range16{._field_Lo=3333LLU, ._field_Hi=3340LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=3342LLU, ._field_Hi=3344LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=3346LLU, ._field_Hi=3386LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=3389LLU, ._field_Hi=3406LLU, ._field_Stride=17LLU},_2194b4a3c_Range16{._field_Lo=3412LLU, ._field_Hi=3414LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=3423LLU, ._field_Hi=3425LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=3450LLU, ._field_Hi=3455LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=3461LLU, ._field_Hi=3478LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=3482LLU, ._field_Hi=3505LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=3507LLU, ._field_Hi=3515LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=3517LLU, ._field_Hi=3520LLU, ._field_Stride=3LLU},_2194b4a3c_Range16{._field_Lo=3521LLU, ._field_Hi=3526LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=3585LLU, ._field_Hi=3632LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=3634LLU, ._field_Hi=3635LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=3648LLU, ._field_Hi=3654LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=3713LLU, ._field_Hi=3714LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=3716LLU, ._field_Hi=3718LLU, ._field_Stride=2LLU},_2194b4a3c_Range16{._field_Lo=3719LLU, ._field_Hi=3722LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=3724LLU, ._field_Hi=3747LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=3749LLU, ._field_Hi=3751LLU, ._field_Stride=2LLU},_2194b4a3c_Range16{._field_Lo=3752LLU, ._field_Hi=3760LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=3762LLU, ._field_Hi=3763LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=3773LLU, ._field_Hi=3776LLU, ._field_Stride=3LLU},_2194b4a3c_Range16{._field_Lo=3777LLU, ._field_Hi=3780LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=3782LLU, ._field_Hi=3804LLU, ._field_Stride=22LLU},_2194b4a3c_Range16{._field_Lo=3805LLU, ._field_Hi=3807LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=3840LLU, ._field_Hi=3904LLU, ._field_Stride=64LLU},_2194b4a3c_Range16{._field_Lo=3905LLU, ._field_Hi=3911LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=3913LLU, ._field_Hi=3948LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=3976LLU, ._field_Hi=3980LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=4096LLU, ._field_Hi=4138LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=4159LLU, ._field_Hi=4176LLU, ._field_Stride=17LLU},_2194b4a3c_Range16{._field_Lo=4177LLU, ._field_Hi=4181LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=4186LLU, ._field_Hi=4189LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=4193LLU, ._field_Hi=4197LLU, ._field_Stride=4LLU},_2194b4a3c_Range16{._field_Lo=4198LLU, ._field_Hi=4206LLU, ._field_Stride=8LLU},_2194b4a3c_Range16{._field_Lo=4207LLU, ._field_Hi=4208LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=4213LLU, ._field_Hi=4225LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=4238LLU, ._field_Hi=4256LLU, ._field_Stride=18LLU},_2194b4a3c_Range16{._field_Lo=4257LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_2194b4a3c_Range16{._field_Lo=4304LLU, ._field_Hi=4346LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=4348LLU, ._field_Hi=4680LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=4682LLU, ._field_Hi=4685LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=4688LLU, ._field_Hi=4694LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=4696LLU, ._field_Hi=4698LLU, ._field_Stride=2LLU},_2194b4a3c_Range16{._field_Lo=4699LLU, ._field_Hi=4701LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=4704LLU, ._field_Hi=4744LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=4746LLU, ._field_Hi=4749LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=4752LLU, ._field_Hi=4784LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=4786LLU, ._field_Hi=4789LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=4792LLU, ._field_Hi=4798LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=4800LLU, ._field_Hi=4802LLU, ._field_Stride=2LLU},_2194b4a3c_Range16{._field_Lo=4803LLU, ._field_Hi=4805LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=4808LLU, ._field_Hi=4822LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=4824LLU, ._field_Hi=4880LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=4882LLU, ._field_Hi=4885LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=4888LLU, ._field_Hi=4954LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=4992LLU, ._field_Hi=5007LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=5112LLU, ._field_Hi=5117LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=5121LLU, ._field_Hi=5740LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=5743LLU, ._field_Hi=5759LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=5761LLU, ._field_Hi=5786LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=5792LLU, ._field_Hi=5866LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=5873LLU, ._field_Hi=5880LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=5888LLU, ._field_Hi=5905LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=5919LLU, ._field_Hi=5937LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=5952LLU, ._field_Hi=5969LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=5984LLU, ._field_Hi=5996LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=5998LLU, ._field_Hi=6000LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=6016LLU, ._field_Hi=6067LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=6103LLU, ._field_Hi=6108LLU, ._field_Stride=5LLU},_2194b4a3c_Range16{._field_Lo=6176LLU, ._field_Hi=6264LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=6272LLU, ._field_Hi=6276LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=6279LLU, ._field_Hi=6312LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=6314LLU, ._field_Hi=6320LLU, ._field_Stride=6LLU},_2194b4a3c_Range16{._field_Lo=6321LLU, ._field_Hi=6389LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=6400LLU, ._field_Hi=6430LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=6480LLU, ._field_Hi=6509LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=6512LLU, ._field_Hi=6516LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=6528LLU, ._field_Hi=6571LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=6576LLU, ._field_Hi=6601LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=6656LLU, ._field_Hi=6678LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=6688LLU, ._field_Hi=6740LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=6823LLU, ._field_Hi=6917LLU, ._field_Stride=94LLU},_2194b4a3c_Range16{._field_Lo=6918LLU, ._field_Hi=6963LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=6981LLU, ._field_Hi=6988LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=7043LLU, ._field_Hi=7072LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=7086LLU, ._field_Hi=7087LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=7098LLU, ._field_Hi=7141LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=7168LLU, ._field_Hi=7203LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=7245LLU, ._field_Hi=7247LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=7258LLU, ._field_Hi=7293LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=7296LLU, ._field_Hi=7304LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=7401LLU, ._field_Hi=7404LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=7406LLU, ._field_Hi=7411LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=7413LLU, ._field_Hi=7414LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=7418LLU, ._field_Hi=7424LLU, ._field_Stride=6LLU},_2194b4a3c_Range16{._field_Lo=7425LLU, ._field_Hi=7615LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=7680LLU, ._field_Hi=7957LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=7968LLU, ._field_Hi=8005LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=8016LLU, ._field_Hi=8023LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_2194b4a3c_Range16{._field_Lo=8032LLU, ._field_Hi=8061LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=8064LLU, ._field_Hi=8116LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=8118LLU, ._field_Hi=8124LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=8126LLU, ._field_Hi=8130LLU, ._field_Stride=4LLU},_2194b4a3c_Range16{._field_Lo=8131LLU, ._field_Hi=8132LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=8134LLU, ._field_Hi=8140LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=8144LLU, ._field_Hi=8147LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=8150LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=8160LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=8178LLU, ._field_Hi=8180LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=8182LLU, ._field_Hi=8188LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=8305LLU, ._field_Hi=8319LLU, ._field_Stride=14LLU},_2194b4a3c_Range16{._field_Lo=8336LLU, ._field_Hi=8348LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_2194b4a3c_Range16{._field_Lo=8458LLU, ._field_Hi=8467LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_2194b4a3c_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_2194b4a3c_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=8495LLU, ._field_Hi=8505LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=8508LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=8517LLU, ._field_Hi=8521LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=8526LLU, ._field_Hi=8579LLU, ._field_Stride=53LLU},_2194b4a3c_Range16{._field_Lo=8580LLU, ._field_Hi=11264LLU, ._field_Stride=2684LLU},_2194b4a3c_Range16{._field_Lo=11265LLU, ._field_Hi=11492LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=11499LLU, ._field_Hi=11502LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=11506LLU, ._field_Hi=11507LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=11520LLU, ._field_Hi=11557LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=11559LLU, ._field_Hi=11565LLU, ._field_Stride=6LLU},_2194b4a3c_Range16{._field_Lo=11568LLU, ._field_Hi=11623LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=11631LLU, ._field_Hi=11648LLU, ._field_Stride=17LLU},_2194b4a3c_Range16{._field_Lo=11649LLU, ._field_Hi=11670LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=11680LLU, ._field_Hi=11686LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=11688LLU, ._field_Hi=11694LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=11696LLU, ._field_Hi=11702LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=11704LLU, ._field_Hi=11710LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=11712LLU, ._field_Hi=11718LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=11720LLU, ._field_Hi=11726LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=11728LLU, ._field_Hi=11734LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=11736LLU, ._field_Hi=11742LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=11823LLU, ._field_Hi=12293LLU, ._field_Stride=470LLU},_2194b4a3c_Range16{._field_Lo=12294LLU, ._field_Hi=12337LLU, ._field_Stride=43LLU},_2194b4a3c_Range16{._field_Lo=12338LLU, ._field_Hi=12341LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=12347LLU, ._field_Hi=12348LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=12353LLU, ._field_Hi=12438LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=12445LLU, ._field_Hi=12447LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=12449LLU, ._field_Hi=12538LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=12540LLU, ._field_Hi=12543LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=12549LLU, ._field_Hi=12591LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=12593LLU, ._field_Hi=12686LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=12704LLU, ._field_Hi=12735LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=12784LLU, ._field_Hi=12799LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=13312LLU, ._field_Hi=19903LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=19968LLU, ._field_Hi=42124LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=42192LLU, ._field_Hi=42237LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=42240LLU, ._field_Hi=42508LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=42512LLU, ._field_Hi=42527LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=42538LLU, ._field_Hi=42539LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=42560LLU, ._field_Hi=42606LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=42623LLU, ._field_Hi=42653LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=42656LLU, ._field_Hi=42725LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=42775LLU, ._field_Hi=42783LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=42786LLU, ._field_Hi=42888LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=42891LLU, ._field_Hi=42954LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=42960LLU, ._field_Hi=42961LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=42963LLU, ._field_Hi=42965LLU, ._field_Stride=2LLU},_2194b4a3c_Range16{._field_Lo=42966LLU, ._field_Hi=42969LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=42994LLU, ._field_Hi=43009LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=43011LLU, ._field_Hi=43013LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=43015LLU, ._field_Hi=43018LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=43020LLU, ._field_Hi=43042LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=43072LLU, ._field_Hi=43123LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=43138LLU, ._field_Hi=43187LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=43250LLU, ._field_Hi=43255LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=43259LLU, ._field_Hi=43261LLU, ._field_Stride=2LLU},_2194b4a3c_Range16{._field_Lo=43262LLU, ._field_Hi=43274LLU, ._field_Stride=12LLU},_2194b4a3c_Range16{._field_Lo=43275LLU, ._field_Hi=43301LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=43312LLU, ._field_Hi=43334LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=43360LLU, ._field_Hi=43388LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=43396LLU, ._field_Hi=43442LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=43471LLU, ._field_Hi=43488LLU, ._field_Stride=17LLU},_2194b4a3c_Range16{._field_Lo=43489LLU, ._field_Hi=43492LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=43494LLU, ._field_Hi=43503LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=43514LLU, ._field_Hi=43518LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=43520LLU, ._field_Hi=43560LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=43584LLU, ._field_Hi=43586LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=43588LLU, ._field_Hi=43595LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=43616LLU, ._field_Hi=43638LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=43642LLU, ._field_Hi=43646LLU, ._field_Stride=4LLU},_2194b4a3c_Range16{._field_Lo=43647LLU, ._field_Hi=43695LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=43697LLU, ._field_Hi=43701LLU, ._field_Stride=4LLU},_2194b4a3c_Range16{._field_Lo=43702LLU, ._field_Hi=43705LLU, ._field_Stride=3LLU},_2194b4a3c_Range16{._field_Lo=43706LLU, ._field_Hi=43709LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=43712LLU, ._field_Hi=43714LLU, ._field_Stride=2LLU},_2194b4a3c_Range16{._field_Lo=43739LLU, ._field_Hi=43741LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=43744LLU, ._field_Hi=43754LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=43762LLU, ._field_Hi=43764LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=43777LLU, ._field_Hi=43782LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=43785LLU, ._field_Hi=43790LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=43793LLU, ._field_Hi=43798LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=43808LLU, ._field_Hi=43814LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=43816LLU, ._field_Hi=43822LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=43824LLU, ._field_Hi=43866LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=43868LLU, ._field_Hi=43881LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=43888LLU, ._field_Hi=44002LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=44032LLU, ._field_Hi=55203LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=55216LLU, ._field_Hi=55238LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=55243LLU, ._field_Hi=55291LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=63744LLU, ._field_Hi=64109LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=64112LLU, ._field_Hi=64217LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=64256LLU, ._field_Hi=64262LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=64275LLU, ._field_Hi=64279LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=64285LLU, ._field_Hi=64287LLU, ._field_Stride=2LLU},_2194b4a3c_Range16{._field_Lo=64288LLU, ._field_Hi=64296LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=64298LLU, ._field_Hi=64310LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=64312LLU, ._field_Hi=64316LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=64318LLU, ._field_Hi=64320LLU, ._field_Stride=2LLU},_2194b4a3c_Range16{._field_Lo=64321LLU, ._field_Hi=64323LLU, ._field_Stride=2LLU},_2194b4a3c_Range16{._field_Lo=64324LLU, ._field_Hi=64326LLU, ._field_Stride=2LLU},_2194b4a3c_Range16{._field_Lo=64327LLU, ._field_Hi=64433LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=64467LLU, ._field_Hi=64829LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=64848LLU, ._field_Hi=64911LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=64914LLU, ._field_Hi=64967LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=65008LLU, ._field_Hi=65019LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=65136LLU, ._field_Hi=65140LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=65142LLU, ._field_Hi=65276LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=65313LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=65345LLU, ._field_Hi=65370LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=65382LLU, ._field_Hi=65470LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=65474LLU, ._field_Hi=65479LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=65482LLU, ._field_Hi=65487LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=65490LLU, ._field_Hi=65495LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=65498LLU, ._field_Hi=65500LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_2194b506a_Range32>::make({_2194b506a_Range32{._field_Lo=65536LLU, ._field_Hi=65547LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=65549LLU, ._field_Hi=65574LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=65576LLU, ._field_Hi=65594LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=65596LLU, ._field_Hi=65597LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=65599LLU, ._field_Hi=65613LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=65616LLU, ._field_Hi=65629LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=65664LLU, ._field_Hi=65786LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=66176LLU, ._field_Hi=66204LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=66208LLU, ._field_Hi=66256LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=66304LLU, ._field_Hi=66335LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=66349LLU, ._field_Hi=66368LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=66370LLU, ._field_Hi=66377LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=66384LLU, ._field_Hi=66421LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=66432LLU, ._field_Hi=66461LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=66464LLU, ._field_Hi=66499LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=66504LLU, ._field_Hi=66511LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=66560LLU, ._field_Hi=66717LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=66776LLU, ._field_Hi=66811LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=66816LLU, ._field_Hi=66855LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=66864LLU, ._field_Hi=66915LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=66967LLU, ._field_Hi=66977LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=66979LLU, ._field_Hi=66993LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=66995LLU, ._field_Hi=67001LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=67003LLU, ._field_Hi=67004LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=67072LLU, ._field_Hi=67382LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=67392LLU, ._field_Hi=67413LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=67424LLU, ._field_Hi=67431LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=67456LLU, ._field_Hi=67461LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=67463LLU, ._field_Hi=67504LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=67506LLU, ._field_Hi=67514LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=67584LLU, ._field_Hi=67589LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=67592LLU, ._field_Hi=67594LLU, ._field_Stride=2LLU},_2194b506a_Range32{._field_Lo=67595LLU, ._field_Hi=67637LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=67639LLU, ._field_Hi=67640LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=67644LLU, ._field_Hi=67647LLU, ._field_Stride=3LLU},_2194b506a_Range32{._field_Lo=67648LLU, ._field_Hi=67669LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=67680LLU, ._field_Hi=67702LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=67712LLU, ._field_Hi=67742LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=67808LLU, ._field_Hi=67826LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=67828LLU, ._field_Hi=67829LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=67840LLU, ._field_Hi=67861LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=67872LLU, ._field_Hi=67897LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=67968LLU, ._field_Hi=68023LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=68030LLU, ._field_Hi=68031LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=68096LLU, ._field_Hi=68112LLU, ._field_Stride=16LLU},_2194b506a_Range32{._field_Lo=68113LLU, ._field_Hi=68115LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=68117LLU, ._field_Hi=68119LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=68121LLU, ._field_Hi=68149LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=68192LLU, ._field_Hi=68220LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=68224LLU, ._field_Hi=68252LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=68288LLU, ._field_Hi=68295LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=68297LLU, ._field_Hi=68324LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=68352LLU, ._field_Hi=68405LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=68416LLU, ._field_Hi=68437LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=68448LLU, ._field_Hi=68466LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=68480LLU, ._field_Hi=68497LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=68608LLU, ._field_Hi=68680LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=68800LLU, ._field_Hi=68850LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=68864LLU, ._field_Hi=68899LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=69248LLU, ._field_Hi=69289LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=69296LLU, ._field_Hi=69297LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=69376LLU, ._field_Hi=69404LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=69415LLU, ._field_Hi=69424LLU, ._field_Stride=9LLU},_2194b506a_Range32{._field_Lo=69425LLU, ._field_Hi=69445LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=69488LLU, ._field_Hi=69505LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=69552LLU, ._field_Hi=69572LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=69600LLU, ._field_Hi=69622LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=69635LLU, ._field_Hi=69687LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=69745LLU, ._field_Hi=69746LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=69749LLU, ._field_Hi=69763LLU, ._field_Stride=14LLU},_2194b506a_Range32{._field_Lo=69764LLU, ._field_Hi=69807LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=69840LLU, ._field_Hi=69864LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=69891LLU, ._field_Hi=69926LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=69956LLU, ._field_Hi=69959LLU, ._field_Stride=3LLU},_2194b506a_Range32{._field_Lo=69968LLU, ._field_Hi=70002LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=70006LLU, ._field_Hi=70019LLU, ._field_Stride=13LLU},_2194b506a_Range32{._field_Lo=70020LLU, ._field_Hi=70066LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=70081LLU, ._field_Hi=70084LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=70106LLU, ._field_Hi=70108LLU, ._field_Stride=2LLU},_2194b506a_Range32{._field_Lo=70144LLU, ._field_Hi=70161LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=70163LLU, ._field_Hi=70187LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=70207LLU, ._field_Hi=70208LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=70272LLU, ._field_Hi=70278LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=70280LLU, ._field_Hi=70282LLU, ._field_Stride=2LLU},_2194b506a_Range32{._field_Lo=70283LLU, ._field_Hi=70285LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=70287LLU, ._field_Hi=70301LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=70303LLU, ._field_Hi=70312LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=70320LLU, ._field_Hi=70366LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=70405LLU, ._field_Hi=70412LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=70415LLU, ._field_Hi=70416LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=70419LLU, ._field_Hi=70440LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=70442LLU, ._field_Hi=70448LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=70450LLU, ._field_Hi=70451LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=70453LLU, ._field_Hi=70457LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=70461LLU, ._field_Hi=70480LLU, ._field_Stride=19LLU},_2194b506a_Range32{._field_Lo=70493LLU, ._field_Hi=70497LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=70656LLU, ._field_Hi=70708LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=70727LLU, ._field_Hi=70730LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=70751LLU, ._field_Hi=70753LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=70784LLU, ._field_Hi=70831LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=70852LLU, ._field_Hi=70853LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=70855LLU, ._field_Hi=71040LLU, ._field_Stride=185LLU},_2194b506a_Range32{._field_Lo=71041LLU, ._field_Hi=71086LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=71128LLU, ._field_Hi=71131LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=71168LLU, ._field_Hi=71215LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=71236LLU, ._field_Hi=71296LLU, ._field_Stride=60LLU},_2194b506a_Range32{._field_Lo=71297LLU, ._field_Hi=71338LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=71352LLU, ._field_Hi=71424LLU, ._field_Stride=72LLU},_2194b506a_Range32{._field_Lo=71425LLU, ._field_Hi=71450LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=71488LLU, ._field_Hi=71494LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=71680LLU, ._field_Hi=71723LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=71840LLU, ._field_Hi=71903LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=71935LLU, ._field_Hi=71942LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=71945LLU, ._field_Hi=71948LLU, ._field_Stride=3LLU},_2194b506a_Range32{._field_Lo=71949LLU, ._field_Hi=71955LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=71957LLU, ._field_Hi=71958LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=71960LLU, ._field_Hi=71983LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=71999LLU, ._field_Hi=72001LLU, ._field_Stride=2LLU},_2194b506a_Range32{._field_Lo=72096LLU, ._field_Hi=72103LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=72106LLU, ._field_Hi=72144LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=72161LLU, ._field_Hi=72163LLU, ._field_Stride=2LLU},_2194b506a_Range32{._field_Lo=72192LLU, ._field_Hi=72203LLU, ._field_Stride=11LLU},_2194b506a_Range32{._field_Lo=72204LLU, ._field_Hi=72242LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=72250LLU, ._field_Hi=72272LLU, ._field_Stride=22LLU},_2194b506a_Range32{._field_Lo=72284LLU, ._field_Hi=72329LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=72349LLU, ._field_Hi=72368LLU, ._field_Stride=19LLU},_2194b506a_Range32{._field_Lo=72369LLU, ._field_Hi=72440LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=72704LLU, ._field_Hi=72712LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=72714LLU, ._field_Hi=72750LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=72768LLU, ._field_Hi=72818LLU, ._field_Stride=50LLU},_2194b506a_Range32{._field_Lo=72819LLU, ._field_Hi=72847LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=72960LLU, ._field_Hi=72966LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=72968LLU, ._field_Hi=72969LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=72971LLU, ._field_Hi=73008LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=73030LLU, ._field_Hi=73056LLU, ._field_Stride=26LLU},_2194b506a_Range32{._field_Lo=73057LLU, ._field_Hi=73061LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=73063LLU, ._field_Hi=73064LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=73066LLU, ._field_Hi=73097LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=73112LLU, ._field_Hi=73440LLU, ._field_Stride=328LLU},_2194b506a_Range32{._field_Lo=73441LLU, ._field_Hi=73458LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=73474LLU, ._field_Hi=73476LLU, ._field_Stride=2LLU},_2194b506a_Range32{._field_Lo=73477LLU, ._field_Hi=73488LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=73490LLU, ._field_Hi=73523LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=73648LLU, ._field_Hi=73728LLU, ._field_Stride=80LLU},_2194b506a_Range32{._field_Lo=73729LLU, ._field_Hi=74649LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=74880LLU, ._field_Hi=75075LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=77712LLU, ._field_Hi=77808LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=77824LLU, ._field_Hi=78895LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=78913LLU, ._field_Hi=78918LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=82944LLU, ._field_Hi=83526LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=92160LLU, ._field_Hi=92728LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=92736LLU, ._field_Hi=92766LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=92784LLU, ._field_Hi=92862LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=92880LLU, ._field_Hi=92909LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=92928LLU, ._field_Hi=92975LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=92992LLU, ._field_Hi=92995LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=93027LLU, ._field_Hi=93047LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=93053LLU, ._field_Hi=93071LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=93760LLU, ._field_Hi=93823LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=93952LLU, ._field_Hi=94026LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=94032LLU, ._field_Hi=94099LLU, ._field_Stride=67LLU},_2194b506a_Range32{._field_Lo=94100LLU, ._field_Hi=94111LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=94176LLU, ._field_Hi=94177LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=94179LLU, ._field_Hi=94208LLU, ._field_Stride=29LLU},_2194b506a_Range32{._field_Lo=94209LLU, ._field_Hi=100343LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=100352LLU, ._field_Hi=101589LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=101632LLU, ._field_Hi=101640LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=110576LLU, ._field_Hi=110579LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=110581LLU, ._field_Hi=110587LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=110589LLU, ._field_Hi=110590LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=110592LLU, ._field_Hi=110882LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=110898LLU, ._field_Hi=110928LLU, ._field_Stride=30LLU},_2194b506a_Range32{._field_Lo=110929LLU, ._field_Hi=110930LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=110933LLU, ._field_Hi=110948LLU, ._field_Stride=15LLU},_2194b506a_Range32{._field_Lo=110949LLU, ._field_Hi=110951LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=110960LLU, ._field_Hi=111355LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=113664LLU, ._field_Hi=113770LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=113776LLU, ._field_Hi=113788LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=113792LLU, ._field_Hi=113800LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=113808LLU, ._field_Hi=113817LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=119808LLU, ._field_Hi=119892LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=119894LLU, ._field_Hi=119964LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=119966LLU, ._field_Hi=119967LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=119970LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_2194b506a_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_2194b506a_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=119982LLU, ._field_Hi=119993LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=119995LLU, ._field_Hi=119997LLU, ._field_Stride=2LLU},_2194b506a_Range32{._field_Lo=119998LLU, ._field_Hi=120003LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=120005LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=120094LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_2194b506a_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=120146LLU, ._field_Hi=120485LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=120514LLU, ._field_Hi=120538LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=120540LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=120572LLU, ._field_Hi=120596LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=120598LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=120630LLU, ._field_Hi=120654LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=120656LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=120688LLU, ._field_Hi=120712LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=120714LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=120746LLU, ._field_Hi=120770LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=120772LLU, ._field_Hi=120779LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=122624LLU, ._field_Hi=122654LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=122661LLU, ._field_Hi=122666LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=122928LLU, ._field_Hi=122989LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=123136LLU, ._field_Hi=123180LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=123191LLU, ._field_Hi=123197LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=123214LLU, ._field_Hi=123536LLU, ._field_Stride=322LLU},_2194b506a_Range32{._field_Lo=123537LLU, ._field_Hi=123565LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=123584LLU, ._field_Hi=123627LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=124112LLU, ._field_Hi=124139LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=124896LLU, ._field_Hi=124902LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=124904LLU, ._field_Hi=124907LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=124909LLU, ._field_Hi=124910LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=124912LLU, ._field_Hi=124926LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=124928LLU, ._field_Hi=125124LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=125184LLU, ._field_Hi=125251LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=125259LLU, ._field_Hi=126464LLU, ._field_Stride=1205LLU},_2194b506a_Range32{._field_Lo=126465LLU, ._field_Hi=126467LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=126469LLU, ._field_Hi=126495LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=126497LLU, ._field_Hi=126498LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=126500LLU, ._field_Hi=126503LLU, ._field_Stride=3LLU},_2194b506a_Range32{._field_Lo=126505LLU, ._field_Hi=126514LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=126516LLU, ._field_Hi=126519LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=126521LLU, ._field_Hi=126523LLU, ._field_Stride=2LLU},_2194b506a_Range32{._field_Lo=126530LLU, ._field_Hi=126535LLU, ._field_Stride=5LLU},_2194b506a_Range32{._field_Lo=126537LLU, ._field_Hi=126541LLU, ._field_Stride=2LLU},_2194b506a_Range32{._field_Lo=126542LLU, ._field_Hi=126543LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=126545LLU, ._field_Hi=126546LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=126548LLU, ._field_Hi=126551LLU, ._field_Stride=3LLU},_2194b506a_Range32{._field_Lo=126553LLU, ._field_Hi=126561LLU, ._field_Stride=2LLU},_2194b506a_Range32{._field_Lo=126562LLU, ._field_Hi=126564LLU, ._field_Stride=2LLU},_2194b506a_Range32{._field_Lo=126567LLU, ._field_Hi=126570LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=126572LLU, ._field_Hi=126578LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=126580LLU, ._field_Hi=126583LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=126585LLU, ._field_Hi=126588LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=126590LLU, ._field_Hi=126592LLU, ._field_Stride=2LLU},_2194b506a_Range32{._field_Lo=126593LLU, ._field_Hi=126601LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=126603LLU, ._field_Hi=126619LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=126625LLU, ._field_Hi=126627LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=126629LLU, ._field_Hi=126633LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=126635LLU, ._field_Hi=126651LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=131072LLU, ._field_Hi=173791LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=173824LLU, ._field_Hi=177977LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=177984LLU, ._field_Hi=178205LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=178208LLU, ._field_Hi=183969LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=183984LLU, ._field_Hi=191456LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=194560LLU, ._field_Hi=195101LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=196608LLU, ._field_Hi=201546LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=201552LLU, ._field_Hi=205743LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=6LL});
jule::Ptr<_2194b5521_RangeTable> _219451cc6__LU = jule::new_ptr<_2194b5521_RangeTable>(_2194b5521_RangeTable{._field_R16=jule::Slice<_2194b4a3c_Range16>::make({_2194b4a3c_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=192LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=216LLU, ._field_Hi=222LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=256LLU, ._field_Hi=310LLU, ._field_Stride=2LLU},_2194b4a3c_Range16{._field_Lo=313LLU, ._field_Hi=327LLU, ._field_Stride=2LLU},_2194b4a3c_Range16{._field_Lo=330LLU, ._field_Hi=376LLU, ._field_Stride=2LLU},_2194b4a3c_Range16{._field_Lo=377LLU, ._field_Hi=381LLU, ._field_Stride=2LLU},_2194b4a3c_Range16{._field_Lo=385LLU, ._field_Hi=386LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=388LLU, ._field_Hi=390LLU, ._field_Stride=2LLU},_2194b4a3c_Range16{._field_Lo=391LLU, ._field_Hi=393LLU, ._field_Stride=2LLU},_2194b4a3c_Range16{._field_Lo=394LLU, ._field_Hi=395LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=398LLU, ._field_Hi=401LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=403LLU, ._field_Hi=404LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=406LLU, ._field_Hi=408LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=412LLU, ._field_Hi=413LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=415LLU, ._field_Hi=416LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=418LLU, ._field_Hi=422LLU, ._field_Stride=2LLU},_2194b4a3c_Range16{._field_Lo=423LLU, ._field_Hi=425LLU, ._field_Stride=2LLU},_2194b4a3c_Range16{._field_Lo=428LLU, ._field_Hi=430LLU, ._field_Stride=2LLU},_2194b4a3c_Range16{._field_Lo=431LLU, ._field_Hi=433LLU, ._field_Stride=2LLU},_2194b4a3c_Range16{._field_Lo=434LLU, ._field_Hi=435LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=437LLU, ._field_Hi=439LLU, ._field_Stride=2LLU},_2194b4a3c_Range16{._field_Lo=440LLU, ._field_Hi=444LLU, ._field_Stride=4LLU},_2194b4a3c_Range16{._field_Lo=452LLU, ._field_Hi=461LLU, ._field_Stride=3LLU},_2194b4a3c_Range16{._field_Lo=463LLU, ._field_Hi=475LLU, ._field_Stride=2LLU},_2194b4a3c_Range16{._field_Lo=478LLU, ._field_Hi=494LLU, ._field_Stride=2LLU},_2194b4a3c_Range16{._field_Lo=497LLU, ._field_Hi=500LLU, ._field_Stride=3LLU},_2194b4a3c_Range16{._field_Lo=502LLU, ._field_Hi=504LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=506LLU, ._field_Hi=562LLU, ._field_Stride=2LLU},_2194b4a3c_Range16{._field_Lo=570LLU, ._field_Hi=571LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=573LLU, ._field_Hi=574LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=577LLU, ._field_Hi=579LLU, ._field_Stride=2LLU},_2194b4a3c_Range16{._field_Lo=580LLU, ._field_Hi=582LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=584LLU, ._field_Hi=590LLU, ._field_Stride=2LLU},_2194b4a3c_Range16{._field_Lo=880LLU, ._field_Hi=882LLU, ._field_Stride=2LLU},_2194b4a3c_Range16{._field_Lo=886LLU, ._field_Hi=895LLU, ._field_Stride=9LLU},_2194b4a3c_Range16{._field_Lo=902LLU, ._field_Hi=904LLU, ._field_Stride=2LLU},_2194b4a3c_Range16{._field_Lo=905LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_2194b4a3c_Range16{._field_Lo=911LLU, ._field_Hi=913LLU, ._field_Stride=2LLU},_2194b4a3c_Range16{._field_Lo=914LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=931LLU, ._field_Hi=939LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=975LLU, ._field_Hi=978LLU, ._field_Stride=3LLU},_2194b4a3c_Range16{._field_Lo=979LLU, ._field_Hi=980LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=984LLU, ._field_Hi=1006LLU, ._field_Stride=2LLU},_2194b4a3c_Range16{._field_Lo=1012LLU, ._field_Hi=1015LLU, ._field_Stride=3LLU},_2194b4a3c_Range16{._field_Lo=1017LLU, ._field_Hi=1018LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=1021LLU, ._field_Hi=1071LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=1120LLU, ._field_Hi=1152LLU, ._field_Stride=2LLU},_2194b4a3c_Range16{._field_Lo=1162LLU, ._field_Hi=1216LLU, ._field_Stride=2LLU},_2194b4a3c_Range16{._field_Lo=1217LLU, ._field_Hi=1229LLU, ._field_Stride=2LLU},_2194b4a3c_Range16{._field_Lo=1232LLU, ._field_Hi=1326LLU, ._field_Stride=2LLU},_2194b4a3c_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=4256LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_2194b4a3c_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=7680LLU, ._field_Hi=7828LLU, ._field_Stride=2LLU},_2194b4a3c_Range16{._field_Lo=7838LLU, ._field_Hi=7934LLU, ._field_Stride=2LLU},_2194b4a3c_Range16{._field_Lo=7944LLU, ._field_Hi=7951LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=7976LLU, ._field_Hi=7983LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=7992LLU, ._field_Hi=7999LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_2194b4a3c_Range16{._field_Lo=8040LLU, ._field_Hi=8047LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=8120LLU, ._field_Hi=8123LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=8136LLU, ._field_Hi=8139LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=8152LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=8168LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=8184LLU, ._field_Hi=8187LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_2194b4a3c_Range16{._field_Lo=8459LLU, ._field_Hi=8461LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=8464LLU, ._field_Hi=8466LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_2194b4a3c_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_2194b4a3c_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=8496LLU, ._field_Hi=8499LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=8510LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=8517LLU, ._field_Hi=8579LLU, ._field_Stride=62LLU},_2194b4a3c_Range16{._field_Lo=11264LLU, ._field_Hi=11311LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=11360LLU, ._field_Hi=11362LLU, ._field_Stride=2LLU},_2194b4a3c_Range16{._field_Lo=11363LLU, ._field_Hi=11364LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=11367LLU, ._field_Hi=11373LLU, ._field_Stride=2LLU},_2194b4a3c_Range16{._field_Lo=11374LLU, ._field_Hi=11376LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=11378LLU, ._field_Hi=11381LLU, ._field_Stride=3LLU},_2194b4a3c_Range16{._field_Lo=11390LLU, ._field_Hi=11392LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=11394LLU, ._field_Hi=11490LLU, ._field_Stride=2LLU},_2194b4a3c_Range16{._field_Lo=11499LLU, ._field_Hi=11501LLU, ._field_Stride=2LLU},_2194b4a3c_Range16{._field_Lo=11506LLU, ._field_Hi=42560LLU, ._field_Stride=31054LLU},_2194b4a3c_Range16{._field_Lo=42562LLU, ._field_Hi=42604LLU, ._field_Stride=2LLU},_2194b4a3c_Range16{._field_Lo=42624LLU, ._field_Hi=42650LLU, ._field_Stride=2LLU},_2194b4a3c_Range16{._field_Lo=42786LLU, ._field_Hi=42798LLU, ._field_Stride=2LLU},_2194b4a3c_Range16{._field_Lo=42802LLU, ._field_Hi=42862LLU, ._field_Stride=2LLU},_2194b4a3c_Range16{._field_Lo=42873LLU, ._field_Hi=42877LLU, ._field_Stride=2LLU},_2194b4a3c_Range16{._field_Lo=42878LLU, ._field_Hi=42886LLU, ._field_Stride=2LLU},_2194b4a3c_Range16{._field_Lo=42891LLU, ._field_Hi=42893LLU, ._field_Stride=2LLU},_2194b4a3c_Range16{._field_Lo=42896LLU, ._field_Hi=42898LLU, ._field_Stride=2LLU},_2194b4a3c_Range16{._field_Lo=42902LLU, ._field_Hi=42922LLU, ._field_Stride=2LLU},_2194b4a3c_Range16{._field_Lo=42923LLU, ._field_Hi=42926LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=42928LLU, ._field_Hi=42932LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=42934LLU, ._field_Hi=42948LLU, ._field_Stride=2LLU},_2194b4a3c_Range16{._field_Lo=42949LLU, ._field_Hi=42951LLU, ._field_Stride=1LLU},_2194b4a3c_Range16{._field_Lo=42953LLU, ._field_Hi=42960LLU, ._field_Stride=7LLU},_2194b4a3c_Range16{._field_Lo=42966LLU, ._field_Hi=42968LLU, ._field_Stride=2LLU},_2194b4a3c_Range16{._field_Lo=42997LLU, ._field_Hi=65313LLU, ._field_Stride=22316LLU},_2194b4a3c_Range16{._field_Lo=65314LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_2194b506a_Range32>::make({_2194b506a_Range32{._field_Lo=66560LLU, ._field_Hi=66599LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=71840LLU, ._field_Hi=71871LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=93760LLU, ._field_Hi=93791LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=119808LLU, ._field_Hi=119833LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=119860LLU, ._field_Hi=119885LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=119912LLU, ._field_Hi=119937LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=119964LLU, ._field_Hi=119966LLU, ._field_Stride=2LLU},_2194b506a_Range32{._field_Lo=119967LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_2194b506a_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_2194b506a_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=119982LLU, ._field_Hi=119989LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=120016LLU, ._field_Hi=120041LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=120068LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=120120LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_2194b506a_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=120172LLU, ._field_Hi=120197LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=120224LLU, ._field_Hi=120249LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=120276LLU, ._field_Hi=120301LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=120328LLU, ._field_Hi=120353LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=120380LLU, ._field_Hi=120405LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=120432LLU, ._field_Hi=120457LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=120546LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=120604LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=120662LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=120720LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_2194b506a_Range32{._field_Lo=120778LLU, ._field_Hi=125184LLU, ._field_Stride=4406LLU},_2194b506a_Range32{._field_Lo=125185LLU, ._field_Hi=125217LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=3LL});
jule::Array<jule::U8,256> _2194add55__PROPERTIES = jule::Array<jule::U8,256>({1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,144LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,130LLU,130LLU,136LLU,136LLU,136LLU,130LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,130LLU,130LLU,130LLU,136LLU,130LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,130LLU,136LLU,130LLU,136LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,16LLU,130LLU,136LLU,136LLU,136LLU,136LLU,136LLU,130LLU,136LLU,136LLU,224LLU,130LLU,136LLU,0LLU,136LLU,136LLU,136LLU,136LLU,132LLU,132LLU,136LLU,192LLU,130LLU,130LLU,136LLU,132LLU,224LLU,130LLU,132LLU,132LLU,132LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,136LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU});
jule::Array<jule::U8,256> _1e0128e8e_first = jule::Array<jule::U8,256>({});
jule::Array<_1e0129522_acceptRange,16> _1e0129830_acceptRanges = jule::Array<_1e0129522_acceptRange,16>({_1e0129522_acceptRange{._field_lo=128LLU, ._field_hi=191LLU},_1e0129522_acceptRange{._field_lo=160LLU, ._field_hi=191LLU},_1e0129522_acceptRange{._field_lo=128LLU, ._field_hi=159LLU},_1e0129522_acceptRange{._field_lo=144LLU, ._field_hi=191LLU},_1e0129522_acceptRange{._field_lo=128LLU, ._field_hi=143LLU}});
jule::Array<jule::Str,4> _1e0194b0e_CppHeaderExts = jule::Array<jule::Str,4>({jule::Str::lit(".h", 2),jule::Str::lit(".hpp", 4),jule::Str::lit(".hxx", 4),jule::Str::lit(".hh", 3)});
jule::Array<jule::Str,3> _1e02265ec_CppExts = jule::Array<jule::Str,3>({jule::Str::lit(".cpp", 4),jule::Str::lit(".cc", 3),jule::Str::lit(".cxx", 4)});
jule::Array<jule::Str,1> _1e02268b6_ObjectiveCppExts = jule::Array<jule::Str,1>({jule::Str::lit(".mm", 3)});
jule::Str _1e034e33a_PathStdlib = jule::Str();
jule::Str _1e034e58d_PathExec = jule::Str();
jule::Str _1e034e846_PathWd = jule::Str();
jule::Str _1e034eb54_PathApi = jule::Str();
jule::Str _1e034ee1d_Os = jule::Str::lit("linux", 5);
jule::Str _1e03501d7_Arch = jule::Str::lit("arm64", 5);
jule::Array<jule::U8,32> _1c75db997__DE_BRUIJN32_TAB = jule::Array<jule::U8,32>({0LLU,1LLU,28LLU,2LLU,29LLU,14LLU,24LLU,3LLU,30LLU,22LLU,20LLU,15LLU,25LLU,17LLU,4LLU,8LLU,31LLU,27LLU,13LLU,23LLU,21LLU,19LLU,16LLU,7LLU,26LLU,12LLU,18LLU,6LLU,11LLU,5LLU,10LLU,9LLU});
jule::Array<jule::U8,64> _1c75dc05d__DE_BRUIJN64_TAB = jule::Array<jule::U8,64>({0LLU,1LLU,56LLU,2LLU,57LLU,49LLU,28LLU,3LLU,61LLU,58LLU,42LLU,50LLU,38LLU,29LLU,17LLU,4LLU,62LLU,47LLU,59LLU,36LLU,45LLU,43LLU,51LLU,22LLU,53LLU,39LLU,33LLU,30LLU,24LLU,18LLU,12LLU,5LLU,63LLU,55LLU,48LLU,27LLU,60LLU,41LLU,37LLU,16LLU,46LLU,35LLU,44LLU,21LLU,52LLU,32LLU,23LLU,11LLU,54LLU,26LLU,40LLU,15LLU,34LLU,20LLU,31LLU,10LLU,25LLU,14LLU,19LLU,9LLU,13LLU,8LLU,7LLU,6LLU});
_1d42ea2c0_floatInfo _1d42ea5cd_f32info = _1d42ea2c0_floatInfo{._field_mantbits=23LLU, ._field_expbits=8LLU, ._field_bias=-127LL};
_1d42ea2c0_floatInfo _1d42ea842_f64info = _1d42ea2c0_floatInfo{._field_mantbits=52LLU, ._field_expbits=11LLU, ._field_bias=-1023LL};
jule::Array<jule::Array<jule::U64,2>,696> _1d4303284_detailedPowsOfTen = jule::Array<jule::Array<jule::U64,2>,696>({jule::Array<jule::U64,2>({1671618768450675795LLU,18054884314459144840LLU}),jule::Array<jule::U64,2>({1044761730281672372LLU,11284302696536965525LLU}),jule::Array<jule::U64,2>({5917638181279478369LLU,14105378370671206906LLU}),jule::Array<jule::U64,2>({16620419763454123769LLU,17631722963339008632LLU}),jule::Array<jule::U64,2>({10387762352158827356LLU,11019826852086880395LLU}),jule::Array<jule::U64,2>({8373016921771146291LLU,13774783565108600494LLU}),jule::Array<jule::U64,2>({1242899115359157055LLU,17218479456385750618LLU}),jule::Array<jule::U64,2>({5388497965526861063LLU,10761549660241094136LLU}),jule::Array<jule::U64,2>({6735622456908576329LLU,13451937075301367670LLU}),jule::Array<jule::U64,2>({17642900107990496220LLU,16814921344126709587LLU}),jule::Array<jule::U64,2>({8720969558280366185LLU,10509325840079193492LLU}),jule::Array<jule::U64,2>({10901211947850457732LLU,13136657300098991865LLU}),jule::Array<jule::U64,2>({18238200953240460069LLU,16420821625123739831LLU}),jule::Array<jule::U64,2>({18316404623416369399LLU,10263013515702337394LLU}),jule::Array<jule::U64,2>({13672133742415685941LLU,12828766894627921743LLU}),jule::Array<jule::U64,2>({12478481159592219522LLU,16035958618284902179LLU}),jule::Array<jule::U64,2>({5493207715531443249LLU,10022474136428063862LLU}),jule::Array<jule::U64,2>({16089881681269079869LLU,12528092670535079827LLU}),jule::Array<jule::U64,2>({15500666083158961933LLU,15660115838168849784LLU}),jule::Array<jule::U64,2>({9687916301974351208LLU,9787572398855531115LLU}),jule::Array<jule::U64,2>({7498209359040551106LLU,12234465498569413894LLU}),jule::Array<jule::U64,2>({149389661945913074LLU,15293081873211767368LLU}),jule::Array<jule::U64,2>({93368538716195671LLU,9558176170757354605LLU}),jule::Array<jule::U64,2>({4728396691822632493LLU,11947720213446693256LLU}),jule::Array<jule::U64,2>({5910495864778290617LLU,14934650266808366570LLU}),jule::Array<jule::U64,2>({8305745933913819539LLU,9334156416755229106LLU}),jule::Array<jule::U64,2>({1158810380537498616LLU,11667695520944036383LLU}),jule::Array<jule::U64,2>({15283571030954036982LLU,14584619401180045478LLU}),jule::Array<jule::U64,2>({9881091751837770420LLU,18230774251475056848LLU}),jule::Array<jule::U64,2>({6175682344898606512LLU,11394233907171910530LLU}),jule::Array<jule::U64,2>({16942974967978033949LLU,14242792383964888162LLU}),jule::Array<jule::U64,2>({11955346673117766628LLU,17803490479956110203LLU}),jule::Array<jule::U64,2>({5166248661484910190LLU,11127181549972568877LLU}),jule::Array<jule::U64,2>({11069496845283525642LLU,13908976937465711096LLU}),jule::Array<jule::U64,2>({13836871056604407053LLU,17386221171832138870LLU}),jule::Array<jule::U64,2>({4036358391950366504LLU,10866388232395086794LLU}),jule::Array<jule::U64,2>({14268820026792733938LLU,13582985290493858492LLU}),jule::Array<jule::U64,2>({17836025033490917422LLU,16978731613117323115LLU}),jule::Array<jule::U64,2>({8841672636718129437LLU,10611707258198326947LLU}),jule::Array<jule::U64,2>({6440404777470273892LLU,13264634072747908684LLU}),jule::Array<jule::U64,2>({8050505971837842365LLU,16580792590934885855LLU}),jule::Array<jule::U64,2>({11949095260039733334LLU,10362995369334303659LLU}),jule::Array<jule::U64,2>({10324683056622278764LLU,12953744211667879574LLU}),jule::Array<jule::U64,2>({3682481783923072647LLU,16192180264584849468LLU}),jule::Array<jule::U64,2>({11524923151806696212LLU,10120112665365530917LLU}),jule::Array<jule::U64,2>({571095884476206553LLU,12650140831706913647LLU}),jule::Array<jule::U64,2>({14548927910877421904LLU,15812676039633642058LLU}),jule::Array<jule::U64,2>({13704765962725776594LLU,9882922524771026286LLU}),jule::Array<jule::U64,2>({7907585416552444934LLU,12353653155963782858LLU}),jule::Array<jule::U64,2>({661109733835780360LLU,15442066444954728573LLU}),jule::Array<jule::U64,2>({2719036592861056677LLU,9651291528096705358LLU}),jule::Array<jule::U64,2>({12622167777931096654LLU,12064114410120881697LLU}),jule::Array<jule::U64,2>({1942651667131707105LLU,15080143012651102122LLU}),jule::Array<jule::U64,2>({5825843310384704845LLU,9425089382906938826LLU}),jule::Array<jule::U64,2>({16505676174835656864LLU,11781361728633673532LLU}),jule::Array<jule::U64,2>({2185351144835019464LLU,14726702160792091916LLU}),jule::Array<jule::U64,2>({2731688931043774330LLU,18408377700990114895LLU}),jule::Array<jule::U64,2>({8624834609543440812LLU,11505236063118821809LLU}),jule::Array<jule::U64,2>({15392729280356688919LLU,14381545078898527261LLU}),jule::Array<jule::U64,2>({5405853545163697437LLU,17976931348623159077LLU}),jule::Array<jule::U64,2>({5684501474941004850LLU,11235582092889474423LLU}),jule::Array<jule::U64,2>({2493940825248868159LLU,14044477616111843029LLU}),jule::Array<jule::U64,2>({7729112049988473103LLU,17555597020139803786LLU}),jule::Array<jule::U64,2>({9442381049670183593LLU,10972248137587377366LLU}),jule::Array<jule::U64,2>({2579604275232953683LLU,13715310171984221708LLU}),jule::Array<jule::U64,2>({3224505344041192104LLU,17144137714980277135LLU}),jule::Array<jule::U64,2>({8932844867666826921LLU,10715086071862673209LLU}),jule::Array<jule::U64,2>({15777742103010921555LLU,13393857589828341511LLU}),jule::Array<jule::U64,2>({15110491610336264040LLU,16742321987285426889LLU}),jule::Array<jule::U64,2>({2526528228819083169LLU,10463951242053391806LLU}),jule::Array<jule::U64,2>({12381532322878629770LLU,13079939052566739757LLU}),jule::Array<jule::U64,2>({1641857348316123500LLU,16349923815708424697LLU}),jule::Array<jule::U64,2>({12555375888766046947LLU,10218702384817765435LLU}),jule::Array<jule::U64,2>({11082533842530170780LLU,12773377981022206794LLU}),jule::Array<jule::U64,2>({4629795266307937667LLU,15966722476277758493LLU}),jule::Array<jule::U64,2>({5199465050656154994LLU,9979201547673599058LLU}),jule::Array<jule::U64,2>({15722703350174969551LLU,12474001934591998822LLU}),jule::Array<jule::U64,2>({10430007150863936130LLU,15592502418239998528LLU}),jule::Array<jule::U64,2>({6518754469289960081LLU,9745314011399999080LLU}),jule::Array<jule::U64,2>({8148443086612450102LLU,12181642514249998850LLU}),jule::Array<jule::U64,2>({962181821410786819LLU,15227053142812498563LLU}),jule::Array<jule::U64,2>({16742264702877599426LLU,9516908214257811601LLU}),jule::Array<jule::U64,2>({7092772823314835570LLU,11896135267822264502LLU}),jule::Array<jule::U64,2>({18089338065998320271LLU,14870169084777830627LLU}),jule::Array<jule::U64,2>({8999993282035256217LLU,9293855677986144142LLU}),jule::Array<jule::U64,2>({2026619565689294464LLU,11617319597482680178LLU}),jule::Array<jule::U64,2>({11756646493966393888LLU,14521649496853350222LLU}),jule::Array<jule::U64,2>({5472436080603216552LLU,18152061871066687778LLU}),jule::Array<jule::U64,2>({8031958568804398249LLU,11345038669416679861LLU}),jule::Array<jule::U64,2>({14651634229432885715LLU,14181298336770849826LLU}),jule::Array<jule::U64,2>({9091170749936331336LLU,17726622920963562283LLU}),jule::Array<jule::U64,2>({3376138709496513133LLU,11079139325602226427LLU}),jule::Array<jule::U64,2>({18055231442152805128LLU,13848924157002783033LLU}),jule::Array<jule::U64,2>({8733981247408842698LLU,17311155196253478792LLU}),jule::Array<jule::U64,2>({5458738279630526686LLU,10819471997658424245LLU}),jule::Array<jule::U64,2>({11435108867965546262LLU,13524339997073030306LLU}),jule::Array<jule::U64,2>({5070514048102157020LLU,16905424996341287883LLU}),jule::Array<jule::U64,2>({863228270850154185LLU,10565890622713304927LLU}),jule::Array<jule::U64,2>({14914093393844856443LLU,13207363278391631158LLU}),jule::Array<jule::U64,2>({9419244705451294746LLU,16509204097989538948LLU}),jule::Array<jule::U64,2>({15110399977761835024LLU,10318252561243461842LLU}),jule::Array<jule::U64,2>({9664627935347517973LLU,12897815701554327303LLU}),jule::Array<jule::U64,2>({7469098900757009562LLU,16122269626942909129LLU}),jule::Array<jule::U64,2>({16197401859041600736LLU,10076418516839318205LLU}),jule::Array<jule::U64,2>({6411694268519837208LLU,12595523146049147757LLU}),jule::Array<jule::U64,2>({12626303854077184414LLU,15744403932561434696LLU}),jule::Array<jule::U64,2>({7891439908798240259LLU,9840252457850896685LLU}),jule::Array<jule::U64,2>({14475985904425188227LLU,12300315572313620856LLU}),jule::Array<jule::U64,2>({18094982380531485284LLU,15375394465392026070LLU}),jule::Array<jule::U64,2>({6697677969404790399LLU,9609621540870016294LLU}),jule::Array<jule::U64,2>({17595469498610763806LLU,12012026926087520367LLU}),jule::Array<jule::U64,2>({17382650854836066854LLU,15015033657609400459LLU}),jule::Array<jule::U64,2>({8558313775058847832LLU,9384396036005875287LLU}),jule::Array<jule::U64,2>({6086206200396171886LLU,11730495045007344109LLU}),jule::Array<jule::U64,2>({12219443768922602761LLU,14663118806259180136LLU}),jule::Array<jule::U64,2>({15274304711153253452LLU,18328898507823975170LLU}),jule::Array<jule::U64,2>({14158126462898171311LLU,11455561567389984481LLU}),jule::Array<jule::U64,2>({3862600023340550427LLU,14319451959237480602LLU}),jule::Array<jule::U64,2>({14051622066030463842LLU,17899314949046850752LLU}),jule::Array<jule::U64,2>({8782263791269039901LLU,11187071843154281720LLU}),jule::Array<jule::U64,2>({10977829739086299876LLU,13983839803942852150LLU}),jule::Array<jule::U64,2>({4498915137003099037LLU,17479799754928565188LLU}),jule::Array<jule::U64,2>({12035193997481712706LLU,10924874846830353242LLU}),jule::Array<jule::U64,2>({5820620459997365075LLU,13656093558537941553LLU}),jule::Array<jule::U64,2>({11887461593424094248LLU,17070116948172426941LLU}),jule::Array<jule::U64,2>({9735506505103752857LLU,10668823092607766838LLU}),jule::Array<jule::U64,2>({2946011094524915263LLU,13336028865759708548LLU}),jule::Array<jule::U64,2>({3682513868156144079LLU,16670036082199635685LLU}),jule::Array<jule::U64,2>({4607414176811284001LLU,10418772551374772303LLU}),jule::Array<jule::U64,2>({1147581702586717097LLU,13023465689218465379LLU}),jule::Array<jule::U64,2>({15269535183515560084LLU,16279332111523081723LLU}),jule::Array<jule::U64,2>({7237616480483531100LLU,10174582569701926077LLU}),jule::Array<jule::U64,2>({13658706619031801779LLU,12718228212127407596LLU}),jule::Array<jule::U64,2>({17073383273789752224LLU,15897785265159259495LLU}),jule::Array<jule::U64,2>({17588393573759676996LLU,9936115790724537184LLU}),jule::Array<jule::U64,2>({3538747893490044629LLU,12420144738405671481LLU}),jule::Array<jule::U64,2>({9035120885289943691LLU,15525180923007089351LLU}),jule::Array<jule::U64,2>({12564479580947296663LLU,9703238076879430844LLU}),jule::Array<jule::U64,2>({15705599476184120828LLU,12129047596099288555LLU}),jule::Array<jule::U64,2>({15020313326802763131LLU,15161309495124110694LLU}),jule::Array<jule::U64,2>({4776009810824339053LLU,9475818434452569184LLU}),jule::Array<jule::U64,2>({5970012263530423816LLU,11844773043065711480LLU}),jule::Array<jule::U64,2>({7462515329413029771LLU,14805966303832139350LLU}),jule::Array<jule::U64,2>({52386062455755702LLU,9253728939895087094LLU}),jule::Array<jule::U64,2>({9288854614924470436LLU,11567161174868858867LLU}),jule::Array<jule::U64,2>({6999382250228200141LLU,14458951468586073584LLU}),jule::Array<jule::U64,2>({8749227812785250177LLU,18073689335732591980LLU}),jule::Array<jule::U64,2>({14691639419845557168LLU,11296055834832869987LLU}),jule::Array<jule::U64,2>({13752863256379558556LLU,14120069793541087484LLU}),jule::Array<jule::U64,2>({17191079070474448196LLU,17650087241926359355LLU}),jule::Array<jule::U64,2>({8438581409832836170LLU,11031304526203974597LLU}),jule::Array<jule::U64,2>({15159912780718433117LLU,13789130657754968246LLU}),jule::Array<jule::U64,2>({9726518939043265588LLU,17236413322193710308LLU}),jule::Array<jule::U64,2>({15302446373756816800LLU,10772758326371068942LLU}),jule::Array<jule::U64,2>({9904685930341245193LLU,13465947907963836178LLU}),jule::Array<jule::U64,2>({3157485376071780683LLU,16832434884954795223LLU}),jule::Array<jule::U64,2>({8890957387685944783LLU,10520271803096747014LLU}),jule::Array<jule::U64,2>({1890324697752655170LLU,13150339753870933768LLU}),jule::Array<jule::U64,2>({2362905872190818963LLU,16437924692338667210LLU}),jule::Array<jule::U64,2>({6088502188546649756LLU,10273702932711667006LLU}),jule::Array<jule::U64,2>({16833999772538088003LLU,12842128665889583757LLU}),jule::Array<jule::U64,2>({7207441660390446292LLU,16052660832361979697LLU}),jule::Array<jule::U64,2>({16033866083812498692LLU,10032913020226237310LLU}),jule::Array<jule::U64,2>({10818960567910847557LLU,12541141275282796638LLU}),jule::Array<jule::U64,2>({4300328673033783639LLU,15676426594103495798LLU}),jule::Array<jule::U64,2>({16522763475928278486LLU,9797766621314684873LLU}),jule::Array<jule::U64,2>({6818396289628184396LLU,12247208276643356092LLU}),jule::Array<jule::U64,2>({8522995362035230495LLU,15309010345804195115LLU}),jule::Array<jule::U64,2>({3021029092058325107LLU,9568131466127621947LLU}),jule::Array<jule::U64,2>({17611344420355070096LLU,11960164332659527433LLU}),jule::Array<jule::U64,2>({8179122470161673908LLU,14950205415824409292LLU}),jule::Array<jule::U64,2>({14335323580705822000LLU,9343878384890255807LLU}),jule::Array<jule::U64,2>({13307468457454889596LLU,11679847981112819759LLU}),jule::Array<jule::U64,2>({12022649553391224092LLU,14599809976391024699LLU}),jule::Array<jule::U64,2>({10416625923311642211LLU,18249762470488780874LLU}),jule::Array<jule::U64,2>({11122077220497164286LLU,11406101544055488046LLU}),jule::Array<jule::U64,2>({4679224488766679549LLU,14257626930069360058LLU}),jule::Array<jule::U64,2>({15072402647813125244LLU,17822033662586700072LLU}),jule::Array<jule::U64,2>({9420251654883203278LLU,11138771039116687545LLU}),jule::Array<jule::U64,2>({16387000587031392001LLU,13923463798895859431LLU}),jule::Array<jule::U64,2>({15872064715361852097LLU,17404329748619824289LLU}),jule::Array<jule::U64,2>({3002511419460075705LLU,10877706092887390181LLU}),jule::Array<jule::U64,2>({8364825292752482535LLU,13597132616109237726LLU}),jule::Array<jule::U64,2>({1232659579085827361LLU,16996415770136547158LLU}),jule::Array<jule::U64,2>({14605470292210805812LLU,10622759856335341973LLU}),jule::Array<jule::U64,2>({4421779809981343554LLU,13278449820419177467LLU}),jule::Array<jule::U64,2>({915538744049291538LLU,16598062275523971834LLU}),jule::Array<jule::U64,2>({5183897733458195115LLU,10373788922202482396LLU}),jule::Array<jule::U64,2>({6479872166822743894LLU,12967236152753102995LLU}),jule::Array<jule::U64,2>({3488154190101041964LLU,16209045190941378744LLU}),jule::Array<jule::U64,2>({2180096368813151227LLU,10130653244338361715LLU}),jule::Array<jule::U64,2>({16560178516298602746LLU,12663316555422952143LLU}),jule::Array<jule::U64,2>({16088537126945865529LLU,15829145694278690179LLU}),jule::Array<jule::U64,2>({7749492695127472003LLU,9893216058924181362LLU}),jule::Array<jule::U64,2>({463493832054564196LLU,12366520073655226703LLU}),jule::Array<jule::U64,2>({14414425345350368957LLU,15458150092069033378LLU}),jule::Array<jule::U64,2>({13620701859271368502LLU,9661343807543145861LLU}),jule::Array<jule::U64,2>({3190819268807046916LLU,12076679759428932327LLU}),jule::Array<jule::U64,2>({17823582141290972357LLU,15095849699286165408LLU}),jule::Array<jule::U64,2>({11139738838306857723LLU,9434906062053853380LLU}),jule::Array<jule::U64,2>({13924673547883572154LLU,11793632577567316725LLU}),jule::Array<jule::U64,2>({3570783879572301480LLU,14742040721959145907LLU}),jule::Array<jule::U64,2>({18298537904747540562LLU,18427550902448932383LLU}),jule::Array<jule::U64,2>({18354115218108294707LLU,11517219314030582739LLU}),jule::Array<jule::U64,2>({18330958004207980480LLU,14396524142538228424LLU}),jule::Array<jule::U64,2>({4466953431550423984LLU,17995655178172785531LLU}),jule::Array<jule::U64,2>({486002885505321038LLU,11247284486357990957LLU}),jule::Array<jule::U64,2>({5219189625309039202LLU,14059105607947488696LLU}),jule::Array<jule::U64,2>({6523987031636299002LLU,17573882009934360870LLU}),jule::Array<jule::U64,2>({17912549950054850588LLU,10983676256208975543LLU}),jule::Array<jule::U64,2>({17779001419141175331LLU,13729595320261219429LLU}),jule::Array<jule::U64,2>({8388693718644305452LLU,17161994150326524287LLU}),jule::Array<jule::U64,2>({12160462601793772764LLU,10726246343954077679LLU}),jule::Array<jule::U64,2>({10588892233814828051LLU,13407807929942597099LLU}),jule::Array<jule::U64,2>({8624429273841147159LLU,16759759912428246374LLU}),jule::Array<jule::U64,2>({778582277723329070LLU,10474849945267653984LLU}),jule::Array<jule::U64,2>({973227847154161338LLU,13093562431584567480LLU}),jule::Array<jule::U64,2>({1216534808942701673LLU,16366953039480709350LLU}),jule::Array<jule::U64,2>({14595392310871352257LLU,10229345649675443343LLU}),jule::Array<jule::U64,2>({13632554370161802418LLU,12786682062094304179LLU}),jule::Array<jule::U64,2>({12429006944274865118LLU,15983352577617880224LLU}),jule::Array<jule::U64,2>({7768129340171790699LLU,9989595361011175140LLU}),jule::Array<jule::U64,2>({9710161675214738374LLU,12486994201263968925LLU}),jule::Array<jule::U64,2>({16749388112445810871LLU,15608742751579961156LLU}),jule::Array<jule::U64,2>({1244995533423855986LLU,9755464219737475723LLU}),jule::Array<jule::U64,2>({15391302472061983695LLU,12194330274671844653LLU}),jule::Array<jule::U64,2>({5404070034795315907LLU,15242912843339805817LLU}),jule::Array<jule::U64,2>({14906758817815542202LLU,9526820527087378635LLU}),jule::Array<jule::U64,2>({14021762503842039848LLU,11908525658859223294LLU}),jule::Array<jule::U64,2>({8303831092947774002LLU,14885657073574029118LLU}),jule::Array<jule::U64,2>({578208414664970847LLU,9303535670983768199LLU}),jule::Array<jule::U64,2>({14557818573613377271LLU,11629419588729710248LLU}),jule::Array<jule::U64,2>({18197273217016721589LLU,14536774485912137810LLU}),jule::Array<jule::U64,2>({13523219484416126178LLU,18170968107390172263LLU}),jule::Array<jule::U64,2>({15369541205401160717LLU,11356855067118857664LLU}),jule::Array<jule::U64,2>({765182433041899281LLU,14196068833898572081LLU}),jule::Array<jule::U64,2>({5568164059729762005LLU,17745086042373215101LLU}),jule::Array<jule::U64,2>({5785945546544795205LLU,11090678776483259438LLU}),jule::Array<jule::U64,2>({16455803970035769814LLU,13863348470604074297LLU}),jule::Array<jule::U64,2>({6734696907262548556LLU,17329185588255092872LLU}),jule::Array<jule::U64,2>({4209185567039092847LLU,10830740992659433045LLU}),jule::Array<jule::U64,2>({9873167977226253963LLU,13538426240824291306LLU}),jule::Array<jule::U64,2>({3118087934678041646LLU,16923032801030364133LLU}),jule::Array<jule::U64,2>({4254647968387469981LLU,10576895500643977583LLU}),jule::Array<jule::U64,2>({706623942056949572LLU,13221119375804971979LLU}),jule::Array<jule::U64,2>({14718337982853350677LLU,16526399219756214973LLU}),jule::Array<jule::U64,2>({11504804248497038125LLU,10328999512347634358LLU}),jule::Array<jule::U64,2>({5157633273766521849LLU,12911249390434542948LLU}),jule::Array<jule::U64,2>({6447041592208152311LLU,16139061738043178685LLU}),jule::Array<jule::U64,2>({6335244004343789146LLU,10086913586276986678LLU}),jule::Array<jule::U64,2>({17142427042284512241LLU,12608641982846233347LLU}),jule::Array<jule::U64,2>({16816347784428252397LLU,15760802478557791684LLU}),jule::Array<jule::U64,2>({1286845328412881940LLU,9850501549098619803LLU}),jule::Array<jule::U64,2>({15443614715798266137LLU,12313126936373274753LLU}),jule::Array<jule::U64,2>({5469460339465668959LLU,15391408670466593442LLU}),jule::Array<jule::U64,2>({8030098730593431003LLU,9619630419041620901LLU}),jule::Array<jule::U64,2>({14649309431669176658LLU,12024538023802026126LLU}),jule::Array<jule::U64,2>({9088264752731695015LLU,15030672529752532658LLU}),jule::Array<jule::U64,2>({10291851488884697288LLU,9394170331095332911LLU}),jule::Array<jule::U64,2>({8253128342678483706LLU,11742712913869166139LLU}),jule::Array<jule::U64,2>({5704724409920716729LLU,14678391142336457674LLU}),jule::Array<jule::U64,2>({16354277549255671720LLU,18347988927920572092LLU}),jule::Array<jule::U64,2>({998051431430019017LLU,11467493079950357558LLU}),jule::Array<jule::U64,2>({10470936326142299579LLU,14334366349937946947LLU}),jule::Array<jule::U64,2>({8476984389250486570LLU,17917957937422433684LLU}),jule::Array<jule::U64,2>({14521487280136329914LLU,11198723710889021052LLU}),jule::Array<jule::U64,2>({18151859100170412392LLU,13998404638611276315LLU}),jule::Array<jule::U64,2>({18078137856785627587LLU,17498005798264095394LLU}),jule::Array<jule::U64,2>({15910522178918405146LLU,10936253623915059621LLU}),jule::Array<jule::U64,2>({6053094668365842720LLU,13670317029893824527LLU}),jule::Array<jule::U64,2>({2954682317029915496LLU,17087896287367280659LLU}),jule::Array<jule::U64,2>({17987577512639554849LLU,10679935179604550411LLU}),jule::Array<jule::U64,2>({17872785872372055657LLU,13349918974505688014LLU}),jule::Array<jule::U64,2>({13117610303610293764LLU,16687398718132110018LLU}),jule::Array<jule::U64,2>({12810192458183821506LLU,10429624198832568761LLU}),jule::Array<jule::U64,2>({2177682517447613171LLU,13037030248540710952LLU}),jule::Array<jule::U64,2>({2722103146809516464LLU,16296287810675888690LLU}),jule::Array<jule::U64,2>({6313000485183335694LLU,10185179881672430431LLU}),jule::Array<jule::U64,2>({3279564588051781713LLU,12731474852090538039LLU}),jule::Array<jule::U64,2>({17934513790346890853LLU,15914343565113172548LLU}),jule::Array<jule::U64,2>({1985699082112030975LLU,9946464728195732843LLU}),jule::Array<jule::U64,2>({16317181907922202431LLU,12433080910244666053LLU}),jule::Array<jule::U64,2>({6561419329620589327LLU,15541351137805832567LLU}),jule::Array<jule::U64,2>({11018416108653950185LLU,9713344461128645354LLU}),jule::Array<jule::U64,2>({4549648098962661924LLU,12141680576410806693LLU}),jule::Array<jule::U64,2>({10298746142130715309LLU,15177100720513508366LLU}),jule::Array<jule::U64,2>({1825030320404309164LLU,9485687950320942729LLU}),jule::Array<jule::U64,2>({6892973918932774359LLU,11857109937901178411LLU}),jule::Array<jule::U64,2>({4004531380238580045LLU,14821387422376473014LLU}),jule::Array<jule::U64,2>({16337890167931276240LLU,9263367138985295633LLU}),jule::Array<jule::U64,2>({6587304654631931588LLU,11579208923731619542LLU}),jule::Array<jule::U64,2>({17457502855144690293LLU,14474011154664524427LLU}),jule::Array<jule::U64,2>({17210192550503474962LLU,18092513943330655534LLU}),jule::Array<jule::U64,2>({6144684325637283947LLU,11307821214581659709LLU}),jule::Array<jule::U64,2>({12292541425473992838LLU,14134776518227074636LLU}),jule::Array<jule::U64,2>({15365676781842491048LLU,17668470647783843295LLU}),jule::Array<jule::U64,2>({16521077016292638761LLU,11042794154864902059LLU}),jule::Array<jule::U64,2>({16039660251938410547LLU,13803492693581127574LLU}),jule::Array<jule::U64,2>({10826203278068237376LLU,17254365866976409468LLU}),jule::Array<jule::U64,2>({15989749085647424168LLU,10783978666860255917LLU}),jule::Array<jule::U64,2>({6152128301777116498LLU,13479973333575319897LLU}),jule::Array<jule::U64,2>({12301846395648783526LLU,16849966666969149871LLU}),jule::Array<jule::U64,2>({14606183024921571560LLU,10531229166855718669LLU}),jule::Array<jule::U64,2>({4422670725869800738LLU,13164036458569648337LLU}),jule::Array<jule::U64,2>({10140024425764638826LLU,16455045573212060421LLU}),jule::Array<jule::U64,2>({8643358275316593218LLU,10284403483257537763LLU}),jule::Array<jule::U64,2>({6192511825718353619LLU,12855504354071922204LLU}),jule::Array<jule::U64,2>({7740639782147942024LLU,16069380442589902755LLU}),jule::Array<jule::U64,2>({2532056854628769813LLU,10043362776618689222LLU}),jule::Array<jule::U64,2>({12388443105140738074LLU,12554203470773361527LLU}),jule::Array<jule::U64,2>({10873867862998534689LLU,15692754338466701909LLU}),jule::Array<jule::U64,2>({9102010423587778132LLU,9807971461541688693LLU}),jule::Array<jule::U64,2>({15989199047912110569LLU,12259964326927110866LLU}),jule::Array<jule::U64,2>({10763126773035362404LLU,15324955408658888583LLU}),jule::Array<jule::U64,2>({13644483260788183358LLU,9578097130411805364LLU}),jule::Array<jule::U64,2>({17055604075985229198LLU,11972621413014756705LLU}),jule::Array<jule::U64,2>({7484447039699372786LLU,14965776766268445882LLU}),jule::Array<jule::U64,2>({9289465418239495895LLU,9353610478917778676LLU}),jule::Array<jule::U64,2>({11611831772799369869LLU,11692013098647223345LLU}),jule::Array<jule::U64,2>({679731660717048624LLU,14615016373309029182LLU}),jule::Array<jule::U64,2>({10073036612751086588LLU,18268770466636286477LLU}),jule::Array<jule::U64,2>({8601490892183123069LLU,11417981541647679048LLU}),jule::Array<jule::U64,2>({10751863615228903837LLU,14272476927059598810LLU}),jule::Array<jule::U64,2>({4216457482181353988LLU,17840596158824498513LLU}),jule::Array<jule::U64,2>({14164500972431816002LLU,11150372599265311570LLU}),jule::Array<jule::U64,2>({8482254178684994195LLU,13937965749081639463LLU}),jule::Array<jule::U64,2>({5991131704928854840LLU,17422457186352049329LLU}),jule::Array<jule::U64,2>({15273672361649004035LLU,10889035741470030830LLU}),jule::Array<jule::U64,2>({9868718415206479236LLU,13611294676837538538LLU}),jule::Array<jule::U64,2>({3112525982153323237LLU,17014118346046923173LLU}),jule::Array<jule::U64,2>({4251171748059520975LLU,10633823966279326983LLU}),jule::Array<jule::U64,2>({702278666647013314LLU,13292279957849158729LLU}),jule::Array<jule::U64,2>({5489534351736154547LLU,16615349947311448411LLU}),jule::Array<jule::U64,2>({1125115960621402640LLU,10384593717069655257LLU}),jule::Array<jule::U64,2>({6018080969204141204LLU,12980742146337069071LLU}),jule::Array<jule::U64,2>({2910915193077788601LLU,16225927682921336339LLU}),jule::Array<jule::U64,2>({17960223060169475539LLU,10141204801825835211LLU}),jule::Array<jule::U64,2>({17838592806784456520LLU,12676506002282294014LLU}),jule::Array<jule::U64,2>({13074868971625794843LLU,15845632502852867518LLU}),jule::Array<jule::U64,2>({3560107088838733872LLU,9903520314283042199LLU}),jule::Array<jule::U64,2>({18285191916330581053LLU,12379400392853802748LLU}),jule::Array<jule::U64,2>({4409745821703674700LLU,15474250491067253436LLU}),jule::Array<jule::U64,2>({11979463175419572495LLU,9671406556917033397LLU}),jule::Array<jule::U64,2>({1139270913992301907LLU,12089258196146291747LLU}),jule::Array<jule::U64,2>({15259146697772541096LLU,15111572745182864683LLU}),jule::Array<jule::U64,2>({7231123676894144233LLU,9444732965739290427LLU}),jule::Array<jule::U64,2>({4427218577690292387LLU,11805916207174113034LLU}),jule::Array<jule::U64,2>({14757395258967641292LLU,14757395258967641292LLU}),jule::Array<jule::U64,2>({0LLU,9223372036854775808LLU}),jule::Array<jule::U64,2>({0LLU,11529215046068469760LLU}),jule::Array<jule::U64,2>({0LLU,14411518807585587200LLU}),jule::Array<jule::U64,2>({0LLU,18014398509481984000LLU}),jule::Array<jule::U64,2>({0LLU,11258999068426240000LLU}),jule::Array<jule::U64,2>({0LLU,14073748835532800000LLU}),jule::Array<jule::U64,2>({0LLU,17592186044416000000LLU}),jule::Array<jule::U64,2>({0LLU,10995116277760000000LLU}),jule::Array<jule::U64,2>({0LLU,13743895347200000000LLU}),jule::Array<jule::U64,2>({0LLU,17179869184000000000LLU}),jule::Array<jule::U64,2>({0LLU,10737418240000000000LLU}),jule::Array<jule::U64,2>({0LLU,13421772800000000000LLU}),jule::Array<jule::U64,2>({0LLU,16777216000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10485760000000000000LLU}),jule::Array<jule::U64,2>({0LLU,13107200000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16384000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10240000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12800000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12500000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,15625000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,9765625000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12207031250000000000LLU}),jule::Array<jule::U64,2>({0LLU,15258789062500000000LLU}),jule::Array<jule::U64,2>({0LLU,9536743164062500000LLU}),jule::Array<jule::U64,2>({0LLU,11920928955078125000LLU}),jule::Array<jule::U64,2>({0LLU,14901161193847656250LLU}),jule::Array<jule::U64,2>({4611686018427387904LLU,9313225746154785156LLU}),jule::Array<jule::U64,2>({5764607523034234880LLU,11641532182693481445LLU}),jule::Array<jule::U64,2>({11817445422220181504LLU,14551915228366851806LLU}),jule::Array<jule::U64,2>({5548434740920451072LLU,18189894035458564758LLU}),jule::Array<jule::U64,2>({17302829768357445632LLU,11368683772161602973LLU}),jule::Array<jule::U64,2>({7793479155164643328LLU,14210854715202003717LLU}),jule::Array<jule::U64,2>({14353534962383192064LLU,17763568394002504646LLU}),jule::Array<jule::U64,2>({4359273333062107136LLU,11102230246251565404LLU}),jule::Array<jule::U64,2>({5449091666327633920LLU,13877787807814456755LLU}),jule::Array<jule::U64,2>({2199678564482154496LLU,17347234759768070944LLU}),jule::Array<jule::U64,2>({1374799102801346560LLU,10842021724855044340LLU}),jule::Array<jule::U64,2>({1718498878501683200LLU,13552527156068805425LLU}),jule::Array<jule::U64,2>({6759809616554491904LLU,16940658945086006781LLU}),jule::Array<jule::U64,2>({6530724019560251392LLU,10587911840678754238LLU}),jule::Array<jule::U64,2>({17386777061305090048LLU,13234889800848442797LLU}),jule::Array<jule::U64,2>({7898413271349198848LLU,16543612251060553497LLU}),jule::Array<jule::U64,2>({16465723340661719040LLU,10339757656912845935LLU}),jule::Array<jule::U64,2>({15970468157399760896LLU,12924697071141057419LLU}),jule::Array<jule::U64,2>({15351399178322313216LLU,16155871338926321774LLU}),jule::Array<jule::U64,2>({4982938468024057856LLU,10097419586828951109LLU}),jule::Array<jule::U64,2>({10840359103457460224LLU,12621774483536188886LLU}),jule::Array<jule::U64,2>({4327076842467049472LLU,15777218104420236108LLU}),jule::Array<jule::U64,2>({11927795063396681728LLU,9860761315262647567LLU}),jule::Array<jule::U64,2>({10298057810818464256LLU,12325951644078309459LLU}),jule::Array<jule::U64,2>({8260886245095692416LLU,15407439555097886824LLU}),jule::Array<jule::U64,2>({5163053903184807760LLU,9629649721936179265LLU}),jule::Array<jule::U64,2>({11065503397408397604LLU,12037062152420224081LLU}),jule::Array<jule::U64,2>({18443565265187884909LLU,15046327690525280101LLU}),jule::Array<jule::U64,2>({13833071299956122020LLU,9403954806578300063LLU}),jule::Array<jule::U64,2>({12679653106517764621LLU,11754943508222875079LLU}),jule::Array<jule::U64,2>({11237880364719817872LLU,14693679385278593849LLU}),jule::Array<jule::U64,2>({212292400617608628LLU,18367099231598242312LLU}),jule::Array<jule::U64,2>({132682750386005392LLU,11479437019748901445LLU}),jule::Array<jule::U64,2>({4777539456409894645LLU,14349296274686126806LLU}),jule::Array<jule::U64,2>({15195296357367144114LLU,17936620343357658507LLU}),jule::Array<jule::U64,2>({7191217214140771119LLU,11210387714598536567LLU}),jule::Array<jule::U64,2>({4377335499248575995LLU,14012984643248170709LLU}),jule::Array<jule::U64,2>({10083355392488107898LLU,17516230804060213386LLU}),jule::Array<jule::U64,2>({10913783138732455340LLU,10947644252537633366LLU}),jule::Array<jule::U64,2>({4418856886560793367LLU,13684555315672041708LLU}),jule::Array<jule::U64,2>({5523571108200991709LLU,17105694144590052135LLU}),jule::Array<jule::U64,2>({10369760970266701674LLU,10691058840368782584LLU}),jule::Array<jule::U64,2>({12962201212833377092LLU,13363823550460978230LLU}),jule::Array<jule::U64,2>({6979379479186945558LLU,16704779438076222788LLU}),jule::Array<jule::U64,2>({13585484211346616781LLU,10440487148797639242LLU}),jule::Array<jule::U64,2>({7758483227328495169LLU,13050608935997049053LLU}),jule::Array<jule::U64,2>({14309790052588006865LLU,16313261169996311316LLU}),jule::Array<jule::U64,2>({18166990819722280098LLU,10195788231247694572LLU}),jule::Array<jule::U64,2>({4261994450943298507LLU,12744735289059618216LLU}),jule::Array<jule::U64,2>({5327493063679123134LLU,15930919111324522770LLU}),jule::Array<jule::U64,2>({7941369183226839863LLU,9956824444577826731LLU}),jule::Array<jule::U64,2>({5315025460606161924LLU,12446030555722283414LLU}),jule::Array<jule::U64,2>({15867153862612478214LLU,15557538194652854267LLU}),jule::Array<jule::U64,2>({7611128154919104931LLU,9723461371658033917LLU}),jule::Array<jule::U64,2>({14125596212076269068LLU,12154326714572542396LLU}),jule::Array<jule::U64,2>({17656995265095336336LLU,15192908393215677995LLU}),jule::Array<jule::U64,2>({8729779031470891258LLU,9495567745759798747LLU}),jule::Array<jule::U64,2>({6300537770911226168LLU,11869459682199748434LLU}),jule::Array<jule::U64,2>({17099044250493808518LLU,14836824602749685542LLU}),jule::Array<jule::U64,2>({6075216638131242420LLU,9273015376718553464LLU}),jule::Array<jule::U64,2>({7594020797664053025LLU,11591269220898191830LLU}),jule::Array<jule::U64,2>({269153960225290473LLU,14489086526122739788LLU}),jule::Array<jule::U64,2>({336442450281613091LLU,18111358157653424735LLU}),jule::Array<jule::U64,2>({7127805559067090038LLU,11319598848533390459LLU}),jule::Array<jule::U64,2>({4298070930406474644LLU,14149498560666738074LLU}),jule::Array<jule::U64,2>({14595960699862869113LLU,17686873200833422592LLU}),jule::Array<jule::U64,2>({9122475437414293195LLU,11054295750520889120LLU}),jule::Array<jule::U64,2>({11403094296767866494LLU,13817869688151111400LLU}),jule::Array<jule::U64,2>({14253867870959833118LLU,17272337110188889250LLU}),jule::Array<jule::U64,2>({13520353437777283602LLU,10795210693868055781LLU}),jule::Array<jule::U64,2>({3065383741939440791LLU,13494013367335069727LLU}),jule::Array<jule::U64,2>({17666787732706464701LLU,16867516709168837158LLU}),jule::Array<jule::U64,2>({6430056314514152534LLU,10542197943230523224LLU}),jule::Array<jule::U64,2>({8037570393142690668LLU,13177747429038154030LLU}),jule::Array<jule::U64,2>({823590954573587527LLU,16472184286297692538LLU}),jule::Array<jule::U64,2>({5126430365035880108LLU,10295115178936057836LLU}),jule::Array<jule::U64,2>({6408037956294850135LLU,12868893973670072295LLU}),jule::Array<jule::U64,2>({3398361426941174765LLU,16086117467087590369LLU}),jule::Array<jule::U64,2>({13653190937906703988LLU,10053823416929743980LLU}),jule::Array<jule::U64,2>({17066488672383379985LLU,12567279271162179975LLU}),jule::Array<jule::U64,2>({16721424822051837077LLU,15709099088952724969LLU}),jule::Array<jule::U64,2>({3533361486141316317LLU,9818186930595453106LLU}),jule::Array<jule::U64,2>({13640073894531421205LLU,12272733663244316382LLU}),jule::Array<jule::U64,2>({7826720331309500698LLU,15340917079055395478LLU}),jule::Array<jule::U64,2>({280014188641050032LLU,9588073174409622174LLU}),jule::Array<jule::U64,2>({9573389772656088348LLU,11985091468012027717LLU}),jule::Array<jule::U64,2>({16578423234247498339LLU,14981364335015034646LLU}),jule::Array<jule::U64,2>({5749828502977298558LLU,9363352709384396654LLU}),jule::Array<jule::U64,2>({16410657665576399005LLU,11704190886730495817LLU}),jule::Array<jule::U64,2>({6678264026688335045LLU,14630238608413119772LLU}),jule::Array<jule::U64,2>({8347830033360418806LLU,18287798260516399715LLU}),jule::Array<jule::U64,2>({2911550761636567802LLU,11429873912822749822LLU}),jule::Array<jule::U64,2>({12862810488900485560LLU,14287342391028437277LLU}),jule::Array<jule::U64,2>({2243455055843443238LLU,17859177988785546597LLU}),jule::Array<jule::U64,2>({3708002419115845976LLU,11161986242990966623LLU}),jule::Array<jule::U64,2>({23317005467419566LLU,13952482803738708279LLU}),jule::Array<jule::U64,2>({13864204312116438170LLU,17440603504673385348LLU}),jule::Array<jule::U64,2>({17888499731927549664LLU,10900377190420865842LLU}),jule::Array<jule::U64,2>({13137252628054661272LLU,13625471488026082303LLU}),jule::Array<jule::U64,2>({11809879766640938686LLU,17031839360032602879LLU}),jule::Array<jule::U64,2>({14298703881791668535LLU,10644899600020376799LLU}),jule::Array<jule::U64,2>({13261693833812197764LLU,13306124500025470999LLU}),jule::Array<jule::U64,2>({11965431273837859301LLU,16632655625031838749LLU}),jule::Array<jule::U64,2>({9784237555362356015LLU,10395409765644899218LLU}),jule::Array<jule::U64,2>({3006924907348169211LLU,12994262207056124023LLU}),jule::Array<jule::U64,2>({17593714189467375226LLU,16242827758820155028LLU}),jule::Array<jule::U64,2>({1772699331562333708LLU,10151767349262596893LLU}),jule::Array<jule::U64,2>({6827560182880305039LLU,12689709186578246116LLU}),jule::Array<jule::U64,2>({8534450228600381299LLU,15862136483222807645LLU}),jule::Array<jule::U64,2>({7639874402088932264LLU,9913835302014254778LLU}),jule::Array<jule::U64,2>({326470965756389522LLU,12392294127517818473LLU}),jule::Array<jule::U64,2>({5019774725622874806LLU,15490367659397273091LLU}),jule::Array<jule::U64,2>({831516194300602802LLU,9681479787123295682LLU}),jule::Array<jule::U64,2>({10262767279730529310LLU,12101849733904119602LLU}),jule::Array<jule::U64,2>({3605087062808385830LLU,15127312167380149503LLU}),jule::Array<jule::U64,2>({9170708441896323000LLU,9454570104612593439LLU}),jule::Array<jule::U64,2>({6851699533943015846LLU,11818212630765741799LLU}),jule::Array<jule::U64,2>({3952938399001381903LLU,14772765788457177249LLU}),jule::Array<jule::U64,2>({13999801545444333449LLU,9232978617785735780LLU}),jule::Array<jule::U64,2>({17499751931805416812LLU,11541223272232169725LLU}),jule::Array<jule::U64,2>({8039631859474607303LLU,14426529090290212157LLU}),jule::Array<jule::U64,2>({14661225842770647033LLU,18033161362862765196LLU}),jule::Array<jule::U64,2>({18386638188586430203LLU,11270725851789228247LLU}),jule::Array<jule::U64,2>({18371611717305649850LLU,14088407314736535309LLU}),jule::Array<jule::U64,2>({9129456591349898601LLU,17610509143420669137LLU}),jule::Array<jule::U64,2>({17235125415662156385LLU,11006568214637918210LLU}),jule::Array<jule::U64,2>({12320534732722919674LLU,13758210268297397763LLU}),jule::Array<jule::U64,2>({10788982397476261688LLU,17197762835371747204LLU}),jule::Array<jule::U64,2>({15966486035277439363LLU,10748601772107342002LLU}),jule::Array<jule::U64,2>({10734735507242023396LLU,13435752215134177503LLU}),jule::Array<jule::U64,2>({8806733365625141341LLU,16794690268917721879LLU}),jule::Array<jule::U64,2>({12421737381156795194LLU,10496681418073576174LLU}),jule::Array<jule::U64,2>({6303799689591218185LLU,13120851772591970218LLU}),jule::Array<jule::U64,2>({17103121648843798539LLU,16401064715739962772LLU}),jule::Array<jule::U64,2>({1466078993672598279LLU,10250665447337476733LLU}),jule::Array<jule::U64,2>({6444284760518135752LLU,12813331809171845916LLU}),jule::Array<jule::U64,2>({8055355950647669691LLU,16016664761464807395LLU}),jule::Array<jule::U64,2>({2728754459941099604LLU,10010415475915504622LLU}),jule::Array<jule::U64,2>({12634315111781150314LLU,12513019344894380777LLU}),jule::Array<jule::U64,2>({1957835834444274180LLU,15641274181117975972LLU}),jule::Array<jule::U64,2>({10447019433382447170LLU,9775796363198734982LLU}),jule::Array<jule::U64,2>({3835402254873283155LLU,12219745453998418728LLU}),jule::Array<jule::U64,2>({4794252818591603944LLU,15274681817498023410LLU}),jule::Array<jule::U64,2>({7608094030047140369LLU,9546676135936264631LLU}),jule::Array<jule::U64,2>({4898431519131537557LLU,11933345169920330789LLU}),jule::Array<jule::U64,2>({10734725417341809851LLU,14916681462400413486LLU}),jule::Array<jule::U64,2>({2097517367411243253LLU,9322925914000258429LLU}),jule::Array<jule::U64,2>({7233582727691441970LLU,11653657392500323036LLU}),jule::Array<jule::U64,2>({9041978409614302462LLU,14567071740625403795LLU}),jule::Array<jule::U64,2>({6690786993590490174LLU,18208839675781754744LLU}),jule::Array<jule::U64,2>({4181741870994056359LLU,11380524797363596715LLU}),jule::Array<jule::U64,2>({615491320315182544LLU,14225655996704495894LLU}),jule::Array<jule::U64,2>({9992736187248753989LLU,17782069995880619867LLU}),jule::Array<jule::U64,2>({3939617107816777291LLU,11113793747425387417LLU}),jule::Array<jule::U64,2>({9536207403198359517LLU,13892242184281734271LLU}),jule::Array<jule::U64,2>({7308573235570561493LLU,17365302730352167839LLU}),jule::Array<jule::U64,2>({11485387299872682789LLU,10853314206470104899LLU}),jule::Array<jule::U64,2>({9745048106413465582LLU,13566642758087631124LLU}),jule::Array<jule::U64,2>({12181310133016831978LLU,16958303447609538905LLU}),jule::Array<jule::U64,2>({695789805494438130LLU,10598939654755961816LLU}),jule::Array<jule::U64,2>({869737256868047663LLU,13248674568444952270LLU}),jule::Array<jule::U64,2>({10310543607939835386LLU,16560843210556190337LLU}),jule::Array<jule::U64,2>({17973304801030866876LLU,10350527006597618960LLU}),jule::Array<jule::U64,2>({4019886927579031980LLU,12938158758247023701LLU}),jule::Array<jule::U64,2>({9636544677901177879LLU,16172698447808779626LLU}),jule::Array<jule::U64,2>({10634526442115624078LLU,10107936529880487266LLU}),jule::Array<jule::U64,2>({4069786015789754290LLU,12634920662350609083LLU}),jule::Array<jule::U64,2>({475546501309804958LLU,15793650827938261354LLU}),jule::Array<jule::U64,2>({4908902581746016003LLU,9871031767461413346LLU}),jule::Array<jule::U64,2>({15359500264037295811LLU,12338789709326766682LLU}),jule::Array<jule::U64,2>({9976003293191843956LLU,15423487136658458353LLU}),jule::Array<jule::U64,2>({17764217104313372233LLU,9639679460411536470LLU}),jule::Array<jule::U64,2>({12981899343536939483LLU,12049599325514420588LLU}),jule::Array<jule::U64,2>({16227374179421174354LLU,15061999156893025735LLU}),jule::Array<jule::U64,2>({17059637889779315827LLU,9413749473058141084LLU}),jule::Array<jule::U64,2>({2877803288514593168LLU,11767186841322676356LLU}),jule::Array<jule::U64,2>({3597254110643241460LLU,14708983551653345445LLU}),jule::Array<jule::U64,2>({9108253656731439729LLU,18386229439566681806LLU}),jule::Array<jule::U64,2>({1080972517029761926LLU,11491393399729176129LLU}),jule::Array<jule::U64,2>({5962901664714590312LLU,14364241749661470161LLU}),jule::Array<jule::U64,2>({12065313099320625794LLU,17955302187076837701LLU}),jule::Array<jule::U64,2>({9846663696289085073LLU,11222063866923023563LLU}),jule::Array<jule::U64,2>({7696643601933968437LLU,14027579833653779454LLU}),jule::Array<jule::U64,2>({397432465562684739LLU,17534474792067224318LLU}),jule::Array<jule::U64,2>({14083453346258841674LLU,10959046745042015198LLU}),jule::Array<jule::U64,2>({8380944645968776284LLU,13698808431302518998LLU}),jule::Array<jule::U64,2>({1252808770606194547LLU,17123510539128148748LLU}),jule::Array<jule::U64,2>({10006377518483647400LLU,10702194086955092967LLU}),jule::Array<jule::U64,2>({7896285879677171346LLU,13377742608693866209LLU}),jule::Array<jule::U64,2>({14482043368023852087LLU,16722178260867332761LLU}),jule::Array<jule::U64,2>({2133748077373825698LLU,10451361413042082976LLU}),jule::Array<jule::U64,2>({2667185096717282123LLU,13064201766302603720LLU}),jule::Array<jule::U64,2>({3333981370896602653LLU,16330252207878254650LLU}),jule::Array<jule::U64,2>({6695424375237764562LLU,10206407629923909156LLU}),jule::Array<jule::U64,2>({8369280469047205703LLU,12758009537404886445LLU}),jule::Array<jule::U64,2>({15073286604736395033LLU,15947511921756108056LLU}),jule::Array<jule::U64,2>({9420804127960246895LLU,9967194951097567535LLU}),jule::Array<jule::U64,2>({7164319141522920715LLU,12458993688871959419LLU}),jule::Array<jule::U64,2>({4343712908476262990LLU,15573742111089949274LLU}),jule::Array<jule::U64,2>({7326506586225052273LLU,9733588819431218296LLU}),jule::Array<jule::U64,2>({9158133232781315341LLU,12166986024289022870LLU}),jule::Array<jule::U64,2>({2224294504121868368LLU,15208732530361278588LLU}),jule::Array<jule::U64,2>({10613556101930943538LLU,9505457831475799117LLU}),jule::Array<jule::U64,2>({17878631145841067327LLU,11881822289344748896LLU}),jule::Array<jule::U64,2>({3901544858591782542LLU,14852277861680936121LLU}),jule::Array<jule::U64,2>({13967680582688333849LLU,9282673663550585075LLU}),jule::Array<jule::U64,2>({12847914709933029407LLU,11603342079438231344LLU}),jule::Array<jule::U64,2>({16059893387416286759LLU,14504177599297789180LLU}),jule::Array<jule::U64,2>({1628122660560806833LLU,18130221999122236476LLU}),jule::Array<jule::U64,2>({10240948699705280078LLU,11331388749451397797LLU}),jule::Array<jule::U64,2>({17412871893058988002LLU,14164235936814247246LLU}),jule::Array<jule::U64,2>({12542717829468959195LLU,17705294921017809058LLU}),jule::Array<jule::U64,2>({12450884661845487401LLU,11065809325636130661LLU}),jule::Array<jule::U64,2>({1728547772024695539LLU,13832261657045163327LLU}),jule::Array<jule::U64,2>({15995742770313033136LLU,17290327071306454158LLU}),jule::Array<jule::U64,2>({5385653213018257806LLU,10806454419566533849LLU}),jule::Array<jule::U64,2>({11343752534700210161LLU,13508068024458167311LLU}),jule::Array<jule::U64,2>({9568004649947874797LLU,16885085030572709139LLU}),jule::Array<jule::U64,2>({3674159897003727796LLU,10553178144107943212LLU}),jule::Array<jule::U64,2>({4592699871254659745LLU,13191472680134929015LLU}),jule::Array<jule::U64,2>({1129188820640936778LLU,16489340850168661269LLU}),jule::Array<jule::U64,2>({3011586022114279438LLU,10305838031355413293LLU}),jule::Array<jule::U64,2>({8376168546070237202LLU,12882297539194266616LLU}),jule::Array<jule::U64,2>({10470210682587796502LLU,16102871923992833270LLU}),jule::Array<jule::U64,2>({1932195658189984910LLU,10064294952495520794LLU}),jule::Array<jule::U64,2>({11638616609592256945LLU,12580368690619400992LLU}),jule::Array<jule::U64,2>({14548270761990321182LLU,15725460863274251240LLU}),jule::Array<jule::U64,2>({9092669226243950738LLU,9828413039546407025LLU}),jule::Array<jule::U64,2>({15977522551232326327LLU,12285516299433008781LLU}),jule::Array<jule::U64,2>({6136845133758244197LLU,15356895374291260977LLU}),jule::Array<jule::U64,2>({15364743254667372383LLU,9598059608932038110LLU}),jule::Array<jule::U64,2>({9982557031479439671LLU,11997574511165047638LLU}),jule::Array<jule::U64,2>({3254824252494523781LLU,14996968138956309548LLU}),jule::Array<jule::U64,2>({11257637194663853171LLU,9373105086847693467LLU}),jule::Array<jule::U64,2>({9460360474902428559LLU,11716381358559616834LLU}),jule::Array<jule::U64,2>({2602078556773259891LLU,14645476698199521043LLU}),jule::Array<jule::U64,2>({17087656251248738576LLU,18306845872749401303LLU}),jule::Array<jule::U64,2>({17597314184671543466LLU,11441778670468375814LLU}),jule::Array<jule::U64,2>({12773270693984653525LLU,14302223338085469768LLU}),jule::Array<jule::U64,2>({15966588367480816906LLU,17877779172606837210LLU}),jule::Array<jule::U64,2>({14590803748102898470LLU,11173611982879273256LLU}),jule::Array<jule::U64,2>({18238504685128623088LLU,13967014978599091570LLU}),jule::Array<jule::U64,2>({13574758819556003052LLU,17458768723248864463LLU}),jule::Array<jule::U64,2>({15401753289863583763LLU,10911730452030540289LLU}),jule::Array<jule::U64,2>({5417133557047315992LLU,13639663065038175362LLU}),jule::Array<jule::U64,2>({15994788983163920798LLU,17049578831297719202LLU}),jule::Array<jule::U64,2>({14608429132904838403LLU,10655986769561074501LLU}),jule::Array<jule::U64,2>({4425478360848884291LLU,13319983461951343127LLU}),jule::Array<jule::U64,2>({920161932633717460LLU,16649979327439178909LLU}),jule::Array<jule::U64,2>({2880944217109767365LLU,10406237079649486818LLU}),jule::Array<jule::U64,2>({12824552308241985014LLU,13007796349561858522LLU}),jule::Array<jule::U64,2>({6807318348447705459LLU,16259745436952323153LLU}),jule::Array<jule::U64,2>({15783789013848285672LLU,10162340898095201970LLU}),jule::Array<jule::U64,2>({10506364230455581282LLU,12702926122619002463LLU}),jule::Array<jule::U64,2>({8521269269642088699LLU,15878657653273753079LLU}),jule::Array<jule::U64,2>({12243322321167387293LLU,9924161033296095674LLU}),jule::Array<jule::U64,2>({6080780864604458308LLU,12405201291620119593LLU}),jule::Array<jule::U64,2>({12212662099182960789LLU,15506501614525149491LLU}),jule::Array<jule::U64,2>({5327070802775656541LLU,9691563509078218432LLU}),jule::Array<jule::U64,2>({6658838503469570676LLU,12114454386347773040LLU}),jule::Array<jule::U64,2>({8323548129336963345LLU,15143067982934716300LLU}),jule::Array<jule::U64,2>({14425589617690377899LLU,9464417489334197687LLU}),jule::Array<jule::U64,2>({13420301003685584469LLU,11830521861667747109LLU}),jule::Array<jule::U64,2>({2940318199324816875LLU,14788152327084683887LLU}),jule::Array<jule::U64,2>({8755227902219092403LLU,9242595204427927429LLU}),jule::Array<jule::U64,2>({15555720896201253407LLU,11553244005534909286LLU}),jule::Array<jule::U64,2>({10221279083396790951LLU,14441555006918636608LLU}),jule::Array<jule::U64,2>({12776598854245988689LLU,18051943758648295760LLU}),jule::Array<jule::U64,2>({7985374283903742931LLU,11282464849155184850LLU}),jule::Array<jule::U64,2>({758345818024902856LLU,14103081061443981063LLU}),jule::Array<jule::U64,2>({14782990327813292282LLU,17628851326804976328LLU}),jule::Array<jule::U64,2>({9239368954883307676LLU,11018032079253110205LLU}),jule::Array<jule::U64,2>({16160897212031522499LLU,13772540099066387756LLU}),jule::Array<jule::U64,2>({1754377441329851508LLU,17215675123832984696LLU}),jule::Array<jule::U64,2>({1096485900831157192LLU,10759796952395615435LLU}),jule::Array<jule::U64,2>({15205665431321110202LLU,13449746190494519293LLU}),jule::Array<jule::U64,2>({5172023733869224041LLU,16812182738118149117LLU}),jule::Array<jule::U64,2>({5538357842881958977LLU,10507614211323843198LLU}),jule::Array<jule::U64,2>({16146319340457224530LLU,13134517764154803997LLU}),jule::Array<jule::U64,2>({6347841120289366950LLU,16418147205193504997LLU}),jule::Array<jule::U64,2>({6273243709394548296LLU,10261342003245940623LLU}),jule::Array<jule::U64,2>({3229868618315797466LLU,12826677504057425779LLU}),jule::Array<jule::U64,2>({17872393828176910545LLU,16033346880071782223LLU}),jule::Array<jule::U64,2>({18087775170251650946LLU,10020841800044863889LLU}),jule::Array<jule::U64,2>({8774660907532399971LLU,12526052250056079862LLU}),jule::Array<jule::U64,2>({1744954097560724156LLU,15657565312570099828LLU}),jule::Array<jule::U64,2>({10313968347830228405LLU,9785978320356312392LLU}),jule::Array<jule::U64,2>({12892460434787785506LLU,12232472900445390490LLU}),jule::Array<jule::U64,2>({6892203506629956075LLU,15290591125556738113LLU}),jule::Array<jule::U64,2>({15836842237712192307LLU,9556619453472961320LLU}),jule::Array<jule::U64,2>({1349308723430688768LLU,11945774316841201651LLU}),jule::Array<jule::U64,2>({15521693959570524672LLU,14932217896051502063LLU}),jule::Array<jule::U64,2>({16618587752372659776LLU,9332636185032188789LLU}),jule::Array<jule::U64,2>({6938176635183661008LLU,11665795231290235987LLU}),jule::Array<jule::U64,2>({4061034775552188356LLU,14582244039112794984LLU}),jule::Array<jule::U64,2>({5076293469440235445LLU,18227805048890993730LLU}),jule::Array<jule::U64,2>({7784369436827535057LLU,11392378155556871081LLU}),jule::Array<jule::U64,2>({14342147814461806725LLU,14240472694446088851LLU}),jule::Array<jule::U64,2>({13315998749649870503LLU,17800590868057611064LLU}),jule::Array<jule::U64,2>({8322499218531169064LLU,11125369292536006915LLU}),jule::Array<jule::U64,2>({5791438004736573426LLU,13906711615670008644LLU}),jule::Array<jule::U64,2>({7239297505920716783LLU,17383389519587510805LLU}),jule::Array<jule::U64,2>({6830403950414141941LLU,10864618449742194253LLU}),jule::Array<jule::U64,2>({13149690956445065330LLU,13580773062177742816LLU}),jule::Array<jule::U64,2>({16437113695556331663LLU,16975966327722178520LLU}),jule::Array<jule::U64,2>({10273196059722707289LLU,10609978954826361575LLU}),jule::Array<jule::U64,2>({8229809056225996208LLU,13262473693532951969LLU}),jule::Array<jule::U64,2>({14898947338709883164LLU,16578092116916189961LLU}),jule::Array<jule::U64,2>({2394313059052595121LLU,10361307573072618726LLU}),jule::Array<jule::U64,2>({12216263360670519709LLU,12951634466340773407LLU}),jule::Array<jule::U64,2>({10658643182410761733LLU,16189543082925966759LLU}),jule::Array<jule::U64,2>({13579181016647807939LLU,10118464426828729224LLU}),jule::Array<jule::U64,2>({16973976270809759924LLU,12648080533535911530LLU}),jule::Array<jule::U64,2>({11994098301657424097LLU,15810100666919889413LLU}),jule::Array<jule::U64,2>({9802154447749584012LLU,9881312916824930883LLU}),jule::Array<jule::U64,2>({7641007041259592112LLU,12351641146031163604LLU}),jule::Array<jule::U64,2>({9551258801574490140LLU,15439551432538954505LLU}),jule::Array<jule::U64,2>({17498751797052526097LLU,9649719645336846565LLU}),jule::Array<jule::U64,2>({8038381691033493909LLU,12062149556671058207LLU}),jule::Array<jule::U64,2>({5436291095364479483LLU,15077686945838822759LLU})});
jule::Slice<jule::I64> _1d43050dd_powtab = jule::Slice<jule::I64>::make({1LL,3LL,6LL,9LL,13LL,16LL,19LL,23LL,26LL});
jule::Slice<jule::F64> _1d4305bb0_f64pow10 = jule::Slice<jule::F64>::make({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0});
jule::Slice<jule::F32> _1d4306001_f32pow10 = jule::Slice<jule::F32>::make({1.0f,10.0f,100.0f,1000.0f,10000.0f,100000.0f,1000000.0f,10000000.0f,100000000.0f,1000000000.0f,10000000000.0f});
jule::Array<jule::U64,20> _1d4309268_u64pow10 = jule::Array<jule::U64,20>({1LLU,10LLU,100LLU,1000LLU,10000LLU,100000LLU,1000000LLU,10000000LLU,100000000LLU,1000000000LLU,10000000000LLU,100000000000LLU,1000000000000LLU,10000000000000LLU,100000000000000LLU,1000000000000000LLU,10000000000000000LLU,100000000000000000LLU,1000000000000000000LLU,10000000000000000000LLU});
jule::Slice<_1d430d03b_leftCheat> _1d430d46a_leftCheats = jule::Slice<_1d430d03b_leftCheat>::make({_1d430d03b_leftCheat{._field_delta=0LL, ._field_cutoff=jule::Str()},_1d430d03b_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("5", 1)},_1d430d03b_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("25", 2)},_1d430d03b_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("125", 3)},_1d430d03b_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("625", 3)},_1d430d03b_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("3125", 4)},_1d430d03b_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("15625", 5)},_1d430d03b_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("78125", 5)},_1d430d03b_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("390625", 6)},_1d430d03b_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("1953125", 7)},_1d430d03b_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("9765625", 7)},_1d430d03b_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("48828125", 8)},_1d430d03b_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("244140625", 9)},_1d430d03b_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("1220703125", 10)},_1d430d03b_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("6103515625", 10)},_1d430d03b_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("30517578125", 11)},_1d430d03b_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("152587890625", 12)},_1d430d03b_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("762939453125", 12)},_1d430d03b_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("3814697265625", 13)},_1d430d03b_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("19073486328125", 14)},_1d430d03b_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("95367431640625", 14)},_1d430d03b_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("476837158203125", 15)},_1d430d03b_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("2384185791015625", 16)},_1d430d03b_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("11920928955078125", 17)},_1d430d03b_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("59604644775390625", 17)},_1d430d03b_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("298023223876953125", 18)},_1d430d03b_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("1490116119384765625", 19)},_1d430d03b_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("7450580596923828125", 19)},_1d430d03b_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("37252902984619140625", 20)},_1d430d03b_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("186264514923095703125", 21)},_1d430d03b_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("931322574615478515625", 21)},_1d430d03b_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("4656612873077392578125", 22)},_1d430d03b_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("23283064365386962890625", 23)},_1d430d03b_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("116415321826934814453125", 24)},_1d430d03b_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("582076609134674072265625", 24)},_1d430d03b_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("2910383045673370361328125", 25)},_1d430d03b_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("14551915228366851806640625", 26)},_1d430d03b_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("72759576141834259033203125", 26)},_1d430d03b_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("363797880709171295166015625", 27)},_1d430d03b_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("1818989403545856475830078125", 28)},_1d430d03b_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("9094947017729282379150390625", 28)},_1d430d03b_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("45474735088646411895751953125", 29)},_1d430d03b_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("227373675443232059478759765625", 30)},_1d430d03b_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("1136868377216160297393798828125", 31)},_1d430d03b_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("5684341886080801486968994140625", 31)},_1d430d03b_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("28421709430404007434844970703125", 32)},_1d430d03b_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("142108547152020037174224853515625", 33)},_1d430d03b_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("710542735760100185871124267578125", 33)},_1d430d03b_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("3552713678800500929355621337890625", 34)},_1d430d03b_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("17763568394002504646778106689453125", 35)},_1d430d03b_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("88817841970012523233890533447265625", 35)},_1d430d03b_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("444089209850062616169452667236328125", 36)},_1d430d03b_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("2220446049250313080847263336181640625", 37)},_1d430d03b_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("11102230246251565404236316680908203125", 38)},_1d430d03b_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("55511151231257827021181583404541015625", 38)},_1d430d03b_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("277555756156289135105907917022705078125", 39)},_1d430d03b_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("1387778780781445675529539585113525390625", 40)},_1d430d03b_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("6938893903907228377647697925567626953125", 40)},_1d430d03b_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("34694469519536141888238489627838134765625", 41)},_1d430d03b_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("173472347597680709441192448139190673828125", 42)},_1d430d03b_leftCheat{._field_delta=19LL, ._field_cutoff=jule::Str::lit("867361737988403547205962240695953369140625", 42)}});
jule::I64 _1d4314493_BitSize = 0LL;
jule::Str _1d4314790_SysInt = jule::Str();
jule::Str _1d4314a59_SysUint = jule::Str();
jule::Array<jule::I32,5> _1e0483edb_Spaces = jule::Array<jule::I32,5>({' ','\t','\v','\r','\n'});
jule::Array<jule::U64,6> _1e04842d8_UnaryOps = jule::Array<jule::U64,6>({static_cast<jule::U64>(61LLU),static_cast<jule::U64>(60LLU),static_cast<jule::U64>(67LLU),static_cast<jule::U64>(68LLU),static_cast<jule::U64>(62LLU),static_cast<jule::U64>(65LLU)});
jule::Array<jule::U64,18> _1d64ceb9a_BinOps = jule::Array<jule::U64,18>({static_cast<jule::U64>(60LLU),static_cast<jule::U64>(61LLU),static_cast<jule::U64>(62LLU),static_cast<jule::U64>(63LLU),static_cast<jule::U64>(64LLU),static_cast<jule::U64>(65LLU),static_cast<jule::U64>(66LLU),static_cast<jule::U64>(67LLU),static_cast<jule::U64>(56LLU),static_cast<jule::U64>(57LLU),static_cast<jule::U64>(69LLU),static_cast<jule::U64>(70LLU),static_cast<jule::U64>(53LLU),static_cast<jule::U64>(52LLU),static_cast<jule::U64>(54LLU),static_cast<jule::U64>(55LLU),static_cast<jule::U64>(50LLU),static_cast<jule::U64>(51LLU)});
jule::Array<jule::U64,2> _1d64d0294_PostfixOps = jule::Array<jule::U64,2>({static_cast<jule::U64>(58LLU),static_cast<jule::U64>(59LLU)});
jule::Array<jule::U64,11> _1d64d0591_AssignOps = jule::Array<jule::U64,11>({static_cast<jule::U64>(71LLU),static_cast<jule::U64>(40LLU),static_cast<jule::U64>(41LLU),static_cast<jule::U64>(43LLU),static_cast<jule::U64>(42LLU),static_cast<jule::U64>(44LLU),static_cast<jule::U64>(46LLU),static_cast<jule::U64>(45LLU),static_cast<jule::U64>(49LLU),static_cast<jule::U64>(48LLU),static_cast<jule::U64>(47LLU)});
jule::Array<_1d64dd6c0_kindPair,28> _1d64ddaee_keywords = jule::Array<_1d64dd6c0_kindPair,28>({_1d64dd6c0_kindPair{._field_kind=jule::Str::lit("const", 5), ._field_id=static_cast<jule::U64>(6LLU)},_1d64dd6c0_kindPair{._field_kind=jule::Str::lit("ret", 3), ._field_id=static_cast<jule::U64>(2LLU)},_1d64dd6c0_kindPair{._field_kind=jule::Str::lit("type", 4), ._field_id=static_cast<jule::U64>(7LLU)},_1d64dd6c0_kindPair{._field_kind=jule::Str::lit("for", 3), ._field_id=static_cast<jule::U64>(9LLU)},_1d64dd6c0_kindPair{._field_kind=jule::Str::lit("break", 5), ._field_id=static_cast<jule::U64>(10LLU)},_1d64dd6c0_kindPair{._field_kind=jule::Str::lit("continue", 8), ._field_id=static_cast<jule::U64>(11LLU)},_1d64dd6c0_kindPair{._field_kind=jule::Str::lit("in", 2), ._field_id=static_cast<jule::U64>(12LLU)},_1d64dd6c0_kindPair{._field_kind=jule::Str::lit("if", 2), ._field_id=static_cast<jule::U64>(13LLU)},_1d64dd6c0_kindPair{._field_kind=jule::Str::lit("else", 4), ._field_id=static_cast<jule::U64>(14LLU)},_1d64dd6c0_kindPair{._field_kind=jule::Str::lit("use", 3), ._field_id=static_cast<jule::U64>(16LLU)},_1d64dd6c0_kindPair{._field_kind=jule::Str::lit("goto", 4), ._field_id=static_cast<jule::U64>(18LLU)},_1d64dd6c0_kindPair{._field_kind=jule::Str::lit("enum", 4), ._field_id=static_cast<jule::U64>(20LLU)},_1d64dd6c0_kindPair{._field_kind=jule::Str::lit("struct", 6), ._field_id=static_cast<jule::U64>(21LLU)},_1d64dd6c0_kindPair{._field_kind=jule::Str::lit("co", 2), ._field_id=static_cast<jule::U64>(22LLU)},_1d64dd6c0_kindPair{._field_kind=jule::Str::lit("match", 5), ._field_id=static_cast<jule::U64>(23LLU)},_1d64dd6c0_kindPair{._field_kind=jule::Str::lit("self", 4), ._field_id=static_cast<jule::U64>(24LLU)},_1d64dd6c0_kindPair{._field_kind=jule::Str::lit("trait", 5), ._field_id=static_cast<jule::U64>(25LLU)},_1d64dd6c0_kindPair{._field_kind=jule::Str::lit("impl", 4), ._field_id=static_cast<jule::U64>(26LLU)},_1d64dd6c0_kindPair{._field_kind=jule::Str::lit("cpp", 3), ._field_id=static_cast<jule::U64>(27LLU)},_1d64dd6c0_kindPair{._field_kind=jule::Str::lit("fall", 4), ._field_id=static_cast<jule::U64>(28LLU)},_1d64dd6c0_kindPair{._field_kind=jule::Str::lit("fn", 2), ._field_id=static_cast<jule::U64>(29LLU)},_1d64dd6c0_kindPair{._field_kind=jule::Str::lit("let", 3), ._field_id=static_cast<jule::U64>(30LLU)},_1d64dd6c0_kindPair{._field_kind=jule::Str::lit("unsafe", 6), ._field_id=static_cast<jule::U64>(31LLU)},_1d64dd6c0_kindPair{._field_kind=jule::Str::lit("mut", 3), ._field_id=static_cast<jule::U64>(32LLU)},_1d64dd6c0_kindPair{._field_kind=jule::Str::lit("defer", 5), ._field_id=static_cast<jule::U64>(33LLU)},_1d64dd6c0_kindPair{._field_kind=jule::Str::lit("static", 6), ._field_id=static_cast<jule::U64>(34LLU)},_1d64dd6c0_kindPair{._field_kind=jule::Str::lit("error", 5), ._field_id=static_cast<jule::U64>(36LLU)},_1d64dd6c0_kindPair{._field_kind=jule::Str::lit("map", 3), ._field_id=static_cast<jule::U64>(37LLU)}});
jule::Array<_1d64dd6c0_kindPair,46> _1d64dde40_basicOps = jule::Array<_1d64dd6c0_kindPair,46>({_1d64dd6c0_kindPair{._field_kind=jule::Str::lit("::", 2), ._field_id=static_cast<jule::U64>(19LLU)},_1d64dd6c0_kindPair{._field_kind=jule::Str::lit(":=", 2), ._field_id=static_cast<jule::U64>(38LLU)},_1d64dd6c0_kindPair{._field_kind=jule::Str::lit(":", 1), ._field_id=static_cast<jule::U64>(8LLU)},_1d64dd6c0_kindPair{._field_kind=jule::Str::lit(";", 1), ._field_id=static_cast<jule::U64>(3LLU)},_1d64dd6c0_kindPair{._field_kind=jule::Str::lit(",", 1), ._field_id=static_cast<jule::U64>(5LLU)},_1d64dd6c0_kindPair{._field_kind=jule::Str::lit("...", 3), ._field_id=static_cast<jule::U64>(39LLU)},_1d64dd6c0_kindPair{._field_kind=jule::Str::lit(".", 1), ._field_id=static_cast<jule::U64>(17LLU)},_1d64dd6c0_kindPair{._field_kind=jule::Str::lit("+=", 2), ._field_id=static_cast<jule::U64>(40LLU)},_1d64dd6c0_kindPair{._field_kind=jule::Str::lit("-=", 2), ._field_id=static_cast<jule::U64>(41LLU)},_1d64dd6c0_kindPair{._field_kind=jule::Str::lit("*=", 2), ._field_id=static_cast<jule::U64>(42LLU)},_1d64dd6c0_kindPair{._field_kind=jule::Str::lit("/=", 2), ._field_id=static_cast<jule::U64>(43LLU)},_1d64dd6c0_kindPair{._field_kind=jule::Str::lit("%=", 2), ._field_id=static_cast<jule::U64>(44LLU)},_1d64dd6c0_kindPair{._field_kind=jule::Str::lit("<<=", 3), ._field_id=static_cast<jule::U64>(45LLU)},_1d64dd6c0_kindPair{._field_kind=jule::Str::lit(">>=", 3), ._field_id=static_cast<jule::U64>(46LLU)},_1d64dd6c0_kindPair{._field_kind=jule::Str::lit("^=", 2), ._field_id=static_cast<jule::U64>(47LLU)},_1d64dd6c0_kindPair{._field_kind=jule::Str::lit("&=", 2), ._field_id=static_cast<jule::U64>(48LLU)},_1d64dd6c0_kindPair{._field_kind=jule::Str::lit("|=", 2), ._field_id=static_cast<jule::U64>(49LLU)},_1d64dd6c0_kindPair{._field_kind=jule::Str::lit("==", 2), ._field_id=static_cast<jule::U64>(50LLU)},_1d64dd6c0_kindPair{._field_kind=jule::Str::lit("!=", 2), ._field_id=static_cast<jule::U64>(51LLU)},_1d64dd6c0_kindPair{._field_kind=jule::Str::lit(">=", 2), ._field_id=static_cast<jule::U64>(52LLU)},_1d64dd6c0_kindPair{._field_kind=jule::Str::lit("<=", 2), ._field_id=static_cast<jule::U64>(53LLU)},_1d64dd6c0_kindPair{._field_kind=jule::Str::lit("&&", 2), ._field_id=static_cast<jule::U64>(54LLU)},_1d64dd6c0_kindPair{._field_kind=jule::Str::lit("||", 2), ._field_id=static_cast<jule::U64>(55LLU)},_1d64dd6c0_kindPair{._field_kind=jule::Str::lit("<<", 2), ._field_id=static_cast<jule::U64>(56LLU)},_1d64dd6c0_kindPair{._field_kind=jule::Str::lit(">>", 2), ._field_id=static_cast<jule::U64>(57LLU)},_1d64dd6c0_kindPair{._field_kind=jule::Str::lit("++", 2), ._field_id=static_cast<jule::U64>(58LLU)},_1d64dd6c0_kindPair{._field_kind=jule::Str::lit("--", 2), ._field_id=static_cast<jule::U64>(59LLU)},_1d64dd6c0_kindPair{._field_kind=jule::Str::lit("+", 1), ._field_id=static_cast<jule::U64>(60LLU)},_1d64dd6c0_kindPair{._field_kind=jule::Str::lit("-", 1), ._field_id=static_cast<jule::U64>(61LLU)},_1d64dd6c0_kindPair{._field_kind=jule::Str::lit("*", 1), ._field_id=static_cast<jule::U64>(62LLU)},_1d64dd6c0_kindPair{._field_kind=jule::Str::lit("/", 1), ._field_id=static_cast<jule::U64>(63LLU)},_1d64dd6c0_kindPair{._field_kind=jule::Str::lit("%", 1), ._field_id=static_cast<jule::U64>(64LLU)},_1d64dd6c0_kindPair{._field_kind=jule::Str::lit("&", 1), ._field_id=static_cast<jule::U64>(65LLU)},_1d64dd6c0_kindPair{._field_kind=jule::Str::lit("|", 1), ._field_id=static_cast<jule::U64>(66LLU)},_1d64dd6c0_kindPair{._field_kind=jule::Str::lit("^", 1), ._field_id=static_cast<jule::U64>(67LLU)},_1d64dd6c0_kindPair{._field_kind=jule::Str::lit("!", 1), ._field_id=static_cast<jule::U64>(68LLU)},_1d64dd6c0_kindPair{._field_kind=jule::Str::lit("<", 1), ._field_id=static_cast<jule::U64>(69LLU)},_1d64dd6c0_kindPair{._field_kind=jule::Str::lit(">", 1), ._field_id=static_cast<jule::U64>(70LLU)},_1d64dd6c0_kindPair{._field_kind=jule::Str::lit("=", 1), ._field_id=static_cast<jule::U64>(71LLU)},_1d64dd6c0_kindPair{._field_kind=jule::Str::lit("#", 1), ._field_id=static_cast<jule::U64>(35LLU)},_1d64dd6c0_kindPair{._field_kind=jule::Str::lit("{", 1), ._field_id=static_cast<jule::U64>(72LLU)},_1d64dd6c0_kindPair{._field_kind=jule::Str::lit("}", 1), ._field_id=static_cast<jule::U64>(73LLU)},_1d64dd6c0_kindPair{._field_kind=jule::Str::lit("[", 1), ._field_id=static_cast<jule::U64>(76LLU)},_1d64dd6c0_kindPair{._field_kind=jule::Str::lit("]", 1), ._field_id=static_cast<jule::U64>(77LLU)},_1d64dd6c0_kindPair{._field_kind=jule::Str::lit("(", 1), ._field_id=static_cast<jule::U64>(74LLU)},_1d64dd6c0_kindPair{._field_kind=jule::Str::lit(")", 1), ._field_id=static_cast<jule::U64>(75LLU)}});
jule::Slice<jule::Str> _1d656b022_builtinConstraints = jule::Slice<jule::Str>::make({jule::Str::lit("signed", 6),jule::Str::lit("unsigned", 8),jule::Str::lit("float", 5),jule::Str::lit("numeric", 7),jule::Str::lit("mutable", 7),jule::Str::lit("immutable", 9),jule::Str::lit("ordered", 7),jule::Str::lit("comparable", 10)});
jule::Ptr<_1d6677a35_TypeKind> _1d6759991_primNil = jule::new_ptr<_1d6677a35_TypeKind>(_1d6677a35_TypeKind{._field_Kind=nullptr});
jule::Ptr<_1d6677a35_TypeKind> _1d6759c9e_primVoid = jule::new_ptr<_1d6677a35_TypeKind>(_1d6677a35_TypeKind{._field_Kind=jule::Trait<_1d667757e_Kind>(_1d6694953_buildPrimType(jule::Str::lit("void", 4)), 20)});
jule::Ptr<_1d6677a35_TypeKind> _1d675a068_primAny = jule::new_ptr<_1d6677a35_TypeKind>(_1d6677a35_TypeKind{._field_Kind=jule::Trait<_1d667757e_Kind>(_1d6694953_buildPrimType(jule::Str::lit("any", 3)), 20)});
jule::Ptr<_1d6677a35_TypeKind> _1d675a376_primStr = jule::new_ptr<_1d6677a35_TypeKind>(_1d6677a35_TypeKind{._field_Kind=jule::Trait<_1d667757e_Kind>(_1d6694953_buildPrimType(jule::Str::lit("str", 3)), 20)});
jule::Ptr<_1d6677a35_TypeKind> _1d675a640_primBool = jule::new_ptr<_1d6677a35_TypeKind>(_1d6677a35_TypeKind{._field_Kind=jule::Trait<_1d667757e_Kind>(_1d6694953_buildPrimType(jule::Str::lit("bool", 4)), 20)});
jule::Ptr<_1d6677a35_TypeKind> _1d675a909_primUintptr = jule::new_ptr<_1d6677a35_TypeKind>(_1d6677a35_TypeKind{._field_Kind=jule::Trait<_1d667757e_Kind>(_1d6694953_buildPrimType(jule::Str::lit("uintptr", 7)), 20)});
jule::Ptr<_1d6677a35_TypeKind> _1d675abc3_primUint = jule::new_ptr<_1d6677a35_TypeKind>(_1d6677a35_TypeKind{._field_Kind=jule::Trait<_1d667757e_Kind>(_1d6694953_buildPrimType(jule::Str::lit("uint", 4)), 20)});
jule::Ptr<_1d6677a35_TypeKind> _1d675b09c_primInt = jule::new_ptr<_1d6677a35_TypeKind>(_1d6677a35_TypeKind{._field_Kind=jule::Trait<_1d667757e_Kind>(_1d6694953_buildPrimType(jule::Str::lit("int", 3)), 20)});
jule::Ptr<_1d6677a35_TypeKind> _1d675b366_primI8 = jule::new_ptr<_1d6677a35_TypeKind>(_1d6677a35_TypeKind{._field_Kind=jule::Trait<_1d667757e_Kind>(_1d6694953_buildPrimType(jule::Str::lit("i8", 2)), 20)});
jule::Ptr<_1d6677a35_TypeKind> _1d675b630_primI16 = jule::new_ptr<_1d6677a35_TypeKind>(_1d6677a35_TypeKind{._field_Kind=jule::Trait<_1d667757e_Kind>(_1d6694953_buildPrimType(jule::Str::lit("i16", 3)), 20)});
jule::Ptr<_1d6677a35_TypeKind> _1d675b8e9_primI32 = jule::new_ptr<_1d6677a35_TypeKind>(_1d6677a35_TypeKind{._field_Kind=jule::Trait<_1d667757e_Kind>(_1d6694953_buildPrimType(jule::Str::lit("i32", 3)), 20)});
jule::Ptr<_1d6677a35_TypeKind> _1d675bbb3_primI64 = jule::new_ptr<_1d6677a35_TypeKind>(_1d6677a35_TypeKind{._field_Kind=jule::Trait<_1d667757e_Kind>(_1d6694953_buildPrimType(jule::Str::lit("i64", 3)), 20)});
jule::Ptr<_1d6677a35_TypeKind> _1d675be7c_primU8 = jule::new_ptr<_1d6677a35_TypeKind>(_1d6677a35_TypeKind{._field_Kind=jule::Trait<_1d667757e_Kind>(_1d6694953_buildPrimType(jule::Str::lit("u8", 2)), 20)});
jule::Ptr<_1d6677a35_TypeKind> _1d675c246_primU16 = jule::new_ptr<_1d6677a35_TypeKind>(_1d6677a35_TypeKind{._field_Kind=jule::Trait<_1d667757e_Kind>(_1d6694953_buildPrimType(jule::Str::lit("u16", 3)), 20)});
jule::Ptr<_1d6677a35_TypeKind> _1d675c510_primU32 = jule::new_ptr<_1d6677a35_TypeKind>(_1d6677a35_TypeKind{._field_Kind=jule::Trait<_1d667757e_Kind>(_1d6694953_buildPrimType(jule::Str::lit("u32", 3)), 20)});
jule::Ptr<_1d6677a35_TypeKind> _1d675c983_primU64 = jule::new_ptr<_1d6677a35_TypeKind>(_1d6677a35_TypeKind{._field_Kind=jule::Trait<_1d667757e_Kind>(_1d6694953_buildPrimType(jule::Str::lit("u64", 3)), 20)});
jule::Ptr<_1d6677a35_TypeKind> _1d675cc4c_primF32 = jule::new_ptr<_1d6677a35_TypeKind>(_1d6677a35_TypeKind{._field_Kind=jule::Trait<_1d667757e_Kind>(_1d6694953_buildPrimType(jule::Str::lit("f32", 3)), 20)});
jule::Ptr<_1d6677a35_TypeKind> _1d675d016_primF64 = jule::new_ptr<_1d6677a35_TypeKind>(_1d6677a35_TypeKind{._field_Kind=jule::Trait<_1d667757e_Kind>(_1d6694953_buildPrimType(jule::Str::lit("f64", 3)), 20)});
jule::Bool _1d6784416_Copy = false;
jule::Bool _1d6784724_Deadcode = false;
jule::Bool _1d67849dd_Append = false;
jule::Bool _1d6784ceb_Math = false;
jule::Bool _1d67850b5_Access = false;
jule::Bool _1d678537e_Inline = false;
jule::Bool _1d6785648_Ptr = false;
jule::Bool _1d6785a22_Cond = false;
jule::Bool _1d6785cdb_Str = false;
jule::Bool _1d67860a5_Slice = false;
jule::Bool _1d678636e_Assign = false;
jule::Bool _1d72d2d21_exprEnabled = false;
jule::Bool _1d72d30da_scopeEnabled = false;
jule::Array<jule::U64,12> _1d7c421a8_mdays = jule::Array<jule::U64,12>({31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,29LLU});
jule::Str _1d7b68c28_assignArgName = jule::Str::lit("__jule_assign_arg", 17);
jule::Ptr<_2194b5521_RangeTable> _21945e4cb_Upper = _219451cc6__LU;
jule::Ptr<_2194b5521_RangeTable> _219457e75_Letter = _219450cd6__L;



std::ostream &operator<<(std::ostream &_Stream, _2194b4a3c_Range16 _Src) {
	_Stream << "Range16{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _2194b506a_Range32 _Src) {
	_Stream << "Range32{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _2194b5521_RangeTable _Src) {
	_Stream << "RangeTable{";
	_Stream << "R16:" << _Src._field_R16 << ", ";
	_Stream << "R32:" << _Src._field_R32 << ", ";
	_Stream << "LatinOffset:" << _Src._field_LatinOffset;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e0129522_acceptRange _Src) {
	_Stream << "acceptRange{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}



inline _1e01838bc_StrBuilder static__1e0183b64_New(jule::I64 _1519_cap) {
	if ((_1519_cap < 0LL)) {
		jule::panic(jule::Str::lit("std::strings: StrBuilder.New: cap < 0", 37) + jule::Str("\nlocation: std/internal/strings/builder.jule:17:13"));;
	};
	return _1e01838bc_StrBuilder{._field_buf=jule::Slice<jule::U8>::alloc(0LL, _1519_cap, 0)};;
}



inline void _1e018c442_Write(_1e01838bc_StrBuilder* _self_, jule::Slice<jule::U8> _2524_b) {
	((*(_self_))._field_buf).append(_2524_b);;
}



inline void _1e018c6ea_WriteStr(_1e01838bc_StrBuilder* _self_, jule::Str _3027_s) {
	((*(_self_))._field_buf).append(_21682838c_StrBytes(_3027_s));;
}



inline void _1e018c9a3_WriteByte(_1e01838bc_StrBuilder* _self_, jule::U8 _3528_b) {
	{ jule::Slice<jule::U8> &__jule_push_dest = (*(_self_))._field_buf; __jule_push_dest.push(_3528_b); };
}



inline jule::Str _1e018cee2_Str(_1e01838bc_StrBuilder* _self_) {
	jule::Str _5013_s = _216828920_StrFromBytes((*(_self_))._field_buf);;
	_1e018d1e0_Clear(_self_);
	return _5013_s;;
}



inline void _1e018d1e0_Clear(_1e01838bc_StrBuilder* _self_) {
	(*(_self_))._field_buf=nullptr;
}



inline jule::I64 _1e018d476_Len(_1e01838bc_StrBuilder* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_buf.len());;
}



inline jule::Slice<jule::U8> _1e018d993_Buf(_1e01838bc_StrBuilder* _self_) {
	return (*(_self_))._field_buf;;
}



inline void _1e018dc4b_SetBuf(_1e01838bc_StrBuilder* _self_, jule::Slice<jule::U8> _7736_buf) {
	(*(_self_))._field_buf=_7736_buf;
}





std::ostream &operator<<(std::ostream &_Stream, _1e01838bc_StrBuilder _Src) {
	_Stream << "StrBuilder{";
	_Stream << "buf:" << _Src._field_buf;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _1e018ea0a_index(_1e018e576_lazyBuff* _self_, jule::I64 _5524_i) {
	if (((*(_self_))._field_buff != nullptr)) {
		return (*(_self_))._field_buff[_5524_i];;
	};
	return (*(_self_))._field_path[_5524_i];;
}



inline void _1e018ecb3_append(_1e018e576_lazyBuff* _self_, jule::U8 _6225_c) {
	if (((*(_self_))._field_buff == nullptr)) {
		if ((((*(_self_))._field_w < (*(_self_))._field_path.len()) && ((*(_self_))._field_path[(*(_self_))._field_w] == _6225_c))) {
			((*(_self_))._field_w)++;
			return;;
		};
		(*(_self_))._field_buff=jule::Slice<jule::U8>::alloc((*(_self_))._field_path.len(), (*(_self_))._field_path.len(), 0);
		jule::copy(((*(_self_))._field_buff), ((*(_self_))._field_path.slice(0LL, (*(_self_))._field_w)).fake_slice());
	};
	(*(_self_))._field_buff[(*(_self_))._field_w]=_6225_c;
	((*(_self_))._field_w)++;
}



inline jule::Str _1e0190049_string(_1e018e576_lazyBuff* _self_) {
	if (((*(_self_))._field_buff == nullptr)) {
		return (*(_self_))._field_volAndPath.slice(0LL, ((*(_self_))._field_volLen + (*(_self_))._field_w));;
	};
	return ((*(_self_))._field_volAndPath.slice(0LL, (*(_self_))._field_volLen) + _216828656_BytesStr((*(_self_))._field_buff.slice(0LL, (*(_self_))._field_w)));;
}





std::ostream &operator<<(std::ostream &_Stream, _1e018e576_lazyBuff _Src) {
	_Stream << "lazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "volAndPath:" << _Src._field_volAndPath << ", ";
	_Stream << "volLen:" << _Src._field_volLen;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _216764ce0_DirEntry _Src) {
	_Stream << "DirEntry{";
	_Stream << "Name:" << _Src._field_Name << ", ";
	_Stream << "Stat:" << _Src._field_Stat;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Slice<jule::Ptr<_216764ce0_DirEntry>>> static__1e0193de9_Read(jule::Str _1520_path) {
	jule::Slice<jule::Ptr<_216764ce0_DirEntry>> __jule_func_result;
	jule::Slice<jule::U8> _169_s = _216720482_StrToBytes(_1520_path);;
	DIR* _1713_dir = _216730d77_Opendir((&(_169_s[0LL])));;
	if ((_1713_dir == nullptr)) {
		return jule::Exceptional<jule::Slice<jule::Ptr<_216764ce0_DirEntry>>>(jule::Any(_21676320b_getLastFsError(), &__jule_any_type0));
	};
	for (;;) {
		{
			struct dirent* _2213_dirent = _216731141_Readdir(_1713_dir);;
			if ((_2213_dirent == nullptr)) {
				goto _iter_end_1d8aea967;
			};
			jule::Str _2613_name = _2167201b8_BytePtrToStr(((jule::U8*)((*(_2213_dirent)).d_name)));;
			jule::Ptr<_216768ca0_Status> _2717_stat = ({
				auto except = static__21676596c_Of(_1e0190c92_Join(jule::Slice<jule::Str>::make({_1520_path,_2613_name})));
				(except.ok()) ? (except.result) : ({{

					return jule::Exceptional<jule::Slice<jule::Ptr<_216764ce0_DirEntry>>>(except.error);
				} jule::Ptr<_216768ca0_Status>(nullptr);});
			});;
			{ jule::Slice<jule::Ptr<_216764ce0_DirEntry>> &__jule_push_dest = __jule_func_result; __jule_push_dest.push(jule::new_ptr<_216764ce0_DirEntry>(_216764ce0_DirEntry{._field_Name=_2613_name, ._field_Stat=_2717_stat})); };
		}
	_iter_next_1d8aea967:;
	}
	_iter_end_1d8aea967:;;
	_21673140a_Closedir(_1713_dir);
	return jule::Exceptional<jule::Slice<jule::Ptr<_216764ce0_DirEntry>>>(jule::Any(), __jule_func_result);;
}



inline jule::VoidExceptional static__1e019412a_Create(jule::Str _4022_path) {
	jule::Slice<jule::U8> _449_s = _216720482_StrToBytes(_4022_path);;
	if ((_216731d12_Mkdir((&(_449_s[0LL])), 448LL) != 0LL)) {
		return jule::VoidExceptional(jule::Any(_21676320b_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional static__1e019435b_Remove(jule::Str _5322_path) {
	jule::Slice<jule::U8> _549_s = _216720482_StrToBytes(_5322_path);;
	if ((_2167320cb_Rmdir((&(_549_s[0LL]))) != 0LL)) {
		return jule::VoidExceptional(jule::Any(_21676320b_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}





std::ostream &operator<<(std::ostream &_Stream, _216765054_Directory _Src) {
	_Stream << "Directory{";
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Ptr<_216766bb0_File>> static__216763c12_Open(jule::Str _1920_path, jule::I64 _1931_flag, jule::I64 _1944_mode) {
	jule::Slice<jule::U8> _209_s = _216720482_StrToBytes(_1920_path);;
	jule::I64 _219_handle = _216730508_Open((&(_209_s[0LL])), static_cast<jule::I64>(_1931_flag), _1944_mode);;
	if ((_219_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_216766bb0_File>>(jule::Any(_21676320b_getLastFsError(), &__jule_any_type0));
	};
	return jule::Exceptional<jule::Ptr<_216766bb0_File>>(jule::Any(), static__2167670cd_New(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_219_handle))));;
}



inline jule::VoidExceptional static__216763e43_Remove(jule::Str _3222_path) {
	jule::Slice<jule::U8> _339_s = _216720482_StrToBytes(_3222_path);;
	if ((_216732395_Unlink((&(_339_s[0LL]))) != 0LL)) {
		return jule::VoidExceptional(jule::Any(_21676320b_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _2167643c7_Write(_216766bb0_File* _self_, jule::Slice<jule::U8> _4724_buf) {
	jule::I64 __jule_func_result = 0;
	if ((_4724_buf.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
	};
	__jule_func_result=static_cast<jule::I64>(_216738313_Write(static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_handle)), (&(_4724_buf[0LL])), static_cast<jule::U64>(static_cast<jule::U64>(_4724_buf.len()))));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I64>(jule::Any(_21676320b_getLastFsError(), &__jule_any_type0));
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
}



inline jule::Exceptional<jule::I64> _216764718_Read(_216766bb0_File* _self_, jule::Slice<jule::U8> _6727_buf) {
	jule::I64 __jule_func_result = 0;
	if ((_6727_buf.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
	};
	__jule_func_result=static_cast<jule::I64>(_216737a3d_Read(static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_handle)), (&(_6727_buf[0LL])), static_cast<jule::U64>(static_cast<jule::U64>(_6727_buf.len()))));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I64>(jule::Any(_21676320b_getLastFsError(), &__jule_any_type0));
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
}



inline jule::Ptr<_216766bb0_File> static__2167670cd_New(jule::Uintptr _4519_handle) {
	return jule::new_ptr<_216766bb0_File>(_216766bb0_File{._field_handle=_4519_handle});;
}



inline jule::Exceptional<jule::Ptr<_216766bb0_File>> static__216767397_Create(jule::Str _5522_path) {
	return jule::Exceptional<jule::Ptr<_216766bb0_File>>(jule::Any(), ({
		auto except = static__216763c12_Open(_5522_path, static_cast<jule::I64>(578LL), 438LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Ptr<_216766bb0_File>>(except.error);
		} jule::Ptr<_216766bb0_File>(nullptr);});
	}));;
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__216767661_Read(jule::Str _6720_path) {
	jule::Ptr<_216768ca0_Status> _689_s = ({
		auto except = static__21676596c_Of(_6720_path);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_216768ca0_Status>(nullptr);});
	});;
	if ((!(_216769410_IsReg(_689_s.ptr())))) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(static_cast<jule::I64>(14LL), &__jule_any_type0));
	};
	if ((_216769696_Size(_689_s.ptr()) == 0LLU)) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(), jule::Slice<jule::U8>::alloc(0LL, 0LL, 0));;
	};
	jule::Ptr<_216766bb0_File> _7813_f = ({
		auto except = static__216763c12_Open(_6720_path, static_cast<jule::I64>(0LL), 0LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_216766bb0_File>(nullptr);});
	});;
	__JULE_DEFER({
		({
			auto except = _216768244_Close(_7813_f.ptr());
			if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/fs/file.jule:79:17"));
		});
	});;
	jule::Slice<jule::U8> _8113_buff = jule::Slice<jule::U8>::alloc(static_cast<jule::I64>(_216769696_Size(_689_s.ptr())), static_cast<jule::I64>(_216769696_Size(_689_s.ptr())), 0);;
	jule::I64 _829_n = ({
		auto except = _216764718_Read(_7813_f.ptr(), _8113_buff);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} 0;});
	});;
	return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(), _8113_buff.slice(0LL, _829_n));;
}



inline jule::VoidExceptional static__216767a07_Write(jule::Str _9121_path, jule::Slice<jule::U8> _9132_data, jule::I64 _9146_perm) {
	jule::Ptr<_216766bb0_File> _9213_f = ({
		auto except = static__216763c12_Open(_9121_path, static_cast<jule::I64>(577LL), _9146_perm);
		(except.ok()) ? (except.result) : ({{

			return jule::VoidExceptional(except.error);
		} jule::Ptr<_216766bb0_File>(nullptr);});
	});;
	({
		auto except = _2167643c7_Write(_9213_f.ptr(), _9132_data);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	({
		auto except = _216768244_Close(_9213_f.ptr());
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _216768244_Close(_216766bb0_File* _self_) {
	if ((_216737dd4_Close(static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_handle))) == -1LL)) {
		return jule::VoidExceptional(jule::Any(_21676320b_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}





std::ostream &operator<<(std::ostream &_Stream, _216766bb0_File _Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Ptr<_216768ca0_Status>> static__21676596c_Of(jule::Str _1218_path) {
	if ((_1218_path).empty()) {
		return jule::Exceptional<jule::Ptr<_216768ca0_Status>>(jule::Any(static_cast<jule::I64>(4LL), &__jule_any_type0));
	};
	struct stat _1613_handle = (struct stat){};;
	jule::Slice<jule::U8> _179_s = _216720482_StrToBytes(_1218_path);;
	jule::I64 _189_code = _2167300c9_Stat((&(_179_s[0LL])), (&(_1613_handle)));;
	if ((_189_code == -1LL)) {
		return jule::Exceptional<jule::Ptr<_216768ca0_Status>>(jule::Any(_21676320b_getLastFsError(), &__jule_any_type0));
	};
	jule::Ptr<_216768ca0_Status> _2213_stat = jule::new_ptr<_216768ca0_Status>();;
	(*(_2213_stat))._field_size=_1613_handle.st_size;
	if (((_1613_handle.st_mode & 16384LLU) == 16384LLU)) {
		(*(_2213_stat))._field_mode|=static_cast<jule::I64>(1LL);
	} else if (((_1613_handle.st_mode & 32768LLU) == 32768LLU)) {
		(*(_2213_stat))._field_mode|=static_cast<jule::I64>(2LL);
	};
	return jule::Exceptional<jule::Ptr<_216768ca0_Status>>(jule::Any(), _2213_stat);;
}



inline jule::Bool _216769179_IsDir(_216768ca0_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL));;
}



inline jule::Bool _216769410_IsReg(_216768ca0_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I64>(2LL)) == static_cast<jule::I64>(2LL));;
}



inline jule::U64 _216769696_Size(_216768ca0_Status* _self_) {
	return (*(_self_))._field_size;;
}





std::ostream &operator<<(std::ostream &_Stream, _216768ca0_Status _Src) {
	_Stream << "Status{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e034b821_cmdAttrs _Src) {
	_Stream << "cmdAttrs{";
	_Stream << "pid:" << _Src._field_pid;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e0235a7e_Log _Src) {
	_Stream << "Log{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Text:" << _Src._field_Text << ", ";
	_Stream << "Line:" << _Src._field_Line << ", ";
	_Stream << "Suggestion:" << _Src._field_Suggestion;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d42ea2c0_floatInfo _Src) {
	_Stream << "floatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d42eacd7_decimalSlice _Src) {
	_Stream << "decimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d430d03b_leftCheat _Src) {
	_Stream << "leftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d430542e_set(_1d430da64_decimal* _self_, jule::Slice<jule::U8> _23822_s) {
	jule::Bool __jule_func_result = false;
	jule::I64 _23913_i = 0LL;;
	(*(_self_))._field_neg=false;
	(*(_self_))._field_trunc=false;
	if ((_23913_i >= _23822_s.len())) {
		return __jule_func_result;;
	};
	{
		
		if ((_23822_s[_23913_i] == '+')) {
			_case_begin_1d914ccaa:;
			{
				(_23913_i)++;
			}
		}
		else if ((_23822_s[_23913_i] == '-')) {
			_case_begin_1d914cea8:;
			{
				(*(_self_))._field_neg=true;
				(_23913_i)++;
			}
		}
		_match_end_1d914cdba:;
	};
	jule::Bool _25613_sawdot = false;;
	jule::Bool _25713_sawdigits = false;;
	for (; (_23913_i < _23822_s.len()); (_23913_i)++) {
		{
			{
				
				if ((_23822_s[_23913_i] == '_')) {
					_case_begin_1d914e95a:;
					{
						goto _iter_next_1d914e2d9;
					}
				}
				else if ((_23822_s[_23913_i] == '.')) {
					_case_begin_1d914e9d2:;
					{
						if (_25613_sawdot) {
							return __jule_func_result;;
						};
						_25613_sawdot=true;
						(*(_self_))._field_dp=(*(_self_))._field_nd;
						goto _iter_next_1d914e2d9;
					}
				}
				else if ((('0' <= _23822_s[_23913_i]) && (_23822_s[_23913_i] <= '9'))) {
					_case_begin_1d914ea59:;
					{
						_25713_sawdigits=true;
						if (((_23822_s[_23913_i] == '0') && ((*(_self_))._field_nd == 0LL))) {
							((*(_self_))._field_dp)--;
							goto _iter_next_1d914e2d9;
						};
						if (((*(_self_))._field_nd < 800LL)) {
							(*(_self_))._field_d[(*(_self_))._field_nd]=_23822_s[_23913_i];
							((*(_self_))._field_nd)++;
						} else if ((_23822_s[_23913_i] != '0')) {
							(*(_self_))._field_trunc=true;
						};
						goto _iter_next_1d914e2d9;
					}
				}
				_match_end_1d914e839:;
			};
			goto _iter_end_1d914e2d9;
		}
	_iter_next_1d914e2d9:;
	}
	_iter_end_1d914e2d9:;;
	if ((!(_25713_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_25613_sawdot))) {
		(*(_self_))._field_dp=(*(_self_))._field_nd;
	};
	if (((_23913_i < _23822_s.len()) && (_1d43008d0_lower(_23822_s[_23913_i]) == 'e'))) {
		(_23913_i)++;
		if ((_23913_i >= _23822_s.len())) {
			return __jule_func_result;;
		};
		jule::I64 _30217_esign = 1LL;;
		if ((_23822_s[_23913_i] == '+')) {
			(_23913_i)++;
		} else if ((_23822_s[_23913_i] == '-')) {
			(_23913_i)++;
			_30217_esign=-1LL;
		};
		if ((((_23913_i >= _23822_s.len()) || (_23822_s[_23913_i] < '0')) || (_23822_s[_23913_i] > '9'))) {
			return __jule_func_result;;
		};
		jule::I64 _31217_e = 0LL;;
		for (; ((_23913_i < _23822_s.len()) && ((('0' <= _23822_s[_23913_i]) && (_23822_s[_23913_i] <= '9')) || (_23822_s[_23913_i] == '_'))); (_23913_i)++) {
			{
				if ((_23822_s[_23913_i] == '_')) {
					goto _iter_next_1d915571e;
				};
				if ((_31217_e < 10000LL)) {
					_31217_e=static_cast<jule::I64>((((_31217_e * 10LL) + static_cast<jule::I64>(_23822_s[_23913_i])) - '0'));
				};
			}
		_iter_next_1d915571e:;
		}
		_iter_end_1d915571e:;;
		(*(_self_))._field_dp+=(_31217_e * _30217_esign);
	};
	if ((_23913_i != _23822_s.len())) {
		return __jule_func_result;;
	};
	__jule_func_result=true;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_bool _1d4305770_floatBits(_1d430da64_decimal* _self_, _1d42ea2c0_floatInfo* _33229_flt) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _33313_exp = 0LL;;
	jule::U64 _33413_mant = static_cast<jule::U64>(0LLU);;
	if (((*(_self_))._field_nd == 0LL)) {
		_33413_mant=0LLU;
		_33313_exp=(*(_33229_flt))._field_bias;
		goto _julec_label_1d9164d49;
	};
	if (((*(_self_))._field_dp > 310LL)) {
		goto _julec_label_1d915b5e3;
	};
	if (((*(_self_))._field_dp < -330LL)) {
		_33413_mant=0LLU;
		_33313_exp=(*(_33229_flt))._field_bias;
		goto _julec_label_1d9164d49;
	};
	_33313_exp=0LL;
	while (((*(_self_))._field_dp > 0LL)) {
		{
			jule::I64 _35917_n = 0LL;;
			if (((*(_self_))._field_dp >= _1d43050dd_powtab.len())) {
				_35917_n=27LL;
			} else {
				_35917_n=_1d43050dd_powtab[(*(_self_))._field_dp];
			};
			_1d430e1c4_shift(_self_, static_cast<jule::I64>((-(_35917_n))));
			_33313_exp+=_35917_n;
		}
	_iter_next_1d915b181:;
	}
	_iter_end_1d915b181:;;
	while ((((*(_self_))._field_dp < 0LL) || (((*(_self_))._field_dp == 0LL) && ((*(_self_))._field_d[0LL] < '5')))) {
		{
			jule::I64 _36917_n = 0LL;;
			if (((-((*(_self_))._field_dp)) >= _1d43050dd_powtab.len())) {
				_36917_n=27LL;
			} else {
				_36917_n=_1d43050dd_powtab[(-((*(_self_))._field_dp))];
			};
			_1d430e1c4_shift(_self_, _36917_n);
			_33313_exp-=_36917_n;
		}
	_iter_next_1d915c858:;
	}
	_iter_end_1d915c858:;;
	(_33313_exp)--;
	if ((_33313_exp < ((*(_33229_flt))._field_bias + 1LL))) {
		jule::I64 _38613_n = (((*(_33229_flt))._field_bias + 1LL) - _33313_exp);;
		_1d430e1c4_shift(_self_, static_cast<jule::I64>((-(_38613_n))));
		_33313_exp+=_38613_n;
	};
	if (((_33313_exp - (*(_33229_flt))._field_bias) >= static_cast<jule::I64>(((1LL << (*(_33229_flt))._field_expbits) - 1LL)))) {
		goto _julec_label_1d915b5e3;
	};
	_1d430e1c4_shift(_self_, static_cast<jule::I64>(static_cast<jule::I64>((1LL + (*(_33229_flt))._field_mantbits))));
	_33413_mant=static_cast<jule::U64>(_1d430ec74_roundedInteger(_self_));
	if ((_33413_mant == (2LLU << (*(_33229_flt))._field_mantbits))) {
		_33413_mant>>=1LLU;
		(_33313_exp)++;
		if (((_33313_exp - (*(_33229_flt))._field_bias) >= static_cast<jule::I64>(((1LL << (*(_33229_flt))._field_expbits) - 1LL)))) {
			goto _julec_label_1d915b5e3;
		};
	};
	if (((_33413_mant & (1LLU << (*(_33229_flt))._field_mantbits)) == 0LLU)) {
		_33313_exp=(*(_33229_flt))._field_bias;
	};
	goto _julec_label_1d9164d49;
	_julec_label_1d915b5e3:;
	_33413_mant=0LLU;
	_33313_exp=static_cast<jule::I64>(static_cast<jule::I64>((((static_cast<jule::U64>(1LLU) << (*(_33229_flt))._field_expbits) - 1LLU) + static_cast<jule::U64>((*(_33229_flt))._field_bias))));
	__jule_func_result.__jule_result_arg1=true;
	_julec_label_1d9164d49:;
	jule::U64 _42213_bits = (_33413_mant & ((1LLU << (*(_33229_flt))._field_mantbits) - 1LLU));;
	_42213_bits|=(static_cast<jule::U64>(((_33313_exp - (*(_33229_flt))._field_bias) & static_cast<jule::I64>(((1LL << (*(_33229_flt))._field_expbits) - 1LL)))) << (*(_33229_flt))._field_mantbits);
	if ((*(_self_))._field_neg) {
		_42213_bits|=((1LLU << (*(_33229_flt))._field_mantbits) << (*(_33229_flt))._field_expbits);
	};
	__jule_func_result.__jule_result_arg0 = _42213_bits;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline void _1d430de1b_assign(_1d430da64_decimal* _self_, jule::U64 _15129_v) {
	jule::Array<jule::U8,24> _15217_buf = jule::Array<jule::U8,24>(0);;
	jule::I64 _15513_n = 0LL;;
	while ((_15129_v > 0LLU)) {
		{
			jule::U64 _15713_v1 = (_15129_v / 10LLU);;
			_15129_v-=(10LLU * _15713_v1);
			_15217_buf[_15513_n]=static_cast<jule::U8>(static_cast<jule::U8>((_15129_v + '0')));
			(_15513_n)++;
			_15129_v=_15713_v1;
		}
	_iter_next_1d91687cb:;
	}
	_iter_end_1d91687cb:;;
	(*(_self_))._field_nd=0LL;
	(_15513_n)--;
	for (; (_15513_n >= 0LL); (_15513_n)--) {
		{
			(*(_self_))._field_d[(*(_self_))._field_nd]=_15217_buf[_15513_n];
			((*(_self_))._field_nd)++;
		}
	_iter_next_1d9169238:;
	}
	_iter_end_1d9169238:;;
	(*(_self_))._field_dp=(*(_self_))._field_nd;
	_1d43103b2_trim(_self_);
}



inline void _1d430e1c4_shift(_1d430da64_decimal* _self_, jule::I64 _17628_k) {
	{
		
		if (((*(_self_))._field_nd == 0LL)) {
			_case_begin_1d916b1e6:;
		}
		else if ((_17628_k > 0LL)) {
			_case_begin_1d916b26d:;
			{
				while ((_17628_k > 60LL)) {
					{
						_1d4310e0c_leftShift(_self_, 60LLU);
						_17628_k-=60LL;
					}
				_iter_next_1d916bdb7:;
				}
				_iter_end_1d916bdb7:;;
				_1d4310e0c_leftShift(_self_, static_cast<jule::U64>(static_cast<jule::U64>(_17628_k)));
			}
		}
		else if ((_17628_k < 0LL)) {
			_case_begin_1d916b2e5:;
			{
				while ((_17628_k < -60LL)) {
					{
						_1d431069d_rightShift(_self_, 60LLU);
						_17628_k+=60LL;
					}
				_iter_next_1d916bd40:;
				}
				_iter_end_1d916bd40:;;
				_1d431069d_rightShift(_self_, static_cast<jule::U64>(static_cast<jule::U64>((-(_17628_k)))));
			}
		}
		_match_end_1d916b0c5:;
	};
}



inline void _1d430e47c_roundDown(_1d430da64_decimal* _self_, jule::I64 _19628_nd) {
	if (((_19628_nd < 0LL) || (_19628_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	(*(_self_))._field_nd=_19628_nd;
	_1d43103b2_trim(_self_);
}



inline void _1d430e735_roundUp(_1d430da64_decimal* _self_, jule::I64 _20526_nd) {
	if (((_20526_nd < 0LL) || (_20526_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	jule::I64 _21113_i = (_20526_nd - 1LL);;
	for (; (_21113_i >= 0LL); (_21113_i)--) {
		{
			jule::U8 _21313_c = (*(_self_))._field_d[_21113_i];;
			if ((_21313_c < '9')) {
				((*(_self_))._field_d[_21113_i])++;
				(*(_self_))._field_nd=static_cast<jule::I64>((_21113_i + 1LL));
				return;;
			};
		}
	_iter_next_1d9170393:;
	}
	_iter_end_1d9170393:;;
	(*(_self_))._field_d[0LL]='1';
	(*(_self_))._field_nd=1LL;
	((*(_self_))._field_dp)++;
}



inline void _1d430e9dd_round(_1d430da64_decimal* _self_, jule::I64 _23224_nd) {
	if (((_23224_nd < 0LL) || (_23224_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	if (_1d4311281_shouldRoundUp(_self_, _23224_nd)) {
		_1d430e735_roundUp(_self_, _23224_nd);
	} else {
		_1d430e47c_roundDown(_self_, _23224_nd);
	};
}



inline jule::U64 _1d430ec74_roundedInteger(_1d430da64_decimal* _self_) {
	if (((*(_self_))._field_dp > 20LL)) {
		return jule::MAX_U64;;
	};
	jule::I64 _24913_i = 0LL;;
	jule::U64 _25013_n = static_cast<jule::U64>(0LLU);;
	for (; ((_24913_i < (*(_self_))._field_dp) && (_24913_i < (*(_self_))._field_nd)); (_24913_i)++) {
		{
			_25013_n=static_cast<jule::U64>(((_25013_n * 10LLU) + static_cast<jule::U64>(((*(_self_))._field_d[_24913_i] - '0'))));
		}
	_iter_next_1d91732a8:;
	}
	_iter_end_1d91732a8:;;
	for (; (_24913_i < (*(_self_))._field_dp); (_24913_i)++) {
		{
			_25013_n*=10LLU;
		}
	_iter_next_1d91752ee:;
	}
	_iter_end_1d91752ee:;;
	if (_1d4311281_shouldRoundUp(_self_, (*(_self_))._field_dp)) {
		(_25013_n)++;
	};
	return _25013_n;;
}





std::ostream &operator<<(std::ostream &_Stream, _1d430da64_decimal _Src) {
	_Stream << "decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1d4321208_Const> static__1d4321648_NewI64(jule::I64 _1622_x) {
	return jule::new_ptr<_1d4321208_Const>(_1d4321208_Const{._field_data=jule::Any(_1622_x, &__jule_any_type1)});;
}



inline jule::Ptr<_1d4321208_Const> static__1d4321912_NewU64(jule::U64 _1922_x) {
	return jule::new_ptr<_1d4321208_Const>(_1d4321208_Const{._field_data=jule::Any(_1922_x, &__jule_any_type2)});;
}



inline jule::Ptr<_1d4321208_Const> static__1d4321bcb_NewBool(jule::Bool _2223_x) {
	return jule::new_ptr<_1d4321208_Const>(_1d4321208_Const{._field_data=jule::Any(_2223_x, &__jule_any_type3)});;
}



inline jule::Ptr<_1d4321208_Const> static__1d4321e95_NewStr(jule::Str _2522_x) {
	return jule::new_ptr<_1d4321208_Const>(_1d4321208_Const{._field_data=jule::Any(_2522_x, &__jule_any_type4)});;
}



inline jule::Ptr<_1d4321208_Const> static__1d432225e_NewF64(jule::F64 _2822_x) {
	return jule::new_ptr<_1d4321208_Const>(_1d4321208_Const{._field_data=jule::Any(_2822_x, &__jule_any_type5)});;
}



inline jule::Ptr<_1d4321208_Const> static__1d432246d_NewNil(void) {
	return jule::new_ptr<_1d4321208_Const>(_1d4321208_Const{._field_data=nullptr});;
}



inline jule::I64 _1d4322acd_ReadI64(_1d4321208_Const* _self_) {
	if ((!(_1d43251c9_IsI64(_self_)))) {
		return 0LL;;
	};
	return static_cast<jule::I64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type1));;
}



inline jule::U64 _1d4322d64_ReadU64(_1d4321208_Const* _self_) {
	if ((!(_1d4325460_IsU64(_self_)))) {
		return 0LLU;;
	};
	return static_cast<jule::U64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type2));;
}



inline jule::Bool _1d43230ea_ReadBool(_1d4321208_Const* _self_) {
	if ((!(_1d43256e6_IsBool(_self_)))) {
		return false;;
	};
	return (*(_self_))._field_data.cast<jule::Bool>(&__jule_any_type3);;
}



inline jule::Str _1d4323381_ReadStr(_1d4321208_Const* _self_) {
	if ((!(_1d432597c_IsStr(_self_)))) {
		return jule::Str();;
	};
	return (*(_self_))._field_data.cast<jule::Str>(&__jule_any_type4);;
}



inline jule::F64 _1d4323617_ReadF64(_1d4321208_Const* _self_) {
	if ((!(_1d4325c13_IsF64(_self_)))) {
		return 0LL;;
	};
	return static_cast<jule::F64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type5));;
}



inline jule::I64 _1d432389d_AsI64(_1d4321208_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1d91dab8e:;
			{
				return static_cast<jule::I64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type1));;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1d91db068:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type2)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1d91db0ce:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type5)));;
			}
		}
		else {
			_case_begin_1d91db002:;
			{
				return 0LL;;
			}
		}
		_match_end_1d91dad48:;
	};
}



inline jule::U64 _1d4323b34_AsU64(_1d4321208_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1d91dbe26:;
			{
				return static_cast<jule::U64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type2));;
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1d91dc8a5:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type1)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1d91dc91b:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type5)));;
			}
		}
		else {
			_case_begin_1d91db83d:;
			{
				return 0LLU;;
			}
		}
		_match_end_1d91db7d8:;
	};
}



inline jule::F64 _1d4323dba_AsF64(_1d4321208_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1d91dd6a8:;
			{
				return static_cast<jule::F64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type5));;
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1d91de137:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type1)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1d91de19d:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type2)));;
			}
		}
		else {
			_case_begin_1d91dd0c0:;
			{
				return 0LL;;
			}
		}
		_match_end_1d91dd06a:;
	};
}



inline void _1d4324173_SetI64(_1d4321208_Const* _self_, jule::I64 _13825_x) {
	(*(_self_))._field_data=jule::Any(_13825_x, &__jule_any_type1);
}



inline void _1d432442b_SetU64(_1d4321208_Const* _self_, jule::U64 _14125_x) {
	(*(_self_))._field_data=jule::Any(_14125_x, &__jule_any_type2);
}



inline void _1d43246d4_SetBool(_1d4321208_Const* _self_, jule::Bool _14426_x) {
	(*(_self_))._field_data=jule::Any(_14426_x, &__jule_any_type3);
}



inline void _1d432498c_SetStr(_1d4321208_Const* _self_, jule::Str _14725_x) {
	(*(_self_))._field_data=jule::Any(_14725_x, &__jule_any_type4);
}



inline void _1d4324c45_SetF64(_1d4321208_Const* _self_, jule::F64 _15025_x) {
	(*(_self_))._field_data=jule::Any(_15025_x, &__jule_any_type5);
}



inline jule::Bool _1d43251c9_IsI64(_1d4321208_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1d91e2de9:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1d91e313b:;
			{
				return false;;
			}
		}
		_match_end_1d91e30d6:;
	};
}



inline jule::Bool _1d4325460_IsU64(_1d4321208_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1d91e37e0:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1d91e3a43:;
			{
				return false;;
			}
		}
		_match_end_1d91e39dd:;
	};
}



inline jule::Bool _1d43256e6_IsBool(_1d4321208_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1d91e424c:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1d91e44a0:;
			{
				return false;;
			}
		}
		_match_end_1d91e444a:;
	};
}



inline jule::Bool _1d432597c_IsStr(_1d4321208_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1d91e4ba9:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1d91e4e0c:;
			{
				return false;;
			}
		}
		_match_end_1d91e4da7:;
	};
}



inline jule::Bool _1d4325c13_IsF64(_1d4321208_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1d91e5616:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1d91e5869:;
			{
				return false;;
			}
		}
		_match_end_1d91e5814:;
	};
}



inline jule::Bool _1d4325e99_IsNil(_1d4321208_Const* _self_) {
	return ((*(_self_))._field_data == nullptr);;
}



inline jule::Bool _1d432662b_And(_1d4321208_Const* _self_, _1d4321208_Const _23818_x) {
	{
		
		if ((_1d43256e6_IsBool(_self_) && _1d43256e6_IsBool(&_23818_x))) {
			_case_begin_1d91e9b6a:;
			{
				return (_1d43230ea_ReadBool(_self_) && _1d43230ea_ReadBool(&_23818_x));;
			}
		}
		else {
			_case_begin_1d91e9ab0:;
			{
				return false;;
			}
		}
		_match_end_1d91e96c5:;
	};
}



inline jule::Bool _1d432696c_Or(_1d4321208_Const* _self_, _1d4321208_Const _24917_x) {
	{
		
		if ((_1d43256e6_IsBool(_self_) && _1d43256e6_IsBool(&_24917_x))) {
			_case_begin_1d91eae79:;
			{
				return (_1d43230ea_ReadBool(_self_) || _1d43230ea_ReadBool(&_24917_x));;
			}
		}
		else {
			_case_begin_1d91ea61b:;
			{
				return false;;
			}
		}
		_match_end_1d91ea572:;
	};
}



inline jule::Bool _1d4326cad_Eq(_1d4321208_Const* _self_, _1d4321208_Const _26017_x) {
	{
		
		if (_1d4325e99_IsNil(_self_)) {
			_case_begin_1d91ec2aa:;
			{
				return _1d4325e99_IsNil(&_26017_x);;
			}
		}
		else if (_1d43256e6_IsBool(_self_)) {
			_case_begin_1d91ec332:;
			{
				return (_1d43256e6_IsBool(&_26017_x) && (_1d43230ea_ReadBool(_self_) == _1d43230ea_ReadBool(&_26017_x)));;
			}
		}
		else if (_1d432597c_IsStr(_self_)) {
			_case_begin_1d91ec5a7:;
			{
				return (_1d432597c_IsStr(&_26017_x) && (_1d4323381_ReadStr(_self_) == _1d4323381_ReadStr(&_26017_x)));;
			}
		}
		else if (_1d43251c9_IsI64(_self_)) {
			_case_begin_1d91ec61d:;
			{
				return (_1d4322acd_ReadI64(_self_) == _1d432389d_AsI64(&_26017_x));;
			}
		}
		else if (_1d4325460_IsU64(_self_)) {
			_case_begin_1d91ec684:;
			{
				return (_1d4322d64_ReadU64(_self_) == _1d4323b34_AsU64(&_26017_x));;
			}
		}
		else if (_1d4325c13_IsF64(_self_)) {
			_case_begin_1d91ec6ea:;
			{
				return (_1d4323617_ReadF64(_self_) == _1d4323dba_AsF64(&_26017_x));;
			}
		}
		else {
			_case_begin_1d91eb8e7:;
			{
				return false;;
			}
		}
		_match_end_1d91eb84d:;
	};
}



inline jule::Bool _1d43270ee_Lt(_1d4321208_Const* _self_, _1d4321208_Const _28717_x) {
	{
		
		if (_1d432597c_IsStr(_self_)) {
			_case_begin_1d9200e6d:;
			{
				return (_1d432597c_IsStr(&_28717_x) && (_1d4323381_ReadStr(_self_) < _1d4323381_ReadStr(&_28717_x)));;
			}
		}
		else if (_1d43251c9_IsI64(_self_)) {
			_case_begin_1d9200ed4:;
			{
				return (_1d4322acd_ReadI64(_self_) < _1d432389d_AsI64(&_28717_x));;
			}
		}
		else if (_1d4325460_IsU64(_self_)) {
			_case_begin_1d920105b:;
			{
				return (_1d4322d64_ReadU64(_self_) < _1d4323b34_AsU64(&_28717_x));;
			}
		}
		else if (_1d4325c13_IsF64(_self_)) {
			_case_begin_1d920128c:;
			{
				return (_1d4323617_ReadF64(_self_) < _1d4323dba_AsF64(&_28717_x));;
			}
		}
		else {
			_case_begin_1d91ecb90:;
			{
				return false;;
			}
		}
		_match_end_1d91ecac4:;
	};
}



inline jule::Bool _1d4327440_LtEq(_1d4321208_Const* _self_, _1d4321208_Const _31019_x) {
	{
		
		if (_1d432597c_IsStr(_self_)) {
			_case_begin_1d9203b30:;
			{
				return (_1d432597c_IsStr(&_31019_x) && (_1d4323381_ReadStr(_self_) <= _1d4323381_ReadStr(&_31019_x)));;
			}
		}
		else if (_1d43251c9_IsI64(_self_)) {
			_case_begin_1d9203b96:;
			{
				return (_1d4322acd_ReadI64(_self_) <= _1d432389d_AsI64(&_31019_x));;
			}
		}
		else if (_1d4325460_IsU64(_self_)) {
			_case_begin_1d9203c1d:;
			{
				return (_1d4322d64_ReadU64(_self_) <= _1d4323b34_AsU64(&_31019_x));;
			}
		}
		else if (_1d4325c13_IsF64(_self_)) {
			_case_begin_1d9203e4e:;
			{
				return (_1d4323617_ReadF64(_self_) <= _1d4323dba_AsF64(&_31019_x));;
			}
		}
		else {
			_case_begin_1d92017cb:;
			{
				return false;;
			}
		}
		_match_end_1d9201710:;
	};
}



inline jule::Bool _1d4327781_Gt(_1d4321208_Const* _self_, _1d4321208_Const _33317_x) {
	{
		
		if (_1d432597c_IsStr(_self_)) {
			_case_begin_1d92067e2:;
			{
				return (_1d432597c_IsStr(&_33317_x) && (_1d4323381_ReadStr(_self_) > _1d4323381_ReadStr(&_33317_x)));;
			}
		}
		else if (_1d43251c9_IsI64(_self_)) {
			_case_begin_1d9206858:;
			{
				return (_1d4322acd_ReadI64(_self_) > _1d432389d_AsI64(&_33317_x));;
			}
		}
		else if (_1d4325460_IsU64(_self_)) {
			_case_begin_1d92068d0:;
			{
				return (_1d4322d64_ReadU64(_self_) > _1d4323b34_AsU64(&_33317_x));;
			}
		}
		else if (_1d4325c13_IsF64(_self_)) {
			_case_begin_1d9206b11:;
			{
				return (_1d4323617_ReadF64(_self_) > _1d4323dba_AsF64(&_33317_x));;
			}
		}
		else {
			_case_begin_1d920448d:;
			{
				return false;;
			}
		}
		_match_end_1d92043c2:;
	};
}



inline jule::Bool _1d4327ac2_GtEq(_1d4321208_Const* _self_, _1d4321208_Const _35619_x) {
	{
		
		if (_1d432597c_IsStr(_self_)) {
			_case_begin_1d92094a4:;
			{
				return (_1d432597c_IsStr(&_35619_x) && (_1d4323381_ReadStr(_self_) >= _1d4323381_ReadStr(&_35619_x)));;
			}
		}
		else if (_1d43251c9_IsI64(_self_)) {
			_case_begin_1d920951a:;
			{
				return (_1d4322acd_ReadI64(_self_) >= _1d432389d_AsI64(&_35619_x));;
			}
		}
		else if (_1d4325460_IsU64(_self_)) {
			_case_begin_1d9209592:;
			{
				return (_1d4322d64_ReadU64(_self_) >= _1d4323b34_AsU64(&_35619_x));;
			}
		}
		else if (_1d4325c13_IsF64(_self_)) {
			_case_begin_1d92097c3:;
			{
				return (_1d4323617_ReadF64(_self_) >= _1d4323dba_AsF64(&_35619_x));;
			}
		}
		else {
			_case_begin_1d9207150:;
			{
				return false;;
			}
		}
		_match_end_1d9207084:;
	};
}



inline jule::Bool _1d4327e13_Add(_1d4321208_Const* _self_, _1d4321208_Const _37722_x) {
	{
		
		if (_1d432597c_IsStr(_self_)) {
			_case_begin_1d920c166:;
			{
				if ((!(_1d432597c_IsStr(&_37722_x)))) {
					return false;;
				};
				_1d432498c_SetStr(_self_, (_1d4323381_ReadStr(_self_) + _1d4323381_ReadStr(&_37722_x)));
			}
		}
		else if (_1d4325c13_IsF64(_self_)) {
			_case_begin_1d920c1cc:;
			{
				_1d4324c45_SetF64(_self_, static_cast<jule::F64>((_1d4323617_ReadF64(_self_) + _1d4323dba_AsF64(&_37722_x))));
			}
		}
		else if (_1d43251c9_IsI64(_self_)) {
			_case_begin_1d920c254:;
			{
				if (_1d4325c13_IsF64(&_37722_x)) {
					_1d4324c45_SetF64(_self_, static_cast<jule::F64>((_1d4323dba_AsF64(_self_) + _1d4323617_ReadF64(&_37722_x))));
				} else {
					_1d4324173_SetI64(_self_, static_cast<jule::I64>((_1d4322acd_ReadI64(_self_) + _1d432389d_AsI64(&_37722_x))));
				};
			}
		}
		else if (_1d4325460_IsU64(_self_)) {
			_case_begin_1d920c485:;
			{
				if (_1d4325c13_IsF64(&_37722_x)) {
					_1d4324c45_SetF64(_self_, static_cast<jule::F64>((_1d4323dba_AsF64(_self_) + _1d4323617_ReadF64(&_37722_x))));
				} else {
					_1d432442b_SetU64(_self_, static_cast<jule::U64>((_1d4322d64_ReadU64(_self_) + _1d4323b34_AsU64(&_37722_x))));
				};
			}
		}
		else {
			_case_begin_1d9209d12:;
			{
				return false;;
			}
		}
		_match_end_1d9209c46:;
	};
	return true;;
}



inline jule::Bool _1d4328254_Sub(_1d4321208_Const* _self_, _1d4321208_Const _40622_x) {
	{
		
		if (_1d4325c13_IsF64(_self_)) {
			_case_begin_1d921208e:;
			{
				_1d4324c45_SetF64(_self_, static_cast<jule::F64>((_1d4323617_ReadF64(_self_) - _1d4323dba_AsF64(&_40622_x))));
			}
		}
		else if (_1d43251c9_IsI64(_self_)) {
			_case_begin_1d9212116:;
			{
				if (_1d4325c13_IsF64(&_40622_x)) {
					_1d4324c45_SetF64(_self_, static_cast<jule::F64>((_1d4323dba_AsF64(_self_) - _1d4323617_ReadF64(&_40622_x))));
				} else {
					_1d4324173_SetI64(_self_, static_cast<jule::I64>((_1d4322acd_ReadI64(_self_) - _1d432389d_AsI64(&_40622_x))));
				};
			}
		}
		else if (_1d4325460_IsU64(_self_)) {
			_case_begin_1d921218d:;
			{
				if (_1d4325c13_IsF64(&_40622_x)) {
					_1d4324c45_SetF64(_self_, static_cast<jule::F64>((_1d4323dba_AsF64(_self_) - _1d4323617_ReadF64(&_40622_x))));
				} else {
					_1d432442b_SetU64(_self_, static_cast<jule::U64>((_1d4322d64_ReadU64(_self_) - _1d4323b34_AsU64(&_40622_x))));
				};
			}
		}
		else {
			_case_begin_1d9211863:;
			{
				return false;;
			}
		}
		_match_end_1d9211797:;
	};
	return true;;
}



inline jule::Bool _1d4328595_Mul(_1d4321208_Const* _self_, _1d4321208_Const _43022_x) {
	{
		
		if (_1d4325c13_IsF64(_self_)) {
			_case_begin_1d921613c:;
			{
				_1d4324c45_SetF64(_self_, static_cast<jule::F64>((_1d4323617_ReadF64(_self_) * _1d4323dba_AsF64(&_43022_x))));
			}
		}
		else if (_1d43251c9_IsI64(_self_)) {
			_case_begin_1d92161b4:;
			{
				if (_1d4325c13_IsF64(&_43022_x)) {
					_1d4324c45_SetF64(_self_, static_cast<jule::F64>((_1d4323dba_AsF64(_self_) * _1d4323617_ReadF64(&_43022_x))));
				} else {
					_1d4324173_SetI64(_self_, static_cast<jule::I64>((_1d4322acd_ReadI64(_self_) * _1d432389d_AsI64(&_43022_x))));
				};
			}
		}
		else if (_1d4325460_IsU64(_self_)) {
			_case_begin_1d921623b:;
			{
				if (_1d4325c13_IsF64(&_43022_x)) {
					_1d4324c45_SetF64(_self_, static_cast<jule::F64>((_1d4323dba_AsF64(_self_) * _1d4323617_ReadF64(&_43022_x))));
				} else {
					_1d432442b_SetU64(_self_, static_cast<jule::U64>((_1d4322d64_ReadU64(_self_) * _1d4323b34_AsU64(&_43022_x))));
				};
			}
		}
		else {
			_case_begin_1d92157bd:;
			{
				return false;;
			}
		}
		_match_end_1d9215702:;
	};
	return true;;
}



inline jule::Bool _1d43288d6_Div(_1d4321208_Const* _self_, _1d4321208_Const _45822_x) {
	{
		
		if (_1d4325c13_IsF64(_self_)) {
			_case_begin_1d921a1da:;
			{
				jule::F64 _46113_l = _1d4323dba_AsF64(&_45822_x);;
				if ((_46113_l == 0LL)) {
					return false;;
				};
				_1d4324c45_SetF64(_self_, static_cast<jule::F64>(jule::div(_1d4323617_ReadF64(_self_),_46113_l)));
			}
		}
		else if (_1d43251c9_IsI64(_self_)) {
			_case_begin_1d921a262:;
			{
				jule::F64 _46713_l = _1d4323dba_AsF64(&_45822_x);;
				if ((_46713_l == 0LL)) {
					return false;;
				};
				_1d4324c45_SetF64(_self_, static_cast<jule::F64>(jule::div(_1d4323dba_AsF64(_self_),_46713_l)));
			}
		}
		else if (_1d4325460_IsU64(_self_)) {
			_case_begin_1d921a2d9:;
			{
				jule::F64 _47313_l = _1d4323dba_AsF64(&_45822_x);;
				if ((_47313_l == 0LL)) {
					return false;;
				};
				_1d4324c45_SetF64(_self_, static_cast<jule::F64>(jule::div(_1d4323dba_AsF64(_self_),_47313_l)));
			}
		}
		else {
			_case_begin_1d921986b:;
			{
				return false;;
			}
		}
		_match_end_1d92197a0:;
	};
	return true;;
}



inline jule::Bool _1d4328c27_Mod(_1d4321208_Const* _self_, _1d4321208_Const _48722_x) {
	{
		
		if (_1d43251c9_IsI64(_self_)) {
			_case_begin_1d921e3ba:;
			{
				jule::I64 _49013_l = _1d432389d_AsI64(&_48722_x);;
				if ((_49013_l == 0LL)) {
					return false;;
				};
				_1d4324173_SetI64(_self_, static_cast<jule::I64>(jule::mod(_1d4322acd_ReadI64(_self_),_49013_l)));
			}
		}
		else if (_1d4325460_IsU64(_self_)) {
			_case_begin_1d921e442:;
			{
				jule::U64 _49613_l = _1d4323b34_AsU64(&_48722_x);;
				if ((_49613_l == 0LLU)) {
					return false;;
				};
				_1d432442b_SetU64(_self_, static_cast<jule::U64>(jule::mod(_1d4322d64_ReadU64(_self_),_49613_l)));
			}
		}
		else {
			_case_begin_1d921e310:;
			{
				return false;;
			}
		}
		_match_end_1d921cece:;
	};
	return true;;
}



inline jule::Bool _1d4329068_BitwiseAnd(_1d4321208_Const* _self_, _1d4321208_Const _50929_x) {
	{
		
		if (_1d43251c9_IsI64(_self_)) {
			_case_begin_1d92222e1:;
			{
				_1d4324173_SetI64(_self_, static_cast<jule::I64>((_1d4322acd_ReadI64(_self_) & _1d432389d_AsI64(&_50929_x))));
			}
		}
		else if (_1d4325460_IsU64(_self_)) {
			_case_begin_1d9222368:;
			{
				_1d432442b_SetU64(_self_, static_cast<jule::U64>((_1d4322d64_ReadU64(_self_) & _1d4323b34_AsU64(&_50929_x))));
			}
		}
		else {
			_case_begin_1d9222236:;
			{
				return false;;
			}
		}
		_match_end_1d9220e05:;
	};
	return true;;
}



inline jule::Bool _1d43293a9_BitwiseOr(_1d4321208_Const* _self_, _1d4321208_Const _52328_x) {
	{
		
		if (_1d43251c9_IsI64(_self_)) {
			_case_begin_1d922416c:;
			{
				_1d4324173_SetI64(_self_, static_cast<jule::I64>((_1d4322acd_ReadI64(_self_) | _1d432389d_AsI64(&_52328_x))));
			}
		}
		else if (_1d4325460_IsU64(_self_)) {
			_case_begin_1d92241e4:;
			{
				_1d432442b_SetU64(_self_, static_cast<jule::U64>((_1d4322d64_ReadU64(_self_) | _1d4323b34_AsU64(&_52328_x))));
			}
		}
		else {
			_case_begin_1d92240a1:;
			{
				return false;;
			}
		}
		_match_end_1d9223ed5:;
	};
	return true;;
}



inline jule::Bool _1d43296ea_Xor(_1d4321208_Const* _self_, _1d4321208_Const _53722_x) {
	{
		
		if (_1d43251c9_IsI64(_self_)) {
			_case_begin_1d9225ee8:;
			{
				_1d4324173_SetI64(_self_, static_cast<jule::I64>((_1d4322acd_ReadI64(_self_) ^ _1d432389d_AsI64(&_53722_x))));
			}
		}
		else if (_1d4325460_IsU64(_self_)) {
			_case_begin_1d9226070:;
			{
				_1d432442b_SetU64(_self_, static_cast<jule::U64>((_1d4322d64_ReadU64(_self_) ^ _1d4323b34_AsU64(&_53722_x))));
			}
		}
		else {
			_case_begin_1d9225e2c:;
			{
				return false;;
			}
		}
		_match_end_1d9225d61:;
	};
	return true;;
}



inline jule::Bool _1d4329a3b_Lshift(_1d4321208_Const* _self_, _1d4321208_Const _55125_x) {
	{
		
		if (_1d43251c9_IsI64(_self_)) {
			_case_begin_1d9227d74:;
			{
				jule::I64 _55413_l = _1d432389d_AsI64(_self_);;
				if ((_55413_l < 0LL)) {
					jule::U64 _55617_r = _1d4323b34_AsU64(&_55125_x);;
					_1d4324173_SetI64(_self_, static_cast<jule::I64>((_55413_l << _55617_r)));
				} else {
					_1d432a223_lshiftUnsig(_self_, &(_55125_x));
				};
			}
		}
		else if (_1d4325460_IsU64(_self_)) {
			_case_begin_1d9227deb:;
			{
				_1d432a223_lshiftUnsig(_self_, &(_55125_x));
			}
		}
		else {
			_case_begin_1d9227ca8:;
			{
				return false;;
			}
		}
		_match_end_1d9227bdc:;
	};
	return true;;
}



inline jule::Bool _1d4329d7c_Rshift(_1d4321208_Const* _self_, _1d4321208_Const _57125_x) {
	{
		
		if (_1d43251c9_IsI64(_self_)) {
			_case_begin_1d922a44d:;
			{
				jule::I64 _57413_l = _1d432389d_AsI64(_self_);;
				if ((_57413_l < 0LL)) {
					jule::U64 _57617_r = _1d4323b34_AsU64(&_57125_x);;
					_1d4324173_SetI64(_self_, static_cast<jule::I64>((_57413_l >> _57617_r)));
				} else {
					_1d432a553_rshiftUnsig(_self_, &(_57125_x));
				};
			}
		}
		else if (_1d4325460_IsU64(_self_)) {
			_case_begin_1d922a4c5:;
			{
				_1d432a553_rshiftUnsig(_self_, &(_57125_x));
			}
		}
		else {
			_case_begin_1d922a382:;
			{
				return false;;
			}
		}
		_match_end_1d922a2b6:;
	};
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _1d4321208_Const _Src) {
	_Stream << "Const{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _1d64d6157_Prec(_1d64d5cd3_Token* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(64LLU) || _match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(57LLU) || _match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1d9288c09:;
			{
				return 5LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1d9288d91:;
			{
				return 4LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(71LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(53LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1d9288e07:;
			{
				return 3LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1d9288e7e:;
			{
				return 2LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1d9289006:;
			{
				return 1LLU;;
			}
		}
		else {
			_case_begin_1d9288577:;
			{
				return 0LLU;;
			}
		}
		_match_end_1d92884cd:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1d64d5cd3_Token _Src) {
	_Stream << "Token{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Id:" << _Src._field_Id;
	_Stream << "}";
	return _Stream;
}



inline void _1d64db987_Fill(_1d64db59c_File* _self_, jule::Slice<jule::U8> _1727_data) {
	(*(_self_))._field_Data=_1727_data;
}



inline jule::Str _1d64dbc1d_Dir(_1d64db59c_File* _self_) {
	return _1e0191985_Dir((*(_self_))._field_Path);;
}



inline jule::Str _1d64dbea4_Name(_1d64db59c_File* _self_) {
	return _1e01915de_Base((*(_self_))._field_Path);;
}



inline jule::Str _1d64dc57b_GetRow(_1d64db59c_File* _self_, jule::I64 _3821_row) {
	jule::I64 _3913_n = 0LL;;
	jule::I64 _4013_lineStart = 0LL;;
	jule::I64 _4113_i = 0LL;;
	for (; (_4113_i < (*(_self_))._field_Data.len()); (_4113_i)++) {
		{
			if (((*(_self_))._field_Data[_4113_i] != '\n')) {
				goto _iter_next_1d928e182;
			};
			(_3913_n)++;
			if ((_3913_n == _3821_row)) {
				return static_cast<jule::Str>((*(_self_))._field_Data.slice(_4013_lineStart, _4113_i));;
			};
			_4013_lineStart=static_cast<jule::I64>((_4113_i + 1LL));
		}
	_iter_next_1d928e182:;
	}
	_iter_end_1d928e182:;;
	return jule::Str();;
}





std::ostream &operator<<(std::ostream &_Stream, _1d64db59c_File _Src) {
	_Stream << "File{";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Data:" << _Src._field_Data << ", ";
	_Stream << "Tokens:" << _Src._field_Tokens;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d64dd6c0_kindPair _Src) {
	_Stream << "kindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline void _1d64e4d69_pushErr(_1d64e47d6_lex* _self_, jule::Str _44726_fmt, jule::Slice<jule::Any> _44739_args) {
	{ jule::Slice<_1e0235a7e_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1d64de490_makeErr((*(_self_))._field_row, (*(_self_))._field_column, &((*(_self_))._field_file), _44726_fmt, _44739_args)); };
}



inline void _1d64e53ca_lex(_1d64e47d6_lex* _self_) {
	(*(_self_))._field_errors=nullptr;
	_1d64e75ec_newLine(_self_);
	while (((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len())) {
		{
			jule::Ptr<_1d64d5cd3_Token> _46217_token = _1d64e8ad7_token(_self_);;
			if (((*(_46217_token))._field_Id != static_cast<jule::U64>(0LLU))) {
				{ jule::Slice<jule::Ptr<_1d64d5cd3_Token>> &__jule_push_dest = (*(_self_))._field_tokens; __jule_push_dest.push(_46217_token); };
			};
		}
	_iter_next_1d92bce6e:;
	}
	_iter_end_1d92bce6e:;;
}



inline jule::Str _1d64e571b_id(_1d64e47d6_lex* _self_, jule::Slice<jule::U8>* _47122_ln) {
	if (((*(_47122_ln)).len() == 0LL)) {
		return jule::Str();;
	};
	jule::I32 _4759_r = 0;;
	jule::I64 _47516_i = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1e012a138_DecodeRune((*(_47122_ln)));
		_4759_r = __jule_assign_result.__jule_result_arg0;
		_47516_i = __jule_assign_result.__jule_result_arg1;
	});
	if (((_4759_r != '_') && (!(_1d64d9512_IsLetter(_4759_r))))) {
		return jule::Str();;
	};
	while ((_47516_i < (*(_47122_ln)).len())) {
		{
			jule::I32 _48113_pr = 0;;
			jule::I64 _48117_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1e012a138_DecodeRune((*(_47122_ln)).slice(_47516_i));
				_48113_pr = __jule_assign_result.__jule_result_arg0;
				_48117_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((((_48113_pr != '_') && (!(_1d64d9a95_IsDecimal(static_cast<jule::U8>(static_cast<jule::U8>(_48113_pr)))))) && (!(_1d64d9512_IsLetter(_48113_pr))))) {
				(*(_self_))._field_pos+=_47516_i;
				return static_cast<jule::Str>((*(_47122_ln)).slice(0LL, _47516_i));;
			};
			_47516_i+=_48117_n;
		}
	_iter_next_1d92c188a:;
	}
	_iter_end_1d92c188a:;;
	(*(_self_))._field_pos+=(*(_47122_ln)).len();
	return static_cast<jule::Str>((*(_47122_ln)));;
}



inline jule::Slice<jule::U8> _1d64e59a2_resume(_1d64e47d6_lex* _self_) {
	jule::I64 _49613_i = (*(_self_))._field_pos;;
	for (; (_49613_i < (*((*(_self_))._field_file))._field_Data.len()); (_49613_i)++) {
		{
			jule::I32 _49813_r = static_cast<jule::I32>((*((*(_self_))._field_file))._field_Data[_49613_i]);;
			if (_1d64d908e_IsSpace(_49813_r)) {
				;
				((*(_self_))._field_pos)++;
				{
					auto &_match_expr{ _49813_r };
					
					if (_match_expr == '\n') {
						_case_begin_1d92c5a15:;
						{
							_1d64e75ec_newLine(_self_);
						}
					}
					else if (_match_expr == '\t') {
						_case_begin_1d92c5927:;
						{
							(*(_self_))._field_column+=8LL;
						}
					}
					else {
						_case_begin_1d92c532d:;
						{
							((*(_self_))._field_column)++;
						}
					}
					_match_end_1d92c553c:;
				};
				goto _iter_next_1d92c1ca8;
			};
			jule::I64 _51317_j = _49613_i;;
			for (; (_51317_j < (*((*(_self_))._field_file))._field_Data.len()); (_51317_j)++) {
				{
					if (((*((*(_self_))._field_file))._field_Data[_51317_j] == '\n')) {
						goto _iter_end_1d92c44b4;
					};
				}
			_iter_next_1d92c44b4:;
			}
			_iter_end_1d92c44b4:;;
			return (*((*(_self_))._field_file))._field_Data.slice(_49613_i, _51317_j);;
		}
	_iter_next_1d92c1ca8:;
	}
	_iter_end_1d92c1ca8:;;
	return nullptr;;
}



inline void _1d64e5c5a_lexLineComment(_1d64e47d6_lex* _self_, jule::Ptr<_1d64d5cd3_Token>* _52438_token) {
	jule::I64 _5259_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _52813_r = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
			if (((_52813_r == '\n') || (_52813_r == '\r'))) {
				goto _iter_end_1d92c8485;
			};
		}
	_iter_next_1d92c8485:;
	}
	_iter_end_1d92c8485:;;
	if ((((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
		(*((*(_52438_token))))._field_Id=static_cast<jule::U64>(15LLU);
		(*((*(_52438_token))))._field_Kind=static_cast<jule::Str>((*((*(_self_))._field_file))._field_Data.slice(_5259_start, (*(_self_))._field_pos));
	};
}



inline void _1d64e6013_lexRangeComment(_1d64e47d6_lex* _self_, jule::Ptr<_1d64d5cd3_Token>* _53939_token) {
	jule::I64 _5409_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _54313_r = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
			if ((_54313_r == '\r')) {
				goto _iter_next_1d92cb9c7;
			};
			if ((_54313_r == '\n')) {
				_1d64e75ec_newLine(_self_);
				goto _iter_next_1d92cb9c7;
			};
			(*(_self_))._field_column+=1LL;
			if ((((((*(_self_))._field_pos + 1LL) < (*((*(_self_))._field_file))._field_Data.len()) && (_54313_r == '*')) && ((*((*(_self_))._field_file))._field_Data[((*(_self_))._field_pos + 1LL)] == '/'))) {
				(*(_self_))._field_column+=2LL;
				(*(_self_))._field_pos+=2LL;
				if ((((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
					(*((*(_53939_token))))._field_Id=static_cast<jule::U64>(15LLU);
					(*((*(_53939_token))))._field_Kind=static_cast<jule::Str>((*((*(_self_))._field_file))._field_Data.slice(_5409_start, (*(_self_))._field_pos));
				};
				return;;
			};
		}
	_iter_next_1d92cb9c7:;
	}
	_iter_end_1d92cb9c7:;;
	_1d64e4d69_pushErr(_self_, jule::Str::lit("missing block comment close", 27), jule::Slice<jule::Any>());
}



inline jule::Str _1d64e6354_num(_1d64e47d6_lex* _self_, jule::Slice<jule::U8>* _56723_txt) {
	jule::Str __jule_func_result;
	if (((*(_56723_txt))[0LL] == '_')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result=_1d64e30cb_hexNum(_56723_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1d92d1ed8;
	};
	__jule_func_result=_1d64e2d12_octalNum(_56723_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1d92d1ed8;
	};
	__jule_func_result=_1d64e1629_binaryNum(_56723_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1d92d1ed8;
	};
	__jule_func_result=_1d64e1360_commonNum(_56723_txt);
	_julec_label_1d92d1ed8:;
	(*(_self_))._field_pos+=__jule_func_result.len();
	return __jule_func_result;;
}



inline jule::Str _1d64e6695_escapeSeq(_1d64e47d6_lex* _self_, jule::Slice<jule::U8>* _58929_txt) {
	jule::Str _59013_seq = jule::Str();;
	if (((*(_58929_txt)).len() < 2LL)) {
		goto _julec_label_1d92d8330;
	};
	{
		auto &_match_expr{ (*(_58929_txt))[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_1d92d62c8:;
			{
				(*(_self_))._field_pos+=2LL;
				return static_cast<jule::Str>((*(_58929_txt)).slice(0LL, 2LL));;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1d92d6471:;
			{
				_59013_seq=_1d64e3719_bigUnicodePointEscape(_58929_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_1d92d600e:;
			{
				_59013_seq=_1d64e39d3_littleUnicodePointEscape(_58929_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1d92d6075:;
			{
				_59013_seq=_1d64e3c9c_hexByteEscape(_58929_txt);
			}
		}
		else {
			_case_begin_1d92d589e:;
			{
				_59013_seq=_1d64e4066_byteEscape(_58929_txt);
			}
		}
		_match_end_1d92d5ddd:;
	};
	_julec_label_1d92d8330:;
	if ((_59013_seq).empty()) {
		((*(_self_))._field_pos)++;
		_1d64e4d69_pushErr(_self_, jule::Str::lit("invalid escape sequence", 23), jule::Slice<jule::Any>());
		return jule::Str();;
	};
	(*(_self_))._field_pos+=_59013_seq.len();
	return _59013_seq;;
}



inline jule::Str _1d64e6a91_getRune(_1d64e47d6_lex* _self_, jule::Slice<jule::U8>* _61927_txt, jule::Bool _61940_raw) {
	if (((!(_61940_raw)) && ((*(_61927_txt))[0LL] == '\\'))) {
		return _1d64e6695_escapeSeq(_self_, _61927_txt);;
	};
	jule::I32 _6239_r = 0;;
	jule::I64 _62312_n = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1e012a138_DecodeRune((*(_61927_txt)));
		_6239_r = __jule_assign_result.__jule_result_arg0;
		_62312_n = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_pos+=_62312_n;
	return jule::Str::from_rune(_6239_r);;
}



inline jule::Str _1d64e6dd2_lexRune(_1d64e47d6_lex* _self_, jule::Slice<jule::U8>* _62827_txt) {
	_1e01838bc_StrBuilder _62913_run = static__1e0183b64_New(8LL);;
	_1e018c9a3_WriteByte(&_62913_run, '\'');
	((*(_self_))._field_column)++;
	jule::I64 _63213_n = 0LL;;
	jule::I64 _63313_i = 1LL;;
	for (; (_63313_i < (*(_62827_txt)).len()); (_63313_i)++) {
		{
			if (((*(_62827_txt))[_63313_i] == '\r')) {
				goto _iter_next_1d92dc565;
			};
			if (((*(_62827_txt))[_63313_i] == '\n')) {
				_1d64e4d69_pushErr(_self_, jule::Str::lit("rune is not finished", 20), jule::Slice<jule::Any>());
				((*(_self_))._field_pos)++;
				_1d64e75ec_newLine(_self_);
				return jule::Str();;
			};
			jule::Slice<jule::U8> _64513_part = (*(_62827_txt)).slice(_63313_i);;
			jule::Str _64613_r = _1d64e6a91_getRune(_self_, &(_64513_part), false);;
			_1e018c6ea_WriteStr(&_62913_run, _64613_r);
			(*(_self_))._field_column+=_1e012bea3_RuneCountStr(_64613_r);
			if (_64613_r.equal("'", 1)) {
				((*(_self_))._field_pos)++;
				goto _iter_end_1d92dc565;
			};
			if ((_64613_r.len() > 1LL)) {
				_63313_i+=(_64613_r.len() - 1LL);
			};
			(_63213_n)++;
		}
	_iter_next_1d92dc565:;
	}
	_iter_end_1d92dc565:;;
	if ((_63213_n == 0LL)) {
		_1d64e4d69_pushErr(_self_, jule::Str::lit("rune is cannot empty", 20), jule::Slice<jule::Any>());
	} else if ((_63213_n > 1LL)) {
		_1d64e4d69_pushErr(_self_, jule::Str::lit("rune is should be single", 24), jule::Slice<jule::Any>());
	};
	return _1e018cee2_Str(&_62913_run);;
}



inline jule::Str _1d64e7168_lexStr(_1d64e47d6_lex* _self_) {
	_1e01838bc_StrBuilder _66913_s = static__1e0183b64_New(16LL);;
	jule::U8 _6709_mark = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
	((*(_self_))._field_pos)++;
	jule::Bool _6729_raw = (_6709_mark == '`');;
	_1e018c9a3_WriteByte(&_66913_s, _6709_mark);
	((*(_self_))._field_column)++;
	while (((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len())) {
		{
			jule::U8 _67713_ch = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
			if ((_67713_ch == '\r')) {
				goto _iter_next_1d92e2b42;
			};
			if ((_67713_ch == '\n')) {
				_1d64e75ec_newLine(_self_);
				if ((!(_6729_raw))) {
					_1d64e4d69_pushErr(_self_, jule::Str::lit("string is not finished", 22), jule::Slice<jule::Any>());
					((*(_self_))._field_pos)++;
					return jule::Str();;
				};
			};
			jule::Slice<jule::U8> _68917_part = (*((*(_self_))._field_file))._field_Data.slice((*(_self_))._field_pos);;
			jule::Str _69013_r = _1d64e6a91_getRune(_self_, &(_68917_part), _6729_raw);;
			_1e018c6ea_WriteStr(&_66913_s, _69013_r);
			(*(_self_))._field_column+=_1e012bea3_RuneCountStr(_69013_r);
			if ((_67713_ch == _6709_mark)) {
				goto _iter_end_1d92e2b42;
			};
		}
	_iter_next_1d92e2b42:;
	}
	_iter_end_1d92e2b42:;;
	return _1e018cee2_Str(&_66913_s);;
}



inline void _1d64e75ec_newLine(_1d64e47d6_lex* _self_) {
	((*(_self_))._field_row)++;
	(*(_self_))._field_column=1LL;
}



inline jule::Bool _1d64e7b5d_isOp(_1d64e47d6_lex* _self_, jule::Slice<jule::U8>* _71024_txt, jule::Str _71037_kind, jule::U64 _71048_id, jule::Ptr<_1d64d5cd3_Token>* _71066_t) {
	if ((!(_1d64de858_bytesHasPrefix(_71024_txt, _71037_kind)))) {
		return false;;
	};
	(*((*(_71066_t))))._field_Kind=_71037_kind;
	(*((*(_71066_t))))._field_Id=_71048_id;
	(*(_self_))._field_pos+=_71037_kind.len();
	return true;;
}



inline jule::Bool _1d64e8059_lexBasicOps(_1d64e47d6_lex* _self_, jule::Slice<jule::U8> _72030_txt, jule::Ptr<_1d64d5cd3_Token>* _72048_tok) {
	{
		auto expr = &(_1d64dde40_basicOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d92e9660:;
		if (it != expr_end) {
			_1d64dd6c0_kindPair *_72116_pair = it;
			{
				if (_1d64e7b5d_isOp(_self_, &(_72030_txt), (*(_72116_pair))._field_kind, (*(_72116_pair))._field_id, _72048_tok)) {
					return true;;
				};
			}
			_iter_next_1d92e9660:;
			++it;
			goto _iter_begin_1d92e9660;
		}
		_iter_end_1d92e9660:;
	};
	return false;;
}



inline jule::Bool _1d64e8455_lexId(_1d64e47d6_lex* _self_, jule::Slice<jule::U8>* _72925_txt, jule::Ptr<_1d64d5cd3_Token>* _72943_t) {
	jule::Str _7309_lex = _1d64e571b_id(_self_, _72925_txt);;
	if ((_7309_lex).empty()) {
		return false;;
	};
	(*((*(_72943_t))))._field_Kind=_7309_lex;
	(*((*(_72943_t))))._field_Id=static_cast<jule::U64>(1LLU);
	return true;;
}



inline jule::Bool _1d64e8851_lexNum(_1d64e47d6_lex* _self_, jule::Slice<jule::U8>* _73926_txt, jule::Ptr<_1d64d5cd3_Token>* _73944_t) {
	jule::Str _7409_lex = _1d64e6354_num(_self_, _73926_txt);;
	if ((_7409_lex).empty()) {
		return false;;
	};
	(*((*(_73944_t))))._field_Kind=_7409_lex;
	(*((*(_73944_t))))._field_Id=static_cast<jule::U64>(4LLU);
	return true;;
}



inline jule::Ptr<_1d64d5cd3_Token> _1d64e8ad7_token(_1d64e47d6_lex* _self_) {
	jule::Ptr<_1d64d5cd3_Token> _75113_t = jule::new_ptr<_1d64d5cd3_Token>(_1d64d5cd3_Token{._field_File=(*(_self_))._field_file, ._field_Id=static_cast<jule::U64>(0LLU)});;
	jule::Slice<jule::U8> _7569_txt = _1d64e59a2_resume(_self_);;
	if ((_7569_txt == nullptr)) {
		return _75113_t;;
	};
	(*(_75113_t))._field_Column=(*(_self_))._field_column;
	(*(_75113_t))._field_Row=(*(_self_))._field_row;
	{
		
		if (_1d64e8851_lexNum(_self_, &(_7569_txt), &(_75113_t))) {
			_case_begin_1d93016de:;
			{
				goto _match_end_1d92ee654;
			}
		}
		else if ((_7569_txt[0LL] == '\'')) {
			_case_begin_1d9300cd7:;
			{
				(*(_75113_t))._field_Kind=_1d64e6dd2_lexRune(_self_, &(_7569_txt));
				(*(_75113_t))._field_Id=static_cast<jule::U64>(4LLU);
				return _75113_t;;
			}
		}
		else if (((_7569_txt[0LL] == '\"') || (_7569_txt[0LL] == '`'))) {
			_case_begin_1d9300d4d:;
			{
				(*(_75113_t))._field_Kind=_1d64e7168_lexStr(_self_);
				(*(_75113_t))._field_Id=static_cast<jule::U64>(4LLU);
				return _75113_t;;
			}
		}
		else if (_1d64de858_bytesHasPrefix(&(_7569_txt), jule::Str::lit("//", 2))) {
			_case_begin_1d9300db4:;
			{
				_1d64e5c5a_lexLineComment(_self_, &(_75113_t));
				return _75113_t;;
			}
		}
		else if (_1d64de858_bytesHasPrefix(&(_7569_txt), jule::Str::lit("/*", 2))) {
			_case_begin_1d9300259:;
			{
				_1d64e6013_lexRangeComment(_self_, &(_75113_t));
				return _75113_t;;
			}
		}
		else if (_1d64e8059_lexBasicOps(_self_, _7569_txt, &(_75113_t))) {
			_case_begin_1d93002c0:;
			{
				goto _match_end_1d92ee654;
			}
		}
		else if (_1d64e8455_lexId(_self_, &(_7569_txt), &(_75113_t))) {
			_case_begin_1d9300336:;
			{
				{
					auto expr = &(_1d64ddaee_keywords);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d930513d:;
					if (it != expr_end) {
						_1d64dd6c0_kindPair *_78820_pair = it;
						{
							if (((*(_78820_pair))._field_kind == (*(_75113_t))._field_Kind)) {
								(*(_75113_t))._field_Id=(*(_78820_pair))._field_id;
								goto _iter_end_1d930513d;
							};
						}
						_iter_next_1d930513d:;
						++it;
						goto _iter_begin_1d930513d;
					}
					_iter_end_1d930513d:;
				};
			}
		}
		else {
			_case_begin_1d93001e3:;
			{
				jule::I32 _79513_r = 0;;
				jule::I64 _79516_sz = 0;;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1e012a138_DecodeRune(_7569_txt);
					_79513_r = __jule_assign_result.__jule_result_arg0;
					_79516_sz = __jule_assign_result.__jule_result_arg1;
				});
				_1d64e4d69_pushErr(_self_, jule::Str::lit("undefined token: @", 18), jule::Slice<jule::Any>::make({jule::Any(_79513_r, &__jule_any_type6)}));
				((*(_self_))._field_column)++;
				(*(_self_))._field_pos+=_79516_sz;
				return _75113_t;;
			}
		}
		_match_end_1d92ee654:;
	};
	(*(_self_))._field_column+=_1e012bea3_RuneCountStr((*(_75113_t))._field_Kind);
	return _75113_t;;
}





std::ostream &operator<<(std::ostream &_Stream, _1d64e47d6_lex _Src) {
	_Stream << "lex{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d64e9423_Ast _Src) {
	_Stream << "Ast{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "TopDirectives:" << _Src._field_TopDirectives << ", ";
	_Stream << "UseDecls:" << _Src._field_UseDecls << ", ";
	_Stream << "Nodes:" << _Src._field_Nodes;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d64ea3d0_Node _Src) {
	_Stream << "Node{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d64ea7ed_Directive _Src) {
	_Stream << "Directive{";
	_Stream << "Tag:" << _Src._field_Tag << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d64eb3d1_TypeDecl _Src) {
	_Stream << "TypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d64eb9db_IdentTypeDecl _Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d64ebcd8_SubIdentTypeDecl _Src) {
	_Stream << "SubIdentTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d64ec17e_NamespaceTypeDecl _Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d64ec47b_SptrTypeDecl _Src) {
	_Stream << "SptrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d64ec811_SlcTypeDecl _Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d64ecb0d_TupleTypeDecl _Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "Types:" << _Src._field_Types;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d64ed26d_IsUnsafe(_1d64ece0a_PtrTypeDecl* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1d64ece0a_PtrTypeDecl _Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d64eda10_AutoSized(_1d64ed69c_ArrTypeDecl* _self_) {
	return ((*(_self_))._field_Size == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1d64ed69c_ArrTypeDecl _Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem << ", ";
	_Stream << "Size:" << _Src._field_Size;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d64eddea_MapTypeDecl _Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d64ee2c4_RetTypeDecl _Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d6500715_Expr _Src) {
	_Stream << "Expr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d6500a12_RangeExpr _Src) {
	_Stream << "RangeExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d65010d9_UseExpr _Src) {
	_Stream << "UseExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d65013d6_TupleExpr _Src) {
	_Stream << "TupleExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d65017b0_LitExpr _Src) {
	_Stream << "LitExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d6501b89_UnsafeExpr _Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d6502140_IdentExpr _Src) {
	_Stream << "IdentExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d65027c2_UnaryExpr _Src) {
	_Stream << "UnaryExpr{";
	_Stream << "Op:" << _Src._field_Op << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d6502b9b_VariadicExpr _Src) {
	_Stream << "VariadicExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d6503075_CastExpr _Src) {
	_Stream << "CastExpr{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d650344e_NsSelectionExpr _Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "Ns:" << _Src._field_Ns << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d6503828_SubIdentExpr _Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d6503cce_BinaryExpr _Src) {
	_Stream << "BinaryExpr{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d65047b3_Unhandled(_1d650443e_FnCallExpr* _self_) {
	return ((*(_self_))._field_Exception == nullptr);;
}



inline jule::Bool _1d6504a49_Ignored(_1d650443e_FnCallExpr* _self_) {
	return (((*(_self_))._field_Exception != nullptr) && (*((*(_self_))._field_Exception))._field_Deferred);;
}





std::ostream &operator<<(std::ostream &_Stream, _1d650443e_FnCallExpr _Src) {
	_Stream << "FnCallExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Exception:" << _Src._field_Exception << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d6504e34_FieldExprPair _Src) {
	_Stream << "FieldExprPair{";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d650575e_StructLit _Src) {
	_Stream << "StructLit{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d6505c15_BraceLit _Src) {
	_Stream << "BraceLit{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d6506540_KeyValPair _Src) {
	_Stream << "KeyValPair{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val << ", ";
	_Stream << "Colon:" << _Src._field_Colon;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d6506c38_SliceExpr _Src) {
	_Stream << "SliceExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d65076c8_IndexingExpr _Src) {
	_Stream << "IndexingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d6507d38_SlicingExpr _Src) {
	_Stream << "SlicingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Start:" << _Src._field_Start << ", ";
	_Stream << "To:" << _Src._field_To;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d6508135_Constraint _Src) {
	_Stream << "Constraint{";
	_Stream << "Mask:" << _Src._field_Mask;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d65085db_GenericDecl _Src) {
	_Stream << "GenericDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d65089b5_LabelSt _Src) {
	_Stream << "LabelSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d6508d8e_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d650918b_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "Token:" << _Src._field_Token;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d65097eb_AssignLeft _Src) {
	_Stream << "AssignLeft{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d6509d7e_AssignSt _Src) {
	_Stream << "AssignSt{";
	_Stream << "Declarative:" << _Src._field_Declarative << ", ";
	_Stream << "Setter:" << _Src._field_Setter << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d650ac92_Stmt _Src) {
	_Stream << "Stmt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d650b402_ScopeTree _Src) {
	_Stream << "ScopeTree{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d650beb3_IsSelf(_1d650bb3e_ParamDecl* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}





std::ostream &operator<<(std::ostream &_Stream, _1d650bb3e_ParamDecl _Src) {
	_Stream << "ParamDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d650d404_IsAnon(_1d650d091_FnDecl* _self_) {
	return (*(_self_))._field_Ident.equal("<anonymous>", 11);;
}





std::ostream &operator<<(std::ostream &_Stream, _1d650d091_FnDecl _Src) {
	_Stream << "FnDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d650e24b_VarDecl _Src) {
	_Stream << "VarDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Setter:" << _Src._field_Setter << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d650e625_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d6510208_IsInf(_1d650ed95_Iter* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1d650ed95_Iter _Src) {
	_Stream << "Iter{";
	_Stream << "Comptime:" << _Src._field_Comptime << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d6510a33_IsWhileNext(_1d65106c0_WhileKind* _self_) {
	return ((*(_self_))._field_Next != nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1d65106c0_WhileKind _Src) {
	_Stream << "WhileKind{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "NextToken:" << _Src._field_NextToken;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d65110c7_RangeKind _Src) {
	_Stream << "RangeKind{";
	_Stream << "InToken:" << _Src._field_InToken << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d65114a1_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d651187a_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d6511d31_If _Src) {
	_Stream << "If{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d651220a_Else _Src) {
	_Stream << "Else{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d65126b1_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Head:" << _Src._field_Head << ", ";
	_Stream << "Tail:" << _Src._field_Tail << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d6512ded_TypeAliasDecl _Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d65133a4_Case _Src) {
	_Stream << "Case{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d6513bbd_MatchCase _Src) {
	_Stream << "MatchCase{";
	_Stream << "Comptime:" << _Src._field_Comptime << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d65144d7_UseDecl _Src) {
	_Stream << "UseDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Full:" << _Src._field_Full << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Std:" << _Src._field_Std;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d651498d_EnumItemDecl _Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d651554e_EnumDecl _Src) {
	_Stream << "EnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d6515d79_TypeEnumItemDecl _Src) {
	_Stream << "TypeEnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d65164d9_TypeEnumDecl _Src) {
	_Stream << "TypeEnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d65167a3_FieldDecl _Src) {
	_Stream << "FieldDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d6517199_StructDecl _Src) {
	_Stream << "StructDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d65178d6_TraitDecl _Src) {
	_Stream << "TraitDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Inherits:" << _Src._field_Inherits << ", ";
	_Stream << "Methods:" << _Src._field_Methods;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d6518046_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1d651e4ae_FieldIns> _1d6519762_instance(jule::Ptr<_1d65193dd_Field> _self_) {
	return jule::new_ptr<_1d651e4ae_FieldIns>(_1d651e4ae_FieldIns{._field_Decl=_self_, });;
}





std::ostream &operator<<(std::ostream &_Stream, _1d65193dd_Field _Src) {
	_Stream << "Field{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d651b3bd_Operators _Src) {
	_Stream << "Operators{";
	_Stream << "Eq:" << _Src._field_Eq << ", ";
	_Stream << "Gt:" << _Src._field_Gt << ", ";
	_Stream << "GtEq:" << _Src._field_GtEq << ", ";
	_Stream << "Lt:" << _Src._field_Lt << ", ";
	_Stream << "LtEq:" << _Src._field_LtEq << ", ";
	_Stream << "Shl:" << _Src._field_Shl << ", ";
	_Stream << "Shr:" << _Src._field_Shr << ", ";
	_Stream << "Add:" << _Src._field_Add << ", ";
	_Stream << "Sub:" << _Src._field_Sub << ", ";
	_Stream << "Div:" << _Src._field_Div << ", ";
	_Stream << "Mul:" << _Src._field_Mul << ", ";
	_Stream << "Mod:" << _Src._field_Mod << ", ";
	_Stream << "BitAnd:" << _Src._field_BitAnd << ", ";
	_Stream << "BitOr:" << _Src._field_BitOr << ", ";
	_Stream << "BitXor:" << _Src._field_BitXor << ", ";
	_Stream << "Neg:" << _Src._field_Neg << ", ";
	_Stream << "Pos:" << _Src._field_Pos << ", ";
	_Stream << "BitNot:" << _Src._field_BitNot << ", ";
	_Stream << "AddAssign:" << _Src._field_AddAssign << ", ";
	_Stream << "SubAssign:" << _Src._field_SubAssign << ", ";
	_Stream << "DivAssign:" << _Src._field_DivAssign << ", ";
	_Stream << "MulAssign:" << _Src._field_MulAssign << ", ";
	_Stream << "ModAssign:" << _Src._field_ModAssign << ", ";
	_Stream << "ShlAssign:" << _Src._field_ShlAssign << ", ";
	_Stream << "ShrAssign:" << _Src._field_ShrAssign << ", ";
	_Stream << "BitOrAssign:" << _Src._field_BitOrAssign << ", ";
	_Stream << "BitAndAssign:" << _Src._field_BitAndAssign << ", ";
	_Stream << "BitXorAssign:" << _Src._field_BitXorAssign;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1d652005e_StructIns> _1d651c743_instance(jule::Ptr<_1d651c2d1_Struct> _self_) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*(_self_))._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	jule::Ptr<_1d652005e_StructIns> _10013_ins = jule::new_ptr<_1d652005e_StructIns>(_1d652005e_StructIns{._field_Decl=_self_, ._field_Fields=jule::Slice<jule::Ptr<_1d651e4ae_FieldIns>>::alloc(0LL, (*(_self_))._field_Fields.len()), ._field_Statics=jule::Slice<jule::Ptr<_1d65d9018_Var>>::alloc(0LL, (*(_self_))._field_Statics.len()), ._field_Refers=static__1d653863d_new(), });;
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d960115e:;
		if (it != expr_end) {
			jule::Ptr<_1d65d9018_Var> _10721_s = *it;
			{
				{ jule::Slice<jule::Ptr<_1d65d9018_Var>> &__jule_push_dest = (*(_10013_ins))._field_Statics; __jule_push_dest.push(jule::new_ptr<_1d65d9018_Var>((*(_10721_s)))); };
			}
			_iter_next_1d960115e:;
			++it;
			goto _iter_begin_1d960115e;
		}
		_iter_end_1d960115e:;
	};
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d960159e:;
		if (it != expr_end) {
			jule::Ptr<_1d65193dd_Field> _11121_f = *it;
			{
				{ jule::Slice<jule::Ptr<_1d651e4ae_FieldIns>> &__jule_push_dest = (*(_10013_ins))._field_Fields; __jule_push_dest.push(_1d6519762_instance(_11121_f)); };
				if ((((!((*(_11121_f))._field_Mutable)) && ((*((*(_11121_f))._field_Kind))._field_Kind != nullptr)) && _1d66793b6_Mutable((*((*(_11121_f))._field_Kind))._field_Kind.ptr()))) {
					(*(_10013_ins))._field_Mutable=true;
				};
			}
			_iter_next_1d960159e:;
			++it;
			goto _iter_begin_1d960159e;
		}
		_iter_end_1d960159e:;
	};
	if (((*(_self_))._field_Generics.len() == 0LL)) {
		(*(_10013_ins))._field_Methods=(*(_self_))._field_Methods;
	} else {
		(*(_10013_ins))._field_Methods=jule::Slice<jule::Ptr<_1d653226e_Fn>>::alloc(0LL, (*(_self_))._field_Methods.len());
		{
			auto expr = &((*(_self_))._field_Methods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1d9605bd0:;
			if (it != expr_end) {
				jule::Ptr<_1d653226e_Fn> _12225_f = *it;
				{
					jule::Ptr<_1d653226e_Fn> _12321_fins = jule::new_ptr<_1d653226e_Fn>((*(_12225_f)));;
					(*(_12321_fins))._field_Instances=nullptr;
					{ jule::Slice<jule::Ptr<_1d653226e_Fn>> &__jule_push_dest = (*(_10013_ins))._field_Methods; __jule_push_dest.push(_12321_fins); };
				}
				_iter_next_1d9605bd0:;
				++it;
				goto _iter_begin_1d9605bd0;
			}
			_iter_end_1d9605bd0:;
		};
	};
	return _10013_ins;;
}



inline jule::Ptr<_1d652005e_StructIns> _1d651ca51_appendInstance(_1d651c2d1_Struct* _self_, jule::Ptr<_1d652005e_StructIns>* _13438_ins) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*(_self_))._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9608089:;
		if (it != expr_end) {
			jule::Ptr<_1d652005e_StructIns> _14021_ains = *it;
			{
				if (_1d6520bca_Same(_14021_ains.ptr(), (*(_13438_ins)))) {
					return _14021_ains;;
				};
			}
			_iter_next_1d9608089:;
			++it;
			goto _iter_begin_1d9608089;
		}
		_iter_end_1d9608089:;
	};
	{ jule::Slice<jule::Ptr<_1d652005e_StructIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_13438_ins))); };
	return nullptr;;
}



inline jule::Ptr<_1d653226e_Fn> _1d651ce4c_FindMethod(_1d651c2d1_Struct* _self_, jule::Str _15229_ident, jule::Bool _15241_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9609640:;
		if (it != expr_end) {
			jule::Ptr<_1d653226e_Fn> _15321_f = *it;
			{
				if ((((*(_15321_f))._field_Statically == _15241_statically) && ((*(_15321_f))._field_Ident == _15229_ident))) {
					return _15321_f;;
				};
			}
			_iter_next_1d9609640:;
			++it;
			goto _iter_begin_1d9609640;
		}
		_iter_end_1d9609640:;
	};
	return nullptr;;
}



inline jule::Ptr<_1d65d9018_Var> _1d651d28d_FindStatic(_1d651c2d1_Struct* _self_, jule::Str _16329_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d960a993:;
		if (it != expr_end) {
			jule::Ptr<_1d65d9018_Var> _16421_v = *it;
			{
				if (((*(_16421_v))._field_Ident == _16329_ident)) {
					return _16421_v;;
				};
			}
			_iter_next_1d960a993:;
			++it;
			goto _iter_begin_1d960a993;
		}
		_iter_end_1d960a993:;
	};
	return nullptr;;
}



inline jule::Ptr<_1d65193dd_Field> _1d651d5ce_FindField(_1d651c2d1_Struct* _self_, jule::Str _17428_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d960b9a5:;
		if (it != expr_end) {
			jule::Ptr<_1d65193dd_Field> _17521_f = *it;
			{
				if (((*(_17521_f))._field_Ident == _17428_ident)) {
					return _17521_f;;
				};
			}
			_iter_next_1d960b9a5:;
			++it;
			goto _iter_begin_1d960b9a5;
		}
		_iter_end_1d960b9a5:;
	};
	return nullptr;;
}



inline jule::Bool _1d651d920_IsImplements(_1d651c2d1_Struct* _self_, jule::Ptr<_1d654554b_Trait> _18427_t) {
	{
		auto expr = &((*(_self_))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d960c9a6:;
		if (it != expr_end) {
			jule::Ptr<_1d654554b_Trait> *_18516_it = it;
			{
				if ((_18427_t == (*(_18516_it)))) {
					return true;;
				};
			}
			_iter_next_1d960c9a6:;
			++it;
			goto _iter_begin_1d960c9a6;
		}
		_iter_end_1d960c9a6:;
	};
	return false;;
}



inline jule::Bool _1d651dc61_IsUses(_1d651c2d1_Struct* _self_, jule::Ptr<_1d651c2d1_Struct> _19421_s) {
	{
		auto expr = &((*(_self_))._field_Uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d960d787:;
		if (it != expr_end) {
			jule::Ptr<_1d651c2d1_Struct> *_19516_u = it;
			{
				while ((_19421_s == (*(_19516_u)))) {
					{
						return true;;
					}
				_iter_next_1d960de19:;
				}
				_iter_end_1d960de19:;;
			}
			_iter_next_1d960d787:;
			++it;
			goto _iter_begin_1d960d787;
		}
		_iter_end_1d960d787:;
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1d651c2d1_Struct _Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Depends:" << _Src._field_Depends << ", ";
	_Stream << "Uses:" << _Src._field_Uses << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Implements:" << _Src._field_Implements << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d651e4ae_FieldIns _Src) {
	_Stream << "FieldIns{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d652400d_OperandExprModel _Src) {
	_Stream << "OperandExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Model:" << _Src._field_Model;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d6524508_BinaryExprModel _Src) {
	_Stream << "BinaryExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d65248d2_UnaryExprModel _Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d6524e10_StructArgExprModel _Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d65252a6_StructLitExprModel _Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "Strct:" << _Src._field_Strct << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d65255a3_AllocStructLitExprModel _Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "Lit:" << _Src._field_Lit;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d6525b36_CastingExprModel _Src) {
	_Stream << "CastingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "ExprKind:" << _Src._field_ExprKind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d65264d8_FnCallExprModel _Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Except:" << _Src._field_Except << ", ";
	_Stream << "Assigned:" << _Src._field_Assigned;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d65268b2_SliceExprModel _Src) {
	_Stream << "SliceExprModel{";
	_Stream << "ElemKind:" << _Src._field_ElemKind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d6526d68_IndexingExprModel _Src) {
	_Stream << "IndexingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d6527242_AnonFnExprModel _Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Global:" << _Src._field_Global;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d652761b_KeyValPairExprModel _Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d6527ac2_MapExprModel _Src) {
	_Stream << "MapExprModel{";
	_Stream << "KeyKind:" << _Src._field_KeyKind << ", ";
	_Stream << "ValKind:" << _Src._field_ValKind << ", ";
	_Stream << "Entries:" << _Src._field_Entries;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d6528155_SlicingExprModel _Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d65286d8_TraitSubIdentExprModel _Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Trt:" << _Src._field_Trt;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d6529079_StructSubIdentExprModel _Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Owner:" << _Src._field_Owner;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d6529530_StructStaticIdentExprModel _Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "Structure:" << _Src._field_Structure << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d6529909_ArrayExprModel _Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d6529c06_TupleExprModel _Src) {
	_Stream << "TupleExprModel{";
	_Stream << "Datas:" << _Src._field_Datas;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d652a0d0_BuiltinOutCallExprModel _Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d652a4a9_BuiltinOutlnCallExprModel _Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d652a883_BuiltinNewCallExprModel _Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Init:" << _Src._field_Init;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d652ac5c_BuiltinPanicCallExprModel _Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d652b213_BuiltinAssertCallExprModel _Src) {
	_Stream << "BuiltinAssertCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Log:" << _Src._field_Log;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d652b6b9_BuiltinMakeCallExprModel _Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Len:" << _Src._field_Len << ", ";
	_Stream << "Cap:" << _Src._field_Cap;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d652ba93_BuiltinAppendCallExprModel _Src) {
	_Stream << "BuiltinAppendCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elements:" << _Src._field_Elements;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d652bd90_BuiltinLenCallExprModel _Src) {
	_Stream << "BuiltinLenCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d652c18c_BuiltinCapCallExprModel _Src) {
	_Stream << "BuiltinCapCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d652c566_BuiltinDeleteCallExprModel _Src) {
	_Stream << "BuiltinDeleteCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Key:" << _Src._field_Key;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d652c940_BuiltinCopyCallExprModel _Src) {
	_Stream << "BuiltinCopyCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Src:" << _Src._field_Src;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d652cd19_BuiltinErrorCallExprModel _Src) {
	_Stream << "BuiltinErrorCallExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Err:" << _Src._field_Err;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d65288c5_SizeofExprModel _Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d652d545_AlignofExprModel _Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d652d842_RuneExprModel _Src) {
	_Stream << "RuneExprModel{";
	_Stream << "Code:" << _Src._field_Code;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d652db3e_IntegratedToStrExprModel _Src) {
	_Stream << "IntegratedToStrExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d652e018_BackendEmitExprModel _Src) {
	_Stream << "BackendEmitExprModel{";
	_Stream << "Code:" << _Src._field_Code << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d652e315_FreeExprModel _Src) {
	_Stream << "FreeExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d6530019_RetType _Src) {
	_Stream << "RetType{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1d65341c7_ParamIns> _1d6530b30_instance(jule::Ptr<_1d653079a_Param> _self_) {
	return jule::new_ptr<_1d65341c7_ParamIns>(_1d65341c7_ParamIns{._field_Decl=_self_, });;
}



inline jule::Bool _1d6530db6_IsSelf(_1d653079a_Param* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}



inline jule::Bool _1d653114c_IsRef(_1d653079a_Param* _self_) {
	return (!((*(_self_))._field_Ident).empty() && ((*(_self_))._field_Ident[0LL] == '&'));;
}





std::ostream &operator<<(std::ostream &_Stream, _1d653079a_Param _Src) {
	_Stream << "Param{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d65326e2_IsVoid(_1d653226e_Fn* _self_) {
	return ((*(_self_))._field_Result == nullptr);;
}



inline jule::Bool _1d6532978_IsMethod(_1d653226e_Fn* _self_) {
	return ((*(_self_))._field_Owner != nullptr);;
}



inline jule::Bool _1d6532c0e_IsEntryPoint(_1d653226e_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("main", 4);;
}



inline jule::Bool _1d6532e95_IsInit(_1d653226e_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("init", 4);;
}



inline jule::Bool _1d653322b_IsAnon(_1d653226e_Fn* _self_) {
	return _1d64d8a0b_IsAnonIdent((*(_self_))._field_Ident);;
}



inline jule::Bool _1d65334b2_AnyVar(_1d653226e_Fn* _self_) {
	return (((*(_self_))._field_Result != nullptr) && ((*((*(_self_))._field_Result))._field_Idents.len() > 0LL));;
}



inline jule::Ptr<_1d6535173_FnIns> _1d6533748_instanceForce(jule::Ptr<_1d653226e_Fn> _self_) {
	jule::Ptr<_1d6535173_FnIns> _10113_ins = jule::new_ptr<_1d6535173_FnIns>(_1d6535173_FnIns{._field_Decl=_self_, ._field_Scope=jule::new_ptr<_1d6574129_Scope>(), ._field_Refers=static__1d653863d_new(), });;
	(*(_10113_ins))._field_Params=jule::Slice<jule::Ptr<_1d65341c7_ParamIns>>::alloc(0LL, (*(_self_))._field_Params.len());
	{
		auto expr = &((*(_self_))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9625bde:;
		if (it != expr_end) {
			jule::Ptr<_1d653079a_Param> _10821_p = *it;
			{
				{ jule::Slice<jule::Ptr<_1d65341c7_ParamIns>> &__jule_push_dest = (*(_10113_ins))._field_Params; __jule_push_dest.push(_1d6530b30_instance(_10821_p)); };
			}
			_iter_next_1d9625bde:;
			++it;
			goto _iter_begin_1d9625bde;
		}
		_iter_end_1d9625bde:;
	};
	if (((*((*(_10113_ins))._field_Decl))._field_Result != nullptr)) {
		(*(_10113_ins))._field_Result=(*((*((*((*(_10113_ins))._field_Decl))._field_Result))._field_Kind))._field_Kind;
	};
	return _10113_ins;;
}



inline jule::Ptr<_1d6535173_FnIns> _1d65339ce_instance(jule::Ptr<_1d653226e_Fn> _self_) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*(_self_))._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	return _1d6533748_instanceForce(_self_);;
}



inline jule::Ptr<_1d6535173_FnIns> _1d6533cdc_appendInstance(_1d653226e_Fn* _self_, jule::Ptr<_1d6535173_FnIns>* _12938_ins) {
	if (((*(_self_))._field_Generics.len() == 0LL)) {
		if (((*(_self_))._field_Instances.len() == 1LL)) {
			return (*(_self_))._field_Instances[0LL];;
		};
		{ jule::Slice<jule::Ptr<_1d6535173_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12938_ins))); };
		return nullptr;;
	};
	if (((*(_self_))._field_Instances.len() == 0LL)) {
		{ jule::Slice<jule::Ptr<_1d6535173_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12938_ins))); };
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d962b178:;
		if (it != expr_end) {
			jule::Ptr<_1d6535173_FnIns> _14521_ains = *it;
			{
				if (_1d6536bd0_Same(_14521_ains.ptr(), (*(_12938_ins)))) {
					return _14521_ains;;
				};
			}
			_iter_next_1d962b178:;
			++it;
			goto _iter_begin_1d962b178;
		}
		_iter_end_1d962b178:;
	};
	{ jule::Slice<jule::Ptr<_1d6535173_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12938_ins))); };
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1d653226e_Fn _Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params << ", ";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1d653453a_Str(_1d65341c7_ParamIns* _self_) {
	_1e01838bc_StrBuilder _16713_s = static__1e0183b64_New(32LL);;
	if ((*((*(_self_))._field_Decl))._field_Mutable) {
		_1e018c6ea_WriteStr(&_16713_s, jule::Str::lit("mut ", 4));
	};
	if ((*((*(_self_))._field_Decl))._field_Reference) {
		_1e018c6ea_WriteStr(&_16713_s, jule::Str::lit("&_:", 3));
	};
	if (_1d6530db6_IsSelf((*(_self_))._field_Decl.ptr())) {
		if (_1d653114c_IsRef((*(_self_))._field_Decl.ptr())) {
			_1e018c9a3_WriteByte(&_16713_s, '&');
		};
		_1e018c6ea_WriteStr(&_16713_s, jule::Str::lit("self", 4));
		return _1e018cee2_Str(&_16713_s);;
	};
	if ((*((*(_self_))._field_Decl))._field_Variadic) {
		_1e018c6ea_WriteStr(&_16713_s, jule::Str::lit("...", 3));
	};
	if (((*(_self_))._field_Kind != nullptr)) {
		_1e018c6ea_WriteStr(&_16713_s, _1d6677ded_Str((*(_self_))._field_Kind.ptr()));
	};
	return _1e018cee2_Str(&_16713_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _1d65341c7_ParamIns _Src) {
	_Stream << _1d653453a_Str(&_Src);
	return _Stream;
}



inline jule::Str _1d65354b4_Str(_1d6535173_FnIns* _self_) {
	;
	return _1d6537021_GetKindStr(_self_, false);;
}



inline jule::Bool _1d6535805_Equal(jule::Ptr<_1d6535173_FnIns> _self_, jule::Ptr<_1d6677a35_TypeKind> _21821_other) {
	jule::Ptr<_1d6535173_FnIns> _2199_f = _1d667b473_Fn(_21821_other.ptr());;
	if ((_2199_f == nullptr)) {
		return false;;
	};
	return _1d6535c9a_EqualFn(_self_, &(_2199_f));;
}



inline jule::Bool _1d6535c9a_EqualFn(jule::Ptr<_1d6535173_FnIns> _self_, jule::Ptr<_1d6535173_FnIns>* _22924_f) {
	if (((*((*(_self_))._field_Decl))._field_Exceptional != (*((*((*(_22924_f))))._field_Decl))._field_Exceptional)) {
		return false;;
	};
	if (((*((*(_self_))._field_Decl))._field_Unsafety != (*((*((*(_22924_f))))._field_Decl))._field_Unsafety)) {
		return false;;
	};
	if ((_1d65326e2_IsVoid((*(_self_))._field_Decl.ptr()) != _1d65326e2_IsVoid((*((*(_22924_f))))._field_Decl.ptr()))) {
		return false;;
	};
	jule::Fn<jule::Bool(jule::Ptr<_1d65341c7_ParamIns>,jule::Ptr<_1d65341c7_ParamIns>)> _2399_checkParams = jule::Fn<jule::Bool(jule::Ptr<_1d65341c7_ParamIns>,jule::Ptr<_1d65341c7_ParamIns>)>([=](jule::Ptr<_1d65341c7_ParamIns> _23927_p1, jule::Ptr<_1d65341c7_ParamIns> _23942_p2) mutable -> jule::Bool {
		if (((*((*(_23927_p1))._field_Decl))._field_Mutable != (*((*(_23942_p2))._field_Decl))._field_Mutable)) {
			return false;;
		};
		if (_1d6530db6_IsSelf((*(_23927_p1))._field_Decl.ptr())) {
			if ((!(_1d6530db6_IsSelf((*(_23942_p2))._field_Decl.ptr())))) {
				return false;;
			};
			if ((_1d653114c_IsRef((*(_23927_p1))._field_Decl.ptr()) != _1d653114c_IsRef((*(_23942_p2))._field_Decl.ptr()))) {
				return false;;
			};
			return true;;
		};
		if (((*((*(_23927_p1))._field_Decl))._field_Reference != (*((*(_23942_p2))._field_Decl))._field_Reference)) {
			return false;;
		};
		if (((*((*(_23927_p1))._field_Decl))._field_Variadic != (*((*(_23942_p2))._field_Decl))._field_Variadic)) {
			return false;;
		};
		return _1d667823e_Equal((*(_23927_p1))._field_Kind, (*(_23942_p2))._field_Kind);;
	});;
	if (((*((*(_22924_f))))._field_Params.len() != (*(_self_))._field_Params.len())) {
		return false;;
	};
	jule::I64 _27113_i = 0LL;;
	for (; (_27113_i < (*(_self_))._field_Params.len()); (_27113_i)++) {
		{
			if ((!(_2399_checkParams((*(_self_))._field_Params[_27113_i], (*((*(_22924_f))))._field_Params[_27113_i])))) {
				return false;;
			};
		}
	_iter_next_1d963c0ce:;
	}
	_iter_end_1d963c0ce:;;
	if ((!(_1d65326e2_IsVoid((*(_self_))._field_Decl.ptr())))) {
		if ((!(_1d667823e_Equal((*(_self_))._field_Result, (*((*(_22924_f))))._field_Result)))) {
			return false;;
		};
	};
	return true;;
}



inline jule::Bool _1d65360db_equalTrait(jule::Ptr<_1d6535173_FnIns> _self_, jule::Ptr<_1d6535173_FnIns>* _28827_other) {
	if (((*((*(_self_))._field_Decl))._field_Public != (*((*((*(_28827_other))))._field_Decl))._field_Public)) {
		return false;;
	};
	if (((*((*(_self_))._field_Decl))._field_Ident != (*((*((*(_28827_other))))._field_Decl))._field_Ident)) {
		return false;;
	};
	if ((!(_1d6535c9a_EqualFn(_self_, _28827_other)))) {
		return false;;
	};
	if (((*((*(_self_))._field_Decl))._field_Generics.len() != (*((*((*(_28827_other))))._field_Decl))._field_Generics.len())) {
		return false;;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1d6677a35_TypeKind>> _1d6536372_Types(_1d6535173_FnIns* _self_) {
	{
		
		if (((*(_self_))._field_Result == nullptr)) {
			_case_begin_1d9642799:;
			{
				return nullptr;;
			}
		}
		else if ((_1d667beac_Tup((*(_self_))._field_Result.ptr()) == nullptr)) {
			_case_begin_1d9642810:;
			{
				return jule::Slice<jule::Ptr<_1d6677a35_TypeKind>>::make({(*(_self_))._field_Result});;
			}
		}
		else {
			_case_begin_1d9642733:;
			{
				return (*(_1d667beac_Tup((*(_self_))._field_Result.ptr())))._field_Types;;
			}
		}
		_match_end_1d9642667:;
	};
}



inline jule::Bool _1d6536608_IsBuiltin(_1d6535173_FnIns* _self_) {
	return ((*(_self_))._field_caller != nullptr);;
}



inline jule::Bool _1d653688e_IsAnon(_1d6535173_FnIns* _self_) {
	return ((*(_self_))._field_Anon || (((*(_self_))._field_Decl != nullptr) && _1d653322b_IsAnon((*(_self_))._field_Decl.ptr())));;
}



inline jule::Bool _1d6536bd0_Same(_1d6535173_FnIns* _self_, jule::Ptr<_1d6535173_FnIns> _33119_f) {
	if ((((*(_self_))._field_Decl != (*(_33119_f))._field_Decl) || ((*(_33119_f))._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d96461b5:;
		if (it != expr_end) {
			jule::I64 _33613_i = it - expr->begin();
			jule::Ptr<_1d667614e_InsGeneric> *_33616_g = it;
			{
				jule::Ptr<_1d667614e_InsGeneric> _33713_g2 = (*(_33119_f))._field_Generics[_33613_i];;
				if ((((*((*((*(_33616_g))))._field_Kind))._field_BindIdent != (*((*(_33713_g2))._field_Kind))._field_BindIdent) || (!(_1d667823e_Equal((*((*(_33616_g))))._field_Kind, (*(_33713_g2))._field_Kind))))) {
					return false;;
				};
			}
			_iter_next_1d96461b5:;
			++it;
			_33613_i++;
			goto _iter_begin_1d96461b5;
		}
		_iter_end_1d96461b5:;
	};
	return true;;
}



inline jule::Str _1d6537021_GetKindStr(_1d6535173_FnIns* _self_, jule::Bool _34825_ident) {
	_1e01838bc_StrBuilder _34913_s = static__1e0183b64_New(32LL);;
	if ((*((*(_self_))._field_Decl))._field_Unsafety) {
		_1e018c6ea_WriteStr(&_34913_s, jule::Str::lit("unsafe ", 7));
	};
	_1e018c6ea_WriteStr(&_34913_s, jule::Str::lit("fn", 2));
	if ((_34825_ident && ((*(_self_))._field_Decl != nullptr))) {
		_1e018c9a3_WriteByte(&_34913_s, ' ');
		_1e018c6ea_WriteStr(&_34913_s, (*((*(_self_))._field_Decl))._field_Ident);
	};
	_1e018c9a3_WriteByte(&_34913_s, '(');
	jule::I64 _3639_n = (*(_self_))._field_Params.len();;
	if ((_3639_n > 0LL)) {
		{
			auto expr = &((*(_self_))._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1d964b51c:;
			if (it != expr_end) {
				jule::I64 _36517_i = it - expr->begin();
				jule::Ptr<_1d65341c7_ParamIns> *_36520_p = it;
				{
					_1e018c6ea_WriteStr(&_34913_s, _1d653453a_Str((*(_36520_p)).ptr()));
					if ((_36517_i < ((*(_self_))._field_Params.len() - 1LL))) {
						_1e018c9a3_WriteByte(&_34913_s, ',');
					};
				}
				_iter_next_1d964b51c:;
				++it;
				_36517_i++;
				goto _iter_begin_1d964b51c;
			}
			_iter_end_1d964b51c:;
		};
	};
	_1e018c9a3_WriteByte(&_34913_s, ')');
	if ((*((*(_self_))._field_Decl))._field_Exceptional) {
		_1e018c9a3_WriteByte(&_34913_s, '!');
	};
	if ((!(_1d65326e2_IsVoid((*(_self_))._field_Decl.ptr())))) {
		_1e018c9a3_WriteByte(&_34913_s, ':');
		_1e018c6ea_WriteStr(&_34913_s, _1d6677ded_Str((*(_self_))._field_Result.ptr()));
	};
	return _1e018cee2_Str(&_34913_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _1d6535173_FnIns _Src) {
	_Stream << _1d65354b4_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1d6538341_ReferenceStack> static__1d653863d_new(void) {
	return jule::new_ptr<_1d6538341_ReferenceStack>(_1d6538341_ReferenceStack{._field_buffer=jule::Slice<jule::Any>::alloc(0LL, 10LL)});;
}



inline jule::I64 _1d6538a39_Len(_1d6538341_ReferenceStack* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_buffer.len());;
}



inline jule::Any _1d6538d7a_At(_1d6538341_ReferenceStack* _self_, jule::I64 _6821_i) {
	return (*(_self_))._field_buffer[_6821_i];;
}



inline void _1d6539133_Push(_1d6538341_ReferenceStack* _self_, jule::Any _7327_ref) {
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_buffer; __jule_push_dest.push(_7327_ref); };
}



inline jule::Bool _1da00e176_Exist(_1d6538341_ReferenceStack* _self_, jule::Ptr<_1d6535173_FnIns> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1da01052e:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type7_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1da01052e:;
			++it;
			goto _iter_begin_1da01052e;
		}
		_iter_end_1da01052e:;
	};
	return false;;
}

inline jule::Bool _1da0238a5_Exist(_1d6538341_ReferenceStack* _self_, jule::Ptr<_1d65d9018_Var> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1da024c19:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type8_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1da024c19:;
			++it;
			goto _iter_begin_1da024c19;
		}
		_iter_end_1da024c19:;
	};
	return false;;
}

inline jule::Bool _1da0d4548_Exist(_1d6538341_ReferenceStack* _self_, jule::Ptr<_1d652005e_StructIns> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1da0d5901:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type9_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1da0d5901:;
			++it;
			goto _iter_begin_1da0d5901;
		}
		_iter_end_1da0d5901:;
	};
	return false;;
}

inline jule::Bool _1da4177c1_Exist(_1d6538341_ReferenceStack* _self_, jule::Ptr<_1d654554b_Trait> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1da418b02:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type10_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1da418b02:;
			++it;
			goto _iter_begin_1da418b02;
		}
		_iter_end_1da418b02:;
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1d6538341_ReferenceStack _Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d653985e_Pass _Src) {
	_Stream << "Pass{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Text:" << _Src._field_Text;
	_Stream << "}";
	return _Stream;
}



inline void _1d653ecb5_pushErr(_1d653e424_symbolBuilder* _self_, jule::Ptr<_1d64d5cd3_Token>* _33227_token, jule::Str _33242_fmt, jule::Slice<jule::Any> _33255_args) {
	{ jule::Slice<_1e0235a7e_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1d65b394e_compilerErr(_33227_token, true, _33242_fmt, _33255_args)); };
}



inline void _1d6540546_pushSuggestion(_1d653e424_symbolBuilder* _self_, jule::Str _34133_fmt, jule::Slice<jule::Any> _34146_args) {
	{
		_1d65b4e7d_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _34133_fmt, _34146_args);
	};
}



inline jule::Bool _1d6540942_checkCppUseDeclPath(_1d653e424_symbolBuilder* _self_, jule::Ptr<_1d65144d7_UseDecl>* _34539_decl, jule::Str* _34556_path) {
	jule::Bool __jule_func_result = false;
	jule::Str _3469_ext = _1e019105b_Ext((*(_34556_path)));;
	if (((!(_1e02287ca_IsValidHeaderExt(_3469_ext))) && (!(_1e0228a94_IsValidCppExt(_3469_ext))))) {
		_1d653ecb5_pushErr(_self_, &((*((*(_34539_decl))))._field_Token), jule::Str::lit("invalid C++ extension: @", 24), jule::Slice<jule::Any>::make({jule::Any(_3469_ext, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_216768ca0_Status> _3539_info = ({
		auto except = static__21676596c_Of((*(_34556_path)));
		(except.ok()) ? (except.result) : ({{
			_1d653ecb5_pushErr(_self_, &((*((*(_34539_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_34539_decl))))._field_LinkPath, &__jule_any_type4)}));
			__jule_func_result = false;
			return __jule_func_result;;
		} jule::Ptr<_216768ca0_Status>(nullptr);});
	});;
	if (_216769179_IsDir(_3539_info.ptr())) {
		_1d653ecb5_pushErr(_self_, &((*((*(_34539_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_34539_decl))))._field_LinkPath, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1d659590e_ImportInfo> _1d6540c50_buildCppHeaderImport(_1d653e424_symbolBuilder* _self_, jule::Ptr<_1d65144d7_UseDecl>* _36544_decl) {
	jule::Str _36613_path = (*((*(_36544_decl))))._field_LinkPath;;
	if ((!(_1e0228500_IsStdHeaderPath((*((*(_36544_decl))))._field_LinkPath)))) {
		_36613_path=_1e0190c92_Join(jule::Slice<jule::Str>::make({_1d64dbc1d_Dir((*((*((*(_36544_decl))))._field_Token))._field_File.ptr()),(*((*(_36544_decl))))._field_LinkPath}));
		jule::Bool _37017_ok = _1d6540942_checkCppUseDeclPath(_self_, _36544_decl, &(_36613_path));;
		if ((!(_37017_ok))) {
			return nullptr;;
		};
		({
			__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1e0191325_Abs(_36613_path);
			_36613_path = __jule_assign_result.__jule_result_arg0;
			_37017_ok = __jule_assign_result.__jule_result_arg1;
		});
		if ((!(_37017_ok))) {
			_1d653ecb5_pushErr(_self_, &((*((*(_36544_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_36544_decl))))._field_LinkPath, &__jule_any_type4)}));
		};
	};
	return jule::new_ptr<_1d659590e_ImportInfo>(_1d659590e_ImportInfo{._field_Token=(*((*(_36544_decl))))._field_Token, ._field_Path=_36613_path, ._field_LinkPath=(*((*(_36544_decl))))._field_LinkPath, ._field_Ident=jule::Str(), ._field_Binded=true, ._field_Std=false, ._field_Package=nullptr, });;
}



inline jule::Ptr<_1d659590e_ImportInfo> _1d6541091_buildStdImport(_1d653e424_symbolBuilder* _self_, jule::Ptr<_1d65144d7_UseDecl>* _39338_decl) {
	jule::Str _39513_path = (*((*(_39338_decl))))._field_LinkPath.slice(5LL);;
	_39513_path=_1e0175491_Replace(_39513_path, jule::Str::lit("::", 2), jule::Str::lit("/", 1), -1LL);
	_39513_path=_1e0190c92_Join(jule::Slice<jule::Str>::make({_1e034e33a_PathStdlib,_39513_path}));
	jule::Bool _39815_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1e0191325_Abs(_39513_path);
		_39513_path = __jule_assign_result.__jule_result_arg0;
		_39815_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_39815_ok))) {
		_1d653ecb5_pushErr(_self_, &((*((*(_39338_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_39338_decl))))._field_LinkPath, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_216768ca0_Status> _4059_info = ({
		auto except = static__21676596c_Of(_39513_path);
		(except.ok()) ? (except.result) : ({{
			_1d653ecb5_pushErr(_self_, &((*((*(_39338_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_39338_decl))))._field_LinkPath, &__jule_any_type4)}));
			return nullptr;;
		} jule::Ptr<_216768ca0_Status>(nullptr);});
	});;
	if ((!(_216769179_IsDir(_4059_info.ptr())))) {
		_1d653ecb5_pushErr(_self_, &((*((*(_39338_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_39338_decl))))._field_LinkPath, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::I64 _4159_i = (_1e0171019_FindLast((*((*(_39338_decl))))._field_LinkPath, jule::Str::lit("::", 2)) + 1LL);;
	jule::Str _4169_ident = (*((*(_39338_decl))))._field_LinkPath.slice(_4159_i);;
	return jule::new_ptr<_1d659590e_ImportInfo>(_1d659590e_ImportInfo{._field_Token=(*((*(_39338_decl))))._field_Token, ._field_Path=_39513_path, ._field_LinkPath=(*((*(_39338_decl))))._field_LinkPath, ._field_Ident=_4169_ident, ._field_Alias=(*((*(_39338_decl))))._field_Alias, ._field_Binded=false, ._field_Std=true, ._field_ImportAll=(*((*(_39338_decl))))._field_Full, ._field_Package=jule::new_ptr<_1d6598835_Package>(_1d6598835_Package{._field_Files=nullptr}), });;
}



inline jule::Ptr<_1d659590e_ImportInfo> _1d65413d2_buildIdentImport(jule::Ptr<_1d653e424_symbolBuilder> _self_, jule::Ptr<_1d65144d7_UseDecl>* _43341_decl) {
	if ((((*((*(_43341_decl))))._field_LinkPath.equal("_", 1) || (_1e0170656_Find((*((*(_43341_decl))))._field_LinkPath, jule::Str::lit("::_::", 5)) != -1LL)) || _1e016eda3_HasSuffix((*((*(_43341_decl))))._field_LinkPath, jule::Str::lit("::_", 3)))) {
		_1d653ecb5_pushErr(_self_.ptr(), &((*((*(_43341_decl))))._field_Token), jule::Str::lit("use declaration paths cannot contain blank identifier", 53), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Str _4419_modPath = _1d65929e9_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1d6591a5e_GetModPath((*(_self_))._field_importer);;
	if ((_4419_modPath.len() == 0LL)) {
		_1d653ecb5_pushErr(_self_.ptr(), &((*((*(_43341_decl))))._field_Token), jule::Str::lit("no module file found in current directory or any parent directory", 65), jule::Slice<jule::Any>());
		_1d6540546_pushSuggestion(_self_.ptr(), jule::Str::lit("use \"julec mod init\" command to initialize module", 49), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Str _44813_path = (*((*(_43341_decl))))._field_LinkPath;;
	_44813_path=_1e0175491_Replace(_44813_path, jule::Str::lit("::", 2), jule::Str::lit("/", 1), -1LL);
	_44813_path=_1e0190c92_Join(jule::Slice<jule::Str>::make({_4419_modPath,_44813_path}));
	jule::Bool _45215_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1e0191325_Abs(_44813_path);
		_44813_path = __jule_assign_result.__jule_result_arg0;
		_45215_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_45215_ok))) {
		_1d653ecb5_pushErr(_self_.ptr(), &((*((*(_43341_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_43341_decl))))._field_LinkPath, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_216768ca0_Status> _4599_info = ({
		auto except = static__21676596c_Of(_44813_path);
		(except.ok()) ? (except.result) : ({{
			_1d653ecb5_pushErr(_self_.ptr(), &((*((*(_43341_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_43341_decl))))._field_LinkPath, &__jule_any_type4)}));
			return nullptr;;
		} jule::Ptr<_216768ca0_Status>(nullptr);});
	});;
	if ((!(_216769179_IsDir(_4599_info.ptr())))) {
		_1d653ecb5_pushErr(_self_.ptr(), &((*((*(_43341_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_43341_decl))))._field_LinkPath, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::I64 _4699_i = (_1e0171019_FindLast((*((*(_43341_decl))))._field_LinkPath, jule::Str::lit("::", 2)) + 1LL);;
	jule::Str _4709_ident = (*((*(_43341_decl))))._field_LinkPath.slice(_4699_i);;
	return jule::new_ptr<_1d659590e_ImportInfo>(_1d659590e_ImportInfo{._field_Token=(*((*(_43341_decl))))._field_Token, ._field_Path=_44813_path, ._field_LinkPath=(*((*(_43341_decl))))._field_LinkPath, ._field_Ident=_4709_ident, ._field_Alias=(*((*(_43341_decl))))._field_Alias, ._field_Binded=false, ._field_Std=false, ._field_ImportAll=(*((*(_43341_decl))))._field_Full, ._field_Package=jule::new_ptr<_1d6598835_Package>(_1d6598835_Package{._field_Files=nullptr}), });;
}



inline jule::Ptr<_1d659590e_ImportInfo> _1d6541723_buildImport(jule::Ptr<_1d653e424_symbolBuilder> _self_, jule::Ptr<_1d65144d7_UseDecl>* _48736_decl) {
	{
		
		if ((*((*(_48736_decl))))._field_Binded) {
			_case_begin_1d968a9e0:;
			{
				return _1d6540c50_buildCppHeaderImport(_self_.ptr(), _48736_decl);;
			}
		}
		else if ((*((*(_48736_decl))))._field_Std) {
			_case_begin_1d968aa56:;
			{
				return _1d6541091_buildStdImport(_self_.ptr(), _48736_decl);;
			}
		}
		else {
			_case_begin_1d968a979:;
			{
				return _1d65413d2_buildIdentImport(_self_, _48736_decl);;
			}
		}
		_match_end_1d968a8ad:;
	};
}



inline jule::Bool _1d6541a64_checkDuplicateUseDecl(_1d653e424_symbolBuilder* _self_, jule::Ptr<_1d659590e_ImportInfo>* _49841_pkg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1d659590e_ImportInfo> _5009_lpkg = _1d664235c_SelectPackage((*(_self_))._field_table.ptr(), jule::Fn<jule::Bool(jule::Ptr<_1d659590e_ImportInfo>)>([=](jule::Ptr<_1d659590e_ImportInfo> _50045_spkg) mutable -> jule::Bool {
		return ((*((*(_49841_pkg))))._field_Path == (*(_50045_spkg))._field_Path);;
	}));;
	if ((_5009_lpkg == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	_1d653ecb5_pushErr(_self_, &((*((*(_49841_pkg))))._field_Token), jule::Str::lit("use declaration duplication: @ is already used above", 52), jule::Slice<jule::Any>::make({jule::Any((*((*(_49841_pkg))))._field_LinkPath, &__jule_any_type4)}));
	_1d6540546_pushSuggestion(_self_, jule::Str::lit("remove this use declaration, already used, it is safe", 53), jule::Slice<jule::Any>());
	__jule_func_result = false;
	return __jule_func_result;;
}



inline void _1d6541dc7_implImportSelections(_1d653e424_symbolBuilder* _self_, jule::Ptr<_1d659590e_ImportInfo>* _51244_imp, jule::Ptr<_1d65144d7_UseDecl>* _51267_decl) {
	(*((*(_51244_imp))))._field_Selected=(*((*(_51267_decl))))._field_Selected;
	{
		auto expr = &((*((*(_51244_imp))))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9690a17:;
		if (it != expr_end) {
			jule::Ptr<_1d64d5cd3_Token> _51416_item = *it;
			{
				{
					auto expr = &((*((*(_51244_imp))))._field_Selected);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d969140d:;
					if (it != expr_end) {
						jule::Ptr<_1d64d5cd3_Token> _51520_citem = *it;
						{
							if ((_51416_item == _51520_citem)) {
								goto _iter_end_1d969140d;
							} else if (((*(_51416_item))._field_Kind == (*(_51520_citem))._field_Kind)) {
								_1d653ecb5_pushErr(_self_, &(_51416_item), jule::Str::lit("duplicated selection: @ is already selected", 43), jule::Slice<jule::Any>::make({jule::Any((*(_51416_item))._field_Kind, &__jule_any_type4)}));
								_1d6540546_pushSuggestion(_self_, jule::Str::lit("remove this use selection, already selected, it is safe", 55), jule::Slice<jule::Any>());
								goto _iter_end_1d969140d;
							};
						}
						_iter_next_1d969140d:;
						++it;
						goto _iter_begin_1d969140d;
					}
					_iter_end_1d969140d:;
				};
			}
			_iter_next_1d9690a17:;
			++it;
			goto _iter_begin_1d9690a17;
		}
		_iter_end_1d9690a17:;
	};
}



inline jule::Str _1d6542218_getAsLinkPath(jule::Ptr<_1d653e424_symbolBuilder> _self_, jule::Str _52737_path) {
	if (_1e016e5ab_HasPrefix(_52737_path, _1e034e33a_PathStdlib)) {
		(_52737_path).mut_slice(_1e034e33a_PathStdlib.len());;
		return (jule::Str::lit("std", 3) + _1e0175491_Replace(_52737_path, jule::Str::lit("/", 1), jule::Str::lit("::", 2), -1LL));;
	};
	jule::Str _5339_root;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1e0191325_Abs(_1d65929e9_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1d6591a5e_GetModPath((*(_self_))._field_importer));
		_5339_root = __jule_assign_result.__jule_result_arg0;
	});
	(_52737_path).mut_slice(_5339_root.len());;
	if ((_52737_path[0LL] == 47LLU)) {
		(_52737_path).mut_slice(1LL);;
	};
	return _1e0175491_Replace(_52737_path, jule::Str::lit("/", 1), jule::Str::lit("::", 2), -1LL);;
}



inline void _1d6542636_pushCycleError(jule::Ptr<_1d653e424_symbolBuilder> _self_, jule::Ptr<_1d653e424_symbolBuilder>* _54135_sb, jule::Str _54155_path, _1e01838bc_StrBuilder* _54171_message) {
	;
	jule::Str _5439_refersTo = _1e0235ee1_Logf(jule::Str::lit("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any(_1d6542218_getAsLinkPath(_self_, _1d64dbc1d_Dir((*((*((*(_54135_sb))))._field_table))._field_File.ptr())), &__jule_any_type4),jule::Any(_1d6542218_getAsLinkPath(_self_, _54155_path), &__jule_any_type4)}));;
	jule::Str _5479_m = _1e018cee2_Str(_54171_message);;
	_1e018c6ea_WriteStr(_54171_message, _1e016dcb4_Repeat(jule::Str::lit(" ", 1), 7LL));
	_1e018c6ea_WriteStr(_54171_message, _5439_refersTo);
	_1e018c9a3_WriteByte(_54171_message, '\n');
	_1e018c6ea_WriteStr(_54171_message, _5479_m);
}



inline void _1d6542a54_pushCrossCycleError(jule::Ptr<_1d653e424_symbolBuilder> _self_, jule::Ptr<_1d653e424_symbolBuilder>* _55440_target, jule::Ptr<_1d659590e_ImportInfo>* _55465_imp, jule::Ptr<_1d64d5cd3_Token>* _55484_errorToken) {
	_1e01838bc_StrBuilder _55513_message = static__1e0183b64_New(32LL);;
	_1d6542636_pushCycleError(_self_, &(_self_), (*((*(_55465_imp))))._field_Path, &(_55513_message));
	jule::Ptr<_1d653e424_symbolBuilder> _55913_owner = (*(_self_))._field_owner;;
	jule::Ptr<_1d653e424_symbolBuilder> _56013_old = _self_;;
	while (((*(_55913_owner))._field_owner != nullptr)) {
		{
			_1d6542636_pushCycleError(_self_, &((*(_56013_old))._field_owner), _1d64dbc1d_Dir((*((*(_56013_old))._field_table))._field_File.ptr()), &(_55513_message));
			if (((*(_55913_owner))._field_owner == (*(_55440_target)))) {
				_1d6542636_pushCycleError(_self_, _55440_target, _1d64dbc1d_Dir((*((*(_55913_owner))._field_table))._field_File.ptr()), &(_55513_message));
				goto _iter_end_1d969d959;
			};
			_56013_old=_55913_owner;
			_55913_owner=(*(_55913_owner))._field_owner;
		}
	_iter_next_1d969d959:;
	}
	_iter_end_1d969d959:;;
	_1d653ecb5_pushErr(_self_.ptr(), _55484_errorToken, jule::Str::lit("illegal cross cycle in use declarations;\n@", 42), jule::Slice<jule::Any>::make({jule::Any(_1e018cee2_Str(&_55513_message), &__jule_any_type4)}));
}



inline jule::Bool _1d6542e50_checkImportCycles(jule::Ptr<_1d653e424_symbolBuilder> _self_, jule::Ptr<_1d659590e_ImportInfo> _57737_imp, jule::Ptr<_1d65144d7_UseDecl>* _57756_decl) {
	if (((*(_57737_imp))._field_Path == _1d64dbc1d_Dir((*((*(_self_))._field_table))._field_File.ptr()))) {
		_1d653ecb5_pushErr(_self_.ptr(), &((*((*(_57756_decl))))._field_Token), jule::Str::lit("illegal cycle in use declaration, package @ refers to itself", 60), jule::Slice<jule::Any>::make({jule::Any(_1d6542218_getAsLinkPath(_self_, (*(_57737_imp))._field_Path), &__jule_any_type4)}));
		return false;;
	};
	if (((*(_self_))._field_owner == nullptr)) {
		return true;;
	};
	jule::Ptr<_1d653e424_symbolBuilder> _58713_owner = (*(_self_))._field_owner;;
	_julec_label_1d96a54bb:;
	if ((_1d64dbc1d_Dir((*((*(_58713_owner))._field_table))._field_File.ptr()) == (*(_57737_imp))._field_Path)) {
		_1d6542a54_pushCrossCycleError(_self_, &(_58713_owner), &(_57737_imp), &((*((*(_57756_decl))))._field_Token));
		return false;;
	};
	if (((*(_58713_owner))._field_owner != nullptr)) {
		_58713_owner=(*(_58713_owner))._field_owner;
		goto _julec_label_1d96a54bb;
	};
	return true;;
}



inline void _1d654336d_checkPackageAccessibility(_1d653e424_symbolBuilder* _self_, jule::Ptr<_1d65144d7_UseDecl>* _60845_decl, jule::Str* _60862_mod, jule::Str* _60873_path) {
	if (((_1d65929e9_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1d6591a5e_GetModPath((*(_self_))._field_importer) != (*(_60862_mod))) && _1e01740b6_Contains((*(_60873_path)), jule::Str::lit("internal", 8)))) {
		_1d653ecb5_pushErr(_self_, &((*((*(_60845_decl))))._field_Token), jule::Str::lit("you cannot access to internal packages", 38), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1d6543769_importPackage(jule::Ptr<_1d653e424_symbolBuilder> _self_, jule::Ptr<_1d659590e_ImportInfo>* _61438_imp, jule::Ptr<_1d65144d7_UseDecl>* _61461_decl) {
	jule::Bool __jule_func_result = false;
	if ((*((*(_61438_imp))))._field_Binded) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1d659590e_ImportInfo> _61913_port = _1d65929e9_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1d65921e1_GetImport((*(_self_))._field_importer, (*((*(_61438_imp))))._field_Path);;
	if ((_61913_port != nullptr)) {
		(*((*(_61438_imp))))._field_Package=(*(_61913_port))._field_Package;
		(*((*(_61438_imp))))._field_Duplicate=true;
		jule::Str _62413_oldMod = _1d65929e9_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1d6591a5e_GetModPath((*(_self_))._field_importer);;
		_1d65929e9_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1d65917c8_SetModPath((*(_self_))._field_importer, _1d65929e9_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1d6591da0_ModById((*(_self_))._field_importer, (*((*(_61438_imp))))._field_ModId));
		_1d654336d_checkPackageAccessibility(_self_.ptr(), _61461_decl, &(_62413_oldMod), &((*(_61913_port))._field_Path));
		_1d65929e9_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1d65917c8_SetModPath((*(_self_))._field_importer, _62413_oldMod);
	} else {
		if ((!(_1d6542e50_checkImportCycles(_self_, (*(_61438_imp)), _61461_decl)))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
		jule::Str _63313_oldMod = _1d65929e9_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1d6591a5e_GetModPath((*(_self_))._field_importer);;
		__JULE_DEFER({
			_1d65929e9_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1d65917c8_SetModPath((*(_self_))._field_importer, _63313_oldMod);
		});;
		if ((*((*(_61438_imp))))._field_Std) {
			_1d65929e9_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1d65917c8_SetModPath((*(_self_))._field_importer, _1e034e33a_PathStdlib);
		};
		jule::Slice<jule::Ptr<_1d64e9423_Ast>> _63817_asts;;
		jule::Slice<_1e0235a7e_Log> _63827_errors;;
		({
			__jule_tuple_sx_1d64e9423_Ast__jule_tuple_s_1e0235a7e_Log __jule_assign_result = _1d65929e9_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1d65925dc_ImportPackage((*(_self_))._field_importer, (*((*(_61438_imp))))._field_Path, (!((*((*(_61438_imp))))._field_Std)));
			_63817_asts = __jule_assign_result.__jule_result_arg0;
			_63827_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_63827_errors.len() > 0LL)) {
			((*(_self_))._field_errors).append(_63827_errors);;
			__jule_func_result = false;
			return __jule_func_result;;
		};
		_1d654336d_checkPackageAccessibility(_self_.ptr(), _61461_decl, &(_63313_oldMod), &((*((*(_61438_imp))))._field_Path));
		{
			auto expr = &(_63817_asts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1d96b13a6:;
			if (it != expr_end) {
				jule::Ptr<_1d64e9423_Ast> _64625_ast = *it;
				{
					jule::Ptr<_1d6641d73_SymbolTable> _64725_table = nullptr;;
					({
						__jule_tuple_x_1d6641d73_SymbolTable__jule_tuple_s_1e0235a7e_Log __jule_assign_result = _1d669835d_buildSymbols(&(_64625_ast), &((*(_self_))._field_importer), _self_);
						_64725_table = __jule_assign_result.__jule_result_arg0;
						_63827_errors = __jule_assign_result.__jule_result_arg1;
					});
					if ((_63827_errors.len() > 0LL)) {
						((*(_self_))._field_errors).append(_63827_errors);;
						__jule_func_result = false;
						return __jule_func_result;;
					};
					{ jule::Slice<jule::Ptr<_1d6641d73_SymbolTable>> &__jule_push_dest = (*((*((*(_61438_imp))))._field_Package))._field_Files; __jule_push_dest.push(_64725_table); };
				}
				_iter_next_1d96b13a6:;
				++it;
				goto _iter_begin_1d96b13a6;
			}
			_iter_end_1d96b13a6:;
		};
	};
	_1d6541dc7_implImportSelections(_self_.ptr(), _61438_imp, _61461_decl);
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1d659590e_ImportInfo> _1d6543aaa_importUseDecl(jule::Ptr<_1d653e424_symbolBuilder> _self_, jule::Ptr<_1d65144d7_UseDecl>* _66138_decl) {
	jule::Ptr<_1d659590e_ImportInfo> _66213_imp = _1d6541723_buildImport(_self_, _66138_decl);;
	if ((_66213_imp == nullptr)) {
		return nullptr;;
	};
	jule::Bool _66813_ok = _1d6541a64_checkDuplicateUseDecl(_self_.ptr(), &(_66213_imp));;
	if ((!(_66813_ok))) {
		return nullptr;;
	};
	_66813_ok=_1d6543769_importPackage(_self_, &(_66213_imp), _66138_decl);
	{ jule::Slice<jule::Ptr<_1d659590e_ImportInfo>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Imports; __jule_push_dest.push(_66213_imp); };
	if (_66813_ok) {
		_1d65929e9_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1d6592895_Imported((*(_self_))._field_importer, _66213_imp);
		return _66213_imp;;
	};
	return nullptr;;
}



inline void _1d6543ca8_importUseDecls(jule::Ptr<_1d653e424_symbolBuilder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_UseDecls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d96b74cd:;
		if (it != expr_end) {
			jule::Ptr<_1d65144d7_UseDecl> _68321_decl = *it;
			{
				_1d6543aaa_importUseDecl(_self_, &(_68321_decl));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					goto _iter_end_1d96b74cd;
				};
			}
			_iter_next_1d96b74cd:;
			++it;
			goto _iter_begin_1d96b74cd;
		}
		_iter_end_1d96b74cd:;
	};
}



inline void _1d6544061_appendNode(_1d653e424_symbolBuilder* _self_, _1d64ea3d0_Node* _69234_node) {
	{
		auto &_match_expr{ (*(_69234_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type11) {
			_case_begin_1d96b8743:;
			{
				{ jule::Slice<jule::Ptr<_1d656dbc3_Impl>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Impls; __jule_push_dest.push(_1d653dd5d_buildImpl((*(_69234_node))._field_Data.cast_ptr<_1d6518046_Impl>(&__jule_any_type11))); };
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1d96b8a84:;
			{
				jule::Ptr<_1d6676c43_TypeAlias> _69717_ta = _1d653a299_buildTypeAlias((*(_69234_node))._field_Data.cast_ptr<_1d6512ded_TypeAliasDecl>(&__jule_any_type12));;
				{ jule::Slice<jule::Ptr<_1d6676c43_TypeAlias>> &__jule_push_dest = (*((*(_self_))._field_table))._field_TypeAliases; __jule_push_dest.push(_69717_ta); };
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1d96b8aea:;
			{
				jule::Ptr<_1d651c2d1_Struct> _70017_srct = _1d653ab6d_buildStruct((*(_69234_node))._field_Data.cast_ptr<_1d6517199_StructDecl>(&__jule_any_type13));;
				{ jule::Slice<jule::Ptr<_1d651c2d1_Struct>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Structs; __jule_push_dest.push(_70017_srct); };
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1d96b9359:;
			{
				jule::Ptr<_1d653226e_Fn> _70317_f = _1d653b861_buildFunc((*(_69234_node))._field_Data.cast_ptr<_1d650d091_FnDecl>(&__jule_any_type14));;
				{ jule::Slice<jule::Ptr<_1d653226e_Fn>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Funcs; __jule_push_dest.push(_70317_f); };
			}
		}
		else if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1d96b93c0:;
			{
				jule::Ptr<_1d654554b_Trait> _70617_t = _1d653c1ad_buildTrait((*(_69234_node))._field_Data.cast_ptr<_1d65178d6_TraitDecl>(&__jule_any_type15));;
				{ jule::Slice<jule::Ptr<_1d654554b_Trait>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Traits; __jule_push_dest.push(_70617_t); };
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1d96b9436:;
			{
				jule::Ptr<_1d65d9018_Var> _70917_v = _1d653d7ca_buildVar((*(_69234_node))._field_Data.cast_ptr<_1d650e24b_VarDecl>(&__jule_any_type16));;
				{ jule::Slice<jule::Ptr<_1d65d9018_Var>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Vars; __jule_push_dest.push(_70917_v); };
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1d96b949c:;
			{
				jule::Ptr<_1d6547c57_Enum> _71217_e = _1d653cbb4_buildEnum((*(_69234_node))._field_Data.cast_ptr<_1d651554e_EnumDecl>(&__jule_any_type17));;
				{ jule::Slice<jule::Ptr<_1d6547c57_Enum>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Enums; __jule_push_dest.push(_71217_e); };
			}
		}
		else if (_match_expr.type == &__jule_any_type18) {
			_case_begin_1d96b9513:;
			{
				jule::Ptr<_1d6549462_TypeEnum> _71517_e = _1d653d511_buildTypeEnum((*(_69234_node))._field_Data.cast_ptr<_1d65164d9_TypeEnumDecl>(&__jule_any_type18));;
				{ jule::Slice<jule::Ptr<_1d6549462_TypeEnum>> &__jule_push_dest = (*((*(_self_))._field_table))._field_TypeEnums; __jule_push_dest.push(_71517_e); };
			}
		}
		else {
			_case_begin_1d96b8974:;
			{
				_1d653ecb5_pushErr(_self_, &((*(_69234_node))._field_Token), jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1d96b891e:;
	};
}



inline void _1d654425e_appendNodes(_1d653e424_symbolBuilder* _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_Nodes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d96c1d78:;
		if (it != expr_end) {
			_1d64ea3d0_Node _72321_node = *it;
			{
				_1d6544061_appendNode(_self_, &(_72321_node));
			}
			_iter_next_1d96c1d78:;
			++it;
			goto _iter_begin_1d96c1d78;
		}
		_iter_end_1d96c1d78:;
	};
}



inline void _1d6544517_pushDirectivePass(_1d653e424_symbolBuilder* _self_, jule::Ptr<_1d64ea7ed_Directive>* _72841_d) {
	if (((*((*(_72841_d))))._field_Args.len() == 0LL)) {
		_1d653ecb5_pushErr(_self_, &((*((*(_72841_d))))._field_Tag), jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	} else if (((*((*(_72841_d))))._field_Args.len() > 1LL)) {
		jule::Ptr<_1d64d5cd3_Token> _73313_arg = (*((*(_72841_d))))._field_Args[1LL];;
		_1d653ecb5_pushErr(_self_, &(_73313_arg), jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_72841_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
	};
	jule::Ptr<_1d64d5cd3_Token> _7379_arg = (*((*(_72841_d))))._field_Args[0LL];;
	if (((*(_7379_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_1d653ecb5_pushErr(_self_, &(_7379_arg), jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_7379_arg))._field_Kind[0LL] != '\"')) {
		_1d653ecb5_pushErr(_self_, &(_7379_arg), jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<_1d653985e_Pass> &__jule_push_dest = (*((*(_self_))._field_table))._field_Passes; __jule_push_dest.push(_1d653985e_Pass{._field_Token=(*((*(_72841_d))))._field_Tag, ._field_Text=(*(_7379_arg))._field_Kind.slice(1LL, ((*(_7379_arg))._field_Kind.len() - 1LL))}); };
}



inline void _1d6544715_appendTopDirectives(_1d653e424_symbolBuilder* _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d96c86ed:;
		if (it != expr_end) {
			jule::Ptr<_1d64ea7ed_Directive> _75521_d = *it;
			{
				{
					auto &_match_expr{ (*((*(_75521_d))._field_Tag))._field_Kind };
					
					if (_match_expr == jule::Str::lit("pass", 4)) {
						_case_begin_1d96ca524:;
						{
							_1d6544517_pushDirectivePass(_self_, &(_75521_d));
						}
					}
					_match_end_1d96ca458:;
				};
			}
			_iter_next_1d96c86ed:;
			++it;
			goto _iter_begin_1d96c86ed;
		}
		_iter_end_1d96c86ed:;
	};
}



inline void _1d6544913_build(jule::Ptr<_1d653e424_symbolBuilder> _self_) {
	(*(_self_))._field_table=jule::new_ptr<_1d6641d73_SymbolTable>(_1d6641d73_SymbolTable{._field_File=(*((*(_self_))._field_ast))._field_File, });
	_1d6544715_appendTopDirectives(_self_.ptr());
	_1d6543ca8_importUseDecls(_self_);
	if (((*(_self_))._field_errors.len() > 0LL)) {
		return;;
	};
	_1d654425e_appendNodes(_self_.ptr());
	if (((*(_self_))._field_errors.len() > 0LL)) {
		return;;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1d653e424_symbolBuilder _Src) {
	_Stream << "symbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1d6545914_Str(_1d654554b_Trait* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1d6545c55_Equal(jule::Ptr<_1d654554b_Trait> _self_, jule::Ptr<_1d6677a35_TypeKind> _2521_other) {
	jule::Ptr<_1d654554b_Trait> _269_trt = _1d667b990_Trait(_2521_other.ptr());;
	return (_self_ == _269_trt);;
}



inline jule::Ptr<_1d653226e_Fn> _1d65461ea_FindMethod(_1d654554b_Trait* _self_, jule::Str _3429_ident) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d96cde62:;
		if (it != expr_end) {
			jule::Ptr<_1d653226e_Fn> _3521_f = *it;
			{
				if (((*(_3521_f))._field_Ident == _3429_ident)) {
					return _3521_f;;
				};
			}
			_iter_next_1d96cde62:;
			++it;
			goto _iter_begin_1d96cde62;
		}
		_iter_end_1d96cde62:;
	};
	return _1d654687c_findMethodInherit(_self_, &(_3429_ident));;
}



inline jule::Ptr<_1d653226e_Fn> _1d654687c_findMethodInherit(_1d654554b_Trait* _self_, jule::Str* _5537_ident) {
	{
		auto expr = &((*(_self_))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d96d2163:;
		if (it != expr_end) {
			jule::Ptr<_1d667ec07_TypeSymbol> _5621_i = *it;
			{
				if (((*(_5621_i))._field_Kind == nullptr)) {
					goto _iter_next_1d96d2163;
				};
				jule::Ptr<_1d654554b_Trait> _6017_t = _1d667b990_Trait((*(_5621_i))._field_Kind.ptr());;
				if ((_6017_t != nullptr)) {
					jule::Ptr<_1d653226e_Fn> _6221_f2 = _1d65461ea_FindMethod(_6017_t.ptr(), (*(_5537_ident)));;
					if ((_6221_f2 != nullptr)) {
						return _6221_f2;;
					};
				};
			}
			_iter_next_1d96d2163:;
			++it;
			goto _iter_begin_1d96d2163;
		}
		_iter_end_1d96d2163:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1d654554b_Trait _Src) {
	_Stream << _1d6545914_Str(&_Src);
	return _Stream;
}



inline jule::Bool _1d6547592_AutoExpr(_1d65471da_EnumItem* _self_) {
	return ((*(_self_))._field_Value == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1d65471da_EnumItem _Src) {
	_Stream << "EnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1d65480cb_Str(_1d6547c57_Enum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1d654841c_Equal(jule::Ptr<_1d6547c57_Enum> _self_, jule::Ptr<_1d6677a35_TypeKind> _3821_other) {
	jule::Ptr<_1d6547c57_Enum> _399_enm = _1d667a939_Enum(_3821_other.ptr());;
	return (_self_ == _399_enm);;
}



inline jule::Ptr<_1d65471da_EnumItem> _1d654884b_FindItem(_1d6547c57_Enum* _self_, jule::Str _4727_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d96d59b3:;
		if (it != expr_end) {
			jule::Ptr<_1d65471da_EnumItem> _4821_item = *it;
			{
				if (((*(_4821_item))._field_Ident == _4727_ident)) {
					return _4821_item;;
				};
			}
			_iter_next_1d96d59b3:;
			++it;
			goto _iter_begin_1d96d59b3;
		}
		_iter_end_1d96d59b3:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1d6547c57_Enum _Src) {
	_Stream << _1d65480cb_Str(&_Src);
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d6548d8a_TypeEnumItem _Src) {
	_Stream << "TypeEnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1d65497a3_Str(_1d6549462_TypeEnum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1d6549ae4_Equal(jule::Ptr<_1d6549462_TypeEnum> _self_, jule::Ptr<_1d6677a35_TypeKind> _8021_other) {
	jule::Ptr<_1d6549462_TypeEnum> _819_tenm = _1d667abc0_TypeEnum(_8021_other.ptr());;
	return (_self_ == _819_tenm);;
}



inline jule::Ptr<_1d6548d8a_TypeEnumItem> _1d654a023_FindItem(_1d6549462_TypeEnum* _self_, jule::Str _8927_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d96d7cb2:;
		if (it != expr_end) {
			jule::Ptr<_1d6548d8a_TypeEnumItem> _9021_item = *it;
			{
				if (((*(_9021_item))._field_Ident == _8927_ident)) {
					return _9021_item;;
				};
			}
			_iter_next_1d96d7cb2:;
			++it;
			goto _iter_begin_1d96d7cb2;
		}
		_iter_end_1d96d7cb2:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1d6549462_TypeEnum _Src) {
	_Stream << _1d65497a3_Str(&_Src);
	return _Stream;
}



inline jule::Str _1d654c93d_Str(_1d654c5b9_comptimeRange* _self_) {
	return jule::Str::lit("comptimeRange", 13);;
}



inline jule::Bool _1d654cc7e_Equal(jule::Ptr<_1d654c5b9_comptimeRange> _self_, jule::Ptr<_1d6677a35_TypeKind> _3621_other) {
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1d654c5b9_comptimeRange _Src) {
	_Stream << _1d654c93d_Str(&_Src);
	return _Stream;
}



inline jule::Str _1d654d455_Str(_1d654d08c_comptimeStructField* _self_) {
	return jule::Str::lit("comptimeStructField", 19);;
}



inline jule::Bool _1d654d796_Equal(jule::Ptr<_1d654d08c_comptimeStructField> _self_, jule::Ptr<_1d6677a35_TypeKind> _4621_other) {
	return false;;
}



inline jule::Ptr<_1d664721e_Data> _1d654dd3a__Name(jule::Ptr<_1d654d08c_comptimeStructField> _self_, jule::Ptr<_1d6648e13_Eval>* _5026_e, jule::Ptr<_1d650443e_FnCallExpr>* _5041_fc) {
	if (((*((*(_5041_fc))))._field_Args.len() > 0LL)) {
		_1d6649463_pushErr((*(_5026_e)).ptr(), (*((*((*(_5041_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1d4321208_Const> _5513_constant = static__1d4321e95_NewStr((*((*((*(_self_))._field_field))._field_Decl))._field_Ident);;
	return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=_1d675a376_primStr, ._field_Model=jule::Any(_5513_constant, &__jule_any_type19), ._field_Constant=_5513_constant});;
}



inline jule::Ptr<_1d664721e_Data> _1d654e236__Type(jule::Ptr<_1d654d08c_comptimeStructField> _self_, jule::Ptr<_1d6648e13_Eval>* _6330_e, jule::Ptr<_1d650443e_FnCallExpr>* _6345_fc) {
	if (((*((*(_6345_fc))))._field_Args.len() > 0LL)) {
		_1d6649463_pushErr((*(_6330_e)).ptr(), (*((*((*(_6345_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1d65698a0_buildComptimeTypeInfoData(&((*((*(_6330_e))))._field_s), &((*((*(_self_))._field_field))._field_Kind));;
}



inline jule::Ptr<_1d664721e_Data> _1d654e632__Public(jule::Ptr<_1d654d08c_comptimeStructField> _self_, jule::Ptr<_1d6648e13_Eval>* _7132_e, jule::Ptr<_1d650443e_FnCallExpr>* _7147_fc) {
	if (((*((*(_7147_fc))))._field_Args.len() > 0LL)) {
		_1d6649463_pushErr((*(_7132_e)).ptr(), (*((*((*(_7147_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1d4321208_Const> _7613_constant = static__1d4321bcb_NewBool((*((*((*(_self_))._field_field))._field_Decl))._field_Public);;
	return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=_1d675a640_primBool, ._field_Model=jule::Any(_7613_constant, &__jule_any_type19), ._field_Constant=_7613_constant});;
}



inline jule::Ptr<_1d664721e_Data> _1d654e940_subIdent(jule::Ptr<_1d654d08c_comptimeStructField> _self_, jule::Str* _8429_ident) {
	{
		auto &_match_expr{ (*(_8429_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1d96e561b:;
			{
				jule::Ptr<_1d6535173_FnIns> _8717_method = jule::new_ptr<_1d6535173_FnIns>(_1d6535173_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d664721e_Data>(jule::Ptr<_1d6648e13_Eval>*,jule::Ptr<_1d650443e_FnCallExpr>*,jule::Ptr<_1d664721e_Data>*)>([=](jule::Ptr<_1d6648e13_Eval>* _8833_e, jule::Ptr<_1d650443e_FnCallExpr>* _8848_fc, jule::Ptr<_1d664721e_Data>* ) mutable -> jule::Ptr<_1d664721e_Data> {
					return _1d654dd3a__Name(_self_, _8833_e, _8848_fc);;
				}), });;
				return _1d656921d_buildAsComptimeMethodData(&(_8717_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Public", 6)) {
			_case_begin_1d96e5682:;
			{
				jule::Ptr<_1d6535173_FnIns> _9417_method = jule::new_ptr<_1d6535173_FnIns>(_1d6535173_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d664721e_Data>(jule::Ptr<_1d6648e13_Eval>*,jule::Ptr<_1d650443e_FnCallExpr>*,jule::Ptr<_1d664721e_Data>*)>([=](jule::Ptr<_1d6648e13_Eval>* _9533_e, jule::Ptr<_1d650443e_FnCallExpr>* _9548_fc, jule::Ptr<_1d664721e_Data>* ) mutable -> jule::Ptr<_1d664721e_Data> {
					return _1d654e632__Public(_self_, _9533_e, _9548_fc);;
				}), });;
				return _1d656921d_buildAsComptimeMethodData(&(_9417_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1d96e56e8:;
			{
				jule::Ptr<_1d6535173_FnIns> _10117_method = jule::new_ptr<_1d6535173_FnIns>(_1d6535173_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d664721e_Data>(jule::Ptr<_1d6648e13_Eval>*,jule::Ptr<_1d650443e_FnCallExpr>*,jule::Ptr<_1d664721e_Data>*)>([=](jule::Ptr<_1d6648e13_Eval>* _10233_e, jule::Ptr<_1d650443e_FnCallExpr>* _10248_fc, jule::Ptr<_1d664721e_Data>* ) mutable -> jule::Ptr<_1d664721e_Data> {
					return _1d654e236__Type(_self_, _10233_e, _10248_fc);;
				}), });;
				return _1d656921d_buildAsComptimeMethodData(&(_10117_method));;
			}
		}
		else {
			_case_begin_1d96e55a5:;
			{
				return nullptr;;
			}
		}
		_match_end_1d96e5550:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1d654d08c_comptimeStructField _Src) {
	_Stream << _1d654d455_Str(&_Src);
	return _Stream;
}



inline jule::Str _1d65500c2_Str(_1d654ec4d_comptimeStructFields* _self_) {
	return jule::Str::lit("comptimeStructFields", 20);;
}



inline jule::Bool _1d6550413_Equal(jule::Ptr<_1d654ec4d_comptimeStructFields> _self_, jule::Ptr<_1d6677a35_TypeKind> _12021_other) {
	return false;;
}



inline void _1d6550886_ready(_1d654ec4d_comptimeStructFields* _self_, jule::Ptr<_1d65d9018_Var>* _12429_keyA, jule::Ptr<_1d65d9018_Var>* _12446_keyB) {
	if (((*(_12429_keyA)) != nullptr)) {
		(*((*(_12429_keyA))))._field_Constant=true;
		(*((*(_12429_keyA))))._field_Value=jule::new_ptr<_1d6648363_Value>(_1d6648363_Value{._field_Data=jule::new_ptr<_1d664721e_Data>()});
		(*((*(_12429_keyA))))._field_Kind=(*(_1d675d4bc_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_12446_keyB)) != nullptr)) {
		(*((*(_12446_keyB))))._field_Constant=true;
		(*((*(_12446_keyB))))._field_Value=jule::new_ptr<_1d6648363_Value>(_1d6648363_Value{._field_Data=jule::new_ptr<_1d664721e_Data>()});
		(*((*(_12446_keyB))))._field_Kind=jule::new_ptr<_1d667ec07_TypeSymbol>(_1d667ec07_TypeSymbol{._field_Kind=jule::new_ptr<_1d6677a35_TypeKind>(_1d6677a35_TypeKind{._field_Kind=jule::Trait<_1d667757e_Kind>(jule::new_ptr<_1d654d08c_comptimeStructField>(), 6)})});
	};
}



inline void _1d6550ca4_step(_1d654ec4d_comptimeStructFields* _self_, jule::I64 _14523_i, jule::Ptr<_1d65d9018_Var>* _14536_keyA, jule::Ptr<_1d65d9018_Var>* _14553_keyB) {
	if (((*(_14536_keyA)) != nullptr)) {
		(*((*((*((*(_14536_keyA))))._field_Value))._field_Data))._field_Constant=static__1d4321648_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_14523_i)));
		(*((*((*((*(_14536_keyA))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_14536_keyA))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	};
	if (((*(_14553_keyB)) != nullptr)) {
		(*(_1d667c760_comptimeStructField((*((*((*(_14553_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_14523_i];
	};
}



inline jule::I64 _1d655103a_len(_1d654ec4d_comptimeStructFields* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_fields.len());;
}





std::ostream &operator<<(std::ostream &_Stream, _1d654ec4d_comptimeStructFields _Src) {
	_Stream << _1d65500c2_Str(&_Src);
	return _Stream;
}



inline jule::Str _1d65516bc_Str(_1d6551348_comptimeStatic* _self_) {
	return jule::Str::lit("comptimeStatic", 14);;
}



inline jule::Bool _1d6551a0d_Equal(jule::Ptr<_1d6551348_comptimeStatic> _self_, jule::Ptr<_1d6677a35_TypeKind> _16921_other) {
	return false;;
}



inline jule::Ptr<_1d664721e_Data> _1d655213a__Name(jule::Ptr<_1d6551348_comptimeStatic> _self_, jule::Ptr<_1d6648e13_Eval>* _17326_e, jule::Ptr<_1d650443e_FnCallExpr>* _17341_fc) {
	if (((*((*(_17341_fc))))._field_Args.len() > 0LL)) {
		_1d6649463_pushErr((*(_17326_e)).ptr(), (*((*((*(_17341_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1d4321208_Const> _17813_constant = static__1d4321e95_NewStr((*((*(_self_))._field_field))._field_Ident);;
	return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=_1d675a376_primStr, ._field_Model=jule::Any(_17813_constant, &__jule_any_type19), ._field_Constant=_17813_constant});;
}



inline jule::Ptr<_1d664721e_Data> _1d6552536__Type(jule::Ptr<_1d6551348_comptimeStatic> _self_, jule::Ptr<_1d6648e13_Eval>* _18630_e, jule::Ptr<_1d650443e_FnCallExpr>* _18645_fc) {
	if (((*((*(_18645_fc))))._field_Args.len() > 0LL)) {
		_1d6649463_pushErr((*(_18630_e)).ptr(), (*((*((*(_18645_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1d65698a0_buildComptimeTypeInfoData(&((*((*(_18630_e))))._field_s), &((*((*((*(_self_))._field_field))._field_Kind))._field_Kind));;
}



inline jule::Ptr<_1d664721e_Data> _1d6552932__Public(jule::Ptr<_1d6551348_comptimeStatic> _self_, jule::Ptr<_1d6648e13_Eval>* _19432_e, jule::Ptr<_1d650443e_FnCallExpr>* _19447_fc) {
	if (((*((*(_19447_fc))))._field_Args.len() > 0LL)) {
		_1d6649463_pushErr((*(_19432_e)).ptr(), (*((*((*(_19447_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1d4321208_Const> _19913_constant = static__1d4321bcb_NewBool((*((*(_self_))._field_field))._field_Public);;
	return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=_1d675a640_primBool, ._field_Model=jule::Any(_19913_constant, &__jule_any_type19), ._field_Constant=_19913_constant});;
}



inline jule::Ptr<_1d664721e_Data> _1d6552c73_subIdent(jule::Ptr<_1d6551348_comptimeStatic> _self_, jule::Str* _20729_ident) {
	{
		auto &_match_expr{ (*(_20729_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1d970aee4:;
			{
				jule::Ptr<_1d6535173_FnIns> _21017_method = jule::new_ptr<_1d6535173_FnIns>(_1d6535173_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d664721e_Data>(jule::Ptr<_1d6648e13_Eval>*,jule::Ptr<_1d650443e_FnCallExpr>*,jule::Ptr<_1d664721e_Data>*)>([=](jule::Ptr<_1d6648e13_Eval>* _21133_e, jule::Ptr<_1d650443e_FnCallExpr>* _21148_fc, jule::Ptr<_1d664721e_Data>* ) mutable -> jule::Ptr<_1d664721e_Data> {
					return _1d655213a__Name(_self_, _21133_e, _21148_fc);;
				}), });;
				return _1d656921d_buildAsComptimeMethodData(&(_21017_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Public", 6)) {
			_case_begin_1d970b05a:;
			{
				jule::Ptr<_1d6535173_FnIns> _21717_method = jule::new_ptr<_1d6535173_FnIns>(_1d6535173_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d664721e_Data>(jule::Ptr<_1d6648e13_Eval>*,jule::Ptr<_1d650443e_FnCallExpr>*,jule::Ptr<_1d664721e_Data>*)>([=](jule::Ptr<_1d6648e13_Eval>* _21833_e, jule::Ptr<_1d650443e_FnCallExpr>* _21848_fc, jule::Ptr<_1d664721e_Data>* ) mutable -> jule::Ptr<_1d664721e_Data> {
					return _1d6552932__Public(_self_, _21833_e, _21848_fc);;
				}), });;
				return _1d656921d_buildAsComptimeMethodData(&(_21717_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1d970b0c1:;
			{
				jule::Ptr<_1d6535173_FnIns> _22417_method = jule::new_ptr<_1d6535173_FnIns>(_1d6535173_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d664721e_Data>(jule::Ptr<_1d6648e13_Eval>*,jule::Ptr<_1d650443e_FnCallExpr>*,jule::Ptr<_1d664721e_Data>*)>([=](jule::Ptr<_1d6648e13_Eval>* _22533_e, jule::Ptr<_1d650443e_FnCallExpr>* _22548_fc, jule::Ptr<_1d664721e_Data>* ) mutable -> jule::Ptr<_1d664721e_Data> {
					return _1d6552536__Type(_self_, _22533_e, _22548_fc);;
				}), });;
				return _1d656921d_buildAsComptimeMethodData(&(_22417_method));;
			}
		}
		else {
			_case_begin_1d970ae7d:;
			{
				return nullptr;;
			}
		}
		_match_end_1d970ae28:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1d6551348_comptimeStatic _Src) {
	_Stream << _1d65516bc_Str(&_Src);
	return _Stream;
}



inline jule::Str _1d655337d_Str(_1d6553009_comptimeStatics* _self_) {
	return jule::Str::lit("comptimeStatics", 15);;
}



inline jule::Bool _1d65536be_Equal(jule::Ptr<_1d6553009_comptimeStatics> _self_, jule::Ptr<_1d6677a35_TypeKind> _24321_other) {
	return false;;
}



inline void _1d6553b42_ready(_1d6553009_comptimeStatics* _self_, jule::Ptr<_1d65d9018_Var>* _24729_keyA, jule::Ptr<_1d65d9018_Var>* _24746_keyB) {
	if (((*(_24729_keyA)) != nullptr)) {
		(*((*(_24729_keyA))))._field_Constant=true;
		(*((*(_24729_keyA))))._field_Value=jule::new_ptr<_1d6648363_Value>(_1d6648363_Value{._field_Data=jule::new_ptr<_1d664721e_Data>()});
		(*((*(_24729_keyA))))._field_Kind=(*(_1d675d4bc_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_24746_keyB)) != nullptr)) {
		(*((*(_24746_keyB))))._field_Constant=true;
		(*((*(_24746_keyB))))._field_Value=jule::new_ptr<_1d6648363_Value>(_1d6648363_Value{._field_Data=jule::new_ptr<_1d664721e_Data>()});
		(*((*(_24746_keyB))))._field_Kind=jule::new_ptr<_1d667ec07_TypeSymbol>(_1d667ec07_TypeSymbol{._field_Kind=jule::new_ptr<_1d6677a35_TypeKind>(_1d6677a35_TypeKind{._field_Kind=jule::Trait<_1d667757e_Kind>(jule::new_ptr<_1d6551348_comptimeStatic>(), 8)})});
	};
}



inline void _1d6554060_step(_1d6553009_comptimeStatics* _self_, jule::I64 _26823_i, jule::Ptr<_1d65d9018_Var>* _26836_keyA, jule::Ptr<_1d65d9018_Var>* _26853_keyB) {
	if (((*(_26836_keyA)) != nullptr)) {
		(*((*((*((*(_26836_keyA))))._field_Value))._field_Data))._field_Constant=static__1d4321648_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_26823_i)));
		(*((*((*((*(_26836_keyA))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_26836_keyA))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	};
	if (((*(_26853_keyB)) != nullptr)) {
		(*(_1d667e069_comptimeStatic((*((*((*(_26853_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_26823_i];
	};
}



inline jule::I64 _1d65542e6_len(_1d6553009_comptimeStatics* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_fields.len());;
}





std::ostream &operator<<(std::ostream &_Stream, _1d6553009_comptimeStatics _Src) {
	_Stream << _1d655337d_Str(&_Src);
	return _Stream;
}



inline jule::Str _1d6554a88_Str(_1d6554604_comptimeEnumField* _self_) {
	return jule::Str::lit("comptimeEnumField", 17);;
}



inline jule::Bool _1d6554dc9_Equal(jule::Ptr<_1d6554604_comptimeEnumField> _self_, jule::Ptr<_1d6677a35_TypeKind> _29221_other) {
	return false;;
}



inline jule::Ptr<_1d664721e_Data> _1d655534c__Name(jule::Ptr<_1d6554604_comptimeEnumField> _self_, jule::Ptr<_1d6648e13_Eval>* _29626_e, jule::Ptr<_1d650443e_FnCallExpr>* _29641_fc) {
	if (((*((*(_29641_fc))))._field_Args.len() > 0LL)) {
		_1d6649463_pushErr((*(_29626_e)).ptr(), (*((*((*(_29641_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1d4321208_Const> _30113_constant = static__1d4321e95_NewStr((*((*(_self_))._field_field))._field_Ident);;
	return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=_1d675a376_primStr, ._field_Model=jule::Any(_30113_constant, &__jule_any_type19), ._field_Constant=_30113_constant});;
}



inline jule::Ptr<_1d664721e_Data> _1d655568d_subIdent(jule::Ptr<_1d6554604_comptimeEnumField> _self_, jule::Str* _30929_ident) {
	{
		auto &_match_expr{ (*(_30929_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1d971bc19:;
			{
				jule::Ptr<_1d6535173_FnIns> _31217_method = jule::new_ptr<_1d6535173_FnIns>(_1d6535173_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d664721e_Data>(jule::Ptr<_1d6648e13_Eval>*,jule::Ptr<_1d650443e_FnCallExpr>*,jule::Ptr<_1d664721e_Data>*)>([=](jule::Ptr<_1d6648e13_Eval>* _31333_e, jule::Ptr<_1d650443e_FnCallExpr>* _31348_fc, jule::Ptr<_1d664721e_Data>* ) mutable -> jule::Ptr<_1d664721e_Data> {
					return _1d655534c__Name(_self_, _31333_e, _31348_fc);;
				}), });;
				return _1d656921d_buildAsComptimeMethodData(&(_31217_method));;
			}
		}
		else {
			_case_begin_1d971bba3:;
			{
				return nullptr;;
			}
		}
		_match_end_1d971bb4d:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1d6554604_comptimeEnumField _Src) {
	_Stream << _1d6554a88_Str(&_Src);
	return _Stream;
}



inline jule::Str _1d6555d20_Str(_1d655599b_comptimeEnumFields* _self_) {
	return jule::Str::lit("comptimeEnumFields", 18);;
}



inline jule::Bool _1d6556161_Equal(jule::Ptr<_1d655599b_comptimeEnumFields> _self_, jule::Ptr<_1d6677a35_TypeKind> _33121_other) {
	return false;;
}



inline void _1d65565d4_ready(_1d655599b_comptimeEnumFields* _self_, jule::Ptr<_1d65d9018_Var>* _33529_keyA, jule::Ptr<_1d65d9018_Var>* _33546_keyB) {
	if (((*(_33529_keyA)) != nullptr)) {
		(*((*(_33529_keyA))))._field_Constant=true;
		(*((*(_33529_keyA))))._field_Value=jule::new_ptr<_1d6648363_Value>(_1d6648363_Value{._field_Data=jule::new_ptr<_1d664721e_Data>()});
		(*((*(_33529_keyA))))._field_Kind=(*(_1d675d4bc_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_33546_keyB)) != nullptr)) {
		(*((*(_33546_keyB))))._field_Constant=true;
		(*((*(_33546_keyB))))._field_Value=jule::new_ptr<_1d6648363_Value>(_1d6648363_Value{._field_Data=jule::new_ptr<_1d664721e_Data>()});
		(*((*(_33546_keyB))))._field_Kind=jule::new_ptr<_1d667ec07_TypeSymbol>(_1d667ec07_TypeSymbol{._field_Kind=jule::new_ptr<_1d6677a35_TypeKind>(_1d6677a35_TypeKind{._field_Kind=jule::Trait<_1d667757e_Kind>(jule::new_ptr<_1d6554604_comptimeEnumField>(), 10)})});
	};
}



inline void _1d6556a02_step(_1d655599b_comptimeEnumFields* _self_, jule::I64 _35623_i, jule::Ptr<_1d65d9018_Var>* _35636_keyA, jule::Ptr<_1d65d9018_Var>* _35653_keyB) {
	if (((*(_35636_keyA)) != nullptr)) {
		(*((*((*((*(_35636_keyA))))._field_Value))._field_Data))._field_Constant=static__1d4321648_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_35623_i)));
		(*((*((*((*(_35636_keyA))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_35636_keyA))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	};
	if (((*(_35653_keyB)) != nullptr)) {
		(*(_1d667cc7c_comptimeEnumField((*((*((*(_35653_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_35623_i];
	};
}



inline jule::I64 _1d6556c88_len(_1d655599b_comptimeEnumFields* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_fields.len());;
}





std::ostream &operator<<(std::ostream &_Stream, _1d655599b_comptimeEnumFields _Src) {
	_Stream << _1d6555d20_Str(&_Src);
	return _Stream;
}



inline jule::Str _1d655741a_Str(_1d6557096_comptimeParam* _self_) {
	return jule::Str::lit("comptimeParam", 13);;
}



inline jule::Bool _1d655775b_Equal(jule::Ptr<_1d6557096_comptimeParam> _self_, jule::Ptr<_1d6677a35_TypeKind> _38021_other) {
	return false;;
}



inline jule::Ptr<_1d664721e_Data> _1d6557eba__Name(jule::Ptr<_1d6557096_comptimeParam> _self_, jule::Ptr<_1d6648e13_Eval>* _38426_e, jule::Ptr<_1d650443e_FnCallExpr>* _38441_fc) {
	if (((*((*(_38441_fc))))._field_Args.len() > 0LL)) {
		_1d6649463_pushErr((*(_38426_e)).ptr(), (*((*((*(_38441_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1d4321208_Const> _38913_constant = static__1d4321e95_NewStr((*((*((*(_self_))._field_param))._field_Decl))._field_Ident);;
	return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=_1d675a376_primStr, ._field_Model=jule::Any(_38913_constant, &__jule_any_type19), ._field_Constant=_38913_constant});;
}



inline jule::Ptr<_1d664721e_Data> _1d65583b6__Type(jule::Ptr<_1d6557096_comptimeParam> _self_, jule::Ptr<_1d6648e13_Eval>* _39730_e, jule::Ptr<_1d650443e_FnCallExpr>* _39745_fc) {
	if (((*((*(_39745_fc))))._field_Args.len() > 0LL)) {
		_1d6649463_pushErr((*(_39730_e)).ptr(), (*((*((*(_39745_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1d65698a0_buildComptimeTypeInfoData(&((*((*(_39730_e))))._field_s), &((*((*(_self_))._field_param))._field_Kind));;
}



inline jule::Ptr<_1d664721e_Data> _1d65587b2__Variadic(jule::Ptr<_1d6557096_comptimeParam> _self_, jule::Ptr<_1d6648e13_Eval>* _40534_e, jule::Ptr<_1d650443e_FnCallExpr>* _40549_fc) {
	if (((*((*(_40549_fc))))._field_Args.len() > 0LL)) {
		_1d6649463_pushErr((*(_40534_e)).ptr(), (*((*((*(_40549_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Variadic", 8), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1d4321208_Const> _41013_constant = static__1d4321bcb_NewBool((*((*((*(_self_))._field_param))._field_Decl))._field_Variadic);;
	return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=_1d675a640_primBool, ._field_Model=jule::Any(_41013_constant, &__jule_any_type19), ._field_Constant=_41013_constant});;
}



inline jule::Ptr<_1d664721e_Data> _1d6558bad__Reference(jule::Ptr<_1d6557096_comptimeParam> _self_, jule::Ptr<_1d6648e13_Eval>* _41835_e, jule::Ptr<_1d650443e_FnCallExpr>* _41850_fc) {
	if (((*((*(_41850_fc))))._field_Args.len() > 0LL)) {
		_1d6649463_pushErr((*(_41835_e)).ptr(), (*((*((*(_41850_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Reference", 9), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1d4321208_Const> _42313_constant = static__1d4321bcb_NewBool((*((*((*(_self_))._field_param))._field_Decl))._field_Reference);;
	return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=_1d675a640_primBool, ._field_Model=jule::Any(_42313_constant, &__jule_any_type19), ._field_Constant=_42313_constant});;
}



inline jule::Ptr<_1d664721e_Data> _1d6558eee_subIdent(jule::Ptr<_1d6557096_comptimeParam> _self_, jule::Str* _43129_ident) {
	{
		auto &_match_expr{ (*(_43129_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1d9731305:;
			{
				jule::Ptr<_1d6535173_FnIns> _43417_method = jule::new_ptr<_1d6535173_FnIns>(_1d6535173_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d664721e_Data>(jule::Ptr<_1d6648e13_Eval>*,jule::Ptr<_1d650443e_FnCallExpr>*,jule::Ptr<_1d664721e_Data>*)>([=](jule::Ptr<_1d6648e13_Eval>* _43533_e, jule::Ptr<_1d650443e_FnCallExpr>* _43548_fc, jule::Ptr<_1d664721e_Data>* ) mutable -> jule::Ptr<_1d664721e_Data> {
					return _1d6557eba__Name(_self_, _43533_e, _43548_fc);;
				}), });;
				return _1d656921d_buildAsComptimeMethodData(&(_43417_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Variadic", 8)) {
			_case_begin_1d973136b:;
			{
				jule::Ptr<_1d6535173_FnIns> _44117_method = jule::new_ptr<_1d6535173_FnIns>(_1d6535173_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d664721e_Data>(jule::Ptr<_1d6648e13_Eval>*,jule::Ptr<_1d650443e_FnCallExpr>*,jule::Ptr<_1d664721e_Data>*)>([=](jule::Ptr<_1d6648e13_Eval>* _44233_e, jule::Ptr<_1d650443e_FnCallExpr>* _44248_fc, jule::Ptr<_1d664721e_Data>* ) mutable -> jule::Ptr<_1d664721e_Data> {
					return _1d65587b2__Variadic(_self_, _44233_e, _44248_fc);;
				}), });;
				return _1d656921d_buildAsComptimeMethodData(&(_44117_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Reference", 9)) {
			_case_begin_1d97313d2:;
			{
				jule::Ptr<_1d6535173_FnIns> _44817_method = jule::new_ptr<_1d6535173_FnIns>(_1d6535173_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d664721e_Data>(jule::Ptr<_1d6648e13_Eval>*,jule::Ptr<_1d650443e_FnCallExpr>*,jule::Ptr<_1d664721e_Data>*)>([=](jule::Ptr<_1d6648e13_Eval>* _44933_e, jule::Ptr<_1d650443e_FnCallExpr>* _44948_fc, jule::Ptr<_1d664721e_Data>* ) mutable -> jule::Ptr<_1d664721e_Data> {
					return _1d6558bad__Reference(_self_, _44933_e, _44948_fc);;
				}), });;
				return _1d656921d_buildAsComptimeMethodData(&(_44817_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1d9731459:;
			{
				jule::Ptr<_1d6535173_FnIns> _45517_method = jule::new_ptr<_1d6535173_FnIns>(_1d6535173_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d664721e_Data>(jule::Ptr<_1d6648e13_Eval>*,jule::Ptr<_1d650443e_FnCallExpr>*,jule::Ptr<_1d664721e_Data>*)>([=](jule::Ptr<_1d6648e13_Eval>* _45633_e, jule::Ptr<_1d650443e_FnCallExpr>* _45648_fc, jule::Ptr<_1d664721e_Data>* ) mutable -> jule::Ptr<_1d664721e_Data> {
					return _1d65583b6__Type(_self_, _45633_e, _45648_fc);;
				}), });;
				return _1d656921d_buildAsComptimeMethodData(&(_45517_method));;
			}
		}
		else {
			_case_begin_1d973128e:;
			{
				return nullptr;;
			}
		}
		_match_end_1d9731239:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1d6557096_comptimeParam _Src) {
	_Stream << _1d655741a_Str(&_Src);
	return _Stream;
}



inline jule::Str _1d6559681_Str(_1d655930c_comptimeParams* _self_) {
	return jule::Str::lit("comptimeParams", 14);;
}



inline jule::Bool _1d65599c2_Equal(jule::Ptr<_1d655930c_comptimeParams> _self_, jule::Ptr<_1d6677a35_TypeKind> _47421_other) {
	return false;;
}



inline void _1d6559e45_ready(_1d655930c_comptimeParams* _self_, jule::Ptr<_1d65d9018_Var>* _47829_keyA, jule::Ptr<_1d65d9018_Var>* _47846_keyB) {
	if (((*(_47829_keyA)) != nullptr)) {
		(*((*(_47829_keyA))))._field_Constant=true;
		(*((*(_47829_keyA))))._field_Value=jule::new_ptr<_1d6648363_Value>(_1d6648363_Value{._field_Data=jule::new_ptr<_1d664721e_Data>()});
		(*((*(_47829_keyA))))._field_Kind=(*(_1d675d4bc_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_47846_keyB)) != nullptr)) {
		(*((*(_47846_keyB))))._field_Constant=true;
		(*((*(_47846_keyB))))._field_Value=jule::new_ptr<_1d6648363_Value>(_1d6648363_Value{._field_Data=jule::new_ptr<_1d664721e_Data>()});
		(*((*(_47846_keyB))))._field_Kind=jule::new_ptr<_1d667ec07_TypeSymbol>(_1d667ec07_TypeSymbol{._field_Kind=jule::new_ptr<_1d6677a35_TypeKind>(_1d6677a35_TypeKind{._field_Kind=jule::Trait<_1d667757e_Kind>(jule::new_ptr<_1d6557096_comptimeParam>(), 12)})});
	};
}



inline void _1d655a363_step(_1d655930c_comptimeParams* _self_, jule::I64 _49923_i, jule::Ptr<_1d65d9018_Var>* _49936_keyA, jule::Ptr<_1d65d9018_Var>* _49953_keyB) {
	if (((*(_49936_keyA)) != nullptr)) {
		(*((*((*((*(_49936_keyA))))._field_Value))._field_Data))._field_Constant=static__1d4321648_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_49923_i)));
		(*((*((*((*(_49936_keyA))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_49936_keyA))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	};
	if (((*(_49953_keyB)) != nullptr)) {
		(*(_1d667d299_comptimeParam((*((*((*(_49953_keyB))))._field_Kind))._field_Kind.ptr())))._field_param=(*(_self_))._field_params[_49923_i];
	};
}



inline jule::I64 _1d655a5e9_len(_1d655930c_comptimeParams* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_params.len());;
}





std::ostream &operator<<(std::ostream &_Stream, _1d655930c_comptimeParams _Src) {
	_Stream << _1d6559681_Str(&_Src);
	return _Stream;
}



inline jule::Str _1d655ac7b_Str(_1d655a907_comptimeTypeInfos* _self_) {
	return jule::Str::lit("comptimeTypeInfos", 17);;
}



inline jule::Bool _1d655b0bc_Equal(jule::Ptr<_1d655a907_comptimeTypeInfos> _self_, jule::Ptr<_1d6677a35_TypeKind> _52321_other) {
	return false;;
}



inline void _1d655b540_ready(_1d655a907_comptimeTypeInfos* _self_, jule::Ptr<_1d65d9018_Var>* _52729_keyA, jule::Ptr<_1d65d9018_Var>* _52746_keyB) {
	if (((*(_52729_keyA)) != nullptr)) {
		(*((*(_52729_keyA))))._field_Constant=true;
		(*((*(_52729_keyA))))._field_Value=jule::new_ptr<_1d6648363_Value>(_1d6648363_Value{._field_Data=jule::new_ptr<_1d664721e_Data>()});
		(*((*(_52729_keyA))))._field_Kind=(*(_1d675d4bc_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_52746_keyB)) != nullptr)) {
		(*((*(_52746_keyB))))._field_Constant=true;
		(*((*(_52746_keyB))))._field_Value=jule::new_ptr<_1d6648363_Value>(_1d6648363_Value{._field_Data=jule::new_ptr<_1d664721e_Data>()});
		(*((*(_52746_keyB))))._field_Kind=jule::new_ptr<_1d667ec07_TypeSymbol>(_1d667ec07_TypeSymbol{._field_Kind=jule::new_ptr<_1d6677a35_TypeKind>(_1d6677a35_TypeKind{._field_Kind=jule::Trait<_1d667757e_Kind>(jule::new_ptr<_1d655c002_comptimeTypeInfo>(), 15)})});
	};
}



inline void _1d655b95d_step(_1d655a907_comptimeTypeInfos* _self_, jule::I64 _54823_i, jule::Ptr<_1d65d9018_Var>* _54836_keyA, jule::Ptr<_1d65d9018_Var>* _54853_keyB) {
	if (((*(_54836_keyA)) != nullptr)) {
		(*((*((*((*(_54836_keyA))))._field_Value))._field_Data))._field_Constant=static__1d4321648_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_54823_i)));
		(*((*((*((*(_54836_keyA))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_54836_keyA))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	};
	if (((*(_54853_keyB)) != nullptr)) {
		(*((*((*((*(_54853_keyB))))._field_Kind))._field_Kind))._field_Kind=jule::Trait<_1d667757e_Kind>((*(_self_))._field_types[_54823_i], 15);
	};
}



inline jule::I64 _1d655bbe4_len(_1d655a907_comptimeTypeInfos* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_types.len());;
}





std::ostream &operator<<(std::ostream &_Stream, _1d655a907_comptimeTypeInfos _Src) {
	_Stream << _1d655ac7b_Str(&_Src);
	return _Stream;
}



inline jule::Str _1d655c376_Str(_1d655c002_comptimeTypeInfo* _self_) {
	return ((jule::Str::lit("comptimeTypeInfo[", 17) + _1d6677ded_Str((*(_self_))._field_base.ptr())) + jule::Str::lit("]", 1));;
}



inline jule::Bool _1d655c6b7_Equal(jule::Ptr<_1d655c002_comptimeTypeInfo> _self_, jule::Ptr<_1d6677a35_TypeKind> _57221_other) {
	return false;;
}



inline jule::Ptr<_1d664721e_Data> _1d655cd16__Str(jule::Ptr<_1d655c002_comptimeTypeInfo> _self_, jule::Ptr<_1d6648e13_Eval>* _57625_e, jule::Ptr<_1d650443e_FnCallExpr>* _57640_fc) {
	if (((*((*(_57640_fc))))._field_Args.len() > 0LL)) {
		_1d6649463_pushErr((*(_57625_e)).ptr(), (*((*((*(_57640_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Str", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1d4321208_Const> _58113_constant = static__1d4321e95_NewStr(_1d6677ded_Str((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=_1d675a376_primStr, ._field_Model=jule::Any(_58113_constant, &__jule_any_type19), ._field_Constant=_58113_constant});;
}



inline jule::Ptr<_1d664721e_Data> _1d655d212__Kind(jule::Ptr<_1d655c002_comptimeTypeInfo> _self_, jule::Ptr<_1d6648e13_Eval>* _58930_e, jule::Ptr<_1d650443e_FnCallExpr>* _58945_fc) {
	if (((*((*(_58945_fc))))._field_Args.len() > 0LL)) {
		_1d6649463_pushErr((*(_58930_e)).ptr(), (*((*((*(_58945_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Kind", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1d6547c57_Enum> _59413_enm = _1d6597669_FindEnum(_1d656952b_findComptimePackage(&((*((*(_58930_e))))._field_s)).ptr(), jule::Str::lit("Kind", 4));;
	jule::Ptr<_1d65471da_EnumItem> _59517_item = nullptr;;
	{
		
		if (_1d6678d99_Void((*(_self_))._field_base.ptr())) {
			_case_begin_1d974db4c:;
			{
				_59517_item=_1d654884b_FindItem(_59413_enm.ptr(), jule::Str::lit("Void", 4));
			}
		}
		else if ((_1d667b709_Struct((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1d974da3c:;
			{
				_59517_item=_1d654884b_FindItem(_59413_enm.ptr(), jule::Str::lit("Struct", 6));
			}
		}
		else if ((_1d667b990_Trait((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1d974d960:;
			{
				_59517_item=_1d654884b_FindItem(_59413_enm.ptr(), jule::Str::lit("Trait", 5));
			}
		}
		else if ((_1d667a6a3_Ptr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1d974d751:;
			{
				if (_1d668843b_IsUnsafe(_1d667a6a3_Ptr((*(_self_))._field_base.ptr()).ptr())) {
					_59517_item=_1d654884b_FindItem(_59413_enm.ptr(), jule::Str::lit("UnsafePtr", 9));
				} else {
					_59517_item=_1d654884b_FindItem(_59413_enm.ptr(), jule::Str::lit("Ptr", 3));
				};
			}
		}
		else if ((_1d667a41c_Sptr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1d974d7b7:;
			{
				_59517_item=_1d654884b_FindItem(_59413_enm.ptr(), jule::Str::lit("SmartPtr", 8));
			}
		}
		else if ((_1d667a939_Enum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1d974e2ce:;
			{
				_59517_item=_1d654884b_FindItem(_59413_enm.ptr(), jule::Str::lit("Enum", 4));
			}
		}
		else if ((_1d667bc26_Map((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1d974e345:;
			{
				_59517_item=_1d654884b_FindItem(_59413_enm.ptr(), jule::Str::lit("Map", 3));
			}
		}
		else if ((_1d667b1dc_Slc((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1d974e3bc:;
			{
				_59517_item=_1d654884b_FindItem(_59413_enm.ptr(), jule::Str::lit("Slice", 5));
			}
		}
		else if ((_1d667ae56_Arr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1d974e444:;
			{
				_59517_item=_1d654884b_FindItem(_59413_enm.ptr(), jule::Str::lit("Array", 5));
			}
		}
		else if ((_1d667b473_Fn((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1d974e4bb:;
			{
				_59517_item=_1d654884b_FindItem(_59413_enm.ptr(), jule::Str::lit("Func", 4));
			}
		}
		else if ((_1d667beac_Tup((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1d974e543:;
			{
				_59517_item=_1d654884b_FindItem(_59413_enm.ptr(), jule::Str::lit("Tuple", 5));
			}
		}
		else if ((_1d667a186_Prim((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1d974e5ba:;
			{
				jule::Ptr<_1d668060e_Prim> _62413_prim = _1d667a186_Prim((*(_self_))._field_base.ptr());;
				{
					
					if (_1d6683d2c_IsAny(_62413_prim.ptr())) {
						_case_begin_1d9759edd:;
						{
							_59517_item=_1d654884b_FindItem(_59413_enm.ptr(), jule::Str::lit("Any", 3));
						}
					}
					else if (_1d6683810_IsBool(_62413_prim.ptr())) {
						_case_begin_1d975a054:;
						{
							_59517_item=_1d654884b_FindItem(_59413_enm.ptr(), jule::Str::lit("Bool", 4));
						}
					}
					else if (_1d6683a96_IsStr(_62413_prim.ptr())) {
						_case_begin_1d975a0ba:;
						{
							_59517_item=_1d654884b_FindItem(_59413_enm.ptr(), jule::Str::lit("Str", 3));
						}
					}
					else if (_1d6682a40_IsF32(_62413_prim.ptr())) {
						_case_begin_1d975a131:;
						{
							_59517_item=_1d654884b_FindItem(_59413_enm.ptr(), jule::Str::lit("F32", 3));
						}
					}
					else if (_1d6682cc6_IsF64(_62413_prim.ptr())) {
						_case_begin_1d975abae:;
						{
							_59517_item=_1d654884b_FindItem(_59413_enm.ptr(), jule::Str::lit("F64", 3));
						}
					}
					else if (_1d66814bc_IsI8(_62413_prim.ptr())) {
						_case_begin_1d975ac25:;
						{
							_59517_item=_1d654884b_FindItem(_59413_enm.ptr(), jule::Str::lit("I8", 2));
						}
					}
					else if (_1d6681753_IsI16(_62413_prim.ptr())) {
						_case_begin_1d975ac8b:;
						{
							_59517_item=_1d654884b_FindItem(_59413_enm.ptr(), jule::Str::lit("I16", 3));
						}
					}
					else if (_1d66819d9_IsI32(_62413_prim.ptr())) {
						_case_begin_1d975ad02:;
						{
							_59517_item=_1d654884b_FindItem(_59413_enm.ptr(), jule::Str::lit("I32", 3));
						}
					}
					else if (_1d6681c70_IsI64(_62413_prim.ptr())) {
						_case_begin_1d975ad68:;
						{
							_59517_item=_1d654884b_FindItem(_59413_enm.ptr(), jule::Str::lit("I64", 3));
						}
					}
					else if (_1d6682006_IsU8(_62413_prim.ptr())) {
						_case_begin_1d975ade0:;
						{
							_59517_item=_1d654884b_FindItem(_59413_enm.ptr(), jule::Str::lit("U8", 2));
						}
					}
					else if (_1d668228c_IsU16(_62413_prim.ptr())) {
						_case_begin_1d975ae67:;
						{
							_59517_item=_1d654884b_FindItem(_59413_enm.ptr(), jule::Str::lit("U16", 3));
						}
					}
					else if (_1d6682523_IsU32(_62413_prim.ptr())) {
						_case_begin_1d975aede:;
						{
							_59517_item=_1d654884b_FindItem(_59413_enm.ptr(), jule::Str::lit("U32", 3));
						}
					}
					else if (_1d66827a9_IsU64(_62413_prim.ptr())) {
						_case_begin_1d975b066:;
						{
							_59517_item=_1d654884b_FindItem(_59413_enm.ptr(), jule::Str::lit("U64", 3));
						}
					}
					else if (_1d668305c_IsInt(_62413_prim.ptr())) {
						_case_begin_1d975b0dd:;
						{
							_59517_item=_1d654884b_FindItem(_59413_enm.ptr(), jule::Str::lit("Int", 3));
						}
					}
					else if (_1d66832e3_IsUint(_62413_prim.ptr())) {
						_case_begin_1d975b165:;
						{
							_59517_item=_1d654884b_FindItem(_59413_enm.ptr(), jule::Str::lit("Uint", 4));
						}
					}
					else if (_1d6683579_IsUintptr(_62413_prim.ptr())) {
						_case_begin_1d975b1dc:;
						{
							_59517_item=_1d654884b_FindItem(_59413_enm.ptr(), jule::Str::lit("Uintptr", 7));
						}
					}
					else {
						_case_begin_1d9759e77:;
						{
							jule::panic((jule::Str::lit("Kind(): unimplemented type for std::comptime: ", 46) + _1d6677ded_Str((*(_self_))._field_base.ptr())) + jule::Str("\nlocation: std/jule/sema/comptime.jule:659:17"));;
						}
					}
					_match_end_1d9759e11:;
				};
			}
		}
		else {
			_case_begin_1d974d5ec:;
			{
				jule::panic((jule::Str::lit("Kind(): unimplemented type for std::comptime: ", 46) + _1d6677ded_Str((*(_self_))._field_base.ptr())) + jule::Str("\nlocation: std/jule/sema/comptime.jule:662:13"));;
			}
		}
		_match_end_1d974d278:;
	};
	return _1d667479b_evalEnumStatic(&(_59413_enm), &(_59517_item));;
}



inline jule::Ptr<_1d664721e_Data> _1d655d60d__Bits(jule::Ptr<_1d655c002_comptimeTypeInfo> _self_, jule::Ptr<_1d6648e13_Eval>* _66730_e, jule::Ptr<_1d650443e_FnCallExpr>* _66745_fc) {
	if (((*((*(_66745_fc))))._field_Args.len() > 0LL)) {
		_1d6649463_pushErr((*(_66730_e)).ptr(), (*((*((*(_66745_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1d668060e_Prim> _6729_prim = _1d667a186_Prim((*(_self_))._field_base.ptr());;
	if ((_6729_prim == nullptr)) {
		_1d6649463_pushErr((*(_66730_e)).ptr(), (*((*(_66745_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1d6677ded_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::I64 _6779_n = _1d4315560_BitsizeOf((*(_6729_prim))._field_Kind);;
	if ((_6779_n == -1LL)) {
		_1d6649463_pushErr((*(_66730_e)).ptr(), (*((*(_66745_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1d6677ded_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1d4321208_Const> _68213_constant = static__1d4321648_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_6779_n)));;
	return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=_1d675a376_primStr, ._field_Model=jule::Any(_68213_constant, &__jule_any_type19), ._field_Constant=_68213_constant});;
}



inline jule::Ptr<_1d664721e_Data> _1d655da09__Elem(jule::Ptr<_1d655c002_comptimeTypeInfo> _self_, jule::Ptr<_1d6648e13_Eval>* _69030_e, jule::Ptr<_1d650443e_FnCallExpr>* _69045_fc) {
	if (((*((*(_69045_fc))))._field_Args.len() > 0LL)) {
		_1d6649463_pushErr((*(_69030_e)).ptr(), (*((*((*(_69045_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1d6687902_Ptr> _69513_ptr = _1d667a6a3_Ptr((*(_self_))._field_base.ptr());;
	if ((_69513_ptr != nullptr)) {
		if (_1d668843b_IsUnsafe(_69513_ptr.ptr())) {
			_1d6649463_pushErr((*(_69030_e)).ptr(), (*((*(_69045_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1d6677ded_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type4)}));
			return nullptr;;
		};
		return _1d65698a0_buildComptimeTypeInfoData(&((*((*(_69030_e))))._field_s), &((*(_69513_ptr))._field_Elem));;
	};
	jule::Ptr<_1d668413a_Sptr> _70313_sptr = _1d667a41c_Sptr((*(_self_))._field_base.ptr());;
	if ((_70313_sptr != nullptr)) {
		return _1d65698a0_buildComptimeTypeInfoData(&((*((*(_69030_e))))._field_s), &((*(_70313_sptr))._field_Elem));;
	};
	jule::Ptr<_1d6684b0d_Slc> _70713_slice = _1d667b1dc_Slc((*(_self_))._field_base.ptr());;
	if ((_70713_slice != nullptr)) {
		return _1d65698a0_buildComptimeTypeInfoData(&((*((*(_69030_e))))._field_s), &((*(_70713_slice))._field_Elem));;
	};
	jule::Ptr<_1d6686e2e_Arr> _71113_array = _1d667ae56_Arr((*(_self_))._field_base.ptr());;
	if ((_71113_array != nullptr)) {
		return _1d65698a0_buildComptimeTypeInfoData(&((*((*(_69030_e))))._field_s), &((*(_71113_array))._field_Elem));;
	};
	jule::Ptr<_1d6547c57_Enum> _71513_enm = _1d667a939_Enum((*(_self_))._field_base.ptr());;
	if ((_71513_enm != nullptr)) {
		return _1d65698a0_buildComptimeTypeInfoData(&((*((*(_69030_e))))._field_s), &((*((*(_71513_enm))._field_Kind))._field_Kind));;
	};
	_1d6649463_pushErr((*(_69030_e)).ptr(), (*((*(_69045_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1d6677ded_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1d664721e_Data> _1d655de05__Size(jule::Ptr<_1d655c002_comptimeTypeInfo> _self_, jule::Ptr<_1d6648e13_Eval>* _72330_e, jule::Ptr<_1d650443e_FnCallExpr>* _72345_fc) {
	if (((*((*(_72345_fc))))._field_Args.len() > 0LL)) {
		_1d6649463_pushErr((*(_72330_e)).ptr(), (*((*((*(_72345_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Size", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1d6686e2e_Arr> _72813_arr = _1d667ae56_Arr((*(_self_))._field_base.ptr());;
	if ((_72813_arr == nullptr)) {
		_1d6649463_pushErr((*(_72330_e)).ptr(), (*((*(_72345_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1d6677ded_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Size", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1d4321208_Const> _73313_constant = static__1d4321648_NewI64(static_cast<jule::I64>(static_cast<jule::I64>((*(_72813_arr))._field_N)));;
	return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=_1d675b09c_primInt, ._field_Model=jule::Any(_73313_constant, &__jule_any_type19), ._field_Constant=_73313_constant});;
}



inline jule::Ptr<_1d664721e_Data> _1d655e301__Key(jule::Ptr<_1d655c002_comptimeTypeInfo> _self_, jule::Ptr<_1d6648e13_Eval>* _74129_e, jule::Ptr<_1d650443e_FnCallExpr>* _74144_fc) {
	if (((*((*(_74144_fc))))._field_Args.len() > 0LL)) {
		_1d6649463_pushErr((*(_74129_e)).ptr(), (*((*((*(_74144_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Key", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1d66862a2_Map> _74613_m = _1d667bc26_Map((*(_self_))._field_base.ptr());;
	if ((_74613_m == nullptr)) {
		_1d6649463_pushErr((*(_74129_e)).ptr(), (*((*(_74144_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1d6677ded_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Key", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1d65698a0_buildComptimeTypeInfoData(&((*((*(_74129_e))))._field_s), &((*(_74613_m))._field_Key));;
}



inline jule::Ptr<_1d664721e_Data> _1d655e6ec__Value(jule::Ptr<_1d655c002_comptimeTypeInfo> _self_, jule::Ptr<_1d6648e13_Eval>* _75431_e, jule::Ptr<_1d650443e_FnCallExpr>* _75446_fc) {
	if (((*((*(_75446_fc))))._field_Args.len() > 0LL)) {
		_1d6649463_pushErr((*(_75431_e)).ptr(), (*((*((*(_75446_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Value", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1d66862a2_Map> _75913_m = _1d667bc26_Map((*(_self_))._field_base.ptr());;
	if ((_75913_m == nullptr)) {
		_1d6649463_pushErr((*(_75431_e)).ptr(), (*((*(_75446_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1d6677ded_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Value", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1d65698a0_buildComptimeTypeInfoData(&((*((*(_75431_e))))._field_s), &((*(_75913_m))._field_Val));;
}



inline jule::Ptr<_1d664721e_Data> _1d655eae8__Fields(jule::Ptr<_1d655c002_comptimeTypeInfo> _self_, jule::Ptr<_1d6648e13_Eval>* _76732_e, jule::Ptr<_1d650443e_FnCallExpr>* _76747_fc) {
	if (((*((*(_76747_fc))))._field_Args.len() > 0LL)) {
		_1d6649463_pushErr((*(_76732_e)).ptr(), (*((*((*(_76747_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1d652005e_StructIns> _77213_s = _1d667b709_Struct((*(_self_))._field_base.ptr());;
	if ((_77213_s != nullptr)) {
		return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=jule::new_ptr<_1d6677a35_TypeKind>(_1d6677a35_TypeKind{._field_Kind=jule::Trait<_1d667757e_Kind>(jule::new_ptr<_1d654ec4d_comptimeStructFields>(_1d654ec4d_comptimeStructFields{._field_fields=(*(_77213_s))._field_Fields}), 7)}), });;
	};
	jule::Ptr<_1d6547c57_Enum> _78213_enm = _1d667a939_Enum((*(_self_))._field_base.ptr());;
	if ((_78213_enm != nullptr)) {
		return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=jule::new_ptr<_1d6677a35_TypeKind>(_1d6677a35_TypeKind{._field_Kind=jule::Trait<_1d667757e_Kind>(jule::new_ptr<_1d655599b_comptimeEnumFields>(_1d655599b_comptimeEnumFields{._field_fields=(*(_78213_enm))._field_Items}), 11)}), });;
	};
	_1d6649463_pushErr((*(_76732_e)).ptr(), (*((*(_76747_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1d6677ded_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1d664721e_Data> _1d655eee4__Statics(jule::Ptr<_1d655c002_comptimeTypeInfo> _self_, jule::Ptr<_1d6648e13_Eval>* _79633_e, jule::Ptr<_1d650443e_FnCallExpr>* _79648_fc) {
	if (((*((*(_79648_fc))))._field_Args.len() > 0LL)) {
		_1d6649463_pushErr((*(_79633_e)).ptr(), (*((*((*(_79648_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Statics", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1d652005e_StructIns> _80113_s = _1d667b709_Struct((*(_self_))._field_base.ptr());;
	if ((_80113_s == nullptr)) {
		_1d6649463_pushErr((*(_79633_e)).ptr(), (*((*(_79648_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1d6677ded_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=jule::new_ptr<_1d6677a35_TypeKind>(_1d6677a35_TypeKind{._field_Kind=jule::Trait<_1d667757e_Kind>(jule::new_ptr<_1d6553009_comptimeStatics>(_1d6553009_comptimeStatics{._field_fields=(*(_80113_s))._field_Statics}), 9)}), });;
}



inline jule::Ptr<_1d664721e_Data> _1d65603e0__Public(jule::Ptr<_1d655c002_comptimeTypeInfo> _self_, jule::Ptr<_1d6648e13_Eval>* _81532_e, jule::Ptr<_1d650443e_FnCallExpr>* _81547_fc) {
	if (((*((*(_81547_fc))))._field_Args.len() > 0LL)) {
		_1d6649463_pushErr((*(_81532_e)).ptr(), (*((*((*(_81547_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Bool _82013_public = false;;
	{
		
		if ((_1d667b709_Struct((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1d978c22e:;
			{
				_82013_public=(*((*(_1d667b709_Struct((*(_self_))._field_base.ptr())))._field_Decl))._field_Public;
			}
		}
		else if ((_1d667b990_Trait((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1d978d1ca:;
			{
				_82013_public=(*(_1d667b990_Trait((*(_self_))._field_base.ptr())))._field_Public;
			}
		}
		else if ((_1d667a939_Enum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1d978d241:;
			{
				_82013_public=(*(_1d667a939_Enum((*(_self_))._field_base.ptr())))._field_Public;
			}
		}
		else if ((_1d667abc0_TypeEnum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1d978be32:;
			{
				_82013_public=(*(_1d667abc0_TypeEnum((*(_self_))._field_base.ptr())))._field_Public;
			}
		}
		else {
			_case_begin_1d978bdbb:;
			{
				_1d6649463_pushErr((*(_81532_e)).ptr(), (*((*(_81547_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1d6677ded_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1d978bc9a:;
	};
	jule::Ptr<_1d4321208_Const> _83413_constant = static__1d4321bcb_NewBool(_82013_public);;
	return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=_1d675a640_primBool, ._field_Model=jule::Any(_83413_constant, &__jule_any_type19), ._field_Constant=_83413_constant});;
}



inline jule::Ptr<_1d664721e_Data> _1d65607db__Binded(jule::Ptr<_1d655c002_comptimeTypeInfo> _self_, jule::Ptr<_1d6648e13_Eval>* _84232_e, jule::Ptr<_1d650443e_FnCallExpr>* _84247_fc) {
	if (((*((*(_84247_fc))))._field_Args.len() > 0LL)) {
		_1d6649463_pushErr((*(_84232_e)).ptr(), (*((*((*(_84247_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Binded", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1d4321208_Const> _84713_constant = static__1d4321bcb_NewBool(_1d667887c_Binded((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=_1d675a640_primBool, ._field_Model=jule::Any(_84713_constant, &__jule_any_type19), ._field_Constant=_84713_constant});;
}



inline jule::Ptr<_1d664721e_Data> _1d6560bd7__Ordered(jule::Ptr<_1d655c002_comptimeTypeInfo> _self_, jule::Ptr<_1d6648e13_Eval>* _85529_e, jule::Ptr<_1d650443e_FnCallExpr>* _85544_fc) {
	if (((*((*(_85544_fc))))._field_Args.len() > 0LL)) {
		_1d6649463_pushErr((*(_85529_e)).ptr(), (*((*((*(_85544_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Ordered", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1d4321208_Const> _86013_constant = static__1d4321bcb_NewBool(_1d667964c_Ordered((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=_1d675a376_primStr, ._field_Model=jule::Any(_86013_constant, &__jule_any_type19), ._field_Constant=_86013_constant});;
}



inline jule::Ptr<_1d664721e_Data> _1d65610d3__Comparable(jule::Ptr<_1d655c002_comptimeTypeInfo> _self_, jule::Ptr<_1d6648e13_Eval>* _86832_e, jule::Ptr<_1d650443e_FnCallExpr>* _86847_fc) {
	if (((*((*(_86847_fc))))._field_Args.len() > 0LL)) {
		_1d6649463_pushErr((*(_86832_e)).ptr(), (*((*((*(_86847_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Comparable", 10), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1d4321208_Const> _87313_constant = static__1d4321bcb_NewBool(_1d6679130_Comparable((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=_1d675a376_primStr, ._field_Model=jule::Any(_87313_constant, &__jule_any_type19), ._field_Constant=_87313_constant});;
}



inline jule::Ptr<_1d664721e_Data> _1d65614ce__Mutable(jule::Ptr<_1d655c002_comptimeTypeInfo> _self_, jule::Ptr<_1d6648e13_Eval>* _88129_e, jule::Ptr<_1d650443e_FnCallExpr>* _88144_fc) {
	if (((*((*(_88144_fc))))._field_Args.len() > 0LL)) {
		_1d6649463_pushErr((*(_88129_e)).ptr(), (*((*((*(_88144_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1d4321208_Const> _88613_constant = static__1d4321bcb_NewBool(_1d66793b6_Mutable((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=_1d675a640_primBool, ._field_Model=jule::Any(_88613_constant, &__jule_any_type19), ._field_Constant=_88613_constant});;
}



inline jule::Ptr<_1d664721e_Data> _1d65618ca__Types(jule::Ptr<_1d655c002_comptimeTypeInfo> _self_, jule::Ptr<_1d6648e13_Eval>* _89431_e, jule::Ptr<_1d650443e_FnCallExpr>* _89446_fc) {
	if (((*((*(_89446_fc))))._field_Args.len() > 0LL)) {
		_1d6649463_pushErr((*(_89431_e)).ptr(), (*((*((*(_89446_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Types", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1d6685702_Tuple> _89913_tup = _1d667beac_Tup((*(_self_))._field_base.ptr());;
	if ((_89913_tup == nullptr)) {
		_1d6649463_pushErr((*(_89431_e)).ptr(), (*((*(_89446_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1d6677ded_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Types", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1d655a907_comptimeTypeInfos> _90413_infos = jule::new_ptr<_1d655a907_comptimeTypeInfos>(_1d655a907_comptimeTypeInfos{._field_types=jule::Slice<jule::Ptr<_1d655c002_comptimeTypeInfo>>::alloc(0LL, (*(_89913_tup))._field_Types.len())});;
	{
		auto expr = &((*(_89913_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d97a2189:;
		if (it != expr_end) {
			jule::Ptr<_1d6677a35_TypeKind> _90721_t = *it;
			{
				{ jule::Slice<jule::Ptr<_1d655c002_comptimeTypeInfo>> &__jule_push_dest = (*(_90413_infos))._field_types; __jule_push_dest.push(_1d65b55bb_pushComptimeTypeInfo((*((*((*(_89431_e))))._field_s))._field_meta.ptr(), &(_90721_t))); };
			}
			_iter_next_1d97a2189:;
			++it;
			goto _iter_begin_1d97a2189;
		}
		_iter_end_1d97a2189:;
	};
	return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=jule::new_ptr<_1d6677a35_TypeKind>(_1d6677a35_TypeKind{._field_Kind=jule::Trait<_1d667757e_Kind>(_90413_infos, 14)}), });;
}



inline jule::Ptr<_1d664721e_Data> _1d6561cc6__Exceptional(jule::Ptr<_1d655c002_comptimeTypeInfo> _self_, jule::Ptr<_1d6648e13_Eval>* _91737_e, jule::Ptr<_1d650443e_FnCallExpr>* _91752_fc) {
	if (((*((*(_91752_fc))))._field_Args.len() > 0LL)) {
		_1d6649463_pushErr((*(_91737_e)).ptr(), (*((*((*(_91752_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Exceptional", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1d6535173_FnIns> _92213_f = _1d667b473_Fn((*(_self_))._field_base.ptr());;
	if ((_92213_f == nullptr)) {
		_1d6649463_pushErr((*(_91737_e)).ptr(), (*((*(_91752_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1d6677ded_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Exceptional", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1d4321208_Const> _92713_constant = static__1d4321bcb_NewBool((((*(_92213_f))._field_Decl != nullptr) && (*((*(_92213_f))._field_Decl))._field_Exceptional));;
	return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=_1d675a640_primBool, ._field_Model=jule::Any(_92713_constant, &__jule_any_type19), ._field_Constant=_92713_constant});;
}



inline jule::Ptr<_1d664721e_Data> _1d65621c2__CanNil(jule::Ptr<_1d655c002_comptimeTypeInfo> _self_, jule::Ptr<_1d6648e13_Eval>* _93532_e, jule::Ptr<_1d650443e_FnCallExpr>* _93547_fc) {
	if (((*((*(_93547_fc))))._field_Args.len() > 0LL)) {
		_1d6649463_pushErr((*(_93532_e)).ptr(), (*((*((*(_93547_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("CanNil", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1d4321208_Const> _94013_constant = static__1d4321bcb_NewBool(_1d66798d3_NilCompatible((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=_1d675a640_primBool, ._field_Model=jule::Any(_94013_constant, &__jule_any_type19), ._field_Constant=_94013_constant});;
}



inline jule::Ptr<_1d664721e_Data> _1d65625bd__RC(jule::Ptr<_1d655c002_comptimeTypeInfo> _self_, jule::Ptr<_1d6648e13_Eval>* _94828_e, jule::Ptr<_1d650443e_FnCallExpr>* _94843_fc) {
	if (((*((*(_94843_fc))))._field_Args.len() > 0LL)) {
		_1d6649463_pushErr((*(_94828_e)).ptr(), (*((*((*(_94843_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("RC", 2), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1d4321208_Const> _95313_constant = static__1d4321bcb_NewBool(_1d6679b69_PerformsRC((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=_1d675a640_primBool, ._field_Model=jule::Any(_95313_constant, &__jule_any_type19), ._field_Constant=_95313_constant});;
}



inline jule::Ptr<_1d664721e_Data> _1d65629b9__Result(jule::Ptr<_1d655c002_comptimeTypeInfo> _self_, jule::Ptr<_1d6648e13_Eval>* _96132_e, jule::Ptr<_1d650443e_FnCallExpr>* _96147_fc) {
	if (((*((*(_96147_fc))))._field_Args.len() > 0LL)) {
		_1d6649463_pushErr((*(_96132_e)).ptr(), (*((*((*(_96147_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Result", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1d6535173_FnIns> _96613_f = _1d667b473_Fn((*(_self_))._field_base.ptr());;
	if ((_96613_f == nullptr)) {
		_1d6649463_pushErr((*(_96132_e)).ptr(), (*((*(_96147_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1d6677ded_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Result", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*(_96613_f))._field_Result == nullptr)) {
		return _1d65698a0_buildComptimeTypeInfoData(&((*((*(_96132_e))))._field_s), &(_1d6759c9e_primVoid));;
	};
	return _1d65698a0_buildComptimeTypeInfoData(&((*((*(_96132_e))))._field_s), &((*(_96613_f))._field_Result));;
}



inline jule::Ptr<_1d664721e_Data> _1d6562db5__Params(jule::Ptr<_1d655c002_comptimeTypeInfo> _self_, jule::Ptr<_1d6648e13_Eval>* _97732_e, jule::Ptr<_1d650443e_FnCallExpr>* _97747_fc) {
	if (((*((*(_97747_fc))))._field_Args.len() > 0LL)) {
		_1d6649463_pushErr((*(_97732_e)).ptr(), (*((*((*(_97747_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Params", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1d6535173_FnIns> _98213_f = _1d667b473_Fn((*(_self_))._field_base.ptr());;
	if ((_98213_f == nullptr)) {
		_1d6649463_pushErr((*(_97732_e)).ptr(), (*((*(_97747_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1d6677ded_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Params", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=jule::new_ptr<_1d6677a35_TypeKind>(_1d6677a35_TypeKind{._field_Kind=jule::Trait<_1d667757e_Kind>(jule::new_ptr<_1d655930c_comptimeParams>(_1d655930c_comptimeParams{._field_params=(*(_98213_f))._field_Params}), 13)}), });;
}



inline jule::Ptr<_1d664721e_Data> _1d6563206_subIdent(jule::Ptr<_1d655c002_comptimeTypeInfo> _self_, jule::Str* _99429_ident) {
	{
		auto &_match_expr{ (*(_99429_ident)) };
		
		if (_match_expr == jule::Str::lit("Str", 3)) {
			_case_begin_1d97b6533:;
			{
				jule::Ptr<_1d6535173_FnIns> _99717_method = jule::new_ptr<_1d6535173_FnIns>(_1d6535173_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d664721e_Data>(jule::Ptr<_1d6648e13_Eval>*,jule::Ptr<_1d650443e_FnCallExpr>*,jule::Ptr<_1d664721e_Data>*)>([=](jule::Ptr<_1d6648e13_Eval>* _99833_e, jule::Ptr<_1d650443e_FnCallExpr>* _99848_fc, jule::Ptr<_1d664721e_Data>* ) mutable -> jule::Ptr<_1d664721e_Data> {
					return _1d655cd16__Str(_self_, _99833_e, _99848_fc);;
				}), });;
				return _1d656921d_buildAsComptimeMethodData(&(_99717_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Bits", 4)) {
			_case_begin_1d97b6ab6:;
			{
				jule::Ptr<_1d6535173_FnIns> _100417_method = jule::new_ptr<_1d6535173_FnIns>(_1d6535173_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d664721e_Data>(jule::Ptr<_1d6648e13_Eval>*,jule::Ptr<_1d650443e_FnCallExpr>*,jule::Ptr<_1d664721e_Data>*)>([=](jule::Ptr<_1d6648e13_Eval>* _100533_e, jule::Ptr<_1d650443e_FnCallExpr>* _100548_fc, jule::Ptr<_1d664721e_Data>* ) mutable -> jule::Ptr<_1d664721e_Data> {
					return _1d655d60d__Bits(_self_, _100533_e, _100548_fc);;
				}), });;
				return _1d656921d_buildAsComptimeMethodData(&(_100417_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Elem", 4)) {
			_case_begin_1d97b6b2c:;
			{
				jule::Ptr<_1d6535173_FnIns> _101117_method = jule::new_ptr<_1d6535173_FnIns>(_1d6535173_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d664721e_Data>(jule::Ptr<_1d6648e13_Eval>*,jule::Ptr<_1d650443e_FnCallExpr>*,jule::Ptr<_1d664721e_Data>*)>([=](jule::Ptr<_1d6648e13_Eval>* _101233_e, jule::Ptr<_1d650443e_FnCallExpr>* _101248_fc, jule::Ptr<_1d664721e_Data>* ) mutable -> jule::Ptr<_1d664721e_Data> {
					return _1d655da09__Elem(_self_, _101233_e, _101248_fc);;
				}), });;
				return _1d656921d_buildAsComptimeMethodData(&(_101117_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Size", 4)) {
			_case_begin_1d97b6b93:;
			{
				jule::Ptr<_1d6535173_FnIns> _101817_method = jule::new_ptr<_1d6535173_FnIns>(_1d6535173_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d664721e_Data>(jule::Ptr<_1d6648e13_Eval>*,jule::Ptr<_1d650443e_FnCallExpr>*,jule::Ptr<_1d664721e_Data>*)>([=](jule::Ptr<_1d6648e13_Eval>* _101933_e, jule::Ptr<_1d650443e_FnCallExpr>* _101948_fc, jule::Ptr<_1d664721e_Data>* ) mutable -> jule::Ptr<_1d664721e_Data> {
					return _1d655de05__Size(_self_, _101933_e, _101948_fc);;
				}), });;
				return _1d656921d_buildAsComptimeMethodData(&(_101817_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Key", 3)) {
			_case_begin_1d97b6c09:;
			{
				jule::Ptr<_1d6535173_FnIns> _102517_method = jule::new_ptr<_1d6535173_FnIns>(_1d6535173_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d664721e_Data>(jule::Ptr<_1d6648e13_Eval>*,jule::Ptr<_1d650443e_FnCallExpr>*,jule::Ptr<_1d664721e_Data>*)>([=](jule::Ptr<_1d6648e13_Eval>* _102633_e, jule::Ptr<_1d650443e_FnCallExpr>* _102648_fc, jule::Ptr<_1d664721e_Data>* ) mutable -> jule::Ptr<_1d664721e_Data> {
					return _1d655e301__Key(_self_, _102633_e, _102648_fc);;
				}), });;
				return _1d656921d_buildAsComptimeMethodData(&(_102517_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Value", 5)) {
			_case_begin_1d97b6d19:;
			{
				jule::Ptr<_1d6535173_FnIns> _103217_method = jule::new_ptr<_1d6535173_FnIns>(_1d6535173_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d664721e_Data>(jule::Ptr<_1d6648e13_Eval>*,jule::Ptr<_1d650443e_FnCallExpr>*,jule::Ptr<_1d664721e_Data>*)>([=](jule::Ptr<_1d6648e13_Eval>* _103333_e, jule::Ptr<_1d650443e_FnCallExpr>* _103348_fc, jule::Ptr<_1d664721e_Data>* ) mutable -> jule::Ptr<_1d664721e_Data> {
					return _1d655e6ec__Value(_self_, _103333_e, _103348_fc);;
				}), });;
				return _1d656921d_buildAsComptimeMethodData(&(_103217_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Fields", 6)) {
			_case_begin_1d97b6d80:;
			{
				jule::Ptr<_1d6535173_FnIns> _103917_method = jule::new_ptr<_1d6535173_FnIns>(_1d6535173_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d664721e_Data>(jule::Ptr<_1d6648e13_Eval>*,jule::Ptr<_1d650443e_FnCallExpr>*,jule::Ptr<_1d664721e_Data>*)>([=](jule::Ptr<_1d6648e13_Eval>* _104033_e, jule::Ptr<_1d650443e_FnCallExpr>* _104048_fc, jule::Ptr<_1d664721e_Data>* ) mutable -> jule::Ptr<_1d664721e_Data> {
					return _1d655eae8__Fields(_self_, _104033_e, _104048_fc);;
				}), });;
				return _1d656921d_buildAsComptimeMethodData(&(_103917_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Statics", 7)) {
			_case_begin_1d97b6de6:;
			{
				jule::Ptr<_1d6535173_FnIns> _104617_method = jule::new_ptr<_1d6535173_FnIns>(_1d6535173_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d664721e_Data>(jule::Ptr<_1d6648e13_Eval>*,jule::Ptr<_1d650443e_FnCallExpr>*,jule::Ptr<_1d664721e_Data>*)>([=](jule::Ptr<_1d6648e13_Eval>* _104733_e, jule::Ptr<_1d650443e_FnCallExpr>* _104748_fc, jule::Ptr<_1d664721e_Data>* ) mutable -> jule::Ptr<_1d664721e_Data> {
					return _1d655eee4__Statics(_self_, _104733_e, _104748_fc);;
				}), });;
				return _1d656921d_buildAsComptimeMethodData(&(_104617_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Params", 6)) {
			_case_begin_1d97b6e5c:;
			{
				jule::Ptr<_1d6535173_FnIns> _105317_method = jule::new_ptr<_1d6535173_FnIns>(_1d6535173_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d664721e_Data>(jule::Ptr<_1d6648e13_Eval>*,jule::Ptr<_1d650443e_FnCallExpr>*,jule::Ptr<_1d664721e_Data>*)>([=](jule::Ptr<_1d6648e13_Eval>* _105433_e, jule::Ptr<_1d650443e_FnCallExpr>* _105448_fc, jule::Ptr<_1d664721e_Data>* ) mutable -> jule::Ptr<_1d664721e_Data> {
					return _1d6562db5__Params(_self_, _105433_e, _105448_fc);;
				}), });;
				return _1d656921d_buildAsComptimeMethodData(&(_105317_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Types", 5)) {
			_case_begin_1d97b6ec3:;
			{
				jule::Ptr<_1d6535173_FnIns> _106017_method = jule::new_ptr<_1d6535173_FnIns>(_1d6535173_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d664721e_Data>(jule::Ptr<_1d6648e13_Eval>*,jule::Ptr<_1d650443e_FnCallExpr>*,jule::Ptr<_1d664721e_Data>*)>([=](jule::Ptr<_1d6648e13_Eval>* _106133_e, jule::Ptr<_1d650443e_FnCallExpr>* _106148_fc, jule::Ptr<_1d664721e_Data>* ) mutable -> jule::Ptr<_1d664721e_Data> {
					return _1d65618ca__Types(_self_, _106133_e, _106148_fc);;
				}), });;
				return _1d656921d_buildAsComptimeMethodData(&(_106017_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Public", 6)) {
			_case_begin_1d97b7039:;
			{
				jule::Ptr<_1d6535173_FnIns> _106717_method = jule::new_ptr<_1d6535173_FnIns>(_1d6535173_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d664721e_Data>(jule::Ptr<_1d6648e13_Eval>*,jule::Ptr<_1d650443e_FnCallExpr>*,jule::Ptr<_1d664721e_Data>*)>([=](jule::Ptr<_1d6648e13_Eval>* _106833_e, jule::Ptr<_1d650443e_FnCallExpr>* _106848_fc, jule::Ptr<_1d664721e_Data>* ) mutable -> jule::Ptr<_1d664721e_Data> {
					return _1d65603e0__Public(_self_, _106833_e, _106848_fc);;
				}), });;
				return _1d656921d_buildAsComptimeMethodData(&(_106717_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Binded", 6)) {
			_case_begin_1d97b70a0:;
			{
				jule::Ptr<_1d6535173_FnIns> _107417_method = jule::new_ptr<_1d6535173_FnIns>(_1d6535173_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d664721e_Data>(jule::Ptr<_1d6648e13_Eval>*,jule::Ptr<_1d650443e_FnCallExpr>*,jule::Ptr<_1d664721e_Data>*)>([=](jule::Ptr<_1d6648e13_Eval>* _107533_e, jule::Ptr<_1d650443e_FnCallExpr>* _107548_fc, jule::Ptr<_1d664721e_Data>* ) mutable -> jule::Ptr<_1d664721e_Data> {
					return _1d65607db__Binded(_self_, _107533_e, _107548_fc);;
				}), });;
				return _1d656921d_buildAsComptimeMethodData(&(_107417_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Ordered", 7)) {
			_case_begin_1d97b7127:;
			{
				jule::Ptr<_1d6535173_FnIns> _108117_method = jule::new_ptr<_1d6535173_FnIns>(_1d6535173_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d664721e_Data>(jule::Ptr<_1d6648e13_Eval>*,jule::Ptr<_1d650443e_FnCallExpr>*,jule::Ptr<_1d664721e_Data>*)>([=](jule::Ptr<_1d6648e13_Eval>* _108233_e, jule::Ptr<_1d650443e_FnCallExpr>* _108248_fc, jule::Ptr<_1d664721e_Data>* ) mutable -> jule::Ptr<_1d664721e_Data> {
					return _1d6560bd7__Ordered(_self_, _108233_e, _108248_fc);;
				}), });;
				return _1d656921d_buildAsComptimeMethodData(&(_108117_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Comparable", 10)) {
			_case_begin_1d97b719e:;
			{
				jule::Ptr<_1d6535173_FnIns> _108817_method = jule::new_ptr<_1d6535173_FnIns>(_1d6535173_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d664721e_Data>(jule::Ptr<_1d6648e13_Eval>*,jule::Ptr<_1d650443e_FnCallExpr>*,jule::Ptr<_1d664721e_Data>*)>([=](jule::Ptr<_1d6648e13_Eval>* _108933_e, jule::Ptr<_1d650443e_FnCallExpr>* _108948_fc, jule::Ptr<_1d664721e_Data>* ) mutable -> jule::Ptr<_1d664721e_Data> {
					return _1d65610d3__Comparable(_self_, _108933_e, _108948_fc);;
				}), });;
				return _1d656921d_buildAsComptimeMethodData(&(_108817_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_1d97b7226:;
			{
				jule::Ptr<_1d6535173_FnIns> _109517_method = jule::new_ptr<_1d6535173_FnIns>(_1d6535173_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d664721e_Data>(jule::Ptr<_1d6648e13_Eval>*,jule::Ptr<_1d650443e_FnCallExpr>*,jule::Ptr<_1d664721e_Data>*)>([=](jule::Ptr<_1d6648e13_Eval>* _109633_e, jule::Ptr<_1d650443e_FnCallExpr>* _109648_fc, jule::Ptr<_1d664721e_Data>* ) mutable -> jule::Ptr<_1d664721e_Data> {
					return _1d65614ce__Mutable(_self_, _109633_e, _109648_fc);;
				}), });;
				return _1d656921d_buildAsComptimeMethodData(&(_109517_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Exceptional", 11)) {
			_case_begin_1d97b729d:;
			{
				jule::Ptr<_1d6535173_FnIns> _110217_method = jule::new_ptr<_1d6535173_FnIns>(_1d6535173_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d664721e_Data>(jule::Ptr<_1d6648e13_Eval>*,jule::Ptr<_1d650443e_FnCallExpr>*,jule::Ptr<_1d664721e_Data>*)>([=](jule::Ptr<_1d6648e13_Eval>* _110333_e, jule::Ptr<_1d650443e_FnCallExpr>* _110348_fc, jule::Ptr<_1d664721e_Data>* ) mutable -> jule::Ptr<_1d664721e_Data> {
					return _1d6561cc6__Exceptional(_self_, _110333_e, _110348_fc);;
				}), });;
				return _1d656921d_buildAsComptimeMethodData(&(_110217_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("CanNil", 6)) {
			_case_begin_1d97b7325:;
			{
				jule::Ptr<_1d6535173_FnIns> _110917_method = jule::new_ptr<_1d6535173_FnIns>(_1d6535173_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d664721e_Data>(jule::Ptr<_1d6648e13_Eval>*,jule::Ptr<_1d650443e_FnCallExpr>*,jule::Ptr<_1d664721e_Data>*)>([=](jule::Ptr<_1d6648e13_Eval>* _111033_e, jule::Ptr<_1d650443e_FnCallExpr>* _111048_fc, jule::Ptr<_1d664721e_Data>* ) mutable -> jule::Ptr<_1d664721e_Data> {
					return _1d65621c2__CanNil(_self_, _111033_e, _111048_fc);;
				}), });;
				return _1d656921d_buildAsComptimeMethodData(&(_110917_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("RC", 2)) {
			_case_begin_1d97b739c:;
			{
				jule::Ptr<_1d6535173_FnIns> _111617_method = jule::new_ptr<_1d6535173_FnIns>(_1d6535173_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d664721e_Data>(jule::Ptr<_1d6648e13_Eval>*,jule::Ptr<_1d650443e_FnCallExpr>*,jule::Ptr<_1d664721e_Data>*)>([=](jule::Ptr<_1d6648e13_Eval>* _111733_e, jule::Ptr<_1d650443e_FnCallExpr>* _111748_fc, jule::Ptr<_1d664721e_Data>* ) mutable -> jule::Ptr<_1d664721e_Data> {
					return _1d65625bd__RC(_self_, _111733_e, _111748_fc);;
				}), });;
				return _1d656921d_buildAsComptimeMethodData(&(_111617_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Result", 6)) {
			_case_begin_1d97b7424:;
			{
				jule::Ptr<_1d6535173_FnIns> _112317_method = jule::new_ptr<_1d6535173_FnIns>(_1d6535173_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d664721e_Data>(jule::Ptr<_1d6648e13_Eval>*,jule::Ptr<_1d650443e_FnCallExpr>*,jule::Ptr<_1d664721e_Data>*)>([=](jule::Ptr<_1d6648e13_Eval>* _112433_e, jule::Ptr<_1d650443e_FnCallExpr>* _112448_fc, jule::Ptr<_1d664721e_Data>* ) mutable -> jule::Ptr<_1d664721e_Data> {
					return _1d65629b9__Result(_self_, _112433_e, _112448_fc);;
				}), });;
				return _1d656921d_buildAsComptimeMethodData(&(_112317_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Kind", 4)) {
			_case_begin_1d97b749b:;
			{
				jule::Ptr<_1d6535173_FnIns> _113017_method = jule::new_ptr<_1d6535173_FnIns>(_1d6535173_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d664721e_Data>(jule::Ptr<_1d6648e13_Eval>*,jule::Ptr<_1d650443e_FnCallExpr>*,jule::Ptr<_1d664721e_Data>*)>([=](jule::Ptr<_1d6648e13_Eval>* _113133_e, jule::Ptr<_1d650443e_FnCallExpr>* _113148_fc, jule::Ptr<_1d664721e_Data>* ) mutable -> jule::Ptr<_1d664721e_Data> {
					return _1d655d212__Kind(_self_, _113133_e, _113148_fc);;
				}), });;
				return _1d656921d_buildAsComptimeMethodData(&(_113017_method));;
			}
		}
		else {
			_case_begin_1d97b6676:;
			{
				return nullptr;;
			}
		}
		_match_end_1d97b638a:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1d655c002_comptimeTypeInfo _Src) {
	_Stream << _1d655c376_Str(&_Src);
	return _Stream;
}



inline jule::Str _1d6563888_Str(_1d6563514_comptimeValue* _self_) {
	return jule::Str::lit("comptimeValue", 13);;
}



inline jule::Bool _1d6563bc9_Equal(jule::Ptr<_1d6563514_comptimeValue> _self_, jule::Ptr<_1d6677a35_TypeKind> _114921_other) {
	return false;;
}



inline jule::Ptr<_1d664721e_Data> _1d6564229__Unwrap(jule::Ptr<_1d6563514_comptimeValue> _self_, jule::Ptr<_1d6648e13_Eval>* _115332_e, jule::Ptr<_1d650443e_FnCallExpr>* _115347_fc) {
	if (((*((*(_115347_fc))))._field_Args.len() > 0LL)) {
		_1d6649463_pushErr((*(_115332_e)).ptr(), (*((*((*(_115347_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Unwrap", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	return (*(_self_))._field_data;;
}



inline jule::Ptr<_1d664721e_Data> _1d6564625__Type(jule::Ptr<_1d6563514_comptimeValue> _self_, jule::Ptr<_1d6648e13_Eval>* _116130_e, jule::Ptr<_1d650443e_FnCallExpr>* _116145_fc) {
	if (((*((*(_116145_fc))))._field_Args.len() > 0LL)) {
		_1d6649463_pushErr((*(_116130_e)).ptr(), (*((*((*(_116145_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1d65698a0_buildComptimeTypeInfoData(&((*((*(_116130_e))))._field_s), &((*((*(_self_))._field_data))._field_Kind));;
}



inline jule::Ptr<_1d664721e_Data> _1d6564a21__Lvalue(jule::Ptr<_1d6563514_comptimeValue> _self_, jule::Ptr<_1d6648e13_Eval>* _116932_e, jule::Ptr<_1d650443e_FnCallExpr>* _116947_fc) {
	if (((*((*(_116947_fc))))._field_Args.len() > 0LL)) {
		_1d6649463_pushErr((*(_116932_e)).ptr(), (*((*((*(_116947_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Lvalue", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1d4321208_Const> _117413_constant = static__1d4321bcb_NewBool((*((*(_self_))._field_data))._field_Lvalue);;
	return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=_1d675a640_primBool, ._field_Model=jule::Any(_117413_constant, &__jule_any_type19), ._field_Constant=_117413_constant});;
}



inline jule::Ptr<_1d664721e_Data> _1d6564e1c__Mutable(jule::Ptr<_1d6563514_comptimeValue> _self_, jule::Ptr<_1d6648e13_Eval>* _118233_e, jule::Ptr<_1d650443e_FnCallExpr>* _118248_fc) {
	if (((*((*(_118248_fc))))._field_Args.len() > 0LL)) {
		_1d6649463_pushErr((*(_118233_e)).ptr(), (*((*((*(_118248_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1d4321208_Const> _118713_constant = static__1d4321bcb_NewBool((*((*(_self_))._field_data))._field_Mutable);;
	return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=_1d675a640_primBool, ._field_Model=jule::Any(_118713_constant, &__jule_any_type19), ._field_Constant=_118713_constant});;
}



inline jule::Ptr<_1d664721e_Data> _1d6565318__Const(jule::Ptr<_1d6563514_comptimeValue> _self_, jule::Ptr<_1d6648e13_Eval>* _119531_e, jule::Ptr<_1d650443e_FnCallExpr>* _119546_fc) {
	if (((*((*(_119546_fc))))._field_Args.len() > 0LL)) {
		_1d6649463_pushErr((*(_119531_e)).ptr(), (*((*((*(_119546_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Const", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1d4321208_Const> _120013_constant = static__1d4321bcb_NewBool(_1d6647ae3_IsConst((*(_self_))._field_data.ptr()));;
	return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=_1d675a640_primBool, ._field_Model=jule::Any(_120013_constant, &__jule_any_type19), ._field_Constant=_120013_constant});;
}



inline jule::Ptr<_1d664721e_Data> _1d6565714__Field(jule::Ptr<_1d6563514_comptimeValue> _self_, jule::Ptr<_1d6648e13_Eval>* _120831_e, jule::Ptr<_1d650443e_FnCallExpr>* _120846_fc) {
	if (((*((*(_120846_fc))))._field_Args.len() > 1LL)) {
		_1d6649463_pushErr((*(_120831_e)).ptr(), (*((*((*(_120846_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Field", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1d652005e_StructIns> _121313_s = _1d667b709_Struct((*((*(_self_))._field_data))._field_Kind.ptr());;
	if ((_121313_s == nullptr)) {
		_1d6649463_pushErr((*(_120831_e)).ptr(), (*((*(_120846_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1d6677ded_Str((*((*(_self_))._field_data))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Field", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1d6500715_Expr> _121813_arg = (*((*(_120846_fc))))._field_Args[0LL];;
	jule::Ptr<_1d664721e_Data> _121913_d = _1d6667173_evalExpr((*(_120831_e)), _121813_arg);;
	if ((_121913_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1d6647ae3_IsConst(_121913_d.ptr())))) {
		_1d6649463_pushErr((*(_120831_e)).ptr(), (*(_121813_arg))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1d668060e_Prim> _12279_prim = _1d667a186_Prim((*(_121913_d))._field_Kind.ptr());;
	if (((_12279_prim == nullptr) || (!(_1d6683a96_IsStr(_12279_prim.ptr()))))) {
		_1d6649463_pushErr((*(_120831_e)).ptr(), (*(_121813_arg))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1d6677ded_Str((*(_121913_d))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Str _12329_ident = _1d4323381_ReadStr((*(_121913_d))._field_Constant.ptr());;
	jule::Ptr<_1d651e4ae_FieldIns> _123313_f = _1d6521417_FindField(_121313_s.ptr(), _12329_ident);;
	if ((_123313_f == nullptr)) {
		_1d6649463_pushErr((*(_120831_e)).ptr(), (*(_121813_arg))._field_Token, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*((*(_121313_s))._field_Decl))._field_Ident, &__jule_any_type4),jule::Any(_12329_ident, &__jule_any_type4)}));
		return nullptr;;
	};
	_121913_d=jule::new_ptr<_1d664721e_Data>((*((*(_self_))._field_data)));
	_121913_d=_1d6660479_evalStructSubIdentField((*(_120831_e)).ptr(), &(_121913_d), &(_121313_s), &((*(_121813_arg))._field_Token), &(_123313_f));
	return _1d6569ad1_buildComptimeValue(&(_121913_d));;
}



inline jule::Ptr<_1d664721e_Data> _1d6565a55_subIdent(jule::Ptr<_1d6563514_comptimeValue> _self_, jule::Str* _124329_ident) {
	{
		auto &_match_expr{ (*(_124329_ident)) };
		
		if (_match_expr == jule::Str::lit("Unwrap", 6)) {
			_case_begin_1d980d866:;
			{
				jule::Ptr<_1d6535173_FnIns> _124617_method = jule::new_ptr<_1d6535173_FnIns>(_1d6535173_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d664721e_Data>(jule::Ptr<_1d6648e13_Eval>*,jule::Ptr<_1d650443e_FnCallExpr>*,jule::Ptr<_1d664721e_Data>*)>([=](jule::Ptr<_1d6648e13_Eval>* _124733_e, jule::Ptr<_1d650443e_FnCallExpr>* _124748_fc, jule::Ptr<_1d664721e_Data>* ) mutable -> jule::Ptr<_1d664721e_Data> {
					return _1d6564229__Unwrap(_self_, _124733_e, _124748_fc);;
				}), });;
				return _1d656921d_buildAsComptimeMethodData(&(_124617_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1d980d8dd:;
			{
				jule::Ptr<_1d6535173_FnIns> _125317_method = jule::new_ptr<_1d6535173_FnIns>(_1d6535173_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d664721e_Data>(jule::Ptr<_1d6648e13_Eval>*,jule::Ptr<_1d650443e_FnCallExpr>*,jule::Ptr<_1d664721e_Data>*)>([=](jule::Ptr<_1d6648e13_Eval>* _125433_e, jule::Ptr<_1d650443e_FnCallExpr>* _125448_fc, jule::Ptr<_1d664721e_Data>* ) mutable -> jule::Ptr<_1d664721e_Data> {
					return _1d6564625__Type(_self_, _125433_e, _125448_fc);;
				}), });;
				return _1d656921d_buildAsComptimeMethodData(&(_125317_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Lvalue", 6)) {
			_case_begin_1d980d965:;
			{
				jule::Ptr<_1d6535173_FnIns> _126017_method = jule::new_ptr<_1d6535173_FnIns>(_1d6535173_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d664721e_Data>(jule::Ptr<_1d6648e13_Eval>*,jule::Ptr<_1d650443e_FnCallExpr>*,jule::Ptr<_1d664721e_Data>*)>([=](jule::Ptr<_1d6648e13_Eval>* _126133_e, jule::Ptr<_1d650443e_FnCallExpr>* _126148_fc, jule::Ptr<_1d664721e_Data>* ) mutable -> jule::Ptr<_1d664721e_Data> {
					return _1d6564a21__Lvalue(_self_, _126133_e, _126148_fc);;
				}), });;
				return _1d656921d_buildAsComptimeMethodData(&(_126017_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_1d980d9dc:;
			{
				jule::Ptr<_1d6535173_FnIns> _126717_method = jule::new_ptr<_1d6535173_FnIns>(_1d6535173_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d664721e_Data>(jule::Ptr<_1d6648e13_Eval>*,jule::Ptr<_1d650443e_FnCallExpr>*,jule::Ptr<_1d664721e_Data>*)>([=](jule::Ptr<_1d6648e13_Eval>* _126833_e, jule::Ptr<_1d650443e_FnCallExpr>* _126848_fc, jule::Ptr<_1d664721e_Data>* ) mutable -> jule::Ptr<_1d664721e_Data> {
					return _1d6564e1c__Mutable(_self_, _126833_e, _126848_fc);;
				}), });;
				return _1d656921d_buildAsComptimeMethodData(&(_126717_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Const", 5)) {
			_case_begin_1d980dc40:;
			{
				jule::Ptr<_1d6535173_FnIns> _127417_method = jule::new_ptr<_1d6535173_FnIns>(_1d6535173_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d664721e_Data>(jule::Ptr<_1d6648e13_Eval>*,jule::Ptr<_1d650443e_FnCallExpr>*,jule::Ptr<_1d664721e_Data>*)>([=](jule::Ptr<_1d6648e13_Eval>* _127533_e, jule::Ptr<_1d650443e_FnCallExpr>* _127548_fc, jule::Ptr<_1d664721e_Data>* ) mutable -> jule::Ptr<_1d664721e_Data> {
					return _1d6565318__Const(_self_, _127533_e, _127548_fc);;
				}), });;
				return _1d656921d_buildAsComptimeMethodData(&(_127417_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Field", 5)) {
			_case_begin_1d980dcb7:;
			{
				jule::Ptr<_1d6535173_FnIns> _128117_method = jule::new_ptr<_1d6535173_FnIns>(_1d6535173_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d664721e_Data>(jule::Ptr<_1d6648e13_Eval>*,jule::Ptr<_1d650443e_FnCallExpr>*,jule::Ptr<_1d664721e_Data>*)>([=](jule::Ptr<_1d6648e13_Eval>* _128233_e, jule::Ptr<_1d650443e_FnCallExpr>* _128248_fc, jule::Ptr<_1d664721e_Data>* ) mutable -> jule::Ptr<_1d664721e_Data> {
					return _1d6565714__Field(_self_, _128233_e, _128248_fc);;
				}), });;
				return _1d656921d_buildAsComptimeMethodData(&(_128117_method));;
			}
		}
		else {
			_case_begin_1d980d7de:;
			{
				return nullptr;;
			}
		}
		_match_end_1d980d6ce:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1d6563514_comptimeValue _Src) {
	_Stream << _1d6563888_Str(&_Src);
	return _Stream;
}



inline jule::Str _1d65661d7_Str(_1d6565d63_comptimeFiles* _self_) {
	return jule::Str::lit("comptimeFiles", 13);;
}



inline jule::Bool _1d6566528_Equal(jule::Ptr<_1d6565d63_comptimeFiles> _self_, jule::Ptr<_1d6677a35_TypeKind> _130021_other) {
	return false;;
}



inline void _1d656699b_ready(_1d6565d63_comptimeFiles* _self_, jule::Ptr<_1d65d9018_Var>* _130429_keyA, jule::Ptr<_1d65d9018_Var>* _130446_keyB) {
	if (((*(_130429_keyA)) != nullptr)) {
		(*((*(_130429_keyA))))._field_Constant=true;
		(*((*(_130429_keyA))))._field_Value=jule::new_ptr<_1d6648363_Value>(_1d6648363_Value{._field_Data=jule::new_ptr<_1d664721e_Data>()});
		(*((*(_130429_keyA))))._field_Kind=(*(_1d675d4bc_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_130446_keyB)) != nullptr)) {
		(*((*(_130446_keyB))))._field_Constant=true;
		(*((*(_130446_keyB))))._field_Value=jule::new_ptr<_1d6648363_Value>(_1d6648363_Value{._field_Data=jule::new_ptr<_1d664721e_Data>()});
		(*((*(_130446_keyB))))._field_Kind=jule::new_ptr<_1d667ec07_TypeSymbol>(_1d667ec07_TypeSymbol{._field_Kind=jule::new_ptr<_1d6677a35_TypeKind>(_1d6677a35_TypeKind{._field_Kind=jule::Trait<_1d667757e_Kind>(jule::new_ptr<_1d656745d_comptimeFile>(), 18)})});
	};
}



inline void _1d6566db9_step(_1d6565d63_comptimeFiles* _self_, jule::I64 _132523_i, jule::Ptr<_1d65d9018_Var>* _132536_keyA, jule::Ptr<_1d65d9018_Var>* _132553_keyB) {
	if (((*(_132536_keyA)) != nullptr)) {
		(*((*((*((*(_132536_keyA))))._field_Value))._field_Data))._field_Constant=static__1d4321648_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_132523_i)));
		(*((*((*((*(_132536_keyA))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_132536_keyA))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	};
	if (((*(_132553_keyB)) != nullptr)) {
		(*((*((*((*((*(_132553_keyB))))._field_Kind))._field_Kind))._field_Kind.cast_ptr<_1d656745d_comptimeFile>(18)))._field_file=(*(_self_))._field_files[_132523_i];
	};
}



inline jule::I64 _1d6567150_len(_1d6565d63_comptimeFiles* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_files.len());;
}





std::ostream &operator<<(std::ostream &_Stream, _1d6565d63_comptimeFiles _Src) {
	_Stream << _1d65661d7_Str(&_Src);
	return _Stream;
}



inline jule::Str _1d6567903_Str(_1d656745d_comptimeFile* _self_) {
	return jule::Str::lit("comptimeFile", 12);;
}



inline jule::Bool _1d6567c44_Equal(jule::Ptr<_1d656745d_comptimeFile> _self_, jule::Ptr<_1d6677a35_TypeKind> _134921_other) {
	return false;;
}



inline jule::Ptr<_1d664721e_Data> _1d6568261__Path(jule::Ptr<_1d656745d_comptimeFile> _self_, jule::Ptr<_1d6648e13_Eval>* _135330_e, jule::Ptr<_1d650443e_FnCallExpr>* _135345_fc) {
	if (((*((*(_135345_fc))))._field_Args.len() > 0LL)) {
		_1d6649463_pushErr((*(_135330_e)).ptr(), (*((*((*(_135345_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Path", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1d4321208_Const> _135813_constant = static__1d4321e95_NewStr((*((*((*(_self_))._field_file))._field_File))._field_Path);;
	return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=_1d675a376_primStr, ._field_Model=jule::Any(_135813_constant, &__jule_any_type19), ._field_Constant=_135813_constant});;
}



inline jule::Ptr<_1d664721e_Data> _1d656865c__Name(jule::Ptr<_1d656745d_comptimeFile> _self_, jule::Ptr<_1d6648e13_Eval>* _136630_e, jule::Ptr<_1d650443e_FnCallExpr>* _136645_fc) {
	if (((*((*(_136645_fc))))._field_Args.len() > 0LL)) {
		_1d6649463_pushErr((*(_136630_e)).ptr(), (*((*((*(_136645_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1d4321208_Const> _137113_constant = static__1d4321e95_NewStr(_1d64dbea4_Name((*((*(_self_))._field_file))._field_File.ptr()));;
	return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=_1d675a376_primStr, ._field_Model=jule::Any(_137113_constant, &__jule_any_type19), ._field_Constant=_137113_constant});;
}



inline jule::Ptr<_1d664721e_Data> _1d6568a58__Dir(jule::Ptr<_1d656745d_comptimeFile> _self_, jule::Ptr<_1d6648e13_Eval>* _137929_e, jule::Ptr<_1d650443e_FnCallExpr>* _137944_fc) {
	if (((*((*(_137944_fc))))._field_Args.len() > 0LL)) {
		_1d6649463_pushErr((*(_137929_e)).ptr(), (*((*((*(_137944_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Dir", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1d4321208_Const> _138413_constant = static__1d4321e95_NewStr(_1d64dbc1d_Dir((*((*(_self_))._field_file))._field_File.ptr()));;
	return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=_1d675a376_primStr, ._field_Model=jule::Any(_138413_constant, &__jule_any_type19), ._field_Constant=_138413_constant});;
}



inline jule::Ptr<_1d664721e_Data> _1d6568d99_subIdent(jule::Ptr<_1d656745d_comptimeFile> _self_, jule::Str* _139229_ident) {
	{
		auto &_match_expr{ (*(_139229_ident)) };
		
		if (_match_expr == jule::Str::lit("Path", 4)) {
			_case_begin_1d982ad6c:;
			{
				jule::Ptr<_1d6535173_FnIns> _139517_method = jule::new_ptr<_1d6535173_FnIns>(_1d6535173_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d664721e_Data>(jule::Ptr<_1d6648e13_Eval>*,jule::Ptr<_1d650443e_FnCallExpr>*,jule::Ptr<_1d664721e_Data>*)>([=](jule::Ptr<_1d6648e13_Eval>* _139633_e, jule::Ptr<_1d650443e_FnCallExpr>* _139648_fc, jule::Ptr<_1d664721e_Data>* ) mutable -> jule::Ptr<_1d664721e_Data> {
					return _1d6568261__Path(_self_, _139633_e, _139648_fc);;
				}), });;
				return _1d656921d_buildAsComptimeMethodData(&(_139517_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1d982add3:;
			{
				jule::Ptr<_1d6535173_FnIns> _140217_method = jule::new_ptr<_1d6535173_FnIns>(_1d6535173_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d664721e_Data>(jule::Ptr<_1d6648e13_Eval>*,jule::Ptr<_1d650443e_FnCallExpr>*,jule::Ptr<_1d664721e_Data>*)>([=](jule::Ptr<_1d6648e13_Eval>* _140333_e, jule::Ptr<_1d650443e_FnCallExpr>* _140348_fc, jule::Ptr<_1d664721e_Data>* ) mutable -> jule::Ptr<_1d664721e_Data> {
					return _1d656865c__Name(_self_, _140333_e, _140348_fc);;
				}), });;
				return _1d656921d_buildAsComptimeMethodData(&(_140217_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Dir", 3)) {
			_case_begin_1d982ae49:;
			{
				jule::Ptr<_1d6535173_FnIns> _140917_method = jule::new_ptr<_1d6535173_FnIns>(_1d6535173_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d664721e_Data>(jule::Ptr<_1d6648e13_Eval>*,jule::Ptr<_1d650443e_FnCallExpr>*,jule::Ptr<_1d664721e_Data>*)>([=](jule::Ptr<_1d6648e13_Eval>* _141033_e, jule::Ptr<_1d650443e_FnCallExpr>* _141048_fc, jule::Ptr<_1d664721e_Data>* ) mutable -> jule::Ptr<_1d664721e_Data> {
					return _1d6568a58__Dir(_self_, _141033_e, _141048_fc);;
				}), });;
				return _1d656921d_buildAsComptimeMethodData(&(_140917_method));;
			}
		}
		else {
			_case_begin_1d982ad06:;
			{
				return nullptr;;
			}
		}
		_match_end_1d982a531:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1d656745d_comptimeFile _Src) {
	_Stream << _1d6567903_Str(&_Src);
	return _Stream;
}



inline jule::Fn<jule::Bool(jule::Ptr<_1d65b5c81_Sema>*,jule::Slice<jule::Ptr<_1d6676c43_TypeAlias>>*)> _1d656bc6a_readyFn(jule::Ptr<_1d656b86e_constraintChecker> _self_) {
	return jule::Fn<jule::Bool(jule::Ptr<_1d65b5c81_Sema>*,jule::Slice<jule::Ptr<_1d6676c43_TypeAlias>>*)>([=](jule::Ptr<_1d65b5c81_Sema>* _6421_sema, jule::Slice<jule::Ptr<_1d6676c43_TypeAlias>>* _6439_generics) mutable -> jule::Bool {
		{
			auto expr = &((*(_self_))._field_genericsD);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1d983cb3c:;
			if (it != expr_end) {
				jule::I64 _6518_i = it - expr->begin();
				jule::Ptr<_1d65085db_GenericDecl> _6525_g = *it;
				{
					jule::Ptr<_1d667614e_InsGeneric> _6621_generic = (*(_self_))._field_generics[_6518_i];;
					if ((((*(_6525_g))._field_Constraint == nullptr) || ((*((*(_6525_g))._field_Constraint))._field_Mask.len() == 0LL))) {
						goto _iter_next_1d983cb3c;
					};
					(*(_6621_generic))._field_Constraint=jule::Slice<jule::Ptr<_1d6677a35_TypeKind>>::alloc(0LL, (*((*(_6525_g))._field_Constraint))._field_Mask.len());
					{
						auto expr = &((*((*(_6525_g))._field_Constraint))._field_Mask);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1d98408cb:;
						if (it != expr_end) {
							jule::Ptr<_1d64eb3d1_TypeDecl> _7129_mask = *it;
							{
								jule::I64 _7221_n = (*((*(_6421_sema))))._field_errors.len();;
								jule::Ptr<_1d6677a35_TypeKind> _7325_kind = _1d65bd849_buildTypeWithRefers((*(_6421_sema)), &(_7129_mask), jule::Trait<_1d669756b_Lookup>((*(_6421_sema)), 3), (*(_6439_generics)), nullptr);;
								if ((_7325_kind == nullptr)) {
									{
										auto &_match_expr{ (*(_7129_mask))._field_Kind };
										
										if (_match_expr.type == &__jule_any_type20) {
											_case_begin_1d984267a:;
											{
												jule::Ptr<_1d64eb9db_IdentTypeDecl> _7733_itd = (*(_7129_mask))._field_Kind.cast_ptr<_1d64eb9db_IdentTypeDecl>(&__jule_any_type20);;
												if ((((*(_7733_itd))._field_Generics.len() == 0LL) && _1d656d2ee_isBuiltinConstraint(&((*(_7733_itd))._field_Ident)))) {
													_7325_kind=jule::new_ptr<_1d6677a35_TypeKind>(_1d6677a35_TypeKind{._field_Kind=jule::Trait<_1d667757e_Kind>(_1d6694953_buildPrimType((*(_7733_itd))._field_Ident), 20)});
													(*((*(_6421_sema))))._field_errors=(*((*(_6421_sema))))._field_errors.slice(0LL, _7221_n);
													goto _julec_label_1d984522c;
												};
											}
										}
										_match_end_1d9842614:;
									};
									return false;;
								};
								_julec_label_1d984522c:;
								{ jule::Slice<jule::Ptr<_1d6677a35_TypeKind>> &__jule_push_dest = (*(_6621_generic))._field_Constraint; __jule_push_dest.push(_7325_kind); };
							}
							_iter_next_1d98408cb:;
							++it;
							goto _iter_begin_1d98408cb;
						}
						_iter_end_1d98408cb:;
					};
				}
				_iter_next_1d983cb3c:;
				++it;
				_6518_i++;
				goto _iter_begin_1d983cb3c;
			}
			_iter_end_1d983cb3c:;
		};
		return true;;
	});;
}



inline jule::Bool _1d656c001_readyFi(jule::Ptr<_1d656b86e_constraintChecker> _self_) {
	(*(_self_))._field_genericsD=(*((*((*(_self_))._field_fi))._field_Decl))._field_Generics;
	(*(_self_))._field_generics=(*((*(_self_))._field_fi))._field_Generics;
	return ((!((*(_self_))._field_uniq)) || _1d65c4256_fnEnvironment((*(_self_))._field_s, &((*(_self_))._field_fi), _1d656bc6a_readyFn(_self_)));;
}



inline jule::Bool _1d656c287_readySi(jule::Ptr<_1d656b86e_constraintChecker> _self_) {
	(*(_self_))._field_genericsD=(*((*((*(_self_))._field_si))._field_Decl))._field_Generics;
	(*(_self_))._field_generics=(*((*(_self_))._field_si))._field_Generics;
	return ((!((*(_self_))._field_uniq)) || _1d656bc6a_readyFn(_self_)(&((*(_self_))._field_s), &((*(_self_))._field_genericsA)));;
}



inline jule::Bool _1d656c51d_ready(jule::Ptr<_1d656b86e_constraintChecker> _self_) {
	if (((*(_self_))._field_fi != nullptr)) {
		return _1d656c001_readyFi(_self_);;
	};
	return _1d656c287_readySi(_self_);;
}



inline jule::Bool _1d656c7a4_check(jule::Ptr<_1d656b86e_constraintChecker> _self_) {
	if ((!(_1d656c51d_ready(_self_)))) {
		return false;;
	};
	_julec_label_1d984b0ce:;
	{
		auto expr = &((*(_self_))._field_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d984b9d6:;
		if (it != expr_end) {
			jule::I64 _12014_i = it - expr->begin();
			jule::Ptr<_1d667614e_InsGeneric> _12021_g = *it;
			{
				if (((*(_12021_g))._field_Constraint == nullptr)) {
					goto _iter_next_1d984b9d6;
				};
				{
					auto expr = &((*(_12021_g))._field_Constraint);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d984cbc4:;
					if (it != expr_end) {
						jule::Ptr<_1d6677a35_TypeKind> _12425_c2 = *it;
						{
							jule::Ptr<_1d668060e_Prim> _12521_prim = _1d667a186_Prim(_12425_c2.ptr());;
							if (((_12521_prim != nullptr) && _1d6681236_IsConstraint(_12521_prim.ptr()))) {
								if (_1d656d035_matchConstraint(&((*(_12521_prim))._field_Kind), &((*(_12021_g))._field_Kind))) {
									goto _iter_next_1d984b9d6;
								};
								goto _iter_next_1d984cbc4;
							};
							if (_1d667823e_Equal(_12425_c2, (*(_12021_g))._field_Kind)) {
								goto _iter_next_1d984b9d6;
							};
						}
						_iter_next_1d984cbc4:;
						++it;
						goto _iter_begin_1d984cbc4;
					}
					_iter_end_1d984cbc4:;
				};
				_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_et, jule::Str::lit("type @ is not matched with @'s constraint\n       constraint: @", 62), jule::Slice<jule::Any>::make({jule::Any(_1d6677ded_Str((*(_12021_g))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*(_self_))._field_genericsD[_12014_i]))._field_Ident, &__jule_any_type4),jule::Any(_1d656cb6c_toStrConstraints(_12021_g), &__jule_any_type4)}));
				return false;;
			}
			_iter_next_1d984b9d6:;
			++it;
			_12014_i++;
			goto _iter_begin_1d984b9d6;
		}
		_iter_end_1d984b9d6:;
	};
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _1d656b86e_constraintChecker _Src) {
	_Stream << "constraintChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "genericsD:" << _Src._field_genericsD << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "genericsA:" << _Src._field_genericsA << ", ";
	_Stream << "fi:" << _Src._field_fi << ", ";
	_Stream << "si:" << _Src._field_si << ", ";
	_Stream << "et:" << _Src._field_et << ", ";
	_Stream << "uniq:" << _Src._field_uniq;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d656e08b_IsTraitImpl(_1d656dbc3_Impl* _self_) {
	return ((*(_self_))._field_Base != nullptr);;
}



inline jule::Bool _1d656e322_IsStructImpl(_1d656dbc3_Impl* _self_) {
	return ((*(_self_))._field_Base == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1d656dbc3_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d6574129_Scope _Src) {
	_Stream << "Scope{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d6574547_If _Src) {
	_Stream << "If{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d6574844_Else _Src) {
	_Stream << "Else{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d6574c62_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Elifs:" << _Src._field_Elifs << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d657505e_InfIter _Src) {
	_Stream << "InfIter{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d6575515_WhileIter _Src) {
	_Stream << "WhileIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d6575e61_RangeIter _Src) {
	_Stream << "RangeIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d65762e6_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "It:" << _Src._field_It;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d65766c0_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "It:" << _Src._field_It << ", ";
	_Stream << "Mtch:" << _Src._field_Mtch;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d65769bc_Label _Src) {
	_Stream << "Label{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d6576d96_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d6577270_Postfix _Src) {
	_Stream << "Postfix{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d6577726_Assign _Src) {
	_Stream << "Assign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d6577b00_MultiAssign _Src) {
	_Stream << "MultiAssign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d6578260_Match _Src) {
	_Stream << "Match{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Comptime:" << _Src._field_Comptime << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d6578d98_Case _Src) {
	_Stream << "Case{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs << ", ";
	_Stream << "Next:" << _Src._field_Next;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d6579492_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "DestCase:" << _Src._field_DestCase;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d6579827_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d6579e87_scopeLabel _Src) {
	_Stream << "scopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d657a51a_scopeGoto _Src) {
	_Stream << "scopeGoto{";
	_Stream << "st:" << _Src._field_st << ", ";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1d659590e_ImportInfo> _1d657b8c3_SelectPackage(_1d657b42d_scopeChecker* _self_, jule::Fn<jule::Bool(jule::Ptr<_1d659590e_ImportInfo>)> _45832_selector) {
	return _1d65b6226_SelectPackage((*(_self_))._field_s.ptr(), _45832_selector);;
}



inline jule::Ptr<_1d65d9018_Var> _1d657bcbe_FindVar(_1d657b42d_scopeChecker* _self_, jule::Str _46926_ident, jule::Bool _46938_binded) {
	;
	jule::Ptr<_1d65d9018_Var> _47213_v = _1d664453a_findVar((*(_self_))._field_table.ptr(), &(_46926_ident), _46938_binded, true);;
	if ((_47213_v != nullptr)) {
		return _47213_v;;
	};
	jule::Ptr<_1d657b42d_scopeChecker> _47713_parent = (*(_self_))._field_parent;;
	while ((_47713_parent != nullptr)) {
		{
			_47213_v=_1d664453a_findVar((*(_47713_parent))._field_table.ptr(), &(_46926_ident), _46938_binded, true);
			if ((_47213_v != nullptr)) {
				return _47213_v;;
			};
			_47713_parent=(*(_47713_parent))._field_parent;
		}
	_iter_next_1d988942a:;
	}
	_iter_end_1d988942a:;;
	return _1d65b6622_FindVar((*(_self_))._field_s.ptr(), _46926_ident, _46938_binded);;
}



inline jule::Ptr<_1d6676c43_TypeAlias> _1d657c1ba_FindTypeAlias(_1d657b42d_scopeChecker* _self_, jule::Str _49632_ident, jule::Bool _49644_binded) {
	;
	jule::Ptr<_1d6676c43_TypeAlias> _49913_ta = _1d66449e1_findTypeAlias((*(_self_))._field_table.ptr(), &(_49632_ident), _49644_binded, true);;
	if ((_49913_ta != nullptr)) {
		return _49913_ta;;
	};
	jule::Ptr<_1d657b42d_scopeChecker> _50413_parent = (*(_self_))._field_parent;;
	while ((_50413_parent != nullptr)) {
		{
			_49913_ta=_1d66449e1_findTypeAlias((*(_50413_parent))._field_table.ptr(), &(_49632_ident), _49644_binded, true);
			if ((_49913_ta != nullptr)) {
				return _49913_ta;;
			};
			_50413_parent=(*(_50413_parent))._field_parent;
		}
	_iter_next_1d988c43e:;
	}
	_iter_end_1d988c43e:;;
	return _1d65b6a1d_FindTypeAlias((*(_self_))._field_s.ptr(), _49632_ident, _49644_binded);;
}



inline jule::Ptr<_1d651c2d1_Struct> _1d657c5b6_FindStruct(_1d657b42d_scopeChecker* _self_, jule::Str _52129_ident, jule::Bool _52141_binded) {
	return _1d65b6e19_FindStruct((*(_self_))._field_s.ptr(), _52129_ident, _52141_binded);;
}



inline jule::Ptr<_1d653226e_Fn> _1d657c9b2_FindFn(_1d657b42d_scopeChecker* _self_, jule::Str _53025_ident, jule::Bool _53037_binded) {
	return _1d65b7315_FindFn((*(_self_))._field_s.ptr(), _53025_ident, _53037_binded);;
}



inline jule::Ptr<_1d654554b_Trait> _1d657cd03_FindTrait(_1d657b42d_scopeChecker* _self_, jule::Str _53928_ident) {
	return _1d65b7656_FindTrait((*(_self_))._field_s.ptr(), _53928_ident);;
}



inline jule::Ptr<_1d6547c57_Enum> _1d657d144_FindEnum(_1d657b42d_scopeChecker* _self_, jule::Str _54827_ident) {
	return _1d65b7997_FindEnum((*(_self_))._field_s.ptr(), _54827_ident);;
}



inline jule::Ptr<_1d6549462_TypeEnum> _1d657d485_FindTypeEnum(_1d657b42d_scopeChecker* _self_, jule::Str _55731_ident) {
	return _1d65b7cd8_FindTypeEnum((*(_self_))._field_s.ptr(), _55731_ident);;
}



inline jule::Bool _1d657d7d7_isUnsafe(jule::Ptr<_1d657b42d_scopeChecker> _self_) {
	jule::Ptr<_1d657b42d_scopeChecker> _56513_scope = _self_;;
	_julec_label_1d9892037:;
	if ((*((*(_56513_scope))._field_scope))._field_Unsafety) {
		return true;;
	};
	if (((*(_56513_scope))._field_parent != nullptr)) {
		_56513_scope=(*(_56513_scope))._field_parent;
		goto _julec_label_1d9892037;
	};
	return false;;
}



inline jule::Bool _1d657da6d_isRoot(_1d657b42d_scopeChecker* _self_) {
	return (((*(_self_))._field_parent == nullptr) || ((*(_self_))._field_owner != nullptr));;
}



inline void _1d657dc6b_stop(_1d657b42d_scopeChecker* _self_) {
	(*(_self_))._field_i=-1LL;
}



inline jule::Bool _1d657e002_stopped(_1d657b42d_scopeChecker* _self_) {
	return ((*(_self_))._field_i == -1LL);;
}



inline jule::Bool _1d657e288_isDeferred(jule::Ptr<_1d657b42d_scopeChecker> _self_) {
	jule::Ptr<_1d657b42d_scopeChecker> _59813_scope = _self_;;
	_julec_label_1d98953ae:;
	if ((*((*(_59813_scope))._field_scope))._field_Deferred) {
		return true;;
	};
	if (((*(_59813_scope))._field_parent != nullptr)) {
		_59813_scope=(*(_59813_scope))._field_parent;
		goto _julec_label_1d98953ae;
	};
	return false;;
}



inline jule::Ptr<_1d657b42d_scopeChecker> _1d657e51e_getRoot(jule::Ptr<_1d657b42d_scopeChecker> _self_) {
	jule::Ptr<_1d657b42d_scopeChecker> _61613_root = _self_;;
	while ((((*(_61613_root))._field_parent != nullptr) && ((*(_61613_root))._field_owner == nullptr))) {
		{
			_61613_root=(*(_61613_root))._field_parent;
		}
	_iter_next_1d989734a:;
	}
	_iter_end_1d989734a:;;
	return _61613_root;;
}



inline jule::Ptr<_1d657b42d_scopeChecker> _1d657e7a5_getHardRoot(jule::Ptr<_1d657b42d_scopeChecker> _self_) {
	jule::Ptr<_1d657b42d_scopeChecker> _62613_root = _self_;;
	while (((*(_62613_root))._field_parent != nullptr)) {
		{
			_62613_root=(*(_62613_root))._field_parent;
		}
	_iter_next_1d989869d:;
	}
	_iter_end_1d989869d:;;
	return _62613_root;;
}



inline jule::Ptr<_1d65769bc_Label> _1d657eae6_findLabel(_1d657b42d_scopeChecker* _self_, jule::Str* _63629_ident) {
	{
		auto expr = &((*((*(_self_))._field_scope))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d989987a:;
		if (it != expr_end) {
			jule::Any _63721_st = *it;
			{
				{
					auto &_match_expr{ _63721_st };
					
					if (_match_expr.type == &__jule_any_type21) {
						_case_begin_1d989a183:;
						{
							jule::Ptr<_1d65769bc_Label> _64021_label = _63721_st.cast_ptr<_1d65769bc_Label>(&__jule_any_type21);;
							if (((*(_64021_label))._field_Ident == (*(_63629_ident)))) {
								return _64021_label;;
							};
						}
					}
					_match_end_1d989a12d:;
				};
			}
			_iter_next_1d989987a:;
			++it;
			goto _iter_begin_1d989987a;
		}
		_iter_end_1d989987a:;
	};
	return nullptr;;
}



inline jule::Ptr<_1d6579e87_scopeLabel> _1d657ee37_findLabelScope(jule::Ptr<_1d657b42d_scopeChecker> _self_, jule::Str* _65235_ident) {
	jule::Ptr<_1d6579e87_scopeLabel> _65313_label = _1d6580278_findLabelAll(_self_.ptr(), _65235_ident);;
	if (((_65313_label != nullptr) && ((*(_65313_label))._field_scope == _self_))) {
		return _65313_label;;
	};
	return nullptr;;
}



inline jule::Ptr<_1d6579e87_scopeLabel> _1d6580278_findLabelAll(_1d657b42d_scopeChecker* _self_, jule::Str* _66432_ident) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d989c73a:;
		if (it != expr_end) {
			jule::Ptr<_1d6579e87_scopeLabel> _66521_lbl = *it;
			{
				if (((*((*(_66521_lbl))._field_label))._field_Ident == (*(_66432_ident)))) {
					return _66521_lbl;;
				};
			}
			_iter_next_1d989c73a:;
			++it;
			goto _iter_begin_1d989c73a;
		}
		_iter_end_1d989c73a:;
	};
	return nullptr;;
}



inline jule::Bool _1d6580674_isDuplicatedIdent(_1d657b42d_scopeChecker* _self_, jule::Uintptr _67636_itself, jule::Str* _67654_ident) {
	jule::Ptr<_1d65d9018_Var> _6779_v = _1d657bcbe_FindVar(_self_, (*(_67654_ident)), false);;
	if (((_6779_v != nullptr) && (static_cast<jule::Uintptr>(_6779_v) != _67636_itself))) {
		if (((*(_6779_v))._field_Scope == nullptr)) {
			return false;;
		};
		return (((*(_6779_v))._field_Scope == (*(_self_))._field_scope) || (!(_1d65b81e5_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))));;
	};
	jule::Ptr<_1d6676c43_TypeAlias> _6859_ta = _1d657c1ba_FindTypeAlias(_self_, (*(_67654_ident)), false);;
	if (((_6859_ta != nullptr) && (static_cast<jule::Uintptr>(_6859_ta) != _67636_itself))) {
		if (((*(_6859_ta))._field_Scope == nullptr)) {
			return false;;
		};
		return (((*(_6859_ta))._field_Scope == (*(_self_))._field_tree) || (!(_1d65b81e5_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))));;
	};
	return false;;
}



inline void _1d658092c_checkVarDecl(jule::Ptr<_1d657b42d_scopeChecker> _self_, jule::Ptr<_1d650e24b_VarDecl> _69636_decl) {
	jule::Ptr<_1d65d9018_Var> _69713_v = _1d653d7ca_buildVar(_69636_decl);;
	(*(_69713_v))._field_Scope=(*(_self_))._field_scope;
	__JULE_DEFER({
		{ jule::Slice<jule::Ptr<_1d65d9018_Var>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Vars; __jule_push_dest.push(_69713_v); };
		{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_69713_v, &__jule_any_type8)); };
	});;
	if (_1d6580674_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_69713_v)), &((*(_69713_v))._field_Ident))) {
		_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*(_69713_v))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_69713_v))._field_Ident, &__jule_any_type4)}));
		_1d65b8c2e_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_1d657dc6b_stop(_self_.ptr());
		return;;
	};
	_1d65cbe40_checkVarDecl((*(_self_))._field_s, &(_69713_v), jule::Trait<_1d669756b_Lookup>(_self_, 0));
	if (((!(_1d65d9634_IsTypeInferred(_69713_v.ptr()))) && (((*(_69713_v))._field_Kind == nullptr) || ((*((*(_69713_v))._field_Kind))._field_Kind == nullptr)))) {
		return;;
	};
	_1d65d06d5_evalVarValue((*(_self_))._field_s, &(_69713_v), jule::Trait<_1d669756b_Lookup>(_self_, 0));
	if (((!(_1d65d939d_IsInitialized(_69713_v.ptr()))) || ((*((*(_69713_v))._field_Value))._field_Data == nullptr))) {
		return;;
	};
	_1d6586b97_removeInteriorMutRisk(_self_, &((*((*(_69713_v))._field_Value))._field_Data));
	_1d65d0372_checkVarValue((*(_self_))._field_s, &(_69713_v));
}



inline void _1d6580bd5_checkTypeAlias(jule::Ptr<_1d657b42d_scopeChecker> _self_, jule::Ptr<_1d6676c43_TypeAlias>* _72739_ta) {
	if (_1d6580674_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_72739_ta)))), &((*((*(_72739_ta))))._field_Ident))) {
		_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*((*(_72739_ta))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_72739_ta))))._field_Ident, &__jule_any_type4)}));
		_1d65b8c2e_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_1d657dc6b_stop(_self_.ptr());
		return;;
	};
	_1d65c5ec2_checkTypeAliasDecl((*(_self_))._field_s, _72739_ta, jule::Trait<_1d669756b_Lookup>(_self_, 0));
	{ jule::Slice<jule::Ptr<_1d6676c43_TypeAlias>> &__jule_push_dest = (*((*(_self_))._field_table))._field_TypeAliases; __jule_push_dest.push((*(_72739_ta))); };
	if (((*((*((*(_72739_ta))))._field_Kind))._field_Kind == nullptr)) {
		_1d657dc6b_stop(_self_.ptr());
	};
}



inline void _1d6580e8d_checkTypeAliasDecl(jule::Ptr<_1d657b42d_scopeChecker> _self_, jule::Ptr<_1d6512ded_TypeAliasDecl> _74342_decl) {
	jule::Ptr<_1d6676c43_TypeAlias> _74413_ta = _1d653a299_buildTypeAlias(_74342_decl);;
	_1d6580bd5_checkTypeAlias(_self_, &(_74413_ta));
}



inline jule::Ptr<_1d6574129_Scope> _1d6581224_getChild(_1d657b42d_scopeChecker* _self_) {
	return jule::new_ptr<_1d6574129_Scope>(_1d6574129_Scope{._field_Parent=(*(_self_))._field_scope, });;
}



inline void _1d6581642_checkChildSsc(jule::Ptr<_1d657b42d_scopeChecker> _self_, jule::Ptr<_1d650b402_ScopeTree>* _75438_tree, jule::Ptr<_1d6574129_Scope>* _75461_s, jule::Ptr<_1d657b42d_scopeChecker>* _75477_ssc) {
	(*((*(_75477_ssc))))._field_parent=_self_;
	_1d658cb37_check((*(_75477_ssc)), _75438_tree, _75461_s);
}



inline jule::Ptr<_1d6574129_Scope> _1d6581a3d_checkChildSc(jule::Ptr<_1d657b42d_scopeChecker> _self_, jule::Ptr<_1d650b402_ScopeTree>* _75937_tree, jule::Ptr<_1d657b42d_scopeChecker>* _75960_ssc) {
	jule::Ptr<_1d6574129_Scope> _76013_s = _1d6581224_getChild(_self_.ptr());;
	_1d6581642_checkChildSsc(_self_, _75937_tree, &(_76013_s), _75960_ssc);
	return _76013_s;;
}



inline jule::Ptr<_1d6574129_Scope> _1d6581d7e_checkChild(jule::Ptr<_1d657b42d_scopeChecker> _self_, jule::Ptr<_1d650b402_ScopeTree>* _76535_tree) {
	jule::Ptr<_1d657b42d_scopeChecker> _76613_ssc = _1d658cdbd_newChildChecker(_self_);;
	return _1d6581a3d_checkChildSc(_self_, _76535_tree, &(_76613_ssc));;
}



inline void _1d6582137_checkAnonScope(jule::Ptr<_1d657b42d_scopeChecker> _self_, jule::Ptr<_1d650b402_ScopeTree> _77038_tree) {
	jule::Ptr<_1d6574129_Scope> _77113_s = _1d6581d7e_checkChild(_self_, &(_77038_tree));;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_77113_s, &__jule_any_type22)); };
}



inline void _1d658249a_processErrorCall(jule::Ptr<_1d657b42d_scopeChecker> _self_, jule::Ptr<_1d652cd19_BuiltinErrorCallExprModel>* _77541_m, jule::Ptr<_1d64d5cd3_Token> _77572_err) {
	if (_1d657e288_isDeferred(_self_)) {
		_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), _77572_err, jule::Str::lit("deferred scopes are not supports error calls", 44), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1d657b42d_scopeChecker> _78013_root = _1d657e51e_getRoot(_self_);;
	if ((!((*((*((*(_78013_root))._field_owner))._field_Decl))._field_Exceptional))) {
		_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), _77572_err, jule::Str::lit("error call can only useable for exceptional functions", 53), jule::Slice<jule::Any>());
		_1d65b8c2e_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("you can declare an exceptional function with \"!\" operator", 57), jule::Slice<jule::Any>());
	};
	(*((*(_77541_m))))._field_Func=(*(_78013_root))._field_owner;
}



inline void _1d6582753_checkExpr(jule::Ptr<_1d657b42d_scopeChecker> _self_, jule::Ptr<_1d6500715_Expr> _78833_expr) {
	jule::Ptr<_1d6648e13_Eval> _78913_eval = _1d65c0d68_eval((*(_self_))._field_s, jule::Trait<_1d669756b_Lookup>(_self_, 0));;
	(*(_78913_eval))._field_ignored=true;
	jule::Ptr<_1d664721e_Data> _79113_d = _1d6667173_evalExpr(_78913_eval, _78833_expr);;
	if (((_79113_d == nullptr) || ((*(_79113_d))._field_Model == nullptr))) {
		return;;
	};
	{
		auto &_match_expr{ (*(_79113_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1d98b9bdb:;
			{
				jule::Ptr<_1d652cd19_BuiltinErrorCallExprModel> _80017_m = (*(_79113_d))._field_Model.cast_ptr<_1d652cd19_BuiltinErrorCallExprModel>(&__jule_any_type23);;
				_1d658249a_processErrorCall(_self_, &(_80017_m), (*(_78833_expr))._field_Token);
				{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_79113_d, &__jule_any_type24)); };
			}
		}
		else if (_match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type28 || _match_expr.type == &__jule_any_type29 || _match_expr.type == &__jule_any_type30 || _match_expr.type == &__jule_any_type31 || _match_expr.type == &__jule_any_type32 || _match_expr.type == &__jule_any_type33 || _match_expr.type == &__jule_any_type34) {
			_case_begin_1d98ba37e:;
			{
				{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_79113_d, &__jule_any_type24)); };
			}
		}
		else {
			_case_begin_1d98ba318:;
			{
				_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*(_78833_expr))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1d98ba2b3:;
	};
}



inline jule::Ptr<_1d6574547_If> _1d6582a94_checkIf(jule::Ptr<_1d657b42d_scopeChecker> _self_, jule::Ptr<_1d6511d31_If> _81931_i) {
	jule::Ptr<_1d6574129_Scope> _82013_s = _1d6581d7e_checkChild(_self_, &((*(_81931_i))._field_Scope));;
	jule::Ptr<_1d664721e_Data> _82213_d = _1d6667173_evalExpr(_1d65c0d68_eval((*(_self_))._field_s, jule::Trait<_1d669756b_Lookup>(_self_, 0)), (*(_81931_i))._field_Expr);;
	if ((_82213_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1d668060e_Prim> _82713_prim = _1d667a186_Prim((*(_82213_d))._field_Kind.ptr());;
	if (((_82713_prim == nullptr) || (!(_1d6683810_IsBool(_82713_prim.ptr()))))) {
		_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*((*(_81931_i))._field_Expr))._field_Token, jule::Str::lit("if conditions must be have boolean expression", 45), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1d6574547_If>(_1d6574547_If{._field_Expr=(*(_82213_d))._field_Model, ._field_Scope=_82013_s});;
}



inline jule::Ptr<_1d6574844_Else> _1d6582dd5_checkElse(jule::Ptr<_1d657b42d_scopeChecker> _self_, jule::Ptr<_1d651220a_Else> _83933_e) {
	return jule::new_ptr<_1d6574844_Else>(_1d6574844_Else{._field_Scope=_1d6581d7e_checkChild(_self_, &((*(_83933_e))._field_Scope))});;
}



inline void _1d658318d_checkConditional(jule::Ptr<_1d657b42d_scopeChecker> _self_, jule::Ptr<_1d65126b1_Conditional> _84540_conditional) {
	jule::Ptr<_1d6574c62_Conditional> _84613_c = jule::new_ptr<_1d6574c62_Conditional>();;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_84613_c, &__jule_any_type35)); };
	(*(_84613_c))._field_Elifs=jule::Slice<jule::Ptr<_1d6574547_If>>::alloc(0LL, ((*(_84540_conditional))._field_Tail.len() + 1LL));
	{ jule::Slice<jule::Ptr<_1d6574547_If>> &__jule_push_dest = (*(_84613_c))._field_Elifs; __jule_push_dest.push(_1d6582a94_checkIf(_self_, (*(_84540_conditional))._field_Head)); };
	{
		auto expr = &((*(_84540_conditional))._field_Tail);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d98c6720:;
		if (it != expr_end) {
			jule::Ptr<_1d6511d31_If> _85221_elif = *it;
			{
				{ jule::Slice<jule::Ptr<_1d6574547_If>> &__jule_push_dest = (*(_84613_c))._field_Elifs; __jule_push_dest.push(_1d6582a94_checkIf(_self_, _85221_elif)); };
			}
			_iter_next_1d98c6720:;
			++it;
			goto _iter_begin_1d98c6720;
		}
		_iter_end_1d98c6720:;
	};
	if (((*(_84540_conditional))._field_Default != nullptr)) {
		(*(_84613_c))._field_Default=_1d6582dd5_checkElse(_self_, (*(_84540_conditional))._field_Default);
	};
}



inline void _1d6583666_checkIterScopeSsc(jule::Ptr<_1d657b42d_scopeChecker> _self_, jule::Uintptr _86137_it, jule::Ptr<_1d650b402_ScopeTree> _86154_tree, jule::Ptr<_1d6574129_Scope>* _86177_s, jule::Ptr<_1d657b42d_scopeChecker> _86192_ssc) {
	(*(_86192_ssc))._field_it=_86137_it;
	_1d6581642_checkChildSsc(_self_, &(_86154_tree), _86177_s, &(_86192_ssc));
}



inline jule::Ptr<_1d6574129_Scope> _1d6583b1c_checkIterScopeSc(jule::Ptr<_1d657b42d_scopeChecker> _self_, jule::Uintptr _86636_it, jule::Ptr<_1d650b402_ScopeTree> _86653_tree, jule::Ptr<_1d657b42d_scopeChecker> _86675_ssc) {
	jule::Ptr<_1d6574129_Scope> _86713_scope = _1d6581224_getChild(_self_.ptr());;
	_1d6583666_checkIterScopeSsc(_self_, _86636_it, _86653_tree, &(_86713_scope), _86675_ssc);
	return _86713_scope;;
}



inline jule::Ptr<_1d6574129_Scope> _1d6584018_checkIterScope(jule::Ptr<_1d657b42d_scopeChecker> _self_, jule::Uintptr _87234_it, jule::Ptr<_1d650b402_ScopeTree>* _87252_tree) {
	jule::Ptr<_1d657b42d_scopeChecker> _87313_ssc = _1d658cdbd_newChildChecker(_self_);;
	return _1d6583b1c_checkIterScopeSc(_self_, _87234_it, (*(_87252_tree)), _87313_ssc);;
}



inline void _1d65842c1_checkInfIter(jule::Ptr<_1d657b42d_scopeChecker> _self_, jule::Ptr<_1d650ed95_Iter>* _87737_it) {
	jule::Ptr<_1d657505e_InfIter> _87813_kind = jule::new_ptr<_1d657505e_InfIter>();;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_87813_kind, &__jule_any_type36)); };
	(*(_87813_kind))._field_Scope=_1d6584018_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_87813_kind)), &((*((*(_87737_it))))._field_Scope));
}



inline void _1d6584579_checkWhileIter(jule::Ptr<_1d657b42d_scopeChecker> _self_, jule::Ptr<_1d650ed95_Iter>* _88339_it) {
	jule::Ptr<_1d65106c0_WhileKind> _88413_wh = (*((*(_88339_it))))._field_Kind.cast_ptr<_1d65106c0_WhileKind>(&__jule_any_type37);;
	if ((((*(_88413_wh))._field_Expr == nullptr) && ((*(_88413_wh))._field_Next == nullptr))) {
		_1d65842c1_checkInfIter(_self_, _88339_it);
		return;;
	};
	jule::Ptr<_1d6575515_WhileIter> _89013_kind = jule::new_ptr<_1d6575515_WhileIter>();;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_89013_kind, &__jule_any_type38)); };
	(*(_89013_kind))._field_Scope=_1d6584018_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_89013_kind)), &((*((*(_88339_it))))._field_Scope));
	if (((*(_88413_wh))._field_Expr != nullptr)) {
		jule::Ptr<_1d664721e_Data> _89517_d = _1d6667173_evalExpr(_1d65c0d68_eval((*(_self_))._field_s, jule::Trait<_1d669756b_Lookup>(_self_, 0)), (*(_88413_wh))._field_Expr);;
		if ((_89517_d == nullptr)) {
			return;;
		};
		jule::Ptr<_1d668060e_Prim> _90013_prim = _1d667a186_Prim((*(_89517_d))._field_Kind.ptr());;
		if ((_90013_prim == nullptr)) {
			_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*((*(_88339_it))))._field_Token, jule::Str::lit("while iterations must be have boolean expression", 48), jule::Slice<jule::Any>());
			return;;
		};
		if ((!(_1d6683810_IsBool(_90013_prim.ptr())))) {
			_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*((*(_88339_it))))._field_Token, jule::Str::lit("while iterations must be have boolean expression", 48), jule::Slice<jule::Any>());
			return;;
		};
		(*(_89013_kind))._field_Expr=(*(_89517_d))._field_Model;
	};
	if (_1d6510a33_IsWhileNext(_88413_wh.ptr())) {
		if ((!(_1d6573634_isValidAstStForNextSt(&((*(_88413_wh))._field_Next))))) {
			_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*(_88413_wh))._field_NextToken, jule::Str::lit("invalid statement for while-next", 32), jule::Slice<jule::Any>());
			return;;
		};
		jule::I64 _92013_n = (*((*(_self_))._field_scope))._field_Stmts.len();;
		_1d658b76d_checkNode(_self_, &((*(_88413_wh))._field_Next));
		if ((_92013_n < (*((*(_self_))._field_scope))._field_Stmts.len())) {
			jule::Any _92321_st = (*((*(_self_))._field_scope))._field_Stmts[_92013_n];;
			(*((*(_self_))._field_scope))._field_Stmts=(*((*(_self_))._field_scope))._field_Stmts.slice(0LL, _92013_n);
			if ((!(_1d65738ed_isValidStForNextSt(&(_92321_st))))) {
				_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*(_88413_wh))._field_NextToken, jule::Str::lit("invalid statement for while-next", 32), jule::Slice<jule::Any>());
			};
			(*(_89013_kind))._field_Next=_92321_st;
		};
	};
}



inline void _1d6584997_checkComptimeRangeIter(jule::Ptr<_1d657b42d_scopeChecker> _self_, jule::Ptr<_1d650ed95_Iter>* _93347_it, jule::Ptr<_1d6575e61_RangeIter>* _93363_kind, jule::Ptr<_1d664721e_Data>* _93386_d) {
	if (((*((*(_93363_kind))))._field_KeyA != nullptr)) {
		if (((!(_1d65b81e5_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1d6580674_isDuplicatedIdent(_self_.ptr(), 0LLU, &((*((*((*(_93363_kind))))._field_KeyA))._field_Ident)))) {
			_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_93363_kind))))._field_KeyA))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_93363_kind))))._field_KeyA))._field_Ident, &__jule_any_type4)}));
			_1d65b8c2e_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
	};
	if (((*((*(_93363_kind))))._field_KeyB != nullptr)) {
		if (((!(_1d65b81e5_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1d6580674_isDuplicatedIdent(_self_.ptr(), 0LLU, &((*((*((*(_93363_kind))))._field_KeyB))._field_Ident)))) {
			_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_93363_kind))))._field_KeyB))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_93363_kind))))._field_KeyB))._field_Ident, &__jule_any_type4)}));
			_1d65b8c2e_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
	};
	jule::Ptr<_1d65110c7_RangeKind> _94713_rang = (*((*(_93347_it))))._field_Kind.cast_ptr<_1d65110c7_RangeKind>(&__jule_any_type39);;
	_1d658d473_makeComptimeRange(_93386_d);
	if ((*((*(_93386_d))))._field_Decl) {
		_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*((*(_94713_rang))._field_Expr))._field_Token, jule::Str::lit("type @ is not supports comptime iterations", 42), jule::Slice<jule::Any>::make({jule::Any(_1d6677ded_Str((*((*(_93386_d))))._field_Kind.ptr()), &__jule_any_type4)}));
		return;;
	};
	_1d663c346_rangeChecker _95413_rc = _1d663c346_rangeChecker{._field_sc=_self_, ._field_rang=_94713_rang, ._field_Kind=(*(_93363_kind)), ._field_d=(*(_93386_d))};;
	jule::Bool _9609_ok = _1d663e359_check(&_95413_rc);;
	if ((!(_9609_ok))) {
		return;;
	};
	jule::Ptr<_1d654c5b9_comptimeRange> _96513_comptime = _1d667d530_comptimeRange((*((*(_93386_d))))._field_Kind.ptr());;
	_1d654c399_comptimeRangeKind_mptr_data[((*(_96513_comptime))._field_kind).type_offset]._1d654ba91_ready((*(_96513_comptime))._field_kind, &((*((*(_93363_kind))))._field_KeyA), &((*((*(_93363_kind))))._field_KeyB));
	jule::I64 _96713_i = 0LL;;
	jule::I64 _9689_errors = (*((*(_self_))._field_s))._field_errors.len();;
	for (; (_96713_i < _1d654c399_comptimeRangeKind_mptr_data[((*(_96513_comptime))._field_kind).type_offset]._1d654c245_len((*(_96513_comptime))._field_kind)); (_96713_i)++) {
		{
			jule::Ptr<_1d657b42d_scopeChecker> _97017_ssc = _1d658cdbd_newChildChecker(_self_);;
			jule::Ptr<_1d6574129_Scope> _97117_scope = _1d6581224_getChild(_self_.ptr());;
			if (((*((*(_93363_kind))))._field_KeyA != nullptr)) {
				(*((*((*(_93363_kind))))._field_KeyA))._field_Scope=_97117_scope;
				{ jule::Slice<jule::Ptr<_1d65d9018_Var>> &__jule_push_dest = (*((*(_97017_ssc))._field_table))._field_Vars; __jule_push_dest.push((*((*(_93363_kind))))._field_KeyA); };
			};
			if (((*((*(_93363_kind))))._field_KeyB != nullptr)) {
				(*((*((*(_93363_kind))))._field_KeyB))._field_Scope=_97117_scope;
				{ jule::Slice<jule::Ptr<_1d65d9018_Var>> &__jule_push_dest = (*((*(_97017_ssc))._field_table))._field_Vars; __jule_push_dest.push((*((*(_93363_kind))))._field_KeyB); };
			};
			_1d654c399_comptimeRangeKind_mptr_data[((*(_96513_comptime))._field_kind).type_offset]._1d654beae_step((*(_96513_comptime))._field_kind, _96713_i, &((*((*(_93363_kind))))._field_KeyA), &((*((*(_93363_kind))))._field_KeyB));
			_1d6581642_checkChildSsc(_self_, &((*((*(_93347_it))))._field_Scope), &(_97117_scope), &(_97017_ssc));
			if ((_9689_errors != (*((*(_self_))._field_s))._field_errors.len())) {
				goto _iter_end_1d98e6e8d;
			};
			{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_97117_scope, &__jule_any_type22)); };
		}
	_iter_next_1d98e6e8d:;
	}
	_iter_end_1d98e6e8d:;;
}



inline void _1d6584c50_checkRangeIter(jule::Ptr<_1d657b42d_scopeChecker> _self_, jule::Ptr<_1d650ed95_Iter>* _99039_it) {
	jule::Ptr<_1d65110c7_RangeKind> _99113_rang = (*((*(_99039_it))))._field_Kind.cast_ptr<_1d65110c7_RangeKind>(&__jule_any_type39);;
	jule::Ptr<_1d664721e_Data> _99313_d = _1d6666d32_evalExpr1(_1d65c0d68_eval((*(_self_))._field_s, jule::Trait<_1d669756b_Lookup>(_self_, 0)), (*(_99113_rang))._field_Expr);;
	if ((_99313_d == nullptr)) {
		return;;
	};
	jule::Ptr<_1d6575e61_RangeIter> _99813_kind = jule::new_ptr<_1d6575e61_RangeIter>(_1d6575e61_RangeIter{._field_Expr=_99313_d, });;
	if ((*((*(_99039_it))))._field_Comptime) {
		_1d6584997_checkComptimeRangeIter(_self_, _99039_it, &(_99813_kind), &(_99313_d));
		return;;
	};
	if (_1d667c243_comptime((*(_99313_d))._field_Kind.ptr())) {
		_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*((*(_99113_rang))._field_Expr))._field_Token, jule::Str::lit("comptime expressions cannot be iterated at runtime", 50), jule::Slice<jule::Any>());
		_1d65b8c2e_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("declarate comptime iteration like: const for ...", 48), jule::Slice<jule::Any>());
		return;;
	};
	_1d663c346_rangeChecker _101213_rc = _1d663c346_rangeChecker{._field_sc=_self_, ._field_rang=_99113_rang, ._field_Kind=_99813_kind, ._field_d=_99313_d};;
	jule::Bool _10189_ok = _1d663e359_check(&_101213_rc);;
	if ((!(_10189_ok))) {
		return;;
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_99813_kind, &__jule_any_type40)); };
	jule::Ptr<_1d657b42d_scopeChecker> _102513_ssc = _1d658cdbd_newChildChecker(_self_);;
	jule::Ptr<_1d6574129_Scope> _102613_scope = _1d6581224_getChild(_self_.ptr());;
	if (((*(_99813_kind))._field_KeyA != nullptr)) {
		if (((!(_1d65b81e5_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1d6580674_isDuplicatedIdent(_self_.ptr(), 0LLU, &((*((*(_99813_kind))._field_KeyA))._field_Ident)))) {
			_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*((*(_99813_kind))._field_KeyA))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_99813_kind))._field_KeyA))._field_Ident, &__jule_any_type4)}));
			_1d65b8c2e_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
		(*((*(_99813_kind))._field_KeyA))._field_Scope=_102613_scope;
		{ jule::Slice<jule::Ptr<_1d65d9018_Var>> &__jule_push_dest = (*((*(_102513_ssc))._field_table))._field_Vars; __jule_push_dest.push((*(_99813_kind))._field_KeyA); };
	};
	if (((*(_99813_kind))._field_KeyB != nullptr)) {
		if (((!(_1d65b81e5_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1d6580674_isDuplicatedIdent(_self_.ptr(), 0LLU, &((*((*(_99813_kind))._field_KeyB))._field_Ident)))) {
			_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*((*(_99813_kind))._field_KeyB))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_99813_kind))._field_KeyB))._field_Ident, &__jule_any_type4)}));
			_1d65b8c2e_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
		(*((*(_99813_kind))._field_KeyB))._field_Scope=_102613_scope;
		{ jule::Slice<jule::Ptr<_1d65d9018_Var>> &__jule_push_dest = (*((*(_102513_ssc))._field_table))._field_Vars; __jule_push_dest.push((*(_99813_kind))._field_KeyB); };
	};
	_1d6583666_checkIterScopeSsc(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_99813_kind)), (*((*(_99039_it))))._field_Scope, &(_102613_scope), _102513_ssc);
	(*(_99813_kind))._field_Scope=_102613_scope;
}



inline void _1d6585008_checkIter(jule::Ptr<_1d657b42d_scopeChecker> _self_, jule::Ptr<_1d650ed95_Iter> _105033_it) {
	if (_1d6510208_IsInf(_105033_it.ptr())) {
		if ((*(_105033_it))._field_Comptime) {
			_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*(_105033_it))._field_Token, jule::Str::lit("comptime iterations can only be range iteration", 47), jule::Slice<jule::Any>());
			return;;
		};
		_1d65842c1_checkInfIter(_self_, &(_105033_it));
		return;;
	};
	{
		auto &_match_expr{ (*(_105033_it))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1d990e978:;
			{
				if ((*(_105033_it))._field_Comptime) {
					_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*(_105033_it))._field_Token, jule::Str::lit("comptime iterations can only be range iteration", 47), jule::Slice<jule::Any>());
					return;;
				};
				_1d6584579_checkWhileIter(_self_, &(_105033_it));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1d9911040:;
			{
				_1d6584c50_checkRangeIter(_self_, &(_105033_it));
			}
		}
		else {
			_case_begin_1d9910a56:;
			{
				jule::outln(jule::Str::lit("error <unimplemented iteration kind>", 36));
			}
		}
		_match_end_1d9910a01:;
	};
}



inline jule::Bool _1d6585349_checkValidContLabel(jule::Ptr<_1d657b42d_scopeChecker> _self_, jule::Uintptr _107439_it) {
	jule::Ptr<_1d657b42d_scopeChecker> _107513_scope = _self_;;
	_julec_label_1d99131eb:;
	if (((*(_107513_scope))._field_it == _107439_it)) {
		return true;;
	};
	if (((*(_107513_scope))._field_parent != nullptr)) {
		_107513_scope=(*(_107513_scope))._field_parent;
		goto _julec_label_1d99131eb;
	};
	return false;;
}



inline jule::Bool _1d658568a_checkValidBreakLabel(jule::Ptr<_1d657b42d_scopeChecker> _self_, jule::Uintptr _109040_ptr) {
	jule::Ptr<_1d657b42d_scopeChecker> _109113_scope = _self_;;
	_julec_label_1d99152a8:;
	if (((*(_109113_scope))._field_it == _109040_ptr)) {
		return true;;
	};
	if (((*(_109113_scope))._field_cse != 0LLU)) {
		jule::Uintptr _109913_mtch = static_cast<jule::Uintptr>((*(((_1d6578d98_Case*)((*(_109113_scope))._field_cse))))._field_Owner);;
		if ((_109913_mtch == _109040_ptr)) {
			return true;;
		};
	};
	if (((*(_109113_scope))._field_parent != nullptr)) {
		_109113_scope=(*(_109113_scope))._field_parent;
		goto _julec_label_1d99152a8;
	};
	return false;;
}



inline jule::Ptr<_1d65762e6_ContSt> _1d65859cb_checkContValidScope(jule::Ptr<_1d657b42d_scopeChecker> _self_, jule::Ptr<_1d651187a_ContSt> _111339_c) {
	if (_1d657e288_isDeferred(_self_)) {
		_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*(_111339_c))._field_Token, jule::Str::lit("continue keyword is cannot used at out of iteration", 51), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_111339_c))._field_Label != nullptr)) {
		return jule::new_ptr<_1d65762e6_ContSt>();;
	};
	jule::Ptr<_1d657b42d_scopeChecker> _112313_scope = _self_;;
	_julec_label_1d9917eae:;
	{
		
		if (((((*(_112313_scope))._field_it == 0LLU) && ((*(_112313_scope))._field_parent != nullptr)) && ((*(_112313_scope))._field_owner == nullptr))) {
			_case_begin_1d9919cb3:;
			{
				_112313_scope=(*(_112313_scope))._field_parent;
				goto _julec_label_1d9917eae;
			}
		}
		else if (((*(_112313_scope))._field_it != 0LLU)) {
			_case_begin_1d9919d3a:;
			{
				return jule::new_ptr<_1d65762e6_ContSt>(_1d65762e6_ContSt{._field_It=(*(_112313_scope))._field_it});;
			}
		}
		_match_end_1d9919c08:;
	};
	_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*(_111339_c))._field_Token, jule::Str::lit("continue keyword is cannot used at out of iteration", 51), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1d6585c84_checkCont(jule::Ptr<_1d657b42d_scopeChecker> _self_, jule::Ptr<_1d651187a_ContSt> _113729_c) {
	jule::Ptr<_1d65762e6_ContSt> _113813_cont = _1d65859cb_checkContValidScope(_self_, _113729_c);;
	if ((_113813_cont == nullptr)) {
		return;;
	};
	if (((*(_113729_c))._field_Label != nullptr)) {
		jule::Ptr<_1d6579e87_scopeLabel> _114417_label = _1d6571643_findLabelParent(&((*((*(_113729_c))._field_Label))._field_Kind), (*(_self_))._field_parent);;
		if ((_114417_label == nullptr)) {
			_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*(_113729_c))._field_Label, jule::Str::lit("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any((*((*(_113729_c))._field_Label))._field_Kind, &__jule_any_type4)}));
			return;;
		};
		(*(_114417_label))._field_used=true;
		if ((((*(_114417_label))._field_pos + 1LL) >= (*((*((*(_114417_label))._field_scope))._field_scope))._field_Stmts.len())) {
			_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*(_113729_c))._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_113729_c))._field_Label))._field_Kind, &__jule_any_type4)}));
			return;;
		};
		jule::I64 _115713_i = ((*(_114417_label))._field_pos + 1LL);;
		if ((_115713_i >= (*((*((*(_114417_label))._field_scope))._field_scope))._field_Stmts.len())) {
			_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*(_113729_c))._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>());
		} else {
			jule::Any _116121_st = (*((*((*(_114417_label))._field_scope))._field_scope))._field_Stmts[_115713_i];;
			{
				auto &_match_expr{ _116121_st };
				
				if (_match_expr.type == &__jule_any_type36) {
					_case_begin_1d992542d:;
					{
						(*(_113813_cont))._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_116121_st.cast_ptr<_1d657505e_InfIter>(&__jule_any_type36)));
					}
				}
				else if (_match_expr.type == &__jule_any_type40) {
					_case_begin_1d992563c:;
					{
						(*(_113813_cont))._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_116121_st.cast_ptr<_1d6575e61_RangeIter>(&__jule_any_type40)));
					}
				}
				else if (_match_expr.type == &__jule_any_type38) {
					_case_begin_1d99256a3:;
					{
						(*(_113813_cont))._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_116121_st.cast_ptr<_1d6575515_WhileIter>(&__jule_any_type38)));
					}
				}
				else {
					_case_begin_1d99255c6:;
					{
						_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*(_113729_c))._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_113729_c))._field_Label))._field_Kind, &__jule_any_type4)}));
					}
				}
				_match_end_1d9925571:;
			};
		};
	};
	if (((*(_113813_cont))._field_It != 0LLU)) {
		if ((!(_1d6585349_checkValidContLabel(_self_, (*(_113813_cont))._field_It)))) {
			_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*(_113729_c))._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_113729_c))._field_Label))._field_Kind, &__jule_any_type4)}));
		};
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_113813_cont, &__jule_any_type41)); };
}



inline void _1d658603c_checkLabel(jule::Ptr<_1d657b42d_scopeChecker> _self_, jule::Ptr<_1d65089b5_LabelSt> _118434_l) {
	if ((_1d657eae6_findLabel(_self_.ptr(), &((*(_118434_l))._field_Ident)) != nullptr)) {
		_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*(_118434_l))._field_Token, jule::Str::lit("label is already exist in this identifier: @", 44), jule::Slice<jule::Any>::make({jule::Any((*(_118434_l))._field_Ident, &__jule_any_type4)}));
		return;;
	};
	jule::Ptr<_1d65769bc_Label> _119013_label = jule::new_ptr<_1d65769bc_Label>(_1d65769bc_Label{._field_Ident=(*(_118434_l))._field_Ident});;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_119013_label, &__jule_any_type21)); };
	{ jule::Slice<jule::Ptr<_1d6579e87_scopeLabel>> &__jule_push_dest = (*((*(_self_))._field_labels)); __jule_push_dest.push(jule::new_ptr<_1d6579e87_scopeLabel>(_1d6579e87_scopeLabel{._field_token=(*(_118434_l))._field_Token, ._field_label=_119013_label, ._field_pos=static_cast<jule::I64>(((*((*(_self_))._field_scope))._field_Stmts.len() - 1LL)), ._field_scope=_self_, })); };
}



inline void _1d65862e5_pushGoto(jule::Ptr<_1d657b42d_scopeChecker> _self_, jule::Ptr<_1d6508d8e_GotoSt> _120332_gt) {
	jule::Ptr<_1d6576d96_GotoSt> _120413_st = jule::new_ptr<_1d6576d96_GotoSt>(_1d6576d96_GotoSt{._field_Ident=(*((*(_120332_gt))._field_Label))._field_Kind, });;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_120413_st, &__jule_any_type42)); };
	{ jule::Slice<jule::Ptr<_1d657a51a_scopeGoto>> &__jule_push_dest = (*((*(_self_))._field_gotos)); __jule_push_dest.push(jule::new_ptr<_1d657a51a_scopeGoto>(_1d657a51a_scopeGoto{._field_st=_120413_st, ._field_gt=_120332_gt, ._field_scope=_self_, ._field_pos=static_cast<jule::I64>(((*((*(_self_))._field_scope))._field_Stmts.len() - 1LL))})); };
}



inline void _1d658659d_checkPostfix(jule::Ptr<_1d657b42d_scopeChecker> _self_, jule::Ptr<_1d6509d7e_AssignSt> _121736_a) {
	if (((*(_121736_a))._field_Left.len() > 1LL)) {
		_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*(_121736_a))._field_Setter, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1d6500715_Expr> _122313_expr = (*((*(_121736_a))._field_Left[0LL]))._field_Expr;;
	jule::Ptr<_1d664721e_Data> _122413_d = _1d6667173_evalExpr(_1d65c0d68_eval((*(_self_))._field_s, jule::Trait<_1d669756b_Lookup>(_self_, 0)), _122313_expr);;
	if ((_122413_d == nullptr)) {
		return;;
	};
	_1d657336a_checkAssign(&((*(_self_))._field_s), &(_122413_d), nullptr, (*(_121736_a))._field_Setter);
	if ((_1d667a6a3_Ptr((*(_122413_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1d6687902_Ptr> _123217_ptr = _1d667a6a3_Ptr((*(_122413_d))._field_Kind.ptr());;
		if (_1d668843b_IsUnsafe(_123217_ptr.ptr())) {
			_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*(_121736_a))._field_Setter, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_121736_a))._field_Setter))._field_Kind, &__jule_any_type4),jule::Any(_1d6677ded_Str((*(_122413_d))._field_Kind.ptr()), &__jule_any_type4)}));
			return;;
		};
	} else {
		if (((_1d667a186_Prim((*(_122413_d))._field_Kind.ptr()) == nullptr) || (!(_1d4320c30_IsNum((*(_1d667a186_Prim((*(_122413_d))._field_Kind.ptr())))._field_Kind))))) {
			_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*(_121736_a))._field_Setter, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_121736_a))._field_Setter))._field_Kind, &__jule_any_type4),jule::Any(_1d6677ded_Str((*(_122413_d))._field_Kind.ptr()), &__jule_any_type4)}));
			return;;
		};
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(jule::new_ptr<_1d6577270_Postfix>(_1d6577270_Postfix{._field_Expr=(*(_122413_d))._field_Model, ._field_Op=(*((*(_121736_a))._field_Setter))._field_Kind}), &__jule_any_type43)); };
}



inline jule::Bool _1d65868de_isNewAssignIdent(_1d657b42d_scopeChecker* _self_, jule::Str _125035_ident) {
	if ((_1d64d8742_IsIgnoreIdent(_125035_ident) || (_125035_ident).empty())) {
		return false;;
	};
	return (_1d6644ddc_defByIdent((*(_self_))._field_table.ptr(), &(_125035_ident), false) == nullptr);;
}



inline void _1d6586b97_removeInteriorMutRisk(jule::Ptr<_1d657b42d_scopeChecker> _self_, jule::Ptr<_1d664721e_Data>* _126346_d) {
	jule::Ptr<_1d652005e_StructIns> _12649_s = _1d667b709_Struct((*((*(_126346_d))))._field_Kind.ptr());;
	if ((_12649_s == nullptr)) {
		return;;
	};
	jule::Ptr<_1d657b42d_scopeChecker> _12689_root = _1d657e7a5_getHardRoot(_self_);;
	if (((*((*(_12689_root))._field_owner))._field_Owner != _12649_s)) {
		return;;
	};
	(*((*(_126346_d))))._field_Mutable=true;
}



inline jule::Bool _1d658714d_checkStructureAssignOp(jule::Ptr<_1d657b42d_scopeChecker> _self_, jule::Ptr<_1d652005e_StructIns>* _127747_s, jule::Ptr<_1d6509d7e_AssignSt>* _127767_a, jule::Ptr<_1d664721e_Data>* _127786_r) {
	jule::Ptr<_1d6535173_FnIns> _128017_overload = nullptr;;
	{
		auto &_match_expr{ (*((*((*(_127767_a))))._field_Setter))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1d9940adb:;
			{
				_128017_overload=(*((*(_127747_s))))._field_Operators._field_AddAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(41LLU)) {
			_case_begin_1d9941218:;
			{
				_128017_overload=(*((*(_127747_s))))._field_Operators._field_SubAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1d994127e:;
			{
				_128017_overload=(*((*(_127747_s))))._field_Operators._field_DivAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(42LLU)) {
			_case_begin_1d99412e5:;
			{
				_128017_overload=(*((*(_127747_s))))._field_Operators._field_MulAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1d994135b:;
			{
				_128017_overload=(*((*(_127747_s))))._field_Operators._field_ModAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(45LLU)) {
			_case_begin_1d9942912:;
			{
				_128017_overload=(*((*(_127747_s))))._field_Operators._field_ShlAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(46LLU)) {
			_case_begin_1d9942978:;
			{
				_128017_overload=(*((*(_127747_s))))._field_Operators._field_ShrAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(49LLU)) {
			_case_begin_1d99429de:;
			{
				_128017_overload=(*((*(_127747_s))))._field_Operators._field_BitOrAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(48LLU)) {
			_case_begin_1d9942a55:;
			{
				_128017_overload=(*((*(_127747_s))))._field_Operators._field_BitAndAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(47LLU)) {
			_case_begin_1d9942abb:;
			{
				_128017_overload=(*((*(_127747_s))))._field_Operators._field_BitXorAssign;
			}
		}
		else {
			_case_begin_1d99411a2:;
			{
				_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*((*(_127767_a))))._field_Setter, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_127767_a))))._field_Setter))._field_Kind, &__jule_any_type4),jule::Any(_1d65203d3_Str((*(_127747_s)).ptr()), &__jule_any_type4)}));
				return false;;
			}
		}
		_match_end_1d994114c:;
	};
	if ((_128017_overload == nullptr)) {
		_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*((*(_127767_a))))._field_Setter, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_127767_a))))._field_Setter))._field_Kind, &__jule_any_type4),jule::Any(_1d65203d3_Str((*(_127747_s)).ptr()), &__jule_any_type4)}));
		return false;;
	};
	jule::Ptr<_1d65341c7_ParamIns> _131213_p = (*(_128017_overload))._field_Params[1LL];;
	return _1d65c13c9_checkAssignType((*(_self_))._field_s, (*((*(_131213_p))._field_Decl))._field_Reference, &((*(_131213_p))._field_Kind), _127786_r, (*((*(_127767_a))))._field_Setter);;
}



inline void _1d6587406_checkSingleAssign(jule::Ptr<_1d657b42d_scopeChecker> _self_, jule::Ptr<_1d6509d7e_AssignSt>* _131642_a) {
	jule::Ptr<_1d664721e_Data> _131717_l = nullptr;;
	if ((!(_1d64d8742_IsIgnoreIdent((*((*((*(_131642_a))))._field_Left[0LL]))._field_Ident)))) {
		jule::Ptr<_1d6500715_Expr> _132017_expr = (*((*((*(_131642_a))))._field_Left[0LL]))._field_Expr;;
		_131717_l=_1d6667173_evalExpr(_1d65c0d68_eval((*(_self_))._field_s, jule::Trait<_1d669756b_Lookup>(_self_, 0)), _132017_expr);
		if ((_131717_l == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1d6648e13_Eval> _132717_eval = nullptr;;
	if ((_131717_l != nullptr)) {
		_132717_eval=_1d65c0a27_evalp((*(_self_))._field_s, jule::Trait<_1d669756b_Lookup>(_self_, 0), (*(_131717_l))._field_Kind);
	} else {
		_132717_eval=_1d65c0d68_eval((*(_self_))._field_s, jule::Trait<_1d669756b_Lookup>(_self_, 0));
	};
	(*(_132717_eval))._field_unsafety=_1d657d7d7_isUnsafe(_self_);
	jule::Ptr<_1d664721e_Data> _133413_r = _1d6667173_evalExpr(_132717_eval, (*((*(_131642_a))))._field_Right);;
	if ((_133413_r == nullptr)) {
		return;;
	};
	_1d6586b97_removeInteriorMutRisk(_self_, &(_133413_r));
	if ((_131717_l == nullptr)) {
		if (_1d6678d99_Void((*(_133413_r))._field_Kind.ptr())) {
			_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_131642_a))))._field_Right))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		};
		{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_133413_r, &__jule_any_type24)); };
		return;;
	};
	if ((!(_1d657336a_checkAssign(&((*(_self_))._field_s), &(_131717_l), _133413_r, (*((*(_131642_a))))._field_Setter)))) {
		return;;
	};
	if ((_1d667beac_Tup((*(_133413_r))._field_Kind.ptr()) != nullptr)) {
		_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*((*(_131642_a))))._field_Setter, jule::Str::lit("missing identifier(s) for multiple assignment", 45), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1d652400d_OperandExprModel> _135813_lm = jule::new_ptr<_1d652400d_OperandExprModel>(_1d652400d_OperandExprModel{._field_Kind=(*(_131717_l))._field_Kind, ._field_Model=(*(_131717_l))._field_Model});;
	jule::Ptr<_1d652400d_OperandExprModel> _136213_rm = jule::new_ptr<_1d652400d_OperandExprModel>(_1d652400d_OperandExprModel{._field_Kind=(*(_133413_r))._field_Kind, ._field_Model=(*(_133413_r))._field_Model});;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(jule::new_ptr<_1d6577726_Assign>(_1d6577726_Assign{._field_L=_135813_lm, ._field_R=_136213_rm, ._field_Op=(*((*(_131642_a))))._field_Setter}), &__jule_any_type44)); };
	if (((*((*((*(_131642_a))))._field_Setter))._field_Id == static_cast<jule::U64>(71LLU))) {
		_1d6630dea_assignTypeChecker _136917_checker = _1d6630dea_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*(_131717_l))._field_Kind, ._field_d=_133413_r, ._field_errorToken=(*((*(_131642_a))))._field_Setter};;
		if (_1d6631db8_check(&_136917_checker)) {
			(*(_136213_rm))._field_Model=(*(_133413_r))._field_Model;
			(*(_135813_lm))._field_Model=(*(_131717_l))._field_Model;
		};
		return;;
	};
	jule::Ptr<_1d652005e_StructIns> _138113_strct = _1d667b709_Struct((*(_131717_l))._field_Kind.ptr());;
	if ((_138113_strct != nullptr)) {
		_1d658714d_checkStructureAssignOp(_self_, &(_138113_strct), _131642_a, &(_133413_r));
		return;;
	};
	jule::U64 _13869_id = (*((*((*(_131642_a))))._field_Setter))._field_Id;;
	(*((*((*(_131642_a))))._field_Setter))._field_Id=_1d658d242_removeEqFromOp((*((*((*(_131642_a))))._field_Setter))._field_Id);
	_1d66695c6_binaryEval _138813_solver = static__1d666a000_new(_132717_eval, (*((*(_131642_a))))._field_Setter);;
	({
		jule::Ptr<_1d664721e_Data> ___jule_assign_arg = _131717_l;
		jule::Ptr<_1d664721e_Data> _1___jule_assign_arg = _133413_r;
		_138813_solver._field_l = ___jule_assign_arg;
		_138813_solver._field_r = _1___jule_assign_arg;
	});
	_1d666e147_evalOp(&_138813_solver);
	(*((*((*(_131642_a))))._field_Setter))._field_Id=_13869_id;
}



inline void _1d6587989_processEndPartOfMultiAssign(_1d657b42d_scopeChecker* _self_, jule::Ptr<_1d6577b00_MultiAssign>* _139451_st, jule::Ptr<_1d6509d7e_AssignSt>* _139514_a, jule::Ptr<_1d65097eb_AssignLeft>* _139533_lexpr, jule::Ptr<_1d664721e_Data>* _139558_l, jule::Ptr<_1d664721e_Data>* _139573_r) {
	if (((!((*((*(_139533_lexpr))))._field_Reference)) && _1d64d8742_IsIgnoreIdent((*((*(_139533_lexpr))))._field_Ident))) {
		if (_1d6678d99_Void((*((*(_139573_r))))._field_Kind.ptr())) {
			_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_139514_a))))._field_Right))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		};
		{ jule::Slice<jule::Ptr<_1d664721e_Data>> &__jule_push_dest = (*((*(_139451_st))))._field_L; __jule_push_dest.push(nullptr); };
		return;;
	};
	if (((*((*(_139514_a))))._field_Declarative && ((*((*(_139533_lexpr))))._field_Reference || _1d65868de_isNewAssignIdent(_self_, (*((*(_139533_lexpr))))._field_Ident)))) {
		if (_1d6580674_isDuplicatedIdent(_self_, 0LLU, &((*((*(_139533_lexpr))))._field_Ident))) {
			_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*((*(_139533_lexpr))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_139533_lexpr))))._field_Ident, &__jule_any_type4)}));
			_1d65b8c2e_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
			_1d657dc6b_stop(_self_);
			return;;
		};
		if (_1d64d8742_IsIgnoreIdent((*((*(_139533_lexpr))))._field_Ident)) {
			_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*((*(_139533_lexpr))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1d65d9018_Var> _141617_v = jule::new_ptr<_1d65d9018_Var>(_1d65d9018_Var{._field_Scope=(*(_self_))._field_scope, ._field_Token=(*((*(_139533_lexpr))))._field_Token, ._field_Ident=(*((*(_139533_lexpr))))._field_Ident, ._field_Mutable=(*((*(_139533_lexpr))))._field_Mutable, ._field_Reference=(*((*(_139533_lexpr))))._field_Reference, ._field_Value=jule::new_ptr<_1d6648363_Value>(_1d6648363_Value{._field_Expr=(*((*(_139514_a))))._field_Right, ._field_Data=(*(_139573_r))}), });;
		_1d65d0372_checkVarValue((*(_self_))._field_s, &(_141617_v));
		(*(_141617_v))._field_Value=nullptr;
		{ jule::Slice<jule::Ptr<_1d664721e_Data>> &__jule_push_dest = (*((*(_139451_st))))._field_L; __jule_push_dest.push(jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=(*((*(_141617_v))._field_Kind))._field_Kind, ._field_Mutable=(*(_141617_v))._field_Mutable, ._field_Reference=(*(_141617_v))._field_Reference, ._field_Lvalue=(!((*(_141617_v))._field_Constant)), ._field_Model=jule::Any(_141617_v, &__jule_any_type8), })); };
		{ jule::Slice<jule::Ptr<_1d65d9018_Var>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Vars; __jule_push_dest.push(_141617_v); };
		{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_141617_v, &__jule_any_type8)); };
		return;;
	};
	if (((*((*(_139533_lexpr))))._field_Mutable || (*((*(_139533_lexpr))))._field_Reference)) {
		_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*((*(_139533_lexpr))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_139533_lexpr))))._field_Ident, &__jule_any_type4)}));
		_1d65b8c2e_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if ((!(_1d657336a_checkAssign(&((*(_self_))._field_s), _139558_l, (*(_139573_r)), (*((*(_139533_lexpr))))._field_Token)))) {
		return;;
	};
	;
	_1d65c5763_checkValidityForInitExpr((*(_self_))._field_s, (*((*(_139558_l))))._field_Mutable, false, &((*((*(_139558_l))))._field_Kind), _139573_r, &((*((*(_139514_a))))._field_Setter));
	_1d6630dea_assignTypeChecker _145913_checker = _1d6630dea_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*((*(_139558_l))))._field_Kind, ._field_d=(*(_139573_r)), ._field_errorToken=(*((*(_139514_a))))._field_Setter};;
	_1d6631db8_check(&_145913_checker);
	{ jule::Slice<jule::Ptr<_1d664721e_Data>> &__jule_push_dest = (*((*(_139451_st))))._field_L; __jule_push_dest.push((*(_139558_l))); };
}



inline void _1d6587c42_checkMultiAssign(jule::Ptr<_1d657b42d_scopeChecker> _self_, jule::Ptr<_1d6509d7e_AssignSt>* _146941_a) {
	jule::Ptr<_1d664721e_Data> _147013_rd = _1d6667173_evalExpr(_1d65c0d68_eval((*(_self_))._field_s, jule::Trait<_1d669756b_Lookup>(_self_, 0)), (*((*(_146941_a))))._field_Right);;
	if ((_147013_rd == nullptr)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1d664721e_Data>> _147413_right = _1d65724bd_getDatasFromTupleData(&(_147013_rd));;
	if ((_147413_right.len() == 1LL)) {
		{
			auto &_match_expr{ (*(_147413_right[0LL]))._field_Model };
			
			if (_match_expr.type == &__jule_any_type45) {
				_case_begin_1d9973c62:;
				{
					jule::Ptr<_1d6526d68_IndexingExprModel> _147821_iem = (*(_147413_right[0LL]))._field_Model.cast_ptr<_1d6526d68_IndexingExprModel>(&__jule_any_type45);;
					if ((_1d667bc26_Map((*((*(_147821_iem))._field_Expr))._field_Kind.ptr()) != nullptr)) {
						_147413_right=jule::Slice<jule::Ptr<_1d664721e_Data>>::make({jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=(*(_1d667bc26_Map((*((*(_147821_iem))._field_Expr))._field_Kind.ptr())))._field_Val, }),jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=_1d675a640_primBool, })});
					};
				}
			}
			_match_end_1d9973bb8:;
		};
	};
	{
		
		if (((*((*(_146941_a))))._field_Left.len() > _147413_right.len())) {
			_case_begin_1d9973734:;
			{
				_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*((*(_146941_a))))._field_Setter, jule::Str::lit("overflow multi assignment identifers", 36), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (((*((*(_146941_a))))._field_Left.len() < _147413_right.len())) {
			_case_begin_1d9974092:;
			{
				_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*((*(_146941_a))))._field_Setter, jule::Str::lit("missing identifier(s) for multiple assignment", 45), jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1d997368a:;
	};
	jule::Ptr<_1d6577b00_MultiAssign> _149713_st = jule::new_ptr<_1d6577b00_MultiAssign>(_1d6577b00_MultiAssign{._field_R=(*(_147013_rd))._field_Model});;
	{
		auto expr = &((*((*(_146941_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9978c23:;
		if (it != expr_end) {
			jule::I64 _150013_i = it - expr->begin();
			{
				jule::Ptr<_1d65097eb_AssignLeft> _150117_lexpr = (*((*(_146941_a))))._field_Left[_150013_i];;
				jule::Ptr<_1d664721e_Data> _150221_l = nullptr;;
				if (((!(_1d64d8742_IsIgnoreIdent((*(_150117_lexpr))._field_Ident))) && ((!((*((*(_146941_a))))._field_Declarative)) || (!(_1d65868de_isNewAssignIdent(_self_.ptr(), (*(_150117_lexpr))._field_Ident)))))) {
					_150221_l=_1d6667173_evalExpr(_1d65c0d68_eval((*(_self_))._field_s, jule::Trait<_1d669756b_Lookup>(_self_, 0)), (*(_150117_lexpr))._field_Expr);
					if ((_150221_l == nullptr)) {
						goto _iter_next_1d9978c23;
					};
				};
				jule::Ptr<_1d664721e_Data> _151017_r = _147413_right[_150013_i];;
				_1d6586b97_removeInteriorMutRisk(_self_, &(_151017_r));
				_1d6587989_processEndPartOfMultiAssign(_self_.ptr(), &(_149713_st), _146941_a, &(_150117_lexpr), &(_150221_l), &(_151017_r));
			}
			_iter_next_1d9978c23:;
			++it;
			_150013_i++;
			goto _iter_begin_1d9978c23;
		}
		_iter_end_1d9978c23:;
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_149713_st, &__jule_any_type46)); };
}



inline void _1d6587eea_checkAssignSt(jule::Ptr<_1d657b42d_scopeChecker> _self_, jule::Ptr<_1d6509d7e_AssignSt> _151737_a) {
	{
		
		if (_1d64da975_IsPostfixOp((*((*(_151737_a))._field_Setter))._field_Id)) {
			_case_begin_1d997de48:;
			{
				_1d658659d_checkPostfix(_self_, _151737_a);
			}
		}
		else if (((*(_151737_a))._field_Left.len() == 1LL)) {
			_case_begin_1d997d486:;
			{
				_1d6587406_checkSingleAssign(_self_, &(_151737_a));
			}
		}
		else {
			_case_begin_1d997d420:;
			{
				_1d6587c42_checkMultiAssign(_self_, &(_151737_a));
			}
		}
		_match_end_1d997d354:;
	};
}



inline jule::Ptr<_1d6574129_Scope> _1d65883e6_checkCaseScope(jule::Ptr<_1d657b42d_scopeChecker> _self_, jule::Ptr<_1d6578d98_Case>* _152835_c, jule::Ptr<_1d650b402_ScopeTree>* _152850_tree) {
	jule::Ptr<_1d657b42d_scopeChecker> _152913_ssc = _1d658cdbd_newChildChecker(_self_);;
	(*(_152913_ssc))._field_cse=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_152835_c))));
	return _1d6581a3d_checkChildSc(_self_, _152850_tree, &(_152913_ssc));;
}



inline jule::Ptr<_1d6578d98_Case> _1d6588957_checkCase(jule::Ptr<_1d657b42d_scopeChecker> _self_, jule::Ptr<_1d6578260_Match> _153433_m, jule::I64 _153444_i, jule::Ptr<_1d65133a4_Case> _153456_c, jule::Ptr<_1d664721e_Data> _153475_expr) {
	jule::Ptr<_1d6578d98_Case> _153513_case = (*(_153433_m))._field_Cases[_153444_i];;
	(*(_153513_case))._field_Exprs=jule::Slice<jule::Ptr<_1d664721e_Data>>::alloc(0LL, (*(_153456_c))._field_Exprs.len());
	jule::Bool _153713_constMatched = false;;
	jule::Ptr<_1d6648e13_Eval> _153813_eval = _1d65c0d68_eval((*(_self_))._field_s, jule::Trait<_1d669756b_Lookup>(_self_, 0));;
	{
		auto expr = &((*(_153456_c))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9984767:;
		if (it != expr_end) {
			jule::Ptr<_1d6500715_Expr> _153921_e = *it;
			{
				jule::Ptr<_1d664721e_Data> _154017_d = _1d666635e_evalExprKind(_153813_eval, (*(_153921_e))._field_Kind);;
				if ((_154017_d == nullptr)) {
					goto _iter_next_1d9984767;
				};
				if ((*(_153433_m))._field_TypeMatch) {
					{ jule::Slice<jule::Ptr<_1d664721e_Data>> &__jule_push_dest = (*(_153513_case))._field_Exprs; __jule_push_dest.push(_154017_d); };
					if ((_1d6572204_countMatchType(&(_153433_m), &((*(_154017_d))._field_Kind)) > 1LL)) {
						_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*(_153921_e))._field_Token, jule::Str::lit("duplicated pattern: type @ is already matched", 45), jule::Slice<jule::Any>::make({jule::Any(_1d6677ded_Str((*(_154017_d))._field_Kind.ptr()), &__jule_any_type4)}));
					};
					if ((*(_153433_m))._field_Comptime) {
						_153713_constMatched=(_153713_constMatched || _1d667823e_Equal((*(_153475_expr))._field_Kind, (*(_154017_d))._field_Kind));
					} else {
						if ((_1d667abc0_TypeEnum((*(_153475_expr))._field_Kind.ptr()) != nullptr)) {
							_1d65c1d36_checkTypeCompatibility((*(_self_))._field_s, &((*(_153475_expr))._field_Kind), &((*(_154017_d))._field_Kind), &((*(_153921_e))._field_Token));
						} else {
							jule::Ptr<_1d654554b_Trait> _155925_trt = _1d667b990_Trait((*(_153475_expr))._field_Kind.ptr());;
							if ((_155925_trt != nullptr)) {
								_1d65c1d36_checkTypeCompatibility((*(_self_))._field_s, &((*(_153475_expr))._field_Kind), &((*(_154017_d))._field_Kind), &((*(_153921_e))._field_Token));
							};
						};
					};
					goto _iter_next_1d9984767;
				};
				if ((*(_154017_d))._field_Decl) {
					_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*(_153921_e))._field_Token, jule::Str::lit("expecting expression, found type declaration", 44), jule::Slice<jule::Any>());
					_1d65b8c2e_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("you can use type-match if you want to match types", 49), jule::Slice<jule::Any>());
					goto _iter_next_1d9984767;
				};
				if ((*(_153433_m))._field_Comptime) {
					if (((!(_1d6647ae3_IsConst(_154017_d.ptr()))) && (_1d667da4c_comptimeTypeInfo((*(_154017_d))._field_Kind.ptr()) == nullptr))) {
						_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*(_153921_e))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
						_1d65b8c2e_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("comptime-matching requires constant expression", 46), jule::Slice<jule::Any>());
						goto _iter_next_1d9984767;
					};
					if ((!(_153713_constMatched))) {
						if (_1d6647ae3_IsConst(_154017_d.ptr())) {
							_153713_constMatched=(_1d6647ae3_IsConst(_153475_expr.ptr()) && _1d4326cad_Eq((*(_154017_d))._field_Constant.ptr(), (*((*(_153475_expr))._field_Constant))));
						} else {
							jule::Ptr<_1d655c002_comptimeTypeInfo> _158425_exprCti = _1d667da4c_comptimeTypeInfo((*(_153475_expr))._field_Kind.ptr());;
							_153713_constMatched=((_158425_exprCti != nullptr) && _1d667823e_Equal((*(_1d667da4c_comptimeTypeInfo((*(_154017_d))._field_Kind.ptr())))._field_base, (*(_158425_exprCti))._field_base));
						};
					};
				};
				{ jule::Slice<jule::Ptr<_1d664721e_Data>> &__jule_push_dest = (*(_153513_case))._field_Exprs; __jule_push_dest.push(_154017_d); };
				if ((((!((*(_153433_m))._field_Comptime)) || (_1d667da4c_comptimeTypeInfo((*(_153475_expr))._field_Kind.ptr()) == nullptr)) || (_1d667da4c_comptimeTypeInfo((*(_154017_d))._field_Kind.ptr()) == nullptr))) {
					_1d6630dea_assignTypeChecker _159421_checker = _1d6630dea_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*(_153475_expr))._field_Kind, ._field_d=_154017_d, ._field_errorToken=(*(_153921_e))._field_Token};;
					_1d6631db8_check(&_159421_checker);
				};
			}
			_iter_next_1d9984767:;
			++it;
			goto _iter_begin_1d9984767;
		}
		_iter_end_1d9984767:;
	};
	if (((!((*(_153433_m))._field_Comptime)) || _153713_constMatched)) {
		(*(_153513_case))._field_Scope=_1d65883e6_checkCaseScope(_self_, &(_153513_case), &((*(_153456_c))._field_Scope));
	};
	return _153513_case;;
}



inline void _1d6588d75_checkCases(jule::Ptr<_1d657b42d_scopeChecker> _self_, jule::Ptr<_1d6513bbd_MatchCase>* _160935_m, jule::Ptr<_1d6578260_Match> _160954_rm, jule::Ptr<_1d664721e_Data> _160970_expr) {
	(*(_160954_rm))._field_Cases=jule::Slice<jule::Ptr<_1d6578d98_Case>>::alloc(0LL, (*((*(_160935_m))))._field_Cases.len());
	{
		auto expr = &((*((*(_160935_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9996d84:;
		if (it != expr_end) {
			jule::I64 _161113_i = it - expr->begin();
			{
				jule::Ptr<_1d6578d98_Case> _161217_case = jule::new_ptr<_1d6578d98_Case>(_1d6578d98_Case{._field_Owner=_160954_rm, });;
				if ((_161113_i > 0LL)) {
					(*((*(_160954_rm))._field_Cases[(_161113_i - 1LL)]))._field_Next=_161217_case;
				};
				{ jule::Slice<jule::Ptr<_1d6578d98_Case>> &__jule_push_dest = (*(_160954_rm))._field_Cases; __jule_push_dest.push(_161217_case); };
			}
			_iter_next_1d9996d84:;
			++it;
			_161113_i++;
			goto _iter_begin_1d9996d84;
		}
		_iter_end_1d9996d84:;
	};
	if ((((*(_160954_rm))._field_Default != nullptr) && ((*((*(_160935_m))))._field_Cases.len() > 0LL))) {
		(*((*(_160954_rm))._field_Cases[((*(_160954_rm))._field_Cases.len() - 1LL)]))._field_Next=(*(_160954_rm))._field_Default;
	};
	{
		auto expr = &((*((*(_160935_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d999a492:;
		if (it != expr_end) {
			jule::I64 _162514_i = it - expr->begin();
			jule::Ptr<_1d65133a4_Case> _162521_c = *it;
			{
				_1d6588957_checkCase(_self_, _160954_rm, _162514_i, _162521_c, _160970_expr);
			}
			_iter_next_1d999a492:;
			++it;
			_162514_i++;
			goto _iter_begin_1d999a492;
		}
		_iter_end_1d999a492:;
	};
}



inline jule::Ptr<_1d6578d98_Case> _1d6589271_checkDefault(jule::Ptr<_1d657b42d_scopeChecker> _self_, jule::Ptr<_1d6578260_Match> _163036_m, jule::Ptr<_1d651220a_Else> _163051_d) {
	jule::Ptr<_1d6578d98_Case> _163113_def = jule::new_ptr<_1d6578d98_Case>(_1d6578d98_Case{._field_Owner=_163036_m, });;
	(*(_163113_def))._field_Scope=_1d65883e6_checkCaseScope(_self_, &(_163113_def), &((*(_163051_d))._field_Scope));
	return _163113_def;;
}



inline void _1d65895d4_checkComptimePanic(jule::Ptr<_1d657b42d_scopeChecker> _self_, jule::Ptr<_1d64d5cd3_Token> _163842_callToken, jule::Ptr<_1d6574129_Scope>* _163862_s) {
	if (((*((*(_163862_s))))._field_Stmts.len() != 1LL)) {
		return;;
	};
	jule::Any _16429_stmt = (*((*(_163862_s))))._field_Stmts[0LL];;
	{
		auto &_match_expr{ _16429_stmt };
		
		if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1d999dc15:;
			{
				jule::Ptr<_1d664721e_Data> _164513_d = _16429_stmt.cast_ptr<_1d664721e_Data>(&__jule_any_type24);;
				{
					auto &_match_expr{ (*(_164513_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type29) {
						_case_begin_1d999eb7d:;
						{
							jule::Ptr<_1d652ac5c_BuiltinPanicCallExprModel> _164821_m = (*(_164513_d))._field_Model.cast_ptr<_1d652ac5c_BuiltinPanicCallExprModel>(&__jule_any_type29);;
							{
								auto &_match_expr{ (*(_164821_m))._field_Expr };
								
								if (_match_expr.type == &__jule_any_type19) {
									_case_begin_1d99a0cd3:;
									{
										jule::Ptr<_1d4321208_Const> _165121_c = (*(_164821_m))._field_Expr.cast_ptr<_1d4321208_Const>(&__jule_any_type19);;
										if ((!(_1d432597c_IsStr(_165121_c.ptr())))) {
											goto _match_end_1d99a0c6c;
										};
										if ((_163842_callToken == nullptr)) {
											jule::Ptr<_1d657b42d_scopeChecker> _165629_root = _1d657e7a5_getHardRoot(_self_);;
											if (((*(_165629_root))._field_calledFrom == nullptr)) {
												_163842_callToken=(*(_164821_m))._field_Token;
											} else {
												_163842_callToken=(*(_165629_root))._field_calledFrom;
											};
										};
										_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), _163842_callToken, jule::Str::lit("compile-time panic: @", 21), jule::Slice<jule::Any>::make({jule::Any(_1d4323381_ReadStr(_165121_c.ptr()), &__jule_any_type4)}));
										_1d657dc6b_stop(_self_.ptr());
									}
								}
								_match_end_1d99a0c6c:;
							};
						}
					}
					_match_end_1d999eb17:;
				};
			}
		}
		_match_end_1d999db16:;
	};
}



inline void _1d6589947_processConstMatch(jule::Ptr<_1d657b42d_scopeChecker> _self_, jule::Ptr<_1d6578260_Match>* _167042_tm, jule::Ptr<_1d6513bbd_MatchCase>* _167059_m) {
	{
		auto expr = &((*((*(_167042_tm))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d99a0de3:;
		if (it != expr_end) {
			jule::I64 _167114_i = it - expr->begin();
			jule::Ptr<_1d6578d98_Case> _167121_c = *it;
			{
				if (((*(_167121_c))._field_Scope != nullptr)) {
					jule::Ptr<_1d64d5cd3_Token> _167325_token = nullptr;;
					if (((!((*((*(_167042_tm))))._field_TypeMatch)) && ((*((*(_167121_c))._field_Scope))._field_Stmts.len() > 0LL))) {
						_167325_token=(*((*((*((*(_167059_m))))._field_Cases[_167114_i]))._field_Scope))._field_Stmts[0LL]._field_Token;
					};
					_1d65895d4_checkComptimePanic(_self_, _167325_token, &((*(_167121_c))._field_Scope));
					(*((*(_167042_tm))))._field_Default=_167121_c;
					(*((*(_167042_tm))))._field_Cases=nullptr;
					return;;
				};
			}
			_iter_next_1d99a0de3:;
			++it;
			_167114_i++;
			goto _iter_begin_1d99a0de3;
		}
		_iter_end_1d99a0de3:;
	};
	if (((*((*(_167059_m))))._field_Default != nullptr)) {
		(*((*(_167042_tm))))._field_Cases=nullptr;
		(*((*(_167042_tm))))._field_Default=_1d6589271_checkDefault(_self_, (*(_167042_tm)), (*((*(_167059_m))))._field_Default);
		if (((*((*(_167042_tm))))._field_Default != nullptr)) {
			jule::Ptr<_1d64d5cd3_Token> _168725_token = nullptr;;
			if ((!((*((*(_167042_tm))))._field_TypeMatch))) {
				_168725_token=(*((*((*((*(_167059_m))))._field_Default))._field_Scope))._field_Stmts[0LL]._field_Token;
			};
			_1d65895d4_checkComptimePanic(_self_, _168725_token, &((*((*((*(_167042_tm))))._field_Default))._field_Scope));
		};
	} else {
		(*((*(_167042_tm))))._field_Cases=nullptr;
	};
}



inline void _1d6589c00_checkTypeMatch(jule::Ptr<_1d657b42d_scopeChecker> _self_, jule::Ptr<_1d6513bbd_MatchCase>* _169939_m) {
	jule::Ptr<_1d664721e_Data> _170013_d = _1d66666a0_eval1(_1d65c0d68_eval((*(_self_))._field_s, jule::Trait<_1d669756b_Lookup>(_self_, 0)), (*((*(_169939_m))))._field_Expr);;
	if ((_170013_d == nullptr)) {
		return;;
	};
	if ((*((*(_169939_m))))._field_Comptime) {
		jule::Ptr<_1d655c002_comptimeTypeInfo> _170617_cti = _1d667da4c_comptimeTypeInfo((*(_170013_d))._field_Kind.ptr());;
		if ((_170617_cti == nullptr)) {
			if ((!((*(_170013_d))._field_Decl))) {
				_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_169939_m))))._field_Expr))._field_Token, jule::Str::lit("comptime type-match expressions can take only type declarations", 63), jule::Slice<jule::Any>());
				return;;
			};
		} else {
			(*(_170013_d))._field_Kind=(*(_170617_cti))._field_base;
		};
	} else if (((*(_170013_d))._field_Decl || (!(((((_1d667a186_Prim((*(_170013_d))._field_Kind.ptr()) != nullptr) && _1d6683d2c_IsAny(_1d667a186_Prim((*(_170013_d))._field_Kind.ptr()).ptr())) || (_1d667b990_Trait((*(_170013_d))._field_Kind.ptr()) != nullptr)) || (_1d667abc0_TypeEnum((*(_170013_d))._field_Kind.ptr()) != nullptr)))))) {
		_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_169939_m))))._field_Expr))._field_Token, jule::Str::lit("type-match must be have <any>, <type enum>, <trait> or <generic> typed expression", 81), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1d6578260_Match> _172013_tm = jule::new_ptr<_1d6578260_Match>(_1d6578260_Match{._field_Expr=_170013_d, ._field_TypeMatch=true, ._field_Comptime=(*((*(_169939_m))))._field_Comptime, });;
	if (((!((*(_172013_tm))._field_Comptime)) && ((*((*(_169939_m))))._field_Default != nullptr))) {
		(*(_172013_tm))._field_Default=_1d6589271_checkDefault(_self_, _172013_tm, (*((*(_169939_m))))._field_Default);
	};
	_1d6588d75_checkCases(_self_, _169939_m, _172013_tm, _170013_d);
	if ((*(_172013_tm))._field_Comptime) {
		_1d6589947_processConstMatch(_self_, &(_172013_tm), _169939_m);
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_172013_tm, &__jule_any_type47)); };
}



inline void _1d6589ea8_checkCommonMatch(jule::Ptr<_1d657b42d_scopeChecker> _self_, jule::Ptr<_1d6513bbd_MatchCase>* _174141_m) {
	jule::Ptr<_1d664721e_Data> _174217_d = nullptr;;
	if (((*((*(_174141_m))))._field_Expr == nullptr)) {
		_174217_d=jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=_1d675a640_primBool, ._field_Constant=static__1d4321bcb_NewBool(true)});
		(*(_174217_d))._field_Model=jule::Any((*(_174217_d))._field_Constant, &__jule_any_type19);
	} else {
		_174217_d=_1d6666d32_evalExpr1(_1d65c0d68_eval((*(_self_))._field_s, jule::Trait<_1d669756b_Lookup>(_self_, 0)), (*((*(_174141_m))))._field_Expr);
		if ((_174217_d == nullptr)) {
			return;;
		};
	};
	if ((*((*(_174141_m))))._field_Comptime) {
		if ((!(_1d658d96d_canComptimeMatch(&(_174217_d))))) {
			_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_174141_m))))._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
			_1d65b8c2e_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("comptime-matching requires constant expression", 46), jule::Slice<jule::Any>());
			return;;
		};
	} else if (_1d667c243_comptime((*(_174217_d))._field_Kind.ptr())) {
		_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_174141_m))))._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		_1d65b8c2e_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("comptime-matching requires constant expression", 46), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1d6578260_Match> _176813_mc = jule::new_ptr<_1d6578260_Match>(_1d6578260_Match{._field_Expr=_174217_d, ._field_Comptime=(*((*(_174141_m))))._field_Comptime, });;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_176813_mc, &__jule_any_type47)); };
	if (((!((*(_176813_mc))._field_Comptime)) && ((*((*(_174141_m))))._field_Default != nullptr))) {
		(*(_176813_mc))._field_Default=_1d6589271_checkDefault(_self_, _176813_mc, (*((*(_174141_m))))._field_Default);
	};
	_1d6588d75_checkCases(_self_, _174141_m, _176813_mc, _174217_d);
	if ((*(_176813_mc))._field_Comptime) {
		_1d6589947_processConstMatch(_self_, &(_176813_mc), _174141_m);
	};
}



inline void _1d658a261_checkMatch(jule::Ptr<_1d657b42d_scopeChecker> _self_, jule::Ptr<_1d6513bbd_MatchCase> _179134_m) {
	if ((*(_179134_m))._field_TypeMatch) {
		_1d6589c00_checkTypeMatch(_self_, &(_179134_m));
		return;;
	};
	_1d6589ea8_checkCommonMatch(_self_, &(_179134_m));
}



inline void _1d658a519_checkFall(jule::Ptr<_1d657b42d_scopeChecker> _self_, jule::Ptr<_1d650918b_FallSt> _179929_f) {
	if (((((*(_self_))._field_cse == 0LLU) || (((*((*(_self_))._field_scope))._field_Stmts.len() + 1LL) < (*((*(_self_))._field_scope))._field_Stmts.len())) || _1d657e288_isDeferred(_self_))) {
		_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*(_179929_f))._field_Token, jule::Str::lit("fall keyword can only useable at end of the case scopes", 55), jule::Slice<jule::Any>());
		return;;
	};
	_1d6578d98_Case* _180713_case = ((_1d6578d98_Case*)((*(_self_))._field_cse));;
	if ((*((*(_180713_case))._field_Owner))._field_Comptime) {
		_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*(_179929_f))._field_Token, jule::Str::lit("the fall statement is not allowed for comptime-matching", 55), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_180713_case))._field_Next == nullptr)) {
		_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*(_179929_f))._field_Token, jule::Str::lit("fall cannot useable at final case", 33), jule::Slice<jule::Any>());
		_1d65b8c2e_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("remove \"fall\" keyword", 21), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(jule::new_ptr<_1d6579492_FallSt>(_1d6579492_FallSt{._field_DestCase=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_180713_case))._field_Next))}), &__jule_any_type48)); };
}



inline jule::Ptr<_1d65766c0_BreakSt> _1d658a85a_checkBreakWithLabel(jule::Ptr<_1d657b42d_scopeChecker> _self_, jule::Ptr<_1d65114a1_BreakSt> _182239_b) {
	jule::Ptr<_1d65766c0_BreakSt> _182313_brk = _1d658ab9b_checkPlainBreak(_self_, _182239_b);;
	if ((_182313_brk == nullptr)) {
		return nullptr;;
	};
	(*(_182313_brk))._field_It=0LLU;
	(*(_182313_brk))._field_Mtch=0LLU;
	jule::Ptr<_1d6579e87_scopeLabel> _183313_label = _1d6571643_findLabelParent(&((*((*(_182239_b))._field_Label))._field_Kind), (*(_self_))._field_parent);;
	if ((_183313_label == nullptr)) {
		_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*(_182239_b))._field_Label, jule::Str::lit("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any((*((*(_182239_b))._field_Label))._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	(*(_183313_label))._field_used=true;
	if ((((*(_183313_label))._field_pos + 1LL) >= (*((*((*(_183313_label))._field_scope))._field_scope))._field_Stmts.len())) {
		_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*(_182239_b))._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_182239_b))._field_Label))._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::I64 _18469_i = ((*(_183313_label))._field_pos + 1LL);;
	if ((_18469_i >= (*((*((*(_183313_label))._field_scope))._field_scope))._field_Stmts.len())) {
		_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*(_182239_b))._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_182239_b))._field_Label))._field_Kind, &__jule_any_type4)}));
	} else {
		jule::Any _185017_st = (*((*((*(_183313_label))._field_scope))._field_scope))._field_Stmts[_18469_i];;
		{
			auto &_match_expr{ _185017_st };
			
			if (_match_expr.type == &__jule_any_type36) {
				_case_begin_1d99cea9d:;
				{
					(*(_182313_brk))._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_185017_st.cast_ptr<_1d657505e_InfIter>(&__jule_any_type36)));
				}
			}
			else if (_match_expr.type == &__jule_any_type40) {
				_case_begin_1d99cecac:;
				{
					(*(_182313_brk))._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_185017_st.cast_ptr<_1d6575e61_RangeIter>(&__jule_any_type40)));
				}
			}
			else if (_match_expr.type == &__jule_any_type38) {
				_case_begin_1d99ced23:;
				{
					(*(_182313_brk))._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_185017_st.cast_ptr<_1d6575515_WhileIter>(&__jule_any_type38)));
				}
			}
			else if (_match_expr.type == &__jule_any_type47) {
				_case_begin_1d99ced89:;
				{
					(*(_182313_brk))._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_185017_st.cast_ptr<_1d6578260_Match>(&__jule_any_type47)));
				}
			}
			else {
				_case_begin_1d99cec46:;
				{
					_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*(_182239_b))._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_182239_b))._field_Label))._field_Kind, &__jule_any_type4)}));
				}
			}
			_match_end_1d99cebe1:;
		};
	};
	if (((*(_182313_brk))._field_It != 0LLU)) {
		if ((!(_1d658568a_checkValidBreakLabel(_self_, (*(_182313_brk))._field_It)))) {
			_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*(_182239_b))._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_182239_b))._field_Label))._field_Kind, &__jule_any_type4)}));
		};
	};
	if (((*(_182313_brk))._field_Mtch != 0LLU)) {
		if ((!(_1d658568a_checkValidBreakLabel(_self_, (*(_182313_brk))._field_Mtch)))) {
			_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*(_182239_b))._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_182239_b))._field_Label))._field_Kind, &__jule_any_type4)}));
		};
	};
	return _182313_brk;;
}



inline jule::Ptr<_1d65766c0_BreakSt> _1d658ab9b_checkPlainBreak(jule::Ptr<_1d657b42d_scopeChecker> _self_, jule::Ptr<_1d65114a1_BreakSt> _188035_b) {
	if (_1d657e288_isDeferred(_self_)) {
		_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*(_188035_b))._field_Token, jule::Str::lit("break keyword is cannot used at out of iteration and match cases", 64), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1d657b42d_scopeChecker> _188613_scope = _self_;;
	_julec_label_1d99d78db:;
	{
		
		if ((((((*(_188613_scope))._field_it == 0LLU) && ((*(_188613_scope))._field_cse == 0LLU)) && ((*(_188613_scope))._field_parent != nullptr)) && ((*(_188613_scope))._field_owner == nullptr))) {
			_case_begin_1d99d7b94:;
			{
				_188613_scope=(*(_188613_scope))._field_parent;
				goto _julec_label_1d99d78db;
			}
		}
		else if (((*(_188613_scope))._field_it != 0LLU)) {
			_case_begin_1d99d7c1b:;
			{
				return jule::new_ptr<_1d65766c0_BreakSt>(_1d65766c0_BreakSt{._field_It=(*(_188613_scope))._field_it, });;
			}
		}
		else if (((*(_188613_scope))._field_cse != 0LLU)) {
			_case_begin_1d99d7c93:;
			{
				return jule::new_ptr<_1d65766c0_BreakSt>(_1d65766c0_BreakSt{._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(((_1d6578d98_Case*)((*(_188613_scope))._field_cse))))._field_Owner))});;
			}
		}
		_match_end_1d99d7ac8:;
	};
	_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*(_188035_b))._field_Token, jule::Str::lit("break keyword is cannot used at out of iteration and match cases", 64), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1d658ae54_checkBreak(jule::Ptr<_1d657b42d_scopeChecker> _self_, jule::Ptr<_1d65114a1_BreakSt> _190230_b) {
	if (((*(_190230_b))._field_Label != nullptr)) {
		jule::Ptr<_1d65766c0_BreakSt> _190417_brk = _1d658a85a_checkBreakWithLabel(_self_, _190230_b);;
		{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_190417_brk, &__jule_any_type49)); };
		return;;
	};
	jule::Ptr<_1d65766c0_BreakSt> _190913_brk = _1d658ab9b_checkPlainBreak(_self_, _190230_b);;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_190913_brk, &__jule_any_type49)); };
}



inline void _1d658b20c_checkRet(jule::Ptr<_1d657b42d_scopeChecker> _self_, jule::Ptr<_1d650e625_RetSt> _191332_r) {
	if (_1d657e288_isDeferred(_self_)) {
		_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*(_191332_r))._field_Token, jule::Str::lit("deferred scopes are not supports return statements", 50), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1d6579827_RetSt> _191813_rt = jule::new_ptr<_1d6579827_RetSt>(_1d6579827_RetSt{._field_Func=(*(_1d657e51e_getRoot(_self_)))._field_owner, });;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_191813_rt, &__jule_any_type50)); };
	jule::Ptr<_1d663eaa7_retTypeChecker> _192313_rtc = jule::new_ptr<_1d663eaa7_retTypeChecker>(_1d663eaa7_retTypeChecker{._field_sc=_self_, ._field_f=(*(_191813_rt))._field_Func, ._field_errorToken=(*(_191332_r))._field_Token, });;
	jule::Bool _19289_ok = _1d66407bc_check(_192313_rtc.ptr(), &((*(_191332_r))._field_Expr));;
	if ((!(_19289_ok))) {
		return;;
	};
	if (((*(_191332_r))._field_Expr != nullptr)) {
		(*(_191813_rt))._field_Expr=(*(_192313_rtc))._field_model;
	};
}



inline void _1d658b4b5_checkUseExpr(jule::Ptr<_1d657b42d_scopeChecker> _self_, jule::Ptr<_1d65010d9_UseExpr> _193832_ue) {
	if (((*(_self_))._field_result == nullptr)) {
		_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*(_193832_ue))._field_Token, jule::Str::lit("use expressions cannot useable out of exceptional handler scopes", 64), jule::Slice<jule::Any>());
		return;;
	};
	if (_1d657e288_isDeferred(_self_)) {
		_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*(_193832_ue))._field_Token, jule::Str::lit("use expressions cannot useable in deferred scopes", 49), jule::Slice<jule::Any>());
	};
	if ((((*(_self_))._field_i + 1LL) < (*((*(_self_))._field_tree))._field_Stmts.len())) {
		_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*(_193832_ue))._field_Token, jule::Str::lit("use expressions must be last statement of scope", 47), jule::Slice<jule::Any>());
	};
}



inline void _1d658b76d_checkNode(jule::Ptr<_1d657b42d_scopeChecker> _self_, jule::Any* _195434_node) {
	{
		auto &_match_expr{ (*(_195434_node)) };
		
		if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1d99e818d:;
			{
				_1d6582137_checkAnonScope(_self_, (*(_195434_node)).cast_ptr<_1d650b402_ScopeTree>(&__jule_any_type51));
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1d99e86ee:;
			{
				_1d658092c_checkVarDecl(_self_, (*(_195434_node)).cast_ptr<_1d650e24b_VarDecl>(&__jule_any_type16));
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1d99e8501:;
			{
				_1d6580e8d_checkTypeAliasDecl(_self_, (*(_195434_node)).cast_ptr<_1d6512ded_TypeAliasDecl>(&__jule_any_type12));
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1d99e8930:;
			{
				_1d6582753_checkExpr(_self_, (*(_195434_node)).cast_ptr<_1d6500715_Expr>(&__jule_any_type52));
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1d99e8996:;
			{
				_1d658318d_checkConditional(_self_, (*(_195434_node)).cast_ptr<_1d65126b1_Conditional>(&__jule_any_type53));
			}
		}
		else if (_match_expr.type == &__jule_any_type54) {
			_case_begin_1d99e8a0c:;
			{
				_1d6585008_checkIter(_self_, (*(_195434_node)).cast_ptr<_1d650ed95_Iter>(&__jule_any_type54));
			}
		}
		else if (_match_expr.type == &__jule_any_type55) {
			_case_begin_1d99e8a73:;
			{
				_1d6585c84_checkCont(_self_, (*(_195434_node)).cast_ptr<_1d651187a_ContSt>(&__jule_any_type55));
			}
		}
		else if (_match_expr.type == &__jule_any_type56) {
			_case_begin_1d99e8ad9:;
			{
				_1d658603c_checkLabel(_self_, (*(_195434_node)).cast_ptr<_1d65089b5_LabelSt>(&__jule_any_type56));
			}
		}
		else if (_match_expr.type == &__jule_any_type57) {
			_case_begin_1d99e8b50:;
			{
				_1d65862e5_pushGoto(_self_, (*(_195434_node)).cast_ptr<_1d6508d8e_GotoSt>(&__jule_any_type57));
			}
		}
		else if (_match_expr.type == &__jule_any_type58) {
			_case_begin_1d99e8bb6:;
			{
				_1d6587eea_checkAssignSt(_self_, (*(_195434_node)).cast_ptr<_1d6509d7e_AssignSt>(&__jule_any_type58));
			}
		}
		else if (_match_expr.type == &__jule_any_type59) {
			_case_begin_1d99e8c2c:;
			{
				_1d658a261_checkMatch(_self_, (*(_195434_node)).cast_ptr<_1d6513bbd_MatchCase>(&__jule_any_type59));
			}
		}
		else if (_match_expr.type == &__jule_any_type60) {
			_case_begin_1d99e8c93:;
			{
				_1d658a519_checkFall(_self_, (*(_195434_node)).cast_ptr<_1d650918b_FallSt>(&__jule_any_type60));
			}
		}
		else if (_match_expr.type == &__jule_any_type61) {
			_case_begin_1d99e8d09:;
			{
				_1d658ae54_checkBreak(_self_, (*(_195434_node)).cast_ptr<_1d65114a1_BreakSt>(&__jule_any_type61));
			}
		}
		else if (_match_expr.type == &__jule_any_type62) {
			_case_begin_1d99e8d70:;
			{
				_1d658b20c_checkRet(_self_, (*(_195434_node)).cast_ptr<_1d650e625_RetSt>(&__jule_any_type62));
			}
		}
		else if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1d99e8dd6:;
			{
				_1d658b4b5_checkUseExpr(_self_, (*(_195434_node)).cast_ptr<_1d65010d9_UseExpr>(&__jule_any_type63));
			}
		}
		else {
			_case_begin_1d99e8369:;
			{
				jule::outln(jule::Str::lit("error <unimplemented scope node>", 32));
			}
		}
		_match_end_1d99e8314:;
	};
}



inline void _1d658b96b_checkResult(jule::Ptr<_1d657b42d_scopeChecker> _self_) {
	_1d650ac92_Stmt _199213_stmt = (*((*(_self_))._field_tree))._field_Stmts[((*((*(_self_))._field_tree))._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _199213_stmt._field_Data };
		
		if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1d9a022b8:;
			{
				jule::Ptr<_1d65010d9_UseExpr> _199517_ue = _199213_stmt._field_Data.cast_ptr<_1d65010d9_UseExpr>(&__jule_any_type63);;
				jule::Ptr<_1d664721e_Data> _199617_d = _1d6667173_evalExpr(_1d65c0d68_eval((*(_self_))._field_s, jule::Trait<_1d669756b_Lookup>(_self_, 0)), (*(_199517_ue))._field_Expr);;
				if ((_199617_d == nullptr)) {
					return;;
				};
				{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_199617_d, &__jule_any_type24)); };
				jule::Ptr<_1d663eaa7_retTypeChecker> _200117_rtc = jule::new_ptr<_1d663eaa7_retTypeChecker>(_1d663eaa7_retTypeChecker{._field_sc=_self_, ._field_types=_1d6536372_Types((*(_self_))._field_result.ptr()), ._field_errorToken=(*((*(_199517_ue))._field_Expr))._field_Token, });;
				_1d66407bc_check(_200117_rtc.ptr(), &((*(_199517_ue))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1d9a02d79:;
			{
				jule::Ptr<_1d6500715_Expr> _200817_expr = _199213_stmt._field_Data.cast_ptr<_1d6500715_Expr>(&__jule_any_type52);;
				jule::Ptr<_1d664721e_Data> _200917_d = _1d6667173_evalExpr(_1d65c0d68_eval((*(_self_))._field_s, jule::Trait<_1d669756b_Lookup>(_self_, 0)), _200817_expr);;
				if ((_200917_d == nullptr)) {
					return;;
				};
				{
					auto &_match_expr{ (*(_200917_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type23) {
						_case_begin_1d9a085ee:;
						{
							jule::Ptr<_1d652cd19_BuiltinErrorCallExprModel> _201521_m = (*(_200917_d))._field_Model.cast_ptr<_1d652cd19_BuiltinErrorCallExprModel>(&__jule_any_type23);;
							_1d658249a_processErrorCall(_self_, &(_201521_m), (*(_200817_expr))._field_Token);
							{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_200917_d, &__jule_any_type24)); };
						}
					}
					else {
						_case_begin_1d9a0880d:;
						{
							return;;
						}
					}
					_match_end_1d9a087a8:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type57 || _match_expr.type == &__jule_any_type61 || _match_expr.type == &__jule_any_type55 || _match_expr.type == &__jule_any_type62) {
			_case_begin_1d9a0253d:;
			{
				_1d658b76d_checkNode(_self_, &(_199213_stmt._field_Data));
			}
		}
		else {
			_case_begin_1d9a024c7:;
			{
				_1d658b76d_checkNode(_self_, &(_199213_stmt._field_Data));
				return;;
			}
		}
		_match_end_1d9a02472:;
	};
	(*(_self_))._field_result=nullptr;
}



inline void _1d658bb69_checkTree(jule::Ptr<_1d657b42d_scopeChecker> _self_) {
	(*(_self_))._field_i=0LL;
	jule::I64 _203713_n = (*((*(_self_))._field_tree))._field_Stmts.len();;
	if (((*(_self_))._field_result != nullptr)) {
		(_203713_n)--;
	};
	for (; ((*(_self_))._field_i < _203713_n); ((*(_self_))._field_i)++) {
		{
			_1d650ac92_Stmt _204517_stmt = (*((*(_self_))._field_tree))._field_Stmts[(*(_self_))._field_i];;
			_1d658b76d_checkNode(_self_, &(_204517_stmt._field_Data));
			if (_1d657e002_stopped(_self_.ptr())) {
				return;;
			};
		}
	_iter_next_1d9a0c49e:;
	}
	_iter_end_1d9a0c49e:;;
	if ((((*(_self_))._field_result != nullptr) && ((*((*(_self_))._field_tree))._field_Stmts.len() != 0LL))) {
		_1d658b96b_checkResult(_self_);
	};
}



inline void _1d658becc_checkGoto(_1d657b42d_scopeChecker* _self_, jule::Ptr<_1d657a51a_scopeGoto>* _205633_gt, jule::Ptr<_1d6579e87_scopeLabel>* _205654_label) {
	jule::Ptr<_1d657b42d_scopeChecker> _205713_gtsc = (*((*(_205633_gt))))._field_scope;;
	while ((((*(_205713_gtsc))._field_childIndex - 1LL) > (*((*((*(_205654_label))))._field_scope))._field_childIndex)) {
		{
			_205713_gtsc=(*(_205713_gtsc))._field_parent;
		}
	_iter_next_1d9a10b12:;
	}
	_iter_end_1d9a10b12:;;
	jule::I64 _206213_n = 0LL;;
	if (((*(_205713_gtsc))._field_scope == (*((*((*(_205654_label))))._field_scope))._field_scope)) {
		if (((*((*(_205633_gt))))._field_pos > (*((*(_205654_label))))._field_pos)) {
			return;;
		};
		_206213_n=(*((*(_205633_gt))))._field_pos;
	};
	jule::I64 _207513_i = ((*((*(_205654_label))))._field_pos - 1LL);;
	if ((_206213_n == 0LL)) {
		{
			auto expr = &((*((*((*((*(_205654_label))))._field_scope))._field_scope))._field_Stmts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1d9a145d8:;
			if (it != expr_end) {
				jule::I64 _207817_j = it - expr->begin();
				jule::Any _207820_stmt = *it;
				{
					if (_1d6571d80_stmtIsGotoScope(&(_207820_stmt), &((*(_205713_gtsc))._field_scope))) {
						_206213_n=_207817_j;
						goto _iter_end_1d9a145d8;
					};
				}
				_iter_next_1d9a145d8:;
				++it;
				_207817_j++;
				goto _iter_begin_1d9a145d8;
			}
			_iter_end_1d9a145d8:;
		};
	};
	for (; (_207513_i >= _206213_n); (_207513_i)--) {
		{
			jule::Any _208817_stmt = (*((*((*((*(_205654_label))))._field_scope))._field_scope))._field_Stmts[_207513_i];;
			if (_1d6573bb7_stmtIsDef(&(_208817_stmt))) {
				_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_205633_gt))))._field_gt))._field_Token, jule::Str::lit("goto @ jumps over declaration(s)", 32), jule::Slice<jule::Any>::make({jule::Any((*((*((*((*(_205633_gt))))._field_gt))._field_Label))._field_Kind, &__jule_any_type4)}));
				return;;
			};
		}
	_iter_next_1d9a15078:;
	}
	_iter_end_1d9a15078:;;
}



inline void _1d658c1ca_checkGotos(_1d657b42d_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_gotos)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9a14dbe:;
		if (it != expr_end) {
			jule::Ptr<_1d657a51a_scopeGoto> _209721_gt = *it;
			{
				jule::Ptr<_1d6579e87_scopeLabel> _209817_label = _1d6580278_findLabelAll(_self_, &((*((*((*(_209721_gt))._field_gt))._field_Label))._field_Kind));;
				if ((_209817_label == nullptr)) {
					_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*((*(_209721_gt))._field_gt))._field_Token, jule::Str::lit("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_209721_gt))._field_gt))._field_Label))._field_Kind, &__jule_any_type4)}));
					goto _iter_next_1d9a14dbe;
				};
				(*((*(_209721_gt))._field_st))._field_Label=(*(_209817_label))._field_label;
				(*(_209817_label))._field_used=true;
				_1d658becc_checkGoto(_self_, &(_209721_gt), &(_209817_label));
			}
			_iter_next_1d9a14dbe:;
			++it;
			goto _iter_begin_1d9a14dbe;
		}
		_iter_end_1d9a14dbe:;
	};
}



inline void _1d658c3c8_checkLabels(_1d657b42d_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9a1ae19:;
		if (it != expr_end) {
			jule::Ptr<_1d6579e87_scopeLabel> _211016_l = *it;
			{
				if ((!((*(_211016_l))._field_used))) {
					_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*(_211016_l))._field_token, jule::Str::lit("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_211016_l))._field_label))._field_Ident, &__jule_any_type4)}));
				};
			}
			_iter_next_1d9a1ae19:;
			++it;
			goto _iter_begin_1d9a1ae19;
		}
		_iter_end_1d9a1ae19:;
	};
}



inline void _1d658c5c6_checkVars(_1d657b42d_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_table))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9a1c998:;
		if (it != expr_end) {
			jule::Ptr<_1d65d9018_Var> _211816_v = *it;
			{
				if (((((!((*(_211816_v))._field_Used)) && (!((*(_211816_v))._field_Constant))) && (!(_1d64d8742_IsIgnoreIdent((*(_211816_v))._field_Ident)))) && (!(_1d64d8a0b_IsAnonIdent((*(_211816_v))._field_Ident))))) {
					_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*(_211816_v))._field_Token, jule::Str::lit("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any((*(_211816_v))._field_Ident, &__jule_any_type4)}));
				};
			}
			_iter_next_1d9a1c998:;
			++it;
			goto _iter_begin_1d9a1c998;
		}
		_iter_end_1d9a1c998:;
	};
}



inline void _1d658c7c4_checkAliases(_1d657b42d_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_table))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9a200a5:;
		if (it != expr_end) {
			jule::Ptr<_1d6676c43_TypeAlias> _212616_a = *it;
			{
				if ((((!((*(_212616_a))._field_Used)) && (!(_1d64d8742_IsIgnoreIdent((*(_212616_a))._field_Ident)))) && (!(_1d64d8a0b_IsAnonIdent((*(_212616_a))._field_Ident))))) {
					_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*(_212616_a))._field_Token, jule::Str::lit("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any((*(_212616_a))._field_Ident, &__jule_any_type4)}));
				};
			}
			_iter_next_1d9a200a5:;
			++it;
			goto _iter_begin_1d9a200a5;
		}
		_iter_end_1d9a200a5:;
	};
}



inline void _1d658cb37_check(jule::Ptr<_1d657b42d_scopeChecker> _self_, jule::Ptr<_1d650b402_ScopeTree>* _213430_tree, jule::Ptr<_1d6574129_Scope>* _213453_s) {
	(*((*(_213453_s))))._field_Deferred=(*((*(_213430_tree))))._field_Deferred;
	(*((*(_213453_s))))._field_Unsafety=(*((*(_213430_tree))))._field_Unsafety;
	jule::I64 _21389_errors = (*((*(_self_))._field_s))._field_errors.len();;
	(*(_self_))._field_tree=(*(_213430_tree));
	(*(_self_))._field_scope=(*(_213453_s));
	_1d658bb69_checkTree(_self_);
	if ((_21389_errors == (*((*(_self_))._field_s))._field_errors.len())) {
		_1d658c5c6_checkVars(_self_.ptr());
		_1d658c7c4_checkAliases(_self_.ptr());
		if (_1d657da6d_isRoot(_self_.ptr())) {
			_1d658c1ca_checkGotos(_self_.ptr());
			_1d658c3c8_checkLabels(_self_.ptr());
		};
	};
}



inline jule::Ptr<_1d657b42d_scopeChecker> _1d658cdbd_newChildChecker(jule::Ptr<_1d657b42d_scopeChecker> _self_) {
	jule::Ptr<_1d657b42d_scopeChecker> _215813_base = _1d6570e06_newScopeCheckerBase(&((*(_self_))._field_s), nullptr);;
	(*(_215813_base))._field_parent=_self_;
	(*(_215813_base))._field_labels=(*(_self_))._field_labels;
	(*(_215813_base))._field_gotos=(*(_self_))._field_gotos;
	(*(_215813_base))._field_childIndex=static_cast<jule::I64>(((*(_self_))._field_childIndex + 1LL));
	return _215813_base;;
}





std::ostream &operator<<(std::ostream &_Stream, _1d657b42d_scopeChecker _Src) {
	_Stream << "scopeChecker{";
	_Stream << "calledFrom:" << _Src._field_calledFrom << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "childIndex:" << _Src._field_childIndex << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _1d658e870_checkCdef(_1d658e463_directiveChecker* _self_, jule::Ptr<_1d64ea7ed_Directive>* _1629_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1d9a27d6b:;
			{
				if ((*((*(_self_))._field_o.cast_ptr<_1d653226e_Fn>(&__jule_any_type64)))._field_Binded) {
					goto _match_end_1d9a280ad;
				};
				goto _case_begin_1d9a28113;
			}
		}
		else {
			_case_begin_1d9a28113:;
			{
				_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*((*(_1629_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_1629_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1d9a280ad:;
	};
	if (((*((*(_1629_d))))._field_Args.len() > 0LL)) {
		_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*((*(_1629_d))))._field_Args[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1d658eb28_checkTypedef(_1d658e463_directiveChecker* _self_, jule::Ptr<_1d64ea7ed_Directive>* _3232_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1d9a2aba4:;
			{
				if ((*((*(_self_))._field_o.cast_ptr<_1d651c2d1_Struct>(&__jule_any_type65)))._field_Binded) {
					goto _match_end_1d9a2ade6;
				};
				goto _case_begin_1d9a2ae4b;
			}
		}
		else {
			_case_begin_1d9a2ae4b:;
			{
				_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*((*(_3232_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_3232_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1d9a2ade6:;
	};
	if (((*((*(_3232_d))))._field_Args.len() > 0LL)) {
		_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*((*(_3232_d))))._field_Args[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1d658edd1_checkNamespace(_1d658e463_directiveChecker* _self_, jule::Ptr<_1d64ea7ed_Directive>* _4838_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1d9a2d9dc:;
			{
				if ((!((*((*(_self_))._field_o.cast_ptr<_1d651c2d1_Struct>(&__jule_any_type65)))._field_Binded))) {
					_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1d9a2dcea:;
			{
				if ((!((*((*(_self_))._field_o.cast_ptr<_1d653226e_Fn>(&__jule_any_type64)))._field_Binded))) {
					_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1d9a2dd61:;
			{
				if ((!((*((*(_self_))._field_o.cast_ptr<_1d65d9018_Var>(&__jule_any_type8)))._field_Binded))) {
					_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else {
			_case_begin_1d9a2dc84:;
			{
				_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1d9a2dc2e:;
	};
	if (((*((*(_4838_d))))._field_Args.len() == 0LL)) {
		_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Tag, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	} else if (((*((*(_4838_d))))._field_Args.len() > 1LL)) {
		_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Args[1LL], jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
	};
	jule::Ptr<_1d64d5cd3_Token> _739_arg = (*((*(_4838_d))))._field_Args[0LL];;
	if (((*(_739_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), _739_arg, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_739_arg))._field_Kind[0LL] != '\"')) {
		_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), _739_arg, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_4838_d))))._field_Args[0LL]))._field_Kind=(*(_739_arg))._field_Kind.slice(1LL, ((*(_739_arg))._field_Kind.len() - 1LL));
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1d9a39289:;
			{
				if ((_1d6670a83_findDirective(&((*((*(_self_))._field_d))), jule::Str::lit("typedef", 7)) == nullptr)) {
					jule::Ptr<_1d64ea7ed_Directive> _9021_typedef = jule::new_ptr<_1d64ea7ed_Directive>(_1d64ea7ed_Directive{._field_Tag=(*((*(_4838_d))))._field_Tag, });;
					(*((*(_9021_typedef))._field_Tag))._field_Kind=jule::Str::lit("typedef", 7);
					{ jule::Slice<jule::Ptr<_1d64ea7ed_Directive>> &__jule_push_dest = (*((*(_self_))._field_d)); __jule_push_dest.push(_9021_typedef); };
				};
			}
		}
		_match_end_1d9a39234:;
	};
}



inline void _1d6590189_checkDeprecated(_1d658e463_directiveChecker* _self_, jule::Ptr<_1d64ea7ed_Directive>* _9939_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1d9a3a5cb:;
			{
				if ((*((*(_self_))._field_o.cast_ptr<_1d651c2d1_Struct>(&__jule_any_type65)))._field_Binded) {
					_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*((*(_9939_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9939_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1d9a3b7db:;
			{
				jule::Ptr<_1d653226e_Fn> _10617_f = (*(_self_))._field_o.cast_ptr<_1d653226e_Fn>(&__jule_any_type64);;
				if ((((*(_10617_f))._field_Binded || _1d6532c0e_IsEntryPoint(_10617_f.ptr())) || _1d6532e95_IsInit(_10617_f.ptr()))) {
					_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*((*(_9939_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9939_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1d9a3b852:;
			{
				if ((*((*(_self_))._field_o.cast_ptr<_1d65d9018_Var>(&__jule_any_type8)))._field_Binded) {
					_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*((*(_9939_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9939_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else {
			_case_begin_1d9a3b2d0:;
			{
				_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*((*(_9939_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9939_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1d9a3b27a:;
	};
	if (((*((*(_9939_d))))._field_Args.len() == 0LL)) {
		return;;
	};
	if (((*((*(_9939_d))))._field_Args.len() > 1LL)) {
		_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*((*(_9939_d))))._field_Args[1LL], jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9939_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
	};
	jule::Ptr<_1d64d5cd3_Token> _1259_arg = (*((*(_9939_d))))._field_Args[0LL];;
	if (((*(_1259_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), _1259_arg, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_1259_arg))._field_Kind[0LL] != '\"')) {
		_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), _1259_arg, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_9939_d))))._field_Args[0LL]))._field_Kind=(*(_1259_arg))._field_Kind.slice(1LL, ((*(_1259_arg))._field_Kind.len() - 1LL));
}



inline void _1d6590442_checkTest(_1d658e463_directiveChecker* _self_, jule::Ptr<_1d64ea7ed_Directive>* _13929_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1d9a428d0:;
			{
				jule::Ptr<_1d653226e_Fn> _14213_f = (*(_self_))._field_o.cast_ptr<_1d653226e_Fn>(&__jule_any_type64);;
				if ((((!((*(_14213_f))._field_Binded)) && (!(_1d6532e95_IsInit(_14213_f.ptr())))) && (!(_1d6532c0e_IsEntryPoint(_14213_f.ptr()))))) {
					goto _match_end_1d9a472a8;
				};
				if (_1d6532978_IsMethod(_14213_f.ptr())) {
					_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*(_14213_f))._field_Token, jule::Str::lit("you cannot declare test methods", 31), jule::Slice<jule::Any>());
					goto _match_end_1d9a472a8;
				};
				goto _case_begin_1d9a4730d;
			}
		}
		else {
			_case_begin_1d9a4730d:;
			{
				_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*((*(_13929_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_13929_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1d9a472a8:;
	};
	if (((*((*(_13929_d))))._field_Args.len() > 0LL)) {
		_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*((*(_13929_d))))._field_Args[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1d65906ea_checkDirective(_1d658e463_directiveChecker* _self_, jule::Ptr<_1d64ea7ed_Directive>* _16038_d) {
	{
		auto &_match_expr{ (*((*((*(_16038_d))))._field_Tag))._field_Kind };
		
		if (_match_expr == jule::Str::lit("cdef", 4)) {
			_case_begin_1d9a4bdd4:;
			{
				_1d658e870_checkCdef(_self_, _16038_d);
			}
		}
		else if (_match_expr == jule::Str::lit("typedef", 7)) {
			_case_begin_1d9a4be4a:;
			{
				_1d658eb28_checkTypedef(_self_, _16038_d);
			}
		}
		else if (_match_expr == jule::Str::lit("namespace", 9)) {
			_case_begin_1d9a4beb1:;
			{
				_1d658edd1_checkNamespace(_self_, _16038_d);
			}
		}
		else if (_match_expr == jule::Str::lit("deprecated", 10)) {
			_case_begin_1d9a4c027:;
			{
				_1d6590189_checkDeprecated(_self_, _16038_d);
			}
		}
		else if (_match_expr == jule::Str::lit("test", 4)) {
			_case_begin_1d9a4d028:;
			{
				_1d6590442_checkTest(_self_, _16038_d);
			}
		}
		else if (_match_expr == jule::Str::lit("build", 5) || _match_expr == jule::Str::lit("pass", 4)) {
			_case_begin_1d9a4d08e:;
			{
				_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*((*(_16038_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_16038_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		else {
			_case_begin_1d9a4bd6d:;
			{
				_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*((*(_16038_d))))._field_Tag, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_16038_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1d9a4bcc4:;
	};
}



inline void _1d65908e8_check(_1d658e463_directiveChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_d)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9a50bc9:;
		if (it != expr_end) {
			jule::Ptr<_1d64ea7ed_Directive> _18121_d = *it;
			{
				_1d65906ea_checkDirective(_self_, &(_18121_d));
			}
			_iter_next_1d9a50bc9:;
			++it;
			goto _iter_begin_1d9a50bc9;
		}
		_iter_end_1d9a50bc9:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1d658e463_directiveChecker _Src) {
	_Stream << "directiveChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "o:" << _Src._field_o;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1d659590e_ImportInfo> _1d6595de8_SelectPackage(_1d659590e_ImportInfo* _self_, jule::Fn<jule::Bool(jule::Ptr<_1d659590e_ImportInfo>)> ) {
	return nullptr;;
}



inline jule::Ptr<_1d65d9018_Var> _1d65962e4_FindVar(_1d659590e_ImportInfo* _self_, jule::Str _18926_ident, jule::Bool ) {
	if ((!(_1d6597e50_isLookupable(_self_, &(_18926_ident))))) {
		return nullptr;;
	};
	return _1d6592de5_findVarInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_18926_ident), false);;
}



inline jule::Ptr<_1d6676c43_TypeAlias> _1d65966e0_FindTypeAlias(_1d659590e_ImportInfo* _self_, jule::Str _20132_ident, jule::Bool ) {
	if ((!(_1d6597e50_isLookupable(_self_, &(_20132_ident))))) {
		return nullptr;;
	};
	return _1d6593368_findTypeAliasInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_20132_ident), false);;
}



inline jule::Ptr<_1d651c2d1_Struct> _1d6596adb_FindStruct(_1d659590e_ImportInfo* _self_, jule::Str _21329_ident, jule::Bool ) {
	if ((!(_1d6597e50_isLookupable(_self_, &(_21329_ident))))) {
		return nullptr;;
	};
	return _1d6593797_findStructInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_21329_ident), false);;
}



inline jule::Ptr<_1d653226e_Fn> _1d6596ed7_FindFn(_1d659590e_ImportInfo* _self_, jule::Str _22525_ident, jule::Bool ) {
	if ((!(_1d6597e50_isLookupable(_self_, &(_22525_ident))))) {
		return nullptr;;
	};
	return _1d6593c4d_findFnInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_22525_ident), false);;
}



inline jule::Ptr<_1d654554b_Trait> _1d6597328_FindTrait(_1d659590e_ImportInfo* _self_, jule::Str _23628_ident) {
	if ((!(_1d6597e50_isLookupable(_self_, &(_23628_ident))))) {
		return nullptr;;
	};
	return _1d659408e_findTraitInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_23628_ident));;
}



inline jule::Ptr<_1d6547c57_Enum> _1d6597669_FindEnum(_1d659590e_ImportInfo* _self_, jule::Str _24727_ident) {
	if ((!(_1d6597e50_isLookupable(_self_, &(_24727_ident))))) {
		return nullptr;;
	};
	return _1d6594413_findEnumInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_24727_ident));;
}



inline jule::Ptr<_1d6549462_TypeEnum> _1d65979aa_FindTypeEnum(_1d659590e_ImportInfo* _self_, jule::Str _25831_ident) {
	if ((!(_1d6597e50_isLookupable(_self_, &(_25831_ident))))) {
		return nullptr;;
	};
	return _1d6594787_findTypeEnumInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_25831_ident));;
}



inline jule::Bool _1d6597e50_isLookupable(_1d659590e_ImportInfo* _self_, jule::Str* _26728_ident) {
	if ((*(_self_))._field_Binded) {
		return false;;
	};
	if ((!((*(_self_))._field_ImportAll))) {
		if ((((*(_self_))._field_Alias.len() != 0LL) || _1d6598291_existIdent(_self_, jule::Str::lit("self", 4)))) {
			return true;;
		};
		if (((*(_self_))._field_Selected.len() > 0LL)) {
			if ((!(_1d6598291_existIdent(_self_, (*(_26728_ident)))))) {
				return false;;
			};
		};
	};
	return true;;
}



inline jule::Bool _1d6598291_existIdent(_1d659590e_ImportInfo* _self_, jule::Str _28725_ident) {
	{
		auto expr = &((*(_self_))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9a6611d:;
		if (it != expr_end) {
			jule::Ptr<_1d64d5cd3_Token> *_28816_sident = it;
			{
				if (((*((*(_28816_sident))))._field_Kind == _28725_ident)) {
					return true;;
				};
			}
			_iter_next_1d9a6611d:;
			++it;
			goto _iter_begin_1d9a6611d;
		}
		_iter_end_1d9a6611d:;
	};
	return false;;
}



inline jule::Bool _1d6598527_isAccessibleViaSelection(_1d659590e_ImportInfo* _self_) {
	return (((*(_self_))._field_ImportAll || ((*(_self_))._field_Selected.len() == 0LL)) || _1d6598291_existIdent(_self_, jule::Str::lit("self", 4)));;
}





std::ostream &operator<<(std::ostream &_Stream, _1d659590e_ImportInfo _Src) {
	_Stream << "ImportInfo{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Duplicate:" << _Src._field_Duplicate << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Std:" << _Src._field_Std << ", ";
	_Stream << "ImportAll:" << _Src._field_ImportAll << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Package:" << _Src._field_Package << ", ";
	_Stream << "ModId:" << _Src._field_ModId;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1d659590e_ImportInfo> _1d6598cca_SelectPackage(_1d6598835_Package* _self_, jule::Fn<jule::Bool(jule::Ptr<_1d659590e_ImportInfo>)> ) {
	return nullptr;;
}



inline jule::Ptr<_1d65d9018_Var> _1d65991c6_FindVar(_1d6598835_Package* _self_, jule::Str _31426_ident, jule::Bool _31438_binded) {
	return _1d6592de5_findVarInPackage(&((*(_self_))._field_Files), &(_31426_ident), _31438_binded);;
}



inline jule::Ptr<_1d6676c43_TypeAlias> _1d65995c2_FindTypeAlias(_1d6598835_Package* _self_, jule::Str _32032_ident, jule::Bool _32044_binded) {
	return _1d6593368_findTypeAliasInPackage(&((*(_self_))._field_Files), &(_32032_ident), _32044_binded);;
}



inline jule::Ptr<_1d651c2d1_Struct> _1d65999bd_FindStruct(_1d6598835_Package* _self_, jule::Str _32629_ident, jule::Bool _32641_binded) {
	return _1d6593797_findStructInPackage(&((*(_self_))._field_Files), &(_32629_ident), _32641_binded);;
}



inline jule::Ptr<_1d653226e_Fn> _1d6599db9_FindFn(_1d6598835_Package* _self_, jule::Str _33225_ident, jule::Bool _33237_binded) {
	return _1d6593c4d_findFnInPackage(&((*(_self_))._field_Files), &(_33225_ident), _33237_binded);;
}



inline jule::Ptr<_1d654554b_Trait> _1d659a20a_FindTrait(_1d6598835_Package* _self_, jule::Str _33828_ident) {
	return _1d659408e_findTraitInPackage(&((*(_self_))._field_Files), &(_33828_ident));;
}



inline jule::Ptr<_1d6547c57_Enum> _1d659a54b_FindEnum(_1d6598835_Package* _self_, jule::Str _34427_ident) {
	return _1d6594413_findEnumInPackage(&((*(_self_))._field_Files), &(_34427_ident));;
}



inline jule::Ptr<_1d6549462_TypeEnum> _1d659a88c_FindTypeEnum(_1d6598835_Package* _self_, jule::Str _35031_ident) {
	return _1d6594787_findTypeEnumInPackage(&((*(_self_))._field_Files), &(_35031_ident));;
}





std::ostream &operator<<(std::ostream &_Stream, _1d6598835_Package _Src) {
	_Stream << "Package{";
	_Stream << "Files:" << _Src._field_Files;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1d655c002_comptimeTypeInfo> _1d65b55bb_pushComptimeTypeInfo(_1d65b5159_commonSemaMeta* _self_, jule::Ptr<_1d6677a35_TypeKind>* _21744_t) {
	{
		auto expr = &((*(_self_))._field_comptimeTypeInfos);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9a983b4:;
		if (it != expr_end) {
			jule::Ptr<_1d655c002_comptimeTypeInfo> _21821_t2 = *it;
			{
				if ((((*((*(_21821_t2))._field_base))._field_BindIdent == (*((*(_21744_t))))._field_BindIdent) && _1d667823e_Equal((*(_21821_t2))._field_base, (*(_21744_t))))) {
					return _21821_t2;;
				};
			}
			_iter_next_1d9a983b4:;
			++it;
			goto _iter_begin_1d9a983b4;
		}
		_iter_end_1d9a983b4:;
	};
	jule::Ptr<_1d655c002_comptimeTypeInfo> _22313_t1 = jule::new_ptr<_1d655c002_comptimeTypeInfo>(_1d655c002_comptimeTypeInfo{._field_base=(*(_21744_t))});;
	{ jule::Slice<jule::Ptr<_1d655c002_comptimeTypeInfo>> &__jule_push_dest = (*(_self_))._field_comptimeTypeInfos; __jule_push_dest.push(_22313_t1); };
	return _22313_t1;;
}





std::ostream &operator<<(std::ostream &_Stream, _1d65b5159_commonSemaMeta _Src) {
	_Stream << "commonSemaMeta{";
	_Stream << "comptimeTypeInfos:" << _Src._field_comptimeTypeInfos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1d659590e_ImportInfo> _1d65b6226_SelectPackage(_1d65b5c81_Sema* _self_, jule::Fn<jule::Bool(jule::Ptr<_1d659590e_ImportInfo>)> _24632_selector) {
	return _1d664235c_SelectPackage((*(_self_))._field_file.ptr(), _24632_selector);;
}



inline jule::Ptr<_1d65d9018_Var> _1d65b6622_FindVar(_1d65b5c81_Sema* _self_, jule::Str _25626_ident, jule::Bool _25638_binded) {
	jule::Ptr<_1d65d9018_Var> _25813_v = _1d6592de5_findVarInPackage(&((*(_self_))._field_files), &(_25626_ident), _25638_binded);;
	if ((_25813_v != nullptr)) {
		return _25813_v;;
	};
	if ((!(_1d65b2d7c_IsPub(_25626_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9a9c3da:;
		if (it != expr_end) {
			jule::Ptr<_1d659590e_ImportInfo> _26921_imp = *it;
			{
				if ((!(_1d65b3cc3_impIsLookupable(&(_26921_imp), &(_25626_ident))))) {
					goto _iter_next_1d9a9c3da;
				};
				_25813_v=_1d65962e4_FindVar(_26921_imp.ptr(), _25626_ident, _25638_binded);
				if (((_25813_v != nullptr) && _1d65b912a_isAccessibleDefine(_self_, (*(_25813_v))._field_Public, (*(_25813_v))._field_Token))) {
					return _25813_v;;
				};
			}
			_iter_next_1d9a9c3da:;
			++it;
			goto _iter_begin_1d9a9c3da;
		}
		_iter_end_1d9a9c3da:;
	};
	return nullptr;;
}



inline jule::Ptr<_1d6676c43_TypeAlias> _1d65b6a1d_FindTypeAlias(_1d65b5c81_Sema* _self_, jule::Str _28832_ident, jule::Bool _28844_binded) {
	jule::Ptr<_1d6676c43_TypeAlias> _29013_ta = _1d6593368_findTypeAliasInPackage(&((*(_self_))._field_files), &(_28832_ident), _28844_binded);;
	if ((_29013_ta != nullptr)) {
		return _29013_ta;;
	};
	if ((!(_1d65b2d7c_IsPub(_28832_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9aa0344:;
		if (it != expr_end) {
			jule::Ptr<_1d659590e_ImportInfo> _30121_imp = *it;
			{
				if ((!(_1d65b3cc3_impIsLookupable(&(_30121_imp), &(_28832_ident))))) {
					goto _iter_next_1d9aa0344;
				};
				_29013_ta=_1d65966e0_FindTypeAlias(_30121_imp.ptr(), _28832_ident, _28844_binded);
				if (((_29013_ta != nullptr) && _1d65b912a_isAccessibleDefine(_self_, (*(_29013_ta))._field_Public, (*(_29013_ta))._field_Token))) {
					return _29013_ta;;
				};
			}
			_iter_next_1d9aa0344:;
			++it;
			goto _iter_begin_1d9aa0344;
		}
		_iter_end_1d9aa0344:;
	};
	return nullptr;;
}



inline jule::Ptr<_1d651c2d1_Struct> _1d65b6e19_FindStruct(_1d65b5c81_Sema* _self_, jule::Str _32029_ident, jule::Bool _32041_binded) {
	jule::Ptr<_1d651c2d1_Struct> _32213_s = _1d6593797_findStructInPackage(&((*(_self_))._field_files), &(_32029_ident), _32041_binded);;
	if ((_32213_s != nullptr)) {
		return _32213_s;;
	};
	if ((!(_1d65b2d7c_IsPub(_32029_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9aa329d:;
		if (it != expr_end) {
			jule::Ptr<_1d659590e_ImportInfo> _33321_imp = *it;
			{
				if ((!(_1d65b3cc3_impIsLookupable(&(_33321_imp), &(_32029_ident))))) {
					goto _iter_next_1d9aa329d;
				};
				_32213_s=_1d6596adb_FindStruct(_33321_imp.ptr(), _32029_ident, _32041_binded);
				if (((_32213_s != nullptr) && _1d65b912a_isAccessibleDefine(_self_, (*(_32213_s))._field_Public, (*(_32213_s))._field_Token))) {
					return _32213_s;;
				};
			}
			_iter_next_1d9aa329d:;
			++it;
			goto _iter_begin_1d9aa329d;
		}
		_iter_end_1d9aa329d:;
	};
	return nullptr;;
}



inline jule::Ptr<_1d653226e_Fn> _1d65b7315_FindFn(_1d65b5c81_Sema* _self_, jule::Str _35125_ident, jule::Bool _35137_binded) {
	jule::Ptr<_1d653226e_Fn> _35313_f = _1d6593c4d_findFnInPackage(&((*(_self_))._field_files), &(_35125_ident), _35137_binded);;
	if ((_35313_f != nullptr)) {
		return _35313_f;;
	};
	if ((!(_1d65b2d7c_IsPub(_35125_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9aa6207:;
		if (it != expr_end) {
			jule::Ptr<_1d659590e_ImportInfo> _36421_imp = *it;
			{
				if ((!(_1d65b3cc3_impIsLookupable(&(_36421_imp), &(_35125_ident))))) {
					goto _iter_next_1d9aa6207;
				};
				_35313_f=_1d6596ed7_FindFn(_36421_imp.ptr(), _35125_ident, _35137_binded);
				if (((_35313_f != nullptr) && _1d65b912a_isAccessibleDefine(_self_, (*(_35313_f))._field_Public, (*(_35313_f))._field_Token))) {
					return _35313_f;;
				};
			}
			_iter_next_1d9aa6207:;
			++it;
			goto _iter_begin_1d9aa6207;
		}
		_iter_end_1d9aa6207:;
	};
	return nullptr;;
}



inline jule::Ptr<_1d654554b_Trait> _1d65b7656_FindTrait(_1d65b5c81_Sema* _self_, jule::Str _38328_ident) {
	jule::Ptr<_1d654554b_Trait> _38513_t = _1d659408e_findTraitInPackage(&((*(_self_))._field_files), &(_38328_ident));;
	if ((_38513_t != nullptr)) {
		return _38513_t;;
	};
	if ((!(_1d65b2d7c_IsPub(_38328_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9aa8e0d:;
		if (it != expr_end) {
			jule::Ptr<_1d659590e_ImportInfo> _39621_imp = *it;
			{
				if ((!(_1d65b3cc3_impIsLookupable(&(_39621_imp), &(_38328_ident))))) {
					goto _iter_next_1d9aa8e0d;
				};
				_38513_t=_1d6597328_FindTrait(_39621_imp.ptr(), _38328_ident);
				if (((_38513_t != nullptr) && _1d65b912a_isAccessibleDefine(_self_, (*(_38513_t))._field_Public, (*(_38513_t))._field_Token))) {
					return _38513_t;;
				};
			}
			_iter_next_1d9aa8e0d:;
			++it;
			goto _iter_begin_1d9aa8e0d;
		}
		_iter_end_1d9aa8e0d:;
	};
	return nullptr;;
}



inline jule::Ptr<_1d6547c57_Enum> _1d65b7997_FindEnum(_1d65b5c81_Sema* _self_, jule::Str _41527_ident) {
	jule::Ptr<_1d6547c57_Enum> _41713_e = _1d6594413_findEnumInPackage(&((*(_self_))._field_files), &(_41527_ident));;
	if ((_41713_e != nullptr)) {
		return _41713_e;;
	};
	if ((!(_1d65b2d7c_IsPub(_41527_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9aabb14:;
		if (it != expr_end) {
			jule::Ptr<_1d659590e_ImportInfo> _42821_imp = *it;
			{
				if ((!(_1d65b3cc3_impIsLookupable(&(_42821_imp), &(_41527_ident))))) {
					goto _iter_next_1d9aabb14;
				};
				_41713_e=_1d6597669_FindEnum(_42821_imp.ptr(), _41527_ident);
				if (((_41713_e != nullptr) && _1d65b912a_isAccessibleDefine(_self_, (*(_41713_e))._field_Public, (*(_41713_e))._field_Token))) {
					return _41713_e;;
				};
			}
			_iter_next_1d9aabb14:;
			++it;
			goto _iter_begin_1d9aabb14;
		}
		_iter_end_1d9aabb14:;
	};
	return nullptr;;
}



inline jule::Ptr<_1d6549462_TypeEnum> _1d65b7cd8_FindTypeEnum(_1d65b5c81_Sema* _self_, jule::Str _44731_ident) {
	jule::Ptr<_1d6549462_TypeEnum> _44913_e = _1d6594787_findTypeEnumInPackage(&((*(_self_))._field_files), &(_44731_ident));;
	if ((_44913_e != nullptr)) {
		return _44913_e;;
	};
	if ((!(_1d65b2d7c_IsPub(_44731_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9aae81a:;
		if (it != expr_end) {
			jule::Ptr<_1d659590e_ImportInfo> _46021_imp = *it;
			{
				if ((!(_1d65b3cc3_impIsLookupable(&(_46021_imp), &(_44731_ident))))) {
					goto _iter_next_1d9aae81a;
				};
				_44913_e=_1d65979aa_FindTypeEnum(_46021_imp.ptr(), _44731_ident);
				if (((_44913_e != nullptr) && _1d65b912a_isAccessibleDefine(_self_, (*(_44913_e))._field_Public, (*(_44913_e))._field_Token))) {
					return _44913_e;;
				};
			}
			_iter_next_1d9aae81a:;
			++it;
			goto _iter_begin_1d9aae81a;
		}
		_iter_end_1d9aae81a:;
	};
	return nullptr;;
}



inline jule::Bool _1d65b81e5_isFlag(_1d65b5c81_Sema* _self_, jule::I64 _47621_flags) {
	return (((*(_self_))._field_flags & _47621_flags) == _47621_flags);;
}



inline void _1d65b849d_setCurrentFile(_1d65b5c81_Sema* _self_, jule::Ptr<_1d6641d73_SymbolTable> _47837_f) {
	(*(_self_))._field_file=_47837_f;
}



inline void _1d65b88bb_pushErr(_1d65b5c81_Sema* _self_, jule::Ptr<_1d64d5cd3_Token> _48026_token, jule::Str _48041_fmt, jule::Slice<jule::Any> _48054_args) {
	{ jule::Slice<_1e0235a7e_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1d65b394e_compilerErr(&(_48026_token), true, _48041_fmt, _48054_args)); };
}



inline void _1d65b8c2e_pushSuggestion(_1d65b5c81_Sema* _self_, jule::Str _48533_fmt, jule::Slice<jule::Any> _48546_args) {
	{
		_1d65b4e7d_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _48533_fmt, _48546_args);
	};
}



inline jule::Bool _1d65b912a_isAccessibleDefine(_1d65b5c81_Sema* _self_, jule::Bool _49033_public, jule::Ptr<_1d64d5cd3_Token> _49047_token) {
	return ((_49033_public || ((*(_49047_token))._field_File == nullptr)) || (_1d64dbc1d_Dir((*((*(_self_))._field_file))._field_File.ptr()) == _1d64dbc1d_Dir((*(_49047_token))._field_File.ptr())));;
}



inline jule::Bool _1d65b95d1_isDuplicatedIdent(_1d65b5c81_Sema* _self_, jule::Uintptr _49732_itself, jule::Str* _49750_ident, jule::Bool _49762_binded) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9ab6190:;
		if (it != expr_end) {
			jule::Ptr<_1d6641d73_SymbolTable> *_49816_f = it;
			{
				if (_1d6645393_isDuplicatedIdent((*(_49816_f)).ptr(), _49732_itself, _49750_ident, _49762_binded)) {
					return true;;
				};
				{
					auto expr = &((*((*(_49816_f))))._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d9abc020:;
					if (it != expr_end) {
						jule::Ptr<_1d659590e_ImportInfo> *_50320_imp = it;
						{
							{
								auto expr = &((*((*(_50320_imp))))._field_Selected);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1d9abc8e4:;
								if (it != expr_end) {
									jule::Ptr<_1d64d5cd3_Token> *_50424_selected = it;
									{
										if (((*((*(_50424_selected))))._field_Kind == (*(_49750_ident)))) {
											return true;;
										};
									}
									_iter_next_1d9abc8e4:;
									++it;
									goto _iter_begin_1d9abc8e4;
								}
								_iter_end_1d9abc8e4:;
							};
						}
						_iter_next_1d9abc020:;
						++it;
						goto _iter_begin_1d9abc020;
					}
					_iter_end_1d9abc020:;
				};
			}
			_iter_next_1d9ab6190:;
			++it;
			goto _iter_begin_1d9ab6190;
		}
		_iter_end_1d9ab6190:;
	};
	return false;;
}



inline void _1d65b9944_checkDirectives(jule::Ptr<_1d65b5c81_Sema> _self_, jule::Slice<jule::Ptr<_1d64ea7ed_Directive>>* _51440_d, jule::Any _51466_o) {
	_1d658e463_directiveChecker _51513_dc = _1d658e463_directiveChecker{._field_s=_self_, ._field_d=((jule::Ptr<jule::Slice<jule::Ptr<_1d64ea7ed_Directive>>>)(_51440_d)), ._field_o=_51466_o};;
	_1d65908e8_check(&_51513_dc);
}



inline jule::Bool _1d65b9dea_checkGenericQuantity(_1d65b5c81_Sema* _self_, jule::I64 _52339_required, jule::I64 _52354_given, jule::Ptr<_1d64d5cd3_Token> _52366_token) {
	jule::Bool __jule_func_result = false;
	{
		
		if (((_52339_required == 0LL) && (_52354_given > 0LL))) {
			_case_begin_1d9abee68:;
			{
				_1d65b88bb_pushErr(_self_, _52366_token, jule::Str::lit("type have not generics but instantiate like generics", 52), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if (((_52339_required > 0LL) && (_52354_given == 0LL))) {
			_case_begin_1d9abeee0:;
			{
				_1d65b88bb_pushErr(_self_, _52366_token, jule::Str::lit("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_52339_required < _52354_given)) {
			_case_begin_1d9ac0067:;
			{
				_1d65b88bb_pushErr(_self_, _52366_token, jule::Str::lit("overflow generics", 17), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_52339_required > _52354_given)) {
			_case_begin_1d9ac0287:;
			{
				_1d65b88bb_pushErr(_self_, _52366_token, jule::Str::lit("missing generics", 16), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1d9abed7a:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1d9abecae:;
	};
}



inline jule::Bool _1d65ba2e6_isDuplicatedImportSelection(_1d65b5c81_Sema* _self_, jule::Uintptr _54242_itself, jule::Str* _54260_ident) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9ac2ce5:;
		if (it != expr_end) {
			jule::Ptr<_1d659590e_ImportInfo> *_54316_imp = it;
			{
				if ((static_cast<jule::Uintptr>((*(_54316_imp))) == _54242_itself)) {
					goto _iter_end_1d9ac2ce5;
				};
				if (_1d6598291_existIdent((*(_54316_imp)).ptr(), (*(_54260_ident)))) {
					return true;;
				};
			}
			_iter_next_1d9ac2ce5:;
			++it;
			goto _iter_begin_1d9ac2ce5;
		}
		_iter_end_1d9ac2ce5:;
	};
	return false;;
}



inline jule::Any _1d65ba6e2_getImportDef(_1d65b5c81_Sema* _self_, jule::Str* _55528_ident, jule::Ptr<_1d659590e_ImportInfo>* _55545_imp) {
	if ((_1d675e7ed_findPackageBuiltinDef(&((*((*(_55545_imp))))._field_LinkPath), _55528_ident) != nullptr)) {
		return jule::Any(true, &__jule_any_type3);;
	};
	{
		auto expr = &((*((*((*(_55545_imp))))._field_Package))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9ac4dd5:;
		if (it != expr_end) {
			jule::Ptr<_1d6641d73_SymbolTable> _55921_f = *it;
			{
				;
				jule::Any _56217_def = _1d6644ddc_defByIdent(_55921_f.ptr(), _55528_ident, false);;
				if ((_56217_def != nullptr)) {
					return _56217_def;;
				};
			}
			_iter_next_1d9ac4dd5:;
			++it;
			goto _iter_begin_1d9ac4dd5;
		}
		_iter_end_1d9ac4dd5:;
	};
	return nullptr;;
}



inline jule::Bool _1d9acb2d7_checkImportSelection(_1d65b5c81_Sema* _self_, jule::Ptr<_1d64d5cd3_Token>* _57043_ident, jule::Ptr<_1d65d9018_Var>* _57059_s) {
	if ((!(_1d65b912a_isAccessibleDefine(_self_, (*((*(_57059_s))))._field_Public, (*((*(_57059_s))))._field_Token)))) {
		_1d65b88bb_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_57043_ident))))._field_Kind, &__jule_any_type4)}));
		_1d65b8c2e_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1d6594cc6_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_57059_s))))._field_Ident), false) != nullptr)) {
		_1d65b88bb_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_57059_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1d9ad042e_checkImportSelection(_1d65b5c81_Sema* _self_, jule::Ptr<_1d64d5cd3_Token>* _57043_ident, jule::Ptr<_1d6676c43_TypeAlias>* _57059_s) {
	if ((!(_1d65b912a_isAccessibleDefine(_self_, (*((*(_57059_s))))._field_Public, (*((*(_57059_s))))._field_Token)))) {
		_1d65b88bb_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_57043_ident))))._field_Kind, &__jule_any_type4)}));
		_1d65b8c2e_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1d6594cc6_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_57059_s))))._field_Ident), false) != nullptr)) {
		_1d65b88bb_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_57059_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1d9ad4532_checkImportSelection(_1d65b5c81_Sema* _self_, jule::Ptr<_1d64d5cd3_Token>* _57043_ident, jule::Ptr<_1d651c2d1_Struct>* _57059_s) {
	if ((!(_1d65b912a_isAccessibleDefine(_self_, (*((*(_57059_s))))._field_Public, (*((*(_57059_s))))._field_Token)))) {
		_1d65b88bb_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_57043_ident))))._field_Kind, &__jule_any_type4)}));
		_1d65b8c2e_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1d6594cc6_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_57059_s))))._field_Ident), false) != nullptr)) {
		_1d65b88bb_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_57059_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1d9ad87bc_checkImportSelection(_1d65b5c81_Sema* _self_, jule::Ptr<_1d64d5cd3_Token>* _57043_ident, jule::Ptr<_1d654554b_Trait>* _57059_s) {
	if ((!(_1d65b912a_isAccessibleDefine(_self_, (*((*(_57059_s))))._field_Public, (*((*(_57059_s))))._field_Token)))) {
		_1d65b88bb_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_57043_ident))))._field_Kind, &__jule_any_type4)}));
		_1d65b8c2e_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1d6594cc6_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_57059_s))))._field_Ident), false) != nullptr)) {
		_1d65b88bb_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_57059_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1d9adc8c0_checkImportSelection(_1d65b5c81_Sema* _self_, jule::Ptr<_1d64d5cd3_Token>* _57043_ident, jule::Ptr<_1d6547c57_Enum>* _57059_s) {
	if ((!(_1d65b912a_isAccessibleDefine(_self_, (*((*(_57059_s))))._field_Public, (*((*(_57059_s))))._field_Token)))) {
		_1d65b88bb_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_57043_ident))))._field_Kind, &__jule_any_type4)}));
		_1d65b8c2e_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1d6594cc6_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_57059_s))))._field_Ident), false) != nullptr)) {
		_1d65b88bb_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_57059_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1d9ae19c3_checkImportSelection(_1d65b5c81_Sema* _self_, jule::Ptr<_1d64d5cd3_Token>* _57043_ident, jule::Ptr<_1d6549462_TypeEnum>* _57059_s) {
	if ((!(_1d65b912a_isAccessibleDefine(_self_, (*((*(_57059_s))))._field_Public, (*((*(_57059_s))))._field_Token)))) {
		_1d65b88bb_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_57043_ident))))._field_Kind, &__jule_any_type4)}));
		_1d65b8c2e_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1d6594cc6_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_57059_s))))._field_Ident), false) != nullptr)) {
		_1d65b88bb_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_57059_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1d9ae5ac6_checkImportSelection(_1d65b5c81_Sema* _self_, jule::Ptr<_1d64d5cd3_Token>* _57043_ident, jule::Ptr<_1d653226e_Fn>* _57059_s) {
	if ((!(_1d65b912a_isAccessibleDefine(_self_, (*((*(_57059_s))))._field_Public, (*((*(_57059_s))))._field_Token)))) {
		_1d65b88bb_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_57043_ident))))._field_Kind, &__jule_any_type4)}));
		_1d65b8c2e_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1d6594cc6_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_57059_s))))._field_Ident), false) != nullptr)) {
		_1d65b88bb_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_57059_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}



inline jule::Bool _1d65bae2e_checkImportSelectedSelections(_1d65b5c81_Sema* _self_, jule::Ptr<_1d659590e_ImportInfo>* _58453_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_58453_imp))))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9ac6a85:;
		if (it != expr_end) {
			jule::Ptr<_1d64d5cd3_Token> _58616_ident = *it;
			{
				if ((*(_58616_ident))._field_Kind.equal("self", 4)) {
					goto _iter_next_1d9ac6a85;
				};
				if (_1d65ba2e6_isDuplicatedImportSelection(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_58453_imp)))), &((*(_58616_ident))._field_Kind))) {
					_1d65b88bb_pushErr(_self_, _58616_ident, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_58616_ident))._field_Kind, &__jule_any_type4)}));
					_1d65b8c2e_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1d9ac6a85;
				};
				jule::Any _59817_def = _1d65ba6e2_getImportDef(_self_, &((*(_58616_ident))._field_Kind), _58453_imp);;
				{
					auto &_match_expr{ _59817_def };
					
					if (_match_expr.type == &__jule_any_type3) {
						_case_begin_1d9ac7b30:;
						{
							goto _iter_next_1d9ac6a85;
						}
					}
					else if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1d9ac94b1:;
						{
							jule::Ptr<_1d65d9018_Var> _60421_v = _59817_def.cast_ptr<_1d65d9018_Var>(&__jule_any_type8);;
							__jule_func_result=(_1d9acb2d7_checkImportSelection(_self_, &(_58616_ident), &(_60421_v)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type66) {
						_case_begin_1d9ac9527:;
						{
							jule::Ptr<_1d6676c43_TypeAlias> _60721_ta = _59817_def.cast_ptr<_1d6676c43_TypeAlias>(&__jule_any_type66);;
							__jule_func_result=(_1d9ad042e_checkImportSelection(_self_, &(_58616_ident), &(_60721_ta)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type65) {
						_case_begin_1d9aca160:;
						{
							jule::Ptr<_1d651c2d1_Struct> _61021_s = _59817_def.cast_ptr<_1d651c2d1_Struct>(&__jule_any_type65);;
							__jule_func_result=(_1d9ad4532_checkImportSelection(_self_, &(_58616_ident), &(_61021_s)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type10) {
						_case_begin_1d9aca1c6:;
						{
							jule::Ptr<_1d654554b_Trait> _61321_t = _59817_def.cast_ptr<_1d654554b_Trait>(&__jule_any_type10);;
							__jule_func_result=(_1d9ad87bc_checkImportSelection(_self_, &(_58616_ident), &(_61321_t)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type67) {
						_case_begin_1d9aca23c:;
						{
							jule::Ptr<_1d6547c57_Enum> _61621_e = _59817_def.cast_ptr<_1d6547c57_Enum>(&__jule_any_type67);;
							__jule_func_result=(_1d9adc8c0_checkImportSelection(_self_, &(_58616_ident), &(_61621_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type68) {
						_case_begin_1d9aca2a3:;
						{
							jule::Ptr<_1d6549462_TypeEnum> _61921_e = _59817_def.cast_ptr<_1d6549462_TypeEnum>(&__jule_any_type68);;
							__jule_func_result=(_1d9ae19c3_checkImportSelection(_self_, &(_58616_ident), &(_61921_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type64) {
						_case_begin_1d9aca319:;
						{
							jule::Ptr<_1d653226e_Fn> _62221_f = _59817_def.cast_ptr<_1d653226e_Fn>(&__jule_any_type64);;
							__jule_func_result=(_1d9ae5ac6_checkImportSelection(_self_, &(_58616_ident), &(_62221_f)) && __jule_func_result);
						}
					}
					else {
						_case_begin_1d9ac93a1:;
						{
							_1d65b88bb_pushErr(_self_, _58616_ident, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_58616_ident))._field_Kind, &__jule_any_type4)}));
							__jule_func_result=false;
							goto _iter_next_1d9ac6a85;
						}
					}
					_match_end_1d9ac8e83:;
				};
			}
			_iter_next_1d9ac6a85:;
			++it;
			goto _iter_begin_1d9ac6a85;
		}
		_iter_end_1d9ac6a85:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1d9aea2a1_checkImportsAllSelectionsFromCollection(_1d65b5c81_Sema* _self_, jule::Slice<jule::Ptr<_1d65d9018_Var>>* _63362_s, jule::Ptr<_1d64d5cd3_Token>* _63371_et) {
	jule::Bool _63413_ok = true;;
	{
		auto expr = _63362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9aebdeb:;
		if (it != expr_end) {
			jule::Ptr<_1d65d9018_Var> *_63516_d = it;
			{
				if ((*((*(_63516_d))))._field_Public) {
					_63413_ok=(_1d9acb2d7_checkImportSelection(_self_, _63371_et, _63516_d) && _63413_ok);
				};
			}
			_iter_next_1d9aebdeb:;
			++it;
			goto _iter_begin_1d9aebdeb;
		}
		_iter_end_1d9aebdeb:;
	};
	return _63413_ok;;
}

inline jule::Bool _1d9aeb439_checkImportsAllSelectionsFromCollection(_1d65b5c81_Sema* _self_, jule::Slice<jule::Ptr<_1d6676c43_TypeAlias>>* _63362_s, jule::Ptr<_1d64d5cd3_Token>* _63371_et) {
	jule::Bool _63413_ok = true;;
	{
		auto expr = _63362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9aee65c:;
		if (it != expr_end) {
			jule::Ptr<_1d6676c43_TypeAlias> *_63516_d = it;
			{
				if ((*((*(_63516_d))))._field_Public) {
					_63413_ok=(_1d9ad042e_checkImportSelection(_self_, _63371_et, _63516_d) && _63413_ok);
				};
			}
			_iter_next_1d9aee65c:;
			++it;
			goto _iter_begin_1d9aee65c;
		}
		_iter_end_1d9aee65c:;
	};
	return _63413_ok;;
}

inline jule::Bool _1d9aedbde_checkImportsAllSelectionsFromCollection(_1d65b5c81_Sema* _self_, jule::Slice<jule::Ptr<_1d651c2d1_Struct>>* _63362_s, jule::Ptr<_1d64d5cd3_Token>* _63371_et) {
	jule::Bool _63413_ok = true;;
	{
		auto expr = _63362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9b01dac:;
		if (it != expr_end) {
			jule::Ptr<_1d651c2d1_Struct> *_63516_d = it;
			{
				if ((*((*(_63516_d))))._field_Public) {
					_63413_ok=(_1d9ad4532_checkImportSelection(_self_, _63371_et, _63516_d) && _63413_ok);
				};
			}
			_iter_next_1d9b01dac:;
			++it;
			goto _iter_begin_1d9b01dac;
		}
		_iter_end_1d9b01dac:;
	};
	return _63413_ok;;
}

inline jule::Bool _1d9b0143e_checkImportsAllSelectionsFromCollection(_1d65b5c81_Sema* _self_, jule::Slice<jule::Ptr<_1d653226e_Fn>>* _63362_s, jule::Ptr<_1d64d5cd3_Token>* _63371_et) {
	jule::Bool _63413_ok = true;;
	{
		auto expr = _63362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9b0462e:;
		if (it != expr_end) {
			jule::Ptr<_1d653226e_Fn> *_63516_d = it;
			{
				if ((*((*(_63516_d))))._field_Public) {
					_63413_ok=(_1d9ae5ac6_checkImportSelection(_self_, _63371_et, _63516_d) && _63413_ok);
				};
			}
			_iter_next_1d9b0462e:;
			++it;
			goto _iter_begin_1d9b0462e;
		}
		_iter_end_1d9b0462e:;
	};
	return _63413_ok;;
}

inline jule::Bool _1d9b03b39_checkImportsAllSelectionsFromCollection(_1d65b5c81_Sema* _self_, jule::Slice<jule::Ptr<_1d654554b_Trait>>* _63362_s, jule::Ptr<_1d64d5cd3_Token>* _63371_et) {
	jule::Bool _63413_ok = true;;
	{
		auto expr = _63362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9b06d3a:;
		if (it != expr_end) {
			jule::Ptr<_1d654554b_Trait> *_63516_d = it;
			{
				if ((*((*(_63516_d))))._field_Public) {
					_63413_ok=(_1d9ad87bc_checkImportSelection(_self_, _63371_et, _63516_d) && _63413_ok);
				};
			}
			_iter_next_1d9b06d3a:;
			++it;
			goto _iter_begin_1d9b06d3a;
		}
		_iter_end_1d9b06d3a:;
	};
	return _63413_ok;;
}

inline jule::Bool _1d9b06411_checkImportsAllSelectionsFromCollection(_1d65b5c81_Sema* _self_, jule::Slice<jule::Ptr<_1d6547c57_Enum>>* _63362_s, jule::Ptr<_1d64d5cd3_Token>* _63371_et) {
	jule::Bool _63413_ok = true;;
	{
		auto expr = _63362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9b09546:;
		if (it != expr_end) {
			jule::Ptr<_1d6547c57_Enum> *_63516_d = it;
			{
				if ((*((*(_63516_d))))._field_Public) {
					_63413_ok=(_1d9adc8c0_checkImportSelection(_self_, _63371_et, _63516_d) && _63413_ok);
				};
			}
			_iter_next_1d9b09546:;
			++it;
			goto _iter_begin_1d9b09546;
		}
		_iter_end_1d9b09546:;
	};
	return _63413_ok;;
}

inline jule::Bool _1d9b08b1c_checkImportsAllSelectionsFromCollection(_1d65b5c81_Sema* _self_, jule::Slice<jule::Ptr<_1d6549462_TypeEnum>>* _63362_s, jule::Ptr<_1d64d5cd3_Token>* _63371_et) {
	jule::Bool _63413_ok = true;;
	{
		auto expr = _63362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9b0bcda:;
		if (it != expr_end) {
			jule::Ptr<_1d6549462_TypeEnum> *_63516_d = it;
			{
				if ((*((*(_63516_d))))._field_Public) {
					_63413_ok=(_1d9ae19c3_checkImportSelection(_self_, _63371_et, _63516_d) && _63413_ok);
				};
			}
			_iter_next_1d9b0bcda:;
			++it;
			goto _iter_begin_1d9b0bcda;
		}
		_iter_end_1d9b0bcda:;
	};
	return _63413_ok;;
}



inline jule::Bool _1d65bb66b_checkImportAllSelections(_1d65b5c81_Sema* _self_, jule::Ptr<_1d659590e_ImportInfo>* _64344_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*((*(_64344_imp))))._field_Package))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9ac6ed6:;
		if (it != expr_end) {
			jule::Ptr<_1d6641d73_SymbolTable> *_64516_file = it;
			{
				__jule_func_result=(_1d9aea2a1_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64516_file))))._field_Vars), &((*((*(_64344_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1d9aeb439_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64516_file))))._field_TypeAliases), &((*((*(_64344_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1d9aedbde_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64516_file))))._field_Structs), &((*((*(_64344_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1d9b0143e_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64516_file))))._field_Funcs), &((*((*(_64344_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1d9b03b39_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64516_file))))._field_Traits), &((*((*(_64344_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1d9b06411_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64516_file))))._field_Enums), &((*((*(_64344_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1d9b08b1c_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64516_file))))._field_TypeEnums), &((*((*(_64344_imp))))._field_Token)) && __jule_func_result);
			}
			_iter_next_1d9ac6ed6:;
			++it;
			goto _iter_begin_1d9ac6ed6;
		}
		_iter_end_1d9ac6ed6:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1d65bb9ac_checkImportSelections(_1d65b5c81_Sema* _self_, jule::Ptr<_1d659590e_ImportInfo>* _65745_imp) {
	jule::Bool __jule_func_result = false;
	if (((*((*(_65745_imp))))._field_Selected.len() > 0LL)) {
		__jule_func_result = _1d65bae2e_checkImportSelectedSelections(_self_, _65745_imp);
		return __jule_func_result;;
	} else if ((*((*(_65745_imp))))._field_ImportAll) {
		__jule_func_result = _1d65bb66b_checkImportAllSelections(_self_, _65745_imp);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1d65bbced_isUseAliasDuplication(_1d65b5c81_Sema* _self_, jule::Ptr<_1d659590e_ImportInfo>* _66641_imp) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9b0e051:;
		if (it != expr_end) {
			jule::Ptr<_1d659590e_ImportInfo> _66721_imp2 = *it;
			{
				if ((_66721_imp2 == (*(_66641_imp)))) {
					goto _iter_end_1d9b0e051;
				};
				if (((*(_66721_imp2))._field_Alias == (*((*(_66641_imp))))._field_Alias)) {
					return true;;
				};
				if ((((*(_66721_imp2))._field_Ident == (*(_66721_imp2))._field_LinkPath) && ((*(_66721_imp2))._field_Ident == (*((*(_66641_imp))))._field_Alias))) {
					return true;;
				};
			}
			_iter_next_1d9b0e051:;
			++it;
			goto _iter_begin_1d9b0e051;
		}
		_iter_end_1d9b0e051:;
	};
	return false;;
}



inline jule::Bool _1d65bc13e_checkImport(_1d65b5c81_Sema* _self_, jule::Ptr<_1d659590e_ImportInfo>* _68235_imp) {
	if (((*((*(_68235_imp))))._field_Binded || ((*((*((*(_68235_imp))))._field_Package))._field_Files.len() == 0LL))) {
		return true;;
	};
	if ((*((*(_68235_imp))))._field_LinkPath.equal("std::unsafe", 11)) {
		if ((((*((*(_68235_imp))))._field_ImportAll || !((*((*(_68235_imp))))._field_Alias).empty()) || ((*((*(_68235_imp))))._field_Selected.len() > 0LL))) {
			_1d65b88bb_pushErr(_self_, (*((*(_68235_imp))))._field_Token, jule::Str::lit("expected plain use declaration for this package like: @", 55), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("use std::unsafe", 15), &__jule_any_type4)}));
			return false;;
		};
	};
	if (((*((*(_68235_imp))))._field_Alias.len() != 0LL)) {
		if (_1d64d8742_IsIgnoreIdent((*((*(_68235_imp))))._field_Alias)) {
			_1d65b88bb_pushErr(_self_, (*((*(_68235_imp))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
		} else if (_1d65bbced_isUseAliasDuplication(_self_, _68235_imp)) {
			_1d65b88bb_pushErr(_self_, (*((*(_68235_imp))))._field_Token, jule::Str::lit("identifier duplication: @ is already used for another use declaration above", 75), jule::Slice<jule::Any>::make({jule::Any((*((*(_68235_imp))))._field_Alias, &__jule_any_type4)}));
			_1d65b8c2e_pushSuggestion(_self_, jule::Str::lit("rename alias for this use declaration to avoid duplication", 58), jule::Slice<jule::Any>());
		};
	};
	if ((!((*((*(_68235_imp))))._field_Duplicate))) {
		jule::Ptr<_1d65b5c81_Sema> _70517_sema = jule::new_ptr<_1d65b5c81_Sema>(_1d65b5c81_Sema{._field_flags=(*(_self_))._field_flags, ._field_meta=(*(_self_))._field_meta});;
		_1d65d5520_check(_70517_sema, &((*((*((*(_68235_imp))))._field_Package))._field_Files));
		if (((*(_70517_sema))._field_errors.len() != 0LL)) {
			((*(_self_))._field_errors).append((*(_70517_sema))._field_errors);;
			(*(_70517_sema))._field_errors=nullptr;
			return false;;
		};
	};
	return _1d65bb9ac_checkImportSelections(_self_, _68235_imp);;
}



inline void _1d65bc33c_checkImports(_1d65b5c81_Sema* _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9b1829c:;
		if (it != expr_end) {
			jule::Ptr<_1d6641d73_SymbolTable> _72021_file = *it;
			{
				_1d65b849d_setCurrentFile(_self_, _72021_file);
				{
					auto expr = &((*(_72021_file))._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d9b190d3:;
					if (it != expr_end) {
						jule::Ptr<_1d659590e_ImportInfo> _72225_imp = *it;
						{
							jule::Bool _72317_ok = _1d65bc13e_checkImport(_self_, &(_72225_imp));;
							if ((!(_72317_ok))) {
								return;;
							};
						}
						_iter_next_1d9b190d3:;
						++it;
						goto _iter_begin_1d9b190d3;
					}
					_iter_end_1d9b190d3:;
				};
			}
			_iter_next_1d9b1829c:;
			++it;
			goto _iter_begin_1d9b1829c;
		}
		_iter_end_1d9b1829c:;
	};
}



inline void _1d65bc53a_implFileImpls(jule::Ptr<_1d65b5c81_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Impls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9b1891d:;
		if (it != expr_end) {
			jule::Ptr<_1d656dbc3_Impl> _73321_imp = *it;
			{
				_1d65cbacc_implImpl(_self_, &(_73321_imp));
			}
			_iter_next_1d9b1891d:;
			++it;
			goto _iter_begin_1d9b1891d;
		}
		_iter_end_1d9b1891d:;
	};
}



inline void _1d65bc738_implImpls(jule::Ptr<_1d65b5c81_Sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9b1ae81:;
		if (it != expr_end) {
			jule::Ptr<_1d6641d73_SymbolTable> _73921_file = *it;
			{
				_1d65b849d_setCurrentFile(_self_.ptr(), _73921_file);
				_1d65bc53a_implFileImpls(_self_);
			}
			_iter_next_1d9b1ae81:;
			++it;
			goto _iter_begin_1d9b1ae81;
		}
		_iter_end_1d9b1ae81:;
	};
}



inline void _1d65bc936_checkEnums(jule::Ptr<_1d65b5c81_Sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9b1c04d:;
		if (it != expr_end) {
			jule::Ptr<_1d6641d73_SymbolTable> _74621_file = *it;
			{
				_1d65b849d_setCurrentFile(_self_.ptr(), _74621_file);
				{
					
					if ((!(_1d65c8018_checkEnumDecls(_self_)))) {
						_case_begin_1d9b1cc30:;
					}
					else if ((!(_1d65c829e_checkTypeEnumDecls(_self_)))) {
						_case_begin_1d9b1cca7:;
					}
					_match_end_1d9b1cb86:;
				};
			}
			_iter_next_1d9b1c04d:;
			++it;
			goto _iter_begin_1d9b1c04d;
		}
		_iter_end_1d9b1c04d:;
	};
}



inline void _1d65bcb34_checkFileInherits(jule::Ptr<_1d65b5c81_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9b1dacc:;
		if (it != expr_end) {
			jule::Ptr<_1d654554b_Trait> _75621_t = *it;
			{
				jule::Bool _75713_ok = _1d65c9b63__checkTraitDeclInherits(_self_, &(_75621_t));;
				if ((!(_75713_ok))) {
					return;;
				};
			}
			_iter_next_1d9b1dacc:;
			++it;
			goto _iter_begin_1d9b1dacc;
		}
		_iter_end_1d9b1dacc:;
	};
}



inline void _1d65bcd32_checkInherits(jule::Ptr<_1d65b5c81_Sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9b1ee30:;
		if (it != expr_end) {
			jule::Ptr<_1d6641d73_SymbolTable> _76521_file = *it;
			{
				_1d65b849d_setCurrentFile(_self_.ptr(), _76521_file);
				_1d65bcb34_checkFileInherits(_self_);
			}
			_iter_next_1d9b1ee30:;
			++it;
			goto _iter_begin_1d9b1ee30;
		}
		_iter_end_1d9b1ee30:;
	};
}



inline _1d66898e3_typeChecker _1d65bd2d8_typeChecker(jule::Ptr<_1d65b5c81_Sema> _self_, jule::Trait<_1d669756b_Lookup> _77135_l, jule::Slice<jule::Ptr<_1d6676c43_TypeAlias>> _77150_generics, jule::Ptr<_1d6688903_referencer> _77213_referencer) {
	_1d66898e3_typeChecker _77313_tc = _1d66898e3_typeChecker{._field_s=_self_, ._field_rootLookup=_77135_l, ._field_lookup=_77135_l, ._field_referencer=_77213_referencer, ._field_useGenerics=_77150_generics, };;
	{
		auto &_match_expr{ _77135_l };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1d9b21d22:;
			{
				jule::Ptr<_1d657b42d_scopeChecker> _78217_hard = _1d657e7a5_getHardRoot(_77135_l.cast_ptr<_1d657b42d_scopeChecker>(0));;
				_77313_tc._field_refers=(*((*(_78217_hard))._field_owner))._field_Refers;
			}
		}
		_match_end_1d9b21c23:;
	};
	if (((_77213_referencer != nullptr) && ((*(_77213_referencer))._field_refs != nullptr))) {
		{
			auto &_match_expr{ (*(_77213_referencer))._field_owner };
			
			if (_match_expr.type == &__jule_any_type66) {
				_case_begin_1d9b2363c:;
				{
					_77313_tc._field_ownerAlias=(*(_77213_referencer))._field_owner.cast_ptr<_1d6676c43_TypeAlias>(&__jule_any_type66);
				}
			}
			_match_end_1d9b235d7:;
		};
	};
	return _77313_tc;;
}



inline jule::Ptr<_1d6677a35_TypeKind> _1d65bd849_buildTypeWithRefers(jule::Ptr<_1d65b5c81_Sema> _self_, jule::Ptr<_1d64eb3d1_TypeDecl>* _79844_t, jule::Trait<_1d669756b_Lookup> _79867_l, jule::Slice<jule::Ptr<_1d6676c43_TypeAlias>> _79913_generics, jule::Ptr<_1d6688903_referencer> _79941_referencer) {
	return ({ auto _wrap_copy = _1d65bd2d8_typeChecker(_self_, _79867_l, _79913_generics, _79941_referencer); _1d669208d_checkDecl(&_wrap_copy, _79844_t); });;
}



inline jule::Bool _1d65bddaa_checkTypeWithRefers(jule::Ptr<_1d65b5c81_Sema> _self_, jule::Ptr<_1d667ec07_TypeSymbol>* _80544_t, jule::Trait<_1d669756b_Lookup> _80564_l, jule::Slice<jule::Ptr<_1d6676c43_TypeAlias>> _80613_generics, jule::Ptr<_1d6688903_referencer> _80641_referencer) {
	jule::Bool __jule_func_result = false;
	if (_1d668007b_checked((*(_80544_t)).ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*((*(_80544_t))))._field_Kind=_1d65bd849_buildTypeWithRefers(_self_, &((*((*(_80544_t))))._field_Decl), _80564_l, _80613_generics, _80641_referencer);
	__jule_func_result = _1d668007b_checked((*(_80544_t)).ptr());
	return __jule_func_result;;
}



inline jule::Ptr<_1d656b86e_constraintChecker> _1d65be141_constraintChecker(jule::Ptr<_1d65b5c81_Sema> _self_) {
	return jule::new_ptr<_1d656b86e_constraintChecker>(_1d656b86e_constraintChecker{._field_s=_self_, });;
}



inline jule::Bool _1d65be53c_checkType(jule::Ptr<_1d65b5c81_Sema> _self_, jule::Ptr<_1d667ec07_TypeSymbol>* _82034_t, jule::Trait<_1d669756b_Lookup> _82054_l) {
	return _1d65bddaa_checkTypeWithRefers(_self_, _82034_t, _82054_l, nullptr, nullptr);;
}



inline jule::Ptr<_1d6677a35_TypeKind> _1d65be9e3_buildTypeWithGenerics(jule::Ptr<_1d65b5c81_Sema> _self_, jule::Ptr<_1d64eb3d1_TypeDecl>* _82646_t, jule::Slice<jule::Ptr<_1d6676c43_TypeAlias>> _82713_generics, jule::Ptr<_1d6538341_ReferenceStack> _82741_refers) {
	jule::Ptr<_1d66898e3_typeChecker> _82813_tc = jule::new_ptr<_1d66898e3_typeChecker>(_1d66898e3_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1d669756b_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1d669756b_Lookup>(_self_, 3), ._field_refers=_82741_refers, ._field_useGenerics=_82713_generics, });;
	return _1d669208d_checkDecl(_82813_tc.ptr(), _82646_t);;
}



inline jule::Ptr<_1d6677a35_TypeKind> _1d65c0175_selectType(jule::Ptr<_1d65b5c81_Sema> _self_, jule::Ptr<_1d64eb3d1_TypeDecl>* _84435_t) {
	jule::Ptr<_1d66898e3_typeChecker> _84513_tc = jule::new_ptr<_1d66898e3_typeChecker>(_1d66898e3_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1d669756b_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1d669756b_Lookup>(_self_, 3), ._field_selection=true, });;
	return _1d669208d_checkDecl(_84513_tc.ptr(), _84435_t);;
}



inline jule::Ptr<_1d6648e13_Eval> _1d65c062b_evalpd(jule::Ptr<_1d65b5c81_Sema> _self_, jule::Trait<_1d669756b_Lookup> _85630_l, jule::Ptr<_1d6677a35_TypeKind> _85645_p, jule::Ptr<_1d65d9018_Var> _85663_owner) {
	jule::Ptr<_1d6648e13_Eval> _85713_e = jule::new_ptr<_1d6648e13_Eval>(_1d6648e13_Eval{._field_s=_self_, ._field_lookup=_85630_l, ._field_owner=_85663_owner, });;
	{
		auto &_match_expr{ _85630_l };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1d9b2c9a9:;
			{
				(*(_85713_e))._field_unsafety=_1d657d7d7_isUnsafe(_85630_l.cast_ptr<_1d657b42d_scopeChecker>(0));
			}
		}
		_match_end_1d9b2c954:;
	};
	(*(_85713_e))._field_prefix=_85645_p;
	return _85713_e;;
}



inline jule::Ptr<_1d6648e13_Eval> _1d65c0a27_evalp(jule::Ptr<_1d65b5c81_Sema> _self_, jule::Trait<_1d669756b_Lookup> _87129_l, jule::Ptr<_1d6677a35_TypeKind> _87144_p) {
	return _1d65c062b_evalpd(_self_, _87129_l, _87144_p, nullptr);;
}



inline jule::Ptr<_1d6648e13_Eval> _1d65c0d68_eval(jule::Ptr<_1d65b5c81_Sema> _self_, jule::Trait<_1d669756b_Lookup> _87628_l) {
	return _1d65c0a27_evalp(_self_, _87628_l, nullptr);;
}



inline jule::Bool _1d65c13c9_checkAssignType(jule::Ptr<_1d65b5c81_Sema> _self_, jule::Bool _88035_destIsRef, jule::Ptr<_1d6677a35_TypeKind>* _88057_dest, jule::Ptr<_1d664721e_Data>* _88114_d, jule::Ptr<_1d64d5cd3_Token> _88128_errorToken) {
	if ((*((*(_88114_d))))._field_Decl) {
		_1d65b88bb_pushErr(_self_.ptr(), _88128_errorToken, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return false;;
	};
	if (_88035_destIsRef) {
		if ((!(_1d667823e_Equal((*(_88057_dest)), (*((*(_88114_d))))._field_Kind)))) {
			_1d65b88bb_pushErr(_self_.ptr(), _88128_errorToken, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1d6677ded_Str((*(_88057_dest)).ptr()), &__jule_any_type4),jule::Any(_1d6677ded_Str((*((*(_88114_d))))._field_Kind.ptr()), &__jule_any_type4)}));
			return false;;
		};
	} else {
		jule::Ptr<_1d6630dea_assignTypeChecker> _89217_atc = jule::new_ptr<_1d6630dea_assignTypeChecker>(_1d6630dea_assignTypeChecker{._field_s=_self_, ._field_dest=(*(_88057_dest)), ._field_d=(*(_88114_d)), ._field_errorToken=_88128_errorToken});;
		jule::Bool _89813_ok = _1d6631db8_check(_89217_atc.ptr());;
		if ((!(_89813_ok))) {
			return false;;
		};
	};
	if (((!(_1d6647ae3_IsConst((*(_88114_d)).ptr()))) || (_1d667a186_Prim((*(_88057_dest)).ptr()) == nullptr))) {
		return true;;
	};
	jule::Str _90813_kind = (*(_1d667a186_Prim((*(_88057_dest)).ptr())))._field_Kind;;
	{
		
		if (_1d432004d_IsSigInt(_90813_kind)) {
			_case_begin_1d9b351cb:;
			{
				_1d4324173_SetI64((*((*(_88114_d))))._field_Constant.ptr(), static_cast<jule::I64>(_1d432389d_AsI64((*((*(_88114_d))))._field_Constant.ptr())));
			}
		}
		else if (_1d432035b_IsUnsigInt(_90813_kind)) {
			_case_begin_1d9b35253:;
			{
				_1d432442b_SetU64((*((*(_88114_d))))._field_Constant.ptr(), static_cast<jule::U64>(_1d4323b34_AsU64((*((*(_88114_d))))._field_Constant.ptr())));
			}
		}
		else if (_1d4320966_IsFloat(_90813_kind)) {
			_case_begin_1d9b352ca:;
			{
				_1d4324c45_SetF64((*((*(_88114_d))))._field_Constant.ptr(), static_cast<jule::F64>(_1d4323dba_AsF64((*((*(_88114_d))))._field_Constant.ptr())));
			}
		}
		_match_end_1d9b35110:;
	};
	return true;;
}



inline jule::Bool _1d65c1880__checkTypeCompatibility(jule::Ptr<_1d65b5c81_Sema> _self_, jule::Ptr<_1d6677a35_TypeKind>* _92248_dest, jule::Ptr<_1d6677a35_TypeKind>* _92270_src, jule::Ptr<_1d64d5cd3_Token> _92313_errorToken) {
	if (((*(_92270_src)) == nullptr)) {
		return false;;
	};
	if ((_1d667beac_Tup((*(_92270_src)).ptr()) != nullptr)) {
		return false;;
	};
	_1d662e14b_typeCompatibilityChecker _93113_tcc = _1d662e14b_typeCompatibilityChecker{._field_s=_self_, ._field_dest=(*(_92248_dest)), ._field_src=(*(_92270_src)), ._field_errorToken=_92313_errorToken};;
	return _1d6630812_check(&_93113_tcc);;
}



inline jule::Bool _1d65c1d36_checkTypeCompatibility(jule::Ptr<_1d65b5c81_Sema> _self_, jule::Ptr<_1d6677a35_TypeKind>* _94047_dest, jule::Ptr<_1d6677a35_TypeKind>* _94114_src, jule::Ptr<_1d64d5cd3_Token>* _94135_errorToken) {
	if (_1d65c1880__checkTypeCompatibility(_self_, _94047_dest, _94114_src, (*(_94135_errorToken)))) {
		return true;;
	};
	_1d65b88bb_pushErr(_self_.ptr(), (*(_94135_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1d6677ded_Str((*(_94047_dest)).ptr()), &__jule_any_type4),jule::Any(_1d6677ded_Str((*(_94114_src)).ptr()), &__jule_any_type4)}));
	return false;;
}



inline void _1d65c2254_pushCompatiblityError(_1d65b5c81_Sema* _self_, jule::Ptr<_1d6677a35_TypeKind>* _94945_dest, jule::Ptr<_1d664721e_Data>* _94967_src, jule::Ptr<_1d64d5cd3_Token>* _95014_errorToken) {
	if ((*((*(_94967_src))))._field_untyped) {
		{
			
			if (_1d43251c9_IsI64((*((*(_94967_src))))._field_Constant.ptr())) {
				_case_begin_1d9b3c722:;
				{
					_1d65b88bb_pushErr(_self_, (*(_95014_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1d6677ded_Str((*(_94945_dest)).ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("untyped integer", 15), &__jule_any_type4)}));
					return;;
				}
			}
			else if (_1d4325460_IsU64((*((*(_94967_src))))._field_Constant.ptr())) {
				_case_begin_1d9b3c799:;
				{
					_1d65b88bb_pushErr(_self_, (*(_95014_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1d6677ded_Str((*(_94945_dest)).ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("untyped unsigned integer", 24), &__jule_any_type4)}));
					return;;
				}
			}
			else if (_1d4325c13_IsF64((*((*(_94967_src))))._field_Constant.ptr())) {
				_case_begin_1d9b3c821:;
				{
					_1d65b88bb_pushErr(_self_, (*(_95014_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1d6677ded_Str((*(_94945_dest)).ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("untyped float", 13), &__jule_any_type4)}));
					return;;
				}
			}
			_match_end_1d9b3c601:;
		};
	};
	_1d65b88bb_pushErr(_self_, (*(_95014_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1d6677ded_Str((*(_94945_dest)).ptr()), &__jule_any_type4),jule::Any(_1d6677ded_Str((*((*(_94967_src))))._field_Kind.ptr()), &__jule_any_type4)}));
}



inline jule::Bool _1d65c270a_checkTypeCompatibility1(jule::Ptr<_1d65b5c81_Sema> _self_, jule::Ptr<_1d6677a35_TypeKind>* _96748_dest, jule::Ptr<_1d664721e_Data>* _96770_src, jule::Ptr<_1d64d5cd3_Token>* _96814_errorToken) {
	if (_1d65c1880__checkTypeCompatibility(_self_, _96748_dest, &((*((*(_96770_src))))._field_Kind), (*(_96814_errorToken)))) {
		return true;;
	};
	_1d65c2254_pushCompatiblityError(_self_.ptr(), _96748_dest, _96770_src, _96814_errorToken);
	return false;;
}



inline jule::Ptr<_1d6677a35_TypeKind> _1d65c2bb1_buildNonGenericTypeKind(jule::Ptr<_1d65b5c81_Sema> _self_, jule::Ptr<_1d64eb3d1_TypeDecl>* _98248_ast, jule::Slice<jule::Ptr<_1d65085db_GenericDecl>>* _98314_generics, jule::Slice<jule::Ptr<_1d6677a35_TypeKind>>* _98350_ignored) {
	jule::Ptr<_1d66898e3_typeChecker> _98413_tc = jule::new_ptr<_1d66898e3_typeChecker>(_1d66898e3_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1d669756b_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1d669756b_Lookup>(_self_, 3), ._field_ignoreGenerics=(*(_98314_generics)), ._field_ignoredGenerics=_98350_ignored, });;
	return _1d669208d_checkDecl(_98413_tc.ptr(), _98248_ast);;
}



inline jule::Bool _1d65c30ac_buildFnNonGenericTypeKinds(jule::Ptr<_1d65b5c81_Sema> _self_, jule::Ptr<_1d6535173_FnIns>* _99451_f, jule::Slice<jule::Ptr<_1d6677a35_TypeKind>>* _99467_ignored) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Slice<jule::Ptr<_1d65085db_GenericDecl>> _99617_generics = nullptr;;
	if (_1d6532978_IsMethod((*((*(_99451_f))))._field_Decl.ptr())) {
		_99617_generics=jule::append((*((*((*(_99451_f))))._field_Decl))._field_Generics,(*((*((*((*(_99451_f))))._field_Decl))._field_Owner))._field_Generics);
	} else {
		_99617_generics=(*((*((*(_99451_f))))._field_Decl))._field_Generics;
	};
	{
		auto expr = &((*((*(_99451_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9b459d3:;
		if (it != expr_end) {
			jule::Ptr<_1d65341c7_ParamIns> _100321_p = *it;
			{
				if ((!(_1d6530db6_IsSelf((*(_100321_p))._field_Decl.ptr())))) {
					(*(_100321_p))._field_Kind=_1d65c2bb1_buildNonGenericTypeKind(_self_, &((*((*((*(_100321_p))._field_Decl))._field_Kind))._field_Decl), &(_99617_generics), _99467_ignored);
					__jule_func_result=(__jule_func_result && ((*(_100321_p))._field_Kind != nullptr));
				};
			}
			_iter_next_1d9b459d3:;
			++it;
			goto _iter_begin_1d9b459d3;
		}
		_iter_end_1d9b459d3:;
	};
	if ((!(_1d65326e2_IsVoid((*((*(_99451_f))))._field_Decl.ptr())))) {
		(*((*(_99451_f))))._field_Result=_1d65c2bb1_buildNonGenericTypeKind(_self_, &((*((*((*((*((*(_99451_f))))._field_Decl))._field_Result))._field_Kind))._field_Decl), &(_99617_generics), _99467_ignored);
		__jule_func_result=(__jule_func_result && ((*((*(_99451_f))))._field_Result != nullptr));
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1d6535173_FnIns> _1d65c33ed_getTraitCheckFnKind(jule::Ptr<_1d65b5c81_Sema> _self_, jule::Ptr<_1d653226e_Fn>* _101644_f) {
	if (((*((*(_101644_f))))._field_Instances.len() == 1LL)) {
		return (*((*(_101644_f))))._field_Instances[0LL];;
	};
	jule::Ptr<_1d6535173_FnIns> _102013_ins = _1d6533748_instanceForce((*(_101644_f)));;
	jule::Ptr<_1d66898e3_typeChecker> _102213_tc = jule::new_ptr<_1d66898e3_typeChecker>(_1d66898e3_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1d669756b_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1d669756b_Lookup>(_self_, 3), });;
	{
		auto expr = &((*(_102013_ins))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9b4c721:;
		if (it != expr_end) {
			jule::Ptr<_1d65341c7_ParamIns> _102721_p = *it;
			{
				if ((!(_1d6530db6_IsSelf((*(_102721_p))._field_Decl.ptr())))) {
					(*(_102721_p))._field_Kind=_1d669208d_checkDecl(_102213_tc.ptr(), &((*((*((*(_102721_p))._field_Decl))._field_Kind))._field_Decl));
				};
			}
			_iter_next_1d9b4c721:;
			++it;
			goto _iter_begin_1d9b4c721;
		}
		_iter_end_1d9b4c721:;
	};
	if ((!(_1d65326e2_IsVoid((*(_101644_f)).ptr())))) {
		(*(_102013_ins))._field_Result=_1d669208d_checkDecl(_102213_tc.ptr(), &((*((*((*((*(_101644_f))))._field_Result))._field_Kind))._field_Decl));
	};
	return _102013_ins;;
}



inline jule::Bool _1d65c38a4_checkConstraintsFn(jule::Ptr<_1d65b5c81_Sema> _self_, jule::Ptr<_1d6535173_FnIns>* _103943_f, jule::Ptr<_1d64d5cd3_Token>* _103959_et, jule::Ptr<_1d6535173_FnIns> _103975_exist) {
	jule::Ptr<_1d656b86e_constraintChecker> _104013_cc = _1d65be141_constraintChecker(_self_);;
	(*(_104013_cc))._field_et=(*(_103959_et));
	(*(_104013_cc))._field_fi=(*(_103943_f));
	if ((_103975_exist != nullptr)) {
		{
			auto expr = &((*(_103975_exist))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1d9b51c97:;
			if (it != expr_end) {
				jule::I64 _104418_i = it - expr->begin();
				jule::Ptr<_1d667614e_InsGeneric> _104425_g = *it;
				{
					(*((*((*(_103943_f))))._field_Generics[_104418_i]))._field_Constraint=(*(_104425_g))._field_Constraint;
				}
				_iter_next_1d9b51c97:;
				++it;
				_104418_i++;
				goto _iter_begin_1d9b51c97;
			}
			_iter_end_1d9b51c97:;
		};
	} else {
		(*(_104013_cc))._field_uniq=true;
	};
	return _1d656c7a4_check(_104013_cc);;
}



inline jule::Bool _1d65c3d5a_checkConstraintsStruct(jule::Ptr<_1d65b5c81_Sema> _self_, jule::Ptr<_1d652005e_StructIns>* _105347_s, jule::Ptr<_1d64d5cd3_Token>* _105367_et, jule::Ptr<_1d652005e_StructIns> _105383_exist) {
	jule::Ptr<_1d656b86e_constraintChecker> _105413_cc = _1d65be141_constraintChecker(_self_);;
	(*(_105413_cc))._field_et=(*(_105367_et));
	(*(_105413_cc))._field_si=(*(_105347_s));
	if ((_105383_exist != nullptr)) {
		{
			auto expr = &((*(_105383_exist))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1d9b54ea9:;
			if (it != expr_end) {
				jule::I64 _105818_i = it - expr->begin();
				jule::Ptr<_1d667614e_InsGeneric> _105825_g = *it;
				{
					(*((*((*(_105347_s))))._field_Generics[_105818_i]))._field_Constraint=(*(_105825_g))._field_Constraint;
				}
				_iter_next_1d9b54ea9:;
				++it;
				_105818_i++;
				goto _iter_begin_1d9b54ea9;
			}
			_iter_end_1d9b54ea9:;
		};
	} else {
		(*(_105413_cc))._field_uniq=true;
	};
	return _1d656c7a4_check(_105413_cc);;
}



inline jule::Bool _1d65c4256_fnEnvironment(jule::Ptr<_1d65b5c81_Sema> _self_, jule::Ptr<_1d6535173_FnIns>* _107038_f, jule::Fn<jule::Bool(jule::Ptr<_1d65b5c81_Sema>*,jule::Slice<jule::Ptr<_1d6676c43_TypeAlias>>*)> _107049_algo) {
	jule::Ptr<_1d65b5c81_Sema> _107113_sema = (*((*((*(_107038_f))))._field_Decl))._field_sema;;
	jule::Ptr<_1d6641d73_SymbolTable> _107213_old = (*((*((*((*(_107038_f))))._field_Decl))._field_sema))._field_file;;
	__JULE_DEFER({
		_1d65b849d_setCurrentFile((*((*((*(_107038_f))))._field_Decl))._field_sema.ptr(), _107213_old);
	});;
	jule::Ptr<_1d6641d73_SymbolTable> _107413_file = _1d65b49c7_findFile(&((*((*((*((*(_107038_f))))._field_Decl))._field_sema))._field_files), &((*((*((*((*(_107038_f))))._field_Decl))._field_Token))._field_File));;
	if ((_107413_file != nullptr)) {
		_1d65b849d_setCurrentFile((*((*((*(_107038_f))))._field_Decl))._field_sema.ptr(), _107413_file);
	};
	jule::I64 _107913_size = (*((*(_107038_f))))._field_Generics.len();;
	if ((((*((*(_107038_f))))._field_Decl != nullptr) && ((*((*((*(_107038_f))))._field_Decl))._field_Owner != nullptr))) {
		_107913_size+=(*((*((*((*(_107038_f))))._field_Decl))._field_Owner))._field_Generics.len();
	};
	jule::Slice<jule::Ptr<_1d6676c43_TypeAlias>> _108413_generics = jule::Slice<jule::Ptr<_1d6676c43_TypeAlias>>::alloc(0LL, _107913_size);;
	_1d65b4653_appendGenericTypeAliases(&(_108413_generics), _107038_f);
	jule::Bool _10879_ok = _107049_algo(&(_107113_sema), &(_108413_generics));;
	if ((_107113_sema != _self_)) {
		((*(_self_))._field_errors).append((*(_107113_sema))._field_errors);;
		(*(_107113_sema))._field_errors=nullptr;
	};
	return _10879_ok;;
}



inline void _1d65c450e_checkFnParamKind(jule::Ptr<_1d65b5c81_Sema> _self_, jule::Ptr<_1d65341c7_ParamIns>* _109741_p) {
	(*((*((*(_109741_p))))._field_Kind))._field_Variadic=(*((*((*(_109741_p))))._field_Decl))._field_Variadic;
	if (((*((*((*(_109741_p))))._field_Decl))._field_Reference && (!(_1d6694029_isValidForRef(&((*((*(_109741_p))))._field_Kind)))))) {
		_1d65b88bb_pushErr(_self_.ptr(), (*((*((*(_109741_p))))._field_Decl))._field_Token, jule::Str::lit("references cannot points to type @", 34), jule::Slice<jule::Any>::make({jule::Any(_1d6677ded_Str((*((*(_109741_p))))._field_Kind.ptr()), &__jule_any_type4)}));
	};
}



inline jule::Bool _1d65c4850_reloadFnInsTypes(jule::Ptr<_1d65b5c81_Sema> _self_, jule::Ptr<_1d6535173_FnIns> _110440_f) {
	if ((_1d6536608_IsBuiltin(_110440_f.ptr()) || _1d653688e_IsAnon(_110440_f.ptr()))) {
		return true;;
	};
	return _1d65c4256_fnEnvironment(_self_, &(_110440_f), jule::Fn<jule::Bool(jule::Ptr<_1d65b5c81_Sema>*,jule::Slice<jule::Ptr<_1d6676c43_TypeAlias>>*)>([=](jule::Ptr<_1d65b5c81_Sema>* _110843_sema, jule::Slice<jule::Ptr<_1d6676c43_TypeAlias>>* _110861_generics) mutable -> jule::Bool {
		jule::Bool _110917_ok = true;;
		{
			auto expr = &((*(_110440_f))._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1d9b63bbb:;
			if (it != expr_end) {
				jule::Ptr<_1d65341c7_ParamIns> _111025_p = *it;
				{
					if (_1d6530db6_IsSelf((*(_111025_p))._field_Decl.ptr())) {
						if (_1d653114c_IsRef((*(_111025_p))._field_Decl.ptr())) {
							(*(_111025_p))._field_Kind=jule::new_ptr<_1d6677a35_TypeKind>(_1d6677a35_TypeKind{._field_Kind=jule::Trait<_1d667757e_Kind>(jule::new_ptr<_1d668413a_Sptr>(_1d668413a_Sptr{._field_Elem=jule::new_ptr<_1d6677a35_TypeKind>(_1d6677a35_TypeKind{._field_Kind=jule::Trait<_1d667757e_Kind>((*(_110440_f))._field_Owner, 0)})}), 21)});
						} else {
							(*(_111025_p))._field_Kind=jule::new_ptr<_1d6677a35_TypeKind>(_1d6677a35_TypeKind{._field_Kind=jule::Trait<_1d667757e_Kind>((*(_110440_f))._field_Owner, 0)});
						};
					} else {
						(*(_111025_p))._field_Kind=_1d65be9e3_buildTypeWithGenerics((*(_110843_sema)), &((*((*((*(_111025_p))._field_Decl))._field_Kind))._field_Decl), (*(_110861_generics)), (*(_110440_f))._field_Refers);
						if (((*(_111025_p))._field_Kind != nullptr)) {
							_1d65c450e_checkFnParamKind(_self_, &(_111025_p));
						} else {
							_110917_ok=false;
						};
					};
				}
				_iter_next_1d9b63bbb:;
				++it;
				goto _iter_begin_1d9b63bbb;
			}
			_iter_end_1d9b63bbb:;
		};
		if ((!(_1d65326e2_IsVoid((*(_110440_f))._field_Decl.ptr())))) {
			(*(_110440_f))._field_Result=_1d65be9e3_buildTypeWithGenerics((*(_110843_sema)), &((*((*((*((*(_110440_f))._field_Decl))._field_Result))._field_Kind))._field_Decl), (*(_110861_generics)), (*(_110440_f))._field_Refers);
			_110917_ok=(((*(_110440_f))._field_Result != nullptr) && _110917_ok);
		};
		return _110917_ok;;
	}));;
}



inline jule::Bool _1d65c4d06_checkRefValidityForInitExpr(jule::Ptr<_1d65b5c81_Sema> _self_, jule::Bool _114047_leftMut, jule::Ptr<_1d664721e_Data>* _114067_d, jule::Ptr<_1d64d5cd3_Token>* _114082_errorToken) {
	if ((!(_1d65b3421_isValidModelForRef(&((*((*(_114067_d))))._field_Model))))) {
		_1d65b88bb_pushErr(_self_.ptr(), (*(_114082_errorToken)), jule::Str::lit("references requires variable based expression for assignment", 60), jule::Slice<jule::Any>());
		return false;;
	};
	if ((_114047_leftMut && (!((*((*(_114067_d))))._field_Mutable)))) {
		_1d65b88bb_pushErr(_self_.ptr(), (*(_114082_errorToken)), jule::Str::lit("mutable reference cannot point to immutable data", 48), jule::Slice<jule::Any>());
		return false;;
	};
	return true;;
}



inline jule::Bool _1d65c5147_isMutRiskyStruct(_1d65b5c81_Sema* _self_, jule::Ptr<_1d652005e_StructIns>* _115732_s) {
	{
		auto expr = &((*((*(_115732_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9b6be16:;
		if (it != expr_end) {
			jule::Ptr<_1d651e4ae_FieldIns> *_115816_f = it;
			{
				if ((((*((*((*(_115816_f))))._field_Decl))._field_Mutable && _1d66793b6_Mutable((*((*(_115816_f))))._field_Kind.ptr())) && _1d65b912a_isAccessibleDefine(_self_, (*((*((*(_115816_f))))._field_Decl))._field_Public, (*((*((*(_115816_f))))._field_Decl))._field_Token))) {
					return true;;
				};
			}
			_iter_next_1d9b6be16:;
			++it;
			goto _iter_begin_1d9b6be16;
		}
		_iter_end_1d9b6be16:;
	};
	return false;;
}



inline jule::Bool _1d65c5763_checkValidityForInitExpr(jule::Ptr<_1d65b5c81_Sema> _self_, jule::Bool _118444_leftMut, jule::Bool _118459_leftRef, jule::Ptr<_1d6677a35_TypeKind>* _118510_leftKind, jule::Ptr<_1d664721e_Data>* _118536_d, jule::Ptr<_1d64d5cd3_Token>* _118551_errorToken) {
	if ((_118444_leftMut && (!((*((*(_118536_d))))._field_Mutable)))) {
		if (_1d66793b6_Mutable((*((*(_118536_d))))._field_Kind.ptr())) {
			_1d65b88bb_pushErr(_self_.ptr(), (*(_118551_errorToken)), jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_1d6677ded_Str((*((*(_118536_d))))._field_Kind.ptr()), &__jule_any_type4)}));
			return false;;
		};
		jule::Ptr<_1d652005e_StructIns> _119313_s = _1d667b709_Struct((*((*(_118536_d))))._field_Kind.ptr());;
		if (((_119313_s != nullptr) && _1d65c5147_isMutRiskyStruct(_self_.ptr(), &(_119313_s)))) {
			_1d65b88bb_pushErr(_self_.ptr(), (*(_118551_errorToken)), jule::Str::lit("struct @ cannot copied due to field which is stores mutable data", 64), jule::Slice<jule::Any>::make({jule::Any(_1d6677ded_Str((*((*(_118536_d))))._field_Kind.ptr()), &__jule_any_type4)}));
			return false;;
		};
	};
	if (_118459_leftRef) {
		if ((!(_1d65c4d06_checkRefValidityForInitExpr(_self_, _118444_leftMut, _118536_d, _118551_errorToken)))) {
			return false;;
		};
	};
	jule::Ptr<_1d6630dea_assignTypeChecker> _120413_atc = jule::new_ptr<_1d6630dea_assignTypeChecker>(_1d6630dea_assignTypeChecker{._field_s=_self_, ._field_d=(*(_118536_d)), ._field_errorToken=(*(_118551_errorToken))});;
	return _1d6631615_checkValidity(_120413_atc.ptr());;
}



inline jule::Bool _1d65c5b5e_checkTypeAliasDeclKind(jule::Ptr<_1d65b5c81_Sema> _self_, jule::Ptr<_1d6676c43_TypeAlias>* _121247_ta, jule::Trait<_1d669756b_Lookup> _121267_l) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1d6641d73_SymbolTable> _121313_old = (*(_self_))._field_file;;
	__JULE_DEFER({
		_1d65b849d_setCurrentFile(_self_.ptr(), _121313_old);
	});;
	if (((*((*(_121247_ta))))._field_Token != nullptr)) {
		jule::Ptr<_1d6641d73_SymbolTable> _121817_file = _1d65b49c7_findFile(&((*(_self_))._field_files), &((*((*((*(_121247_ta))))._field_Token))._field_File));;
		if ((_121817_file != nullptr)) {
			_1d65b849d_setCurrentFile(_self_.ptr(), _121817_file);
		};
	};
	__jule_func_result=_1d65bddaa_checkTypeWithRefers(_self_, &((*((*(_121247_ta))))._field_Kind), _121267_l, nullptr, jule::new_ptr<_1d6688903_referencer>(_1d6688903_referencer{._field_ident=(*((*(_121247_ta))))._field_Ident, ._field_owner=jule::Any((*(_121247_ta)), &__jule_any_type66), ._field_refs=(&((*((*(_121247_ta))))._field_Refers))}));
	if (((__jule_func_result && (_1d667ae56_Arr((*((*((*(_121247_ta))))._field_Kind))._field_Kind.ptr()) != nullptr)) && (*(_1d667ae56_Arr((*((*((*(_121247_ta))))._field_Kind))._field_Kind.ptr())))._field_Auto)) {
		_1d65b88bb_pushErr(_self_.ptr(), (*((*((*((*(_121247_ta))))._field_Kind))._field_Decl))._field_Token, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
		__jule_func_result=false;
	};
	return __jule_func_result;;
}



inline void _1d65c5ec2_checkTypeAliasDecl(jule::Ptr<_1d65b5c81_Sema> _self_, jule::Ptr<_1d6676c43_TypeAlias>* _123543_ta, jule::Trait<_1d669756b_Lookup> _123563_l) {
	if (_1d64d8742_IsIgnoreIdent((*((*(_123543_ta))))._field_Ident)) {
		_1d65b88bb_pushErr(_self_.ptr(), (*((*(_123543_ta))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	_1d65c5b5e_checkTypeAliasDeclKind(_self_, _123543_ta, _123563_l);
}



inline void _1d65c627a_checkTypeAliasDeclDup(jule::Ptr<_1d65b5c81_Sema> _self_, jule::Ptr<_1d6676c43_TypeAlias>* _124346_ta) {
	if (_1d64d8742_IsIgnoreIdent((*((*(_124346_ta))))._field_Ident)) {
		_1d65b88bb_pushErr(_self_.ptr(), (*((*(_124346_ta))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	if (_1d65b95d1_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_124346_ta)))), &((*((*(_124346_ta))))._field_Ident), (*((*(_124346_ta))))._field_Binded)) {
		_1d65b88bb_pushErr(_self_.ptr(), (*((*(_124346_ta))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_124346_ta))))._field_Ident, &__jule_any_type4)}));
		_1d65b8c2e_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1d65c5b5e_checkTypeAliasDeclKind(_self_, _124346_ta, jule::Trait<_1d669756b_Lookup>(_self_, 3));
}



inline jule::Bool _1d65c6511_checkTypeAliasDecls(jule::Ptr<_1d65b5c81_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9b7e7ec:;
		if (it != expr_end) {
			jule::Ptr<_1d6676c43_TypeAlias> _125621_ta = *it;
			{
				_1d65c627a_checkTypeAliasDeclDup(_self_, &(_125621_ta));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1d9b7e7ec:;
			++it;
			goto _iter_begin_1d9b7e7ec;
		}
		_iter_end_1d9b7e7ec:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1d9bab3b7_checkEnumItemsDup(_1d65b5c81_Sema* _self_, jule::Slice<jule::Ptr<_1d65471da_EnumItem>> _126739_items) {
	{
		auto expr = &(_126739_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9bac709:;
		if (it != expr_end) {
			jule::Ptr<_1d65471da_EnumItem> *_126816_item = it;
			{
				if (((*((*(_126816_item))))._field_Ident).empty()) {
					goto _iter_next_1d9bac709;
				} else if (_1d64d8742_IsIgnoreIdent((*((*(_126816_item))))._field_Ident)) {
					_1d65b88bb_pushErr(_self_, (*((*(_126816_item))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_126739_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1d9bae2aa:;
						if (it != expr_end) {
							jule::Ptr<_1d65471da_EnumItem> *_127424_citem = it;
							{
								if (((*(_126816_item)) == (*(_127424_citem)))) {
									goto _iter_end_1d9bae2aa;
								} else if (((*((*(_126816_item))))._field_Ident == (*((*(_127424_citem))))._field_Ident)) {
									_1d65b88bb_pushErr(_self_, (*((*(_126816_item))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_126816_item))))._field_Ident, &__jule_any_type4)}));
									_1d65b8c2e_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
									goto _iter_end_1d9bae2aa;
								};
							}
							_iter_next_1d9bae2aa:;
							++it;
							goto _iter_begin_1d9bae2aa;
						}
						_iter_end_1d9bae2aa:;
					};
				};
			}
			_iter_next_1d9bac709:;
			++it;
			goto _iter_begin_1d9bac709;
		}
		_iter_end_1d9bac709:;
	};
}

inline void _1d9bb8380_checkEnumItemsDup(_1d65b5c81_Sema* _self_, jule::Slice<jule::Ptr<_1d6548d8a_TypeEnumItem>> _126739_items) {
	{
		auto expr = &(_126739_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9bb967d:;
		if (it != expr_end) {
			jule::Ptr<_1d6548d8a_TypeEnumItem> *_126816_item = it;
			{
				if (((*((*(_126816_item))))._field_Ident).empty()) {
					goto _iter_next_1d9bb967d;
				} else if (_1d64d8742_IsIgnoreIdent((*((*(_126816_item))))._field_Ident)) {
					_1d65b88bb_pushErr(_self_, (*((*(_126816_item))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_126739_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1d9bbb22e:;
						if (it != expr_end) {
							jule::Ptr<_1d6548d8a_TypeEnumItem> *_127424_citem = it;
							{
								if (((*(_126816_item)) == (*(_127424_citem)))) {
									goto _iter_end_1d9bbb22e;
								} else if (((*((*(_126816_item))))._field_Ident == (*((*(_127424_citem))))._field_Ident)) {
									_1d65b88bb_pushErr(_self_, (*((*(_126816_item))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_126816_item))))._field_Ident, &__jule_any_type4)}));
									_1d65b8c2e_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
									goto _iter_end_1d9bbb22e;
								};
							}
							_iter_next_1d9bbb22e:;
							++it;
							goto _iter_begin_1d9bbb22e;
						}
						_iter_end_1d9bbb22e:;
					};
				};
			}
			_iter_next_1d9bb967d:;
			++it;
			goto _iter_begin_1d9bb967d;
		}
		_iter_end_1d9bb967d:;
	};
}



inline void _1d65c6a72_checkEnumItemsStr(jule::Ptr<_1d65b5c81_Sema> _self_, jule::Ptr<_1d6547c57_Enum>* _128742_e) {
	jule::Ptr<_1d6648e13_Eval> _128813_eval = _1d65c0d68_eval(_self_, jule::Trait<_1d669756b_Lookup>(_self_, 3));;
	{
		auto expr = &((*((*(_128742_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9b81546:;
		if (it != expr_end) {
			jule::Ptr<_1d65471da_EnumItem> _128921_item = *it;
			{
				if (_1d6547592_AutoExpr(_128921_item.ptr())) {
					(*(_128921_item))._field_Value=jule::new_ptr<_1d6648363_Value>(_1d6648363_Value{._field_Data=jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Constant=static__1d4321e95_NewStr((*(_128921_item))._field_Ident)})});
					(*((*((*(_128921_item))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*(_128921_item))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
				} else {
					jule::Ptr<_1d664721e_Data> _129821_d = _1d6667173_evalExpr(_128813_eval, (*((*(_128921_item))._field_Value))._field_Expr);;
					if ((_129821_d == nullptr)) {
						goto _iter_next_1d9b81546;
					};
					if ((!(_1d6647ae3_IsConst(_129821_d.ptr())))) {
						_1d65b88bb_pushErr(_self_.ptr(), (*((*((*(_128921_item))._field_Value))._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
					};
					_1d65c13c9_checkAssignType(_self_, false, &((*((*((*(_128742_e))))._field_Kind))._field_Kind), &(_129821_d), (*(_128921_item))._field_Token);
					(*((*(_128921_item))._field_Value))._field_Data=_129821_d;
				};
			}
			_iter_next_1d9b81546:;
			++it;
			goto _iter_begin_1d9b81546;
		}
		_iter_end_1d9b81546:;
	};
}



inline void _1d9b8bc6b_checkEnumItemInt(jule::Ptr<_1d65b5c81_Sema> _self_, jule::Ptr<_1d6648e13_Eval>* _131346_eval, jule::Ptr<_1d6547c57_Enum>* _131364_e, jule::Ptr<_1d668060e_Prim>* _131375_prim, jule::Ptr<_1d65471da_EnumItem>* _131393_item, jule::U64* _1313115_n) {
	if (_1d6547592_AutoExpr((*(_131393_item)).ptr())) {
		(*((*(_131393_item))))._field_Value=jule::new_ptr<_1d6648363_Value>(_1d6648363_Value{._field_Data=jule::new_ptr<_1d664721e_Data>()});
		{
			
{
				_case_begin_1d9b8ead7:;
				{
					(*((*((*((*(_131393_item))))._field_Value))._field_Data))._field_Constant=static__1d4321912_NewU64((*(_1313115_n)));
				}
			}
			_match_end_1d9b8e80c:;
		};
		(*((*((*((*(_131393_item))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_131393_item))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	} else {
		jule::Ptr<_1d664721e_Data> _132817_d = _1d6667173_evalExpr((*(_131346_eval)), (*((*((*(_131393_item))))._field_Value))._field_Expr);;
		if ((_132817_d == nullptr)) {
			return;;
		};
		if ((!(_1d6647ae3_IsConst(_132817_d.ptr())))) {
			_1d65b88bb_pushErr(_self_.ptr(), (*((*((*((*(_131393_item))))._field_Value))._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		_1d65c13c9_checkAssignType(_self_, false, &((*((*((*(_131364_e))))._field_Kind))._field_Kind), &(_132817_d), (*((*(_131393_item))))._field_Token);
		(*((*((*(_131393_item))))._field_Value))._field_Data=_132817_d;
		{
			
{
				_case_begin_1d9b94900:;
				{
					(*(_1313115_n))=static_cast<jule::U64>(_1d4322d64_ReadU64((*((*((*((*(_131393_item))))._field_Value))._field_Data))._field_Constant.ptr()));
				}
			}
			_match_end_1d9b94702:;
		};
	};
}

inline void _1d9b9bdd0_checkEnumItemInt(jule::Ptr<_1d65b5c81_Sema> _self_, jule::Ptr<_1d6648e13_Eval>* _131346_eval, jule::Ptr<_1d6547c57_Enum>* _131364_e, jule::Ptr<_1d668060e_Prim>* _131375_prim, jule::Ptr<_1d65471da_EnumItem>* _131393_item, jule::I64* _1313115_n) {
	if (_1d6547592_AutoExpr((*(_131393_item)).ptr())) {
		(*((*(_131393_item))))._field_Value=jule::new_ptr<_1d6648363_Value>(_1d6648363_Value{._field_Data=jule::new_ptr<_1d664721e_Data>()});
		{
			
{
				_case_begin_1d9b9eb80:;
				{
					(*((*((*((*(_131393_item))))._field_Value))._field_Data))._field_Constant=static__1d4321648_NewI64((*(_1313115_n)));
				}
			}
			_match_end_1d9b9e92c:;
		};
		(*((*((*((*(_131393_item))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_131393_item))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	} else {
		jule::Ptr<_1d664721e_Data> _132817_d = _1d6667173_evalExpr((*(_131346_eval)), (*((*((*(_131393_item))))._field_Value))._field_Expr);;
		if ((_132817_d == nullptr)) {
			return;;
		};
		if ((!(_1d6647ae3_IsConst(_132817_d.ptr())))) {
			_1d65b88bb_pushErr(_self_.ptr(), (*((*((*((*(_131393_item))))._field_Value))._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		_1d65c13c9_checkAssignType(_self_, false, &((*((*((*(_131364_e))))._field_Kind))._field_Kind), &(_132817_d), (*((*(_131393_item))))._field_Token);
		(*((*((*(_131393_item))))._field_Value))._field_Data=_132817_d;
		{
			
{
				_case_begin_1d9ba4b30:;
				{
					(*(_1313115_n))=static_cast<jule::I64>(_1d4322acd_ReadI64((*((*((*((*(_131393_item))))._field_Value))._field_Data))._field_Constant.ptr()));
				}
			}
			_match_end_1d9ba49a9:;
		};
	};
}



inline void _1d9b87e43_checkEnumItemsInt1(jule::Ptr<_1d65b5c81_Sema> _self_, jule::Ptr<_1d668060e_Prim>* _134844_prim, jule::Ptr<_1d6547c57_Enum>* _134862_e) {
	jule::U64 _134913_max = static_cast<jule::U64>(0LLU);;
	{
		
{
			_case_begin_1d9b89d35:;
			{
				_134913_max=static_cast<jule::U64>(_1d431ba61_MaxU(_1d6680950_Str((*(_134844_prim)).ptr())));
			}
		}
		_match_end_1d9b89b48:;
	};
	jule::Ptr<_1d6648e13_Eval> _135913_eval = _1d65c0d68_eval(_self_, jule::Trait<_1d669756b_Lookup>(_self_, 3));;
	jule::U64 _136013_n = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_1d65471da_EnumItem> _136113_first = (*((*(_134862_e))))._field_Items[0LL];;
	_1d9b8bc6b_checkEnumItemInt(_self_, &(_135913_eval), _134862_e, _134844_prim, &(_136113_first), &(_136013_n));
	if (((*((*(_136113_first))._field_Value))._field_Data != nullptr)) {
		{
			
{
				_case_begin_1d9b9500a:;
				{
					_136013_n=static_cast<jule::U64>(_1d4323b34_AsU64((*((*((*(_136113_first))._field_Value))._field_Data))._field_Constant.ptr()));
				}
			}
			_match_end_1d9b8d07a:;
		};
	};
	{
		auto expr = (*((*(_134862_e))))._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1d9b91699:;
		if (it != expr_end) {
			jule::Ptr<_1d65471da_EnumItem> _137321_item = *it;
			{
				if (((_1d6547592_AutoExpr(_137321_item.ptr()) && (_136013_n > 0LLU)) && ((_134913_max - _136013_n) <= 0LLU))) {
					_1d65b88bb_pushErr(_self_.ptr(), (*(_137321_item))._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					goto _iter_end_1d9b91699;
				};
				(_136013_n)++;
				_1d9b8bc6b_checkEnumItemInt(_self_, &(_135913_eval), _134862_e, _134844_prim, &(_137321_item), &(_136013_n));
			}
			_iter_next_1d9b91699:;
			++it;
			goto _iter_begin_1d9b91699;
		}
		_iter_end_1d9b91699:;
	};
}

inline void _1d9b98ecb_checkEnumItemsInt1(jule::Ptr<_1d65b5c81_Sema> _self_, jule::Ptr<_1d668060e_Prim>* _134844_prim, jule::Ptr<_1d6547c57_Enum>* _134862_e) {
	jule::I64 _134913_max = static_cast<jule::I64>(0LL);;
	{
		
{
			_case_begin_1d9b99c8a:;
			{
				_134913_max=static_cast<jule::I64>(_1d431b797_MaxI(_1d6680950_Str((*(_134844_prim)).ptr())));
			}
		}
		_match_end_1d9b99b25:;
	};
	jule::Ptr<_1d6648e13_Eval> _135913_eval = _1d65c0d68_eval(_self_, jule::Trait<_1d669756b_Lookup>(_self_, 3));;
	jule::I64 _136013_n = static_cast<jule::I64>(0LL);;
	jule::Ptr<_1d65471da_EnumItem> _136113_first = (*((*(_134862_e))))._field_Items[0LL];;
	_1d9b9bdd0_checkEnumItemInt(_self_, &(_135913_eval), _134862_e, _134844_prim, &(_136113_first), &(_136013_n));
	if (((*((*(_136113_first))._field_Value))._field_Data != nullptr)) {
		{
			
{
				_case_begin_1d9b9ad13:;
				{
					_136013_n=static_cast<jule::I64>(_1d432389d_AsI64((*((*((*(_136113_first))._field_Value))._field_Data))._field_Constant.ptr()));
				}
			}
			_match_end_1d9b9b594:;
		};
	};
	{
		auto expr = (*((*(_134862_e))))._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1d9ba67be:;
		if (it != expr_end) {
			jule::Ptr<_1d65471da_EnumItem> _137321_item = *it;
			{
				if (((_1d6547592_AutoExpr(_137321_item.ptr()) && (_136013_n > 0LL)) && ((_134913_max - _136013_n) <= 0LL))) {
					_1d65b88bb_pushErr(_self_.ptr(), (*(_137321_item))._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					goto _iter_end_1d9ba67be;
				};
				(_136013_n)++;
				_1d9b9bdd0_checkEnumItemInt(_self_, &(_135913_eval), _134862_e, _134844_prim, &(_137321_item), &(_136013_n));
			}
			_iter_next_1d9ba67be:;
			++it;
			goto _iter_begin_1d9ba67be;
		}
		_iter_end_1d9ba67be:;
	};
}



inline void _1d65c7721_checkEnumItemsInt(jule::Ptr<_1d65b5c81_Sema> _self_, jule::Ptr<_1d6547c57_Enum>* _138342_e) {
	jule::Ptr<_1d668060e_Prim> _13849_prim = _1d667a186_Prim((*((*((*(_138342_e))))._field_Kind))._field_Kind.ptr());;
	{
		
		if (_1d432004d_IsSigInt((*(_13849_prim))._field_Kind)) {
			_case_begin_1d9b87a69:;
			{
				_1d9b98ecb_checkEnumItemsInt1(_self_, &(_13849_prim), _138342_e);
			}
		}
		else {
			_case_begin_1d9b876c3:;
			{
				_1d9b87e43_checkEnumItemsInt1(_self_, &(_13849_prim), _138342_e);
			}
		}
		_match_end_1d9b8765c:;
	};
}



inline void _1d65c79c9_checkEnumDecl(jule::Ptr<_1d65b5c81_Sema> _self_, jule::Ptr<_1d6547c57_Enum>* _139338_e) {
	if (_1d64d8742_IsIgnoreIdent((*((*(_139338_e))))._field_Ident)) {
		_1d65b88bb_pushErr(_self_.ptr(), (*((*(_139338_e))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1d65b95d1_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_139338_e)))), &((*((*(_139338_e))))._field_Ident), false)) {
		_1d65b88bb_pushErr(_self_.ptr(), (*((*(_139338_e))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_139338_e))))._field_Ident, &__jule_any_type4)}));
		_1d65b8c2e_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*((*(_139338_e))))._field_Items.len() == 0LL)) {
		_1d65b88bb_pushErr(_self_.ptr(), (*((*(_139338_e))))._field_Token, jule::Str::lit("enum @ have no field", 20), jule::Slice<jule::Any>::make({jule::Any((*((*(_139338_e))))._field_Ident, &__jule_any_type4)}));
		return;;
	};
	_1d9bab3b7_checkEnumItemsDup(_self_.ptr(), (*((*(_139338_e))))._field_Items);
	if (((*((*(_139338_e))))._field_Kind != nullptr)) {
		if ((!(_1d65be53c_checkType(_self_, &((*((*(_139338_e))))._field_Kind), jule::Trait<_1d669756b_Lookup>(_self_, 3))))) {
			return;;
		};
	} else {
		(*((*(_139338_e))))._field_Kind=(*(_1d675d4bc_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	jule::Ptr<_1d668060e_Prim> _141713_t = _1d667a186_Prim((*((*((*(_139338_e))))._field_Kind))._field_Kind.ptr());;
	if ((_141713_t == nullptr)) {
		_1d65b88bb_pushErr(_self_.ptr(), (*((*(_139338_e))))._field_Token, jule::Str::lit("invalid type source", 19), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if (_1d6683a96_IsStr(_141713_t.ptr())) {
			_case_begin_1d9bb3116:;
			{
				_1d65c6a72_checkEnumItemsStr(_self_, _139338_e);
			}
		}
		else if (_1d4320625_IsInt(_1d6680950_Str(_141713_t.ptr()))) {
			_case_begin_1d9bb2d19:;
			{
				_1d65c7721_checkEnumItemsInt(_self_, _139338_e);
			}
		}
		else {
			_case_begin_1d9bb2ca3:;
			{
				_1d65b88bb_pushErr(_self_.ptr(), (*((*(_139338_e))))._field_Token, jule::Str::lit("invalid type source", 19), jule::Slice<jule::Any>());
			}
		}
		_match_end_1d9bb23e0:;
	};
}



inline void _1d65c7c82_checkTypeEnumDecl(jule::Ptr<_1d65b5c81_Sema> _self_, jule::Ptr<_1d6549462_TypeEnum>* _143442_e) {
	if (_1d64d8742_IsIgnoreIdent((*((*(_143442_e))))._field_Ident)) {
		_1d65b88bb_pushErr(_self_.ptr(), (*((*(_143442_e))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1d65b95d1_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_143442_e)))), &((*((*(_143442_e))))._field_Ident), false)) {
		_1d65b88bb_pushErr(_self_.ptr(), (*((*(_143442_e))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_143442_e))))._field_Ident, &__jule_any_type4)}));
		_1d65b8c2e_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*((*(_143442_e))))._field_Items.len() == 0LL)) {
		_1d65b88bb_pushErr(_self_.ptr(), (*((*(_143442_e))))._field_Token, jule::Str::lit("enum @ have no field", 20), jule::Slice<jule::Any>::make({jule::Any((*((*(_143442_e))))._field_Ident, &__jule_any_type4)}));
		return;;
	};
	_1d9bb8380_checkEnumItemsDup(_self_.ptr(), (*((*(_143442_e))))._field_Items);
	{
		auto expr = &((*((*(_143442_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9bb9491:;
		if (it != expr_end) {
			jule::Ptr<_1d6548d8a_TypeEnumItem> _144821_item = *it;
			{
				if (((*(_144821_item))._field_Kind == nullptr)) {
					_1d65b88bb_pushErr(_self_.ptr(), (*(_144821_item))._field_Token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
					goto _iter_next_1d9bb9491;
				};
				jule::Bool _145313_ok = _1d65be53c_checkType(_self_, &((*(_144821_item))._field_Kind), jule::Trait<_1d669756b_Lookup>(_self_, 3));;
				if ((!(_145313_ok))) {
					goto _iter_next_1d9bb9491;
				};
				jule::Ptr<_1d668060e_Prim> _145713_p = _1d667a186_Prim((*((*(_144821_item))._field_Kind))._field_Kind.ptr());;
				if (((_145713_p != nullptr) && _1d6683d2c_IsAny(_145713_p.ptr()))) {
					_1d65b88bb_pushErr(_self_.ptr(), (*(_144821_item))._field_Token, jule::Str::lit("the <any> type is not allowed for type-enum declarations", 56), jule::Slice<jule::Any>());
				};
			}
			_iter_next_1d9bb9491:;
			++it;
			goto _iter_begin_1d9bb9491;
		}
		_iter_end_1d9bb9491:;
	};
	if (((*((*(_143442_e))))._field_Items.len() == 1LL)) {
		jule::Ptr<_1d6548d8a_TypeEnumItem> _146317_item = (*((*(_143442_e))))._field_Items[0LL];;
		_1d6677a35_TypeKind _146413_tk = _1d6677a35_TypeKind{._field_Kind=jule::Trait<_1d667757e_Kind>((*(_143442_e)), 4)};;
		if ((((*((*(_146317_item))._field_Kind))._field_Kind != nullptr) && _1d667823e_Equal((*((*(_146317_item))._field_Kind))._field_Kind, ((jule::Ptr<_1d6677a35_TypeKind>)((&(_146413_tk))))))) {
			_1d65b88bb_pushErr(_self_.ptr(), (*(_146317_item))._field_Token, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any(_1d65497a3_Str((*(_143442_e)).ptr()), &__jule_any_type4)}));
		};
	};
}



inline jule::Bool _1d65c8018_checkEnumDecls(jule::Ptr<_1d65b5c81_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9bc42d1:;
		if (it != expr_end) {
			jule::Ptr<_1d6547c57_Enum> _147521_e = *it;
			{
				_1d65c79c9_checkEnumDecl(_self_, &(_147521_e));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1d9bc42d1:;
			++it;
			goto _iter_begin_1d9bc42d1;
		}
		_iter_end_1d9bc42d1:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1d65c829e_checkTypeEnumDecls(jule::Ptr<_1d65b5c81_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9bc59a8:;
		if (it != expr_end) {
			jule::Ptr<_1d6549462_TypeEnum> _148721_e = *it;
			{
				_1d65c7c82_checkTypeEnumDecl(_self_, &(_148721_e));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1d9bc59a8:;
			++it;
			goto _iter_begin_1d9bc59a8;
		}
		_iter_end_1d9bc59a8:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1d65c85e0_checkDeclGenerics(_1d65b5c81_Sema* _self_, jule::Slice<jule::Ptr<_1d65085db_GenericDecl>>* _149737_generics) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = _149737_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9bc6e82:;
		if (it != expr_end) {
			jule::I64 _149913_i = it - expr->begin();
			jule::Ptr<_1d65085db_GenericDecl> *_149916_g = it;
			{
				if (_1d64d8742_IsIgnoreIdent((*((*(_149916_g))))._field_Ident)) {
					_1d65b88bb_pushErr(_self_, (*((*(_149916_g))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1d9bc6e82;
				};
				_julec_label_1d9bc85d2:;
				{
					auto expr = _149737_generics;
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d9bc8868:;
					if (it != expr_end) {
						jule::I64 _150817_j = it - expr->begin();
						jule::Ptr<_1d65085db_GenericDecl> *_150820_ct = it;
						{
							{
								
								if ((_150817_j >= _149913_i)) {
									_case_begin_1d9bc945c:;
									{
										goto _iter_end_1d9bc8868;
									}
								}
								else if (((*((*(_149916_g))))._field_Ident == (*((*(_150820_ct))))._field_Ident)) {
									_case_begin_1d9bc94d4:;
									{
										_1d65b88bb_pushErr(_self_, (*((*(_149916_g))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_149916_g))))._field_Ident, &__jule_any_type4)}));
										_1d65b8c2e_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										__jule_func_result=false;
										goto _iter_end_1d9bc8868;
									}
								}
								_match_end_1d9bc935d:;
							};
						}
						_iter_next_1d9bc8868:;
						++it;
						_150817_j++;
						goto _iter_begin_1d9bc8868;
					}
					_iter_end_1d9bc8868:;
				};
			}
			_iter_next_1d9bc6e82:;
			++it;
			_149913_i++;
			goto _iter_begin_1d9bc6e82;
		}
		_iter_end_1d9bc6e82:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1d65c8931_checkFnDeclParamsDup(_1d65b5c81_Sema* _self_, jule::Ptr<_1d653226e_Fn>* _152440_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	_julec_label_1d9bcb5c4:;
	{
		auto expr = &((*((*(_152440_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9bcb9d1:;
		if (it != expr_end) {
			jule::I64 _152713_i = it - expr->begin();
			jule::Ptr<_1d653079a_Param> *_152716_p = it;
			{
				{
					auto expr = &((*((*(_152440_f))))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d9bcc6c4:;
					if (it != expr_end) {
						jule::Ptr<_1d65085db_GenericDecl> *_152920_g = it;
						{
							if (((*((*(_152716_p))))._field_Ident == (*((*(_152920_g))))._field_Ident)) {
								__jule_func_result=false;
								_1d65b88bb_pushErr(_self_, (*((*(_152716_p))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_152716_p))))._field_Ident, &__jule_any_type4)}));
								_1d65b8c2e_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
								goto _iter_next_1d9bcb9d1;
							};
						}
						_iter_next_1d9bcc6c4:;
						++it;
						goto _iter_begin_1d9bcc6c4;
					}
					_iter_end_1d9bcc6c4:;
				};
				_julec_label_1d9bcc40a:;
				{
					auto expr = &((*((*(_152440_f))))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d9bccbad:;
					if (it != expr_end) {
						jule::I64 _153917_j = it - expr->begin();
						jule::Ptr<_1d653079a_Param> *_153920_jp = it;
						{
							{
								
								if ((_153917_j >= _152713_i)) {
									_case_begin_1d9bcedd0:;
									{
										goto _iter_end_1d9bccbad;
									}
								}
								else if (_1d64d8742_IsIgnoreIdent((*((*(_152716_p))))._field_Ident) || _1d64d8742_IsIgnoreIdent((*((*(_153920_jp))))._field_Ident) || _1d64d8a0b_IsAnonIdent((*((*(_152716_p))))._field_Ident) || _1d64d8a0b_IsAnonIdent((*((*(_153920_jp))))._field_Ident)) {
									_case_begin_1d9bcee57:;
									{
										goto _iter_end_1d9bccbad;
									}
								}
								else if (((*((*(_152716_p))))._field_Ident == (*((*(_153920_jp))))._field_Ident)) {
									_case_begin_1d9bceece:;
									{
										__jule_func_result=false;
										_1d65b88bb_pushErr(_self_, (*((*(_152716_p))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_152716_p))))._field_Ident, &__jule_any_type4)}));
										_1d65b8c2e_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										goto _iter_next_1d9bcb9d1;
									}
								}
								_match_end_1d9bcecc0:;
							};
						}
						_iter_next_1d9bccbad:;
						++it;
						_153917_j++;
						goto _iter_begin_1d9bccbad;
					}
					_iter_end_1d9bccbad:;
				};
			}
			_iter_next_1d9bcb9d1:;
			++it;
			_152713_i++;
			goto _iter_begin_1d9bcb9d1;
		}
		_iter_end_1d9bcb9d1:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1d65c8c72_checkFnDeclResultDup(_1d65b5c81_Sema* _self_, jule::Ptr<_1d653226e_Fn>* _156140_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	if (_1d65326e2_IsVoid((*(_156140_f)).ptr())) {
		return __jule_func_result;;
	};
	{
		auto expr = &((*((*((*(_156140_f))))._field_Result))._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9bd3983:;
		if (it != expr_end) {
			jule::I64 _156813_i = it - expr->begin();
			jule::Ptr<_1d64d5cd3_Token> *_156816_v = it;
			{
				if ((_1d64d8742_IsIgnoreIdent((*((*(_156816_v))))._field_Kind) || _1d64d8a0b_IsAnonIdent((*((*(_156816_v))))._field_Kind))) {
					goto _iter_next_1d9bd3983;
				};
				{
					auto expr = &((*((*(_156140_f))))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d9bd5039:;
					if (it != expr_end) {
						jule::Ptr<_1d65085db_GenericDecl> *_157320_g = it;
						{
							if (((*((*(_156816_v))))._field_Kind == (*((*(_157320_g))))._field_Ident)) {
								goto _julec_label_1d9bd5b3e;
							};
						}
						_iter_next_1d9bd5039:;
						++it;
						goto _iter_begin_1d9bd5039;
					}
					_iter_end_1d9bd5039:;
				};
				{
					auto expr = &((*((*(_156140_f))))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d9bd649c:;
					if (it != expr_end) {
						jule::Ptr<_1d653079a_Param> *_157920_p = it;
						{
							if (((*((*(_156816_v))))._field_Kind == (*((*(_157920_p))))._field_Ident)) {
								goto _julec_label_1d9bd5b3e;
							};
						}
						_iter_next_1d9bd649c:;
						++it;
						goto _iter_begin_1d9bd649c;
					}
					_iter_end_1d9bd649c:;
				};
				_julec_label_1d9bd724a:;
				{
					auto expr = &((*((*((*(_156140_f))))._field_Result))._field_Idents);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d9bd7bc9:;
					if (it != expr_end) {
						jule::I64 _158717_j = it - expr->begin();
						jule::Ptr<_1d64d5cd3_Token> *_158720_jv = it;
						{
							{
								
								if ((_158717_j >= _156813_i)) {
									_case_begin_1d9bd8735:;
									{
										goto _iter_end_1d9bd7bc9;
									}
								}
								else if (((*((*(_158720_jv))))._field_Kind == (*((*(_156816_v))))._field_Kind)) {
									_case_begin_1d9bd87ac:;
									{
										goto _julec_label_1d9bd5b3e;
									}
								}
								_match_end_1d9bd8625:;
							};
						}
						_iter_next_1d9bd7bc9:;
						++it;
						_158717_j++;
						goto _iter_begin_1d9bd7bc9;
					}
					_iter_end_1d9bd7bc9:;
				};
				goto _iter_next_1d9bd3983;
				_julec_label_1d9bd5b3e:;
				_1d65b88bb_pushErr(_self_, (*(_156816_v)), jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_156816_v))))._field_Kind, &__jule_any_type4)}));
				_1d65b8c2e_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
				__jule_func_result=false;
			}
			_iter_next_1d9bd3983:;
			++it;
			_156813_i++;
			goto _iter_begin_1d9bd3983;
		}
		_iter_end_1d9bd3983:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1d65c90b3_checkFnVariadicParam(jule::Ptr<_1d65b5c81_Sema> _self_, jule::Ptr<_1d653226e_Fn>* _160645_f) {
	if (((*((*(_160645_f))))._field_Params.len() == 0LL)) {
		return false;;
	};
	jule::Ptr<_1d653079a_Param> _161013_param = (*((*(_160645_f))))._field_Params[((*((*(_160645_f))))._field_Params.len() - 1LL)];;
	if (((*(_161013_param))._field_Variadic && (*(_161013_param))._field_Reference)) {
		_1d65b88bb_pushErr(_self_.ptr(), (*(_161013_param))._field_Token, jule::Str::lit("variadic storage cannot be reference", 36), jule::Slice<jule::Any>());
	};
	return true;;
}



inline void _1d65c936b_checkFnDeclPrototype(jule::Ptr<_1d65b5c81_Sema> _self_, jule::Ptr<_1d653226e_Fn>* _161945_f) {
	if (((*((*(_161945_f))))._field_Exceptional && (*((*(_161945_f))))._field_Binded)) {
		_1d65b88bb_pushErr(_self_.ptr(), (*((*(_161945_f))))._field_Token, jule::Str::lit("binded defines cannot be exceptional", 36), jule::Slice<jule::Any>());
		return;;
	};
	if ((*((*(_161945_f))))._field_Exceptional) {
		if (_1d6532c0e_IsEntryPoint((*(_161945_f)).ptr())) {
			_1d65b88bb_pushErr(_self_.ptr(), (*((*(_161945_f))))._field_Token, jule::Str::lit("entry point cannot be exceptional", 33), jule::Slice<jule::Any>());
		} else if (_1d6532e95_IsInit((*(_161945_f)).ptr())) {
			_1d65b88bb_pushErr(_self_.ptr(), (*((*(_161945_f))))._field_Token, jule::Str::lit("initializer function cannot be exceptional", 42), jule::Slice<jule::Any>());
		};
	};
	{
		
		if ((!(_1d65c85e0_checkDeclGenerics(_self_.ptr(), &((*((*(_161945_f))))._field_Generics))))) {
			_case_begin_1d9be0c04:;
		}
		else if ((!(_1d65c8931_checkFnDeclParamsDup(_self_.ptr(), _161945_f)))) {
			_case_begin_1d9be0c7b:;
		}
		else if ((!(_1d65c8c72_checkFnDeclResultDup(_self_.ptr(), _161945_f)))) {
			_case_begin_1d9be0d03:;
		}
		else if ((!(_1d65c90b3_checkFnVariadicParam(_self_, _161945_f)))) {
			_case_begin_1d9be0d7a:;
		}
		_match_end_1d9bde31d:;
	};
}



inline jule::Bool _1d65c9822_catchTraitInheritCycle(jule::Ptr<_1d65b5c81_Sema> _self_, jule::Ptr<_1d654554b_Trait> _164142_t1, jule::Ptr<_1d654554b_Trait> _164158_t2, _1e01838bc_StrBuilder* _164175_message) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_164158_t2))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9be3465:;
		if (it != expr_end) {
			jule::Ptr<_1d667ec07_TypeSymbol> _164321_i = *it;
			{
				if (((*(_164321_i))._field_Kind == nullptr)) {
					goto _iter_next_1d9be3465;
				};
				jule::Ptr<_1d654554b_Trait> _164717_t3 = _1d667b990_Trait((*(_164321_i))._field_Kind.ptr());;
				if ((_164142_t1 == _164717_t3)) {
					_1d65ce5a2_pushCycleError(_self_.ptr(), &((*(_164158_t2))._field_Ident), &((*(_164717_t3))._field_Ident), _164175_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if ((!(_1d65c9822_catchTraitInheritCycle(_self_, _164142_t1, _164717_t3, _164175_message)))) {
					_1d65ce5a2_pushCycleError(_self_.ptr(), &((*(_164158_t2))._field_Ident), &((*(_164717_t3))._field_Ident), _164175_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1d9be3465:;
			++it;
			goto _iter_begin_1d9be3465;
		}
		_iter_end_1d9be3465:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1d65c9b63__checkTraitDeclInherits(jule::Ptr<_1d65b5c81_Sema> _self_, jule::Ptr<_1d654554b_Trait>* _166048_t) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_166048_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9be6c3d:;
		if (it != expr_end) {
			jule::I64 _166214_i = it - expr->begin();
			jule::Ptr<_1d667ec07_TypeSymbol> _166221_it = *it;
			{
				if ((!(_1d65be53c_checkType(_self_, &(_166221_it), jule::Trait<_1d669756b_Lookup>(_self_, 3))))) {
					__jule_func_result=false;
					goto _iter_next_1d9be6c3d;
				};
				jule::Ptr<_1d654554b_Trait> _166717_t2 = _1d667b990_Trait((*(_166221_it))._field_Kind.ptr());;
				if ((_166717_t2 == nullptr)) {
					_1d65b88bb_pushErr(_self_.ptr(), (*((*(_166221_it))._field_Decl))._field_Token, jule::Str::lit("trait @ cannot implement @, type should be trait", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_166048_t))))._field_Ident, &__jule_any_type4),jule::Any(_1d6677ded_Str((*(_166221_it))._field_Kind.ptr()), &__jule_any_type4)}));
					__jule_func_result=false;
					goto _iter_next_1d9be6c3d;
				};
				{
					auto expr = &((*((*(_166048_t))))._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d9bea03d:;
					if (it != expr_end) {
						jule::I64 _167317_j = it - expr->begin();
						jule::Ptr<_1d667ec07_TypeSymbol> _167320_it2 = *it;
						{
							if ((_167317_j >= _166214_i)) {
								goto _iter_end_1d9bea03d;
							};
							if ((((*(_167320_it2))._field_Kind != nullptr) && _1d667823e_Equal((*(_166221_it))._field_Kind, (*(_167320_it2))._field_Kind))) {
								_1d65b88bb_pushErr(_self_.ptr(), (*((*(_166221_it))._field_Decl))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_166717_t2))._field_Ident, &__jule_any_type4)}));
								__jule_func_result=false;
								goto _iter_end_1d9bea03d;
							};
						}
						_iter_next_1d9bea03d:;
						++it;
						_167317_j++;
						goto _iter_begin_1d9bea03d;
					}
					_iter_end_1d9bea03d:;
				};
				if (((*(_166048_t)) == _166717_t2)) {
					_1d65b88bb_pushErr(_self_.ptr(), (*((*(_166221_it))._field_Decl))._field_Token, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_166048_t))))._field_Ident, &__jule_any_type4)}));
					__jule_func_result=false;
				} else {
					_1e01838bc_StrBuilder _168721_message = static__1e0183b64_New(64LL);;
					__jule_func_result=(__jule_func_result && _1d65c9822_catchTraitInheritCycle(_self_, (*(_166048_t)), _166717_t2, &(_168721_message)));
					if ((_1e018d476_Len(&_168721_message) > 0LL)) {
						jule::Str _169025_errMsg = _1e018cee2_Str(&_168721_message);;
						_1e018d1e0_Clear(&_168721_message);
						_1d65ce5a2_pushCycleError(_self_.ptr(), &((*((*(_166048_t))))._field_Ident), &((*(_166717_t2))._field_Ident), &(_168721_message));
						_169025_errMsg+=_1e018cee2_Str(&_168721_message);
						_1d65b88bb_pushErr(_self_.ptr(), (*((*(_166221_it))._field_Decl))._field_Token, jule::Str::lit("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_169025_errMsg, &__jule_any_type4)}));
					};
				};
			}
			_iter_next_1d9be6c3d:;
			++it;
			_166214_i++;
			goto _iter_begin_1d9be6c3d;
		}
		_iter_end_1d9be6c3d:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1d65c9e1b_checkTraitDeclInherits(jule::Ptr<_1d65b5c81_Sema> _self_, jule::Ptr<_1d654554b_Trait>* _170147_t) {
	{
		auto expr = &((*((*(_170147_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9c01709:;
		if (it != expr_end) {
			jule::I64 _170214_i = it - expr->begin();
			jule::Ptr<_1d667ec07_TypeSymbol> _170221_it = *it;
			{
				jule::Ptr<_1d654554b_Trait> _170317_t1 = _1d667b990_Trait((*(_170221_it))._field_Kind.ptr());;
				{
					auto expr = &((*((*(_170147_t))))._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d9c02c6b:;
					if (it != expr_end) {
						jule::I64 _170418_j = it - expr->begin();
						jule::Ptr<_1d667ec07_TypeSymbol> _170425_it2 = *it;
						{
							if ((_170418_j == _170214_i)) {
								goto _iter_next_1d9c02c6b;
							};
							jule::Ptr<_1d654554b_Trait> _170821_t2 = _1d667b990_Trait((*(_170425_it2))._field_Kind.ptr());;
							{
								auto expr = &((*(_170317_t1))._field_Methods);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1d9c0450e:;
								if (it != expr_end) {
									jule::Ptr<_1d653226e_Fn> _170929_t1m = *it;
									{
										jule::Ptr<_1d653226e_Fn> _171025_t2m = _1d65461ea_FindMethod(_170821_t2.ptr(), (*(_170929_t1m))._field_Ident);;
										if ((_171025_t2m == nullptr)) {
											goto _iter_next_1d9c0450e;
										};
										jule::Ptr<_1d6535173_FnIns> _171421_t1f = _1d65c33ed_getTraitCheckFnKind(_self_, &(_170929_t1m));;
										jule::Ptr<_1d6535173_FnIns> _171521_t2f = _1d65c33ed_getTraitCheckFnKind(_self_, &(_171025_t2m));;
										if ((!(_1d65360db_equalTrait(_171421_t1f, &(_171521_t2f))))) {
											_1d65b88bb_pushErr(_self_.ptr(), (*((*(_170221_it))._field_Decl))._field_Token, jule::Str::lit("trait @ inherits trait @, but same identifiers implemented different;\n       @\n       @", 87), jule::Slice<jule::Any>::make({jule::Any((*((*(_170147_t))))._field_Ident, &__jule_any_type4),jule::Any((*(_170821_t2))._field_Ident, &__jule_any_type4),jule::Any(_1d6537021_GetKindStr(_171421_t1f.ptr(), true), &__jule_any_type4),jule::Any(_1d6537021_GetKindStr(_171521_t2f.ptr(), true), &__jule_any_type4)}));
											return;;
										};
									}
									_iter_next_1d9c0450e:;
									++it;
									goto _iter_begin_1d9c0450e;
								}
								_iter_end_1d9c0450e:;
							};
						}
						_iter_next_1d9c02c6b:;
						++it;
						_170418_j++;
						goto _iter_begin_1d9c02c6b;
					}
					_iter_end_1d9c02c6b:;
				};
			}
			_iter_next_1d9c01709:;
			++it;
			_170214_i++;
			goto _iter_begin_1d9c01709;
		}
		_iter_end_1d9c01709:;
	};
}



inline void _1d65ca1c4_checkTraitDeclMethod(jule::Ptr<_1d65b5c81_Sema> _self_, jule::Ptr<_1d653226e_Fn>* _172645_f) {
	if (_1d64d8742_IsIgnoreIdent((*((*(_172645_f))))._field_Ident)) {
		_1d65b88bb_pushErr(_self_.ptr(), (*((*(_172645_f))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1d64d8a0b_IsAnonIdent((*((*(_172645_f))))._field_Ident)) {
		_1d65b88bb_pushErr(_self_.ptr(), (*((*(_172645_f))))._field_Token, jule::Str::lit("anonymous functions are not allowed in this scope", 49), jule::Slice<jule::Any>());
	};
	(*((*(_172645_f))))._field_sema=_self_;
	_1d65c936b_checkFnDeclPrototype(_self_, _172645_f);
	jule::Ptr<_1d6535173_FnIns> _173413_ins = _1d65339ce_instance((*(_172645_f)));;
	_1d65c4850_reloadFnInsTypes(_self_, _173413_ins);
	(*(_173413_ins))._field_reloaded=true;
	_1d6533cdc_appendInstance((*(_172645_f)).ptr(), &(_173413_ins));
}



inline void _1d65ca47c_checkTraitDeclMethods(jule::Ptr<_1d65b5c81_Sema> _self_, jule::Ptr<_1d654554b_Trait>* _174046_t) {
	{
		auto expr = &((*((*(_174046_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9c0b527:;
		if (it != expr_end) {
			jule::I64 _174114_i = it - expr->begin();
			jule::Ptr<_1d653226e_Fn> _174121_f = *it;
			{
				_1d65ca1c4_checkTraitDeclMethod(_self_, &(_174121_f));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					return;;
				};
				if ((_1d654687c_findMethodInherit((*(_174046_t)).ptr(), &((*(_174121_f))._field_Ident)) != nullptr)) {
					_1d65b88bb_pushErr(_self_.ptr(), (*(_174121_f))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_174121_f))._field_Ident, &__jule_any_type4)}));
					_1d65b8c2e_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
					goto _iter_next_1d9c0b527;
				};
				_julec_label_1d9c0d408:;
				{
					auto expr = &((*((*(_174046_t))))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d9c0e470:;
					if (it != expr_end) {
						jule::I64 _175717_j = it - expr->begin();
						jule::Ptr<_1d653226e_Fn> _175720_jf = *it;
						{
							{
								
								if ((_175717_j >= _174114_i)) {
									_case_begin_1d9c0eecb:;
									{
										goto _iter_end_1d9c0e470;
									}
								}
								else if (((*(_174121_f))._field_Ident == (*(_175720_jf))._field_Ident)) {
									_case_begin_1d9c10053:;
									{
										_1d65b88bb_pushErr(_self_.ptr(), (*(_174121_f))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_174121_f))._field_Ident, &__jule_any_type4)}));
										_1d65b8c2e_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										goto _iter_end_1d9c0e470;
									}
								}
								_match_end_1d9c0edbb:;
							};
						}
						_iter_next_1d9c0e470:;
						++it;
						_175717_j++;
						goto _iter_begin_1d9c0e470;
					}
					_iter_end_1d9c0e470:;
				};
			}
			_iter_next_1d9c0b527:;
			++it;
			_174114_i++;
			goto _iter_begin_1d9c0b527;
		}
		_iter_end_1d9c0b527:;
	};
}



inline void _1d65ca735_checkTraitDecl(jule::Ptr<_1d65b5c81_Sema> _self_, jule::Ptr<_1d654554b_Trait>* _177639_t) {
	if (_1d64d8742_IsIgnoreIdent((*((*(_177639_t))))._field_Ident)) {
		_1d65b88bb_pushErr(_self_.ptr(), (*((*(_177639_t))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1d65b95d1_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_177639_t)))), &((*((*(_177639_t))))._field_Ident), false)) {
		_1d65b88bb_pushErr(_self_.ptr(), (*((*(_177639_t))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_177639_t))))._field_Ident, &__jule_any_type4)}));
		_1d65b8c2e_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1d65c9e1b_checkTraitDeclInherits(_self_, _177639_t);
	_1d65ca47c_checkTraitDeclMethods(_self_, _177639_t);
}



inline jule::Bool _1d65ca9bb_checkTraitDecls(jule::Ptr<_1d65b5c81_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9c152ab:;
		if (it != expr_end) {
			jule::Ptr<_1d654554b_Trait> _179021_t = *it;
			{
				_1d65ca735_checkTraitDecl(_self_, &(_179021_t));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1d9c152ab:;
			++it;
			goto _iter_begin_1d9c152ab;
		}
		_iter_end_1d9c152ab:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1d65cadb7_checkTraitImplMethods(_1d65b5c81_Sema* _self_, jule::Ptr<_1d654554b_Trait>* _180045_base, jule::Ptr<_1d656dbc3_Impl>* _180060_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_180060_ipl))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9c16cb3:;
		if (it != expr_end) {
			jule::Ptr<_1d653226e_Fn> *_180216_f = it;
			{
				if ((_1d65461ea_FindMethod((*(_180045_base)).ptr(), (*((*(_180216_f))))._field_Ident) == nullptr)) {
					_1d65b88bb_pushErr(_self_, (*((*(_180216_f))))._field_Token, jule::Str::lit("undefined identifier: trait @ has no define @", 45), jule::Slice<jule::Any>::make({jule::Any((*((*(_180045_base))))._field_Ident, &__jule_any_type4),jule::Any((*((*(_180216_f))))._field_Ident, &__jule_any_type4)}));
					__jule_func_result=false;
				};
			}
			_iter_next_1d9c16cb3:;
			++it;
			goto _iter_begin_1d9c16cb3;
		}
		_iter_end_1d9c16cb3:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1d65cb2b3_implToStruct(jule::Ptr<_1d65b5c81_Sema> _self_, jule::Ptr<_1d651c2d1_Struct>* _181137_dest, jule::Ptr<_1d656dbc3_Impl>* _181157_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_181157_ipl))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9c19414:;
		if (it != expr_end) {
			jule::Ptr<_1d653226e_Fn> _181521_f = *it;
			{
				if (((_1d651ce4c_FindMethod((*(_181137_dest)).ptr(), (*(_181521_f))._field_Ident, (*(_181521_f))._field_Statically) != nullptr) || (_1d651d5ce_FindField((*(_181137_dest)).ptr(), (*(_181521_f))._field_Ident) != nullptr))) {
					_1d65b88bb_pushErr(_self_.ptr(), (*(_181521_f))._field_Token, jule::Str::lit("identifier duplication: struct @ already have define @", 54), jule::Slice<jule::Any>::make({jule::Any((*((*(_181137_dest))))._field_Ident, &__jule_any_type4),jule::Any((*(_181521_f))._field_Ident, &__jule_any_type4)}));
					__jule_func_result=false;
					goto _iter_next_1d9c19414;
				};
				if ((((*((*(_181137_dest))))._field_Generics.len() > 0LL) && ((*(_181521_f))._field_Generics.len() > 0LL))) {
					{
						auto expr = &((*(_181521_f))._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1d9c1c1c5:;
						if (it != expr_end) {
							jule::Ptr<_1d65085db_GenericDecl> _182324_fg = *it;
							{
								{
									auto expr = &((*((*(_181137_dest))))._field_Generics);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1d9c1cb21:;
									if (it != expr_end) {
										jule::Ptr<_1d65085db_GenericDecl> _182428_dg = *it;
										{
											if (((*(_182324_fg))._field_Ident == (*(_182428_dg))._field_Ident)) {
												_1d65b88bb_pushErr(_self_.ptr(), (*(_182324_fg))._field_Token, jule::Str::lit("methods cannot have same generic identifier with owner same time", 64), jule::Slice<jule::Any>());
												__jule_func_result=false;
											};
										}
										_iter_next_1d9c1cb21:;
										++it;
										goto _iter_begin_1d9c1cb21;
									}
									_iter_end_1d9c1cb21:;
								};
							}
							_iter_next_1d9c1c1c5:;
							++it;
							goto _iter_begin_1d9c1c1c5;
						}
						_iter_end_1d9c1c1c5:;
					};
				};
				_1d65b9944_checkDirectives(_self_, &((*(_181521_f))._field_Directives), jule::Any(_181521_f, &__jule_any_type64));
				(*(_181521_f))._field_sema=_self_;
				(*(_181521_f))._field_Owner=(*(_181137_dest));
				{ jule::Slice<jule::Ptr<_1d653226e_Fn>> &__jule_push_dest = (*((*(_181137_dest))))._field_Methods; __jule_push_dest.push(_181521_f); };
			}
			_iter_next_1d9c19414:;
			++it;
			goto _iter_begin_1d9c19414;
		}
		_iter_end_1d9c19414:;
	};
	{
		auto expr = &((*((*(_181157_ipl))))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9c198a9:;
		if (it != expr_end) {
			jule::Ptr<_1d65d9018_Var> _184021_v = *it;
			{
				;
				if (((_1d651ce4c_FindMethod((*(_181137_dest)).ptr(), (*(_184021_v))._field_Ident, true) != nullptr) || (_1d651d28d_FindStatic((*(_181137_dest)).ptr(), (*(_184021_v))._field_Ident) != nullptr))) {
					_1d65b88bb_pushErr(_self_.ptr(), (*(_184021_v))._field_Token, jule::Str::lit("identifier duplication: struct @ already have define @", 54), jule::Slice<jule::Any>::make({jule::Any((*((*(_181137_dest))))._field_Ident, &__jule_any_type4),jule::Any((*(_184021_v))._field_Ident, &__jule_any_type4)}));
					__jule_func_result=false;
					goto _iter_next_1d9c198a9;
				};
				{ jule::Slice<jule::Ptr<_1d65d9018_Var>> &__jule_push_dest = (*((*(_181137_dest))))._field_Statics; __jule_push_dest.push(_184021_v); };
			}
			_iter_next_1d9c198a9:;
			++it;
			goto _iter_begin_1d9c198a9;
		}
		_iter_end_1d9c198a9:;
	};
	return __jule_func_result;;
}



inline void _1d65cb56b_implTrait(jule::Ptr<_1d65b5c81_Sema> _self_, jule::Ptr<_1d656dbc3_Impl>* _185334_decl) {
	jule::Ptr<_1d6677a35_TypeKind> _185413_base_t = _1d65c0175_selectType(_self_, &((*((*(_185334_decl))))._field_Base));;
	if ((_185413_base_t == nullptr)) {
		return;;
	};
	jule::Ptr<_1d654554b_Trait> _185813_base = _1d667b990_Trait(_185413_base_t.ptr());;
	if ((_185813_base == nullptr)) {
		_1d65b88bb_pushErr(_self_.ptr(), (*((*((*(_185334_decl))))._field_Base))._field_Token, jule::Str::lit("invalid base type for impl: @", 29), jule::Slice<jule::Any>::make({jule::Any(_1d6677ded_Str(_185413_base_t.ptr()), &__jule_any_type4)}));
		_1d65b8c2e_pushSuggestion(_self_.ptr(), jule::Str::lit("expected trait, use a trait", 27), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1d6677a35_TypeKind> _186513_destT = _1d65c0175_selectType(_self_, &((*((*(_185334_decl))))._field_Dest));;
	if ((_186513_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1d652005e_StructIns> _186913_destS = _1d667b709_Struct(_186513_destT.ptr());;
	if ((_186913_destS == nullptr)) {
		_1d65b88bb_pushErr(_self_.ptr(), (*((*((*(_185334_decl))))._field_Dest))._field_Token, jule::Str::lit("invalid destination type for impl: @", 36), jule::Slice<jule::Any>::make({jule::Any(_1d6677ded_Str(_186513_destT.ptr()), &__jule_any_type4)}));
		_1d65b8c2e_pushSuggestion(_self_.ptr(), jule::Str::lit("expected structure, use a structure", 35), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1d651c2d1_Struct> _187613_dest = (*(_186913_destS))._field_Decl;;
	if ((_1d64dbc1d_Dir((*((*(_187613_dest))._field_Token))._field_File.ptr()) != _1d64dbc1d_Dir((*((*(_self_))._field_file))._field_File.ptr()))) {
		_1d65b88bb_pushErr(_self_.ptr(), (*((*((*(_185334_decl))))._field_Dest))._field_Token, jule::Str::lit("illegal implementation via definition from out of package", 57), jule::Slice<jule::Any>());
		return;;
	};
	_1d65d72d0_pushImplemented(_185813_base, &(_187613_dest));
	_1d65d75bb_pushImplements(&(_187613_dest), _185813_base);
	if (((*((*(_185334_decl))))._field_Statics.len() > 0LL)) {
		_1d65b88bb_pushErr(_self_.ptr(), (*((*((*(_185334_decl))))._field_Statics[0LL]))._field_Token, jule::Str::lit("trait implementations cannot implement static field", 51), jule::Slice<jule::Any>());
	};
	{
		
		if ((!(_1d65cadb7_checkTraitImplMethods(_self_.ptr(), &(_185813_base), _185334_decl)))) {
			_case_begin_1d9c31904:;
		}
		else if ((!(_1d65cb2b3_implToStruct(_self_, &(_187613_dest), _185334_decl)))) {
			_case_begin_1d9c3197b:;
		}
		_match_end_1d9c2de40:;
	};
}



inline void _1d65cb824_implStruct(jule::Ptr<_1d65b5c81_Sema> _self_, jule::Ptr<_1d656dbc3_Impl>* _189635_decl) {
	jule::Ptr<_1d6677a35_TypeKind> _189713_destT = _1d65c0175_selectType(_self_, &((*((*(_189635_decl))))._field_Dest));;
	if ((_189713_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1d652005e_StructIns> _190113_destS = _1d667b709_Struct(_189713_destT.ptr());;
	if ((_190113_destS == nullptr)) {
		_1d65b88bb_pushErr(_self_.ptr(), (*((*((*(_189635_decl))))._field_Dest))._field_Token, jule::Str::lit("invalid destination type for impl: @", 36), jule::Slice<jule::Any>::make({jule::Any(_1d6677ded_Str(_189713_destT.ptr()), &__jule_any_type4)}));
		_1d65b8c2e_pushSuggestion(_self_.ptr(), jule::Str::lit("expected structure, use a structure", 35), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1d651c2d1_Struct> _190813_dest = (*(_190113_destS))._field_Decl;;
	if ((_1d64dbc1d_Dir((*((*(_190813_dest))._field_Token))._field_File.ptr()) != _1d64dbc1d_Dir((*((*(_self_))._field_file))._field_File.ptr()))) {
		_1d65b88bb_pushErr(_self_.ptr(), (*((*((*(_189635_decl))))._field_Dest))._field_Token, jule::Str::lit("illegal implementation via definition from out of package", 57), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if ((!(_1d65cb2b3_implToStruct(_self_, &(_190813_dest), _189635_decl)))) {
			_case_begin_1d9c37432:;
		}
		_match_end_1d9c35b17:;
	};
}



inline void _1d65cbacc_implImpl(jule::Ptr<_1d65b5c81_Sema> _self_, jule::Ptr<_1d656dbc3_Impl>* _192033_decl) {
	{
		
		if (_1d656e08b_IsTraitImpl((*(_192033_decl)).ptr())) {
			_case_begin_1d9c38015:;
			{
				_1d65cb56b_implTrait(_self_, _192033_decl);
			}
		}
		else if (_1d656e322_IsStructImpl((*(_192033_decl)).ptr())) {
			_case_begin_1d9c3808c:;
			{
				_1d65cb824_implStruct(_self_, _192033_decl);
			}
		}
		_match_end_1d9c37e05:;
	};
}



inline void _1d65cbe40_checkVarDecl(jule::Ptr<_1d65b5c81_Sema> _self_, jule::Ptr<_1d65d9018_Var>* _193137_decl, jule::Trait<_1d669756b_Lookup> _193153_l) {
	if (_1d64d8742_IsIgnoreIdent((*((*(_193137_decl))))._field_Ident)) {
		_1d65b88bb_pushErr(_self_.ptr(), (*((*(_193137_decl))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	if (_1d65d9634_IsTypeInferred((*(_193137_decl)).ptr())) {
		if ((!(_1d65d939d_IsInitialized((*(_193137_decl)).ptr())))) {
			_1d65b88bb_pushErr(_self_.ptr(), (*((*(_193137_decl))))._field_Token, jule::Str::lit("type inferred declarations should have a initializer expression", 63), jule::Slice<jule::Any>());
		};
	} else {
		_1d65be53c_checkType(_self_, &((*((*(_193137_decl))))._field_Kind), _193153_l);
	};
	if ((*((*(_193137_decl))))._field_Reference) {
		if ((*((*(_193137_decl))))._field_Constant) {
			_1d65b88bb_pushErr(_self_.ptr(), (*((*(_193137_decl))))._field_Token, jule::Str::lit("references cannot be constant", 29), jule::Slice<jule::Any>());
		};
		if ((*((*(_193137_decl))))._field_Statically) {
			_1d65b88bb_pushErr(_self_.ptr(), (*((*(_193137_decl))))._field_Token, jule::Str::lit("static variables cannot be reference", 36), jule::Slice<jule::Any>());
		};
	};
	if ((!(_1d65d939d_IsInitialized((*(_193137_decl)).ptr())))) {
		if ((*((*(_193137_decl))))._field_Constant) {
			_1d65b88bb_pushErr(_self_.ptr(), (*((*(_193137_decl))))._field_Token, jule::Str::lit("missing expression for constant variable initialization", 55), jule::Slice<jule::Any>());
		};
		if ((*((*(_193137_decl))))._field_Statically) {
			_1d65b88bb_pushErr(_self_.ptr(), (*((*(_193137_decl))))._field_Token, jule::Str::lit("static variables must be have initialize expression", 51), jule::Slice<jule::Any>());
		};
		if ((*((*(_193137_decl))))._field_Reference) {
			_1d65b88bb_pushErr(_self_.ptr(), (*((*(_193137_decl))))._field_Token, jule::Str::lit("reference variables must be have lvalue initialize expression", 61), jule::Slice<jule::Any>());
		};
	};
}



inline void _1d65cc1e8_checkGlobalVarDecl(jule::Ptr<_1d65b5c81_Sema> _self_, jule::Ptr<_1d65d9018_Var>* _196843_decl) {
	if (_1d65b95d1_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_196843_decl)))), &((*((*(_196843_decl))))._field_Ident), (*((*(_196843_decl))))._field_Binded)) {
		_1d65b88bb_pushErr(_self_.ptr(), (*((*(_196843_decl))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_196843_decl))))._field_Ident, &__jule_any_type4)}));
		_1d65b8c2e_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*((*(_196843_decl))))._field_Binded && (*((*(_196843_decl))))._field_Constant)) {
		_1d65b88bb_pushErr(_self_.ptr(), (*((*(_196843_decl))))._field_Token, jule::Str::lit("binded variables cannot be constant", 35), jule::Slice<jule::Any>());
	};
	if ((((!((*((*(_196843_decl))))._field_Binded)) && (!((*((*(_196843_decl))))._field_Constant))) && (!((*((*(_196843_decl))))._field_Statically)))) {
		_1d65b88bb_pushErr(_self_.ptr(), (*((*(_196843_decl))))._field_Token, jule::Str::lit("global variables must be static", 31), jule::Slice<jule::Any>());
		_1d65b8c2e_pushSuggestion(_self_.ptr(), jule::Str::lit("use \"static\" keyword to define", 30), jule::Slice<jule::Any>());
	};
	_1d65b9944_checkDirectives(_self_, &((*((*(_196843_decl))))._field_Directives), jule::Any((*(_196843_decl)), &__jule_any_type8));
	_1d65cbe40_checkVarDecl(_self_, _196843_decl, jule::Trait<_1d669756b_Lookup>(_self_, 3));
}



inline jule::Bool _1d65cc47e_checkGlobalDecls(jule::Ptr<_1d65b5c81_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9c460ab:;
		if (it != expr_end) {
			jule::Ptr<_1d65d9018_Var> _198621_decl = *it;
			{
				_1d65cc1e8_checkGlobalVarDecl(_self_, &(_198621_decl));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1d9c460ab:;
			++it;
			goto _iter_begin_1d9c460ab;
		}
		_iter_end_1d9c460ab:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1d65cc87a_checkStructTraitImpl(jule::Ptr<_1d65b5c81_Sema> _self_, jule::Ptr<_1d651c2d1_Struct>* _199645_strct, jule::Ptr<_1d654554b_Trait>* _199666_trt) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_199666_trt))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9c479b4:;
		if (it != expr_end) {
			jule::Ptr<_1d653226e_Fn> _199721_tf = *it;
			{
				jule::Bool _199817_exist = false;;
				jule::Ptr<_1d653226e_Fn> _199917_sf = _1d651ce4c_FindMethod((*(_199645_strct)).ptr(), (*(_199721_tf))._field_Ident, (*(_199721_tf))._field_Statically);;
				jule::Ptr<_1d6535173_FnIns> _200013_tfK = _1d65c33ed_getTraitCheckFnKind(_self_, &(_199721_tf));;
				if ((_199917_sf != nullptr)) {
					jule::Ptr<_1d6535173_FnIns> _200221_sfK = _1d65c33ed_getTraitCheckFnKind(_self_, &(_199917_sf));;
					_199817_exist=_1d65360db_equalTrait(_200013_tfK, &(_200221_sfK));
				};
				if (_199817_exist) {
					jule::Ptr<_1d64ea7ed_Directive> _200617_d = _1d6670a83_findDirective(&((*(_199917_sf))._field_Directives), jule::Str::lit("deprecated", 10));;
					if ((_200617_d != nullptr)) {
						_1d65b88bb_pushErr(_self_.ptr(), (*(_200617_d))._field_Tag, jule::Str::lit("trait implementations cannot have deprecated code", 49), jule::Slice<jule::Any>());
					};
					__jule_func_result=false;
				} else {
					;
					_1d65b88bb_pushErr(_self_.ptr(), (*((*(_199645_strct))))._field_Token, jule::Str::lit("trait @ derived but not implemented define @", 44), jule::Slice<jule::Any>::make({jule::Any((*((*(_199666_trt))))._field_Ident, &__jule_any_type4),jule::Any(_1d6537021_GetKindStr(_200013_tfK.ptr(), true), &__jule_any_type4)}));
					__jule_func_result=false;
				};
			}
			_iter_next_1d9c479b4:;
			++it;
			goto _iter_begin_1d9c479b4;
		}
		_iter_end_1d9c479b4:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1d65ccbbb_checkStructImpls(jule::Ptr<_1d65b5c81_Sema> _self_, jule::Ptr<_1d651c2d1_Struct>* _202041_s) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_202041_s))))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9c4d68a:;
		if (it != expr_end) {
			jule::Ptr<_1d654554b_Trait> _202221_trt = *it;
			{
				__jule_func_result=(_1d65cc87a_checkStructTraitImpl(_self_, _202041_s, &(_202221_trt)) && __jule_func_result);
			}
			_iter_next_1d9c4d68a:;
			++it;
			goto _iter_begin_1d9c4d68a;
		}
		_iter_end_1d9c4d68a:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1d65cd00c_checkStructFields(jule::Ptr<_1d65b5c81_Sema> _self_, jule::Ptr<_1d651c2d1_Struct>* _202842_st) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_202842_st))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9c4eb64:;
		if (it != expr_end) {
			jule::Ptr<_1d65193dd_Field> _203021_f = *it;
			{
				(*(_203021_f))._field_Owner=(*(_202842_st));
				{
					auto expr = &((*((*(_202842_st))))._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d9c50879:;
					if (it != expr_end) {
						jule::Ptr<_1d65193dd_Field> _203220_cf = *it;
						{
							if ((_203021_f == _203220_cf)) {
								goto _iter_end_1d9c50879;
							} else if (((*(_203021_f))._field_Ident == (*(_203220_cf))._field_Ident)) {
								_1d65b88bb_pushErr(_self_.ptr(), (*(_203021_f))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_203021_f))._field_Ident, &__jule_any_type4)}));
								_1d65b8c2e_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
								__jule_func_result=false;
							};
						}
						_iter_next_1d9c50879:;
						++it;
						goto _iter_begin_1d9c50879;
					}
					_iter_end_1d9c50879:;
				};
			}
			_iter_next_1d9c4eb64:;
			++it;
			goto _iter_begin_1d9c4eb64;
		}
		_iter_end_1d9c4eb64:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1d65cd2b5_checkStructDecl(jule::Ptr<_1d65b5c81_Sema> _self_, jule::Ptr<_1d651c2d1_Struct>* _204540_s) {
	if (_1d64d8742_IsIgnoreIdent((*((*(_204540_s))))._field_Ident)) {
		_1d65b88bb_pushErr(_self_.ptr(), (*((*(_204540_s))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1d65b95d1_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_204540_s)))), &((*((*(_204540_s))))._field_Ident), (*((*(_204540_s))))._field_Binded)) {
		_1d65b88bb_pushErr(_self_.ptr(), (*((*(_204540_s))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_204540_s))))._field_Ident, &__jule_any_type4)}));
		_1d65b8c2e_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1d65b9944_checkDirectives(_self_, &((*((*(_204540_s))))._field_Directives), jule::Any((*(_204540_s)), &__jule_any_type65));
	{
		
		if ((!(_1d65c85e0_checkDeclGenerics(_self_.ptr(), &((*((*(_204540_s))))._field_Generics))))) {
			_case_begin_1d9c5540b:;
		}
		else if ((!(_1d65cd00c_checkStructFields(_self_, _204540_s)))) {
			_case_begin_1d9c55472:;
		}
		else if ((!(_1d65ccbbb_checkStructImpls(_self_, _204540_s)))) {
			_case_begin_1d9c554d8:;
		}
		else if ((!(_1d65cdded_checkFuncDeclsBy(_self_, &((*((*(_204540_s))))._field_Methods))))) {
			_case_begin_1d9c55560:;
		}
		_match_end_1d9c552da:;
	};
}



inline jule::Bool _1d65cd54b_checkStructDecls(jule::Ptr<_1d65b5c81_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9c57782:;
		if (it != expr_end) {
			jule::Ptr<_1d651c2d1_Struct> _206521_s = *it;
			{
				_1d65cd2b5_checkStructDecl(_self_, &(_206521_s));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1d9c57782:;
			++it;
			goto _iter_begin_1d9c57782;
		}
		_iter_end_1d9c57782:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1d65cd804_checkAnonFuncDecl(jule::Ptr<_1d65b5c81_Sema> _self_, jule::Ptr<_1d653226e_Fn>* _207542_f) {
	(*((*(_207542_f))))._field_sema=_self_;
	_1d65c936b_checkFnDeclPrototype(_self_, _207542_f);
}



inline void _1d65cdaac_checkFuncDecl(jule::Ptr<_1d65b5c81_Sema> _self_, jule::Ptr<_1d653226e_Fn>* _208038_f) {
	if (_1d64d8742_IsIgnoreIdent((*((*(_208038_f))))._field_Ident)) {
		_1d65b88bb_pushErr(_self_.ptr(), (*((*(_208038_f))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1d653322b_IsAnon((*(_208038_f)).ptr())) {
		_1d65b88bb_pushErr(_self_.ptr(), (*((*(_208038_f))))._field_Token, jule::Str::lit("anonymous functions are not allowed in this scope", 49), jule::Slice<jule::Any>());
	};
	_1d65b9944_checkDirectives(_self_, &((*((*(_208038_f))))._field_Directives), jule::Any((*(_208038_f)), &__jule_any_type64));
	_1d65cd804_checkAnonFuncDecl(_self_, _208038_f);
	if ((((*((*(_208038_f))))._field_Owner == nullptr) && _1d65b95d1_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_208038_f)))), &((*((*(_208038_f))))._field_Ident), (*((*(_208038_f))))._field_Binded))) {
		if ((*((*(_208038_f))))._field_Ident.equal("init", 4)) {
			jule::Ptr<_1d653226e_Fn> _209217_init = _1d65b7315_FindFn(_self_.ptr(), jule::Str::lit("init", 4), false);;
			if ((_209217_init != nullptr)) {
				return;;
			};
		};
		_1d65b88bb_pushErr(_self_.ptr(), (*((*(_208038_f))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_208038_f))))._field_Ident, &__jule_any_type4)}));
		_1d65b8c2e_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1d65cdded_checkFuncDeclsBy(jule::Ptr<_1d65b5c81_Sema> _self_, jule::Slice<jule::Ptr<_1d653226e_Fn>>* _210241_funcs) {
	{
		auto expr = _210241_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9c5e965:;
		if (it != expr_end) {
			jule::Ptr<_1d653226e_Fn> _210321_f = *it;
			{
				_1d65cdaac_checkFuncDecl(_self_, &(_210321_f));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					return false;;
				};
			}
			_iter_next_1d9c5e965:;
			++it;
			goto _iter_begin_1d9c5e965;
		}
		_iter_end_1d9c5e965:;
	};
	return true;;
}



inline jule::Bool _1d65ce184_checkFuncDecls(jule::Ptr<_1d65b5c81_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1d65cdded_checkFuncDeclsBy(_self_, &((*((*(_self_))._field_file))._field_Funcs));
	return __jule_func_result;;
}



inline void _1d65ce5a2_pushCycleError(_1d65b5c81_Sema* _self_, jule::Str* _211830_st1, jule::Str* _211841_st2, _1e01838bc_StrBuilder* _211856_message) {
	;
	jule::Str _21209_refersTo = _1e0235ee1_Logf(jule::Str::lit("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any((*(_211830_st1)), &__jule_any_type4),jule::Any((*(_211841_st2)), &__jule_any_type4)}));;
	jule::Str _21219_m = _1e018cee2_Str(_211856_message);;
	_1e018c6ea_WriteStr(_211856_message, _1e016dcb4_Repeat(jule::Str::lit(" ", 1), 7LL));
	_1e018c6ea_WriteStr(_211856_message, _21209_refersTo);
	_1e018c9a3_WriteByte(_211856_message, '\n');
	_1e018c6ea_WriteStr(_211856_message, _21219_m);
}



inline void _1d65cec56_checkPackageDecls(jule::Ptr<_1d65b5c81_Sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9c66593:;
		if (it != expr_end) {
			jule::Ptr<_1d6641d73_SymbolTable> _214521_f = *it;
			{
				_1d65b849d_setCurrentFile(_self_.ptr(), _214521_f);
				if ((!(_1d65c6511_checkTypeAliasDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1d9c66593:;
			++it;
			goto _iter_begin_1d9c66593;
		}
		_iter_end_1d9c66593:;
	};
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9c66a49:;
		if (it != expr_end) {
			jule::Ptr<_1d6641d73_SymbolTable> _215221_f = *it;
			{
				_1d65b849d_setCurrentFile(_self_.ptr(), _215221_f);
				if ((!(_1d65ca9bb_checkTraitDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1d9c66a49:;
			++it;
			goto _iter_begin_1d9c66a49;
		}
		_iter_end_1d9c66a49:;
	};
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9c67a6c:;
		if (it != expr_end) {
			jule::Ptr<_1d6641d73_SymbolTable> _215921_f = *it;
			{
				_1d65b849d_setCurrentFile(_self_.ptr(), _215921_f);
				if ((!(_1d65cc47e_checkGlobalDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1d9c67a6c:;
			++it;
			goto _iter_begin_1d9c67a6c;
		}
		_iter_end_1d9c67a6c:;
	};
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9c68ab2:;
		if (it != expr_end) {
			jule::Ptr<_1d6641d73_SymbolTable> _216621_f = *it;
			{
				_1d65b849d_setCurrentFile(_self_.ptr(), _216621_f);
				{
					
					if ((!(_1d65ce184_checkFuncDecls(_self_)))) {
						_case_begin_1d9c6a1bd:;
					}
					else if ((!(_1d65cd54b_checkStructDecls(_self_)))) {
						_case_begin_1d9c6a234:;
					}
					else {
						_case_begin_1d9c6a157:;
						{
							goto _iter_next_1d9c68ab2;
						}
					}
					_match_end_1d9c6a102:;
				};
				return;;
			}
			_iter_next_1d9c68ab2:;
			++it;
			goto _iter_begin_1d9c68ab2;
		}
		_iter_end_1d9c68ab2:;
	};
}



inline void _1d65d00b9_checkDataForTypeInference(_1d65b5c81_Sema* _self_, jule::Ptr<_1d664721e_Data>* _217845_d, jule::Ptr<_1d64d5cd3_Token>* _217856_err_token) {
	{
		
		if (_1d66475c6_IsNil((*(_217845_d)).ptr())) {
			_case_begin_1d9c6b323:;
			{
				_1d65b88bb_pushErr(_self_, (*(_217856_err_token)), jule::Str::lit("nil is cannot use with type inferred definitions", 48), jule::Slice<jule::Any>());
			}
		}
		else if (_1d664785c_IsVoid((*(_217845_d)).ptr())) {
			_case_begin_1d9c6b39a:;
			{
				_1d65b88bb_pushErr(_self_, (*(_217856_err_token)), jule::Str::lit("void data is cannot use for type inferred definitions", 53), jule::Slice<jule::Any>());
			}
		}
		else if ((*((*((*(_217845_d))))._field_Kind))._field_Variadic) {
			_case_begin_1d9c6b422:;
			{
				_1d65b88bb_pushErr(_self_, (*(_217856_err_token)), jule::Str::lit("invalid expression for type inference", 37), jule::Slice<jule::Any>());
			}
		}
		_match_end_1d9c6b202:;
	};
}



inline void _1d65d0372_checkVarValue(jule::Ptr<_1d65b5c81_Sema> _self_, jule::Ptr<_1d65d9018_Var>* _219038_v) {
	if (_1d65d9634_IsTypeInferred((*(_219038_v)).ptr())) {
		(*((*(_219038_v))))._field_Kind=jule::new_ptr<_1d667ec07_TypeSymbol>(_1d667ec07_TypeSymbol{._field_Kind=(*((*((*((*(_219038_v))))._field_Value))._field_Data))._field_Kind});
		_1d65d00b9_checkDataForTypeInference(_self_.ptr(), &((*((*((*(_219038_v))))._field_Value))._field_Data), &((*((*((*((*(_219038_v))))._field_Value))._field_Expr))._field_Token));
		_1d65c5763_checkValidityForInitExpr(_self_, (*((*(_219038_v))))._field_Mutable, (*((*(_219038_v))))._field_Reference, &((*((*((*(_219038_v))))._field_Kind))._field_Kind), &((*((*((*(_219038_v))))._field_Value))._field_Data), &((*((*((*((*(_219038_v))))._field_Value))._field_Expr))._field_Token));
	} else {
		jule::Ptr<_1d6686e2e_Arr> _220317_arr = _1d667ae56_Arr((*((*((*(_219038_v))))._field_Kind))._field_Kind.ptr());;
		if ((_220317_arr != nullptr)) {
			if ((*(_220317_arr))._field_Auto) {
				jule::Ptr<_1d6686e2e_Arr> _220621_dataArr = _1d667ae56_Arr((*((*((*((*(_219038_v))))._field_Value))._field_Data))._field_Kind.ptr());;
				if ((_220621_dataArr != nullptr)) {
					(*(_220317_arr))._field_N=(*(_220621_dataArr))._field_N;
				};
			};
		};
		if (_1d65c13c9_checkAssignType(_self_, (*((*(_219038_v))))._field_Reference, &((*((*((*(_219038_v))))._field_Kind))._field_Kind), &((*((*((*(_219038_v))))._field_Value))._field_Data), (*((*((*((*(_219038_v))))._field_Value))._field_Expr))._field_Token)) {
			_1d65c5763_checkValidityForInitExpr(_self_, (*((*(_219038_v))))._field_Mutable, (*((*(_219038_v))))._field_Reference, &((*((*((*(_219038_v))))._field_Kind))._field_Kind), &((*((*((*(_219038_v))))._field_Value))._field_Data), &((*((*((*((*(_219038_v))))._field_Value))._field_Expr))._field_Token));
		};
	};
	if (((*((*(_219038_v))))._field_Reference && (!(_1d6694029_isValidForRef(&((*((*((*(_219038_v))))._field_Kind))._field_Kind)))))) {
		_1d65b88bb_pushErr(_self_.ptr(), (*((*(_219038_v))))._field_Token, jule::Str::lit("references cannot points to type @", 34), jule::Slice<jule::Any>::make({jule::Any(_1d6677ded_Str((*((*((*(_219038_v))))._field_Kind))._field_Kind.ptr()), &__jule_any_type4)}));
	};
	if ((*((*(_219038_v))))._field_Constant) {
		if (((!(_1d6647ae3_IsConst((*((*((*(_219038_v))))._field_Value))._field_Data.ptr()))) && (!(_1d667c243_comptime((*((*((*((*(_219038_v))))._field_Value))._field_Data))._field_Kind.ptr()))))) {
			_1d65b88bb_pushErr(_self_.ptr(), (*((*((*((*(_219038_v))))._field_Value))._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
	} else {
		(*((*((*((*(_219038_v))))._field_Value))._field_Data))._field_Constant=nullptr;
		(*((*((*((*(_219038_v))))._field_Value))._field_Data))._field_untyped=false;
	};
	if ((_1d667beac_Tup((*((*((*(_219038_v))))._field_Kind))._field_Kind.ptr()) != nullptr)) {
		(*((*((*(_219038_v))))._field_Kind))._field_Kind=nullptr;
	};
}



inline void _1d65d06d5_evalVarValue(jule::Ptr<_1d65b5c81_Sema> _self_, jule::Ptr<_1d65d9018_Var>* _224337_decl, jule::Trait<_1d669756b_Lookup> _224353_l) {
	if ((!(_1d65d939d_IsInitialized((*(_224337_decl)).ptr())))) {
		return;;
	};
	jule::Ptr<_1d6648e13_Eval> _224817_eval = nullptr;;
	if (((*((*(_224337_decl))))._field_Kind != nullptr)) {
		_224817_eval=_1d65c062b_evalpd(_self_, _224353_l, (*((*((*(_224337_decl))))._field_Kind))._field_Kind, (*(_224337_decl)));
	} else {
		_224817_eval=_1d65c062b_evalpd(_self_, _224353_l, nullptr, (*(_224337_decl)));
	};
	(*(_224817_eval))._field_immutable=(!((*((*(_224337_decl))))._field_Mutable));
	(*((*((*(_224337_decl))))._field_Value))._field_Data=_1d6667173_evalExpr(_224817_eval, (*((*((*(_224337_decl))))._field_Value))._field_Expr);
}



inline void _1d65d0a48_checkVar(jule::Ptr<_1d65b5c81_Sema> _self_, jule::Ptr<_1d65d9018_Var>* _226033_decl, jule::Trait<_1d669756b_Lookup> _226049_l) {
	_1d65d06d5_evalVarValue(_self_, _226033_decl, _226049_l);
	if (((*((*((*(_226033_decl))))._field_Value))._field_Data == nullptr)) {
		return;;
	};
	_1d65d0372_checkVarValue(_self_, _226033_decl);
}



inline void _1d65d0c46_checkGlobals(jule::Ptr<_1d65b5c81_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9c82c96:;
		if (it != expr_end) {
			jule::Ptr<_1d65d9018_Var> _227021_decl = *it;
			{
				if ((*(_227021_decl))._field_Binded) {
					goto _iter_next_1d9c82c96;
				};
				if (((_1d65d939d_IsInitialized(_227021_decl.ptr()) && ((*((*(_227021_decl))._field_Value))._field_Data == nullptr)) || (_1d65d9634_IsTypeInferred(_227021_decl.ptr()) && ((*((*(_227021_decl))._field_Kind))._field_Kind == nullptr)))) {
					_1d65d0a48_checkVar(_self_, &(_227021_decl), jule::Trait<_1d669756b_Lookup>(_self_, 3));
				};
			}
			_iter_next_1d9c82c96:;
			++it;
			goto _iter_begin_1d9c82c96;
		}
		_iter_end_1d9c82c96:;
	};
}



inline jule::Ptr<_1d6535173_FnIns> _1d65d1142_readyToCheckFn(jule::Ptr<_1d65b5c81_Sema> _self_, jule::Ptr<_1d652005e_StructIns>* _228439_s, jule::Ptr<_1d653226e_Fn>* _228459_f) {
	jule::Ptr<_1d6535173_FnIns> _228513_ins = _1d65339ce_instance((*(_228459_f)));;
	if (((*((*(_228459_f))))._field_Instances.len() != 0LL)) {
		return _228513_ins;;
	};
	(*(_228513_ins))._field_Owner=(*(_228439_s));
	_1d6533cdc_appendInstance((*(_228459_f)).ptr(), &(_228513_ins));
	(*(_228513_ins))._field_reloaded=true;
	if (_1d65c4850_reloadFnInsTypes(_self_, _228513_ins)) {
		return _228513_ins;;
	};
	return nullptr;;
}



inline void _1d65d14a5_checkTypeMethod(jule::Ptr<_1d65b5c81_Sema> _self_, jule::Ptr<_1d652005e_StructIns>* _229840_s, jule::Ptr<_1d653226e_Fn>* _229860_f) {
	if (((*((*(_229860_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	jule::Ptr<_1d6535173_FnIns> _230313_ins = (*((*(_229860_f))))._field_Instances[0LL];;
	if (((*((*(_230313_ins))._field_Scope))._field_Stmts.len() > 0LL)) {
		return;;
	};
	_1d65d3e58_checkFnIns(_self_, &(_230313_ins));
}



inline jule::Ptr<_1d6535173_FnIns> _1d65d195b_checkStructInsOp(jule::Ptr<_1d65b5c81_Sema> _self_, jule::Ptr<_1d652005e_StructIns>* _231141_s, jule::Ptr<_1d653226e_Fn>* _231161_f, jule::Fn<jule::Bool(jule::Ptr<_1d653226e_Fn>)> _231169_p) {
	if (((((*(_231161_f)) == nullptr) || ((*((*(_231161_f))))._field_Generics.len() > 0LL)) || (!(_231169_p((*(_231161_f))))))) {
		return nullptr;;
	};
	return (*((*(_231161_f))))._field_Instances[0LL];;
}



inline jule::Bool _1d65d1d57_checkStructEnv(jule::Ptr<_1d65b5c81_Sema> _self_, jule::Ptr<_1d652005e_StructIns>* _232139_s, jule::Ptr<_1d64d5cd3_Token> _232158_errorToken) {
	jule::Bool __jule_func_result = false;
	_1d66898e3_typeChecker _232213_tc = _1d66898e3_typeChecker{._field_s=(*((*((*(_232139_s))))._field_Decl))._field_sema, ._field_rootLookup=jule::Trait<_1d669756b_Lookup>((*((*((*(_232139_s))))._field_Decl))._field_sema, 3), ._field_lookup=jule::Trait<_1d669756b_Lookup>((*((*((*(_232139_s))))._field_Decl))._field_sema, 3), ._field_referencer=jule::new_ptr<_1d6688903_referencer>(_1d6688903_referencer{._field_ident=(*((*((*(_232139_s))))._field_Decl))._field_Ident, ._field_owner=jule::Any((*((*(_232139_s))))._field_Decl, &__jule_any_type65), }), ._field_refers=(*((*(_232139_s))))._field_Refers, };;
	if (((*((*(_232139_s))))._field_Generics.len() > 0LL)) {
		_232213_tc._field_useGenerics=jule::Slice<jule::Ptr<_1d6676c43_TypeAlias>>::alloc(0LL, (*((*(_232139_s))))._field_Generics.len());
		{
			auto expr = &((*((*(_232139_s))))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1d9c8e2ad:;
			if (it != expr_end) {
				jule::I64 _233518_i = it - expr->begin();
				jule::Ptr<_1d667614e_InsGeneric> _233525_g = *it;
				{
					jule::Ptr<_1d65085db_GenericDecl> _233621_decl = (*((*((*(_232139_s))))._field_Decl))._field_Generics[_233518_i];;
					{ jule::Slice<jule::Ptr<_1d6676c43_TypeAlias>> &__jule_push_dest = _232213_tc._field_useGenerics; __jule_push_dest.push(jule::new_ptr<_1d6676c43_TypeAlias>(_1d6676c43_TypeAlias{._field_Token=(*(_233621_decl))._field_Token, ._field_Ident=(*(_233621_decl))._field_Ident, ._field_Kind=jule::new_ptr<_1d667ec07_TypeSymbol>(_1d667ec07_TypeSymbol{._field_Kind=(*(_233525_g))._field_Kind}), })); };
				}
				_iter_next_1d9c8e2ad:;
				++it;
				_233518_i++;
				goto _iter_begin_1d9c8e2ad;
			}
			_iter_end_1d9c8e2ad:;
		};
	};
	jule::Ptr<_1d6641d73_SymbolTable> _234513_oldFile = (*(_self_))._field_file;;
	__JULE_DEFER({
		_1d65b849d_setCurrentFile(_self_.ptr(), _234513_oldFile);
	});;
	if (((*((*(_self_))._field_file))._field_File != (*((*((*((*(_232139_s))))._field_Decl))._field_Token))._field_File)) {
		jule::Ptr<_1d6641d73_SymbolTable> _234917_file = _1d65b49c7_findFile(&((*(_self_))._field_files), &((*((*((*((*(_232139_s))))._field_Decl))._field_Token))._field_File));;
		if ((_234917_file != nullptr)) {
			_1d65b849d_setCurrentFile(_self_.ptr(), _234917_file);
		};
	};
	if (((*((*(_232139_s))))._field_Generics.len() > 0LL)) {
		jule::Ptr<_1d656b86e_constraintChecker> _235617_cc = _1d65be141_constraintChecker(_self_);;
		(*(_235617_cc))._field_et=_232158_errorToken;
		(*(_235617_cc))._field_si=(*(_232139_s));
		(*(_235617_cc))._field_genericsA=_232213_tc._field_useGenerics;
		(*(_235617_cc))._field_uniq=true;
		if ((!(_1d656c7a4_check(_235617_cc)))) {
			return __jule_func_result;;
		};
	};
	__jule_func_result=true;
	if (((*((*(_232139_s))))._field_Statics.len() > 0LL)) {
		jule::I64 _236917_n = (*(_self_))._field_errors.len();;
		(*((*(_self_))._field_files[0LL]))._field_TypeAliases=jule::append(_232213_tc._field_useGenerics,(*((*(_self_))._field_files[0LL]))._field_TypeAliases);
		{
			auto expr = &((*((*(_232139_s))))._field_Statics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1d9c9733d:;
			if (it != expr_end) {
				jule::Ptr<_1d65d9018_Var> _237125_v = *it;
				{
					_1d65cbe40_checkVarDecl(_self_, &(_237125_v), jule::Trait<_1d669756b_Lookup>(_self_, 3));
					_1d65d0a48_checkVar(_self_, &(_237125_v), jule::Trait<_1d669756b_Lookup>(_self_, 3));
					__jule_func_result=((((*(_self_))._field_errors.len() - _236917_n) == 0LL) && __jule_func_result);
				}
				_iter_next_1d9c9733d:;
				++it;
				goto _iter_begin_1d9c9733d;
			}
			_iter_end_1d9c9733d:;
		};
		(*((*(_self_))._field_files[0LL]))._field_TypeAliases=(*((*(_self_))._field_files[0LL]))._field_TypeAliases.slice(_232213_tc._field_useGenerics.len());
		if ((!(__jule_func_result))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	jule::Ptr<_1d6648e13_Eval> _238213_eval = _1d65c0d68_eval(_self_, jule::Trait<_1d669756b_Lookup>(_self_, 3));;
	(*((*(_232139_s))))._field_Comparable=(!((*((*((*(_232139_s))))._field_Decl))._field_Binded));
	{
		auto expr = &((*((*(_232139_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9c9b683:;
		if (it != expr_end) {
			jule::Ptr<_1d651e4ae_FieldIns> _238421_f = *it;
			{
				jule::Ptr<_1d6677a35_TypeKind> _238517_kind = _1d669208d_checkDecl(&_232213_tc, &((*((*((*(_238421_f))._field_Decl))._field_Kind))._field_Decl));;
				__jule_func_result=((_238517_kind != nullptr) && __jule_func_result);
				if ((_238517_kind == nullptr)) {
					if (((_self_ != (*((*((*(_232139_s))))._field_Decl))._field_sema) && ((*((*((*((*(_232139_s))))._field_Decl))._field_sema))._field_errors.len() > 0LL))) {
						((*(_self_))._field_errors).append((*((*((*((*(_232139_s))))._field_Decl))._field_sema))._field_errors);;
						(*((*((*((*(_232139_s))))._field_Decl))._field_sema))._field_errors=nullptr;
					};
					goto _iter_next_1d9c9b683;
				};
				(*(_238421_f))._field_Kind=_238517_kind;
				(*((*(_232139_s))))._field_Mutable=((*((*(_232139_s))))._field_Mutable || ((!((*((*(_238421_f))._field_Decl))._field_Mutable)) && _1d66793b6_Mutable((*(_238421_f))._field_Kind.ptr())));
				(*((*(_232139_s))))._field_Comparable=((*((*(_232139_s))))._field_Comparable && _1d6679130_Comparable((*(_238421_f))._field_Kind.ptr()));
				if (((*((*(_238421_f))._field_Decl))._field_Default == nullptr)) {
					goto _iter_next_1d9c9b683;
				};
				(*(_238213_eval))._field_prefix=(*(_238421_f))._field_Kind;
				(*(_238213_eval))._field_field=_238421_f;
				(*(_238421_f))._field_Default=_1d6667173_evalExpr(_238213_eval, (*((*(_238421_f))._field_Decl))._field_Default);
				if (((*(_238421_f))._field_Default == nullptr)) {
					goto _iter_next_1d9c9b683;
				};
				;
				_1d65c13c9_checkAssignType(_self_, false, &((*(_238421_f))._field_Kind), &((*(_238421_f))._field_Default), (*((*((*(_238421_f))._field_Decl))._field_Default))._field_Token);
			}
			_iter_next_1d9c9b683:;
			++it;
			goto _iter_begin_1d9c9b683;
		}
		_iter_end_1d9c9b683:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1d65d2253_precheckStructIns(jule::Ptr<_1d65b5c81_Sema> _self_, jule::Ptr<_1d652005e_StructIns>* _241842_s, jule::Ptr<_1d64d5cd3_Token> _241861_errorToken) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=_1d65d1d57_checkStructEnv(_self_, _241842_s, _241861_errorToken);
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &((*((*(_241842_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9ca6308:;
		if (it != expr_end) {
			jule::Ptr<_1d653226e_Fn> _242321_f = *it;
			{
				if (((*(_242321_f))._field_Generics.len() == 0LL)) {
					if ((_1d65d1142_readyToCheckFn(_self_, _241842_s, &(_242321_f)) == nullptr)) {
						__jule_func_result = false;
						return __jule_func_result;;
					};
				};
			}
			_iter_next_1d9ca6308:;
			++it;
			goto _iter_begin_1d9ca6308;
		}
		_iter_end_1d9ca6308:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1d65d250b_checkStructIns(jule::Ptr<_1d65b5c81_Sema> _self_, jule::Ptr<_1d652005e_StructIns>* _243339_s) {
	{
		auto expr = &((*((*(_243339_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9ca7c55:;
		if (it != expr_end) {
			jule::Ptr<_1d653226e_Fn> _243421_f = *it;
			{
				_1d65d14a5_checkTypeMethod(_self_, _243339_s, &(_243421_f));
			}
			_iter_next_1d9ca7c55:;
			++it;
			goto _iter_begin_1d9ca7c55;
		}
		_iter_end_1d9ca7c55:;
	};
}



inline void _1d65d27b4_checkTypeStruct(jule::Ptr<_1d65b5c81_Sema> _self_, jule::Ptr<_1d651c2d1_Struct>* _243940_s) {
	if ((*((*(_243940_s))))._field_Binded) {
		return;;
	};
	if (((*((*(_243940_s))))._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_243940_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9ca975c:;
		if (it != expr_end) {
			jule::Ptr<_1d652005e_StructIns> _245221_ins = *it;
			{
				_1d65d250b_checkStructIns(_self_, &(_245221_ins));
			}
			_iter_next_1d9ca975c:;
			++it;
			goto _iter_begin_1d9ca975c;
		}
		_iter_end_1d9ca975c:;
	};
}



inline void _1d65d29b2_checkStructTypes(jule::Ptr<_1d65b5c81_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9caa719:;
		if (it != expr_end) {
			jule::Ptr<_1d651c2d1_Struct> _245821_s = *it;
			{
				_1d65d27b4_checkTypeStruct(_self_, &(_245821_s));
			}
			_iter_next_1d9caa719:;
			++it;
			goto _iter_begin_1d9caa719;
		}
		_iter_end_1d9caa719:;
	};
}



inline void _1d65d2c6a_checkStructInsOperators(jule::Ptr<_1d65b5c81_Sema> _self_, jule::Ptr<_1d652005e_StructIns> _246347_s) {
	{
		auto expr = &((*(_246347_s))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9cab6c6:;
		if (it != expr_end) {
			jule::Ptr<_1d653226e_Fn> _246421_m = *it;
			{
				{
					auto &_match_expr{ (*(_246421_m))._field_Ident };
					
					if (_match_expr == jule::Str::lit("Eq", 2)) {
						_case_begin_1d9cac3ca:;
						{
							(*(_246347_s))._field_Operators._field_Eq=_1d65d195b_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1d65dad72_Eq);
							(*(_246347_s))._field_Comparable=((*(_246347_s))._field_Operators._field_Eq != nullptr);
						}
					}
					else if (_match_expr == jule::Str::lit("Gt", 2)) {
						_case_begin_1d9cac452:;
						{
							(*(_246347_s))._field_Operators._field_Gt=_1d65d195b_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1d65db13b_Gt);
						}
					}
					else if (_match_expr == jule::Str::lit("GtEq", 4)) {
						_case_begin_1d9cac4c9:;
						{
							(*(_246347_s))._field_Operators._field_GtEq=_1d65d195b_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1d65db405_GtEq);
						}
					}
					else if (_match_expr == jule::Str::lit("Lt", 2)) {
						_case_begin_1d9cac551:;
						{
							(*(_246347_s))._field_Operators._field_Lt=_1d65d195b_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1d65db6be_Lt);
						}
					}
					else if (_match_expr == jule::Str::lit("LtEq", 4)) {
						_case_begin_1d9cac5c8:;
						{
							(*(_246347_s))._field_Operators._field_LtEq=_1d65d195b_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1d65db988_LtEq);
						}
					}
					else if (_match_expr == jule::Str::lit("Shl", 3)) {
						_case_begin_1d9cac650:;
						{
							(*(_246347_s))._field_Operators._field_Shl=_1d65d195b_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1d65dc0c6_Shl);
						}
					}
					else if (_match_expr == jule::Str::lit("Shr", 3)) {
						_case_begin_1d9cac6c7:;
						{
							(*(_246347_s))._field_Operators._field_Shr=_1d65d195b_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1d65dc390_Shr);
						}
					}
					else if (_match_expr == jule::Str::lit("Add", 3)) {
						_case_begin_1d9cac74e:;
						{
							(*(_246347_s))._field_Operators._field_Add=_1d65d195b_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1d65dc659_Add);
						}
					}
					else if (_match_expr == jule::Str::lit("Sub", 3)) {
						_case_begin_1d9cac7c6:;
						{
							(*(_246347_s))._field_Operators._field_Sub=_1d65d195b_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1d65dc923_Sub);
						}
					}
					else if (_match_expr == jule::Str::lit("Div", 3)) {
						_case_begin_1d9cac84d:;
						{
							(*(_246347_s))._field_Operators._field_Div=_1d65d195b_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1d65dcbdc_Div);
						}
					}
					else if (_match_expr == jule::Str::lit("Mul", 3)) {
						_case_begin_1d9cac8c5:;
						{
							(*(_246347_s))._field_Operators._field_Mul=_1d65d195b_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1d65dcea6_Mul);
						}
					}
					else if (_match_expr == jule::Str::lit("Mod", 3)) {
						_case_begin_1d9cac94c:;
						{
							(*(_246347_s))._field_Operators._field_Mod=_1d65d195b_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1d65dd270_Mod);
						}
					}
					else if (_match_expr == jule::Str::lit("BitAnd", 6)) {
						_case_begin_1d9cac9c4:;
						{
							(*(_246347_s))._field_Operators._field_BitAnd=_1d65d195b_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1d65dd539_BitAnd);
						}
					}
					else if (_match_expr == jule::Str::lit("BitOr", 5)) {
						_case_begin_1d9caca4b:;
						{
							(*(_246347_s))._field_Operators._field_BitOr=_1d65d195b_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1d65dd803_BitOr);
						}
					}
					else if (_match_expr == jule::Str::lit("BitXor", 6)) {
						_case_begin_1d9cacac3:;
						{
							(*(_246347_s))._field_Operators._field_BitXor=_1d65d195b_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1d65ddabc_BitXor);
						}
					}
					else if (_match_expr == jule::Str::lit("Neg", 3)) {
						_case_begin_1d9cacb4a:;
						{
							(*(_246347_s))._field_Operators._field_Neg=_1d65d195b_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1d65de20a_Neg);
						}
					}
					else if (_match_expr == jule::Str::lit("Pos", 3)) {
						_case_begin_1d9cacbc2:;
						{
							(*(_246347_s))._field_Operators._field_Pos=_1d65d195b_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1d65de4c4_Pos);
						}
					}
					else if (_match_expr == jule::Str::lit("BitNot", 6)) {
						_case_begin_1d9cacc49:;
						{
							(*(_246347_s))._field_Operators._field_BitNot=_1d65d195b_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1d65de78d_BitNot);
						}
					}
					else if (_match_expr == jule::Str::lit("AddAssign", 9)) {
						_case_begin_1d9caccc1:;
						{
							(*(_246347_s))._field_Operators._field_AddAssign=_1d65d195b_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1d65dedcb_AddAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("SubAssign", 9)) {
						_case_begin_1d9cacd48:;
						{
							(*(_246347_s))._field_Operators._field_SubAssign=_1d65d195b_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1d65e0195_SubAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("DivAssign", 9)) {
						_case_begin_1d9cacdc0:;
						{
							(*(_246347_s))._field_Operators._field_DivAssign=_1d65d195b_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1d65e045e_DivAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("MulAssign", 9)) {
						_case_begin_1d9cace47:;
						{
							(*(_246347_s))._field_Operators._field_MulAssign=_1d65d195b_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1d65e0728_MulAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ModAssign", 9)) {
						_case_begin_1d9cacebe:;
						{
							(*(_246347_s))._field_Operators._field_ModAssign=_1d65d195b_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1d65e09e2_ModAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ShlAssign", 9)) {
						_case_begin_1d9cad046:;
						{
							(*(_246347_s))._field_Operators._field_ShlAssign=_1d65d195b_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1d65e0cab_ShlAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ShrAssign", 9)) {
						_case_begin_1d9cad0bd:;
						{
							(*(_246347_s))._field_Operators._field_ShrAssign=_1d65d195b_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1d65e1075_ShrAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitOrAssign", 11)) {
						_case_begin_1d9cad145:;
						{
							(*(_246347_s))._field_Operators._field_BitOrAssign=_1d65d195b_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1d65e133e_BitOrAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitAndAssign", 12)) {
						_case_begin_1d9cad1bc:;
						{
							(*(_246347_s))._field_Operators._field_BitAndAssign=_1d65d195b_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1d65e1608_BitAndAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitXorAssign", 12)) {
						_case_begin_1d9cad244:;
						{
							(*(_246347_s))._field_Operators._field_BitXorAssign=_1d65d195b_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1d65e18c2_BitXorAssign);
						}
					}
					_match_end_1d9cac122:;
				};
			}
			_iter_next_1d9cab6c6:;
			++it;
			goto _iter_begin_1d9cab6c6;
		}
		_iter_end_1d9cab6c6:;
	};
}



inline void _1d65d3023_precheckStructType(jule::Ptr<_1d65b5c81_Sema> _self_, jule::Ptr<_1d651c2d1_Struct>* _252743_s) {
	if ((*((*(_252743_s))))._field_Binded) {
		return;;
	};
	if (((*((*(_252743_s))))._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*((*(_252743_s))))._field_Instances.len() == 0LL)) {
		jule::Ptr<_1d652005e_StructIns> _253817_ins = _1d651c743_instance((*(_252743_s)));;
		(*(_253817_ins))._field_Checked=true;
		_1d651ca51_appendInstance((*(_252743_s)).ptr(), &(_253817_ins));
		_1d65d2253_precheckStructIns(_self_, &(_253817_ins), nullptr);
	};
	_1d65d2c6a_checkStructInsOperators(_self_, (*((*(_252743_s))))._field_Instances[0LL]);
}



inline void _1d65d3221_precheckStructTypes(jule::Ptr<_1d65b5c81_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9cc414a:;
		if (it != expr_end) {
			jule::Ptr<_1d651c2d1_Struct> _254821_s = *it;
			{
				_1d65d3023_precheckStructType(_self_, &(_254821_s));
			}
			_iter_next_1d9cc414a:;
			++it;
			goto _iter_begin_1d9cc414a;
		}
		_iter_end_1d9cc414a:;
	};
}



inline void _1d65d34c9_checkRets(_1d65b5c81_Sema* _self_, jule::Ptr<_1d6535173_FnIns>* _255333_f) {
	if (_1d65326e2_IsVoid((*((*(_255333_f))))._field_Decl.ptr())) {
		return;;
	};
	_1d65d594e_missingRetChecker _25579_mrc = static__1d65d5d17_new();;
	jule::Bool _25589_ok = _1d65d6e39_check(&_25579_mrc, (*((*(_255333_f))))._field_Scope);;
	if ((!(_25589_ok))) {
		_1d65b88bb_pushErr(_self_, (*((*((*(_255333_f))))._field_Decl))._field_Token, jule::Str::lit("missing return at end of function", 33), jule::Slice<jule::Any>());
	};
}



inline void _1d65d383c_checkFnInsSc(_1d65b5c81_Sema* _self_, jule::Ptr<_1d6535173_FnIns>* _256436_f, jule::Ptr<_1d657b42d_scopeChecker>* _256452_sc) {
	_1d65b407b_appendRetVars(&((*((*((*(_256452_sc))))._field_table))._field_Vars), _256436_f);
	_1d65b4367_appendParamVars(&((*((*((*(_256452_sc))))._field_table))._field_Vars), _256436_f);
	_1d65b4653_appendGenericTypeAliases(&((*((*((*(_256452_sc))))._field_table))._field_TypeAliases), _256436_f);
	_1d658cb37_check((*(_256452_sc)), &((*((*((*(_256436_f))))._field_Decl))._field_Scope), &((*((*(_256436_f))))._field_Scope));
	if ((!(_1d657e002_stopped((*(_256452_sc)).ptr())))) {
		_1d65d34c9_checkRets(_self_, _256436_f);
	};
}



inline void _1d65d3ba0_checkFnInsCaller(jule::Ptr<_1d65b5c81_Sema> _self_, jule::Ptr<_1d6535173_FnIns>* _257741_f, jule::Ptr<_1d64d5cd3_Token> _257756_caller) {
	if ((*((*((*(_257741_f))))._field_Decl))._field_Binded) {
		return;;
	};
	jule::Ptr<_1d6641d73_SymbolTable> _258213_old = (*((*((*((*(_257741_f))))._field_Decl))._field_sema))._field_file;;
	__JULE_DEFER({
		_1d65b849d_setCurrentFile((*((*((*(_257741_f))))._field_Decl))._field_sema.ptr(), _258213_old);
	});;
	jule::Ptr<_1d6641d73_SymbolTable> _258413_file = _1d65b49c7_findFile(&((*((*((*((*(_257741_f))))._field_Decl))._field_sema))._field_files), &((*((*((*((*(_257741_f))))._field_Decl))._field_Token))._field_File));;
	if ((_258413_file != nullptr)) {
		_1d65b849d_setCurrentFile((*((*((*(_257741_f))))._field_Decl))._field_sema.ptr(), _258413_file);
	};
	jule::Ptr<_1d657b42d_scopeChecker> _258913_sc = _1d65712be_newScopeChecker(&((*((*((*(_257741_f))))._field_Decl))._field_sema), (*(_257741_f)));;
	(*(_258913_sc))._field_calledFrom=_257756_caller;
	_1d65d383c_checkFnInsSc(_self_.ptr(), _257741_f, &(_258913_sc));
	if (((*((*((*(_257741_f))))._field_Decl))._field_sema != _self_)) {
		((*(_self_))._field_errors).append((*((*((*((*(_257741_f))))._field_Decl))._field_sema))._field_errors);;
		(*((*((*((*(_257741_f))))._field_Decl))._field_sema))._field_errors=nullptr;
	};
}



inline void _1d65d3e58_checkFnIns(jule::Ptr<_1d65b5c81_Sema> _self_, jule::Ptr<_1d6535173_FnIns>* _259935_f) {
	_1d65d3ba0_checkFnInsCaller(_self_, _259935_f, nullptr);
}



inline void _1d65d4211_checkFunc(jule::Ptr<_1d65b5c81_Sema> _self_, jule::Ptr<_1d653226e_Fn>* _260334_f) {
	if ((*((*(_260334_f))))._field_Binded) {
		return;;
	};
	if (((*((*(_260334_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_260334_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9cd26db:;
		if (it != expr_end) {
			jule::Ptr<_1d6535173_FnIns> _261321_ins = *it;
			{
				_1d65d3e58_checkFnIns(_self_, &(_261321_ins));
			}
			_iter_next_1d9cd26db:;
			++it;
			goto _iter_begin_1d9cd26db;
		}
		_iter_end_1d9cd26db:;
	};
}



inline void _1d65d44b9_checkTestFn(_1d65b5c81_Sema* _self_, jule::Ptr<_1d6535173_FnIns>* _261835_f) {
	if ((*((*((*(_261835_f))))._field_Decl))._field_Public) {
		_1d65b88bb_pushErr(_self_, (*((*((*(_261835_f))))._field_Decl))._field_Token, jule::Str::lit("test function cannot be public", 30), jule::Slice<jule::Any>());
		_1d65b8c2e_pushSuggestion(_self_, jule::Str::lit("dont use identifier which is starts with capital letter to avoid define as public", 81), jule::Slice<jule::Any>());
		return;;
	};
	if (((((((*((*((*(_261835_f))))._field_Decl))._field_Unsafety || (!(_1d65326e2_IsVoid((*((*(_261835_f))))._field_Decl.ptr())))) || ((*((*((*(_261835_f))))._field_Decl))._field_Generics.len() != 0LL)) || ((*((*(_261835_f))))._field_Params.len() != 1LL)) || (*((*((*((*(_261835_f))))._field_Decl))._field_Params[0LL]))._field_Mutable) || (*((*((*((*(_261835_f))))._field_Decl))._field_Params[0LL]))._field_Reference)) {
		_1d65b88bb_pushErr(_self_, (*((*((*(_261835_f))))._field_Decl))._field_Token, jule::Str::lit("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1d65b8c2e_pushSuggestion(_self_, jule::Str::lit("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1d668413a_Sptr> _263613_sptr = _1d667a41c_Sptr((*((*((*(_261835_f))))._field_Params[0LL]))._field_Kind.ptr());;
	if ((_263613_sptr == nullptr)) {
		_1d65b88bb_pushErr(_self_, (*((*((*(_261835_f))))._field_Decl))._field_Token, jule::Str::lit("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1d65b8c2e_pushSuggestion(_self_, jule::Str::lit("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1d652005e_StructIns> _26439_s = _1d667b709_Struct((*(_263613_sptr))._field_Elem.ptr());;
	if (((_26439_s == nullptr) || (!(_1d659ad10_isStdPackage(&((*((*((*((*(_26439_s))._field_Decl))._field_Token))._field_File))._field_Path), jule::Str::lit("testing", 7)))))) {
		_1d65b88bb_pushErr(_self_, (*((*((*(_261835_f))))._field_Decl))._field_Token, jule::Str::lit("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1d65b8c2e_pushSuggestion(_self_, jule::Str::lit("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1d65d4772_precheckFunc(jule::Ptr<_1d65b5c81_Sema> _self_, jule::Ptr<_1d653226e_Fn>* _265137_f) {
	if ((*((*(_265137_f))))._field_Binded) {
		return;;
	};
	if (((*((*(_265137_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*((*(_265137_f))))._field_Instances.len() == 0LL)) {
		jule::Ptr<_1d6535173_FnIns> _266217_ins = _1d6533748_instanceForce((*(_265137_f)));;
		{ jule::Slice<jule::Ptr<_1d6535173_FnIns>> &__jule_push_dest = (*((*(_265137_f))))._field_Instances; __jule_push_dest.push(_266217_ins); };
		jule::Bool _266413_ok = _1d65c4850_reloadFnInsTypes(_self_, _266217_ins);;
		(*(_266217_ins))._field_reloaded=true;
		if ((_266413_ok && _1d6693655_hasDirective(&((*((*(_265137_f))))._field_Directives), jule::Str::lit("test", 4)))) {
			_1d65d44b9_checkTestFn(_self_.ptr(), &(_266217_ins));
		};
	};
}



inline void _1d65d4970_precheckFuncs(jule::Ptr<_1d65b5c81_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9ce0870:;
		if (it != expr_end) {
			jule::Ptr<_1d654554b_Trait> _267521_decl = *it;
			{
				{
					auto expr = &((*(_267521_decl))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d9ce12bb:;
					if (it != expr_end) {
						jule::Ptr<_1d653226e_Fn> _267625_m = *it;
						{
							_1d65d4772_precheckFunc(_self_, &(_267625_m));
						}
						_iter_next_1d9ce12bb:;
						++it;
						goto _iter_begin_1d9ce12bb;
					}
					_iter_end_1d9ce12bb:;
				};
			}
			_iter_next_1d9ce0870:;
			++it;
			goto _iter_begin_1d9ce0870;
		}
		_iter_end_1d9ce0870:;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9ce1761:;
		if (it != expr_end) {
			jule::Ptr<_1d653226e_Fn> _268021_decl = *it;
			{
				_1d65d4772_precheckFunc(_self_, &(_268021_decl));
			}
			_iter_next_1d9ce1761:;
			++it;
			goto _iter_begin_1d9ce1761;
		}
		_iter_end_1d9ce1761:;
	};
}



inline void _1d65d4b6d_checkFuncs(jule::Ptr<_1d65b5c81_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9ce2ac5:;
		if (it != expr_end) {
			jule::Ptr<_1d653226e_Fn> _268721_decl = *it;
			{
				_1d65d4211_checkFunc(_self_, &(_268721_decl));
			}
			_iter_next_1d9ce2ac5:;
			++it;
			goto _iter_begin_1d9ce2ac5;
		}
		_iter_end_1d9ce2ac5:;
	};
}



inline void _1d65d4d6b_checkPackageTypes(jule::Ptr<_1d65b5c81_Sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9ce38c8:;
		if (it != expr_end) {
			jule::Ptr<_1d6641d73_SymbolTable> _269521_f = *it;
			{
				_1d65b849d_setCurrentFile(_self_.ptr(), _269521_f);
				_1d65d0c46_checkGlobals(_self_);
				_1d65d4970_precheckFuncs(_self_);
				_1d65d3221_precheckStructTypes(_self_);
			}
			_iter_next_1d9ce38c8:;
			++it;
			goto _iter_begin_1d9ce38c8;
		}
		_iter_end_1d9ce38c8:;
	};
	if (((*(_self_))._field_errors.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9ce5446:;
		if (it != expr_end) {
			jule::Ptr<_1d6641d73_SymbolTable> _270621_f = *it;
			{
				_1d65b849d_setCurrentFile(_self_.ptr(), _270621_f);
				_1d65d4b6d_checkFuncs(_self_);
				_1d65d29b2_checkStructTypes(_self_);
			}
			_iter_next_1d9ce5446:;
			++it;
			goto _iter_begin_1d9ce5446;
		}
		_iter_end_1d9ce5446:;
	};
}



inline void _1d65d5069_setFileSemaFields(jule::Ptr<_1d65b5c81_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9ce6a30:;
		if (it != expr_end) {
			jule::Ptr<_1d653226e_Fn> _271421_f = *it;
			{
				(*(_271421_f))._field_sema=_self_;
			}
			_iter_next_1d9ce6a30:;
			++it;
			goto _iter_begin_1d9ce6a30;
		}
		_iter_end_1d9ce6a30:;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9ce769b:;
		if (it != expr_end) {
			jule::Ptr<_1d651c2d1_Struct> _271721_st = *it;
			{
				(*(_271721_st))._field_sema=_self_;
			}
			_iter_next_1d9ce769b:;
			++it;
			goto _iter_begin_1d9ce769b;
		}
		_iter_end_1d9ce769b:;
	};
}



inline void _1d65d5267_setSemaFields(jule::Ptr<_1d65b5c81_Sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9ce837d:;
		if (it != expr_end) {
			jule::Ptr<_1d6641d73_SymbolTable> _272321_file = *it;
			{
				_1d65b849d_setCurrentFile(_self_.ptr(), _272321_file);
				_1d65d5069_setFileSemaFields(_self_);
			}
			_iter_next_1d9ce837d:;
			++it;
			goto _iter_begin_1d9ce837d;
		}
		_iter_end_1d9ce837d:;
	};
}



inline void _1d65d5520_check(jule::Ptr<_1d65b5c81_Sema> _self_, jule::Slice<jule::Ptr<_1d6641d73_SymbolTable>>* _272930_files) {
	(*(_self_))._field_files=(*(_272930_files));
	_1d65bc33c_checkImports(_self_.ptr());
	if (((*(_self_))._field_errors.len() != 0LL)) {
		return;;
	};
	_1d65d5267_setSemaFields(_self_);
	_1d65bcd32_checkInherits(_self_);
	if (((*(_self_))._field_errors.len() != 0LL)) {
		return;;
	};
	_1d65bc738_implImpls(_self_);
	if (((*(_self_))._field_errors.len() != 0LL)) {
		return;;
	};
	_1d65bc936_checkEnums(_self_);
	if (((*(_self_))._field_errors.len() != 0LL)) {
		return;;
	};
	_1d65cec56_checkPackageDecls(_self_);
	if (((*(_self_))._field_errors.len() != 0LL)) {
		return;;
	};
	_1d65d4d6b_checkPackageTypes(_self_);
}





std::ostream &operator<<(std::ostream &_Stream, _1d65b5c81_Sema _Src) {
	_Stream << "Sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "flags:" << _Src._field_flags << ", ";
	_Stream << "meta:" << _Src._field_meta;
	_Stream << "}";
	return _Stream;
}



inline _1d65d594e_missingRetChecker static__1d65d5d17_new(void) {
	return _1d65d594e_missingRetChecker{._field_breaked=jule::Slice<jule::Uintptr>::alloc(16LLU, 16LLU, 0), };;
}



inline jule::Bool _1d65d6125_checkConditional(_1d65d594e_missingRetChecker* _self_, jule::Ptr<_1d6574c62_Conditional> _277735_c) {
	{
		auto expr = &((*(_277735_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9ceda04:;
		if (it != expr_end) {
			jule::Ptr<_1d6574547_If> _277821_elif = *it;
			{
				if ((_277821_elif == nullptr)) {
					return false;;
				};
				if ((!(_1d65d6ae8_checkScope(_self_, (*(_277821_elif))._field_Scope)))) {
					return false;;
				};
			}
			_iter_next_1d9ceda04:;
			++it;
			goto _iter_begin_1d9ceda04;
		}
		_iter_end_1d9ceda04:;
	};
	return (((*(_277735_c))._field_Default != nullptr) && _1d65d6ae8_checkScope(_self_, (*((*(_277735_c))._field_Default))._field_Scope));;
}



inline jule::Bool _1d65d6466_checkMatch(_1d65d594e_missingRetChecker* _self_, jule::Ptr<_1d6578260_Match> _278929_m) {
	{
		auto expr = &((*(_278929_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9d00ac2:;
		if (it != expr_end) {
			jule::Ptr<_1d6578d98_Case> _279021_c = *it;
			{
				if ((_279021_c == nullptr)) {
					return false;;
				};
				jule::I64 _279413_n = (*(_self_))._field_breaked.len();;
				jule::Bool _279513_ok = _1d65d6ae8_checkScope(_self_, (*(_279021_c))._field_Scope);;
				{
					
					if ((_279413_n != (*(_self_))._field_breaked.len())) {
						_case_begin_1d9d02530:;
						{
							return false;;
						}
					}
					else if ((!(_279513_ok))) {
						_case_begin_1d9d025a7:;
						{
							if ((!((*(_self_))._field_falled))) {
								return false;;
							};
							goto _case_begin_1d9d0262e;
						}
					}
					else if ((*(_self_))._field_falled) {
						_case_begin_1d9d0262e:;
						{
							(*(_self_))._field_falled=false;
							if (((*(_279021_c))._field_Next == nullptr)) {
								return false;;
							};
							goto _iter_next_1d9d00ac2;
						}
					}
					_match_end_1d9d02475:;
				};
			}
			_iter_next_1d9d00ac2:;
			++it;
			goto _iter_begin_1d9d00ac2;
		}
		_iter_end_1d9d00ac2:;
	};
	return (((*(_278929_m))._field_Default != nullptr) && _1d65d6ae8_checkScope(_self_, (*((*(_278929_m))._field_Default))._field_Scope));;
}



inline jule::Bool _1d65d67a7_checkInfIter(_1d65d594e_missingRetChecker* _self_, jule::Ptr<_1d657505e_InfIter> _281531_it) {
	jule::I64 _28169_n = (*(_self_))._field_breaked.len();;
	if (_1d65d6ae8_checkScope(_self_, (*(_281531_it))._field_Scope)) {
		(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _28169_n);
		return true;;
	};
	if ((_28169_n != (*(_self_))._field_breaked.len())) {
		jule::Uintptr _282213_itaddr = static_cast<jule::Uintptr>(_281531_it);;
		{
			auto expr = (*(_self_))._field_breaked.slice(_28169_n);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1d9d06424:;
			if (it != expr_end) {
				jule::Uintptr _282320_addr = *it;
				{
					if ((_282213_itaddr == _282320_addr)) {
						(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _28169_n);
						return false;;
					};
				}
				_iter_next_1d9d06424:;
				++it;
				goto _iter_begin_1d9d06424;
			}
			_iter_end_1d9d06424:;
		};
		(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _28169_n);
	};
	return true;;
}



inline jule::Bool _1d65d6ae8_checkScope(_1d65d594e_missingRetChecker* _self_, jule::Ptr<_1d6574129_Scope> _283429_s) {
	if ((_283429_s == nullptr)) {
		return false;;
	};
	{
		auto expr = &((*(_283429_s))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9d07da4:;
		if (it != expr_end) {
			jule::Any _283821_st = *it;
			{
				{
					auto &_match_expr{ _283821_st };
					
					if (_match_expr.type == &__jule_any_type48) {
						_case_begin_1d9d08712:;
						{
							(*(_self_))._field_falled=true;
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type49) {
						_case_begin_1d9d08789:;
						{
							jule::Uintptr _284417_addr = (*(_283821_st.cast_ptr<_1d65766c0_BreakSt>(&__jule_any_type49)))._field_It;;
							if ((_284417_addr != 0LLU)) {
								{ jule::Slice<jule::Uintptr> &__jule_push_dest = (*(_self_))._field_breaked; __jule_push_dest.push(_284417_addr); };
							};
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type41) {
						_case_begin_1d9d08811:;
						{
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type36) {
						_case_begin_1d9d08888:;
						{
							if (_1d65d67a7_checkInfIter(_self_, _283821_st.cast_ptr<_1d657505e_InfIter>(&__jule_any_type36))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type50) {
						_case_begin_1d9d08910:;
						{
							return true;;
						}
					}
					else if (_match_expr.type == &__jule_any_type22) {
						_case_begin_1d9d08987:;
						{
							if (_1d65d6ae8_checkScope(_self_, _283821_st.cast_ptr<_1d6574129_Scope>(&__jule_any_type22))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type24) {
						_case_begin_1d9d08a0e:;
						{
							{
								auto &_match_expr{ (*(_283821_st.cast_ptr<_1d664721e_Data>(&__jule_any_type24)))._field_Model };
								
								if (_match_expr.type == &__jule_any_type29 || _match_expr.type == &__jule_any_type23) {
									_case_begin_1d9d0c529:;
									{
										return true;;
									}
								}
								_match_end_1d9d0c4c4:;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type35) {
						_case_begin_1d9d08a86:;
						{
							if (_1d65d6125_checkConditional(_self_, _283821_st.cast_ptr<_1d6574c62_Conditional>(&__jule_any_type35))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type47) {
						_case_begin_1d9d08b0d:;
						{
							if (_1d65d6466_checkMatch(_self_, _283821_st.cast_ptr<_1d6578260_Match>(&__jule_any_type47))) {
								return true;;
							};
						}
					}
					_match_end_1d9d0857a:;
				};
			}
			_iter_next_1d9d07da4:;
			++it;
			goto _iter_begin_1d9d07da4;
		}
		_iter_end_1d9d07da4:;
	};
	return false;;
}



inline jule::Bool _1d65d6e39_check(_1d65d594e_missingRetChecker* _self_, jule::Ptr<_1d6574129_Scope> _288024_s) {
	return _1d65d6ae8_checkScope(_self_, _288024_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _1d65d594e_missingRetChecker _Src) {
	_Stream << "missingRetChecker{";
	_Stream << "breaked:" << _Src._field_breaked << ", ";
	_Stream << "falled:" << _Src._field_falled;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d65d7d5d_IterRelation _Src) {
	_Stream << "IterRelation{";
	_Stream << "Range:" << _Src._field_Range;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d65d939d_IsInitialized(_1d65d9018_Var* _self_) {
	return ((*(_self_))._field_Value != nullptr);;
}



inline jule::Bool _1d65d9634_IsTypeInferred(_1d65d9018_Var* _self_) {
	return (((*(_self_))._field_Kind == nullptr) || ((*((*(_self_))._field_Kind))._field_Decl == nullptr));;
}



inline jule::Bool _1d65d98ba_untypedConstant(_1d65d9018_Var* _self_) {
	return (_1d65d9634_IsTypeInferred(_self_) && (*((*((*(_self_))._field_Value))._field_Data))._field_untyped);;
}





std::ostream &operator<<(std::ostream &_Stream, _1d65d9018_Var _Src) {
	_Stream << "Var{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Value:" << _Src._field_Value << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "IterRelation:" << _Src._field_IterRelation << ", ";
	_Stream << "RetOrder:" << _Src._field_RetOrder << ", ";
	_Stream << "Depends:" << _Src._field_Depends;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1d65da46a_Dispose(jule::Ptr<_1d653226e_Fn> _1023_f) {
	return ((((((((((_1023_f != nullptr) && ((*(_1023_f))._field_Owner != nullptr)) && (*(_1023_f))._field_Ident.equal("Dispose", 7)) && (!((*(_1023_f))._field_Statically))) && (!((*(_1023_f))._field_Unsafety))) && _1d65326e2_IsVoid(_1023_f.ptr())) && ((*(_1023_f))._field_Generics.len() == 0LL)) && ((*(_1023_f))._field_Params.len() == 1LL)) && (*((*(_1023_f))._field_Params[0LL]))._field_Mutable) && (!(_1d653114c_IsRef((*(_1023_f))._field_Params[0LL].ptr()))));;
}



inline jule::Bool static__1d65da734_Str(jule::Ptr<_1d653226e_Fn> _2419_f) {
	if (((((((((((_2419_f == nullptr) || ((*(_2419_f))._field_Owner == nullptr)) || (!(*(_2419_f))._field_Ident.equal("Str", 3))) || (*(_2419_f))._field_Statically) || (*(_2419_f))._field_Unsafety) || _1d65326e2_IsVoid(_2419_f.ptr())) || ((*(_2419_f))._field_Generics.len() != 0LL)) || ((*(_2419_f))._field_Params.len() != 1LL)) || (*((*(_2419_f))._field_Params[0LL]))._field_Mutable) || _1d653114c_IsRef((*(_2419_f))._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1d6535173_FnIns> _3813_ins = (*(_2419_f))._field_Instances[0LL];;
	jule::Ptr<_1d668060e_Prim> _399_prim = _1d667a186_Prim((*(_3813_ins))._field_Result.ptr());;
	if ((_399_prim == nullptr)) {
		return false;;
	};
	return _1d6683a96_IsStr(_399_prim.ptr());;
}



inline jule::Bool static__1d65daaa8_logical(jule::Ptr<_1d653226e_Fn>* _4624_f, jule::Str _4632_ident) {
	if (((((((((((((((*(_4624_f)) == nullptr) || ((*((*(_4624_f))))._field_Ident != _4632_ident)) || ((*((*(_4624_f))))._field_Owner == nullptr)) || ((*((*(_4624_f))))._field_Instances.len() == 0LL)) || (*((*(_4624_f))))._field_Statically) || (*((*(_4624_f))))._field_Unsafety) || _1d65326e2_IsVoid((*(_4624_f)).ptr())) || ((*((*(_4624_f))))._field_Generics.len() != 0LL)) || ((*((*(_4624_f))))._field_Params.len() != 2LL)) || (*((*((*(_4624_f))))._field_Params[0LL]))._field_Mutable) || _1d653114c_IsRef((*((*(_4624_f))))._field_Params[0LL].ptr())) || (*((*((*(_4624_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_4624_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1d6535173_FnIns> _6313_ins = (*((*(_4624_f))))._field_Instances[0LL];;
	jule::Ptr<_1d668060e_Prim> _649_prim = _1d667a186_Prim((*(_6313_ins))._field_Result.ptr());;
	if (((_649_prim == nullptr) || (!(_1d6683810_IsBool(_649_prim.ptr()))))) {
		return false;;
	};
	return ((*(_6313_ins))._field_Owner == _1d667b709_Struct((*((*(_6313_ins))._field_Params[1LL]))._field_Kind.ptr()));;
}



inline jule::Bool static__1d65dad72_Eq(jule::Ptr<_1d653226e_Fn> _7218_f) {
	return static__1d65daaa8_logical(&(_7218_f), jule::Str::lit("Eq", 2));;
}



inline jule::Bool static__1d65db13b_Gt(jule::Ptr<_1d653226e_Fn> _7718_f) {
	return static__1d65daaa8_logical(&(_7718_f), jule::Str::lit("Gt", 2));;
}



inline jule::Bool static__1d65db405_GtEq(jule::Ptr<_1d653226e_Fn> _8220_f) {
	return static__1d65daaa8_logical(&(_8220_f), jule::Str::lit("GtEq", 4));;
}



inline jule::Bool static__1d65db6be_Lt(jule::Ptr<_1d653226e_Fn> _8718_f) {
	return static__1d65daaa8_logical(&(_8718_f), jule::Str::lit("Lt", 2));;
}



inline jule::Bool static__1d65db988_LtEq(jule::Ptr<_1d653226e_Fn> _9220_f) {
	return static__1d65daaa8_logical(&(_9220_f), jule::Str::lit("LtEq", 4));;
}



inline jule::Bool static__1d65dbd0c_result(jule::Ptr<_1d653226e_Fn>* _9623_f, jule::Str _9631_ident) {
	if (((((((((((((((*(_9623_f)) == nullptr) || ((*((*(_9623_f))))._field_Ident != _9631_ident)) || ((*((*(_9623_f))))._field_Owner == nullptr)) || ((*((*(_9623_f))))._field_Instances.len() == 0LL)) || (*((*(_9623_f))))._field_Statically) || (*((*(_9623_f))))._field_Unsafety) || _1d65326e2_IsVoid((*(_9623_f)).ptr())) || ((*((*(_9623_f))))._field_Generics.len() != 0LL)) || ((*((*(_9623_f))))._field_Params.len() != 2LL)) || (*((*((*(_9623_f))))._field_Params[0LL]))._field_Mutable) || _1d653114c_IsRef((*((*(_9623_f))))._field_Params[0LL].ptr())) || (*((*((*(_9623_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_9623_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1d6535173_FnIns> _11313_ins = (*((*(_9623_f))))._field_Instances[0LL];;
	return (_1d667b709_Struct((*(_11313_ins))._field_Result.ptr()) == (*(_11313_ins))._field_Owner);;
}



inline jule::Bool static__1d65dc0c6_Shl(jule::Ptr<_1d653226e_Fn> _11819_f) {
	return static__1d65dbd0c_result(&(_11819_f), jule::Str::lit("Shl", 3));;
}



inline jule::Bool static__1d65dc390_Shr(jule::Ptr<_1d653226e_Fn> _12319_f) {
	return static__1d65dbd0c_result(&(_12319_f), jule::Str::lit("Shr", 3));;
}



inline jule::Bool static__1d65dc659_Add(jule::Ptr<_1d653226e_Fn> _12819_f) {
	return static__1d65dbd0c_result(&(_12819_f), jule::Str::lit("Add", 3));;
}



inline jule::Bool static__1d65dc923_Sub(jule::Ptr<_1d653226e_Fn> _13319_f) {
	return static__1d65dbd0c_result(&(_13319_f), jule::Str::lit("Sub", 3));;
}



inline jule::Bool static__1d65dcbdc_Div(jule::Ptr<_1d653226e_Fn> _13819_f) {
	return static__1d65dbd0c_result(&(_13819_f), jule::Str::lit("Div", 3));;
}



inline jule::Bool static__1d65dcea6_Mul(jule::Ptr<_1d653226e_Fn> _14319_f) {
	return static__1d65dbd0c_result(&(_14319_f), jule::Str::lit("Mul", 3));;
}



inline jule::Bool static__1d65dd270_Mod(jule::Ptr<_1d653226e_Fn> _14819_f) {
	return static__1d65dbd0c_result(&(_14819_f), jule::Str::lit("Mod", 3));;
}



inline jule::Bool static__1d65dd539_BitAnd(jule::Ptr<_1d653226e_Fn> _15322_f) {
	return static__1d65dbd0c_result(&(_15322_f), jule::Str::lit("BitAnd", 6));;
}



inline jule::Bool static__1d65dd803_BitOr(jule::Ptr<_1d653226e_Fn> _15821_f) {
	return static__1d65dbd0c_result(&(_15821_f), jule::Str::lit("BitOr", 5));;
}



inline jule::Bool static__1d65ddabc_BitXor(jule::Ptr<_1d653226e_Fn> _16322_f) {
	return static__1d65dbd0c_result(&(_16322_f), jule::Str::lit("BitXor", 6));;
}



inline jule::Bool static__1d65dde41_unary(jule::Ptr<_1d653226e_Fn>* _16722_f, jule::Str _16730_ident) {
	if (((((((((((((*(_16722_f)) == nullptr) || ((*((*(_16722_f))))._field_Ident != _16730_ident)) || ((*((*(_16722_f))))._field_Owner == nullptr)) || ((*((*(_16722_f))))._field_Instances.len() == 0LL)) || (*((*(_16722_f))))._field_Statically) || (*((*(_16722_f))))._field_Unsafety) || _1d65326e2_IsVoid((*(_16722_f)).ptr())) || ((*((*(_16722_f))))._field_Generics.len() != 0LL)) || ((*((*(_16722_f))))._field_Params.len() != 1LL)) || (*((*((*(_16722_f))))._field_Params[0LL]))._field_Mutable) || _1d653114c_IsRef((*((*(_16722_f))))._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1d6535173_FnIns> _18213_ins = (*((*(_16722_f))))._field_Instances[0LL];;
	return (_1d667b709_Struct((*(_18213_ins))._field_Result.ptr()) == (*(_18213_ins))._field_Owner);;
}



inline jule::Bool static__1d65de20a_Neg(jule::Ptr<_1d653226e_Fn> _18719_f) {
	return static__1d65dde41_unary(&(_18719_f), jule::Str::lit("Neg", 3));;
}



inline jule::Bool static__1d65de4c4_Pos(jule::Ptr<_1d653226e_Fn> _19219_f) {
	return static__1d65dde41_unary(&(_19219_f), jule::Str::lit("Pos", 3));;
}



inline jule::Bool static__1d65de78d_BitNot(jule::Ptr<_1d653226e_Fn> _19722_f) {
	return static__1d65dde41_unary(&(_19722_f), jule::Str::lit("BitNot", 6));;
}



inline jule::Bool static__1d65deb12_assign(jule::Ptr<_1d653226e_Fn>* _20123_f, jule::Str _20131_ident) {
	if (((((((((((((((*(_20123_f)) == nullptr) || ((*((*(_20123_f))))._field_Ident != _20131_ident)) || ((*((*(_20123_f))))._field_Owner == nullptr)) || ((*((*(_20123_f))))._field_Instances.len() == 0LL)) || (*((*(_20123_f))))._field_Statically) || (*((*(_20123_f))))._field_Unsafety) || (!(_1d65326e2_IsVoid((*(_20123_f)).ptr())))) || ((*((*(_20123_f))))._field_Generics.len() != 0LL)) || ((*((*(_20123_f))))._field_Params.len() != 2LL)) || (!((*((*((*(_20123_f))))._field_Params[0LL]))._field_Mutable))) || _1d653114c_IsRef((*((*(_20123_f))))._field_Params[0LL].ptr())) || (*((*((*(_20123_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_20123_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	return true;;
}



inline jule::Bool static__1d65dedcb_AddAssign(jule::Ptr<_1d653226e_Fn> _22125_f) {
	return static__1d65deb12_assign(&(_22125_f), jule::Str::lit("AddAssign", 9));;
}



inline jule::Bool static__1d65e0195_SubAssign(jule::Ptr<_1d653226e_Fn> _22625_f) {
	return static__1d65deb12_assign(&(_22625_f), jule::Str::lit("SubAssign", 9));;
}



inline jule::Bool static__1d65e045e_DivAssign(jule::Ptr<_1d653226e_Fn> _23125_f) {
	return static__1d65deb12_assign(&(_23125_f), jule::Str::lit("DivAssign", 9));;
}



inline jule::Bool static__1d65e0728_MulAssign(jule::Ptr<_1d653226e_Fn> _23625_f) {
	return static__1d65deb12_assign(&(_23625_f), jule::Str::lit("MulAssign", 9));;
}



inline jule::Bool static__1d65e09e2_ModAssign(jule::Ptr<_1d653226e_Fn> _24125_f) {
	return static__1d65deb12_assign(&(_24125_f), jule::Str::lit("ModAssign", 9));;
}



inline jule::Bool static__1d65e0cab_ShlAssign(jule::Ptr<_1d653226e_Fn> _24625_f) {
	return static__1d65deb12_assign(&(_24625_f), jule::Str::lit("ShlAssign", 9));;
}



inline jule::Bool static__1d65e1075_ShrAssign(jule::Ptr<_1d653226e_Fn> _25125_f) {
	return static__1d65deb12_assign(&(_25125_f), jule::Str::lit("ShrAssign", 9));;
}



inline jule::Bool static__1d65e133e_BitOrAssign(jule::Ptr<_1d653226e_Fn> _25627_f) {
	return static__1d65deb12_assign(&(_25627_f), jule::Str::lit("BitOrAssign", 11));;
}



inline jule::Bool static__1d65e1608_BitAndAssign(jule::Ptr<_1d653226e_Fn> _26128_f) {
	return static__1d65deb12_assign(&(_26128_f), jule::Str::lit("BitAndAssign", 12));;
}



inline jule::Bool static__1d65e18c2_BitXorAssign(jule::Ptr<_1d653226e_Fn> _26628_f) {
	return static__1d65deb12_assign(&(_26628_f), jule::Str::lit("BitXorAssign", 12));;
}





std::ostream &operator<<(std::ostream &_Stream, _1d65d9d2c_FuncPattern _Src) {
	_Stream << "FuncPattern{";
	_Stream << "}";
	return _Stream;
}



inline void _1d662e646_pushErr(_1d662e14b_typeCompatibilityChecker* _self_, jule::Str _11826_fmt, jule::Slice<jule::Any> _11839_args) {
	_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _11826_fmt, _11839_args);
}



inline jule::Bool _1d662e8cc_checkTrait(_1d662e14b_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1d6678b13_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1d654554b_Trait> _12613_trt = _1d667b990_Trait((*(_self_))._field_dest.ptr());;
	jule::Bool _12713_ref = false;;
	{
		
		if ((_1d667a41c_Sptr((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_1d9d4e0d7:;
			{
				_12713_ref=true;
				(*(_self_))._field_src=(*(_1d667a41c_Sptr((*(_self_))._field_src.ptr())))._field_Elem;
				if ((_1d667b709_Struct((*(_self_))._field_src.ptr()) == nullptr)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				goto _case_begin_1d9d4e15e;
			}
		}
		else if ((_1d667b709_Struct((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_1d9d4e15e:;
			{
				jule::Ptr<_1d652005e_StructIns> _13713_s = _1d667b709_Struct((*(_self_))._field_src.ptr());;
				if ((!(_1d651d920_IsImplements((*(_13713_s))._field_Decl.ptr(), _12613_trt)))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if (((!(_12713_ref)) && _1d662cc1b_traitHasReferenceReceiver(&(_12613_trt)))) {
					_1d662e646_pushErr(_self_, jule::Str::lit("trait has reference receiver parameter used method, cannot assign non-reference instance", 88), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1d667b990_Trait((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_1d9d4e1d6:;
			{
				jule::Ptr<_1d654554b_Trait> _14717_base = _1d667b990_Trait((*(_self_))._field_src.ptr());;
				if ((_12613_trt == _14717_base)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_julec_label_1d9d53bad:;
				{
					auto expr = &((*(_14717_base))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d9d543b7:;
					if (it != expr_end) {
						jule::Ptr<_1d651c2d1_Struct> _15220_s1 = *it;
						{
							{
								auto expr = &((*(_12613_trt))._field_Implemented);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1d9d54c8b:;
								if (it != expr_end) {
									jule::Ptr<_1d651c2d1_Struct> _15324_s2 = *it;
									{
										if ((_15220_s1 == _15324_s2)) {
											goto _iter_next_1d9d543b7;
										};
									}
									_iter_next_1d9d54c8b:;
									++it;
									goto _iter_begin_1d9d54c8b;
								}
								_iter_end_1d9d54c8b:;
							};
							__jule_func_result = false;
							return __jule_func_result;;
						}
						_iter_next_1d9d543b7:;
						++it;
						goto _iter_begin_1d9d543b7;
					}
					_iter_end_1d9d543b7:;
				};
				{
					auto expr = &((*(_12613_trt))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d9d55253:;
					if (it != expr_end) {
						jule::Ptr<_1d653226e_Fn> _16025_m1 = *it;
						{
							jule::Ptr<_1d653226e_Fn> _16121_m2 = _1d65461ea_FindMethod(_14717_base.ptr(), (*(_16025_m1))._field_Ident);;
							if ((_16121_m2 == nullptr)) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
							jule::Ptr<_1d6535173_FnIns> _16517_m1k = _1d65c33ed_getTraitCheckFnKind((*(_self_))._field_s, &(_16025_m1));;
							jule::Ptr<_1d6535173_FnIns> _16617_m2k = _1d65c33ed_getTraitCheckFnKind((*(_self_))._field_s, &(_16121_m2));;
							if ((!(_1d65360db_equalTrait(_16517_m1k, &(_16617_m2k))))) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
						}
						_iter_next_1d9d55253:;
						++it;
						goto _iter_begin_1d9d55253;
					}
					_iter_end_1d9d55253:;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1d9d4e02c:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1d9d4dec7:;
	};
}



inline jule::Bool _1d662eb63_checkPtr(_1d662e14b_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1d6678b13_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1d6687902_Ptr> _18113_dest = _1d667a6a3_Ptr((*(_self_))._field_dest.ptr());;
	if (_1d668843b_IsUnsafe(_18113_dest.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	__jule_func_result = _1d667823e_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1d662ede9_checkPrim(_1d662e14b_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((!((*((*(_self_))._field_dest))._field_Variadic))) {
		jule::Ptr<_1d668060e_Prim> _19013_prim = _1d667a186_Prim((*(_self_))._field_dest.ptr());;
		if (((_19013_prim != nullptr) && _1d6683d2c_IsAny(_19013_prim.ptr()))) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	__jule_func_result = _1d667823e_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1d66302e5_typeEnum(_1d662e14b_typeCompatibilityChecker* _self_, jule::Ptr<_1d6549462_TypeEnum>* _19828_e, jule::Ptr<_1d6677a35_TypeKind>* _19847_t2) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_19828_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9d5c128:;
		if (it != expr_end) {
			jule::Ptr<_1d6548d8a_TypeEnumItem> _19921_item = *it;
			{
				if (_1d667823e_Equal((*((*(_19921_item))._field_Kind))._field_Kind, (*(_19847_t2)))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				jule::Ptr<_1d6549462_TypeEnum> _20317_ke = _1d667abc0_TypeEnum((*((*(_19921_item))._field_Kind))._field_Kind.ptr());;
				if ((_20317_ke == nullptr)) {
					goto _iter_next_1d9d5c128;
				};
				if (_1d66302e5_typeEnum(_self_, &(_20317_ke), _19847_t2)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1d9d5c128:;
			++it;
			goto _iter_begin_1d9d5c128;
		}
		_iter_end_1d9d5c128:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1d663057b_checkTypeEnum(_1d662e14b_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1d667823e_Equal((*(_self_))._field_dest, (*(_self_))._field_src)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1d6549462_TypeEnum> _21813_e = _1d667abc0_TypeEnum((*(_self_))._field_dest.ptr());;
	__jule_func_result = _1d66302e5_typeEnum(_self_, &(_21813_e), &((*(_self_))._field_src));
	return __jule_func_result;;
}



inline jule::Bool _1d6630812_check(_1d662e14b_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((_1d667a6a3_Ptr((*(_self_))._field_dest.ptr()) != nullptr)) {
		__jule_func_result = _1d662eb63_checkPtr(_self_);
		return __jule_func_result;;
	};
	if (_1d66798d3_NilCompatible((*(_self_))._field_dest.ptr())) {
		if (_1d6678b13_IsNil((*(_self_))._field_src.ptr())) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	{
		
		if ((_1d667a186_Prim((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_1d9d62958:;
			{
				__jule_func_result = _1d662ede9_checkPrim(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1d667abc0_TypeEnum((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_1d9d61e96:;
			{
				__jule_func_result = _1d663057b_checkTypeEnum(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1d667b990_Trait((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_1d9d6200c:;
			{
				__jule_func_result = _1d662e8cc_checkTrait(_self_);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1d9d61e30:;
			{
				__jule_func_result = _1d667823e_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
				return __jule_func_result;;
			}
		}
		_match_end_1d9d6169e:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1d662e14b_typeCompatibilityChecker _Src) {
	_Stream << "typeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline void _1d663137e_pushErr(_1d6630dea_assignTypeChecker* _self_, jule::Str _25426_fmt, jule::Slice<jule::Any> _25439_args) {
	_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _25426_fmt, _25439_args);
}



inline jule::Bool _1d6631615_checkValidity(_1d6630dea_assignTypeChecker* _self_) {
	jule::Bool _25913_valid = true;;
	{
		
		if ((_1d667b473_Fn((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d9d65593:;
			{
				jule::Ptr<_1d6535173_FnIns> _26213_f = _1d667b473_Fn((*((*(_self_))._field_d))._field_Kind.ptr());;
				{
					
					if (_1d6536608_IsBuiltin(_26213_f.ptr())) {
						_case_begin_1d9d66dbe:;
						{
							_1d663137e_pushErr(_self_, jule::Str::lit("builtin define cannot use as anonymous function", 47), jule::Slice<jule::Any>());
							_25913_valid=false;
						}
					}
					else if ((*((*(_26213_f))._field_Decl))._field_Binded) {
						_case_begin_1d9d66e46:;
						{
							_1d663137e_pushErr(_self_, jule::Str::lit("binded functions cannot use as anonymous function", 49), jule::Slice<jule::Any>());
							_25913_valid=false;
						}
					}
					else if (((!((*((*(_26213_f))._field_Decl))._field_Statically)) && _1d6532978_IsMethod((*(_26213_f))._field_Decl.ptr()))) {
						_case_begin_1d9d66ebd:;
						{
							_1d663137e_pushErr(_self_, jule::Str::lit("non-static methods cannot use as anonymous function", 51), jule::Slice<jule::Any>());
							_25913_valid=false;
						}
					}
					else if ((((*((*(_26213_f))._field_Decl))._field_Generics.len() > 0LL) && ((*(_26213_f))._field_Generics.len() == 0LL))) {
						_case_begin_1d9d67045:;
						{
							_1d663137e_pushErr(_self_, jule::Str::lit("genericed functions cannot use as anonymous function", 52), jule::Slice<jule::Any>());
							_1d65b8c2e_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("instantiate generic function to use as anonymous function", 57), jule::Slice<jule::Any>());
							_25913_valid=false;
						}
					}
					_match_end_1d9d66ce2:;
				};
			}
		}
		else if ((_1d667beac_Tup((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d9d6561a:;
			{
				_1d663137e_pushErr(_self_, jule::Str::lit("tuples cannot assign to single define in same time", 50), jule::Slice<jule::Any>());
				_25913_valid=false;
			}
		}
		_match_end_1d9d654d8:;
	};
	return _25913_valid;;
}



inline jule::Bool _1d663189b_checkConst(_1d6630dea_assignTypeChecker* _self_) {
	if (((!((*((*(_self_))._field_d))._field_untyped)) || (_1d667a186_Prim((*(_self_))._field_dest.ptr()) == nullptr))) {
		return false;;
	};
	jule::Str _2919_kind = (*(_1d667a186_Prim((*(_self_))._field_dest.ptr())))._field_Kind;;
	{
		
		if (_1d4320966_IsFloat(_2919_kind)) {
			_case_begin_1d9d6d03a:;
			{
				if ((!(_1d662d0a1_floatAssignable(&(_2919_kind), &((*(_self_))._field_d))))) {
					return false;;
				};
				(*((*((*(_self_))._field_d))._field_Constant))._field_Kind=_2919_kind;
			}
		}
		else if (_1d4320625_IsInt(_2919_kind)) {
			_case_begin_1d9d6d0b2:;
			{
				if ((!(_1d662db62_intAssignable(_2919_kind, &((*(_self_))._field_d))))) {
					return false;;
				};
				(*((*((*(_self_))._field_d))._field_Constant))._field_Kind=_2919_kind;
			}
		}
		else {
			_case_begin_1d9d6ce6e:;
			{
				return false;;
			}
		}
		_match_end_1d9d6cd4d:;
	};
	return true;;
}



inline jule::Bool _1d6631b32_checkCompatibility(_1d6630dea_assignTypeChecker* _self_) {
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1d9d702c3:;
			{
				return false;;
			}
		}
		else if ((!(_1d6631615_checkValidity(_self_)))) {
			_case_begin_1d9d70339:;
			{
				return false;;
			}
		}
		else if (_1d663189b_checkConst(_self_)) {
			_case_begin_1d9d703a0:;
			{
				return true;;
			}
		}
		else if ((_1d667a939_Enum((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d9d70416:;
			{
				jule::Ptr<_1d6677a35_TypeKind> _32017_dkind = (*(_self_))._field_dest;;
				if ((_1d667a939_Enum((*(_self_))._field_dest.ptr()) != nullptr)) {
					_32017_dkind=(*((*(_1d667a939_Enum((*(_self_))._field_dest.ptr())))._field_Kind))._field_Kind;
				};
				jule::Ptr<_1d668060e_Prim> _32413_prim = _1d667a186_Prim((*(_self_))._field_dest.ptr());;
				if (((_32413_prim == nullptr) || _1d6683d2c_IsAny(_32413_prim.ptr()))) {
					goto _match_end_1d9d6d7dd;
				};
				jule::Ptr<_1d6677a35_TypeKind> _32917_dest = (*((*(_1d667a939_Enum((*((*(_self_))._field_d))._field_Kind.ptr())))._field_Kind))._field_Kind;;
				return _1d65c1d36_checkTypeCompatibility((*(_self_))._field_s, &(_32917_dest), &(_32017_dkind), &((*(_self_))._field_errorToken));;
			}
		}
		_match_end_1d9d6d7dd:;
	};
	return _1d65c270a_checkTypeCompatibility1((*(_self_))._field_s, &((*(_self_))._field_dest), &((*(_self_))._field_d), &((*(_self_))._field_errorToken));;
}



inline jule::Bool _1d6631db8_check(_1d6630dea_assignTypeChecker* _self_) {
	jule::Bool _3369_ok = _1d6631b32_checkCompatibility(_self_);;
	if ((_3369_ok && (!((*((*((*(_self_))._field_d))._field_Kind))._field_Variadic)))) {
		_1d6695008_applyImplicitCast(&((*(_self_))._field_dest), &((*(_self_))._field_d));
	};
	return _3369_ok;;
}





std::ostream &operator<<(std::ostream &_Stream, _1d6630dea_assignTypeChecker _Src) {
	_Stream << "assignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d9d8e4e0_annotateConstraintElem(_1d66327c0_dynamicTypeAnnotation* _self_, jule::Ptr<_1d6677a35_TypeKind>* _35649_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type69) {
			_case_begin_1d9d90bea:;
			{
				jule::Ptr<_1d6677a35_TypeKind> _35921_elem = nullptr;;
				{
					
{
						_case_begin_1d9d91a0e:;
						{
							_35921_elem=(*(_1d667ae56_Arr((*(_35649_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1d9d91888:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.cast_ptr<_1d64ed69c_ArrTypeDecl>(&__jule_any_type69)))._field_Elem;
				return _1d6633eca_annotateConstraint(_self_, &(_35921_elem));;
			}
		}
		_match_end_1d9d90b84:;
	};
	return false;;
}

inline jule::Bool _1d9d8e90d_annotateConstraintElem(_1d66327c0_dynamicTypeAnnotation* _self_, jule::Ptr<_1d6677a35_TypeKind>* _35649_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1d9d9465a:;
			{
				jule::Ptr<_1d6677a35_TypeKind> _35921_elem = nullptr;;
				{
					
{
						_case_begin_1d9d954e6:;
						{
							_35921_elem=(*(_1d667b1dc_Slc((*(_35649_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1d9d952e8:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.cast_ptr<_1d64ec811_SlcTypeDecl>(&__jule_any_type70)))._field_Elem;
				return _1d6633eca_annotateConstraint(_self_, &(_35921_elem));;
			}
		}
		_match_end_1d9d945e4:;
	};
	return false;;
}

inline jule::Bool _1d9d90ed6_annotateConstraintElem(_1d66327c0_dynamicTypeAnnotation* _self_, jule::Ptr<_1d6677a35_TypeKind>* _35649_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1d9d980ba:;
			{
				jule::Ptr<_1d6677a35_TypeKind> _35921_elem = nullptr;;
				{
					
{
						_case_begin_1d9d98ecd:;
						{
							_35921_elem=(*(_1d667a6a3_Ptr((*(_35649_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1d9d98c58:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.cast_ptr<_1d64ece0a_PtrTypeDecl>(&__jule_any_type71)))._field_Elem;
				return _1d6633eca_annotateConstraint(_self_, &(_35921_elem));;
			}
		}
		_match_end_1d9d98054:;
	};
	return false;;
}

inline jule::Bool _1d9d9753c_annotateConstraintElem(_1d66327c0_dynamicTypeAnnotation* _self_, jule::Ptr<_1d6677a35_TypeKind>* _35649_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1d9d9b70b:;
			{
				jule::Ptr<_1d6677a35_TypeKind> _35921_elem = nullptr;;
				{
					
{
						_case_begin_1d9d9c696:;
						{
							_35921_elem=(*(_1d667a41c_Sptr((*(_35649_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1d9d9c399:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.cast_ptr<_1d64ec47b_SptrTypeDecl>(&__jule_any_type72)))._field_Elem;
				return _1d6633eca_annotateConstraint(_self_, &(_35921_elem));;
			}
		}
		_match_end_1d9d9b695:;
	};
	return false;;
}



inline jule::Bool _1d66331b6_annotateConstraintMap(_1d66327c0_dynamicTypeAnnotation* _self_, jule::Ptr<_1d6677a35_TypeKind>* _37645_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1d9d7764e:;
			{
				jule::Ptr<_1d66862a2_Map> _37917_m = _1d667bc26_Map((*(_37645_k)).ptr());;
				jule::Ptr<_1d64eddea_MapTypeDecl> _38017_m2 = (*((*(_self_))._field_c))._field_Kind.cast_ptr<_1d64eddea_MapTypeDecl>(&__jule_any_type73);;
				(*(_self_))._field_c=(*(_38017_m2))._field_Key;
				if ((!(_1d6633eca_annotateConstraint(_self_, &((*(_37917_m))._field_Key))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				(*(_self_))._field_c=(*(_38017_m2))._field_Val;
				__jule_func_result = _1d6633eca_annotateConstraint(_self_, &((*(_37917_m))._field_Val));
				return __jule_func_result;;
			}
		}
		_match_end_1d9d775d8:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1d6633507_annotateConstraintTup(_1d66327c0_dynamicTypeAnnotation* _self_, jule::Ptr<_1d6677a35_TypeKind>* _39145_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1d9d7a531:;
			{
				jule::Ptr<_1d64ecb0d_TupleTypeDecl> _39417_tup = (*((*(_self_))._field_c))._field_Kind.cast_ptr<_1d64ecb0d_TupleTypeDecl>(&__jule_any_type74);;
				jule::Ptr<_1d6685702_Tuple> _39517_tup2 = _1d667beac_Tup((*(_39145_k)).ptr());;
				{
					auto expr = &((*(_39517_tup2))._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d9d7bce6:;
					if (it != expr_end) {
						jule::Ptr<_1d6677a35_TypeKind> _39625_t2 = *it;
						{
							{
								auto expr = &((*(_39417_tup))._field_Types);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1d9d7c753:;
								if (it != expr_end) {
									jule::Ptr<_1d64eb3d1_TypeDecl> _39729_t = *it;
									{
										(*(_self_))._field_c=_39729_t;
										if (_1d6633eca_annotateConstraint(_self_, &(_39625_t2))) {
											__jule_func_result = true;
											return __jule_func_result;;
										};
									}
									_iter_next_1d9d7c753:;
									++it;
									goto _iter_begin_1d9d7c753;
								}
								_iter_end_1d9d7c753:;
							};
						}
						_iter_next_1d9d7bce6:;
						++it;
						goto _iter_begin_1d9d7bce6;
					}
					_iter_end_1d9d7bce6:;
				};
			}
		}
		_match_end_1d9d7a4ba:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1d6633848_annotateConstraintFn(_1d66327c0_dynamicTypeAnnotation* _self_, jule::Ptr<_1d6677a35_TypeKind>* _40844_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1d9d7c412:;
			{
				jule::Ptr<_1d650d091_FnDecl> _41117_pf = (*((*(_self_))._field_c))._field_Kind.cast_ptr<_1d650d091_FnDecl>(&__jule_any_type14);;
				jule::Ptr<_1d6535173_FnIns> _41217_f = _1d667b473_Fn((*(_40844_k)).ptr());;
				{
					auto expr = &((*(_41217_f))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d9d84a68:;
					if (it != expr_end) {
						jule::I64 _41318_i = it - expr->begin();
						jule::Ptr<_1d65341c7_ParamIns> _41325_fp = *it;
						{
							(*(_self_))._field_c=(*((*(_41117_pf))._field_Params[_41318_i]))._field_Kind;
							if (_1d6633eca_annotateConstraint(_self_, &((*(_41325_fp))._field_Kind))) {
								__jule_func_result = true;
								return __jule_func_result;;
							};
						}
						_iter_next_1d9d84a68:;
						++it;
						_41318_i++;
						goto _iter_begin_1d9d84a68;
					}
					_iter_end_1d9d84a68:;
				};
				if (((*(_41117_pf))._field_Result != nullptr)) {
					(*(_self_))._field_c=(*((*(_41117_pf))._field_Result))._field_Kind;
					if (_1d6633eca_annotateConstraint(_self_, &((*(_41217_f))._field_Result))) {
						__jule_func_result = true;
						return __jule_func_result;;
					};
				};
			}
		}
		_match_end_1d9d7c39b:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1d6633b89_annotateConstraintIdent(_1d66327c0_dynamicTypeAnnotation* _self_, jule::Ptr<_1d6677a35_TypeKind>* _42947_k) {
	jule::Ptr<_1d64eb9db_IdentTypeDecl> _43013_ident = (*((*(_self_))._field_c))._field_Kind.cast_ptr<_1d64eb9db_IdentTypeDecl>(&__jule_any_type20);;
	jule::Ptr<_1d652005e_StructIns> _43113_s = _1d667b709_Struct((*(_42947_k)).ptr());;
	{
		auto expr = &((*((*((*(_self_))._field_f))._field_Decl))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9d884b7:;
		if (it != expr_end) {
			jule::I64 _43213_i = it - expr->begin();
			jule::Ptr<_1d65085db_GenericDecl> _43216_g = *it;
			{
				if (((*(_43216_g))._field_Ident == (*(_43013_ident))._field_Ident)) {
					jule::Ptr<_1d667614e_InsGeneric> _43421_fg = (*((*(_self_))._field_f))._field_Generics[_43213_i];;
					if ((_43421_fg != nullptr)) {
						return false;;
					};
					_1d663433d_pushGeneric(_self_, _42947_k, _43213_i);
					return true;;
				};
				if ((_43113_s == nullptr)) {
					goto _iter_next_1d9d884b7;
				};
				jule::Ptr<_1d64eb3d1_TypeDecl> _44417_c = (*(_self_))._field_c;;
				{
					auto expr = &((*(_43013_ident))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d9d88de1:;
					if (it != expr_end) {
						jule::Ptr<_1d64eb3d1_TypeDecl> _44525_ig = *it;
						{
							(*(_self_))._field_c=_44525_ig;
							{
								auto expr = &((*(_43113_s))._field_Generics);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1d9d8bb4c:;
								if (it != expr_end) {
									jule::Ptr<_1d667614e_InsGeneric> _44729_sg = *it;
									{
										if (_1d6633eca_annotateConstraint(_self_, &((*(_44729_sg))._field_Kind))) {
											return true;;
										};
									}
									_iter_next_1d9d8bb4c:;
									++it;
									goto _iter_begin_1d9d8bb4c;
								}
								_iter_end_1d9d8bb4c:;
							};
						}
						_iter_next_1d9d88de1:;
						++it;
						goto _iter_begin_1d9d88de1;
					}
					_iter_end_1d9d88de1:;
				};
				(*(_self_))._field_c=_44417_c;
			}
			_iter_next_1d9d884b7:;
			++it;
			_43213_i++;
			goto _iter_begin_1d9d884b7;
		}
		_iter_end_1d9d884b7:;
	};
	return false;;
}



inline jule::Bool _1d6633eca_annotateConstraint(_1d66327c0_dynamicTypeAnnotation* _self_, jule::Ptr<_1d6677a35_TypeKind>* _45842_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1d9d8b575:;
			{
				return _1d6633b89_annotateConstraintIdent(_self_, _45842_k);;
			}
		}
		_match_end_1d9d8b50e:;
	};
	{
		
		if ((_1d667ae56_Arr((*(_45842_k)).ptr()) != nullptr)) {
			_case_begin_1d9d8cc5d:;
			{
				return _1d9d8e4e0_annotateConstraintElem(_self_, _45842_k);;
			}
		}
		else if ((_1d667b1dc_Slc((*(_45842_k)).ptr()) != nullptr)) {
			_case_begin_1d9d8ccd5:;
			{
				return _1d9d8e90d_annotateConstraintElem(_self_, _45842_k);;
			}
		}
		else if ((_1d667a6a3_Ptr((*(_45842_k)).ptr()) != nullptr)) {
			_case_begin_1d9d8cd5c:;
			{
				return _1d9d90ed6_annotateConstraintElem(_self_, _45842_k);;
			}
		}
		else if ((_1d667a41c_Sptr((*(_45842_k)).ptr()) != nullptr)) {
			_case_begin_1d9d8cdd4:;
			{
				return _1d9d9753c_annotateConstraintElem(_self_, _45842_k);;
			}
		}
		else if ((_1d667bc26_Map((*(_45842_k)).ptr()) != nullptr)) {
			_case_begin_1d9d8d599:;
			{
				return _1d66331b6_annotateConstraintMap(_self_, _45842_k);;
			}
		}
		else if ((_1d667b473_Fn((*(_45842_k)).ptr()) != nullptr)) {
			_case_begin_1d9d8d621:;
			{
				return _1d6633848_annotateConstraintFn(_self_, _45842_k);;
			}
		}
		else if ((_1d667beac_Tup((*(_45842_k)).ptr()) != nullptr)) {
			_case_begin_1d9d8d698:;
			{
				return _1d6633507_annotateConstraintTup(_self_, _45842_k);;
			}
		}
		else {
			_case_begin_1d9d8d148:;
			{
				return false;;
			}
		}
		_match_end_1d9d8d0e3:;
	};
}



inline void _1d663433d_pushGeneric(_1d66327c0_dynamicTypeAnnotation* _self_, jule::Ptr<_1d6677a35_TypeKind>* _48335_k, jule::I64 _48349_i) {
	(*((*(_self_))._field_f))._field_Generics[_48349_i]=jule::new_ptr<_1d667614e_InsGeneric>(_1d667614e_InsGeneric{._field_Kind=(*(_48335_k)), });
	jule::Ptr<_1d65085db_GenericDecl> _48513_gd = (*((*((*(_self_))._field_f))._field_Decl))._field_Generics[_48349_i];;
	{
		auto expr = &((*(_self_))._field_ignored);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9da0787:;
		if (it != expr_end) {
			jule::Ptr<_1d6677a35_TypeKind> _48621_ignored = *it;
			{
				if (((*(_48513_gd))._field_Ident == _1d6677ded_Str(_48621_ignored.ptr()))) {
					(*(_48621_ignored))._field_Kind=(*((*(_48335_k))))._field_Kind;
				};
			}
			_iter_next_1d9da0787:;
			++it;
			goto _iter_begin_1d9da0787;
		}
		_iter_end_1d9da0787:;
	};
	if ((((*(_48513_gd))._field_Constraint == nullptr) || ((*((*(_48513_gd))._field_Constraint))._field_Mask.len() != 1LL))) {
		return;;
	};
	(*(_self_))._field_c=(*((*(_48513_gd))._field_Constraint))._field_Mask[0LL];
	_1d6633eca_annotateConstraint(_self_, _48335_k);
}



inline jule::Bool _1d663467e_annotatePrim(_1d66327c0_dynamicTypeAnnotation* _self_, jule::Ptr<_1d6677a35_TypeKind>* _49843_k) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1d66366a3_annotateAny(_self_, _49843_k);
	return __jule_func_result;;
}



inline jule::Bool _1d66349c0_annotateArr(_1d66327c0_dynamicTypeAnnotation* _self_, jule::Ptr<_1d6677a35_TypeKind>* _50242_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1d6686e2e_Arr> _50313_parr = _1d667ae56_Arr((*((*(_self_))._field_k)).ptr());;
	if ((_50313_parr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1d6686e2e_Arr> _50713_arr = _1d667ae56_Arr((*(_50242_k)).ptr());;
	(*(_self_))._field_k=(&((*(_50313_parr))._field_Elem));
	__jule_func_result = _1d66369e4_annotateKind(_self_, &((*(_50713_arr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1d6634d11_annotateSlc(_1d66327c0_dynamicTypeAnnotation* _self_, jule::Ptr<_1d6677a35_TypeKind>* _51242_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1d6684b0d_Slc> _51313_pslc = _1d667b1dc_Slc((*((*(_self_))._field_k)).ptr());;
	if ((_51313_pslc == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1d6684b0d_Slc> _51713_slc = _1d667b1dc_Slc((*(_51242_k)).ptr());;
	(*(_self_))._field_k=(&((*(_51313_pslc))._field_Elem));
	__jule_func_result = _1d66369e4_annotateKind(_self_, &((*(_51713_slc))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1d663520c_checkMapKey(_1d66327c0_dynamicTypeAnnotation* _self_, jule::Ptr<_1d6677a35_TypeKind>* _52241_k, jule::Ptr<_1d6677a35_TypeKind>* _52261_ck) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1d6677a35_TypeKind>* _52313_old = (*(_self_))._field_k;;
	(*(_self_))._field_k=_52241_k;
	__jule_func_result=_1d66369e4_annotateKind(_self_, _52261_ck);
	(*(_self_))._field_k=_52313_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1d663554d_annotateMap(_1d66327c0_dynamicTypeAnnotation* _self_, jule::Ptr<_1d6677a35_TypeKind>* _53042_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1d66862a2_Map> _53113_pmap = _1d667bc26_Map((*((*(_self_))._field_k)).ptr());;
	if ((_53113_pmap == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1d66862a2_Map> _53513_m = _1d667bc26_Map((*(_53042_k)).ptr());;
	__jule_func_result = (_1d663520c_checkMapKey(_self_, (&((*(_53113_pmap))._field_Key)), &((*(_53513_m))._field_Key)) && _1d663520c_checkMapKey(_self_, (&((*(_53113_pmap))._field_Val)), &((*(_53513_m))._field_Val)));
	return __jule_func_result;;
}



inline jule::Bool _1d663588e_annotateFn(_1d66327c0_dynamicTypeAnnotation* _self_, jule::Ptr<_1d6677a35_TypeKind>* _54041_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1d6535173_FnIns> _54113_pf = _1d667b473_Fn((*((*(_self_))._field_k)).ptr());;
	if ((_54113_pf == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1d6535173_FnIns> _54513_f = _1d667b473_Fn((*(_54041_k)).ptr());;
	{
		
		if (((*(_54113_pf))._field_Params.len() != (*(_54513_f))._field_Params.len())) {
			_case_begin_1d9dad08b:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_1d65326e2_IsVoid((*(_54113_pf))._field_Decl.ptr()) != _1d65326e2_IsVoid((*(_54513_f))._field_Decl.ptr()))) {
			_case_begin_1d9dad113:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1d9dad025:;
	};
	__jule_func_result=true;
	jule::Ptr<_1d6677a35_TypeKind>* _55413_old = (*(_self_))._field_k;;
	{
		auto expr = &((*(_54513_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9daeec2:;
		if (it != expr_end) {
			jule::I64 _55514_i = it - expr->begin();
			jule::Ptr<_1d65341c7_ParamIns> _55521_fp = *it;
			{
				(*(_self_))._field_k=(&((*((*(_54113_pf))._field_Params[_55514_i]))._field_Kind));
				__jule_func_result=(_1d66369e4_annotateKind(_self_, &((*(_55521_fp))._field_Kind)) && __jule_func_result);
			}
			_iter_next_1d9daeec2:;
			++it;
			_55514_i++;
			goto _iter_begin_1d9daeec2;
		}
		_iter_end_1d9daeec2:;
	};
	if ((!(_1d65326e2_IsVoid((*(_54113_pf))._field_Decl.ptr())))) {
		(*(_self_))._field_k=(&((*(_54113_pf))._field_Result));
		__jule_func_result=(_1d66369e4_annotateKind(_self_, &((*(_54513_f))._field_Result)) && __jule_func_result);
	};
	(*(_self_))._field_k=_55413_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1d6635bd0_annotatePtr(_1d66327c0_dynamicTypeAnnotation* _self_, jule::Ptr<_1d6677a35_TypeKind>* _56942_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1d6687902_Ptr> _57013_pptr = _1d667a6a3_Ptr((*((*(_self_))._field_k)).ptr());;
	if ((_57013_pptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1d6687902_Ptr> _57413_ptr = _1d667a6a3_Ptr((*(_56942_k)).ptr());;
	(*(_self_))._field_k=(&((*(_57013_pptr))._field_Elem));
	__jule_func_result = _1d66369e4_annotateKind(_self_, &((*(_57413_ptr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1d6636021_annotateSptr(_1d66327c0_dynamicTypeAnnotation* _self_, jule::Ptr<_1d6677a35_TypeKind>* _57943_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1d668413a_Sptr> _58013_ssptr = _1d667a41c_Sptr((*((*(_self_))._field_k)).ptr());;
	if ((_58013_ssptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1d668413a_Sptr> _58413_sptr = _1d667a41c_Sptr((*(_57943_k)).ptr());;
	(*(_self_))._field_k=(&((*(_58013_ssptr))._field_Elem));
	__jule_func_result = _1d66369e4_annotateKind(_self_, &((*(_58413_sptr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1d6636362_annotateStruct(_1d66327c0_dynamicTypeAnnotation* _self_, jule::Ptr<_1d6677a35_TypeKind>* _58945_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1d652005e_StructIns> _59013_s = _1d667b709_Struct((*((*(_self_))._field_k)).ptr());;
	if ((_59013_s == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1d652005e_StructIns> _59413_s2 = _1d667b709_Struct((*(_58945_k)).ptr());;
	if (((*(_59013_s))._field_Generics.len() != (*(_59413_s2))._field_Generics.len())) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &((*(_59013_s))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9db9042:;
		if (it != expr_end) {
			jule::I64 _59814_i = it - expr->begin();
			jule::Ptr<_1d667614e_InsGeneric> _59821_g = *it;
			{
				jule::Ptr<_1d667614e_InsGeneric> _59917_g2 = (*(_59413_s2))._field_Generics[_59814_i];;
				if (_1d667823e_Equal((*(_59821_g))._field_Kind, (*(_59917_g2))._field_Kind)) {
					goto _iter_next_1d9db9042;
				};
				(*(_self_))._field_k=(&((*(_59821_g))._field_Kind));
				if ((!(_1d66369e4_annotateKind(_self_, &((*(_59917_g2))._field_Kind))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1d9db9042:;
			++it;
			_59814_i++;
			goto _iter_begin_1d9db9042;
		}
		_iter_end_1d9db9042:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1d66366a3_annotateAny(_1d66327c0_dynamicTypeAnnotation* _self_, jule::Ptr<_1d6677a35_TypeKind>* _61142_k) {
	jule::Bool __jule_func_result = false;
	jule::Str _6129_kind = _1d6677ded_Str((*((*(_self_))._field_k)).ptr());;
	{
		auto expr = &((*((*((*(_self_))._field_f))._field_Decl))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9dbc63e:;
		if (it != expr_end) {
			jule::I64 _61313_i = it - expr->begin();
			jule::Ptr<_1d65085db_GenericDecl> _61316_g = *it;
			{
				if ((_6129_kind != (*(_61316_g))._field_Ident)) {
					goto _iter_next_1d9dbc63e;
				};
				jule::Ptr<_1d667614e_InsGeneric> _61713_t = (*((*(_self_))._field_f))._field_Generics[_61313_i];;
				{
					
					if ((_61713_t == nullptr) || ((*(_61713_t))._field_Kind == nullptr)) {
						_case_begin_1d9dbde6a:;
						{
							_1d663433d_pushGeneric(_self_, _61142_k, _61313_i);
						}
					}
					else if ((!(_1d667823e_Equal((*(_61713_t))._field_Kind, (*(_61142_k)))))) {
						_case_begin_1d9dbdee2:;
						{
							__jule_func_result = false;
							return __jule_func_result;;
						}
					}
					_match_end_1d9dbdd49:;
				};
				(*((*((*(_self_))._field_k))))._field_Kind=(*((*(_61142_k))))._field_Kind;
				__jule_func_result = true;
				return __jule_func_result;;
			}
			_iter_next_1d9dbc63e:;
			++it;
			_61313_i++;
			goto _iter_begin_1d9dbc63e;
		}
		_iter_end_1d9dbc63e:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1d66369e4_annotateKind(_1d66327c0_dynamicTypeAnnotation* _self_, jule::Ptr<_1d6677a35_TypeKind>* _63243_k) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_k == nullptr) || ((*((*(_self_))._field_k)) == nullptr))) {
		return __jule_func_result;;
	};
	{
		
		if (_1d66366a3_annotateAny(_self_, _63243_k)) {
			_case_begin_1d9dc1555:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1d667a186_Prim((*(_63243_k)).ptr()) != nullptr)) {
			_case_begin_1d9dc15cc:;
			{
				__jule_func_result = _1d663467e_annotatePrim(_self_, _63243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1d667ae56_Arr((*(_63243_k)).ptr()) != nullptr)) {
			_case_begin_1d9dc1841:;
			{
				__jule_func_result = _1d66349c0_annotateArr(_self_, _63243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1d667b1dc_Slc((*(_63243_k)).ptr()) != nullptr)) {
			_case_begin_1d9dc18a7:;
			{
				__jule_func_result = _1d6634d11_annotateSlc(_self_, _63243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1d667bc26_Map((*(_63243_k)).ptr()) != nullptr)) {
			_case_begin_1d9dc191d:;
			{
				__jule_func_result = _1d663554d_annotateMap(_self_, _63243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1d667b473_Fn((*(_63243_k)).ptr()) != nullptr)) {
			_case_begin_1d9dc1995:;
			{
				__jule_func_result = _1d663588e_annotateFn(_self_, _63243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1d667a6a3_Ptr((*(_63243_k)).ptr()) != nullptr)) {
			_case_begin_1d9dc1a1c:;
			{
				__jule_func_result = _1d6635bd0_annotatePtr(_self_, _63243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1d667a41c_Sptr((*(_63243_k)).ptr()) != nullptr)) {
			_case_begin_1d9dc1b2c:;
			{
				__jule_func_result = _1d6636021_annotateSptr(_self_, _63243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1d667b709_Struct((*(_63243_k)).ptr()) != nullptr)) {
			_case_begin_1d9dc1b93:;
			{
				__jule_func_result = _1d6636362_annotateStruct(_self_, _63243_k);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1d9dc1434:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1d9dc0e7d:;
	};
}



inline jule::Bool _1d6636c7a_annotate(_1d66327c0_dynamicTypeAnnotation* _self_) {
	jule::Bool __jule_func_result = false;
	(*(_self_))._field_k=(&((*((*(_self_))._field_p))._field_Kind));
	__jule_func_result = _1d66369e4_annotateKind(_self_, &((*((*(_self_))._field_a))._field_Kind));
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1d66327c0_dynamicTypeAnnotation _Src) {
	_Stream << "dynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "k:" << _Src._field_k << ", ";
	_Stream << "c:" << _Src._field_c << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _1d6637bc1_pushErrToken(_1d663762c_fnCallArgChecker* _self_, jule::Ptr<_1d64d5cd3_Token> _67731_token, jule::Str _67746_fmt, jule::Slice<jule::Any> _67759_args) {
	_1d65b88bb_pushErr((*((*(_self_))._field_e))._field_s.ptr(), _67731_token, _67746_fmt, _67759_args);
}



inline void _1d6638034_pushErr(_1d663762c_fnCallArgChecker* _self_, jule::Str _68126_fmt, jule::Slice<jule::Any> _68139_args) {
	_1d6637bc1_pushErrToken(_self_, (*(_self_))._field_errorToken, _68126_fmt, _68139_args);
}



inline jule::Slice<jule::Ptr<_1d65341c7_ParamIns>> _1d66382ba_getParams(_1d663762c_fnCallArgChecker* _self_) {
	if (((((*((*(_self_))._field_f))._field_Params.len() > 0LL) && ((*((*((*(_self_))._field_f))._field_Params[0LL]))._field_Decl != nullptr)) && _1d6530db6_IsSelf((*((*((*(_self_))._field_f))._field_Params[0LL]))._field_Decl.ptr()))) {
		return (*((*(_self_))._field_f))._field_Params.slice(1LL);;
	};
	return (*((*(_self_))._field_f))._field_Params;;
}



inline jule::Bool _1d66385c8_checkCounts(_1d663762c_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1d65341c7_ParamIns>>* _69431_params) {
	jule::Bool __jule_func_result = false;
	jule::I64 _69513_n = (*(_69431_params)).len();;
	if (((_69513_n > 0LL) && _1d6530db6_IsSelf((*((*(_69431_params))[0LL]))._field_Decl.ptr()))) {
		(_69513_n)--;
	};
	jule::I64 _70013_diff = (_69513_n - (*(_self_))._field_args.len());;
	jule::Str _70113_log = jule::Str();;
	{
		
		if ((_70013_diff == 0LL)) {
			_case_begin_1d9dcd4da:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_69513_n > 0LL) && (*((*((*(_69431_params))[(_69513_n - 1LL)]))._field_Decl))._field_Variadic)) {
			_case_begin_1d9dcd3ca:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_70013_diff < 0LL) || (_70013_diff > (*(_69431_params)).len()))) {
			_case_begin_1d9dcd0cd:;
			{
				_70113_log=jule::Str::lit("argument overflow: passed more argument than expected to call @", 63);
			}
		}
		else {
			_case_begin_1d9dcd067:;
			{
				_70113_log=jule::Str::lit("missing arguments to call @", 27);
			}
		}
		_match_end_1d9dcd012:;
	};
	_1e01838bc_StrBuilder _71213_err = static__1e0183b64_New(32LL);;
	_1e018c6ea_WriteStr(&_71213_err, (*((*((*(_self_))._field_f))._field_Decl))._field_Ident);
	_1e018c6ea_WriteStr(&_71213_err, jule::Str::lit("\n       wanted (", 16));
	{
		auto expr = _69431_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9dcb32e:;
		if (it != expr_end) {
			jule::I64 _71513_i = it - expr->begin();
			jule::Ptr<_1d65341c7_ParamIns> *_71516_p = it;
			{
				_1e018c6ea_WriteStr(&_71213_err, _1d6677ded_Str((*((*(_71516_p))))._field_Kind.ptr()));
				if ((((*(_69431_params)).len() - _71513_i) > 1LL)) {
					_1e018c6ea_WriteStr(&_71213_err, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1d9dcb32e:;
			++it;
			_71513_i++;
			goto _iter_begin_1d9dcb32e;
		}
		_iter_end_1d9dcb32e:;
	};
	_1e018c9a3_WriteByte(&_71213_err, ')');
	_1d6638034_pushErr(_self_, _70113_log, jule::Slice<jule::Any>::make({jule::Any(_1e018cee2_Str(&_71213_err), &__jule_any_type4)}));
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1d6638a7e_checkArg(_1d663762c_fnCallArgChecker* _self_, jule::Ptr<_1d65341c7_ParamIns>* _72632_p, jule::Ptr<_1d664721e_Data>* _72651_arg, jule::Ptr<_1d64d5cd3_Token>* _72668_errorToken) {
	jule::Bool __jule_func_result = false;
	if (((*(_self_))._field_dynamicAnnotation && _1d6537450_parameterUsesGenerics(_72632_p, &((*((*((*(_self_))._field_f))._field_Decl))._field_Generics)))) {
		__jule_func_result=((!((*((*((*(_72632_p))))._field_Decl))._field_Variadic)) && _1d6640e71_isGoodValueToInfer(_72651_arg));
		if (__jule_func_result) {
			_1d66327c0_dynamicTypeAnnotation _73121_dta = _1d66327c0_dynamicTypeAnnotation{._field_e=(*(_self_))._field_e, ._field_f=(*(_self_))._field_f, ._field_p=(*(_72632_p)), ._field_a=(*(_72651_arg)), ._field_errorToken=(*(_72668_errorToken)), ._field_ignored=(*(_self_))._field_ignored};;
			__jule_func_result=_1d6636c7a_annotate(&_73121_dta);
		};
		if ((!(__jule_func_result))) {
			_1d6637bc1_pushErrToken(_self_, (*(_72668_errorToken)), jule::Str::lit("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	if (_1d65c5763_checkValidityForInitExpr((*((*(_self_))._field_e))._field_s, (*((*((*(_72632_p))))._field_Decl))._field_Mutable, (*((*((*(_72632_p))))._field_Decl))._field_Reference, &((*((*(_72632_p))))._field_Kind), _72651_arg, _72668_errorToken)) {
		_1d65c13c9_checkAssignType((*((*(_self_))._field_e))._field_s, (*((*((*(_72632_p))))._field_Decl))._field_Reference, &((*((*(_72632_p))))._field_Kind), _72651_arg, (*(_72668_errorToken)));
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1d6638e7a_push(_1d663762c_fnCallArgChecker* _self_, jule::Ptr<_1d65341c7_ParamIns>* _75528_p, jule::Ptr<_1d6500715_Expr> _75546_arg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1d6677a35_TypeKind> _75613_old = (*((*(_self_))._field_e))._field_prefix;;
	jule::Bool _7579_oldImmut = (*((*(_self_))._field_e))._field_immutable;;
	(*((*(_self_))._field_e))._field_immutable=(!((*((*((*(_75528_p))))._field_Decl))._field_Mutable));
	if (((!((*(_self_))._field_dynamicAnnotation)) && (!((*((*((*(_75528_p))))._field_Decl))._field_Variadic)))) {
		(*((*(_self_))._field_e))._field_prefix=(*((*(_75528_p))))._field_Kind;
	} else {
		(*((*(_self_))._field_e))._field_prefix=nullptr;
	};
	jule::Ptr<_1d664721e_Data> _76513_d = _1d6667173_evalExpr((*(_self_))._field_e, _75546_arg);;
	(*((*(_self_))._field_e))._field_prefix=_75613_old;
	(*((*(_self_))._field_e))._field_immutable=_7579_oldImmut;
	if ((_76513_d == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1d6638a7e_checkArg(_self_, _75528_p, &(_76513_d), &((*(_75546_arg))._field_Token));
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push((*(_76513_d))._field_Model); };
	return __jule_func_result;;
}



inline jule::Bool _1d6639376_pushVariadic(_1d663762c_fnCallArgChecker* _self_, jule::Ptr<_1d65341c7_ParamIns>* _77936_p, jule::I64 _77954_i) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Bool _78113_variadiced = false;;
	jule::Bool _7829_more = ((_77954_i + 1LL) < (*(_self_))._field_args.len());;
	jule::Ptr<_1d65268b2_SliceExprModel> _78313_model = jule::new_ptr<_1d65268b2_SliceExprModel>(_1d65268b2_SliceExprModel{._field_ElemKind=(*((*(_77936_p))))._field_Kind, });;
	jule::Ptr<_1d6677a35_TypeKind> _78713_old = (*((*(_self_))._field_e))._field_prefix;;
	jule::Bool _7929_variadic = (*((*((*(_77936_p))))._field_Kind))._field_Variadic;;
	(*((*((*(_77936_p))))._field_Kind))._field_Variadic=false;
	__JULE_DEFER({
		(*((*((*(_77936_p))))._field_Kind))._field_Variadic=_7929_variadic;
	});;
	for (; (_77954_i < (*(_self_))._field_args.len()); (_77954_i)++) {
		{
			jule::Ptr<_1d6500715_Expr> _79917_arg = (*(_self_))._field_args[_77954_i];;
			{
				auto &_match_expr{ (*(_79917_arg))._field_Kind };
				
				if (_match_expr.type == &__jule_any_type75) {
					_case_begin_1d9de270d:;
					{
						(*((*(_self_))._field_e))._field_prefix=jule::new_ptr<_1d6677a35_TypeKind>(_1d6677a35_TypeKind{._field_Kind=jule::Trait<_1d667757e_Kind>(jule::new_ptr<_1d6684b0d_Slc>(_1d6684b0d_Slc{._field_Elem=(*((*(_77936_p))))._field_Kind}), 22)});
					}
				}
				else {
					_case_begin_1d9de2a4e:;
					{
						(*((*(_self_))._field_e))._field_prefix=(*((*(_77936_p))))._field_Kind;
					}
				}
				_match_end_1d9de29e9:;
			};
			jule::Ptr<_1d664721e_Data> _81217_d = _1d66669e1_eval((*(_self_))._field_e, _79917_arg);;
			if ((_81217_d == nullptr)) {
				__jule_func_result=false;
				goto _iter_next_1d9de1201;
			};
			if ((*((*(_81217_d))._field_Kind))._field_Variadic) {
				_78113_variadiced=true;
				(*((*((*(_77936_p))))._field_Kind))._field_Variadic=true;
				__jule_func_result=(__jule_func_result && _1d6638a7e_checkArg(_self_, _77936_p, &(_81217_d), &((*(_79917_arg))._field_Token)));
				{
					auto &_match_expr{ (*(_81217_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type76) {
						_case_begin_1d9de518e:;
						{
							_78313_model=(*(_81217_d))._field_Model.cast_ptr<_1d65268b2_SliceExprModel>(&__jule_any_type76);
							(*(_78313_model))._field_ElemKind=(*((*(_77936_p))))._field_Kind;
						}
					}
					else {
						_case_begin_1d9de624a:;
						{
							_78313_model=nullptr;
							{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push((*(_81217_d))._field_Model); };
						}
					}
					_match_end_1d9de61e5:;
				};
				(_77954_i)++;
				goto _iter_end_1d9de1201;
			};
			__jule_func_result=(__jule_func_result && _1d6638a7e_checkArg(_self_, _77936_p, &(_81217_d), &((*(_79917_arg))._field_Token)));
			{ jule::Slice<jule::Any> &__jule_push_dest = (*(_78313_model))._field_Elems; __jule_push_dest.push((*(_81217_d))._field_Model); };
		}
	_iter_next_1d9de1201:;
	}
	_iter_end_1d9de1201:;;
	(*((*(_self_))._field_e))._field_prefix=_78713_old;
	if ((_78113_variadiced && _7829_more)) {
		_1d6637bc1_pushErrToken(_self_, (*((*(_self_))._field_args[_77954_i]))._field_Token, jule::Str::lit("variadic argument can't use with more argument", 46), jule::Slice<jule::Any>());
	};
	if ((_78313_model != nullptr)) {
		{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push(jule::Any(_78313_model, &__jule_any_type76)); };
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1d66396b7_checkArgs(_1d663762c_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1d65341c7_ParamIns>>* _85533_params) {
	jule::Bool __jule_func_result = false;
	jule::Bool _8569_arg = (*((*(_self_))._field_e))._field_arg;;
	(*((*(_self_))._field_e))._field_arg=true;
	__jule_func_result=true;
	jule::I64 _86013_i = 0LL;;
	if ((((*(_85533_params)).len() > 0LL) && _1d6530db6_IsSelf((*((*(_85533_params))[0LL]))._field_Decl.ptr()))) {
		(_86013_i)++;
	};
	_julec_label_1d9deb53b:;
	while ((_86013_i < (*(_85533_params)).len())) {
		{
			jule::Ptr<_1d65341c7_ParamIns> _86717_p = (*(_85533_params))[_86013_i];;
			{
				
				if ((*((*(_86717_p))._field_Decl))._field_Variadic) {
					_case_begin_1d9ded0cb:;
					{
						__jule_func_result=(_1d6639376_pushVariadic(_self_, &(_86717_p), _86013_i) && __jule_func_result);
						goto _iter_end_1d9deb849;
					}
				}
				else if (((*(_self_))._field_args.len() <= _86013_i)) {
					_case_begin_1d9ded20d:;
					{
						__jule_func_result=false;
						goto _iter_end_1d9deb849;
					}
				}
				else {
					_case_begin_1d9decc35:;
					{
						__jule_func_result=(_1d6638e7a_push(_self_, &(_86717_p), (*(_self_))._field_args[_86013_i]) && __jule_func_result);
					}
				}
				_match_end_1d9decbbe:;
			};
			(_86013_i)++;
		}
	_iter_next_1d9deb849:;
	}
	_iter_end_1d9deb849:;;
	(*((*(_self_))._field_e))._field_arg=_8569_arg;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1d663994d_checkDynamicTypeAnnotation(_1d663762c_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_f))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9e0040d:;
		if (it != expr_end) {
			jule::Ptr<_1d667614e_InsGeneric> _88716_g = *it;
			{
				if ((_88716_g == nullptr)) {
					_1d6638034_pushErr(_self_, jule::Str::lit("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1d9e0040d:;
			++it;
			goto _iter_begin_1d9e0040d;
		}
		_iter_end_1d9e0040d:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1d6639bd4_check(_1d663762c_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	jule::Slice<jule::Ptr<_1d65341c7_ParamIns>> _89713_params = _1d66382ba_getParams(_self_);;
	__jule_func_result=_1d66385c8_checkCounts(_self_, &(_89713_params));
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1d66396b7_checkArgs(_self_, &(_89713_params));
	if ((__jule_func_result && (*(_self_))._field_dynamicAnnotation)) {
		__jule_func_result=_1d663994d_checkDynamicTypeAnnotation(_self_);
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1d663762c_fnCallArgChecker _Src) {
	_Stream << "fnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamicAnnotation:" << _Src._field_dynamicAnnotation << ", ";
	_Stream << "argModels:" << _Src._field_argModels << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _1d663aab4_pushErr(_1d663a564_structLitChecker* _self_, jule::Ptr<_1d64d5cd3_Token> _93526_token, jule::Str _93541_fmt, jule::Slice<jule::Any> _93554_args) {
	_1d6649463_pushErr((*(_self_))._field_e.ptr(), _93526_token, _93541_fmt, _93554_args);
}



inline void _1d663ae27_pushSuggestion(_1d663a564_structLitChecker* _self_, jule::Str _94033_fmt, jule::Slice<jule::Any> _94046_args) {
	_1d66497c6_pushSuggestion((*(_self_))._field_e.ptr(), _94033_fmt, _94046_args);
}



inline void _1d663b345_pushMatch(_1d663a564_structLitChecker* _self_, jule::Ptr<_1d651e4ae_FieldIns>* _94433_f, jule::Ptr<_1d664721e_Data>* _94452_d, jule::Ptr<_1d64d5cd3_Token>* _94467_errorToken) {
	;
	jule::Bool _9509_mutable = ((!((*((*(_self_))._field_e))._field_immutable)) || ((*((*((*(_94433_f))))._field_Decl))._field_Mutable && ((*((*(_self_))._field_s))._field_Methods.len() > 0LL)));;
	if (_1d65c5763_checkValidityForInitExpr((*((*(_self_))._field_e))._field_s, _9509_mutable, false, &((*((*(_94433_f))))._field_Kind), _94452_d, _94467_errorToken)) {
		_1d65c13c9_checkAssignType((*((*(_self_))._field_e))._field_s, false, &((*((*(_94433_f))))._field_Kind), _94452_d, (*(_94467_errorToken)));
	};
	{ jule::Slice<jule::Ptr<_1d6524e10_StructArgExprModel>> &__jule_push_dest = (*(_self_))._field_args; __jule_push_dest.push(jule::new_ptr<_1d6524e10_StructArgExprModel>(_1d6524e10_StructArgExprModel{._field_Token=(*(_94467_errorToken)), ._field_Field=(*(_94433_f)), ._field_Expr=(*(_94452_d))})); };
}



inline void _1d663b6a8_checkPair(_1d663a564_structLitChecker* _self_, jule::Ptr<_1d6504e34_FieldExprPair>* _96333_pair, jule::Slice<jule::Ptr<_1d6500715_Expr>>* _96360_exprs) {
	jule::Ptr<_1d651e4ae_FieldIns> _96513_f = _1d6521417_FindField((*(_self_))._field_s.ptr(), (*((*((*(_96333_pair))))._field_Field))._field_Kind);;
	if ((_96513_f == nullptr)) {
		_1d663aab4_pushErr(_self_, (*((*(_96333_pair))))._field_Field, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_96333_pair))))._field_Field))._field_Kind, &__jule_any_type4)}));
		return;;
	};
	if ((!(_1d65b912a_isAccessibleDefine((*((*(_self_))._field_e))._field_s.ptr(), (*((*(_96513_f))._field_Decl))._field_Public, (*((*(_96513_f))._field_Decl))._field_Token)))) {
		_1d663aab4_pushErr(_self_, (*((*(_96333_pair))))._field_Field, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_96333_pair))))._field_Field))._field_Kind, &__jule_any_type4)}));
		_1d663ae27_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
	};
	_julec_label_1d9e0b590:;
	{
		auto expr = _96360_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9e0c00d:;
		if (it != expr_end) {
			jule::Ptr<_1d6500715_Expr> _97721_expr = *it;
			{
				{
					auto &_match_expr{ (*(_97721_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type77) {
						_case_begin_1d9e0c96a:;
						{
							jule::Ptr<_1d6504e34_FieldExprPair> _98021_dpair = (*(_97721_expr))._field_Kind.cast_ptr<_1d6504e34_FieldExprPair>(&__jule_any_type77);;
							{
								
								if (((*(_96333_pair)) == _98021_dpair)) {
									_case_begin_1d9e0d8d3:;
									{
										goto _iter_end_1d9e0c00d;
									}
								}
								else if (((*((*((*(_96333_pair))))._field_Field))._field_Kind == (*((*(_98021_dpair))._field_Field))._field_Kind)) {
									_case_begin_1d9e0d95a:;
									{
										_1d663aab4_pushErr(_self_, (*((*(_96333_pair))))._field_Field, jule::Str::lit("@ already has expression", 24), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_96333_pair))))._field_Field))._field_Kind, &__jule_any_type4)}));
										goto _iter_end_1d9e0c00d;
									}
								}
								_match_end_1d9e0d828:;
							};
						}
					}
					_match_end_1d9e0c904:;
				};
			}
			_iter_next_1d9e0c00d:;
			++it;
			goto _iter_begin_1d9e0c00d;
		}
		_iter_end_1d9e0c00d:;
	};
	jule::Ptr<_1d6677a35_TypeKind> _99113_prefix = (*((*(_self_))._field_e))._field_prefix;;
	__JULE_DEFER({
		(*((*(_self_))._field_e))._field_prefix=_99113_prefix;
	});;
	(*((*(_self_))._field_e))._field_prefix=(*(_96513_f))._field_Kind;
	jule::Ptr<_1d664721e_Data> _99513_d = _1d6667173_evalExpr((*(_self_))._field_e, (*((*(_96333_pair))))._field_Expr);;
	if ((_99513_d == nullptr)) {
		return;;
	};
	_1d663b345_pushMatch(_self_, &(_96513_f), &(_99513_d), &((*((*(_96333_pair))))._field_Field));
}



inline jule::Bool _1d663b9e9_readyExprs(_1d663a564_structLitChecker* _self_, jule::Slice<jule::Ptr<_1d6500715_Expr>>* _100234_exprs) {
	jule::Bool _100313_ok = true;;
	{
		auto expr = _100234_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9e12c8e:;
		if (it != expr_end) {
			jule::I64 _100414_i = it - expr->begin();
			jule::Ptr<_1d6500715_Expr> _100421_expr = *it;
			{
				{
					auto &_match_expr{ (*(_100421_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type78) {
						_case_begin_1d9e13a09:;
						{
							jule::Ptr<_1d6506540_KeyValPair> _100721_pair = (*(_100421_expr))._field_Kind.cast_ptr<_1d6506540_KeyValPair>(&__jule_any_type78);;
							{
								auto &_match_expr{ (*((*(_100721_pair))._field_Key))._field_Kind };
								
								if (_match_expr.type == &__jule_any_type79) {
									_case_begin_1d9e14840:;
									{
										goto _match_end_1d9e14cd5;
									}
								}
								else {
									_case_begin_1d9e14d3a:;
									{
										_1d663aab4_pushErr(_self_, (*(_100721_pair))._field_Colon, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
										_100313_ok=false;
										goto _iter_next_1d9e12c8e;
									}
								}
								_match_end_1d9e14cd5:;
							};
							(*((*(_100234_exprs))[_100414_i]))._field_Kind=jule::Any(jule::new_ptr<_1d6504e34_FieldExprPair>(_1d6504e34_FieldExprPair{._field_Field=(*((*(_100721_pair))._field_Key))._field_Token, ._field_Expr=(*(_100721_pair))._field_Val}), &__jule_any_type77);
						}
					}
					_match_end_1d9e13993:;
				};
			}
			_iter_next_1d9e12c8e:;
			++it;
			_100414_i++;
			goto _iter_begin_1d9e12c8e;
		}
		_iter_end_1d9e12c8e:;
	};
	return _100313_ok;;
}



inline void _1d663bca2_check(_1d663a564_structLitChecker* _self_, jule::Slice<jule::Ptr<_1d6500715_Expr>>* _102629_exprs) {
	if (((*(_102629_exprs)).len() == 0LL)) {
		return;;
	};
	if ((!(_1d663b9e9_readyExprs(_self_, _102629_exprs)))) {
		return;;
	};
	jule::Bool _103313_paired = false;;
	{
		auto expr = _102629_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9e175ac:;
		if (it != expr_end) {
			jule::I64 _103414_i = it - expr->begin();
			jule::Ptr<_1d6500715_Expr> _103421_expr = *it;
			{
				{
					auto &_match_expr{ (*(_103421_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type77) {
						_case_begin_1d9e1d77d:;
						{
							jule::Ptr<_1d6504e34_FieldExprPair> _103721_pair = (*(_103421_expr))._field_Kind.cast_ptr<_1d6504e34_FieldExprPair>(&__jule_any_type77);;
							if (((_103414_i > 0LL) && (!(_103313_paired)))) {
								_1d663aab4_pushErr(_self_, (*(_103721_pair))._field_Field, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							};
							_103313_paired=true;
							_1d663b6a8_checkPair(_self_, &(_103721_pair), _102629_exprs);
						}
					}
					else {
						_case_begin_1d9e1827d:;
						{
							if (_103313_paired) {
								_1d663aab4_pushErr(_self_, (*(_103421_expr))._field_Token, jule::Str::lit("argument must target to field", 29), jule::Slice<jule::Any>());
							};
							if ((_103414_i >= (*((*(_self_))._field_s))._field_Fields.len())) {
								_1d663aab4_pushErr(_self_, (*(_103421_expr))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>());
								goto _iter_next_1d9e175ac;
							};
							jule::Ptr<_1d651e4ae_FieldIns> _105221_field = (*((*(_self_))._field_s))._field_Fields[_103414_i];;
							if ((!(_1d65b912a_isAccessibleDefine((*((*(_self_))._field_e))._field_s.ptr(), (*((*(_105221_field))._field_Decl))._field_Public, (*((*(_105221_field))._field_Decl))._field_Token)))) {
								_1d663aab4_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("structure cannot instantiating because it has non-public fields", 63), jule::Slice<jule::Any>());
								_1d663ae27_pushSuggestion(_self_, jule::Str::lit("use field:expression pairs to instantiate", 41), jule::Slice<jule::Any>());
								return;;
							};
							jule::Ptr<_1d6677a35_TypeKind> _106021_prefix = (*((*(_self_))._field_e))._field_prefix;;
							__JULE_DEFER({
								(*((*(_self_))._field_e))._field_prefix=_106021_prefix;
							});;
							(*((*(_self_))._field_e))._field_prefix=(*(_105221_field))._field_Kind;
							jule::Ptr<_1d664721e_Data> _106421_d = _1d6667173_evalExpr((*(_self_))._field_e, _103421_expr);;
							if ((_106421_d == nullptr)) {
								goto _iter_next_1d9e175ac;
							};
							_1d663b345_pushMatch(_self_, &(_105221_field), &(_106421_d), &((*(_103421_expr))._field_Token));
						}
					}
					_match_end_1d9e18228:;
				};
			}
			_iter_next_1d9e175ac:;
			++it;
			_103414_i++;
			goto _iter_begin_1d9e175ac;
		}
		_iter_end_1d9e175ac:;
	};
	if ((!(_103313_paired))) {
		jule::I64 _107513_n = (*((*(_self_))._field_s))._field_Fields.len();;
		jule::I64 _107617_diff = (_107513_n - (*(_102629_exprs)).len());;
		{
			
			if ((_107617_diff <= 0LL)) {
				_case_begin_1d9e21374:;
				{
					return;;
				}
			}
			_match_end_1d9e21253:;
		};
		_1e01838bc_StrBuilder _108217_idents = static__1e0183b64_New(32LL);;
		for (; (_107617_diff > 0LL); (_107617_diff)--) {
			{
				_1e018c6ea_WriteStr(&_108217_idents, jule::Str::lit(", ", 2));
				_1e018c6ea_WriteStr(&_108217_idents, (*((*((*((*(_self_))._field_s))._field_Fields[(_107513_n - _107617_diff)]))._field_Decl))._field_Ident);
			}
		_iter_next_1d9e21ae4:;
		}
		_iter_end_1d9e21ae4:;;
		_1d663aab4_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(static_cast<jule::Str>(_1e018d993_Buf(&_108217_idents).slice(2LL)), &__jule_any_type4)}));
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1d663a564_structLitChecker _Src) {
	_Stream << "structLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1d65d9018_Var> _1d663c830_buildVar(_1d663c346_rangeChecker* _self_, jule::Ptr<_1d650e24b_VarDecl>* _110228_decl) {
	jule::Ptr<_1d65d9018_Var> _110313_v = _1d653d7ca_buildVar((*(_110228_decl)));;
	return _110313_v;;
}



inline void _1d663ca2d_setSizeKey(_1d663c346_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyA == nullptr) || _1d64d8742_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyA))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyA=_1d663c830_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyA));
	(*((*((*(_self_))._field_Kind))._field_KeyA))._field_Kind=(*(_1d675d4bc_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	{
		auto &_match_expr{ (*((*(_self_))._field_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1d9e26566:;
			{
				(*((*((*(_self_))._field_Kind))._field_KeyA))._field_IterRelation=jule::new_ptr<_1d65d7d5d_IterRelation>(_1d65d7d5d_IterRelation{._field_Range=(*((*(_self_))._field_d))._field_Model.cast_ptr<_1d65d9018_Var>(&__jule_any_type8)});
			}
		}
		_match_end_1d9e26500:;
	};
}



inline void _1d663ce4b_checkRangeExprValidity(_1d663c346_rangeChecker* _self_, jule::Ptr<_1d664721e_Data>* _112946_d, jule::Ptr<_1d65d9018_Var>* _112957_key, jule::Ptr<_1d6677a35_TypeKind>* _112973_k) {
	jule::Bool _113013__mut = (*((*(_112957_key))))._field_Mutable;;
	if ((_113013__mut && (!(_1d66793b6_Mutable((*(_112973_k)).ptr()))))) {
		_113013__mut=false;
	};
	_1d65c5763_checkValidityForInitExpr((*((*(_self_))._field_sc))._field_s, _113013__mut, (*((*(_112957_key))))._field_Reference, &((*((*((*(_112957_key))))._field_Kind))._field_Kind), _112946_d, &((*((*(_self_))._field_rang))._field_InToken));
}



inline void _1d663d149_checkSlice(_1d663c346_rangeChecker* _self_) {
	_1d663ca2d_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1d64d8742_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1d6684b0d_Slc> _114813_slc = _1d667b1dc_Slc((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1d663c830_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyB));
	(*((*((*(_self_))._field_Kind))._field_KeyB))._field_Kind=jule::new_ptr<_1d667ec07_TypeSymbol>(_1d667ec07_TypeSymbol{._field_Kind=(*(_114813_slc))._field_Elem});
	_1d663ce4b_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*((*(_self_))._field_Kind))._field_KeyB), &((*(_114813_slc))._field_Elem));
}



inline void _1d663d347_checkArray(_1d663c346_rangeChecker* _self_) {
	_1d663ca2d_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1d64d8742_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1d6686e2e_Arr> _116113_arr = _1d667ae56_Arr((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1d663c830_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyB));
	(*((*((*(_self_))._field_Kind))._field_KeyB))._field_Kind=jule::new_ptr<_1d667ec07_TypeSymbol>(_1d667ec07_TypeSymbol{._field_Kind=(*(_116113_arr))._field_Elem});
	_1d663ce4b_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*((*(_self_))._field_Kind))._field_KeyB), &((*(_116113_arr))._field_Elem));
}



inline void _1d663d545_checkMapKeyA(_1d663c346_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyA == nullptr) || _1d64d8742_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyA))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1d66862a2_Map> _117313_m = _1d667bc26_Map((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyA=_1d663c830_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyA));
	(*((*((*(_self_))._field_Kind))._field_KeyA))._field_Kind=jule::new_ptr<_1d667ec07_TypeSymbol>(_1d667ec07_TypeSymbol{._field_Kind=(*(_117313_m))._field_Key});
	jule::Ptr<_1d664721e_Data> _117713_d = jule::new_ptr<_1d664721e_Data>((*((*(_self_))._field_d)));;
	(*(_117713_d))._field_Kind=(*(_117313_m))._field_Key;
	_1d663ce4b_checkRangeExprValidity(_self_, &(_117713_d), &((*((*(_self_))._field_Kind))._field_KeyA), &((*(_117313_m))._field_Key));
}



inline void _1d663d743_checkMapKeyB(_1d663c346_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1d64d8742_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1d66862a2_Map> _118813_m = _1d667bc26_Map((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1d663c830_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyB));
	(*((*((*(_self_))._field_Kind))._field_KeyB))._field_Kind=jule::new_ptr<_1d667ec07_TypeSymbol>(_1d667ec07_TypeSymbol{._field_Kind=(*(_118813_m))._field_Val});
	jule::Ptr<_1d664721e_Data> _119213_d = jule::new_ptr<_1d664721e_Data>((*((*(_self_))._field_d)));;
	(*(_119213_d))._field_Kind=(*(_118813_m))._field_Val;
	_1d663ce4b_checkRangeExprValidity(_self_, &(_119213_d), &((*((*(_self_))._field_Kind))._field_KeyB), &((*(_118813_m))._field_Val));
}



inline void _1d663d941_checkMap(_1d663c346_rangeChecker* _self_) {
	_1d663d545_checkMapKeyA(_self_);
	_1d663d743_checkMapKeyB(_self_);
}



inline void _1d663db3e_checkStr(_1d663c346_rangeChecker* _self_) {
	_1d663ca2d_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1d64d8742_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyB=_1d663c830_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyB));
	(*((*((*(_self_))._field_Kind))._field_KeyB))._field_Kind=(*(_1d675d4bc_findBuiltinTypeAlias(jule::Str::lit("u8", 2))))._field_Kind;
}



inline void _1d663dd3c_checkComptime(_1d663c346_rangeChecker* _self_) {
	_1d663ca2d_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyA != nullptr) && (*((*((*(_self_))._field_rang))._field_KeyA))._field_Mutable)) {
		_1d65b88bb_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*((*(_self_))._field_rang))._field_KeyA))._field_Token, jule::Str::lit("define @ cannot be mutable", 26), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_self_))._field_rang))._field_KeyA))._field_Ident, &__jule_any_type4)}));
	};
	if ((((*((*(_self_))._field_rang))._field_KeyB != nullptr) && (*((*((*(_self_))._field_rang))._field_KeyB))._field_Mutable)) {
		_1d65b88bb_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*((*(_self_))._field_rang))._field_KeyB))._field_Token, jule::Str::lit("define @ cannot be mutable", 26), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident, &__jule_any_type4)}));
	};
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1d64d8742_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyB=_1d663c830_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyB));
}



inline jule::Bool _1d663e0c3_checkComptimeRange(_1d663c346_rangeChecker* _self_) {
	jule::Ptr<_1d654c5b9_comptimeRange> _122713_range = _1d667d530_comptimeRange((*((*(_self_))._field_d))._field_Kind.ptr());;
	{
		auto &_match_expr{ (*(_122713_range))._field_kind };
		
		if (_match_expr.type_is(true, 0) || _match_expr.type_is(true, 2) || _match_expr.type_is(true, 3) || _match_expr.type_is(true, 4) || _match_expr.type_is(true, 1) || _match_expr.type_is(true, 5)) {
			_case_begin_1d9e4385d:;
			{
				_1d663dd3c_checkComptime(_self_);
				return true;;
			}
		}
		else {
			_case_begin_1d9e44353:;
			{
				_1d65b88bb_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*(_self_))._field_rang))._field_InToken, jule::Str::lit("range iterations must be have enumerable expression", 51), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1d9e442ed:;
	};
}



inline jule::Bool _1d663e359_check(_1d663c346_rangeChecker* _self_) {
	{
		
		if ((*((*((*(_self_))._field_d))._field_Kind))._field_Variadic) {
			_case_begin_1d9e47345:;
		}
		else if ((_1d667b1dc_Slc((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d9e46355:;
			{
				_1d663d149_checkSlice(_self_);
				return true;;
			}
		}
		else if ((_1d667ae56_Arr((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d9e463bb:;
			{
				_1d663d347_checkArray(_self_);
				return true;;
			}
		}
		else if ((_1d667bc26_Map((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d9e46432:;
			{
				_1d663d941_checkMap(_self_);
				return true;;
			}
		}
		else if ((_1d667d530_comptimeRange((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d9e46498:;
			{
				return _1d663e0c3_checkComptimeRange(_self_);;
			}
		}
		else {
			_case_begin_1d9e45ab3:;
			{
				jule::Ptr<_1d668060e_Prim> _125913_prim = _1d667a186_Prim((*((*(_self_))._field_d))._field_Kind.ptr());;
				if (((_125913_prim != nullptr) && _1d6683a96_IsStr(_125913_prim.ptr()))) {
					_1d663db3e_checkStr(_self_);
					return true;;
				};
			}
		}
		_match_end_1d9e4583d:;
	};
	_1d65b88bb_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*(_self_))._field_rang))._field_InToken, jule::Str::lit("range iterations must be have enumerable expression", 51), jule::Slice<jule::Any>());
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1d663c346_rangeChecker _Src) {
	_Stream << "rangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline void _1d663eec5_prepareTypes(_1d663eaa7_retTypeChecker* _self_) {
	if (((*(_self_))._field_f != nullptr)) {
		(*(_self_))._field_types=_1d6536372_Types((*(_self_))._field_f.ptr());
	};
}



inline void _1d664027d_prepareExprs(_1d663eaa7_retTypeChecker* _self_, jule::Ptr<_1d6500715_Expr>* _128736_e) {
	if (((*(_128736_e)) == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_128736_e))))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1d9e4cca7:;
			{
				(*(_self_))._field_exprs=(*((*((*(_128736_e))))._field_Kind.cast_ptr<_1d65013d6_TupleExpr>(&__jule_any_type80)))._field_Expr;
			}
		}
		else {
			_case_begin_1d9e4cec7:;
			{
				{ jule::Slice<jule::Ptr<_1d6500715_Expr>> &__jule_push_dest = (*(_self_))._field_exprs; __jule_push_dest.push((*(_128736_e))); };
			}
		}
		_match_end_1d9e4ce72:;
	};
}



inline void _1d664047b_checkExprs(_1d663eaa7_retTypeChecker* _self_) {
	if (((*(_self_))._field_exprs.len() == 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1d664721e_Data>> _130313_datas = jule::Slice<jule::Ptr<_1d664721e_Data>>::alloc(0LL, (*(_self_))._field_exprs.len());;
	jule::Ptr<_1d6648e13_Eval> _130413_eval = _1d65c0d68_eval((*((*(_self_))._field_sc))._field_s, jule::Trait<_1d669756b_Lookup>((*(_self_))._field_sc, 0));;
	{
		auto expr = &((*(_self_))._field_exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9e4d12b:;
		if (it != expr_end) {
			jule::I64 _130514_i = it - expr->begin();
			jule::Ptr<_1d6500715_Expr> _130521_expr = *it;
			{
				if ((_130514_i >= (*(_self_))._field_types.len())) {
					goto _iter_end_1d9e4d12b;
				};
				jule::Ptr<_1d6677a35_TypeKind> _131017_t = (*(_self_))._field_types[_130514_i];;
				(*(_130413_eval))._field_prefix=_131017_t;
				jule::Ptr<_1d664721e_Data> _131317_d = _1d6667173_evalExpr(_130413_eval, _130521_expr);;
				if ((_131317_d == nullptr)) {
					goto _iter_next_1d9e4d12b;
				};
				{ jule::Slice<jule::Ptr<_1d664721e_Data>> &__jule_push_dest = _130313_datas; __jule_push_dest.push(_131317_d); };
				if (((!((*(_131317_d))._field_Mutable)) && _1d66793b6_Mutable((*(_131317_d))._field_Kind.ptr()))) {
					_1d65b88bb_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("mutable typed return expressions should be mutable", 50), jule::Slice<jule::Any>());
					return;;
				};
				_1d6630dea_assignTypeChecker _132517_ac = _1d6630dea_assignTypeChecker{._field_s=(*((*(_self_))._field_sc))._field_s, ._field_dest=_131017_t, ._field_d=_131317_d, ._field_errorToken=(*(_self_))._field_errorToken};;
				_1d6631db8_check(&_132517_ac);
			}
			_iter_next_1d9e4d12b:;
			++it;
			_130514_i++;
			goto _iter_begin_1d9e4d12b;
		}
		_iter_end_1d9e4d12b:;
	};
	if ((_130313_datas.len() > 1LL)) {
		(*(_self_))._field_model=jule::Any(jule::new_ptr<_1d6529c06_TupleExprModel>(_1d6529c06_TupleExprModel{._field_Datas=_130313_datas}), &__jule_any_type81);
	} else if ((_130313_datas.len() == 1LL)) {
		(*(_self_))._field_model=(*(_130313_datas[0LL]))._field_Model;
	};
}



inline jule::Bool _1d66407bc_check(_1d663eaa7_retTypeChecker* _self_, jule::Ptr<_1d6500715_Expr>* _134429_e) {
	_1d663eec5_prepareTypes(_self_);
	_1d664027d_prepareExprs(_self_, _134429_e);
	jule::I64 _13489_n = (*(_self_))._field_exprs.len();;
	if (((_13489_n == 0LL) && ((*(_self_))._field_types.len() > 0LL))) {
		if ((!(_1d65334b2_AnyVar((*((*(_self_))._field_f))._field_Decl.ptr())))) {
			_1d65b88bb_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("return statements of non-void functions should have return expression", 69), jule::Slice<jule::Any>());
			return false;;
		};
		return true;;
	};
	if ((((_13489_n > 0LL) && ((*(_self_))._field_f != nullptr)) && _1d65326e2_IsVoid((*((*(_self_))._field_f))._field_Decl.ptr()))) {
		_1d65b88bb_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("void functions is cannot returns any value", 42), jule::Slice<jule::Any>());
		return false;;
	};
	if ((_13489_n > (*(_self_))._field_types.len())) {
		_1d65b88bb_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("overflow return expressions", 27), jule::Slice<jule::Any>());
	} else if ((_13489_n < (*(_self_))._field_types.len())) {
		_1d65b88bb_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("missing return expressions for multi-return", 43), jule::Slice<jule::Any>());
	};
	_1d664047b_checkExprs(_self_);
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _1d663eaa7_retTypeChecker _Src) {
	_Stream << "retTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1d659590e_ImportInfo> _1d664235c_SelectPackage(_1d6641d73_SymbolTable* _self_, jule::Fn<jule::Bool(jule::Ptr<_1d659590e_ImportInfo>)> _2732_selector) {
	if ((_2732_selector == nullptr)) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9e5c679:;
		if (it != expr_end) {
			jule::Ptr<_1d659590e_ImportInfo> _3121_pkg = *it;
			{
				if (_2732_selector(_3121_pkg)) {
					return _3121_pkg;;
				};
			}
			_iter_next_1d9e5c679:;
			++it;
			goto _iter_begin_1d9e5c679;
		}
		_iter_end_1d9e5c679:;
	};
	return nullptr;;
}



inline jule::Ptr<_1d65d9018_Var> _1d6642758_FindVar(_1d6641d73_SymbolTable* _self_, jule::Str _4126_ident, jule::Bool _4138_binded) {
	return _1d664453a_findVar(_self_, &(_4126_ident), _4138_binded, false);;
}



inline jule::Ptr<_1d6676c43_TypeAlias> _1d6642b54_FindTypeAlias(_1d6641d73_SymbolTable* _self_, jule::Str _4732_ident, jule::Bool _4744_binded) {
	return _1d66449e1_findTypeAlias(_self_, &(_4732_ident), _4744_binded, false);;
}



inline jule::Ptr<_1d651c2d1_Struct> _1d6643050_FindStruct(_1d6641d73_SymbolTable* _self_, jule::Str _5329_ident, jule::Bool _5341_binded) {
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9e5eb76:;
		if (it != expr_end) {
			jule::Ptr<_1d651c2d1_Struct> _5421_s = *it;
			{
				if ((((*(_5421_s))._field_Ident == _5329_ident) && ((*(_5421_s))._field_Binded == _5341_binded))) {
					return _5421_s;;
				};
			}
			_iter_next_1d9e5eb76:;
			++it;
			goto _iter_begin_1d9e5eb76;
		}
		_iter_end_1d9e5eb76:;
	};
	return nullptr;;
}



inline jule::Ptr<_1d653226e_Fn> _1d664344b_FindFn(_1d6641d73_SymbolTable* _self_, jule::Str _6425_ident, jule::Bool _6437_binded) {
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9e6120a:;
		if (it != expr_end) {
			jule::Ptr<_1d653226e_Fn> _6521_f = *it;
			{
				if ((((*(_6521_f))._field_Ident == _6425_ident) && ((*(_6521_f))._field_Binded == _6437_binded))) {
					return _6521_f;;
				};
			}
			_iter_next_1d9e6120a:;
			++it;
			goto _iter_begin_1d9e6120a;
		}
		_iter_end_1d9e6120a:;
	};
	return nullptr;;
}



inline jule::Ptr<_1d654554b_Trait> _1d664378c_FindTrait(_1d6641d73_SymbolTable* _self_, jule::Str _7528_ident) {
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9e6255d:;
		if (it != expr_end) {
			jule::Ptr<_1d654554b_Trait> _7621_t = *it;
			{
				if (((*(_7621_t))._field_Ident == _7528_ident)) {
					return _7621_t;;
				};
			}
			_iter_next_1d9e6255d:;
			++it;
			goto _iter_begin_1d9e6255d;
		}
		_iter_end_1d9e6255d:;
	};
	return nullptr;;
}



inline jule::Ptr<_1d6547c57_Enum> _1d6643acd_FindEnum(_1d6641d73_SymbolTable* _self_, jule::Str _8627_ident) {
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9e63570:;
		if (it != expr_end) {
			jule::Ptr<_1d6547c57_Enum> _8721_e = *it;
			{
				if (((*(_8721_e))._field_Ident == _8627_ident)) {
					return _8721_e;;
				};
			}
			_iter_next_1d9e63570:;
			++it;
			goto _iter_begin_1d9e63570;
		}
		_iter_end_1d9e63570:;
	};
	return nullptr;;
}



inline jule::Ptr<_1d6549462_TypeEnum> _1d6643e1e_FindTypeEnum(_1d6641d73_SymbolTable* _self_, jule::Str _9731_ident) {
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9e64571:;
		if (it != expr_end) {
			jule::Ptr<_1d6549462_TypeEnum> _9821_e = *it;
			{
				if (((*(_9821_e))._field_Ident == _9731_ident)) {
					return _9821_e;;
				};
			}
			_iter_next_1d9e64571:;
			++it;
			goto _iter_begin_1d9e64571;
		}
		_iter_end_1d9e64571:;
	};
	return nullptr;;
}



inline jule::Ptr<_1d65d9018_Var> _1d664453a_findVar(_1d6641d73_SymbolTable* _self_, jule::Str* _10827_ident, jule::Bool _10839_binded, jule::Bool _10853_reverse) {
	if (_10853_reverse) {
		jule::I64 _11017_i = ((*(_self_))._field_Vars.len() - 1LL);;
		for (; (_11017_i >= 0LL); (_11017_i)--) {
			{
				jule::Ptr<_1d65d9018_Var> _11221_v = (*(_self_))._field_Vars[_11017_i];;
				if ((((*(_11221_v))._field_Ident == (*(_10827_ident))) && ((*(_11221_v))._field_Binded == _10839_binded))) {
					return _11221_v;;
				};
			}
		_iter_next_1d9e65e57:;
		}
		_iter_end_1d9e65e57:;;
	} else {
		{
			auto expr = &((*(_self_))._field_Vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1d9e67860:;
			if (it != expr_end) {
				jule::Ptr<_1d65d9018_Var> _11825_v = *it;
				{
					if ((((*(_11825_v))._field_Ident == (*(_10827_ident))) && ((*(_11825_v))._field_Binded == _10839_binded))) {
						return _11825_v;;
					};
				}
				_iter_next_1d9e67860:;
				++it;
				goto _iter_begin_1d9e67860;
			}
			_iter_end_1d9e67860:;
		};
	};
	return nullptr;;
}



inline jule::Ptr<_1d6676c43_TypeAlias> _1d66449e1_findTypeAlias(_1d6641d73_SymbolTable* _self_, jule::Str* _12733_ident, jule::Bool _12745_binded, jule::Bool _12759_reverse) {
	if (_12759_reverse) {
		jule::I64 _12917_i = ((*(_self_))._field_TypeAliases.len() - 1LL);;
		for (; (_12917_i >= 0LL); (_12917_i)--) {
			{
				jule::Ptr<_1d6676c43_TypeAlias> _13121_ta = (*(_self_))._field_TypeAliases[_12917_i];;
				if ((((*(_13121_ta))._field_Ident == (*(_12733_ident))) && ((*(_13121_ta))._field_Binded == _12745_binded))) {
					return _13121_ta;;
				};
			}
		_iter_next_1d9e69323:;
		}
		_iter_end_1d9e69323:;;
	} else {
		{
			auto expr = &((*(_self_))._field_TypeAliases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1d9e6ac2b:;
			if (it != expr_end) {
				jule::Ptr<_1d6676c43_TypeAlias> _13725_ta = *it;
				{
					if ((((*(_13725_ta))._field_Ident == (*(_12733_ident))) && ((*(_13725_ta))._field_Binded == _12745_binded))) {
						return _13725_ta;;
					};
				}
				_iter_next_1d9e6ac2b:;
				++it;
				goto _iter_begin_1d9e6ac2b;
			}
			_iter_end_1d9e6ac2b:;
		};
	};
	return nullptr;;
}



inline jule::Any _1d6644ddc_defByIdent(_1d6641d73_SymbolTable* _self_, jule::Str* _14830_ident, jule::Bool _14842_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9e6c029:;
		if (it != expr_end) {
			jule::Ptr<_1d65d9018_Var> _14921_v = *it;
			{
				if ((((*(_14921_v))._field_Ident == (*(_14830_ident))) && ((*(_14921_v))._field_Binded == _14842_binded))) {
					return jule::Any(_14921_v, &__jule_any_type8);;
				};
			}
			_iter_next_1d9e6c029:;
			++it;
			goto _iter_begin_1d9e6c029;
		}
		_iter_end_1d9e6c029:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9e6c38c:;
		if (it != expr_end) {
			jule::Ptr<_1d6676c43_TypeAlias> _15521_ta = *it;
			{
				if ((((*(_15521_ta))._field_Ident == (*(_14830_ident))) && ((*(_15521_ta))._field_Binded == _14842_binded))) {
					return jule::Any(_15521_ta, &__jule_any_type66);;
				};
			}
			_iter_next_1d9e6c38c:;
			++it;
			goto _iter_begin_1d9e6c38c;
		}
		_iter_end_1d9e6c38c:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9e6d316:;
		if (it != expr_end) {
			jule::Ptr<_1d651c2d1_Struct> _16121_s = *it;
			{
				if ((((*(_16121_s))._field_Ident == (*(_14830_ident))) && ((*(_16121_s))._field_Binded == _14842_binded))) {
					return jule::Any(_16121_s, &__jule_any_type65);;
				};
			}
			_iter_next_1d9e6d316:;
			++it;
			goto _iter_begin_1d9e6d316;
		}
		_iter_end_1d9e6d316:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9e6e290:;
		if (it != expr_end) {
			jule::Ptr<_1d653226e_Fn> _16721_f = *it;
			{
				if ((((*(_16721_f))._field_Ident == (*(_14830_ident))) && ((*(_16721_f))._field_Binded == _14842_binded))) {
					return jule::Any(_16721_f, &__jule_any_type64);;
				};
			}
			_iter_next_1d9e6e290:;
			++it;
			goto _iter_begin_1d9e6e290;
		}
		_iter_end_1d9e6e290:;
	};
	if (_14842_binded) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9e702b3:;
		if (it != expr_end) {
			jule::Ptr<_1d654554b_Trait> _17721_t = *it;
			{
				if (((*(_17721_t))._field_Ident == (*(_14830_ident)))) {
					return jule::Any(_17721_t, &__jule_any_type10);;
				};
			}
			_iter_next_1d9e702b3:;
			++it;
			goto _iter_begin_1d9e702b3;
		}
		_iter_end_1d9e702b3:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9e71a56:;
		if (it != expr_end) {
			jule::Ptr<_1d6547c57_Enum> _18321_e = *it;
			{
				if (((*(_18321_e))._field_Ident == (*(_14830_ident)))) {
					return jule::Any(_18321_e, &__jule_any_type67);;
				};
			}
			_iter_next_1d9e71a56:;
			++it;
			goto _iter_begin_1d9e71a56;
		}
		_iter_end_1d9e71a56:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9e723a3:;
		if (it != expr_end) {
			jule::Ptr<_1d6549462_TypeEnum> _18921_te = *it;
			{
				if (((*(_18921_te))._field_Ident == (*(_14830_ident)))) {
					return jule::Any(_18921_te, &__jule_any_type68);;
				};
			}
			_iter_next_1d9e723a3:;
			++it;
			goto _iter_begin_1d9e723a3;
		}
		_iter_end_1d9e723a3:;
	};
	return nullptr;;
}



inline jule::Bool _1d6645393_isDuplicatedIdent(_1d6641d73_SymbolTable* _self_, jule::Uintptr _20132_itself, jule::Str* _20150_ident, jule::Bool _20162_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9e7386b:;
		if (it != expr_end) {
			jule::Ptr<_1d65d9018_Var> *_20216_v = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_20216_v))) != _20132_itself) && ((*((*(_20216_v))))._field_Ident == (*(_20150_ident)))) && ((*((*(_20216_v))))._field_Binded == _20162_binded))) {
					return true;;
				};
			}
			_iter_next_1d9e7386b:;
			++it;
			goto _iter_begin_1d9e7386b;
		}
		_iter_end_1d9e7386b:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9e73bce:;
		if (it != expr_end) {
			jule::Ptr<_1d6676c43_TypeAlias> *_20816_ta = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_20816_ta))) != _20132_itself) && ((*((*(_20816_ta))))._field_Ident == (*(_20150_ident)))) && ((*((*(_20816_ta))))._field_Binded == _20162_binded))) {
					return true;;
				};
			}
			_iter_next_1d9e73bce:;
			++it;
			goto _iter_begin_1d9e73bce;
		}
		_iter_end_1d9e73bce:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9e74dcd:;
		if (it != expr_end) {
			jule::Ptr<_1d651c2d1_Struct> *_21416_s = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_21416_s))) != _20132_itself) && ((*((*(_21416_s))))._field_Ident == (*(_20150_ident)))) && ((*((*(_21416_s))))._field_Binded == _20162_binded))) {
					return true;;
				};
			}
			_iter_next_1d9e74dcd:;
			++it;
			goto _iter_begin_1d9e74dcd;
		}
		_iter_end_1d9e74dcd:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9e760cc:;
		if (it != expr_end) {
			jule::Ptr<_1d653226e_Fn> *_22016_f = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_22016_f))) != _20132_itself) && ((*((*(_22016_f))))._field_Ident == (*(_20150_ident)))) && ((*((*(_22016_f))))._field_Binded == _20162_binded))) {
					return true;;
				};
			}
			_iter_next_1d9e760cc:;
			++it;
			goto _iter_begin_1d9e760cc;
		}
		_iter_end_1d9e760cc:;
	};
	if (_20162_binded) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9e77375:;
		if (it != expr_end) {
			jule::Ptr<_1d654554b_Trait> *_23016_t = it;
			{
				if (((static_cast<jule::Uintptr>((*(_23016_t))) != _20132_itself) && ((*((*(_23016_t))))._field_Ident == (*(_20150_ident))))) {
					return true;;
				};
			}
			_iter_next_1d9e77375:;
			++it;
			goto _iter_begin_1d9e77375;
		}
		_iter_end_1d9e77375:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9e7850d:;
		if (it != expr_end) {
			jule::Ptr<_1d6547c57_Enum> *_23616_e = it;
			{
				if (((static_cast<jule::Uintptr>((*(_23616_e))) != _20132_itself) && ((*((*(_23616_e))))._field_Ident == (*(_20150_ident))))) {
					return true;;
				};
			}
			_iter_next_1d9e7850d:;
			++it;
			goto _iter_begin_1d9e7850d;
		}
		_iter_end_1d9e7850d:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9e79498:;
		if (it != expr_end) {
			jule::Ptr<_1d6549462_TypeEnum> *_24216_te = it;
			{
				if (((static_cast<jule::Uintptr>((*(_24216_te))) != _20132_itself) && ((*((*(_24216_te))))._field_Ident == (*(_20150_ident))))) {
					return true;;
				};
			}
			_iter_next_1d9e79498:;
			++it;
			goto _iter_begin_1d9e79498;
		}
		_iter_end_1d9e79498:;
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1d6641d73_SymbolTable _Src) {
	_Stream << "SymbolTable{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Imports:" << _Src._field_Imports << ", ";
	_Stream << "Vars:" << _Src._field_Vars << ", ";
	_Stream << "TypeAliases:" << _Src._field_TypeAliases << ", ";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Funcs:" << _Src._field_Funcs << ", ";
	_Stream << "Traits:" << _Src._field_Traits << ", ";
	_Stream << "Enums:" << _Src._field_Enums << ", ";
	_Stream << "TypeEnums:" << _Src._field_TypeEnums << ", ";
	_Stream << "Impls:" << _Src._field_Impls;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d66475c6_IsNil(_1d664721e_Data* _self_) {
	return _1d6678b13_IsNil((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _1d664785c_IsVoid(_1d664721e_Data* _self_) {
	return _1d6678d99_Void((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _1d6647ae3_IsConst(_1d664721e_Data* _self_) {
	return ((*(_self_))._field_Constant != nullptr);;
}



inline jule::Bool _1d6647e34_GoodOperand(_1d664721e_Data* _self_, jule::Ptr<_1d664721e_Data>* _10531_other) {
	if ((_1d667abc0_TypeEnum((*((*(_10531_other))))._field_Kind.ptr()) != nullptr)) {
		return false;;
	};
	return ((((_1d667a186_Prim((*((*(_10531_other))))._field_Kind.ptr()) == nullptr) || (!(_1d6683d2c_IsAny(_1d667a186_Prim((*((*(_10531_other))))._field_Kind.ptr()).ptr())))) && (_1d667b990_Trait((*((*(_10531_other))))._field_Kind.ptr()) == nullptr)) && (!(_1d6678b13_IsNil((*(_self_))._field_Kind.ptr()))));;
}





std::ostream &operator<<(std::ostream &_Stream, _1d664721e_Data _Src) {
	_Stream << "Data{";
	_Stream << "untyped:" << _Src._field_untyped << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Lvalue:" << _Src._field_Lvalue << ", ";
	_Stream << "IsRune:" << _Src._field_IsRune << ", ";
	_Stream << "Model:" << _Src._field_Model << ", ";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Constant:" << _Src._field_Constant;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d6648363_Value _Src) {
	_Stream << "Value{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}



inline void _1d6649463_pushErr(_1d6648e13_Eval* _self_, jule::Ptr<_1d64d5cd3_Token> _13626_token, jule::Str _13641_fmt, jule::Slice<jule::Any> _13654_args) {
	_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), _13626_token, _13641_fmt, _13654_args);
}



inline void _1d66497c6_pushSuggestion(_1d6648e13_Eval* _self_, jule::Str _14133_fmt, jule::Slice<jule::Any> _14146_args) {
	_1d65b8c2e_pushSuggestion((*(_self_))._field_s.ptr(), _14133_fmt, _14146_args);
}



inline void _1d66499c4_allowBuiltin(_1d6648e13_Eval* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1d6649bc2_disallowBuiltin(_1d6648e13_Eval* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline jule::Bool _1d6649e58_isUnsafe(_1d6648e13_Eval* _self_) {
	return (*(_self_))._field_unsafety;;
}



inline jule::Bool _1d664a1de_isGlobal(_1d6648e13_Eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1d9ebdc7e:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1d9ebe169:;
			{
				return false;;
			}
		}
		_match_end_1d9ebe114:;
	};
}



inline jule::Bool _1d664a4ec_applyNumericPrefix(_1d6648e13_Eval* _self_, jule::Ptr<_1d664721e_Data>* _16842_d) {
	if ((((((*(_16842_d)) == nullptr) || (!(_1d6647ae3_IsConst((*(_16842_d)).ptr())))) || (_1d667a186_Prim((*((*(_16842_d))))._field_Kind.ptr()) == nullptr)) || ((*(_self_))._field_prefix == nullptr))) {
		return false;;
	};
	jule::Ptr<_1d668060e_Prim> _1759_prim = _1d667a186_Prim((*(_self_))._field_prefix.ptr());;
	if ((_1759_prim == nullptr)) {
		return false;;
	};
	{
		
		if (_1d4320966_IsFloat(_1d6680950_Str(_1759_prim.ptr()))) {
			_case_begin_1d9ec1a62:;
			{
				(*((*(_16842_d))))._field_Kind=jule::new_ptr<_1d6677a35_TypeKind>((*((*(_self_))._field_prefix)));
				_1d4324c45_SetF64((*((*(_16842_d))))._field_Constant.ptr(), static_cast<jule::F64>(_1d4323dba_AsF64((*((*(_16842_d))))._field_Constant.ptr())));
				(*((*((*(_16842_d))))._field_Constant))._field_Kind=(*(_1759_prim))._field_Kind;
			}
		}
		else if (_1d432004d_IsSigInt(_1d6680950_Str(_1759_prim.ptr()))) {
			_case_begin_1d9ec1ac8:;
			{
				if ((!(_1d662d425_sigAssignable(_1d6680950_Str(_1759_prim.ptr()), _16842_d)))) {
					return false;;
				};
				(*((*(_16842_d))))._field_Kind=jule::new_ptr<_1d6677a35_TypeKind>((*((*(_self_))._field_prefix)));
				_1d4324173_SetI64((*((*(_16842_d))))._field_Constant.ptr(), static_cast<jule::I64>(_1d432389d_AsI64((*((*(_16842_d))))._field_Constant.ptr())));
				(*((*((*(_16842_d))))._field_Constant))._field_Kind=(*(_1759_prim))._field_Kind;
			}
		}
		else if (_1d432035b_IsUnsigInt(_1d6680950_Str(_1759_prim.ptr()))) {
			_case_begin_1d9ec1b3e:;
			{
				if ((!(_1d662d7dd_unsigAssignable(_1d6680950_Str(_1759_prim.ptr()), _16842_d)))) {
					return false;;
				};
				(*((*(_16842_d))))._field_Kind=jule::new_ptr<_1d6677a35_TypeKind>((*((*(_self_))._field_prefix)));
				_1d432442b_SetU64((*((*(_16842_d))))._field_Constant.ptr(), static_cast<jule::U64>(_1d4323b34_AsU64((*((*(_16842_d))))._field_Constant.ptr())));
				(*((*((*(_16842_d))))._field_Constant))._field_Kind=(*(_1759_prim))._field_Kind;
			}
		}
		_match_end_1d9ec1765:;
	};
	return true;;
}



inline jule::Ptr<_1d664721e_Data> _1d664a83d_litStr(_1d6648e13_Eval* _self_, jule::Ptr<_1d65017b0_LitExpr>* _20322_l) {
	jule::Str _20413_s = jule::Str();;
	if (_1d64d7202_IsRawStr((*((*(_20322_l))))._field_Value)) {
		_20413_s=_1d662b676_ToRawStr((*((*(_20322_l))))._field_Value);
	} else {
		_20413_s=_1d662b9b7_ToStr((*((*(_20322_l))))._field_Value);
	};
	jule::Ptr<_1d4321208_Const> _21013_constant = static__1d4321e95_NewStr(_20413_s);;
	return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=_1d675a376_primStr, ._field_Mutable=true, ._field_Model=jule::Any(_21013_constant, &__jule_any_type19), ._field_Constant=_21013_constant});;
}



inline jule::Ptr<_1d664721e_Data> _1d664ab7e_litRune(_1d6648e13_Eval* _self_, jule::Ptr<_1d65017b0_LitExpr>* _22023_l) {
	jule::I32 _2219_r = _1d662b456_ToRune((*((*(_22023_l))))._field_Value);;
	jule::Ptr<_1d664721e_Data> _22213_data = jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Constant=static__1d4321648_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_2219_r)))});;
	jule::Bool _2269_isAscii = _1d660ad81_IsAscii(_2219_r);;
	if (_2269_isAscii) {
		(*(_22213_data))._field_Kind=_1d675be7c_primU8;
	} else {
		(*(_22213_data))._field_Kind=_1d675b8e9_primI32;
	};
	(*(_22213_data))._field_Model=jule::Any(jule::new_ptr<_1d652d842_RuneExprModel>(_1d652d842_RuneExprModel{._field_Code=_2219_r}), &__jule_any_type82);
	(*(_22213_data))._field_Mutable=true;
	(*(_22213_data))._field_IsRune=true;
	(*(_22213_data))._field_untyped=true;
	return _22213_data;;
}



inline jule::Ptr<_1d664721e_Data> _1d664aec0_litFloat(_1d6648e13_Eval* _self_, jule::Ptr<_1d65017b0_LitExpr>* _24024_l) {
	jule::F64 _2419_f = ({
		auto except = _1d4308179_ParseFloat((*((*(_24024_l))))._field_Value, 64LL);
		(except.ok()) ? (except.result) : ({

			jule::MAX_F64;
		});
	});;
	jule::Ptr<_1d4321208_Const> _24213_constant = static__1d432225e_NewF64(_2419_f);;
	return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_untyped=true, ._field_Kind=_1d675d016_primF64, ._field_Mutable=true, ._field_Model=jule::Any(_24213_constant, &__jule_any_type19), ._field_Constant=_24213_constant});;
}



inline jule::Ptr<_1d664721e_Data> _1d664b311_litInt(_1d6648e13_Eval* _self_, jule::Ptr<_1d65017b0_LitExpr>* _25226_l) {
	;
	jule::Str _25513_lit = (*((*(_25226_l))))._field_Value;;
	jule::I64 _25613_base = 0LL;;
	{
		
		if (_1e016e5ab_HasPrefix(_25513_lit, jule::Str::lit("0x", 2))) {
			_case_begin_1d9ed1698:;
			{
				(_25513_lit).mut_slice(2LL);;
				_25613_base=16LLU;
			}
		}
		else if (_1e016e5ab_HasPrefix(_25513_lit, jule::Str::lit("0b", 2))) {
			_case_begin_1d9ed1566:;
			{
				(_25513_lit).mut_slice(2LL);;
				_25613_base=2LLU;
			}
		}
		else if (_1e016e5ab_HasPrefix(_25513_lit, jule::Str::lit("0o", 2))) {
			_case_begin_1d9ed15cc:;
			{
				(_25513_lit).mut_slice(2LL);;
				_25613_base=8LLU;
			}
		}
		else if (((_25513_lit[0LL] == '0') && (_25513_lit.len() > 1LL))) {
			_case_begin_1d9ed1258:;
			{
				(_25513_lit).mut_slice(1LL);;
				_25613_base=8LLU;
			}
		}
		else {
			_case_begin_1d9ed11e2:;
			{
				_25613_base=10LLU;
			}
		}
		_match_end_1d9ed118c:;
	};
	jule::Ptr<_1d664721e_Data> _27613_d = jule::new_ptr<_1d664721e_Data>();;
	jule::Bool _27813_ok = true;;
	jule::I64 _2799_sig = ({
		auto except = _1d4301738_ParseInt(_25513_lit, _25613_base, 64LL);
		(except.ok()) ? (except.result) : ({
			_27813_ok=false;

			0LL;
		});
	});;
	if (_27813_ok) {
		(*(_27613_d))._field_Constant=static__1d4321648_NewI64(_2799_sig);
		(*(_27613_d))._field_Kind=_1d675b09c_primInt;
	} else {
		jule::U64 _28713_unsig = ({
			auto except = _1d4301282_ParseUint(_25513_lit, _25613_base, 64LL);
			(except.ok()) ? (except.result) : ({
				_1d6649463_pushErr(_self_, (*((*(_25226_l))))._field_Token, jule::Str::lit("arithmetic value overflow: this value too big", 45), jule::Slice<jule::Any>());
				_1d66497c6_pushSuggestion(_self_, jule::Str::lit("floating-point literals may solve your problem", 46), jule::Slice<jule::Any>());

				jule::MAX_U64;
			});
		});;
		(*(_27613_d))._field_Constant=static__1d4321912_NewU64(_28713_unsig);
		(*(_27613_d))._field_Kind=_1d675abc3_primUint;
	};
	(*(_27613_d))._field_Model=jule::Any((*(_27613_d))._field_Constant, &__jule_any_type19);
	(*(_27613_d))._field_untyped=true;
	if ((!(_1d664a4ec_applyNumericPrefix(_self_, &(_27613_d))))) {
		_1d667117c_fitBitsize(&(_27613_d));
	};
	return _27613_d;;
}



inline jule::Ptr<_1d664721e_Data> _1d664b652_litNum(_1d6648e13_Eval* _self_, jule::Ptr<_1d65017b0_LitExpr>* _30726_l) {
	{
		
		if (_1d64d7de5_IsFloat((*((*(_30726_l))))._field_Value)) {
			_case_begin_1d9ed83d6:;
			{
				return _1d664aec0_litFloat(_self_, _30726_l);;
			}
		}
		else {
			_case_begin_1d9ed8370:;
			{
				return _1d664b311_litInt(_self_, _30726_l);;
			}
		}
		_match_end_1d9ed82a4:;
	};
}



inline jule::Ptr<_1d664721e_Data> _1d664b993_evalLit(_1d6648e13_Eval* _self_, jule::Ptr<_1d65017b0_LitExpr> _31626_lit) {
	{
		
		if (_1d64d6e38_IsStr((*(_31626_lit))._field_Value)) {
			_case_begin_1d9ede431:;
			{
				return _1d664a83d_litStr(_self_, &(_31626_lit));;
			}
		}
		else if (_1d64d74bb_IsRune((*(_31626_lit))._field_Value)) {
			_case_begin_1d9ede4a8:;
			{
				return _1d664ab7e_litRune(_self_, &(_31626_lit));;
			}
		}
		else if (_1d64d81ae_IsNum((*(_31626_lit))._field_Value)) {
			_case_begin_1d9ede530:;
			{
				return _1d664b652_litNum(_self_, &(_31626_lit));;
			}
		}
		else {
			_case_begin_1d9ed8eca:;
			{
				return nullptr;;
			}
		}
		_match_end_1d9ed8e20:;
	};
}



inline jule::Any _1d664bcd4_findBuiltins(_1d6648e13_Eval* _self_, jule::Str* _32932_ident) {
	if (_1d65b2d7c_IsPub((*(_32932_ident)))) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, 1)) {
				_case_begin_1d9ee1774:;
				{
					jule::Any _33321_def = _1d6670e4b_findBuiltinsImport(_32932_ident, (*(_self_))._field_lookup.cast_ptr<_1d659590e_ImportInfo>(1));;
					if ((_33321_def != nullptr)) {
						return _33321_def;;
					};
				}
			}
			else if (_match_expr.type_is(true, 3)) {
				_case_begin_1d9ee17da:;
				{
					jule::Any _33821_def = _1d6671ba5_findBuiltinsSema(_32932_ident, (*(_self_))._field_lookup.cast_ptr<_1d65b5c81_Sema>(3));;
					if ((_33821_def != nullptr)) {
						return _33821_def;;
					};
				}
			}
			else if (_match_expr.type_is(true, 0)) {
				_case_begin_1d9ee1851:;
				{
					jule::Any _34321_def = _1d6671ba5_findBuiltinsSema(_32932_ident, (*((*(_self_))._field_lookup.cast_ptr<_1d657b42d_scopeChecker>(0)))._field_s);;
					if ((_34321_def != nullptr)) {
						return _34321_def;;
					};
				}
			}
			_match_end_1d9ee16ca:;
		};
		return nullptr;;
	};
	if ((*(_self_))._field_disBuiltin) {
		return nullptr;;
	};
	return _1d675d786_findBuiltinDef(_32932_ident);;
}



inline jule::Any _1d664c1d0_getDef(_1d6648e13_Eval* _self_, jule::Str* _35626_ident, jule::Bool _35638_binded) {
	jule::Ptr<_1d65d9018_Var> _36113_v = _1d669756b_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1d6695c51_FindVar((*(_self_))._field_lookup, (*(_35626_ident)), _35638_binded);;
	if ((_36113_v != nullptr)) {
		return jule::Any(_36113_v, &__jule_any_type8);;
	};
	jule::Ptr<_1d6676c43_TypeAlias> _36613_ta = _1d669756b_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1d669614c_FindTypeAlias((*(_self_))._field_lookup, (*(_35626_ident)), _35638_binded);;
	if ((_36613_ta != nullptr)) {
		return jule::Any(_36613_ta, &__jule_any_type66);;
	};
	if ((!(_35638_binded))) {
		jule::Ptr<_1d6547c57_Enum> _37217_enm = _1d669756b_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1d66970c6_FindEnum((*(_self_))._field_lookup, (*(_35626_ident)));;
		if ((_37217_enm != nullptr)) {
			return jule::Any(_37217_enm, &__jule_any_type67);;
		};
		jule::Ptr<_1d6549462_TypeEnum> _37717_tenm = _1d669756b_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1d6697417_FindTypeEnum((*(_self_))._field_lookup, (*(_35626_ident)));;
		if ((_37717_tenm != nullptr)) {
			return jule::Any(_37717_tenm, &__jule_any_type68);;
		};
	};
	jule::Ptr<_1d653226e_Fn> _38313_f = _1d669756b_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1d6696944_FindFn((*(_self_))._field_lookup, (*(_35626_ident)), _35638_binded);;
	if ((_38313_f != nullptr)) {
		return jule::Any(_38313_f, &__jule_any_type64);;
	};
	jule::Ptr<_1d651c2d1_Struct> _38813_s = _1d669756b_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1d6696548_FindStruct((*(_self_))._field_lookup, (*(_35626_ident)), _35638_binded);;
	if ((_38813_s != nullptr)) {
		return jule::Any(_38813_s, &__jule_any_type65);;
	};
	return _1d664bcd4_findBuiltins(_self_, _35626_ident);;
}



inline jule::Ptr<_1d6538341_ReferenceStack> _1d664c466_getOwnerRefers(_1d6648e13_Eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1d9eea2c7:;
			{
				jule::Ptr<_1d657b42d_scopeChecker> _39917_sc = _1d657e7a5_getHardRoot((*(_self_))._field_lookup.cast_ptr<_1d657b42d_scopeChecker>(0));;
				return (*((*(_39917_sc))._field_owner))._field_Refers;;
			}
		}
		else {
			_case_begin_1d9ee92d7:;
			{
				if ((((*(_self_))._field_owner != nullptr) && ((*((*(_self_))._field_owner))._field_Scope == nullptr))) {
					return (*((*(_self_))._field_owner))._field_Refers;;
				};
			}
		}
		_match_end_1d9ee9282:;
	};
	return nullptr;;
}



inline void _1da00bd44_pushReference(_1d6648e13_Eval* _self_, jule::Ptr<_1d6535173_FnIns>* _41140_ref) {
	jule::Ptr<_1d6538341_ReferenceStack> _41213_refers = _1d664c466_getOwnerRefers(_self_);;
	if (((_41213_refers != nullptr) && (!(_1da00e176_Exist(_41213_refers.ptr(), (*(_41140_ref))))))) {
		_1d6539133_Push(_41213_refers.ptr(), jule::Any((*(_41140_ref)), &__jule_any_type7));
	};
}

inline void _1da0215c8_pushReference(_1d6648e13_Eval* _self_, jule::Ptr<_1d65d9018_Var>* _41140_ref) {
	jule::Ptr<_1d6538341_ReferenceStack> _41213_refers = _1d664c466_getOwnerRefers(_self_);;
	if (((_41213_refers != nullptr) && (!(_1da0238a5_Exist(_41213_refers.ptr(), (*(_41140_ref))))))) {
		_1d6539133_Push(_41213_refers.ptr(), jule::Any((*(_41140_ref)), &__jule_any_type8));
	};
}

inline void _1da0d2216_pushReference(_1d6648e13_Eval* _self_, jule::Ptr<_1d652005e_StructIns>* _41140_ref) {
	jule::Ptr<_1d6538341_ReferenceStack> _41213_refers = _1d664c466_getOwnerRefers(_self_);;
	if (((_41213_refers != nullptr) && (!(_1da0d4548_Exist(_41213_refers.ptr(), (*(_41140_ref))))))) {
		_1d6539133_Push(_41213_refers.ptr(), jule::Any((*(_41140_ref)), &__jule_any_type9));
	};
}



inline jule::Ptr<_1d664721e_Data> _1d664ca60__evalEnum(_1d6648e13_Eval* _self_, jule::Ptr<_1d6547c57_Enum> _41828_enm) {
	return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=jule::new_ptr<_1d6677a35_TypeKind>(_1d6677a35_TypeKind{._field_Kind=jule::Trait<_1d667757e_Kind>(_41828_enm, 3)}), ._field_Decl=true, });;
}



inline jule::Ptr<_1d664721e_Data> _1d664ce5b_evalEnum(_1d6648e13_Eval* _self_, jule::Ptr<_1d6547c57_Enum> _42731_enm, jule::Ptr<_1d64d5cd3_Token> _42743_errorToken) {
	if ((!(_1d65b912a_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_42731_enm))._field_Public, (*(_42731_enm))._field_Token)))) {
		_1d6649463_pushErr(_self_, _42743_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_42731_enm))._field_Ident, &__jule_any_type4)}));
		_1d66497c6_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1d664ca60__evalEnum(_self_, _42731_enm);;
}



inline jule::Ptr<_1d664721e_Data> _1d664d29c__evalTypeEnum(_1d6648e13_Eval* _self_, jule::Ptr<_1d6549462_TypeEnum> _43632_enm) {
	return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=jule::new_ptr<_1d6677a35_TypeKind>(_1d6677a35_TypeKind{._field_Kind=jule::Trait<_1d667757e_Kind>(_43632_enm, 4)}), ._field_Decl=true, });;
}



inline jule::Ptr<_1d664721e_Data> _1d664d698_evalTypeEnum(_1d6648e13_Eval* _self_, jule::Ptr<_1d6549462_TypeEnum> _44535_enm, jule::Ptr<_1d64d5cd3_Token> _44551_errorToken) {
	if ((!(_1d65b912a_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_44535_enm))._field_Public, (*(_44535_enm))._field_Token)))) {
		_1d6649463_pushErr(_self_, _44551_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_44535_enm))._field_Ident, &__jule_any_type4)}));
		_1d66497c6_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1d664d29c__evalTypeEnum(_self_, _44535_enm);;
}



inline jule::Ptr<_1d664721e_Data> _1d664d9d9__evalStruct(_1d6648e13_Eval* _self_, jule::Ptr<_1d652005e_StructIns> _45430_s) {
	jule::Ptr<_1d664721e_Data> _45513_d = jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=jule::new_ptr<_1d6677a35_TypeKind>(_1d6677a35_TypeKind{._field_Kind=jule::Trait<_1d667757e_Kind>(_45430_s, 0)}), ._field_Model=jule::Any(_45430_s, &__jule_any_type9), ._field_Decl=true, });;
	if ((((*(_45430_s))._field_Decl != nullptr) && (*((*(_45430_s))._field_Decl))._field_Binded)) {
		(*((*(_45513_d))._field_Kind))._field_BindIdent=(*((*(_45430_s))._field_Decl))._field_Ident;
	};
	return _45513_d;;
}



inline jule::Ptr<_1d664721e_Data> _1d664ddd5_evalStruct(_1d6648e13_Eval* _self_, jule::Ptr<_1d652005e_StructIns> _46833_s, jule::Ptr<_1d64d5cd3_Token> _46848_errorToken) {
	if ((!(_1d65b912a_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_46833_s))._field_Decl))._field_Public, (*((*(_46833_s))._field_Decl))._field_Token)))) {
		_1d6649463_pushErr(_self_, _46848_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_46833_s))._field_Decl))._field_Ident, &__jule_any_type4)}));
		_1d66497c6_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1d664e589_checkDeprecated(_self_, &((*((*(_46833_s))._field_Decl))._field_Directives), _46848_errorToken);
	return _1d664d9d9__evalStruct(_self_, _46833_s);;
}



inline jule::Ptr<_1d664721e_Data> _1d664e226_evalFnIns(_1d6648e13_Eval* _self_, jule::Ptr<_1d6535173_FnIns> _47828_f) {
	return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=jule::new_ptr<_1d6677a35_TypeKind>(_1d6677a35_TypeKind{._field_Kind=jule::Trait<_1d667757e_Kind>(_47828_f, 1)}), ._field_Model=jule::Any(_47828_f, &__jule_any_type7), });;
}



inline void _1d664e589_checkDeprecated(_1d6648e13_Eval* _self_, jule::Slice<jule::Ptr<_1d64ea7ed_Directive>>* _48739_directives, jule::Ptr<_1d64d5cd3_Token> _48770_tok) {
	if (_1d6649e58_isUnsafe(_self_)) {
		return;;
	};
	jule::Ptr<_1d64ea7ed_Directive> _4929_d = _1d6670a83_findDirective(_48739_directives, jule::Str::lit("deprecated", 10));;
	if ((_4929_d != nullptr)) {
		if (((*(_4929_d))._field_Args.len() == 0LL)) {
			_1d6649463_pushErr(_self_, _48770_tok, jule::Str::lit("deprecated usage: @", 19), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("this code is deprecated", 23), &__jule_any_type4)}));
		} else {
			_1d6649463_pushErr(_self_, _48770_tok, jule::Str::lit("deprecated usage: @", 19), jule::Slice<jule::Any>::make({jule::Any((*((*(_4929_d))._field_Args[0LL]))._field_Kind, &__jule_any_type4)}));
		};
		_1d66497c6_pushSuggestion(_self_, jule::Str::lit("use Unsafe Jule for deprecated codes or replace to successor", 60), jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1d664721e_Data> _1d664e985_evalFn(_1d6648e13_Eval* _self_, jule::Ptr<_1d653226e_Fn> _50329_f, jule::Ptr<_1d64d5cd3_Token> _50337_errorToken) {
	if ((!(_1d65b912a_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_50329_f))._field_Public, (*(_50329_f))._field_Token)))) {
		_1d6649463_pushErr(_self_, _50337_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_50329_f))._field_Ident, &__jule_any_type4)}));
		_1d66497c6_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1d664e589_checkDeprecated(_self_, &((*(_50329_f))._field_Directives), _50337_errorToken);
	jule::Ptr<_1d6535173_FnIns> _51213_ins = _1d65339ce_instance(_50329_f);;
	_1da00bd44_pushReference(_self_, &(_51213_ins));
	return _1d664e226_evalFnIns(_self_, _51213_ins);;
}



inline void _1d664eda3_pushIllegalCycleError(_1d6648e13_Eval* _self_, jule::Ptr<_1d65d9018_Var>* _51741_v1, jule::Ptr<_1d65d9018_Var>* _51752_v2, _1e01838bc_StrBuilder* _51767_message) {
	;
	jule::Str _5199_refers_to = _1e0235ee1_Logf(jule::Str::lit("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any((*((*(_51741_v1))))._field_Ident, &__jule_any_type4),jule::Any((*((*(_51752_v2))))._field_Ident, &__jule_any_type4)}));;
	jule::Slice<jule::U8> _5209_buf = _1e018d993_Buf(_51767_message);;
	_1e018c6ea_WriteStr(_51767_message, _1e016dcb4_Repeat(jule::Str::lit(" ", 1), 7LL));
	_1e018c6ea_WriteStr(_51767_message, _5199_refers_to);
	_1e018c9a3_WriteByte(_51767_message, '\n');
	_1e018c442_Write(_51767_message, _5209_buf);
}



inline jule::Bool _1d665029e_checkCrossCycle(_1d6648e13_Eval* _self_, jule::Ptr<_1d65d9018_Var>* _52735_v, _1e01838bc_StrBuilder* _52749_message) {
	{
		auto expr = &((*((*(_52735_v))))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1da013477:;
		if (it != expr_end) {
			jule::Ptr<_1d65d9018_Var> *_52816_d = it;
			{
				if (((*(_52816_d)) == (*(_self_))._field_owner)) {
					_1d664eda3_pushIllegalCycleError(_self_, _52735_v, _52816_d, _52749_message);
					return false;;
				};
				if ((!(_1d665029e_checkCrossCycle(_self_, _52816_d, _52749_message)))) {
					_1d664eda3_pushIllegalCycleError(_self_, _52735_v, _52816_d, _52749_message);
					return false;;
				};
			}
			_iter_next_1da013477:;
			++it;
			goto _iter_begin_1da013477;
		}
		_iter_end_1da013477:;
	};
	return true;;
}



inline jule::Bool _1d665069a_checkIllegalCycles(_1d6648e13_Eval* _self_, jule::Ptr<_1d65d9018_Var>* _54442_v, jule::Ptr<_1d64d5cd3_Token> _54451_declToken) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_owner == nullptr) || ((*((*(_self_))._field_owner))._field_Scope != nullptr))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if (((*(_self_))._field_owner == (*(_54442_v)))) {
		_1d6649463_pushErr(_self_, (*((*(_self_))._field_owner))._field_Token, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_owner))._field_Ident, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_1e01838bc_StrBuilder _55713_message = static__1e0183b64_New(32LL);;
	if ((!(_1d665029e_checkCrossCycle(_self_, _54442_v, &(_55713_message))))) {
		jule::Str _56017_errMsg = _1e018cee2_Str(&_55713_message);;
		_1e018d1e0_Clear(&_55713_message);
		_1d664eda3_pushIllegalCycleError(_self_, &((*(_self_))._field_owner), _54442_v, &(_55713_message));
		_56017_errMsg+=_1e018cee2_Str(&_55713_message);
		_1d6649463_pushErr(_self_, _54451_declToken, jule::Str::lit("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_56017_errMsg, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{ jule::Slice<jule::Ptr<_1d65d9018_Var>> &__jule_push_dest = (*((*(_self_))._field_owner))._field_Depends; __jule_push_dest.push((*(_54442_v))); };
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1d664721e_Data> _1d6650a96_evalVar(_1d6648e13_Eval* _self_, jule::Ptr<_1d65d9018_Var> _57230_v, jule::Ptr<_1d64d5cd3_Token> _57239_errorToken) {
	if ((!(_1d65b912a_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_57230_v))._field_Public, (*(_57230_v))._field_Token)))) {
		_1d6649463_pushErr(_self_, _57239_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_57230_v))._field_Ident, &__jule_any_type4)}));
		_1d66497c6_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1d664e589_checkDeprecated(_self_, &((*(_57230_v))._field_Directives), _57239_errorToken);
	if (((*(_57230_v))._field_Token == nullptr)) {
		goto _julec_label_1da028866;
	};
	(*(_57230_v))._field_Used=true;
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1da01bd10:;
			{
				jule::Bool _59113_ok = _1d665069a_checkIllegalCycles(_self_, &(_57230_v), _57239_errorToken);;
				if ((!(_59113_ok))) {
					return nullptr;;
				};
			}
		}
		else if (_match_expr.type_is(true, 0)) {
			_case_begin_1da01bd76:;
			{
				if (((!((*(_57230_v))._field_Reference)) || _1d6649e58_isUnsafe(_self_))) {
					goto _match_end_1da01bcaa;
				};
				jule::Ptr<_1d657b42d_scopeChecker> _59917_s = (*(_self_))._field_lookup.cast_ptr<_1d657b42d_scopeChecker>(0);;
				while ((((*(_59917_s))._field_owner == nullptr) && ((*(_59917_s))._field_parent != nullptr))) {
					{
						_59917_s=(*(_59917_s))._field_parent;
					}
				_iter_next_1da01d1eb:;
				}
				_iter_end_1da01d1eb:;;
				if (((((*(_59917_s))._field_owner != nullptr) && (*((*(_59917_s))._field_owner))._field_Anon) && ((*(_57230_v))._field_Scope != (*((*(_59917_s))._field_owner))._field_Scope))) {
					_1d6649463_pushErr(_self_, _57239_errorToken, jule::Str::lit("anonymous functions cannot access to reference definition @ of parent scope", 75), jule::Slice<jule::Any>::make({jule::Any((*(_57230_v))._field_Ident, &__jule_any_type4)}));
				};
			}
		}
		_match_end_1da01bcaa:;
	};
	if (((*(_57230_v))._field_Scope == nullptr)) {
		_1da0215c8_pushReference(_self_, &(_57230_v));
	};
	if (((!((*(_57230_v))._field_Binded)) && (((*(_57230_v))._field_Value == nullptr) || ((*((*(_57230_v))._field_Value))._field_Data == nullptr)))) {
		if ((*(_57230_v))._field_Constant) {
			_1d65d0a48_checkVar((*(_self_))._field_s, &(_57230_v), jule::Trait<_1d669756b_Lookup>((*(_self_))._field_s, 3));
			if ((((*(_57230_v))._field_Value == nullptr) || ((*((*(_57230_v))._field_Value))._field_Data == nullptr))) {
				return nullptr;;
			};
		};
	};
	if ((((*(_57230_v))._field_Kind == nullptr) || ((*((*(_57230_v))._field_Kind))._field_Kind == nullptr))) {
		if (((*(_57230_v))._field_Scope != nullptr)) {
			return nullptr;;
		};
		_1d65d0a48_checkVar((*(_self_))._field_s, &(_57230_v), (*(_self_))._field_lookup);
		if ((((*(_57230_v))._field_Kind == nullptr) || ((*((*(_57230_v))._field_Kind))._field_Kind == nullptr))) {
			return nullptr;;
		};
	};
	_julec_label_1da028866:;
	jule::Ptr<_1d664721e_Data> _64313_d = jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=(*((*(_57230_v))._field_Kind))._field_Kind, ._field_Mutable=(*(_57230_v))._field_Mutable, ._field_Reference=(*(_57230_v))._field_Reference, ._field_Lvalue=(!((*(_57230_v))._field_Constant)), ._field_Model=jule::Any(_57230_v, &__jule_any_type8), });;
	if ((((!((*(_57230_v))._field_Binded)) && _1d65d939d_IsInitialized(_57230_v.ptr())) && ((*((*(_57230_v))._field_Value))._field_Data != nullptr))) {
		(*(_64313_d))._field_IsRune=(*((*((*(_57230_v))._field_Value))._field_Data))._field_IsRune;
	};
	if (((*(_57230_v))._field_Constant && ((*((*((*(_57230_v))._field_Value))._field_Data))._field_Constant != nullptr))) {
		(*(_64313_d))._field_Constant=jule::new_ptr<_1d4321208_Const>((*((*((*((*(_57230_v))._field_Value))._field_Data))._field_Constant)));
		(*(_64313_d))._field_Model=jule::Any((*(_64313_d))._field_Constant, &__jule_any_type19);
		if (_1d65d98ba_untypedConstant(_57230_v.ptr())) {
			_1d664a4ec_applyNumericPrefix(_self_, &(_64313_d));
			(*(_64313_d))._field_untyped=true;
		};
	};
	return _64313_d;;
}



inline jule::Ptr<_1d664721e_Data> _1d6650e92_evalTypeAlias(_1d6648e13_Eval* _self_, jule::Ptr<_1d6676c43_TypeAlias> _66736_ta, jule::Ptr<_1d64d5cd3_Token> _66752_errorToken) {
	if ((!(_1d65b912a_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_66736_ta))._field_Public, (*(_66736_ta))._field_Token)))) {
		_1d6649463_pushErr(_self_, _66752_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_66736_ta))._field_Ident, &__jule_any_type4)}));
		_1d66497c6_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*(_66736_ta))._field_Used=true;
	jule::Trait<_1d667757e_Kind> _67613_kind = (*((*((*(_66736_ta))._field_Kind))._field_Kind))._field_Kind;;
	jule::Ptr<_1d664721e_Data> _67717_d = nullptr;;
	{
		auto &_match_expr{ _67613_kind };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1da034861:;
			{
				_67717_d=_1d664d9d9__evalStruct(_self_, _67613_kind.cast_ptr<_1d652005e_StructIns>(0));
			}
		}
		else if (_match_expr.type_is(true, 3)) {
			_case_begin_1da0346eb:;
			{
				_67717_d=_1d664ca60__evalEnum(_self_, _67613_kind.cast_ptr<_1d6547c57_Enum>(3));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_1da032919:;
			{
				_67717_d=_1d664d29c__evalTypeEnum(_self_, _67613_kind.cast_ptr<_1d6549462_TypeEnum>(4));
			}
		}
		else {
			_case_begin_1da0328a3:;
			{
				_67717_d=jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=jule::new_ptr<_1d6677a35_TypeKind>(_1d6677a35_TypeKind{._field_Kind=(*((*((*(_66736_ta))._field_Kind))._field_Kind))._field_Kind}), ._field_Decl=true, });
				if ((*(_66736_ta))._field_Binded) {
					(*((*(_67717_d))._field_Kind))._field_BindIdent=(*(_66736_ta))._field_Ident;
				} else {
					(*((*(_67717_d))._field_Kind))._field_BindIdent=(*((*((*(_66736_ta))._field_Kind))._field_Kind))._field_BindIdent;
				};
				(*(_67717_d))._field_Model=jule::Any((*(_67717_d))._field_Kind, &__jule_any_type83);
			}
		}
		_match_end_1da0325d9:;
	};
	(*((*(_67717_d))._field_Kind))._field_Generic=(*(_66736_ta))._field_Generic;
	return _67717_d;;
}



inline jule::Ptr<_1d664721e_Data> _1d665138d_evalDef(_1d6648e13_Eval* _self_, jule::Any* _70331_def, jule::Ptr<_1d64d5cd3_Token> _70341_ident) {
	{
		auto &_match_expr{ (*(_70331_def)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1da037c3d:;
			{
				return _1d6650a96_evalVar(_self_, (*(_70331_def)).cast_ptr<_1d65d9018_Var>(&__jule_any_type8), _70341_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1da037ca4:;
			{
				return _1d664ce5b_evalEnum(_self_, (*(_70331_def)).cast_ptr<_1d6547c57_Enum>(&__jule_any_type67), _70341_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1da037d1a:;
			{
				return _1d664d698_evalTypeEnum(_self_, (*(_70331_def)).cast_ptr<_1d6549462_TypeEnum>(&__jule_any_type68), _70341_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1da037d81:;
			{
				return _1d664ddd5_evalStruct(_self_, _1d651c743_instance((*(_70331_def)).cast_ptr<_1d651c2d1_Struct>(&__jule_any_type65)), _70341_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1da037de7:;
			{
				jule::Ptr<_1d653226e_Fn> _71417_f = (*(_70331_def)).cast_ptr<_1d653226e_Fn>(&__jule_any_type64);;
				if ((!(*(_71417_f))._field_Ident.equal("init", 4))) {
					return _1d664e985_evalFn(_self_, _71417_f, _70341_ident);;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1da037e5d:;
			{
				return _1d664e226_evalFnIns(_self_, (*(_70331_def)).cast_ptr<_1d6535173_FnIns>(&__jule_any_type7));;
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1da037ed5:;
			{
				return _1d6650e92_evalTypeAlias(_self_, (*(_70331_def)).cast_ptr<_1d6676c43_TypeAlias>(&__jule_any_type66), _70341_ident);;
			}
		}
		_match_end_1da037bd8:;
	};
	_1d6649463_pushErr(_self_, _70341_ident, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_70341_ident))._field_Kind, &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1d664721e_Data> _1d66516ce_evalIdent(_1d6648e13_Eval* _self_, jule::Ptr<_1d6502140_IdentExpr> _72728_ident) {
	jule::Any _72813_def = _1d664c1d0_getDef(_self_, &((*(_72728_ident))._field_Ident), (*(_72728_ident))._field_Binded);;
	return _1d665138d_evalDef(_self_, &(_72813_def), (*(_72728_ident))._field_Token);;
}



inline jule::Ptr<_1d664721e_Data> _1d6651a20_evalUnary(jule::Ptr<_1d6648e13_Eval> _self_, jule::Ptr<_1d65027c2_UnaryExpr> _73233_u) {
	_1d666763a_unaryEval _73313_unary = static__1d6667a7a_new(_self_);;
	return _1d6668eaa_eval(&_73313_unary, _73233_u);;
}



inline jule::Ptr<_1d664721e_Data> _1d6651d61_evalVariadic(jule::Ptr<_1d6648e13_Eval> _self_, jule::Ptr<_1d6502b9b_VariadicExpr> _73736_v) {
	if (((*(_73736_v))._field_Expr == nullptr)) {
		_1d6649463_pushErr(_self_.ptr(), (*(_73736_v))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1d6677a35_TypeKind> _74313_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=nullptr;
	__JULE_DEFER({
		(*(_self_))._field_prefix=_74313_prefix;
	});;
	jule::Ptr<_1d664721e_Data> _74713_d = _1d6667173_evalExpr(_self_, (*(_73736_v))._field_Expr);;
	if ((_74713_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1d6679e00_Variadicable((*(_74713_d))._field_Kind.ptr())))) {
		_1d6649463_pushErr(_self_.ptr(), (*(_73736_v))._field_Token, jule::Str::lit("type @ is not variadicable", 26), jule::Slice<jule::Any>::make({jule::Any(_1d6677ded_Str((*(_74713_d))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1d6684b0d_Slc> _75713_slc = _1d667b1dc_Slc((*(_74713_d))._field_Kind.ptr());;
	(*(_74713_d))._field_Kind=jule::new_ptr<_1d6677a35_TypeKind>(_1d6677a35_TypeKind{._field_BindIdent=(*((*(_75713_slc))._field_Elem))._field_BindIdent, ._field_Generic=(*((*(_75713_slc))._field_Elem))._field_Generic, ._field_Variadic=true, ._field_Kind=(*((*(_75713_slc))._field_Elem))._field_Kind});
	return _74713_d;;
}



inline jule::Ptr<_1d664721e_Data> _1d66521a2_evalUnsafe(jule::Ptr<_1d6648e13_Eval> _self_, jule::Ptr<_1d6501b89_UnsafeExpr> _76734_u) {
	jule::Bool _7689_unsafety = (*(_self_))._field_unsafety;;
	(*(_self_))._field_unsafety=true;
	jule::Ptr<_1d664721e_Data> _77013_d = _1d6667173_evalExpr(_self_, (*(_76734_u))._field_Expr);;
	(*(_self_))._field_unsafety=_7689_unsafety;
	return _77013_d;;
}



inline jule::Ptr<_1d664721e_Data> _1d66524e3_evalArr(jule::Ptr<_1d6648e13_Eval> _self_, jule::Ptr<_1d6506c38_SliceExpr> _77531_s) {
	jule::Ptr<_1d6686e2e_Arr> _77713_pt = _1d667ae56_Arr((*(_self_))._field_prefix.ptr());;
	jule::Ptr<_1d6686e2e_Arr> _77913_arr = jule::new_ptr<_1d6686e2e_Arr>(_1d6686e2e_Arr{._field_Auto=false, ._field_N=0LL, ._field_Elem=(*(_77713_pt))._field_Elem});;
	jule::Bool _78513_filled = false;;
	if (((*(_77531_s))._field_Exprs.len() == 2LL)) {
		{
			auto &_match_expr{ (*((*(_77531_s))._field_Exprs[1LL]))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type75) {
				_case_begin_1da0493e2:;
				{
					if (((*((*((*(_77531_s))._field_Exprs[1LL]))._field_Kind.cast_ptr<_1d6502b9b_VariadicExpr>(&__jule_any_type75)))._field_Expr != nullptr)) {
						goto _match_end_1da049348;
					};
					if ((*(_77713_pt))._field_Auto) {
						_1d6649463_pushErr(_self_.ptr(), (*(_77531_s))._field_Token, jule::Str::lit("auto-sized arrays cannot filled", 31), jule::Slice<jule::Any>());
						return nullptr;;
					};
					_78513_filled=true;
					(*(_77531_s))._field_Exprs=(*(_77531_s))._field_Exprs.slice(0LL, 1LL);
				}
			}
			_match_end_1da049348:;
		};
	};
	(*(_77913_arr))._field_N=static_cast<jule::I64>((*(_77531_s))._field_Exprs.len());
	if ((!((*(_77713_pt))._field_Auto))) {
		if (((*(_77913_arr))._field_N > (*(_77713_pt))._field_N)) {
			_1d6649463_pushErr(_self_.ptr(), (*(_77531_s))._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
		} else if (((*(_77913_arr))._field_N < (*(_77713_pt))._field_N)) {
			(*(_77913_arr))._field_N=(*(_77713_pt))._field_N;
		};
	};
	jule::Ptr<_1d6529909_ArrayExprModel> _81413_model = jule::new_ptr<_1d6529909_ArrayExprModel>(_1d6529909_ArrayExprModel{._field_Kind=_77913_arr, });;
	if (_78513_filled) {
		(*(_81413_model))._field_Elems=jule::Slice<jule::Any>::alloc(0LL, 2LL, jule::Any(nullptr));
	} else {
		(*(_81413_model))._field_Elems=jule::Slice<jule::Any>::alloc(0LL, (*(_77531_s))._field_Exprs.len(), jule::Any(nullptr));
	};
	jule::Ptr<_1d6677a35_TypeKind> _82313_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=(*(_77913_arr))._field_Elem;
	{
		auto expr = &((*(_77531_s))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1da051163:;
		if (it != expr_end) {
			jule::Ptr<_1d6500715_Expr> _82521_elem = *it;
			{
				jule::Ptr<_1d664721e_Data> _82617_d = _1d6667173_evalExpr(_self_, _82521_elem);;
				if ((_82617_d == nullptr)) {
					goto _iter_next_1da051163;
				};
				_1d65c13c9_checkAssignType((*(_self_))._field_s, false, &((*(_77913_arr))._field_Elem), &(_82617_d), (*(_77531_s))._field_Token);
				{ jule::Slice<jule::Any> &__jule_push_dest = (*(_81413_model))._field_Elems; __jule_push_dest.push((*(_82617_d))._field_Model); };
			}
			_iter_next_1da051163:;
			++it;
			goto _iter_begin_1da051163;
		}
		_iter_end_1da051163:;
	};
	(*(_self_))._field_prefix=_82313_prefix;
	if (_78513_filled) {
		{ jule::Slice<jule::Any> &__jule_push_dest = (*(_81413_model))._field_Elems; __jule_push_dest.push(nullptr); };
	};
	return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=jule::new_ptr<_1d6677a35_TypeKind>(_1d6677a35_TypeKind{._field_Kind=jule::Trait<_1d667757e_Kind>(_77913_arr, 25)}), ._field_Mutable=true, ._field_Model=jule::Any(_81413_model, &__jule_any_type84), });;
}



inline jule::Ptr<_1d664721e_Data> _1d6652999_evalExpSlc(jule::Ptr<_1d6648e13_Eval> _self_, jule::Ptr<_1d6506c38_SliceExpr> _84934_s, jule::Ptr<_1d6677a35_TypeKind> _84953_t, jule::Any _84971_first) {
	jule::Ptr<_1d6684b0d_Slc> _85013_slc = jule::new_ptr<_1d6684b0d_Slc>(_1d6684b0d_Slc{._field_Elem=_84953_t});;
	jule::I64 _85413_i = 0LL;;
	jule::Ptr<_1d65268b2_SliceExprModel> _85513_model = jule::new_ptr<_1d65268b2_SliceExprModel>(_1d65268b2_SliceExprModel{._field_ElemKind=_84953_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, (*(_84934_s))._field_Exprs.len(), jule::Any(nullptr))});;
	if ((_84971_first != nullptr)) {
		{ jule::Slice<jule::Any> &__jule_push_dest = (*(_85513_model))._field_Elems; __jule_push_dest.push(_84971_first); };
		_85413_i=1LL;
	};
	jule::Ptr<_1d6677a35_TypeKind> _86413_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=(*(_85013_slc))._field_Elem;
	{
		auto expr = (*(_84934_s))._field_Exprs.slice(_85413_i);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1da057ce6:;
		if (it != expr_end) {
			jule::Ptr<_1d6500715_Expr> _86621_elem = *it;
			{
				jule::Ptr<_1d664721e_Data> _86717_d = _1d6667173_evalExpr(_self_, _86621_elem);;
				if ((_86717_d == nullptr)) {
					goto _iter_next_1da057ce6;
				};
				_1d65c13c9_checkAssignType((*(_self_))._field_s, false, &((*(_85013_slc))._field_Elem), &(_86717_d), (*(_84934_s))._field_Token);
				{ jule::Slice<jule::Any> &__jule_push_dest = (*(_85513_model))._field_Elems; __jule_push_dest.push((*(_86717_d))._field_Model); };
			}
			_iter_next_1da057ce6:;
			++it;
			goto _iter_begin_1da057ce6;
		}
		_iter_end_1da057ce6:;
	};
	(*(_self_))._field_prefix=_86413_prefix;
	return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=jule::new_ptr<_1d6677a35_TypeKind>(_1d6677a35_TypeKind{._field_Kind=jule::Trait<_1d667757e_Kind>(_85013_slc, 22)}), ._field_Mutable=true, ._field_Model=jule::Any(_85513_model, &__jule_any_type76), });;
}



inline jule::Ptr<_1d664721e_Data> _1d6652cda_evalSliceExpr(jule::Ptr<_1d6648e13_Eval> _self_, jule::Ptr<_1d6506c38_SliceExpr> _88537_s) {
	if (((*(_self_))._field_prefix != nullptr)) {
		{
			
			if ((_1d667ae56_Arr((*(_self_))._field_prefix.ptr()) != nullptr)) {
				_case_begin_1da05b46a:;
				{
					return _1d66524e3_evalArr(_self_, _88537_s);;
				}
			}
			else if ((_1d667b1dc_Slc((*(_self_))._field_prefix.ptr()) != nullptr)) {
				_case_begin_1da05b4e2:;
				{
					jule::Ptr<_1d6684b0d_Slc> _89121_pt = _1d667b1dc_Slc((*(_self_))._field_prefix.ptr());;
					return _1d6652999_evalExpSlc(_self_, _88537_s, (*(_89121_pt))._field_Elem, nullptr);;
				}
			}
			_match_end_1da05b35a:;
		};
	};
	jule::Ptr<_1d6677a35_TypeKind> _89613_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=nullptr;
	if (((*(_88537_s))._field_Exprs.len() == 0LL)) {
		_1d6649463_pushErr(_self_.ptr(), (*(_88537_s))._field_Token, jule::Str::lit("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1d664721e_Data> _90413_firstElem = _1d6667173_evalExpr(_self_, (*(_88537_s))._field_Exprs[0LL]);;
	if ((_90413_firstElem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1d664721e_Data> _90913_d = _1d6652999_evalExpSlc(_self_, _88537_s, (*(_90413_firstElem))._field_Kind, (*(_90413_firstElem))._field_Model);;
	(*(_self_))._field_prefix=_89613_prefix;
	return _90913_d;;
}



inline void _1d665314d_checkIntegerIndexingByData(_1d6648e13_Eval* _self_, jule::Ptr<_1d664721e_Data>* _91550_d, jule::Ptr<_1d64d5cd3_Token> _91560_token) {
	jule::Str _9169_err_key = _1d667326c_checkDataForIntegerIndexing(_91550_d);;
	{
		auto &_match_expr{ _9169_err_key };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1da063065:;
			{
				return;;
			}
		}
		else if (_match_expr == jule::Str::lit("type @ is invalid for indexing", 30)) {
			_case_begin_1da0625d6:;
			{
				_1d6649463_pushErr(_self_, _91560_token, _9169_err_key, jule::Slice<jule::Any>::make({jule::Any(_1d6677ded_Str((*((*(_91550_d))))._field_Kind.ptr()), &__jule_any_type4)}));
			}
		}
		else {
			_case_begin_1da06295a:;
			{
				_1d6649463_pushErr(_self_, _91560_token, _9169_err_key, jule::Slice<jule::Any>());
			}
		}
		_match_end_1da06288e:;
	};
}



inline void _1d665356b_indexingPtr(_1d6648e13_Eval* _self_, jule::Ptr<_1d664721e_Data>* _92735_d, jule::Ptr<_1d664721e_Data>* _92750_index, jule::Ptr<_1d65076c8_IndexingExpr>* _92765_i) {
	_1d665314d_checkIntegerIndexingByData(_self_, _92750_index, (*((*(_92765_i))))._field_Token);
	(*((*(_92735_d))))._field_Lvalue=true;
	jule::Ptr<_1d6687902_Ptr> _93113_ptr = _1d667a6a3_Ptr((*((*(_92735_d))))._field_Kind.ptr());;
	{
		
		if (_1d668843b_IsUnsafe(_93113_ptr.ptr())) {
			_case_begin_1da0657d7:;
			{
				_1d6649463_pushErr(_self_, (*((*(_92765_i))))._field_Token, jule::Str::lit("unsafe pointers are not supports indexing", 41), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((!(_1d6649e58_isUnsafe(_self_)))) {
			_case_begin_1da06585e:;
			{
				_1d6649463_pushErr(_self_, (*((*(_92765_i))))._field_Token, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
			}
		}
		_match_end_1da065771:;
	};
	(*((*(_92735_d))))._field_Kind=(*(_93113_ptr))._field_Elem;
}



inline void _1d6653989_indexingArr(_1d6648e13_Eval* _self_, jule::Ptr<_1d664721e_Data>* _94335_d, jule::Ptr<_1d664721e_Data>* _94350_index, jule::Ptr<_1d65076c8_IndexingExpr>* _94365_i) {
	jule::Ptr<_1d6686e2e_Arr> _94413_arr = _1d667ae56_Arr((*((*(_94335_d))))._field_Kind.ptr());;
	(*((*(_94335_d))))._field_Kind=(*(_94413_arr))._field_Elem;
	_1d665314d_checkIntegerIndexingByData(_self_, _94350_index, (*((*(_94365_i))))._field_Token);
	(*((*(_94335_d))))._field_Lvalue=true;
	if ((_1d6647ae3_IsConst((*(_94350_index)).ptr()) && (_1d4323dba_AsF64((*((*(_94350_index))))._field_Constant.ptr()) >= static_cast<jule::F64>((*(_94413_arr))._field_N)))) {
		_1d6649463_pushErr(_self_, (*((*(_94365_i))))._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
	};
}



inline void _1d6653da7_indexingSlc(_1d6648e13_Eval* _self_, jule::Ptr<_1d664721e_Data>* _95335_d, jule::Ptr<_1d664721e_Data>* _95350_index, jule::Ptr<_1d65076c8_IndexingExpr>* _95365_i) {
	jule::Ptr<_1d6684b0d_Slc> _95413_slc = _1d667b1dc_Slc((*((*(_95335_d))))._field_Kind.ptr());;
	(*((*(_95335_d))))._field_Kind=(*(_95413_slc))._field_Elem;
	_1d665314d_checkIntegerIndexingByData(_self_, _95350_index, (*((*(_95365_i))))._field_Token);
	(*((*(_95335_d))))._field_Lvalue=true;
	if ((!(_1d6647ae3_IsConst((*(_95350_index)).ptr())))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_95335_d))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1da06cb85:;
			{
				jule::Ptr<_1d65268b2_SliceExprModel> _96517_m = (*((*(_95335_d))))._field_Model.cast_ptr<_1d65268b2_SliceExprModel>(&__jule_any_type76);;
				jule::F64 _96613_indx = _1d4323dba_AsF64((*((*(_95350_index))))._field_Constant.ptr());;
				if ((_96613_indx >= static_cast<jule::F64>((*(_96517_m))._field_Elems.len()))) {
					_1d6649463_pushErr(_self_, (*((*(_95365_i))))._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
				} else {
					(*((*(_95335_d))))._field_Model=(*(_96517_m))._field_Elems[static_cast<jule::I64>(static_cast<jule::U64>(_96613_indx))];
					(*((*(_95335_d))))._field_Decl=true;
				};
			}
		}
		_match_end_1da06cb1e:;
	};
}



inline void _1d66542c5_indexingMap(_1d6648e13_Eval* _self_, jule::Ptr<_1d664721e_Data>* _97635_d, jule::Ptr<_1d664721e_Data>* _97650_index, jule::Ptr<_1d65076c8_IndexingExpr>* _97669_i) {
	(*((*(_97635_d))))._field_Lvalue=true;
	if (((*(_97650_index)) == nullptr)) {
		return;;
	};
	jule::Ptr<_1d66862a2_Map> _98113_m = _1d667bc26_Map((*((*(_97635_d))))._field_Kind.ptr());;
	_1d6630dea_assignTypeChecker _98213_atc = _1d6630dea_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*(_98113_m))._field_Key, ._field_d=(*(_97650_index)), ._field_errorToken=(*((*(_97669_i))))._field_Token};;
	_1d6631db8_check(&_98213_atc);
	(*((*(_97635_d))))._field_Kind=(*(_98113_m))._field_Val;
}



inline void _1d66546e3_indexingStr(_1d6648e13_Eval* _self_, jule::Ptr<_1d664721e_Data>* _99235_d, jule::Ptr<_1d664721e_Data>* _99250_index, jule::Ptr<_1d65076c8_IndexingExpr>* _99265_i) {
	(*((*(_99235_d))))._field_Kind=_1d675be7c_primU8;
	(*((*(_99235_d))))._field_Mutable=false;
	(*((*(_99235_d))))._field_Lvalue=true;
	if (((*(_99250_index)) == nullptr)) {
		return;;
	};
	_1d665314d_checkIntegerIndexingByData(_self_, _99250_index, (*((*(_99265_i))))._field_Token);
	if ((!(_1d6647ae3_IsConst((*(_99250_index)).ptr())))) {
		(*((*(_99235_d))))._field_Constant=nullptr;
		(*((*(_99235_d))))._field_untyped=false;
		return;;
	};
	if (_1d6647ae3_IsConst((*(_99235_d)).ptr())) {
		jule::Ptr<_1d64d5cd3_Token> _101013_errorToken = (*((*(_99265_i))))._field_Token;;
		jule::I64 _101113_j = _1d432389d_AsI64((*((*(_99250_index))))._field_Constant.ptr());;
		jule::Str _101213_s = _1d4323381_ReadStr((*((*(_99235_d))))._field_Constant.ptr());;
		if ((static_cast<jule::I64>(_101113_j) >= _101213_s.len())) {
			_1d6649463_pushErr(_self_, _101013_errorToken, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
		} else {
			_1d432442b_SetU64((*((*(_99235_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_101213_s[_101113_j])));
		};
	};
}



inline void _1d6654b11_toIndexing(_1d6648e13_Eval* _self_, jule::Ptr<_1d664721e_Data>* _102134_d, jule::Ptr<_1d664721e_Data>* _102149_index, jule::Ptr<_1d65076c8_IndexingExpr>* _102168_i) {
	{
		
		if ((_1d667a6a3_Ptr((*((*(_102134_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1da0792ac:;
			{
				_1d665356b_indexingPtr(_self_, _102134_d, _102149_index, _102168_i);
				return;;
			}
		}
		else if ((_1d667ae56_Arr((*((*(_102134_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1da079334:;
			{
				_1d6653989_indexingArr(_self_, _102134_d, _102149_index, _102168_i);
				return;;
			}
		}
		else if ((_1d667b1dc_Slc((*((*(_102134_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1da0793ab:;
			{
				_1d6653da7_indexingSlc(_self_, _102134_d, _102149_index, _102168_i);
				return;;
			}
		}
		else if ((_1d667bc26_Map((*((*(_102134_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1da079433:;
			{
				_1d66542c5_indexingMap(_self_, _102134_d, _102149_index, _102168_i);
				return;;
			}
		}
		else if ((_1d667a186_Prim((*((*(_102134_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1da0794aa:;
			{
				jule::Ptr<_1d668060e_Prim> _103613_prim = _1d667a186_Prim((*((*(_102134_d))))._field_Kind.ptr());;
				{
					
					if (_1d6683a96_IsStr(_103613_prim.ptr())) {
						_case_begin_1da07d69b:;
						{
							_1d66546e3_indexingStr(_self_, _102134_d, _102149_index, _102168_i);
							return;;
						}
					}
					_match_end_1da07d602:;
				};
			}
		}
		_match_end_1da079169:;
	};
	_1d6649463_pushErr(_self_, (*((*(_102168_i))))._field_Token, jule::Str::lit("type @ is not support indexing", 30), jule::Slice<jule::Any>::make({jule::Any(_1d6677ded_Str((*((*(_102134_d))))._field_Kind.ptr()), &__jule_any_type4)}));
}



inline jule::Bool _1d66550b7_pushGenericsFromExprSubIdent(jule::Ptr<_1d6648e13_Eval> _self_, jule::Ptr<_1d6503828_SubIdentExpr>* _104653_sexpr, jule::Slice<jule::Ptr<_1d64eb3d1_TypeDecl>>* _104714_generics, jule::Ptr<_1d6500715_Expr>* _104742_expr) {
	jule::Ptr<_1d64ebcd8_SubIdentTypeDecl> _104813_t = jule::new_ptr<_1d64ebcd8_SubIdentTypeDecl>();;
	if ((!(_1d667415d_pushSubIdentFromExpr(jule::Any((*(_104653_sexpr)), &__jule_any_type85), &(_104813_t))))) {
		_1d6649463_pushErr(_self_.ptr(), (*((*(_104742_expr))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return false;;
	};
	{ jule::Slice<jule::Ptr<_1d64eb3d1_TypeDecl>> &__jule_push_dest = (*(_104714_generics)); __jule_push_dest.push(jule::new_ptr<_1d64eb3d1_TypeDecl>(_1d64eb3d1_TypeDecl{._field_Kind=jule::Any(_104813_t, &__jule_any_type86)})); };
	return true;;
}



inline jule::Bool _1d66554b3_pushGenericsFromData(jule::Ptr<_1d6648e13_Eval> _self_, jule::Slice<jule::Ptr<_1d64eb3d1_TypeDecl>>* _105745_generics, jule::Ptr<_1d6500715_Expr>* _105773_expr) {
	{
		auto &_match_expr{ (*((*(_105773_expr))))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1da082b89:;
			{
				jule::Ptr<_1d65027c2_UnaryExpr> _106017_u = (*((*(_105773_expr))))._field_Kind.cast_ptr<_1d65027c2_UnaryExpr>(&__jule_any_type87);;
				{
					auto &_match_expr{ (*((*(_106017_u))._field_Op))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(62LLU)) {
						_case_begin_1da0839ae:;
						{
							jule::Ptr<_1d64ece0a_PtrTypeDecl> _106321_kind = jule::new_ptr<_1d64ece0a_PtrTypeDecl>();;
							jule::Slice<jule::Ptr<_1d64eb3d1_TypeDecl>> _106421__generics = jule::Slice<jule::Ptr<_1d64eb3d1_TypeDecl>>::alloc(0LL, 1LL);;
							_1d66554b3_pushGenericsFromData(_self_, &(_106421__generics), &((*(_106017_u))._field_Expr));
							(*(_106321_kind))._field_Elem=_106421__generics[0LL];
							{ jule::Slice<jule::Ptr<_1d64eb3d1_TypeDecl>> &__jule_push_dest = (*(_105745_generics)); __jule_push_dest.push(jule::new_ptr<_1d64eb3d1_TypeDecl>(_1d64eb3d1_TypeDecl{._field_Token=(*((*(_105773_expr))))._field_Token, ._field_Kind=jule::Any(_106321_kind, &__jule_any_type71)})); };
						}
					}
					else if (_match_expr == static_cast<jule::U64>(65LLU)) {
						_case_begin_1da084ae2:;
						{
							jule::Ptr<_1d64ec47b_SptrTypeDecl> _107221_kind = jule::new_ptr<_1d64ec47b_SptrTypeDecl>();;
							jule::Slice<jule::Ptr<_1d64eb3d1_TypeDecl>> _107321__generics = jule::Slice<jule::Ptr<_1d64eb3d1_TypeDecl>>::alloc(0LL, 1LL);;
							_1d66554b3_pushGenericsFromData(_self_, &(_107321__generics), &((*(_106017_u))._field_Expr));
							(*(_107221_kind))._field_Elem=_107321__generics[0LL];
							{ jule::Slice<jule::Ptr<_1d64eb3d1_TypeDecl>> &__jule_push_dest = (*(_105745_generics)); __jule_push_dest.push(jule::new_ptr<_1d64eb3d1_TypeDecl>(_1d64eb3d1_TypeDecl{._field_Token=(*((*(_105773_expr))))._field_Token, ._field_Kind=jule::Any(_107221_kind, &__jule_any_type72)})); };
						}
					}
					else {
						_case_begin_1da083ea9:;
						{
							_1d6649463_pushErr(_self_.ptr(), (*(_106017_u))._field_Op, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
							return false;;
						}
					}
					_match_end_1da083e54:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1da082c00:;
			{
				{ jule::Slice<jule::Ptr<_1d64eb3d1_TypeDecl>> &__jule_push_dest = (*(_105745_generics)); __jule_push_dest.push((*((*(_105773_expr))))._field_Kind.cast_ptr<_1d64eb3d1_TypeDecl>(&__jule_any_type88)); };
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1da082c66:;
			{
				jule::Ptr<_1d6503828_SubIdentExpr> _108717_sexpr = (*((*(_105773_expr))))._field_Kind.cast_ptr<_1d6503828_SubIdentExpr>(&__jule_any_type85);;
				return _1d66550b7_pushGenericsFromExprSubIdent(_self_, &(_108717_sexpr), _105745_generics, _105773_expr);;
			}
		}
		else if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1da0820b7:;
			{
				jule::Ptr<_1d6502140_IdentExpr> _109017_ident = (*((*(_105773_expr))))._field_Kind.cast_ptr<_1d6502140_IdentExpr>(&__jule_any_type79);;
				{ jule::Slice<jule::Ptr<_1d64eb3d1_TypeDecl>> &__jule_push_dest = (*(_105745_generics)); __jule_push_dest.push(jule::new_ptr<_1d64eb3d1_TypeDecl>(_1d64eb3d1_TypeDecl{._field_Kind=jule::Any(jule::new_ptr<_1d64eb9db_IdentTypeDecl>(_1d64eb9db_IdentTypeDecl{._field_Token=(*(_109017_ident))._field_Token, ._field_Ident=(*(_109017_ident))._field_Ident, ._field_Binded=(*(_109017_ident))._field_Binded, }), &__jule_any_type20)})); };
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1da08212d:;
			{
				{
					auto expr = &((*((*((*(_105773_expr))))._field_Kind.cast_ptr<_1d65013d6_TupleExpr>(&__jule_any_type80)))._field_Expr);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1da08bec3:;
					if (it != expr_end) {
						jule::Ptr<_1d6500715_Expr> _109925_texpr = *it;
						{
							if ((!(_1d66554b3_pushGenericsFromData(_self_, _105745_generics, &(_109925_texpr))))) {
								return false;;
							};
						}
						_iter_next_1da08bec3:;
						++it;
						goto _iter_begin_1da08bec3;
					}
					_iter_end_1da08bec3:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1da082194:;
			{
				jule::Ptr<_1d650344e_NsSelectionExpr> _110517_ns = (*((*(_105773_expr))))._field_Kind.cast_ptr<_1d650344e_NsSelectionExpr>(&__jule_any_type89);;
				jule::Ptr<_1d64eb9db_IdentTypeDecl> _110617_decl = jule::new_ptr<_1d64eb9db_IdentTypeDecl>(_1d64eb9db_IdentTypeDecl{._field_Token=(*(_110517_ns))._field_Ident, ._field_Ident=(*((*(_110517_ns))._field_Ident))._field_Kind, });;
				{ jule::Slice<jule::Ptr<_1d64eb3d1_TypeDecl>> &__jule_push_dest = (*(_105745_generics)); __jule_push_dest.push(jule::new_ptr<_1d64eb3d1_TypeDecl>(_1d64eb3d1_TypeDecl{._field_Token=(*(_110617_decl))._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1d64ec17e_NamespaceTypeDecl>(_1d64ec17e_NamespaceTypeDecl{._field_Idents=(*(_110517_ns))._field_Ns, ._field_Kind=jule::new_ptr<_1d64eb3d1_TypeDecl>(_1d64eb3d1_TypeDecl{._field_Token=(*(_110617_decl))._field_Token, ._field_Kind=jule::Any(_110617_decl, &__jule_any_type20)})}), &__jule_any_type90)})); };
			}
		}
		else {
			_case_begin_1da082051:;
			{
				_1d6649463_pushErr(_self_.ptr(), (*((*(_105773_expr))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1da081eeb:;
	};
	return true;;
}



inline void _1d6655826_evalIdentDeclFromIndexing(jule::Ptr<_1d6648e13_Eval> _self_, jule::Ptr<_1d664721e_Data>* _112750_d, jule::Ptr<_1d65076c8_IndexingExpr>* _112765_i) {
	jule::Ptr<_1d652005e_StructIns> _112813_s = _1d667b709_Struct((*((*(_112750_d))))._field_Kind.ptr());;
	if ((_112813_s == nullptr)) {
		_1d6649463_pushErr(_self_.ptr(), (*((*((*(_112765_i))))._field_Expr))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any(_1d6677ded_Str((*((*(_112750_d))))._field_Kind.ptr()), &__jule_any_type4)}));
		(*(_112750_d))=nullptr;
		return;;
	};
	jule::Ptr<_1d64eb9db_IdentTypeDecl> _113517_decl = nullptr;;
	{
		auto &_match_expr{ (*((*((*(_112765_i))))._field_Expr))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1da092b55:;
			{
				jule::Ptr<_1d6502140_IdentExpr> _113817_expr = (*((*((*(_112765_i))))._field_Expr))._field_Kind.cast_ptr<_1d6502140_IdentExpr>(&__jule_any_type79);;
				_113517_decl=jule::new_ptr<_1d64eb9db_IdentTypeDecl>(_1d64eb9db_IdentTypeDecl{._field_Token=(*(_113817_expr))._field_Token, ._field_Ident=(*(_113817_expr))._field_Ident, ._field_Binded=(*(_113817_expr))._field_Binded, });
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1da093dcb:;
			{
				jule::Ptr<_1d650344e_NsSelectionExpr> _114517_expr = (*((*((*(_112765_i))))._field_Expr))._field_Kind.cast_ptr<_1d650344e_NsSelectionExpr>(&__jule_any_type89);;
				_113517_decl=jule::new_ptr<_1d64eb9db_IdentTypeDecl>(_1d64eb9db_IdentTypeDecl{._field_Token=(*(_114517_expr))._field_Ident, ._field_Ident=(*((*(_114517_expr))._field_Ident))._field_Kind, });
			}
		}
		else {
			_case_begin_1da0930b7:;
			{
				_1d6649463_pushErr(_self_.ptr(), (*((*(_112765_i))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				(*(_112750_d))=nullptr;
				return;;
			}
		}
		_match_end_1da093062:;
	};
	if ((!(_1d66554b3_pushGenericsFromData(_self_, &((*(_113517_decl))._field_Generics), &((*((*(_112765_i))))._field_Index))))) {
		(*(_112750_d))=nullptr;
		return;;
	};
	_112813_s=({ auto _wrap_copy = _1d665c322_typeChecker(_self_.ptr()); _1d668d83c_fromStruct(&_wrap_copy, &(_113517_decl), &((*(_112813_s))._field_Decl)); });
	if ((_112813_s == nullptr)) {
		(*(_112750_d))=nullptr;
		return;;
	};
	(*((*((*(_112750_d))))._field_Kind))._field_Kind=jule::Trait<_1d667757e_Kind>(_112813_s, 0);
}



inline jule::Bool _1d6655ccc_checkGenericFn(jule::Ptr<_1d6648e13_Eval> _self_, jule::Ptr<_1d6535173_FnIns>* _117039_f, jule::Ptr<_1d64d5cd3_Token>* _117055_et, jule::Any* _117072_model) {
	jule::Bool _11719_ok = _1d65c4850_reloadFnInsTypes((*(_self_))._field_s, (*(_117039_f)));;
	(*((*(_117039_f))))._field_reloaded=true;
	if ((!(_11719_ok))) {
		return false;;
	};
	jule::Ptr<_1d6535173_FnIns> _117613_existInstance = _1d6533cdc_appendInstance((*((*(_117039_f))))._field_Decl.ptr(), _117039_f);;
	if ((!(_1d65c38a4_checkConstraintsFn((*(_self_))._field_s, _117039_f, _117055_et, _117613_existInstance)))) {
		return false;;
	};
	if ((_117613_existInstance != nullptr)) {
		_1d6673cd9_updateModelToGenericIns(_117072_model, &(_117613_existInstance));
		_1da09bb2b_updateRefer(_1d664c466_getOwnerRefers(_self_.ptr()), _117039_f, &(_117613_existInstance));
		(*(_117039_f))=_117613_existInstance;
	} else {
		_1d65d3ba0_checkFnInsCaller((*(_self_))._field_s, _117039_f, (*(_117055_et)));
	};
	return true;;
}



inline void _1d6656140_evalFnGenericFromIndexing(jule::Ptr<_1d6648e13_Eval> _self_, jule::Ptr<_1d664721e_Data>* _119950_d, jule::Ptr<_1d65076c8_IndexingExpr>* _119965_i) {
	jule::Slice<jule::Ptr<_1d64eb3d1_TypeDecl>> _120013_generics = jule::Slice<jule::Ptr<_1d64eb3d1_TypeDecl>>::alloc(0LL, 8LLU);;
	if ((!(_1d66554b3_pushGenericsFromData(_self_, &(_120013_generics), &((*((*(_119965_i))))._field_Index))))) {
		(*(_119950_d))=nullptr;
		return;;
	};
	jule::Ptr<_1d6535173_FnIns> _120613_f = _1d667b473_Fn((*((*(_119950_d))))._field_Kind.ptr());;
	jule::I64 _120713_genericsLen = 0LL;;
	if (((*(_120613_f))._field_Decl != nullptr)) {
		_120713_genericsLen=static_cast<jule::I64>((*((*(_120613_f))._field_Decl))._field_Generics.len());
	};
	if ((!(_1d65b9dea_checkGenericQuantity((*(_self_))._field_s.ptr(), _120713_genericsLen, static_cast<jule::I64>(_120013_generics.len()), (*((*((*(_119965_i))))._field_Expr))._field_Token)))) {
		(*(_119950_d))=nullptr;
		return;;
	};
	(*(_120613_f))._field_Generics=jule::Slice<jule::Ptr<_1d667614e_InsGeneric>>::alloc(0LL, (*((*(_120613_f))._field_Decl))._field_Generics.len());
	{
		auto expr = &(_120013_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1da0a3847:;
		if (it != expr_end) {
			jule::Ptr<_1d64eb3d1_TypeDecl> _121821_g = *it;
			{
				jule::Ptr<_1d664721e_Data> _121917_k = _1d665c663_evalType(_self_.ptr(), _121821_g);;
				if ((_121917_k == nullptr)) {
					(*(_119950_d))=nullptr;
					return;;
				};
				{ jule::Slice<jule::Ptr<_1d667614e_InsGeneric>> &__jule_push_dest = (*(_120613_f))._field_Generics; __jule_push_dest.push(jule::new_ptr<_1d667614e_InsGeneric>(_1d667614e_InsGeneric{._field_Kind=(*(_121917_k))._field_Kind, })); };
			}
			_iter_next_1da0a3847:;
			++it;
			goto _iter_begin_1da0a3847;
		}
		_iter_end_1da0a3847:;
	};
	if (_1d6536608_IsBuiltin(_120613_f.ptr())) {
		return;;
	};
	if (_1d6655ccc_checkGenericFn(_self_, &(_120613_f), &((*((*((*(_119965_i))))._field_Expr))._field_Token), &((*((*(_119950_d))))._field_Model))) {
		(*((*((*(_119950_d))))._field_Kind))._field_Kind=jule::Trait<_1d667757e_Kind>(_120613_f, 1);
	} else {
		(*(_119950_d))=nullptr;
	};
}



inline jule::Ptr<_1d664721e_Data> _1d6656481_evalIndexing(jule::Ptr<_1d6648e13_Eval> _self_, jule::Ptr<_1d65076c8_IndexingExpr> _123836_i) {
	jule::Ptr<_1d6677a35_TypeKind> _123913_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=nullptr;
	__JULE_DEFER({
		(*(_self_))._field_prefix=_123913_prefix;
	});;
	jule::Ptr<_1d664721e_Data> _124313_d = _1d666635e_evalExprKind(_self_, (*((*(_123836_i))._field_Expr))._field_Kind);;
	if ((_124313_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_124313_d))._field_Decl) {
		_1d6655826_evalIdentDeclFromIndexing(_self_, &(_124313_d), &(_123836_i));
		return _124313_d;;
	};
	if ((_1d667b473_Fn((*(_124313_d))._field_Kind.ptr()) != nullptr)) {
		_1d6656140_evalFnGenericFromIndexing(_self_, &(_124313_d), &(_123836_i));
		return _124313_d;;
	};
	_1d664721e_Data _125913_oldData = (*(_124313_d));;
	jule::Ptr<_1d664721e_Data> _126113_index = _1d6667173_evalExpr(_self_, (*(_123836_i))._field_Index);;
	if ((_126113_index == nullptr)) {
		return nullptr;;
	};
	(*(_124313_d))._field_Decl=false;
	_1d6654b11_toIndexing(_self_.ptr(), &(_124313_d), &(_126113_index), &(_123836_i));
	if (_1d6647ae3_IsConst(_124313_d.ptr())) {
		(*(_124313_d))._field_Decl=false;
		(*(_124313_d))._field_Model=jule::Any((*(_124313_d))._field_Constant, &__jule_any_type19);
	} else if ((*(_124313_d))._field_Decl) {
		(*(_124313_d))._field_Decl=false;
	} else {
		(*(_124313_d))._field_Model=jule::Any(jule::new_ptr<_1d6526d68_IndexingExprModel>(_1d6526d68_IndexingExprModel{._field_Token=(*(_123836_i))._field_Token, ._field_Expr=jule::new_ptr<_1d664721e_Data>(_125913_oldData), ._field_Index=_126113_index}), &__jule_any_type45);
	};
	return _124313_d;;
}



inline __jule_tuple_x_1d664721e_Data__jule_tuple_x_1d664721e_Data _1d66567c2_evalSlicingExprs(jule::Ptr<_1d6648e13_Eval> _self_, jule::Ptr<_1d6507d38_SlicingExpr>* _129241_s) {
	__jule_tuple_x_1d664721e_Data__jule_tuple_x_1d664721e_Data __jule_func_result;
	jule::Ptr<_1d6677a35_TypeKind> _129313_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=nullptr;
	__JULE_DEFER({
		(*(_self_))._field_prefix=_129313_prefix;
	});;
	jule::Ptr<_1d664721e_Data> _129717_l = nullptr;;
	jule::Ptr<_1d664721e_Data> _129817_r = nullptr;;
	if (((*((*(_129241_s))))._field_Start != nullptr)) {
		_129717_l=_1d6667173_evalExpr(_self_, (*((*(_129241_s))))._field_Start);
		if ((_129717_l != nullptr)) {
			_1d665314d_checkIntegerIndexingByData(_self_.ptr(), &(_129717_l), (*((*(_129241_s))))._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	} else {
		_129717_l=jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=_1d675b09c_primInt, ._field_Constant=static__1d4321648_NewI64(0LL)});
		(*((*(_129717_l))._field_Constant))._field_Kind=jule::Str::lit("int", 3);
		(*(_129717_l))._field_Model=jule::Any((*(_129717_l))._field_Constant, &__jule_any_type19);
	};
	if (((*((*(_129241_s))))._field_To != nullptr)) {
		_129817_r=_1d6667173_evalExpr(_self_, (*((*(_129241_s))))._field_To);
		if ((_129817_r != nullptr)) {
			_1d665314d_checkIntegerIndexingByData(_self_.ptr(), &(_129817_r), (*((*(_129241_s))))._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	};
	__jule_func_result.__jule_result_arg0 = _129717_l;
	__jule_func_result.__jule_result_arg1 = _129817_r;
	return __jule_func_result;;
}



inline void _1d6656a7a_slicingArr(_1d6648e13_Eval* _self_, jule::Ptr<_1d664721e_Data>* _132830_d) {
	jule::Ptr<_1d6677a35_TypeKind> _132913_elemType = (*(_1d667ae56_Arr((*((*(_132830_d))))._field_Kind.ptr())))._field_Elem;;
	(*((*(_132830_d))))._field_Kind=jule::new_ptr<_1d6677a35_TypeKind>(_1d6677a35_TypeKind{._field_Kind=jule::Trait<_1d667757e_Kind>(jule::new_ptr<_1d6684b0d_Slc>(_1d6684b0d_Slc{._field_Elem=_132913_elemType}), 22)});
	(*((*(_132830_d))))._field_Lvalue=false;
	(*((*(_132830_d))))._field_Mutable=((*((*(_132830_d))))._field_Mutable || (!(_1d66793b6_Mutable(_132913_elemType.ptr()))));
}



inline void _1d6656e98_slicingStr(_1d6648e13_Eval* _self_, jule::Ptr<_1d664721e_Data>* _134330_d, jule::Ptr<_1d664721e_Data>* _134341_l, jule::Ptr<_1d664721e_Data>* _134352_r) {
	(*((*(_134330_d))))._field_Lvalue=false;
	(*((*(_134330_d))))._field_Mutable=true;
	if ((!(_1d6647ae3_IsConst((*(_134330_d)).ptr())))) {
		return;;
	};
	if ((((*(_134341_l)) == nullptr) || ((*(_134352_r)) == nullptr))) {
		(*((*(_134330_d))))._field_Constant=nullptr;
		(*((*(_134330_d))))._field_untyped=false;
		return;;
	};
	if ((_1d6647ae3_IsConst((*(_134341_l)).ptr()) && _1d6647ae3_IsConst((*(_134352_r)).ptr()))) {
		jule::I64 _135713_left = _1d432389d_AsI64((*((*(_134341_l))))._field_Constant.ptr());;
		if ((_135713_left < 0LL)) {
			return;;
		};
		jule::Str _136213_s = _1d4323381_ReadStr((*((*(_134330_d))))._field_Constant.ptr());;
		jule::I64 _136317_right = static_cast<jule::I64>(0LL);;
		if (((*(_134352_r)) == nullptr)) {
			_136317_right=static_cast<jule::I64>(static_cast<jule::I64>(_136213_s.len()));
		} else {
			_136317_right=static_cast<jule::I64>(_1d432389d_AsI64((*((*(_134352_r))))._field_Constant.ptr()));
		};
		if ((_135713_left > _136317_right)) {
			return;;
		};
		_1d432498c_SetStr((*((*(_134330_d))))._field_Constant.ptr(), _136213_s.slice(_135713_left, _136317_right));
		(*((*(_134330_d))))._field_Decl=true;
	} else {
		(*((*(_134330_d))))._field_Constant=nullptr;
		(*((*(_134330_d))))._field_untyped=false;
	};
}



inline void _1d6657471_checkSlicing(_1d6648e13_Eval* _self_, jule::Ptr<_1d664721e_Data>* _138136_d, jule::Ptr<_1d664721e_Data>* _138147_l, jule::Ptr<_1d664721e_Data>* _138158_r, jule::Ptr<_1d6507d38_SlicingExpr>* _138169_s) {
	{
		
		if ((_1d667ae56_Arr((*((*(_138136_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1da0be0d2:;
			{
				_1d6656a7a_slicingArr(_self_, _138136_d);
				return;;
			}
		}
		else if ((_1d667b1dc_Slc((*((*(_138136_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1da0be159:;
			{
				return;;
			}
		}
		else if ((_1d667a186_Prim((*((*(_138136_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1da0be1d1:;
			{
				jule::Ptr<_1d668060e_Prim> _138913_prim = _1d667a186_Prim((*((*(_138136_d))))._field_Kind.ptr());;
				{
					
					if (_1d6683a96_IsStr(_138913_prim.ptr())) {
						_case_begin_1da0c1953:;
						{
							_1d6656e98_slicingStr(_self_, _138136_d, _138147_l, _138158_r);
							return;;
						}
					}
					_match_end_1da0c18a9:;
				};
			}
		}
		_match_end_1da0bdeb1:;
	};
	_1d6649463_pushErr(_self_, (*((*(_138169_s))))._field_Token, jule::Str::lit("type @ is not support slicing", 29), jule::Slice<jule::Any>::make({jule::Any(_1d6677ded_Str((*((*(_138136_d))))._field_Kind.ptr()), &__jule_any_type4)}));
}



inline jule::Ptr<_1d664721e_Data> _1d66577b2_evalSlicing(jule::Ptr<_1d6648e13_Eval> _self_, jule::Ptr<_1d6507d38_SlicingExpr> _140035_s) {
	jule::Ptr<_1d664721e_Data> _140113_d = _1d6667173_evalExpr(_self_, (*(_140035_s))._field_Expr);;
	if ((_140113_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1d664721e_Data> _140613_l;;
	jule::Ptr<_1d664721e_Data> _140620_r;;
	({
		__jule_tuple_x_1d664721e_Data__jule_tuple_x_1d664721e_Data __jule_assign_result = _1d66567c2_evalSlicingExprs(_self_, &(_140035_s));
		_140613_l = __jule_assign_result.__jule_result_arg0;
		_140620_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_140613_l == nullptr)) {
		return _140113_d;;
	};
	(*(_140113_d))._field_Decl=false;
	_1d6657471_checkSlicing(_self_.ptr(), &(_140113_d), &(_140613_l), &(_140620_r), &(_140035_s));
	if (_1d6647ae3_IsConst(_140113_d.ptr())) {
		(*(_140113_d))._field_Decl=false;
		(*(_140113_d))._field_Model=jule::Any((*(_140113_d))._field_Constant, &__jule_any_type19);
	} else if ((*(_140113_d))._field_Decl) {
		(*(_140113_d))._field_Decl=false;
	} else {
		jule::Ptr<_1d6528155_SlicingExprModel> _142417_model = jule::new_ptr<_1d6528155_SlicingExprModel>(_1d6528155_SlicingExprModel{._field_Token=(*(_140035_s))._field_Token, ._field_Expr=(*(_140113_d))._field_Model, ._field_Left=(*(_140613_l))._field_Model, });;
		if ((_140620_r != nullptr)) {
			(*(_142417_model))._field_Right=(*(_140620_r))._field_Model;
		};
		(*(_140113_d))._field_Model=jule::Any(_142417_model, &__jule_any_type91);
	};
	return _140113_d;;
}



inline void _1d6657bd0_castPtr(_1d6648e13_Eval* _self_, jule::Ptr<_1d6677a35_TypeKind> _143730_t, jule::Ptr<_1d664721e_Data> _143748_d, jule::Ptr<_1d64d5cd3_Token> _143758_errorToken) {
	(*(_143748_d))._field_Constant=nullptr;
	(*(_143748_d))._field_untyped=false;
	jule::Ptr<_1d668413a_Sptr> _14409_sptr = _1d667a41c_Sptr((*(_143748_d))._field_Kind.ptr());;
	if ((_14409_sptr != nullptr)) {
		if ((!(_1d667823e_Equal((*(_1d667a6a3_Ptr(_143730_t.ptr())))._field_Elem, (*(_14409_sptr))._field_Elem)))) {
			_1d6649463_pushErr(_self_, _143758_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1d6677ded_Str((*(_143748_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1d6677ded_Str(_143730_t.ptr()), &__jule_any_type4)}));
		};
		return;;
	};
	if ((!(_1d6649e58_isUnsafe(_self_)))) {
		_1d6649463_pushErr(_self_, _143758_errorToken, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1d668060e_Prim> _14539_prim = _1d667a186_Prim((*(_143748_d))._field_Kind.ptr());;
	if (((_1d667a6a3_Ptr((*(_143748_d))._field_Kind.ptr()) == nullptr) && ((_14539_prim == nullptr) || (!(_1d4320625_IsInt(_1d6680950_Str(_14539_prim.ptr()))))))) {
		_1d6649463_pushErr(_self_, _143758_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1d6677ded_Str((*(_143748_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1d6677ded_Str(_143730_t.ptr()), &__jule_any_type4)}));
	};
}



inline void _1d66580ed_castStruct(_1d6648e13_Eval* _self_, jule::Ptr<_1d6677a35_TypeKind> _145933_t, jule::Ptr<_1d664721e_Data> _145951_d, jule::Ptr<_1d64d5cd3_Token> _145961_errorToken) {
	(*(_145951_d))._field_Constant=nullptr;
	(*(_145951_d))._field_untyped=false;
	jule::Ptr<_1d654554b_Trait> _146213_tr = _1d667b990_Trait((*(_145951_d))._field_Kind.ptr());;
	if ((_146213_tr == nullptr)) {
		_1d6649463_pushErr(_self_, _145961_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1d6677ded_Str((*(_145951_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1d6677ded_Str(_145933_t.ptr()), &__jule_any_type4)}));
		return;;
	};
	jule::Ptr<_1d652005e_StructIns> _146813_s = _1d667b709_Struct(_145933_t.ptr());;
	_1da0d2216_pushReference(_self_, &(_146813_s));
	if ((!(_1d651d920_IsImplements((*(_146813_s))._field_Decl.ptr(), _146213_tr)))) {
		_1d6649463_pushErr(_self_, _145961_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1d6677ded_Str((*(_145951_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1d6677ded_Str(_145933_t.ptr()), &__jule_any_type4)}));
	};
}



inline void _1d665851b_castRef(_1d6648e13_Eval* _self_, jule::Ptr<_1d6677a35_TypeKind> _147630_t, jule::Ptr<_1d664721e_Data> _147648_d, jule::Ptr<_1d64d5cd3_Token> _147658_errorToken) {
	(*(_147648_d))._field_Constant=nullptr;
	(*(_147648_d))._field_untyped=false;
	jule::Ptr<_1d668413a_Sptr> _147913_sptr = _1d667a41c_Sptr(_147630_t.ptr());;
	jule::Ptr<_1d6687902_Ptr> _148113_ptr = _1d667a6a3_Ptr((*(_147648_d))._field_Kind.ptr());;
	if (((_148113_ptr != nullptr) && _1d667823e_Equal((*(_147913_sptr))._field_Elem, (*(_148113_ptr))._field_Elem))) {
		if ((!(_1d6649e58_isUnsafe(_self_)))) {
			_1d6649463_pushErr(_self_, _147658_errorToken, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_1d667b709_Struct((*(_147913_sptr))._field_Elem.ptr()) != nullptr)) {
		_1d66580ed_castStruct(_self_, (*(_147913_sptr))._field_Elem, _147648_d, _147658_errorToken);
		return;;
	};
	_1d6649463_pushErr(_self_, _147658_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1d6677ded_Str((*(_147648_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1d6677ded_Str(_147630_t.ptr()), &__jule_any_type4)}));
}



inline void _1d6658939_castSlc(_1d6648e13_Eval* _self_, jule::Ptr<_1d6677a35_TypeKind> _149930_t, jule::Ptr<_1d664721e_Data> _149948_d, jule::Ptr<_1d64d5cd3_Token> _149958_errorToken) {
	jule::Ptr<_1d4321208_Const> _15009_c = (*(_149948_d))._field_Constant;;
	(*(_149948_d))._field_Constant=nullptr;
	(*(_149948_d))._field_untyped=false;
	if ((_1d667a939_Enum((*(_149948_d))._field_Kind.ptr()) != nullptr)) {
		if (((_1d667a186_Prim((*((*(_1d667a939_Enum((*(_149948_d))._field_Kind.ptr())))._field_Kind))._field_Kind.ptr()) == nullptr) || (!(_1d6683a96_IsStr(_1d667a186_Prim((*((*(_1d667a939_Enum((*(_149948_d))._field_Kind.ptr())))._field_Kind))._field_Kind.ptr()).ptr()))))) {
			_1d6649463_pushErr(_self_, _149958_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1d6677ded_Str((*(_149948_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1d6677ded_Str(_149930_t.ptr()), &__jule_any_type4)}));
			return;;
		};
	} else if (((_1d667a186_Prim((*(_149948_d))._field_Kind.ptr()) == nullptr) || (!(_1d6683a96_IsStr(_1d667a186_Prim((*(_149948_d))._field_Kind.ptr()).ptr()))))) {
		_1d6649463_pushErr(_self_, _149958_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1d6677ded_Str((*(_149948_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1d6677ded_Str(_149930_t.ptr()), &__jule_any_type4)}));
		return;;
	};
	_149930_t=(*(_1d667b1dc_Slc(_149930_t.ptr())))._field_Elem;
	jule::Ptr<_1d668060e_Prim> _15159_prim = _1d667a186_Prim(_149930_t.ptr());;
	if (((_15159_prim == nullptr) || ((!(_1d6682006_IsU8(_15159_prim.ptr()))) && (!(_1d66819d9_IsI32(_15159_prim.ptr())))))) {
		_1d6649463_pushErr(_self_, _149958_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1d6677ded_Str((*(_149948_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1d6677ded_Str(_149930_t.ptr()), &__jule_any_type4)}));
		return;;
	};
	if ((_15009_c != nullptr)) {
		{
			
			if (_1d6682006_IsU8(_15159_prim.ptr())) {
				_case_begin_1da0e57ac:;
				{
					jule::Str _152517_s = _1d4323381_ReadStr(_15009_c.ptr());;
					jule::Ptr<_1d65268b2_SliceExprModel> _152621_model = jule::new_ptr<_1d65268b2_SliceExprModel>(_1d65268b2_SliceExprModel{._field_ElemKind=_149930_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _152517_s.len(), jule::Any(nullptr))});;
					{
						auto expr = &(_152517_s);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1da0e714e:;
						if (it != expr_end) {
							jule::U8 *_153024_b = it;
							{
								jule::Ptr<_1d4321208_Const> _153125_bc = static__1d4321912_NewU64(static_cast<jule::U64>(static_cast<jule::U64>((*(_153024_b)))));;
								(*(_153125_bc))._field_Kind=(*(_15159_prim))._field_Kind;
								{ jule::Slice<jule::Any> &__jule_push_dest = (*(_152621_model))._field_Elems; __jule_push_dest.push(jule::Any(_153125_bc, &__jule_any_type19)); };
							}
							_iter_next_1da0e714e:;
							++it;
							goto _iter_begin_1da0e714e;
						}
						_iter_end_1da0e714e:;
					};
					(*(_149948_d))._field_Model=jule::Any(_152621_model, &__jule_any_type76);
					(*(_149948_d))._field_Decl=true;
				}
			}
			else if (_1d66819d9_IsI32(_15159_prim.ptr())) {
				_case_begin_1da0e5834:;
				{
					jule::Slice<jule::I32> _153817_runes = static_cast<jule::Slice<jule::I32>>(_1d4323381_ReadStr(_15009_c.ptr()));;
					jule::Ptr<_1d65268b2_SliceExprModel> _153921_model = jule::new_ptr<_1d65268b2_SliceExprModel>(_1d65268b2_SliceExprModel{._field_ElemKind=_149930_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _153817_runes.len(), jule::Any(nullptr))});;
					{
						auto expr = &(_153817_runes);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1da0ea4b5:;
						if (it != expr_end) {
							jule::I32 *_154324_r = it;
							{
								jule::Ptr<_1d4321208_Const> _154425_rc = static__1d4321648_NewI64(static_cast<jule::I64>(static_cast<jule::I64>((*(_154324_r)))));;
								(*(_154425_rc))._field_Kind=(*(_15159_prim))._field_Kind;
								{ jule::Slice<jule::Any> &__jule_push_dest = (*(_153921_model))._field_Elems; __jule_push_dest.push(jule::Any(_154425_rc, &__jule_any_type19)); };
							}
							_iter_next_1da0ea4b5:;
							++it;
							goto _iter_begin_1da0ea4b5;
						}
						_iter_end_1da0ea4b5:;
					};
					(*(_149948_d))._field_Model=jule::Any(_153921_model, &__jule_any_type76);
					(*(_149948_d))._field_Decl=true;
				}
			}
			_match_end_1da0e569c:;
		};
	};
}



inline void _1d6658c9c_castStr(_1d6648e13_Eval* _self_, jule::Ptr<_1d664721e_Data> _155430_d, jule::Ptr<_1d64d5cd3_Token> _155440_errorToken) {
	if ((_1d667a939_Enum((*(_155430_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1d6547c57_Enum> _155617_e = _1d667a939_Enum((*(_155430_d))._field_Kind.ptr());;
		if (((_1d667a186_Prim((*((*(_155617_e))._field_Kind))._field_Kind.ptr()) != nullptr) && _1d6683a96_IsStr(_1d667a186_Prim((*((*(_155617_e))._field_Kind))._field_Kind.ptr()).ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1d4321208_Const> _15629_c = (*(_155430_d))._field_Constant;;
	(*(_155430_d))._field_Constant=nullptr;
	(*(_155430_d))._field_untyped=false;
	if ((_1d667a186_Prim((*(_155430_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1d668060e_Prim> _156613_prim = _1d667a186_Prim((*(_155430_d))._field_Kind.ptr());;
		if (((!(_1d6682006_IsU8(_156613_prim.ptr()))) && (!(_1d66819d9_IsI32(_156613_prim.ptr()))))) {
			_1d6649463_pushErr(_self_, _155440_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1d6677ded_Str((*(_155430_d))._field_Kind.ptr()), &__jule_any_type4)}));
			return;;
		};
		if ((_15629_c != nullptr)) {
			{
				
				if (_1d6682006_IsU8(_156613_prim.ptr())) {
					_case_begin_1da102d6e:;
					{
						(*(_155430_d))._field_Constant=static__1d4321e95_NewStr(jule::Str::from_byte(static_cast<jule::U8>(_1d4323b34_AsU64(_15629_c.ptr()))));
						(*(_155430_d))._field_Model=jule::Any((*(_155430_d))._field_Constant, &__jule_any_type19);
						(*(_155430_d))._field_Decl=true;
					}
				}
				else if (_1d66819d9_IsI32(_156613_prim.ptr())) {
					_case_begin_1da102de6:;
					{
						(*(_155430_d))._field_Constant=static__1d4321e95_NewStr(jule::Str::from_rune(static_cast<jule::I32>(_1d432389d_AsI64(_15629_c.ptr()))));
						(*(_155430_d))._field_Model=jule::Any((*(_155430_d))._field_Constant, &__jule_any_type19);
						(*(_155430_d))._field_Decl=true;
					}
				}
				_match_end_1da102c70:;
			};
		};
		return;;
	};
	jule::Ptr<_1d6684b0d_Slc> _158713_s = _1d667b1dc_Slc((*(_155430_d))._field_Kind.ptr());;
	if ((_158713_s == nullptr)) {
		_1d6649463_pushErr(_self_, _155440_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1d6677ded_Str((*(_155430_d))._field_Kind.ptr()), &__jule_any_type4)}));
		return;;
	};
	jule::Ptr<_1d6677a35_TypeKind> _159313_t = (*(_158713_s))._field_Elem;;
	jule::Ptr<_1d668060e_Prim> _15949_prim = _1d667a186_Prim(_159313_t.ptr());;
	if (((_15949_prim == nullptr) || ((!(_1d6682006_IsU8(_15949_prim.ptr()))) && (!(_1d66819d9_IsI32(_15949_prim.ptr())))))) {
		_1d6649463_pushErr(_self_, _155440_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1d6677ded_Str((*(_155430_d))._field_Kind.ptr()), &__jule_any_type4)}));
		return;;
	};
}



inline void _1d66591ba_castInt(_1d6648e13_Eval* _self_, jule::Ptr<_1d6677a35_TypeKind> _160130_t, jule::Ptr<_1d664721e_Data> _160148_d, jule::Ptr<_1d64d5cd3_Token> _160158_errorToken) {
	if (_1d6647ae3_IsConst(_160148_d.ptr())) {
		jule::Ptr<_1d668060e_Prim> _160313_prim = _1d667a186_Prim(_160130_t.ptr());;
		{
			
			if (_1d432004d_IsSigInt((*(_160313_prim))._field_Kind)) {
				_case_begin_1da10adee:;
				{
					_1d4324173_SetI64((*(_160148_d))._field_Constant.ptr(), static_cast<jule::I64>(_1d432389d_AsI64((*(_160148_d))._field_Constant.ptr())));
				}
			}
			else if (_1d432035b_IsUnsigInt((*(_160313_prim))._field_Kind)) {
				_case_begin_1da10ae76:;
				{
					_1d432442b_SetU64((*(_160148_d))._field_Constant.ptr(), static_cast<jule::U64>(_1d4323b34_AsU64((*(_160148_d))._field_Constant.ptr())));
				}
			}
			_match_end_1da10ad44:;
		};
	} else {
		(*(_160148_d))._field_Constant=nullptr;
		(*(_160148_d))._field_untyped=false;
	};
	if ((_1d667a939_Enum((*(_160148_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1d6547c57_Enum> _161613_e = _1d667a939_Enum((*(_160148_d))._field_Kind.ptr());;
		if (_1d4320c30_IsNum(_1d6677ded_Str((*((*(_161613_e))._field_Kind))._field_Kind.ptr()))) {
			return;;
		};
	};
	if ((_1d667a41c_Sptr((*(_160148_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1d668060e_Prim> _162313_prim = _1d667a186_Prim(_160130_t.ptr());;
		if ((!(_1d6683579_IsUintptr(_162313_prim.ptr())))) {
			_1d6649463_pushErr(_self_, _160158_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1d6677ded_Str((*(_160148_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1d6677ded_Str(_160130_t.ptr()), &__jule_any_type4)}));
		};
		return;;
	};
	if ((_1d667a6a3_Ptr((*(_160148_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1d668060e_Prim> _163013_prim = _1d667a186_Prim(_160130_t.ptr());;
		if (_1d6683579_IsUintptr(_163013_prim.ptr())) {
		} else if ((!(_1d6649e58_isUnsafe(_self_)))) {
			_1d6649463_pushErr(_self_, _160158_errorToken, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		};
		return;;
	};
	jule::Ptr<_1d668060e_Prim> _16399_prim = _1d667a186_Prim((*(_160148_d))._field_Kind.ptr());;
	if (((_16399_prim != nullptr) && _1d4320c30_IsNum(_1d6680950_Str(_16399_prim.ptr())))) {
		return;;
	};
	_1d6649463_pushErr(_self_, _160158_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1d6677ded_Str((*(_160148_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1d6677ded_Str(_160130_t.ptr()), &__jule_any_type4)}));
}



inline void _1d66595d8_castNum(_1d6648e13_Eval* _self_, jule::Ptr<_1d6677a35_TypeKind> _164730_t, jule::Ptr<_1d664721e_Data> _164748_d, jule::Ptr<_1d64d5cd3_Token> _164758_errorToken) {
	if (_1d6647ae3_IsConst(_164748_d.ptr())) {
		jule::Ptr<_1d668060e_Prim> _164913_prim = _1d667a186_Prim(_164730_t.ptr());;
		{
			
			if (_1d4320966_IsFloat((*(_164913_prim))._field_Kind)) {
				_case_begin_1da116ed7:;
				{
					_1d4324c45_SetF64((*(_164748_d))._field_Constant.ptr(), static_cast<jule::F64>(_1d4323dba_AsF64((*(_164748_d))._field_Constant.ptr())));
				}
			}
			else if (_1d432004d_IsSigInt((*(_164913_prim))._field_Kind)) {
				_case_begin_1da11705e:;
				{
					_1d4324173_SetI64((*(_164748_d))._field_Constant.ptr(), static_cast<jule::I64>(_1d432389d_AsI64((*(_164748_d))._field_Constant.ptr())));
				}
			}
			else if (_1d432035b_IsUnsigInt((*(_164913_prim))._field_Kind)) {
				_case_begin_1da1170d6:;
				{
					_1d432442b_SetU64((*(_164748_d))._field_Constant.ptr(), static_cast<jule::U64>(_1d4323b34_AsU64((*(_164748_d))._field_Constant.ptr())));
				}
			}
			_match_end_1da116e1b:;
		};
	} else {
		(*(_164748_d))._field_Constant=nullptr;
		(*(_164748_d))._field_untyped=false;
	};
	if ((_1d667a939_Enum((*(_164748_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1d6547c57_Enum> _166413_e = _1d667a939_Enum((*(_164748_d))._field_Kind.ptr());;
		if (_1d4320c30_IsNum(_1d6677ded_Str((*((*(_166413_e))._field_Kind))._field_Kind.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1d668060e_Prim> _16709_prim = _1d667a186_Prim((*(_164748_d))._field_Kind.ptr());;
	if (((_16709_prim != nullptr) && _1d4320c30_IsNum(_1d6680950_Str(_16709_prim.ptr())))) {
		return;;
	};
	_1d6649463_pushErr(_self_, _164758_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1d6677ded_Str((*(_164748_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1d6677ded_Str(_164730_t.ptr()), &__jule_any_type4)}));
}



inline void _1d6659a06_castPrim(_1d6648e13_Eval* _self_, jule::Ptr<_1d6677a35_TypeKind> _167831_t, jule::Ptr<_1d664721e_Data> _167849_d, jule::Ptr<_1d64d5cd3_Token> _167859_errorToken) {
	jule::Ptr<_1d668060e_Prim> _16799_prim = _1d667a186_Prim(_167831_t.ptr());;
	{
		
		if (_1d6683d2c_IsAny(_16799_prim.ptr())) {
			_case_begin_1da12040d:;
			{
				(*(_167849_d))._field_Constant=nullptr;
				(*(_167849_d))._field_untyped=false;
			}
		}
		else if (_1d6683a96_IsStr(_16799_prim.ptr())) {
			_case_begin_1da1200cd:;
			{
				_1d6658c9c_castStr(_self_, _167849_d, _167859_errorToken);
			}
		}
		else if (_1d4320625_IsInt(_1d6680950_Str(_16799_prim.ptr()))) {
			_case_begin_1da120144:;
			{
				_1d66591ba_castInt(_self_, _167831_t, _167849_d, _167859_errorToken);
			}
		}
		else if (_1d4320c30_IsNum(_1d6680950_Str(_16799_prim.ptr()))) {
			_case_begin_1da1201aa:;
			{
				_1d66595d8_castNum(_self_, _167831_t, _167849_d, _167859_errorToken);
			}
		}
		else {
			_case_begin_1da120067:;
			{
				_1d6649463_pushErr(_self_, _167859_errorToken, jule::Str::lit("type @ not supports casting", 27), jule::Slice<jule::Any>::make({jule::Any(_1d6677ded_Str(_167831_t.ptr()), &__jule_any_type4)}));
			}
		}
		_match_end_1da120001:;
	};
}



inline void _1d6659d69_castConstant(_1d6648e13_Eval* _self_, jule::Ptr<_1d6677a35_TypeKind>* _169636_t, jule::Ptr<_1d664721e_Data>* _169655_d) {
	if ((((*(_169655_d)) == nullptr) || (!(_1d6647ae3_IsConst((*(_169655_d)).ptr()))))) {
		return;;
	};
	jule::Ptr<_1d668060e_Prim> _17009_prim = _1d667a186_Prim((*(_169636_t)).ptr());;
	_1d6673844_castConstByType(&((*(_17009_prim))._field_Kind), _169655_d);
	(*((*(_169655_d))))._field_Model=jule::Any((*((*(_169655_d))))._field_Constant, &__jule_any_type19);
}



inline void _1d665a287_castTypeEnum(_1d6648e13_Eval* _self_, jule::Ptr<_1d6677a35_TypeKind>* _170536_t, jule::Ptr<_1d664721e_Data>* _170555_d, jule::Ptr<_1d64d5cd3_Token>* _170570_errorToken) {
	jule::I64 _17069_n = (*((*(_self_))._field_s))._field_errors.len();;
	if ((!(_1d65c1d36_checkTypeCompatibility((*(_self_))._field_s, &((*((*(_170555_d))))._field_Kind), _170536_t, _170570_errorToken)))) {
		(*((*(_self_))._field_s))._field_errors=(*((*(_self_))._field_s))._field_errors.slice(0LL, _17069_n);
		_1d6649463_pushErr(_self_, (*(_170570_errorToken)), jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1d6677ded_Str((*((*(_170555_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1d6677ded_Str((*(_170536_t)).ptr()), &__jule_any_type4)}));
	};
	(*((*(_170555_d))))._field_Constant=nullptr;
	(*((*(_170555_d))))._field_untyped=false;
}



inline void _1d665a6a5_castTypeEnumT(_1d6648e13_Eval* _self_, jule::Ptr<_1d6677a35_TypeKind>* _171537_t, jule::Ptr<_1d664721e_Data>* _171556_d, jule::Ptr<_1d64d5cd3_Token>* _171571_errorToken) {
	jule::I64 _17169_n = (*((*(_self_))._field_s))._field_errors.len();;
	if ((!(_1d65c1d36_checkTypeCompatibility((*(_self_))._field_s, _171537_t, &((*((*(_171556_d))))._field_Kind), _171571_errorToken)))) {
		(*((*(_self_))._field_s))._field_errors=(*((*(_self_))._field_s))._field_errors.slice(0LL, _17169_n);
		_1d6649463_pushErr(_self_, (*(_171571_errorToken)), jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1d6677ded_Str((*((*(_171556_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1d6677ded_Str((*(_171537_t)).ptr()), &__jule_any_type4)}));
	};
	(*((*(_171556_d))))._field_Constant=nullptr;
	(*((*(_171556_d))))._field_untyped=false;
}



inline jule::Ptr<_1d664721e_Data> _1d665ab5b_evalCastByTypeNData(_1d6648e13_Eval* _self_, jule::Ptr<_1d6677a35_TypeKind> _172542_t, jule::Ptr<_1d664721e_Data> _172560_d, jule::Ptr<_1d64d5cd3_Token> _172574_errorToken) {
	if (((_172560_d != nullptr) && (*(_172560_d))._field_Decl)) {
		_1d6649463_pushErr(_self_, _172574_errorToken, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		
		if (_1d66475c6_IsNil(_172560_d.ptr())) {
			_case_begin_1da12cb79:;
			{
				if ((!(_1d66798d3_NilCompatible(_172542_t.ptr())))) {
					_1d6649463_pushErr(_self_, _172574_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("<nil>", 5), &__jule_any_type4),jule::Any(_1d6677ded_Str(_172542_t.ptr()), &__jule_any_type4)}));
				};
				(*(_172560_d))._field_Constant=nullptr;
				(*(_172560_d))._field_untyped=false;
			}
		}
		else if (((_1d667a186_Prim((*(_172560_d))._field_Kind.ptr()) != nullptr) && _1d6683d2c_IsAny(_1d667a186_Prim((*(_172560_d))._field_Kind.ptr()).ptr()))) {
			_case_begin_1da12c937:;
			{
				if ((_1d667a939_Enum(_172542_t.ptr()) != nullptr)) {
					_1d6649463_pushErr(_self_, _172574_errorToken, jule::Str::lit("enum cannot casted from any type", 32), jule::Slice<jule::Any>());
					_1d66497c6_pushSuggestion(_self_, jule::Str::lit("try cast to type of enum fields instead of enum", 47), jule::Slice<jule::Any>());
				} else if ((_1d667abc0_TypeEnum(_172542_t.ptr()) != nullptr)) {
					_1d6649463_pushErr(_self_, _172574_errorToken, jule::Str::lit("enum cannot casted from any type", 32), jule::Slice<jule::Any>());
				};
				(*(_172560_d))._field_Constant=nullptr;
				(*(_172560_d))._field_untyped=false;
			}
		}
		else if ((_1d667abc0_TypeEnum((*(_172560_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1da12c99d:;
			{
				_1d665a287_castTypeEnum(_self_, &(_172542_t), &(_172560_d), &(_172574_errorToken));
			}
		}
		else if ((_1d667abc0_TypeEnum(_172542_t.ptr()) != nullptr)) {
			_case_begin_1da12d63b:;
			{
				_1d665a6a5_castTypeEnumT(_self_, &(_172542_t), &(_172560_d), &(_172574_errorToken));
			}
		}
		else if ((_1d667a6a3_Ptr(_172542_t.ptr()) != nullptr)) {
			_case_begin_1da12d6a2:;
			{
				_1d6657bd0_castPtr(_self_, _172542_t, _172560_d, _172574_errorToken);
			}
		}
		else if ((_1d667a41c_Sptr(_172542_t.ptr()) != nullptr)) {
			_case_begin_1da12d718:;
			{
				_1d665851b_castRef(_self_, _172542_t, _172560_d, _172574_errorToken);
			}
		}
		else if ((_1d667b1dc_Slc(_172542_t.ptr()) != nullptr)) {
			_case_begin_1da12d77e:;
			{
				_1d6658939_castSlc(_self_, _172542_t, _172560_d, _172574_errorToken);
			}
		}
		else if ((_1d667b709_Struct(_172542_t.ptr()) != nullptr)) {
			_case_begin_1da12d7e5:;
			{
				_1d66580ed_castStruct(_self_, _172542_t, _172560_d, _172574_errorToken);
			}
		}
		else if ((_1d667a186_Prim(_172542_t.ptr()) != nullptr)) {
			_case_begin_1da12d85b:;
			{
				_1d6659a06_castPrim(_self_, _172542_t, _172560_d, _172574_errorToken);
				_1d6659d69_castConstant(_self_, &(_172542_t), &(_172560_d));
			}
		}
		else {
			_case_begin_1da12c816:;
			{
				_1d6649463_pushErr(_self_, _172574_errorToken, jule::Str::lit("type @ not supports casting", 27), jule::Slice<jule::Any>::make({jule::Any(_1d6677ded_Str(_172542_t.ptr()), &__jule_any_type4)}));
				_172560_d=nullptr;
			}
		}
		_match_end_1da12c7b1:;
	};
	if ((_172560_d == nullptr)) {
		return nullptr;;
	};
	(*(_172560_d))._field_Mutable=((*(_172560_d))._field_Mutable || (!(_1d66793b6_Mutable((*(_172560_d))._field_Kind.ptr()))));
	if (((!((*(_172560_d))._field_Decl)) && ((_1d667a939_Enum((*(_172560_d))._field_Kind.ptr()) == nullptr) || (!(_1d667823e_Equal((*((*(_1d667a939_Enum((*(_172560_d))._field_Kind.ptr())))._field_Kind))._field_Kind, _172542_t)))))) {
		_1d6672c94_applyCastKind(&(_172560_d), &(_172542_t));
		(*((*(_172560_d))._field_Model.cast_ptr<_1d6525b36_CastingExprModel>(&__jule_any_type92)))._field_Token=_172574_errorToken;
	} else {
		(*(_172560_d))._field_Kind=_172542_t;
	};
	(*(_172560_d))._field_Decl=false;
	(*(_172560_d))._field_Lvalue=false;
	(*(_172560_d))._field_untyped=false;
	if (_1d6647ae3_IsConst(_172560_d.ptr())) {
		(*((*(_172560_d))._field_Constant))._field_Kind=(*(_1d667a186_Prim(_172542_t.ptr())))._field_Kind;
	};
	return _172560_d;;
}



inline jule::Ptr<_1d664721e_Data> _1d665b112_evalCastT(jule::Ptr<_1d6648e13_Eval> _self_, jule::Ptr<_1d6677a35_TypeKind>* _179834_t, jule::Ptr<_1d6500715_Expr>* _179853_e, jule::Ptr<_1d64d5cd3_Token>* _179868_et) {
	jule::Ptr<_1d6677a35_TypeKind> _179913_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=nullptr;
	__JULE_DEFER({
		(*(_self_))._field_prefix=_179913_prefix;
	});;
	if ((_1d667b1dc_Slc((*(_179834_t)).ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*((*(_179853_e))))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type93) {
				_case_begin_1da13d65c:;
				{
					(*(_self_))._field_prefix=(*(_179834_t));
				}
			}
			_match_end_1da13d5e6:;
		};
	};
	jule::Ptr<_1d664721e_Data> _180813_d = _1d6667173_evalExpr(_self_, (*(_179853_e)));;
	if (((_180813_d == nullptr) || ((*(_self_))._field_prefix != nullptr))) {
		return _180813_d;;
	};
	return _1d665ab5b_evalCastByTypeNData(_self_.ptr(), (*(_179834_t)), _180813_d, (*(_179868_et)));;
}



inline jule::Ptr<_1d664721e_Data> _1d665b453_evalCast(jule::Ptr<_1d6648e13_Eval> _self_, jule::Ptr<_1d6503075_CastExpr> _181532_c) {
	jule::Ptr<_1d667ec07_TypeSymbol> _181613_t = _1d6539bc2_buildType((*(_181532_c))._field_Kind);;
	jule::Bool _18179_ok = _1d65be53c_checkType((*(_self_))._field_s, &(_181613_t), (*(_self_))._field_lookup);;
	if ((!(_18179_ok))) {
		return nullptr;;
	};
	return _1d665b112_evalCastT(_self_, &((*(_181613_t))._field_Kind), &((*(_181532_c))._field_Expr), &((*((*(_181532_c))._field_Kind))._field_Token));;
}



inline jule::Ptr<_1d664721e_Data> _1d665b794_evalNsSelection(_1d6648e13_Eval* _self_, jule::Ptr<_1d650344e_NsSelectionExpr> _182434_s) {
	jule::Str _18259_path = _1d66945ac_buildLinkPathByTokens(&((*(_182434_s))._field_Ns));;
	jule::Ptr<_1d659590e_ImportInfo> _182613_imp = _1d669756b_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1d6695855_SelectPackage((*(_self_))._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1d659590e_ImportInfo>)>([=](jule::Ptr<_1d659590e_ImportInfo> _182649_imp) mutable -> jule::Bool {
		if ((((*(_182434_s))._field_Ns.len() == 1LL) && ((*(_182649_imp))._field_Alias == _18259_path))) {
			return true;;
		};
		return (((*(_182649_imp))._field_LinkPath == _18259_path) && _1d6598527_isAccessibleViaSelection(_182649_imp.ptr()));;
	}));;
	if ((_182613_imp == nullptr)) {
		_1d6649463_pushErr(_self_, (*(_182434_s))._field_Ns[0LL], jule::Str::lit("undefined namespace: @", 22), jule::Slice<jule::Any>::make({jule::Any(_18259_path, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Trait<_1d669756b_Lookup> _183813_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait<_1d669756b_Lookup>(_182613_imp, 1);
	;
	_1d6649bc2_disallowBuiltin(_self_);
	jule::Any _184313_def = _1d664c1d0_getDef(_self_, &((*((*(_182434_s))._field_Ident))._field_Kind), false);;
	_1d66499c4_allowBuiltin(_self_);
	(*(_self_))._field_lookup=_183813_lookup;
	jule::Ptr<_1d664721e_Data> _184613_d = _1d665138d_evalDef(_self_, &(_184313_def), (*(_182434_s))._field_Ident);;
	return _184613_d;;
}



inline jule::Ptr<_1d664721e_Data> _1d665bc4a_evalStructLitExplicit(jule::Ptr<_1d6648e13_Eval> _self_, jule::Ptr<_1d652005e_StructIns> _185045_s, jule::Slice<jule::Ptr<_1d6500715_Expr>> _185113_exprs, jule::Ptr<_1d64d5cd3_Token> _185133_errorToken) {
	jule::Bool _18529_ok = _1d65b9dea_checkGenericQuantity((*(_self_))._field_s.ptr(), static_cast<jule::I64>((*((*(_185045_s))._field_Decl))._field_Generics.len()), static_cast<jule::I64>((*(_185045_s))._field_Generics.len()), _185133_errorToken);;
	if ((!(_18529_ok))) {
		return nullptr;;
	};
	if ((((*(_self_))._field_field != nullptr) && ((*((*((*(_self_))._field_field))._field_Decl))._field_Owner == (*(_185045_s))._field_Decl))) {
		_1d6649463_pushErr(_self_.ptr(), _185133_errorToken, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_185045_s))._field_Decl))._field_Ident, &__jule_any_type4)}));
	};
	_1da0d2216_pushReference(_self_.ptr(), &(_185045_s));
	_1d664e589_checkDeprecated(_self_.ptr(), &((*((*(_185045_s))._field_Decl))._field_Directives), _185133_errorToken);
	_1d663a564_structLitChecker _186513_slc = _1d663a564_structLitChecker{._field_e=_self_, ._field_errorToken=_185133_errorToken, ._field_s=_185045_s, };;
	_1d663bca2_check(&_186513_slc, &(_185113_exprs));
	jule::Ptr<_1d664721e_Data> _187213_d = jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=jule::new_ptr<_1d6677a35_TypeKind>(_1d6677a35_TypeKind{._field_Kind=jule::Trait<_1d667757e_Kind>(_185045_s, 0)}), ._field_Mutable=(!((*(_self_))._field_immutable)), ._field_Model=jule::Any(jule::new_ptr<_1d65252a6_StructLitExprModel>(_1d65252a6_StructLitExprModel{._field_Strct=_185045_s, ._field_Args=_186513_slc._field_args}), &__jule_any_type94), });;
	if ((*((*(_185045_s))._field_Decl))._field_Binded) {
		(*((*(_187213_d))._field_Kind))._field_BindIdent=(*((*(_185045_s))._field_Decl))._field_Ident;
	};
	return _187213_d;;
}



inline jule::Ptr<_1d664721e_Data> _1d665c08b_evalStructLit(jule::Ptr<_1d6648e13_Eval> _self_, jule::Ptr<_1d650575e_StructLit> _188837_lit) {
	jule::Ptr<_1d667ec07_TypeSymbol> _188913_t = _1d6539bc2_buildType((*(_188837_lit))._field_Kind);;
	jule::Bool _18909_ok = _1d65be53c_checkType((*(_self_))._field_s, &(_188913_t), (*(_self_))._field_lookup);;
	if ((!(_18909_ok))) {
		return nullptr;;
	};
	jule::Ptr<_1d652005e_StructIns> _189513_s = _1d667b709_Struct((*(_188913_t))._field_Kind.ptr());;
	if ((_189513_s == nullptr)) {
		if ((_1d667a41c_Sptr((*(_188913_t))._field_Kind.ptr()) != nullptr)) {
			_189513_s=_1d667b709_Struct((*(_1d667a41c_Sptr((*(_188913_t))._field_Kind.ptr())))._field_Elem.ptr());
			if ((_189513_s != nullptr)) {
				goto _julec_label_1da159876;
			};
		};
		_1d6649463_pushErr(_self_.ptr(), (*((*(_188837_lit))._field_Kind))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_1da159876:;
	jule::Ptr<_1d664721e_Data> _190813_d = _1d665bc4a_evalStructLitExplicit(_self_, _189513_s, (*(_188837_lit))._field_Exprs, (*((*(_188837_lit))._field_Kind))._field_Token);;
	if ((_1d667a41c_Sptr((*(_188913_t))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1d65252a6_StructLitExprModel> _191017_model = (*(_190813_d))._field_Model.cast_ptr<_1d65252a6_StructLitExprModel>(&__jule_any_type94);;
		_1d66714ac_makeStructLitAlloc(&(_190813_d), &(_191017_model));
	};
	return _190813_d;;
}



inline _1d66898e3_typeChecker _1d665c322_typeChecker(_1d6648e13_Eval* _self_) {
	return _1d65bd2d8_typeChecker((*(_self_))._field_s, (*(_self_))._field_lookup, nullptr, nullptr);;
}



inline jule::Ptr<_1d664721e_Data> _1d665c663_evalType(_1d6648e13_Eval* _self_, jule::Ptr<_1d64eb3d1_TypeDecl> _192031_t) {
	jule::Ptr<_1d667ec07_TypeSymbol> _192113_tk = _1d6539bc2_buildType(_192031_t);;
	jule::Bool _19229_ok = _1d65be53c_checkType((*(_self_))._field_s, &(_192113_tk), (*(_self_))._field_lookup);;
	if ((!(_19229_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=(*(_192113_tk))._field_Kind, ._field_Model=jule::Any((*(_192113_tk))._field_Kind, &__jule_any_type83), ._field_Decl=true, });;
}



inline void _1d665c9c6_callTypeFn(jule::Ptr<_1d6648e13_Eval> _self_, jule::Ptr<_1d650443e_FnCallExpr>* _193335_fc, jule::Ptr<_1d664721e_Data>* _193357_d) {
	if (((*((*(_193335_fc))))._field_Args.len() < 1LL)) {
		_1d6649463_pushErr(_self_.ptr(), (*((*(_193335_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("v", 1), &__jule_any_type4)}));
	} else if (((*((*(_193335_fc))))._field_Args.len() > 1LL)) {
		_1d6649463_pushErr(_self_.ptr(), (*((*((*(_193335_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(_1d6677ded_Str((*((*(_193357_d))))._field_Kind.ptr()), &__jule_any_type4)}));
	} else if ((*((*(_193335_fc))))._field_IsCo) {
		_1d6649463_pushErr(_self_.ptr(), (*((*(_193335_fc))))._field_Token, jule::Str::lit("concurrent calls are not allowed for type-cast calls", 52), jule::Slice<jule::Any>());
		(*(_193357_d))=nullptr;
		return;;
	} else if (((*((*(_193335_fc))))._field_Exception != nullptr)) {
		_1d6649463_pushErr(_self_.ptr(), (*((*(_193335_fc))))._field_Token, jule::Str::lit("exceptionals are not supported for type-cast call", 49), jule::Slice<jule::Any>());
		(*(_193357_d))=nullptr;
		return;;
	};
	if (((*((*(_193335_fc))))._field_Args.len() > 0LL)) {
		jule::Ptr<_1d6500715_Expr> _194917_arg = (*((*(_193335_fc))))._field_Args[0LL];;
		(*(_193357_d))=_1d665b112_evalCastT(_self_, &((*((*(_193357_d))))._field_Kind), &(_194917_arg), &((*(_194917_arg))._field_Token));
		return;;
	};
	if (((*(_193357_d)) != nullptr)) {
		(*((*(_193357_d))))._field_Decl=false;
	};
}



inline void _1d665cd39_callBuiltinFn(jule::Ptr<_1d6648e13_Eval> _self_, jule::Ptr<_1d650443e_FnCallExpr>* _195938_fc, jule::Ptr<_1d664721e_Data>* _195960_d) {
	if ((!(_1d65047b3_Unhandled((*(_195938_fc)).ptr())))) {
		_1d6649463_pushErr(_self_.ptr(), (*((*(_195938_fc))))._field_Token, jule::Str::lit("non-exceptionals cannot handled like exceptionals", 49), jule::Slice<jule::Any>());
	};
	(*(_195960_d))=(*(_1d667b473_Fn((*((*(_195960_d))))._field_Kind.ptr())))._field_caller(&(_self_), _195938_fc, _195960_d);
	if (((*(_195960_d)) == nullptr)) {
		return;;
	};
	(*((*(_195960_d))))._field_Mutable=true;
}



inline void _1d665d19c_checkFnOfConcurrentCall(_1d6648e13_Eval* _self_, jule::Ptr<_1d6535173_FnIns>* _197143_f, jule::Ptr<_1d64d5cd3_Token> _197154_errorToken) {
	if (_1d6649e58_isUnsafe(_self_)) {
		return;;
	};
	{
		auto expr = &((*((*(_197143_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1da1694ac:;
		if (it != expr_end) {
			jule::Ptr<_1d65341c7_ParamIns> *_197516_p = it;
			{
				if (_1d6530db6_IsSelf((*((*(_197516_p))))._field_Decl.ptr())) {
					if ((!(_1d653114c_IsRef((*((*(_197516_p))))._field_Decl.ptr())))) {
						_1d6649463_pushErr(_self_, _197154_errorToken, jule::Str::lit("Safe Jule not allows to make concurrent calls with methods which is has \"self\" receiver parameter", 97), jule::Slice<jule::Any>());
						_1d66497c6_pushSuggestion(_self_, jule::Str::lit("use \"&self\" receiver parameter instead, or Unsafe Jule with unsafe {} scope to make concurrent call", 99), jule::Slice<jule::Any>());
					};
				};
				if ((*((*((*(_197516_p))))._field_Decl))._field_Reference) {
					_1d6649463_pushErr(_self_, _197154_errorToken, jule::Str::lit("Safe Jule not allows to make concurrent calls with functions which is has reference parameter(s)", 96), jule::Slice<jule::Any>());
					_1d66497c6_pushSuggestion(_self_, jule::Str::lit("use Unsafe Jule with unsafe {} scope to make concurrent call", 60), jule::Slice<jule::Any>());
					return;;
				};
			}
			_iter_next_1da1694ac:;
			++it;
			goto _iter_begin_1da1694ac;
		}
		_iter_end_1da1694ac:;
	};
}



inline void _1d665d5ba_processExceptionalHandler(_1d6648e13_Eval* _self_, jule::Ptr<_1d6535173_FnIns>* _199049_f, jule::Ptr<_1d650443e_FnCallExpr>* _199065_fc, jule::Ptr<_1d664721e_Data>* _199087_d) {
	jule::Bool _19919_resultNeeded = ((!(_1d65326e2_IsVoid((*((*(_199049_f))))._field_Decl.ptr()))) && ((*(_self_))._field_arg || (!((*(_self_))._field_ignored))));;
	jule::Ptr<_1d657b42d_scopeChecker> _199217_csc = nullptr;;
	jule::Ptr<_1d6574129_Scope> _199317_ch = nullptr;;
	jule::Ptr<_1d65264d8_FnCallExprModel> _199513_model = (*((*(_199087_d))))._field_Model.cast_ptr<_1d65264d8_FnCallExprModel>(&__jule_any_type34);;
	jule::Ptr<_1d657b42d_scopeChecker> _199913_sc = (*(_self_))._field_lookup.cast_ptr<_1d657b42d_scopeChecker>(0);;
	_199217_csc=_1d658cdbd_newChildChecker(_199913_sc);
	if (_19919_resultNeeded) {
		(*(_199217_csc))._field_result=(*(_199049_f));
	};
	_199317_ch=_1d6581224_getChild(_199913_sc.ptr());
	(*((*((*(_199065_fc))))._field_Exception))._field_Parent=(*(_199913_sc))._field_tree;
	{ jule::Slice<jule::Ptr<_1d65d9018_Var>> &__jule_push_dest = (*((*(_199217_csc))._field_table))._field_Vars; __jule_push_dest.push(_1d6671831_buildErrorVar(&(_199317_ch), _199065_fc)); };
	_1d6581642_checkChildSsc(_199913_sc, &((*((*(_199065_fc))))._field_Exception), &(_199317_ch), &(_199217_csc));
	(*(_199513_model))._field_Assigned=_19919_resultNeeded;
	(*(_199513_model))._field_Except=_199317_ch;
	if ((_19919_resultNeeded && ((*(_199217_csc))._field_result != nullptr))) {
		_1d6649463_pushErr(_self_, (*((*(_199065_fc))))._field_Token, jule::Str::lit("exceptional returns an expression, therefore else block should return expression", 80), jule::Slice<jule::Any>());
	};
}



inline void _1d665d92d_callFn(jule::Ptr<_1d6648e13_Eval> _self_, jule::Ptr<_1d650443e_FnCallExpr>* _201731_fc, jule::Ptr<_1d664721e_Data>* _201753_d) {
	jule::Ptr<_1d6535173_FnIns> _201813_f = _1d667b473_Fn((*((*(_201753_d))))._field_Kind.ptr());;
	if (_1d6536608_IsBuiltin(_201813_f.ptr())) {
		_1d665cd39_callBuiltinFn(_self_, _201731_fc, _201753_d);
		return;;
	};
	if ((_1d664a1de_isGlobal(_self_.ptr()) && (*((*(_201813_f))._field_Decl))._field_Exceptional)) {
		_1d6649463_pushErr(_self_.ptr(), (*((*(_201731_fc))))._field_Token, jule::Str::lit("exceptionals are not allowed in global scope", 44), jule::Slice<jule::Any>());
		_1d66497c6_pushSuggestion(_self_.ptr(), jule::Str::lit("wrap exceptional with a non-exceptional function", 48), jule::Slice<jule::Any>());
		(*(_201753_d))=nullptr;
		return;;
	};
	if (((!(_1d6532978_IsMethod((*(_201813_f))._field_Decl.ptr()))) && _1d6693655_hasDirective(&((*((*(_201813_f))._field_Decl))._field_Directives), jule::Str::lit("test", 4)))) {
		_1d6649463_pushErr(_self_.ptr(), (*((*(_201731_fc))))._field_Token, jule::Str::lit("you cannot call test functions", 30), jule::Slice<jule::Any>());
		(*(_201753_d))=nullptr;
		return;;
	};
	if (((((!((*((*(_201753_d))))._field_Mutable)) && _1d6532978_IsMethod((*(_201813_f))._field_Decl.ptr())) && (!((*((*(_201813_f))._field_Decl))._field_Statically))) && (*((*((*(_201813_f))._field_Decl))._field_Params[0LL]))._field_Mutable)) {
		if ((!((*(_self_))._field_immutable))) {
			_1d6649463_pushErr(_self_.ptr(), (*((*(_201731_fc))))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
		} else {
			jule::Ptr<_1d65252a6_StructLitExprModel> _204417_lit = _1d6674a65_isLitBased(&((*((*(_201753_d))))._field_Model));;
			if ((_204417_lit == nullptr)) {
				_1d6649463_pushErr(_self_.ptr(), (*((*(_201731_fc))))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
			} else {
				_1d663a07a_checkMutRiskOfStructLit(&((*(_self_))._field_s), &(_204417_lit));
			};
		};
	} else if (((!(_1d6649e58_isUnsafe(_self_.ptr()))) && (*((*(_201813_f))._field_Decl))._field_Unsafety)) {
		_1d6649463_pushErr(_self_.ptr(), (*((*(_201731_fc))))._field_Token, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
	};
	jule::Bool _205613_dynamicAnnotation = ((((*((*(_201813_f))._field_Decl))._field_Generics.len() > 0LL) && ((*(_201813_f))._field_Generics.len() == 0LL)) && ((*(_201813_f))._field_Params.len() > 0LL));;
	if (_205613_dynamicAnnotation) {
		(*(_201813_f))._field_Generics=jule::Slice<jule::Ptr<_1d667614e_InsGeneric>>::alloc((*((*(_201813_f))._field_Decl))._field_Generics.len(), (*((*(_201813_f))._field_Decl))._field_Generics.len());
	} else if (((*(_201813_f))._field_Generics.len() != (*((*(_201813_f))._field_Decl))._field_Generics.len())) {
		_1d65b9dea_checkGenericQuantity((*(_self_))._field_s.ptr(), static_cast<jule::I64>((*((*(_201813_f))._field_Decl))._field_Generics.len()), static_cast<jule::I64>((*(_201813_f))._field_Generics.len()), (*((*(_201731_fc))))._field_Token);
		(*(_201753_d))=nullptr;
		return;;
	};
	jule::Ptr<_1d65b5c81_Sema> _206513_old = (*(_self_))._field_s;;
	if (((*((*(_201813_f))._field_Decl))._field_Owner != nullptr)) {
		(*(_self_))._field_s=(*((*((*(_201813_f))._field_Decl))._field_Owner))._field_sema;
	};
	__JULE_DEFER({
		if ((_206513_old != (*(_self_))._field_s)) {
			((*(_206513_old))._field_errors).append((*((*(_self_))._field_s))._field_errors);;
			(*((*(_self_))._field_s))._field_errors=nullptr;
		};
		(*(_self_))._field_s=_206513_old;
	});;
	_1d663762c_fnCallArgChecker _207813_fcac = _1d663762c_fnCallArgChecker{._field_e=_self_, ._field_args=(*((*(_201731_fc))))._field_Args, ._field_errorToken=(*((*(_201731_fc))))._field_Token, ._field_dynamicAnnotation=_205613_dynamicAnnotation, };;
	if ((!(_205613_dynamicAnnotation))) {
		if ((!((*(_201813_f))._field_reloaded))) {
			jule::Bool _208717_ok = _1d65c4850_reloadFnInsTypes((*(_self_))._field_s, _201813_f);;
			(*(_201813_f))._field_reloaded=true;
			if ((!(_208717_ok))) {
				(*(_201753_d))=nullptr;
				return;;
			};
		};
		jule::Ptr<_1d6535173_FnIns> _209417_existInstance = _1d6533cdc_appendInstance((*(_201813_f))._field_Decl.ptr(), &(_201813_f));;
		if ((_209417_existInstance != nullptr)) {
			_201813_f=_209417_existInstance;
		};
	} else if ((!(_1d65c30ac_buildFnNonGenericTypeKinds((*(_self_))._field_s, &(_201813_f), &(_207813_fcac._field_ignored))))) {
		(*(_201753_d))=nullptr;
		return;;
	};
	_207813_fcac._field_f=_201813_f;
	jule::Bool _210513_ok = false;;
	if (((*((*(_201813_f))._field_Decl))._field_Owner != nullptr)) {
		std::swap(_206513_old, (*(_self_))._field_s);
		_210513_ok=_1d6639bd4_check(&_207813_fcac);
		std::swap(_206513_old, (*(_self_))._field_s);
	} else {
		_210513_ok=_1d6639bd4_check(&_207813_fcac);
	};
	if (_205613_dynamicAnnotation) {
		if ((!(_210513_ok))) {
			(*(_201753_d))=nullptr;
			return;;
		};
		if ((!(_1d6655ccc_checkGenericFn(_self_, &(_201813_f), &((*((*(_201731_fc))))._field_Token), &((*((*(_201753_d))))._field_Model))))) {
			(*(_201753_d))=nullptr;
			return;;
		};
	};
	jule::Any _212513_callModel = (*((*(_201753_d))))._field_Model;;
	if (_1d65326e2_IsVoid((*(_201813_f))._field_Decl.ptr())) {
		(*(_201753_d))=_1d6672ea3_buildVoidData();
	} else {
		(*((*(_201753_d))))._field_Kind=(*(_201813_f))._field_Result;
		(*((*(_201753_d))))._field_Lvalue=false;
	};
	jule::Ptr<_1d65264d8_FnCallExprModel> _213413_model = jule::new_ptr<_1d65264d8_FnCallExprModel>(_1d65264d8_FnCallExprModel{._field_Token=(*((*(_201731_fc))))._field_Token, ._field_Func=_201813_f, ._field_IsCo=(*((*(_201731_fc))))._field_IsCo, ._field_Expr=_212513_callModel, ._field_Args=_207813_fcac._field_argModels, });;
	(*((*(_201753_d))))._field_Model=jule::Any(_213413_model, &__jule_any_type34);
	(*((*(_201753_d))))._field_Mutable=true;
	if ((*((*(_201813_f))._field_Decl))._field_Exceptional) {
		if ((*((*(_201731_fc))))._field_IsCo) {
			_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*((*(_201731_fc))))._field_Token, jule::Str::lit("concurrent calls not supports exceptionals", 42), jule::Slice<jule::Any>());
			_1d65b8c2e_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("handle exceptional in a separate function or anonymous function", 63), jule::Slice<jule::Any>());
		};
		{
			
			if (_1d65047b3_Unhandled((*(_201731_fc)).ptr())) {
				_case_begin_1da19022a:;
				{
					_1d6649463_pushErr(_self_.ptr(), (*((*(_201731_fc))))._field_Token, jule::Str::lit("exceptionals must be handled", 28), jule::Slice<jule::Any>());
					_1d66497c6_pushSuggestion(_self_.ptr(), jule::Str::lit("use \"!\" operator after exceptional to handle it", 47), jule::Slice<jule::Any>());
				}
			}
			else if (_1d6504a49_Ignored((*(_201731_fc)).ptr())) {
				_case_begin_1da18ee2d:;
				{
					goto _match_end_1da18db96;
				}
			}
			else {
				_case_begin_1da18dc0c:;
				{
					_1d665d5ba_processExceptionalHandler(_self_.ptr(), &(_201813_f), _201731_fc, _201753_d);
				}
			}
			_match_end_1da18db96:;
		};
	} else if ((!(_1d65047b3_Unhandled((*(_201731_fc)).ptr())))) {
		_1d6649463_pushErr(_self_.ptr(), (*((*(_201731_fc))))._field_Token, jule::Str::lit("non-exceptionals cannot handled like exceptionals", 49), jule::Slice<jule::Any>());
	};
	if ((*((*(_201731_fc))))._field_IsCo) {
		_1d665d19c_checkFnOfConcurrentCall(_self_.ptr(), &((*(_213413_model))._field_Func), (*((*(_201731_fc))))._field_Token);
	};
}



inline jule::Ptr<_1d664721e_Data> _1d665dc6e_evalFnCall(jule::Ptr<_1d6648e13_Eval> _self_, jule::Ptr<_1d650443e_FnCallExpr> _216934_fc) {
	jule::Ptr<_1d6677a35_TypeKind> _217013_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=nullptr;
	__JULE_DEFER({
		(*(_self_))._field_prefix=_217013_prefix;
	});;
	{
		auto &_match_expr{ (*((*(_216934_fc))._field_Expr))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1da194806:;
			{
				if ((*((*((*(_216934_fc))._field_Expr))._field_Token))._field_Kind.equal("error", 5)) {
					return _1d67600a1_builtinCallerError(&(_self_), &(_216934_fc));;
				};
			}
		}
		_match_end_1da194790:;
	};
	jule::Ptr<_1d664721e_Data> _218313_d = _1d666635e_evalExprKind(_self_, (*((*(_216934_fc))._field_Expr))._field_Kind);;
	if ((_218313_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_218313_d))._field_Decl) {
		_1d665c9c6_callTypeFn(_self_, &(_216934_fc), &(_218313_d));
		return _218313_d;;
	};
	if ((_1d667b473_Fn((*(_218313_d))._field_Kind.ptr()) == nullptr)) {
		_1d6649463_pushErr(_self_.ptr(), (*(_216934_fc))._field_Token, jule::Str::lit("attempting to call a non-function", 33), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1d665d92d_callFn(_self_, &(_216934_fc), &(_218313_d));
	return _218313_d;;
}



inline jule::Ptr<_1d664721e_Data> _1d665e16a_evalEnumStatic(_1d6648e13_Eval* _self_, jule::Ptr<_1d6547c57_Enum> _220237_enm, jule::Ptr<_1d64d5cd3_Token> _220249_ident) {
	jule::Ptr<_1d65471da_EnumItem> _220313_item = _1d654884b_FindItem(_220237_enm.ptr(), (*(_220249_ident))._field_Kind);;
	if ((_220313_item == nullptr)) {
		_1d6649463_pushErr(_self_, _220249_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*(_220237_enm))._field_Ident, &__jule_any_type4),jule::Any((*(_220249_ident))._field_Kind, &__jule_any_type4)}));
	};
	return _1d667479b_evalEnumStatic(&(_220237_enm), &(_220313_item));;
}



inline jule::Ptr<_1d664721e_Data> _1d665e566_evalTypeEnumStatic(_1d6648e13_Eval* _self_, jule::Ptr<_1d6549462_TypeEnum> _221041_enm, jule::Ptr<_1d64d5cd3_Token> _221057_ident) {
	jule::Ptr<_1d6548d8a_TypeEnumItem> _221113_item = _1d654a023_FindItem(_221041_enm.ptr(), (*(_221057_ident))._field_Kind);;
	if ((_221113_item == nullptr)) {
		_1d6649463_pushErr(_self_, _221057_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*(_221041_enm))._field_Ident, &__jule_any_type4),jule::Any((*(_221057_ident))._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	{
		
		if ((_1d667a939_Enum((*((*(_221113_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1da19ca0c:;
			{
				return _1d664ca60__evalEnum(_self_, _1d667a939_Enum((*((*(_221113_item))._field_Kind))._field_Kind.ptr()));;
			}
		}
		else if ((_1d667abc0_TypeEnum((*((*(_221113_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1da19cb94:;
			{
				return _1d664d29c__evalTypeEnum(_self_, _1d667abc0_TypeEnum((*((*(_221113_item))._field_Kind))._field_Kind.ptr()));;
			}
		}
		else if ((_1d667b709_Struct((*((*(_221113_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1da19bd3b:;
			{
				return _1d664d9d9__evalStruct(_self_, _1d667b709_Struct((*((*(_221113_item))._field_Kind))._field_Kind.ptr()));;
			}
		}
		else {
			_case_begin_1da19aea0:;
			{
				jule::Ptr<_1d664721e_Data> _222417_d = jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=(*((*(_221113_item))._field_Kind))._field_Kind, ._field_Decl=true, });;
				(*(_222417_d))._field_Model=jule::Any((*(_222417_d))._field_Kind, &__jule_any_type83);
				return _222417_d;;
			}
		}
		_match_end_1da19b148:;
	};
}



inline jule::Ptr<_1d664721e_Data> _1d665e962_evalStructStatic(_1d6648e13_Eval* _self_, jule::Ptr<_1d652005e_StructIns> _223339_s, jule::Ptr<_1d64d5cd3_Token> _223354_ident) {
	jule::Ptr<_1d664721e_Data> _223413_d = jule::new_ptr<_1d664721e_Data>();;
	;
	jule::Ptr<_1d653226e_Fn> _223813_method = _1d65210c6_FindMethod(_223339_s.ptr(), (*(_223354_ident))._field_Kind, true);;
	if ((_223813_method != nullptr)) {
		if ((!(_1d65b912a_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_223813_method))._field_Public, (*(_223813_method))._field_Token)))) {
			_1d6649463_pushErr(_self_, _223354_ident, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_223354_ident))._field_Kind, &__jule_any_type4)}));
			_1d66497c6_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1d6535173_FnIns> _224517_ins = _1d65339ce_instance(_223813_method);;
		(*(_224517_ins))._field_Owner=_223339_s;
		_1da00bd44_pushReference(_self_, &(_224517_ins));
		(*(_223413_d))._field_Model=jule::Any(jule::new_ptr<_1d6529530_StructStaticIdentExprModel>(_1d6529530_StructStaticIdentExprModel{._field_Structure=_223339_s, ._field_Expr=(*(_223413_d))._field_Model, ._field_Method=_224517_ins}), &__jule_any_type95);
		(*(_223413_d))._field_Kind=jule::new_ptr<_1d6677a35_TypeKind>(_1d6677a35_TypeKind{._field_Kind=jule::Trait<_1d667757e_Kind>(_224517_ins, 1)});
		return _223413_d;;
	};
	jule::Ptr<_1d65d9018_Var> _225913_sttc = _1d6521758_FindStatic(_223339_s.ptr(), (*(_223354_ident))._field_Kind);;
	if ((_225913_sttc != nullptr)) {
		return _1d6650a96_evalVar(_self_, _225913_sttc, _223354_ident);;
	};
	_1d6649463_pushErr(_self_, _223354_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*((*(_223339_s))._field_Decl))._field_Ident, &__jule_any_type4),jule::Any((*(_223354_ident))._field_Kind, &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1d664721e_Data> _1d665ee18_evalTraitSubIdent(_1d6648e13_Eval* _self_, jule::Ptr<_1d664721e_Data> _226840_d, jule::Ptr<_1d654554b_Trait> _226854_trt, jule::Ptr<_1d64d5cd3_Token> _226871_ident) {
	jule::Ptr<_1d653226e_Fn> _226913_f = _1d65461ea_FindMethod(_226854_trt.ptr(), (*(_226871_ident))._field_Kind);;
	if ((_226913_f == nullptr)) {
		_1d6649463_pushErr(_self_, _226871_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*(_226854_trt))._field_Ident, &__jule_any_type4),jule::Any((*(_226871_ident))._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=jule::new_ptr<_1d6677a35_TypeKind>(_1d6677a35_TypeKind{._field_Kind=jule::Trait<_1d667757e_Kind>(_1d65339ce_instance(_226913_f), 1)}), ._field_Model=jule::Any(jule::new_ptr<_1d65286d8_TraitSubIdentExprModel>(_1d65286d8_TraitSubIdentExprModel{._field_Token=_226871_ident, ._field_Expr=(*(_226840_d))._field_Model, ._field_Method=_226913_f, ._field_Trt=_226854_trt}), &__jule_any_type96), });;
}



inline jule::Ptr<_1d664721e_Data> _1d6660479_evalStructSubIdentField(_1d6648e13_Eval* _self_, jule::Ptr<_1d664721e_Data>* _228847_d, jule::Ptr<_1d652005e_StructIns>* _228862_s, jule::Ptr<_1d64d5cd3_Token>* _228882_tok, jule::Ptr<_1d651e4ae_FieldIns>* _2288100_f) {
	jule::Ptr<_1d6529079_StructSubIdentExprModel> _228913_model = jule::new_ptr<_1d6529079_StructSubIdentExprModel>(_1d6529079_StructSubIdentExprModel{._field_Token=(*(_228882_tok)), ._field_Expr=jule::new_ptr<_1d664721e_Data>((*((*(_228847_d))))), ._field_Field=(*(_2288100_f)), ._field_Owner=(*(_228862_s))});;
	(*((*(_228847_d))))._field_Model=jule::Any(_228913_model, &__jule_any_type97);
	(*((*(_228847_d))))._field_Kind=(*((*(_2288100_f))))._field_Kind;
	(*((*(_228847_d))))._field_Lvalue=true;
	if (((*((*((*(_2288100_f))))._field_Decl))._field_Mutable && (!((*((*(_228847_d))))._field_Mutable)))) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, 0)) {
				_case_begin_1da1adbe9:;
				{
					jule::Ptr<_1d657b42d_scopeChecker> _230317_scope = _1d657e51e_getRoot((*(_self_))._field_lookup.cast_ptr<_1d657b42d_scopeChecker>(0));;
					(*((*(_228847_d))))._field_Mutable=(((*(_230317_scope))._field_owner != nullptr) && ((*((*(_230317_scope))._field_owner))._field_Owner == (*(_228862_s))));
				}
			}
			_match_end_1da1adb94:;
		};
	};
	return (*(_228847_d));;
}



inline jule::Ptr<_1d664721e_Data> _1d66609da_evalStructSubIdent(_1d6648e13_Eval* _self_, jule::Ptr<_1d664721e_Data> _231141_d, jule::Ptr<_1d652005e_StructIns> _231155_s, jule::Ptr<_1d6503828_SubIdentExpr> _231174_si, jule::Bool _231193_ref) {
	jule::Ptr<_1d651e4ae_FieldIns> _231213_f = _1d6521417_FindField(_231155_s.ptr(), (*((*(_231174_si))._field_Ident))._field_Kind);;
	if ((_231213_f != nullptr)) {
		if ((!(_1d65b912a_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_231213_f))._field_Decl))._field_Public, (*((*(_231213_f))._field_Decl))._field_Token)))) {
			_1d6649463_pushErr(_self_, (*(_231174_si))._field_Ident, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_231213_f))._field_Decl))._field_Ident, &__jule_any_type4)}));
			_1d66497c6_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		};
		return _1d6660479_evalStructSubIdentField(_self_, &(_231141_d), &(_231155_s), &((*(_231174_si))._field_Ident), &(_231213_f));;
	};
	;
	jule::Ptr<_1d653226e_Fn> _232213_m = _1d65210c6_FindMethod(_231155_s.ptr(), (*((*(_231174_si))._field_Ident))._field_Kind, false);;
	if ((_232213_m == nullptr)) {
		_1d6649463_pushErr(_self_, (*(_231174_si))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*((*(_231155_s))._field_Decl))._field_Ident, &__jule_any_type4),jule::Any((*((*(_231174_si))._field_Ident))._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	if ((!(_1d65b912a_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_232213_m))._field_Public, (*(_232213_m))._field_Token)))) {
		_1d6649463_pushErr(_self_, (*(_231174_si))._field_Ident, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_232213_m))._field_Ident, &__jule_any_type4)}));
		_1d66497c6_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
	};
	if ((_1d653114c_IsRef((*(_232213_m))._field_Params[0LL].ptr()) && (!(_231193_ref)))) {
		_1d6649463_pushErr(_self_, (*(_231174_si))._field_Ident, jule::Str::lit("reference method cannot use with non-reference instance", 55), jule::Slice<jule::Any>());
	};
	_1d664e589_checkDeprecated(_self_, &((*(_232213_m))._field_Directives), (*(_231174_si))._field_Ident);
	jule::Ptr<_1d6535173_FnIns> _233813_ins = _1d65339ce_instance(_232213_m);;
	(*(_233813_ins))._field_Owner=_231155_s;
	_1da00bd44_pushReference(_self_, &(_233813_ins));
	jule::Ptr<_1d664721e_Data> _234113_model = jule::new_ptr<_1d664721e_Data>((*(_231141_d)));;
	(*(_231141_d))._field_Model=jule::Any(jule::new_ptr<_1d6529079_StructSubIdentExprModel>(_1d6529079_StructSubIdentExprModel{._field_Token=(*(_231174_si))._field_Ident, ._field_Expr=_234113_model, ._field_Method=_233813_ins, ._field_Owner=_231155_s}), &__jule_any_type97);
	(*(_231141_d))._field_Kind=jule::new_ptr<_1d6677a35_TypeKind>(_1d6677a35_TypeKind{._field_Kind=jule::Trait<_1d667757e_Kind>(_233813_ins, 1)});
	return _231141_d;;
}



inline jule::Ptr<_1d664721e_Data> _1d6660d2b_evalIntTypeStatic(_1d6648e13_Eval* _self_, jule::Ptr<_1d64d5cd3_Token> _235236_ident) {
	;
	{
		auto &_match_expr{ (*(_235236_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1da1bc136:;
			{
				jule::Ptr<_1d4321208_Const> _235617_c = static__1d4321648_NewI64(static_cast<jule::I64>(_1d431b797_MaxI(jule::Str::lit("int", 3))));;
				(*(_235617_c))._field_Kind=jule::Str::lit("int", 3);
				return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_untyped=true, ._field_Kind=_1d675b09c_primInt, ._field_Model=jule::Any(_235617_c, &__jule_any_type19), ._field_Constant=_235617_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1da1bd346:;
			{
				jule::Ptr<_1d4321208_Const> _236517_c = static__1d4321648_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1d431bc92_Min(jule::Str::lit("int", 3)))));;
				(*(_236517_c))._field_Kind=jule::Str::lit("int", 3);
				return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_untyped=true, ._field_Kind=_1d675b09c_primInt, ._field_Model=jule::Any(_236517_c, &__jule_any_type19), ._field_Constant=_236517_c});;
			}
		}
		else {
			_case_begin_1da1bc642:;
			{
				_1d6649463_pushErr(_self_, _235236_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("int", 3), &__jule_any_type4),jule::Any((*(_235236_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1da1bc5dc:;
	};
}



inline jule::Ptr<_1d664721e_Data> _1d666116c_evalUintTypeStatic(_1d6648e13_Eval* _self_, jule::Ptr<_1d64d5cd3_Token> _237937_ident) {
	;
	{
		auto &_match_expr{ (*(_237937_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1da1bc884:;
			{
				jule::Ptr<_1d4321208_Const> _238317_c = static__1d4321912_NewU64(static_cast<jule::U64>(_1d431ba61_MaxU(jule::Str::lit("uint", 4))));;
				(*(_238317_c))._field_Kind=jule::Str::lit("uint", 4);
				return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_untyped=true, ._field_Kind=_1d675abc3_primUint, ._field_Model=jule::Any(_238317_c, &__jule_any_type19), ._field_Constant=_238317_c});;
			}
		}
		else {
			_case_begin_1da1c1327:;
			{
				_1d6649463_pushErr(_self_, _237937_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("uint", 4), &__jule_any_type4),jule::Any((*(_237937_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1da1c12c2:;
	};
}



inline jule::Ptr<_1d664721e_Data> _1d66614ad_evalI8TypeStatic(_1d6648e13_Eval* _self_, jule::Ptr<_1d64d5cd3_Token> _239735_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_239735_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1da1c4050:;
			{
				jule::Ptr<_1d4321208_Const> _240317_c = static__1d4321648_NewI64(127LL);;
				(*(_240317_c))._field_Kind=jule::Str::lit("i8", 2);
				return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_untyped=true, ._field_Kind=_1d675b366_primI8, ._field_Model=jule::Any(_240317_c, &__jule_any_type19), ._field_Constant=_240317_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1da1c5194:;
			{
				jule::Ptr<_1d4321208_Const> _241217_c = static__1d4321648_NewI64(-128LL);;
				(*(_241217_c))._field_Kind=jule::Str::lit("i8", 2);
				return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_untyped=true, ._field_Kind=_1d675b366_primI8, ._field_Model=jule::Any(_241217_c, &__jule_any_type19), ._field_Constant=_241217_c});;
			}
		}
		else {
			_case_begin_1da1c4490:;
			{
				_1d6649463_pushErr(_self_, _239735_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("i8", 2), &__jule_any_type4),jule::Any((*(_239735_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1da1c443a:;
	};
}



inline jule::Ptr<_1d664721e_Data> _1d66617ee_evalI16TypeStatic(_1d6648e13_Eval* _self_, jule::Ptr<_1d64d5cd3_Token> _242636_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_242636_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1da1c81ca:;
			{
				jule::Ptr<_1d4321208_Const> _243217_c = static__1d4321648_NewI64(32767LL);;
				(*(_243217_c))._field_Kind=jule::Str::lit("i16", 3);
				return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_untyped=true, ._field_Kind=_1d675b630_primI16, ._field_Model=jule::Any(_243217_c, &__jule_any_type19), ._field_Constant=_243217_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1da1c930d:;
			{
				jule::Ptr<_1d4321208_Const> _244117_c = static__1d4321648_NewI64(-32768LL);;
				(*(_244117_c))._field_Kind=jule::Str::lit("i16", 3);
				return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_untyped=true, ._field_Kind=_1d675b630_primI16, ._field_Model=jule::Any(_244117_c, &__jule_any_type19), ._field_Constant=_244117_c});;
			}
		}
		else {
			_case_begin_1da1c861a:;
			{
				_1d6649463_pushErr(_self_, _242636_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("i16", 3), &__jule_any_type4),jule::Any((*(_242636_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1da1c85b5:;
	};
}



inline jule::Ptr<_1d664721e_Data> _1d6661b40_evalI32TypeStatic(_1d6648e13_Eval* _self_, jule::Ptr<_1d64d5cd3_Token> _245536_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_245536_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1da1cc344:;
			{
				jule::Ptr<_1d4321208_Const> _246117_c = static__1d4321648_NewI64(2147483647LL);;
				(*(_246117_c))._field_Kind=jule::Str::lit("i32", 3);
				return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_untyped=true, ._field_Kind=_1d675b8e9_primI32, ._field_Model=jule::Any(_246117_c, &__jule_any_type19), ._field_Constant=_246117_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1da1cd477:;
			{
				jule::Ptr<_1d4321208_Const> _247017_c = static__1d4321648_NewI64(-2147483648LL);;
				(*(_247017_c))._field_Kind=jule::Str::lit("i32", 3);
				return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_untyped=true, ._field_Kind=_1d675b8e9_primI32, ._field_Model=jule::Any(_247017_c, &__jule_any_type19), ._field_Constant=_247017_c});;
			}
		}
		else {
			_case_begin_1da1cc784:;
			{
				_1d6649463_pushErr(_self_, _245536_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("i32", 3), &__jule_any_type4),jule::Any((*(_245536_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1da1cc72e:;
	};
}



inline jule::Ptr<_1d664721e_Data> _1d6661e81_evalI64TypeStatic(_1d6648e13_Eval* _self_, jule::Ptr<_1d64d5cd3_Token> _248436_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_248436_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1da1d14ad:;
			{
				jule::Ptr<_1d4321208_Const> _249017_c = static__1d4321648_NewI64(jule::MAX_I64);;
				(*(_249017_c))._field_Kind=jule::Str::lit("i64", 3);
				return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_untyped=true, ._field_Kind=_1d675bbb3_primI64, ._field_Model=jule::Any(_249017_c, &__jule_any_type19), ._field_Constant=_249017_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1da1d25e1:;
			{
				jule::Ptr<_1d4321208_Const> _249917_c = static__1d4321648_NewI64(jule::MIN_I64);;
				(*(_249917_c))._field_Kind=jule::Str::lit("i64", 3);
				return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_untyped=true, ._field_Kind=_1d675bbb3_primI64, ._field_Model=jule::Any(_249917_c, &__jule_any_type19), ._field_Constant=_249917_c});;
			}
		}
		else {
			_case_begin_1da1d18ed:;
			{
				_1d6649463_pushErr(_self_, _248436_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("i64", 3), &__jule_any_type4),jule::Any((*(_248436_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1da1d1898:;
	};
}



inline jule::Ptr<_1d664721e_Data> _1d66622c2_evalU8TypeStatic(_1d6648e13_Eval* _self_, jule::Ptr<_1d64d5cd3_Token> _251335_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_251335_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1da1d598a:;
			{
				jule::Ptr<_1d4321208_Const> _251817_c = static__1d4321912_NewU64(255LLU);;
				(*(_251817_c))._field_Kind=jule::Str::lit("u8", 2);
				return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_untyped=true, ._field_Kind=_1d675be7c_primU8, ._field_Model=jule::Any(_251817_c, &__jule_any_type19), ._field_Constant=_251817_c});;
			}
		}
		else {
			_case_begin_1da1d5209:;
			{
				_1d6649463_pushErr(_self_, _251335_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("u8", 2), &__jule_any_type4),jule::Any((*(_251335_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1da1d55c2:;
	};
}



inline jule::Ptr<_1d664721e_Data> _1d6662613_evalU16TypeStatic(_1d6648e13_Eval* _self_, jule::Ptr<_1d64d5cd3_Token> _253236_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_253236_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1da1d85e7:;
			{
				jule::Ptr<_1d4321208_Const> _253717_c = static__1d4321912_NewU64(65535LLU);;
				(*(_253717_c))._field_Kind=jule::Str::lit("u16", 3);
				return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_untyped=true, ._field_Kind=_1d675c246_primU16, ._field_Model=jule::Any(_253717_c, &__jule_any_type19), ._field_Constant=_253717_c});;
			}
		}
		else {
			_case_begin_1da1d7d55:;
			{
				_1d6649463_pushErr(_self_, _253236_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("u16", 3), &__jule_any_type4),jule::Any((*(_253236_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1da1d822e:;
	};
}



inline jule::Ptr<_1d664721e_Data> _1d6662954_evalU32TypeStatic(_1d6648e13_Eval* _self_, jule::Ptr<_1d64d5cd3_Token> _255136_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_255136_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1da1db254:;
			{
				jule::Ptr<_1d4321208_Const> _255617_c = static__1d4321912_NewU64(4294967295LLU);;
				(*(_255617_c))._field_Kind=jule::Str::lit("u32", 3);
				return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_untyped=true, ._field_Kind=_1d675c510_primU32, ._field_Model=jule::Any(_255617_c, &__jule_any_type19), ._field_Constant=_255617_c});;
			}
		}
		else {
			_case_begin_1da1da9b2:;
			{
				_1d6649463_pushErr(_self_, _255136_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("u32", 3), &__jule_any_type4),jule::Any((*(_255136_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1da1dad8b:;
	};
}



inline jule::Ptr<_1d664721e_Data> _1d6662c95_evalU64TypeStatic(_1d6648e13_Eval* _self_, jule::Ptr<_1d64d5cd3_Token> _257036_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_257036_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1da1dddb1:;
			{
				jule::Ptr<_1d4321208_Const> _257517_c = static__1d4321912_NewU64(jule::MAX_U64);;
				(*(_257517_c))._field_Kind=jule::Str::lit("u64", 3);
				return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_untyped=true, ._field_Kind=_1d675c983_primU64, ._field_Model=jule::Any(_257517_c, &__jule_any_type19), ._field_Constant=_257517_c});;
			}
		}
		else {
			_case_begin_1da1dd61e:;
			{
				_1d6649463_pushErr(_self_, _257036_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("u64", 3), &__jule_any_type4),jule::Any((*(_257036_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1da1dd9e8:;
	};
}



inline jule::Ptr<_1d664721e_Data> _1d66630d6_evalF32TypeStatic(_1d6648e13_Eval* _self_, jule::Ptr<_1d64d5cd3_Token> _258936_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ (*(_258936_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1da1e1732:;
			{
				jule::Ptr<_1d4321208_Const> _259617_c = static__1d432225e_NewF64(340282346638528860000000000000000000000.0);;
				(*(_259617_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_untyped=true, ._field_Kind=_1d675cc4c_primF32, ._field_Model=jule::Any(_259617_c, &__jule_any_type19), ._field_Constant=_259617_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1da1e2b40:;
			{
				jule::Ptr<_1d4321208_Const> _260517_c = static__1d432225e_NewF64(-340282346638528860000000000000000000000.0);;
				(*(_260517_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_untyped=true, ._field_Kind=_1d675cc4c_primF32, ._field_Model=jule::Any(_260517_c, &__jule_any_type19), ._field_Constant=_260517_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("SmallestNonZero", 15)) {
			_case_begin_1da1e2ba6:;
			{
				jule::Ptr<_1d4321208_Const> _261417_c = static__1d432225e_NewF64(0.000000000000000000000000000000000000000000001401298464324817);;
				(*(_261417_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_untyped=true, ._field_Kind=_1d675cc4c_primF32, ._field_Model=jule::Any(_261417_c, &__jule_any_type19), ._field_Constant=_261417_c});;
			}
		}
		else {
			_case_begin_1da1e1e3b:;
			{
				_1d6649463_pushErr(_self_, _258936_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("f32", 3), &__jule_any_type4),jule::Any((*(_258936_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1da1e1dd6:;
	};
}



inline jule::Ptr<_1d664721e_Data> _1d6663427_evalF64TypeStatic(_1d6648e13_Eval* _self_, jule::Ptr<_1d64d5cd3_Token> _262836_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ (*(_262836_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1da1e6d42:;
			{
				jule::Ptr<_1d4321208_Const> _263517_c = static__1d432225e_NewF64(jule::MAX_F64);;
				(*(_263517_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_untyped=true, ._field_Kind=_1d675d016_primF64, ._field_Model=jule::Any(_263517_c, &__jule_any_type19), ._field_Constant=_263517_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1da1e8250:;
			{
				jule::Ptr<_1d4321208_Const> _264417_c = static__1d432225e_NewF64(jule::MIN_F64);;
				(*(_264417_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_untyped=true, ._field_Kind=_1d675d016_primF64, ._field_Model=jule::Any(_264417_c, &__jule_any_type19), ._field_Constant=_264417_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("SmallestNonZero", 15)) {
			_case_begin_1da1e82b6:;
			{
				jule::Ptr<_1d4321208_Const> _265317_c = static__1d432225e_NewF64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);;
				(*(_265317_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_untyped=true, ._field_Kind=_1d675d016_primF64, ._field_Model=jule::Any(_265317_c, &__jule_any_type19), ._field_Constant=_265317_c});;
			}
		}
		else {
			_case_begin_1da1e755c:;
			{
				_1d6649463_pushErr(_self_, _262836_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("f64", 3), &__jule_any_type4),jule::Any((*(_262836_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1da1e7507:;
	};
}



inline jule::Ptr<_1d664721e_Data> _1d6663823_evalPrimStatic(_1d6648e13_Eval* _self_, jule::Str _266733_kind, jule::Ptr<_1d64d5cd3_Token> _266744_ident) {
	{
		auto &_match_expr{ _266733_kind };
		
		if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1da1e779e:;
			{
				return _1d6660d2b_evalIntTypeStatic(_self_, _266744_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4)) {
			_case_begin_1da1ebb27:;
			{
				return _1d666116c_evalUintTypeStatic(_self_, _266744_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1da1ebb8d:;
			{
				return _1d66614ad_evalI8TypeStatic(_self_, _266744_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1da1ebc04:;
			{
				return _1d66617ee_evalI16TypeStatic(_self_, _266744_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1da1ebc6a:;
			{
				return _1d6661b40_evalI32TypeStatic(_self_, _266744_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1da1ec870:;
			{
				return _1d6661e81_evalI64TypeStatic(_self_, _266744_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1da1ec8d6:;
			{
				return _1d66622c2_evalU8TypeStatic(_self_, _266744_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1da1ec94c:;
			{
				return _1d6662613_evalU16TypeStatic(_self_, _266744_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1da1ec9b3:;
			{
				return _1d6662954_evalU32TypeStatic(_self_, _266744_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1da1eca29:;
			{
				return _1d6662c95_evalU64TypeStatic(_self_, _266744_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1da1eca90:;
			{
				return _1d66630d6_evalF32TypeStatic(_self_, _266744_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1da1ecb06:;
			{
				return _1d6663427_evalF64TypeStatic(_self_, _266744_ident);;
			}
		}
		else {
			_case_begin_1da1eb96d:;
			{
				_1d6649463_pushErr(_self_, _266744_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_266733_kind, &__jule_any_type4),jule::Any((*(_266744_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1da1eb918:;
	};
}



inline jule::Ptr<_1d664721e_Data> _1d6663c1e_evalTypeStatic(_1d6648e13_Eval* _self_, jule::Ptr<_1d664721e_Data> _269937_d, jule::Ptr<_1d6503828_SubIdentExpr> _269951_si) {
	{
		
		if ((_1d667a186_Prim((*(_269937_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1da201e5c:;
			{
				return _1d6663823_evalPrimStatic(_self_, _1d6680950_Str(_1d667a186_Prim((*(_269937_d))._field_Kind.ptr()).ptr()), (*(_269951_si))._field_Ident);;
			}
		}
		else if ((_1d667a939_Enum((*(_269937_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1da202b72:;
			{
				return _1d665e16a_evalEnumStatic(_self_, _1d667a939_Enum((*(_269937_d))._field_Kind.ptr()), (*(_269951_si))._field_Ident);;
			}
		}
		else if ((_1d667abc0_TypeEnum((*(_269937_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1da202bd8:;
			{
				return _1d665e566_evalTypeEnumStatic(_self_, _1d667abc0_TypeEnum((*(_269937_d))._field_Kind.ptr()), (*(_269951_si))._field_Ident);;
			}
		}
		else if ((_1d667b709_Struct((*(_269937_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1da202c4e:;
			{
				return _1d665e962_evalStructStatic(_self_, _1d667b709_Struct((*(_269937_d))._field_Kind.ptr()), (*(_269951_si))._field_Ident);;
			}
		}
		else {
			_case_begin_1da201aa5:;
			{
				_1d6649463_pushErr(_self_, (*(_269951_si))._field_Ident, jule::Str::lit("type @ is not supports sub-defines", 34), jule::Slice<jule::Any>::make({jule::Any(_1d6677ded_Str((*(_269937_d))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1da2019d9:;
	};
}



inline jule::Ptr<_1d664721e_Data> _1da209a14_comptimeObjSubIdent(_1d6648e13_Eval* _self_, jule::Ptr<_1d655c002_comptimeTypeInfo>* _271557_ct, jule::Ptr<_1d664721e_Data>* _271577_d, jule::Ptr<_1d6503828_SubIdentExpr>* _271588_si) {
	jule::Ptr<_1d664721e_Data> _271613_cd = _1d6563206_subIdent((*(_271557_ct)), &((*((*((*(_271588_si))))._field_Ident))._field_Kind));;
	if ((_271613_cd == nullptr)) {
		_1d6649463_pushErr(_self_, (*((*(_271588_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1d6677ded_Str((*((*(_271577_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*((*(_271588_si))))._field_Ident))._field_Kind, &__jule_any_type4)}));
	};
	return _271613_cd;;
}

inline jule::Ptr<_1d664721e_Data> _1da20e0bd_comptimeObjSubIdent(_1d6648e13_Eval* _self_, jule::Ptr<_1d654d08c_comptimeStructField>* _271557_ct, jule::Ptr<_1d664721e_Data>* _271577_d, jule::Ptr<_1d6503828_SubIdentExpr>* _271588_si) {
	jule::Ptr<_1d664721e_Data> _271613_cd = _1d654e940_subIdent((*(_271557_ct)), &((*((*((*(_271588_si))))._field_Ident))._field_Kind));;
	if ((_271613_cd == nullptr)) {
		_1d6649463_pushErr(_self_, (*((*(_271588_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1d6677ded_Str((*((*(_271577_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*((*(_271588_si))))._field_Ident))._field_Kind, &__jule_any_type4)}));
	};
	return _271613_cd;;
}

inline jule::Ptr<_1d664721e_Data> _1da213633_comptimeObjSubIdent(_1d6648e13_Eval* _self_, jule::Ptr<_1d6554604_comptimeEnumField>* _271557_ct, jule::Ptr<_1d664721e_Data>* _271577_d, jule::Ptr<_1d6503828_SubIdentExpr>* _271588_si) {
	jule::Ptr<_1d664721e_Data> _271613_cd = _1d655568d_subIdent((*(_271557_ct)), &((*((*((*(_271588_si))))._field_Ident))._field_Kind));;
	if ((_271613_cd == nullptr)) {
		_1d6649463_pushErr(_self_, (*((*(_271588_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1d6677ded_Str((*((*(_271577_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*((*(_271588_si))))._field_Ident))._field_Kind, &__jule_any_type4)}));
	};
	return _271613_cd;;
}

inline jule::Ptr<_1d664721e_Data> _1da217bdc_comptimeObjSubIdent(_1d6648e13_Eval* _self_, jule::Ptr<_1d6557096_comptimeParam>* _271557_ct, jule::Ptr<_1d664721e_Data>* _271577_d, jule::Ptr<_1d6503828_SubIdentExpr>* _271588_si) {
	jule::Ptr<_1d664721e_Data> _271613_cd = _1d6558eee_subIdent((*(_271557_ct)), &((*((*((*(_271588_si))))._field_Ident))._field_Kind));;
	if ((_271613_cd == nullptr)) {
		_1d6649463_pushErr(_self_, (*((*(_271588_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1d6677ded_Str((*((*(_271577_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*((*(_271588_si))))._field_Ident))._field_Kind, &__jule_any_type4)}));
	};
	return _271613_cd;;
}

inline jule::Ptr<_1d664721e_Data> _1da21c395_comptimeObjSubIdent(_1d6648e13_Eval* _self_, jule::Ptr<_1d6551348_comptimeStatic>* _271557_ct, jule::Ptr<_1d664721e_Data>* _271577_d, jule::Ptr<_1d6503828_SubIdentExpr>* _271588_si) {
	jule::Ptr<_1d664721e_Data> _271613_cd = _1d6552c73_subIdent((*(_271557_ct)), &((*((*((*(_271588_si))))._field_Ident))._field_Kind));;
	if ((_271613_cd == nullptr)) {
		_1d6649463_pushErr(_self_, (*((*(_271588_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1d6677ded_Str((*((*(_271577_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*((*(_271588_si))))._field_Ident))._field_Kind, &__jule_any_type4)}));
	};
	return _271613_cd;;
}

inline jule::Ptr<_1d664721e_Data> _1da22190a_comptimeObjSubIdent(_1d6648e13_Eval* _self_, jule::Ptr<_1d6563514_comptimeValue>* _271557_ct, jule::Ptr<_1d664721e_Data>* _271577_d, jule::Ptr<_1d6503828_SubIdentExpr>* _271588_si) {
	jule::Ptr<_1d664721e_Data> _271613_cd = _1d6565a55_subIdent((*(_271557_ct)), &((*((*((*(_271588_si))))._field_Ident))._field_Kind));;
	if ((_271613_cd == nullptr)) {
		_1d6649463_pushErr(_self_, (*((*(_271588_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1d6677ded_Str((*((*(_271577_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*((*(_271588_si))))._field_Ident))._field_Kind, &__jule_any_type4)}));
	};
	return _271613_cd;;
}

inline jule::Ptr<_1d664721e_Data> _1da225e70_comptimeObjSubIdent(_1d6648e13_Eval* _self_, jule::Ptr<_1d656745d_comptimeFile>* _271557_ct, jule::Ptr<_1d664721e_Data>* _271577_d, jule::Ptr<_1d6503828_SubIdentExpr>* _271588_si) {
	jule::Ptr<_1d664721e_Data> _271613_cd = _1d6568d99_subIdent((*(_271557_ct)), &((*((*((*(_271588_si))))._field_Ident))._field_Kind));;
	if ((_271613_cd == nullptr)) {
		_1d6649463_pushErr(_self_, (*((*(_271588_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1d6677ded_Str((*((*(_271577_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*((*(_271588_si))))._field_Ident))._field_Kind, &__jule_any_type4)}));
	};
	return _271613_cd;;
}



inline __jule_tuple_x_1d664721e_Data__jule_tuple_bool _1d66645c1_tryComptimeObjSubIdent(_1d6648e13_Eval* _self_, jule::Ptr<_1d664721e_Data>* _272346_d, jule::Ptr<_1d6503828_SubIdentExpr> _272360_si) {
	__jule_tuple_x_1d664721e_Data__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if ((_1d667da4c_comptimeTypeInfo((*((*(_272346_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1da207da8:;
			{
				jule::Ptr<_1d655c002_comptimeTypeInfo> _272617_ct = _1d667da4c_comptimeTypeInfo((*((*(_272346_d))))._field_Kind.ptr());;
				__jule_func_result.__jule_result_arg0 = _1da209a14_comptimeObjSubIdent(_self_, &(_272617_ct), _272346_d, &(_272360_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1d667c760_comptimeStructField((*((*(_272346_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1da207a01:;
			{
				jule::Ptr<_1d654d08c_comptimeStructField> _272917_ct = _1d667c760_comptimeStructField((*((*(_272346_d))))._field_Kind.ptr());;
				__jule_func_result.__jule_result_arg0 = _1da20e0bd_comptimeObjSubIdent(_self_, &(_272917_ct), _272346_d, &(_272360_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1d667cc7c_comptimeEnumField((*((*(_272346_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1da207a67:;
			{
				jule::Ptr<_1d6554604_comptimeEnumField> _273217_ct = _1d667cc7c_comptimeEnumField((*((*(_272346_d))))._field_Kind.ptr());;
				__jule_func_result.__jule_result_arg0 = _1da213633_comptimeObjSubIdent(_self_, &(_273217_ct), _272346_d, &(_272360_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1d667d299_comptimeParam((*((*(_272346_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1da207acd:;
			{
				jule::Ptr<_1d6557096_comptimeParam> _273517_ct = _1d667d299_comptimeParam((*((*(_272346_d))))._field_Kind.ptr());;
				__jule_func_result.__jule_result_arg0 = _1da217bdc_comptimeObjSubIdent(_self_, &(_273517_ct), _272346_d, &(_272360_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1d667e069_comptimeStatic((*((*(_272346_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1da207b44:;
			{
				jule::Ptr<_1d6551348_comptimeStatic> _273817_ct = _1d667e069_comptimeStatic((*((*(_272346_d))))._field_Kind.ptr());;
				__jule_func_result.__jule_result_arg0 = _1da21c395_comptimeObjSubIdent(_self_, &(_273817_ct), _272346_d, &(_272360_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1d667e300_comptimeValue((*((*(_272346_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1da20822c:;
			{
				jule::Ptr<_1d6563514_comptimeValue> _274117_ct = _1d667e300_comptimeValue((*((*(_272346_d))))._field_Kind.ptr());;
				__jule_func_result.__jule_result_arg0 = _1da22190a_comptimeObjSubIdent(_self_, &(_274117_ct), _272346_d, &(_272360_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1d667e586_comptimeFile((*((*(_272346_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1da208293:;
			{
				jule::Ptr<_1d656745d_comptimeFile> _274417_ct = _1d667e586_comptimeFile((*((*(_272346_d))))._field_Kind.ptr());;
				__jule_func_result.__jule_result_arg0 = _1da225e70_comptimeObjSubIdent(_self_, &(_274417_ct), _272346_d, &(_272360_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1da20798a:;
			{
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		_match_end_1da2078be:;
	};
}



inline jule::Ptr<_1d664721e_Data> _1d66649bc_evalObjSubIdent(_1d6648e13_Eval* _self_, jule::Ptr<_1d664721e_Data> _275138_d, jule::Ptr<_1d6503828_SubIdentExpr> _275152_si) {
	if (_1d64d8742_IsIgnoreIdent((*((*(_275152_si))._field_Ident))._field_Kind)) {
		_1d6649463_pushErr(_self_, (*(_275152_si))._field_Ident, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		jule::Ptr<_1d664721e_Data> _275817_compData;;
		jule::Bool _275827_ok = false;;
		({
			__jule_tuple_x_1d664721e_Data__jule_tuple_bool __jule_assign_result = _1d66645c1_tryComptimeObjSubIdent(_self_, &(_275138_d), _275152_si);
			_275817_compData = __jule_assign_result.__jule_result_arg0;
			_275827_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_275827_ok) {
			return _275817_compData;;
		};
	};
	jule::Ptr<_1d6677a35_TypeKind> _276413_kind = (*(_275138_d))._field_Kind;;
	{
		
		if ((_1d667a6a3_Ptr((*(_275138_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1da22b2a5:;
			{
				jule::Ptr<_1d6687902_Ptr> _276713_ptr = _1d667a6a3_Ptr((*(_275138_d))._field_Kind.ptr());;
				if (_1d668843b_IsUnsafe(_276713_ptr.ptr())) {
					goto _match_end_1da22b22d;
				};
				if ((!(_1d6649e58_isUnsafe(_self_)))) {
					_1d6649463_pushErr(_self_, (*(_275152_si))._field_Ident, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
				};
				_276413_kind=(*(_1d667a6a3_Ptr((*(_275138_d))._field_Kind.ptr())))._field_Elem;
				_1d6674d51_makeImplicitDeref(&(_275138_d), (*(_275152_si))._field_Ident);
			}
		}
		else if ((_1d667a41c_Sptr((*(_275138_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1da22b32c:;
			{
				_276413_kind=(*(_1d667a41c_Sptr((*(_275138_d))._field_Kind.ptr())))._field_Elem;
				_1d6674d51_makeImplicitDeref(&(_275138_d), (*(_275152_si))._field_Ident);
			}
		}
		_match_end_1da22b22d:;
	};
	{
		
		if ((_1d667b990_Trait((*(_275138_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1da22e5b6:;
			{
				return _1d665ee18_evalTraitSubIdent(_self_, _275138_d, _1d667b990_Trait((*(_275138_d))._field_Kind.ptr()), (*(_275152_si))._field_Ident);;
			}
		}
		else if ((_1d667b709_Struct(_276413_kind.ptr()) != nullptr)) {
			_case_begin_1da22e63d:;
			{
				jule::Ptr<_1d652005e_StructIns> _278513_s = _1d667b709_Struct(_276413_kind.ptr());;
				if (_1d6672348_isInstancedStruct(_278513_s)) {
					jule::Bool _278721_usedReferenceElem = (_1d667a41c_Sptr((*(_275138_d))._field_Kind.ptr()) != nullptr);;
					return _1d66609da_evalStructSubIdent(_self_, _275138_d, _1d667b709_Struct(_276413_kind.ptr()), _275152_si, _278721_usedReferenceElem);;
				};
			}
		}
		_match_end_1da230221:;
	};
	_1d6649463_pushErr(_self_, (*(_275152_si))._field_Ident, jule::Str::lit("object @ is not supports sub-defines", 36), jule::Slice<jule::Any>::make({jule::Any(_1d6677ded_Str((*(_275138_d))._field_Kind.ptr()), &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1d664721e_Data> _1d6664d0d_evalSubIdent(jule::Ptr<_1d6648e13_Eval> _self_, jule::Ptr<_1d6503828_SubIdentExpr> _279536_si) {
	jule::Ptr<_1d6677a35_TypeKind> _279613_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=nullptr;
	__JULE_DEFER({
		(*(_self_))._field_prefix=_279613_prefix;
	});;
	jule::Ptr<_1d664721e_Data> _279913_d = _1d666635e_evalExprKind(_self_, (*((*(_279536_si))._field_Expr))._field_Kind);;
	if ((_279913_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_279913_d))._field_Decl) {
		return _1d6663c1e_evalTypeStatic(_self_.ptr(), _279913_d, _279536_si);;
	};
	return _1d66649bc_evalObjSubIdent(_self_.ptr(), _279913_d, _279536_si);;
}



inline jule::Ptr<_1d664721e_Data> _1d666514e_evalTuple(jule::Ptr<_1d6648e13_Eval> _self_, jule::Ptr<_1d65013d6_TupleExpr> _280933_tup) {
	jule::Ptr<_1d6685702_Tuple> _281013_tupT = jule::new_ptr<_1d6685702_Tuple>();;
	(*(_281013_tupT))._field_Types=jule::Slice<jule::Ptr<_1d6677a35_TypeKind>>::alloc(0LL, (*(_280933_tup))._field_Expr.len());
	jule::Ptr<_1d6529c06_TupleExprModel> _281313_model = jule::new_ptr<_1d6529c06_TupleExprModel>(_1d6529c06_TupleExprModel{._field_Datas=jule::Slice<jule::Ptr<_1d664721e_Data>>::alloc(0LL, (*(_280933_tup))._field_Expr.len())});;
	jule::Bool _281713_ok = true;;
	{
		auto expr = &((*(_280933_tup))._field_Expr);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1da239307:;
		if (it != expr_end) {
			jule::Ptr<_1d6500715_Expr> _281821_expr = *it;
			{
				jule::Ptr<_1d664721e_Data> _281917_d = _1d6667173_evalExpr(_self_, _281821_expr);;
				if ((_281917_d == nullptr)) {
					_281713_ok=false;
					goto _iter_next_1da239307;
				};
				{ jule::Slice<jule::Ptr<_1d6677a35_TypeKind>> &__jule_push_dest = (*(_281013_tupT))._field_Types; __jule_push_dest.push((*(_281917_d))._field_Kind); };
				{ jule::Slice<jule::Ptr<_1d664721e_Data>> &__jule_push_dest = (*(_281313_model))._field_Datas; __jule_push_dest.push(_281917_d); };
			}
			_iter_next_1da239307:;
			++it;
			goto _iter_begin_1da239307;
		}
		_iter_end_1da239307:;
	};
	if ((!(_281713_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=jule::new_ptr<_1d6677a35_TypeKind>(_1d6677a35_TypeKind{._field_Kind=jule::Trait<_1d667757e_Kind>(_281013_tupT, 23)}), ._field_Model=jule::Any(_281313_model, &__jule_any_type81), });;
}



inline jule::Ptr<_1d664721e_Data> _1d666554a_evalMap(jule::Ptr<_1d6648e13_Eval> _self_, jule::Ptr<_1d66862a2_Map> _283831_m, jule::Ptr<_1d6505c15_BraceLit> _283844_lit) {
	jule::Ptr<_1d6527ac2_MapExprModel> _283913_model = jule::new_ptr<_1d6527ac2_MapExprModel>(_1d6527ac2_MapExprModel{._field_KeyKind=(*(_283831_m))._field_Key, ._field_ValKind=(*(_283831_m))._field_Val, });;
	{
		auto expr = &((*(_283844_lit))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1da23d075:;
		if (it != expr_end) {
			jule::Ptr<_1d6500715_Expr> _284421_expr = *it;
			{
				{
					auto &_match_expr{ (*(_284421_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type78) {
						_case_begin_1da23d65d:;
						{
							goto _match_end_1da23d96b;
						}
					}
					else {
						_case_begin_1da23d9c1:;
						{
							_1d6649463_pushErr(_self_.ptr(), (*(_283844_lit))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							return nullptr;;
						}
					}
					_match_end_1da23d96b:;
				};
				jule::Ptr<_1d6506540_KeyValPair> _285417_pair = (*(_284421_expr))._field_Kind.cast_ptr<_1d6506540_KeyValPair>(&__jule_any_type78);;
				jule::Ptr<_1d664721e_Data> _285617_key = _1d6667173_evalExpr(_self_, (*(_285417_pair))._field_Key);;
				if ((_285617_key == nullptr)) {
					return nullptr;;
				};
				jule::Ptr<_1d664721e_Data> _286117_val = _1d6667173_evalExpr(_self_, (*(_285417_pair))._field_Val);;
				if ((_286117_val == nullptr)) {
					return nullptr;;
				};
				_1d65c13c9_checkAssignType((*(_self_))._field_s, false, &((*(_283831_m))._field_Key), &(_285617_key), (*(_285417_pair))._field_Colon);
				_1d65c13c9_checkAssignType((*(_self_))._field_s, false, &((*(_283831_m))._field_Val), &(_286117_val), (*(_285417_pair))._field_Colon);
				{ jule::Slice<jule::Ptr<_1d652761b_KeyValPairExprModel>> &__jule_push_dest = (*(_283913_model))._field_Entries; __jule_push_dest.push(jule::new_ptr<_1d652761b_KeyValPairExprModel>(_1d652761b_KeyValPairExprModel{._field_Key=(*(_285617_key))._field_Model, ._field_Val=(*(_286117_val))._field_Model})); };
			}
			_iter_next_1da23d075:;
			++it;
			goto _iter_begin_1da23d075;
		}
		_iter_end_1da23d075:;
	};
	return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=jule::new_ptr<_1d6677a35_TypeKind>(_1d6677a35_TypeKind{._field_Kind=jule::Trait<_1d667757e_Kind>(_283831_m, 24)}), ._field_Mutable=true, ._field_Model=jule::Any(_283913_model, &__jule_any_type98), });;
}



inline jule::Ptr<_1d664721e_Data> _1d666588b_evalBraceLit(jule::Ptr<_1d6648e13_Eval> _self_, jule::Ptr<_1d6505c15_BraceLit> _288236_lit) {
	{
		
		if (((*(_self_))._field_prefix == nullptr)) {
			_case_begin_1da24482e:;
			{
				_1d6649463_pushErr(_self_.ptr(), (*(_288236_lit))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1d667bc26_Map((*(_self_))._field_prefix.ptr()) != nullptr)) {
			_case_begin_1da24516a:;
			{
				return _1d666554a_evalMap(_self_, _1d667bc26_Map((*(_self_))._field_prefix.ptr()), _288236_lit);;
			}
		}
		else if ((_1d667b709_Struct((*(_self_))._field_prefix.ptr()) != nullptr)) {
			_case_begin_1da2451d1:;
			{
				return _1d665bc4a_evalStructLitExplicit(_self_, _1d667b709_Struct((*(_self_))._field_prefix.ptr()), (*(_288236_lit))._field_Exprs, (*(_288236_lit))._field_Token);;
			}
		}
		else {
			_case_begin_1da244488:;
			{
				_1d6649463_pushErr(_self_.ptr(), (*(_288236_lit))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1da243597:;
	};
}



inline jule::Ptr<_1d664721e_Data> _1d6665bcc_evalAnonFunc(jule::Ptr<_1d6648e13_Eval> _self_, jule::Ptr<_1d650d091_FnDecl> _289736_decl) {
	_1d66898e3_typeChecker _289813_tc = _1d66898e3_typeChecker{._field_s=(*(_self_))._field_s, ._field_rootLookup=(*(_self_))._field_lookup, ._field_lookup=(*(_self_))._field_lookup, };;
	jule::Ptr<_1d6535173_FnIns> _290313_ins = _1d66915ba_buildFunc(&_289813_tc, _289736_decl);;
	if ((_290313_ins == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1da2499dd:;
			{
				jule::Ptr<_1d657b42d_scopeChecker> _290917_sc = (*(_self_))._field_lookup.cast_ptr<_1d657b42d_scopeChecker>(0);;
				jule::Ptr<_1d657b42d_scopeChecker> _291017_scc = _1d658cdbd_newChildChecker(_290917_sc);;
				(*(_291017_scc))._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1d6579e87_scopeLabel>>>(nullptr);
				(*(_291017_scc))._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1d657a51a_scopeGoto>>>(nullptr);
				(*(_291017_scc))._field_owner=nullptr;
				(*(_291017_scc))._field_childIndex=0LL;
				(*(_291017_scc))._field_it=0LLU;
				(*(_291017_scc))._field_cse=0LLU;
				(*(_291017_scc))._field_owner=_290313_ins;
				_1d65d383c_checkFnInsSc((*(_self_))._field_s.ptr(), &(_290313_ins), &(_291017_scc));
			}
		}
		else {
			_case_begin_1da24a0d7:;
			{
				_1d65d3e58_checkFnIns((*(_self_))._field_s, &(_290313_ins));
			}
		}
		_match_end_1da249ec7:;
	};
	return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=jule::new_ptr<_1d6677a35_TypeKind>(_1d6677a35_TypeKind{._field_Kind=jule::Trait<_1d667757e_Kind>(_290313_ins, 1)}), ._field_Model=jule::Any(jule::new_ptr<_1d6527242_AnonFnExprModel>(_1d6527242_AnonFnExprModel{._field_Func=_290313_ins, ._field_Global=_1d664a1de_isGlobal(_self_.ptr())}), &__jule_any_type99), });;
}



inline jule::Ptr<_1d664721e_Data> _1d666601d_evalBinary(jule::Ptr<_1d6648e13_Eval> _self_, jule::Ptr<_1d6503cce_BinaryExpr> _293234_op) {
	_1d66695c6_binaryEval _293313_bs = static__1d6669bae_newPlain(_self_);;
	if (((*(_self_))._field_prefix != nullptr)) {
		jule::Ptr<_1d668060e_Prim> _293613_prim = _1d667a186_Prim((*(_self_))._field_prefix.ptr());;
		if (((_293613_prim == nullptr) || (!(_1d4320c30_IsNum(_1d6680950_Str(_293613_prim.ptr())))))) {
			jule::Ptr<_1d6677a35_TypeKind> _293821_prefix = (*(_self_))._field_prefix;;
			(*(_self_))._field_prefix=nullptr;
			__JULE_DEFER({
				(*(_self_))._field_prefix=_293821_prefix;
			});;
			return _1d6670654_eval(&_293313_bs, &(_293234_op));;
		};
	};
	return _1d6670654_eval(&_293313_bs, &(_293234_op));;
}



inline jule::Ptr<_1d664721e_Data> _1d666635e_evalExprKind(jule::Ptr<_1d6648e13_Eval> _self_, jule::Any _294736_kind) {
	{
		auto &_match_expr{ _294736_kind };
		
		if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1da2534ec:;
			{
				jule::Ptr<_1d6500a12_RangeExpr> _295017_e = _294736_kind.cast_ptr<_1d6500a12_RangeExpr>(&__jule_any_type100);;
				return _1d666635e_evalExprKind(_self_, (*((*(_295017_e))._field_Expr))._field_Kind);;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1da2531bc:;
			{
				return _1d664b993_evalLit(_self_.ptr(), _294736_kind.cast_ptr<_1d65017b0_LitExpr>(&__jule_any_type101));;
			}
		}
		else if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1da25373e:;
			{
				return _1d66516ce_evalIdent(_self_.ptr(), _294736_kind.cast_ptr<_1d6502140_IdentExpr>(&__jule_any_type79));;
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1da2537b6:;
			{
				return _1d6651a20_evalUnary(_self_, _294736_kind.cast_ptr<_1d65027c2_UnaryExpr>(&__jule_any_type87));;
			}
		}
		else if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1da25383d:;
			{
				return _1d6651d61_evalVariadic(_self_, _294736_kind.cast_ptr<_1d6502b9b_VariadicExpr>(&__jule_any_type75));;
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1da2538b5:;
			{
				return _1d66521a2_evalUnsafe(_self_, _294736_kind.cast_ptr<_1d6501b89_UnsafeExpr>(&__jule_any_type102));;
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1da253992:;
			{
				return _1d6652cda_evalSliceExpr(_self_, _294736_kind.cast_ptr<_1d6506c38_SliceExpr>(&__jule_any_type93));;
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1da253a19:;
			{
				return _1d6656481_evalIndexing(_self_, _294736_kind.cast_ptr<_1d65076c8_IndexingExpr>(&__jule_any_type103));;
			}
		}
		else if (_match_expr.type == &__jule_any_type104) {
			_case_begin_1da253a91:;
			{
				return _1d66577b2_evalSlicing(_self_, _294736_kind.cast_ptr<_1d6507d38_SlicingExpr>(&__jule_any_type104));;
			}
		}
		else if (_match_expr.type == &__jule_any_type105) {
			_case_begin_1da253b18:;
			{
				return _1d665b453_evalCast(_self_, _294736_kind.cast_ptr<_1d6503075_CastExpr>(&__jule_any_type105));;
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1da253b90:;
			{
				return _1d665b794_evalNsSelection(_self_.ptr(), _294736_kind.cast_ptr<_1d650344e_NsSelectionExpr>(&__jule_any_type89));;
			}
		}
		else if (_match_expr.type == &__jule_any_type106) {
			_case_begin_1da253c17:;
			{
				return _1d665c08b_evalStructLit(_self_, _294736_kind.cast_ptr<_1d650575e_StructLit>(&__jule_any_type106));;
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1da253c8e:;
			{
				return _1d665c663_evalType(_self_.ptr(), _294736_kind.cast_ptr<_1d64eb3d1_TypeDecl>(&__jule_any_type88));;
			}
		}
		else if (_match_expr.type == &__jule_any_type107) {
			_case_begin_1da253d16:;
			{
				return _1d665dc6e_evalFnCall(_self_, _294736_kind.cast_ptr<_1d650443e_FnCallExpr>(&__jule_any_type107));;
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1da253d8d:;
			{
				return _1d6664d0d_evalSubIdent(_self_, _294736_kind.cast_ptr<_1d6503828_SubIdentExpr>(&__jule_any_type85));;
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1da253e15:;
			{
				return _1d666514e_evalTuple(_self_, _294736_kind.cast_ptr<_1d65013d6_TupleExpr>(&__jule_any_type80));;
			}
		}
		else if (_match_expr.type == &__jule_any_type108) {
			_case_begin_1da253e8c:;
			{
				return _1d666588b_evalBraceLit(_self_, _294736_kind.cast_ptr<_1d6505c15_BraceLit>(&__jule_any_type108));;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1da254014:;
			{
				return _1d6665bcc_evalAnonFunc(_self_, _294736_kind.cast_ptr<_1d650d091_FnDecl>(&__jule_any_type14));;
			}
		}
		else if (_match_expr.type == &__jule_any_type109) {
			_case_begin_1da25408b:;
			{
				return _1d666601d_evalBinary(_self_, _294736_kind.cast_ptr<_1d6503cce_BinaryExpr>(&__jule_any_type109));;
			}
		}
		else {
			_case_begin_1da253310:;
			{
				return nullptr;;
			}
		}
		_match_end_1da253244:;
	};
}



inline jule::Ptr<_1d664721e_Data> _1d66666a0_eval1(jule::Ptr<_1d6648e13_Eval> _self_, jule::Ptr<_1d6500715_Expr> _299529_expr) {
	jule::Ptr<_1d664721e_Data> _299613_d = _1d666635e_evalExprKind(_self_, (*(_299529_expr))._field_Kind);;
	if (((_299613_d == nullptr) || ((*(_299613_d))._field_Kind == nullptr))) {
		return nullptr;;
	};
	{
		
		if ((_1d667b473_Fn((*(_299613_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1da25ec78:;
			{
				jule::Ptr<_1d6535173_FnIns> _300317_f = _1d667b473_Fn((*(_299613_d))._field_Kind.ptr());;
				if (_1d6536608_IsBuiltin(_300317_f.ptr())) {
					_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*(_299529_expr))._field_Token, jule::Str::lit("built-in functions should be invoked", 36), jule::Slice<jule::Any>());
					goto _match_end_1da25e3a4;
				};
				if (((*(_300317_f))._field_Generics.len() != (*((*(_300317_f))._field_Decl))._field_Generics.len())) {
					_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*(_299529_expr))._field_Token, jule::Str::lit("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
				};
				if (((!((*((*(_300317_f))._field_Decl))._field_Statically)) && _1d6532978_IsMethod((*(_300317_f))._field_Decl.ptr()))) {
					_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*(_299529_expr))._field_Token, jule::Str::lit("methods should be invoked", 25), jule::Slice<jule::Any>());
				};
			}
		}
		_match_end_1da25e3a4:;
	};
	return _299613_d;;
}



inline jule::Ptr<_1d664721e_Data> _1d66669e1_eval(jule::Ptr<_1d6648e13_Eval> _self_, jule::Ptr<_1d6500715_Expr> _302228_expr) {
	jule::Ptr<_1d664721e_Data> _302313_d = _1d66666a0_eval1(_self_, _302228_expr);;
	if ((_302313_d == nullptr)) {
		return nullptr;;
	};
	if (((((*(_self_))._field_owner == nullptr) || (!((*((*(_self_))._field_owner))._field_Constant))) && _1d667c243_comptime((*(_302313_d))._field_Kind.ptr()))) {
		_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), (*(_302228_expr))._field_Token, jule::Str::lit("compile-time evaluations cannot used as expression", 50), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _302313_d;;
}



inline jule::Ptr<_1d664721e_Data> _1d6666d32_evalExpr1(jule::Ptr<_1d6648e13_Eval> _self_, jule::Ptr<_1d6500715_Expr> _303733_expr) {
	jule::Ptr<_1d664721e_Data> _303813_d = _1d66666a0_eval1(_self_, _303733_expr);;
	{
		
		if ((_303813_d == nullptr)) {
			_case_begin_1da267c1a:;
			{
				return nullptr;;
			}
		}
		else if ((*(_303813_d))._field_Decl) {
			_case_begin_1da267c92:;
			{
				_1d6649463_pushErr(_self_.ptr(), (*(_303733_expr))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1da267b4e:;
			{
				return _303813_d;;
			}
		}
		_match_end_1da267ad8:;
	};
}



inline jule::Ptr<_1d664721e_Data> _1d6667173_evalExpr(jule::Ptr<_1d6648e13_Eval> _self_, jule::Ptr<_1d6500715_Expr> _305332_expr) {
	jule::Ptr<_1d664721e_Data> _305413_d = _1d66669e1_eval(_self_, _305332_expr);;
	{
		
		if ((_305413_d == nullptr)) {
			_case_begin_1da269b40:;
			{
				return nullptr;;
			}
		}
		else if ((*(_305413_d))._field_Decl) {
			_case_begin_1da269bb7:;
			{
				_1d6649463_pushErr(_self_.ptr(), (*(_305332_expr))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1da269a74:;
			{
				return _305413_d;;
			}
		}
		_match_end_1da269a0d:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1d6648e13_Eval _Src) {
	_Stream << "Eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "immutable:" << _Src._field_immutable << ", ";
	_Stream << "ignored:" << _Src._field_ignored << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "arg:" << _Src._field_arg;
	_Stream << "}";
	return _Stream;
}



inline _1d666763a_unaryEval static__1d6667a7a_new(jule::Ptr<_1d6648e13_Eval> _307423_e) {
	return _1d666763a_unaryEval{._field_e=_307423_e, };;
}



inline void _1d6667c78_minus(_1d666763a_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_1da26b7ce:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1d667a186_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1da26b49e:;
			{
				if ((!(_1d4320c30_IsNum(_1d6677ded_Str((*((*(_self_))._field_d))._field_Kind.ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1d667b709_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1da26b515:;
			{
				if (((*(_1d667b709_Struct((*((*(_self_))._field_d))._field_Kind.ptr())))._field_Operators._field_Neg == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1da26b438:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1da26b3b1:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*((*(_self_))._field_d))._field_Mutable=true;
	if (_1d6647ae3_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_1d4325c13_IsF64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_1da27100e:;
				{
					_1d4324c45_SetF64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::F64>((-(_1d4323617_ReadF64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else if (_1d43251c9_IsI64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_1da271086:;
				{
					_1d4324173_SetI64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::I64>((-(_1d4322acd_ReadI64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else if (_1d4325460_IsU64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_1da270b79:;
				{
					_1d4324173_SetI64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::I64>((-(_1d432389d_AsI64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else {
				_case_begin_1da270b13:;
				{
					jule::panic(jule::Str::lit("unimplemented constant type for unary.minus, this panic call should be unreachable", 82) + jule::Str("\nlocation: std/jule/sema/eval.jule:3112:17"));;
				}
			}
			_match_end_1da270a58:;
		};
		return;;
	};
	(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_1d65248d2_UnaryExprModel>(_1d65248d2_UnaryExprModel{._field_Expr=jule::new_ptr<_1d664721e_Data>((*((*(_self_))._field_d))), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
}



inline void _1d6667e76_plus(_1d666763a_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_1da2765db:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1d667a186_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1da2762ab:;
			{
				if ((!(_1d4320c30_IsNum(_1d6677ded_Str((*((*(_self_))._field_d))._field_Kind.ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1d667b709_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1da276322:;
			{
				if (((*(_1d667b709_Struct((*((*(_self_))._field_d))._field_Kind.ptr())))._field_Operators._field_Pos == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1da276245:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1da276179:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*((*(_self_))._field_d))._field_Mutable=true;
	if (_1d6647ae3_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_1d4325c13_IsF64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_1da27ad1b:;
				{
					_1d4324c45_SetF64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::F64>((+(_1d4323617_ReadF64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else if (_1d43251c9_IsI64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_1da27ad93:;
				{
					_1d4324173_SetI64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::I64>((+(_1d4322acd_ReadI64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else if (_1d4325460_IsU64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_1da27a986:;
				{
					_1d4324173_SetI64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::I64>((+(_1d432389d_AsI64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else {
				_case_begin_1da27a920:;
				{
					jule::panic(jule::Str::lit("unimplemented constant type for unary.plus, this panic call should be unreachable", 81) + jule::Str("\nlocation: std/jule/sema/eval.jule:3157:17"));;
				}
			}
			_match_end_1da27a865:;
		};
		return;;
	};
	(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_1d65248d2_UnaryExprModel>(_1d65248d2_UnaryExprModel{._field_Expr=jule::new_ptr<_1d664721e_Data>((*((*(_self_))._field_d))), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
}



inline void _1d6668174_caret(_1d666763a_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_1da2813e8:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1d667a186_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1da2810b8:;
			{
				if ((!(_1d4320625_IsInt(_1d6677ded_Str((*((*(_self_))._field_d))._field_Kind.ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1d667b709_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1da28112e:;
			{
				if (((*(_1d667b709_Struct((*((*(_self_))._field_d))._field_Kind.ptr())))._field_Operators._field_BitNot == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1da281052:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1da280e86:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*((*(_self_))._field_d))._field_Mutable=true;
	if (_1d6647ae3_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_1d43251c9_IsI64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_1da285b17:;
				{
					_1d4324173_SetI64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::I64>((~(_1d4322acd_ReadI64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else if (_1d4325460_IsU64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_1da285b8e:;
				{
					_1d432442b_SetU64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::U64>((~(_1d4322d64_ReadU64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else {
				_case_begin_1da28572c:;
				{
					jule::panic(jule::Str::lit("unimplemented constant type for unary.caret, this panic call should be unreachable", 82) + jule::Str("\nlocation: std/jule/sema/eval.jule:3200:17"));;
				}
			}
			_match_end_1da285672:;
		};
		return;;
	};
	(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_1d65248d2_UnaryExprModel>(_1d65248d2_UnaryExprModel{._field_Expr=jule::new_ptr<_1d664721e_Data>((*((*(_self_))._field_d))), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
}



inline void _1d6668372_excl(_1d666763a_unaryEval* _self_) {
	jule::Ptr<_1d668060e_Prim> _32149_t = _1d667a186_Prim((*((*(_self_))._field_d))._field_Kind.ptr());;
	if (((_32149_t == nullptr) || (!(_1d6683810_IsBool(_32149_t.ptr()))))) {
		(*(_self_))._field_d=nullptr;
		return;;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*((*(_self_))._field_d))._field_Mutable=true;
	if (_1d6647ae3_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_1d43256e6_IsBool((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_1da28bcd8:;
				{
					_1d43246d4_SetBool((*((*(_self_))._field_d))._field_Constant.ptr(), (!(_1d43230ea_ReadBool((*((*(_self_))._field_d))._field_Constant.ptr()))));
				}
			}
			else {
				_case_begin_1da28b90e:;
				{
					jule::panic(jule::Str::lit("unimplemented constant type for unary.excl, this panic call should be unreachable", 81) + jule::Str("\nlocation: std/jule/sema/eval.jule:3228:17"));;
				}
			}
			_match_end_1da28b843:;
		};
		return;;
	};
	(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_1d65248d2_UnaryExprModel>(_1d65248d2_UnaryExprModel{._field_Expr=jule::new_ptr<_1d664721e_Data>((*((*(_self_))._field_d))), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
}



inline void _1d6668570_star(_1d666763a_unaryEval* _self_) {
	(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_1d65248d2_UnaryExprModel>(_1d65248d2_UnaryExprModel{._field_Expr=jule::new_ptr<_1d664721e_Data>((*((*(_self_))._field_d))), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
	{
		
		if ((_1d667a6a3_Ptr((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1da29056c:;
			{
				if ((!(_1d6649e58_isUnsafe((*(_self_))._field_e.ptr())))) {
					_1d6649463_pushErr((*(_self_))._field_e.ptr(), (*((*(_self_))._field_u))._field_Op, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1d6687902_Ptr> _325317_t = _1d667a6a3_Ptr((*((*(_self_))._field_d))._field_Kind.ptr());;
				if (_1d668843b_IsUnsafe(_325317_t.ptr())) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
				(*((*(_self_))._field_d))._field_Kind=(*(_325317_t))._field_Elem;
				(*((*(_self_))._field_d))._field_Mutable=true;
			}
		}
		else if ((_1d667a41c_Sptr((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1da29024d:;
			{
				(*((*(_self_))._field_d))._field_Kind=(*(_1d667a41c_Sptr((*((*(_self_))._field_d))._field_Kind.ptr())))._field_Elem;
			}
		}
		else {
			_case_begin_1da2901d7:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1da28e26e:;
	};
	(*((*(_self_))._field_d))._field_Constant=nullptr;
	(*((*(_self_))._field_d))._field_untyped=false;
	(*((*(_self_))._field_d))._field_Lvalue=true;
}



inline void _1d666876d_amper(_1d666763a_unaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1da298b2a:;
			{
				jule::Ptr<_1d65252a6_StructLitExprModel> _327517_lit = (*((*(_self_))._field_d))._field_Model.cast_ptr<_1d65252a6_StructLitExprModel>(&__jule_any_type94);;
				_1d66714ac_makeStructLitAlloc(&((*(_self_))._field_d), &(_327517_lit));
			}
		}
		else {
			_case_begin_1da296144:;
			{
				{
					
					if (_1d669391e_canGetPtr(&((*(_self_))._field_d))) {
						_case_begin_1da295c04:;
						{
							(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_1d6677a35_TypeKind>(_1d6677a35_TypeKind{._field_Kind=jule::Trait<_1d667757e_Kind>(jule::new_ptr<_1d6687902_Ptr>(_1d6687902_Ptr{._field_Elem=(*((*(_self_))._field_d))._field_Kind}), 26)});
							(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_1d65248d2_UnaryExprModel>(_1d65248d2_UnaryExprModel{._field_Expr=jule::new_ptr<_1d664721e_Data>((*((*(_self_))._field_d))), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
						}
					}
					else {
						_case_begin_1da296683:;
						{
							(*(_self_))._field_d=nullptr;
							return;;
						}
					}
					_match_end_1da2965b7:;
				};
			}
		}
		_match_end_1da2960de:;
	};
	(*((*(_self_))._field_d))._field_Constant=nullptr;
	(*((*(_self_))._field_d))._field_untyped=false;
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*((*(_self_))._field_d))._field_Mutable=true;
}



inline void _1d666896b_typeDecl(_1d666763a_unaryEval* _self_) {
	_1d66898e3_typeChecker _330013_tc = _1d66898e3_typeChecker{._field_s=(*((*(_self_))._field_e))._field_s, ._field_rootLookup=(*((*(_self_))._field_e))._field_lookup, ._field_lookup=(*((*(_self_))._field_e))._field_lookup, ._field_errorToken=(*((*(_self_))._field_u))._field_Op, };;
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1da29a9ea:;
			{
				(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_1d6677a35_TypeKind>(_1d6677a35_TypeKind{._field_Kind=jule::Trait<_1d667757e_Kind>(_1d668ecd3_buildPtrFromType(&_330013_tc, &((*((*(_self_))._field_d))._field_Kind)), 26)});
				(*((*(_self_))._field_d))._field_Model=jule::Any((*((*(_self_))._field_d))._field_Kind, &__jule_any_type83);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1da29de60:;
			{
				(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_1d6677a35_TypeKind>(_1d6677a35_TypeKind{._field_Kind=jule::Trait<_1d667757e_Kind>(_1d668e651_buildSptrFromType(&_330013_tc, &((*((*(_self_))._field_d))._field_Kind)), 21)});
				(*((*(_self_))._field_d))._field_Model=jule::Any((*((*(_self_))._field_d))._field_Kind, &__jule_any_type83);
			}
		}
		else {
			_case_begin_1da29c27c:;
			{
				_1d6649463_pushErr((*(_self_))._field_e.ptr(), (*((*(_self_))._field_u))._field_Op, jule::Str::lit("unary operator @ is not defined for type @", 42), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_self_))._field_u))._field_Op))._field_Kind, &__jule_any_type4),jule::Any(_1d6677ded_Str((*((*(_self_))._field_d))._field_Kind.ptr()), &__jule_any_type4)}));
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1da29c227:;
	};
	(*((*(_self_))._field_d))._field_Decl=true;
}



inline void _1d6668b69_evalData(_1d666763a_unaryEval* _self_) {
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1da2a6d14:;
			{
				jule::Ptr<_1d6677a35_TypeKind> _332517_prefix = (*((*(_self_))._field_e))._field_prefix;;
				(*((*(_self_))._field_e))._field_prefix=nullptr;
				(*(_self_))._field_d=_1d66669e1_eval((*(_self_))._field_e, (*((*(_self_))._field_u))._field_Expr);
				(*((*(_self_))._field_e))._field_prefix=_332517_prefix;
			}
		}
		else {
			_case_begin_1da2a7430:;
			{
				(*(_self_))._field_d=_1d66669e1_eval((*(_self_))._field_e, (*((*(_self_))._field_u))._field_Expr);
			}
		}
		_match_end_1da2a7386:;
	};
}



inline jule::Ptr<_1d664721e_Data> _1d6668eaa_eval(_1d666763a_unaryEval* _self_, jule::Ptr<_1d65027c2_UnaryExpr> _333427_u) {
	(*(_self_))._field_u=_333427_u;
	_1d6668b69_evalData(_self_);
	if (((*(_self_))._field_d == nullptr)) {
		return nullptr;;
	};
	if ((*((*(_self_))._field_d))._field_Decl) {
		_1d666896b_typeDecl(_self_);
		return (*(_self_))._field_d;;
	};
	jule::Ptr<_1d6677a35_TypeKind> _33459_kind = (*((*(_self_))._field_d))._field_Kind;;
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1da2abde6:;
			{
				_1d6667c78_minus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1da2abe5c:;
			{
				_1d6667e76_plus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1da2abec3:;
			{
				_1d6668174_caret(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(68LLU)) {
			_case_begin_1da2ac039:;
			{
				_1d6668372_excl(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1da2ac556:;
			{
				_1d6668570_star(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1da2ac5bc:;
			{
				_1d666876d_amper(_self_);
			}
		}
		else {
			_case_begin_1da2abd80:;
			{
				(*(_self_))._field_d=nullptr;
			}
		}
		_match_end_1da2abd2a:;
	};
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1da2ac644:;
			{
				_1d6649463_pushErr((*(_self_))._field_e.ptr(), (*((*(_self_))._field_u))._field_Op, jule::Str::lit("unary operator @ is not defined for type @", 42), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_self_))._field_u))._field_Op))._field_Kind, &__jule_any_type4),jule::Any(_1d6677ded_Str(_33459_kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		else if (_1d6647ae3_IsConst((*(_self_))._field_d.ptr())) {
			_case_begin_1da2add1b:;
			{
				(*((*(_self_))._field_d))._field_Model=jule::Any((*((*(_self_))._field_d))._field_Constant, &__jule_any_type19);
			}
		}
		_match_end_1da2adcb6:;
	};
	return (*(_self_))._field_d;;
}





std::ostream &operator<<(std::ostream &_Stream, _1d666763a_unaryEval _Src) {
	_Stream << "unaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "u:" << _Src._field_u;
	_Stream << "}";
	return _Stream;
}



inline _1d66695c6_binaryEval static__1d6669bae_newPlain(jule::Ptr<_1d6648e13_Eval> _338228_e) {
	return _1d66695c6_binaryEval{._field_e=_338228_e, };;
}



inline _1d66695c6_binaryEval static__1d666a000_new(jule::Ptr<_1d6648e13_Eval> _338823_e, jule::Ptr<_1d64d5cd3_Token> _338837_op) {
	return _1d66695c6_binaryEval{._field_e=_338823_e, ._field_op=_338837_op};;
}



inline jule::Bool _1d666a286_checkTypeCompatibility(_1d66695c6_binaryEval* _self_) {
	return _1d65c270a_checkTypeCompatibility1((*((*(_self_))._field_e))._field_s, &((*((*(_self_))._field_l))._field_Kind), &((*(_self_))._field_r), &((*(_self_))._field_op));;
}



inline jule::Bool _1d666a51c_checkStructCommonOperatorCompatibility(_1d66695c6_binaryEval* _self_) {
	jule::Ptr<_1d6535173_FnIns> _340217_overload = nullptr;;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_1da2b3ace:;
			{
				_340217_overload=(*(_1d667b709_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Shl;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1da2b4096:;
			{
				_340217_overload=(*(_1d667b709_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Shr;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1da2b410c:;
			{
				_340217_overload=(*(_1d667b709_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Add;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1da2b4173:;
			{
				_340217_overload=(*(_1d667b709_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Sub;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1da2b41d9:;
			{
				_340217_overload=(*(_1d667b709_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Div;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1da2b5729:;
			{
				_340217_overload=(*(_1d667b709_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Mul;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1da2b5790:;
			{
				_340217_overload=(*(_1d667b709_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Mod;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1da2b5806:;
			{
				_340217_overload=(*(_1d667b709_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitAnd;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU)) {
			_case_begin_1da2b586c:;
			{
				_340217_overload=(*(_1d667b709_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitOr;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1da2b58d3:;
			{
				_340217_overload=(*(_1d667b709_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitXor;
			}
		}
		else {
			_case_begin_1da2b4030:;
			{
				_1d6649463_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1d6677ded_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return false;;
			}
		}
		_match_end_1da2b3eca:;
	};
	if ((_340217_overload == nullptr)) {
		_1d6649463_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1d6677ded_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
		return false;;
	};
	jule::Ptr<_1d65341c7_ParamIns> _343413_p = (*(_340217_overload))._field_Params[1LL];;
	return _1d65c13c9_checkAssignType((*((*(_self_))._field_e))._field_s, (*((*(_343413_p))._field_Decl))._field_Reference, &((*(_343413_p))._field_Kind), &((*(_self_))._field_r), (*(_self_))._field_op);;
}



inline jule::Ptr<_1d664721e_Data> _1d666a7a3_evalComptimeTypeInfo(_1d66695c6_binaryEval* _self_) {
	jule::Ptr<_1d655c002_comptimeTypeInfo> _343913_r = _1d667da4c_comptimeTypeInfo((*((*(_self_))._field_r))._field_Kind.ptr());;
	if ((_343913_r == nullptr)) {
		_1d6649463_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("comptimeTypeInfo", 16), &__jule_any_type4),jule::Any(_1d6677ded_Str((*((*(_self_))._field_r))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1d655c002_comptimeTypeInfo> _344413_l = _1d667da4c_comptimeTypeInfo((*((*(_self_))._field_l))._field_Kind.ptr());;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1da2c36b0:;
			{
				jule::Ptr<_1d4321208_Const> _344717_constant = static__1d4321bcb_NewBool(_1d667823e_Equal((*(_344413_l))._field_base, (*(_343913_r))._field_base));;
				return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=_1d675a640_primBool, ._field_Model=jule::Any(_344717_constant, &__jule_any_type19), ._field_Constant=_344717_constant});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1da2c5085:;
			{
				jule::Ptr<_1d4321208_Const> _345417_constant = static__1d4321bcb_NewBool((!(_1d667823e_Equal((*(_344413_l))._field_base, (*(_343913_r))._field_base))));;
				return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=_1d675a640_primBool, ._field_Model=jule::Any(_345417_constant, &__jule_any_type19), ._field_Constant=_345417_constant});;
			}
		}
		else {
			_case_begin_1da2c3a01:;
			{
				_1d6649463_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1d6677ded_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1da2c399b:;
	};
}



inline jule::Ptr<_1d664721e_Data> _1d666aa39_evalNil(_1d66695c6_binaryEval* _self_) {
	if ((!(_1d66798d3_NilCompatible((*((*(_self_))._field_r))._field_Kind.ptr())))) {
		_1d6649463_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("nil", 3), &__jule_any_type4),jule::Any(_1d6677ded_Str((*((*(_self_))._field_r))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1da2c7bae:;
			{
				return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=_1d675a640_primBool, });;
			}
		}
		else {
			_case_begin_1da2c92ba:;
			{
				_1d6649463_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(jule::Str::lit("nil", 3), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1da2c9265:;
	};
}



inline jule::Ptr<_1d664721e_Data> _1d666acc0_evalEnum(_1d66695c6_binaryEval* _self_) {
	jule::Ptr<_1d6547c57_Enum> _348513_enm = _1d667a939_Enum((*((*(_self_))._field_l))._field_Kind.ptr());;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1da2cb740:;
			{
				jule::Ptr<_1d6677a35_TypeKind> _348917_rkind = (*((*(_self_))._field_r))._field_Kind;;
				if ((_1d667a939_Enum((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
					_348917_rkind=(*((*(_1d667a939_Enum((*((*(_self_))._field_r))._field_Kind.ptr())))._field_Kind))._field_Kind;
				};
				if ((!(_1d65c1d36_checkTypeCompatibility((*((*(_self_))._field_e))._field_s, &((*((*(_348513_enm))._field_Kind))._field_Kind), &(_348917_rkind), &((*(_self_))._field_op))))) {
					return nullptr;;
				};
				return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=_1d675a640_primBool, });;
			}
		}
		_match_end_1da2cb6c9:;
	};
	if (((_1d667a939_Enum((*((*(_self_))._field_r))._field_Kind.ptr()) == nullptr) || (_348513_enm != _1d667a939_Enum((*((*(_self_))._field_r))._field_Kind.ptr())))) {
		_1d6649463_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any((*(_348513_enm))._field_Ident, &__jule_any_type4),jule::Any(_1d6677ded_Str((*((*(_self_))._field_r))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1da2caa4c:;
			{
				if ((!(_1d4320c30_IsNum(_1d6677ded_Str((*((*(_348513_enm))._field_Kind))._field_Kind.ptr()))))) {
					_1d6649463_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any((*(_348513_enm))._field_Ident, &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=_1d675a640_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1da2d2e0b:;
			{
				jule::Ptr<_1d65471da_EnumItem> _351913_first = (*(_348513_enm))._field_Items[0LL];;
				{
					
					if (_1d43251c9_IsI64((*((*((*(_351913_first))._field_Value))._field_Data))._field_Constant.ptr())) {
						_case_begin_1da2d623e:;
						{
							if ((_1d4322acd_ReadI64((*((*((*(_351913_first))._field_Value))._field_Data))._field_Constant.ptr()) == 0LL)) {
								goto _julec_label_1da2da7c6;
							};
							goto _julec_label_1da2d755e;
						}
					}
					else if (_1d4325460_IsU64((*((*((*(_351913_first))._field_Value))._field_Data))._field_Constant.ptr())) {
						_case_begin_1da2d62b6:;
						{
							if ((_1d4322d64_ReadU64((*((*((*(_351913_first))._field_Value))._field_Data))._field_Constant.ptr()) == 0LLU)) {
								goto _julec_label_1da2da7c6;
							};
							goto _julec_label_1da2d755e;
						}
					}
					else {
						_case_begin_1da2d5d54:;
						{
							jule::panic(jule::Str::lit("unimplemented enum type, this panic call should be unreachable", 62) + jule::Str("\nlocation: std/jule/sema/eval.jule:3532:17"));;
						}
					}
					_match_end_1da2d5cdd:;
				};
				_julec_label_1da2d755e:;
				_1d6649463_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("the @ enum type is not supports @ operator", 42), jule::Slice<jule::Any>::make({jule::Any((*(_348513_enm))._field_Ident, &__jule_any_type4),jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4)}));
				_1d66497c6_pushSuggestion((*(_self_))._field_e.ptr(), jule::Str::lit("define default enum field (the first one is default) with zero value to use & operator", 86), jule::Slice<jule::Any>());
				_julec_label_1da2da7c6:;
				goto _case_begin_1da2d2e72;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1da2d2e72:;
			{
				if (((_1d667a186_Prim((*((*(_348513_enm))._field_Kind))._field_Kind.ptr()) == nullptr) || (!(_1d4320625_IsInt(_1d6680950_Str(_1d667a186_Prim((*((*(_348513_enm))._field_Kind))._field_Kind.ptr()).ptr())))))) {
					_1d6649463_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any((*(_348513_enm))._field_Ident, &__jule_any_type4)}));
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1da2d1bc9:;
			{
				_1d6649463_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any((*(_348513_enm))._field_Ident, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1da2d1b74:;
	};
}



inline jule::Ptr<_1d664721e_Data> _1d666b056_evalTypeEnum(_1d66695c6_binaryEval* _self_) {
	jule::Ptr<_1d6549462_TypeEnum> _355213_enm = _1d667abc0_TypeEnum((*((*(_self_))._field_l))._field_Kind.ptr());;
	if ((!(_1d666a286_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1da2e0a1d:;
			{
				return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=_1d675a640_primBool, });;
			}
		}
		else {
			_case_begin_1da2ded91:;
			{
				_1d6649463_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1d65497a3_Str(_355213_enm.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1da2e0655:;
	};
}



inline jule::Ptr<_1d664721e_Data> _1d666b2dc_evalSptr(_1d66695c6_binaryEval* _self_) {
	if ((!(_1d666a286_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1da2e1ba6:;
			{
				return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=_1d675a640_primBool, });;
			}
		}
		else {
			_case_begin_1da2e2921:;
			{
				_1d6649463_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1d6677ded_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1da2e28bb:;
	};
}



inline jule::Ptr<_1d664721e_Data> _1d666b573_evalPtr(_1d66695c6_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(53LLU) || _match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1da2e44c2:;
			{
				if ((!(_1d666a286_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=_1d675a640_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1da2e601d:;
			{
				if ((_1d667a6a3_Ptr((*((*(_self_))._field_l))._field_Kind.ptr()) == nullptr)) {
					std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				};
				if (_1d668843b_IsUnsafe(_1d667a6a3_Ptr((*((*(_self_))._field_l))._field_Kind.ptr()).ptr())) {
					_1d6649463_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1d6677ded_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				};
				if ((!(_1d66726bc_isPtrArithmeticCompatible(&((*(_self_))._field_l), &((*(_self_))._field_r))))) {
					_1d6649463_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("type @ is incompatible to use for pointer arithmetic", 52), jule::Slice<jule::Any>::make({jule::Any(_1d6677ded_Str((*((*(_self_))._field_r))._field_Kind.ptr()), &__jule_any_type4)}));
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1da2e4390:;
			{
				_1d6649463_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1d6677ded_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1da2e42e6:;
	};
}



inline jule::Ptr<_1d664721e_Data> _1d666b809_evalArr(_1d66695c6_binaryEval* _self_) {
	if ((!(_1d666a286_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1da2e699c:;
			{
				return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=_1d675a640_primBool, });;
			}
		}
		else {
			_case_begin_1da2ebe25:;
			{
				_1d6649463_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1d6677ded_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1da2ebdc0:;
	};
}



inline jule::Ptr<_1d664721e_Data> _1d666ba90_evalSlc(_1d66695c6_binaryEval* _self_) {
	if ((!(_1d666a286_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1da2ed674:;
			{
				return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=_1d675a640_primBool, });;
			}
		}
		else {
			_case_begin_1da2ee3de:;
			{
				_1d6649463_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1d6677ded_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1da2ee389:;
	};
}



inline jule::Ptr<_1d664721e_Data> _1d666bd26_evalStruct(_1d66695c6_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_1da3014ce:;
			{
				if (((*(_1d667b709_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Gt == nullptr)) {
					_1d6649463_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1d6677ded_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=_1d675a640_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1da301545:;
			{
				if (((*(_1d667b709_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_GtEq == nullptr)) {
					_1d6649463_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1d6677ded_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=_1d675a640_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(69LLU)) {
			_case_begin_1da3015ab:;
			{
				if (((*(_1d667b709_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Lt == nullptr)) {
					_1d6649463_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1d6677ded_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=_1d675a640_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1da301633:;
			{
				if (((*(_1d667b709_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_LtEq == nullptr)) {
					_1d6649463_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1d6677ded_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=_1d675a640_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1da3016aa:;
			{
				if ((!(_1d666a286_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=_1d675a640_primBool, });;
			}
		}
		_match_end_1da300cb4:;
	};
	if ((!(_1d666a51c_checkStructCommonOperatorCompatibility(_self_)))) {
		return nullptr;;
	};
	return (*(_self_))._field_l;;
}



inline jule::Ptr<_1d664721e_Data> _1d666c0ac_evalTrait(_1d66695c6_binaryEval* _self_) {
	if ((!(_1d666a286_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1da30b198:;
			{
				return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=_1d675a640_primBool, });;
			}
		}
		else {
			_case_begin_1da30b9b2:;
			{
				_1d6649463_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1d6677ded_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1da30b95c:;
	};
}



inline jule::Ptr<_1d664721e_Data> _1d666c343_evalAny(_1d66695c6_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1da30d563:;
			{
				return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=_1d675a640_primBool, });;
			}
		}
		else {
			_case_begin_1da30d431:;
			{
				_1d6649463_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(jule::Str::lit("any", 3), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1da30d387:;
	};
}



inline jule::Ptr<_1d664721e_Data> _1d666c5c9_evalBool(_1d66695c6_binaryEval* _self_) {
	if ((!(_1d666a286_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(54LLU) || _match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1da30ece5:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1da310a60:;
			{
				_1d6649463_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1d6677ded_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1da310a0a:;
	};
}



inline jule::Ptr<_1d664721e_Data> _1d666c860_evalStr(_1d66695c6_binaryEval* _self_) {
	jule::Str _375113_rk = _1d6677ded_Str((*((*(_self_))._field_r))._field_Kind.ptr());;
	if ((!_375113_rk.equal("str", 3))) {
		_1d6649463_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_375113_rk, &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1da315537:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1da31559d:;
			{
				return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=_1d675a640_primBool, });;
			}
		}
		else {
			_case_begin_1da3136bc:;
			{
				_1d6649463_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(jule::Str::lit("str", 3), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1da314426:;
	};
}



inline void _1d666ca5d_setTypeToGreater(_1d66695c6_binaryEval* _self_) {
	jule::Ptr<_1d668060e_Prim> _37769_lp = _1d667a186_Prim((*((*(_self_))._field_l))._field_Kind.ptr());;
	jule::Ptr<_1d668060e_Prim> _37779_rp = _1d667a186_Prim((*((*(_self_))._field_r))._field_Kind.ptr());;
	if (_1d6647ae3_IsConst((*(_self_))._field_l.ptr())) {
		if ((!(_1d6647ae3_IsConst((*(_self_))._field_r.ptr())))) {
			(*((*(_self_))._field_l))._field_Kind=(*((*(_self_))._field_r))._field_Kind;
			(*((*((*(_self_))._field_l))._field_Constant))._field_Kind=(*(_37779_rp))._field_Kind;
			return;;
		};
		goto _julec_label_1da319dcc;
	};
	if (_1d6647ae3_IsConst((*(_self_))._field_r.ptr())) {
		(*((*((*(_self_))._field_r))._field_Constant))._field_Kind=(*(_37769_lp))._field_Kind;
		return;;
	};
	_julec_label_1da319dcc:;
	if (((*((*(_self_))._field_l))._field_untyped && (!((*((*(_self_))._field_r))._field_untyped)))) {
		(*((*(_self_))._field_l))._field_Kind=(*((*(_self_))._field_r))._field_Kind;
		if (_1d6647ae3_IsConst((*(_self_))._field_l.ptr())) {
			(*((*((*(_self_))._field_l))._field_Constant))._field_Kind=(*(_37779_rp))._field_Kind;
		};
		(*((*(_self_))._field_l))._field_untyped=false;
		return;;
	} else if (((!((*((*(_self_))._field_l))._field_untyped)) && (*((*(_self_))._field_r))._field_untyped)) {
		return;;
	};
	if (_1d431de5e_IsGreater((*(_37779_rp))._field_Kind, (*(_37769_lp))._field_Kind)) {
		(*((*(_self_))._field_l))._field_Kind=(*((*(_self_))._field_r))._field_Kind;
		if (_1d6647ae3_IsConst((*(_self_))._field_l.ptr())) {
			(*((*((*(_self_))._field_l))._field_Constant))._field_Kind=(*(_37779_rp))._field_Kind;
		};
	};
}



inline void _1d666cd16_checkModData(_1d66695c6_binaryEval* _self_, jule::Ptr<_1d664721e_Data>* _380936_d) {
	if ((!(_1d6647ae3_IsConst((*(_380936_d)).ptr())))) {
		if (((_1d667a186_Prim((*((*(_380936_d))))._field_Kind.ptr()) == nullptr) || (!(_1d4320625_IsInt((*(_1d667a186_Prim((*((*(_380936_d))))._field_Kind.ptr())))._field_Kind))))) {
			_1d6649463_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("module operator must be used with integer type", 46), jule::Slice<jule::Any>());
		};
		return;;
	};
	{
		
		if (_1d662d425_sigAssignable(jule::Str::lit("i64", 3), _380936_d)) {
			_case_begin_1da322a72:;
			{
				_1d4324173_SetI64((*((*(_380936_d))))._field_Constant.ptr(), static_cast<jule::I64>(_1d432389d_AsI64((*((*(_380936_d))))._field_Constant.ptr())));
			}
		}
		else if (_1d662d7dd_unsigAssignable(jule::Str::lit("u64", 3), _380936_d)) {
			_case_begin_1da322764:;
			{
				_1d432442b_SetU64((*((*(_380936_d))))._field_Constant.ptr(), static_cast<jule::U64>(_1d4323b34_AsU64((*((*(_380936_d))))._field_Constant.ptr())));
			}
		}
		else {
			_case_begin_1da3226ed:;
			{
				_1d6649463_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("module operator must be used with integer type", 46), jule::Slice<jule::Any>());
			}
		}
		_match_end_1da322698:;
	};
}



inline void _1d666d014_mod(_1d66695c6_binaryEval* _self_) {
	_1d666cd16_checkModData(_self_, &((*(_self_))._field_l));
	_1d666cd16_checkModData(_self_, &((*(_self_))._field_r));
}



inline jule::Bool _1d666d410_numbersAreCompatibile(_1d66695c6_binaryEval* _self_, jule::Str* _383137_lk, jule::Str* _383147_rk) {
	if ((!(_1d4320c30_IsNum((*(_383147_rk)))))) {
		return false;;
	};
	if ((_1d6647ae3_IsConst((*(_self_))._field_l.ptr()) && (*((*(_self_))._field_l))._field_untyped)) {
		return true;;
	};
	if ((*(_383137_lk)).equal("f32", 3)) {
		if ((_1d6647ae3_IsConst((*(_self_))._field_r.ptr()) && (*((*(_self_))._field_r))._field_untyped)) {
			return _1d662d0a1_floatAssignable(_383137_lk, &((*(_self_))._field_r));;
		};
		return (*(_383147_rk)).equal("f32", 3);;
	};
	if ((*(_383137_lk)).equal("f64", 3)) {
		if ((_1d6647ae3_IsConst((*(_self_))._field_r.ptr()) && (*((*(_self_))._field_r))._field_untyped)) {
			return _1d662d0a1_floatAssignable(_383137_lk, &((*(_self_))._field_r));;
		};
		return (*(_383147_rk)).equal("f64", 3);;
	};
	if ((_1d6647ae3_IsConst((*(_self_))._field_r.ptr()) && (*((*(_self_))._field_r))._field_untyped)) {
		return _1d662db62_intAssignable((*(_383137_lk)), &((*(_self_))._field_r));;
	};
	return ((*(_383137_lk)) == (*(_383147_rk)));;
}



inline jule::Ptr<_1d664721e_Data> _1d666d696_evalFloat(_1d66695c6_binaryEval* _self_) {
	jule::Str _38579_lk = (*(_1d667a186_Prim((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Kind;;
	jule::Str _38589_rk = (*(_1d667a186_Prim((*((*(_self_))._field_r))._field_Kind.ptr())))._field_Kind;;
	if ((!(_1d666d410_numbersAreCompatibile(_self_, &(_38579_lk), &(_38589_rk))))) {
		_1d65c2254_pushCompatiblityError((*((*(_self_))._field_e))._field_s.ptr(), &((*((*(_self_))._field_l))._field_Kind), &((*(_self_))._field_r), &((*(_self_))._field_op));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1da32ca05:;
			{
				if (((!(_1d6647ae3_IsConst((*(_self_))._field_l.ptr()))) || (!(_1d662db62_intAssignable(jule::Str::lit("i64", 3), &((*(_self_))._field_l)))))) {
					_1d6649463_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_38579_lk, &__jule_any_type4),jule::Any(_38589_rk, &__jule_any_type4)}));
					return nullptr;;
				};
				if (((!(_1d6647ae3_IsConst((*(_self_))._field_r.ptr()))) || (!(_1d662db62_intAssignable(jule::Str::lit("u64", 3), &((*(_self_))._field_r)))))) {
					_1d6649463_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_38579_lk, &__jule_any_type4),jule::Any(_38589_rk, &__jule_any_type4)}));
					return nullptr;;
				};
				_1d4324173_SetI64((*((*(_self_))._field_l))._field_Constant.ptr(), static_cast<jule::I64>(_1d432389d_AsI64((*((*(_self_))._field_l))._field_Constant.ptr())));
				_1d432442b_SetU64((*((*(_self_))._field_r))._field_Constant.ptr(), static_cast<jule::U64>(_1d4323b34_AsU64((*((*(_self_))._field_r))._field_Constant.ptr())));
				if ((!(_1d6671e6e_isOkForShifting(&((*(_self_))._field_r))))) {
					_1d6649463_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("bit shifting value is must be unsigned", 38), jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		_match_end_1da32c98e:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1da32d099:;
			{
				_1d666ca5d_setTypeToGreater(_self_);
				return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=_1d675a640_primBool, });;
			}
		}
		_match_end_1da32d044:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1da32b8a0:;
			{
				_1d666ca5d_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1da335458:;
			{
				if ((!(_1d4320625_IsInt(_38589_rk)))) {
					_1d6649463_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_38579_lk, &__jule_any_type4),jule::Any(_38589_rk, &__jule_any_type4)}));
					return nullptr;;
				};
				_1d666d014_mod(_self_);
				_1d666ca5d_setTypeToGreater(_self_);
				return (*(_self_))._field_r;;
			}
		}
		else {
			_case_begin_1da334765:;
			{
				_1d6649463_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for floating-point type(s)", 52), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1da334710:;
	};
}



inline jule::Ptr<_1d664721e_Data> _1d666d92c_evalInt(_1d66695c6_binaryEval* _self_) {
	jule::Str _39219_lk = (*(_1d667a186_Prim((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Kind;;
	jule::Str _39229_rk = (*(_1d667a186_Prim((*((*(_self_))._field_r))._field_Kind.ptr())))._field_Kind;;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1da338b98:;
			{
				if (((!(_1d4320625_IsInt(_39219_lk))) || (!(_1d4320625_IsInt(_39229_rk))))) {
					_1d6649463_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_39219_lk, &__jule_any_type4),jule::Any(_39229_rk, &__jule_any_type4)}));
					return nullptr;;
				};
				if ((!(_1d6671e6e_isOkForShifting(&((*(_self_))._field_r))))) {
					_1d6649463_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("bit shifting value is must be unsigned", 38), jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		_match_end_1da338eea:;
	};
	if ((!(_1d666d410_numbersAreCompatibile(_self_, &(_39219_lk), &(_39229_rk))))) {
		_1d65c2254_pushCompatiblityError((*((*(_self_))._field_e))._field_s.ptr(), &((*((*(_self_))._field_l))._field_Kind), &((*(_self_))._field_r), &((*(_self_))._field_op));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1da33c64c:;
			{
				return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=_1d675a640_primBool, });;
			}
		}
		_match_end_1da33c5d6:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(65LLU) || _match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1da33914e:;
			{
				_1d666ca5d_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1da33e7e7:;
			{
				_1d666d014_mod(_self_);
				_1d666ca5d_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1da33d83a:;
			{
				_1d6649463_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for integer type(s)", 45), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1da33d7d5:;
	};
}



inline jule::Ptr<_1d664721e_Data> _1d666dbb3_evalPrim(_1d66695c6_binaryEval* _self_) {
	jule::Ptr<_1d668060e_Prim> _39789_prim = _1d667a186_Prim((*((*(_self_))._field_l))._field_Kind.ptr());;
	{
		
		if (_1d6683810_IsBool(_39789_prim.ptr())) {
			_case_begin_1da341c39:;
			{
				return _1d666c5c9_evalBool(_self_);;
			}
		}
		else if (_1d6683a96_IsStr(_39789_prim.ptr())) {
			_case_begin_1da341cb1:;
			{
				return _1d666c860_evalStr(_self_);;
			}
		}
		_match_end_1da341b7e:;
	};
	if ((_1d667a186_Prim((*((*(_self_))._field_r))._field_Kind.ptr()) == nullptr)) {
		_1d6649463_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1d6680950_Str(_39789_prim.ptr()), &__jule_any_type4),jule::Any(_1d6677ded_Str((*((*(_self_))._field_r))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	{
		
		if (_1d4320966_IsFloat((*(_39789_prim))._field_Kind)) {
			_case_begin_1da344643:;
			{
				return _1d666d696_evalFloat(_self_);;
			}
		}
		else if (_1d4320625_IsInt((*(_39789_prim))._field_Kind)) {
			_case_begin_1da3446ba:;
			{
				return _1d666d92c_evalInt(_self_);;
			}
		}
		else {
			_case_begin_1da344599:;
			{
				return nullptr;;
			}
		}
		_match_end_1da341d6b:;
	};
}



inline void _1d666ddb1_checkSpecialCases(_1d66695c6_binaryEval* _self_) {
	if (((!(_1d6679130_Comparable((*((*(_self_))._field_l))._field_Kind.ptr()))) && (!(_1d6678b13_IsNil((*((*(_self_))._field_r))._field_Kind.ptr()))))) {
		_1d6649463_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("type @ is not comparable", 24), jule::Slice<jule::Any>::make({jule::Any(_1d6677ded_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
	} else if (((!(_1d6679130_Comparable((*((*(_self_))._field_r))._field_Kind.ptr()))) && (!(_1d6678b13_IsNil((*((*(_self_))._field_l))._field_Kind.ptr()))))) {
		_1d6649463_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("type @ is not comparable", 24), jule::Slice<jule::Any>::make({jule::Any(_1d6677ded_Str((*((*(_self_))._field_r))._field_Kind.ptr()), &__jule_any_type4)}));
	};
}



inline jule::Ptr<_1d664721e_Data> _1d666e147_evalOp(_1d66695c6_binaryEval* _self_) {
	_1d666ddb1_checkSpecialCases(_self_);
	{
		
		if (_1d6678d99_Void((*((*(_self_))._field_l))._field_Kind.ptr())) {
			_case_begin_1da3494c2:;
			{
				_1d6649463_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(jule::Str::lit("void", 4), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		else if ((_1d667da4c_comptimeTypeInfo((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1da34aea7:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1da34b01d;
			}
		}
		else if ((_1d667da4c_comptimeTypeInfo((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1da34b01d:;
			{
				return _1d666a7a3_evalComptimeTypeInfo(_self_);;
			}
		}
		else if (((_1d667a186_Prim((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr) && _1d6683d2c_IsAny(_1d667a186_Prim((*((*(_self_))._field_r))._field_Kind.ptr()).ptr()))) {
			_case_begin_1da34b11c:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1da34b183;
			}
		}
		else if (_1d6678b13_IsNil((*((*(_self_))._field_r))._field_Kind.ptr())) {
			_case_begin_1da34b183:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1da34b1e9;
			}
		}
		else if (_1d6678b13_IsNil((*((*(_self_))._field_l))._field_Kind.ptr())) {
			_case_begin_1da34b1e9:;
			{
				return _1d666aa39_evalNil(_self_);;
			}
		}
		else if (((_1d667a186_Prim((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr) && _1d6683d2c_IsAny(_1d667a186_Prim((*((*(_self_))._field_l))._field_Kind.ptr()).ptr()))) {
			_case_begin_1da34b260:;
			{
				return _1d666c343_evalAny(_self_);;
			}
		}
		else if ((_1d667abc0_TypeEnum((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1da34b2c6:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1da34b33c;
			}
		}
		else if ((_1d667abc0_TypeEnum((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1da34b33c:;
			{
				return _1d666b056_evalTypeEnum(_self_);;
			}
		}
		else if ((_1d667a939_Enum((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1da34b3a3:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1da34b419;
			}
		}
		else if ((_1d667a939_Enum((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1da34b419:;
			{
				return _1d666acc0_evalEnum(_self_);;
			}
		}
		else if ((_1d667a41c_Sptr((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1da34b480:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1da34b4e6;
			}
		}
		else if ((_1d667a41c_Sptr((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1da34b4e6:;
			{
				return _1d666b2dc_evalSptr(_self_);;
			}
		}
		else if ((_1d667a6a3_Ptr((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1da34b55c:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1da34b5c3;
			}
		}
		else if ((_1d667a6a3_Ptr((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1da34b5c3:;
			{
				return _1d666b573_evalPtr(_self_);;
			}
		}
		else if ((_1d667ae56_Arr((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1da34b639:;
			{
				return _1d666b809_evalArr(_self_);;
			}
		}
		else if ((_1d667b1dc_Slc((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1da34b6a0:;
			{
				return _1d666ba90_evalSlc(_self_);;
			}
		}
		else if ((_1d667b990_Trait((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1da34b716:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1da34b77c;
			}
		}
		else if ((_1d667b990_Trait((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1da34b77c:;
			{
				return _1d666c0ac_evalTrait(_self_);;
			}
		}
		else if ((_1d667b709_Struct((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1da34b7e3:;
			{
				return _1d666bd26_evalStruct(_self_);;
			}
		}
		else if ((_1d667a186_Prim((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1da34b859:;
			{
				return _1d666dbb3_evalPrim(_self_);;
			}
		}
		else {
			_case_begin_1da349912:;
			{
				_1d6649463_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1d6677ded_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1da3498ac:;
	};
}



inline void _1d666e400_evalConst(_1d66695c6_binaryEval* _self_, jule::Ptr<_1d664721e_Data>* _406933_d) {
	{
		
		if (((*(_406933_d)) == nullptr) || ((*((*(_self_))._field_l))._field_Model == nullptr) || ((*((*(_self_))._field_r))._field_Model == nullptr)) {
			_case_begin_1da35e20c:;
			{
				return;;
			}
		}
		else if ((!(_1d6647ae3_IsConst((*(_self_))._field_l.ptr()))) || (!(_1d6647ae3_IsConst((*(_self_))._field_r.ptr())))) {
			_case_begin_1da35e790:;
			{
				(*((*(_406933_d))))._field_Constant=nullptr;
				(*((*(_406933_d))))._field_untyped=false;
				return;;
			}
		}
		_match_end_1da35e11e:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1da361143:;
			{
				(*((*(_406933_d))))._field_Constant=static__1d4321bcb_NewBool(_1d4326cad_Eq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1da3611a9:;
			{
				(*((*(_406933_d))))._field_Constant=static__1d4321bcb_NewBool((!(_1d4326cad_Eq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1da361dbe:;
			{
				(*((*(_406933_d))))._field_Constant=static__1d4321bcb_NewBool(_1d432696c_Or((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1da361e35:;
			{
				(*((*(_406933_d))))._field_Constant=static__1d4321bcb_NewBool(_1d432662b_And((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_1da361e9b:;
			{
				(*((*(_406933_d))))._field_Constant=static__1d4321bcb_NewBool(_1d4327781_Gt((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(69LLU)) {
			_case_begin_1da362012:;
			{
				(*((*(_406933_d))))._field_Constant=static__1d4321bcb_NewBool(_1d43270ee_Lt((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1da362078:;
			{
				(*((*(_406933_d))))._field_Constant=static__1d4321bcb_NewBool(_1d4327ac2_GtEq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1da3620de:;
			{
				(*((*(_406933_d))))._field_Constant=static__1d4321bcb_NewBool(_1d4327440_LtEq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1da362166:;
			{
				_1d4327e13_Add((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_406933_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1da3621dd:;
			{
				_1d4328254_Sub((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_406933_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1da362265:;
			{
				_1d4328595_Mul((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_406933_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1da3622dc:;
			{
				jule::Bool _410913_ok = _1d43288d6_Div((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));;
				if (((!(_410913_ok)) && (_1d4323dba_AsF64((*((*(_self_))._field_r))._field_Constant.ptr()) == 0LL))) {
					_1d6649463_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("divide by zero", 14), jule::Slice<jule::Any>());
				};
				(*((*(_406933_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
				jule::Ptr<_1d668060e_Prim> _411417_prim = _1d667a186_Prim((*((*(_406933_d))))._field_Kind.ptr());;
				{
					
					if (_1d432004d_IsSigInt((*(_411417_prim))._field_Kind)) {
						_case_begin_1da372c9d:;
						{
							_1d4324173_SetI64((*((*(_406933_d))))._field_Constant.ptr(), static_cast<jule::I64>(_1d432389d_AsI64((*((*(_406933_d))))._field_Constant.ptr())));
						}
					}
					else if (_1d432035b_IsUnsigInt((*(_411417_prim))._field_Kind)) {
						_case_begin_1da372d25:;
						{
							_1d432442b_SetU64((*((*(_406933_d))))._field_Constant.ptr(), static_cast<jule::U64>(_1d4323b34_AsU64((*((*(_406933_d))))._field_Constant.ptr())));
						}
					}
					_match_end_1da372be3:;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1da362364:;
			{
				jule::Bool _412213_ok = _1d4328c27_Mod((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));;
				if (((!(_412213_ok)) && (_1d4323dba_AsF64((*((*(_self_))._field_r))._field_Constant.ptr()) == 0LL))) {
					_1d6649463_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("divide by zero", 14), jule::Slice<jule::Any>());
				};
				(*((*(_406933_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU)) {
			_case_begin_1da3623db:;
			{
				_1d43293a9_BitwiseOr((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_406933_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1da362463:;
			{
				_1d4329068_BitwiseAnd((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_406933_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1da3624da:;
			{
				_1d43296ea_Xor((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_406933_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_1da362562:;
			{
				_1d4329a3b_Lshift((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_406933_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1da3625d9:;
			{
				_1d4329d7c_Rshift((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_406933_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		_match_end_1da3610dd:;
	};
	(*((*(_406933_d))))._field_Model=jule::Any((*((*(_406933_d))))._field_Constant, &__jule_any_type19);
	_1d6673558_applyCastModelByEnum(_406933_d, _1d667a939_Enum((*((*(_406933_d))))._field_Kind.ptr()));
}



inline void _1d666e6a8_checkData(_1d66695c6_binaryEval* _self_, jule::Ptr<_1d664721e_Data>* _414733_d) {
	jule::Ptr<_1d6535173_FnIns> _41489_f = _1d667b473_Fn((*((*(_414733_d))))._field_Kind.ptr());;
	if ((((_41489_f != nullptr) && ((*(_41489_f))._field_Decl != nullptr)) && _1d6532978_IsMethod((*(_41489_f))._field_Decl.ptr()))) {
		_1d6649463_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("invalid expression used for binary operation", 44), jule::Slice<jule::Any>());
	};
}



inline void _1d666e8a6_checkDatas(_1d66695c6_binaryEval* _self_) {
	_1d666e6a8_checkData(_self_, &((*(_self_))._field_l));
	_1d666e6a8_checkData(_self_, &((*(_self_))._field_r));
}



inline void _1d666eb5e_setModel(_1d66695c6_binaryEval* _self_, jule::Ptr<_1d664721e_Data>* _415932_d) {
	if (_1d6647ae3_IsConst((*(_415932_d)).ptr())) {
		if (((_1d6647ae3_IsConst((*(_self_))._field_l.ptr()) && _1d6647ae3_IsConst((*(_self_))._field_r.ptr())) || (((*((*(_self_))._field_l))._field_Model == nullptr) && ((*((*(_self_))._field_r))._field_Model == nullptr)))) {
			return;;
		};
	};
	jule::Ptr<_1d664721e_Data> _416813_l;;
	jule::Ptr<_1d664721e_Data> _416820_r;;
	({
		jule::Ptr<_1d664721e_Data> ___jule_assign_arg = (*(_self_))._field_l;
		jule::Ptr<_1d664721e_Data> _1___jule_assign_arg = (*(_self_))._field_r;
		_416813_l = ___jule_assign_arg;
		_416820_r = _1___jule_assign_arg;
	});
	if ((!(_1d6647e34_GoodOperand(_416813_l.ptr(), &(_416820_r))))) {
		std::swap(_416813_l, _416820_r);
	};
	(*((*(_415932_d))))._field_Model=jule::Any(jule::new_ptr<_1d6524508_BinaryExprModel>(_1d6524508_BinaryExprModel{._field_Left=jule::new_ptr<_1d652400d_OperandExprModel>(_1d652400d_OperandExprModel{._field_Kind=(*(_416813_l))._field_Kind, ._field_Model=(*(_416813_l))._field_Model}), ._field_Right=jule::new_ptr<_1d652400d_OperandExprModel>(_1d652400d_OperandExprModel{._field_Kind=(*(_416820_r))._field_Kind, ._field_Model=(*(_416820_r))._field_Model}), ._field_Op=(*(_self_))._field_op}), &__jule_any_type111);
}



inline void _1d666ee17_postEval(_1d66695c6_binaryEval* _self_, jule::Ptr<_1d664721e_Data>* _418632_d) {
	(*((*(_418632_d))))._field_Lvalue=false;
	_1d666eb5e_setModel(_self_, _418632_d);
}



inline jule::Ptr<_1d664721e_Data> _1d6670313_solveExplicit(_1d66695c6_binaryEval* _self_, jule::Ptr<_1d664721e_Data>* _419137_l, jule::Ptr<_1d664721e_Data>* _419152_r) {
	({
		jule::Ptr<_1d664721e_Data> ___jule_assign_arg = (*(_419137_l));
		jule::Ptr<_1d664721e_Data> _1___jule_assign_arg = (*(_419152_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1d666e8a6_checkDatas(_self_);
	jule::Ptr<_1d664721e_Data> _419613_d = _1d666e147_evalOp(_self_);;
	({
		jule::Ptr<_1d664721e_Data> ___jule_assign_arg = (*(_419137_l));
		jule::Ptr<_1d664721e_Data> _1___jule_assign_arg = (*(_419152_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1d666e400_evalConst(_self_, &(_419613_d));
	if ((_419613_d != nullptr)) {
		(*(_419613_d))._field_Mutable=true;
		_1d666ee17_postEval(_self_, &(_419613_d));
	};
	return _419613_d;;
}



inline jule::Ptr<_1d664721e_Data> _1d6670654_eval(_1d66695c6_binaryEval* _self_, jule::Ptr<_1d6503cce_BinaryExpr>* _421128_op) {
	if (((*((*((*(_421128_op))))._field_Op))._field_Id == static_cast<jule::U64>(71LLU))) {
		_1d6649463_pushErr((*(_self_))._field_e.ptr(), (*((*(_421128_op))))._field_Op, jule::Str::lit("assignments not available for expressions", 41), jule::Slice<jule::Any>());
		_1d66497c6_pushSuggestion((*(_self_))._field_e.ptr(), jule::Str::lit("use clear imperative approach, comes relevant assignment statement before the expression", 88), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1d664721e_Data> _421813_l = _1d6666d32_evalExpr1((*(_self_))._field_e, (*((*(_421128_op))))._field_Left);;
	if (((_421813_l == nullptr) || ((*(_421813_l))._field_Kind == nullptr))) {
		return nullptr;;
	};
	jule::Ptr<_1d6677a35_TypeKind> _422313_prefix = (*((*(_self_))._field_e))._field_prefix;;
	(*((*(_self_))._field_e))._field_prefix=(*(_421813_l))._field_Kind;
	__JULE_DEFER({
		(*((*(_self_))._field_e))._field_prefix=_422313_prefix;
	});;
	jule::Ptr<_1d664721e_Data> _422613_r = _1d6666d32_evalExpr1((*(_self_))._field_e, (*((*(_421128_op))))._field_Right);;
	if (((_422613_r == nullptr) || ((*(_422613_r))._field_Kind == nullptr))) {
		return nullptr;;
	};
	(*(_self_))._field_op=(*((*(_421128_op))))._field_Op;
	jule::Ptr<_1d664721e_Data> _423313_d = _1d6670313_solveExplicit(_self_, &(_421813_l), &(_422613_r));;
	if ((((_423313_d != nullptr) && (*(_421813_l))._field_IsRune) && (*(_422613_r))._field_IsRune)) {
		(*(_423313_d))._field_IsRune=true;
	};
	return _423313_d;;
}





std::ostream &operator<<(std::ostream &_Stream, _1d66695c6_binaryEval _Src) {
	_Stream << "binaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d667614e_InsGeneric _Src) {
	_Stream << "InsGeneric{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d6676c43_TypeAlias _Src) {
	_Stream << "TypeAlias{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Generic:" << _Src._field_Generic << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1d6677ded_Str(_1d6677a35_TypeKind* _self_) {
	if (_1d6678b13_IsNil(_self_)) {
		return jule::Str::lit("nil", 3);;
	};
	_1e01838bc_StrBuilder _7413_kind = static__1e0183b64_New(16LL);;
	if ((*(_self_))._field_Variadic) {
		_1e018c6ea_WriteStr(&_7413_kind, jule::Str::lit("...", 3));
	};
	if (_1d667887c_Binded(_self_)) {
		_1e018c6ea_WriteStr(&_7413_kind, jule::Str::lit("cpp.", 4));
		_1e018c6ea_WriteStr(&_7413_kind, (*(_self_))._field_BindIdent);
	} else {
		_1e018c6ea_WriteStr(&_7413_kind, _1d667757e_Kind_mptr_data[((*(_self_))._field_Kind).type_offset]._1d66770d9_Str((*(_self_))._field_Kind));
	};
	return _1e018cee2_Str(&_7413_kind);;
}



inline jule::Bool _1d667823e_Equal(jule::Ptr<_1d6677a35_TypeKind> _self_, jule::Ptr<_1d6677a35_TypeKind> _9021_other) {
	if (_1d6678b13_IsNil(_self_.ptr())) {
		return _1d6678b13_IsNil(_9021_other.ptr());;
	};
	if (_1d667887c_Binded(_self_.ptr())) {
		return (_1d667887c_Binded(_9021_other.ptr()) && ((*(_self_))._field_BindIdent == (*(_9021_other))._field_BindIdent));;
	};
	return _1d667757e_Kind_mptr_data[((*(_self_))._field_Kind).type_offset]._1d667742a_Equal((*(_self_))._field_Kind, _9021_other);;
}



inline jule::Bool _1d667887c_Binded(_1d6677a35_TypeKind* _self_) {
	return ((*(_self_))._field_BindIdent.len() != 0LL);;
}



inline jule::Bool _1d6678b13_IsNil(_1d6677a35_TypeKind* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}



inline jule::Bool _1d6678d99_Void(_1d6677a35_TypeKind* _self_) {
	jule::Ptr<_1d668060e_Prim> _1109_prim = _1d667a186_Prim(&(*(_self_)));;
	return ((_1109_prim != nullptr) && (*(_1109_prim))._field_Kind.equal("void", 4));;
}



inline jule::Bool _1d6679130_Comparable(_1d6677a35_TypeKind* _self_) {
	{
		_1d6677a35_TypeKind* _11717__self = _self_;;
		if ((_1d667b709_Struct(_11717__self) != nullptr)) {
			return (*(_1d667b709_Struct(_11717__self)))._field_Comparable;;
		};
		return (((_1d667bc26_Map(_11717__self) == nullptr) && (_1d667b1dc_Slc(_11717__self) == nullptr)) && (_1d667b473_Fn(_11717__self) == nullptr));;
	};
}



inline jule::Bool _1d66793b6_Mutable(_1d6677a35_TypeKind* _self_) {
	{
		_1d6677a35_TypeKind* _12817__self = _self_;;
		if ((_1d667b709_Struct(_12817__self) != nullptr)) {
			return (*(_1d667b709_Struct(_12817__self)))._field_Mutable;;
		};
		if ((_1d667b990_Trait(_12817__self) != nullptr)) {
			return true;;
		};
		if ((_1d667a186_Prim(_12817__self) != nullptr)) {
			jule::Ptr<_1d668060e_Prim> _13617_p = _1d667a186_Prim(_12817__self);;
			return _1d6683d2c_IsAny(_13617_p.ptr());;
		};
		if ((_1d667ae56_Arr(_12817__self) != nullptr)) {
			return _1d66793b6_Mutable((*(_1d667ae56_Arr(_12817__self)))._field_Elem.ptr());;
		};
		return (((_1d667b1dc_Slc(_12817__self) != nullptr) || (_1d667a6a3_Ptr(_12817__self) != nullptr)) || (_1d667a41c_Sptr(_12817__self) != nullptr));;
	};
}



inline jule::Bool _1d667964c_Ordered(_1d6677a35_TypeKind* _self_) {
	{
		_1d6677a35_TypeKind* _15117__self = _self_;;
		jule::Ptr<_1d668060e_Prim> _15213_prim = _1d667a186_Prim(_15117__self);;
		if ((_15213_prim != nullptr)) {
			return (_1d4320c30_IsNum((*(_15213_prim))._field_Kind) || _1d6683a96_IsStr(_15213_prim.ptr()));;
		};
		if ((_1d667a6a3_Ptr(_15117__self) != nullptr)) {
			return true;;
		};
		jule::Ptr<_1d652005e_StructIns> _15913_s = _1d667b709_Struct(_15117__self);;
		if ((_15913_s != nullptr)) {
			return (((((*(_15913_s))._field_Operators._field_Gt != nullptr) && ((*(_15913_s))._field_Operators._field_GtEq != nullptr)) && ((*(_15913_s))._field_Operators._field_Lt != nullptr)) && ((*(_15913_s))._field_Operators._field_LtEq != nullptr));;
		};
		jule::Ptr<_1d6547c57_Enum> _16613_enm = _1d667a939_Enum(_15117__self);;
		if ((_16613_enm != nullptr)) {
			return _1d4320c30_IsNum(_1d6677ded_Str((*((*(_16613_enm))._field_Kind))._field_Kind.ptr()));;
		};
		return false;;
	};
}



inline jule::Bool _1d66798d3_NilCompatible(_1d6677a35_TypeKind* _self_) {
	{
		_1d6677a35_TypeKind* _17717__self = _self_;;
		jule::Ptr<_1d668060e_Prim> _17913_prim = _1d667a186_Prim(_17717__self);;
		if (((_17913_prim != nullptr) && _1d6683d2c_IsAny(_17913_prim.ptr()))) {
			return true;;
		};
		return (((((((_1d6678b13_IsNil(_17717__self) || (_1d667b473_Fn(_17717__self) != nullptr)) || (_1d667a41c_Sptr(_17717__self) != nullptr)) || (_1d667a6a3_Ptr(_17717__self) != nullptr)) || (_1d667b990_Trait(_17717__self) != nullptr)) || (_1d667b1dc_Slc(_17717__self) != nullptr)) || (_1d667bc26_Map(_17717__self) != nullptr)) || (_1d667abc0_TypeEnum(_17717__self) != nullptr));;
	};
}



inline jule::Bool _1d6679b69_PerformsRC(_1d6677a35_TypeKind* _self_) {
	{
		_1d6677a35_TypeKind* _19817__self = _self_;;
		jule::Ptr<_1d668060e_Prim> _19913_prim = _1d667a186_Prim(_19817__self);;
		if ((_19913_prim != nullptr)) {
			return (_1d6683d2c_IsAny(_19913_prim.ptr()) || _1d6683a96_IsStr(_19913_prim.ptr()));;
		};
		return (((_1d667a41c_Sptr(_19817__self) != nullptr) || (_1d667b1dc_Slc(_19817__self) != nullptr)) || (_1d667b990_Trait(_19817__self) != nullptr));;
	};
}



inline jule::Bool _1d6679e00_Variadicable(_1d6677a35_TypeKind* _self_) {
	{
		_1d6677a35_TypeKind* _21017__self = _self_;;
		return (_1d667b1dc_Slc(_21017__self) != nullptr);;
	};
}



inline jule::Ptr<_1d668060e_Prim> _1d667a186_Prim(_1d6677a35_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 20)) {
			_case_begin_1da3c1a11:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1d668060e_Prim>(20);;
			}
		}
		else {
			_case_begin_1da3c1ed9:;
			{
				return nullptr;;
			}
		}
		_match_end_1da3c1e84:;
	};
}



inline jule::Ptr<_1d668413a_Sptr> _1d667a41c_Sptr(_1d6677a35_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 21)) {
			_case_begin_1da3c2638:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1d668413a_Sptr>(21);;
			}
		}
		else {
			_case_begin_1da3c2d86:;
			{
				return nullptr;;
			}
		}
		_match_end_1da3c2d31:;
	};
}



inline jule::Ptr<_1d6687902_Ptr> _1d667a6a3_Ptr(_1d6677a35_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 26)) {
			_case_begin_1da3c2e30:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1d6687902_Ptr>(26);;
			}
		}
		else {
			_case_begin_1da3c3a68:;
			{
				return nullptr;;
			}
		}
		_match_end_1da3c3a13:;
	};
}



inline jule::Ptr<_1d6547c57_Enum> _1d667a939_Enum(_1d6677a35_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1da3c3b12:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1d6547c57_Enum>(3);;
			}
		}
		else {
			_case_begin_1da3c474a:;
			{
				return nullptr;;
			}
		}
		_match_end_1da3c46e5:;
	};
}



inline jule::Ptr<_1d6549462_TypeEnum> _1d667abc0_TypeEnum(_1d6677a35_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 4)) {
			_case_begin_1da3c47e4:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1d6549462_TypeEnum>(4);;
			}
		}
		else {
			_case_begin_1da3c542c:;
			{
				return nullptr;;
			}
		}
		_match_end_1da3c53c7:;
	};
}



inline jule::Ptr<_1d6686e2e_Arr> _1d667ae56_Arr(_1d6677a35_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 25)) {
			_case_begin_1da3c54c6:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1d6686e2e_Arr>(25);;
			}
		}
		else {
			_case_begin_1da3c610e:;
			{
				return nullptr;;
			}
		}
		_match_end_1da3c60a9:;
	};
}



inline jule::Ptr<_1d6684b0d_Slc> _1d667b1dc_Slc(_1d6677a35_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 22)) {
			_case_begin_1da3c61a8:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1d6684b0d_Slc>(22);;
			}
		}
		else {
			_case_begin_1da3c6ce1:;
			{
				return nullptr;;
			}
		}
		_match_end_1da3c6c8b:;
	};
}



inline jule::Ptr<_1d6535173_FnIns> _1d667b473_Fn(_1d6677a35_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 1)) {
			_case_begin_1da3c6d8a:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1d6535173_FnIns>(1);;
			}
		}
		else {
			_case_begin_1da3c79c3:;
			{
				return nullptr;;
			}
		}
		_match_end_1da3c796d:;
	};
}



inline jule::Ptr<_1d652005e_StructIns> _1d667b709_Struct(_1d6677a35_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1da3c7a6c:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1d652005e_StructIns>(0);;
			}
		}
		else {
			_case_begin_1da3c86a5:;
			{
				return nullptr;;
			}
		}
		_match_end_1da3c8650:;
	};
}



inline jule::Ptr<_1d654554b_Trait> _1d667b990_Trait(_1d6677a35_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 2)) {
			_case_begin_1da3c874e:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1d654554b_Trait>(2);;
			}
		}
		else {
			_case_begin_1da3c9387:;
			{
				return nullptr;;
			}
		}
		_match_end_1da3c9332:;
	};
}



inline jule::Ptr<_1d66862a2_Map> _1d667bc26_Map(_1d6677a35_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 24)) {
			_case_begin_1da3c9431:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1d66862a2_Map>(24);;
			}
		}
		else {
			_case_begin_1da3ca069:;
			{
				return nullptr;;
			}
		}
		_match_end_1da3ca014:;
	};
}



inline jule::Ptr<_1d6685702_Tuple> _1d667beac_Tup(_1d6677a35_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 23)) {
			_case_begin_1da3ca113:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1d6685702_Tuple>(23);;
			}
		}
		else {
			_case_begin_1da3cac4b:;
			{
				return nullptr;;
			}
		}
		_match_end_1da3cabe6:;
	};
}



inline jule::Bool _1d667c243_comptime(_1d6677a35_TypeKind* _self_) {
	return (((((((((((((_1d667d7b6_comptimeTypeInfos(_self_) != nullptr) || (_1d667da4c_comptimeTypeInfo(_self_) != nullptr)) || (_1d667c4c9_comptimeStructFields(_self_) != nullptr)) || (_1d667c760_comptimeStructField(_self_) != nullptr)) || (_1d667c9e6_comptimeEnumFields(_self_) != nullptr)) || (_1d667cc7c_comptimeEnumField(_self_) != nullptr)) || (_1d667dcd3_comptimeStatics(_self_) != nullptr)) || (_1d667e069_comptimeStatic(_self_) != nullptr)) || (_1d667d013_comptimeParams(_self_) != nullptr)) || (_1d667d299_comptimeParam(_self_) != nullptr)) || (_1d667e300_comptimeValue(_self_) != nullptr)) || (_1d667e81c_comptimeFiles(_self_) != nullptr)) || (_1d667e586_comptimeFile(_self_) != nullptr));;
}



inline jule::Ptr<_1d654ec4d_comptimeStructFields> _1d667c4c9_comptimeStructFields(_1d6677a35_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 7)) {
			_case_begin_1da3cad28:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1d654ec4d_comptimeStructFields>(7);;
			}
		}
		else {
			_case_begin_1da3d0206:;
			{
				return nullptr;;
			}
		}
		_match_end_1da3d01a1:;
	};
}



inline jule::Ptr<_1d654d08c_comptimeStructField> _1d667c760_comptimeStructField(_1d6677a35_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 6)) {
			_case_begin_1da3d06ce:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1d654d08c_comptimeStructField>(6);;
			}
		}
		else {
			_case_begin_1da3d0aa8:;
			{
				return nullptr;;
			}
		}
		_match_end_1da3d0a53:;
	};
}



inline jule::Ptr<_1d655599b_comptimeEnumFields> _1d667c9e6_comptimeEnumFields(_1d6677a35_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 11)) {
			_case_begin_1da3d13b1:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1d655599b_comptimeEnumFields>(11);;
			}
		}
		else {
			_case_begin_1da3d178a:;
			{
				return nullptr;;
			}
		}
		_match_end_1da3d1735:;
	};
}



inline jule::Ptr<_1d6554604_comptimeEnumField> _1d667cc7c_comptimeEnumField(_1d6677a35_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 10)) {
			_case_begin_1da3d2093:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1d6554604_comptimeEnumField>(10);;
			}
		}
		else {
			_case_begin_1da3d246c:;
			{
				return nullptr;;
			}
		}
		_match_end_1da3d2417:;
	};
}



inline jule::Ptr<_1d655930c_comptimeParams> _1d667d013_comptimeParams(_1d6677a35_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 13)) {
			_case_begin_1da3d2c75:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1d655930c_comptimeParams>(13);;
			}
		}
		else {
			_case_begin_1da3d314e:;
			{
				return nullptr;;
			}
		}
		_match_end_1da3d30e9:;
	};
}



inline jule::Ptr<_1d6557096_comptimeParam> _1d667d299_comptimeParam(_1d6677a35_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 12)) {
			_case_begin_1da3d31e8:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1d6557096_comptimeParam>(12);;
			}
		}
		else {
			_case_begin_1da3d3d31:;
			{
				return nullptr;;
			}
		}
		_match_end_1da3d3ccb:;
	};
}



inline jule::Ptr<_1d654c5b9_comptimeRange> _1d667d530_comptimeRange(_1d6677a35_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 5)) {
			_case_begin_1da3d3dca:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1d654c5b9_comptimeRange>(5);;
			}
		}
		else {
			_case_begin_1da3d4a13:;
			{
				return nullptr;;
			}
		}
		_match_end_1da3d49ad:;
	};
}



inline jule::Ptr<_1d655a907_comptimeTypeInfos> _1d667d7b6_comptimeTypeInfos(_1d6677a35_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 14)) {
			_case_begin_1da3d4aac:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1d655a907_comptimeTypeInfos>(14);;
			}
		}
		else {
			_case_begin_1da3d56e5:;
			{
				return nullptr;;
			}
		}
		_match_end_1da3d5690:;
	};
}



inline jule::Ptr<_1d655c002_comptimeTypeInfo> _1d667da4c_comptimeTypeInfo(_1d6677a35_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 15)) {
			_case_begin_1da3d5eed:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1d655c002_comptimeTypeInfo>(15);;
			}
		}
		else {
			_case_begin_1da3d63c7:;
			{
				return nullptr;;
			}
		}
		_match_end_1da3d6372:;
	};
}



inline jule::Ptr<_1d6553009_comptimeStatics> _1d667dcd3_comptimeStatics(_1d6677a35_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 9)) {
			_case_begin_1da3d6bd0:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1d6553009_comptimeStatics>(9);;
			}
		}
		else {
			_case_begin_1da3d70a9:;
			{
				return nullptr;;
			}
		}
		_match_end_1da3d7054:;
	};
}



inline jule::Ptr<_1d6551348_comptimeStatic> _1d667e069_comptimeStatic(_1d6677a35_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 8)) {
			_case_begin_1da3d7153:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1d6551348_comptimeStatic>(8);;
			}
		}
		else {
			_case_begin_1da3d7c8b:;
			{
				return nullptr;;
			}
		}
		_match_end_1da3d7c36:;
	};
}



inline jule::Ptr<_1d6563514_comptimeValue> _1d667e300_comptimeValue(_1d6677a35_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 16)) {
			_case_begin_1da3d7d35:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1d6563514_comptimeValue>(16);;
			}
		}
		else {
			_case_begin_1da3d896d:;
			{
				return nullptr;;
			}
		}
		_match_end_1da3d8918:;
	};
}



inline jule::Ptr<_1d656745d_comptimeFile> _1d667e586_comptimeFile(_1d6677a35_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 18)) {
			_case_begin_1da3d8a17:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1d656745d_comptimeFile>(18);;
			}
		}
		else {
			_case_begin_1da3d9650:;
			{
				return nullptr;;
			}
		}
		_match_end_1da3d95ea:;
	};
}



inline jule::Ptr<_1d6565d63_comptimeFiles> _1d667e81c_comptimeFiles(_1d6677a35_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 17)) {
			_case_begin_1da3d96e9:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1d6565d63_comptimeFiles>(17);;
			}
		}
		else {
			_case_begin_1da3da332:;
			{
				return nullptr;;
			}
		}
		_match_end_1da3da2cc:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1d6677a35_TypeKind _Src) {
	_Stream << _1d6677ded_Str(&_Src);
	return _Stream;
}



inline jule::Bool _1d668007b_checked(_1d667ec07_TypeSymbol* _self_) {
	return ((*(_self_))._field_Kind != nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1d667ec07_TypeSymbol _Src) {
	_Stream << "TypeSymbol{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1d6680950_Str(_1d668060e_Prim* _self_) {
	return (*(_self_))._field_Kind;;
}



inline jule::Bool _1d6680c91_Equal(jule::Ptr<_1d668060e_Prim> _self_, jule::Ptr<_1d6677a35_TypeKind> _50821_other) {
	jule::Ptr<_1d668060e_Prim> _5099_prim = _1d667a186_Prim(_50821_other.ptr());;
	if ((_5099_prim == nullptr)) {
		return false;;
	};
	return ((*(_self_))._field_Kind == (*(_5099_prim))._field_Kind);;
}



inline jule::Bool _1d6681236_IsConstraint(_1d668060e_Prim* _self_) {
	return ((((!(_1d6683a96_IsStr(_self_))) && (!(_1d6683d2c_IsAny(_self_)))) && (!(_1d6683810_IsBool(_self_)))) && (!(_1d4320c30_IsNum((*(_self_))._field_Kind))));;
}



inline jule::Bool _1d66814bc_IsI8(_1d668060e_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i8", 2);;
}



inline jule::Bool _1d6681753_IsI16(_1d668060e_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i16", 3);;
}



inline jule::Bool _1d66819d9_IsI32(_1d668060e_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i32", 3);;
}



inline jule::Bool _1d6681c70_IsI64(_1d668060e_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i64", 3);;
}



inline jule::Bool _1d6682006_IsU8(_1d668060e_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u8", 2);;
}



inline jule::Bool _1d668228c_IsU16(_1d668060e_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u16", 3);;
}



inline jule::Bool _1d6682523_IsU32(_1d668060e_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u32", 3);;
}



inline jule::Bool _1d66827a9_IsU64(_1d668060e_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u64", 3);;
}



inline jule::Bool _1d6682a40_IsF32(_1d668060e_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("f32", 3);;
}



inline jule::Bool _1d6682cc6_IsF64(_1d668060e_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("f64", 3);;
}



inline jule::Bool _1d668305c_IsInt(_1d668060e_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("int", 3);;
}



inline jule::Bool _1d66832e3_IsUint(_1d668060e_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("uint", 4);;
}



inline jule::Bool _1d6683579_IsUintptr(_1d668060e_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("uintptr", 7);;
}



inline jule::Bool _1d6683810_IsBool(_1d668060e_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("bool", 4);;
}



inline jule::Bool _1d6683a96_IsStr(_1d668060e_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("str", 3);;
}



inline jule::Bool _1d6683d2c_IsAny(_1d668060e_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("any", 3);;
}





std::ostream &operator<<(std::ostream &_Stream, _1d668060e_Prim _Src) {
	_Stream << _1d6680950_Str(&_Src);
	return _Stream;
}



inline jule::Str _1d66844ae_Str(_1d668413a_Sptr* _self_) {
	return (jule::Str::lit("&", 1) + _1d6677ded_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1d6684800_Equal(jule::Ptr<_1d668413a_Sptr> _self_, jule::Ptr<_1d6677a35_TypeKind> _58521_other) {
	jule::Ptr<_1d668413a_Sptr> _5869_sptr = _1d667a41c_Sptr(_58521_other.ptr());;
	if ((_5869_sptr == nullptr)) {
		return false;;
	};
	return _1d667823e_Equal((*(_self_))._field_Elem, (*(_5869_sptr))._field_Elem);;
}





std::ostream &operator<<(std::ostream &_Stream, _1d668413a_Sptr _Src) {
	_Stream << _1d66844ae_Str(&_Src);
	return _Stream;
}



inline jule::Str _1d6685092_Str(_1d6684b0d_Slc* _self_) {
	return (jule::Str::lit("[]", 2) + _1d6677ded_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1d66853d3_Equal(jule::Ptr<_1d6684b0d_Slc> _self_, jule::Ptr<_1d6677a35_TypeKind> _60421_other) {
	jule::Ptr<_1d6684b0d_Slc> _6059_slc = _1d667b1dc_Slc(_60421_other.ptr());;
	if ((_6059_slc == nullptr)) {
		return false;;
	};
	return _1d667823e_Equal((*(_self_))._field_Elem, (*(_6059_slc))._field_Elem);;
}





std::ostream &operator<<(std::ostream &_Stream, _1d6684b0d_Slc _Src) {
	_Stream << _1d6685092_Str(&_Src);
	return _Stream;
}



inline jule::Str _1d6685a76_Str(_1d6685702_Tuple* _self_) {
	_1e01838bc_StrBuilder _62113_s = static__1e0183b64_New(16LL);;
	_1e018c9a3_WriteByte(&_62113_s, '(');
	_1e018c6ea_WriteStr(&_62113_s, _1d6677ded_Str((*(_self_))._field_Types[0LL].ptr()));
	{
		auto expr = (*(_self_))._field_Types.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1da3ea9b3:;
		if (it != expr_end) {
			jule::Ptr<_1d6677a35_TypeKind> *_62416_t = it;
			{
				_1e018c9a3_WriteByte(&_62113_s, ',');
				_1e018c6ea_WriteStr(&_62113_s, _1d6677ded_Str((*(_62416_t)).ptr()));
			}
			_iter_next_1da3ea9b3:;
			++it;
			goto _iter_begin_1da3ea9b3;
		}
		_iter_end_1da3ea9b3:;
	};
	_1e018c9a3_WriteByte(&_62113_s, ')');
	return _1e018cee2_Str(&_62113_s);;
}



inline jule::Bool _1d6685db7_Equal(jule::Ptr<_1d6685702_Tuple> _self_, jule::Ptr<_1d6677a35_TypeKind> _63321_other) {
	jule::Ptr<_1d6685702_Tuple> _6349_tup = _1d667beac_Tup(_63321_other.ptr());;
	if ((_6349_tup == nullptr)) {
		return false;;
	};
	if (((*(_self_))._field_Types.len() != (*(_6349_tup))._field_Types.len())) {
		return false;;
	};
	jule::I64 _64113_i = 0LL;;
	for (; (_64113_i < (*(_self_))._field_Types.len()); (_64113_i)++) {
		{
			if ((!(_1d667823e_Equal((*(_self_))._field_Types[_64113_i], (*(_6349_tup))._field_Types[_64113_i])))) {
				return false;;
			};
		}
	_iter_next_1da3ed994:;
	}
	_iter_end_1da3ed994:;;
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _1d6685702_Tuple _Src) {
	_Stream << _1d6685a76_Str(&_Src);
	return _Stream;
}



inline jule::Str _1d6686626_Str(_1d66862a2_Map* _self_) {
	_1e01838bc_StrBuilder _66113_s = static__1e0183b64_New(16LL);;
	_1e018c6ea_WriteStr(&_66113_s, jule::Str::lit("map[", 4));
	_1e018c6ea_WriteStr(&_66113_s, _1d6677ded_Str((*(_self_))._field_Key.ptr()));
	_1e018c9a3_WriteByte(&_66113_s, ']');
	_1e018c6ea_WriteStr(&_66113_s, _1d6677ded_Str((*(_self_))._field_Val.ptr()));
	return _1e018cee2_Str(&_66113_s);;
}



inline jule::Bool _1d6686967_Equal(jule::Ptr<_1d66862a2_Map> _self_, jule::Ptr<_1d6677a35_TypeKind> _67021_other) {
	jule::Ptr<_1d66862a2_Map> _6719_m = _1d667bc26_Map(_67021_other.ptr());;
	if ((_6719_m == nullptr)) {
		return false;;
	};
	return (_1d667823e_Equal((*(_self_))._field_Key, (*(_6719_m))._field_Key) && _1d667823e_Equal((*(_self_))._field_Val, (*(_6719_m))._field_Val));;
}





std::ostream &operator<<(std::ostream &_Stream, _1d66862a2_Map _Src) {
	_Stream << _1d6686626_Str(&_Src);
	return _Stream;
}



inline jule::Str _1d66872a3_Str(_1d6686e2e_Arr* _self_) {
	_1e01838bc_StrBuilder _68913_s = static__1e0183b64_New(16LL);;
	_1e018c9a3_WriteByte(&_68913_s, '[');
	_1e018c6ea_WriteStr(&_68913_s, _1d43131ea_Itoa((*(_self_))._field_N));
	_1e018c9a3_WriteByte(&_68913_s, ']');
	_1e018c6ea_WriteStr(&_68913_s, _1d6677ded_Str((*(_self_))._field_Elem.ptr()));
	return _1e018cee2_Str(&_68913_s);;
}



inline jule::Bool _1d66875e4_Equal(jule::Ptr<_1d6686e2e_Arr> _self_, jule::Ptr<_1d6677a35_TypeKind> _69821_other) {
	jule::Ptr<_1d6686e2e_Arr> _6999_arr = _1d667ae56_Arr(_69821_other.ptr());;
	if ((_6999_arr == nullptr)) {
		return false;;
	};
	return (((*(_self_))._field_N == (*(_6999_arr))._field_N) && _1d667823e_Equal((*(_self_))._field_Elem, (*(_6999_arr))._field_Elem));;
}





std::ostream &operator<<(std::ostream &_Stream, _1d6686e2e_Arr _Src) {
	_Stream << _1d66872a3_Str(&_Src);
	return _Stream;
}



inline jule::Str _1d6687c76_Str(_1d6687902_Ptr* _self_) {
	if (_1d668843b_IsUnsafe(_self_)) {
		return jule::Str::lit("*unsafe", 7);;
	};
	return (jule::Str::lit("*", 1) + _1d6677ded_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1d66880b7_Equal(jule::Ptr<_1d6687902_Ptr> _self_, jule::Ptr<_1d6677a35_TypeKind> _72221_other) {
	jule::Ptr<_1d6687902_Ptr> _7239_ptr = _1d667a6a3_Ptr(_72221_other.ptr());;
	if ((_7239_ptr == nullptr)) {
		return false;;
	};
	return _1d667823e_Equal((*(_self_))._field_Elem, (*(_7239_ptr))._field_Elem);;
}



inline jule::Bool _1d668843b_IsUnsafe(_1d6687902_Ptr* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1d6687902_Ptr _Src) {
	_Stream << _1d6687c76_Str(&_Src);
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d6688903_referencer _Src) {
	_Stream << "referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}



inline void _1d668a130_pushErr(_1d66898e3_typeChecker* _self_, jule::Ptr<_1d64d5cd3_Token> _80826_token, jule::Str _80841_fmt, jule::Slice<jule::Any> _80854_args) {
	_1d65b88bb_pushErr((*(_self_))._field_s.ptr(), _80826_token, _80841_fmt, _80854_args);
}



inline void _1d668a32d_allowBuiltin(_1d66898e3_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1d668a52b_disallowBuiltin(_1d66898e3_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline void _1da41314b_pushReference(_1d66898e3_typeChecker* _self_, jule::Ptr<_1d652005e_StructIns>* _82040_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1da0d4548_Exist((*(_self_))._field_refers.ptr(), (*(_82040_t)))) {
		return;;
	};
	_1d6539133_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_82040_t)), &__jule_any_type9));
}

inline void _1da415a33_pushReference(_1d66898e3_typeChecker* _self_, jule::Ptr<_1d654554b_Trait>* _82040_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1da4177c1_Exist((*(_self_))._field_refers.ptr(), (*(_82040_t)))) {
		return;;
	};
	_1d6539133_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_82040_t)), &__jule_any_type10));
}



inline void _1d668aa8c_pushReferenceByKind(_1d66898e3_typeChecker* _self_, jule::Ptr<_1d6677a35_TypeKind>* _83043_k) {
	{
		
		if ((_1d667b709_Struct((*(_83043_k)).ptr()) != nullptr)) {
			_case_begin_1da411c82:;
			{
				jule::Ptr<_1d652005e_StructIns> _83317_t = _1d667b709_Struct((*(_83043_k)).ptr());;
				_1da41314b_pushReference(_self_, &(_83317_t));
			}
		}
		else if ((_1d667b990_Trait((*(_83043_k)).ptr()) != nullptr)) {
			_case_begin_1da411d09:;
			{
				jule::Ptr<_1d654554b_Trait> _83617_t = _1d667b990_Trait((*(_83043_k)).ptr());;
				_1da415a33_pushReference(_self_, &(_83617_t));
			}
		}
		_match_end_1da411b72:;
	};
}



inline void _1d668aeaa_pushCycleError(_1d66898e3_typeChecker* _self_, jule::Any _84129_def1, jule::Any _84140_def2, _1e01838bc_StrBuilder* _84156_message) {
	;
	jule::Fn<jule::Str(jule::Any*)> _8439_getIdent = jule::Fn<jule::Str(jule::Any*)>([=](jule::Any* _84325_def) mutable -> jule::Str {
		{
			auto &_match_expr{ (*(_84325_def)) };
			
			if (_match_expr.type == &__jule_any_type66) {
				_case_begin_1da41a40b:;
				{
					return (*((*(_84325_def)).cast_ptr<_1d6676c43_TypeAlias>(&__jule_any_type66)))._field_Ident;;
				}
			}
			else if (_match_expr.type == &__jule_any_type65) {
				_case_begin_1da41a9c2:;
				{
					return (*((*(_84325_def)).cast_ptr<_1d651c2d1_Struct>(&__jule_any_type65)))._field_Ident;;
				}
			}
			else {
				_case_begin_1da41a5d7:;
				{
					return jule::Str();;
				}
			}
			_match_end_1da41a582:;
		};
	});;
	jule::Str _8539_m = _1e018cee2_Str(_84156_message);;
	jule::Str _8549_def1Ident = _8439_getIdent(&(_84129_def1));;
	jule::Str _8559_def2Ident = _8439_getIdent(&(_84140_def2));;
	jule::Str _8569_refersTo = _1e0235ee1_Logf(jule::Str::lit("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any(_8549_def1Ident, &__jule_any_type4),jule::Any(_8559_def2Ident, &__jule_any_type4)}));;
	_1e018c6ea_WriteStr(_84156_message, _1e016dcb4_Repeat(jule::Str::lit(" ", 1), 7LL));
	_1e018c6ea_WriteStr(_84156_message, _8569_refersTo);
	_1e018c9a3_WriteByte(_84156_message, '\n');
	_1e018c6ea_WriteStr(_84156_message, _8539_m);
}



inline jule::Bool _1d668b3a6_checkCrossCycle(_1d66898e3_typeChecker* _self_, jule::Any _86330_decl, _1e01838bc_StrBuilder* _86346_message) {
	{
		auto &_match_expr{ _86330_decl };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1da41db18:;
			{
				jule::Ptr<_1d6676c43_TypeAlias> _86613_ta = _86330_decl.cast_ptr<_1d6676c43_TypeAlias>(&__jule_any_type66);;
				{
					auto expr = &((*(_86613_ta))._field_Refers);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1da41ea70:;
					if (it != expr_end) {
						jule::Any *_86720_d = it;
						{
							{
								
								if (((*(_86720_d)) == (*((*(_self_))._field_referencer))._field_owner)) {
									_case_begin_1da420345:;
									{
										_1d668aeaa_pushCycleError(_self_, jule::Any(_86613_ta, &__jule_any_type66), (*(_86720_d)), _86346_message);
										return false;;
									}
								}
								else if ((!(_1d668b3a6_checkCrossCycle(_self_, (*(_86720_d)), _86346_message)))) {
									_case_begin_1da4203bc:;
									{
										_1d668aeaa_pushCycleError(_self_, jule::Any(_86613_ta, &__jule_any_type66), (*(_86720_d)), _86346_message);
										return false;;
									}
								}
								_match_end_1da420235:;
							};
						}
						_iter_next_1da41ea70:;
						++it;
						goto _iter_begin_1da41ea70;
					}
					_iter_end_1da41ea70:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1da41db7e:;
			{
				jule::Ptr<_1d651c2d1_Struct> _87813_s = _86330_decl.cast_ptr<_1d651c2d1_Struct>(&__jule_any_type65);;
				{
					auto expr = &((*(_87813_s))._field_Depends);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1da421cc5:;
					if (it != expr_end) {
						jule::Ptr<_1d651c2d1_Struct> *_87920_d = it;
						{
							{
								
								if ((__jule_any_type65_compare((*((*(_self_))._field_referencer))._field_owner, (*(_87920_d))))) {
									_case_begin_1da42259a:;
									{
										_1d668aeaa_pushCycleError(_self_, jule::Any(_87813_s, &__jule_any_type65), jule::Any((*(_87920_d)), &__jule_any_type65), _86346_message);
										return false;;
									}
								}
								else if ((!(_1d668b3a6_checkCrossCycle(_self_, jule::Any((*(_87920_d)), &__jule_any_type65), _86346_message)))) {
									_case_begin_1da422622:;
									{
										_1d668aeaa_pushCycleError(_self_, jule::Any(_87813_s, &__jule_any_type65), jule::Any((*(_87920_d)), &__jule_any_type65), _86346_message);
										return false;;
									}
								}
								_match_end_1da42248a:;
							};
						}
						_iter_next_1da421cc5:;
						++it;
						goto _iter_begin_1da421cc5;
					}
					_iter_end_1da421cc5:;
				};
			}
		}
		_match_end_1da41dab3:;
	};
	return true;;
}



inline jule::Bool _1d668b7a2_checkIllegalCycles(_1d66898e3_typeChecker* _self_, jule::Ptr<_1d64eb9db_IdentTypeDecl>* _89738_ident, jule::Any _89765_decl) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_referencer == nullptr) || (!((*(_self_))._field_cycleRisk)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _89765_decl };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1da424536:;
			{
				if ((*(_89765_decl.cast_ptr<_1d651c2d1_Struct>(&__jule_any_type65)))._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1da42459c:;
			{
				if ((*(_89765_decl.cast_ptr<_1d6676c43_TypeAlias>(&__jule_any_type66)))._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1da42448c:;
	};
	if ((_89765_decl == (*((*(_self_))._field_referencer))._field_owner)) {
		_1d668a130_pushErr(_self_, (*((*(_89738_ident))))._field_Token, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_referencer))._field_ident, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_1e01838bc_StrBuilder _92013_message = static__1e0183b64_New(32LL);;
	if ((!(_1d668b3a6_checkCrossCycle(_self_, _89765_decl, &(_92013_message))))) {
		jule::Str _92317_errMsg = _1e018cee2_Str(&_92013_message);;
		_1e018d1e0_Clear(&_92013_message);
		_1d668aeaa_pushCycleError(_self_, (*((*(_self_))._field_referencer))._field_owner, _89765_decl, &(_92013_message));
		_92317_errMsg+=_1e018cee2_Str(&_92013_message);
		_1d668a130_pushErr(_self_, (*((*(_89738_ident))))._field_Token, jule::Str::lit("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_92317_errMsg, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_referencer))._field_owner };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1da428c33:;
			{
				{
					{ jule::Slice<jule::Any> *__jule_push_dest = (*((*(_self_))._field_referencer))._field_refs; __jule_push_dest->push(_89765_decl); };
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1da428c99:;
			{
				{
					auto &_match_expr{ _89765_decl };
					
					if (_match_expr.type == &__jule_any_type65) {
						_case_begin_1da42921c:;
						{
							jule::Ptr<_1d651c2d1_Struct> _93921_s = (*((*(_self_))._field_referencer))._field_owner.cast_ptr<_1d651c2d1_Struct>(&__jule_any_type65);;
							{ jule::Slice<jule::Ptr<_1d651c2d1_Struct>> &__jule_push_dest = (*(_93921_s))._field_Depends; __jule_push_dest.push(_89765_decl.cast_ptr<_1d651c2d1_Struct>(&__jule_any_type65)); };
						}
					}
					_match_end_1da4291b7:;
				};
			}
		}
		_match_end_1da428bcd:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Trait<_1d667757e_Kind> _1d668bb9d_fromTypeAlias(_1d66898e3_typeChecker* _self_, jule::Ptr<_1d64eb9db_IdentTypeDecl>* _94733_decl, jule::Ptr<_1d6676c43_TypeAlias>* _94760_ta) {
	if ((!(_1d65b912a_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_94760_ta))))._field_Public, (*((*(_94760_ta))))._field_Token)))) {
		_1d668a130_pushErr(_self_, (*((*(_94733_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_94733_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	(*((*(_94760_ta))))._field_Used=true;
	if (((*((*(_94733_decl))))._field_Generics.len() > 0LL)) {
		_1d668a130_pushErr(_self_, (*((*(_94733_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_94733_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if (((!((*(_self_))._field_inscatch)) && ((*(_self_))._field_bannedGenerics != nullptr))) {
		(*(_self_))._field_inscatch=true;
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1da42e673:;
			if (it != expr_end) {
				jule::Ptr<_1d6676c43_TypeAlias> _96420_bg = *it;
				{
					if (((_96420_bg == (*(_94760_ta))) || (((*((*((*(_94760_ta))))._field_Kind))._field_Kind != nullptr) && _1d667823e_Equal((*((*((*(_94760_ta))))._field_Kind))._field_Kind, (*((*(_96420_bg))._field_Kind))._field_Kind)))) {
						(*(_self_))._field_inscatch=false;
						goto _iter_end_1da42e673;
					};
				}
				_iter_next_1da42e673:;
				++it;
				goto _iter_begin_1da42e673;
			}
			_iter_end_1da42e673:;
		};
	};
	if ((*(_self_))._field_inscatch) {
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1da430113:;
			if (it != expr_end) {
				jule::Ptr<_1d6676c43_TypeAlias> _97520_bg = *it;
				{
					if ((_97520_bg == (*(_94760_ta)))) {
						_1d668a130_pushErr(_self_, (*((*(_94733_decl))))._field_Token, jule::Str::lit("type declaration causes initiation cycle", 40), jule::Slice<jule::Any>::make({jule::Any((*((*(_94733_decl))))._field_Ident, &__jule_any_type4)}));
						return nullptr;;
					};
					{
						auto expr = &((*((*(_94760_ta))))._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1da4322ad:;
						if (it != expr_end) {
							jule::Ptr<_1d6676c43_TypeAlias> _98024_dg = *it;
							{
								if ((_97520_bg == _98024_dg)) {
									_1d668a130_pushErr(_self_, (*((*(_94733_decl))))._field_Token, jule::Str::lit("type declaration causes initiation cycle", 40), jule::Slice<jule::Any>::make({jule::Any((*((*(_94733_decl))))._field_Ident, &__jule_any_type4)}));
									return nullptr;;
								};
							}
							_iter_next_1da4322ad:;
							++it;
							goto _iter_begin_1da4322ad;
						}
						_iter_end_1da4322ad:;
					};
				}
				_iter_next_1da430113:;
				++it;
				goto _iter_begin_1da430113;
			}
			_iter_end_1da430113:;
		};
	};
	jule::Bool _98913_ok = _1d668b7a2_checkIllegalCycles(_self_, _94733_decl, jule::Any((*(_94760_ta)), &__jule_any_type66));;
	if ((!(_98913_ok))) {
		return nullptr;;
	};
	if (((*((*((*(_94760_ta))))._field_Kind))._field_Kind == nullptr)) {
		_98913_ok=_1d65c5b5e_checkTypeAliasDeclKind((*(_self_))._field_s, _94760_ta, (*(_self_))._field_lookup);
		if ((!(_98913_ok))) {
			return nullptr;;
		};
	};
	if (((*((*(_94760_ta))))._field_Generic && ((*(_self_))._field_ownerAlias != nullptr))) {
		{ jule::Slice<jule::Ptr<_1d6676c43_TypeAlias>> &__jule_push_dest = (*((*(_self_))._field_ownerAlias))._field_Generics; __jule_push_dest.push((*(_94760_ta))); };
	};
	jule::Ptr<_1d6677a35_TypeKind> _100813_tk = jule::new_ptr<_1d6677a35_TypeKind>(_1d6677a35_TypeKind{._field_Generic=(*((*(_94760_ta))))._field_Generic, ._field_Kind=(*((*((*((*(_94760_ta))))._field_Kind))._field_Kind))._field_Kind});;
	_1d668aa8c_pushReferenceByKind(_self_, &(_100813_tk));
	if ((*((*(_94760_ta))))._field_Binded) {
		(*(_100813_tk))._field_BindIdent=(*((*(_94760_ta))))._field_Ident;
	} else {
		(*(_100813_tk))._field_BindIdent=(*((*((*((*(_94760_ta))))._field_Kind))._field_Kind))._field_BindIdent;
	};
	return jule::Trait<_1d667757e_Kind>(_100813_tk, 19);;
}



inline jule::Ptr<_1d6547c57_Enum> _1d668c099_fromEnum(_1d66898e3_typeChecker* _self_, jule::Ptr<_1d64eb9db_IdentTypeDecl>* _102128_decl, jule::Ptr<_1d6547c57_Enum>* _102155_e) {
	if ((!(_1d65b912a_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_102155_e))))._field_Public, (*((*(_102155_e))))._field_Token)))) {
		_1d668a130_pushErr(_self_, (*((*(_102128_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_102128_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_102128_decl))))._field_Generics.len() > 0LL)) {
		_1d668a130_pushErr(_self_, (*((*(_102128_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_102128_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	return (*(_102155_e));;
}



inline jule::Ptr<_1d6549462_TypeEnum> _1d668c495_fromTypeEnum(_1d66898e3_typeChecker* _self_, jule::Ptr<_1d64eb9db_IdentTypeDecl>* _103332_decl, jule::Ptr<_1d6549462_TypeEnum>* _103359_e) {
	if ((!(_1d65b912a_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_103359_e))))._field_Public, (*((*(_103359_e))))._field_Token)))) {
		_1d668a130_pushErr(_self_, (*((*(_103332_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_103332_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_103332_decl))))._field_Generics.len() > 0LL)) {
		_1d668a130_pushErr(_self_, (*((*(_103332_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_103332_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	return (*(_103359_e));;
}



inline jule::Ptr<_1d654554b_Trait> _1d668c891_fromTrait(_1d66898e3_typeChecker* _self_, jule::Ptr<_1d64eb9db_IdentTypeDecl>* _104529_decl, jule::Ptr<_1d654554b_Trait>* _104556_t) {
	if ((!(_1d65b912a_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_104556_t))))._field_Public, (*((*(_104556_t))))._field_Token)))) {
		_1d668a130_pushErr(_self_, (*((*(_104529_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_104529_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_104529_decl))))._field_Generics.len() > 0LL)) {
		_1d668a130_pushErr(_self_, (*((*(_104529_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_104529_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	_1da415a33_pushReference(_self_, _104556_t);
	return (*(_104556_t));;
}



inline jule::Bool _1d668cc8c_checkStructIns(_1d66898e3_typeChecker* _self_, jule::Ptr<_1d652005e_StructIns>* _105838_ins, jule::Ptr<_1d64d5cd3_Token>* _105860_errorToken) {
	jule::Bool __jule_func_result = false;
	if ((*((*(_105838_ins))))._field_Checked) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*((*(_105838_ins))))._field_Checked=true;
	if ((((*(_self_))._field_referencer != nullptr) && (__jule_any_type65_compare((*((*(_self_))._field_referencer))._field_owner, (*((*(_105838_ins))))._field_Decl)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((!(_1d65d2253_precheckStructIns((*(_self_))._field_s, _105838_ins, (*(_105860_errorToken)))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if (((*((*(_105838_ins))))._field_Generics.len() > 0LL)) {
		_1d65d2c6a_checkStructInsOperators((*(_self_))._field_s, (*(_105838_ins)));
		_1d65d250b_checkStructIns((*(_self_))._field_s, _105838_ins);
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1d668d045_appendUsedStructReference(_1d66898e3_typeChecker* _self_, jule::Ptr<_1d651c2d1_Struct>* _107949_s) {
	if (((*(_self_))._field_referencer == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_referencer))._field_owner };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1da445920:;
			{
				jule::Ptr<_1d651c2d1_Struct> _108517_refS = (*((*(_self_))._field_referencer))._field_owner.cast_ptr<_1d651c2d1_Struct>(&__jule_any_type65);;
				if ((!(_1d651dc61_IsUses(_108517_refS.ptr(), (*(_107949_s)))))) {
					{ jule::Slice<jule::Ptr<_1d651c2d1_Struct>> &__jule_push_dest = (*(_108517_refS))._field_Uses; __jule_push_dest.push((*(_107949_s))); };
				};
			}
		}
		_match_end_1da4458ba:;
	};
}



inline jule::Ptr<_1d652005e_StructIns> _1d668d441_buildStructInstance(_1d66898e3_typeChecker* _self_, jule::Ptr<_1d64eb9db_IdentTypeDecl>* _109243_decl, jule::Ptr<_1d651c2d1_Struct>* _109270_s) {
	jule::Ptr<_1d6688903_referencer> _109413_referencer = (*(_self_))._field_referencer;;
	(*(_self_))._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_1d6676c43_TypeAlias>> _109613_bannedGenerics = (*(_self_))._field_bannedGenerics;;
	if (((*(_self_))._field_bannedGenerics == nullptr)) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, 0)) {
				_case_begin_1da4488e0:;
				{
					jule::Ptr<_1d657b42d_scopeChecker> _110321_sc = (*(_self_))._field_lookup.cast_ptr<_1d657b42d_scopeChecker>(0);;
					jule::Ptr<_1d657b42d_scopeChecker> _110421_hard = _1d657e7a5_getHardRoot(_110321_sc);;
					if ((((*((*(_110421_hard))._field_owner))._field_Owner == nullptr) || ((*((*((*(_110421_hard))._field_owner))._field_Owner))._field_Decl != (*(_109270_s))))) {
						goto _match_end_1da44888a;
					};
					jule::I64 _110817_n = ((*((*(_110421_hard))._field_owner))._field_Generics.len() + (*((*((*(_110421_hard))._field_owner))._field_Owner))._field_Generics.len());;
					(*(_self_))._field_bannedGenerics=(*((*(_110421_hard))._field_table))._field_TypeAliases.slice(0LL, _110817_n);
				}
			}
			_match_end_1da44888a:;
		};
	} else {
		(*(_self_))._field_inscatch=true;
	};
	jule::Trait<_1d669756b_Lookup> _111813_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=(*(_self_))._field_rootLookup;
	jule::Ptr<_1d652005e_StructIns> _112213_ins = _1d651c743_instance((*(_109270_s)));;
	(*(_112213_ins))._field_Generics=jule::Slice<jule::Ptr<_1d667614e_InsGeneric>>::alloc(0LL, (*((*(_109243_decl))))._field_Generics.len());
	{
		auto expr = &((*((*(_109243_decl))))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1da44dbe2:;
		if (it != expr_end) {
			jule::Ptr<_1d64eb3d1_TypeDecl> _112421_g = *it;
			{
				jule::Ptr<_1d6677a35_TypeKind> _112517_kind = _1d6691c4c_build(_self_, &((*(_112421_g))._field_Kind));;
				if ((_112517_kind == nullptr)) {
					return nullptr;;
				};
				{ jule::Slice<jule::Ptr<_1d667614e_InsGeneric>> &__jule_push_dest = (*(_112213_ins))._field_Generics; __jule_push_dest.push(jule::new_ptr<_1d667614e_InsGeneric>(_1d667614e_InsGeneric{._field_Kind=_112517_kind, })); };
			}
			_iter_next_1da44dbe2:;
			++it;
			goto _iter_begin_1da44dbe2;
		}
		_iter_end_1da44dbe2:;
	};
	(*(_self_))._field_lookup=_111813_lookup;
	(*(_self_))._field_bannedGenerics=_109613_bannedGenerics;
	(*(_self_))._field_referencer=_109413_referencer;
	return _112213_ins;;
}



inline jule::Ptr<_1d652005e_StructIns> _1d668d83c_fromStruct(_1d66898e3_typeChecker* _self_, jule::Ptr<_1d64eb9db_IdentTypeDecl>* _114034_decl, jule::Ptr<_1d651c2d1_Struct>* _114061_s) {
	if ((!(_1d65b912a_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_114061_s))))._field_Public, (*((*(_114061_s))))._field_Token)))) {
		_1d668a130_pushErr(_self_, (*((*(_114034_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_114034_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if ((*(_self_))._field_selection) {
		if (((*((*(_114034_decl))))._field_Generics.len() > 0LL)) {
			_1d668a130_pushErr(_self_, (*((*(_114034_decl))))._field_Token, jule::Str::lit("generics are not allowed in this scope", 38), jule::Slice<jule::Any>());
			return nullptr;;
		};
		return jule::new_ptr<_1d652005e_StructIns>(_1d652005e_StructIns{._field_Decl=(*(_114061_s)), });;
	};
	jule::Bool _115813_ok = _1d668b7a2_checkIllegalCycles(_self_, _114034_decl, jule::Any((*(_114061_s)), &__jule_any_type65));;
	if ((!(_115813_ok))) {
		return nullptr;;
	};
	_1d668d045_appendUsedStructReference(_self_, _114061_s);
	jule::Ptr<_1d652005e_StructIns> _116413_ins = _1d668d441_buildStructInstance(_self_, _114034_decl, _114061_s);;
	if ((_116413_ins == nullptr)) {
		return nullptr;;
	};
	_115813_ok=_1d65b9dea_checkGenericQuantity((*(_self_))._field_s.ptr(), static_cast<jule::I64>((*((*(_116413_ins))._field_Decl))._field_Generics.len()), static_cast<jule::I64>((*(_116413_ins))._field_Generics.len()), (*((*(_114034_decl))))._field_Token);
	if ((!(_115813_ok))) {
		return nullptr;;
	};
	jule::Ptr<_1d652005e_StructIns> _117413_existInstance = _1d651ca51_appendInstance((*(_114061_s)).ptr(), &(_116413_ins));;
	if ((_117413_existInstance != nullptr)) {
		if ((!(_1d65c3d5a_checkConstraintsStruct((*(_self_))._field_s, &(_116413_ins), &((*((*(_114034_decl))))._field_Token), _117413_existInstance)))) {
			return nullptr;;
		};
		_1da41314b_pushReference(_self_, &(_117413_existInstance));
		return _117413_existInstance;;
	};
	if ((!(_1d668cc8c_checkStructIns(_self_, &(_116413_ins), &((*((*(_114034_decl))))._field_Token))))) {
		return nullptr;;
	};
	_1da41314b_pushReference(_self_, &(_116413_ins));
	return _116413_ins;;
}



inline jule::Trait<_1d667757e_Kind> _1d668db7d_getDef(_1d66898e3_typeChecker* _self_, jule::Ptr<_1d64eb9db_IdentTypeDecl>* _119830_decl) {
	{
		auto expr = &((*(_self_))._field_ignoreGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1da4584d2:;
		if (it != expr_end) {
			jule::Ptr<_1d65085db_GenericDecl> _119916_g = *it;
			{
				if (((*(_119916_g))._field_Ident == (*((*(_119830_decl))))._field_Ident)) {
					return jule::Trait<_1d667757e_Kind>(_1d6694953_buildPrimType((*(_119916_g))._field_Ident), 20);;
				};
			}
			_iter_next_1da4584d2:;
			++it;
			goto _iter_begin_1da4584d2;
		}
		_iter_end_1da4584d2:;
	};
	{
		auto expr = &((*(_self_))._field_useGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1da458845:;
		if (it != expr_end) {
			jule::Ptr<_1d6676c43_TypeAlias> _120521_g = *it;
			{
				if (((*(_120521_g))._field_Ident == (*((*(_119830_decl))))._field_Ident)) {
					if (((*((*(_119830_decl))))._field_Generics.len() > 0LL)) {
						_1d668a130_pushErr(_self_, (*((*(_119830_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_119830_decl))))._field_Ident, &__jule_any_type4)}));
						return nullptr;;
					};
					jule::Ptr<_1d652005e_StructIns> _121121_st = _1d667b709_Struct((*((*(_120521_g))._field_Kind))._field_Kind.ptr());;
					if ((_121121_st != nullptr)) {
						jule::Bool _121321_ok = _1d668b7a2_checkIllegalCycles(_self_, _119830_decl, jule::Any((*(_121121_st))._field_Decl, &__jule_any_type65));;
						if ((!(_121321_ok))) {
							return nullptr;;
						};
					};
					return (*((*((*(_120521_g))._field_Kind))._field_Kind))._field_Kind;;
				};
			}
			_iter_next_1da458845:;
			++it;
			goto _iter_begin_1da458845;
		}
		_iter_end_1da458845:;
	};
	if ((!((*((*(_119830_decl))))._field_Binded))) {
		jule::Ptr<_1d6547c57_Enum> _122317_e = _1d669756b_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1d66970c6_FindEnum((*(_self_))._field_lookup, (*((*(_119830_decl))))._field_Ident);;
		if ((_122317_e != nullptr)) {
			return jule::Trait<_1d667757e_Kind>(_1d668c099_fromEnum(_self_, _119830_decl, &(_122317_e)), 3);;
		};
		jule::Ptr<_1d6549462_TypeEnum> _122817_te = _1d669756b_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1d6697417_FindTypeEnum((*(_self_))._field_lookup, (*((*(_119830_decl))))._field_Ident);;
		if ((_122817_te != nullptr)) {
			return jule::Trait<_1d667757e_Kind>(_1d668c495_fromTypeEnum(_self_, _119830_decl, &(_122817_te)), 4);;
		};
		jule::Ptr<_1d654554b_Trait> _123317_t = _1d669756b_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1d6696c85_FindTrait((*(_self_))._field_lookup, (*((*(_119830_decl))))._field_Ident);;
		if ((_123317_t != nullptr)) {
			return jule::Trait<_1d667757e_Kind>(_1d668c891_fromTrait(_self_, _119830_decl, &(_123317_t)), 2);;
		};
	} else if ((*(_self_))._field_selection) {
		_1d668a130_pushErr(_self_, (*((*(_119830_decl))))._field_Token, jule::Str::lit("binded definitions are not allowed in this scope", 48), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1d651c2d1_Struct> _124213_s = _1d669756b_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1d6696548_FindStruct((*(_self_))._field_lookup, (*((*(_119830_decl))))._field_Ident, (*((*(_119830_decl))))._field_Binded);;
	if ((_124213_s != nullptr)) {
		return jule::Trait<_1d667757e_Kind>(_1d668d83c_fromStruct(_self_, _119830_decl, &(_124213_s)), 0);;
	};
	jule::Ptr<_1d6676c43_TypeAlias> _124713_ta = _1d669756b_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1d669614c_FindTypeAlias((*(_self_))._field_lookup, (*((*(_119830_decl))))._field_Ident, (*((*(_119830_decl))))._field_Binded);;
	if (((_124713_ta == nullptr) && (!((*(_self_))._field_disBuiltin)))) {
		_124713_ta=_1d675d4bc_findBuiltinTypeAlias((*((*(_119830_decl))))._field_Ident);
	};
	if ((_124713_ta != nullptr)) {
		return _1d668bb9d_fromTypeAlias(_self_, _119830_decl, &(_124713_ta));;
	};
	_1d668a130_pushErr(_self_, (*((*(_119830_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_119830_decl))))._field_Ident, &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Trait<_1d667757e_Kind> _1d668debe_buildIdent(_1d66898e3_typeChecker* _self_, jule::Ptr<_1d64eb9db_IdentTypeDecl> _125933_decl) {
	return _1d668db7d_getDef(_self_, &(_125933_decl));;
}



inline jule::Trait<_1d667757e_Kind> _1d668e310_buildSubIdent(_1d66898e3_typeChecker* _self_, jule::Ptr<_1d64ebcd8_SubIdentTypeDecl> _126336_decl) {
	jule::Trait<_1d667757e_Kind> _126413_ident = _1d668debe_buildIdent(_self_, (*(_126336_decl))._field_Idents[0LL]);;
	if ((_126413_ident == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _126413_ident };
		
		if (_match_expr.type_is(true, 4)) {
			_case_begin_1da46605b:;
			{
				goto _match_end_1da466435;
			}
		}
		else {
			_case_begin_1da46648a:;
			{
				_1d668a130_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1da466435:;
	};
	jule::Ptr<_1d6549462_TypeEnum> _127513_t = _126413_ident.cast_ptr<_1d6549462_TypeEnum>(4);;
	jule::Slice<jule::Ptr<_1d64eb9db_IdentTypeDecl>> _127613_idents = (*(_126336_decl))._field_Idents.slice(1LL);;
	{
		auto expr = &(_127613_idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1da467b2e:;
		if (it != expr_end) {
			jule::I64 _127713_i = it - expr->begin();
			jule::Ptr<_1d64eb9db_IdentTypeDecl> _127716_id = *it;
			{
				jule::Ptr<_1d6548d8a_TypeEnumItem> _127817_item = _1d654a023_FindItem(_127513_t.ptr(), (*(_127716_id))._field_Ident);;
				if ((_127817_item == nullptr)) {
					_1d668a130_pushErr(_self_, (*(_127716_id))._field_Token, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*(_127513_t))._field_Ident, &__jule_any_type4),jule::Any((*(_127716_id))._field_Ident, &__jule_any_type4)}));
					return nullptr;;
				};
				if (((_127613_idents.len() - _127713_i) == 1LL)) {
					_1d668aa8c_pushReferenceByKind(_self_, &((*((*(_127817_item))._field_Kind))._field_Kind));
					return jule::Trait<_1d667757e_Kind>((*((*(_127817_item))._field_Kind))._field_Kind, 19);;
				};
				_127513_t=_1d667abc0_TypeEnum((*((*(_127817_item))._field_Kind))._field_Kind.ptr());
				if ((_127513_t == nullptr)) {
					_1d668a130_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
			_iter_next_1da467b2e:;
			++it;
			_127713_i++;
			goto _iter_begin_1da467b2e;
		}
		_iter_end_1da467b2e:;
	};
	return nullptr;;
}



inline jule::Ptr<_1d668413a_Sptr> _1d668e651_buildSptrFromType(_1d66898e3_typeChecker* _self_, jule::Ptr<_1d6677a35_TypeKind>* _129741_elem) {
	{
		
		if (((*(_129741_elem)) == nullptr)) {
			_case_begin_1da46c21b:;
			{
				return nullptr;;
			}
		}
		else if ((_1d667b709_Struct((*(_129741_elem)).ptr()) != nullptr)) {
			_case_begin_1da46c293:;
			{
				jule::Ptr<_1d652005e_StructIns> _130313_s = _1d667b709_Struct((*(_129741_elem)).ptr());;
				if ((((*(_130313_s))._field_Decl != nullptr) && (*((*(_130313_s))._field_Decl))._field_Binded)) {
					_1d668a130_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("binded structures cannot supports reference counting", 52), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
		}
		else if (((_1d667ae56_Arr((*(_129741_elem)).ptr()) != nullptr) && (*(_1d667ae56_Arr((*(_129741_elem)).ptr())))._field_Auto)) {
			_case_begin_1da46c31a:;
			{
				_1d668a130_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1da46b979:;
	};
	return jule::new_ptr<_1d668413a_Sptr>(_1d668413a_Sptr{._field_Elem=(*(_129741_elem))});;
}



inline jule::Ptr<_1d668413a_Sptr> _1d668e992_buildSptr(_1d66898e3_typeChecker* _self_, jule::Ptr<_1d64ec47b_SptrTypeDecl> _131732_decl) {
	jule::Bool _13189_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13189_cycleRisk;
	});;
	jule::Ptr<_1d6677a35_TypeKind> _132213_elem = _1d669208d_checkDecl(_self_, &((*(_131732_decl))._field_Elem));;
	return _1d668e651_buildSptrFromType(_self_, &(_132213_elem));;
}



inline jule::Ptr<_1d6687902_Ptr> _1d668ecd3_buildPtrFromType(_1d66898e3_typeChecker* _self_, jule::Ptr<_1d6677a35_TypeKind>* _132640_elem) {
	{
		
		if (((*(_132640_elem)) == nullptr)) {
			_case_begin_1da4723a8:;
			{
				return nullptr;;
			}
		}
		else if (((_1d667ae56_Arr((*(_132640_elem)).ptr()) != nullptr) && (*(_1d667ae56_Arr((*(_132640_elem)).ptr())))._field_Auto)) {
			_case_begin_1da472430:;
			{
				_1d668a130_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
				return jule::new_ptr<_1d6687902_Ptr>();;
			}
		}
		_match_end_1da472298:;
	};
	return jule::new_ptr<_1d6687902_Ptr>(_1d6687902_Ptr{._field_Elem=(*(_132640_elem))});;
}



inline jule::Ptr<_1d6687902_Ptr> _1d6690124_buildPtr(_1d66898e3_typeChecker* _self_, jule::Ptr<_1d64ece0a_PtrTypeDecl> _134131_decl) {
	jule::Bool _13429_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13429_cycleRisk;
	});;
	jule::Ptr<_1d6677a35_TypeKind> _134617_elem = nullptr;;
	if ((!(_1d64ed26d_IsUnsafe(_134131_decl.ptr())))) {
		_134617_elem=_1d669208d_checkDecl(_self_, &((*(_134131_decl))._field_Elem));
		return _1d668ecd3_buildPtrFromType(_self_, &(_134617_elem));;
	};
	return jule::new_ptr<_1d6687902_Ptr>(_1d6687902_Ptr{._field_Elem=_134617_elem});;
}



inline jule::Ptr<_1d6684b0d_Slc> _1d6690465_buildSlc(_1d66898e3_typeChecker* _self_, jule::Ptr<_1d64ec811_SlcTypeDecl> _135831_decl) {
	jule::Bool _13599_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13599_cycleRisk;
	});;
	jule::Ptr<_1d6677a35_TypeKind> _136313_elem = _1d669208d_checkDecl(_self_, &((*(_135831_decl))._field_Elem));;
	{
		
		if ((_136313_elem == nullptr)) {
			_case_begin_1da477534:;
			{
				return nullptr;;
			}
		}
		else if (((_1d667ae56_Arr(_136313_elem.ptr()) != nullptr) && (*(_1d667ae56_Arr(_136313_elem.ptr())))._field_Auto)) {
			_case_begin_1da47759a:;
			{
				_1d668a130_pushErr(_self_, (*((*(_135831_decl))._field_Elem))._field_Token, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1da4774ce:;
	};
	return jule::new_ptr<_1d6684b0d_Slc>(_1d6684b0d_Slc{._field_Elem=_136313_elem});;
}



inline jule::Ptr<_1d6686e2e_Arr> _1d66907a6_buildArr(_1d66898e3_typeChecker* _self_, jule::Ptr<_1d64ed69c_ArrTypeDecl> _137931_decl) {
	jule::I64 _138013_n = 0LL;;
	if ((!(_1d64eda10_AutoSized(_137931_decl.ptr())))) {
		jule::Ptr<_1d664721e_Data> _138317_size = _1d6667173_evalExpr(_1d65c0d68_eval((*(_self_))._field_s, (*(_self_))._field_lookup), (*(_137931_decl))._field_Size);;
		if ((_138317_size == nullptr)) {
			return nullptr;;
		};
		if ((!(_1d6647ae3_IsConst(_138317_size.ptr())))) {
			_1d668a130_pushErr(_self_, (*((*(_137931_decl))._field_Size))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
			return nullptr;;
		} else if (((_1d667a186_Prim((*(_138317_size))._field_Kind.ptr()) == nullptr) || (!(_1d4320625_IsInt((*(_1d667a186_Prim((*(_138317_size))._field_Kind.ptr())))._field_Kind))))) {
			_1d668a130_pushErr(_self_, (*((*(_137931_decl))._field_Size))._field_Token, jule::Str::lit("array size must be integer", 26), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_138013_n=static_cast<jule::I64>(static_cast<jule::I64>(_1d432389d_AsI64((*(_138317_size))._field_Constant.ptr())));
		if ((_138013_n < 0LL)) {
			_1d668a130_pushErr(_self_, (*((*(_137931_decl))._field_Elem))._field_Token, jule::Str::lit("array size must be positive integer", 35), jule::Slice<jule::Any>());
			return nullptr;;
		} else {
			jule::I64 _140117_max = _1d431b797_MaxI(jule::Str::lit("int", 3));;
			if (((_1d4314493_BitSize != 64LL) && (static_cast<jule::I64>(_138013_n) > _140117_max))) {
				_1d668a130_pushErr(_self_, (*((*(_137931_decl))._field_Size))._field_Token, jule::Str::lit("array with size @ overflows limit (@) of the system", 51), jule::Slice<jule::Any>::make({jule::Any(_1d6674427_constoa(&((*(_138317_size))._field_Constant)), &__jule_any_type4),jule::Any(_1d4312e31_FmtInt(_140117_max, 10LL), &__jule_any_type4)}));
				return nullptr;;
			};
		};
	};
	jule::Ptr<_1d6677a35_TypeKind> _141013_elem = _1d669208d_checkDecl(_self_, &((*(_137931_decl))._field_Elem));;
	{
		
		if ((_141013_elem == nullptr)) {
			_case_begin_1da481e12:;
			{
				return nullptr;;
			}
		}
		else if (((_1d667ae56_Arr(_141013_elem.ptr()) != nullptr) && (*(_1d667ae56_Arr(_141013_elem.ptr())))._field_Auto)) {
			_case_begin_1da481e89:;
			{
				_1d668a130_pushErr(_self_, (*((*(_137931_decl))._field_Elem))._field_Token, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1da479aca:;
	};
	return jule::new_ptr<_1d6686e2e_Arr>(_1d6686e2e_Arr{._field_Auto=_1d64eda10_AutoSized(_137931_decl.ptr()), ._field_N=_138013_n, ._field_Elem=_141013_elem});;
}



inline jule::Ptr<_1d66862a2_Map> _1d6690ae7_buildMap(_1d66898e3_typeChecker* _self_, jule::Ptr<_1d64eddea_MapTypeDecl> _142831_decl) {
	jule::Bool _14299_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_14299_cycleRisk;
	});;
	jule::Ptr<_1d6677a35_TypeKind> _143313_key = _1d669208d_checkDecl(_self_, &((*(_142831_decl))._field_Key));;
	if ((_143313_key == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1d6677a35_TypeKind> _143813_val = _1d669208d_checkDecl(_self_, &((*(_142831_decl))._field_Val));;
	if ((_143813_val == nullptr)) {
		return nullptr;;
	};
	if ((_1d667a939_Enum(_143813_val.ptr()) != nullptr)) {
		_1d668a130_pushErr(_self_, (*((*(_142831_decl))._field_Val))._field_Token, jule::Str::lit("maps do not support enums as map key type", 41), jule::Slice<jule::Any>());
	};
	return jule::new_ptr<_1d66862a2_Map>(_1d66862a2_Map{._field_Key=_143313_key, ._field_Val=_143813_val});;
}



inline jule::Ptr<_1d6685702_Tuple> _1d6690e38_buildTuple(_1d66898e3_typeChecker* _self_, jule::Ptr<_1d64ecb0d_TupleTypeDecl> _145233_decl) {
	jule::Slice<jule::Ptr<_1d6677a35_TypeKind>> _145313_types = jule::Slice<jule::Ptr<_1d6677a35_TypeKind>>::alloc(0LL, (*(_145233_decl))._field_Types.len());;
	{
		auto expr = &((*(_145233_decl))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1da48849b:;
		if (it != expr_end) {
			jule::Ptr<_1d64eb3d1_TypeDecl> _145421_t = *it;
			{
				jule::Ptr<_1d6677a35_TypeKind> _145517_kind = _1d669208d_checkDecl(_self_, &(_145421_t));;
				if ((_145517_kind == nullptr)) {
					return nullptr;;
				};
				{ jule::Slice<jule::Ptr<_1d6677a35_TypeKind>> &__jule_push_dest = _145313_types; __jule_push_dest.push(_145517_kind); };
			}
			_iter_next_1da48849b:;
			++it;
			goto _iter_begin_1da48849b;
		}
		_iter_end_1da48849b:;
	};
	return jule::new_ptr<_1d6685702_Tuple>(_1d6685702_Tuple{._field_Types=_145313_types});;
}



inline jule::Bool _1d6691279_checkFuncTypes(_1d66898e3_typeChecker* _self_, jule::Ptr<_1d6535173_FnIns>* _146538_f) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_146538_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1da48a02a:;
		if (it != expr_end) {
			jule::Ptr<_1d65341c7_ParamIns> _146621_p = *it;
			{
				(*(_146621_p))._field_Kind=_1d6691c4c_build(_self_, &((*((*((*((*(_146621_p))._field_Decl))._field_Kind))._field_Decl))._field_Kind));
				__jule_func_result=((*(_146621_p))._field_Kind != nullptr);
				if ((!(__jule_func_result))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				_1d65c450e_checkFnParamKind((*(_self_))._field_s, &(_146621_p));
			}
			_iter_next_1da48a02a:;
			++it;
			goto _iter_begin_1da48a02a;
		}
		_iter_end_1da48a02a:;
	};
	if ((!(_1d65326e2_IsVoid((*((*(_146538_f))))._field_Decl.ptr())))) {
		(*((*(_146538_f))))._field_Result=_1d6691c4c_build(_self_, &((*((*((*((*((*((*(_146538_f))))._field_Decl))._field_Result))._field_Kind))._field_Decl))._field_Kind));
		__jule_func_result = ((*((*(_146538_f))))._field_Result != nullptr);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1d6535173_FnIns> _1d66915ba_buildFunc(_1d66898e3_typeChecker* _self_, jule::Ptr<_1d650d091_FnDecl> _148332_decl) {
	jule::Bool _14849_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_14849_cycleRisk;
	});;
	if (((*(_148332_decl))._field_Generics.len() > 0LL)) {
		_1d668a130_pushErr(_self_, (*(_148332_decl))._field_Token, jule::Str::lit("genericed functions cannot use as anonymous function", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1d653226e_Fn> _149313_f = _1d653b861_buildFunc(_148332_decl);;
	jule::I64 _14959_n = (*((*(_self_))._field_s))._field_errors.len();;
	_1d65cd804_checkAnonFuncDecl((*(_self_))._field_s, &(_149313_f));
	if ((_14959_n != (*((*(_self_))._field_s))._field_errors.len())) {
		return nullptr;;
	};
	jule::Ptr<_1d6535173_FnIns> _150113_ins = _1d6533748_instanceForce(_149313_f);;
	(*(_150113_ins))._field_Anon=true;
	jule::Bool _15049_ok = _1d6691279_checkFuncTypes(_self_, &(_150113_ins));;
	if ((!(_15049_ok))) {
		return nullptr;;
	};
	return _150113_ins;;
}



inline jule::Trait<_1d667757e_Kind> _1d669190b_buildByNamespace(_1d66898e3_typeChecker* _self_, jule::Ptr<_1d64ec17e_NamespaceTypeDecl> _151239_decl) {
	jule::Str _15139_path = _1d66945ac_buildLinkPathByTokens(&((*(_151239_decl))._field_Idents));;
	jule::Ptr<_1d659590e_ImportInfo> _151413_imp = _1d669756b_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1d6695855_SelectPackage((*(_self_))._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1d659590e_ImportInfo>)>([=](jule::Ptr<_1d659590e_ImportInfo> _151449_imp) mutable -> jule::Bool {
		if ((((*(_151239_decl))._field_Idents.len() == 1LL) && ((*(_151449_imp))._field_Alias == _15139_path))) {
			return true;;
		};
		return (((*(_151449_imp))._field_LinkPath == _15139_path) && _1d6598527_isAccessibleViaSelection(_151449_imp.ptr()));;
	}));;
	jule::Str _15219_selfIdent = jule::Str::lit("self", 4);;
	if (((_151413_imp == nullptr) || (!(_1d6597e50_isLookupable(_151413_imp.ptr(), &(_15219_selfIdent)))))) {
		_1d668a130_pushErr(_self_, (*(_151239_decl))._field_Idents[0LL], jule::Str::lit("undefined namespace: @", 22), jule::Slice<jule::Any>::make({jule::Any(_15139_path, &__jule_any_type4)}));
		return nullptr;;
	};
	_1d668a52b_disallowBuiltin(_self_);
	jule::Trait<_1d669756b_Lookup> _152813_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait<_1d669756b_Lookup>(_151413_imp, 1);
	jule::Ptr<_1d6677a35_TypeKind> _153013_kind = _1d669208d_checkDecl(_self_, &((*(_151239_decl))._field_Kind));;
	(*(_self_))._field_lookup=_152813_lookup;
	_1d668a32d_allowBuiltin(_self_);
	return jule::Trait<_1d667757e_Kind>(_153013_kind, 19);;
}



inline jule::Ptr<_1d6677a35_TypeKind> _1d6691c4c_build(_1d66898e3_typeChecker* _self_, jule::Any* _153629_declKind) {
	jule::Trait<_1d667757e_Kind> _153717_kind = nullptr;;
	{
		auto &_match_expr{ (*(_153629_declKind)) };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1da499cd7:;
			{
				jule::Trait<_1d667757e_Kind> _154017_t = _1d668debe_buildIdent(_self_, (*(_153629_declKind)).cast_ptr<_1d64eb9db_IdentTypeDecl>(&__jule_any_type20));;
				if ((_154017_t != nullptr)) {
					_153717_kind=_154017_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1da49918d:;
			{
				jule::Trait<_1d667757e_Kind> _154517_t = _1d668e310_buildSubIdent(_self_, (*(_153629_declKind)).cast_ptr<_1d64ebcd8_SubIdentTypeDecl>(&__jule_any_type86));;
				if ((_154517_t != nullptr)) {
					_153717_kind=_154517_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1da49939c:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1d668413a_Sptr> _155117_t = _1d668e992_buildSptr(_self_, (*(_153629_declKind)).cast_ptr<_1d64ec47b_SptrTypeDecl>(&__jule_any_type72));;
				if ((_155117_t != nullptr)) {
					_153717_kind=jule::Trait<_1d667757e_Kind>(_155117_t, 21);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1da499413:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1d6687902_Ptr> _155717_t = _1d6690124_buildPtr(_self_, (*(_153629_declKind)).cast_ptr<_1d64ece0a_PtrTypeDecl>(&__jule_any_type71));;
				if ((_155717_t != nullptr)) {
					_153717_kind=jule::Trait<_1d667757e_Kind>(_155717_t, 26);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1da499479:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1d6684b0d_Slc> _156317_t = _1d6690465_buildSlc(_self_, (*(_153629_declKind)).cast_ptr<_1d64ec811_SlcTypeDecl>(&__jule_any_type70));;
				if ((_156317_t != nullptr)) {
					_153717_kind=jule::Trait<_1d667757e_Kind>(_156317_t, 22);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type69) {
			_case_begin_1da4994e0:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1d6686e2e_Arr> _156917_t = _1d66907a6_buildArr(_self_, (*(_153629_declKind)).cast_ptr<_1d64ed69c_ArrTypeDecl>(&__jule_any_type69));;
				if ((_156917_t != nullptr)) {
					_153717_kind=jule::Trait<_1d667757e_Kind>(_156917_t, 25);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1da499da3:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1d66862a2_Map> _157517_t = _1d6690ae7_buildMap(_self_, (*(_153629_declKind)).cast_ptr<_1d64eddea_MapTypeDecl>(&__jule_any_type73));;
				if ((_157517_t != nullptr)) {
					_153717_kind=jule::Trait<_1d667757e_Kind>(_157517_t, 24);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1da499e19:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1d6685702_Tuple> _158117_t = _1d6690e38_buildTuple(_self_, (*(_153629_declKind)).cast_ptr<_1d64ecb0d_TupleTypeDecl>(&__jule_any_type74));;
				if ((_158117_t != nullptr)) {
					_153717_kind=jule::Trait<_1d667757e_Kind>(_158117_t, 23);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1da499e80:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1d6535173_FnIns> _158717_t = _1d66915ba_buildFunc(_self_, (*(_153629_declKind)).cast_ptr<_1d650d091_FnDecl>(&__jule_any_type14));;
				if ((_158717_t != nullptr)) {
					_153717_kind=jule::Trait<_1d667757e_Kind>(_158717_t, 1);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1da499ee6:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Trait<_1d667757e_Kind> _159317_t = _1d669190b_buildByNamespace(_self_, (*(_153629_declKind)).cast_ptr<_1d64ec17e_NamespaceTypeDecl>(&__jule_any_type90));;
				if ((_159317_t != nullptr)) {
					_153717_kind=_159317_t;
				};
			}
		}
		else {
			_case_begin_1da499336:;
			{
				_1d668a130_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1da4992d1:;
	};
	if ((_153717_kind == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _153717_kind };
		
		if (_match_expr.type_is(true, 19)) {
			_case_begin_1da4a793d:;
			{
				return _153717_kind.cast_ptr<_1d6677a35_TypeKind>(19);;
			}
		}
		else {
			_case_begin_1da4a5474:;
			{
				jule::Ptr<_1d6677a35_TypeKind> _160817_tk = jule::new_ptr<_1d6677a35_TypeKind>(_1d6677a35_TypeKind{._field_Kind=_153717_kind});;
				{
					auto &_match_expr{ _153717_kind };
					
					if (_match_expr.type_is(true, 20)) {
						_case_begin_1da4a5e47:;
						{
							if (((*(_self_))._field_ignoredGenerics != nullptr)) {
								{
									{ jule::Slice<jule::Ptr<_1d6677a35_TypeKind>> *__jule_push_dest = (*(_self_))._field_ignoredGenerics; __jule_push_dest->push(_160817_tk); };
								};
							};
						}
					}
					else if (_match_expr.type_is(true, 0)) {
						_case_begin_1da4a5ead:;
						{
							jule::Ptr<_1d652005e_StructIns> _161517_s = _153717_kind.cast_ptr<_1d652005e_StructIns>(0);;
							if ((((*(_161517_s))._field_Decl != nullptr) && (*((*(_161517_s))._field_Decl))._field_Binded)) {
								(*(_160817_tk))._field_BindIdent=(*((*(_161517_s))._field_Decl))._field_Ident;
							};
						}
					}
					_match_end_1da4a5de2:;
				};
				return _160817_tk;;
			}
		}
		_match_end_1da49a05c:;
	};
}



inline jule::Ptr<_1d6677a35_TypeKind> _1d669208d_checkDecl(_1d66898e3_typeChecker* _self_, jule::Ptr<_1d64eb3d1_TypeDecl>* _162433_decl) {
	jule::Ptr<_1d64d5cd3_Token> _162613_errorToken = (*(_self_))._field_errorToken;;
	(*(_self_))._field_errorToken=(*((*(_162433_decl))))._field_Token;
	jule::Ptr<_1d6677a35_TypeKind> _162913_kind = _1d6691c4c_build(_self_, &((*((*(_162433_decl))))._field_Kind));;
	(*(_self_))._field_errorToken=_162613_errorToken;
	return _162913_kind;;
}





std::ostream &operator<<(std::ostream &_Stream, _1d66898e3_typeChecker _Src) {
	_Stream << "typeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "rootLookup:" << _Src._field_rootLookup << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "ignoreGenerics:" << _Src._field_ignoreGenerics << ", ";
	_Stream << "ignoredGenerics:" << _Src._field_ignoredGenerics << ", ";
	_Stream << "useGenerics:" << _Src._field_useGenerics << ", ";
	_Stream << "cycleRisk:" << _Src._field_cycleRisk << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "selection:" << _Src._field_selection << ", ";
	_Stream << "ownerAlias:" << _Src._field_ownerAlias << ", ";
	_Stream << "bannedGenerics:" << _Src._field_bannedGenerics << ", ";
	_Stream << "inscatch:" << _Src._field_inscatch;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1d66929d9_prim(jule::Str* _165121_ident, jule::Ptr<_1d668060e_Prim> _165133_t) {
	return ((*(_165133_t))._field_Kind == (*(_165121_ident)));;
}



inline jule::Bool static__1d6692d5d_exist(jule::Str* _165522_ident, jule::Ptr<_1d6677a35_TypeKind>* _165539_k) {
	{
		
		if ((_1d667a186_Prim((*(_165539_k)).ptr()) != nullptr)) {
			_case_begin_1da4ac888:;
			{
				return static__1d66929d9_prim(_165522_ident, _1d667a186_Prim((*(_165539_k)).ptr()));;
			}
		}
		else if ((_1d667a41c_Sptr((*(_165539_k)).ptr()) != nullptr)) {
			_case_begin_1da4ac910:;
			{
				jule::Ptr<_1d668413a_Sptr> _166017_sptr = _1d667a41c_Sptr((*(_165539_k)).ptr());;
				return static__1d6692d5d_exist(_165522_ident, &((*(_166017_sptr))._field_Elem));;
			}
		}
		else if ((_1d667a6a3_Ptr((*(_165539_k)).ptr()) != nullptr)) {
			_case_begin_1da4acb85:;
			{
				jule::Ptr<_1d6687902_Ptr> _166317_ptr = _1d667a6a3_Ptr((*(_165539_k)).ptr());;
				return static__1d6692d5d_exist(_165522_ident, &((*(_166317_ptr))._field_Elem));;
			}
		}
		else if ((_1d667b1dc_Slc((*(_165539_k)).ptr()) != nullptr)) {
			_case_begin_1da4acbeb:;
			{
				jule::Ptr<_1d6684b0d_Slc> _166617_slc = _1d667b1dc_Slc((*(_165539_k)).ptr());;
				return static__1d6692d5d_exist(_165522_ident, &((*(_166617_slc))._field_Elem));;
			}
		}
		else if ((_1d667ae56_Arr((*(_165539_k)).ptr()) != nullptr)) {
			_case_begin_1da4acc62:;
			{
				jule::Ptr<_1d6686e2e_Arr> _166917_arr = _1d667ae56_Arr((*(_165539_k)).ptr());;
				return static__1d6692d5d_exist(_165522_ident, &((*(_166917_arr))._field_Elem));;
			}
		}
		else if ((_1d667bc26_Map((*(_165539_k)).ptr()) != nullptr)) {
			_case_begin_1da4accd9:;
			{
				jule::Ptr<_1d66862a2_Map> _167217_m = _1d667bc26_Map((*(_165539_k)).ptr());;
				return (static__1d6692d5d_exist(_165522_ident, &((*(_167217_m))._field_Key)) || static__1d6692d5d_exist(_165522_ident, &((*(_167217_m))._field_Val)));;
			}
		}
		else if ((_1d667b709_Struct((*(_165539_k)).ptr()) != nullptr)) {
			_case_begin_1da4acd61:;
			{
				jule::Ptr<_1d652005e_StructIns> _167617_s = _1d667b709_Struct((*(_165539_k)).ptr());;
				{
					auto expr = &((*(_167617_s))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1da4b4e12:;
					if (it != expr_end) {
						jule::Ptr<_1d667614e_InsGeneric> _167725_g = *it;
						{
							if (static__1d6692d5d_exist(_165522_ident, &((*(_167725_g))._field_Kind))) {
								return true;;
							};
						}
						_iter_next_1da4b4e12:;
						++it;
						goto _iter_begin_1da4b4e12;
					}
					_iter_end_1da4b4e12:;
				};
				return false;;
			}
		}
		else if ((_1d667b473_Fn((*(_165539_k)).ptr()) != nullptr)) {
			_case_begin_1da4ace71:;
			{
				jule::Ptr<_1d6535173_FnIns> _168417_f = _1d667b473_Fn((*(_165539_k)).ptr());;
				{
					auto expr = &((*(_168417_f))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1da4b692a:;
					if (it != expr_end) {
						jule::Ptr<_1d65341c7_ParamIns> _168525_p = *it;
						{
							if (_1d6530db6_IsSelf((*(_168525_p))._field_Decl.ptr())) {
								goto _iter_next_1da4b692a;
							};
							if (static__1d6692d5d_exist(_165522_ident, &((*(_168525_p))._field_Kind))) {
								return true;;
							};
						}
						_iter_next_1da4b692a:;
						++it;
						goto _iter_begin_1da4b692a;
					}
					_iter_end_1da4b692a:;
				};
				if (((*(_168417_f))._field_Result != nullptr)) {
					return static__1d6692d5d_exist(_165522_ident, &((*(_168417_f))._field_Result));;
				};
				return false;;
			}
		}
		else if ((_1d667beac_Tup((*(_165539_k)).ptr()) != nullptr)) {
			_case_begin_1da4aced7:;
			{
				jule::Ptr<_1d6685702_Tuple> _169817_tup = _1d667beac_Tup((*(_165539_k)).ptr());;
				{
					auto expr = &((*(_169817_tup))._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1da4b9268:;
					if (it != expr_end) {
						jule::Ptr<_1d6677a35_TypeKind> _169925_t = *it;
						{
							if (static__1d6692d5d_exist(_165522_ident, &(_169925_t))) {
								return true;;
							};
						}
						_iter_next_1da4b9268:;
						++it;
						goto _iter_begin_1da4b9268;
					}
					_iter_end_1da4b9268:;
				};
				return false;;
			}
		}
		else {
			_case_begin_1da4ac745:;
			{
				return false;;
			}
		}
		_match_end_1da4ac679:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1d6692577_identTypeLookup _Src) {
	_Stream << "identTypeLookup{";
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d70d5b8a_FileInfo _Src) {
	_Stream << "FileInfo{";
	_Stream << "Ast:" << _Src._field_Ast << ", ";
	_Stream << "Errors:" << _Src._field_Errors;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d712e123_stmt _Src) {
	_Stream << "stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



inline void _1d7130135_stop(_1d712e9b4_scopeParser* _self_) {
	(*(_self_))._field_pos=-1LL;
}



inline jule::Bool _1d71303bb_stopped(_1d712e9b4_scopeParser* _self_) {
	return ((*(_self_))._field_pos == -1LL);;
}



inline jule::Bool _1d7130652_finished(_1d712e9b4_scopeParser* _self_) {
	return ((*(_self_))._field_pos >= (*(_self_))._field_stmts.len());;
}



inline jule::Bool _1d71308d8_isLastSt(_1d712e9b4_scopeParser* _self_) {
	return (((*(_self_))._field_pos + 1LL) >= (*(_self_))._field_stmts.len());;
}



inline void _1d7130c4b_pushErr(_1d712e9b4_scopeParser* _self_, jule::Ptr<_1d64d5cd3_Token> _18926_token, jule::Str _18941_fmt) {
	_1d714d72a_pushErr((*(_self_))._field_p.ptr(), _18926_token, _18941_fmt, jule::Slice<jule::Any>());
}



inline void _1d71310ae_pushSuggestion(_1d712e9b4_scopeParser* _self_, jule::Str _19433_fmt, jule::Slice<jule::Any> _19446_args) {
	_1d714da8d_pushSuggestion((*(_self_))._field_p.ptr(), _19433_fmt, _19446_args);
}



inline void _1d7131367_insertAsNext(_1d712e9b4_scopeParser* _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _19836_tokens) {
	(*(_self_))._field_stmts=jule::append((*(_self_))._field_stmts.slice(0LL, ((*(_self_))._field_pos + 1LL)),(*(_self_))._field_stmts.slice((*(_self_))._field_pos));
	(*(_self_))._field_stmts[((*(_self_))._field_pos + 1LL)]=jule::new_ptr<_1d712e123_stmt>(_1d712e123_stmt{._field_tokens=(*(_19836_tokens)), });
}



inline jule::Ptr<_1d712e123_stmt> _1d71315ed_next(_1d712e9b4_scopeParser* _self_) {
	((*(_self_))._field_pos)++;
	return (*(_self_))._field_stmts[(*(_self_))._field_pos];;
}



inline jule::Ptr<_1d650b402_ScopeTree> _1d71319e9_buildScope(_1d712e9b4_scopeParser* _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _20834_tokens, jule::Ptr<_1d64d5cd3_Token> _20856_end) {
	jule::Ptr<_1d650b402_ScopeTree> _20913_s = _1d712cd9c_newScope();;
	(*(_20913_s))._field_Parent=(*(_self_))._field_s;
	(*(_20913_s))._field_End=_20856_end;
	_1d712e9b4_scopeParser _21213_ssp = _1d712e9b4_scopeParser{._field_p=(*(_self_))._field_p, };;
	_1d713b86c_build(&_21213_ssp, _20834_tokens, &(_20913_s));
	return _20913_s;;
}



inline jule::Ptr<_1d650e24b_VarDecl> _1d7131d3a_buildVarSt(_1d712e9b4_scopeParser* _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _21934_tokens) {
	jule::Ptr<_1d650e24b_VarDecl> _22013_v = _1d71515a7_buildVar((*(_self_))._field_p, (*(_21934_tokens)));;
	(*(_22013_v))._field_Scope=(*(_self_))._field_s;
	return _22013_v;;
}



inline jule::Ptr<_1d650e625_RetSt> _1d713217b_buildRetSt(_1d712e9b4_scopeParser* _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _22533_tokens) {
	jule::Ptr<_1d650e625_RetSt> _22613_st = jule::new_ptr<_1d650e625_RetSt>(_1d650e625_RetSt{._field_Token=_22533_tokens[0LL], });;
	if ((_22533_tokens.len() > 1LL)) {
		(_22533_tokens).mut_slice(1LL);;
		(*(_22613_st))._field_Expr=_1d714ddce_buildExpr((*(_self_))._field_p, &(_22533_tokens));
	};
	return _22613_st;;
}



inline jule::Ptr<_1d650ed95_Iter> _1d71324bc_buildWhileNextIter(_1d712e9b4_scopeParser* _self_, jule::Ptr<_1d712e123_stmt>* _23642_s) {
	jule::Ptr<_1d650ed95_Iter> _23713_it = jule::new_ptr<_1d650ed95_Iter>(_1d650ed95_Iter{._field_Token=(*((*(_23642_s))))._field_tokens[0LL], });;
	jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _24013_tokens = (*((*(_23642_s))))._field_tokens.slice(1LL);;
	jule::Ptr<_1d65106c0_WhileKind> _24113_kind = jule::new_ptr<_1d65106c0_WhileKind>();;
	if ((_24013_tokens.len() > 0LL)) {
		(*(_24113_kind))._field_Expr=_1d714ddce_buildExpr((*(_self_))._field_p, &(_24013_tokens));
	};
	if (_1d71308d8_isLastSt(_self_)) {
		_1d7130c4b_pushErr(_self_, (*(_23713_it))._field_Token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	_24013_tokens=(*(_1d71315ed_next(_self_)))._field_tokens;
	jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _25313_stTokens = _1d7148208_getBlockExpr(&(_24013_tokens));;
	if ((_25313_stTokens.len() > 0LL)) {
		jule::Ptr<_1d712e123_stmt> _25517_stmt = jule::new_ptr<_1d712e123_stmt>(_1d712e123_stmt{._field_tokens=_25313_stTokens, ._field_terminated=(*((*(_23642_s))))._field_terminated});;
		(*(_24113_kind))._field_NextToken=_25313_stTokens[0LL];
		(*(_24113_kind))._field_Next=_1d713b509_buildSt(_self_, &(_25517_stmt));
	};
	jule::I64 _26313_i = _25313_stTokens.len();;
	jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _26413_blockTokens = _1d714b42b_range(&(_26313_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_24013_tokens));;
	if ((_26413_blockTokens == nullptr)) {
		_1d7130135_stop(_self_);
		_1d7130c4b_pushErr(_self_, (*(_23713_it))._field_Token, jule::Str::lit("body is not exist", 17));
		_1d71310ae_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_26313_i < _24013_tokens.len())) {
		_1d7130c4b_pushErr(_self_, _24013_tokens[_26313_i], jule::Str::lit("invalid syntax", 14));
	};
	(*(_23713_it))._field_Scope=_1d71319e9_buildScope(_self_, &(_26413_blockTokens), _24013_tokens[(_26313_i - 1LL)]);
	(*(_23713_it))._field_Kind=jule::Any(_24113_kind, &__jule_any_type37);
	return _23713_it;;
}



inline jule::Ptr<_1d65106c0_WhileKind> _1d713280d_buildWhileIterKind(_1d712e9b4_scopeParser* _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _28142_tokens) {
	return jule::new_ptr<_1d65106c0_WhileKind>(_1d65106c0_WhileKind{._field_Expr=_1d714ddce_buildExpr((*(_self_))._field_p, _28142_tokens), });;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1d64d5cd3_Token>>> _1d7132b4e_getRangeKindKeysTokens(_1d712e9b4_scopeParser* _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _28746_toks) {
	jule::Slice<jule::Slice<jule::Ptr<_1d64d5cd3_Token>>> _28813_vars;;
	jule::Slice<_1e0235a7e_Log> _28819_errs;;
	({
		__jule_tuple_ssx_1d64d5cd3_Token__jule_tuple_s_1e0235a7e_Log __jule_assign_result = _1d714bb9b_parts(_28746_toks, static_cast<jule::U64>(5LLU), true);
		_28813_vars = __jule_assign_result.__jule_result_arg0;
		_28819_errs = __jule_assign_result.__jule_result_arg1;
	});
	((*((*(_self_))._field_p))._field_errors).append(_28819_errs);;
	return _28813_vars;;
}



inline jule::Ptr<_1d650e24b_VarDecl> _1d7132e90_buildRangeKindKey(_1d712e9b4_scopeParser* _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _29341_tokens) {
	if (((*(_29341_tokens)).len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1d650e24b_VarDecl> _29713_key = jule::new_ptr<_1d650e24b_VarDecl>(_1d650e24b_VarDecl{._field_Token=(*(_29341_tokens))[0LL], ._field_Setter=(*(_29341_tokens))[0LL], });;
	if (((*((*(_29713_key))._field_Token))._field_Id == static_cast<jule::U64>(32LLU))) {
		(*(_29713_key))._field_Mutable=true;
		if (((*(_29341_tokens)).len() == 1LL)) {
			_1d7130c4b_pushErr(_self_, (*(_29713_key))._field_Token, jule::Str::lit("invalid syntax", 14));
		};
		(*(_29713_key))._field_Token=(*(_29341_tokens))[1LL];
	} else if (((*(_29341_tokens)).len() > 1LL)) {
		_1d7130c4b_pushErr(_self_, (*(_29341_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
	};
	if (((*((*(_29713_key))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1d7130c4b_pushErr(_self_, (*(_29713_key))._field_Token, jule::Str::lit("invalid syntax", 14));
		_1d71310ae_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*(_29713_key))._field_Ident=(*((*(_29713_key))._field_Token))._field_Kind;
	return _29713_key;;
}



inline jule::Slice<jule::Ptr<_1d650e24b_VarDecl>> _1d71332d1_buildRangeKindKeys(_1d712e9b4_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1d64d5cd3_Token>>>* _31942_parts) {
	jule::Slice<jule::Ptr<_1d650e24b_VarDecl>> _32017_keys = nullptr;;
	{
		auto expr = _31942_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1da680341:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _32121_tokens = *it;
			{
				{ jule::Slice<jule::Ptr<_1d650e24b_VarDecl>> &__jule_push_dest = _32017_keys; __jule_push_dest.push(_1d7132e90_buildRangeKindKey(_self_, &(_32121_tokens))); };
			}
			_iter_next_1da680341:;
			++it;
			goto _iter_begin_1da680341;
		}
		_iter_end_1da680341:;
	};
	return _32017_keys;;
}



inline void _1d7133644_setupRangeKindKeysPlain(_1d712e9b4_scopeParser* _self_, jule::Ptr<_1d65110c7_RangeKind>* _32747_rng, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _32769_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1d64d5cd3_Token>>> _32813_keyTokens = _1d7132b4e_getRangeKindKeysTokens(_self_, _32769_tokens);;
	if ((_32813_keyTokens.len() == 0LL)) {
		return;;
	};
	if ((_32813_keyTokens.len() > 2LL)) {
		_1d7130c4b_pushErr(_self_, (*((*(_32747_rng))))._field_InToken, jule::Str::lit("range variables can be maximum two", 34));
	};
	jule::Slice<jule::Ptr<_1d650e24b_VarDecl>> _33513_keys = _1d71332d1_buildRangeKindKeys(_self_, &(_32813_keyTokens));;
	(*((*(_32747_rng))))._field_KeyA=_33513_keys[0LL];
	if ((_33513_keys.len() > 1LL)) {
		(*((*(_32747_rng))))._field_KeyB=_33513_keys[1LL];
	};
}



inline void _1d71339a7_setupRangeKindKeysExplicit(_1d712e9b4_scopeParser* _self_, jule::Ptr<_1d65110c7_RangeKind>* _34250_rng, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _34272_tokens) {
	jule::I64 _34313_i = 0LL;;
	jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _34413_rang = _1d714b42b_range(&(_34313_i), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _34272_tokens);;
	if ((_34313_i < (*(_34272_tokens)).len())) {
		_1d7130c4b_pushErr(_self_, (*((*(_34250_rng))))._field_InToken, jule::Str::lit("invalid syntax", 14));
	};
	_1d7133644_setupRangeKindKeysPlain(_self_, _34250_rng, &(_34413_rang));
}



inline void _1d7133d1a_setupRangeKindKeys(_1d712e9b4_scopeParser* _self_, jule::Ptr<_1d65110c7_RangeKind>* _35142_rng, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _35164_tokens) {
	if (((*((*(_35164_tokens))[0LL]))._field_Id == static_cast<jule::U64>(74LLU))) {
		_1d71339a7_setupRangeKindKeysExplicit(_self_, _35142_rng, _35164_tokens);
		return;;
	};
	_1d7133644_setupRangeKindKeysPlain(_self_, _35142_rng, _35164_tokens);
}



inline jule::Ptr<_1d65110c7_RangeKind> _1d71342c1_buildRangeIterKind(_1d712e9b4_scopeParser* _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _35942_var_tokens, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _36014_exprTokens, jule::Ptr<_1d64d5cd3_Token>* _36041_inToken) {
	jule::Ptr<_1d65110c7_RangeKind> _36113_rng = jule::new_ptr<_1d65110c7_RangeKind>(_1d65110c7_RangeKind{._field_InToken=(*(_36041_inToken)), });;
	if (((*(_36014_exprTokens)).len() == 0LL)) {
		_1d7130c4b_pushErr(_self_, (*(_36113_rng))._field_InToken, jule::Str::lit("expression missing", 18));
		return _36113_rng;;
	};
	(*(_36113_rng))._field_Expr=_1d714ddce_buildExpr((*(_self_))._field_p, _36014_exprTokens);
	if (((*(_35942_var_tokens)).len() > 0LL)) {
		_1d7133d1a_setupRangeKindKeys(_self_, &(_36113_rng), _35942_var_tokens);
	};
	return _36113_rng;;
}



inline jule::Any _1d71346bc_buildCommonIterKind(_1d712e9b4_scopeParser* _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _37543_tokens, jule::Ptr<_1d64d5cd3_Token>* _37562_err_tok) {
	jule::I64 _37613_braceN = 0LL;;
	{
		auto expr = _37543_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1da689d95:;
		if (it != expr_end) {
			jule::I64 _37714_i = it - expr->begin();
			jule::Ptr<_1d64d5cd3_Token> _37721_tok = *it;
			{
				{
					auto &_match_expr{ (*(_37721_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1da68ab43:;
						{
							(_37613_braceN)++;
							goto _iter_next_1da689d95;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1da68abba:;
						{
							(_37613_braceN)--;
						}
					}
					_match_end_1da68aa77:;
				};
				if ((_37613_braceN != 0LL)) {
					goto _iter_next_1da689d95;
				};
				{
					auto &_match_expr{ (*(_37721_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(12LLU)) {
						_case_begin_1da68a758:;
						{
							jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _39421_declTokens = (*(_37543_tokens)).slice(0LL, _37714_i);;
							jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _39521_exprTokens = (*(_37543_tokens)).slice((_37714_i + 1LL));;
							return jule::Any(_1d71342c1_buildRangeIterKind(_self_, &(_39421_declTokens), &(_39521_exprTokens), &(_37721_tok)), &__jule_any_type39);;
						}
					}
					_match_end_1da68c12d:;
				};
			}
			_iter_next_1da689d95:;
			++it;
			_37714_i++;
			goto _iter_begin_1da689d95;
		}
		_iter_end_1da689d95:;
	};
	return jule::Any(_1d713280d_buildWhileIterKind(_self_, _37543_tokens), &__jule_any_type37);;
}



inline jule::Ptr<_1d650ed95_Iter> _1d7134a0d_buildCommonIter(_1d712e9b4_scopeParser* _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _40238_tokens) {
	jule::Ptr<_1d650ed95_Iter> _40313_it = jule::new_ptr<_1d650ed95_Iter>(_1d650ed95_Iter{._field_Token=_40238_tokens[0LL], });;
	(_40238_tokens).mut_slice(1LL);;
	if ((_40238_tokens.len() == 0LL)) {
		_1d7130135_stop(_self_);
		_1d7130c4b_pushErr(_self_, (*(_40313_it))._field_Token, jule::Str::lit("body is not exist", 17));
		_1d71310ae_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _41313_exprTokens = _1d7148208_getBlockExpr(&(_40238_tokens));;
	if ((_41313_exprTokens.len() > 0LL)) {
		(*(_40313_it))._field_Kind=_1d71346bc_buildCommonIterKind(_self_, &(_41313_exprTokens), &((*(_40313_it))._field_Token));
	};
	jule::I64 _41713_i = _41313_exprTokens.len();;
	jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _41813_scopeTokens = _1d714b42b_range(&(_41713_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_40238_tokens));;
	if ((_41813_scopeTokens == nullptr)) {
		_1d7130135_stop(_self_);
		_1d7130c4b_pushErr(_self_, (*(_40313_it))._field_Token, jule::Str::lit("body is not exist", 17));
		_1d71310ae_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_41713_i < _40238_tokens.len())) {
		_1d7130c4b_pushErr(_self_, _40238_tokens[_41713_i], jule::Str::lit("invalid syntax", 14));
	};
	(*(_40313_it))._field_Scope=_1d71319e9_buildScope(_self_, &(_41813_scopeTokens), _40238_tokens[(_41713_i - 1LL)]);
	return _40313_it;;
}



inline jule::Ptr<_1d650ed95_Iter> _1d7134d4e_buildIterSt(_1d712e9b4_scopeParser* _self_, jule::Ptr<_1d712e123_stmt>* _43235_st) {
	if ((*((*(_43235_st))))._field_terminated) {
		return _1d71324bc_buildWhileNextIter(_self_, _43235_st);;
	};
	return _1d7134a0d_buildCommonIter(_self_, (*((*(_43235_st))))._field_tokens);;
}



inline jule::Ptr<_1d65114a1_BreakSt> _1d7135190_buildBreakSt(_1d712e9b4_scopeParser* _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _43936_tokens) {
	jule::Ptr<_1d65114a1_BreakSt> _44013_brk = jule::new_ptr<_1d65114a1_BreakSt>(_1d65114a1_BreakSt{._field_Token=(*(_43936_tokens))[0LL], });;
	if (((*(_43936_tokens)).len() > 1LL)) {
		if (((*((*(_43936_tokens))[1LL]))._field_Id != static_cast<jule::U64>(1LLU))) {
			_1d7130c4b_pushErr(_self_, (*(_43936_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
			_1d71310ae_pushSuggestion(_self_, jule::Str::lit("write a label identifier because label expected", 47), jule::Slice<jule::Any>());
		} else {
			(*(_44013_brk))._field_Label=(*(_43936_tokens))[1LL];
			if (((*(_43936_tokens)).len() > 2LL)) {
				_1d7130c4b_pushErr(_self_, (*(_43936_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
			};
		};
	};
	return _44013_brk;;
}



inline jule::Ptr<_1d651187a_ContSt> _1d71354d1_buildContSt(_1d712e9b4_scopeParser* _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _45735_tokens) {
	jule::Ptr<_1d651187a_ContSt> _45813_cont = jule::new_ptr<_1d651187a_ContSt>(_1d651187a_ContSt{._field_Token=(*(_45735_tokens))[0LL], });;
	if (((*(_45735_tokens)).len() > 1LL)) {
		if (((*((*(_45735_tokens))[1LL]))._field_Id != static_cast<jule::U64>(1LLU))) {
			_1d7130c4b_pushErr(_self_, (*(_45735_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
			_1d71310ae_pushSuggestion(_self_, jule::Str::lit("write a label identifier because label expected", 47), jule::Slice<jule::Any>());
		} else {
			(*(_45813_cont))._field_Label=(*(_45735_tokens))[1LL];
			if (((*(_45735_tokens)).len() > 2LL)) {
				_1d7130c4b_pushErr(_self_, (*(_45735_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
			};
		};
	};
	return _45813_cont;;
}



inline jule::Ptr<_1d6511d31_If> _1d7135822_buildIf(_1d712e9b4_scopeParser* _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _47531_tokens) {
	jule::Ptr<_1d6511d31_If> _47613_model = jule::new_ptr<_1d6511d31_If>(_1d6511d31_If{._field_Token=(*(_47531_tokens))[0LL], });;
	((*(_47531_tokens))).mut_slice(1LL);;
	jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _48013_exprTokens = _1d7148208_getBlockExpr(_47531_tokens);;
	jule::I64 _48113_i = 0LL;;
	if ((_48013_exprTokens.len() == 0LL)) {
		_1d7130c4b_pushErr(_self_, (*(_47613_model))._field_Token, jule::Str::lit("expression missing", 18));
	} else {
		_48113_i=static_cast<jule::I64>(_48013_exprTokens.len());
	};
	jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _48713_scopeTokens = _1d714b42b_range(&(_48113_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _47531_tokens);;
	if ((_48713_scopeTokens == nullptr)) {
		_1d7130135_stop(_self_);
		_1d7130c4b_pushErr(_self_, (*(_47613_model))._field_Token, jule::Str::lit("body is not exist", 17));
		_1d71310ae_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1d64d5cd3_Token> _49413_end = (*(_47531_tokens))[(_48113_i - 1LL)];;
	if ((_48113_i < (*(_47531_tokens)).len())) {
		if (((*((*(_47531_tokens))[_48113_i]))._field_Id == static_cast<jule::U64>(14LLU))) {
			((*(_47531_tokens))).mut_slice(_48113_i);;
		} else {
			_1d7130c4b_pushErr(_self_, (*(_47531_tokens))[_48113_i], jule::Str::lit("invalid syntax", 14));
			(*(_47531_tokens))=nullptr;
		};
	};
	(*(_47613_model))._field_Expr=_1d714ddce_buildExpr((*(_self_))._field_p, &(_48013_exprTokens));
	(*(_47613_model))._field_Scope=_1d71319e9_buildScope(_self_, &(_48713_scopeTokens), _49413_end);
	return _47613_model;;
}



inline jule::Ptr<_1d651220a_Else> _1d7135b63_buildElse(_1d712e9b4_scopeParser* _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _50833_tokens) {
	jule::Ptr<_1d651220a_Else> _50913_els = jule::new_ptr<_1d651220a_Else>(_1d651220a_Else{._field_Token=(*(_50833_tokens))[0LL], });;
	((*(_50833_tokens))).mut_slice(1LL);;
	jule::I64 _51313_i = 0LL;;
	jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _51413_scopeTokens = _1d714b42b_range(&(_51313_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _50833_tokens);;
	if ((_51413_scopeTokens == nullptr)) {
		if ((_51313_i < (*(_50833_tokens)).len())) {
			_1d7130c4b_pushErr(_self_, (*(_50913_els))._field_Token, jule::Str::lit("else's cannot have any expression", 33));
		} else {
			_1d7130135_stop(_self_);
			_1d7130c4b_pushErr(_self_, (*(_50913_els))._field_Token, jule::Str::lit("body is not exist", 17));
			_1d71310ae_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	if ((_51313_i < (*(_50833_tokens)).len())) {
		_1d7130c4b_pushErr(_self_, (*(_50833_tokens))[_51313_i], jule::Str::lit("invalid syntax", 14));
	};
	(*(_50913_els))._field_Scope=_1d71319e9_buildScope(_self_, &(_51413_scopeTokens), (*(_50833_tokens))[(_51313_i - 1LL)]);
	return _50913_els;;
}



inline jule::Ptr<_1d65126b1_Conditional> _1d7135ea4_buildIfElseChain(_1d712e9b4_scopeParser* _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _53239_tokens) {
	jule::Ptr<_1d65126b1_Conditional> _53313_chain = jule::new_ptr<_1d65126b1_Conditional>(_1d65126b1_Conditional{._field_Head=_1d7135822_buildIf(_self_, &(_53239_tokens)), });;
	if (((*(_53313_chain))._field_Head == nullptr)) {
		return nullptr;;
	};
	while ((_53239_tokens.len() != 0LL)) {
		{
			if (((*(_53239_tokens[0LL]))._field_Id != static_cast<jule::U64>(14LLU))) {
				goto _iter_end_1da6a69d8;
			};
			if (((_53239_tokens.len() > 1LL) && ((*(_53239_tokens[1LL]))._field_Id == static_cast<jule::U64>(13LLU)))) {
				(_53239_tokens).mut_slice(1LL);;
				jule::Ptr<_1d6511d31_If> _54521_elif = _1d7135822_buildIf(_self_, &(_53239_tokens));;
				{ jule::Slice<jule::Ptr<_1d6511d31_If>> &__jule_push_dest = (*(_53313_chain))._field_Tail; __jule_push_dest.push(_54521_elif); };
				goto _iter_next_1da6a69d8;
			};
			(*(_53313_chain))._field_Default=_1d7135b63_buildElse(_self_, &(_53239_tokens));
			goto _iter_end_1da6a69d8;
		}
	_iter_next_1da6a69d8:;
	}
	_iter_end_1da6a69d8:;;
	return _53313_chain;;
}



inline jule::Ptr<_1d6500715_Expr> _1d71362e5_buildCoCallSt(_1d712e9b4_scopeParser* _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _55536_tokens) {
	jule::Ptr<_1d64d5cd3_Token> _5569_token = _55536_tokens[0LL];;
	(_55536_tokens).mut_slice(1LL);;
	jule::Ptr<_1d6500715_Expr> _55813_e = _1d714ddce_buildExpr((*(_self_))._field_p, &(_55536_tokens));;
	if ((_55813_e == nullptr)) {
		return _55813_e;;
	};
	{
		auto &_match_expr{ (*(_55813_e))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type107) {
			_case_begin_1da6ab9bb:;
			{
				(*((*(_55813_e))._field_Kind.cast_ptr<_1d650443e_FnCallExpr>(&__jule_any_type107)))._field_IsCo=true;
			}
		}
		else {
			_case_begin_1da6ab4b0:;
			{
				_1d7130c4b_pushErr(_self_, _5569_token, jule::Str::lit("statement must have function call expression", 44));
			}
		}
		_match_end_1da6ab45a:;
	};
	return _55813_e;;
}



inline jule::Ptr<_1d6508d8e_GotoSt> _1d7136636_buildGotoSt(_1d712e9b4_scopeParser* _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _57135_tokens) {
	jule::Ptr<_1d6508d8e_GotoSt> _57213_gt = jule::new_ptr<_1d6508d8e_GotoSt>(_1d6508d8e_GotoSt{._field_Token=(*(_57135_tokens))[0LL], });;
	if (((*(_57135_tokens)).len() == 1LL)) {
		_1d7130c4b_pushErr(_self_, (*(_57213_gt))._field_Token, jule::Str::lit("missing label identifier for goto statement", 43));
		return nullptr;;
	} else if (((*(_57135_tokens)).len() > 2LL)) {
		_1d7130c4b_pushErr(_self_, (*(_57135_tokens))[2LL], jule::Str::lit("invalid syntax", 14));
	};
	jule::Ptr<_1d64d5cd3_Token> _58113_identToken = (*(_57135_tokens))[1LL];;
	if (((*(_58113_identToken))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1d7130c4b_pushErr(_self_, _58113_identToken, jule::Str::lit("invalid syntax", 14));
		_1d71310ae_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return _57213_gt;;
	};
	(*(_57213_gt))._field_Label=_58113_identToken;
	return _57213_gt;;
}



inline jule::Ptr<_1d650918b_FallSt> _1d7136977_buildFallSt(_1d712e9b4_scopeParser* _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _59135_tokens) {
	jule::Ptr<_1d650918b_FallSt> _59213_fll = jule::new_ptr<_1d650918b_FallSt>(_1d650918b_FallSt{._field_Token=(*(_59135_tokens))[0LL]});;
	if (((*(_59135_tokens)).len() > 1LL)) {
		_1d7130c4b_pushErr(_self_, (*(_59135_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
	};
	return _59213_fll;;
}



inline jule::Ptr<_1d6512ded_TypeAliasDecl> _1d7136cb8_buildTypeAliasSt(_1d712e9b4_scopeParser* _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _60140_tokens) {
	jule::Ptr<_1d6512ded_TypeAliasDecl> _60213_tad = _1d7150672_buildTypeAliasDecl((*(_self_))._field_p, _60140_tokens);;
	(*(_60213_tad))._field_Scope=(*(_self_))._field_s;
	return _60213_tad;;
}



inline void _1d7137291_pushCaseExpr(_1d712e9b4_scopeParser* _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _60735_tokens, jule::Ptr<_1d64d5cd3_Token> _60757_token, jule::Bool _6089_typeMatch, jule::Slice<jule::Ptr<_1d6500715_Expr>>* _60831_exprs) {
	if ((_60735_tokens.len() == 0LL)) {
		return;;
	};
	if (_6089_typeMatch) {
		jule::I64 _61317_i = 0LL;;
		jule::Ptr<_1d64eb3d1_TypeDecl> _61417_t;;
		jule::Bool _61420_ok = false;;
		({
			__jule_tuple_x_1d64eb3d1_TypeDecl__jule_tuple_bool __jule_assign_result = _1d7150331_buildType((*(_self_))._field_p, &(_60735_tokens), (&(_61317_i)), true);
			_61417_t = __jule_assign_result.__jule_result_arg0;
			_61420_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_61420_ok) {
			{ jule::Slice<jule::Ptr<_1d6500715_Expr>> &__jule_push_dest = (*(_60831_exprs)); __jule_push_dest.push(jule::new_ptr<_1d6500715_Expr>(_1d6500715_Expr{._field_Token=_60735_tokens[0LL], ._field_End=_60735_tokens[(_60735_tokens.len() - 1LL)], ._field_Kind=jule::Any(_61417_t, &__jule_any_type88)})); };
			if ((_61317_i < _60735_tokens.len())) {
				_1d7130c4b_pushErr(_self_, _60735_tokens[_61317_i], jule::Str::lit("invalid syntax", 14));
			};
		};
		return;;
	};
	{ jule::Slice<jule::Ptr<_1d6500715_Expr>> &__jule_push_dest = (*(_60831_exprs)); __jule_push_dest.push(_1d714ddce_buildExpr((*(_self_))._field_p, &(_60735_tokens))); };
}



inline __jule_tuple_sx_1d6500715_Expr__jule_tuple_bool _1d7137747_buildCaseExprs(_1d712e9b4_scopeParser* _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _63038_tokens, jule::Ptr<_1d64d5cd3_Token>* _63061_colon, jule::Bool _63076_typeMatch) {
	__jule_tuple_sx_1d6500715_Expr__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Slice<jule::Ptr<_1d6500715_Expr>> _63113_exprs = jule::Slice<jule::Ptr<_1d6500715_Expr>>::alloc(0LL, 1LL);;
	jule::I64 _63213_braceN = 0LL;;
	jule::I64 _63313_j = 0LL;;
	{
		auto expr = _63038_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1da6b7444:;
		if (it != expr_end) {
			jule::I64 _63414_i = it - expr->begin();
			jule::Ptr<_1d64d5cd3_Token> _63421_tok = *it;
			{
				{
					auto &_match_expr{ (*(_63421_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1da6b9017:;
						{
							(_63213_braceN)++;
							goto _iter_next_1da6b7444;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(75LLU) || _match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_1da6b908e:;
						{
							(_63213_braceN)--;
							goto _iter_next_1da6b7444;
						}
					}
					_match_end_1da6b8e4b:;
				};
				if ((_63213_braceN != 0LL)) {
					goto _iter_next_1da6b7444;
				};
				{
					
					if (((*(_63421_tok))._field_Id == static_cast<jule::U64>(66LLU))) {
						_case_begin_1da6ba447:;
						{
							jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _65317_exprTokens = (*(_63038_tokens)).slice(_63313_j, _63414_i);;
							if ((_65317_exprTokens.len() == 0LL)) {
								_1d7130c4b_pushErr(_self_, _63421_tok, jule::Str::lit("expression missing", 18));
							} else {
								_1d7137291_pushCaseExpr(_self_, (*(_63038_tokens)).slice(_63313_j, _63414_i), _63421_tok, _63076_typeMatch, &(_63113_exprs));
							};
							_63313_j=static_cast<jule::I64>((_63414_i + 1LL));
						}
					}
					else if (((*(_63421_tok))._field_Id == static_cast<jule::U64>(8LLU))) {
						_case_begin_1da6ba4be:;
						{
							(*(_63061_colon))=_63421_tok;
							_1d7137291_pushCaseExpr(_self_, (*(_63038_tokens)).slice(_63313_j, _63414_i), _63421_tok, _63076_typeMatch, &(_63113_exprs));
							((*(_63038_tokens))).mut_slice((_63414_i + 1LL));;
							__jule_func_result.__jule_result_arg0 = _63113_exprs;
							__jule_func_result.__jule_result_arg1 = (((_63414_i - _63313_j) == 0LL) || (_63113_exprs.len() != 0LL));
							return __jule_func_result;;
						}
					}
					_match_end_1da6b9e2a:;
				};
			}
			_iter_next_1da6b7444:;
			++it;
			_63414_i++;
			goto _iter_begin_1da6b7444;
		}
		_iter_end_1da6b7444:;
	};
	_1d7130c4b_pushErr(_self_, (*(_63038_tokens))[0LL], jule::Str::lit("invalid syntax", 14));
	(*(_63038_tokens))=nullptr;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline jule::Ptr<_1d650b402_ScopeTree> _1d7137a88_buildCaseScope(_1d712e9b4_scopeParser* _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _67238_tokens) {
	jule::I64 _67313_n = 0LL;;
	for (;;) {
		{
			jule::I64 _67517_i = 0LL;;
			jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _67617_next;;
			({
				__jule_tuple_sx_1d64d5cd3_Token__jule_tuple_bool __jule_assign_result = _1d712dce3_skipSt(&(_67517_i), (*(_67238_tokens)).slice(_67313_n));
				_67617_next = __jule_assign_result.__jule_result_arg0;
			});
			if ((_67617_next.len() == 0LL)) {
				goto _iter_end_1da6be292;
			};
			jule::Ptr<_1d64d5cd3_Token> _68013_tok = _67617_next[0LL];;
			if (((*(_68013_tok))._field_Id != static_cast<jule::U64>(66LLU))) {
				_67313_n+=_67517_i;
				goto _iter_next_1da6be292;
			};
			jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _68517_scopeTokens = (*(_67238_tokens)).slice(0LL, _67313_n);;
			jule::Ptr<_1d650b402_ScopeTree> _68617_scope = _1d71319e9_buildScope(_self_, &(_68517_scopeTokens), (*(_67238_tokens))[_67313_n]);;
			((*(_67238_tokens))).mut_slice(_67313_n);;
			return _68617_scope;;
		}
	_iter_next_1da6be292:;
	}
	_iter_end_1da6be292:;;
	jule::Ptr<_1d64d5cd3_Token> _69017_end;;
	if (((*(_67238_tokens)).len() > 0LL)) {
		_69017_end=(*(_67238_tokens))[((*(_67238_tokens)).len() - 1LL)];
	};
	jule::Ptr<_1d650b402_ScopeTree> _69413_scope = _1d71319e9_buildScope(_self_, _67238_tokens, _69017_end);;
	(*(_67238_tokens))=nullptr;
	return _69413_scope;;
}



inline __jule_tuple_x_1d65133a4_Case__jule_tuple_bool _1d7137e84_buildCase(_1d712e9b4_scopeParser* _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _69933_tokens, jule::Bool _69951_typeMatch) {
	__jule_tuple_x_1d65133a4_Case__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1d65133a4_Case> _70013_c = jule::new_ptr<_1d65133a4_Case>(_1d65133a4_Case{._field_Token=(*(_69933_tokens))[0LL], });;
	((*(_69933_tokens))).mut_slice(1LL);;
	jule::Ptr<_1d64d5cd3_Token> _70417_colon = nullptr;;
	jule::Bool _70518_ok = false;;
	({
		__jule_tuple_sx_1d6500715_Expr__jule_tuple_bool __jule_assign_result = _1d7137747_buildCaseExprs(_self_, _69933_tokens, &(_70417_colon), _69951_typeMatch);
		(*(_70013_c))._field_Exprs = __jule_assign_result.__jule_result_arg0;
		_70518_ok = __jule_assign_result.__jule_result_arg1;
	});
	(*(_70013_c))._field_Scope=_1d7137a88_buildCaseScope(_self_, _69933_tokens);
	if (((*((*(_70013_c))._field_Scope))._field_End == nullptr)) {
		(*((*(_70013_c))._field_Scope))._field_End=_70417_colon;
	};
	jule::Bool _7109_isDefault = (_70518_ok && ((*(_70013_c))._field_Exprs.len() == 0LL));;
	__jule_func_result.__jule_result_arg0 = _70013_c;
	__jule_func_result.__jule_result_arg1 = _7109_isDefault;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1d65133a4_Case__jule_tuple_x_1d651220a_Else _1d7138380_buildCases(_1d712e9b4_scopeParser* _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _71433_tokens, jule::Bool _71451_typeMatch) {
	__jule_tuple_sx_1d65133a4_Case__jule_tuple_x_1d651220a_Else __jule_func_result;
	jule::Slice<jule::Ptr<_1d65133a4_Case>> _71517_cases = nullptr;;
	jule::Ptr<_1d651220a_Else> _71617_def = nullptr;;
	jule::Bool _71713_defNotLast = false;;
	while ((_71433_tokens.len() > 0LL)) {
		{
			jule::Ptr<_1d64d5cd3_Token> _71917_tok = _71433_tokens[0LL];;
			if (((*(_71917_tok))._field_Id != static_cast<jule::U64>(66LLU))) {
				_1d7130c4b_pushErr(_self_, _71917_tok, jule::Str::lit("invalid syntax", 14));
				goto _iter_end_1da6cc327;
			};
			jule::Ptr<_1d65133a4_Case> _72417_c;;
			jule::Bool _72420_isDefault = false;;
			({
				__jule_tuple_x_1d65133a4_Case__jule_tuple_bool __jule_assign_result = _1d7137e84_buildCase(_self_, &(_71433_tokens), _71451_typeMatch);
				_72417_c = __jule_assign_result.__jule_result_arg0;
				_72420_isDefault = __jule_assign_result.__jule_result_arg1;
			});
			if (_72420_isDefault) {
				(*(_72417_c))._field_Token=_71917_tok;
				if ((_71617_def == nullptr)) {
					_71617_def=jule::new_ptr<_1d651220a_Else>(_1d651220a_Else{._field_Token=(*(_72417_c))._field_Token, ._field_Scope=(*(_72417_c))._field_Scope});
				} else {
					_1d7130c4b_pushErr(_self_, _71917_tok, jule::Str::lit("invalid syntax", 14));
				};
			} else {
				_71713_defNotLast=(_71713_defNotLast || (_71617_def != nullptr));
				{ jule::Slice<jule::Ptr<_1d65133a4_Case>> &__jule_push_dest = _71517_cases; __jule_push_dest.push(_72417_c); };
			};
		}
	_iter_next_1da6cc327:;
	}
	_iter_end_1da6cc327:;;
	if (_71713_defNotLast) {
		_1d7130c4b_pushErr(_self_, (*(_71617_def))._field_Token, jule::Str::lit("default case should be last case", 32));
	};
	__jule_func_result.__jule_result_arg0 = _71517_cases;
	__jule_func_result.__jule_result_arg1 = _71617_def;
	return __jule_func_result;;
}



inline jule::Ptr<_1d6513bbd_MatchCase> _1d71386c1_buildMatchCase(_1d712e9b4_scopeParser* _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _74837_tokens) {
	jule::Ptr<_1d6513bbd_MatchCase> _74913_m = jule::new_ptr<_1d6513bbd_MatchCase>(_1d6513bbd_MatchCase{._field_Token=_74837_tokens[0LL], });;
	(_74837_tokens).mut_slice(1LL);;
	if (((_74837_tokens.len() > 0LL) && ((*(_74837_tokens[0LL]))._field_Id == static_cast<jule::U64>(7LLU)))) {
		(*(_74913_m))._field_TypeMatch=true;
		(_74837_tokens).mut_slice(1LL);;
	};
	jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _75913_exprTokens = _1d7148208_getBlockExpr(&(_74837_tokens));;
	if ((_75913_exprTokens.len() > 0LL)) {
		(*(_74913_m))._field_Expr=_1d714ddce_buildExpr((*(_self_))._field_p, &(_75913_exprTokens));
	} else if ((*(_74913_m))._field_TypeMatch) {
		_1d7130c4b_pushErr(_self_, (*(_74913_m))._field_Token, jule::Str::lit("expression missing", 18));
	};
	jule::I64 _76613_i = _75913_exprTokens.len();;
	jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _76713_blockToks = _1d714b42b_range(&(_76613_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_74837_tokens));;
	if ((_76713_blockToks == nullptr)) {
		_1d7130135_stop(_self_);
		_1d7130c4b_pushErr(_self_, (*(_74913_m))._field_Token, jule::Str::lit("body is not exist", 17));
		_1d71310ae_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_76613_i < _74837_tokens.len())) {
		_1d7130c4b_pushErr(_self_, _74837_tokens[_76613_i], jule::Str::lit("invalid syntax", 14));
	};
	(*(_74913_m))._field_End=_74837_tokens[(_76613_i - 1LL)];
	({
		__jule_tuple_sx_1d65133a4_Case__jule_tuple_x_1d651220a_Else __jule_assign_result = _1d7138380_buildCases(_self_, _76713_blockToks, (*(_74913_m))._field_TypeMatch);
		(*(_74913_m))._field_Cases = __jule_assign_result.__jule_result_arg0;
		(*(_74913_m))._field_Default = __jule_assign_result.__jule_result_arg1;
	});
	return _74913_m;;
}



inline jule::Ptr<_1d650b402_ScopeTree> _1d7138a12_buildScopeSt(_1d712e9b4_scopeParser* _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _78135_tokens) {
	jule::Bool _78213_isUnsafe = false;;
	jule::Bool _78313_isDeferred = false;;
	jule::Ptr<_1d64d5cd3_Token> _78413_token = _78135_tokens[0LL];;
	if (((*(_78413_token))._field_Id == static_cast<jule::U64>(31LLU))) {
		_78213_isUnsafe=true;
		(_78135_tokens).mut_slice(1LL);;
		if ((_78135_tokens.len() == 0LL)) {
			_1d7130c4b_pushErr(_self_, _78413_token, jule::Str::lit("invalid syntax", 14));
			return nullptr;;
		};
		_78413_token=_78135_tokens[0LL];
		if (((*(_78413_token))._field_Id == static_cast<jule::U64>(33LLU))) {
			_78313_isDeferred=true;
			(_78135_tokens).mut_slice(1LL);;
			if ((_78135_tokens.len() == 0LL)) {
				_1d7130c4b_pushErr(_self_, _78413_token, jule::Str::lit("invalid syntax", 14));
				return nullptr;;
			};
		};
	} else if (((*(_78413_token))._field_Id == static_cast<jule::U64>(33LLU))) {
		_78313_isDeferred=true;
		(_78135_tokens).mut_slice(1LL);;
		if ((_78135_tokens.len() == 0LL)) {
			_1d7130c4b_pushErr(_self_, _78413_token, jule::Str::lit("invalid syntax", 14));
			return nullptr;;
		};
	};
	jule::I64 _81013_i = 0LL;;
	jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _81113_scopeTokens = _1d714b42b_range(&(_81013_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_78135_tokens));;
	if ((_81113_scopeTokens == nullptr)) {
		_1d7130c4b_pushErr(_self_, _78413_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	} else if ((_81013_i < _78135_tokens.len())) {
		_1d7130c4b_pushErr(_self_, _78135_tokens[_81013_i], jule::Str::lit("invalid syntax", 14));
	};
	jule::Ptr<_1d650b402_ScopeTree> _81813_scope = _1d71319e9_buildScope(_self_, &(_81113_scopeTokens), _78135_tokens[(_81013_i - 1LL)]);;
	(*(_81813_scope))._field_Unsafety=_78213_isUnsafe;
	(*(_81813_scope))._field_Deferred=_78313_isDeferred;
	return _81813_scope;;
}



inline jule::Ptr<_1d65089b5_LabelSt> _1d7138d53_buildLabelSt(_1d712e9b4_scopeParser* _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _82436_tokens) {
	jule::Ptr<_1d65089b5_LabelSt> _82513_lbl = jule::new_ptr<_1d65089b5_LabelSt>(_1d65089b5_LabelSt{._field_Token=(*(_82436_tokens))[0LL], ._field_Ident=(*((*(_82436_tokens))[0LL]))._field_Kind});;
	if (((*(_82436_tokens)).len() > 2LL)) {
		((*(_82436_tokens))).mut_slice(2LL);;
		_1d7131367_insertAsNext(_self_, _82436_tokens);
	};
	return _82513_lbl;;
}



inline __jule_tuple__1d650aa3e_StmtData__jule_tuple_bool _1d7139194_buildIdSt(_1d712e9b4_scopeParser* _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _83933_tokens) {
	__jule_tuple__1d650aa3e_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if (((*(_83933_tokens)).len() == 1LL)) {
		return __jule_func_result;;
	};
	jule::Ptr<_1d64d5cd3_Token> _84413_token = (*(_83933_tokens))[1LL];;
	{
		auto &_match_expr{ (*(_84413_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(8LLU)) {
			_case_begin_1da6e2b67:;
			{
				__jule_func_result.__jule_result_arg0 = jule::Any(_1d7138d53_buildLabelSt(_self_, _83933_tokens), &__jule_any_type56);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1da6e3470:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1d714987a_assignInfo> _1d71394d5_buildAssignInfo(_1d712e9b4_scopeParser* _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _85339_tokens) {
	jule::Ptr<_1d714987a_assignInfo> _85413_info = jule::new_ptr<_1d714987a_assignInfo>(_1d714987a_assignInfo{._field_ok=true});;
	jule::I64 _85713_braceN = 0LL;;
	{
		auto expr = _85339_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1da6e4ac0:;
		if (it != expr_end) {
			jule::I64 _85814_i = it - expr->begin();
			jule::Ptr<_1d64d5cd3_Token> _85821_token = *it;
			{
				{
					auto &_match_expr{ (*(_85821_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1da6e595b:;
						{
							(_85713_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1da6e59d3:;
						{
							(_85713_braceN)--;
						}
					}
					_match_end_1da6e5890:;
				};
				{
					
					if ((_85713_braceN > 0LL)) {
						_case_begin_1da6e684c:;
						{
							goto _iter_next_1da6e4ac0;
						}
					}
					else if (((!(_1d64dac3e_IsAssignOp((*(_85821_token))._field_Id))) && ((*(_85821_token))._field_Id != static_cast<jule::U64>(38LLU)))) {
						_case_begin_1da6e68c4:;
						{
							goto _iter_next_1da6e4ac0;
						}
					}
					_match_end_1da6e67c5:;
				};
				(*(_85413_info))._field_l=(*(_85339_tokens)).slice(0LL, _85814_i);
				if (((*(_85413_info))._field_l.len() == 0LL)) {
					(*(_85413_info))._field_ok=false;
				};
				(*(_85413_info))._field_setter=_85821_token;
				if (((_85814_i + 1LL) >= (*(_85339_tokens)).len())) {
					(*(_85413_info))._field_r=nullptr;
					(*(_85413_info))._field_ok=_1d64da975_IsPostfixOp((*((*(_85413_info))._field_setter))._field_Id);
					goto _iter_end_1da6e4ac0;
				};
				(*(_85413_info))._field_r=(*(_85339_tokens)).slice((_85814_i + 1LL));
				if (_1d64da975_IsPostfixOp((*((*(_85413_info))._field_setter))._field_Id)) {
					if (((*(_85413_info))._field_r.len() > 0LL)) {
						_1d7130c4b_pushErr(_self_, (*(_85413_info))._field_r[0LL], jule::Str::lit("invalid syntax", 14));
						(*(_85413_info))._field_r=nullptr;
					};
				};
				goto _iter_end_1da6e4ac0;
			}
			_iter_next_1da6e4ac0:;
			++it;
			_85814_i++;
			goto _iter_begin_1da6e4ac0;
		}
		_iter_end_1da6e4ac0:;
	};
	return _85413_info;;
}



inline jule::Ptr<_1d65097eb_AssignLeft> _1d7139826_buildAssignL(_1d712e9b4_scopeParser* _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _89836_tokens) {
	jule::Ptr<_1d65097eb_AssignLeft> _89913_l = jule::new_ptr<_1d65097eb_AssignLeft>(_1d65097eb_AssignLeft{._field_Token=(*(_89836_tokens))[0LL], });;
	if (((*((*(_89836_tokens))[0LL]))._field_Id == static_cast<jule::U64>(1LLU))) {
		(*(_89913_l))._field_Ident=(*((*(_89913_l))._field_Token))._field_Kind;
	};
	(*(_89913_l))._field_Expr=_1d714ddce_buildExpr((*(_self_))._field_p, _89836_tokens);
	return _89913_l;;
}



inline jule::Slice<jule::Ptr<_1d65097eb_AssignLeft>> _1d7139b67_buildAssignLs(_1d712e9b4_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1d64d5cd3_Token>>>* _90937_parts) {
	jule::Slice<jule::Ptr<_1d65097eb_AssignLeft>> _91017_lefts = nullptr;;
	{
		auto expr = _90937_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1da6ee3e3:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _91121_part = *it;
			{
				jule::Ptr<_1d65097eb_AssignLeft> _91217_l = _1d7139826_buildAssignL(_self_, &(_91121_part));;
				{ jule::Slice<jule::Ptr<_1d65097eb_AssignLeft>> &__jule_push_dest = _91017_lefts; __jule_push_dest.push(_91217_l); };
			}
			_iter_next_1da6ee3e3:;
			++it;
			goto _iter_begin_1da6ee3e3;
		}
		_iter_end_1da6ee3e3:;
	};
	return _91017_lefts;;
}



inline __jule_tuple__1d650aa3e_StmtData__jule_tuple_bool _1d7139ea8_buildPlainAssign(_1d712e9b4_scopeParser* _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _91840_tokens) {
	__jule_tuple__1d650aa3e_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1d714987a_assignInfo> _91913_info = _1d71394d5_buildAssignInfo(_self_, _91840_tokens);;
	if ((!((*(_91913_info))._field_ok))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1d6509d7e_AssignSt> _92413_assign = jule::new_ptr<_1d6509d7e_AssignSt>(_1d6509d7e_AssignSt{._field_Setter=(*(_91913_info))._field_setter, });;
	if (((*((*(_91913_info))._field_setter))._field_Id == static_cast<jule::U64>(38LLU))) {
		(*(_92413_assign))._field_Declarative=true;
		(*(_92413_assign))._field_Right=_1d714ddce_buildExpr((*(_self_))._field_p, &((*(_91913_info))._field_r));
		jule::Bool _93213_ok = _1d713a3a4_buildDeclAssign1(_self_, &((*(_91913_info))._field_l), &(_92413_assign));;
		if ((!(_93213_ok))) {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		if (((*(_92413_assign))._field_Left.len() > 1LL)) {
			__jule_func_result.__jule_result_arg0 = jule::Any(_92413_assign, &__jule_any_type58);
			__jule_func_result.__jule_result_arg1 = true;
			return __jule_func_result;;
		};
		jule::Ptr<_1d65097eb_AssignLeft> _94017_left = (*(_92413_assign))._field_Left[0LL];;
		jule::Ptr<_1d650e24b_VarDecl> _94117_decl = jule::new_ptr<_1d650e24b_VarDecl>(_1d650e24b_VarDecl{._field_Scope=(*(_self_))._field_s, ._field_Token=(*(_94017_left))._field_Token, ._field_Setter=(*(_92413_assign))._field_Setter, ._field_Ident=(*(_94017_left))._field_Ident, ._field_Mutable=(*(_94017_left))._field_Mutable, ._field_Reference=(*(_94017_left))._field_Reference, ._field_Expr=(*(_92413_assign))._field_Right});;
		__jule_func_result.__jule_result_arg0 = jule::Any(_94117_decl, &__jule_any_type16);
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1d64d5cd3_Token>>> _95313_parts;;
	jule::Slice<_1e0235a7e_Log> _95320_errs;;
	({
		__jule_tuple_ssx_1d64d5cd3_Token__jule_tuple_s_1e0235a7e_Log __jule_assign_result = _1d714bb9b_parts(&((*(_91913_info))._field_l), static_cast<jule::U64>(5LLU), true);
		_95313_parts = __jule_assign_result.__jule_result_arg0;
		_95320_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_95320_errs.len() > 0LL)) {
		((*((*(_self_))._field_p))._field_errors).append(_95320_errs);;
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	(*(_92413_assign))._field_Left=_1d7139b67_buildAssignLs(_self_, &(_95313_parts));
	if (((*(_91913_info))._field_r != nullptr)) {
		(*(_92413_assign))._field_Right=_1d714ddce_buildExpr((*(_self_))._field_p, &((*(_91913_info))._field_r));
	};
	__jule_func_result.__jule_result_arg0 = jule::Any(_92413_assign, &__jule_any_type58);
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Bool _1d713a3a4_buildDeclAssign1(_1d712e9b4_scopeParser* _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _96740_lefts, jule::Ptr<_1d6509d7e_AssignSt>* _96762_assign) {
	jule::Slice<jule::Slice<jule::Ptr<_1d64d5cd3_Token>>> _96913_parts;;
	jule::Slice<_1e0235a7e_Log> _96920_errs;;
	({
		__jule_tuple_ssx_1d64d5cd3_Token__jule_tuple_s_1e0235a7e_Log __jule_assign_result = _1d714bb9b_parts(_96740_lefts, static_cast<jule::U64>(5LLU), true);
		_96913_parts = __jule_assign_result.__jule_result_arg0;
		_96920_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_96920_errs.len() > 0LL)) {
		((*((*(_self_))._field_p))._field_errors).append(_96920_errs);;
		return false;;
	};
	{
		auto expr = &(_96913_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1da70aa4d:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _97521_part = *it;
			{
				jule::Bool _97617_isMut = false;;
				jule::Bool _97717_isRef = false;;
				jule::Ptr<_1d64d5cd3_Token> _97913_token = _97521_part[0LL];;
				if (((*(_97913_token))._field_Id == static_cast<jule::U64>(32LLU))) {
					_97617_isMut=true;
					(_97521_part).mut_slice(1LL);;
					if ((_97521_part.len() == 0LL)) {
						_1d7130c4b_pushErr(_self_, _97913_token, jule::Str::lit("invalid syntax", 14));
						goto _iter_next_1da70aa4d;
					};
				};
				if (((*(_97521_part[0LL]))._field_Id == static_cast<jule::U64>(65LLU))) {
					_97717_isRef=true;
					(_97521_part).mut_slice(1LL);;
					if ((_97521_part.len() == 0LL)) {
						_1d7130c4b_pushErr(_self_, _97913_token, jule::Str::lit("invalid syntax", 14));
						goto _iter_next_1da70aa4d;
					};
				};
				if ((((*(_97521_part[0LL]))._field_Id != static_cast<jule::U64>(1LLU)) && ((*(_97521_part[0LL]))._field_Id != static_cast<jule::U64>(74LLU)))) {
					_1d7130c4b_pushErr(_self_, _97913_token, jule::Str::lit("invalid syntax", 14));
					goto _iter_next_1da70aa4d;
				};
				jule::Ptr<_1d65097eb_AssignLeft> _100317_l = _1d7139826_buildAssignL(_self_, &(_97521_part));;
				(*(_100317_l))._field_Mutable=_97617_isMut;
				(*(_100317_l))._field_Reference=_97717_isRef;
				{ jule::Slice<jule::Ptr<_1d65097eb_AssignLeft>> &__jule_push_dest = (*((*(_96762_assign))))._field_Left; __jule_push_dest.push(_100317_l); };
			}
			_iter_next_1da70aa4d:;
			++it;
			goto _iter_begin_1da70aa4d;
		}
		_iter_end_1da70aa4d:;
	};
	return true;;
}



inline __jule_tuple_x_1d6509d7e_AssignSt__jule_tuple_bool _1d713a6e5_buildDeclAssign(_1d712e9b4_scopeParser* _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _101238_tokens) {
	__jule_tuple_x_1d6509d7e_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_101238_tokens.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	(_101238_tokens).mut_slice(1LL);;
	jule::Ptr<_1d64d5cd3_Token> _101813_token = _101238_tokens[0LL];;
	if (((*(_101813_token))._field_Id != static_cast<jule::U64>(74LLU))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1d6509d7e_AssignSt> _102313_assign = jule::new_ptr<_1d6509d7e_AssignSt>(_1d6509d7e_AssignSt{._field_Declarative=true, });;
	jule::I64 _102713_i = 0LL;;
	jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _102813_rang = _1d714b42b_range(&(_102713_i), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), &(_101238_tokens));;
	if ((_102813_rang == nullptr)) {
		_1d7130c4b_pushErr(_self_, _101813_token, jule::Str::lit("invalid syntax", 14));
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	} else if (((_102713_i + 1LL) < _101238_tokens.len())) {
		(*(_102313_assign))._field_Setter=_101238_tokens[_102713_i];
		if (((*((*(_102313_assign))._field_Setter))._field_Id != static_cast<jule::U64>(71LLU))) {
			_1d7130c4b_pushErr(_self_, (*(_102313_assign))._field_Setter, jule::Str::lit("invalid syntax", 14));
		};
		(_102713_i)++;
		jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _103817_exprTokens = _101238_tokens.slice(_102713_i);;
		(*(_102313_assign))._field_Right=_1d714ddce_buildExpr((*(_self_))._field_p, &(_103817_exprTokens));
	};
	jule::Bool _10429_ok = _1d713a3a4_buildDeclAssign1(_self_, &(_102813_rang), &(_102313_assign));;
	__jule_func_result.__jule_result_arg0 = _102313_assign;
	__jule_func_result.__jule_result_arg1 = _10429_ok;
	return __jule_func_result;;
}



inline __jule_tuple__1d650aa3e_StmtData__jule_tuple_bool _1d713aa36_buildAssignSt(_1d712e9b4_scopeParser* _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _104637_tokens) {
	__jule_tuple__1d650aa3e_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if ((!(_1d7149c32_checkAssignTokens(_104637_tokens)))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_104637_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1da71951d:;
			{
				({
					__jule_tuple_x_1d6509d7e_AssignSt__jule_tuple_bool __jule_assign_result = _1d713a6e5_buildDeclAssign(_self_, (*(_104637_tokens)));
					__jule_func_result.__jule_result_arg0 = jule::Any(__jule_assign_result.__jule_result_arg0, &__jule_any_type58);
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1da719122:;
			{
				({
					__jule_tuple__1d650aa3e_StmtData__jule_tuple_bool __jule_assign_result = _1d7139ea8_buildPlainAssign(_self_, _104637_tokens);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1da7190ab:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1d65010d9_UseExpr> _1d713ad77_buildUseExpr(_1d712e9b4_scopeParser* _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _105936_tokens) {
	if (((*(_105936_tokens)).len() == 1LL)) {
		_1d7130c4b_pushErr(_self_, (*(_105936_tokens))[0LL], jule::Str::lit("expression missing", 18));
		return nullptr;;
	};
	jule::Ptr<_1d65010d9_UseExpr> _106413_ue = jule::new_ptr<_1d65010d9_UseExpr>(_1d65010d9_UseExpr{._field_Token=(*(_105936_tokens))[0LL], });;
	((*(_105936_tokens))).mut_slice(1LL);;
	(*(_106413_ue))._field_Expr=_1d714ddce_buildExpr((*(_self_))._field_p, _105936_tokens);
	return _106413_ue;;
}



inline jule::Any _1d713b1b8_buildConstSt(_1d712e9b4_scopeParser* _self_, jule::Ptr<_1d712e123_stmt>* _107236_st) {
	if (((*((*(_107236_st))))._field_tokens.len() == 1LL)) {
		_1d7130c4b_pushErr(_self_, (*((*(_107236_st))))._field_tokens[0LL], jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*((*(_107236_st))))._field_tokens[1LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_1da71dc81:;
			{
				(*((*(_107236_st))))._field_tokens=(*((*(_107236_st))))._field_tokens.slice(1LL);
				jule::Ptr<_1d650ed95_Iter> _108017_iter = _1d7134d4e_buildIterSt(_self_, _107236_st);;
				if ((_108017_iter != nullptr)) {
					(*(_108017_iter))._field_Comptime=true;
				};
				return jule::Any(_108017_iter, &__jule_any_type54);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1da71c5a9:;
			{
				(*((*(_107236_st))))._field_tokens=(*((*(_107236_st))))._field_tokens.slice(1LL);
				jule::Ptr<_1d6513bbd_MatchCase> _108717_mt = _1d71386c1_buildMatchCase(_self_, (*((*(_107236_st))))._field_tokens);;
				if ((_108717_mt != nullptr)) {
					(*(_108717_mt))._field_Comptime=true;
				};
				return jule::Any(_108717_mt, &__jule_any_type59);;
			}
		}
		else {
			_case_begin_1da71d665:;
			{
				return jule::Any(_1d7131d3a_buildVarSt(_self_, &((*((*(_107236_st))))._field_tokens)), &__jule_any_type16);;
			}
		}
		_match_end_1da71d5ee:;
	};
}



inline jule::Any _1d713b509_buildSt(_1d712e9b4_scopeParser* _self_, jule::Ptr<_1d712e123_stmt>* _109731_st) {
	jule::Ptr<_1d64d5cd3_Token> _109813_token = (*((*(_109731_st))))._field_tokens[0LL];;
	if (((*(_109813_token))._field_Id == static_cast<jule::U64>(1LLU))) {
		jule::Any _110017_s = jule::Any(nullptr);;
		jule::Bool _110020_ok = false;;
		({
			__jule_tuple__1d650aa3e_StmtData__jule_tuple_bool __jule_assign_result = _1d7139194_buildIdSt(_self_, &((*((*(_109731_st))))._field_tokens));
			_110017_s = __jule_assign_result.__jule_result_arg0;
			_110020_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_110020_ok) {
			return _110017_s;;
		};
	};
	jule::Any _110613_s = jule::Any(nullptr);;
	jule::Bool _110616_ok = false;;
	({
		__jule_tuple__1d650aa3e_StmtData__jule_tuple_bool __jule_assign_result = _1d713aa36_buildAssignSt(_self_, &((*((*(_109731_st))))._field_tokens));
		_110613_s = __jule_assign_result.__jule_result_arg0;
		_110616_ok = __jule_assign_result.__jule_result_arg1;
	});
	if (_110616_ok) {
		return _110613_s;;
	};
	{
		auto &_match_expr{ (*(_109813_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_1da72433b:;
			{
				return jule::Any(_1d713ad77_buildUseExpr(_self_, &((*((*(_109731_st))))._field_tokens)), &__jule_any_type63);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1da72488b:;
			{
				return _1d713b1b8_buildConstSt(_self_, _109731_st);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(30LLU) || _match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1da724a56:;
			{
				return jule::Any(_1d7131d3a_buildVarSt(_self_, &((*((*(_109731_st))))._field_tokens)), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1da724abc:;
			{
				return jule::Any(_1d713217b_buildRetSt(_self_, (*((*(_109731_st))))._field_tokens), &__jule_any_type62);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_1da724b33:;
			{
				return jule::Any(_1d7134d4e_buildIterSt(_self_, _109731_st), &__jule_any_type54);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1da724b99:;
			{
				return jule::Any(_1d7135190_buildBreakSt(_self_, &((*((*(_109731_st))))._field_tokens)), &__jule_any_type61);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_1da724c10:;
			{
				return jule::Any(_1d71354d1_buildContSt(_self_, &((*((*(_109731_st))))._field_tokens)), &__jule_any_type55);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(13LLU)) {
			_case_begin_1da724c87:;
			{
				return jule::Any(_1d7135ea4_buildIfElseChain(_self_, (*((*(_109731_st))))._field_tokens), &__jule_any_type53);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_1da724d0e:;
			{
				return jule::Any(_1d71362e5_buildCoCallSt(_self_, (*((*(_109731_st))))._field_tokens), &__jule_any_type52);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(18LLU)) {
			_case_begin_1da724d86:;
			{
				return jule::Any(_1d7136636_buildGotoSt(_self_, &((*((*(_109731_st))))._field_tokens)), &__jule_any_type57);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(28LLU)) {
			_case_begin_1da724e0d:;
			{
				return jule::Any(_1d7136977_buildFallSt(_self_, &((*((*(_109731_st))))._field_tokens)), &__jule_any_type60);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1da724e85:;
			{
				return jule::Any(_1d7136cb8_buildTypeAliasSt(_self_, &((*((*(_109731_st))))._field_tokens)), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1da72500c:;
			{
				return jule::Any(_1d71386c1_buildMatchCase(_self_, (*((*(_109731_st))))._field_tokens), &__jule_any_type59);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1da725084:;
			{
				if (((*((*(_109731_st))))._field_tokens.len() < 1LL)) {
					goto _match_end_1da72469e;
				};
				if ((((*((*((*(_109731_st))))._field_tokens[1LL]))._field_Id == static_cast<jule::U64>(33LLU)) || ((*((*((*(_109731_st))))._field_tokens[1LL]))._field_Id == static_cast<jule::U64>(72LLU)))) {
					return jule::Any(_1d7138a12_buildScopeSt(_self_, (*((*(_109731_st))))._field_tokens), &__jule_any_type51);;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1da72510b:;
			{
				return jule::Any(_1d7138a12_buildScopeSt(_self_, (*((*(_109731_st))))._field_tokens), &__jule_any_type51);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_1da725183:;
			{
				return jule::Any(_1d7138a12_buildScopeSt(_self_, (*((*(_109731_st))))._field_tokens), &__jule_any_type51);;
			}
		}
		_match_end_1da72469e:;
	};
	jule::Ptr<_1d6500715_Expr> _115313_expr = _1d714ddce_buildExpr((*(_self_))._field_p, &((*((*(_109731_st))))._field_tokens));;
	if ((_115313_expr != nullptr)) {
		return jule::Any(_115313_expr, &__jule_any_type52);;
	};
	_1d7130c4b_pushErr(_self_, _109813_token, jule::Str::lit("invalid syntax", 14));
	return nullptr;;
}



inline void _1d713b86c_build(_1d712e9b4_scopeParser* _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _116129_tokens, jule::Ptr<_1d650b402_ScopeTree>* _116152_s) {
	if (((*(_116152_s)) == nullptr)) {
		return;;
	};
	(*(_self_))._field_stmts=_1d712e4ca_splitStmts(_116129_tokens);
	(*(_self_))._field_pos=-1LL;
	(*(_self_))._field_s=(*(_116152_s));
	while (((!(_1d71308d8_isLastSt(_self_))) && (!(_1d7130652_finished(_self_))))) {
		{
			jule::Ptr<_1d712e123_stmt> _116917_st = _1d71315ed_next(_self_);;
			jule::Any _117017_data = _1d713b509_buildSt(_self_, &(_116917_st));;
			if ((_117017_data != nullptr)) {
				{ jule::Slice<_1d650ac92_Stmt> &__jule_push_dest = (*((*(_self_))._field_s))._field_Stmts; __jule_push_dest.push(_1d650ac92_Stmt{._field_Token=(*(_116917_st))._field_tokens[0LL], ._field_Data=_117017_data}); };
			};
			if (_1d71303bb_stopped(_self_)) {
				goto _iter_end_1da731337;
			};
		}
	_iter_next_1da731337:;
	}
	_iter_end_1da731337:;;
}





std::ostream &operator<<(std::ostream &_Stream, _1d712e9b4_scopeParser _Src) {
	_Stream << "scopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline void _1d713cbc0_pushErr(_1d713c3d9_exprBuilder* _self_, jule::Ptr<_1d64d5cd3_Token> _4526_token, jule::Str _4541_fmt, jule::Slice<jule::Any> _4554_args) {
	_1d714d72a_pushErr((*(_self_))._field_p.ptr(), _4526_token, _4541_fmt, _4554_args);
}



inline void _1d713d033_pushSuggestion(_1d713c3d9_exprBuilder* _self_, jule::Str _5033_fmt, jule::Slice<jule::Any> _5046_args) {
	_1d714da8d_pushSuggestion((*(_self_))._field_p.ptr(), _5033_fmt, _5046_args);
}



inline jule::Ptr<_1d65013d6_TupleExpr> _1d713d374_buildTuple(_1d713c3d9_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_1d64d5cd3_Token>>>* _5434_parts) {
	jule::Ptr<_1d65013d6_TupleExpr> _5513_tuple = jule::new_ptr<_1d65013d6_TupleExpr>(_1d65013d6_TupleExpr{._field_Expr=jule::Slice<jule::Ptr<_1d6500715_Expr>>::alloc(0LL, (*(_5434_parts)).len())});;
	{
		auto expr = _5434_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1da750d18:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _5821_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1d6500715_Expr>> &__jule_push_dest = (*(_5513_tuple))._field_Expr; __jule_push_dest.push(_1d7147768_buildFromTokens(_self_, _5821_part)); };
			}
			_iter_next_1da750d18:;
			++it;
			goto _iter_begin_1da750d18;
		}
		_iter_end_1da750d18:;
	};
	return _5513_tuple;;
}



inline jule::Ptr<_1d65017b0_LitExpr> _1d713d6b5_buildLit(_1d713c3d9_exprBuilder* _self_, jule::Ptr<_1d64d5cd3_Token> _6427_token) {
	return jule::new_ptr<_1d65017b0_LitExpr>(_1d65017b0_LitExpr{._field_Token=_6427_token, ._field_Value=(*(_6427_token))._field_Kind});;
}



inline jule::Any _1d713dd47_buildSingle(_1d713c3d9_exprBuilder* _self_, jule::Ptr<_1d64d5cd3_Token> _7534_token) {
	{
		auto &_match_expr{ (*(_7534_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(4LLU)) {
			_case_begin_1da752ce8:;
			{
				return jule::Any(_1d713d6b5_buildLit(_self_, _7534_token), &__jule_any_type101);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(39LLU)) {
			_case_begin_1da752d70:;
			{
				return jule::Any(jule::new_ptr<_1d6502b9b_VariadicExpr>(_1d6502b9b_VariadicExpr{._field_Token=_7534_token, }), &__jule_any_type75);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU) || _match_expr == static_cast<jule::U64>(24LLU) || _match_expr == static_cast<jule::U64>(36LLU)) {
			_case_begin_1da752de7:;
			{
				return jule::Any(_1d7148b54_buildIdentExpr(&(_7534_token)), &__jule_any_type79);;
			}
		}
		_match_end_1da752c1b:;
	};
	_1d713cbc0_pushErr(_self_, _7534_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1d6502140_IdentExpr> _1d713e188_buildBindIdent(_1d713c3d9_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _9238_tokens) {
	if (((*((*(_9238_tokens))[0LL]))._field_Id != static_cast<jule::U64>(27LLU))) {
		return nullptr;;
	} else if (((*((*(_9238_tokens))[1LL]))._field_Id != static_cast<jule::U64>(17LLU))) {
		_1d713cbc0_pushErr(_self_, (*(_9238_tokens))[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1d713d033_pushSuggestion(_self_, jule::Str::lit("use dot (.) to access binded defines", 36), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1d64d5cd3_Token> _10013_token = (*(_9238_tokens))[2LL];;
	if (((*(_10013_token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1d713cbc0_pushErr(_self_, (*(_9238_tokens))[2LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1d713d033_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1d6502140_IdentExpr> _10613_expr = _1d7148b54_buildIdentExpr(&(_10013_token));;
	(*(_10613_expr))._field_Binded=true;
	return _10613_expr;;
}



inline jule::Ptr<_1d65027c2_UnaryExpr> _1d713e4c9_buildUnary(_1d713c3d9_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _11133_tokens) {
	jule::Ptr<_1d64d5cd3_Token> _11213_op = _11133_tokens[0LL];;
	if ((_11133_tokens.len() == 1LL)) {
		_1d713cbc0_pushErr(_self_, _11213_op, jule::Str::lit("missing expression for unary operator", 37), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((!(_1d64d6520_IsUnaryOp((*(_11213_op))._field_Id)))) {
		_1d713cbc0_pushErr(_self_, _11213_op, jule::Str::lit("invalid unary operator: @", 25), jule::Slice<jule::Any>::make({jule::Any((*(_11213_op))._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	(_11133_tokens).mut_slice(1LL);;
	return jule::new_ptr<_1d65027c2_UnaryExpr>(_1d65027c2_UnaryExpr{._field_Op=_11213_op, ._field_Expr=_1d7147768_buildFromTokens(_self_, _11133_tokens)});;
}



inline jule::Ptr<_1d6503828_SubIdentExpr> _1d713e81a_buildObjSubIdent(_1d713c3d9_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _13239_tokens) {
	jule::I64 _13313_i = (_13239_tokens.len() - 1LL);;
	jule::Ptr<_1d64d5cd3_Token> _13413_identToken = _13239_tokens[_13313_i];;
	(_13313_i)--;
	(_13239_tokens).mut_slice(0LL, _13313_i);;
	if ((_13239_tokens.len() == 0LL)) {
		_1d713cbc0_pushErr(_self_, _13413_identToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1d6503828_SubIdentExpr>(_1d6503828_SubIdentExpr{._field_Expr=_1d7147768_buildFromTokens(_self_, _13239_tokens), ._field_Ident=_13413_identToken});;
}



inline jule::Ptr<_1d650344e_NsSelectionExpr> _1d713eb5b_buildNsSubIdent(_1d713c3d9_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _14739_tokens) {
	jule::Ptr<_1d650344e_NsSelectionExpr> _14813_ns = jule::new_ptr<_1d650344e_NsSelectionExpr>();;
	if ((((*(_14739_tokens)).len() == 3LL) && ((*((*(_14739_tokens))[0LL]))._field_Id == static_cast<jule::U64>(31LLU)))) {
		(*(_14813_ns))._field_Ns=(*(_14739_tokens)).slice(0LL, 1LL);
		(*(_14813_ns))._field_Ident=(*(_14739_tokens))[2LL];
	} else {
		{
			auto expr = _14739_tokens;
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1da75eb7e:;
			if (it != expr_end) {
				jule::I64 _15418_i = it - expr->begin();
				jule::Ptr<_1d64d5cd3_Token> _15425_token = *it;
				{
					if (((_15418_i & 1LL) == 0LL)) {
						if (((*(_15425_token))._field_Id != static_cast<jule::U64>(1LLU))) {
							_1d713cbc0_pushErr(_self_, _15425_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							_1d713d033_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
						};
						{ jule::Slice<jule::Ptr<_1d64d5cd3_Token>> &__jule_push_dest = (*(_14813_ns))._field_Ns; __jule_push_dest.push(_15425_token); };
					} else if (((*(_15425_token))._field_Id != static_cast<jule::U64>(19LLU))) {
						_1d713cbc0_pushErr(_self_, _15425_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
						_1d713d033_pushSuggestion(_self_, jule::Str::lit("expected double colon \"::\"", 26), jule::Slice<jule::Any>());
					};
				}
				_iter_next_1da75eb7e:;
				++it;
				_15418_i++;
				goto _iter_begin_1da75eb7e;
			}
			_iter_end_1da75eb7e:;
		};
		(*(_14813_ns))._field_Ident=(*(_14813_ns))._field_Ns[((*(_14813_ns))._field_Ns.len() - 1LL)];
		(*(_14813_ns))._field_Ns=(*(_14813_ns))._field_Ns.slice(0LL, ((*(_14813_ns))._field_Ns.len() - 1LL));
	};
	return _14813_ns;;
}



inline jule::Ptr<_1d64eb3d1_TypeDecl> _1d713ee9c_buildType(_1d713c3d9_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _17233_tokens) {
	jule::I64 _17313_i = 0LL;;
	jule::Ptr<_1d64eb3d1_TypeDecl> _17413_t;;
	jule::Bool _17416_ok = false;;
	({
		__jule_tuple_x_1d64eb3d1_TypeDecl__jule_tuple_bool __jule_assign_result = _1d7150331_buildType((*(_self_))._field_p, _17233_tokens, (&(_17313_i)), false);
		_17413_t = __jule_assign_result.__jule_result_arg0;
		_17416_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_17416_ok))) {
		_1d713cbc0_pushErr(_self_, (*(_17233_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_17313_i < (*(_17233_tokens)).len())) {
		_1d713cbc0_pushErr(_self_, (*(_17233_tokens))[_17313_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	return _17413_t;;
}



inline jule::Any _1d71402dd_buildSubIdent(_1d713c3d9_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _18637_tokens) {
	jule::I64 _1879_i = ((*(_18637_tokens)).len() - 2LL);;
	jule::Ptr<_1d64d5cd3_Token> _1889_token = (*(_18637_tokens))[_1879_i];;
	{
		auto &_match_expr{ (*(_1889_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(17LLU)) {
			_case_begin_1da766dea:;
			{
				return jule::Any(_1d713e81a_buildObjSubIdent(_self_, (*(_18637_tokens))), &__jule_any_type85);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1da767505:;
			{
				return jule::Any(_1d713eb5b_buildNsSubIdent(_self_, _18637_tokens), &__jule_any_type89);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_1da76756b:;
			{
				return jule::Any(_1d713ee9c_buildType(_self_, _18637_tokens), &__jule_any_type88);;
			}
		}
		_match_end_1da7673e5:;
	};
	_1d713cbc0_pushErr(_self_, _1889_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1d6502b9b_VariadicExpr> _1d714062e_buildVariadic(_1d713c3d9_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _20236_tokens) {
	jule::Ptr<_1d64d5cd3_Token> _20313_token = _20236_tokens[(_20236_tokens.len() - 1LL)];;
	(_20236_tokens).mut_slice(0LL, (_20236_tokens.len() - 1LL));;
	return jule::new_ptr<_1d6502b9b_VariadicExpr>(_1d6502b9b_VariadicExpr{._field_Token=_20313_token, ._field_Expr=_1d7147768_buildFromTokens(_self_, _20236_tokens)});;
}



inline jule::Ptr<_1d6500a12_RangeExpr> _1d7140970_buildBetweenParentheses(_1d713c3d9_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _21146_tokens) {
	if ((_21146_tokens.len() == 2LL)) {
		_1d713cbc0_pushErr(_self_, _21146_tokens[0LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		_1d713d033_pushSuggestion(_self_, jule::Str::lit("empty parentheses are not valid expression, must include an expression in range", 79), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_21146_tokens).mut_slice(1LL, (_21146_tokens.len() - 1LL));;
	return jule::new_ptr<_1d6500a12_RangeExpr>(_1d6500a12_RangeExpr{._field_Expr=_1d7147768_buildFromTokens(_self_, _21146_tokens)});;
}



inline jule::Ptr<_1d6503075_CastExpr> _1d7140cb1_tryBuildCast(_1d713c3d9_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _22336_tokens) {
	jule::I64 _22413_rangeN = 0LL;;
	{
		auto expr = _22336_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1da76c5d7:;
		if (it != expr_end) {
			jule::I64 _22513_i = it - expr->begin();
			jule::Ptr<_1d64d5cd3_Token> _22516_token = *it;
			{
				{
					auto &_match_expr{ (*(_22516_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1da76d3c9:;
						{
							(_22413_rangeN)++;
							goto _iter_next_1da76c5d7;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1da76d451:;
						{
							(_22413_rangeN)--;
						}
					}
					_match_end_1da76d30d:;
				};
				if ((_22413_rangeN > 0LL)) {
					goto _iter_next_1da76c5d7;
				} else if (((_22513_i + 1LL) == (*(_22336_tokens)).len())) {
					return nullptr;;
				};
				jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _24417_typeTokens = (*(_22336_tokens)).slice(0LL, (_22513_i + 1LL));;
				jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _24517_exprTokens = (*(_22336_tokens)).slice((_22513_i + 1LL));;
				if ((_24517_exprTokens.len() == 0LL)) {
					return nullptr;;
				};
				jule::Ptr<_1d64d5cd3_Token> _25213_tok = _24517_exprTokens[0LL];;
				if (((*(_25213_tok))._field_Id != static_cast<jule::U64>(74LLU))) {
					return nullptr;;
				};
				jule::Ptr<_1d6503075_CastExpr> _25717_cast = jule::new_ptr<_1d6503075_CastExpr>(_1d6503075_CastExpr{});;
				if ((_24517_exprTokens.len() == 2LL)) {
					_1d713cbc0_pushErr(_self_, _24517_exprTokens[0LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
					_1d713d033_pushSuggestion(_self_, jule::Str::lit("give an expression for casting", 30), jule::Slice<jule::Any>());
				};
				if ((_24417_typeTokens.len() == 2LL)) {
					_1d713cbc0_pushErr(_self_, _24417_typeTokens[0LL], jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
					_1d713d033_pushSuggestion(_self_, jule::Str::lit("type declaration expected for casting", 37), jule::Slice<jule::Any>());
				} else {
					(_24417_typeTokens).mut_slice(1LL, (_24417_typeTokens.len() - 1LL));;
					jule::I64 _27121_typeIndex = 0LL;;
					jule::Ptr<_1d64eb3d1_TypeDecl> _27221_t;;
					jule::Bool _27224_ok = false;;
					({
						__jule_tuple_x_1d64eb3d1_TypeDecl__jule_tuple_bool __jule_assign_result = _1d7150331_buildType((*(_self_))._field_p, &(_24417_typeTokens), (&(_27121_typeIndex)), true);
						_27221_t = __jule_assign_result.__jule_result_arg0;
						_27224_ok = __jule_assign_result.__jule_result_arg1;
					});
					if ((_27224_ok && (_27121_typeIndex < _24417_typeTokens.len()))) {
						_1d713cbc0_pushErr(_self_, _24417_typeTokens[_27121_typeIndex], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					} else if ((!(_27224_ok))) {
						return _25717_cast;;
					};
					(*(_25717_cast))._field_Kind=_27221_t;
					if ((_24517_exprTokens.len() > 2LL)) {
						jule::I64 _28225_j = 0LL;;
						_1d714b42b_range(&(_28225_j), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), &(_24517_exprTokens));
						if ((_28225_j < _24517_exprTokens.len())) {
							return nullptr;;
						};
						(_24517_exprTokens).mut_slice(0LL, _28225_j);;
						(*(_25717_cast))._field_Expr=_1d7147768_buildFromTokens(_self_, _24517_exprTokens);
					};
				};
				return _25717_cast;;
			}
			_iter_next_1da76c5d7:;
			++it;
			_22513_i++;
			goto _iter_begin_1da76c5d7;
		}
		_iter_end_1da76c5d7:;
	};
	return nullptr;;
}



inline void _1d71411ce_pushArg(_1d713c3d9_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d6500715_Expr>>* _29731_args, jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _29750_tokens, jule::Ptr<_1d64d5cd3_Token> _29768_err_token) {
	if ((_29750_tokens.len() == 0LL)) {
		_1d713cbc0_pushErr(_self_, _29768_err_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1d713d033_pushSuggestion(_self_, jule::Str::lit("an expression expected", 22), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Ptr<_1d6500715_Expr>> &__jule_push_dest = (*(_29731_args)); __jule_push_dest.push(_1d7147768_buildFromTokens(_self_, _29750_tokens)); };
}



inline jule::Slice<jule::Ptr<_1d6500715_Expr>> _1d7141520_buildArgs(_1d713c3d9_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _30632_tokens) {
	if ((_30632_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1d6500715_Expr>> _31217_args = nullptr;;
	jule::I64 _31313_last = 0LL;;
	jule::I64 _31413_rangeN = 0LL;;
	(_30632_tokens).mut_slice(1LL, (_30632_tokens.len() - 1LL));;
	{
		auto expr = &(_30632_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1da77a4e6:;
		if (it != expr_end) {
			jule::I64 _31613_i = it - expr->begin();
			jule::Ptr<_1d64d5cd3_Token> _31616_token = *it;
			{
				{
					auto &_match_expr{ (*(_31616_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1da77b618:;
						{
							(_31413_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1da77b690:;
						{
							(_31413_rangeN)--;
						}
					}
					_match_end_1da77b54c:;
				};
				if (((_31413_rangeN > 0LL) || ((*(_31616_token))._field_Id != static_cast<jule::U64>(5LLU)))) {
					goto _iter_next_1da77a4e6;
				};
				_1d71411ce_pushArg(_self_, &(_31217_args), _30632_tokens.slice(_31313_last, _31613_i), _31616_token);
				_31313_last=static_cast<jule::I64>((_31613_i + 1LL));
			}
			_iter_next_1da77a4e6:;
			++it;
			_31613_i++;
			goto _iter_begin_1da77a4e6;
		}
		_iter_end_1da77a4e6:;
	};
	if ((_31313_last < _30632_tokens.len())) {
		if ((_31313_last == 0LL)) {
			if ((_30632_tokens.len() > 0LL)) {
				_1d71411ce_pushArg(_self_, &(_31217_args), _30632_tokens.slice(_31313_last), _30632_tokens[_31313_last]);
			};
		} else {
			_1d71411ce_pushArg(_self_, &(_31217_args), _30632_tokens.slice(_31313_last), _30632_tokens[(_31313_last - 1LL)]);
		};
	};
	return _31217_args;;
}



inline jule::Ptr<_1d650443e_FnCallExpr> _1d7141d17_buildFnCall(_1d713c3d9_exprBuilder* _self_, jule::Ptr<_1d64d5cd3_Token>* _37235_token, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _37255_expr, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _37276_args) {
	return jule::new_ptr<_1d650443e_FnCallExpr>(_1d650443e_FnCallExpr{._field_Token=(*(_37235_token)), ._field_Expr=_1d7147768_buildFromTokens(_self_, (*(_37255_expr))), ._field_Args=_1d7141520_buildArgs(_self_, (*(_37276_args))), });;
}



inline jule::Any _1d7142158_buildParenthesesRange(_1d713c3d9_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _38045_tokens) {
	jule::Ptr<_1d64d5cd3_Token> _38113_token = (*(_38045_tokens))[0LL];;
	if (((*(_38113_token))._field_Id == static_cast<jule::U64>(74LLU))) {
		jule::Ptr<_1d6503075_CastExpr> _38317_expr = _1d7140cb1_tryBuildCast(_self_, _38045_tokens);;
		if ((_38317_expr != nullptr)) {
			return jule::Any(_38317_expr, &__jule_any_type105);;
		};
	};
	jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _38813_exprTokens;;
	jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _38829_args_tokens;;
	({
		__jule_tuple_sx_1d64d5cd3_Token__jule_tuple_sx_1d64d5cd3_Token __jule_assign_result = _1d714b6e5_rangeLast(_38045_tokens);
		_38813_exprTokens = __jule_assign_result.__jule_result_arg0;
		_38829_args_tokens = __jule_assign_result.__jule_result_arg1;
	});
	if ((_38813_exprTokens.len() == 0LL)) {
		return jule::Any(_1d7140970_buildBetweenParentheses(_self_, _38829_args_tokens), &__jule_any_type100);;
	};
	return jule::Any(_1d7141d17_buildFnCall(_self_, &(_38113_token), &(_38813_exprTokens), &(_38829_args_tokens)), &__jule_any_type107);;
}



inline jule::Ptr<_1d6501b89_UnsafeExpr> _1d7142499_buildUnsafeExpr(_1d713c3d9_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _39738_tokens) {
	jule::Ptr<_1d64d5cd3_Token> _39813_token = _39738_tokens[0LL];;
	(_39738_tokens).mut_slice(1LL);;
	jule::I64 _40013_i = 0LL;;
	jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _40113_rangeTokens = _1d714b42b_range(&(_40013_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_39738_tokens));;
	if ((_40113_rangeTokens.len() == 0LL)) {
		_1d713cbc0_pushErr(_self_, _39738_tokens[0LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1d6501b89_UnsafeExpr>(_1d6501b89_UnsafeExpr{._field_Token=_39813_token, ._field_Expr=_1d7147768_buildFromTokens(_self_, _40113_rangeTokens)});;
}



inline jule::Ptr<_1d650d091_FnDecl> _1d71427da_buildAnonFn(_1d713c3d9_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _41235_tokens) {
	jule::Ptr<_1d650d091_FnDecl> _41313_f = _1d7154973_buildFn((*(_self_))._field_p, _41235_tokens, false, false);;
	if ((!(_1d650d404_IsAnon(_41313_f.ptr())))) {
		_1d713cbc0_pushErr(_self_, (*(_41313_f))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1d713d033_pushSuggestion(_self_, jule::Str::lit("anonymous function expected, remove identifier of function", 58), jule::Slice<jule::Any>());
	};
	return _41313_f;;
}



inline jule::Any _1d7142b2b_buildUnsafe(_1d713c3d9_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _42135_tokens) {
	{
		auto &_match_expr{ (*((*(_42135_tokens))[1LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1da78cd88:;
			{
				return jule::Any(_1d71427da_buildAnonFn(_self_, _42135_tokens), &__jule_any_type14);;
			}
		}
		else {
			_case_begin_1da78c76c:;
			{
				return jule::Any(_1d7142499_buildUnsafeExpr(_self_, (*(_42135_tokens))), &__jule_any_type102);;
			}
		}
		_match_end_1da78c6a1:;
	};
}



inline void _1d7143049_pushRangeLitPart(_1d713c3d9_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _43139_part, jule::Ptr<_1d64d5cd3_Token> _4329_errorToken, jule::Slice<jule::Slice<jule::Ptr<_1d64d5cd3_Token>>>* _43234_parts) {
	if ((_43139_part.len() == 0LL)) {
		_1d713cbc0_pushErr(_self_, _4329_errorToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1d713d033_pushSuggestion(_self_, jule::Str::lit("an expression expected", 22), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Slice<jule::Ptr<_1d64d5cd3_Token>>> &__jule_push_dest = (*(_43234_parts)); __jule_push_dest.push(_43139_part); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_1d64d5cd3_Token>>> _1d714338a_getBraceRangeLitExprParts(_1d713c3d9_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _44248_tokens) {
	if ((_44248_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1d64d5cd3_Token>>> _44817_parts = nullptr;;
	jule::I64 _45013_last = 0LL;;
	jule::I64 _45113_rangeN = 0LL;;
	(_44248_tokens).mut_slice(1LL, (_44248_tokens.len() - 1LL));;
	{
		auto expr = &(_44248_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1da791331:;
		if (it != expr_end) {
			jule::I64 _45313_i = it - expr->begin();
			jule::Ptr<_1d64d5cd3_Token> _45316_token = *it;
			{
				{
					auto &_match_expr{ (*(_45316_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1da792453:;
						{
							(_45113_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1da7924ca:;
						{
							(_45113_rangeN)--;
						}
					}
					_match_end_1da792387:;
				};
				if (((_45113_rangeN > 0LL) || ((*(_45316_token))._field_Id != static_cast<jule::U64>(5LLU)))) {
					goto _iter_next_1da791331;
				};
				_1d7143049_pushRangeLitPart(_self_, _44248_tokens.slice(_45013_last, _45313_i), _45316_token, &(_44817_parts));
				_45013_last=static_cast<jule::I64>((_45313_i + 1LL));
			}
			_iter_next_1da791331:;
			++it;
			_45313_i++;
			goto _iter_begin_1da791331;
		}
		_iter_end_1da791331:;
	};
	if ((_45013_last < _44248_tokens.len())) {
		if ((_45013_last == 0LL)) {
			if ((_44248_tokens.len() > 0LL)) {
				_1d7143049_pushRangeLitPart(_self_, _44248_tokens.slice(_45013_last), _44248_tokens[_45013_last], &(_44817_parts));
			};
		} else {
			_1d7143049_pushRangeLitPart(_self_, _44248_tokens.slice(_45013_last), _44248_tokens[(_45013_last - 1LL)], &(_44817_parts));
		};
	};
	return _44817_parts;;
}



inline jule::Ptr<_1d6504e34_FieldExprPair> _1d71436cb_buildFieldExprPair(_1d713c3d9_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _48441_tokens) {
	if (((_48441_tokens.len() - 2LL) == 0LL)) {
		_1d713cbc0_pushErr(_self_, _48441_tokens[1LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1d6504e34_FieldExprPair> _48913_pair = jule::new_ptr<_1d6504e34_FieldExprPair>(_1d6504e34_FieldExprPair{._field_Field=_48441_tokens[0LL], });;
	(_48441_tokens).mut_slice(2LL);;
	(*(_48913_pair))._field_Expr=_1d7147768_buildFromTokens(_self_, _48441_tokens);
	return _48913_pair;;
}



inline jule::Ptr<_1d6500715_Expr> _1d7143a1c_buildStructLitExpr(_1d713c3d9_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _49742_tokens) {
	jule::Ptr<_1d64d5cd3_Token> _49813_token = (*(_49742_tokens))[0LL];;
	if ((((*(_49813_token))._field_Id == static_cast<jule::U64>(1LLU)) && ((*(_49742_tokens)).len() > 1LL))) {
		_49813_token=(*(_49742_tokens))[1LL];
		if (((*(_49813_token))._field_Id == static_cast<jule::U64>(8LLU))) {
			return jule::new_ptr<_1d6500715_Expr>(_1d6500715_Expr{._field_Token=_49813_token, ._field_End=(*(_49742_tokens))[((*(_49742_tokens)).len() - 1LL)], ._field_Kind=jule::Any(_1d71436cb_buildFieldExprPair(_self_, (*(_49742_tokens))), &__jule_any_type77)});;
		};
	};
	return _1d7147768_buildFromTokens(_self_, (*(_49742_tokens)));;
}



inline jule::Slice<jule::Ptr<_1d6500715_Expr>> _1d7143d5d_buildStructLitExprs(_1d713c3d9_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _51243_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1d64d5cd3_Token>>> _51313_parts = _1d714338a_getBraceRangeLitExprParts(_self_, (*(_51243_tokens)));;
	if ((_51313_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1d6500715_Expr>> _51813_pairs = jule::Slice<jule::Ptr<_1d6500715_Expr>>::alloc(0LL, _51313_parts.len());;
	{
		auto expr = &(_51313_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1da79aa11:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _51921_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1d6500715_Expr>> &__jule_push_dest = _51813_pairs; __jule_push_dest.push(_1d7143a1c_buildStructLitExpr(_self_, &(_51921_part))); };
			}
			_iter_next_1da79aa11:;
			++it;
			goto _iter_begin_1da79aa11;
		}
		_iter_end_1da79aa11:;
	};
	return _51813_pairs;;
}



inline jule::Ptr<_1d650575e_StructLit> _1d714419e_buildTypedStructLiteral(_1d713c3d9_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _52546_tokens) {
	jule::I64 _52613_i = 0LL;;
	jule::Ptr<_1d64eb3d1_TypeDecl> _52713_t;;
	jule::Bool _52716_ok = false;;
	({
		__jule_tuple_x_1d64eb3d1_TypeDecl__jule_tuple_bool __jule_assign_result = _1d7150331_buildType((*(_self_))._field_p, &(_52546_tokens), (&(_52613_i)), true);
		_52713_t = __jule_assign_result.__jule_result_arg0;
		_52716_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_52716_ok))) {
		return nullptr;;
	} else if ((_52613_i >= _52546_tokens.len())) {
		_1d713cbc0_pushErr(_self_, _52546_tokens[_52613_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_52546_tokens).mut_slice(_52613_i);;
	jule::Ptr<_1d64d5cd3_Token> _5369_token = _52546_tokens[0LL];;
	if (((*(_5369_token))._field_Id != static_cast<jule::U64>(72LLU))) {
		_1d713cbc0_pushErr(_self_, _5369_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1d650575e_StructLit>(_1d650575e_StructLit{._field_End=_52546_tokens[(_52546_tokens.len() - 1LL)], ._field_Kind=_52713_t, ._field_Exprs=_1d7143d5d_buildStructLitExprs(_self_, &(_52546_tokens))});;
}



inline jule::Ptr<_1d6500715_Expr> _1d71444e0_buildBraceLitPart(_1d713c3d9_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _54941_tokens) {
	jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _55013_l;;
	jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _55020_r;;
	({
		__jule_tuple_sx_1d64d5cd3_Token__jule_tuple_sx_1d64d5cd3_Token __jule_assign_result = _1d71485c1_splitDelim(_54941_tokens, static_cast<jule::U64>(8LLU));
		_55013_l = __jule_assign_result.__jule_result_arg0;
		_55020_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_55013_l != nullptr)) {
		return jule::new_ptr<_1d6500715_Expr>(_1d6500715_Expr{._field_Token=(*(_54941_tokens))[0LL], ._field_End=(*(_54941_tokens))[((*(_54941_tokens)).len() - 1LL)], ._field_Kind=jule::Any(jule::new_ptr<_1d6506540_KeyValPair>(_1d6506540_KeyValPair{._field_Key=_1d7147768_buildFromTokens(_self_, _55013_l), ._field_Val=_1d7147768_buildFromTokens(_self_, _55020_r), ._field_Colon=(*(_54941_tokens))[_55013_l.len()]}), &__jule_any_type78)});;
	};
	return _1d7147768_buildFromTokens(_self_, (*(_54941_tokens)));;
}



inline jule::Ptr<_1d6505c15_BraceLit> _1d7144831_buildBraceLit(_1d713c3d9_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _56637_tokens) {
	jule::Ptr<_1d6505c15_BraceLit> _56713_lit = jule::new_ptr<_1d6505c15_BraceLit>(_1d6505c15_BraceLit{._field_Token=(*(_56637_tokens))[0LL], ._field_End=(*(_56637_tokens))[((*(_56637_tokens)).len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_1d64d5cd3_Token>>> _57213_parts = _1d714338a_getBraceRangeLitExprParts(_self_, (*(_56637_tokens)));;
	if ((_57213_parts == nullptr)) {
		return _56713_lit;;
	};
	(*(_56713_lit))._field_Exprs=jule::Slice<jule::Ptr<_1d6500715_Expr>>::alloc(0LL, _57213_parts.len());
	{
		auto expr = &(_57213_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1da7a51d0:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _57821_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1d6500715_Expr>> &__jule_push_dest = (*(_56713_lit))._field_Exprs; __jule_push_dest.push(_1d71444e0_buildBraceLitPart(_self_, &(_57821_part))); };
			}
			_iter_next_1da7a51d0:;
			++it;
			goto _iter_begin_1da7a51d0;
		}
		_iter_end_1da7a51d0:;
	};
	return _56713_lit;;
}



inline jule::Any _1d7144b72_buildBraceRange(_1d713c3d9_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _58539_tokens) {
	jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _58613_exprTokens;;
	jule::I64 _58625_rangeN = 0;;
	({
		__jule_tuple_sx_1d64d5cd3_Token__jule_tuple_int __jule_assign_result = _1d7148e1d_getRangeExprTokens(_58539_tokens);
		_58613_exprTokens = __jule_assign_result.__jule_result_arg0;
		_58625_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	{
		
		if ((_58613_exprTokens.len() == 0LL)) {
			_case_begin_1da7a6247:;
			{
				return jule::Any(_1d7144831_buildBraceLit(_self_, _58539_tokens), &__jule_any_type108);;
			}
		}
		else if ((_58625_rangeN > 0LL)) {
			_case_begin_1da7a6a72:;
			{
				_1d713cbc0_pushErr(_self_, (*(_58539_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1da7a5d7e:;
	};
	jule::Ptr<_1d64d5cd3_Token> _5979_elseToken = _58613_exprTokens[(_58613_exprTokens.len() - 1LL)];;
	if (((*(_58613_exprTokens[(_58613_exprTokens.len() - 1LL)]))._field_Id == static_cast<jule::U64>(14LLU))) {
		(_58613_exprTokens).mut_slice(0LL, (_58613_exprTokens.len() - 1LL));;
		jule::Any _60017_d = _1d71470d6_build(_self_, &(_58613_exprTokens));;
		if ((_60017_d == nullptr)) {
			return nullptr;;
		};
		{
			auto &_match_expr{ _60017_d };
			
			if (_match_expr.type == &__jule_any_type107) {
				_case_begin_1da7a9c51:;
				{
					((*(_58539_tokens))).mut_slice((_58613_exprTokens.len() + 1LL));;
					jule::I64 _60721_i = 0LL;;
					jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _60821_rangeTokens = _1d714b42b_range(&(_60721_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _58539_tokens);;
					jule::Ptr<_1d650443e_FnCallExpr> _60921_model = _60017_d.cast_ptr<_1d650443e_FnCallExpr>(&__jule_any_type107);;
					if (_1d6504a49_Ignored(_60921_model.ptr())) {
						_1d713cbc0_pushErr(_self_, _5979_elseToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
						_1d713d033_pushSuggestion(_self_, jule::Str::lit("just ignore exceptional or handle it but you cannot do both at same time", 72), jule::Slice<jule::Any>());
					};
					(*(_60921_model))._field_Exception=_1d714e8c4_buildScope((*(_self_))._field_p, &(_60821_rangeTokens), (*(_58539_tokens))[(_60721_i - 1LL)]);
					return _60017_d;;
				}
			}
			else {
				_case_begin_1da7a96ce:;
				{
					_1d713cbc0_pushErr(_self_, _58613_exprTokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			_match_end_1da7a9437:;
		};
	};
	{
		auto &_match_expr{ (*(_58613_exprTokens[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1da7adc00:;
			{
				return _1d7142b2b_buildUnsafe(_self_, _58539_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1da7ae32c:;
			{
				return jule::Any(_1d71427da_buildAnonFn(_self_, _58539_tokens), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU) || _match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1da7ae393:;
			{
				return jule::Any(_1d714419e_buildTypedStructLiteral(_self_, (*(_58539_tokens))), &__jule_any_type106);;
			}
		}
		else {
			_case_begin_1da7aa218:;
			{
				_1d713cbc0_pushErr(_self_, _58613_exprTokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1da7ad6d3:;
	};
}



inline jule::Slice<jule::Slice<jule::Ptr<_1d64d5cd3_Token>>> _1d7144eb3_getEnumerableParts(_1d713c3d9_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _63741_tokens) {
	(_63741_tokens).mut_slice(1LL, (_63741_tokens.len() - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1d64d5cd3_Token>>> _63913_parts;;
	jule::Slice<_1e0235a7e_Log> _63920_errors;;
	({
		__jule_tuple_ssx_1d64d5cd3_Token__jule_tuple_s_1e0235a7e_Log __jule_assign_result = _1d714bb9b_parts(&(_63741_tokens), static_cast<jule::U64>(5LLU), true);
		_63913_parts = __jule_assign_result.__jule_result_arg0;
		_63920_errors = __jule_assign_result.__jule_result_arg1;
	});
	((*((*(_self_))._field_p))._field_errors).append(_63920_errors);;
	return _63913_parts;;
}



inline jule::Ptr<_1d6506c38_SliceExpr> _1d7145304_buildSlice(_1d713c3d9_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _64433_tokens) {
	jule::Ptr<_1d6506c38_SliceExpr> _64513_slc = jule::new_ptr<_1d6506c38_SliceExpr>(_1d6506c38_SliceExpr{._field_Token=_64433_tokens[0LL], ._field_End=_64433_tokens[(_64433_tokens.len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_1d64d5cd3_Token>>> _65013_parts = _1d7144eb3_getEnumerableParts(_self_, _64433_tokens);;
	if ((_65013_parts.len() == 0LL)) {
		return _64513_slc;;
	};
	(*(_64513_slc))._field_Exprs=jule::Slice<jule::Ptr<_1d6500715_Expr>>::alloc(0LL, _65013_parts.len());
	{
		auto expr = &(_65013_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1da7b4035:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _65621_p = *it;
			{
				if ((_65621_p.len() == 0LL)) {
					goto _iter_next_1da7b4035;
				};
				{ jule::Slice<jule::Ptr<_1d6500715_Expr>> &__jule_push_dest = (*(_64513_slc))._field_Exprs; __jule_push_dest.push(_1d7147768_buildFromTokens(_self_, _65621_p)); };
			}
			_iter_next_1da7b4035:;
			++it;
			goto _iter_begin_1da7b4035;
		}
		_iter_end_1da7b4035:;
	};
	return _64513_slc;;
}



inline jule::Ptr<_1d65076c8_IndexingExpr> _1d71457aa_buildIndexing(_1d713c3d9_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _66636_exprTokens, jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _66713_tokens, jule::Ptr<_1d64d5cd3_Token> _66735_errorToken) {
	jule::Ptr<_1d64d5cd3_Token> _66813_end = _66713_tokens[(_66713_tokens.len() - 1LL)];;
	(_66713_tokens).mut_slice(1LL, (_66713_tokens.len() - 1LL));;
	if ((_66713_tokens.len() == 0LL)) {
		_1d713cbc0_pushErr(_self_, _66735_errorToken, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1d6500715_Expr> _67413_expr = _1d7147768_buildFromTokens(_self_, _66636_exprTokens);;
	if ((_67413_expr == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1d6500715_Expr> _67813_index = _1d7147768_buildFromTokens(_self_, _66713_tokens);;
	if ((_67813_index == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1d65076c8_IndexingExpr>(_1d65076c8_IndexingExpr{._field_Token=_66735_errorToken, ._field_End=_66813_end, ._field_Expr=_67413_expr, ._field_Index=_67813_index});;
}



inline jule::Ptr<_1d6507d38_SlicingExpr> _1d7145dc6_buildSlicing(_1d713c3d9_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _69036_exprTokens, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _69063_start, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _69114_to, jule::Ptr<_1d64d5cd3_Token>* _69133_errorToken, jule::Ptr<_1d64d5cd3_Token> _69157_end) {
	jule::Ptr<_1d6507d38_SlicingExpr> _69213_slc = jule::new_ptr<_1d6507d38_SlicingExpr>(_1d6507d38_SlicingExpr{._field_Token=(*(_69133_errorToken)), ._field_End=_69157_end, ._field_Expr=_1d7147768_buildFromTokens(_self_, (*(_69036_exprTokens))), });;
	if (((*(_69063_start)).len() > 0LL)) {
		(*(_69213_slc))._field_Start=_1d7147768_buildFromTokens(_self_, (*(_69063_start)));
	};
	if (((*(_69114_to)).len() > 0LL)) {
		(*(_69213_slc))._field_To=_1d7147768_buildFromTokens(_self_, (*(_69114_to)));
	};
	return _69213_slc;;
}



inline jule::Any _1d7146217_buildBracketRange(_1d713c3d9_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _70640_tokens) {
	jule::Ptr<_1d64d5cd3_Token> _70713_errorToken = _70640_tokens[0LL];;
	jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _70813_exprTokens;;
	jule::I64 _70825_rangeN = 0;;
	({
		__jule_tuple_sx_1d64d5cd3_Token__jule_tuple_int __jule_assign_result = _1d7148e1d_getRangeExprTokens(&(_70640_tokens));
		_70813_exprTokens = __jule_assign_result.__jule_result_arg0;
		_70825_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	if ((_70813_exprTokens.len() == 0LL)) {
		return jule::Any(_1d7145304_buildSlice(_self_, _70640_tokens), &__jule_any_type93);;
	} else if ((_70825_rangeN > 0LL)) {
		_1d713cbc0_pushErr(_self_, _70713_errorToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_70640_tokens).mut_slice(_70813_exprTokens.len());;
	jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _72313_splitTokens = _70640_tokens.slice(1LL, (_70640_tokens.len() - 1LL));;
	jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _72413_start;;
	jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _72424_to;;
	({
		__jule_tuple_sx_1d64d5cd3_Token__jule_tuple_sx_1d64d5cd3_Token __jule_assign_result = _1d71485c1_splitDelim(&(_72313_splitTokens), static_cast<jule::U64>(8LLU));
		_72413_start = __jule_assign_result.__jule_result_arg0;
		_72424_to = __jule_assign_result.__jule_result_arg1;
	});
	if (((_72413_start != nullptr) || (_72424_to != nullptr))) {
		return jule::Any(_1d7145dc6_buildSlicing(_self_, &(_70813_exprTokens), &(_72413_start), &(_72424_to), &(_70713_errorToken), _70640_tokens[(_70640_tokens.len() - 1LL)]), &__jule_any_type104);;
	};
	return jule::Any(_1d71457aa_buildIndexing(_self_, _70813_exprTokens, _70640_tokens, _70713_errorToken), &__jule_any_type103);;
}



inline jule::Any _1d7146558_buildExclRight(_1d713c3d9_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _73138_tokens) {
	jule::Ptr<_1d64d5cd3_Token> _7329_token = (*(_73138_tokens))[((*(_73138_tokens)).len() - 1LL)];;
	((*(_73138_tokens))).mut_slice(0LL, ((*(_73138_tokens)).len() - 1LL));;
	jule::Any _73413_d = _1d71470d6_build(_self_, _73138_tokens);;
	if ((_73413_d == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _73413_d };
		
		if (_match_expr.type == &__jule_any_type107) {
			_case_begin_1da7c1a37:;
			{
				(*(_73413_d.cast_ptr<_1d650443e_FnCallExpr>(&__jule_any_type107)))._field_Exception=jule::new_ptr<_1d650b402_ScopeTree>(_1d650b402_ScopeTree{._field_Deferred=true, });
				return _73413_d;;
			}
		}
		_match_end_1da7c17c3:;
	};
	_1d713cbc0_pushErr(_self_, _7329_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1d7146899_buildData(_1d713c3d9_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _74933_tokens) {
	{
		auto _match_expr{ (*(_74933_tokens)).len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1da7c31cb:;
			{
				return nullptr;;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1da7c3242:;
			{
				return _1d713dd47_buildSingle(_self_, (*(_74933_tokens))[0LL]);;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1da7c32b9:;
			{
				if (((*((*(_74933_tokens))[0LL]))._field_Id == static_cast<jule::U64>(27LLU))) {
					return jule::Any(_1d713e188_buildBindIdent(_self_, _74933_tokens), &__jule_any_type79);;
				};
			}
		}
		_match_end_1da7c2ede:;
	};
	jule::Ptr<_1d64d5cd3_Token> _76113_token = (*(_74933_tokens))[((*(_74933_tokens)).len() - 1LL)];;
	if (((*(_76113_token))._field_Id == static_cast<jule::U64>(39LLU))) {
		return jule::Any(_1d714062e_buildVariadic(_self_, (*(_74933_tokens))), &__jule_any_type75);;
	};
	_76113_token=(*(_74933_tokens))[0LL];
	if (_1d64d6520_IsUnaryOp((*(_76113_token))._field_Id)) {
		if (((*(_74933_tokens)).len() > 1LL)) {
			_76113_token=(*(_74933_tokens))[1LL];
			if (((*(_76113_token))._field_Id == static_cast<jule::U64>(31LLU))) {
				return jule::Any(_1d713ee9c_buildType(_self_, _74933_tokens), &__jule_any_type88);;
			};
		};
		return jule::Any(_1d713e4c9_buildUnary(_self_, (*(_74933_tokens))), &__jule_any_type87);;
	};
	if (((*(_74933_tokens)).len() >= 3LL)) {
		{
			auto &_match_expr{ (*(_76113_token))._field_Id };
			
			if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
				_case_begin_1da7c79c7:;
				{
					if (((*(_74933_tokens)).len() > 3LL)) {
						jule::Ptr<_1d64d5cd3_Token> _78721_t = (*(_74933_tokens))[((*(_74933_tokens)).len() - 1LL)];;
						if (((*(_78721_t))._field_Id == static_cast<jule::U64>(75LLU))) {
							goto _match_end_1da7c791c;
						};
					};
					jule::Ptr<_1d64d5cd3_Token> _79317_next = (*(_74933_tokens))[1LL];;
					if (((*(_79317_next))._field_Id != static_cast<jule::U64>(77LLU))) {
						goto _match_end_1da7c791c;
					};
					return jule::Any(_1d713ee9c_buildType(_self_, _74933_tokens), &__jule_any_type88);;
				}
			}
			_match_end_1da7c791c:;
		};
	};
	_76113_token=(*(_74933_tokens))[((*(_74933_tokens)).len() - 1LL)];
	{
		auto &_match_expr{ (*(_76113_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1da7ca9ec:;
			{
				return _1d71402dd_buildSubIdent(_self_, _74933_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(68LLU)) {
			_case_begin_1da7caa63:;
			{
				return _1d7146558_buildExclRight(_self_, _74933_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(75LLU)) {
			_case_begin_1da7caac9:;
			{
				return _1d7142158_buildParenthesesRange(_self_, _74933_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1da7cab51:;
			{
				return _1d7144b72_buildBraceRange(_self_, _74933_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_1da7cabc8:;
			{
				return _1d7146217_buildBracketRange(_self_, (*(_74933_tokens)));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1da7cac50:;
			{
				return jule::Any(_1d713ee9c_buildType(_self_, _74933_tokens), &__jule_any_type88);;
			}
		}
		_match_end_1da7ca920:;
	};
	_1d713cbc0_pushErr(_self_, _76113_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1d7146c95_buildBinary(_1d713c3d9_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _82135_tokens, jule::I64 _82153_i) {
	jule::Ptr<_1d64d5cd3_Token> _82213_op = (*(_82135_tokens))[_82153_i];;
	jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _82313_leftTokens = (*(_82135_tokens)).slice(0LL, _82153_i);;
	if ((_1d7147b31_isTypeOp(&((*(_82213_op))._field_Id)) && _1d7147e3e_isTypeRange(&(_82313_leftTokens)))) {
		return jule::Any(_1d713ee9c_buildType(_self_, _82135_tokens), &__jule_any_type88);;
	};
	jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _82813_rightTokens = (*(_82135_tokens)).slice((_82153_i + 1LL));;
	if ((_82313_leftTokens.len() == 0LL)) {
		_1d713cbc0_pushErr(_self_, (*(_82135_tokens))[_82153_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1d713d033_pushSuggestion(_self_, jule::Str::lit("left operand expected for binary operator", 41), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_82813_rightTokens.len() == 0LL)) {
		_1d713cbc0_pushErr(_self_, (*(_82135_tokens))[_82153_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1d713d033_pushSuggestion(_self_, jule::Str::lit("right operand expected for binary operator", 42), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::Any(jule::new_ptr<_1d6503cce_BinaryExpr>(_1d6503cce_BinaryExpr{._field_Left=_1d7147768_buildFromTokens(_self_, _82313_leftTokens), ._field_Right=_1d7147768_buildFromTokens(_self_, _82813_rightTokens), ._field_Op=_82213_op}), &__jule_any_type109);;
}



inline jule::Any _1d71470d6_build(_1d713c3d9_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _84629_tokens) {
	if (((*((*(_84629_tokens))[0LL]))._field_Id == static_cast<jule::U64>(37LLU))) {
		return jule::Any(_1d713ee9c_buildType(_self_, _84629_tokens), &__jule_any_type88);;
	};
	jule::I64 _8509_i = _1d714888a_findLowestPrecOp(_84629_tokens);;
	if ((_8509_i == -1LL)) {
		return _1d7146899_buildData(_self_, _84629_tokens);;
	};
	return _1d7146c95_buildBinary(_self_, _84629_tokens, _8509_i);;
}



inline jule::Any _1d7147427_buildKind(_1d713c3d9_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _85733_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1d64d5cd3_Token>>> _85813_parts;;
	jule::Slice<_1e0235a7e_Log> _85820_errors;;
	({
		__jule_tuple_ssx_1d64d5cd3_Token__jule_tuple_s_1e0235a7e_Log __jule_assign_result = _1d714bb9b_parts(_85733_tokens, static_cast<jule::U64>(5LLU), true);
		_85813_parts = __jule_assign_result.__jule_result_arg0;
		_85820_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_85820_errors != nullptr)) {
		((*((*(_self_))._field_p))._field_errors).append(_85820_errors);;
		return nullptr;;
	} else if ((_85813_parts.len() > 1LL)) {
		return jule::Any(_1d713d374_buildTuple(_self_, &(_85813_parts)), &__jule_any_type80);;
	};
	return _1d71470d6_build(_self_, _85733_tokens);;
}



inline jule::Ptr<_1d6500715_Expr> _1d7147768_buildFromTokens(_1d713c3d9_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _86838_tokens) {
	if ((_86838_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Any _87213_kind = _1d7147427_buildKind(_self_, &(_86838_tokens));;
	if ((_87213_kind == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1d6500715_Expr>(_1d6500715_Expr{._field_Token=_86838_tokens[0LL], ._field_End=_86838_tokens[(_86838_tokens.len() - 1LL)], ._field_Kind=_87213_kind});;
}





std::ostream &operator<<(std::ostream &_Stream, _1d713c3d9_exprBuilder _Src) {
	_Stream << "exprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d714987a_assignInfo _Src) {
	_Stream << "assignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}



inline void _1d714d076_stop(_1d714cc79_parser* _self_) {
	(*(_self_))._field_ast=nullptr;
}



inline jule::Bool _1d714d30c_stopped(_1d714cc79_parser* _self_) {
	return ((*(_self_))._field_ast == nullptr);;
}



inline void _1d714d72a_pushErr(_1d714cc79_parser* _self_, jule::Ptr<_1d64d5cd3_Token> _22426_token, jule::Str _22441_fmt, jule::Slice<jule::Any> _22454_args) {
	{ jule::Slice<_1e0235a7e_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1d714c394_compilerErr(&(_22426_token), &(_22441_fmt), _22454_args)); };
}



inline void _1d714da8d_pushSuggestion(_1d714cc79_parser* _self_, jule::Str _22933_fmt, jule::Slice<jule::Any> _22946_args) {
	{
		_1d714c73a_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _22933_fmt, _22946_args);
	};
}



inline jule::Ptr<_1d6500715_Expr> _1d714ddce_buildExpr(jule::Ptr<_1d714cc79_parser> _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _23334_tokens) {
	return _1d7147768_buildFromTokens((*(_self_))._field_ep.ptr(), (*(_23334_tokens)));;
}



inline jule::Ptr<_1d64ea7ed_Directive> _1d714e220_buildDirective(_1d714cc79_parser* _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _23737_tokens) {
	if ((_23737_tokens.len() == 1LL)) {
		_1d714d72a_pushErr(_self_, _23737_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_23737_tokens[1LL]))._field_Column != ((*(_23737_tokens[0LL]))._field_Column + 1LL))) {
		_1d714d72a_pushErr(_self_, _23737_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1d64ea7ed_Directive>(_1d64ea7ed_Directive{._field_Tag=_23737_tokens[1LL], ._field_Args=_23737_tokens.slice(2LL)});;
}



inline void _1d714e4c8_pushDirective(_1d714cc79_parser* _self_, jule::Ptr<_1d64ea7ed_Directive> _25236_d) {
	if ((_25236_d == nullptr)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_directives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1da808530:;
		if (it != expr_end) {
			jule::Ptr<_1d64ea7ed_Directive> _25716_pd = *it;
			{
				if (((*((*(_25236_d))._field_Tag))._field_Kind == (*((*(_25716_pd))._field_Tag))._field_Kind)) {
					return;;
				};
			}
			_iter_next_1da808530:;
			++it;
			goto _iter_begin_1da808530;
		}
		_iter_end_1da808530:;
	};
	{ jule::Slice<jule::Ptr<_1d64ea7ed_Directive>> &__jule_push_dest = (*(_self_))._field_directives; __jule_push_dest.push(_25236_d); };
}



inline jule::Ptr<_1d650b402_ScopeTree> _1d714e8c4_buildScope(jule::Ptr<_1d714cc79_parser> _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _26535_tokens, jule::Ptr<_1d64d5cd3_Token> _26557_end) {
	jule::Ptr<_1d650b402_ScopeTree> _26613_s = _1d712cd9c_newScope();;
	(*(_26613_s))._field_End=_26557_end;
	_1d712e9b4_scopeParser _26813_sp = _1d712e9b4_scopeParser{._field_p=_self_, };;
	_1d713b86c_build(&_26813_sp, _26535_tokens, &(_26613_s));
	return _26613_s;;
}



inline __jule_tuple_x_1d64eb3d1_TypeDecl__jule_tuple_bool _1d714ed7a__buildType(jule::Ptr<_1d714cc79_parser> _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _27542_tokens, jule::I64* _27613_i, jule::Bool _27622_err) {
	__jule_tuple_x_1d64eb3d1_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	_1d715ee56_typeBuilder _27713_tb = _1d715ee56_typeBuilder{._field_p=_self_, ._field_tokens=(*(_27542_tokens)), ._field_i=_27613_i, ._field_err=_27622_err};;
	jule::Ptr<_1d64eb3d1_TypeDecl> _28313_decl;;
	jule::Bool _28319_ok = false;;
	({
		__jule_tuple_x_1d64eb3d1_TypeDecl__jule_tuple_bool __jule_assign_result = _1d7162e37_build(&_27713_tb);
		_28313_decl = __jule_assign_result.__jule_result_arg0;
		_28319_ok = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _28313_decl;
	__jule_func_result.__jule_result_arg1 = _28319_ok;
	return __jule_func_result;;
}



inline __jule_tuple_x_1d64eb3d1_TypeDecl__jule_tuple_bool _1d7150331_buildType(jule::Ptr<_1d714cc79_parser> _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _28841_tokens, jule::I64* _28913_i, jule::Bool _28922_err) {
	__jule_tuple_x_1d64eb3d1_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1d64d5cd3_Token> _2909_token = (*(_28841_tokens))[(*(_28913_i))];;
	jule::Ptr<_1d64eb3d1_TypeDecl> _29113_t;;
	jule::Bool _29116_ok = false;;
	({
		__jule_tuple_x_1d64eb3d1_TypeDecl__jule_tuple_bool __jule_assign_result = _1d714ed7a__buildType(_self_, _28841_tokens, _28913_i, _28922_err);
		_29113_t = __jule_assign_result.__jule_result_arg0;
		_29116_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((_28922_err && (!(_29116_ok)))) {
		_1d714d72a_pushErr(_self_.ptr(), _2909_token, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
	};
	__jule_func_result.__jule_result_arg0 = _29113_t;
	__jule_func_result.__jule_result_arg1 = _29116_ok;
	return __jule_func_result;;
}



inline jule::Ptr<_1d6512ded_TypeAliasDecl> _1d7150672_buildTypeAliasDecl(jule::Ptr<_1d714cc79_parser> _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _29843_tokens) {
	jule::I64 _29913_i = 1LL;;
	if ((_29913_i >= (*(_29843_tokens)).len())) {
		_1d714d72a_pushErr(_self_.ptr(), (*(_29843_tokens))[(_29913_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1d6512ded_TypeAliasDecl> _30413_tad = jule::new_ptr<_1d6512ded_TypeAliasDecl>(_1d6512ded_TypeAliasDecl{._field_Token=(*(_29843_tokens))[1LL], ._field_Ident=(*((*(_29843_tokens))[1LL]))._field_Kind, });;
	jule::Ptr<_1d64d5cd3_Token> _30813_token = (*(_29843_tokens))[_29913_i];;
	if (((*(_30813_token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1d714d72a_pushErr(_self_.ptr(), _30813_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1d714da8d_pushSuggestion(_self_.ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(_29913_i)++;
	if ((_29913_i >= (*(_29843_tokens)).len())) {
		_1d714d72a_pushErr(_self_.ptr(), (*(_29843_tokens))[(_29913_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return _30413_tad;;
	};
	_30813_token=(*(_29843_tokens))[_29913_i];
	if (((*(_30813_token))._field_Id != static_cast<jule::U64>(8LLU))) {
		_1d714d72a_pushErr(_self_.ptr(), (*(_29843_tokens))[(_29913_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1d714da8d_pushSuggestion(_self_.ptr(), jule::Str::lit("expected colon \":\"", 18), jule::Slice<jule::Any>());
		return _30413_tad;;
	};
	(_29913_i)++;
	if ((_29913_i >= (*(_29843_tokens)).len())) {
		_1d714d72a_pushErr(_self_.ptr(), (*(_29843_tokens))[(_29913_i - 1LL)], jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
		return _30413_tad;;
	};
	jule::Ptr<_1d64eb3d1_TypeDecl> _32913_t;;
	jule::Bool _32916_ok = false;;
	({
		__jule_tuple_x_1d64eb3d1_TypeDecl__jule_tuple_bool __jule_assign_result = _1d7150331_buildType(_self_, _29843_tokens, (&(_29913_i)), true);
		_32913_t = __jule_assign_result.__jule_result_arg0;
		_32916_ok = __jule_assign_result.__jule_result_arg1;
	});
	(*(_30413_tad))._field_Kind=_32913_t;
	if ((_32916_ok && (_29913_i < (*(_29843_tokens)).len()))) {
		_1d714d72a_pushErr(_self_.ptr(), (*(_29843_tokens))[_29913_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*(_30413_tad))._field_Public=_1d65b2d7c_IsPub((*(_30413_tad))._field_Ident);
	return _30413_tad;;
}



inline void _1d71509d5_buildVarTypeAndExpr(jule::Ptr<_1d714cc79_parser> _self_, jule::Ptr<_1d650e24b_VarDecl>* _33844_v, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _33862_tokens) {
	jule::I64 _33913_i = 0LL;;
	jule::Ptr<_1d64d5cd3_Token> _34013_tok = (*(_33862_tokens))[_33913_i];;
	if (((*(_34013_tok))._field_Id == static_cast<jule::U64>(8LLU))) {
		(_33913_i)++;
		if (((_33913_i >= (*(_33862_tokens)).len()) || ((*((*(_33862_tokens))[_33913_i]))._field_Id == static_cast<jule::U64>(71LLU)))) {
			_1d714d72a_pushErr(_self_.ptr(), _34013_tok, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
			return;;
		};
		jule::Ptr<_1d64eb3d1_TypeDecl> _34717_t;;
		jule::Bool _34720_ok = false;;
		({
			__jule_tuple_x_1d64eb3d1_TypeDecl__jule_tuple_bool __jule_assign_result = _1d7150331_buildType(_self_, _33862_tokens, (&(_33913_i)), true);
			_34717_t = __jule_assign_result.__jule_result_arg0;
			_34720_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_34720_ok) {
			(*((*(_33844_v))))._field_Kind=_34717_t;
			if ((_33913_i >= (*(_33862_tokens)).len())) {
				return;;
			};
			_34013_tok=(*(_33862_tokens))[_33913_i];
		};
	};
	if (((*(_34013_tok))._field_Id != static_cast<jule::U64>(71LLU))) {
		_1d714d72a_pushErr(_self_.ptr(), _34013_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_33844_v))))._field_Setter=_34013_tok;
	jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _36313_exprTokens = (*(_33862_tokens)).slice((_33913_i + 1LL));;
	if ((_36313_exprTokens.len() == 0LL)) {
		_1d714d72a_pushErr(_self_.ptr(), _34013_tok, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_33844_v))))._field_Expr=_1d714ddce_buildExpr(_self_, &(_36313_exprTokens));
}



inline void _1d7150d48_buildVarCommon(jule::Ptr<_1d714cc79_parser> _self_, jule::Ptr<_1d650e24b_VarDecl>* _37139_v, jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _37156_tokens) {
	(*((*(_37139_v))))._field_Token=_37156_tokens[0LL];
	if (((*((*((*(_37139_v))))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1d714d72a_pushErr(_self_.ptr(), (*((*(_37139_v))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1d714da8d_pushSuggestion(_self_.ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_37139_v))))._field_Ident=(*((*((*(_37139_v))))._field_Token))._field_Kind;
	(*((*(_37139_v))))._field_Public=_1d65b2d7c_IsPub((*((*(_37139_v))))._field_Ident);
	(*((*(_37139_v))))._field_Kind=nullptr;
	if ((_37156_tokens.len() > 1LL)) {
		(_37156_tokens).mut_slice(1LL);;
		_1d71509d5_buildVarTypeAndExpr(_self_, _37139_v, &(_37156_tokens));
	};
}



inline void _1d7151266_buildVarBegin(_1d714cc79_parser* _self_, jule::Ptr<_1d650e24b_VarDecl>* _38737_v, jule::I64* _38755_i, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _38764_tokens) {
	jule::Ptr<_1d64d5cd3_Token> _3889_tok = (*(_38764_tokens))[(*(_38755_i))];;
	{
		auto &_match_expr{ (*(_3889_tok))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1da82354a:;
			{
				(*((*(_38737_v))))._field_Statically=true;
				goto _case_begin_1da82442a;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1da82442a:;
			{
				((*(_38755_i)))++;
				if (((*(_38755_i)) >= (*(_38764_tokens)).len())) {
					_1d714d72a_pushErr(_self_, _3889_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				if (((*((*(_38764_tokens))[(*(_38755_i))]))._field_Id == static_cast<jule::U64>(32LLU))) {
					(*((*(_38737_v))))._field_Mutable=true;
					((*(_38755_i)))++;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1da823b66:;
			{
				((*(_38755_i)))++;
				(*((*(_38737_v))))._field_Constant=true;
			}
		}
		else {
			_case_begin_1da823b00:;
			{
				_1d714d72a_pushErr(_self_, _3889_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1da823a9a:;
	};
	if (((*(_38755_i)) >= (*(_38764_tokens)).len())) {
		_1d714d72a_pushErr(_self_, _3889_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1d650e24b_VarDecl> _1d71515a7_buildVar(jule::Ptr<_1d714cc79_parser> _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _41732_tokens) {
	jule::I64 _41813_i = 0LL;;
	jule::Ptr<_1d650e24b_VarDecl> _41913_v = jule::new_ptr<_1d650e24b_VarDecl>(_1d650e24b_VarDecl{._field_Token=_41732_tokens[0LL], });;
	_1d7151266_buildVarBegin(_self_.ptr(), &(_41913_v), &(_41813_i), &(_41732_tokens));
	if ((_41813_i >= _41732_tokens.len())) {
		return nullptr;;
	};
	(_41732_tokens).mut_slice(_41813_i);;
	if (((*(_41732_tokens[0LL]))._field_Id == static_cast<jule::U64>(65LLU))) {
		(*(_41913_v))._field_Reference=true;
		if ((_41732_tokens.len() == 1LL)) {
			return nullptr;;
		};
		(_41732_tokens).mut_slice(1LL);;
	};
	_1d7150d48_buildVarCommon(_self_, &(_41913_v), _41732_tokens);
	return _41913_v;;
}



inline jule::Ptr<_1d65085db_GenericDecl> _1d71518e8_buildGeneric(jule::Ptr<_1d714cc79_parser> _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _43937_tokens) {
	jule::Ptr<_1d65085db_GenericDecl> _44013_g = jule::new_ptr<_1d65085db_GenericDecl>(_1d65085db_GenericDecl{._field_Token=(*(_43937_tokens))[0LL], });;
	if (((*((*(_44013_g))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1d714d72a_pushErr(_self_.ptr(), (*(_44013_g))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1d714da8d_pushSuggestion(_self_.ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*(_44013_g))._field_Ident=(*((*(_44013_g))._field_Token))._field_Kind;
	if (((*(_43937_tokens)).len() > 1LL)) {
		if (((*((*(_43937_tokens))[1LL]))._field_Id != static_cast<jule::U64>(8LLU))) {
			_1d714d72a_pushErr(_self_.ptr(), (*(_43937_tokens))[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		if (((*(_43937_tokens)).len() == 2LL)) {
			_1d714d72a_pushErr(_self_.ptr(), (*(_43937_tokens))[1LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
			return nullptr;;
		};
		jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _45717_constraintTokens = (*(_43937_tokens)).slice(2LL);;
		jule::Slice<jule::Slice<jule::Ptr<_1d64d5cd3_Token>>> _45817_parts;;
		jule::Slice<_1e0235a7e_Log> _45824_errors;;
		({
			__jule_tuple_ssx_1d64d5cd3_Token__jule_tuple_s_1e0235a7e_Log __jule_assign_result = _1d714bb9b_parts(&(_45717_constraintTokens), static_cast<jule::U64>(66LLU), true);
			_45817_parts = __jule_assign_result.__jule_result_arg0;
			_45824_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_45824_errors.len() > 0LL)) {
			((*(_self_))._field_errors).append(_45824_errors);;
			return nullptr;;
		};
		(*(_44013_g))._field_Constraint=jule::new_ptr<_1d6508135_Constraint>(_1d6508135_Constraint{._field_Mask=jule::Slice<jule::Ptr<_1d64eb3d1_TypeDecl>>::alloc(0LL, _45817_parts.len())});
		{
			auto expr = &(_45817_parts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1da8363e8:;
			if (it != expr_end) {
				jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _46425_part = *it;
				{
					jule::I64 _46521_i = 0LL;;
					jule::Ptr<_1d64eb3d1_TypeDecl> _46621_kind;;
					({
						__jule_tuple_x_1d64eb3d1_TypeDecl__jule_tuple_bool __jule_assign_result = _1d7150331_buildType(_self_, &(_46425_part), (&(_46521_i)), true);
						_46621_kind = __jule_assign_result.__jule_result_arg0;
					});
					{ jule::Slice<jule::Ptr<_1d64eb3d1_TypeDecl>> &__jule_push_dest = (*((*(_44013_g))._field_Constraint))._field_Mask; __jule_push_dest.push(_46621_kind); };
					if ((_46521_i < _46425_part.len())) {
						_1d714d72a_pushErr(_self_.ptr(), _46425_part[_46521_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					};
				}
				_iter_next_1da8363e8:;
				++it;
				goto _iter_begin_1da8363e8;
			}
			_iter_end_1da8363e8:;
		};
	};
	return _44013_g;;
}



inline jule::Slice<jule::Ptr<_1d65085db_GenericDecl>> _1d7151ce4_buildGenerics(jule::Ptr<_1d714cc79_parser> _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _47638_tokens, jule::Ptr<_1d64d5cd3_Token>* _47657_errorToken) {
	if (((*(_47638_tokens)).len() == 0LL)) {
		_1d714d72a_pushErr(_self_.ptr(), (*(_47657_errorToken)), jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1d64d5cd3_Token>>> _48213_parts;;
	jule::Slice<_1e0235a7e_Log> _48220_errors;;
	({
		__jule_tuple_ssx_1d64d5cd3_Token__jule_tuple_s_1e0235a7e_Log __jule_assign_result = _1d714bb9b_parts(_47638_tokens, static_cast<jule::U64>(5LLU), true);
		_48213_parts = __jule_assign_result.__jule_result_arg0;
		_48220_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_48220_errors.len() > 0LL)) {
		((*(_self_))._field_errors).append(_48220_errors);;
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1d65085db_GenericDecl>> _48813_generics = jule::Slice<jule::Ptr<_1d65085db_GenericDecl>>::alloc(0LL, _48213_parts.len());;
	{
		auto expr = &(_48213_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1da83a496:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _48921_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1d65085db_GenericDecl>> &__jule_push_dest = _48813_generics; __jule_push_dest.push(_1d71518e8_buildGeneric(_self_, &(_48921_part))); };
			}
			_iter_next_1da83a496:;
			++it;
			goto _iter_begin_1da83a496;
		}
		_iter_end_1da83a496:;
	};
	return _48813_generics;;
}



inline jule::Ptr<_1d650bb3e_ParamDecl> _1d7152135_buildSelfParam(_1d714cc79_parser* _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _49637_tokens) {
	if ((_49637_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1d650bb3e_ParamDecl> _50113_param = jule::new_ptr<_1d650bb3e_ParamDecl>();;
	jule::I64 _50413_i = 0LL;;
	if (((*(_49637_tokens[_50413_i]))._field_Id == static_cast<jule::U64>(32LLU))) {
		(*(_50113_param))._field_Mutable=true;
		(_50413_i)++;
		if ((_50413_i >= _49637_tokens.len())) {
			_1d714d72a_pushErr(_self_, _49637_tokens[(_50413_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	_1e01838bc_StrBuilder _51413_ident = static__1e0183b64_New(5LL);;
	if (((*(_49637_tokens[_50413_i]))._field_Id == static_cast<jule::U64>(65LLU))) {
		_1e018c6ea_WriteStr(&_51413_ident, jule::Str::lit("&", 1));
		(_50413_i)++;
		if ((_50413_i >= _49637_tokens.len())) {
			_1d714d72a_pushErr(_self_, _49637_tokens[(_50413_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	if (((*(_49637_tokens[_50413_i]))._field_Id == static_cast<jule::U64>(24LLU))) {
		_1e018c6ea_WriteStr(&_51413_ident, jule::Str::lit("self", 4));
		(*(_50113_param))._field_Token=_49637_tokens[_50413_i];
		(_50413_i)++;
		if ((_50413_i < _49637_tokens.len())) {
			_1d714d72a_pushErr(_self_, _49637_tokens[_50413_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		};
	};
	(*(_50113_param))._field_Ident=_1e018cee2_Str(&_51413_ident);
	return _50113_param;;
}



inline void _1d7152553_paramTypeBegin(_1d714cc79_parser* _self_, jule::Ptr<_1d650bb3e_ParamDecl>* _53838_param, jule::I64* _53862_i, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _53871_tokens) {
	for (; ((*(_53862_i)) < (*(_53871_tokens)).len()); ((*(_53862_i)))++) {
		{
			jule::Ptr<_1d64d5cd3_Token> _54013_token = (*(_53871_tokens))[(*(_53862_i))];;
			if (((*(_54013_token))._field_Id != static_cast<jule::U64>(39LLU))) {
				return;;
			};
			if ((*((*(_53838_param))))._field_Variadic) {
				_1d714d72a_pushErr(_self_, _54013_token, jule::Str::lit("define is already variadic", 26), jule::Slice<jule::Any>());
				goto _iter_next_1da8436ad;
			};
			(*((*(_53838_param))))._field_Variadic=true;
		}
	_iter_next_1da8436ad:;
	}
	_iter_end_1da8436ad:;;
}



inline void _1d71528b6_buildParamType(jule::Ptr<_1d714cc79_parser> _self_, jule::Ptr<_1d650bb3e_ParamDecl>* _55339_param, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _55363_tokens) {
	jule::I64 _55413_i = 0LL;;
	_1d7152553_paramTypeBegin(_self_.ptr(), _55339_param, &(_55413_i), _55363_tokens);
	if ((_55413_i >= (*(_55363_tokens)).len())) {
		return;;
	};
	({
		__jule_tuple_x_1d64eb3d1_TypeDecl__jule_tuple_bool __jule_assign_result = _1d7150331_buildType(_self_, _55363_tokens, (&(_55413_i)), true);
		(*((*(_55339_param))))._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_55413_i < (*(_55363_tokens)).len())) {
		_1d714d72a_pushErr(_self_.ptr(), (*(_55363_tokens))[_55413_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1d7152c29_buildParamBody(jule::Ptr<_1d714cc79_parser> _self_, jule::Ptr<_1d650bb3e_ParamDecl>* _56639_param, jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _56662_tokens) {
	jule::Ptr<_1d64d5cd3_Token> _56713_tok = _56662_tokens[0LL];;
	if ((_56662_tokens.len() == 1LL)) {
		(*((*(_56639_param))))._field_Ident=(*(_56713_tok))._field_Kind;
		return;;
	} else if ((_56662_tokens.len() < 3LL)) {
		_1d714d72a_pushErr(_self_.ptr(), _56713_tok, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_56662_tokens[1LL]))._field_Id != static_cast<jule::U64>(8LLU))) {
		(*((*(_56639_param))))._field_Ident=jule::Str::lit("<anonymous>", 11);
		_1d71528b6_buildParamType(_self_, _56639_param, &(_56662_tokens));
		return;;
	};
	(*((*(_56639_param))))._field_Ident=(*(_56713_tok))._field_Kind;
	(_56662_tokens).mut_slice(2LL);;
	_1d71528b6_buildParamType(_self_, _56639_param, &(_56662_tokens));
}



inline jule::Ptr<_1d650bb3e_ParamDecl> _1d715306a_buildParam(jule::Ptr<_1d714cc79_parser> _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _58634_tokens) {
	jule::Ptr<_1d650bb3e_ParamDecl> _58713_param = jule::new_ptr<_1d650bb3e_ParamDecl>(_1d650bb3e_ParamDecl{._field_Token=_58634_tokens[0LL], });;
	if (((*((*(_58713_param))._field_Token))._field_Id == static_cast<jule::U64>(32LLU))) {
		(*(_58713_param))._field_Mutable=true;
		if ((_58634_tokens.len() == 1LL)) {
			_1d714d72a_pushErr(_self_.ptr(), _58634_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_58634_tokens).mut_slice(1LL);;
		(*(_58713_param))._field_Token=_58634_tokens[0LL];
	};
	if ((_58634_tokens.len() >= 3LL)) {
		if (((*((*(_58713_param))._field_Token))._field_Id == static_cast<jule::U64>(65LLU))) {
			if ((_58634_tokens.len() == 1LL)) {
				_1d714d72a_pushErr(_self_.ptr(), _58634_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			};
			if ((((*(_58634_tokens[1LL]))._field_Id == static_cast<jule::U64>(1LLU)) && ((*(_58634_tokens[2LL]))._field_Id == static_cast<jule::U64>(8LLU)))) {
				(*(_58713_param))._field_Reference=true;
				(_58634_tokens).mut_slice(1LL);;
				(*(_58713_param))._field_Token=_58634_tokens[0LL];
			};
		};
	};
	if (((*((*(_58713_param))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		(*(_58713_param))._field_Ident=jule::Str::lit("<anonymous>", 11);
		_1d71528b6_buildParamType(_self_, &(_58713_param), &(_58634_tokens));
	} else {
		_1d7152c29_buildParamBody(_self_, &(_58713_param), _58634_tokens);
	};
	return _58713_param;;
}



inline void _1d7153323_checkParams(_1d714cc79_parser* _self_, jule::Slice<jule::Ptr<_1d650bb3e_ParamDecl>>* _62935_params) {
	{
		auto expr = _62935_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1da853536:;
		if (it != expr_end) {
			jule::Ptr<_1d650bb3e_ParamDecl> _63021_param = *it;
			{
				if ((_1d650beb3_IsSelf(_63021_param.ptr()) || ((*(_63021_param))._field_Kind != nullptr))) {
					goto _iter_next_1da853536;
				};
				if (((*(_63021_param))._field_Token == nullptr)) {
					_1d714d72a_pushErr(_self_, (*(_63021_param))._field_Token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
				} else {
					(*(_63021_param))._field_Kind=jule::new_ptr<_1d64eb3d1_TypeDecl>(_1d64eb3d1_TypeDecl{._field_Token=(*(_63021_param))._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1d64eb9db_IdentTypeDecl>(_1d64eb9db_IdentTypeDecl{._field_Token=(*(_63021_param))._field_Token, ._field_Ident=(*((*(_63021_param))._field_Token))._field_Kind, }), &__jule_any_type20)});
					(*(_63021_param))._field_Ident=jule::Str::lit("<anonymous>", 11);
				};
			}
			_iter_next_1da853536:;
			++it;
			goto _iter_begin_1da853536;
		}
		_iter_end_1da853536:;
	};
}



inline jule::Slice<jule::Ptr<_1d650bb3e_ParamDecl>> _1d715371e_buildParams(jule::Ptr<_1d714cc79_parser> _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _64936_tokens, jule::Bool _64954_method) {
	jule::Slice<jule::Slice<jule::Ptr<_1d64d5cd3_Token>>> _65013_parts;;
	jule::Slice<_1e0235a7e_Log> _65020_errs;;
	({
		__jule_tuple_ssx_1d64d5cd3_Token__jule_tuple_s_1e0235a7e_Log __jule_assign_result = _1d714bb9b_parts(_64936_tokens, static_cast<jule::U64>(5LLU), true);
		_65013_parts = __jule_assign_result.__jule_result_arg0;
		_65020_errs = __jule_assign_result.__jule_result_arg1;
	});
	((*(_self_))._field_errors).append(_65020_errs);;
	if ((_65013_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1d650bb3e_ParamDecl>> _65617_params = nullptr;;
	if ((_64954_method && (_65013_parts.len() > 0LL))) {
		jule::Ptr<_1d650bb3e_ParamDecl> _65817_param = _1d7152135_buildSelfParam(_self_.ptr(), _65013_parts[0LL]);;
		if (((_65817_param != nullptr) && _1d650beb3_IsSelf(_65817_param.ptr()))) {
			{ jule::Slice<jule::Ptr<_1d650bb3e_ParamDecl>> &__jule_push_dest = _65617_params; __jule_push_dest.push(_65817_param); };
			(_65013_parts).mut_slice(1LL);;
		};
	};
	{
		auto expr = &(_65013_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1da8586b2:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _66521_part = *it;
			{
				jule::Ptr<_1d650bb3e_ParamDecl> _66617_param = _1d715306a_buildParam(_self_, _66521_part);;
				if ((_66617_param != nullptr)) {
					{ jule::Slice<jule::Ptr<_1d650bb3e_ParamDecl>> &__jule_push_dest = _65617_params; __jule_push_dest.push(_66617_param); };
				};
			}
			_iter_next_1da8586b2:;
			++it;
			goto _iter_begin_1da8586b2;
		}
		_iter_end_1da8586b2:;
	};
	_1d7153323_checkParams(_self_.ptr(), &(_65617_params));
	return _65617_params;;
}



inline __jule_tuple_x_1d64ee2c4_RetTypeDecl__jule_tuple_bool _1d7153b1a_buildMultiRetType(jule::Ptr<_1d714cc79_parser> _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _67642_tokens, jule::I64* _67665_i) {
	__jule_tuple_x_1d64ee2c4_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1d64ee2c4_RetTypeDecl>();
	((*(_67665_i)))++;
	if (((*(_67665_i)) >= (*(_67642_tokens)).len())) {
		((*(_67665_i)))--;
		({
			__jule_tuple_x_1d64eb3d1_TypeDecl__jule_tuple_bool __jule_assign_result = _1d7150331_buildType(_self_, _67642_tokens, _67665_i, false);
			(*(__jule_func_result.__jule_result_arg0))._field_Kind = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
		});
		return __jule_func_result;;
	};
	((*(_67665_i)))--;
	jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _68613_rangeTokens = _1d714b42b_range(_67665_i, static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _67642_tokens);;
	jule::Slice<jule::Slice<jule::Ptr<_1d64d5cd3_Token>>> _68813_parts;;
	jule::Slice<_1e0235a7e_Log> _68820_errs;;
	({
		__jule_tuple_ssx_1d64d5cd3_Token__jule_tuple_s_1e0235a7e_Log __jule_assign_result = _1d714bb9b_parts(&(_68613_rangeTokens), static_cast<jule::U64>(5LLU), true);
		_68813_parts = __jule_assign_result.__jule_result_arg0;
		_68820_errs = __jule_assign_result.__jule_result_arg1;
	});
	((*(_self_))._field_errors).append(_68820_errs);;
	if ((_68813_parts.len() == 0LL)) {
		return __jule_func_result;;
	};
	jule::Slice<jule::Ptr<_1d64eb3d1_TypeDecl>> _69413_types = jule::Slice<jule::Ptr<_1d64eb3d1_TypeDecl>>::alloc(0LL, _68813_parts.len());;
	(*(__jule_func_result.__jule_result_arg0))._field_Idents=jule::Slice<jule::Ptr<_1d64d5cd3_Token>>::alloc(0LL, _68813_parts.len());
	{
		auto expr = &(_68813_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1da860565:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _69621_part = *it;
			{
				jule::Ptr<_1d64d5cd3_Token> _69717_token = _69621_part[0LL];;
				jule::I64 _69817_offset = 0LL;;
				if ((_69621_part.len() > 1LL)) {
					_69717_token=_69621_part[1LL];
					if (((*(_69717_token))._field_Id == static_cast<jule::U64>(8LLU))) {
						_69817_offset=2LL;
						if ((_69621_part.len() < 3LL)) {
							_1d714d72a_pushErr(_self_.ptr(), _69717_token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
							goto _iter_next_1da860565;
						};
					};
				};
				_69717_token=_69621_part[0LL];
				if ((_69817_offset != 2LL)) {
					jule::Ptr<_1d64d5cd3_Token> _71421_newToken = jule::new_ptr<_1d64d5cd3_Token>((*(_69717_token)));;
					(*(_71421_newToken))._field_Kind=jule::Str::lit("<anonymous>", 11);
					{ jule::Slice<jule::Ptr<_1d64d5cd3_Token>> &__jule_push_dest = (*(__jule_func_result.__jule_result_arg0))._field_Idents; __jule_push_dest.push(_71421_newToken); };
				} else {
					{ jule::Slice<jule::Ptr<_1d64d5cd3_Token>> &__jule_push_dest = (*(__jule_func_result.__jule_result_arg0))._field_Idents; __jule_push_dest.push(_69717_token); };
				};
				jule::Ptr<_1d64eb3d1_TypeDecl> _72117_tk;;
				({
					__jule_tuple_x_1d64eb3d1_TypeDecl__jule_tuple_bool __jule_assign_result = _1d7150331_buildType(_self_, &(_69621_part), (&(_69817_offset)), true);
					_72117_tk = __jule_assign_result.__jule_result_arg0;
				});
				if ((_69817_offset < _69621_part.len())) {
					_1d714d72a_pushErr(_self_.ptr(), _69621_part[_69817_offset], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				{ jule::Slice<jule::Ptr<_1d64eb3d1_TypeDecl>> &__jule_push_dest = _69413_types; __jule_push_dest.push(_72117_tk); };
			}
			_iter_next_1da860565:;
			++it;
			goto _iter_begin_1da860565;
		}
		_iter_end_1da860565:;
	};
	if ((_69413_types.len() > 1LL)) {
		(*(__jule_func_result.__jule_result_arg0))._field_Kind=jule::new_ptr<_1d64eb3d1_TypeDecl>(_1d64eb3d1_TypeDecl{._field_Token=(*(_67642_tokens))[0LL], ._field_Kind=jule::Any(jule::new_ptr<_1d64ecb0d_TupleTypeDecl>(_1d64ecb0d_TupleTypeDecl{._field_Types=_69413_types}), &__jule_any_type74)});
	} else {
		(*(__jule_func_result.__jule_result_arg0))._field_Kind=_69413_types[0LL];
	};
	__jule_func_result.__jule_result_arg1=true;
	return __jule_func_result;;
}



inline __jule_tuple_x_1d64ee2c4_RetTypeDecl__jule_tuple_bool _1d7154016_buildRetType(jule::Ptr<_1d714cc79_parser> _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _74437_tokens, jule::I64* _74460_i) {
	__jule_tuple_x_1d64ee2c4_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1d64ee2c4_RetTypeDecl>();
	if (((*(_74460_i)) >= (*(_74437_tokens)).len())) {
		return __jule_func_result;;
	};
	jule::Ptr<_1d64d5cd3_Token> _75013_token = (*(_74437_tokens))[(*(_74460_i))];;
	{
		auto &_match_expr{ (*(_75013_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_1da868ddc:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(71LLU)) {
			_case_begin_1da868e64:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(8LLU)) {
			_case_begin_1da868edb:;
			{
				if ((((*(_74460_i)) + 1LL) >= (*(_74437_tokens)).len())) {
					_1d714d72a_pushErr(_self_.ptr(), _75013_token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
					return __jule_func_result;;
				};
				((*(_74460_i)))++;
				_75013_token=(*(_74437_tokens))[(*(_74460_i))];
				{
					auto &_match_expr{ (*(_75013_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1da86ac79:;
						{
							({
								__jule_tuple_x_1d64ee2c4_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1d7153b1a_buildMultiRetType(_self_, _74437_tokens, _74460_i);
								__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
								__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
							});
							return __jule_func_result;;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1da86ad01:;
						{
							_1d714d72a_pushErr(_self_.ptr(), _75013_token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
							return __jule_func_result;;
						}
					}
					_match_end_1da86ac13:;
				};
				({
					__jule_tuple_x_1d64eb3d1_TypeDecl__jule_tuple_bool __jule_assign_result = _1d7150331_buildType(_self_, _74437_tokens, _74460_i, true);
					(*(__jule_func_result.__jule_result_arg0))._field_Kind = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
				return __jule_func_result;;
			}
		}
		_match_end_1da868d65:;
	};
	((*(_74460_i)))++;
	_1d714d72a_pushErr(_self_.ptr(), _75013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return __jule_func_result;;
}



inline jule::Ptr<_1d650d091_FnDecl> _1d71544bc_buildFnPrototype(jule::Ptr<_1d714cc79_parser> _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _78341_tokens, jule::I64* _78364_i, jule::Bool _78372_method) {
	jule::Ptr<_1d650d091_FnDecl> _78413_f = jule::new_ptr<_1d650d091_FnDecl>(_1d650d091_FnDecl{._field_Token=(*(_78341_tokens))[(*(_78364_i))], });;
	if (((*((*(_78413_f))._field_Token))._field_Id == static_cast<jule::U64>(34LLU))) {
		(*(_78413_f))._field_Statically=true;
		((*(_78364_i)))++;
		if (((*(_78364_i)) >= (*(_78341_tokens)).len())) {
			_1d714d72a_pushErr(_self_.ptr(), (*(_78413_f))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*(_78413_f))._field_Token=(*(_78341_tokens))[(*(_78364_i))];
	};
	if (((*((*(_78413_f))._field_Token))._field_Id == static_cast<jule::U64>(31LLU))) {
		(*(_78413_f))._field_Unsafety=true;
		((*(_78364_i)))++;
		if (((*(_78364_i)) >= (*(_78341_tokens)).len())) {
			_1d714d72a_pushErr(_self_.ptr(), (*(_78413_f))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*(_78413_f))._field_Token=(*(_78341_tokens))[(*(_78364_i))];
	};
	((*(_78364_i)))++;
	if (((*(_78364_i)) >= (*(_78341_tokens)).len())) {
		_1d714d72a_pushErr(_self_.ptr(), (*(_78413_f))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1d64d5cd3_Token> _8179_tok = (*(_78341_tokens))[(*(_78364_i))];;
	if (((*(_8179_tok))._field_Id == static_cast<jule::U64>(1LLU))) {
		((*(_78364_i)))++;
		if (((*(_78364_i)) >= (*(_78341_tokens)).len())) {
			_1d714d72a_pushErr(_self_.ptr(), (*(_78413_f))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*(_78413_f))._field_Ident=(*(_8179_tok))._field_Kind;
	} else {
		(*(_78413_f))._field_Ident=jule::Str::lit("<anonymous>", 11);
	};
	jule::Ptr<_1d64d5cd3_Token> _8299_errorToken = (*(_78341_tokens))[(*(_78364_i))];;
	jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _83013_genericsTokens = _1d714b42b_range(_78364_i, static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), _78341_tokens);;
	if ((_83013_genericsTokens != nullptr)) {
		(*(_78413_f))._field_Generics=_1d7151ce4_buildGenerics(_self_, &(_83013_genericsTokens), &(_8299_errorToken));
	};
	if (((*((*(_78341_tokens))[(*(_78364_i))]))._field_Id != static_cast<jule::U64>(74LLU))) {
		_1d714d72a_pushErr(_self_.ptr(), (*(_78341_tokens))[(*(_78364_i))], jule::Str::lit("missing function parentheses", 28), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _84013_paramsToks = _1d714b42b_range(_78364_i, static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _78341_tokens);;
	if ((_84013_paramsToks.len() > 0LL)) {
		(*(_78413_f))._field_Params=_1d715371e_buildParams(_self_, &(_84013_paramsToks), _78372_method);
	};
	if (((*(_78364_i)) < (*(_78341_tokens)).len())) {
		jule::Ptr<_1d64d5cd3_Token> _84613_token = (*(_78341_tokens))[(*(_78364_i))];;
		if (((*(_84613_token))._field_Id == static_cast<jule::U64>(68LLU))) {
			(*(_78413_f))._field_Exceptional=true;
			((*(_78364_i)))++;
		};
	};
	(*(_78413_f))._field_Public=_1d65b2d7c_IsPub((*(_78413_f))._field_Ident);
	({
		__jule_tuple_x_1d64ee2c4_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1d7154016_buildRetType(_self_, _78341_tokens, _78364_i);
		(*(_78413_f))._field_Result = __jule_assign_result.__jule_result_arg0;
	});
	return _78413_f;;
}



inline jule::Ptr<_1d650d091_FnDecl> _1d7154973_buildFn(jule::Ptr<_1d714cc79_parser> _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _86032_tokens, jule::Bool _86050_method, jule::Bool _86064_prototype) {
	jule::I64 _86113_i = 0LL;;
	jule::Ptr<_1d650d091_FnDecl> _86213_f = _1d71544bc_buildFnPrototype(_self_, _86032_tokens, &(_86113_i), _86050_method);;
	if (_86064_prototype) {
		if ((_86113_i < (*(_86032_tokens)).len())) {
			_1d714d72a_pushErr(_self_.ptr(), (*(_86032_tokens))[(_86113_i + 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		};
		return _86213_f;;
	} else if ((_86213_f == nullptr)) {
		return _86213_f;;
	};
	if ((_86113_i >= (*(_86032_tokens)).len())) {
		_1d714d076_stop(_self_.ptr());
		_1d714d72a_pushErr(_self_.ptr(), (*(_86213_f))._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1d714da8d_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _87813_blockTokens = _1d714b42b_range(&(_86113_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _86032_tokens);;
	if ((_87813_blockTokens != nullptr)) {
		(*(_86213_f))._field_Scope=_1d714e8c4_buildScope(_self_, &(_87813_blockTokens), (*(_86032_tokens))[(_86113_i - 1LL)]);
		(*((*(_86213_f))._field_Scope))._field_Unsafety=(*(_86213_f))._field_Unsafety;
		if ((_86113_i < (*(_86032_tokens)).len())) {
			_1d714d72a_pushErr(_self_.ptr(), (*(_86032_tokens))[_86113_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		};
	} else {
		_1d714d076_stop(_self_.ptr());
		_1d714d72a_pushErr(_self_.ptr(), (*(_86213_f))._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1d714da8d_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _86213_f;;
}



inline jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _1d7154cb4_getUseDeclSelectors(_1d714cc79_parser* _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _89442_tokens) {
	jule::I64 _89513_i = 0LL;;
	_89442_tokens=_1d714b42b_range(&(_89513_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_89442_tokens));
	jule::Slice<jule::Slice<jule::Ptr<_1d64d5cd3_Token>>> _89713_parts;;
	jule::Slice<_1e0235a7e_Log> _89720_errs;;
	({
		__jule_tuple_ssx_1d64d5cd3_Token__jule_tuple_s_1e0235a7e_Log __jule_assign_result = _1d714bb9b_parts(&(_89442_tokens), static_cast<jule::U64>(5LLU), true);
		_89713_parts = __jule_assign_result.__jule_result_arg0;
		_89720_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_89720_errs.len() > 0LL)) {
		((*(_self_))._field_errors).append(_89720_errs);;
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _90313_selectors = jule::Slice<jule::Ptr<_1d64d5cd3_Token>>::alloc(0LL, _89713_parts.len());;
	{
		auto expr = &(_89713_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1da8838a7:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _90421_part = *it;
			{
				if ((_90421_part.len() > 1LL)) {
					_1d714d72a_pushErr(_self_, _90421_part[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1d64d5cd3_Token> _90817_tok = _90421_part[0LL];;
				if ((((*(_90817_tok))._field_Id != static_cast<jule::U64>(1LLU)) && ((*(_90817_tok))._field_Id != static_cast<jule::U64>(24LLU)))) {
					_1d714d72a_pushErr(_self_, _90817_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					_1d714da8d_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
					goto _iter_next_1da8838a7;
				};
				{ jule::Slice<jule::Ptr<_1d64d5cd3_Token>> &__jule_push_dest = _90313_selectors; __jule_push_dest.push(_90817_tok); };
			}
			_iter_next_1da8838a7:;
			++it;
			goto _iter_begin_1da8838a7;
		}
		_iter_end_1da8838a7:;
	};
	return _90313_selectors;;
}



inline void _1d7155127_buildBindUseDecl(_1d714cc79_parser* _self_, jule::Ptr<_1d65144d7_UseDecl>* _91940_decl, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _91957_tokens) {
	if (((*(_91957_tokens)).len() > 1LL)) {
		_1d714d72a_pushErr(_self_, (*(_91957_tokens))[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1d64d5cd3_Token> _9239_token = (*(_91957_tokens))[0LL];;
	if ((((*(_9239_token))._field_Id != static_cast<jule::U64>(4LLU)) || (((*(_9239_token))._field_Kind[0LL] != '`') && ((*(_9239_token))._field_Kind[0LL] != '\"')))) {
		_1d714d72a_pushErr(_self_, _9239_token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_91940_decl))))._field_Binded=true;
	(*((*(_91940_decl))))._field_LinkPath=(*(_9239_token))._field_Kind.slice(1LL, ((*(_9239_token))._field_Kind.len() - 1LL));
}



inline jule::Str _1d7155468_useDeclTokstoa(_1d714cc79_parser* _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _93234_tokens) {
	jule::I64 _93313_n = 0LL;;
	{
		auto expr = _93234_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1da88b250:;
		if (it != expr_end) {
			jule::Ptr<_1d64d5cd3_Token> *_93416_token = it;
			{
				if ((((*((*(_93416_token))))._field_Id != static_cast<jule::U64>(1LLU)) && ((*((*(_93416_token))))._field_Id != static_cast<jule::U64>(19LLU)))) {
					_1d714d72a_pushErr(_self_, (*(_93416_token)), jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				_93313_n+=(*((*(_93416_token))))._field_Kind.len();
			}
			_iter_next_1da88b250:;
			++it;
			goto _iter_begin_1da88b250;
		}
		_iter_end_1da88b250:;
	};
	_1e01838bc_StrBuilder _94013_s = static__1e0183b64_New(_93313_n);;
	{
		auto expr = _93234_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1da88b162:;
		if (it != expr_end) {
			jule::Ptr<_1d64d5cd3_Token> *_94116_token = it;
			{
				_1e018c6ea_WriteStr(&_94013_s, (*((*(_94116_token))))._field_Kind);
			}
			_iter_next_1da88b162:;
			++it;
			goto _iter_begin_1da88b162;
		}
		_iter_end_1da88b162:;
	};
	return _1e018cee2_Str(&_94013_s);;
}



inline void _1d71557cb_buildStdUseDecl(_1d714cc79_parser* _self_, jule::Ptr<_1d65144d7_UseDecl>* _94739_decl, jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _94759_tokens) {
	(*((*(_94739_decl))))._field_Std=true;
	jule::Ptr<_1d64d5cd3_Token> _95013_token = _94759_tokens[0LL];;
	if ((_94759_tokens.len() < 3LL)) {
		_1d714d72a_pushErr(_self_, _95013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(_94759_tokens).mut_slice(2LL);;
	_95013_token=_94759_tokens[(_94759_tokens.len() - 1LL)];
	{
		auto &_match_expr{ (*(_95013_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1da890b06:;
			{
				_1d714d72a_pushErr(_self_, _95013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1da890b7d:;
			{
				jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _96321_selectors = nullptr;;
				({
					__jule_tuple_sx_1d64d5cd3_Token__jule_tuple_sx_1d64d5cd3_Token __jule_assign_result = _1d714b6e5_rangeLast(&(_94759_tokens));
					_94759_tokens = __jule_assign_result.__jule_result_arg0;
					_96321_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*((*(_94739_decl))))._field_Selected=_1d7154cb4_getUseDeclSelectors(_self_, _96321_selectors);
				if ((_94759_tokens.len() == 0LL)) {
					_1d714d72a_pushErr(_self_, _95013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_95013_token=_94759_tokens[(_94759_tokens.len() - 1LL)];
				if (((*(_95013_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_1d714d72a_pushErr(_self_, _95013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_94759_tokens).mut_slice(0LL, (_94759_tokens.len() - 1LL));;
				if ((_94759_tokens.len() == 0LL)) {
					_1d714d72a_pushErr(_self_, _95013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1da890c05:;
			{
				(_94759_tokens).mut_slice(0LL, (_94759_tokens.len() - 1LL));;
				if ((_94759_tokens.len() == 0LL)) {
					_1d714d72a_pushErr(_self_, _95013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_95013_token=_94759_tokens[(_94759_tokens.len() - 1LL)];
				if (((*(_95013_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_1d714d72a_pushErr(_self_, _95013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_94759_tokens).mut_slice(0LL, (_94759_tokens.len() - 1LL));;
				if ((_94759_tokens.len() == 0LL)) {
					_1d714d72a_pushErr(_self_, _95013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(*((*(_94739_decl))))._field_Full=true;
			}
		}
		_match_end_1da890a7e:;
	};
	if (((_94759_tokens.len() == 1LL) && ((*(_94759_tokens[0LL]))._field_Id == static_cast<jule::U64>(31LLU)))) {
		(*((*(_94739_decl))))._field_LinkPath=jule::Str::lit("std::unsafe", 11);
	} else {
		(*((*(_94739_decl))))._field_LinkPath=(jule::Str::lit("std::", 5) + _1d7155468_useDeclTokstoa(_self_, &(_94759_tokens)));
	};
}



inline void _1d7155b3e_buildIdentUseDecl(_1d714cc79_parser* _self_, jule::Ptr<_1d65144d7_UseDecl>* _100541_decl, jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _100561_tokens) {
	(*((*(_100541_decl))))._field_Std=false;
	jule::Ptr<_1d64d5cd3_Token> _100813_token = _100561_tokens[(_100561_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ (*(_100813_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1da899b54:;
			{
				_1d714d72a_pushErr(_self_, _100813_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1da89a3e6:;
			{
				jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _101421_selectors = nullptr;;
				({
					__jule_tuple_sx_1d64d5cd3_Token__jule_tuple_sx_1d64d5cd3_Token __jule_assign_result = _1d714b6e5_rangeLast(&(_100561_tokens));
					_100561_tokens = __jule_assign_result.__jule_result_arg0;
					_101421_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*((*(_100541_decl))))._field_Selected=_1d7154cb4_getUseDeclSelectors(_self_, _101421_selectors);
				if ((_100561_tokens.len() == 0LL)) {
					_1d714d72a_pushErr(_self_, _100813_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_100813_token=_100561_tokens[(_100561_tokens.len() - 1LL)];
				if (((*(_100813_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_1d714d72a_pushErr(_self_, _100813_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_100561_tokens).mut_slice(0LL, (_100561_tokens.len() - 1LL));;
				if ((_100561_tokens.len() == 0LL)) {
					_1d714d72a_pushErr(_self_, _100813_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1da89a45c:;
			{
				(_100561_tokens).mut_slice(0LL, (_100561_tokens.len() - 1LL));;
				if ((_100561_tokens.len() == 0LL)) {
					_1d714d72a_pushErr(_self_, _100813_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_100813_token=_100561_tokens[(_100561_tokens.len() - 1LL)];
				if (((*(_100813_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_1d714d72a_pushErr(_self_, _100813_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_100561_tokens).mut_slice(0LL, (_100561_tokens.len() - 1LL));;
				if ((_100561_tokens.len() == 0LL)) {
					_1d714d72a_pushErr(_self_, _100813_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(*((*(_100541_decl))))._field_Full=true;
			}
		}
		_match_end_1da89a2d6:;
	};
	(*((*(_100541_decl))))._field_LinkPath=_1d7155468_useDeclTokstoa(_self_, &(_100561_tokens));
}



inline void _1d7155ea2_parseUseDecl(_1d714cc79_parser* _self_, jule::Ptr<_1d65144d7_UseDecl>* _105336_decl, jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _105356_tokens) {
	if ((*((*(_105336_decl))))._field_Binded) {
		_1d7155127_buildBindUseDecl(_self_, _105336_decl, &(_105356_tokens));
		return;;
	};
	jule::Ptr<_1d64d5cd3_Token> _105913_token = _105356_tokens[0LL];;
	if (((*(_105913_token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1d714d72a_pushErr(_self_, _105913_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1d714da8d_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	};
	if (((_105356_tokens.len() > 2LL) && ((*(_105356_tokens[1LL]))._field_Id == static_cast<jule::U64>(9LLU)))) {
		(*((*(_105336_decl))))._field_Alias=(*(_105913_token))._field_Kind;
		if (((*(_105356_tokens[2LL]))._field_Id != static_cast<jule::U64>(1LLU))) {
			_1d714d72a_pushErr(_self_, _105913_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			_1d714da8d_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
			return;;
		};
		(_105356_tokens).mut_slice(2LL);;
		_105913_token=_105356_tokens[0LL];
	};
	;
	{
		
		if ((*(_105913_token))._field_Kind.equal("std", 3)) {
			_case_begin_1da8a72d2:;
			{
				_1d71557cb_buildStdUseDecl(_self_, _105336_decl, _105356_tokens);
			}
		}
		else {
			_case_begin_1da8a6e3b:;
			{
				_1d7155b3e_buildIdentUseDecl(_self_, _105336_decl, _105356_tokens);
			}
		}
		_match_end_1da8a6dc5:;
	};
}



inline jule::Ptr<_1d65144d7_UseDecl> _1d715639d_buildUseDecl(_1d714cc79_parser* _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _108735_tokens, jule::Bool _108753_binded) {
	jule::Ptr<_1d65144d7_UseDecl> _108813_decl = jule::new_ptr<_1d65144d7_UseDecl>(_1d65144d7_UseDecl{._field_Token=_108735_tokens[0LL], ._field_Binded=_108753_binded, });;
	if ((_108735_tokens.len() < 2LL)) {
		_1d714d72a_pushErr(_self_, (*(_108813_decl))._field_Token, jule::Str::lit("missing path of use statement", 29), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_108735_tokens).mut_slice(1LL);;
	_1d7155ea2_parseUseDecl(_self_, &(_108813_decl), _108735_tokens);
	return _108813_decl;;
}



inline jule::Ptr<_1d64eb3d1_TypeDecl> _1d7156799_buildTypeEnumItemKind(jule::Ptr<_1d714cc79_parser> _self_, jule::I64* _110146_i, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _110159_tokens) {
	jule::I64 _110213_braceN = 0LL;;
	jule::I64 _11039_exprStart = (*(_110146_i));;
	for (; ((*(_110146_i)) < (*(_110159_tokens)).len()); ((*(_110146_i)))++) {
		{
			jule::Ptr<_1d64d5cd3_Token> _110513_t = (*(_110159_tokens))[(*(_110146_i))];;
			{
				auto &_match_expr{ (*(_110513_t))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1da8ab6e3:;
					{
						(_110213_braceN)++;
						goto _iter_next_1da8aa9bc;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1da8ab76a:;
					{
						(_110213_braceN)--;
					}
				}
				_match_end_1da8ab67c:;
			};
			if ((_110213_braceN > 0LL)) {
				goto _iter_next_1da8aa9bc;
			};
			if ((((*(_110513_t))._field_Id == static_cast<jule::U64>(5LLU)) || (((*(_110146_i)) + 1LL) >= (*(_110159_tokens)).len()))) {
				jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _112125_kindTokens = nullptr;;
				if (((*(_110513_t))._field_Id == static_cast<jule::U64>(5LLU))) {
					_112125_kindTokens=(*(_110159_tokens)).slice(_11039_exprStart, (*(_110146_i)));
				} else {
					_112125_kindTokens=(*(_110159_tokens)).slice(_11039_exprStart);
				};
				jule::I64 _112721_j = 0LL;;
				jule::Ptr<_1d64eb3d1_TypeDecl> _112821_kind;;
				({
					__jule_tuple_x_1d64eb3d1_TypeDecl__jule_tuple_bool __jule_assign_result = _1d7150331_buildType(_self_, &(_112125_kindTokens), (&(_112721_j)), true);
					_112821_kind = __jule_assign_result.__jule_result_arg0;
				});
				if ((_112721_j < _112125_kindTokens.len())) {
					_1d714d72a_pushErr(_self_.ptr(), _112125_kindTokens[_112721_j], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				return _112821_kind;;
			};
		}
	_iter_next_1da8aa9bc:;
	}
	_iter_end_1da8aa9bc:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1d6515d79_TypeEnumItemDecl>> _1d7156ada_buildTypeEnumItems(jule::Ptr<_1d714cc79_parser> _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _113843_tokens) {
	jule::Slice<jule::Ptr<_1d6515d79_TypeEnumItemDecl>> _113913_items = jule::Slice<jule::Ptr<_1d6515d79_TypeEnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I64 _114013_i = 0LL;;
	for (; (_114013_i < (*(_113843_tokens)).len()); (_114013_i)++) {
		{
			jule::Ptr<_1d64d5cd3_Token> _114217_t = (*(_113843_tokens))[_114013_i];;
			jule::Ptr<_1d6515d79_TypeEnumItemDecl> _114317_item = jule::new_ptr<_1d6515d79_TypeEnumItemDecl>();;
			(*(_114317_item))._field_Token=_114217_t;
			if ((((*((*(_114317_item))._field_Token))._field_Id == static_cast<jule::U64>(1LLU)) && (((*(_113843_tokens)).len() - _114013_i) > 2LL))) {
				_114217_t=(*(_113843_tokens))[(_114013_i + 1LL)];
				if (((*(_114217_t))._field_Id == static_cast<jule::U64>(8LLU))) {
					(*(_114317_item))._field_Ident=(*((*(_114317_item))._field_Token))._field_Kind;
					_114013_i+=2LL;
					if (((_114013_i >= (*(_113843_tokens)).len()) || ((*((*(_113843_tokens))[_114013_i]))._field_Id == static_cast<jule::U64>(5LLU)))) {
						_1d714d72a_pushErr(_self_.ptr(), _114217_t, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
						goto _iter_next_1da8b19b2;
					};
				};
			};
			(*(_114317_item))._field_Kind=_1d7156799_buildTypeEnumItemKind(_self_, &(_114013_i), _113843_tokens);
			{ jule::Slice<jule::Ptr<_1d6515d79_TypeEnumItemDecl>> &__jule_push_dest = _113913_items; __jule_push_dest.push(_114317_item); };
		}
	_iter_next_1da8b19b2:;
	}
	_iter_end_1da8b19b2:;;
	return _113913_items;;
}



inline jule::Ptr<_1d65164d9_TypeEnumDecl> _1d7156e2b_buildTypeEnumDecl(jule::Ptr<_1d714cc79_parser> _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _116242_tokens) {
	jule::I64 _116313_i = 1LL;;
	jule::Ptr<_1d65164d9_TypeEnumDecl> _116413_e = jule::new_ptr<_1d65164d9_TypeEnumDecl>(_1d65164d9_TypeEnumDecl{._field_Token=(*(_116242_tokens))[_116313_i], });;
	if (((*((*(_116413_e))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1d714d72a_pushErr(_self_.ptr(), (*(_116413_e))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1d714da8d_pushSuggestion(_self_.ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*(_116413_e))._field_Ident=(*((*(_116413_e))._field_Token))._field_Kind;
	_116313_i+=3LL;
	jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _117413_itemTokens = _1d714b42b_range(&(_116313_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _116242_tokens);;
	if ((_117413_itemTokens == nullptr)) {
		_1d714d076_stop(_self_.ptr());
		_1d714d72a_pushErr(_self_.ptr(), (*(_116413_e))._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1d714da8d_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _116413_e;;
	} else if ((_116313_i < (*(_116242_tokens)).len())) {
		_1d714d72a_pushErr(_self_.ptr(), (*(_116242_tokens))[_116313_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*(_116413_e))._field_Public=_1d65b2d7c_IsPub((*(_116413_e))._field_Ident);
	(*(_116413_e))._field_End=(*(_116242_tokens))[(_116313_i - 1LL)];
	(*(_116413_e))._field_Items=_1d7156ada_buildTypeEnumItems(_self_, &(_117413_itemTokens));
	return _116413_e;;
}



inline jule::Ptr<_1d6500715_Expr> _1d7157327_buildEnumItemExpr(jule::Ptr<_1d714cc79_parser> _self_, jule::I64* _118942_i, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _118955_tokens) {
	jule::I64 _119013_braceN = 0LL;;
	jule::I64 _11919_exprStart = (*(_118942_i));;
	for (; ((*(_118942_i)) < (*(_118955_tokens)).len()); ((*(_118942_i)))++) {
		{
			jule::Ptr<_1d64d5cd3_Token> _119313_t = (*(_118955_tokens))[(*(_118942_i))];;
			{
				auto &_match_expr{ (*(_119313_t))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1da8be184:;
					{
						(_119013_braceN)++;
						goto _iter_next_1da8bd45d;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1da8be20b:;
					{
						(_119013_braceN)--;
					}
				}
				_match_end_1da8be11d:;
			};
			if ((_119013_braceN > 0LL)) {
				goto _iter_next_1da8bd45d;
			};
			if ((((*(_119313_t))._field_Id == static_cast<jule::U64>(5LLU)) || (((*(_118942_i)) + 1LL) >= (*(_118955_tokens)).len()))) {
				jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _120925_exprTokens = nullptr;;
				if (((*(_119313_t))._field_Id == static_cast<jule::U64>(5LLU))) {
					_120925_exprTokens=(*(_118955_tokens)).slice(_11919_exprStart, (*(_118942_i)));
				} else {
					_120925_exprTokens=(*(_118955_tokens)).slice(_11919_exprStart);
				};
				return _1d714ddce_buildExpr(_self_, &(_120925_exprTokens));;
			};
		}
	_iter_next_1da8bd45d:;
	}
	_iter_end_1da8bd45d:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1d651498d_EnumItemDecl>> _1d7157668_buildEnumItems(jule::Ptr<_1d714cc79_parser> _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _122139_tokens) {
	jule::Slice<jule::Ptr<_1d651498d_EnumItemDecl>> _122213_items = jule::Slice<jule::Ptr<_1d651498d_EnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I64 _122313_i = 0LL;;
	for (; (_122313_i < (*(_122139_tokens)).len()); (_122313_i)++) {
		{
			jule::Ptr<_1d64d5cd3_Token> _122517_t = (*(_122139_tokens))[_122313_i];;
			jule::Ptr<_1d651498d_EnumItemDecl> _122617_item = jule::new_ptr<_1d651498d_EnumItemDecl>();;
			(*(_122617_item))._field_Token=_122517_t;
			if (((*((*(_122617_item))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
				_1d714d72a_pushErr(_self_.ptr(), (*(_122617_item))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				_1d714da8d_pushSuggestion(_self_.ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
			};
			(*(_122617_item))._field_Ident=(*((*(_122617_item))._field_Token))._field_Kind;
			if ((((_122313_i + 1LL) >= (*(_122139_tokens)).len()) || ((*((*(_122139_tokens))[(_122313_i + 1LL)]))._field_Id == static_cast<jule::U64>(5LLU)))) {
				if (((_122313_i + 1LL) < (*(_122139_tokens)).len())) {
					(_122313_i)++;
				};
				{ jule::Slice<jule::Ptr<_1d651498d_EnumItemDecl>> &__jule_push_dest = _122213_items; __jule_push_dest.push(_122617_item); };
				goto _iter_next_1da8c3199;
			};
			(_122313_i)++;
			_122517_t=(*(_122139_tokens))[_122313_i];
			(_122313_i)++;
			if (((*(_122517_t))._field_Id != static_cast<jule::U64>(8LLU))) {
				_1d714d72a_pushErr(_self_.ptr(), _122517_t, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				_1d714da8d_pushSuggestion(_self_.ptr(), jule::Str::lit("expected colon \":\" for assignment", 33), jule::Slice<jule::Any>());
				goto _iter_next_1da8c3199;
			};
			if (((_122313_i >= (*(_122139_tokens)).len()) || ((*((*(_122139_tokens))[_122313_i]))._field_Id == static_cast<jule::U64>(5LLU)))) {
				_1d714d72a_pushErr(_self_.ptr(), _122517_t, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
				goto _iter_next_1da8c3199;
			};
			(*(_122617_item))._field_Expr=_1d7157327_buildEnumItemExpr(_self_, &(_122313_i), _122139_tokens);
			{ jule::Slice<jule::Ptr<_1d651498d_EnumItemDecl>> &__jule_push_dest = _122213_items; __jule_push_dest.push(_122617_item); };
		}
	_iter_next_1da8c3199:;
	}
	_iter_end_1da8c3199:;;
	return _122213_items;;
}



inline jule::Ptr<_1d651554e_EnumDecl> _1d71579a9_buildEnumDecl(jule::Ptr<_1d714cc79_parser> _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _125838_tokens) {
	if (((*(_125838_tokens)).len() < 3LL)) {
		_1d714d72a_pushErr(_self_.ptr(), (*(_125838_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1d651554e_EnumDecl> _126313_e = jule::new_ptr<_1d651554e_EnumDecl>(_1d651554e_EnumDecl{._field_Token=(*(_125838_tokens))[1LL], });;
	if (((*((*(_126313_e))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1d714d72a_pushErr(_self_.ptr(), (*(_126313_e))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1d714da8d_pushSuggestion(_self_.ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*(_126313_e))._field_Ident=(*((*(_126313_e))._field_Token))._field_Kind;
	jule::I64 _127113_i = 2LL;;
	if (((*((*(_125838_tokens))[_127113_i]))._field_Id == static_cast<jule::U64>(8LLU))) {
		(_127113_i)++;
		if ((_127113_i >= (*(_125838_tokens)).len())) {
			_1d714d72a_pushErr(_self_.ptr(), (*(_125838_tokens))[(_127113_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return _126313_e;;
		};
		({
			__jule_tuple_x_1d64eb3d1_TypeDecl__jule_tuple_bool __jule_assign_result = _1d7150331_buildType(_self_, _125838_tokens, (&(_127113_i)), true);
			(*(_126313_e))._field_Kind = __jule_assign_result.__jule_result_arg0;
		});
		if ((_127113_i >= (*(_125838_tokens)).len())) {
			_1d714d076_stop(_self_.ptr());
			_1d714d72a_pushErr(_self_.ptr(), (*(_126313_e))._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
			_1d714da8d_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
			return _126313_e;;
		};
	} else {
		(*(_126313_e))._field_Kind=nullptr;
	};
	jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _128813_itemTokens = _1d714b42b_range(&(_127113_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _125838_tokens);;
	if ((_128813_itemTokens == nullptr)) {
		_1d714d076_stop(_self_.ptr());
		_1d714d72a_pushErr(_self_.ptr(), (*(_126313_e))._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1d714da8d_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _126313_e;;
	} else if ((_127113_i < (*(_125838_tokens)).len())) {
		_1d714d72a_pushErr(_self_.ptr(), (*(_125838_tokens))[_127113_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*(_126313_e))._field_Public=_1d65b2d7c_IsPub((*(_126313_e))._field_Ident);
	(*(_126313_e))._field_End=(*(_125838_tokens))[(_127113_i - 1LL)];
	(*(_126313_e))._field_Items=_1d7157668_buildEnumItems(_self_, &(_128813_itemTokens));
	return _126313_e;;
}



inline jule::Any _1d7157cea_buildNodeEnumDecl(jule::Ptr<_1d714cc79_parser> _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _130342_tokens) {
	if ((((*(_130342_tokens)).len() > 3LL) && ((*((*(_130342_tokens))[2LL]))._field_Id == static_cast<jule::U64>(8LLU)))) {
		if (((*((*(_130342_tokens))[3LL]))._field_Id == static_cast<jule::U64>(7LLU))) {
			return jule::Any(_1d7156e2b_buildTypeEnumDecl(_self_, _130342_tokens), &__jule_any_type18);;
		};
	};
	return jule::Any(_1d71579a9_buildEnumDecl(_self_, _130342_tokens), &__jule_any_type17);;
}



inline jule::Ptr<_1d65167a3_FieldDecl> _1d715813b_buildField(jule::Ptr<_1d714cc79_parser> _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _131234_tokens) {
	jule::Ptr<_1d65167a3_FieldDecl> _131313_f = jule::new_ptr<_1d65167a3_FieldDecl>();;
	(*(_131313_f))._field_Mutable=((*(_131234_tokens[0LL]))._field_Id == static_cast<jule::U64>(32LLU));
	if ((*(_131313_f))._field_Mutable) {
		if ((_131234_tokens.len() == 1LL)) {
			_1d714d72a_pushErr(_self_.ptr(), _131234_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_131234_tokens).mut_slice(1LL);;
	};
	(*(_131313_f))._field_Token=_131234_tokens[0LL];
	if (((*((*(_131313_f))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1d714d72a_pushErr(_self_.ptr(), (*(_131313_f))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1d714da8d_pushSuggestion(_self_.ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*(_131313_f))._field_Ident=(*((*(_131313_f))._field_Token))._field_Kind;
	if ((_131234_tokens.len() == 1LL)) {
		_1d714d72a_pushErr(_self_.ptr(), _131234_tokens[0LL], jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
		return nullptr;;
	} else if (((_131234_tokens.len() < 3LL) || ((*(_131234_tokens[1LL]))._field_Id != static_cast<jule::U64>(8LLU)))) {
		_1d714d72a_pushErr(_self_.ptr(), _131234_tokens[1LL], jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_131234_tokens).mut_slice(2LL);;
	jule::I64 _134113_i = 0LL;;
	({
		__jule_tuple_x_1d64eb3d1_TypeDecl__jule_tuple_bool __jule_assign_result = _1d7150331_buildType(_self_, &(_131234_tokens), (&(_134113_i)), true);
		(*(_131313_f))._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_134113_i < _131234_tokens.len())) {
		jule::Ptr<_1d64d5cd3_Token> _134413_token = _131234_tokens[_134113_i];;
		if (((*(_134413_token))._field_Id != static_cast<jule::U64>(71LLU))) {
			_1d714d72a_pushErr(_self_.ptr(), _131234_tokens[_134113_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_134113_i)++;
		if ((_134113_i >= _131234_tokens.len())) {
			_1d714d72a_pushErr(_self_.ptr(), _134413_token, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_131234_tokens).mut_slice(_134113_i);;
		(*(_131313_f))._field_Default=_1d714ddce_buildExpr(_self_, &(_131234_tokens));
	};
	(*(_131313_f))._field_Public=_1d65b2d7c_IsPub((*(_131313_f))._field_Ident);
	return _131313_f;;
}



inline jule::Slice<jule::Ptr<_1d65167a3_FieldDecl>> _1d715847c_buildStructDeclFields(jule::Ptr<_1d714cc79_parser> _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _136145_tokens) {
	jule::Slice<jule::Ptr<_1d65167a3_FieldDecl>> _136217_fields = nullptr;;
	jule::Slice<jule::Ptr<_1d712e123_stmt>> _136313_stmts = _1d712e4ca_splitStmts(&(_136145_tokens));;
	{
		auto expr = &(_136313_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1da8e2839:;
		if (it != expr_end) {
			jule::Ptr<_1d712e123_stmt> _136421_stmt = *it;
			{
				_136145_tokens=(*(_136421_stmt))._field_tokens;
				jule::Ptr<_1d65167a3_FieldDecl> _136617_f = _1d715813b_buildField(_self_, _136145_tokens);;
				{ jule::Slice<jule::Ptr<_1d65167a3_FieldDecl>> &__jule_push_dest = _136217_fields; __jule_push_dest.push(_136617_f); };
			}
			_iter_next_1da8e2839:;
			++it;
			goto _iter_begin_1da8e2839;
		}
		_iter_end_1da8e2839:;
	};
	return _136217_fields;;
}



inline jule::Ptr<_1d6517199_StructDecl> _1d71587bd_buildStructDecl(jule::Ptr<_1d714cc79_parser> _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _137240_tokens) {
	if (((*(_137240_tokens)).len() < 3LL)) {
		_1d714d72a_pushErr(_self_.ptr(), (*(_137240_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I64 _137813_i = 1LL;;
	jule::Ptr<_1d6517199_StructDecl> _137913_s = jule::new_ptr<_1d6517199_StructDecl>(_1d6517199_StructDecl{._field_Token=(*(_137240_tokens))[_137813_i], });;
	if (((*((*(_137913_s))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1d714d72a_pushErr(_self_.ptr(), (*(_137913_s))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1d714da8d_pushSuggestion(_self_.ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(_137813_i)++;
	if ((_137813_i >= (*(_137240_tokens)).len())) {
		_1d714d72a_pushErr(_self_.ptr(), (*(_137240_tokens))[_137813_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return _137913_s;;
	};
	(*(_137913_s))._field_Ident=(*((*(_137913_s))._field_Token))._field_Kind;
	jule::Ptr<_1d64d5cd3_Token> _13939_errorToken = (*(_137240_tokens))[_137813_i];;
	jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _139413_genericsTokens = _1d714b42b_range(&(_137813_i), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), _137240_tokens);;
	if ((_139413_genericsTokens != nullptr)) {
		(*(_137913_s))._field_Generics=_1d7151ce4_buildGenerics(_self_, &(_139413_genericsTokens), &(_13939_errorToken));
	};
	if ((_137813_i >= (*(_137240_tokens)).len())) {
		_1d714d72a_pushErr(_self_.ptr(), (*(_137240_tokens))[(_137813_i - 1LL)], jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1d714da8d_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _137913_s;;
	};
	jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _140413_bodyTokens = _1d714b42b_range(&(_137813_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _137240_tokens);;
	if ((_140413_bodyTokens == nullptr)) {
		_1d714d076_stop(_self_.ptr());
		_1d714d72a_pushErr(_self_.ptr(), (*(_137913_s))._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1d714da8d_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _137913_s;;
	};
	if ((_137813_i < (*(_137240_tokens)).len())) {
		_1d714d72a_pushErr(_self_.ptr(), (*(_137240_tokens))[_137813_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*(_137913_s))._field_Public=_1d65b2d7c_IsPub((*(_137913_s))._field_Ident);
	(*(_137913_s))._field_Fields=_1d715847c_buildStructDeclFields(_self_, _140413_bodyTokens);
	(*(_137913_s))._field_End=(*(_137240_tokens))[(_137813_i - 1LL)];
	return _137913_s;;
}



inline void _1d7158a76_checkMethodReceiver(_1d714cc79_parser* _self_, jule::Ptr<_1d650d091_FnDecl>* _142039_f) {
	if ((*((*(_142039_f))))._field_Statically) {
		if ((((*((*(_142039_f))))._field_Params.len() > 0LL) && _1d650beb3_IsSelf((*((*(_142039_f))))._field_Params[0LL].ptr()))) {
			_1d714d72a_pushErr(_self_, (*((*(_142039_f))))._field_Token, jule::Str::lit("static functions cannot have receiver parameter", 47), jule::Slice<jule::Any>());
		};
		return;;
	};
	if (((*((*(_142039_f))))._field_Params.len() == 0LL)) {
		_1d714d72a_pushErr(_self_, (*((*(_142039_f))))._field_Token, jule::Str::lit("missing receiver parameter", 26), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1d650bb3e_ParamDecl> _14329_param = (*((*(_142039_f))))._field_Params[0LL];;
	if ((!(_1d650beb3_IsSelf(_14329_param.ptr())))) {
		_1d714d72a_pushErr(_self_, (*((*(_142039_f))))._field_Token, jule::Str::lit("missing receiver parameter", 26), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1d7158dd9_buildTraitBody(jule::Ptr<_1d714cc79_parser> _self_, jule::Ptr<_1d65178d6_TraitDecl>* _143939_t, jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _143958_tokens) {
	jule::Slice<jule::Ptr<_1d712e123_stmt>> _144013_stmts = _1d712e4ca_splitStmts(&(_143958_tokens));;
	{
		auto expr = &(_144013_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1da90321d:;
		if (it != expr_end) {
			jule::Ptr<_1d712e123_stmt> _144121_stmt = *it;
			{
				_143958_tokens=(*(_144121_stmt))._field_tokens;
				if ((_143958_tokens.len() == 0LL)) {
					goto _iter_next_1da90321d;
				};
				{
					auto &_match_expr{ (*(_143958_tokens[0LL]))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(29LLU)) {
						_case_begin_1da90684d:;
						{
							jule::Ptr<_1d650d091_FnDecl> _144821_f = _1d7154973_buildFn(_self_, &(_143958_tokens), true, true);;
							if ((_144821_f == nullptr)) {
								goto _match_end_1da90451b;
							};
							_1d7158a76_checkMethodReceiver(_self_.ptr(), &(_144821_f));
							if (((*(_144821_f))._field_Generics.len() > 0LL)) {
								_1d714d72a_pushErr(_self_.ptr(), (*(_144821_f))._field_Token, jule::Str::lit("trait methods cannot have generics", 34), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_1d650d091_FnDecl>> &__jule_push_dest = (*((*(_143939_t))))._field_Methods; __jule_push_dest.push(_144821_f); };
						}
					}
					else {
						_case_begin_1da903ce0:;
						{
							jule::I64 _145821_i = 0LL;;
							jule::Ptr<_1d64eb3d1_TypeDecl> _145921_ti;;
							jule::Bool _145925_ok = false;;
							({
								__jule_tuple_x_1d64eb3d1_TypeDecl__jule_tuple_bool __jule_assign_result = _1d7150331_buildType(_self_, &(_143958_tokens), (&(_145821_i)), true);
								_145921_ti = __jule_assign_result.__jule_result_arg0;
								_145925_ok = __jule_assign_result.__jule_result_arg1;
							});
							if ((!(_145925_ok))) {
								goto _match_end_1da90451b;
							};
							if ((_145821_i < _143958_tokens.len())) {
								_1d714d72a_pushErr(_self_.ptr(), _143958_tokens[_145821_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_1d64eb3d1_TypeDecl>> &__jule_push_dest = (*((*(_143939_t))))._field_Inherits; __jule_push_dest.push(_145921_ti); };
						}
					}
					_match_end_1da90451b:;
				};
			}
			_iter_next_1da90321d:;
			++it;
			goto _iter_begin_1da90321d;
		}
		_iter_end_1da90321d:;
	};
}



inline jule::Ptr<_1d65178d6_TraitDecl> _1d715922a_buildTraitDecl(jule::Ptr<_1d714cc79_parser> _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _147139_tokens) {
	if (((*(_147139_tokens)).len() < 3LL)) {
		_1d714d72a_pushErr(_self_.ptr(), (*(_147139_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1d65178d6_TraitDecl> _147613_t = jule::new_ptr<_1d65178d6_TraitDecl>(_1d65178d6_TraitDecl{._field_Token=(*(_147139_tokens))[1LL], });;
	if (((*((*(_147613_t))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1d714d72a_pushErr(_self_.ptr(), (*(_147613_t))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1d714da8d_pushSuggestion(_self_.ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*(_147613_t))._field_Ident=(*((*(_147613_t))._field_Token))._field_Kind;
	jule::I64 _148413_i = 2LL;;
	jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _148513_bodyTokens = _1d714b42b_range(&(_148413_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _147139_tokens);;
	if ((_148513_bodyTokens == nullptr)) {
		_1d714d076_stop(_self_.ptr());
		_1d714d72a_pushErr(_self_.ptr(), (*(_147613_t))._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1d714da8d_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_148413_i < (*(_147139_tokens)).len())) {
		_1d714d72a_pushErr(_self_.ptr(), (*(_147139_tokens))[_148413_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*(_147613_t))._field_Public=_1d65b2d7c_IsPub((*(_147613_t))._field_Ident);
	_1d7158dd9_buildTraitBody(_self_, &(_147613_t), _148513_bodyTokens);
	(*(_147613_t))._field_End=(*(_147139_tokens))[(_148413_i - 1LL)];
	return _147613_t;;
}



inline jule::Ptr<_1d650d091_FnDecl> _1d715956b_buildBindFn(jule::Ptr<_1d714cc79_parser> _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _150135_tokens) {
	(_150135_tokens).mut_slice(1LL);;
	jule::Ptr<_1d650d091_FnDecl> _150313_f = _1d7154973_buildFn(_self_, &(_150135_tokens), false, true);;
	if ((_150313_f != nullptr)) {
		(*(_150313_f))._field_Public=false;
		(*(_150313_f))._field_Binded=true;
	};
	return _150313_f;;
}



inline jule::Ptr<_1d650e24b_VarDecl> _1d71598ac_buildBindVar(jule::Ptr<_1d714cc79_parser> _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _151136_tokens) {
	(_151136_tokens).mut_slice(1LL);;
	jule::Ptr<_1d650e24b_VarDecl> _151313_v = _1d71515a7_buildVar(_self_, _151136_tokens);;
	if ((_151313_v != nullptr)) {
		(*(_151313_v))._field_Public=false;
		(*(_151313_v))._field_Binded=true;
		if (((*(_151313_v))._field_Expr != nullptr)) {
			_1d714d72a_pushErr(_self_.ptr(), (*(_151313_v))._field_Token, jule::Str::lit("binded variables cannot have expression", 39), jule::Slice<jule::Any>());
		};
	};
	return _151313_v;;
}



inline jule::Ptr<_1d6517199_StructDecl> _1d7159bed_buildBindStruct(jule::Ptr<_1d714cc79_parser> _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _152439_tokens) {
	(_152439_tokens).mut_slice(1LL);;
	jule::Ptr<_1d6517199_StructDecl> _152613_s = _1d71587bd_buildStructDecl(_self_, &(_152439_tokens));;
	if ((_152613_s != nullptr)) {
		(*(_152613_s))._field_Public=false;
		{
			auto expr = &((*(_152613_s))._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1da915a7c:;
			if (it != expr_end) {
				jule::Ptr<_1d65167a3_FieldDecl> _152925_f = *it;
				{
					(*(_152925_f))._field_Public=true;
				}
				_iter_next_1da915a7c:;
				++it;
				goto _iter_begin_1da915a7c;
			}
			_iter_end_1da915a7c:;
		};
		(*(_152613_s))._field_Binded=true;
	};
	return _152613_s;;
}



inline jule::Ptr<_1d6512ded_TypeAliasDecl> _1d715a03e_buildBindTypeAlias(jule::Ptr<_1d714cc79_parser> _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _153842_tokens) {
	(_153842_tokens).mut_slice(1LL);;
	jule::Ptr<_1d6512ded_TypeAliasDecl> _154013_t = _1d7150672_buildTypeAliasDecl(_self_, &(_153842_tokens));;
	if ((_154013_t != nullptr)) {
		(*(_154013_t))._field_Public=false;
		(*(_154013_t))._field_Binded=true;
	};
	return _154013_t;;
}



inline jule::Ptr<_1d65144d7_UseDecl> _1d715a380_buildBindUse(jule::Ptr<_1d714cc79_parser> _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _154836_tokens) {
	if ((_154836_tokens.len() == 1LL)) {
		_1d714d72a_pushErr(_self_.ptr(), _154836_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_154836_tokens).mut_slice(1LL);;
	;
	return _1d715639d_buildUseDecl(_self_.ptr(), _154836_tokens, true);;
}



inline jule::Any _1d715a6c1_buildBind(jule::Ptr<_1d714cc79_parser> _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _155934_tokens) {
	jule::Ptr<_1d64d5cd3_Token> _156013_token = (*(_155934_tokens))[0LL];;
	if (((*(_155934_tokens)).len() == 1LL)) {
		_1d714d72a_pushErr(_self_.ptr(), _156013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_156013_token=(*(_155934_tokens))[1LL];
	{
		auto &_match_expr{ (*(_156013_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1da91bd08:;
			{
				return jule::Any(_1d715956b_buildBindFn(_self_, (*(_155934_tokens))), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU) || _match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1da91aa60:;
			{
				return jule::Any(_1d71598ac_buildBindVar(_self_, (*(_155934_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_1da91b753:;
			{
				return jule::Any(_1d7159bed_buildBindStruct(_self_, (*(_155934_tokens))), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1da91b7b9:;
			{
				return jule::Any(_1d715a03e_buildBindTypeAlias(_self_, (*(_155934_tokens))), &__jule_any_type12);;
			}
		}
		else {
			_case_begin_1da91b6dc:;
			{
				_1d714d72a_pushErr(_self_.ptr(), _156013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1da91b687:;
	};
	return nullptr;;
}



inline jule::Ptr<_1d650d091_FnDecl> _1d715aa12_getMethod(jule::Ptr<_1d714cc79_parser> _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _158334_tokens) {
	jule::I64 _158413_i = 0LL;;
	jule::Ptr<_1d64d5cd3_Token> _158513_token = (*(_158334_tokens))[_158413_i];;
	if (((*(_158513_token))._field_Id == static_cast<jule::U64>(34LLU))) {
		if (((_158413_i + 1LL) >= (*(_158334_tokens)).len())) {
			_1d714d72a_pushErr(_self_.ptr(), _158513_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_158413_i)++;
		_158513_token=(*(_158334_tokens))[_158413_i];
	};
	if (((*(_158513_token))._field_Id == static_cast<jule::U64>(31LLU))) {
		if (((_158413_i + 1LL) >= (*(_158334_tokens)).len())) {
			_1d714d72a_pushErr(_self_.ptr(), _158513_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_158413_i)++;
		_158513_token=(*(_158334_tokens))[_158413_i];
	};
	if (((*(_158513_token))._field_Id != static_cast<jule::U64>(29LLU))) {
		_1d714d72a_pushErr(_self_.ptr(), _158513_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1d7154973_buildFn(_self_, _158334_tokens, true, false);;
}



inline void _1d715ad75_parseImplBody(jule::Ptr<_1d714cc79_parser> _self_, jule::Ptr<_1d6518046_Impl>* _161238_ipl, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _161255_tokens) {
	jule::Slice<jule::Ptr<_1d712e123_stmt>> _161313_stmts = _1d712e4ca_splitStmts(_161255_tokens);;
	{
		auto expr = &(_161313_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1da9240c9:;
		if (it != expr_end) {
			jule::Ptr<_1d712e123_stmt> _161421_stmt = *it;
			{
				(*(_161255_tokens))=(*(_161421_stmt))._field_tokens;
				jule::Ptr<_1d64d5cd3_Token> _161617_token = (*(_161255_tokens))[0LL];;
				{
					auto &_match_expr{ (*(_161617_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(35LLU)) {
						_case_begin_1da924dbb:;
						{
							_1d714e4c8_pushDirective(_self_.ptr(), _1d714e220_buildDirective(_self_.ptr(), (*(_161255_tokens))));
							goto _iter_next_1da9240c9;
						}
					}
					_match_end_1da925372:;
				};
				{
					auto &_match_expr{ (*(_161617_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(6LLU)) {
						_case_begin_1da9267c4:;
						{
							jule::Ptr<_1d650e24b_VarDecl> _162521_v = _1d71515a7_buildVar(_self_, (*(_161255_tokens)));;
							if ((_162521_v != nullptr)) {
								{ jule::Slice<jule::Ptr<_1d650e24b_VarDecl>> &__jule_push_dest = (*((*(_161238_ipl))))._field_Statics; __jule_push_dest.push(_162521_v); };
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
						_case_begin_1da9254a4:;
						{
							jule::Ptr<_1d650d091_FnDecl> _163221_f = _1d715aa12_getMethod(_self_, _161255_tokens);;
							if ((_163221_f != nullptr)) {
								_1d7158a76_checkMethodReceiver(_self_.ptr(), &(_163221_f));
								_1d715b7b0_applyFnMeta(_self_.ptr(), &(_163221_f));
								{ jule::Slice<jule::Ptr<_1d650d091_FnDecl>> &__jule_push_dest = (*((*(_161238_ipl))))._field_Methods; __jule_push_dest.push(_163221_f); };
							};
						}
					}
					else {
						_case_begin_1da9258e4:;
						{
							_1d714d72a_pushErr(_self_.ptr(), _161617_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							goto _iter_next_1da9240c9;
						}
					}
					_match_end_1da92588e:;
				};
			}
			_iter_next_1da9240c9:;
			++it;
			goto _iter_begin_1da9240c9;
		}
		_iter_end_1da9240c9:;
	};
}



inline jule::Ptr<_1d6518046_Impl> _1d715b1b6_buildImpl(jule::Ptr<_1d714cc79_parser> _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _164533_tokens) {
	jule::Ptr<_1d64d5cd3_Token> _164613_token = _164533_tokens[0LL];;
	if ((_164533_tokens.len() < 2LL)) {
		_1d714d72a_pushErr(_self_.ptr(), _164613_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I64 _165213_i = 1LL;;
	jule::Ptr<_1d64eb3d1_TypeDecl> _165413_base;;
	jule::Bool _165423_ok = false;;
	({
		__jule_tuple_x_1d64eb3d1_TypeDecl__jule_tuple_bool __jule_assign_result = _1d7150331_buildType(_self_, &(_164533_tokens), (&(_165213_i)), true);
		_165413_base = __jule_assign_result.__jule_result_arg0;
		_165423_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_165423_ok))) {
		return nullptr;;
	};
	if ((_165213_i >= _164533_tokens.len())) {
		_1d714d72a_pushErr(_self_.ptr(), _164613_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1d6518046_Impl> _166313_ipl = jule::new_ptr<_1d6518046_Impl>(_1d6518046_Impl{._field_Base=_165413_base, });;
	_164613_token=_164533_tokens[_165213_i];
	if (((*(_164613_token))._field_Id != static_cast<jule::U64>(9LLU))) {
		if (((*(_164613_token))._field_Id == static_cast<jule::U64>(72LLU))) {
			std::swap((*(_166313_ipl))._field_Base, (*(_166313_ipl))._field_Dest);
			goto _julec_label_1da9337ae;
		};
		_1d714d076_stop(_self_.ptr());
		_1d714d72a_pushErr(_self_.ptr(), _164613_token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1d714da8d_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_165213_i)++;
	if ((_165213_i >= _164533_tokens.len())) {
		_1d714d076_stop(_self_.ptr());
		_1d714d72a_pushErr(_self_.ptr(), _164613_token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1d714da8d_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	({
		__jule_tuple_x_1d64eb3d1_TypeDecl__jule_tuple_bool __jule_assign_result = _1d7150331_buildType(_self_, &(_164533_tokens), (&(_165213_i)), true);
		(*(_166313_ipl))._field_Dest = __jule_assign_result.__jule_result_arg0;
		_165423_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_165423_ok))) {
		return nullptr;;
	};
	if ((_165213_i >= _164533_tokens.len())) {
		_1d714d076_stop(_self_.ptr());
		_1d714d72a_pushErr(_self_.ptr(), _164613_token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1d714da8d_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_1da9337ae:;
	jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _170113_bodyTokens = _1d714b42b_range(&(_165213_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_164533_tokens));;
	if ((_170113_bodyTokens == nullptr)) {
		_1d714d076_stop(_self_.ptr());
		_1d714d72a_pushErr(_self_.ptr(), _164613_token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1d714da8d_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_165213_i < _164533_tokens.len())) {
		_1d714d72a_pushErr(_self_.ptr(), _164533_tokens[_165213_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*(_166313_ipl))._field_End=_164533_tokens[(_165213_i - 1LL)];
	_1d715ad75_parseImplBody(_self_, &(_166313_ipl), &(_170113_bodyTokens));
	return _166313_ipl;;
}



inline jule::Any _1d715b507_buildNodeData(jule::Ptr<_1d714cc79_parser> _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _171638_tokens) {
	jule::Ptr<_1d64d5cd3_Token> _171713_token = (*(_171638_tokens))[0LL];;
	{
		auto &_match_expr{ (*(_171713_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1da937d79:;
			{
				jule::Ptr<_1d650d091_FnDecl> _172117_f = _1d7154973_buildFn(_self_, _171638_tokens, false, false);;
				if ((_172117_f != nullptr)) {
					(*(_172117_f))._field_Global=true;
				};
				return jule::Any(_172117_f, &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU) || _match_expr == static_cast<jule::U64>(6LLU) || _match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1da93740b:;
			{
				return jule::Any(_1d71515a7_buildVar(_self_, (*(_171638_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1da938242:;
			{
				return jule::Any(_1d7150672_buildTypeAliasDecl(_self_, _171638_tokens), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(20LLU)) {
			_case_begin_1da9377c4:;
			{
				return _1d7157cea_buildNodeEnumDecl(_self_, _171638_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_1da93783a:;
			{
				return jule::Any(_1d71587bd_buildStructDecl(_self_, _171638_tokens), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(25LLU)) {
			_case_begin_1da9378a1:;
			{
				return jule::Any(_1d715922a_buildTraitDecl(_self_, _171638_tokens), &__jule_any_type15);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(26LLU)) {
			_case_begin_1da937917:;
			{
				return jule::Any(_1d715b1b6_buildImpl(_self_, (*(_171638_tokens))), &__jule_any_type11);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1da938341:;
			{
				return _1d715a6c1_buildBind(_self_, _171638_tokens);;
			}
		}
		else {
			_case_begin_1da93775d:;
			{
				_1d714d72a_pushErr(_self_.ptr(), _171713_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1da937708:;
	};
}



inline void _1d715b7b0_applyFnMeta(_1d714cc79_parser* _self_, jule::Ptr<_1d650d091_FnDecl>* _174935_f) {
	(*((*(_174935_f))))._field_Directives=(*(_self_))._field_directives;
	(*(_self_))._field_directives=nullptr;
}



inline void _1d715ba68_applyMeta(_1d714cc79_parser* _self_, _1d64ea3d0_Node* _175433_node) {
	{
		auto &_match_expr{ (*(_175433_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1da93dad8:;
			{
				jule::Ptr<_1d650e24b_VarDecl> _175717_v = (*(_175433_node))._field_Data.cast_ptr<_1d650e24b_VarDecl>(&__jule_any_type16);;
				if ((_175717_v == nullptr)) {
					return;;
				};
				(*(_175717_v))._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1da93db60:;
			{
				jule::Ptr<_1d650d091_FnDecl> _176417_f = (*(_175433_node))._field_Data.cast_ptr<_1d650d091_FnDecl>(&__jule_any_type14);;
				if ((_176417_f == nullptr)) {
					return;;
				};
				_1d715b7b0_applyFnMeta(_self_, &(_176417_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1da93dbd7:;
			{
				jule::Ptr<_1d6517199_StructDecl> _177017_sd = (*(_175433_node))._field_Data.cast_ptr<_1d6517199_StructDecl>(&__jule_any_type13);;
				if ((_177017_sd == nullptr)) {
					return;;
				};
				(*(_177017_sd))._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		_match_end_1da93da61:;
	};
}



inline void _1d715bd21_pushUseDecl(jule::Ptr<_1d714cc79_parser> _self_, jule::Ptr<_1d65144d7_UseDecl>* _177936_decl) {
	{ jule::Slice<jule::Ptr<_1d65144d7_UseDecl>> &__jule_push_dest = (*((*(_self_))._field_ast))._field_UseDecls; __jule_push_dest.push((*(_177936_decl))); };
	if (((*((*(_self_))._field_ast))._field_Nodes.len() > 0LL)) {
		_1d714d72a_pushErr(_self_.ptr(), (*((*(_177936_decl))))._field_Token, jule::Str::lit("use declarations must declared top of source code", 49), jule::Slice<jule::Any>());
		_1d714da8d_pushSuggestion(_self_.ptr(), jule::Str::lit("move this use declaration to top of source file", 47), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1d715c162_pushMetaNodes(jule::Ptr<_1d714cc79_parser> _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _178738_tokens) {
	{
		auto &_match_expr{ (*((*(_178738_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_1da944dca:;
			{
				;
				jule::Ptr<_1d65144d7_UseDecl> _179117_decl = _1d715639d_buildUseDecl(_self_.ptr(), (*(_178738_tokens)), false);;
				_1d715bd21_pushUseDecl(_self_, &(_179117_decl));
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1da944e52:;
			{
				if ((((*(_178738_tokens)).len() > 1LL) && ((*((*(_178738_tokens))[1LL]))._field_Id == static_cast<jule::U64>(16LLU)))) {
					jule::Ptr<_1d65144d7_UseDecl> _179621_decl = _1d715a380_buildBindUse(_self_, (*(_178738_tokens)));;
					_1d715bd21_pushUseDecl(_self_, &(_179621_decl));
					return true;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_1da944ec9:;
			{
				_1d714e4c8_pushDirective(_self_.ptr(), _1d714e220_buildDirective(_self_.ptr(), (*(_178738_tokens))));
				return true;;
			}
		}
		_match_end_1da944ca9:;
	};
	return false;;
}



inline _1d64ea3d0_Node _1d715c4a3_parseNode(jule::Ptr<_1d714cc79_parser> _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _180734_st) {
	_1d64ea3d0_Node _180813_node = _1d64ea3d0_Node{._field_Token=(*(_180734_st))[0LL], };;
	if (_1d715c162_pushMetaNodes(_self_, _180734_st)) {
		return _180813_node;;
	};
	jule::Any _181613_data = _1d715b507_buildNodeData(_self_, _180734_st);;
	if ((_181613_data == nullptr)) {
		return _180813_node;;
	};
	_180813_node._field_Data=_181613_data;
	_1d715ba68_applyMeta(_self_.ptr(), &(_180813_node));
	if (((*(_self_))._field_directives.len() != 0LL)) {
		_1d714d72a_pushErr(_self_.ptr(), (*((*(_self_))._field_directives[0LL]))._field_Tag, jule::Str::lit("this directive is out of scope, put it where it will be useful or delete it", 75), jule::Slice<jule::Any>());
	};
	(*(_self_))._field_directives=nullptr;
	return _180813_node;;
}



inline void _1d715c75b_appendNode(jule::Ptr<_1d714cc79_parser> _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _183135_st) {
	if (((*(_183135_st)).len() == 0LL)) {
		return;;
	};
	_1d64ea3d0_Node _183513_node = _1d715c4a3_parseNode(_self_, _183135_st);;
	if (((_183513_node._field_Data == nullptr) || _1d714d30c_stopped(_self_.ptr()))) {
		return;;
	};
	{ jule::Slice<_1d64ea3d0_Node> &__jule_push_dest = (*((*(_self_))._field_ast))._field_Nodes; __jule_push_dest.push(_183513_node); };
}



inline void _1d715cc34_removeRange(_1d714cc79_parser* _self_, jule::I64 _184230_i, jule::U64 _184238_id, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _184252_tokens, jule::Slice<jule::I64>* _184275_ranges) {
	jule::U64 _18439_close = _1d714be65_getCloseOfBrace(_184238_id);;
	for (; (_184230_i >= 0LL); (_184230_i)--) {
		{
			jule::Ptr<_1d64d5cd3_Token> _184513_tok = (*(_184252_tokens))[(*(_184275_ranges))[_184230_i]];;
			if (((*(_184513_tok))._field_Id != _18439_close)) {
				goto _iter_next_1da94edb3;
			};
			(*(_184275_ranges))=jule::append((*(_184275_ranges)).slice(0LL, _184230_i),(*(_184275_ranges)).slice((_184230_i + 1LL)));
			goto _iter_end_1da94edb3;
		}
	_iter_next_1da94edb3:;
	}
	_iter_end_1da94edb3:;;
}



inline void _1d715d152_pushWrongOrderCloseErr(_1d714cc79_parser* _self_, jule::Ptr<_1d64d5cd3_Token>* _185442_t, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _185454_tokens, jule::Slice<jule::I64>* _185473_ranges) {
	{
		auto &_match_expr{ (*((*(_185454_tokens))[(*(_185473_ranges))[((*(_185473_ranges)).len() - 1LL)]]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(74LLU)) {
			_case_begin_1da9523e3:;
			{
				_1d714d72a_pushErr(_self_, (*(_185442_t)), jule::Str::lit("was expected parentheses close", 30), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_1da95246a:;
			{
				_1d714d72a_pushErr(_self_, (*(_185442_t)), jule::Str::lit("was expected brace close", 24), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U64>(76LLU)) {
			_case_begin_1da9524e2:;
			{
				_1d714d72a_pushErr(_self_, (*(_185442_t)), jule::Str::lit("was expected bracket close", 26), jule::Slice<jule::Any>());
			}
		}
		_match_end_1da9522c2:;
	};
}



inline void _1d715d62a_pushRangeClose(_1d714cc79_parser* _self_, jule::Ptr<_1d64d5cd3_Token> _186533_t, jule::U64 _186544_left, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _186560_tokens, jule::Slice<jule::I64>* _186583_ranges) {
	jule::I64 _18669_n = (*(_186583_ranges)).len();;
	if ((_18669_n == 0LL)) {
		{
			auto &_match_expr{ (*(_186533_t))._field_Id };
			
			if (_match_expr == static_cast<jule::U64>(77LLU)) {
				_case_begin_1da95500b:;
				{
					_1d714d72a_pushErr(_self_, _186533_t, jule::Str::lit("extra closed brackets", 21), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U64>(73LLU)) {
				_case_begin_1da955083:;
				{
					_1d714d72a_pushErr(_self_, _186533_t, jule::Str::lit("extra closed braces", 19), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U64>(75LLU)) {
				_case_begin_1da95510a:;
				{
					_1d714d72a_pushErr(_self_, _186533_t, jule::Str::lit("extra closed parentheses", 24), jule::Slice<jule::Any>());
				}
			}
			_match_end_1da954e2e:;
		};
		return;;
	} else if (((*((*(_186560_tokens))[(*(_186583_ranges))[(_18669_n - 1LL)]]))._field_Id != _186544_left)) {
		_1d715d152_pushWrongOrderCloseErr(_self_, &(_186533_t), _186560_tokens, _186583_ranges);
	};
	_1d715cc34_removeRange(_self_, static_cast<jule::I64>((_18669_n - 1LL)), (*(_186533_t))._field_Id, _186560_tokens, _186583_ranges);
}



inline void _1d715d8d3_checkRanges(_1d714cc79_parser* _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _188331_tokens) {
	jule::Slice<jule::I64> _188417_ranges = nullptr;;
	{
		auto expr = _188331_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1da958152:;
		if (it != expr_end) {
			jule::I64 _188613_i = it - expr->begin();
			jule::Ptr<_1d64d5cd3_Token> *_188616_token = it;
			{
				{
					auto &_match_expr{ (*((*(_188616_token))))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1da958e66:;
						{
							{ jule::Slice<jule::I64> &__jule_push_dest = _188417_ranges; __jule_push_dest.push(_188613_i); };
						}
					}
					else if (_match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1da958edd:;
						{
							_1d715d62a_pushRangeClose(_self_, (*(_188616_token)), static_cast<jule::U64>(74LLU), _188331_tokens, &(_188417_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU)) {
						_case_begin_1da959065:;
						{
							_1d715d62a_pushRangeClose(_self_, (*(_188616_token)), static_cast<jule::U64>(72LLU), _188331_tokens, &(_188417_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_1da9590dc:;
						{
							_1d715d62a_pushRangeClose(_self_, (*(_188616_token)), static_cast<jule::U64>(76LLU), _188331_tokens, &(_188417_ranges));
						}
					}
					_match_end_1da958d78:;
				};
			}
			_iter_next_1da958152:;
			++it;
			_188613_i++;
			goto _iter_begin_1da958152;
		}
		_iter_end_1da958152:;
	};
	{
		auto expr = &(_188417_ranges);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1da9580db:;
		if (it != expr_end) {
			jule::I64 _190116_i = *it;
			{
				jule::Ptr<_1d64d5cd3_Token> _190213_token = (*(_188331_tokens))[_190116_i];;
				{
					auto &_match_expr{ (*(_190213_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1da95bb06:;
						{
							_1d714d72a_pushErr(_self_, _190213_token, jule::Str::lit("parentheses waiting to close", 28), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1da95bb7d:;
						{
							_1d714d72a_pushErr(_self_, _190213_token, jule::Str::lit("brace waiting to close", 22), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1da95bc05:;
						{
							_1d714d72a_pushErr(_self_, _190213_token, jule::Str::lit("bracket are waiting to close", 28), jule::Slice<jule::Any>());
						}
					}
					_match_end_1da95ba7e:;
				};
			}
			_iter_next_1da9580db:;
			++it;
			goto _iter_begin_1da9580db;
		}
		_iter_end_1da9580db:;
	};
}



inline void _1d715db8b_parse(jule::Ptr<_1d714cc79_parser> _self_, jule::Ptr<_1d64db59c_File>* _191430_f) {
	(*(_self_))._field_ast=jule::new_ptr<_1d64e9423_Ast>(_1d64e9423_Ast{._field_File=(*(_191430_f)), });
	(*(_self_))._field_ep=jule::new_ptr<_1d713c3d9_exprBuilder>(_1d713c3d9_exprBuilder{._field_p=_self_});
	_1d715d8d3_checkRanges(_self_.ptr(), &((*((*(_191430_f))))._field_Tokens));
	if (((*(_self_))._field_errors.len() > 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1d712e123_stmt>> _192713_stmts = _1d712e4ca_splitStmts(&((*((*(_191430_f))))._field_Tokens));;
	jule::I64 _193013_i = 0LL;;
	for (; (_193013_i < _192713_stmts.len()); (_193013_i)++) {
		{
			jule::Ptr<_1d712e123_stmt> _193217_stmt = _192713_stmts[_193013_i];;
			if (((*(_193217_stmt))._field_tokens.len() < 2LL)) {
				return;;
			};
			if (((*((*(_193217_stmt))._field_tokens[0LL]))._field_Id != static_cast<jule::U64>(35LLU))) {
				goto _iter_end_1da960511;
			};
			if ((!(_1e02377ea_IsTopDirective((*((*(_193217_stmt))._field_tokens[1LL]))._field_Kind)))) {
				goto _iter_end_1da960511;
			};
			{ jule::Slice<jule::Ptr<_1d64ea7ed_Directive>> &__jule_push_dest = (*((*(_self_))._field_ast))._field_TopDirectives; __jule_push_dest.push(_1d714e220_buildDirective(_self_.ptr(), (*(_193217_stmt))._field_tokens)); };
		}
	_iter_next_1da960511:;
	}
	_iter_end_1da960511:;;
	(*(_self_))._field_errors=nullptr;
	for (; (_193013_i < _192713_stmts.len()); (_193013_i)++) {
		{
			jule::Ptr<_1d712e123_stmt> _194917_stmt = _192713_stmts[_193013_i];;
			_1d715c75b_appendNode(_self_, &((*(_194917_stmt))._field_tokens));
			if (_1d714d30c_stopped(_self_.ptr())) {
				goto _iter_end_1da962eb4;
			};
		}
	_iter_next_1da962eb4:;
	}
	_iter_end_1da962eb4:;;
	if (((*(_self_))._field_directives.len() != 0LL)) {
		_1d714d72a_pushErr(_self_.ptr(), (*((*(_self_))._field_directives[0LL]))._field_Tag, jule::Str::lit("this directive is out of scope, put it where it will be useful or delete it", 75), jule::Slice<jule::Any>());
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1d714cc79_parser _Src) {
	_Stream << "parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ep:" << _Src._field_ep;
	_Stream << "}";
	return _Stream;
}



inline void _1d71604ea_pushErr(_1d715ee56_typeBuilder* _self_, jule::Ptr<_1d64d5cd3_Token> _4126_token, jule::Str _4141_fmt) {
	if ((*(_self_))._field_err) {
		_1d714d72a_pushErr((*(_self_))._field_p.ptr(), _4126_token, _4141_fmt, jule::Slice<jule::Any>());
	};
}



inline void _1d716085d_pushSuggestion(_1d715ee56_typeBuilder* _self_, jule::Str _4833_fmt, jule::Slice<jule::Any> _4846_args) {
	if ((*(_self_))._field_err) {
		_1d714da8d_pushSuggestion((*(_self_))._field_p.ptr(), _4833_fmt, _4846_args);
	};
}



inline jule::Ptr<_1d64eb3d1_TypeDecl> _1d7160ae4_buildNamespace(_1d715ee56_typeBuilder* _self_) {
	jule::Ptr<_1d64eb3d1_TypeDecl> _5513_t = jule::new_ptr<_1d64eb3d1_TypeDecl>(_1d64eb3d1_TypeDecl{._field_Token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))], });;
	jule::Ptr<_1d64ec17e_NamespaceTypeDecl> _5913_nst = jule::new_ptr<_1d64ec17e_NamespaceTypeDecl>();;
	jule::I64 _6013_n = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_1d64d5cd3_Token> _6217_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			if (((_6013_n & 1LL) == 0LL)) {
				if (((*(_6217_token))._field_Id != static_cast<jule::U64>(1LLU))) {
					_1d71604ea_pushErr(_self_, _6217_token, jule::Str::lit("invalid syntax", 14));
					_1d716085d_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
				};
				{ jule::Slice<jule::Ptr<_1d64d5cd3_Token>> &__jule_push_dest = (*(_5913_nst))._field_Idents; __jule_push_dest.push(_6217_token); };
			} else if (((*(_6217_token))._field_Id != static_cast<jule::U64>(19LLU))) {
				goto _iter_end_1da969394;
			};
			(_6013_n)++;
		}
	_iter_next_1da969394:;
	}
	_iter_end_1da969394:;;
	(*(_5913_nst))._field_Idents=(*(_5913_nst))._field_Idents.slice(0LL, ((*(_5913_nst))._field_Idents.len() - 1LL));
	((*((*(_self_))._field_i)))--;
	(*(_5913_nst))._field_Kind=_1d7161397_buildIdent(_self_);
	(*(_5513_t))._field_Kind=jule::Any(_5913_nst, &__jule_any_type90);
	return _5513_t;;
}



inline jule::Slice<jule::Ptr<_1d64eb3d1_TypeDecl>> _1d7160d7a_buildGenerics(_1d715ee56_typeBuilder* _self_) {
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		return nullptr;;
	};
	jule::Ptr<_1d64d5cd3_Token> _889_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if (((*(_889_token))._field_Id != static_cast<jule::U64>(76LLU))) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1d64d5cd3_Token>>> _9313_parts = _1d7161111_identGenerics(_self_);;
	if ((_9313_parts.len() == 0LL)) {
		_1d71604ea_pushErr(_self_, _889_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1d64eb3d1_TypeDecl>> _9913_types = jule::Slice<jule::Ptr<_1d64eb3d1_TypeDecl>>::alloc(0LL, _9313_parts.len());;
	{
		auto expr = &(_9313_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1da970e28:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _10021_part = *it;
			{
				jule::I64 _10117_j = 0LL;;
				jule::Ptr<_1d64eb3d1_TypeDecl> _10217_t;;
				({
					__jule_tuple_x_1d64eb3d1_TypeDecl__jule_tuple_bool __jule_assign_result = _1d7150331_buildType((*(_self_))._field_p, &(_10021_part), (&(_10117_j)), true);
					_10217_t = __jule_assign_result.__jule_result_arg0;
				});
				if ((_10117_j < _10021_part.len())) {
					_1d71604ea_pushErr(_self_, _10021_part[_10117_j], jule::Str::lit("invalid syntax", 14));
				};
				{ jule::Slice<jule::Ptr<_1d64eb3d1_TypeDecl>> &__jule_push_dest = _9913_types; __jule_push_dest.push(_10217_t); };
			}
			_iter_next_1da970e28:;
			++it;
			goto _iter_begin_1da970e28;
		}
		_iter_end_1da970e28:;
	};
	return _9913_types;;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1d64d5cd3_Token>>> _1d7161111_identGenerics(_1d715ee56_typeBuilder* _self_) {
	jule::I64 _1129_first = (*((*(_self_))._field_i));;
	jule::I64 _11313_rangeN = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_1d64d5cd3_Token> _11513_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			{
				auto &_match_expr{ (*(_11513_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(76LLU)) {
					_case_begin_1da97548d:;
					{
						(_11313_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(77LLU)) {
					_case_begin_1da975515:;
					{
						(_11313_rangeN)--;
					}
				}
				_match_end_1da975427:;
			};
			if ((_11313_rangeN == 0LL)) {
				((*((*(_self_))._field_i)))++;
				goto _iter_end_1da97449d;
			};
		}
	_iter_next_1da97449d:;
	}
	_iter_end_1da97449d:;;
	jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _12713_tokens = (*(_self_))._field_tokens.slice((_1129_first + 1LL), ((*((*(_self_))._field_i)) - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1d64d5cd3_Token>>> _12813_parts;;
	jule::Slice<_1e0235a7e_Log> _12820_errors;;
	({
		__jule_tuple_ssx_1d64d5cd3_Token__jule_tuple_s_1e0235a7e_Log __jule_assign_result = _1d714bb9b_parts(&(_12713_tokens), static_cast<jule::U64>(5LLU), true);
		_12813_parts = __jule_assign_result.__jule_result_arg0;
		_12820_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((*(_self_))._field_err) {
		((*((*(_self_))._field_p))._field_errors).append(_12820_errors);;
	};
	return _12813_parts;;
}



inline jule::Ptr<_1d64eb3d1_TypeDecl> _1d7161397_buildIdent(_1d715ee56_typeBuilder* _self_) {
	jule::Bool _13613_next = (((*((*(_self_))._field_i)) + 1LL) < (*(_self_))._field_tokens.len());;
	if ((_13613_next && ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id == static_cast<jule::U64>(19LLU)))) {
		return _1d7160ae4_buildNamespace(_self_);;
	};
	jule::Ptr<_1d64d5cd3_Token> _14013_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1d64eb9db_IdentTypeDecl> _14113_it = jule::new_ptr<_1d64eb9db_IdentTypeDecl>(_1d64eb9db_IdentTypeDecl{._field_Token=_14013_token, ._field_Ident=(*(_14013_token))._field_Kind, ._field_Binded=false, });;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1d64eb3d1_TypeDecl> _14713_itd = jule::new_ptr<_1d64eb3d1_TypeDecl>(_1d64eb3d1_TypeDecl{._field_Token=_14013_token, ._field_Kind=jule::Any(_14113_it, &__jule_any_type20)});;
	if (((!(_13613_next)) || ((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U64>(17LLU)))) {
		(*(_14113_it))._field_Generics=_1d7160d7a_buildGenerics(_self_);
		return _14713_itd;;
	};
	if ((((*(_self_))._field_tokens.len() - (*((*(_self_))._field_i))) == 1LL)) {
		_1d71604ea_pushErr(_self_, _14013_token, jule::Str::lit("invalid syntax", 14));
		return _14713_itd;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1d71604ea_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str::lit("invalid syntax", 14));
		return _14713_itd;;
	};
	jule::Ptr<_1d64ebcd8_SubIdentTypeDecl> _16413_sit = jule::new_ptr<_1d64ebcd8_SubIdentTypeDecl>();;
	{ jule::Slice<jule::Ptr<_1d64eb9db_IdentTypeDecl>> &__jule_push_dest = (*(_16413_sit))._field_Idents; __jule_push_dest.push(_14113_it); };
	jule::Ptr<_1d64eb3d1_TypeDecl> _16613_ident = _1d7161397_buildIdent(_self_);;
	{
		auto &_match_expr{ (*(_16613_ident))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1da980bd5:;
			{
				{ jule::Slice<jule::Ptr<_1d64eb9db_IdentTypeDecl>> &__jule_push_dest = (*(_16413_sit))._field_Idents; __jule_push_dest.push((*(_16613_ident))._field_Kind.cast_ptr<_1d64eb9db_IdentTypeDecl>(&__jule_any_type20)); };
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1da980c5c:;
			{
				((*(_16413_sit))._field_Idents).append((*((*(_16613_ident))._field_Kind.cast_ptr<_1d64ebcd8_SubIdentTypeDecl>(&__jule_any_type86)))._field_Idents);;
			}
		}
		_match_end_1da980b6e:;
	};
	return jule::new_ptr<_1d64eb3d1_TypeDecl>(_1d64eb3d1_TypeDecl{._field_Token=_14013_token, ._field_Kind=jule::Any(_16413_sit, &__jule_any_type86)});;
}



inline jule::Ptr<_1d64eb3d1_TypeDecl> _1d716162d_buildCppLink(_1d715ee56_typeBuilder* _self_) {
	if (((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len()) || ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id != static_cast<jule::U64>(17LLU)))) {
		_1d71604ea_pushErr(_self_, (*(_self_))._field_tokens[(*((*(_self_))._field_i))], jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	(*((*(_self_))._field_i))+=2LL;
	jule::Ptr<_1d64eb3d1_TypeDecl> _18513_t = _1d7161397_buildIdent(_self_);;
	(*((*(_18513_t))._field_Kind.cast_ptr<_1d64eb9db_IdentTypeDecl>(&__jule_any_type20)))._field_Binded=true;
	return _18513_t;;
}



inline jule::Ptr<_1d64eb3d1_TypeDecl> _1d71618b4_buildFn(_1d715ee56_typeBuilder* _self_) {
	jule::Ptr<_1d64d5cd3_Token> _19113_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1d650d091_FnDecl> _19213_f = _1d71544bc_buildFnPrototype((*(_self_))._field_p, &((*(_self_))._field_tokens), &((*((*(_self_))._field_i))), false);;
	if ((_19213_f == nullptr)) {
		return nullptr;;
	};
	if ((!(_1d650d404_IsAnon(_19213_f.ptr())))) {
		_1d71604ea_pushErr(_self_, (*(_19213_f))._field_Token, jule::Str::lit("invalid syntax", 14));
	};
	return jule::new_ptr<_1d64eb3d1_TypeDecl>(_1d64eb3d1_TypeDecl{._field_Token=_19113_token, ._field_Kind=jule::Any(_19213_f, &__jule_any_type14)});;
}



inline jule::Ptr<_1d64eb3d1_TypeDecl> _1d7161b4a_buildPtr(_1d715ee56_typeBuilder* _self_) {
	jule::Ptr<_1d64d5cd3_Token> _20613_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1d71604ea_pushErr(_self_, _20613_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id == static_cast<jule::U64>(31LLU))) {
		((*((*(_self_))._field_i)))++;
		return jule::new_ptr<_1d64eb3d1_TypeDecl>(_1d64eb3d1_TypeDecl{._field_Token=_20613_token, ._field_Kind=jule::Any(jule::new_ptr<_1d64ece0a_PtrTypeDecl>(_1d64ece0a_PtrTypeDecl{._field_Elem=nullptr}), &__jule_any_type71)});;
	};
	jule::Ptr<_1d64eb3d1_TypeDecl> _22313_elem = _1d7162ba1_step(_self_);;
	if ((_22313_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1d64eb3d1_TypeDecl>(_1d64eb3d1_TypeDecl{._field_Token=_20613_token, ._field_Kind=jule::Any(jule::new_ptr<_1d64ece0a_PtrTypeDecl>(_1d64ece0a_PtrTypeDecl{._field_Elem=_22313_elem}), &__jule_any_type71)});;
}



inline jule::Ptr<_1d64eb3d1_TypeDecl> _1d7161dd1_buildSptr(_1d715ee56_typeBuilder* _self_) {
	jule::Ptr<_1d64d5cd3_Token> _23713_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1d71604ea_pushErr(_self_, _23713_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1d64eb3d1_TypeDecl> _24413_elem = _1d7162ba1_step(_self_);;
	if ((_24413_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1d64eb3d1_TypeDecl>(_1d64eb3d1_TypeDecl{._field_Token=_23713_token, ._field_Kind=jule::Any(jule::new_ptr<_1d64ec47b_SptrTypeDecl>(_1d64ec47b_SptrTypeDecl{._field_Elem=_24413_elem}), &__jule_any_type72)});;
}



inline jule::Ptr<_1d64eb3d1_TypeDecl> _1d7162167_buildSlc(_1d715ee56_typeBuilder* _self_) {
	jule::Ptr<_1d64d5cd3_Token> _25813_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1d64eb3d1_TypeDecl> _26013_elem = _1d7162ba1_step(_self_);;
	if ((_26013_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1d64eb3d1_TypeDecl>(_1d64eb3d1_TypeDecl{._field_Token=_25813_token, ._field_Kind=jule::Any(jule::new_ptr<_1d64ec811_SlcTypeDecl>(_1d64ec811_SlcTypeDecl{._field_Elem=_26013_elem}), &__jule_any_type70)});;
}



inline jule::Ptr<_1d64eb3d1_TypeDecl> _1d71623ed_buildArr(_1d715ee56_typeBuilder* _self_) {
	jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _27313_exprTokens = _1d714b42b_range(&((*((*(_self_))._field_i))), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1d71604ea_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str::lit("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_1d64eb3d1_TypeDecl> _27913_elem = _1d7162ba1_step(_self_);;
	if ((_27913_elem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1d64ed69c_ArrTypeDecl> _28413_arrt = jule::new_ptr<_1d64ed69c_ArrTypeDecl>(_1d64ed69c_ArrTypeDecl{._field_Elem=_27913_elem, });;
	jule::Ptr<_1d64d5cd3_Token> _28813_token = _27313_exprTokens[0LL];;
	if (((_27313_exprTokens.len() == 1LL) && ((*(_28813_token))._field_Id == static_cast<jule::U64>(39LLU)))) {
	} else {
		(*(_28413_arrt))._field_Size=_1d714ddce_buildExpr((*(_self_))._field_p, &(_27313_exprTokens));
	};
	return jule::new_ptr<_1d64eb3d1_TypeDecl>(_1d64eb3d1_TypeDecl{._field_Token=_28813_token, ._field_Kind=jule::Any(_28413_arrt, &__jule_any_type69)});;
}



inline jule::Ptr<_1d64eb3d1_TypeDecl> _1d7162684_buildMap(_1d715ee56_typeBuilder* _self_) {
	jule::Ptr<_1d64d5cd3_Token> _30213_mapToken = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1d71604ea_pushErr(_self_, _30213_mapToken, jule::Str::lit("type missing", 12));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _31013_keyTokens = _1d714b42b_range(&((*((*(_self_))._field_i))), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1d71604ea_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str::lit("type missing", 12));
		return nullptr;;
	} else if ((_31013_keyTokens.len() == 0LL)) {
		_1d71604ea_pushErr(_self_, _30213_mapToken, jule::Str::lit("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_1d64eddea_MapTypeDecl> _31913_mapt = jule::new_ptr<_1d64eddea_MapTypeDecl>();;
	jule::I64 _32013_j = 0LL;;
	jule::Ptr<_1d64eb3d1_TypeDecl> _32113_keyt;;
	jule::Bool _32123_ok = false;;
	({
		__jule_tuple_x_1d64eb3d1_TypeDecl__jule_tuple_bool __jule_assign_result = _1d7150331_buildType((*(_self_))._field_p, &(_31013_keyTokens), (&(_32013_j)), (*(_self_))._field_err);
		_32113_keyt = __jule_assign_result.__jule_result_arg0;
		_32123_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_32123_ok))) {
		return nullptr;;
	} else if ((_32013_j < _31013_keyTokens.len())) {
		_1d71604ea_pushErr(_self_, _31013_keyTokens[_32013_j], jule::Str::lit("invalid syntax", 14));
	};
	(*(_31913_mapt))._field_Key=_32113_keyt;
	jule::Ptr<_1d64eb3d1_TypeDecl> _32913_valt;;
	({
		__jule_tuple_x_1d64eb3d1_TypeDecl__jule_tuple_bool __jule_assign_result = _1d7150331_buildType((*(_self_))._field_p, &((*(_self_))._field_tokens), (*(_self_))._field_i, (*(_self_))._field_err);
		_32913_valt = __jule_assign_result.__jule_result_arg0;
		_32123_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_32123_ok))) {
		return nullptr;;
	};
	(*(_31913_mapt))._field_Val=_32913_valt;
	return jule::new_ptr<_1d64eb3d1_TypeDecl>(_1d64eb3d1_TypeDecl{._field_Token=_30213_mapToken, ._field_Kind=jule::Any(_31913_mapt, &__jule_any_type73)});;
}



inline jule::Ptr<_1d64eb3d1_TypeDecl> _1d716291a_buildEnumerable(_1d715ee56_typeBuilder* _self_) {
	jule::Ptr<_1d64d5cd3_Token> _34113_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 2LL) >= (*(_self_))._field_tokens.len())) {
		_1d71604ea_pushErr(_self_, _34113_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	_34113_token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))];
	if (((*(_34113_token))._field_Id == static_cast<jule::U64>(77LLU))) {
		return _1d7162167_buildSlc(_self_);;
	};
	((*((*(_self_))._field_i)))--;
	return _1d71623ed_buildArr(_self_);;
}



inline jule::Ptr<_1d64eb3d1_TypeDecl> _1d7162ba1_step(_1d715ee56_typeBuilder* _self_) {
	jule::Ptr<_1d64d5cd3_Token> _3569_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	{
		auto &_match_expr{ (*(_3569_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1da9a580e:;
			{
				return _1d7161397_buildIdent(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1da9a4797:;
			{
				return _1d716162d_buildCppLink(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1da9a5930:;
			{
				return _1d71618b4_buildFn(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1da9a50e4:;
			{
				return _1d7161b4a_buildPtr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1da9a515a:;
			{
				return _1d7161dd1_buildSptr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1da9a51c1:;
			{
				return jule::new_ptr<_1d64eb3d1_TypeDecl>(_1d64eb3d1_TypeDecl{._field_Kind=jule::Any(jule::new_ptr<_1d64ec47b_SptrTypeDecl>(_1d64ec47b_SptrTypeDecl{._field_Elem=_1d7161dd1_buildSptr(_self_)}), &__jule_any_type72)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(76LLU)) {
			_case_begin_1da9a5237:;
			{
				return _1d716291a_buildEnumerable(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(37LLU)) {
			_case_begin_1da9a5bc7:;
			{
				return _1d7162684_buildMap(_self_);;
			}
		}
		else {
			_case_begin_1da9a507d:;
			{
				((*((*(_self_))._field_i)))++;
				_1d71604ea_pushErr(_self_, _3569_token, jule::Str::lit("invalid syntax", 14));
				return nullptr;;
			}
		}
		_match_end_1da9a5028:;
	};
}



inline __jule_tuple_x_1d64eb3d1_TypeDecl__jule_tuple_bool _1d7162e37_build(_1d715ee56_typeBuilder* _self_) {
	__jule_tuple_x_1d64eb3d1_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1d64eb3d1_TypeDecl> _38813_root = _1d7162ba1_step(_self_);;
	if ((_38813_root == nullptr)) {
		__jule_func_result.__jule_result_arg0 = _1d715e692_buildVoidType();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _38813_root;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1d715ee56_typeBuilder _Src) {
	_Stream << "typeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d6879198_CompileInfo _Src) {
	_Stream << "CompileInfo{";
	_Stream << "Prod:" << _Src._field_Prod << ", ";
	_Stream << "Test:" << _Src._field_Test << ", ";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CppStd:" << _Src._field_CppStd;
	_Stream << "}";
	return _Stream;
}



inline void _1d687abc2_pushErr(_1d687a672_directiveEval* _self_, jule::Ptr<_1d64d5cd3_Token> _2126_t, jule::Str _2137_fmt, jule::Slice<jule::Any> _2150_args) {
	{ jule::Slice<_1e0235a7e_Log> &__jule_push_dest = (*(_self_))._field_logs; __jule_push_dest.push(_1e0235a7e_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*(_2126_t))._field_Row, ._field_Column=(*(_2126_t))._field_Column, ._field_Path=(*((*(_2126_t))._field_File))._field_Path, ._field_Text=_1e0235ee1_Logf(_2137_fmt, _2150_args), }); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_1d64d5cd3_Token>>> _1d687b0bd_splitOperans(_1d687a672_directiveEval* _self_, jule::U64 _3331_op, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _3349_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1d64d5cd3_Token>>> _3413_parts = jule::Slice<jule::Slice<jule::Ptr<_1d64d5cd3_Token>>>::alloc(0LL, 10LL);;
	jule::I64 _3513_i = 0LL;;
	jule::I64 _3613_rangeN = 0LL;;
	jule::I64 _3713_last = 0LL;;
	for (; (_3513_i < ((*(_3349_tokens)).len() - 1LL)); (_3513_i)++) {
		{
			jule::Ptr<_1d64d5cd3_Token> _3913_b = (*(_3349_tokens))[_3513_i];;
			{
				auto &_match_expr{ (*(_3913_b))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1da9ca1d5:;
					{
						(_3613_rangeN)++;
						goto _iter_next_1da9c947b;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1da9ca25c:;
					{
						(_3613_rangeN)--;
					}
				}
				_match_end_1da9ca16e:;
			};
			if (((_3613_rangeN > 0LL) || ((*(_3913_b))._field_Id != _3331_op))) {
				goto _iter_next_1da9c947b;
			};
			{ jule::Slice<jule::Slice<jule::Ptr<_1d64d5cd3_Token>>> &__jule_push_dest = _3413_parts; __jule_push_dest.push((*(_3349_tokens)).slice(_3713_last, _3513_i)); };
			_3713_last=static_cast<jule::I64>((_3513_i + 1LL));
		}
	_iter_next_1da9c947b:;
	}
	_iter_end_1da9c947b:;;
	if ((_3713_last < (*(_3349_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1d64d5cd3_Token>>> &__jule_push_dest = _3413_parts; __jule_push_dest.push((*(_3349_tokens)).slice(_3713_last)); };
	} else {
		_1d687abc2_pushErr(_self_, (*(_3349_tokens))[(_3713_last - 1LL)], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _3413_parts;;
}



inline jule::Bool _1d687b40e_evalDirectiveIdent(_1d687a672_directiveEval* _self_, jule::Str _6433_ident) {
	if ((_6433_ident).empty()) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1da9ccbcc:;
		if (it != expr_end) {
			jule::Str *_6816_var = it;
			{
				if (((*(_6816_var)) == _6433_ident)) {
					return true;;
				};
			}
			_iter_next_1da9ccbcc:;
			++it;
			goto _iter_begin_1da9ccbcc;
		}
		_iter_end_1da9ccbcc:;
	};
	return false;;
}



inline jule::Bool _1d687b750_evalDirectivePart(_1d687a672_directiveEval* _self_, jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _7840_part) {
	jule::Bool _799_logicalNot = ((*(_7840_part[0LL]))._field_Id == static_cast<jule::U64>(68LLU));;
	if (_799_logicalNot) {
		(_7840_part).mut_slice(1LL);;
	};
	if ((_7840_part.len() > 1LL)) {
		_1d687abc2_pushErr(_self_, _7840_part[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _8913_result = _1d687b40e_evalDirectiveIdent(_self_, (*(_7840_part[0LL]))._field_Kind);;
	if (_799_logicalNot) {
		_8913_result=(!(_8913_result));
	};
	return _8913_result;;
}



inline jule::Bool _1d687b9d6_eval(_1d687a672_directiveEval* _self_) {
	if (((*((*(_self_))._field_d))._field_Args.len() == 0LL)) {
		_1d687abc2_pushErr(_self_, (*((*(_self_))._field_d))._field_Tag, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _10213_result = false;;
	jule::Slice<jule::Slice<jule::Ptr<_1d64d5cd3_Token>>> _10413_logicalOrParts = _1d687b0bd_splitOperans(_self_, static_cast<jule::U64>(55LLU), &((*((*(_self_))._field_d))._field_Args));;
	if ((_10413_logicalOrParts == nullptr)) {
		return false;;
	};
	{
		auto expr = &(_10413_logicalOrParts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1da9d3342:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _10921_part = *it;
			{
				jule::Bool _11017_and = true;;
				jule::Slice<jule::Slice<jule::Ptr<_1d64d5cd3_Token>>> _11117_logicalAndParts = _1d687b0bd_splitOperans(_self_, static_cast<jule::U64>(54LLU), &(_10921_part));;
				if ((_11117_logicalAndParts == nullptr)) {
					return false;;
				};
				{
					auto expr = &(_11117_logicalAndParts);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1da9d4b3a:;
					if (it != expr_end) {
						jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _11625_andPart = *it;
						{
							jule::Ptr<_1d64d5cd3_Token> _11717_first = _11625_andPart[0LL];;
							if (((*(_11717_first))._field_Id == static_cast<jule::U64>(74LLU))) {
								jule::Ptr<_1d64d5cd3_Token> _11921_end = _11625_andPart[(_11625_andPart.len() - 1LL)];;
								if (((*(_11921_end))._field_Id != static_cast<jule::U64>(75LLU))) {
									_1d687abc2_pushErr(_self_, _11717_first, jule::Str::lit("parentheses waiting to close", 28), jule::Slice<jule::Any>());
									return false;;
								};
								(_11625_andPart).mut_slice(1LL, (_11625_andPart.len() - 1LL));;
							};
							_11017_and=(_11017_and && _1d687b750_evalDirectivePart(_self_, _11625_andPart));
						}
						_iter_next_1da9d4b3a:;
						++it;
						goto _iter_begin_1da9d4b3a;
					}
					_iter_end_1da9d4b3a:;
				};
				_10213_result=(_10213_result || _11017_and);
			}
			_iter_next_1da9d3342:;
			++it;
			goto _iter_begin_1da9d3342;
		}
		_iter_end_1da9d3342:;
	};
	return _10213_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1d687a672_directiveEval _Src) {
	_Stream << "directiveEval{";
	_Stream << "logs:" << _Src._field_logs << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1d7163e49_JuleImporter> static__1d7164345_New(_1d6879198_CompileInfo _5819_info) {
	jule::Ptr<_1d7163e49_JuleImporter> _5913_imp = jule::new_ptr<_1d7163e49_JuleImporter>(_1d7163e49_JuleImporter{._field_mods=jule::Slice<jule::Str>::make({_1e034e33a_PathStdlib}), });;
	_1d6879a28_initVars(&((*(_5913_imp))._field_vars), &(_5819_info));
	return _5913_imp;;
}



inline jule::Slice<jule::Ptr<_1d659590e_ImportInfo>> _1d71645cb_AllPackages(_1d7163e49_JuleImporter* _self_) {
	return (*(_self_))._field_pkgs;;
}



inline void _1d7164a1b_SetModPath(_1d7163e49_JuleImporter* _self_, jule::Str _7529_path) {
	(*(_self_))._field_mod=_7529_path;
}



inline jule::Str _1d7164ca2_GetModPath(_1d7163e49_JuleImporter* _self_) {
	return (*(_self_))._field_mod;;
}



inline jule::Str _1d71650e3_ModById(_1d7163e49_JuleImporter* _self_, jule::I64 _8322_id) {
	return (*(_self_))._field_mods[_8322_id];;
}



inline jule::Ptr<_1d659590e_ImportInfo> _1d7165434_GetImport(_1d7163e49_JuleImporter* _self_, jule::Str _8728_path) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1da9db2e5:;
		if (it != expr_end) {
			jule::Ptr<_1d659590e_ImportInfo> _8821_p = *it;
			{
				if (((*(_8821_p))._field_Path == _8728_path)) {
					return _8821_p;;
				};
			}
			_iter_next_1da9db2e5:;
			++it;
			goto _iter_begin_1da9db2e5;
		}
		_iter_end_1da9db2e5:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1d64e9423_Ast__jule_tuple_s_1e0235a7e_Log _1d7165830_ImportPackage(_1d7163e49_JuleImporter* _self_, jule::Str _9632_path, jule::Bool _9643_update_mod) {
	__jule_tuple_sx_1d64e9423_Ast__jule_tuple_s_1e0235a7e_Log __jule_func_result;
	jule::Slice<jule::Ptr<_216764ce0_DirEntry>> _9713_dirents = ({
		auto except = static__1e0193de9_Read(_9632_path);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = jule::Slice<_1e0235a7e_Log>::make({_1d7163960_flatCompilerErr((jule::Str::lit("connot read package directory: ", 31) + _9632_path))});
			return __jule_func_result;;
		} jule::Slice<jule::Ptr<_216764ce0_DirEntry>>(nullptr);});
	});;
	if (_9643_update_mod) {
		jule::Str _10213_newMod = _1d65b2233_FindModuleFileDeep(_9632_path);;
		if ((_10213_newMod != (*(_self_))._field_mod)) {
			(*(_self_))._field_mod=_10213_newMod;
			jule::Slice<_1e0235a7e_Log> _10521_errs = _1d65b24ec_CheckModuleFile(&((*(_self_))._field_mod));;
			if ((_10521_errs.len() != 0LL)) {
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = _10521_errs;
				return __jule_func_result;;
			};
		};
	};
	jule::Slice<jule::Ptr<_1d64e9423_Ast>> _11213_asts = jule::Slice<jule::Ptr<_1d64e9423_Ast>>::alloc(0LL, _9713_dirents.len());;
	{
		auto expr = &(_9713_dirents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1da9dc99a:;
		if (it != expr_end) {
			jule::Ptr<_216764ce0_DirEntry> _11316_dirent = *it;
			{
				if ((_216769179_IsDir((*(_11316_dirent))._field_Stat.ptr()) || (!(_1e016eda3_HasSuffix((*(_11316_dirent))._field_Name, jule::Str::lit(".jule", 5)))))) {
					goto _iter_next_1da9dc99a;
				};
				jule::Str _11913__path = _1e0190c92_Join(jule::Slice<jule::Str>::make({_9632_path,(*(_11316_dirent))._field_Name}));;
				jule::Ptr<_1d64db59c_File> _12017_file = _1d64dc944_NewFileSet(_11913__path);;
				_1d64db987_Fill(_12017_file.ptr(), _1d7163685_readBuff((*(_12017_file))._field_Path));
				jule::Slice<_1e0235a7e_Log> _12217_errors = _1d64e905a_Lex(_12017_file, static_cast<jule::I64>(0LL));;
				if ((_12217_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _12217_errors;
					return __jule_func_result;;
				};
				jule::Ptr<_1d70d5b8a_FileInfo> _12717_finfo = _1d70d8a39_ParseFile(_12017_file);;
				if (((*(_12717_finfo))._field_Errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = (*(_12717_finfo))._field_Errors;
					return __jule_func_result;;
				};
				if ((!(_1d6878340_isPassFileAnnotation((*(_11316_dirent))._field_Name)))) {
					goto _iter_next_1da9dc99a;
				};
				jule::Bool _13713_r = false;;
				jule::Slice<_1e0235a7e_Log> _13720_logs;;
				({
					__jule_tuple_bool__jule_tuple_s_1e0235a7e_Log __jule_assign_result = _1d7166017_isPassBuildDirectives(_self_, &((*(_12717_finfo))._field_Ast));
					_13713_r = __jule_assign_result.__jule_result_arg0;
					_13720_logs = __jule_assign_result.__jule_result_arg1;
				});
				if ((_13720_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _13720_logs;
					return __jule_func_result;;
				};
				if ((!(_13713_r))) {
					goto _iter_next_1da9dc99a;
				};
				{ jule::Slice<jule::Ptr<_1d64e9423_Ast>> &__jule_push_dest = _11213_asts; __jule_push_dest.push((*(_12717_finfo))._field_Ast); };
			}
			_iter_next_1da9dc99a:;
			++it;
			goto _iter_begin_1da9dc99a;
		}
		_iter_end_1da9dc99a:;
	};
	__jule_func_result.__jule_result_arg0 = _11213_asts;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1d7165ad8_Imported(_1d7163e49_JuleImporter* _self_, jule::Ptr<_1d659590e_ImportInfo> _15331_imp) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1da9e06a1:;
		if (it != expr_end) {
			jule::Ptr<_1d659590e_ImportInfo> _15516_p = *it;
			{
				if ((((*(_15516_p))._field_Binded == (*(_15331_imp))._field_Binded) && ((*(_15516_p))._field_LinkPath == (*(_15331_imp))._field_LinkPath))) {
					return;;
				};
			}
			_iter_next_1da9e06a1:;
			++it;
			goto _iter_begin_1da9e06a1;
		}
		_iter_end_1da9e06a1:;
	};
	if (((*(_self_))._field_mod.len() != 0LL)) {
		{
			auto expr = &((*(_self_))._field_mods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1da9e7c08:;
			if (it != expr_end) {
				jule::I64 _16217_i = it - expr->begin();
				jule::Str _16220_mod = *it;
				{
					if (((*(_self_))._field_mod == _16220_mod)) {
						(*(_15331_imp))._field_ModId=_16217_i;
						goto _julec_label_1da9e95de;
					};
				}
				_iter_next_1da9e7c08:;
				++it;
				_16217_i++;
				goto _iter_begin_1da9e7c08;
			}
			_iter_end_1da9e7c08:;
		};
		(*(_15331_imp))._field_ModId=static_cast<jule::I64>((*(_self_))._field_mods.len());
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_mods; __jule_push_dest.push((*(_self_))._field_mod); };
		_julec_label_1da9e95de:;
	};
	{ jule::Slice<jule::Ptr<_1d659590e_ImportInfo>> &__jule_push_dest = (*(_self_))._field_pkgs; __jule_push_dest.push(_15331_imp); };
}



inline __jule_tuple_bool__jule_tuple_s_1e0235a7e_Log _1d7166017_isPassBuildDirectives(_1d7163e49_JuleImporter* _self_, jule::Ptr<_1d64e9423_Ast>* _17945_file) {
	__jule_tuple_bool__jule_tuple_s_1e0235a7e_Log __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	{
		auto expr = &((*((*(_17945_file))))._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1da9ead60:;
		if (it != expr_end) {
			jule::Ptr<_1d64ea7ed_Directive> _18021_td = *it;
			{
				if ((!(*((*(_18021_td))._field_Tag))._field_Kind.equal("build", 5))) {
					goto _iter_next_1da9ead60;
				};
				_1d687a672_directiveEval _18417_de = _1d687a672_directiveEval{._field_d=_18021_td, ._field_vars=(*(_self_))._field_vars};;
				jule::Bool _18813_result = _1d687b9d6_eval(&_18417_de);;
				if ((_18417_de._field_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = _18417_de._field_logs;
					return __jule_func_result;;
				};
				if ((!(_18813_result))) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = nullptr;
					return __jule_func_result;;
				};
			}
			_iter_next_1da9ead60:;
			++it;
			goto _iter_begin_1da9ead60;
		}
		_iter_end_1da9ead60:;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1d7163e49_JuleImporter _Src) {
	_Stream << "JuleImporter{";
	_Stream << "mods:" << _Src._field_mods << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "pkgs:" << _Src._field_pkgs << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d7168e3d_OrderedDefines _Src) {
	_Stream << "OrderedDefines{";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Globals:" << _Src._field_Globals;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1daa1c7ee_isCommonOrdered(jule::Slice<jule::Ptr<_1d651c2d1_Struct>> _1834_s, jule::Ptr<_1d651c2d1_Struct> _1842_t) {
	{
		auto expr = &((*(_1842_t))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1daa1daca:;
		if (it != expr_end) {
			jule::Ptr<_1d651c2d1_Struct> *_1916_d = it;
			{
				{
					auto expr = &(_1834_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1daa1e2d4:;
					if (it != expr_end) {
						jule::Ptr<_1d651c2d1_Struct> *_2020_d2 = it;
						{
							if (((*(_1916_d)) == (*(_2020_d2)))) {
								return false;;
							};
						}
						_iter_next_1daa1e2d4:;
						++it;
						goto _iter_begin_1daa1e2d4;
					}
					_iter_end_1daa1e2d4:;
				};
			}
			_iter_next_1daa1daca:;
			++it;
			goto _iter_begin_1daa1daca;
		}
		_iter_end_1daa1daca:;
	};
	return true;;
}

inline jule::Bool _1daa2278d_isCommonOrdered(jule::Slice<jule::Ptr<_1d65d9018_Var>> _1834_s, jule::Ptr<_1d65d9018_Var> _1842_t) {
	{
		auto expr = &((*(_1842_t))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1daa23a25:;
		if (it != expr_end) {
			jule::Ptr<_1d65d9018_Var> *_1916_d = it;
			{
				{
					auto expr = &(_1834_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1daa2422e:;
					if (it != expr_end) {
						jule::Ptr<_1d65d9018_Var> *_2020_d2 = it;
						{
							if (((*(_1916_d)) == (*(_2020_d2)))) {
								return false;;
							};
						}
						_iter_next_1daa2422e:;
						++it;
						goto _iter_begin_1daa2422e;
					}
					_iter_end_1daa2422e:;
				};
			}
			_iter_next_1daa23a25:;
			++it;
			goto _iter_begin_1daa23a25;
		}
		_iter_end_1daa23a25:;
	};
	return true;;
}



inline void _1daa18e5a_orderCommon(jule::Slice<jule::Ptr<_1d651c2d1_Struct>>* _3135_s) {
	jule::I64 _3213_n = ((*(_3135_s)).len() - 1LL);;
	{
		auto expr = _3135_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1daa1a445:;
		if (it != expr_end) {
			{
				jule::Bool _3417_swapped = false;;
				jule::I64 _3517_k = 0LL;;
				for (; (_3517_k < _3213_n); (_3517_k)++) {
					{
						if ((!(_1daa1c7ee_isCommonOrdered((*(_3135_s)), (*(_3135_s))[_3517_k])))) {
							std::swap((*(_3135_s))[_3517_k], (*(_3135_s))[(_3517_k + 1LL)]);
							_3417_swapped=true;
						};
					}
				_iter_next_1daa1b16b:;
				}
				_iter_end_1daa1b16b:;;
				if ((!(_3417_swapped))) {
					goto _iter_end_1daa1a445;
				};
				(_3213_n)--;
			}
			_iter_next_1daa1a445:;
			++it;
			goto _iter_begin_1daa1a445;
		}
		_iter_end_1daa1a445:;
	};
}

inline void _1daa1d190_orderCommon(jule::Slice<jule::Ptr<_1d65d9018_Var>>* _3135_s) {
	jule::I64 _3213_n = ((*(_3135_s)).len() - 1LL);;
	{
		auto expr = _3135_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1daa203d4:;
		if (it != expr_end) {
			{
				jule::Bool _3417_swapped = false;;
				jule::I64 _3517_k = 0LL;;
				for (; (_3517_k < _3213_n); (_3517_k)++) {
					{
						if ((!(_1daa2278d_isCommonOrdered((*(_3135_s)), (*(_3135_s))[_3517_k])))) {
							std::swap((*(_3135_s))[_3517_k], (*(_3135_s))[(_3517_k + 1LL)]);
							_3417_swapped=true;
						};
					}
				_iter_next_1daa2110a:;
				}
				_iter_end_1daa2110a:;;
				if ((!(_3417_swapped))) {
					goto _iter_end_1daa203d4;
				};
				(_3213_n)--;
			}
			_iter_next_1daa203d4:;
			++it;
			goto _iter_begin_1daa203d4;
		}
		_iter_end_1daa203d4:;
	};
}



inline void static__1d7169a98_orderStructures(jule::Slice<jule::Ptr<_1d651c2d1_Struct>>* _5136_structs) {
	_1daa18e5a_orderCommon(_5136_structs);
}



inline void static__1d7169cc9_orderVars(jule::Slice<jule::Ptr<_1d65d9018_Var>>* _5730_vars) {
	_1daa1d190_orderCommon(_5730_vars);
}





std::ostream &operator<<(std::ostream &_Stream, _1d71691a2_defineOrderer _Src) {
	_Stream << "defineOrderer{";
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d729282a_liveTable _Src) {
	_Stream << "liveTable{";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "fns:" << _Src._field_fns << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "traits:" << _Src._field_traits;
	_Stream << "}";
	return _Stream;
}



inline void _1d72c74ca_optimizeChild(jule::Ptr<_1d72c7024_scopeDeadCode> _self_, jule::Ptr<_1d6574129_Scope>* _3938_s) {
	jule::Ptr<_1d72c7024_scopeDeadCode> _4013_sdc = jule::new_ptr<_1d72c7024_scopeDeadCode>(_1d72c7024_scopeDeadCode{._field_parent=_self_, ._field_s=(*(_3938_s)), ._field_stmts=(&((*((*(_3938_s))))._field_Stmts)), ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*(_self_))._field_gotos, });;
	{
		_1d72c9de5_optimizeStmts(_4013_sdc);
	};
}



inline void _1d72c7783_optimizeBodyChildExceptional(jule::Ptr<_1d72c7024_scopeDeadCode> _self_, jule::Ptr<_1d6574129_Scope>* _5053_s) {
	jule::Ptr<_1d72c7024_scopeDeadCode> _5113_sdc = jule::new_ptr<_1d72c7024_scopeDeadCode>(_1d72c7024_scopeDeadCode{._field_s=(*(_5053_s)), ._field_stmts=(&((*((*(_5053_s))))._field_Stmts)), ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*(_self_))._field_gotos, ._field_except=true});;
	{
		_1d72c9de5_optimizeStmts(_5113_sdc);
	};
}



inline void _1d72c7a3b_optimizeBodyChild(jule::Ptr<_1d72c7024_scopeDeadCode> _self_, jule::Ptr<_1d6574129_Scope>* _6142_s) {
	jule::Ptr<_1d72c7024_scopeDeadCode> _6213_sdc = jule::new_ptr<_1d72c7024_scopeDeadCode>(_1d72c7024_scopeDeadCode{._field_s=(*(_6142_s)), ._field_stmts=(&((*((*(_6142_s))))._field_Stmts)), ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*(_self_))._field_gotos, });;
	{
		_1d72c9de5_optimizeStmts(_6213_sdc);
	};
}



inline void _1d72c7ce4_optimizeExprModel(jule::Ptr<_1d72c7024_scopeDeadCode> _self_, jule::Any* _7142_model) {
	_1d72cb27b_exprDeadCode _729_edc = static__1d72cb8b9_new(&(_self_));;
	_1d72d27e3_optimize(&_729_edc, _7142_model);
}



inline void _1d72c7ee2_eliminateFollowed(_1d72c7024_scopeDeadCode* _self_) {
	if (((*((*(_self_))._field_gotos)).len() != 0LL)) {
		return;;
	};
	{
		(*((*(_self_))._field_stmts))=(*((*(_self_))._field_stmts)).slice(0LL, ((*(_self_))._field_i + 1LL));
	};
	jule::Ptr<_1d72c7024_scopeDeadCode> _8313_parent = (*(_self_))._field_parent;;
	while ((_8313_parent != nullptr)) {
		{
			{
				(*((*(_8313_parent))._field_stmts))=(*((*(_8313_parent))._field_stmts)).slice(0LL, ((*(_8313_parent))._field_i + 1LL));
			};
			_8313_parent=(*(_8313_parent))._field_parent;
		}
	_iter_next_1daa93db4:;
	}
	_iter_end_1daa93db4:;;
}



inline void _1d72c829a_pushGoto(jule::Ptr<_1d72c7024_scopeDeadCode> _self_, jule::Ptr<_1d6576d96_GotoSt> _9232_gt) {
	jule::I64 _9313_i = 0LL;;
	for (; (_9313_i < (*((*(_self_))._field_labels)).len()); (_9313_i)++) {
		{
			if (((*(_9232_gt))._field_Ident == (*((*((*(_self_))._field_labels))[_9313_i]))._field_Ident)) {
				return;;
			};
		}
	_iter_next_1daa96d51:;
	}
	_iter_end_1daa96d51:;;
	{ jule::Slice<jule::Ptr<_1d6576d96_GotoSt>> &__jule_push_dest = (*((*(_self_))._field_gotos)); __jule_push_dest.push(_9232_gt); };
}



inline void _1d72c8553_pushLabel(jule::Ptr<_1d72c7024_scopeDeadCode> _self_, jule::Ptr<_1d65769bc_Label> _10233_l) {
	jule::I64 _10313_i = 0LL;;
	while ((_10313_i < (*((*(_self_))._field_gotos)).len())) {
		{
			if (((*(_10233_l))._field_Ident == (*((*((*(_self_))._field_gotos))[_10313_i]))._field_Ident)) {
				jule::copy(((*((*(_self_))._field_gotos)).slice(_10313_i)), ((*((*(_self_))._field_gotos)).slice((_10313_i + 1LL))));
				(*((*(_self_))._field_gotos))=(*((*(_self_))._field_gotos)).slice(0LL, ((*((*(_self_))._field_gotos)).len() - 1LL));
				goto _iter_next_1daa99073;
			};
			(_10313_i)++;
		}
	_iter_next_1daa99073:;
	}
	_iter_end_1daa99073:;;
	{ jule::Slice<jule::Ptr<_1d65769bc_Label>> &__jule_push_dest = (*((*(_self_))._field_labels)); __jule_push_dest.push(_10233_l); };
}



inline void _1d72c880b_optimizeRangeIter(jule::Ptr<_1d72c7024_scopeDeadCode> _self_, jule::Ptr<_1d6575e61_RangeIter> _11541_it) {
	_1d72c7ce4_optimizeExprModel(_self_, &((*((*(_11541_it))._field_Expr))._field_Model));
	_1d72c7a3b_optimizeBodyChild(_self_, &((*(_11541_it))._field_Scope));
}



inline void _1d72c8ab4_optimizeWhileIter(jule::Ptr<_1d72c7024_scopeDeadCode> _self_, jule::Ptr<_1d6575515_WhileIter> _12041_it) {
	_1d72c7ce4_optimizeExprModel(_self_, &((*(_12041_it))._field_Expr));
	if (((*(_12041_it))._field_Next != nullptr)) {
		_1d72c9be7_optimizeStmt(_self_, (*(_12041_it))._field_Next);
	};
	_1d72c7a3b_optimizeBodyChild(_self_, &((*(_12041_it))._field_Scope));
}



inline void _1d72c8d6c_optimizeInfIter(jule::Ptr<_1d72c7024_scopeDeadCode> _self_, jule::Ptr<_1d657505e_InfIter> _12839_it) {
	_1d72c7a3b_optimizeBodyChild(_self_, &((*(_12839_it))._field_Scope));
}



inline void _1d72c9125_optimizeConditional(jule::Ptr<_1d72c7024_scopeDeadCode> _self_, jule::Ptr<_1d6574c62_Conditional> _13243_c) {
	{
		auto expr = &((*(_13243_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1daaa0e26:;
		if (it != expr_end) {
			jule::Ptr<_1d6574547_If> _13321_case = *it;
			{
				if ((_13321_case != nullptr)) {
					_1d72c7ce4_optimizeExprModel(_self_, &((*(_13321_case))._field_Expr));
					_1d72c7a3b_optimizeBodyChild(_self_, &((*(_13321_case))._field_Scope));
				};
			}
			_iter_next_1daaa0e26:;
			++it;
			goto _iter_begin_1daaa0e26;
		}
		_iter_end_1daaa0e26:;
	};
	if (((*(_13243_c))._field_Default != nullptr)) {
		if (((*(_13243_c))._field_Elifs.len() == 0LL)) {
			_1d72c74ca_optimizeChild(_self_, &((*((*(_13243_c))._field_Default))._field_Scope));
		} else {
			_1d72c7a3b_optimizeBodyChild(_self_, &((*((*(_13243_c))._field_Default))._field_Scope));
		};
	};
}



inline void _1d72c93cd_optimizeMatch(jule::Ptr<_1d72c7024_scopeDeadCode> _self_, jule::Ptr<_1d6578260_Match> _15037_m) {
	{
		auto expr = &((*(_15037_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1daaa448a:;
		if (it != expr_end) {
			jule::Ptr<_1d6578d98_Case> _15121_case = *it;
			{
				{
					auto expr = &((*(_15121_case))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1daaa4dd6:;
					if (it != expr_end) {
						jule::Ptr<_1d664721e_Data> _15225_expr = *it;
						{
							_1d72c7ce4_optimizeExprModel(_self_, &((*(_15225_expr))._field_Model));
						}
						_iter_next_1daaa4dd6:;
						++it;
						goto _iter_begin_1daaa4dd6;
					}
					_iter_end_1daaa4dd6:;
				};
				_1d72c7a3b_optimizeBodyChild(_self_, &((*(_15121_case))._field_Scope));
			}
			_iter_next_1daaa448a:;
			++it;
			goto _iter_begin_1daaa448a;
		}
		_iter_end_1daaa448a:;
	};
	if (((*(_15037_m))._field_Default != nullptr)) {
		if (((*(_15037_m))._field_Cases.len() == 0LL)) {
			_1d72c74ca_optimizeChild(_self_, &((*((*(_15037_m))._field_Default))._field_Scope));
		} else {
			_1d72c7a3b_optimizeBodyChild(_self_, &((*((*(_15037_m))._field_Default))._field_Scope));
		};
	};
}



inline void _1d72c9686_optimizeAssign(jule::Ptr<_1d72c7024_scopeDeadCode> _self_, jule::Ptr<_1d6577726_Assign> _16838_assign) {
	_1d72c7ce4_optimizeExprModel(_self_, &((*((*(_16838_assign))._field_L))._field_Model));
	_1d72c7ce4_optimizeExprModel(_self_, &((*((*(_16838_assign))._field_R))._field_Model));
}



inline void _1d72c993e_optimizeMultiAssign(jule::Ptr<_1d72c7024_scopeDeadCode> _self_, jule::Ptr<_1d6577b00_MultiAssign> _17343_assign) {
	{
		auto expr = &((*(_17343_assign))._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1daaa92e7:;
		if (it != expr_end) {
			jule::Ptr<_1d664721e_Data> _17421_l = *it;
			{
				if ((_17421_l != nullptr)) {
					_1d72c7ce4_optimizeExprModel(_self_, &((*(_17421_l))._field_Model));
				};
			}
			_iter_next_1daaa92e7:;
			++it;
			goto _iter_begin_1daaa92e7;
		}
		_iter_end_1daaa92e7:;
	};
	_1d72c7ce4_optimizeExprModel(_self_, &((*(_17343_assign))._field_R));
}



inline void _1d72c9be7_optimizeStmt(jule::Ptr<_1d72c7024_scopeDeadCode> _self_, jule::Any _18236_st) {
	{
		auto &_match_expr{ _18236_st };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1daaaae97:;
			{
				jule::Ptr<_1d6574129_Scope> _18517_scope = _18236_st.cast_ptr<_1d6574129_Scope>(&__jule_any_type22);;
				if ((*(_18517_scope))._field_Deferred) {
					_1d72ca225_eliminateDeadCodeOfScope(_18517_scope);
				} else {
					_1d72c74ca_optimizeChild(_self_, &(_18517_scope));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1daaab00d:;
			{
				_1d72c880b_optimizeRangeIter(_self_, _18236_st.cast_ptr<_1d6575e61_RangeIter>(&__jule_any_type40));
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1daaab074:;
			{
				_1d72c8ab4_optimizeWhileIter(_self_, _18236_st.cast_ptr<_1d6575515_WhileIter>(&__jule_any_type38));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1daaab0eb:;
			{
				_1d72c8d6c_optimizeInfIter(_self_, _18236_st.cast_ptr<_1d657505e_InfIter>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1daaab173:;
			{
				_1d72c9125_optimizeConditional(_self_, _18236_st.cast_ptr<_1d6574c62_Conditional>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1daaab1ea:;
			{
				_1d72c93cd_optimizeMatch(_self_, _18236_st.cast_ptr<_1d6578260_Match>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1daaab272:;
			{
				_1d72c9686_optimizeAssign(_self_, _18236_st.cast_ptr<_1d6577726_Assign>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1daaab2e9:;
			{
				_1d72c993e_optimizeMultiAssign(_self_, _18236_st.cast_ptr<_1d6577b00_MultiAssign>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1daaab371:;
			{
				jule::Ptr<_1d664721e_Data> _20617_d = _18236_st.cast_ptr<_1d664721e_Data>(&__jule_any_type24);;
				if ((*(_self_))._field_except) {
					goto _match_end_1daaaad54;
				};
				{
					auto &_match_expr{ (*(_20617_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type23 || _match_expr.type == &__jule_any_type29) {
						_case_begin_1daab18c6:;
						{
							_1d72c7ee2_eliminateFollowed(_self_.ptr());
						}
					}
					else {
						_case_begin_1daab2058:;
						{
							_1d72c7ce4_optimizeExprModel(_self_, &((*(_20617_d))._field_Model));
						}
					}
					_match_end_1daab2003:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1daaab3e8:;
			{
				_1d72c7ee2_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1daaab470:;
			{
				_1d72c829a_pushGoto(_self_, _18236_st.cast_ptr<_1d6576d96_GotoSt>(&__jule_any_type42));
				_1d72c7ee2_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1daaab4e7:;
			{
				_1d72c8553_pushLabel(_self_, _18236_st.cast_ptr<_1d65769bc_Label>(&__jule_any_type21));
			}
		}
		_match_end_1daaaad54:;
	};
}



inline void _1d72c9de5_optimizeStmts(jule::Ptr<_1d72c7024_scopeDeadCode> _self_) {
	(*(_self_))._field_i=0LL;
	for (; ((*(_self_))._field_i < (*((*(_self_))._field_stmts)).len()); ((*(_self_))._field_i)++) {
		{
			_1d72c9be7_optimizeStmt(_self_, (*((*(_self_))._field_stmts))[(*(_self_))._field_i]);
		}
	_iter_next_1daab46cb:;
	}
	_iter_end_1daab46cb:;;
}





std::ostream &operator<<(std::ostream &_Stream, _1d72c7024_scopeDeadCode _Src) {
	_Stream << "scopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "except:" << _Src._field_except;
	_Stream << "}";
	return _Stream;
}



inline _1d72cb27b_exprDeadCode static__1d72cb8b9_new(jule::Ptr<_1d72c7024_scopeDeadCode>* _4824_s) {
	return _1d72cb27b_exprDeadCode{._field_s=(*(_4824_s))};;
}



inline void _1d72cbb72_binary(_1d72cb27b_exprDeadCode* _self_, jule::Ptr<_1d6524508_BinaryExprModel> _5425_m) {
	_1d72d27e3_optimize(_self_, &((*((*(_5425_m))._field_Left))._field_Model));
	_1d72d27e3_optimize(_self_, &((*((*(_5425_m))._field_Right))._field_Model));
}



inline void _1d72cbe2a_unary(_1d72cb27b_exprDeadCode* _self_, jule::Ptr<_1d65248d2_UnaryExprModel> _5924_m) {
	_1d72d27e3_optimize(_self_, &((*((*(_5924_m))._field_Expr))._field_Model));
}



inline void _1d72cc1d3_structureLit(_1d72cb27b_exprDeadCode* _self_, jule::Ptr<_1d65252a6_StructLitExprModel> _6331_m) {
	{
		auto expr = &((*(_6331_m))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1daab82a1:;
		if (it != expr_end) {
			jule::Ptr<_1d6524e10_StructArgExprModel> _6421_arg = *it;
			{
				_1d72d27e3_optimize(_self_, &((*((*(_6421_arg))._field_Expr))._field_Model));
			}
			_iter_next_1daab82a1:;
			++it;
			goto _iter_begin_1daab82a1;
		}
		_iter_end_1daab82a1:;
	};
}



inline void _1d72cc48b_allocStructure(_1d72cb27b_exprDeadCode* _self_, jule::Ptr<_1d65255a3_AllocStructLitExprModel> _6933_m) {
	_1d72cc1d3_structureLit(_self_, (*(_6933_m))._field_Lit);
}



inline void _1d72cc744_casting(_1d72cb27b_exprDeadCode* _self_, jule::Ptr<_1d6525b36_CastingExprModel> _7326_m) {
	_1d72d27e3_optimize(_self_, &((*(_7326_m))._field_Expr));
}



inline void _1d72cc9ec_args(_1d72cb27b_exprDeadCode* _self_, jule::Slice<jule::Any>* _7724_args) {
	{
		auto expr = _7724_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1daaba737:;
		if (it != expr_end) {
			jule::Any _7821_arg = *it;
			{
				_1d72d27e3_optimize(_self_, &(_7821_arg));
			}
			_iter_next_1daaba737:;
			++it;
			goto _iter_begin_1daaba737;
		}
		_iter_end_1daaba737:;
	};
}



inline void _1d72ccca5_funcCall(_1d72cb27b_exprDeadCode* _self_, jule::Ptr<_1d65264d8_FnCallExprModel> _8327_m) {
	_1d72d27e3_optimize(_self_, &((*(_8327_m))._field_Expr));
	_1d72cc9ec_args(_self_, &((*(_8327_m))._field_Args));
	if (((*(_8327_m))._field_Except != nullptr)) {
		_1d72c7783_optimizeBodyChildExceptional((*(_self_))._field_s, &((*(_8327_m))._field_Except));
	};
}



inline void _1d72cd05d_slice(_1d72cb27b_exprDeadCode* _self_, jule::Ptr<_1d65268b2_SliceExprModel> _9124_m) {
	_1d72cc9ec_args(_self_, &((*(_9124_m))._field_Elems));
}



inline void _1d72cd316_array(_1d72cb27b_exprDeadCode* _self_, jule::Ptr<_1d6529909_ArrayExprModel> _9524_m) {
	if ((((*(_9524_m))._field_Elems.len() == 2LL) && ((*(_9524_m))._field_Elems[1LL] == nullptr))) {
		_1d72d27e3_optimize(_self_, &((*(_9524_m))._field_Elems[0LL]));
	};
	_1d72cc9ec_args(_self_, &((*(_9524_m))._field_Elems));
}



inline void _1d72cd5be_indexing(_1d72cb27b_exprDeadCode* _self_, jule::Ptr<_1d6526d68_IndexingExprModel> _10227_m) {
	_1d72d27e3_optimize(_self_, &((*((*(_10227_m))._field_Expr))._field_Model));
	_1d72d27e3_optimize(_self_, &((*((*(_10227_m))._field_Index))._field_Model));
}



inline void _1d72cd877_anonFunc(_1d72cb27b_exprDeadCode* _self_, jule::Ptr<_1d6527242_AnonFnExprModel> _10727_m) {
	_1d72ca225_eliminateDeadCodeOfScope((*((*(_10727_m))._field_Func))._field_Scope);
}



inline void _1d72cdb30_mapExpr(_1d72cb27b_exprDeadCode* _self_, jule::Ptr<_1d6527ac2_MapExprModel> _11126_m) {
	{
		auto expr = &((*(_11126_m))._field_Entries);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1daac1dd1:;
		if (it != expr_end) {
			jule::Ptr<_1d652761b_KeyValPairExprModel> _11221_pair = *it;
			{
				_1d72d27e3_optimize(_self_, &((*(_11221_pair))._field_Key));
				_1d72d27e3_optimize(_self_, &((*(_11221_pair))._field_Val));
			}
			_iter_next_1daac1dd1:;
			++it;
			goto _iter_begin_1daac1dd1;
		}
		_iter_end_1daac1dd1:;
	};
}



inline void _1d72cddd8_slicing(_1d72cb27b_exprDeadCode* _self_, jule::Ptr<_1d6528155_SlicingExprModel> _11826_m) {
	_1d72d27e3_optimize(_self_, &((*(_11826_m))._field_Expr));
	_1d72d27e3_optimize(_self_, &((*(_11826_m))._field_Left));
	if (((*(_11826_m))._field_Right != nullptr)) {
		_1d72d27e3_optimize(_self_, &((*(_11826_m))._field_Right));
	};
}



inline void _1d72ce191_traitSub(_1d72cb27b_exprDeadCode* _self_, jule::Ptr<_1d65286d8_TraitSubIdentExprModel> _12627_m) {
	_1d72d27e3_optimize(_self_, &((*(_12627_m))._field_Expr));
}



inline void _1d72ce449_structureSub(_1d72cb27b_exprDeadCode* _self_, jule::Ptr<_1d6529079_StructSubIdentExprModel> _13031_m) {
	_1d72d27e3_optimize(_self_, &((*((*(_13031_m))._field_Expr))._field_Model));
}



inline void _1d72ce702_tuple(_1d72cb27b_exprDeadCode* _self_, jule::Ptr<_1d6529c06_TupleExprModel> _13424_m) {
	{
		auto expr = &((*(_13424_m))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1daac5ed4:;
		if (it != expr_end) {
			jule::Ptr<_1d664721e_Data> _13521_d = *it;
			{
				_1d72d27e3_optimize(_self_, &((*(_13521_d))._field_Model));
			}
			_iter_next_1daac5ed4:;
			++it;
			goto _iter_begin_1daac5ed4;
		}
		_iter_end_1daac5ed4:;
	};
}



inline void _1d72ce9aa_newCall(_1d72cb27b_exprDeadCode* _self_, jule::Ptr<_1d652a883_BuiltinNewCallExprModel> _14026_m) {
	if (((*(_14026_m))._field_Init != nullptr)) {
		_1d72d27e3_optimize(_self_, &((*(_14026_m))._field_Init));
	};
}



inline void _1d72cec63_outCall(_1d72cb27b_exprDeadCode* _self_, jule::Ptr<_1d652a0d0_BuiltinOutCallExprModel> _14626_m) {
	_1d72d27e3_optimize(_self_, &((*(_14626_m))._field_Expr));
}



inline void _1d72d001b_outlnCall(_1d72cb27b_exprDeadCode* _self_, jule::Ptr<_1d652a4a9_BuiltinOutlnCallExprModel> _15028_m) {
	_1d72d27e3_optimize(_self_, &((*(_15028_m))._field_Expr));
}



inline void _1d72d02c4_panicCall(_1d72cb27b_exprDeadCode* _self_, jule::Ptr<_1d652ac5c_BuiltinPanicCallExprModel> _15428_m) {
	_1d72d27e3_optimize(_self_, &((*(_15428_m))._field_Expr));
}



inline void _1d72d057c_assertCall(_1d72cb27b_exprDeadCode* _self_, jule::Ptr<_1d652b213_BuiltinAssertCallExprModel> _15829_m) {
	_1d72d27e3_optimize(_self_, &((*(_15829_m))._field_Expr));
}



inline void _1d72d0835_errorCall(_1d72cb27b_exprDeadCode* _self_, jule::Ptr<_1d652cd19_BuiltinErrorCallExprModel> _16228_m) {
	_1d72d27e3_optimize(_self_, &((*((*(_16228_m))._field_Err))._field_Model));
}



inline void _1d72d0add_makeCall(_1d72cb27b_exprDeadCode* _self_, jule::Ptr<_1d652b6b9_BuiltinMakeCallExprModel> _16627_m) {
	if (((*(_16627_m))._field_Len != nullptr)) {
		_1d72d27e3_optimize(_self_, &((*(_16627_m))._field_Len));
	};
	if (((*(_16627_m))._field_Cap != nullptr)) {
		_1d72d27e3_optimize(_self_, &((*(_16627_m))._field_Cap));
	};
}



inline void _1d72d0d96_appendCall(_1d72cb27b_exprDeadCode* _self_, jule::Ptr<_1d652ba93_BuiltinAppendCallExprModel> _17529_m) {
	_1d72d27e3_optimize(_self_, &((*(_17529_m))._field_Dest));
	_1d72d27e3_optimize(_self_, &((*(_17529_m))._field_Elements));
}



inline void _1d72d114e_lenCall(_1d72cb27b_exprDeadCode* _self_, jule::Ptr<_1d652bd90_BuiltinLenCallExprModel> _18026_m) {
	_1d72d27e3_optimize(_self_, &((*((*(_18026_m))._field_Expr))._field_Model));
}



inline void _1d72d1407_capCall(_1d72cb27b_exprDeadCode* _self_, jule::Ptr<_1d652c18c_BuiltinCapCallExprModel> _18426_m) {
	_1d72d27e3_optimize(_self_, &((*((*(_18426_m))._field_Expr))._field_Model));
}



inline void _1d72d16b0_deleteCall(_1d72cb27b_exprDeadCode* _self_, jule::Ptr<_1d652c566_BuiltinDeleteCallExprModel> _18829_m) {
	_1d72d27e3_optimize(_self_, &((*((*(_18829_m))._field_Dest))._field_Model));
	if (((*(_18829_m))._field_Key != nullptr)) {
		_1d72d27e3_optimize(_self_, &((*((*(_18829_m))._field_Key))._field_Model));
	};
}



inline void _1d72d1968_sizeof(_1d72cb27b_exprDeadCode* _self_, jule::Ptr<_1d65288c5_SizeofExprModel> _19525_m) {
	_1d72d27e3_optimize(_self_, &((*(_19525_m))._field_Expr));
}



inline void _1d72d1c21_alignof(_1d72cb27b_exprDeadCode* _self_, jule::Ptr<_1d652d545_AlignofExprModel> _19926_m) {
	_1d72d27e3_optimize(_self_, &((*(_19926_m))._field_Expr));
}



inline void _1d72d1ec9_integratedToStr(_1d72cb27b_exprDeadCode* _self_, jule::Ptr<_1d652db3e_IntegratedToStrExprModel> _20334_m) {
	_1d72d27e3_optimize(_self_, &((*(_20334_m))._field_Expr));
}



inline void _1d72d2282_free(_1d72cb27b_exprDeadCode* _self_, jule::Ptr<_1d652e315_FreeExprModel> _20723_m) {
	_1d72d27e3_optimize(_self_, &((*(_20723_m))._field_Expr));
}



inline void _1d72d253a_backendEmit(_1d72cb27b_exprDeadCode* _self_, jule::Ptr<_1d652e018_BackendEmitExprModel> _21130_m) {
	_1d72cc9ec_args(_self_, &((*(_21130_m))._field_Exprs));
}



inline void _1d72d27e3_optimize(_1d72cb27b_exprDeadCode* _self_, jule::Any* _21528_model) {
	{
		auto &_match_expr{ (*(_21528_model)) };
		
		if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1daad4542:;
			{
				_1d72cbb72_binary(_self_, (*(_21528_model)).cast_ptr<_1d6524508_BinaryExprModel>(&__jule_any_type111));
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1daad45a8:;
			{
				_1d72cbe2a_unary(_self_, (*(_21528_model)).cast_ptr<_1d65248d2_UnaryExprModel>(&__jule_any_type110));
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1daad461e:;
			{
				_1d72cc1d3_structureLit(_self_, (*(_21528_model)).cast_ptr<_1d65252a6_StructLitExprModel>(&__jule_any_type94));
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1daad4696:;
			{
				_1d72cc48b_allocStructure(_self_, (*(_21528_model)).cast_ptr<_1d65255a3_AllocStructLitExprModel>(&__jule_any_type112));
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1daad471d:;
			{
				_1d72cc744_casting(_self_, (*(_21528_model)).cast_ptr<_1d6525b36_CastingExprModel>(&__jule_any_type92));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1daad4795:;
			{
				_1d72ccca5_funcCall(_self_, (*(_21528_model)).cast_ptr<_1d65264d8_FnCallExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1daad481c:;
			{
				_1d72cd05d_slice(_self_, (*(_21528_model)).cast_ptr<_1d65268b2_SliceExprModel>(&__jule_any_type76));
			}
		}
		else if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1daad4894:;
			{
				_1d72cd316_array(_self_, (*(_21528_model)).cast_ptr<_1d6529909_ArrayExprModel>(&__jule_any_type84));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1daad491b:;
			{
				_1d72cd5be_indexing(_self_, (*(_21528_model)).cast_ptr<_1d6526d68_IndexingExprModel>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1daad4993:;
			{
				_1d72cd877_anonFunc(_self_, (*(_21528_model)).cast_ptr<_1d6527242_AnonFnExprModel>(&__jule_any_type99));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1daad4a1a:;
			{
				_1d72cdb30_mapExpr(_self_, (*(_21528_model)).cast_ptr<_1d6527ac2_MapExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1daad4a92:;
			{
				_1d72cddd8_slicing(_self_, (*(_21528_model)).cast_ptr<_1d6528155_SlicingExprModel>(&__jule_any_type91));
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1daad4b19:;
			{
				_1d72ce191_traitSub(_self_, (*(_21528_model)).cast_ptr<_1d65286d8_TraitSubIdentExprModel>(&__jule_any_type96));
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1daad4b91:;
			{
				_1d72ce449_structureSub(_self_, (*(_21528_model)).cast_ptr<_1d6529079_StructSubIdentExprModel>(&__jule_any_type97));
			}
		}
		else if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1daad4c18:;
			{
				_1d72ce702_tuple(_self_, (*(_21528_model)).cast_ptr<_1d6529c06_TupleExprModel>(&__jule_any_type81));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1daad4c90:;
			{
				_1d72cec63_outCall(_self_, (*(_21528_model)).cast_ptr<_1d652a0d0_BuiltinOutCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1daad4d17:;
			{
				_1d72d001b_outlnCall(_self_, (*(_21528_model)).cast_ptr<_1d652a4a9_BuiltinOutlnCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1daad4d8e:;
			{
				_1d72ce9aa_newCall(_self_, (*(_21528_model)).cast_ptr<_1d652a883_BuiltinNewCallExprModel>(&__jule_any_type113));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1daad4e16:;
			{
				_1d72d02c4_panicCall(_self_, (*(_21528_model)).cast_ptr<_1d652ac5c_BuiltinPanicCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1daad4e8d:;
			{
				_1d72d057c_assertCall(_self_, (*(_21528_model)).cast_ptr<_1d652b213_BuiltinAssertCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1daad5015:;
			{
				_1d72d0835_errorCall(_self_, (*(_21528_model)).cast_ptr<_1d652cd19_BuiltinErrorCallExprModel>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1daad508c:;
			{
				_1d72d0add_makeCall(_self_, (*(_21528_model)).cast_ptr<_1d652b6b9_BuiltinMakeCallExprModel>(&__jule_any_type114));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1daad5114:;
			{
				_1d72d0d96_appendCall(_self_, (*(_21528_model)).cast_ptr<_1d652ba93_BuiltinAppendCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1daad518b:;
			{
				_1d72d114e_lenCall(_self_, (*(_21528_model)).cast_ptr<_1d652bd90_BuiltinLenCallExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1daad5213:;
			{
				_1d72d1407_capCall(_self_, (*(_21528_model)).cast_ptr<_1d652c18c_BuiltinCapCallExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1daad528a:;
			{
				_1d72d16b0_deleteCall(_self_, (*(_21528_model)).cast_ptr<_1d652c566_BuiltinDeleteCallExprModel>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1daad5312:;
			{
				_1d72d1968_sizeof(_self_, (*(_21528_model)).cast_ptr<_1d65288c5_SizeofExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1daad5389:;
			{
				_1d72d1c21_alignof(_self_, (*(_21528_model)).cast_ptr<_1d652d545_AlignofExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1daad5411:;
			{
				_1d72d1ec9_integratedToStr(_self_, (*(_21528_model)).cast_ptr<_1d652db3e_IntegratedToStrExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1daad5488:;
			{
				_1d72d2282_free(_self_, (*(_21528_model)).cast_ptr<_1d652e315_FreeExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1daad5510:;
			{
				_1d72d253a_backendEmit(_self_, (*(_21528_model)).cast_ptr<_1d652e018_BackendEmitExprModel>(&__jule_any_type25));
			}
		}
		_match_end_1daad429a:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1d72cb27b_exprDeadCode _Src) {
	_Stream << "exprDeadCode{";
	_Stream << "s:" << _Src._field_s;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d6771403_SwapExprModel _Src) {
	_Stream << "SwapExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d6771821_EmptyCompareExprModel _Src) {
	_Stream << "EmptyCompareExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Neg:" << _Src._field_Neg;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d6771b1d_RefExprModel _Src) {
	_Stream << "RefExprModel{";
	_Stream << "Var:" << _Src._field_Var;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d677214b_StrCompExprModel _Src) {
	_Stream << "StrCompExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "NotEq:" << _Src._field_NotEq;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d67726ce_MutSlicingExprModel _Src) {
	_Stream << "MutSlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d67729cb_UnsafeBinaryExprModel _Src) {
	_Stream << "UnsafeBinaryExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d6772cc8_UnsafeIndexingExprModel _Src) {
	_Stream << "UnsafeIndexingExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d6773207_PushToSliceExprModel _Src) {
	_Stream << "PushToSliceExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d67735d1_AppendToSliceExprModel _Src) {
	_Stream << "AppendToSliceExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Slice:" << _Src._field_Slice;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1d677478b_scopeOptimizer> static__1d6774cca_new(jule::Ptr<_1d6574129_Scope> _4623_scope) {
	return jule::new_ptr<_1d677478b_scopeOptimizer>(_1d677478b_scopeOptimizer{._field_scope=_4623_scope});;
}



inline void _1d6775083_setCurrentStmt(_1d677478b_scopeOptimizer* _self_, jule::Any _5237_stmt) {
	(*((*(_self_))._field_scope))._field_Stmts[(*(_self_))._field_i]=(*(((jule::Any*)((&(_5237_stmt))))));
}



inline void _1d6775281_removeCurrent(_1d677478b_scopeOptimizer* _self_) {
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*((*(_self_))._field_scope))._field_Stmts.slice(0LL, (*(_self_))._field_i),(*((*(_self_))._field_scope))._field_Stmts.slice(((*(_self_))._field_i + 1LL)));
}



inline void _1d6775539_optimizeData(_1d677478b_scopeOptimizer* _self_, jule::Ptr<_1d664721e_Data> _6135_d) {
	{
		auto &_match_expr{ (*(_6135_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1dab4016e:;
			{
				jule::Ptr<_1d65264d8_FnCallExprModel> _6417_m = (*(_6135_d))._field_Model.cast_ptr<_1d65264d8_FnCallExprModel>(&__jule_any_type34);;
				if (_208a42c35_Production) {
					if (((!(_1d6536608_IsBuiltin((*(_6417_m))._field_Func.ptr()))) && _1d6778ae2_isStdPackage(&((*((*((*((*((*(_6417_m))._field_Func))._field_Decl))._field_Token))._field_File))._field_Path), jule::Str::lit("debug", 5)))) {
						_1d6775083_setCurrentStmt(_self_, nullptr);
						return;;
					};
				};
			}
		}
		_match_end_1dab40108:;
	};
	static__1d677b012_optimize(&((*(_6135_d))._field_Model));
}



inline void _1d67757e2_optimizeVar(_1d677478b_scopeOptimizer* _self_, jule::Ptr<_1d65d9018_Var> _7634_v) {
	if (((*(_7634_v))._field_Value != nullptr)) {
		static__1d677b012_optimize(&((*((*((*(_7634_v))._field_Value))._field_Data))._field_Model));
	};
}



inline void _1d6775a9a_optimizeConditional(_1d677478b_scopeOptimizer* _self_, jule::Ptr<_1d6574c62_Conditional> _8242_c) {
	{
		auto expr = &((*(_8242_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1dab44cbc:;
		if (it != expr_end) {
			jule::Ptr<_1d6574547_If> _8321_elif = *it;
			{
				static__1d677b012_optimize(&((*(_8321_elif))._field_Expr));
				_1d6778471_optimizeChild(_self_, (*(_8321_elif))._field_Scope);
			}
			_iter_next_1dab44cbc:;
			++it;
			goto _iter_begin_1dab44cbc;
		}
		_iter_end_1dab44cbc:;
	};
	if (((*(_8242_c))._field_Default != nullptr)) {
		_1d6778471_optimizeChild(_self_, (*((*(_8242_c))._field_Default))._field_Scope);
	};
	if ((!(_1d6785a22_Cond))) {
		return;;
	};
	jule::Bool _9513_constCase = false;;
	{
		auto expr = &((*(_8242_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1dab47000:;
		if (it != expr_end) {
			jule::I64 _9814_i = it - expr->begin();
			jule::Ptr<_1d6574547_If> _9821_elif = *it;
			{
				if ((!(_1d6778e00_isConstantValidConditionalCase(&(_9821_elif))))) {
					goto _iter_next_1dab47000;
				};
				_9513_constCase=true;
				(*(_8242_c))._field_Elifs=(*(_8242_c))._field_Elifs.slice(0LL, _9814_i);
				(*(_8242_c))._field_Default=jule::new_ptr<_1d6574844_Else>(_1d6574844_Else{._field_Scope=(*(_9821_elif))._field_Scope});
				goto _iter_end_1dab47000;
			}
			_iter_next_1dab47000:;
			++it;
			_9814_i++;
			goto _iter_begin_1dab47000;
		}
		_iter_end_1dab47000:;
	};
	if (((*(_8242_c))._field_Elifs.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1d6574547_If>* _11513_i = (&((*(_8242_c))._field_Elifs[0LL]));;
	jule::Ptr<_1d6574547_If>* _1169_end = (&((*(_8242_c))._field_Elifs[((*(_8242_c))._field_Elifs.len() - 1LL)]));;
	for (; (_11513_i <= _1169_end); (_11513_i)++) {
		{
			{
				if (_1d67797c4_isUnreachableConditionalCase(&((*(_11513_i))))) {
					(*(_11513_i))=nullptr;
				};
			};
		}
	_iter_next_1dab4a641:;
	}
	_iter_end_1dab4a641:;;
	if (((*(_8242_c))._field_Elifs.len() == 0LL)) {
		return;;
	};
	if ((!(_9513_constCase))) {
		return;;
	};
	jule::I64 _13413_only = -1LL;;
	{
		auto expr = &((*(_8242_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1dab4be5b:;
		if (it != expr_end) {
			jule::I64 _13513_j = it - expr->begin();
			jule::Ptr<_1d6574547_If> _13516_elif = *it;
			{
				if ((_13516_elif != nullptr)) {
					if ((_13413_only != -1LL)) {
						return;;
					};
					_13413_only=_13513_j;
				};
			}
			_iter_next_1dab4be5b:;
			++it;
			_13513_j++;
			goto _iter_begin_1dab4be5b;
		}
		_iter_end_1dab4be5b:;
	};
	if ((_13413_only != -1LL)) {
		_1d6775083_setCurrentStmt(_self_, jule::Any((*((*(_8242_c))._field_Elifs[_13413_only]))._field_Scope, &__jule_any_type22));
	};
}



inline void _1d6775eb8_buildDefaultConstantTrueCase(_1d677478b_scopeOptimizer* _self_, jule::Ptr<_1d6578d98_Case> _15151_case, jule::I64* _15169_i, jule::Ptr<_1d6578260_Match>* _15182_m) {
	(*(_15151_case))._field_Exprs=nullptr;
	jule::I64 _1539_start = (*(_15169_i));;
	_julec_label_1dab4e865:;
	for (;;) {
		{
			if (((*((*(_15151_case))._field_Scope))._field_Stmts.len() == 0LL)) {
				goto _iter_end_1dab4e898;
			};
			jule::Any *_15918_stmt = &((*((*(_15151_case))._field_Scope))._field_Stmts[((*((*(_15151_case))._field_Scope))._field_Stmts.len() - 1LL)]);;
			{
				auto &_match_expr{ (*(_15918_stmt)) };
				
				if (_match_expr.type == &__jule_any_type48) {
					_case_begin_1dab51889:;
					{
						((*(_15169_i)))++;
						if (((*(_15169_i)) >= (*((*(_15182_m))))._field_Cases.len())) {
							(*(_15918_stmt))=jule::Any((*((*((*(_15182_m))))._field_Default))._field_Scope, &__jule_any_type22);
							goto _iter_end_1dab4e898;
						};
						_15151_case=(*((*(_15182_m))))._field_Cases[(*(_15169_i))];
						(*(_15918_stmt))=jule::Any((*(_15151_case))._field_Scope, &__jule_any_type22);
					}
				}
				else {
					_case_begin_1dab519ee:;
					{
						goto _iter_end_1dab4e898;
					}
				}
				_match_end_1dab51999:;
			};
		}
	_iter_next_1dab4e898:;
	}
	_iter_end_1dab4e898:;;
	(*((*(_15182_m))))._field_Default=(*((*(_15182_m))))._field_Cases[_1539_start];
	(*((*(_15182_m))))._field_Cases=(*((*(_15182_m))))._field_Cases.slice(0LL, _1539_start);
}



inline void _1d6776271_optimizeMatch(_1d677478b_scopeOptimizer* _self_, jule::Ptr<_1d6578260_Match> _17736_m) {
	{
		auto expr = &((*(_17736_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1dab54617:;
		if (it != expr_end) {
			jule::Ptr<_1d6578d98_Case> _17821_case = *it;
			{
				{
					auto expr = &((*(_17821_case))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1dab55063:;
					if (it != expr_end) {
						jule::Ptr<_1d664721e_Data> _17925_expr = *it;
						{
							static__1d677b012_optimize(&((*(_17925_expr))._field_Model));
						}
						_iter_next_1dab55063:;
						++it;
						goto _iter_begin_1dab55063;
					}
					_iter_end_1dab55063:;
				};
				_1d6778471_optimizeChild(_self_, (*(_17821_case))._field_Scope);
			}
			_iter_next_1dab54617:;
			++it;
			goto _iter_begin_1dab54617;
		}
		_iter_end_1dab54617:;
	};
	if (((*(_17736_m))._field_Default != nullptr)) {
		_1d6778471_optimizeChild(_self_, (*((*(_17736_m))._field_Default))._field_Scope);
	};
	if ((!(_1d6785a22_Cond))) {
		return;;
	};
	jule::Bool _19213_constCase = false;;
	{
		auto expr = &((*(_17736_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1dab56e77:;
		if (it != expr_end) {
			jule::I64 _19518_i = it - expr->begin();
			jule::Ptr<_1d6578d98_Case> _19525_case = *it;
			{
				if ((!(_1d677950a_isConstantValidMatchCase(&(_19525_case))))) {
					goto _iter_next_1dab56e77;
				};
				_19213_constCase=true;
				_1d6775eb8_buildDefaultConstantTrueCase(_self_, _19525_case, &(_19518_i), &(_17736_m));
				goto _iter_end_1dab56e77;
			}
			_iter_next_1dab56e77:;
			++it;
			_19518_i++;
			goto _iter_begin_1dab56e77;
		}
		_iter_end_1dab56e77:;
	};
	if (((*(_17736_m))._field_Cases.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1d6578d98_Case>* _20913_i = (&((*(_17736_m))._field_Cases[0LL]));;
	jule::Ptr<_1d6578d98_Case>* _2109_end = (&((*(_17736_m))._field_Cases[((*(_17736_m))._field_Cases.len() - 1LL)]));;
	for (; (_20913_i <= _2109_end); (_20913_i)++) {
		{
			{
				if (_1d6779a8d_isUnreachableMatchCase(&((*(_20913_i))))) {
					(*(_20913_i))=nullptr;
				};
			};
		}
	_iter_next_1dab59a90:;
	}
	_iter_end_1dab59a90:;;
	if ((!(_19213_constCase))) {
		return;;
	};
	jule::I64 _22413_only = -1LL;;
	{
		auto expr = &((*(_17736_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1dab5ac8e:;
		if (it != expr_end) {
			jule::I64 _22513_j = it - expr->begin();
			jule::Ptr<_1d6578d98_Case> _22516_case = *it;
			{
				if ((_22516_case != nullptr)) {
					if ((_22413_only != -1LL)) {
						return;;
					};
					_22413_only=_22513_j;
				};
			}
			_iter_next_1dab5ac8e:;
			++it;
			_22513_j++;
			goto _iter_begin_1dab5ac8e;
		}
		_iter_end_1dab5ac8e:;
	};
	if ((_22413_only != -1LL)) {
		_1d6775083_setCurrentStmt(_self_, jule::Any((*((*(_17736_m))._field_Cases[_22413_only]))._field_Scope, &__jule_any_type22));
	};
}



inline void _1d6776529_optimizeRangeIter(_1d677478b_scopeOptimizer* _self_, jule::Ptr<_1d6575e61_RangeIter> _24140_it) {
	static__1d677b012_optimize(&((*((*(_24140_it))._field_Expr))._field_Model));
	_1d6778471_optimizeChild(_self_, (*(_24140_it))._field_Scope);
}



inline void _1d67767d2_optimizeWhileIter(_1d677478b_scopeOptimizer* _self_, jule::Ptr<_1d6575515_WhileIter> _24640_it) {
	static__1d677b012_optimize(&((*(_24640_it))._field_Expr));
	_1d67781b8_optimizeStmt(_self_, (*(_24640_it))._field_Next);
	_1d6778471_optimizeChild(_self_, (*(_24640_it))._field_Scope);
}



inline jule::Bool _1d6776b23_substr(_1d677478b_scopeOptimizer* _self_, jule::Ptr<_1d6577726_Assign> _25229_a) {
	if (((*((*(_25229_a))._field_Op))._field_Id != static_cast<jule::U64>(71LLU))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_25229_a))._field_R))._field_Model };
		
		if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1dab60aeb:;
			{
				jule::Ptr<_1d6528155_SlicingExprModel> _25817_sem = (*((*(_25229_a))._field_R))._field_Model.cast_ptr<_1d6528155_SlicingExprModel>(&__jule_any_type91);;
				if (((*(_25817_sem))._field_Expr == (*((*(_25229_a))._field_L))._field_Model)) {
					_1d6775083_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1d67726ce_MutSlicingExprModel>(_1d67726ce_MutSlicingExprModel{._field_Token=(*(_25817_sem))._field_Token, ._field_Expr=(*(_25817_sem))._field_Expr, ._field_Left=(*(_25817_sem))._field_Left, ._field_Right=(*(_25817_sem))._field_Right}), &__jule_any_type120));
					return true;;
				};
			}
		}
		_match_end_1dab60a85:;
	};
	return false;;
}



inline jule::Bool _1d6776e64_strAssign(_1d677478b_scopeOptimizer* _self_, jule::Ptr<_1d6577726_Assign> _27232_a) {
	if ((!(_1d6785cdb_Str))) {
		return false;;
	};
	jule::Ptr<_1d668060e_Prim> _2769_lp = _1d667a186_Prim((*((*(_27232_a))._field_L))._field_Kind.ptr());;
	if (((_2769_lp == nullptr) || (!(_1d6683a96_IsStr(_2769_lp.ptr()))))) {
		return false;;
	};
	return _1d6776b23_substr(_self_, _27232_a);;
}



inline jule::Bool _1d67772a5_sliceAssign(_1d677478b_scopeOptimizer* _self_, jule::Ptr<_1d6577726_Assign> _28334_a) {
	if (((!(_1d67860a5_Slice)) || (_1d667b1dc_Slc((*((*(_28334_a))._field_L))._field_Kind.ptr()) == nullptr))) {
		return false;;
	};
	return _1d6776b23_substr(_self_, _28334_a);;
}



inline void _1d677755d_optimizeAssign(_1d677478b_scopeOptimizer* _self_, jule::Ptr<_1d6577726_Assign> _29137_assign) {
	if ((((*((*(_29137_assign))._field_Op))._field_Id == static_cast<jule::U64>(71LLU)) && _1d6770787_equalModels((*((*(_29137_assign))._field_L))._field_Model, (*((*(_29137_assign))._field_R))._field_Model))) {
		_1d6775281_removeCurrent(_self_);
		((*(_self_))._field_i)--;
		return;;
	};
	{
		
		if (_1d6776e64_strAssign(_self_, _29137_assign) || _1d67772a5_sliceAssign(_self_, _29137_assign)) {
			_case_begin_1dab67eaa:;
			{
				return;;
			}
		}
		_match_end_1dab67185:;
	};
	static__1d677b012_optimize(&((*((*(_29137_assign))._field_L))._field_Model));
	static__1d677b012_optimize(&((*((*(_29137_assign))._field_R))._field_Model));
	{
		auto &_match_expr{ (*((*(_29137_assign))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(43LLU) || _match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1dab69819:;
			{
				if (((!(_1d6784ceb_Math)) || (_1d667b709_Struct((*((*(_29137_assign))._field_L))._field_Kind.ptr()) != nullptr))) {
					goto _match_end_1dab697a3;
				};
				jule::U64 _31413_oldId = 0LLU;;
				jule::Str _31420_oldKind;;
				({
					jule::U64 ___jule_assign_arg = (*((*(_29137_assign))._field_Op))._field_Id;
					jule::Str _1___jule_assign_arg = (*((*(_29137_assign))._field_Op))._field_Kind;
					_31413_oldId = ___jule_assign_arg;
					_31420_oldKind = _1___jule_assign_arg;
				});
				{
					auto &_match_expr{ (*((*(_29137_assign))._field_Op))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(43LLU)) {
						_case_begin_1dab6c454:;
						{
							(*((*(_29137_assign))._field_Op))._field_Id=static_cast<jule::U64>(63LLU);
							(*((*(_29137_assign))._field_Op))._field_Kind=jule::Str::lit("/", 1);
						}
					}
					else if (_match_expr == static_cast<jule::U64>(44LLU)) {
						_case_begin_1dab6c4ba:;
						{
							(*((*(_29137_assign))._field_Op))._field_Id=static_cast<jule::U64>(64LLU);
							(*((*(_29137_assign))._field_Op))._field_Kind=jule::Str::lit("%", 1);
						}
					}
					else {
						_case_begin_1dab6c0d0:;
						{
							jule::panic(jule::Str::lit("implementation mistake, this panic call should be unreachable", 61) + jule::Str("\nlocation: julec/opt/scope.jule:323:17"));;
						}
					}
					_match_end_1dab6c07a:;
				};
				jule::Any _32517_model = jule::Any(jule::new_ptr<_1d6524508_BinaryExprModel>(_1d6524508_BinaryExprModel{._field_Left=(*(_29137_assign))._field_L, ._field_Right=(*(_29137_assign))._field_R, ._field_Op=(*(_29137_assign))._field_Op}), &__jule_any_type111);;
				static__1d677b012_optimize(&(_32517_model));
				{
					auto &_match_expr{ _32517_model };
					
					if (_match_expr.type == &__jule_any_type111) {
						_case_begin_1dab6bbd4:;
						{
							(*(_29137_assign))._field_R=jule::new_ptr<_1d652400d_OperandExprModel>((*((*(_29137_assign))._field_R)));
							(*((*(_29137_assign))._field_Op))._field_Id=static_cast<jule::U64>(71LLU);
							(*((*(_29137_assign))._field_Op))._field_Kind=jule::Str::lit("=", 1);
							(*((*(_29137_assign))._field_R))._field_Model=_32517_model;
							return;;
						}
					}
					_match_end_1dab6bb7e:;
				};
				(*((*(_29137_assign))._field_Op))._field_Id=_31413_oldId;
				(*((*(_29137_assign))._field_Op))._field_Kind=_31420_oldKind;
				return;;
			}
		}
		_match_end_1dab697a3:;
	};
	if (_1d67849dd_Append) {
		{
			auto &_match_expr{ (*((*(_29137_assign))._field_R))._field_Model };
			
			if (_match_expr.type == &__jule_any_type26) {
				_case_begin_1dab73119:;
				{
					jule::Ptr<_1d652ba93_BuiltinAppendCallExprModel> _34721_m = (*((*(_29137_assign))._field_R))._field_Model.cast_ptr<_1d652ba93_BuiltinAppendCallExprModel>(&__jule_any_type26);;
					if ((!(_1d6783c40_areSameLvalueExprModel(&((*((*(_29137_assign))._field_L))._field_Model), &((*(_34721_m))._field_Dest))))) {
						return;;
					};
					{
						auto &_match_expr{ (*(_34721_m))._field_Elements };
						
						if (_match_expr.type == &__jule_any_type76) {
							_case_begin_1dab74538:;
							{
								_1d6775083_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1d6773207_PushToSliceExprModel>(_1d6773207_PushToSliceExprModel{._field_Dest=(*(_34721_m))._field_Dest, ._field_Elems=(*(_34721_m))._field_Elements.cast_ptr<_1d65268b2_SliceExprModel>(&__jule_any_type76)}), &__jule_any_type121));
							}
						}
						else {
							_case_begin_1dab74ec8:;
							{
								_1d6775083_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1d67735d1_AppendToSliceExprModel>(_1d67735d1_AppendToSliceExprModel{._field_Dest=(*((*(_29137_assign))._field_L))._field_Model, ._field_Slice=(*(_34721_m))._field_Elements}), &__jule_any_type122));
							}
						}
						_match_end_1dab74e73:;
					};
				}
			}
			_match_end_1dab730a3:;
		};
	};
}



inline jule::Bool _1d677789e_tryOptimizeSwap(_1d677478b_scopeOptimizer* _self_, jule::Ptr<_1d6577b00_MultiAssign>* _36939_assign) {
	if (((!(_1d678636e_Assign)) || ((*((*(_36939_assign))))._field_L.len() != 2LL))) {
		return false;;
	};
	jule::Ptr<_1d6529c06_TupleExprModel> _37317_tup;;
	{
		auto &_match_expr{ (*((*(_36939_assign))))._field_R };
		
		if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1dab77b24:;
			{
				_37317_tup=(*((*(_36939_assign))))._field_R.cast_ptr<_1d6529c06_TupleExprModel>(&__jule_any_type81);
			}
		}
		_match_end_1dab77aad:;
	};
	if (((_37317_tup == nullptr) || ((*(_37317_tup))._field_Datas.len() != 2LL))) {
		return false;;
	};
	if ((_1d6770787_equalModels((*((*((*(_36939_assign))))._field_L[0LL]))._field_Model, (*((*(_37317_tup))._field_Datas[0LL]))._field_Model) && _1d6770787_equalModels((*((*((*(_36939_assign))))._field_L[1LL]))._field_Model, (*((*(_37317_tup))._field_Datas[1LL]))._field_Model))) {
		_1d6775281_removeCurrent(_self_);
		((*(_self_))._field_i)--;
		return true;;
	};
	if (((!(_1d6770787_equalModels((*((*((*(_36939_assign))))._field_L[0LL]))._field_Model, (*((*(_37317_tup))._field_Datas[1LL]))._field_Model))) || (!(_1d6770787_equalModels((*((*((*(_36939_assign))))._field_L[1LL]))._field_Model, (*((*(_37317_tup))._field_Datas[0LL]))._field_Model))))) {
		return false;;
	};
	jule::Ptr<_1d6771403_SwapExprModel> _39513_model = jule::new_ptr<_1d6771403_SwapExprModel>(_1d6771403_SwapExprModel{._field_Left=(*((*(_36939_assign))))._field_L[0LL], ._field_Right=(*((*(_36939_assign))))._field_L[1LL]});;
	static__1d677b012_optimize(&((*((*(_39513_model))._field_Left))._field_Model));
	static__1d677b012_optimize(&((*((*(_39513_model))._field_Right))._field_Model));
	_1d6775083_setCurrentStmt(_self_, jule::Any(_39513_model, &__jule_any_type123));
	return true;;
}



inline void _1d6777b57_optimizeMultiAssign(_1d677478b_scopeOptimizer* _self_, jule::Ptr<_1d6577b00_MultiAssign> _40542_assign) {
	if (_1d677789e_tryOptimizeSwap(_self_, &(_40542_assign))) {
		return;;
	};
	{
		auto expr = &((*(_40542_assign))._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1dab805bb:;
		if (it != expr_end) {
			jule::Ptr<_1d664721e_Data> _41021_l = *it;
			{
				if ((_41021_l != nullptr)) {
					static__1d677b012_optimize(&((*(_41021_l))._field_Model));
				};
			}
			_iter_next_1dab805bb:;
			++it;
			goto _iter_begin_1dab805bb;
		}
		_iter_end_1dab805bb:;
	};
	static__1d677b012_optimize(&((*(_40542_assign))._field_R));
}



inline void _1d6777e10_optimizeRet(_1d677478b_scopeOptimizer* _self_, jule::Ptr<_1d6579827_RetSt> _41834_r) {
	static__1d677b012_optimize(&((*(_41834_r))._field_Expr));
}



inline void _1d67781b8_optimizeStmt(_1d677478b_scopeOptimizer* _self_, jule::Any _42235_stmt) {
	{
		auto &_match_expr{ _42235_stmt };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1dab8225a:;
			{
				_1d6778471_optimizeChild(_self_, _42235_stmt.cast_ptr<_1d6574129_Scope>(&__jule_any_type22));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1dab822c1:;
			{
				_1d6775539_optimizeData(_self_, _42235_stmt.cast_ptr<_1d664721e_Data>(&__jule_any_type24));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1dab82337:;
			{
				_1d67757e2_optimizeVar(_self_, _42235_stmt.cast_ptr<_1d65d9018_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1dab8239d:;
			{
				_1d6775a9a_optimizeConditional(_self_, _42235_stmt.cast_ptr<_1d6574c62_Conditional>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1dab82414:;
			{
				_1d6776529_optimizeRangeIter(_self_, _42235_stmt.cast_ptr<_1d6575e61_RangeIter>(&__jule_any_type40));
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1dab8247a:;
			{
				_1d67767d2_optimizeWhileIter(_self_, _42235_stmt.cast_ptr<_1d6575515_WhileIter>(&__jule_any_type38));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1dab82502:;
			{
				_1d6778471_optimizeChild(_self_, (*(_42235_stmt.cast_ptr<_1d657505e_InfIter>(&__jule_any_type36)))._field_Scope);
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1dab82579:;
			{
				_1d677755d_optimizeAssign(_self_, _42235_stmt.cast_ptr<_1d6577726_Assign>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1dab82601:;
			{
				_1d6777b57_optimizeMultiAssign(_self_, _42235_stmt.cast_ptr<_1d6577b00_MultiAssign>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1dab82678:;
			{
				_1d6776271_optimizeMatch(_self_, _42235_stmt.cast_ptr<_1d6578260_Match>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1dab82700:;
			{
				_1d6777e10_optimizeRet(_self_, _42235_stmt.cast_ptr<_1d6579827_RetSt>(&__jule_any_type50));
			}
		}
		_match_end_1dab82128:;
	};
}



inline void _1d6778471_optimizeChild(_1d677478b_scopeOptimizer* _self_, jule::Ptr<_1d6574129_Scope> _44936_child) {
	jule::Ptr<_1d677478b_scopeOptimizer> _45013_so = static__1d6774cca_new(_44936_child);;
	_1d677866e_optimize(_45013_so.ptr());
}



inline void _1d677866e_optimize(_1d677478b_scopeOptimizer* _self_) {
	(*(_self_))._field_i=0LL;
	for (; ((*(_self_))._field_i < (*((*(_self_))._field_scope))._field_Stmts.len()); ((*(_self_))._field_i)++) {
		{
			_1d67781b8_optimizeStmt(_self_, (*((*(_self_))._field_scope))._field_Stmts[(*(_self_))._field_i]);
		}
	_iter_next_1dab88195:;
	}
	_iter_end_1dab88195:;;
}





std::ostream &operator<<(std::ostream &_Stream, _1d677478b_scopeOptimizer _Src) {
	_Stream << "scopeOptimizer{";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline void static__1d677b012_optimize(jule::Any* _5629_model) {
	if (_1d72d2d21_exprEnabled) {
		jule::Ptr<_1d677a929_exprOptimizer> _5917_exop = jule::new_ptr<_1d677a929_exprOptimizer>(_1d677a929_exprOptimizer{._field_model=((jule::Ptr<jule::Any>)(_5629_model))});;
		_1d6783404_do(_5917_exop.ptr());
	};
}



inline jule::Bool _1d677b353_selfCmpCond(_1d677a929_exprOptimizer* _self_, jule::Ptr<_1d6524508_BinaryExprModel>* _6631_m) {
	if ((!(_1d6770787_equalModels((*((*((*(_6631_m))))._field_Left))._field_Model, (*((*((*(_6631_m))))._field_Right))._field_Model)))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_6631_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(53LLU) || _match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1dab96b76:;
			{
				(*((*(_self_))._field_model))=jule::Any(static__1d4321bcb_NewBool(true), &__jule_any_type19);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_1dab96bdc:;
			{
				(*((*(_self_))._field_model))=jule::Any(static__1d4321bcb_NewBool(false), &__jule_any_type19);
				return true;;
			}
		}
		else {
			_case_begin_1dab96b10:;
			{
				return false;;
			}
		}
		_match_end_1dab96aaa:;
	};
}



inline jule::Bool _1d677b694_boolCond(_1d677a929_exprOptimizer* _self_, jule::Ptr<_1d6524508_BinaryExprModel>* _9028_m) {
	jule::Ptr<_1d668060e_Prim> _919_lp = _1d667a186_Prim((*((*((*(_9028_m))))._field_Left))._field_Kind.ptr());;
	if (((_919_lp == nullptr) || (!(_1d6683810_IsBool(_919_lp.ptr()))))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_9028_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1dab9ac57:;
			{
				std::swap((*((*(_9028_m))))._field_Left, (*((*(_9028_m))))._field_Right);
			}
		}
		else {
			_case_begin_1dab9a33e:;
			{
				{
					auto &_match_expr{ (*((*((*(_9028_m))))._field_Right))._field_Model };
					
					if (_match_expr.type == &__jule_any_type19) {
						_case_begin_1dab9964b:;
						{
							goto _match_end_1dab9ab47;
						}
					}
					else {
						_case_begin_1dab9ab9c:;
						{
							return false;;
						}
					}
					_match_end_1dab9ab47:;
				};
			}
		}
		_match_end_1dab9a2d9:;
	};
	jule::Ptr<_1d4321208_Const> _10813_c = (*((*((*(_9028_m))))._field_Right))._field_Model.cast_ptr<_1d4321208_Const>(&__jule_any_type19);;
	{
		auto &_match_expr{ (*((*((*(_9028_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1dab9cc15:;
			{
				if (_1d43230ea_ReadBool(_10813_c.ptr())) {
					(*((*(_self_))._field_model))=(*((*((*(_9028_m))))._field_Left))._field_Model;
				} else {
					_1d43246d4_SetBool(_10813_c.ptr(), false);
					(*((*(_self_))._field_model))=jule::Any(_10813_c, &__jule_any_type19);
				};
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1dab9cc7b:;
			{
				if (_1d43230ea_ReadBool(_10813_c.ptr())) {
					_1d43246d4_SetBool(_10813_c.ptr(), true);
					(*((*(_self_))._field_model))=jule::Any(_10813_c, &__jule_any_type19);
				} else {
					(*((*(_self_))._field_model))=(*((*((*(_9028_m))))._field_Left))._field_Model;
				};
				return true;;
			}
		}
		else {
			_case_begin_1dab9cb9e:;
		}
		_match_end_1dab9cb49:;
	};
	return false;;
}



inline jule::Bool _1d677b9d5_strCond(_1d677a929_exprOptimizer* _self_, jule::Ptr<_1d6524508_BinaryExprModel> _14326_m) {
	jule::Ptr<_1d668060e_Prim> _1449_lp = _1d667a186_Prim((*((*(_14326_m))._field_Left))._field_Kind.ptr());;
	if (((_1449_lp == nullptr) || (!(_1d6683a96_IsStr(_1449_lp.ptr()))))) {
		return false;;
	};
	if ((((*((*(_14326_m))._field_Op))._field_Id != static_cast<jule::U64>(50LLU)) && ((*((*(_14326_m))._field_Op))._field_Id != static_cast<jule::U64>(51LLU)))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_14326_m))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1daba4216:;
			{
				std::swap((*(_14326_m))._field_Left, (*(_14326_m))._field_Right);
			}
		}
		else {
			_case_begin_1daba37ed:;
			{
				{
					auto &_match_expr{ (*((*(_14326_m))._field_Right))._field_Model };
					
					if (_match_expr.type == &__jule_any_type19) {
						_case_begin_1daba2445:;
						{
							goto _match_end_1daba4106;
						}
					}
					else {
						_case_begin_1daba415b:;
						{
							return false;;
						}
					}
					_match_end_1daba4106:;
				};
			}
		}
		_match_end_1daba3798:;
	};
	jule::Ptr<_1d4321208_Const> _16413_c = (*((*(_14326_m))._field_Right))._field_Model.cast_ptr<_1d4321208_Const>(&__jule_any_type19);;
	{
		auto &_match_expr{ (*((*(_14326_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1daba6119:;
			{
				if ((_1d4323381_ReadStr(_16413_c.ptr())).empty()) {
					jule::Any _16821_model = jule::Any(jule::new_ptr<_1d6771821_EmptyCompareExprModel>(_1d6771821_EmptyCompareExprModel{._field_Expr=(*((*(_14326_m))._field_Left))._field_Model, ._field_Neg=false}), &__jule_any_type124);;
					(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_16821_model))))));
					goto _match_end_1daba6092;
				};
				jule::Any _17517_model = jule::Any(jule::new_ptr<_1d677214b_StrCompExprModel>(_1d677214b_StrCompExprModel{._field_Left=(*((*(_14326_m))._field_Left))._field_Model, ._field_Right=_16413_c, ._field_NotEq=false}), &__jule_any_type125);;
				(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_17517_model))))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1daba6191:;
			{
				if ((_1d4323381_ReadStr(_16413_c.ptr())).empty()) {
					jule::Any _18321_model = jule::Any(jule::new_ptr<_1d6771821_EmptyCompareExprModel>(_1d6771821_EmptyCompareExprModel{._field_Expr=(*((*(_14326_m))._field_Left))._field_Model, ._field_Neg=true}), &__jule_any_type124);;
					(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_18321_model))))));
					goto _match_end_1daba6092;
				};
				jule::Any _19017_model = jule::Any(jule::new_ptr<_1d677214b_StrCompExprModel>(_1d677214b_StrCompExprModel{._field_Left=(*((*(_14326_m))._field_Left))._field_Model, ._field_Right=_16413_c, ._field_NotEq=true}), &__jule_any_type125);;
				(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_19017_model))))));
			}
		}
		_match_end_1daba6092:;
	};
	return true;;
}



inline jule::Bool _1d677be8b_tryNeutralElement1(_1d677a929_exprOptimizer* _self_, jule::Ptr<_1d6524508_BinaryExprModel>* _20038_m, jule::Ptr<_1d4321208_Const> _20063_c, jule::Ptr<_1d652400d_OperandExprModel>* _20075_nc) {
	if (_1d432597c_IsStr(_20063_c.ptr())) {
		if ((!(_1d6785cdb_Str))) {
			return false;;
		};
		if (((_1d4323381_ReadStr(_20063_c.ptr())).empty() && ((*((*((*(_20038_m))))._field_Op))._field_Id == static_cast<jule::U64>(60LLU)))) {
			(*((*(_self_))._field_model))=(*((*(_20075_nc))))._field_Model;
			return true;;
		};
		return false;;
	};
	if (((!(_1d6784ceb_Math)) || (_1d4323dba_AsF64(_20063_c.ptr()) != 0LL))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_20038_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1dabae8c5:;
			{
				if (((*(_20075_nc)) == (*((*(_20038_m))))._field_Left)) {
					(*((*(_self_))._field_model))=(*((*(_20075_nc))))._field_Model;
					return true;;
				};
				(*((*(_self_))._field_model))=jule::Any(_20063_c, &__jule_any_type19);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1dabb0574:;
			{
				_1d4324173_SetI64(_20063_c.ptr(), 0LL);
				(*((*(_self_))._field_model))=jule::Any(_20063_c, &__jule_any_type19);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1dabb05da:;
			{
				(*((*(_self_))._field_model))=(*((*(_20075_nc))))._field_Model;
				return true;;
			}
		}
		_match_end_1dabb0464:;
	};
	return false;;
}



inline jule::Bool _1d677c2cc_tryNeutralElement(_1d677a929_exprOptimizer* _self_, jule::Ptr<_1d6524508_BinaryExprModel>* _24437_m) {
	{
		auto &_match_expr{ (*((*((*(_24437_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1dabb3830:;
			{
				jule::Ptr<_1d4321208_Const> _24817_c = (*((*((*(_24437_m))))._field_Left))._field_Model.cast_ptr<_1d4321208_Const>(&__jule_any_type19);;
				return _1d677be8b_tryNeutralElement1(_self_, _24437_m, _24817_c, &((*((*(_24437_m))))._field_Right));;
			}
		}
		_match_end_1dabb37b9:;
	};
	{
		auto &_match_expr{ (*((*((*(_24437_m))))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1dabb490d:;
			{
				jule::Ptr<_1d4321208_Const> _25317_c = (*((*((*(_24437_m))))._field_Right))._field_Model.cast_ptr<_1d4321208_Const>(&__jule_any_type19);;
				return _1d677be8b_tryNeutralElement1(_self_, _24437_m, _25317_c, &((*((*(_24437_m))))._field_Left));;
			}
		}
		_match_end_1dabb48a8:;
	};
	return false;;
}



inline void _1d677c585_binary(_1d677a929_exprOptimizer* _self_, jule::Ptr<_1d6524508_BinaryExprModel> _25925_m) {
	static__1d677b012_optimize(&((*((*(_25925_m))._field_Left))._field_Model));
	static__1d677b012_optimize(&((*((*(_25925_m))._field_Right))._field_Model));
	if (_1d6785a22_Cond) {
		{
			
			if (_1d677b9d5_strCond(_self_, _25925_m) || _1d677b694_boolCond(_self_, &(_25925_m)) || _1d677b353_selfCmpCond(_self_, &(_25925_m))) {
				_case_begin_1dabb77e0:;
				{
					return;;
				}
			}
			_match_end_1dabb7724:;
		};
	};
	if (_1d677c2cc_tryNeutralElement(_self_, &(_25925_m))) {
		return;;
	};
	if ((!(_1d6784ceb_Math))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_25925_m))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1dabb8648:;
			{
				goto _match_end_1dabb8a44;
			}
		}
		else {
			_case_begin_1dabb8a99:;
			{
				return;;
			}
		}
		_match_end_1dabb8a44:;
	};
	jule::Ptr<_1d668060e_Prim> _2929_lp = _1d667a186_Prim((*((*(_25925_m))._field_Left))._field_Kind.ptr());;
	if ((_2929_lp == nullptr)) {
		return;;
	};
	jule::Ptr<_1d668060e_Prim> _2969_rp = _1d667a186_Prim((*((*(_25925_m))._field_Right))._field_Kind.ptr());;
	if ((_2969_rp == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_25925_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1dabbb607:;
			{
				jule::Bool _30313_ok = false;;
				jule::U64 _30317_x = 0;;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1d6783877_checkForBitShiftOpt(&((*(_25925_m))._field_Left), &((*(_25925_m))._field_Right));
					_30313_ok = __jule_assign_result.__jule_result_arg0;
					_30317_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_30313_ok) {
					(*((*(_25925_m))._field_Op))._field_Id=static_cast<jule::U64>(56LLU);
					(*((*(_25925_m))._field_Op))._field_Kind=jule::Str::lit("<<", 2);
					jule::Ptr<_1d4321208_Const> _30721_c = (*((*(_25925_m))._field_Right))._field_Model.cast_ptr<_1d4321208_Const>(&__jule_any_type19);;
					_1d432442b_SetU64(_30721_c.ptr(), _30317_x);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1dabbb250:;
			{
				jule::Bool _31413_ok = false;;
				jule::U64 _31417_x = 0;;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1d6783877_checkForBitShiftOpt(&((*(_25925_m))._field_Left), &((*(_25925_m))._field_Right));
					_31413_ok = __jule_assign_result.__jule_result_arg0;
					_31417_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_31413_ok) {
					(*((*(_25925_m))._field_Op))._field_Id=static_cast<jule::U64>(57LLU);
					(*((*(_25925_m))._field_Op))._field_Kind=jule::Str::lit(">>", 2);
					jule::Ptr<_1d4321208_Const> _31821_c = (*((*(_25925_m))._field_Right))._field_Model.cast_ptr<_1d4321208_Const>(&__jule_any_type19);;
					_1d432442b_SetU64(_31821_c.ptr(), _31417_x);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1dabbb2b6:;
			{
				jule::Ptr<_1d4321208_Const> _32517_c = (*((*(_25925_m))._field_Right))._field_Model.cast_ptr<_1d4321208_Const>(&__jule_any_type19);;
				if ((_1d4323dba_AsF64(_32517_c.ptr()) == 2LL)) {
					(*((*(_25925_m))._field_Op))._field_Id=static_cast<jule::U64>(65LLU);
					(*((*(_25925_m))._field_Op))._field_Kind=jule::Str::lit("&", 1);
					_1d4324173_SetI64(_32517_c.ptr(), 1LL);
					return;;
				};
			}
		}
		else {
			_case_begin_1dabbb1d9:;
			{
				return;;
			}
		}
		_match_end_1dabbb184:;
	};
	jule::Any _34013_model = jule::Any(jule::new_ptr<_1d67729cb_UnsafeBinaryExprModel>(_1d67729cb_UnsafeBinaryExprModel{._field_Node=_25925_m}), &__jule_any_type126);;
	(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_34013_model))))));
}



inline void _1d677c83d_unary(_1d677a929_exprOptimizer* _self_, jule::Ptr<_1d65248d2_UnaryExprModel> _34424_m) {
	static__1d677b012_optimize(&((*((*(_34424_m))._field_Expr))._field_Model));
	if ((!(_1d6785648_Ptr))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_34424_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1dabc5a0c:;
			{
				{
					auto &_match_expr{ (*((*(_34424_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type110) {
						_case_begin_1dabc6678:;
						{
							jule::Ptr<_1d65248d2_UnaryExprModel> _35321_um = (*((*(_34424_m))._field_Expr))._field_Model.cast_ptr<_1d65248d2_UnaryExprModel>(&__jule_any_type110);;
							if (((*((*(_35321_um))._field_Op))._field_Id == static_cast<jule::U64>(65LLU))) {
								(*((*(_self_))._field_model))=(*((*(_35321_um))._field_Expr))._field_Model;
							};
						}
					}
					_match_end_1dabc6612:;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1dabc5a73:;
			{
				{
					auto &_match_expr{ (*((*(_34424_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1dabc8922:;
						{
							jule::Ptr<_1d65d9018_Var> _36121_v = (*((*(_34424_m))._field_Expr))._field_Model.cast_ptr<_1d65d9018_Var>(&__jule_any_type8);;
							if ((*(_36121_v))._field_Reference) {
								jule::Any _36325_model = jule::Any(jule::new_ptr<_1d6771b1d_RefExprModel>(_1d6771b1d_RefExprModel{._field_Var=_36121_v}), &__jule_any_type127);;
								(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_36325_model))))));
							};
						}
					}
					_match_end_1dabc88ab:;
				};
			}
		}
		_match_end_1dabc58ec:;
	};
}



inline void _1d677cae6_structureLit(_1d677a929_exprOptimizer* _self_, jule::Ptr<_1d65252a6_StructLitExprModel> _37031_m) {
	{
		auto expr = &((*(_37031_m))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1dabc8c52:;
		if (it != expr_end) {
			jule::Ptr<_1d6524e10_StructArgExprModel> _37121_arg = *it;
			{
				static__1d677b012_optimize(&((*((*(_37121_arg))._field_Expr))._field_Model));
			}
			_iter_next_1dabc8c52:;
			++it;
			goto _iter_begin_1dabc8c52;
		}
		_iter_end_1dabc8c52:;
	};
}



inline void _1d677cd9e_allocStructure(_1d677a929_exprOptimizer* _self_, jule::Ptr<_1d65255a3_AllocStructLitExprModel> _37633_m) {
	_1d677cae6_structureLit(_self_, (*(_37633_m))._field_Lit);
}



inline void _1d677d157_casting(_1d677a929_exprOptimizer* _self_, jule::Ptr<_1d6525b36_CastingExprModel> _38026_m) {
	static__1d677b012_optimize(&((*(_38026_m))._field_Expr));
}



inline void _1d677d410_args(_1d677a929_exprOptimizer* _self_, jule::Slice<jule::Any>* _38424_args) {
	{
		auto expr = _38424_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1dabcc6e5:;
		if (it != expr_end) {
			jule::I64 _38514_i = it - expr->begin();
			jule::Any _38521_arg = *it;
			{
				static__1d677b012_optimize(&(_38521_arg));
				(*(_38424_args))[_38514_i]=_38521_arg;
			}
			_iter_next_1dabcc6e5:;
			++it;
			_38514_i++;
			goto _iter_begin_1dabcc6e5;
		}
		_iter_end_1dabcc6e5:;
	};
}



inline void _1d677d6b8_scope(_1d677a929_exprOptimizer* _self_, jule::Ptr<_1d6574129_Scope>* _39125_s) {
	jule::Ptr<_1d677478b_scopeOptimizer> _39213_scopt = static__1d6774cca_new((*(_39125_s)));;
	_1d677866e_optimize(_39213_scopt.ptr());
}



inline void _1d677d971_funcCall(_1d677a929_exprOptimizer* _self_, jule::Ptr<_1d65264d8_FnCallExprModel> _39627_m) {
	static__1d677b012_optimize(&((*(_39627_m))._field_Expr));
	_1d677d410_args(_self_, &((*(_39627_m))._field_Args));
	if (((*(_39627_m))._field_Except != nullptr)) {
		_1d677d6b8_scope(_self_, &((*(_39627_m))._field_Except));
	};
}



inline void _1d677dc29_slice(_1d677a929_exprOptimizer* _self_, jule::Ptr<_1d65268b2_SliceExprModel> _40424_m) {
	_1d677d410_args(_self_, &((*(_40424_m))._field_Elems));
}



inline void _1d677ded2_array(_1d677a929_exprOptimizer* _self_, jule::Ptr<_1d6529909_ArrayExprModel> _40824_m) {
	if ((((*(_40824_m))._field_Elems.len() == 2LL) && ((*(_40824_m))._field_Elems[1LL] == nullptr))) {
		jule::Any _41017_elem = (*(_40824_m))._field_Elems[0LL];;
		static__1d677b012_optimize(&(_41017_elem));
		(*(_40824_m))._field_Elems[0LL]=_41017_elem;
	};
	_1d677d410_args(_self_, &((*(_40824_m))._field_Elems));
}



inline void _1d677e28a_indexing(_1d677a929_exprOptimizer* _self_, jule::Ptr<_1d6526d68_IndexingExprModel> _41727_m) {
	static__1d677b012_optimize(&((*((*(_41727_m))._field_Expr))._field_Model));
	static__1d677b012_optimize(&((*((*(_41727_m))._field_Index))._field_Model));
	if ((!(_1d67850b5_Access))) {
		return;;
	};
	jule::Bool _4239_array = (_1d667ae56_Arr((*((*(_41727_m))._field_Expr))._field_Kind.ptr()) != nullptr);;
	if ((_4239_array && _1d6647ae3_IsConst((*(_41727_m))._field_Index.ptr()))) {
		jule::Any _42617_model = jule::Any(jule::new_ptr<_1d6772cc8_UnsafeIndexingExprModel>(_1d6772cc8_UnsafeIndexingExprModel{._field_Node=_41727_m}), &__jule_any_type128);;
		(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_42617_model))))));
		return;;
	};
	{
		auto &_match_expr{ (*((*(_41727_m))._field_Index))._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1dabd6a0c:;
			{
				jule::Ptr<_1d65d9018_Var> _43213_i = (*((*(_41727_m))._field_Index))._field_Model.cast_ptr<_1d65d9018_Var>(&__jule_any_type8);;
				if (((*(_43213_i))._field_Mutable || ((*(_43213_i))._field_IterRelation == nullptr))) {
					goto _match_end_1dabd6996;
				};
				{
					auto &_match_expr{ (*((*(_41727_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1dabd87cd:;
						{
							jule::Ptr<_1d65d9018_Var> _43817_r = (*((*(_41727_m))._field_Expr))._field_Model.cast_ptr<_1d65d9018_Var>(&__jule_any_type8);;
							if (((*((*(_43213_i))._field_IterRelation))._field_Range == _43817_r)) {
								jule::Any _44125_model = jule::Any(jule::new_ptr<_1d6772cc8_UnsafeIndexingExprModel>(_1d6772cc8_UnsafeIndexingExprModel{._field_Node=_41727_m}), &__jule_any_type128);;
								(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_44125_model))))));
							};
						}
					}
					_match_end_1dabd8767:;
				};
			}
		}
		_match_end_1dabd6996:;
	};
}



inline void _1d677e543_anonFunc(_1d677a929_exprOptimizer* _self_, jule::Ptr<_1d6527242_AnonFnExprModel> _44827_m) {
	_1d677d6b8_scope(_self_, &((*((*(_44827_m))._field_Func))._field_Scope));
}



inline void _1d677e7eb_mapExpr(_1d677a929_exprOptimizer* _self_, jule::Ptr<_1d6527ac2_MapExprModel> _45226_m) {
	{
		auto expr = &((*(_45226_m))._field_Entries);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1dabdb6e3:;
		if (it != expr_end) {
			jule::Ptr<_1d652761b_KeyValPairExprModel> _45321_pair = *it;
			{
				static__1d677b012_optimize(&((*(_45321_pair))._field_Key));
				static__1d677b012_optimize(&((*(_45321_pair))._field_Val));
			}
			_iter_next_1dabdb6e3:;
			++it;
			goto _iter_begin_1dabdb6e3;
		}
		_iter_end_1dabdb6e3:;
	};
}



inline void _1d677eaa4_slicing(_1d677a929_exprOptimizer* _self_, jule::Ptr<_1d6528155_SlicingExprModel> _45926_m) {
	static__1d677b012_optimize(&((*(_45926_m))._field_Expr));
	static__1d677b012_optimize(&((*(_45926_m))._field_Left));
	if (((*(_45926_m))._field_Right != nullptr)) {
		static__1d677b012_optimize(&((*(_45926_m))._field_Right));
	};
}



inline void _1d677ed5c_traitSub(_1d677a929_exprOptimizer* _self_, jule::Ptr<_1d65286d8_TraitSubIdentExprModel> _46727_m) {
	static__1d677b012_optimize(&((*(_46727_m))._field_Expr));
}



inline void _1d6780115_structureSub(_1d677a929_exprOptimizer* _self_, jule::Ptr<_1d6529079_StructSubIdentExprModel> _47131_m) {
	static__1d677b012_optimize(&((*((*(_47131_m))._field_Expr))._field_Model));
}



inline void _1d67803bd_tuple(_1d677a929_exprOptimizer* _self_, jule::Ptr<_1d6529c06_TupleExprModel> _47524_m) {
	{
		auto expr = &((*(_47524_m))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1dabdea26:;
		if (it != expr_end) {
			jule::Ptr<_1d664721e_Data> _47621_d = *it;
			{
				static__1d677b012_optimize(&((*(_47621_d))._field_Model));
			}
			_iter_next_1dabdea26:;
			++it;
			goto _iter_begin_1dabdea26;
		}
		_iter_end_1dabdea26:;
	};
}



inline void _1d6780676_newCall(_1d677a929_exprOptimizer* _self_, jule::Ptr<_1d652a883_BuiltinNewCallExprModel> _48126_m) {
	if (((*(_48126_m))._field_Init != nullptr)) {
		static__1d677b012_optimize(&((*(_48126_m))._field_Init));
	};
}



inline void _1d678092e_outCall(_1d677a929_exprOptimizer* _self_, jule::Ptr<_1d652a0d0_BuiltinOutCallExprModel> _48726_m) {
	static__1d677b012_optimize(&((*(_48726_m))._field_Expr));
}



inline void _1d6780bd7_outlnCall(_1d677a929_exprOptimizer* _self_, jule::Ptr<_1d652a4a9_BuiltinOutlnCallExprModel> _49128_m) {
	static__1d677b012_optimize(&((*(_49128_m))._field_Expr));
}



inline void _1d6780e90_panicCall(_1d677a929_exprOptimizer* _self_, jule::Ptr<_1d652ac5c_BuiltinPanicCallExprModel> _49528_m) {
	static__1d677b012_optimize(&((*(_49528_m))._field_Expr));
}



inline void _1d6781248_assertCall(_1d677a929_exprOptimizer* _self_, jule::Ptr<_1d652b213_BuiltinAssertCallExprModel> _49929_m) {
	static__1d677b012_optimize(&((*(_49929_m))._field_Expr));
}



inline void _1d6781501_errorCall(_1d677a929_exprOptimizer* _self_, jule::Ptr<_1d652cd19_BuiltinErrorCallExprModel> _50328_m) {
	static__1d677b012_optimize(&((*((*(_50328_m))._field_Err))._field_Model));
}



inline void _1d67817a9_makeCall(_1d677a929_exprOptimizer* _self_, jule::Ptr<_1d652b6b9_BuiltinMakeCallExprModel> _50727_m) {
	if (((*(_50727_m))._field_Len != nullptr)) {
		static__1d677b012_optimize(&((*(_50727_m))._field_Len));
	};
	if (((*(_50727_m))._field_Cap != nullptr)) {
		static__1d677b012_optimize(&((*(_50727_m))._field_Cap));
	};
}



inline void _1d6781a62_appendCall(_1d677a929_exprOptimizer* _self_, jule::Ptr<_1d652ba93_BuiltinAppendCallExprModel> _51629_m) {
	static__1d677b012_optimize(&((*(_51629_m))._field_Dest));
	static__1d677b012_optimize(&((*(_51629_m))._field_Elements));
}



inline void _1d6781d1a_lenCall(_1d677a929_exprOptimizer* _self_, jule::Ptr<_1d652bd90_BuiltinLenCallExprModel> _52126_m) {
	static__1d677b012_optimize(&((*((*(_52126_m))._field_Expr))._field_Model));
}



inline void _1d67820c3_capCall(_1d677a929_exprOptimizer* _self_, jule::Ptr<_1d652c18c_BuiltinCapCallExprModel> _52526_m) {
	static__1d677b012_optimize(&((*((*(_52526_m))._field_Expr))._field_Model));
}



inline void _1d678237b_deleteCall(_1d677a929_exprOptimizer* _self_, jule::Ptr<_1d652c566_BuiltinDeleteCallExprModel> _52929_m) {
	static__1d677b012_optimize(&((*((*(_52929_m))._field_Dest))._field_Model));
	if (((*(_52929_m))._field_Key != nullptr)) {
		static__1d677b012_optimize(&((*((*(_52929_m))._field_Key))._field_Model));
	};
}



inline void _1d6782634_sizeof(_1d677a929_exprOptimizer* _self_, jule::Ptr<_1d65288c5_SizeofExprModel> _53625_m) {
	static__1d677b012_optimize(&((*(_53625_m))._field_Expr));
}



inline void _1d67828dc_alignof(_1d677a929_exprOptimizer* _self_, jule::Ptr<_1d652d545_AlignofExprModel> _54026_m) {
	static__1d677b012_optimize(&((*(_54026_m))._field_Expr));
}



inline void _1d6782b95_integratedToStr(_1d677a929_exprOptimizer* _self_, jule::Ptr<_1d652db3e_IntegratedToStrExprModel> _54434_m) {
	static__1d677b012_optimize(&((*(_54434_m))._field_Expr));
}



inline void _1d6782e4d_free(_1d677a929_exprOptimizer* _self_, jule::Ptr<_1d652e315_FreeExprModel> _54823_m) {
	static__1d677b012_optimize(&((*(_54823_m))._field_Expr));
}



inline void _1d6783206_backendEmit(_1d677a929_exprOptimizer* _self_, jule::Ptr<_1d652e018_BackendEmitExprModel> _55230_m) {
	_1d677d410_args(_self_, &((*(_55230_m))._field_Exprs));
}



inline void _1d6783404_do(_1d677a929_exprOptimizer* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_model)) };
		
		if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1dabe9a86:;
			{
				_1d677c585_binary(_self_, (*((*(_self_))._field_model)).cast_ptr<_1d6524508_BinaryExprModel>(&__jule_any_type111));
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1dabe9aec:;
			{
				_1d677c83d_unary(_self_, (*((*(_self_))._field_model)).cast_ptr<_1d65248d2_UnaryExprModel>(&__jule_any_type110));
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1dabe9b63:;
			{
				_1d677cae6_structureLit(_self_, (*((*(_self_))._field_model)).cast_ptr<_1d65252a6_StructLitExprModel>(&__jule_any_type94));
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1dabe9bda:;
			{
				_1d677cd9e_allocStructure(_self_, (*((*(_self_))._field_model)).cast_ptr<_1d65255a3_AllocStructLitExprModel>(&__jule_any_type112));
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1dabe9c62:;
			{
				_1d677d157_casting(_self_, (*((*(_self_))._field_model)).cast_ptr<_1d6525b36_CastingExprModel>(&__jule_any_type92));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1dabe9cd9:;
			{
				_1d677d971_funcCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1d65264d8_FnCallExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1dabe9d61:;
			{
				_1d677dc29_slice(_self_, (*((*(_self_))._field_model)).cast_ptr<_1d65268b2_SliceExprModel>(&__jule_any_type76));
			}
		}
		else if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1dabe9dd8:;
			{
				_1d677ded2_array(_self_, (*((*(_self_))._field_model)).cast_ptr<_1d6529909_ArrayExprModel>(&__jule_any_type84));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1dabe9e60:;
			{
				_1d677e28a_indexing(_self_, (*((*(_self_))._field_model)).cast_ptr<_1d6526d68_IndexingExprModel>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1dabe9ed7:;
			{
				_1d677e543_anonFunc(_self_, (*((*(_self_))._field_model)).cast_ptr<_1d6527242_AnonFnExprModel>(&__jule_any_type99));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1dabea05e:;
			{
				_1d677e7eb_mapExpr(_self_, (*((*(_self_))._field_model)).cast_ptr<_1d6527ac2_MapExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1dabea0d6:;
			{
				_1d677eaa4_slicing(_self_, (*((*(_self_))._field_model)).cast_ptr<_1d6528155_SlicingExprModel>(&__jule_any_type91));
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1dabea15d:;
			{
				_1d677ed5c_traitSub(_self_, (*((*(_self_))._field_model)).cast_ptr<_1d65286d8_TraitSubIdentExprModel>(&__jule_any_type96));
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1dabea1d5:;
			{
				_1d6780115_structureSub(_self_, (*((*(_self_))._field_model)).cast_ptr<_1d6529079_StructSubIdentExprModel>(&__jule_any_type97));
			}
		}
		else if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1dabea25c:;
			{
				_1d67803bd_tuple(_self_, (*((*(_self_))._field_model)).cast_ptr<_1d6529c06_TupleExprModel>(&__jule_any_type81));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1dabea2d4:;
			{
				_1d678092e_outCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1d652a0d0_BuiltinOutCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1dabea35b:;
			{
				_1d6780bd7_outlnCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1d652a4a9_BuiltinOutlnCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1dabea3d3:;
			{
				_1d6780676_newCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1d652a883_BuiltinNewCallExprModel>(&__jule_any_type113));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1dabea45a:;
			{
				_1d6780e90_panicCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1d652ac5c_BuiltinPanicCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1dabea4d2:;
			{
				_1d6781248_assertCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1d652b213_BuiltinAssertCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1dabea559:;
			{
				_1d6781501_errorCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1d652cd19_BuiltinErrorCallExprModel>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1dabea5d1:;
			{
				_1d67817a9_makeCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1d652b6b9_BuiltinMakeCallExprModel>(&__jule_any_type114));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1dabea658:;
			{
				_1d6781a62_appendCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1d652ba93_BuiltinAppendCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1dabea6d0:;
			{
				_1d6781d1a_lenCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1d652bd90_BuiltinLenCallExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1dabea757:;
			{
				_1d67820c3_capCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1d652c18c_BuiltinCapCallExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1dabea7ce:;
			{
				_1d678237b_deleteCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1d652c566_BuiltinDeleteCallExprModel>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1dabea856:;
			{
				_1d6782634_sizeof(_self_, (*((*(_self_))._field_model)).cast_ptr<_1d65288c5_SizeofExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1dabea8cd:;
			{
				_1d67828dc_alignof(_self_, (*((*(_self_))._field_model)).cast_ptr<_1d652d545_AlignofExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1dabea955:;
			{
				_1d6782b95_integratedToStr(_self_, (*((*(_self_))._field_model)).cast_ptr<_1d652db3e_IntegratedToStrExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1dabea9cc:;
			{
				_1d6782e4d_free(_self_, (*((*(_self_))._field_model)).cast_ptr<_1d652e315_FreeExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1dabeaa54:;
			{
				_1d6783206_backendEmit(_self_, (*((*(_self_))._field_model)).cast_ptr<_1d652e018_BackendEmitExprModel>(&__jule_any_type25));
			}
		}
		_match_end_1dabe97de:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1d677a929_exprOptimizer _Src) {
	_Stream << "exprOptimizer{";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1d72d32e9_Optimizer> static__1d72d376c_New(jule::Ptr<_1d7166787_IR>* _2624_ir) {
	return jule::new_ptr<_1d72d32e9_Optimizer>(_1d72d32e9_Optimizer{._field_ir=(*(_2624_ir))});;
}



inline void _1d72d3a25_optimizeGlobal(_1d72d32e9_Optimizer* _self_, jule::Ptr<_1d65d9018_Var>* _3238_v) {
	if ((!((*((*(_3238_v))))._field_Binded))) {
		static__1d677b012_optimize(&((*((*((*((*(_3238_v))))._field_Value))._field_Data))._field_Model));
	};
}



inline void _1d72d3ccd_optimizeFunction(_1d72d32e9_Optimizer* _self_, jule::Ptr<_1d653226e_Fn>* _3840_func) {
	if ((*((*(_3840_func))))._field_Binded) {
		return;;
	};
	{
		auto expr = &((*((*(_3840_func))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1dac10283:;
		if (it != expr_end) {
			jule::Ptr<_1d6535173_FnIns> _4221_ins = *it;
			{
				jule::Ptr<_1d677478b_scopeOptimizer> _4317_so = static__1d6774cca_new((*(_4221_ins))._field_Scope);;
				_1d677866e_optimize(_4317_so.ptr());
			}
			_iter_next_1dac10283:;
			++it;
			goto _iter_begin_1dac10283;
		}
		_iter_end_1dac10283:;
	};
}



inline void _1d72d4086_optimizeStruct(_1d72d32e9_Optimizer* _self_, jule::Ptr<_1d651c2d1_Struct>* _4838_s) {
	if ((*((*(_4838_s))))._field_Binded) {
		return;;
	};
	{
		auto expr = &((*((*(_4838_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1dac1196b:;
		if (it != expr_end) {
			jule::Ptr<_1d652005e_StructIns> _5221_ins = *it;
			{
				{
					auto expr = &((*(_5221_ins))._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1dac12362:;
					if (it != expr_end) {
						jule::Ptr<_1d651e4ae_FieldIns> _5325_f = *it;
						{
							if (((*(_5325_f))._field_Default != nullptr)) {
								static__1d677b012_optimize(&((*((*(_5325_f))._field_Default))._field_Model));
							};
						}
						_iter_next_1dac12362:;
						++it;
						goto _iter_begin_1dac12362;
					}
					_iter_end_1dac12362:;
				};
				{
					auto expr = &((*(_5221_ins))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1dac127b3:;
					if (it != expr_end) {
						jule::Ptr<_1d653226e_Fn> _5825_m = *it;
						{
							_1d72d3ccd_optimizeFunction(_self_, &(_5825_m));
						}
						_iter_next_1dac127b3:;
						++it;
						goto _iter_begin_1dac127b3;
					}
					_iter_end_1dac127b3:;
				};
			}
			_iter_next_1dac1196b:;
			++it;
			goto _iter_begin_1dac1196b;
		}
		_iter_end_1dac1196b:;
	};
}



inline void _1d72d433e_optimizeGlobals(_1d72d32e9_Optimizer* _self_, jule::Ptr<_1d6598835_Package>* _6439_p) {
	{
		auto expr = &((*((*(_6439_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1dac13ece:;
		if (it != expr_end) {
			jule::Ptr<_1d6641d73_SymbolTable> _6521_f = *it;
			{
				{
					auto expr = &((*(_6521_f))._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1dac1492a:;
					if (it != expr_end) {
						jule::Ptr<_1d65d9018_Var> _6625_v = *it;
						{
							_1d72d3a25_optimizeGlobal(_self_, &(_6625_v));
						}
						_iter_next_1dac1492a:;
						++it;
						goto _iter_begin_1dac1492a;
					}
					_iter_end_1dac1492a:;
				};
			}
			_iter_next_1dac13ece:;
			++it;
			goto _iter_begin_1dac13ece;
		}
		_iter_end_1dac13ece:;
	};
}



inline void _1d72d45e7_optimizeFunctions(_1d72d32e9_Optimizer* _self_, jule::Ptr<_1d6598835_Package>* _7241_p) {
	{
		auto expr = &((*((*(_7241_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1dac14584:;
		if (it != expr_end) {
			jule::Ptr<_1d6641d73_SymbolTable> _7321_f = *it;
			{
				{
					auto expr = &((*(_7321_f))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1dac15d6b:;
					if (it != expr_end) {
						jule::Ptr<_1d653226e_Fn> _7425_func = *it;
						{
							_1d72d3ccd_optimizeFunction(_self_, &(_7425_func));
						}
						_iter_next_1dac15d6b:;
						++it;
						goto _iter_begin_1dac15d6b;
					}
					_iter_end_1dac15d6b:;
				};
			}
			_iter_next_1dac14584:;
			++it;
			goto _iter_begin_1dac14584;
		}
		_iter_end_1dac14584:;
	};
}



inline void _1d72d48a0_optimizeStructs(_1d72d32e9_Optimizer* _self_, jule::Ptr<_1d6598835_Package>* _8039_p) {
	{
		auto expr = &((*((*(_8039_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1dac159c5:;
		if (it != expr_end) {
			jule::Ptr<_1d6641d73_SymbolTable> _8121_f = *it;
			{
				{
					auto expr = &((*(_8121_f))._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1dac172ac:;
					if (it != expr_end) {
						jule::Ptr<_1d651c2d1_Struct> _8225_s = *it;
						{
							_1d72d4086_optimizeStruct(_self_, &(_8225_s));
						}
						_iter_next_1dac172ac:;
						++it;
						goto _iter_begin_1dac172ac;
					}
					_iter_end_1dac172ac:;
				};
			}
			_iter_next_1dac159c5:;
			++it;
			goto _iter_begin_1dac159c5;
		}
		_iter_end_1dac159c5:;
	};
}



inline void _1d72d4b58_optimizePackage(_1d72d32e9_Optimizer* _self_, jule::Ptr<_1d6598835_Package>* _8839_p) {
	_1d72d433e_optimizeGlobals(_self_, _8839_p);
	_1d72d45e7_optimizeFunctions(_self_, _8839_p);
	_1d72d48a0_optimizeStructs(_self_, _8839_p);
}



inline void _1d72d4d56_Optimize(_1d72d32e9_Optimizer* _self_) {
	_1d72d50cb_detectEnabled();
	if (_1d6784724_Deadcode) {
		_1d72c561b_EliminateDefines(&((*(_self_))._field_ir));
	};
	if ((_1d72d30da_scopeEnabled || _1d72d2d21_exprEnabled)) {
		{
			auto expr = &((*((*(_self_))._field_ir))._field_Used);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1dac192e2:;
			if (it != expr_end) {
				jule::Ptr<_1d659590e_ImportInfo> _10425_u = *it;
				{
					if ((!((*(_10425_u))._field_Binded))) {
						_1d72d4b58_optimizePackage(_self_, &((*(_10425_u))._field_Package));
					};
				}
				_iter_next_1dac192e2:;
				++it;
				goto _iter_begin_1dac192e2;
			}
			_iter_end_1dac192e2:;
		};
		_1d72d4b58_optimizePackage(_self_, &((*((*(_self_))._field_ir))._field_Main));
	};
	if (_1d6784724_Deadcode) {
		_1d72cabb5_EliminateScopes(&((*(_self_))._field_ir));
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1d72d32e9_Optimizer _Src) {
	_Stream << "Optimizer{";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline void static__1d7309cc1_Reset(void) {
	jule::out(jule::Str::lit("\033[0m", 4));
}



inline void static__1d730b0d0_Print(jule::Str _1921_escape, jule::Str _1934_text) {
	jule::out(_1921_escape);
	jule::out(_1934_text);
	static__1d7309cc1_Reset();
}





std::ostream &operator<<(std::ostream &_Stream, _1d730ade3_AnsiEscape _Src) {
	_Stream << "AnsiEscape{";
	_Stream << "}";
	return _Stream;
}



inline void static__1d730c7da_LogFlat(_1e0235a7e_Log* _1424_l) {
	jule::outln((*(_1424_l))._field_Text);
}



inline void static__1d730ca1b_LogError(_1e0235a7e_Log* _1925_l) {
	jule::out(jule::Str::lit("\033[31m", 5));
	jule::out(jule::Str::lit("error: ", 7));
	jule::out((*(_1925_l))._field_Text);
	static__1d7309cc1_Reset();
	if (((*(_1925_l))._field_Path.len() != 0LL)) {
		jule::out(jule::Str::lit("\n  --> ", 7));
		jule::out((*(_1925_l))._field_Path);
	};
	if ((((*(_1925_l))._field_Row != 0LL) && ((*(_1925_l))._field_Column != 0LL))) {
		jule::out(jule::Str::lit(":", 1));
		jule::out(_1d43131ea_Itoa((*(_1925_l))._field_Row));
		jule::out(jule::Str::lit(":", 1));
		jule::out(_1d43131ea_Itoa((*(_1925_l))._field_Column));
	};
	if (((*(_1925_l))._field_Line.len() != 0LL)) {
		jule::Str _3617_line = _1e017621c_TrimLeft((*(_1925_l))._field_Line, jule::Str::lit("\r\n\v\b ", 5));;
		jule::I64 _3717_offset = (((*(_1925_l))._field_Line.len() - _3617_line.len()) + 1LL);;
		jule::I64 _3817_oldLen = _3617_line.len();;
		_3617_line=_1e017621c_TrimLeft(_3617_line, jule::Str::lit("\t", 1));
		if ((_3817_oldLen != _3617_line.len())) {
			_3717_offset+=((_3817_oldLen - _3617_line.len()) << 3LLU);
		};
		jule::out(jule::Str::lit("\n  ", 3));
		jule::Str _4413_row = _1d43131ea_Itoa((*(_1925_l))._field_Row);;
		jule::out(_4413_row);
		jule::out(jule::Str::lit(" | ", 3));
		jule::out(_3617_line);
		jule::out(jule::Str::lit("\n  ", 3));
		jule::out(_1e016dcb4_Repeat(jule::Str::lit(" ", 1), static_cast<jule::I64>(_4413_row.len())));
		jule::out(jule::Str::lit(" | ", 3));
		jule::out(_1e016dcb4_Repeat(jule::Str::lit(" ", 1), static_cast<jule::I64>(((*(_1925_l))._field_Column - _3717_offset))));
		jule::out(jule::Str::lit("^", 1));
		if (((*(_1925_l))._field_Suggestion.len() != 0LL)) {
			jule::out(jule::Str::lit("\n  ", 3));
			jule::out(_1e016dcb4_Repeat(jule::Str::lit(" ", 1), static_cast<jule::I64>(_4413_row.len())));
			jule::out(jule::Str::lit(" | ", 3));
			static__1d730b0d0_Print(jule::Str::lit("\033[95m", 5), jule::Str::lit("suggestion: ", 12));
			jule::out((*(_1925_l))._field_Suggestion);
		};
	};
	jule::outln(jule::Str::lit("\n", 1));
}



inline void static__1d730cc4c_Log(_1e0235a7e_Log* _6520_l) {
	{
		auto &_match_expr{ (*(_6520_l))._field_Kind };
		
		if (_match_expr == static_cast<jule::I64>(0LL)) {
			_case_begin_1dac27168:;
			{
				static__1d730c7da_LogFlat(_6520_l);
			}
		}
		else if (_match_expr == static_cast<jule::I64>(1LL)) {
			_case_begin_1dac271e0:;
			{
				static__1d730ca1b_LogError(_6520_l);
			}
		}
		_match_end_1dac2709c:;
	};
}



inline void static__1d730ce7d_PrintLogs(jule::Slice<_1e0235a7e_Log>* _7526_logs) {
	{
		auto expr = _7526_logs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1dac2362b:;
		if (it != expr_end) {
			_1e0235a7e_Log *_7616_l = it;
			{
				static__1d730cc4c_Log(_7616_l);
			}
			_iter_next_1dac2362b:;
			++it;
			goto _iter_begin_1dac2362b;
		}
		_iter_end_1dac2362b:;
	};
	jule::out(jule::Str::lit("=== ", 4));
	jule::out(_1d43131ea_Itoa(static_cast<jule::I64>((*(_7526_logs)).len())));
	jule::outln(jule::Str::lit(" error generated ===", 20));
}





std::ostream &operator<<(std::ostream &_Stream, _1d730c510_Logger _Src) {
	_Stream << "Logger{";
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d7c42bd1_AbsTime _Src) {
	_Stream << "AbsTime{";
	_Stream << "Day:" << _Src._field_Day << ", ";
	_Stream << "WeekDay:" << _Src._field_WeekDay << ", ";
	_Stream << "YearDay:" << _Src._field_YearDay << ", ";
	_Stream << "Month:" << _Src._field_Month << ", ";
	_Stream << "Year:" << _Src._field_Year << ", ";
	_Stream << "Second:" << _Src._field_Second << ", ";
	_Stream << "Minute:" << _Src._field_Minute << ", ";
	_Stream << "Hour:" << _Src._field_Hour;
	_Stream << "}";
	return _Stream;
}



inline _1d7c433a7_Time static__1d7c4375e_Unix(jule::U64 _9120_sec) {
	return _1d7c433a7_Time{._field_sec=_9120_sec};;
}



inline _1d7c433a7_Time static__1d7c4396d_Now(void) {
	return static__1d7c4375e_Unix(static_cast<jule::U64>(_1d7c45497_unix()));;
}



inline _1d7c42bd1_AbsTime _1d7c45156_Abs(_1d7c433a7_Time* _self_) {
	jule::U64 _1279_secs = ((*(_self_))._field_sec - 951868800LLU);;
	jule::U64 _12813_days = (_1279_secs / 86400LLU);;
	jule::U64 _12913_remSecs = (_1279_secs % 86400LL);;
	if ((_12913_remSecs < 0LLU)) {
		_12913_remSecs+=86400LLU;
		(_12813_days)--;
	};
	jule::U64 _13513_qcCycles = (_12813_days / 146097LLU);;
	jule::U64 _13613_remDays = (_12813_days % 146097LL);;
	if ((_13613_remDays < 0LLU)) {
		_13613_remDays+=146097LLU;
		(_13513_qcCycles)--;
	};
	jule::U64 _14213_cCycles = (_13613_remDays / 36524LLU);;
	if ((_14213_cCycles == 4LLU)) {
		(_14213_cCycles)--;
	};
	_13613_remDays-=(_14213_cCycles * 36524LLU);
	jule::U64 _14813_qCycles = (_13613_remDays / 1461LLU);;
	if ((_14813_qCycles == 25LLU)) {
		(_14813_qCycles)--;
	};
	_13613_remDays-=(_14813_qCycles * 1461LLU);
	jule::U64 _15413_remYears = (_13613_remDays / 365LLU);;
	if ((_15413_remYears == 4LLU)) {
		(_15413_remYears)--;
	};
	_13613_remDays-=(_15413_remYears * 365LLU);
	jule::U64 _16013_leap = static_cast<jule::U64>(0LLU);;
	if (((_15413_remYears == 0LLU) && ((_14813_qCycles > 0LLU) || (_14213_cCycles == 0LLU)))) {
		_16013_leap=1LLU;
	};
	jule::U64 _16413_yDay = (((_13613_remDays + 31LLU) + 28LLU) + _16013_leap);;
	if ((_16413_yDay >= (365LLU + _16013_leap))) {
		_16413_yDay-=(365LLU + _16013_leap);
	};
	jule::U64 _16913_months = static_cast<jule::U64>(0LLU);;
	for (; (_1d7c421a8_mdays[static_cast<jule::I64>(_16913_months)] <= _13613_remDays); (_16913_months)++) {
		{
			_13613_remDays-=_1d7c421a8_mdays[static_cast<jule::I64>(_16913_months)];
		}
	_iter_next_1dac5d864:;
	}
	_iter_end_1dac5d864:;;
	_1d7c42bd1_AbsTime _17413_t = _1d7c42bd1_AbsTime{};;
	_17413_t._field_Year=static_cast<jule::U64>(((((_15413_remYears + (4LLU * _14813_qCycles)) + (100LLU * _14213_cCycles)) + (400LLU * _13513_qcCycles)) + 100LLU));
	_17413_t._field_Month=static_cast<jule::U64>((_16913_months + 2LLU));
	if ((_17413_t._field_Month >= 12LLU)) {
		_17413_t._field_Month-=12LLU;
		(_17413_t._field_Year)++;
	};
	_17413_t._field_Month+=1LLU;
	_17413_t._field_Year+=1900LLU;
	_17413_t._field_Day=static_cast<jule::U64>((_13613_remDays + 1LLU));
	_17413_t._field_WeekDay=static_cast<jule::U64>(((3LLU + _12813_days) % 7LL));
	if ((_17413_t._field_WeekDay < 0LLU)) {
		_17413_t._field_WeekDay+=7LLU;
	};
	_17413_t._field_YearDay=_16413_yDay;
	_17413_t._field_Hour=static_cast<jule::U64>((_12913_remSecs / 3600LLU));
	_17413_t._field_Minute=static_cast<jule::U64>(((_12913_remSecs / 60LLU) % 60LL));
	_17413_t._field_Second=static_cast<jule::U64>((_12913_remSecs % 60LL));
	return _17413_t;;
}





std::ostream &operator<<(std::ostream &_Stream, _1d7c433a7_Time _Src) {
	_Stream << "Time{";
	_Stream << "sec:" << _Src._field_sec;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1d7b69355_scopeCoder> static__1d7b69971_new(jule::Ptr<_1d7c4c856_ObjectCoder>* _6624_oc) {
	return jule::new_ptr<_1d7b69355_scopeCoder>(_1d7b69355_scopeCoder{._field_oc=(*(_6624_oc))});;
}



inline void _1dad01808_iterHead(jule::Ptr<_1d7b69355_scopeCoder> _self_, jule::Ptr<_1d6575e61_RangeIter>* _7332_it, jule::Bool* _7344_ref, jule::Str _7355_begin) {
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1d7c4d4b1_addIndent((*(_self_))._field_oc);
	_1d7c4d8ac_indent((*(_self_))._field_oc);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("auto expr = ", 12));
	if ((_1d6784416_Copy && _1d7b709aa_isCopyOptimizable(&((*((*(_7332_it))))._field_Expr)))) {
		(*(_7344_ref))=true;
		{
			auto &_match_expr{ (*((*((*(_7332_it))))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1dad03046:;
				{
					jule::Ptr<_1d65d9018_Var> _8217_v = (*((*((*(_7332_it))))._field_Expr))._field_Model.cast_ptr<_1d65d9018_Var>(&__jule_any_type8);;
					if ((*(_8217_v))._field_Reference) {
						_1d7b80844_model((*((*(_self_))._field_oc))._field_ec, (*((*((*(_7332_it))))._field_Expr))._field_Model);
						goto _match_end_1dad05323;
					};
					goto _case_begin_1dad05378;
				}
			}
			else {
				_case_begin_1dad05378:;
				{
					_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
					_1d7b80844_model((*((*(_self_))._field_oc))._field_ec, (*((*((*(_7332_it))))._field_Expr))._field_Model);
					_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				}
			}
			_match_end_1dad05323:;
		};
	} else {
		_1d7b76829_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*((*(_7332_it))))._field_Expr))._field_Model);
	};
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1d7c4d8ac_indent((*(_self_))._field_oc);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("auto it = expr", 14));
	if ((*(_7344_ref))) {
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("begin();\n", 9));
	_1d7c4d8ac_indent((*(_self_))._field_oc);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("auto expr_end = expr", 20));
	if ((*(_7344_ref))) {
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("end();\n", 7));
	_1d7c4d8ac_indent((*(_self_))._field_oc);
	_1d7c4d00a_write((*(_self_))._field_oc, _7355_begin);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1d7c4d8ac_indent((*(_self_))._field_oc);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("if (it != expr_end) {\n", 22));
	_1d7c4d4b1_addIndent((*(_self_))._field_oc);
	_1d7c4d8ac_indent((*(_self_))._field_oc);
}



inline void _1d7b6a147_rangeIndexIter(jule::Ptr<_1d7b69355_scopeCoder> _self_, jule::Ptr<_1d6575e61_RangeIter>* _12239_it) {
	_1e01838bc_StrBuilder _12313_sb = static__1e0183b64_New(64LL);;
	static__1d7b894eb_iterBegin(&(_12313_sb), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_12239_it)))));
	jule::Str _1259_begin = _1e018cee2_Str(&_12313_sb);;
	_1e018d1e0_Clear(&_12313_sb);
	static__1d7b89ac3_iterNext(&(_12313_sb), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_12239_it)))));
	jule::Str _1289_next = _1e018cee2_Str(&_12313_sb);;
	jule::Bool _13013_ref = false;;
	_1dad01808_iterHead(_self_, _12239_it, &(_13013_ref), _1259_begin);
	if (((*((*(_12239_it))))._field_KeyA != nullptr)) {
		_1d7c55b7d_varInitExpr((*(_self_))._field_oc, &((*((*(_12239_it))))._field_KeyA), jule::Fn<void(void)>([=](void) mutable -> void {
			if (_13013_ref) {
				_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("it - expr->begin()", 18));
			} else {
				_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("it - expr.begin()", 17));
			};
		}));
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1d7c4d8ac_indent((*(_self_))._field_oc);
	};
	if (((*((*(_12239_it))))._field_KeyB != nullptr)) {
		(*((*((*(_12239_it))))._field_KeyB))._field_Reference=(_1d6784416_Copy && _1d7b70d73_isIterCopyOptimizable(&((*((*(_12239_it))))._field_Expr), &((*((*(_12239_it))))._field_KeyB)));
		_1d7c55b7d_varInitExpr((*(_self_))._field_oc, &((*((*(_12239_it))))._field_KeyB), jule::Fn<void(void)>([=](void) mutable -> void {
			{
				if ((*((*((*(_12239_it))))._field_KeyB))._field_Reference) {
					_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
				} else {
					_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("*it", 3));
				};
			};
		}));
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1d7c4d8ac_indent((*(_self_))._field_oc);
	};
	_1d7b70339_scope(_self_, (*((*(_12239_it))))._field_Scope);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1d7c4d8ac_indent((*(_self_))._field_oc);
	_1d7c4d00a_write((*(_self_))._field_oc, _1289_next);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1d7c4d8ac_indent((*(_self_))._field_oc);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("++it;\n", 6));
	_1d7c4d8ac_indent((*(_self_))._field_oc);
	if (((*((*(_12239_it))))._field_KeyA != nullptr)) {
		static__1d7b89210_var(&((*((*(_self_))._field_oc))._field_Buf), (*((*(_12239_it))))._field_KeyA);
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("++;\n", 4));
		_1d7c4d8ac_indent((*(_self_))._field_oc);
	};
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_1d7c4d00a_write((*(_self_))._field_oc, _1259_begin);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1d7c4d6ae_doneIndent((*(_self_))._field_oc);
	_1d7c4d8ac_indent((*(_self_))._field_oc);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1d7c4d8ac_indent((*(_self_))._field_oc);
	static__1d7b897d7_iterEnd(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_12239_it)))));
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1d7c4d6ae_doneIndent((*(_self_))._field_oc);
	_1d7c4d8ac_indent((*(_self_))._field_oc);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1d7b6a400_rangeHashmapIter(jule::Ptr<_1d7b69355_scopeCoder> _self_, jule::Ptr<_1d6575e61_RangeIter>* _18941_it) {
	_1e01838bc_StrBuilder _19013_sb = static__1e0183b64_New(64LL);;
	static__1d7b894eb_iterBegin(&(_19013_sb), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_18941_it)))));
	jule::Str _1929_begin = _1e018cee2_Str(&_19013_sb);;
	_1e018d1e0_Clear(&_19013_sb);
	static__1d7b89ac3_iterNext(&(_19013_sb), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_18941_it)))));
	jule::Str _1959_next = _1e018cee2_Str(&_19013_sb);;
	jule::Bool _19713_ref = false;;
	_1dad01808_iterHead(_self_, _18941_it, &(_19713_ref), _1929_begin);
	if (((*((*(_18941_it))))._field_KeyA != nullptr)) {
		_1d7c55b7d_varInitExpr((*(_self_))._field_oc, &((*((*(_18941_it))))._field_KeyA), jule::Fn<void(void)>([=](void) mutable -> void {
			_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("it->first", 9));
		}));
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1d7c4d8ac_indent((*(_self_))._field_oc);
	};
	if (((*((*(_18941_it))))._field_KeyB != nullptr)) {
		_1d7c55b7d_varInitExpr((*(_self_))._field_oc, &((*((*(_18941_it))))._field_KeyB), jule::Fn<void(void)>([=](void) mutable -> void {
			_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("it->second", 10));
		}));
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1d7c4d8ac_indent((*(_self_))._field_oc);
	};
	_1d7b70339_scope(_self_, (*((*(_18941_it))))._field_Scope);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1d7c4d8ac_indent((*(_self_))._field_oc);
	_1d7c4d00a_write((*(_self_))._field_oc, _1959_next);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1d7c4d8ac_indent((*(_self_))._field_oc);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("++it;\n", 6));
	_1d7c4d8ac_indent((*(_self_))._field_oc);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_1d7c4d00a_write((*(_self_))._field_oc, _1929_begin);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1d7c4d6ae_doneIndent((*(_self_))._field_oc);
	_1d7c4d8ac_indent((*(_self_))._field_oc);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1d7c4d8ac_indent((*(_self_))._field_oc);
	static__1d7b897d7_iterEnd(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_18941_it)))));
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1d7c4d6ae_doneIndent((*(_self_))._field_oc);
	_1d7c4d8ac_indent((*(_self_))._field_oc);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1d7b6a6a8_ifCase(jule::Ptr<_1d7b69355_scopeCoder> _self_, jule::Ptr<_1d6574547_If> _23630_i) {
	if (((*(_23630_i))._field_Expr != nullptr)) {
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
		_1d7b76829_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_23630_i))._field_Expr);
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(") ", 2));
	};
	_1d7b70339_scope(_self_, (*(_23630_i))._field_Scope);
}



inline void _1d7b6a961_conditional(jule::Ptr<_1d7b69355_scopeCoder> _self_, jule::Ptr<_1d6574c62_Conditional> _24535_c) {
	jule::Bool _24613_writed = false;;
	{
		auto expr = &((*(_24535_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1dad343da:;
		if (it != expr_end) {
			jule::Ptr<_1d6574547_If> _24721_elif = *it;
			{
				if ((_24721_elif == nullptr)) {
					goto _iter_next_1dad343da;
				};
				if (_24613_writed) {
					_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(" else ", 6));
				};
				_24613_writed=true;
				_1d7b6a6a8_ifCase(_self_, _24721_elif);
			}
			_iter_next_1dad343da:;
			++it;
			goto _iter_begin_1dad343da;
		}
		_iter_end_1dad343da:;
	};
	if (((*(_24535_c))._field_Default != nullptr)) {
		if (_24613_writed) {
			_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(" else ", 6));
		};
		_1d7b70339_scope(_self_, (*((*(_24535_c))._field_Default))._field_Scope);
	};
}



inline void _1d7b6ac19_infIter(jule::Ptr<_1d7b69355_scopeCoder> _self_, jule::Ptr<_1d657505e_InfIter> _26531_it) {
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("for (;;) {\n", 11));
	_1d7c4d4b1_addIndent((*(_self_))._field_oc);
	_1d7c4d8ac_indent((*(_self_))._field_oc);
	_1d7b70339_scope(_self_, (*(_26531_it))._field_Scope);
	_1d7c4d6ae_doneIndent((*(_self_))._field_oc);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1d7c4d8ac_indent((*(_self_))._field_oc);
	static__1d7b89ac3_iterNext(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_26531_it)));
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1d7c4d8ac_indent((*(_self_))._field_oc);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1d7c4d8ac_indent((*(_self_))._field_oc);
	static__1d7b897d7_iterEnd(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_26531_it)));
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
}



inline void _1d7b6aec2_whileIter(jule::Ptr<_1d7b69355_scopeCoder> _self_, jule::Ptr<_1d6575515_WhileIter> _28233_it) {
	if ((((*(_28233_it))._field_Expr != nullptr) && ((*(_28233_it))._field_Next == nullptr))) {
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("while (", 7));
		_1d7b76829_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_28233_it))._field_Expr);
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(") {\n", 4));
	} else {
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("for (; ", 7));
		if (((*(_28233_it))._field_Expr != nullptr)) {
			_1d7b76829_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_28233_it))._field_Expr);
		};
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
		if (((*(_28233_it))._field_Next != nullptr)) {
			_1d7b6ecc8_st(_self_, (*(_28233_it))._field_Next);
		};
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(") {\n", 4));
	};
	_1d7c4d4b1_addIndent((*(_self_))._field_oc);
	_1d7c4d8ac_indent((*(_self_))._field_oc);
	_1d7b70339_scope(_self_, (*(_28233_it))._field_Scope);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1d7c4d6ae_doneIndent((*(_self_))._field_oc);
	_1d7c4d8ac_indent((*(_self_))._field_oc);
	static__1d7b89ac3_iterNext(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_28233_it)));
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1d7c4d8ac_indent((*(_self_))._field_oc);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1d7c4d8ac_indent((*(_self_))._field_oc);
	static__1d7b897d7_iterEnd(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_28233_it)));
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
}



inline void _1d7b6b27a_rangeIter(jule::Ptr<_1d7b69355_scopeCoder> _self_, jule::Ptr<_1d6575e61_RangeIter> _31533_it) {
	{
		
		if ((_1d667b1dc_Slc((*((*(_31533_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1dad48542:;
			{
				_1d7b6a147_rangeIndexIter(_self_, &(_31533_it));
			}
		}
		else if ((_1d667ae56_Arr((*((*(_31533_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1dad48212:;
			{
				_1d7b6a147_rangeIndexIter(_self_, &(_31533_it));
			}
		}
		else if ((_1d667bc26_Map((*((*(_31533_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1dad48278:;
			{
				_1d7b6a400_rangeHashmapIter(_self_, &(_31533_it));
			}
		}
		else {
			_case_begin_1dad4819b:;
			{
				_1d7b6a147_rangeIndexIter(_self_, &(_31533_it));
			}
		}
		_match_end_1dad480d0:;
	};
}



inline void _1d7b6b533_cont(jule::Ptr<_1d7b69355_scopeCoder> _self_, jule::Ptr<_1d65762e6_ContSt> _32824_c) {
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1d7b89ac3_iterNext(&((*((*(_self_))._field_oc))._field_Buf), (*(_32824_c))._field_It);
}



inline void _1d7b6b7db_label(jule::Ptr<_1d7b69355_scopeCoder> _self_, jule::Ptr<_1d65769bc_Label> _33325_l) {
	static__1d7b89dae_label(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_33325_l)));
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(":", 1));
}



inline void _1d7b6ba94_gotoSt(jule::Ptr<_1d7b69355_scopeCoder> _self_, jule::Ptr<_1d6576d96_GotoSt> _33826_gt) {
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1d7b89dae_label(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_33826_gt))._field_Label)));
}



inline void _1d7b6bd4c_postfix(jule::Ptr<_1d7b69355_scopeCoder> _self_, jule::Ptr<_1d6577270_Postfix> _34331_p) {
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1d7b76829_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_34331_p))._field_Expr);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	_1d7c4d00a_write((*(_self_))._field_oc, (*(_34331_p))._field_Op);
}



inline void _1d7b6c105_assign(jule::Ptr<_1d7b69355_scopeCoder> _self_, jule::Ptr<_1d6577726_Assign> _35030_a) {
	_1d7b76829_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_35030_a))._field_L))._field_Model);
	_1d7c4d00a_write((*(_self_))._field_oc, (*((*(_35030_a))._field_Op))._field_Kind);
	_1d7b76829_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_35030_a))._field_R))._field_Model);
}



inline void _1d7b6c3ad_mapLookupAssign(jule::Ptr<_1d7b69355_scopeCoder> _self_, jule::Ptr<_1d6577b00_MultiAssign>* _35640_a) {
	jule::Ptr<_1d6526d68_IndexingExprModel> _35713_iem = (*((*(_35640_a))))._field_R.cast_ptr<_1d6526d68_IndexingExprModel>(&__jule_any_type45);;
	_1d7b76829_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_35713_iem))._field_Expr))._field_Model);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(".lookup(", 8));
	_1d7b76829_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_35713_iem))._field_Index))._field_Model);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	if (((*((*(_35640_a))))._field_L[0LL] != nullptr)) {
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
		_1d7b76829_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*((*(_35640_a))))._field_L[0LL]))._field_Model);
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("), ", 3));
	} else {
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("nullptr, ", 9));
	};
	if (((*((*(_35640_a))))._field_L[1LL] != nullptr)) {
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
		_1d7b76829_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*((*(_35640_a))))._field_L[1LL]))._field_Model);
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	} else {
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
	};
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1d7b6c666_multiAssignTup(jule::Ptr<_1d7b69355_scopeCoder> _self_, jule::Ptr<_1d6577b00_MultiAssign>* _37939_a) {
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_1d7c4d4b1_addIndent((*(_self_))._field_oc);
	jule::Ptr<_1d6529c06_TupleExprModel> _38313_tup = (*((*(_37939_a))))._field_R.cast_ptr<_1d6529c06_TupleExprModel>(&__jule_any_type81);;
	{
		auto expr = &((*(_38313_tup))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1dad5d9db:;
		if (it != expr_end) {
			jule::I64 _38514_i = it - expr->begin();
			jule::Ptr<_1d664721e_Data> _38521_r = *it;
			{
				_1d7c4d8ac_indent((*(_self_))._field_oc);
				jule::Ptr<_1d664721e_Data> _38717_l = (*((*(_37939_a))))._field_L[_38514_i];;
				if ((_38717_l != nullptr)) {
					{
						auto &_match_expr{ (*(_38717_l))._field_Model };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_1dad619ab:;
							{
								jule::Ptr<_1d65d9018_Var> _39125_v = (*(_38717_l))._field_Model.cast_ptr<_1d65d9018_Var>(&__jule_any_type8);;
								if (((*(_39125_v))._field_Reference && (!(_1d65d939d_IsInitialized(_39125_v.ptr()))))) {
									static__1d7b89210_var(&((*((*(_self_))._field_oc))._field_Buf), _39125_v);
									_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(" = &(", 5));
									_1d7b76829_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_38521_r))._field_Model);
									_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
									(*((*(_37939_a))))._field_L[_38514_i]=nullptr;
									goto _iter_next_1dad5d9db;
								};
							}
						}
						_match_end_1dad61956:;
					};
					_1d7c63482_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_38717_l))._field_Kind);
					_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
					static__1d7b87461_toOut(&((*((*(_self_))._field_oc))._field_Buf), _1d7b68c28_assignArgName, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_38514_i)));
					_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				};
				_1d7b76829_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_38521_r))._field_Model);
				_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1dad5d9db:;
			++it;
			_38514_i++;
			goto _iter_begin_1dad5d9db;
		}
		_iter_end_1dad5d9db:;
	};
	{
		auto expr = &((*((*(_37939_a))))._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1dad6774d:;
		if (it != expr_end) {
			jule::I64 _41214_i = it - expr->begin();
			jule::Ptr<_1d664721e_Data> _41221_l = *it;
			{
				if ((_41221_l == nullptr)) {
					goto _iter_next_1dad6774d;
				};
				_1d7c4d8ac_indent((*(_self_))._field_oc);
				_1d7b76829_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_41221_l))._field_Model);
				_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				static__1d7b87461_toOut(&((*((*(_self_))._field_oc))._field_Buf), _1d7b68c28_assignArgName, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_41214_i)));
				_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1dad6774d:;
			++it;
			_41214_i++;
			goto _iter_begin_1dad6774d;
		}
		_iter_end_1dad6774d:;
	};
	_1d7c4d6ae_doneIndent((*(_self_))._field_oc);
	_1d7c4d8ac_indent((*(_self_))._field_oc);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1d7b6c91e_multiAssignFn(jule::Ptr<_1d7b69355_scopeCoder> _self_, jule::Ptr<_1d6577b00_MultiAssign>* _42838_a) {
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_1d7c4d4b1_addIndent((*(_self_))._field_oc);
	_1d7c4d8ac_indent((*(_self_))._field_oc);
	jule::Ptr<_1d65264d8_FnCallExprModel> _43313_f = (*((*(_42838_a))))._field_R.cast_ptr<_1d65264d8_FnCallExprModel>(&__jule_any_type34);;
	_1d7c68520_codeMut1((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), &((*((*(_43313_f))._field_Func))._field_Result));
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(" __jule_assign_result = ", 24));
	_1d7b76829_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_42838_a))))._field_R);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	jule::Ptr<_1d6685702_Tuple> _43913_tup = _1d667beac_Tup((*((*(_43313_f))._field_Func))._field_Result.ptr());;
	{
		auto expr = &((*((*(_42838_a))))._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1dad72082:;
		if (it != expr_end) {
			jule::I64 _44014_i = it - expr->begin();
			jule::Ptr<_1d664721e_Data> _44021_l = *it;
			{
				if ((_44021_l != nullptr)) {
					;
					_1d7c4d8ac_indent((*(_self_))._field_oc);
					_1d7b76829_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_44021_l))._field_Model);
					{
						
						if (_1d667823e_Equal((*(_43913_tup))._field_Types[_44014_i], (*(_44021_l))._field_Kind)) {
							_case_begin_1dad7dbc6:;
							{
								_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(" = __jule_assign_result.__jule_result_arg", 41));
								_1d7c4d00a_write((*(_self_))._field_oc, _1d43131ea_Itoa(_44014_i));
							}
						}
						else if (_1d7b82cb9_isAny(&((*(_44021_l))._field_Kind))) {
							_case_begin_1dad762ea:;
							{
								_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(" = jule::Any(__jule_assign_result.__jule_result_arg", 51));
								_1d7c4d00a_write((*(_self_))._field_oc, _1d43131ea_Itoa(_44014_i));
								_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(", &__jule_any_type", 18));
								_1d7c4d00a_write((*(_self_))._field_oc, _1d43131ea_Itoa(static_cast<jule::I64>(_1d7c4e03e_pushAnyType((*(_self_))._field_oc, (*(_43913_tup))._field_Types[_44014_i]))));
								_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
							}
						}
						else {
							_case_begin_1dad7475a:;
							{
								_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
								if ((_1d667b990_Trait((*(_43913_tup))._field_Types[_44014_i].ptr()) != nullptr)) {
									jule::Ptr<_1d654554b_Trait> _45929_t1 = _1d667b990_Trait((*(_44021_l))._field_Kind.ptr());;
									jule::Ptr<_1d654554b_Trait> _46029_t2 = _1d667b990_Trait((*(_43913_tup))._field_Types[_44014_i].ptr());;
									_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("__jule_assign_result.__jule_result_arg", 38));
									_1d7c4d00a_write((*(_self_))._field_oc, _1d43131ea_Itoa(_44014_i));
									_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(".mask<", 6));
									static__1d7b88275_traitDecl(&((*((*(_self_))._field_oc))._field_Buf), _45929_t1);
									_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
									_1d7c5020a_pushAndWriteMaskMapper((*(_self_))._field_oc, _45929_t1, _46029_t2);
									_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
									goto _match_end_1dad74705;
								};
								_1d7c63482_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_44021_l))._field_Kind);
								_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
								_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("__jule_assign_result.__jule_result_arg", 38));
								_1d7c4d00a_write((*(_self_))._field_oc, _1d43131ea_Itoa(_44014_i));
								_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
								_1d7c4d00a_write((*(_self_))._field_oc, _1d43131ea_Itoa(static_cast<jule::I64>(_1d7c4ed97_findTypeOffset((*(_self_))._field_oc.ptr(), _1d667b990_Trait((*(_44021_l))._field_Kind.ptr()), (*(_43913_tup))._field_Types[_44014_i]))));
								_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
							}
						}
						_match_end_1dad74705:;
					};
					_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
				};
			}
			_iter_next_1dad72082:;
			++it;
			_44014_i++;
			goto _iter_begin_1dad72082;
		}
		_iter_end_1dad72082:;
	};
	_1d7c4d6ae_doneIndent((*(_self_))._field_oc);
	_1d7c4d8ac_indent((*(_self_))._field_oc);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1d7b6cbc7_multiAssign(jule::Ptr<_1d7b69355_scopeCoder> _self_, jule::Ptr<_1d6577b00_MultiAssign> _48735_a) {
	{
		auto &_match_expr{ (*(_48735_a))._field_R };
		
		if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1dad84b22:;
			{
				_1d7b6c3ad_mapLookupAssign(_self_, &(_48735_a));
				return;;
			}
		}
		_match_end_1dad84abc:;
	};
	{
		auto &_match_expr{ (*(_48735_a))._field_R };
		
		if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1dad85ace:;
			{
				_1d7b6c666_multiAssignTup(_self_, &(_48735_a));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1dad8478c:;
			{
				_1d7b6c91e_multiAssignFn(_self_, &(_48735_a));
			}
		}
		else {
			_case_begin_1dad85194:;
			{
				jule::panic(jule::Str::lit("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:501:13"));;
			}
		}
		_match_end_1dad8513e:;
	};
}



inline jule::Fn<void(void)> _1d7b6d018_matchExpr(jule::Ptr<_1d7b69355_scopeCoder> _self_, jule::Ptr<_1d6578260_Match> _50533_m) {
	if ((!(_1d6647ae3_IsConst((*(_50533_m))._field_Expr.ptr())))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("_match_expr", 11));
		});;
	};
	if (((!(_1d43256e6_IsBool((*((*(_50533_m))._field_Expr))._field_Constant.ptr()))) || (!(_1d43230ea_ReadBool((*((*(_50533_m))._field_Expr))._field_Constant.ptr()))))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1d7b76829_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_50533_m))._field_Expr))._field_Model);
		});;
	};
	return nullptr;;
}



inline void _1d7b6d37b_case(jule::Ptr<_1d7b69355_scopeCoder> _self_, jule::Ptr<_1d6578260_Match> _51528_m, jule::Ptr<_1d6578d98_Case> _51543_c) {
	if ((((*(_51543_c))._field_Exprs.len() != 0LL) && (!((*(_51528_m))._field_Comptime)))) {
		if ((((*(_51528_m))._field_Cases.len() > 0LL) && ((*(_51528_m))._field_Cases[0LL] == _51543_c))) {
			_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
		} else {
			_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("else if (", 9));
		};
		{
			auto expr = &((*(_51543_c))._field_Exprs);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1dad8bad5:;
			if (it != expr_end) {
				jule::I64 _52218_i = it - expr->begin();
				jule::Ptr<_1d664721e_Data> _52225_expr = *it;
				{
					{
						
						if ((!((*(_51528_m))._field_TypeMatch))) {
							_case_begin_1dad952b4:;
							{
								jule::Fn<void(void)> _52521_caseExpr = _1d7b6d018_matchExpr(_self_, _51528_m);;
								if (_1d6647e34_GoodOperand((*(_51528_m))._field_Expr.ptr(), &(_52225_expr))) {
									if ((_52521_caseExpr != nullptr)) {
										_52521_caseExpr();
										_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(" == ", 4));
									};
									_1d7b76829_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_52225_expr))._field_Model);
								} else {
									_1d7b76829_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_52225_expr))._field_Model);
									if ((_52521_caseExpr != nullptr)) {
										_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(" == ", 4));
										_52521_caseExpr();
									};
								};
							}
						}
						else {
							_case_begin_1dad8d598:;
							{
								_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("_match_expr", 11));
								jule::Ptr<_1d6677a35_TypeKind> _54125_tk = (*(_52225_expr))._field_Model.cast_ptr<_1d6677a35_TypeKind>(&__jule_any_type83);;
								if ((_1d667b990_Trait((*((*(_51528_m))._field_Expr))._field_Kind.ptr()) != nullptr)) {
									_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(".type_is(", 9));
									_1d7b73e0e_boolean((*((*(_self_))._field_oc))._field_ec, (_1d667a41c_Sptr((*(_52225_expr))._field_Kind.ptr()) != nullptr));
									_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
									_1d7c4d00a_write((*(_self_))._field_oc, _1d43131ea_Itoa(static_cast<jule::I64>(_1d7c4ed97_findTypeOffset((*(_self_))._field_oc.ptr(), _1d667b990_Trait((*((*(_51528_m))._field_Expr))._field_Kind.ptr()), (*(_52225_expr))._field_Kind))));
									_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								} else {
									jule::I64 _54925_j = _1d7c4e03e_pushAnyType((*(_self_))._field_oc, _54125_tk);;
									_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(".type == &__jule_any_type", 25));
									_1d7c4d00a_write((*(_self_))._field_oc, _1d43131ea_Itoa(_54925_j));
								};
							}
						}
						_match_end_1dad8d4cc:;
					};
					if ((((*(_51543_c))._field_Exprs.len() - _52218_i) > 1LL)) {
						_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(" || ", 4));
					};
				}
				_iter_next_1dad8bad5:;
				++it;
				_52218_i++;
				goto _iter_begin_1dad8bad5;
			}
			_iter_end_1dad8bad5:;
		};
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(") ", 2));
	} else if ((((*(_51528_m))._field_Default == _51543_c) && ((*(_51528_m))._field_Cases.len() != 0LL))) {
		_1d7c4d8ac_indent((*(_self_))._field_oc);
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("else ", 5));
	};
	_1d7c4d4b1_addIndent((*(_self_))._field_oc);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1d7c4d8ac_indent((*(_self_))._field_oc);
	static__1d7b8a486_caseBegin(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_51543_c)));
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	if (((*((*(_51543_c))._field_Scope))._field_Stmts.len() > 0LL)) {
		_1d7c4d8ac_indent((*(_self_))._field_oc);
		_1d7b70339_scope(_self_, (*(_51543_c))._field_Scope);
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	};
	_1d7c4d6ae_doneIndent((*(_self_))._field_oc);
	_1d7c4d8ac_indent((*(_self_))._field_oc);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1d7b6d634_matchSt(jule::Ptr<_1d7b69355_scopeCoder> _self_, jule::Ptr<_1d6578260_Match> _58331_m) {
	if ((((*(_58331_m))._field_Cases.len() == 0LL) && ((*(_58331_m))._field_Default == nullptr))) {
		return;;
	};
	if (((*(_58331_m))._field_Comptime && (((*(_58331_m))._field_Default == nullptr) || ((*((*((*(_58331_m))._field_Default))._field_Scope))._field_Stmts.len() == 0LL)))) {
		return;;
	};
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1d7c4d4b1_addIndent((*(_self_))._field_oc);
	_1d7c4d8ac_indent((*(_self_))._field_oc);
	if (((!((*(_58331_m))._field_Comptime)) && (!(_1d6647ae3_IsConst((*(_58331_m))._field_Expr.ptr()))))) {
		if ((_1d6784416_Copy && _1d7b709aa_isCopyOptimizable(&((*(_58331_m))._field_Expr)))) {
			_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("auto &_match_expr{ ", 19));
		} else {
			_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("auto _match_expr{ ", 18));
		};
		_1d7b76829_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_58331_m))._field_Expr))._field_Model);
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(" };\n", 4));
		_1d7c4d8ac_indent((*(_self_))._field_oc);
	};
	if (((*(_58331_m))._field_Cases.len() > 0LL)) {
		{
			auto expr = &((*(_58331_m))._field_Cases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1dada7d10:;
			if (it != expr_end) {
				jule::Ptr<_1d6578d98_Case> _61125_c = *it;
				{
					if ((_61125_c == nullptr)) {
						goto _iter_next_1dada7d10;
					};
					_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
					_1d7c4d8ac_indent((*(_self_))._field_oc);
					_1d7b6d37b_case(_self_, _58331_m, _61125_c);
				}
				_iter_next_1dada7d10:;
				++it;
				goto _iter_begin_1dada7d10;
			}
			_iter_end_1dada7d10:;
		};
	};
	if (((*(_58331_m))._field_Default != nullptr)) {
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1d7b6d37b_case(_self_, _58331_m, (*(_58331_m))._field_Default);
	};
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1d7c4d8ac_indent((*(_self_))._field_oc);
	static__1d7b8a19a_matchEnd(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_58331_m)));
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1d7c4d6ae_doneIndent((*(_self_))._field_oc);
	_1d7c4d8ac_indent((*(_self_))._field_oc);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1d7b6d8dc_fallSt(jule::Ptr<_1d7b69355_scopeCoder> _self_, jule::Ptr<_1d6579492_FallSt> _63826_f) {
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1d7b8a486_caseBegin(&((*((*(_self_))._field_oc))._field_Buf), (*(_63826_f))._field_DestCase);
}



inline void _1d7b6db95_breakSt(jule::Ptr<_1d7b69355_scopeCoder> _self_, jule::Ptr<_1d65766c0_BreakSt> _64327_b) {
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	if (((*(_64327_b))._field_It != 0LLU)) {
		static__1d7b897d7_iterEnd(&((*((*(_self_))._field_oc))._field_Buf), (*(_64327_b))._field_It);
	} else {
		static__1d7b8a19a_matchEnd(&((*((*(_self_))._field_oc))._field_Buf), (*(_64327_b))._field_Mtch);
	};
}



inline void _1d7b6de4d_setResult(jule::Ptr<_1d7b69355_scopeCoder> _self_, jule::Ptr<_1d6579827_RetSt> _65233_r) {
	if (((*((*((*((*(_65233_r))._field_Func))._field_Decl))._field_Result))._field_Idents.len() == 1LL)) {
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result = ", 21));
		_1d7b76829_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_65233_r))._field_Expr);
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
		_1d7c4d8ac_indent((*(_self_))._field_oc);
		return;;
	};
	jule::Slice<jule::Ptr<_1d664721e_Data>> _66013_datas = (*((*(_65233_r))._field_Expr.cast_ptr<_1d6529c06_TupleExprModel>(&__jule_any_type81)))._field_Datas;;
	{
		auto expr = &(_66013_datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1dadba87d:;
		if (it != expr_end) {
			jule::I64 _66113_i = it - expr->begin();
			jule::Ptr<_1d664721e_Data> _66116_data = *it;
			{
				_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
				_1d7c4d00a_write((*(_self_))._field_oc, _1d43131ea_Itoa(_66113_i));
				_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				_1d7b76829_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_66116_data))._field_Model);
				_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
				_1d7c4d8ac_indent((*(_self_))._field_oc);
			}
			_iter_next_1dadba87d:;
			++it;
			_66113_i++;
			goto _iter_begin_1dadba87d;
		}
		_iter_end_1dadba87d:;
	};
}



inline void _1d7b6e206_retSt(jule::Ptr<_1d7b69355_scopeCoder> _self_, jule::Ptr<_1d6579827_RetSt> _67129_r) {
	if (_1d65326e2_IsVoid((*((*(_67129_r))._field_Func))._field_Decl.ptr())) {
		if ((*((*((*(_67129_r))._field_Func))._field_Decl))._field_Exceptional) {
			_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("return jule::VoidExceptional();", 31));
			return;;
		};
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("return;", 7));
		return;;
	} else if (((*((*((*((*(_67129_r))._field_Func))._field_Decl))._field_Result))._field_Idents.len() == 0LL)) {
		if ((*((*((*(_67129_r))._field_Func))._field_Decl))._field_Exceptional) {
			_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("return jule::Exceptional<", 25));
			_1d7c63482_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*((*(_67129_r))._field_Func))._field_Result);
			_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(">(jule::Any(), ", 15));
			_1d7b76829_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_67129_r))._field_Expr);
			_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
		} else {
			_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
			_1d7b76829_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_67129_r))._field_Expr);
			_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(";", 1));
		};
		return;;
	};
	if (((*(_67129_r))._field_Expr != nullptr)) {
		_1d7b6de4d_setResult(_self_, _67129_r);
	};
	if ((*((*((*(_67129_r))._field_Func))._field_Decl))._field_Exceptional) {
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("return jule::Exceptional<", 25));
		_1d7c68520_codeMut1((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), &((*((*(_67129_r))._field_Func))._field_Result));
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(">(jule::Any(), __jule_func_result);", 35));
	} else {
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("return __jule_func_result;", 26));
	};
}



inline void _1d7b6e4ae_var(jule::Ptr<_1d7b69355_scopeCoder> _self_, jule::Ptr<_1d65d9018_Var> _70727_v) {
	if ((!((*(_70727_v))._field_Constant))) {
		_1d7c55e36_var((*(_self_))._field_oc, _70727_v);
	};
}



inline void _1d7b6e767_mutSlicing(jule::Ptr<_1d7b69355_scopeCoder> _self_, jule::Ptr<_1d67726ce_MutSlicingExprModel> _71334_m) {
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1d7b76829_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_71334_m))._field_Expr);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(").mut_slice(", 12));
	if ((!(_208a42c35_Production))) {
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_1d7c504b3_locInfo((*(_self_))._field_oc, &((*(_71334_m))._field_Token));
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
	};
	_1d7b76829_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_71334_m))._field_Left);
	if (((*(_71334_m))._field_Right != nullptr)) {
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1d7b76829_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_71334_m))._field_Right);
	};
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
}



inline void _1d7b6ea20_swap(jule::Ptr<_1d7b69355_scopeCoder> _self_, jule::Ptr<_1d6771403_SwapExprModel> _73028_m) {
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("std::swap(", 10));
	_1d7b76829_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_73028_m))._field_Left))._field_Model);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1d7b76829_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_73028_m))._field_Right))._field_Model);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1d7b6ecc8_st(jule::Ptr<_1d7b69355_scopeCoder> _self_, jule::Any _73926_st) {
	if ((_73926_st == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _73926_st };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1dadd4e80:;
			{
				_1d7b70339_scope(_self_, _73926_st.cast_ptr<_1d6574129_Scope>(&__jule_any_type22));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1dadd59db:;
			{
				_1d7b6e4ae_var(_self_, _73926_st.cast_ptr<_1d65d9018_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1dadd5a52:;
			{
				_1d7b80844_model((*((*(_self_))._field_oc))._field_ec, (*(_73926_st.cast_ptr<_1d664721e_Data>(&__jule_any_type24)))._field_Model);
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1dadd5ab8:;
			{
				_1d7b6a961_conditional(_self_, _73926_st.cast_ptr<_1d6574c62_Conditional>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1dadd5b2e:;
			{
				_1d7b6ac19_infIter(_self_, _73926_st.cast_ptr<_1d657505e_InfIter>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1dadd5b95:;
			{
				_1d7b6aec2_whileIter(_self_, _73926_st.cast_ptr<_1d6575515_WhileIter>(&__jule_any_type38));
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1dadd5c0b:;
			{
				_1d7b6b27a_rangeIter(_self_, _73926_st.cast_ptr<_1d6575e61_RangeIter>(&__jule_any_type40));
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1dadd5c72:;
			{
				_1d7b6b533_cont(_self_, _73926_st.cast_ptr<_1d65762e6_ContSt>(&__jule_any_type41));
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1dadd5cd8:;
			{
				_1d7b6b7db_label(_self_, _73926_st.cast_ptr<_1d65769bc_Label>(&__jule_any_type21));
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1dadd5d4e:;
			{
				_1d7b6ba94_gotoSt(_self_, _73926_st.cast_ptr<_1d6576d96_GotoSt>(&__jule_any_type42));
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1dadd5db5:;
			{
				_1d7b6bd4c_postfix(_self_, _73926_st.cast_ptr<_1d6577270_Postfix>(&__jule_any_type43));
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1dadd5e2b:;
			{
				_1d7b6c105_assign(_self_, _73926_st.cast_ptr<_1d6577726_Assign>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1dadd5e92:;
			{
				_1d7b6cbc7_multiAssign(_self_, _73926_st.cast_ptr<_1d6577b00_MultiAssign>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1dadd6008:;
			{
				_1d7b6d634_matchSt(_self_, _73926_st.cast_ptr<_1d6578260_Match>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1dadd6080:;
			{
				_1d7b6d8dc_fallSt(_self_, _73926_st.cast_ptr<_1d6579492_FallSt>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1dadd6107:;
			{
				_1d7b6db95_breakSt(_self_, _73926_st.cast_ptr<_1d65766c0_BreakSt>(&__jule_any_type49));
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1dadd617e:;
			{
				_1d7b6e206_retSt(_self_, _73926_st.cast_ptr<_1d6579827_RetSt>(&__jule_any_type50));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1dadd6206:;
			{
				_1d7b7d5cd_pushToSlice((*((*(_self_))._field_oc))._field_ec, _73926_st.cast_ptr<_1d6773207_PushToSliceExprModel>(&__jule_any_type121));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_1dadd627d:;
			{
				_1d7b7d886_appendToSlice((*((*(_self_))._field_oc))._field_ec, _73926_st.cast_ptr<_1d67735d1_AppendToSliceExprModel>(&__jule_any_type122));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1dadd6305:;
			{
				_1d7b6e767_mutSlicing(_self_, _73926_st.cast_ptr<_1d67726ce_MutSlicingExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_1dadd637c:;
			{
				_1d7b6ea20_swap(_self_, _73926_st.cast_ptr<_1d6771403_SwapExprModel>(&__jule_any_type123));
			}
		}
		else {
			_case_begin_1dadd503a:;
			{
				_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_stmt>", 20));
			}
		}
		_match_end_1dadd4ad9:;
	};
}



inline void _1d7b70081_scopeStmts(jule::Ptr<_1d7b69355_scopeCoder> _self_, jule::Ptr<_1d6574129_Scope>* _79135_s) {
	{
		auto expr = &((*((*(_79135_s))))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1dade2542:;
		if (it != expr_end) {
			jule::Any _79221_st = *it;
			{
				_1d7c4d8ac_indent((*(_self_))._field_oc);
				_1d7b6ecc8_st(_self_, _79221_st);
				_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1dade2542:;
			++it;
			goto _iter_begin_1dade2542;
		}
		_iter_end_1dade2542:;
	};
}



inline void _1d7b70339_scope(jule::Ptr<_1d7b69355_scopeCoder> _self_, jule::Ptr<_1d6574129_Scope> _80029_s) {
	_1d7c4d4b1_addIndent((*(_self_))._field_oc);
	if ((*(_80029_s))._field_Deferred) {
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("__JULE_DEFER(", 13));
	};
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1d7b70081_scopeStmts(_self_, &(_80029_s));
	_1d7c4d6ae_doneIndent((*(_self_))._field_oc);
	_1d7c4d8ac_indent((*(_self_))._field_oc);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
	if ((*(_80029_s))._field_Deferred) {
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
	};
}



inline void _1d7b705e2_funcScope(jule::Ptr<_1d7b69355_scopeCoder> _self_, jule::Ptr<_1d6535173_FnIns> _81633_f) {
	if (((*(_81633_f))._field_Scope == nullptr)) {
		return;;
	};
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1d7c4d4b1_addIndent((*(_self_))._field_oc);
	if ((!(_1d65326e2_IsVoid((*(_81633_f))._field_Decl.ptr())))) {
		jule::Ptr<_1d6685702_Tuple> _82317_tup = _1d667beac_Tup((*(_81633_f))._field_Result.ptr());;
		if ((_82317_tup != nullptr)) {
			_1d7c4d8ac_indent((*(_self_))._field_oc);
			_1d7c67d49_tup((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), _82317_tup);
			_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(" __jule_func_result;\n", 21));
			{
				auto expr = &((*(_82317_tup))._field_Types);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1dade9e0c:;
				if (it != expr_end) {
					jule::I64 _82822_i = it - expr->begin();
					jule::Ptr<_1d6677a35_TypeKind> _82829_t = *it;
					{
						if (_1d7c6a91d_shouldInitialized(&(_82829_t))) {
							_1d7c4d8ac_indent((*(_self_))._field_oc);
							_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
							_1d7c4d00a_write((*(_self_))._field_oc, _1d43131ea_Itoa(_82822_i));
							_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
							_1d7b80aec_initExpr((*((*(_self_))._field_oc))._field_ec, _82829_t);
							_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
						};
					}
					_iter_next_1dade9e0c:;
					++it;
					_82822_i++;
					goto _iter_begin_1dade9e0c;
				}
				_iter_end_1dade9e0c:;
			};
		} else if (((*((*((*(_81633_f))._field_Decl))._field_Result))._field_Idents.len() == 1LL)) {
			_1d7c4d8ac_indent((*(_self_))._field_oc);
			_1d7c63482_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_81633_f))._field_Result);
			_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(" __jule_func_result", 19));
			if (_1d7c6a91d_shouldInitialized(&((*(_81633_f))._field_Result))) {
				_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				_1d7b80aec_initExpr((*((*(_self_))._field_oc))._field_ec, (*(_81633_f))._field_Result);
			};
			_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
		};
	};
	_1d7b70081_scopeStmts(_self_, &((*(_81633_f))._field_Scope));
	if (((*((*(_81633_f))._field_Decl))._field_Exceptional && _1d65326e2_IsVoid((*(_81633_f))._field_Decl.ptr()))) {
		_1d7c4d8ac_indent((*(_self_))._field_oc);
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("return jule::VoidExceptional();\n", 32));
	};
	_1d7c4d6ae_doneIndent((*(_self_))._field_oc);
	_1d7c4d8ac_indent((*(_self_))._field_oc);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}





std::ostream &operator<<(std::ostream &_Stream, _1d7b69355_scopeCoder _Src) {
	_Stream << "scopeCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1d7b734d5_exprCoder> static__1d7b7389d_new(jule::Ptr<_1d7c4c856_ObjectCoder>* _10524_oc) {
	return jule::new_ptr<_1d7b734d5_exprCoder>(_1d7b734d5_exprCoder{._field_oc=(*(_10524_oc))});;
}



inline void _1d7b73b56_string(jule::Ptr<_1d7b734d5_exprCoder> _self_, jule::Ptr<_1d4321208_Const>* _11127_c) {
	jule::Str _1129_content = _1d4323381_ReadStr((*(_11127_c)).ptr());;
	if ((_1129_content.len() == 0LL)) {
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("jule::Str()", 11));
		return;;
	};
	jule::Str _1179_len = _1d4312e31_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_1129_content.len())), 10LL);;
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("jule::Str", 9));
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("::lit(", 6));
	_1d7b818de_cstrLit(&((*((*(_self_))._field_oc))._field_Buf), _1129_content);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1d7c4d00a_write((*(_self_))._field_oc, _1179_len);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1d7b73e0e_boolean(jule::Ptr<_1d7b734d5_exprCoder> _self_, jule::Bool _12627_b) {
	if (_12627_b) {
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("true", 4));
	} else {
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("false", 5));
	};
}



inline void _1d7b7410c_nilLit(jule::Ptr<_1d7b734d5_exprCoder> _self_) {
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
}



inline jule::Bool _1d7b7444d_ftoaSpecialCases(jule::Ptr<_1d7b734d5_exprCoder> _self_, jule::F64* _13837_x) {
	{
		
		if (_1c75ed921_IsNaN((*(_13837_x)))) {
			_case_begin_1dae219e4:;
			{
				_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("NAN", 3));
			}
		}
		else if (_1c75ee02b_IsInf((*(_13837_x)), 1LL)) {
			_case_begin_1dae21a6b:;
			{
				_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("INFINITY", 8));
			}
		}
		else if (_1c75ee02b_IsInf((*(_13837_x)), -1LL)) {
			_case_begin_1dae21ae3:;
			{
				_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("-INFINITY", 9));
			}
		}
		else {
			_case_begin_1dae21917:;
			{
				return false;;
			}
		}
		_match_end_1dae2184b:;
	};
	return true;;
}



inline void _1d7b74706_float32(jule::Ptr<_1d7b734d5_exprCoder> _self_, jule::Ptr<_1d4321208_Const>* _15228_c) {
	jule::F64 _1539_x = _1d4323dba_AsF64((*(_15228_c)).ptr());;
	if (_1d7b7444d_ftoaSpecialCases(_self_, &(_1539_x))) {
		return;;
	};
	{
		
		if ((_1539_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_1dae25c4b:;
			{
				_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("jule::MAX_F32", 13));
			}
		}
		else if ((_1539_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_1dae2509c:;
			{
				_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("jule::MIN_F32", 13));
			}
		}
		else {
			_case_begin_1dae24c39:;
			{
				_1d7b81c85_ftoa(&((*((*(_self_))._field_oc))._field_Buf), _1539_x, 32LL);
				_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("f", 1));
			}
		}
		_match_end_1dae24a19:;
	};
}



inline void _1d7b749ae_float64(jule::Ptr<_1d7b734d5_exprCoder> _self_, jule::Ptr<_1d4321208_Const>* _17128_c) {
	jule::F64 _1729_x = _1d4323dba_AsF64((*(_17128_c)).ptr());;
	if (_1d7b7444d_ftoaSpecialCases(_self_, &(_1729_x))) {
		return;;
	};
	{
		
		if ((_1729_x == jule::MAX_F64)) {
			_case_begin_1dae285de:;
			{
				_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("jule::MAX_F64", 13));
			}
		}
		else if ((_1729_x == jule::MIN_F64)) {
			_case_begin_1dae28655:;
			{
				_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("jule::MIN_F64", 13));
			}
		}
		else {
			_case_begin_1dae28259:;
			{
				_1d7b81c85_ftoa(&((*((*(_self_))._field_oc))._field_Buf), _1729_x, 64LL);
			}
		}
		_match_end_1dae28039:;
	};
}



inline void _1d7b74c67_constant(jule::Ptr<_1d7b734d5_exprCoder> _self_, jule::Ptr<_1d4321208_Const> _18932_c) {
	{
		
		if (_1d432597c_IsStr(_18932_c.ptr())) {
			_case_begin_1dae2a558:;
			{
				_1d7b73b56_string(_self_, &(_18932_c));
			}
		}
		else if (_1d43256e6_IsBool(_18932_c.ptr())) {
			_case_begin_1dae2a5be:;
			{
				_1d7b73e0e_boolean(_self_, _1d43230ea_ReadBool(_18932_c.ptr()));
			}
		}
		else if (_1d4325c13_IsF64(_18932_c.ptr())) {
			_case_begin_1dae2a635:;
			{
				{
					
					if ((*(_18932_c))._field_Kind.equal("f32", 3)) {
						_case_begin_1dae2ceea:;
						{
							_1d7b74706_float32(_self_, &(_18932_c));
						}
					}
					else {
						_case_begin_1dae2cb54:;
						{
							_1d7b749ae_float64(_self_, &(_18932_c));
						}
					}
					_match_end_1dae2ca99:;
				};
			}
		}
		else if (_1d43251c9_IsI64(_18932_c.ptr())) {
			_case_begin_1dae2a69b:;
			{
				_1d7b82071_itoa(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::I64>(_1d4322acd_ReadI64(_18932_c.ptr())));
			}
		}
		else if (_1d4325460_IsU64(_18932_c.ptr())) {
			_case_begin_1dae2b0c5:;
			{
				_1d7b8235c_utoa(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::U64>(_1d4322d64_ReadU64(_18932_c.ptr())));
			}
		}
		else if (_1d4325e99_IsNil(_18932_c.ptr())) {
			_case_begin_1dae2b13b:;
			{
				_1d7b7410c_nilLit(_self_);
			}
		}
		else {
			_case_begin_1dae2a4e2:;
			{
				_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_constant_expression>", 35));
			}
		}
		_match_end_1dae2a426:;
	};
}



inline void _1d7b75185_divByZeroBinary(jule::Ptr<_1d7b734d5_exprCoder> _self_, jule::Ptr<_1d64d5cd3_Token>* _21336_op, jule::Ptr<_1d652400d_OperandExprModel>* _21353_l, jule::Ptr<_1d652400d_OperandExprModel>* _21380_r) {
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("jule::", 6));
	{
		auto &_match_expr{ (*((*(_21336_op))))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1dae31c9b:;
			{
				_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("div(", 4));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU) || _match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1dae31d23:;
			{
				_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("mod(", 4));
			}
		}
		_match_end_1dae31c35:;
	};
	if ((!(_208a42c35_Production))) {
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_1d7c504b3_locInfo((*(_self_))._field_oc, _21336_op);
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("\",", 2));
	};
	_1d7b76829_possibleRefExpr(_self_, (*((*(_21353_l))))._field_Model);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
	_1d7b76829_possibleRefExpr(_self_, (*((*(_21380_r))))._field_Model);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1d7b7543d_unsafeBinary(jule::Ptr<_1d7b734d5_exprCoder> _self_, jule::Ptr<_1d6524508_BinaryExprModel> _23536_m) {
	if ((((*((*(_23536_m))._field_Op))._field_Id == static_cast<jule::U64>(50LLU)) || ((*((*(_23536_m))._field_Op))._field_Id == static_cast<jule::U64>(51LLU)))) {
		if (_1d7b82cb9_isAny(&((*((*(_23536_m))._field_Left))._field_Kind))) {
			if (((!(_1d6678b13_IsNil((*((*(_23536_m))._field_Right))._field_Kind.ptr()))) && (!(_1d7b82cb9_isAny(&((*((*(_23536_m))._field_Right))._field_Kind)))))) {
				_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
				if (((*((*(_23536_m))._field_Op))._field_Id == static_cast<jule::U64>(51LLU))) {
					_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("!", 1));
				};
				jule::I64 _24521_i = _1d7c4e03e_pushAnyType((*(_self_))._field_oc, (*((*(_23536_m))._field_Right))._field_Kind);;
				_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("__jule_any_type", 15));
				_1d7c4d00a_write((*(_self_))._field_oc, _1d43131ea_Itoa(_24521_i));
				_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("_compare(", 9));
				_1d7b76829_possibleRefExpr(_self_, (*((*(_23536_m))._field_Left))._field_Model);
				_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				_1d7b76829_possibleRefExpr(_self_, (*((*(_23536_m))._field_Right))._field_Model);
				_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
				return;;
			};
		};
	};
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1d7b76829_possibleRefExpr(_self_, (*((*(_23536_m))._field_Left))._field_Model);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1d7c4d00a_write((*(_self_))._field_oc, (*((*(_23536_m))._field_Op))._field_Kind);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1d7b76829_possibleRefExpr(_self_, (*((*(_23536_m))._field_Right))._field_Model);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1d7b756e6_binary(jule::Ptr<_1d7b734d5_exprCoder> _self_, jule::Ptr<_1d6524508_BinaryExprModel> _26630_m) {
	{
		auto &_match_expr{ (*((*(_26630_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1dae42c46:;
			{
				if ((_1d667b709_Struct((*((*(_26630_m))._field_Left))._field_Kind.ptr()) == nullptr)) {
					_1d7b75185_divByZeroBinary(_self_, &((*(_26630_m))._field_Op), &((*(_26630_m))._field_Left), &((*(_26630_m))._field_Right));
					return;;
				};
			}
		}
		_match_end_1dae42b8b:;
	};
	_1d7b7543d_unsafeBinary(_self_, _26630_m);
}



inline void _1d7b7599e_var(jule::Ptr<_1d7b734d5_exprCoder> _self_, jule::Ptr<_1d65d9018_Var> _27827_m) {
	if ((*(_27827_m))._field_Binded) {
		jule::Ptr<_1d64ea7ed_Directive> _28013_d = _1d7c6a28b_findDirective(&((*(_27827_m))._field_Directives), jule::Str::lit("namespace", 9));;
		if ((_28013_d != nullptr)) {
			_1d7c4d2b3_writeBytes((*(_self_))._field_oc, _1d7c59da2_concatAllParts((*(_28013_d))._field_Args));
			_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("::", 2));
		};
	};
	static__1d7b89210_var(&((*((*(_self_))._field_oc))._field_Buf), _27827_m);
}



inline void _1d7b75c57_structureIns(jule::Ptr<_1d7b734d5_exprCoder> _self_, jule::Ptr<_1d652005e_StructIns> _28936_m) {
	_1d7c61738_structureIns((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), _28936_m);
}



inline void _1d7b76010_unary(jule::Ptr<_1d7b734d5_exprCoder> _self_, jule::Ptr<_1d65248d2_UnaryExprModel> _29329_m) {
	{
		auto &_match_expr{ (*((*(_29329_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1dae48d7e:;
			{
				_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("(~(", 3));
				_1d7b76829_possibleRefExpr(_self_, (*((*(_29329_m))._field_Expr))._field_Model);
				_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1dae48e06:;
			{
				if ((_208a42c35_Production || (_1d667a41c_Sptr((*((*(_29329_m))._field_Expr))._field_Kind.ptr()) == nullptr))) {
					goto _match_end_1dae48cb3;
				};
				_1d7b76829_possibleRefExpr(_self_, (*((*(_29329_m))._field_Expr))._field_Model);
				_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(".get(\"", 6));
				_1d7c504b3_locInfo((*(_self_))._field_oc, &((*(_29329_m))._field_Op));
				_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("\")", 2));
				return;;
			}
		}
		_match_end_1dae48cb3:;
	};
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1d7c4d00a_write((*(_self_))._field_oc, (*((*(_29329_m))._field_Op))._field_Kind);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1d7b76829_possibleRefExpr(_self_, (*((*(_29329_m))._field_Expr))._field_Model);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
}



inline void _1d7b762b8_structureLit(jule::Ptr<_1d7b734d5_exprCoder> _self_, jule::Ptr<_1d65252a6_StructLitExprModel> _31736_m) {
	if ((*((*((*(_31736_m))._field_Strct))._field_Decl))._field_Binded) {
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	};
	static__1d7b88b38_structureIns(&((*((*(_self_))._field_oc))._field_Buf), &((*(_31736_m))._field_Strct));
	if ((*((*((*(_31736_m))._field_Strct))._field_Decl))._field_Binded) {
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	};
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
	if (((*(_31736_m))._field_Args.len() > 0LL)) {
		_julec_label_1dae5399e:;
		{
			auto expr = &((*((*(_31736_m))._field_Strct))._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1dae53ad1:;
			if (it != expr_end) {
				jule::I64 _33017_i = it - expr->begin();
				jule::Ptr<_1d651e4ae_FieldIns> _33020_f = *it;
				{
					{
						auto expr = &((*(_31736_m))._field_Args);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1dae5495b:;
						if (it != expr_end) {
							jule::Ptr<_1d6524e10_StructArgExprModel> _33129_arg = *it;
							{
								if (((*(_33129_arg))._field_Field == _33020_f)) {
									_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
									static__1d7b88e24_field(&((*((*(_self_))._field_oc))._field_Buf), &((*((*(_33129_arg))._field_Field))._field_Decl));
									_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
									_1d7b76829_possibleRefExpr(_self_, (*((*(_33129_arg))._field_Expr))._field_Model);
									if ((((*((*(_31736_m))._field_Strct))._field_Fields.len() - _33017_i) > 1LL)) {
										_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
									};
									goto _iter_next_1dae53ad1;
								};
							}
							_iter_next_1dae5495b:;
							++it;
							goto _iter_begin_1dae5495b;
						}
						_iter_end_1dae5495b:;
					};
				}
				_iter_next_1dae53ad1:;
				++it;
				_33017_i++;
				goto _iter_begin_1dae53ad1;
			}
			_iter_end_1dae53ad1:;
		};
	};
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1d7b76571_allocStructure(jule::Ptr<_1d7b734d5_exprCoder> _self_, jule::Ptr<_1d65255a3_AllocStructLitExprModel> _34838_m) {
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("jule::new_ptr<", 14));
	static__1d7b88b38_structureIns(&((*((*(_self_))._field_oc))._field_Buf), &((*((*(_34838_m))._field_Lit))._field_Strct));
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	_1d7b762b8_structureLit(_self_, (*(_34838_m))._field_Lit);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1d7b76829_possibleRefExpr(jule::Ptr<_1d7b734d5_exprCoder> _self_, jule::Any _35635_expr) {
	{
		auto &_match_expr{ _35635_expr };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1dae5bd2b:;
			{
				jule::Ptr<_1d65d9018_Var> _35913_v = _35635_expr.cast_ptr<_1d65d9018_Var>(&__jule_any_type8);;
				if ((*(_35913_v))._field_Reference) {
					_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("(*(", 3));
					_1d7b80844_model(_self_, _35635_expr);
					_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
					return;;
				};
			}
		}
		_match_end_1dae5bcc6:;
	};
	_1d7b80844_model(_self_, _35635_expr);
}



inline void _1d7b76c47_castTraitFromTrait(jule::Ptr<_1d7b734d5_exprCoder> _self_, jule::Ptr<_1d6525b36_CastingExprModel>* _37043_m, jule::Ptr<_1d654554b_Trait> _37069_t1, jule::Ptr<_1d654554b_Trait> _37085_t2) {
	_1d7b76829_possibleRefExpr(_self_, (*((*(_37043_m))))._field_Expr);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(".mask<", 6));
	static__1d7b88275_traitDecl(&((*((*(_self_))._field_oc))._field_Buf), _37069_t1);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	_1d7c5020a_pushAndWriteMaskMapper((*(_self_))._field_oc, _37069_t1, _37085_t2);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1d7b77000_casting(jule::Ptr<_1d7b734d5_exprCoder> _self_, jule::Ptr<_1d6525b36_CastingExprModel> _38531_m) {
	{
		
		if (_1d7b82cb9_isAny(&((*(_38531_m))._field_Kind))) {
			_case_begin_1dae6234d:;
			{
				if (_1d6678b13_IsNil((*(_38531_m))._field_ExprKind.ptr())) {
					_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("jule::Any()", 11));
					return;;
				};
				if ((_1d667abc0_TypeEnum((*(_38531_m))._field_ExprKind.ptr()) != nullptr)) {
					_1d7b76829_possibleRefExpr(_self_, (*(_38531_m))._field_Expr);
					return;;
				};
				jule::I64 _39613_i = _1d7c4e03e_pushAnyType((*(_self_))._field_oc, (*(_38531_m))._field_ExprKind);;
				_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("jule::Any(", 10));
				{
					auto &_match_expr{ (*(_38531_m))._field_Expr };
					
					if (_match_expr.type == &__jule_any_type19) {
						_case_begin_1dae63eed:;
						{
							jule::Ptr<_1d668060e_Prim> _40017_prim = _1d667a186_Prim((*(_38531_m))._field_ExprKind.ptr());;
							if (((_40017_prim != nullptr) && _1d4320625_IsInt((*(_40017_prim))._field_Kind))) {
								_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("static_cast<", 12));
								_1d7c5d7ce_prim((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), _40017_prim);
								_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
								_1d7b76829_possibleRefExpr(_self_, (*(_38531_m))._field_Expr);
								_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								goto _match_end_1dae65dac;
							};
							goto _case_begin_1dae65e12;
						}
					}
					else {
						_case_begin_1dae65e12:;
						{
							_1d7b76829_possibleRefExpr(_self_, (*(_38531_m))._field_Expr);
						}
					}
					_match_end_1dae65dac:;
				};
				_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(", &__jule_any_type", 18));
				_1d7c4d00a_write((*(_self_))._field_oc, _1d43131ea_Itoa(_39613_i));
				_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if (_1d7b82cb9_isAny(&((*(_38531_m))._field_ExprKind))) {
			_case_begin_1dae623c5:;
			{
				_1d7b76829_possibleRefExpr(_self_, (*(_38531_m))._field_Expr);
				_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
				if ((_1d667a41c_Sptr((*(_38531_m))._field_Kind.ptr()) != nullptr)) {
					_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("cast_ptr<", 9));
					_1d7c63482_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_1d667a41c_Sptr((*(_38531_m))._field_Kind.ptr())))._field_Elem);
				} else {
					_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("cast<", 5));
					_1d7c63482_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_38531_m))._field_Kind);
				};
				_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
				if ((!(_208a42c35_Production))) {
					_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1d7c504b3_locInfo((*(_self_))._field_oc, &((*(_38531_m))._field_Token));
					_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				};
				_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("&__jule_any_type", 16));
				_1d7c4d00a_write((*(_self_))._field_oc, _1d43131ea_Itoa(static_cast<jule::I64>(_1d7c4e03e_pushAnyType((*(_self_))._field_oc, (*(_38531_m))._field_Kind))));
				_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if ((_1d667a6a3_Ptr((*(_38531_m))._field_ExprKind.ptr()) != nullptr) || (_1d667a6a3_Ptr((*(_38531_m))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1dae6244c:;
			{
				_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("((", 2));
				_1d7c63482_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_38531_m))._field_Kind);
				_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(")(", 2));
				_1d7b76829_possibleRefExpr(_self_, (*(_38531_m))._field_Expr);
				_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		else if ((_1d667b990_Trait((*(_38531_m))._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1dae624c4:;
			{
				if ((_1d667b990_Trait((*(_38531_m))._field_Kind.ptr()) != nullptr)) {
					_1d7b76c47_castTraitFromTrait(_self_, &(_38531_m), _1d667b990_Trait((*(_38531_m))._field_Kind.ptr()), _1d667b990_Trait((*(_38531_m))._field_ExprKind.ptr()));
					return;;
				};
				_1d7b76829_possibleRefExpr(_self_, (*(_38531_m))._field_Expr);
				_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
				if ((_1d667a41c_Sptr((*(_38531_m))._field_Kind.ptr()) != nullptr)) {
					_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("cast_ptr<", 9));
					_1d7c63482_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_1d667a41c_Sptr((*(_38531_m))._field_Kind.ptr())))._field_Elem);
				} else {
					_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("cast<", 5));
					_1d7c63482_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_38531_m))._field_Kind);
				};
				_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
				if ((!(_208a42c35_Production))) {
					_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1d7c504b3_locInfo((*(_self_))._field_oc, &((*(_38531_m))._field_Token));
					_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				};
				_1d7c4d00a_write((*(_self_))._field_oc, _1d43131ea_Itoa(static_cast<jule::I64>(_1d7c4ed97_findTypeOffset((*(_self_))._field_oc.ptr(), _1d667b990_Trait((*(_38531_m))._field_ExprKind.ptr()), (*(_38531_m))._field_Kind))));
				_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if ((_1d667b990_Trait((*(_38531_m))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1dae6254b:;
			{
				_1d7c63482_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_38531_m))._field_Kind);
				_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
				_1d7b76829_possibleRefExpr(_self_, (*(_38531_m))._field_Expr);
				_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				_1d7c4d00a_write((*(_self_))._field_oc, _1d43131ea_Itoa(static_cast<jule::I64>(_1d7c4ed97_findTypeOffset((*(_self_))._field_oc.ptr(), _1d667b990_Trait((*(_38531_m))._field_Kind.ptr()), (*(_38531_m))._field_ExprKind))));
				_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		_match_end_1dae6220a:;
	};
	jule::Ptr<_1d668060e_Prim> _4779_prim = _1d667a186_Prim((*(_38531_m))._field_Kind.ptr());;
	jule::Ptr<_1d668060e_Prim> _4789_eprim = _1d667a186_Prim((*(_38531_m))._field_ExprKind.ptr());;
	if ((((_4789_eprim != nullptr) && (_4779_prim != nullptr)) && _1d6683a96_IsStr(_4779_prim.ptr()))) {
		if (_1d6682006_IsU8(_4789_eprim.ptr())) {
			_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("jule::Str::from_byte(", 21));
		} else {
			_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("jule::Str::from_rune(", 21));
		};
		_1d7b76829_possibleRefExpr(_self_, (*(_38531_m))._field_Expr);
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("static_cast<", 12));
	_1d7c63482_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_38531_m))._field_Kind);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	_1d7b76829_possibleRefExpr(_self_, (*(_38531_m))._field_Expr);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1d7b772a8_models(jule::Ptr<_1d7b734d5_exprCoder> _self_, jule::Slice<jule::Any> _49630_args) {
	if ((_49630_args.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &(_49630_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1dae8c587:;
		if (it != expr_end) {
			jule::I64 _50014_i = it - expr->begin();
			jule::Any _50021_a = *it;
			{
				_1d7b76829_possibleRefExpr(_self_, _50021_a);
				if (((_49630_args.len() - _50014_i) > 1LL)) {
					_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
				};
			}
			_iter_next_1dae8c587:;
			++it;
			_50014_i++;
			goto _iter_begin_1dae8c587;
		}
		_iter_end_1dae8c587:;
	};
}



inline void _1d7b77561_args(jule::Ptr<_1d7b734d5_exprCoder> _self_, jule::Ptr<_1d65264d8_FnCallExprModel>* _50829_m) {
	jule::I64 _50913_j = 0LL;;
	if (((((*((*((*(_50829_m))))._field_Func))._field_Owner != nullptr) && (!((*((*((*((*(_50829_m))))._field_Func))._field_Decl))._field_Statically))) || (((*((*((*(_50829_m))))._field_Func))._field_Params.len() > 0LL) && _1d6530db6_IsSelf((*((*((*((*(_50829_m))))._field_Func))._field_Params[0LL]))._field_Decl.ptr())))) {
		(_50913_j)++;
	};
	{
		auto expr = &((*((*(_50829_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1dae904e1:;
		if (it != expr_end) {
			jule::I64 _51413_i = it - expr->begin();
			jule::Any _51416_arg = *it;
			{
				jule::Ptr<_1d65341c7_ParamIns> _51513_p = (*((*((*(_50829_m))))._field_Func))._field_Params[_50913_j];;
				if ((((*(_51513_p))._field_Decl != nullptr) && (*((*(_51513_p))._field_Decl))._field_Reference)) {
					{
						auto &_match_expr{ _51416_arg };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_1dae932e6:;
							{
								jule::Ptr<_1d65d9018_Var> _51921_v = _51416_arg.cast_ptr<_1d65d9018_Var>(&__jule_any_type8);;
								if ((*(_51921_v))._field_Reference) {
									_1d7b80844_model(_self_, _51416_arg);
									goto _julec_label_1dae92c52;
								};
							}
						}
						_match_end_1dae93291:;
					};
					_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
					_1d7b80844_model(_self_, _51416_arg);
					_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
					goto _julec_label_1dae92c52;
				};
				_1d7b76829_possibleRefExpr(_self_, _51416_arg);
				_julec_label_1dae92c52:;
				if ((((*((*(_50829_m))))._field_Args.len() - _51413_i) > 1LL)) {
					_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
				(_50913_j)++;
			}
			_iter_next_1dae904e1:;
			++it;
			_51413_i++;
			goto _iter_begin_1dae904e1;
		}
		_iter_end_1dae904e1:;
	};
}



inline void _1d7b77819_modelForCall(jule::Ptr<_1d7b734d5_exprCoder> _self_, jule::Any _53936_expr) {
	{
		auto &_match_expr{ _53936_expr };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1dae980cb:;
			{
				_1d7b7aa4d_funcIns(_self_, _53936_expr.cast_ptr<_1d6535173_FnIns>(&__jule_any_type7));
				return;;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1dae98153:;
			{
				jule::Ptr<_1d6529079_StructSubIdentExprModel> _54517_ssie = _53936_expr.cast_ptr<_1d6529079_StructSubIdentExprModel>(&__jule_any_type97);;
				if (((*(_54517_ssie))._field_Method != nullptr)) {
					_1d7b7aa4d_funcIns(_self_, (*(_54517_ssie))._field_Method);
					return;;
				};
			}
		}
		_match_end_1dae98065:;
	};
	_1d7b76829_possibleRefExpr(_self_, _53936_expr);
}



inline void _1d7b77ac2_pushCallInf(jule::Ptr<_1d7b734d5_exprCoder> _self_, jule::Ptr<_1d65264d8_FnCallExprModel>* _55432_m) {
	if ((_208a42c35_Production || (!((*((*((*(_55432_m))))._field_Func))._field_Anon)))) {
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		return;;
	};
	if ((*((*((*(_55432_m))))._field_Func))._field_Anon) {
		{
			auto &_match_expr{ (*((*(_55432_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type97) {
				_case_begin_1dae9ba4c:;
				{
					if ((*((*((*((*((*((*(_55432_m))))._field_Expr.cast_ptr<_1d6529079_StructSubIdentExprModel>(&__jule_any_type97)))._field_Field))._field_Decl))._field_Owner))._field_Binded) {
						_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
						return;;
					};
				}
			}
			_match_end_1dae9b9e7:;
		};
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(".call", 5));
	};
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("(\"", 2));
	_1d7c504b3_locInfo((*(_self_))._field_oc, &((*((*(_55432_m))))._field_Token));
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
	if (((*((*(_55432_m))))._field_Args.len() != 0LL)) {
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	};
}



inline jule::Bool _1d7b77e13_isWrapped(jule::Ptr<_1d7b734d5_exprCoder> _self_, jule::Ptr<_1d65264d8_FnCallExprModel>* _57734_m) {
	if ((((!(_1d6536608_IsBuiltin((*((*(_57734_m))))._field_Func.ptr()))) && ((*((*((*((*(_57734_m))))._field_Func))._field_Decl))._field_Params.len() > 0LL)) && _1d6530db6_IsSelf((*((*((*((*(_57734_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*((*(_57734_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type97) {
				_case_begin_1daea1777:;
				{
					jule::Ptr<_1d6529079_StructSubIdentExprModel> _58121_ssie = (*((*(_57734_m))))._field_Expr.cast_ptr<_1d6529079_StructSubIdentExprModel>(&__jule_any_type97);;
					{
						
						if (_1d653114c_IsRef((*((*((*((*(_57734_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()) || (_1d667a41c_Sptr((*((*(_58121_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
							_case_begin_1daea338e:;
							{
								goto _match_end_1daea2635;
							}
						}
						else {
							_case_begin_1daea269b:;
							{
								if ((_1d667b709_Struct((*((*(_58121_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
									if ((!((*((*(_58121_ssie))._field_Expr))._field_Lvalue))) {
										_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("({ auto _wrap_copy = ", 21));
										_1d7b80844_model(_self_, (*((*(_58121_ssie))._field_Expr))._field_Model);
										_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
										return true;;
									};
								};
							}
						}
						_match_end_1daea2635:;
					};
				}
			}
			_match_end_1daea1722:;
		};
	};
	return false;;
}



inline void _1d7b781bb_pureFuncCall(jule::Ptr<_1d7b734d5_exprCoder> _self_, jule::Ptr<_1d65264d8_FnCallExprModel>* _60137_m) {
	jule::Bool _6029_wrapped = _1d7b77e13_isWrapped(_self_, _60137_m);;
	_1d7b77819_modelForCall(_self_, (*((*(_60137_m))))._field_Expr);
	if ((!(_1d6536608_IsBuiltin((*((*(_60137_m))))._field_Func.ptr())))) {
		if (((*((*((*((*(_60137_m))))._field_Func))._field_Decl))._field_Binded && ((*((*((*(_60137_m))))._field_Func))._field_Generics.len() > 0LL))) {
			if ((!(_1d7c6a654_hasDirective(&((*((*((*((*(_60137_m))))._field_Func))._field_Decl))._field_Directives), jule::Str::lit("cdef", 4))))) {
				_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("<", 1));
				{
					auto expr = &((*((*((*(_60137_m))))._field_Func))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1daea983a:;
					if (it != expr_end) {
						jule::I64 _60826_i = it - expr->begin();
						jule::Ptr<_1d667614e_InsGeneric> _60833_g = *it;
						{
							_1d7c63482_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_60833_g))._field_Kind);
							if ((((*((*((*(_60137_m))))._field_Func))._field_Generics.len() - _60826_i) > 1LL)) {
								_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
							};
						}
						_iter_next_1daea983a:;
						++it;
						_60826_i++;
						goto _iter_begin_1daea983a;
					}
					_iter_end_1daea983a:;
				};
				_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(">", 1));
			};
		};
	};
	_1d7b77ac2_pushCallInf(_self_, _60137_m);
	jule::Bool _61913_locinfo = false;;
	if ((((!(_1d6536608_IsBuiltin((*((*(_60137_m))))._field_Func.ptr()))) && ((*((*((*((*(_60137_m))))._field_Func))._field_Decl))._field_Params.len() > 0LL)) && _1d6530db6_IsSelf((*((*((*((*(_60137_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*((*(_60137_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type97) {
				_case_begin_1daeb0049:;
				{
					jule::Ptr<_1d6529079_StructSubIdentExprModel> _62321_ssie = (*((*(_60137_m))))._field_Expr.cast_ptr<_1d6529079_StructSubIdentExprModel>(&__jule_any_type97);;
					{
						
						if (_1d653114c_IsRef((*((*((*((*(_60137_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr())) {
							_case_begin_1daeb4867:;
							{
								_1d7b76829_possibleRefExpr(_self_, (*((*((*((*(_62321_ssie))._field_Expr))._field_Model.cast_ptr<_1d65248d2_UnaryExprModel>(&__jule_any_type110)))._field_Expr))._field_Model);
							}
						}
						else if ((_1d667a41c_Sptr((*((*(_62321_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
							_case_begin_1daeb105b:;
							{
								_1d7b76829_possibleRefExpr(_self_, (*((*((*((*(_62321_ssie))._field_Expr))._field_Model.cast_ptr<_1d65248d2_UnaryExprModel>(&__jule_any_type110)))._field_Expr))._field_Model);
								_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(".ptr(", 5));
								if ((!(_208a42c35_Production))) {
									_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
									_1d7c504b3_locInfo((*(_self_))._field_oc, &((*((*(_60137_m))))._field_Token));
									_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
								};
								_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
							}
						}
						else {
							_case_begin_1daeb0ee5:;
							{
								if ((_1d667b709_Struct((*((*(_62321_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
									{
										auto &_match_expr{ (*((*(_62321_ssie))._field_Expr))._field_Model };
										
										if (_match_expr.type == &__jule_any_type8) {
											_case_begin_1daeb17ba:;
											{
												jule::Ptr<_1d65d9018_Var> _64229_v = (*((*(_62321_ssie))._field_Expr))._field_Model.cast_ptr<_1d65d9018_Var>(&__jule_any_type8);;
												if ((*(_64229_v))._field_Reference) {
													goto _match_end_1daeb1cd7;
												};
												goto _case_begin_1daeb1d3c;
											}
										}
										else {
											_case_begin_1daeb1d3c:;
											{
												_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("&", 1));
											}
										}
										_match_end_1daeb1cd7:;
									};
								};
								if (_6029_wrapped) {
									_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("_wrap_copy", 10));
								} else if ((_1d667a6a3_Ptr((*((*(_62321_ssie))._field_Expr))._field_Kind.ptr()) == nullptr)) {
									_1d7b80844_model(_self_, (*((*(_62321_ssie))._field_Expr))._field_Model);
								} else {
									_1d7b76829_possibleRefExpr(_self_, (*((*((*((*(_62321_ssie))._field_Expr))._field_Model.cast_ptr<_1d65248d2_UnaryExprModel>(&__jule_any_type110)))._field_Expr))._field_Model);
								};
							}
						}
						_match_end_1daeb0e7e:;
					};
					if (((*((*(_60137_m))))._field_Args.len() > 0LL)) {
						_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
					};
				}
			}
			else if (_match_expr.type == &__jule_any_type96) {
				_case_begin_1daeb00c1:;
				{
					_1d7b76829_possibleRefExpr(_self_, (*((*((*(_60137_m))))._field_Expr.cast_ptr<_1d65286d8_TraitSubIdentExprModel>(&__jule_any_type96)))._field_Expr);
					if ((!(_208a42c35_Production))) {
						_61913_locinfo=true;
					};
					if (((*((*(_60137_m))))._field_Args.len() > 0LL)) {
						_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
					};
				}
			}
			_match_end_1daeaeed3:;
		};
	};
	_1d7b77561_args(_self_, _60137_m);
	if (_61913_locinfo) {
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(", \"", 3));
		_1d7c504b3_locInfo((*(_self_))._field_oc, &((*((*(_60137_m))))._field_Token));
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
	};
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if (_6029_wrapped) {
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("; })", 4));
	};
}



inline void _1d7b78474_coFuncCall(jule::Ptr<_1d7b734d5_exprCoder> _self_, jule::Ptr<_1d65264d8_FnCallExprModel>* _68735_m) {
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1d7c4d4b1_addIndent((*(_self_))._field_oc);
	_1e01838bc_StrBuilder _69013_head = static__1e0183b64_New(32LL);;
	_1e018c6ea_WriteStr(&_69013_head, jule::Str::lit("std::thread([", 13));
	if (((*((*((*(_68735_m))))._field_Func))._field_Owner != nullptr)) {
		_1e018c6ea_WriteStr(&_69013_head, jule::Str::lit("_self_", 6));
		if (((*((*(_68735_m))))._field_Args.len() > 0LL)) {
			_1e018c6ea_WriteStr(&_69013_head, jule::Str::lit(", ", 2));
		};
	};
	{
		auto expr = &((*((*(_68735_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1daec5966:;
		if (it != expr_end) {
			jule::I64 _69813_i = it - expr->begin();
			jule::Any _69816_arg = *it;
			{
				if ((_69813_i > 0LL)) {
					_1e018c6ea_WriteStr(&_69013_head, jule::Str::lit(", ", 2));
				};
				{
					auto &_match_expr{ _69816_arg };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1daec6e73:;
						{
							jule::Ptr<_1d65d9018_Var> _70421_v = _69816_arg.cast_ptr<_1d65d9018_Var>(&__jule_any_type8);;
							static__1d7b89210_var(&(_69013_head), _70421_v);
							goto _iter_next_1daec5966;
						}
					}
					_match_end_1daec6703:;
				};
				jule::Str _70813_name = (jule::Str::lit("_co_arg_", 8) + _1d43131ea_Itoa(_69813_i));;
				_1e018c6ea_WriteStr(&_69013_head, _70813_name);
				_1d7c4d8ac_indent((*(_self_))._field_oc);
				_1d7c63482_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*((*((*((*(_68735_m))))._field_Func))._field_Params[_69813_i]))._field_Kind);
				_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
				if ((*((*((*((*((*(_68735_m))))._field_Func))._field_Params[_69813_i]))._field_Decl))._field_Reference) {
					_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("&", 1));
				};
				_1d7c4d00a_write((*(_self_))._field_oc, _70813_name);
				_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				_1d7b76829_possibleRefExpr(_self_, _69816_arg);
				_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
				jule::Any _72013_argS = jule::Any(_70813_name, &__jule_any_type4);;
				(*((*(_68735_m))))._field_Args[_69813_i]=(*(((jule::Any*)((&(_72013_argS))))));
			}
			_iter_next_1daec5966:;
			++it;
			_69813_i++;
			goto _iter_begin_1daec5966;
		}
		_iter_end_1daec5966:;
	};
	_1d7c4d8ac_indent((*(_self_))._field_oc);
	_1e018c442_Write(&(*((*(_self_))._field_oc))._field_Buf, _1e018d993_Buf(&_69013_head));
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("](void) mutable -> void {\n", 26));
	_1d7c4d4b1_addIndent((*(_self_))._field_oc);
	_1d7c4d8ac_indent((*(_self_))._field_oc);
	_1d7b781bb_pureFuncCall(_self_, _68735_m);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1d7c4d6ae_doneIndent((*(_self_))._field_oc);
	_1d7c4d8ac_indent((*(_self_))._field_oc);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("}).detach();\n", 13));
	_1d7c4d6ae_doneIndent((*(_self_))._field_oc);
	_1d7c4d8ac_indent((*(_self_))._field_oc);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1d7b787d7_writeUseExpr(jule::Ptr<_1d7b734d5_exprCoder> _self_, jule::Ptr<_1d6535173_FnIns>* _73837_f, jule::Ptr<_1d664721e_Data> _73852_d) {
	if ((_1d667beac_Tup((*(_73852_d))._field_Kind.ptr()) == nullptr)) {
		_1d7b76829_possibleRefExpr(_self_, (*(_73852_d))._field_Model);
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(";", 1));
		return;;
	};
	jule::Ptr<_1d6529c06_TupleExprModel> _74413_tup = (*(_73852_d))._field_Model.cast_ptr<_1d6529c06_TupleExprModel>(&__jule_any_type81);;
	_1d7c67d49_tup((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), _1d667beac_Tup((*((*(_73837_f))))._field_Result.ptr()));
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
	{
		auto expr = &((*(_74413_tup))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1daed538d:;
		if (it != expr_end) {
			jule::I64 _74713_i = it - expr->begin();
			jule::Ptr<_1d664721e_Data> _74716_data = *it;
			{
				_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(".__jule_result_arg", 18));
				_1d7c4d00a_write((*(_self_))._field_oc, _1d43131ea_Itoa(_74713_i));
				_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
				_1d7b76829_possibleRefExpr(_self_, (*(_74716_data))._field_Model);
				if ((((*(_74413_tup))._field_Datas.len() - _74713_i) > 1LL)) {
					_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1daed538d:;
			++it;
			_74713_i++;
			goto _iter_begin_1daed538d;
		}
		_iter_end_1daed538d:;
	};
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("};", 2));
}



inline void _1d7b78a90_funcCall(jule::Ptr<_1d7b734d5_exprCoder> _self_, jule::Ptr<_1d65264d8_FnCallExprModel> _75932_m) {
	if ((*(_75932_m))._field_IsCo) {
		_1d7b78474_coFuncCall(_self_, &(_75932_m));
		return;;
	};
	if (((_1d6536608_IsBuiltin((*(_75932_m))._field_Func.ptr()) || (!((*((*((*(_75932_m))._field_Func))._field_Decl))._field_Exceptional))) || (((*(_75932_m))._field_Except != nullptr) && ((*((*(_75932_m))._field_Except))._field_Stmts.len() == 0LL)))) {
		_1d7b781bb_pureFuncCall(_self_, &(_75932_m));
		return;;
	};
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_1d7c4d4b1_addIndent((*(_self_))._field_oc);
	_1d7c4d8ac_indent((*(_self_))._field_oc);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("auto except = ", 14));
	_1d7b781bb_pureFuncCall(_self_, &(_75932_m));
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1d7c4d8ac_indent((*(_self_))._field_oc);
	if (((*(_75932_m))._field_Except != nullptr)) {
		if ((((*((*(_75932_m))._field_Func))._field_Result == nullptr) || (!((*(_75932_m))._field_Assigned)))) {
			_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("if (!except.ok()) ", 18));
			_1d7b70339_scope((*((*(_self_))._field_oc))._field_sc, (*(_75932_m))._field_Except);
			_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		} else {
			jule::Bool _78517_forwarded = _1d7b82736_isForwarded(&((*(_75932_m))._field_Except));;
			_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("(except.ok()) ? (except.result) : (", 35));
			if (_78517_forwarded) {
				_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
			};
			jule::Any _79021_stmt = (*((*(_75932_m))._field_Except))._field_Stmts[((*((*(_75932_m))._field_Except))._field_Stmts.len() - 1LL)];;
			{
				auto &_match_expr{ _79021_stmt };
				
				if (_match_expr.type == &__jule_any_type24) {
					_case_begin_1daee4732:;
					{
						(*((*(_75932_m))._field_Except))._field_Stmts=(*((*(_75932_m))._field_Except))._field_Stmts.slice(0LL, ((*((*(_75932_m))._field_Except))._field_Stmts.len() - 1LL));
						_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
						_1d7c4d4b1_addIndent((*(_self_))._field_oc);
						_1d7b70081_scopeStmts((*((*(_self_))._field_oc))._field_sc, &((*(_75932_m))._field_Except));
						_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
						_1d7c4d8ac_indent((*(_self_))._field_oc);
						_1d7b787d7_writeUseExpr(_self_, &((*(_75932_m))._field_Func), _79021_stmt.cast_ptr<_1d664721e_Data>(&__jule_any_type24));
						_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
						_1d7c4d6ae_doneIndent((*(_self_))._field_oc);
						_1d7c4d8ac_indent((*(_self_))._field_oc);
						_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
					}
				}
				else {
					_case_begin_1daee54d0:;
					{
						_1d7b70339_scope((*((*(_self_))._field_oc))._field_sc, (*(_75932_m))._field_Except);
					}
				}
				_match_end_1daee547a:;
			};
			if (_78517_forwarded) {
				_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
				_1d7b80aec_initExpr(_self_, (*((*(_75932_m))._field_Func))._field_Result);
				_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(";}", 2));
			};
			_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
		};
		_1d7c4d6ae_doneIndent((*(_self_))._field_oc);
	} else {
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("if (!except.ok()) jule::panic(jule::Str(\"unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 139));
		_1d7c504b3_locInfo((*(_self_))._field_oc, &((*(_75932_m))._field_Token));
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("\"));\n", 5));
		if ((!(_1d65326e2_IsVoid((*((*(_75932_m))._field_Func))._field_Decl.ptr())))) {
			_1d7c4d8ac_indent((*(_self_))._field_oc);
			_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("(except.result);\n", 17));
		};
		_1d7c4d6ae_doneIndent((*(_self_))._field_oc);
	};
	_1d7c4d8ac_indent((*(_self_))._field_oc);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1d7b78d48_slice(jule::Ptr<_1d7b734d5_exprCoder> _self_, jule::Ptr<_1d65268b2_SliceExprModel> _83029_m) {
	if (((*(_83029_m))._field_Elems.len() == 0LL)) {
		_1d7c601b5_asSlice((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_83029_m))._field_ElemKind);
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	_1d7c601b5_asSlice((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_83029_m))._field_ElemKind);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("::make({", 8));
	_1d7b772a8_models(_self_, (*(_83029_m))._field_Elems);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1d7b79101_indexing(jule::Ptr<_1d7b734d5_exprCoder> _self_, jule::Ptr<_1d6526d68_IndexingExprModel> _84232_m) {
	{
		auto &_match_expr{ (*((*(_84232_m))._field_Expr))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1db006b95:;
			{
				_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("jule::Str::at(", 14));
				if ((!(_208a42c35_Production))) {
					_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1d7c504b3_locInfo((*(_self_))._field_oc, &((*(_84232_m))._field_Token));
					_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				};
				_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("reinterpret_cast<const jule::U8*>(", 34));
				jule::Str _85313_s = _1d4323381_ReadStr((*((*(_84232_m))._field_Expr))._field_Model.cast_ptr<_1d4321208_Const>(&__jule_any_type19).ptr());;
				_1d7b818de_cstrLit(&((*((*(_self_))._field_oc))._field_Buf), _85313_s);
				_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("), ", 3));
				_1d7c4d00a_write((*(_self_))._field_oc, _1d43131ea_Itoa(static_cast<jule::I64>(_85313_s.len())));
				_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				_1d7b76829_possibleRefExpr(_self_, (*((*(_84232_m))._field_Index))._field_Model);
				_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		_match_end_1db006b40:;
	};
	_1d7b76829_possibleRefExpr(_self_, (*((*(_84232_m))._field_Expr))._field_Model);
	{
		
		if (_208a42c35_Production || (_1d667a6a3_Ptr((*((*(_84232_m))._field_Expr))._field_Kind.ptr()) != nullptr) || (_1d667bc26_Map((*((*(_84232_m))._field_Expr))._field_Kind.ptr()) != nullptr) || _1d7b82a00_isExprComesFromBind(&((*(_84232_m))._field_Expr))) {
			_case_begin_1db01093a:;
			{
				_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("[", 1));
				_1d7b76829_possibleRefExpr(_self_, (*((*(_84232_m))._field_Index))._field_Model);
				_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("]", 1));
			}
		}
		else {
			_case_begin_1db006623:;
			{
				_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(".at(\"", 5));
				_1d7c504b3_locInfo((*(_self_))._field_oc, &((*(_84232_m))._field_Token));
				_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				_1d7b76829_possibleRefExpr(_self_, (*((*(_84232_m))._field_Index))._field_Model);
				_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			}
		}
		_match_end_1db00d33e:;
	};
}



inline void _1d7b793a9_unsafeIndexing(jule::Ptr<_1d7b734d5_exprCoder> _self_, jule::Ptr<_1d6772cc8_UnsafeIndexingExprModel> _88238_m) {
	_1d7b76829_possibleRefExpr(_self_, (*((*((*(_88238_m))._field_Node))._field_Expr))._field_Model);
	{
		
		if (_208a42c35_Production || (_1d667a6a3_Ptr((*((*((*(_88238_m))._field_Node))._field_Expr))._field_Kind.ptr()) != nullptr) || (_1d667bc26_Map((*((*((*(_88238_m))._field_Node))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1db01382d:;
			{
				_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("[", 1));
				_1d7b76829_possibleRefExpr(_self_, (*((*((*(_88238_m))._field_Node))._field_Index))._field_Model);
				_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("]", 1));
			}
		}
		else {
			_case_begin_1db014444:;
			{
				_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(".__at(", 6));
				_1d7b76829_possibleRefExpr(_self_, (*((*((*(_88238_m))._field_Node))._field_Index))._field_Model);
				_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			}
		}
		_match_end_1db0143cd:;
	};
}



inline void _1d7b79662_anonFunc(jule::Ptr<_1d7b734d5_exprCoder> _self_, jule::Ptr<_1d6527242_AnonFnExprModel> _89932_m) {
	_1d7c6311e_func((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_89932_m))._field_Func);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("([=]", 4));
	_1d7c5581a_paramsIns((*(_self_))._field_oc, &((*((*(_89932_m))._field_Func))._field_Params));
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(" mutable -> ", 12));
	_1d7c62948_funcInsResult((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), &((*(_89932_m))._field_Func));
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1d7b705e2_funcScope((*((*(_self_))._field_oc))._field_sc, (*(_89932_m))._field_Func);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1d7b7991a_mapExpr(jule::Ptr<_1d7b734d5_exprCoder> _self_, jule::Ptr<_1d6527ac2_MapExprModel> _91031_m) {
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("jule::Map<", 10));
	_1d7c63482_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_91031_m))._field_KeyKind);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1d7c63482_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_91031_m))._field_ValKind);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(">({", 3));
	if (((*(_91031_m))._field_Entries.len() > 0LL)) {
		{
			auto expr = &((*(_91031_m))._field_Entries);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1db027028:;
			if (it != expr_end) {
				jule::I64 _91718_i = it - expr->begin();
				jule::Ptr<_1d652761b_KeyValPairExprModel> _91725_pair = *it;
				{
					_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
					_1d7b76829_possibleRefExpr(_self_, (*(_91725_pair))._field_Key);
					_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
					_1d7b76829_possibleRefExpr(_self_, (*(_91725_pair))._field_Val);
					_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
					if ((((*(_91031_m))._field_Entries.len() - _91718_i) > 1LL)) {
						_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
					};
				}
				_iter_next_1db027028:;
				++it;
				_91718_i++;
				goto _iter_begin_1db027028;
			}
			_iter_end_1db027028:;
		};
	};
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1d7b79bc3_slicing(jule::Ptr<_1d7b734d5_exprCoder> _self_, jule::Ptr<_1d6528155_SlicingExprModel> _93131_m) {
	_1d7b76829_possibleRefExpr(_self_, (*(_93131_m))._field_Expr);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(".slice(", 7));
	if ((!(_208a42c35_Production))) {
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_1d7c504b3_locInfo((*(_self_))._field_oc, &((*(_93131_m))._field_Token));
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
	};
	_1d7b76829_possibleRefExpr(_self_, (*(_93131_m))._field_Left);
	if (((*(_93131_m))._field_Right != nullptr)) {
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1d7b76829_possibleRefExpr(_self_, (*(_93131_m))._field_Right);
	};
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1d7b79e7b_traitSub(jule::Ptr<_1d7b734d5_exprCoder> _self_, jule::Ptr<_1d65286d8_TraitSubIdentExprModel> _94732_m) {
	static__1d7b88275_traitDecl(&((*((*(_self_))._field_oc))._field_Buf), (*(_94732_m))._field_Trt);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("[(", 2));
	_1d7b76829_possibleRefExpr(_self_, (*(_94732_m))._field_Expr);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(").type_offset].", 15));
	static__1d7b87b9d_func(&((*((*(_self_))._field_oc))._field_Buf), &((*(_94732_m))._field_Method));
}



inline void _1d7b7a234_structureSub(jule::Ptr<_1d7b734d5_exprCoder> _self_, jule::Ptr<_1d6529079_StructSubIdentExprModel> _95636_m) {
	_1d7b76829_possibleRefExpr(_self_, (*((*(_95636_m))._field_Expr))._field_Model);
	if (((*(_95636_m))._field_Field == nullptr)) {
		return;;
	};
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	static__1d7b88e24_field(&((*((*(_self_))._field_oc))._field_Buf), &((*((*(_95636_m))._field_Field))._field_Decl));
}



inline void _1d7b7a4dc_array(jule::Ptr<_1d7b734d5_exprCoder> _self_, jule::Ptr<_1d6529909_ArrayExprModel> _96529_m) {
	_1d7c61a9b_array((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_96529_m))._field_Kind);
	if (((*(_96529_m))._field_Elems.len() == 0LL)) {
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	if ((((*(_96529_m))._field_Elems.len() == 2LL) && ((*(_96529_m))._field_Elems[1LL] == nullptr))) {
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1d7b76829_possibleRefExpr(_self_, (*(_96529_m))._field_Elems[0LL]);
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("({", 2));
	_1d7b772a8_models(_self_, (*(_96529_m))._field_Elems);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
	return;;
}



inline void _1d7b7a795_funcInsCommon(jule::Ptr<_1d7b734d5_exprCoder> _self_, jule::Ptr<_1d6535173_FnIns> _98837_m) {
	_1d7c6311e_func((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), _98837_m);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1d7b7aa4d_funcIns(_self_, _98837_m);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1d7b7aa4d_funcIns(jule::Ptr<_1d7b734d5_exprCoder> _self_, jule::Ptr<_1d6535173_FnIns> _99531_m) {
	if ((((*(_99531_m))._field_Decl != nullptr) && (*((*(_99531_m))._field_Decl))._field_Binded)) {
		jule::Ptr<_1d64ea7ed_Directive> _99713_d = _1d7c6a28b_findDirective(&((*((*(_99531_m))._field_Decl))._field_Directives), jule::Str::lit("namespace", 9));;
		if ((_99713_d != nullptr)) {
			_1d7c4d2b3_writeBytes((*(_self_))._field_oc, _1d7c59da2_concatAllParts((*(_99713_d))._field_Args));
			_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("::", 2));
		};
	};
	static__1d7b87e89_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_99531_m));
}



inline void _1d7b7ad06_tuple(jule::Ptr<_1d7b734d5_exprCoder> _self_, jule::Ptr<_1d6529c06_TupleExprModel> _100629_m) {
	{
		auto expr = &((*(_100629_m))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1db0411c9:;
		if (it != expr_end) {
			jule::I64 _100714_i = it - expr->begin();
			jule::Ptr<_1d664721e_Data> _100721_d = *it;
			{
				_1d7b76829_possibleRefExpr(_self_, (*(_100721_d))._field_Model);
				_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(";", 1));
				if ((((*(_100629_m))._field_Datas.len() - _100714_i) > 1LL)) {
					_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
					_1d7c4d8ac_indent((*(_self_))._field_oc);
				};
			}
			_iter_next_1db0411c9:;
			++it;
			_100714_i++;
			goto _iter_begin_1db0411c9;
		}
		_iter_end_1db0411c9:;
	};
}



inline void _1d7b7b0ae_newCall(jule::Ptr<_1d7b734d5_exprCoder> _self_, jule::Ptr<_1d652a883_BuiltinNewCallExprModel> _101731_m) {
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("jule::new_ptr<", 14));
	_1d7c63482_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_101731_m))._field_Kind);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	if (((*(_101731_m))._field_Init != nullptr)) {
		_1d7b76829_possibleRefExpr(_self_, (*(_101731_m))._field_Init);
	};
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1d7b7b367_outCall(jule::Ptr<_1d7b734d5_exprCoder> _self_, jule::Ptr<_1d652a0d0_BuiltinOutCallExprModel> _102731_m) {
	if (((*(_102731_m))._field_Debug && _208a42c35_Production)) {
		return;;
	};
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("jule::out(", 10));
	_1d7b76829_possibleRefExpr(_self_, (*(_102731_m))._field_Expr);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1d7b7b620_outlnCall(jule::Ptr<_1d7b734d5_exprCoder> _self_, jule::Ptr<_1d652a4a9_BuiltinOutlnCallExprModel> _103633_m) {
	if (((*(_103633_m))._field_Debug && _208a42c35_Production)) {
		return;;
	};
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("jule::outln(", 12));
	_1d7b76829_possibleRefExpr(_self_, (*(_103633_m))._field_Expr);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1d7b7b8c8_panicCall(jule::Ptr<_1d7b734d5_exprCoder> _self_, jule::Ptr<_1d652ac5c_BuiltinPanicCallExprModel> _104533_m) {
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("jule::panic(", 12));
	_1d7b76829_possibleRefExpr(_self_, (*(_104533_m))._field_Expr);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(" + jule::Str(\"\\nlocation: ", 26));
	_1d7c504b3_locInfo((*(_self_))._field_oc, &((*(_104533_m))._field_Token));
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("\"));", 4));
}



inline void _1d7b7bb81_assertCall(jule::Ptr<_1d7b734d5_exprCoder> _self_, jule::Ptr<_1d652b213_BuiltinAssertCallExprModel> _105334_m) {
	if (_208a42c35_Production) {
		return;;
	};
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("if (!(", 6));
	_1d7b76829_possibleRefExpr(_self_, (*(_105334_m))._field_Expr);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(")) jule::panic(jule::Str(", 25));
	_1d7b818de_cstrLit(&((*((*(_self_))._field_oc))._field_Buf), (*(_105334_m))._field_Log);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(") + jule::Str(\"\\nlocation: ", 27));
	_1d7c504b3_locInfo((*(_self_))._field_oc, &((*(_105334_m))._field_Token));
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("\"));", 4));
}



inline void _1d7b7be39_errorCall(jule::Ptr<_1d7b734d5_exprCoder> _self_, jule::Ptr<_1d652cd19_BuiltinErrorCallExprModel> _106633_m) {
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
	if (_1d65326e2_IsVoid((*((*(_106633_m))._field_Func))._field_Decl.ptr())) {
		{
			auto &_match_expr{ (*((*(_106633_m))._field_Err))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1db052729:;
				{
					jule::Ptr<_1d65d9018_Var> _107117_v = (*((*(_106633_m))._field_Err))._field_Model.cast_ptr<_1d65d9018_Var>(&__jule_any_type8);;
					if ((*(_107117_v))._field_Ident.equal("error", 5)) {
						_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("jule::VoidExceptional(except.error)", 35));
						return;;
					};
				}
			}
			_match_end_1db0526c4:;
		};
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("jule::VoidExceptional(jule::Any(", 32));
	} else {
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("jule::Exceptional<", 18));
		_1d7c68520_codeMut1((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), &((*((*(_106633_m))._field_Func))._field_Result));
		{
			auto &_match_expr{ (*((*(_106633_m))._field_Err))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1db056b3a:;
				{
					jule::Ptr<_1d65d9018_Var> _108317_v = (*((*(_106633_m))._field_Err))._field_Model.cast_ptr<_1d65d9018_Var>(&__jule_any_type8);;
					if ((*(_108317_v))._field_Ident.equal("error", 5)) {
						_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(">(except.error)", 15));
						return;;
					};
				}
			}
			_match_end_1db056ad5:;
		};
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(">(jule::Any(", 12));
	};
	_1d7b76829_possibleRefExpr(_self_, (*((*(_106633_m))._field_Err))._field_Model);
	jule::I64 _10929_i = _1d7c4e03e_pushAnyType((*(_self_))._field_oc, (*((*(_106633_m))._field_Err))._field_Kind);;
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(", &__jule_any_type", 18));
	_1d7c4d00a_write((*(_self_))._field_oc, _1d43131ea_Itoa(_10929_i));
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
}



inline void _1d7b7c1e2_copyCall(jule::Ptr<_1d7b734d5_exprCoder> _self_, jule::Ptr<_1d652c940_BuiltinCopyCallExprModel> _109832_m) {
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("jule::copy((", 12));
	_1d7b76829_possibleRefExpr(_self_, (*((*(_109832_m))._field_Dest))._field_Model);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if ((_1d667a186_Prim((*((*(_109832_m))._field_Dest))._field_Kind.ptr()) != nullptr)) {
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(".fake_slice()", 13));
	};
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(", (", 3));
	_1d7b76829_possibleRefExpr(_self_, (*((*(_109832_m))._field_Src))._field_Model);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if ((_1d667a186_Prim((*((*(_109832_m))._field_Src))._field_Kind.ptr()) != nullptr)) {
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(".fake_slice()", 13));
	};
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1d7b7c49a_lenCall(jule::Ptr<_1d7b734d5_exprCoder> _self_, jule::Ptr<_1d652bd90_BuiltinLenCallExprModel> _111431_m) {
	_1d7b76829_possibleRefExpr(_self_, (*((*(_111431_m))._field_Expr))._field_Model);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(".len()", 6));
}



inline void _1d7b7c753_capCall(jule::Ptr<_1d7b734d5_exprCoder> _self_, jule::Ptr<_1d652c18c_BuiltinCapCallExprModel> _111931_m) {
	_1d7b76829_possibleRefExpr(_self_, (*((*(_111931_m))._field_Expr))._field_Model);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(".cap()", 6));
}



inline void _1d7b7ca0b_deleteCall(jule::Ptr<_1d7b734d5_exprCoder> _self_, jule::Ptr<_1d652c566_BuiltinDeleteCallExprModel> _112434_m) {
	_1d7b76829_possibleRefExpr(_self_, (*((*(_112434_m))._field_Dest))._field_Model);
	if (((*(_112434_m))._field_Key != nullptr)) {
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(".del(", 5));
		_1d7b76829_possibleRefExpr(_self_, (*((*(_112434_m))._field_Key))._field_Model);
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	} else {
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(".clear()", 8));
	};
}



inline void _1d7b7ccb4_makeCallSlice(jule::Ptr<_1d7b734d5_exprCoder> _self_, jule::Ptr<_1d652b6b9_BuiltinMakeCallExprModel>* _113538_m) {
	jule::Ptr<_1d6684b0d_Slc> _113613_slice = _1d667b1dc_Slc((*((*(_113538_m))))._field_Kind.ptr());;
	_1d7c63482_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*((*(_113538_m))))._field_Kind);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("::alloc(", 8));
	_1d7b76829_possibleRefExpr(_self_, (*((*(_113538_m))))._field_Len);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	if (((*((*(_113538_m))))._field_Cap != nullptr)) {
		_1d7b76829_possibleRefExpr(_self_, (*((*(_113538_m))))._field_Cap);
	} else {
		_1d7b76829_possibleRefExpr(_self_, (*((*(_113538_m))))._field_Len);
	};
	if (_1d7c6a91d_shouldInitialized(&((*(_113613_slice))._field_Elem))) {
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1d7b80aec_initExpr(_self_, (*(_113613_slice))._field_Elem);
	};
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1d7b7d06c_makeCallStr(jule::Ptr<_1d7b734d5_exprCoder> _self_, jule::Ptr<_1d652b6b9_BuiltinMakeCallExprModel>* _115336_m) {
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("jule::Str", 9));
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("::alloc(", 8));
	_1d7b76829_possibleRefExpr(_self_, (*((*(_115336_m))))._field_Len);
	if (((*((*(_115336_m))))._field_Cap != nullptr)) {
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1d7b76829_possibleRefExpr(_self_, (*((*(_115336_m))))._field_Cap);
	};
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1d7b7d325_makeCall(jule::Ptr<_1d7b734d5_exprCoder> _self_, jule::Ptr<_1d652b6b9_BuiltinMakeCallExprModel> _116432_m) {
	if ((_1d667b1dc_Slc((*(_116432_m))._field_Kind.ptr()) != nullptr)) {
		_1d7b7ccb4_makeCallSlice(_self_, &(_116432_m));
		return;;
	};
	_1d7b7d06c_makeCallStr(_self_, &(_116432_m));
}



inline void _1d7b7d5cd_pushToSlice(jule::Ptr<_1d7b734d5_exprCoder> _self_, jule::Ptr<_1d6773207_PushToSliceExprModel> _117235_m) {
	;
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("{ ", 2));
	_1d7c601b5_asSlice((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*((*(_117235_m))._field_Elems))._field_ElemKind);
	jule::Bool _118013_ptr = false;;
	{
		auto &_match_expr{ (*(_117235_m))._field_Dest };
		
		if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1db071eeb:;
			{
				jule::Ptr<_1d65248d2_UnaryExprModel> _118417_u = (*(_117235_m))._field_Dest.cast_ptr<_1d65248d2_UnaryExprModel>(&__jule_any_type110);;
				if ((_1d667a6a3_Ptr((*((*(_118417_u))._field_Expr))._field_Kind.ptr()) != nullptr)) {
					_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(" *__jule_push_dest = ", 21));
					_1d7b76829_possibleRefExpr(_self_, (*((*(_118417_u))._field_Expr))._field_Model);
					_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
					_118013_ptr=true;
					goto _match_end_1db073ccd;
				};
				goto _case_begin_1db073d33;
			}
		}
		else {
			_case_begin_1db073d33:;
			{
				_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(" &__jule_push_dest = ", 21));
				_1d7b76829_possibleRefExpr(_self_, (*(_117235_m))._field_Dest);
				_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
			}
		}
		_match_end_1db073ccd:;
	};
	if (((*((*(_117235_m))._field_Elems))._field_Elems.len() == 1LL)) {
		if (_118013_ptr) {
			_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest->push(", 23));
		} else {
			_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest.push(", 22));
		};
		_1d7b76829_possibleRefExpr(_self_, (*((*(_117235_m))._field_Elems))._field_Elems[0LL]);
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("); }", 4));
		return;;
	};
	if (_118013_ptr) {
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest->alloc_for_append(", 35));
	} else {
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest.alloc_for_append(", 34));
	};
	_1d7c4d00a_write((*(_self_))._field_oc, _1d43131ea_Itoa(static_cast<jule::I64>((*((*(_117235_m))._field_Elems))._field_Elems.len())));
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("); ", 3));
	{
		auto expr = &((*((*(_117235_m))._field_Elems))._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1db07b9c8:;
		if (it != expr_end) {
			jule::Any _121821_e = *it;
			{
				_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest", 16));
				if (_118013_ptr) {
					_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("->__push(", 9));
				} else {
					_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(".__push(", 8));
				};
				_1d7b76829_possibleRefExpr(_self_, _121821_e);
				_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("); ", 3));
			}
			_iter_next_1db07b9c8:;
			++it;
			goto _iter_begin_1db07b9c8;
		}
		_iter_end_1db07b9c8:;
	};
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1d7b7d886_appendToSlice(jule::Ptr<_1d7b734d5_exprCoder> _self_, jule::Ptr<_1d67735d1_AppendToSliceExprModel> _123237_m) {
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1d7b76829_possibleRefExpr(_self_, (*(_123237_m))._field_Dest);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(").append(", 9));
	_1d7b76829_possibleRefExpr(_self_, (*(_123237_m))._field_Slice);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
}



inline void _1d7b7db3e_appendCall(jule::Ptr<_1d7b734d5_exprCoder> _self_, jule::Ptr<_1d652ba93_BuiltinAppendCallExprModel> _124034_m) {
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("jule::append(", 13));
	_1d7b76829_possibleRefExpr(_self_, (*(_124034_m))._field_Dest);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
	_1d7b76829_possibleRefExpr(_self_, (*(_124034_m))._field_Elements);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1d7b7dde7_sizeof(jule::Ptr<_1d7b734d5_exprCoder> _self_, jule::Ptr<_1d65288c5_SizeofExprModel> _124830_m) {
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("sizeof(", 7));
	_1d7b76829_possibleRefExpr(_self_, (*(_124830_m))._field_Expr);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1d7b7e1a0_alignof(jule::Ptr<_1d7b734d5_exprCoder> _self_, jule::Ptr<_1d652d545_AlignofExprModel> _125431_m) {
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("alignof(", 8));
	_1d7b76829_possibleRefExpr(_self_, (*(_125431_m))._field_Expr);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1d7b7e458_runeLit(jule::Ptr<_1d7b734d5_exprCoder> _self_, jule::Ptr<_1d652d842_RuneExprModel> _126027_m) {
	if (((*(_126027_m))._field_Code <= 127LL)) {
		_1e018c9a3_WriteByte(&(*((*(_self_))._field_oc))._field_Buf, '\'');
		jule::Str _126317_b = _1d7b812c3_sbtoa(static_cast<jule::U8>(static_cast<jule::U8>((*(_126027_m))._field_Code)));;
		if (_126317_b.equal("'", 1)) {
			_1e018c9a3_WriteByte(&(*((*(_self_))._field_oc))._field_Buf, '\\');
		};
		_1e018c6ea_WriteStr(&(*((*(_self_))._field_oc))._field_Buf, _126317_b);
		_1e018c9a3_WriteByte(&(*((*(_self_))._field_oc))._field_Buf, '\'');
		return;;
	};
	_1d7b82071_itoa(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::I64>(static_cast<jule::I64>((*(_126027_m))._field_Code)));
}



inline void _1d7b7e711_structureStatic(jule::Ptr<_1d7b734d5_exprCoder> _self_, jule::Ptr<_1d6529530_StructStaticIdentExprModel> _127439_m) {
	static__1d7b87e89_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &((*(_127439_m))._field_Method));
}



inline void _1d7b7e9b9_integratedToStr(jule::Ptr<_1d7b734d5_exprCoder> _self_, jule::Ptr<_1d652db3e_IntegratedToStrExprModel> _127839_m) {
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("jule::to_str(", 13));
	_1d7b76829_possibleRefExpr(_self_, (*(_127839_m))._field_Expr);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1d7b7ec72_backendEmit(jule::Ptr<_1d7b734d5_exprCoder> _self_, jule::Ptr<_1d652e018_BackendEmitExprModel> _128435_m) {
	if (((*(_128435_m))._field_Exprs.len() == 0LL)) {
		_1d7c4d00a_write((*(_self_))._field_oc, (*(_128435_m))._field_Code);
		return;;
	};
	jule::I64 _12899_n = _1e018d476_Len(&(*((*(_self_))._field_oc))._field_Buf);;
	jule::Slice<jule::Any> _129013_args = jule::Slice<jule::Any>::alloc((*(_128435_m))._field_Exprs.len(), (*(_128435_m))._field_Exprs.len());;
	{
		auto expr = &((*(_128435_m))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1db08e27c:;
		if (it != expr_end) {
			jule::I64 _129114_i = it - expr->begin();
			jule::Any _129121_expr = *it;
			{
				_1d7b76829_possibleRefExpr(_self_, _129121_expr);
				jule::Slice<jule::U8> _129317_buf = _1e018d993_Buf(&(*((*(_self_))._field_oc))._field_Buf);;
				_129013_args[_129114_i]=jule::Any(static_cast<jule::Str>(_129317_buf.slice(_12899_n)), &__jule_any_type4);
				{
					_1e018dc4b_SetBuf(&(*((*(_self_))._field_oc))._field_Buf, _129317_buf.slice(0LL, _12899_n));
				};
			}
			_iter_next_1db08e27c:;
			++it;
			_129114_i++;
			goto _iter_begin_1db08e27c;
		}
		_iter_end_1db08e27c:;
	};
	_1d7c4d00a_write((*(_self_))._field_oc, _1d67588d5_Format((*(_128435_m))._field_Code, _129013_args));
}



inline void _1d7b8002a_free(jule::Ptr<_1d7b734d5_exprCoder> _self_, jule::Ptr<_1d652e315_FreeExprModel> _130028_m) {
	_1d7b76829_possibleRefExpr(_self_, (*(_130028_m))._field_Expr);
	if (_208a42592_RC) {
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(".dealloc()", 10));
		return;;
	};
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(".__free()", 9));
}



inline void _1d7b802d3_strComp(jule::Ptr<_1d7b734d5_exprCoder> _self_, jule::Ptr<_1d677214b_StrCompExprModel> _130931_m) {
	if ((*(_130931_m))._field_NotEq) {
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("(!", 2));
	};
	jule::Str _13139_s = _1d4323381_ReadStr((*(_130931_m))._field_Right.ptr());;
	_1d7b76829_possibleRefExpr(_self_, (*(_130931_m))._field_Left);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(".equal(", 7));
	_1d7b818de_cstrLit(&((*((*(_self_))._field_oc))._field_Buf), _13139_s);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1d7c4d00a_write((*(_self_))._field_oc, _1d43131ea_Itoa(static_cast<jule::I64>(_13139_s.len())));
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if ((*(_130931_m))._field_NotEq) {
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	};
}



inline void _1d7b8058b_emptyCompare(jule::Ptr<_1d7b734d5_exprCoder> _self_, jule::Ptr<_1d6771821_EmptyCompareExprModel> _132536_m) {
	if ((*(_132536_m))._field_Neg) {
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("!", 1));
	};
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1d7b76829_possibleRefExpr(_self_, (*(_132536_m))._field_Expr);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(").empty()", 9));
}



inline void _1d7b80844_model(jule::Ptr<_1d7b734d5_exprCoder> _self_, jule::Any _133429_m) {
	{
		auto &_match_expr{ _133429_m };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1db09c796:;
			{
				_1d7c4d00a_write((*(_self_))._field_oc, _133429_m.cast<jule::Str>(&__jule_any_type4));
			}
		}
		else if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1db09c9a5:;
			{
				_1d7c63482_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), _133429_m.cast_ptr<_1d6677a35_TypeKind>(&__jule_any_type83));
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1db09ca1b:;
			{
				_1d7b74c67_constant(_self_, _133429_m.cast_ptr<_1d4321208_Const>(&__jule_any_type19));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1db09ca82:;
			{
				_1d7b7599e_var(_self_, _133429_m.cast_ptr<_1d65d9018_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1db09cae8:;
			{
				_1d7b75c57_structureIns(_self_, _133429_m.cast_ptr<_1d652005e_StructIns>(&__jule_any_type9));
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1db09d797:;
			{
				_1d7b7a795_funcInsCommon(_self_, _133429_m.cast_ptr<_1d6535173_FnIns>(&__jule_any_type7));
			}
		}
		else if (_match_expr.type == &__jule_any_type126) {
			_case_begin_1db09d80d:;
			{
				_1d7b7543d_unsafeBinary(_self_, (*(_133429_m.cast_ptr<_1d67729cb_UnsafeBinaryExprModel>(&__jule_any_type126)))._field_Node);
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1db09d874:;
			{
				_1d7b756e6_binary(_self_, _133429_m.cast_ptr<_1d6524508_BinaryExprModel>(&__jule_any_type111));
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1db09d8da:;
			{
				_1d7b76010_unary(_self_, _133429_m.cast_ptr<_1d65248d2_UnaryExprModel>(&__jule_any_type110));
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1db09d951:;
			{
				_1d7b762b8_structureLit(_self_, _133429_m.cast_ptr<_1d65252a6_StructLitExprModel>(&__jule_any_type94));
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1db09d9b7:;
			{
				_1d7b76571_allocStructure(_self_, _133429_m.cast_ptr<_1d65255a3_AllocStructLitExprModel>(&__jule_any_type112));
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1db09da2d:;
			{
				_1d7b77000_casting(_self_, _133429_m.cast_ptr<_1d6525b36_CastingExprModel>(&__jule_any_type92));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1db09daa5:;
			{
				_1d7b78a90_funcCall(_self_, _133429_m.cast_ptr<_1d65264d8_FnCallExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1db09db2c:;
			{
				_1d7b78d48_slice(_self_, _133429_m.cast_ptr<_1d65268b2_SliceExprModel>(&__jule_any_type76));
			}
		}
		else if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1db09dba4:;
			{
				_1d7b7a4dc_array(_self_, _133429_m.cast_ptr<_1d6529909_ArrayExprModel>(&__jule_any_type84));
			}
		}
		else if (_match_expr.type == &__jule_any_type128) {
			_case_begin_1db09dc2b:;
			{
				_1d7b793a9_unsafeIndexing(_self_, _133429_m.cast_ptr<_1d6772cc8_UnsafeIndexingExprModel>(&__jule_any_type128));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1db09dca3:;
			{
				_1d7b79101_indexing(_self_, _133429_m.cast_ptr<_1d6526d68_IndexingExprModel>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1db09dd2a:;
			{
				_1d7b79662_anonFunc(_self_, _133429_m.cast_ptr<_1d6527242_AnonFnExprModel>(&__jule_any_type99));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1db09dda2:;
			{
				_1d7b7991a_mapExpr(_self_, _133429_m.cast_ptr<_1d6527ac2_MapExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1db09de29:;
			{
				_1d7b79bc3_slicing(_self_, _133429_m.cast_ptr<_1d6528155_SlicingExprModel>(&__jule_any_type91));
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1db09dea1:;
			{
				_1d7b79e7b_traitSub(_self_, _133429_m.cast_ptr<_1d65286d8_TraitSubIdentExprModel>(&__jule_any_type96));
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1db09e028:;
			{
				_1d7b7a234_structureSub(_self_, _133429_m.cast_ptr<_1d6529079_StructSubIdentExprModel>(&__jule_any_type97));
			}
		}
		else if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1db09e0a0:;
			{
				_1d7b7ad06_tuple(_self_, _133429_m.cast_ptr<_1d6529c06_TupleExprModel>(&__jule_any_type81));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1db09e127:;
			{
				_1d7b7b367_outCall(_self_, _133429_m.cast_ptr<_1d652a0d0_BuiltinOutCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1db09e19e:;
			{
				_1d7b7b620_outlnCall(_self_, _133429_m.cast_ptr<_1d652a4a9_BuiltinOutlnCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1db09e226:;
			{
				_1d7b7b0ae_newCall(_self_, _133429_m.cast_ptr<_1d652a883_BuiltinNewCallExprModel>(&__jule_any_type113));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1db09e29d:;
			{
				_1d7b7b8c8_panicCall(_self_, _133429_m.cast_ptr<_1d652ac5c_BuiltinPanicCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1db09e325:;
			{
				_1d7b7bb81_assertCall(_self_, _133429_m.cast_ptr<_1d652b213_BuiltinAssertCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1db09e39c:;
			{
				_1d7b7be39_errorCall(_self_, _133429_m.cast_ptr<_1d652cd19_BuiltinErrorCallExprModel>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1db09e424:;
			{
				_1d7b7d325_makeCall(_self_, _133429_m.cast_ptr<_1d652b6b9_BuiltinMakeCallExprModel>(&__jule_any_type114));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1db09e49b:;
			{
				_1d7b7db3e_appendCall(_self_, _133429_m.cast_ptr<_1d652ba93_BuiltinAppendCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1db09e523:;
			{
				_1d7b7c1e2_copyCall(_self_, _133429_m.cast_ptr<_1d652c940_BuiltinCopyCallExprModel>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1db09e59a:;
			{
				_1d7b7c49a_lenCall(_self_, _133429_m.cast_ptr<_1d652bd90_BuiltinLenCallExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1db09e622:;
			{
				_1d7b7c753_capCall(_self_, _133429_m.cast_ptr<_1d652c18c_BuiltinCapCallExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1db09e699:;
			{
				_1d7b7ca0b_deleteCall(_self_, _133429_m.cast_ptr<_1d652c566_BuiltinDeleteCallExprModel>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1db09e721:;
			{
				_1d7b7dde7_sizeof(_self_, _133429_m.cast_ptr<_1d65288c5_SizeofExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1db09e798:;
			{
				_1d7b7e1a0_alignof(_self_, _133429_m.cast_ptr<_1d652d545_AlignofExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1db09e820:;
			{
				_1d7b7e458_runeLit(_self_, _133429_m.cast_ptr<_1d652d842_RuneExprModel>(&__jule_any_type82));
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1db09e897:;
			{
				_1d7b7e711_structureStatic(_self_, _133429_m.cast_ptr<_1d6529530_StructStaticIdentExprModel>(&__jule_any_type95));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1db09e91e:;
			{
				_1d7b7e9b9_integratedToStr(_self_, _133429_m.cast_ptr<_1d652db3e_IntegratedToStrExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1db09e996:;
			{
				_1d7b7ec72_backendEmit(_self_, _133429_m.cast_ptr<_1d652e018_BackendEmitExprModel>(&__jule_any_type25));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1db09ea1d:;
			{
				_1d7b8002a_free(_self_, _133429_m.cast_ptr<_1d652e315_FreeExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type125) {
			_case_begin_1db09ea95:;
			{
				_1d7b802d3_strComp(_self_, _133429_m.cast_ptr<_1d677214b_StrCompExprModel>(&__jule_any_type125));
			}
		}
		else if (_match_expr.type == &__jule_any_type127) {
			_case_begin_1db09eb1c:;
			{
				_1d7b7599e_var(_self_, (*(_133429_m.cast_ptr<_1d6771b1d_RefExprModel>(&__jule_any_type127)))._field_Var);
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_1db09eb94:;
			{
				_1d7b8058b_emptyCompare(_self_, _133429_m.cast_ptr<_1d6771821_EmptyCompareExprModel>(&__jule_any_type124));
			}
		}
		else {
			_case_begin_1db09c93e:;
			{
				_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_expression_model>", 32));
			}
		}
		_match_end_1db09c8d9:;
	};
}



inline void _1d7b80aec_initExpr(jule::Ptr<_1d7b734d5_exprCoder> _self_, jule::Ptr<_1d6677a35_TypeKind> _143132_t) {
	if (_1d66798d3_NilCompatible(_143132_t.ptr())) {
		if ((_1d667a6a3_Ptr(_143132_t.ptr()) != nullptr)) {
			_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
		} else {
			_1d7c63482_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), _143132_t);
			_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("(nullptr)", 9));
		};
		return;;
	};
	jule::Ptr<_1d6685702_Tuple> _144113_tup = _1d667beac_Tup(_143132_t.ptr());;
	if ((_144113_tup != nullptr)) {
		_1d7c67d49_tup((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), _144113_tup);
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
		{
			auto expr = &((*(_144113_tup))._field_Types);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1db0bb155:;
			if (it != expr_end) {
				jule::I64 _144518_i = it - expr->begin();
				jule::Ptr<_1d6677a35_TypeKind> _144525_tt = *it;
				{
					if ((!(_1d7c6a91d_shouldInitialized(&(_144525_tt))))) {
						goto _iter_next_1db0bb155;
					};
					_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(".__jule_result_arg", 18));
					_1d7c4d00a_write((*(_self_))._field_oc, _1d43131ea_Itoa(_144518_i));
					_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
					_1d7b80aec_initExpr(_self_, _144525_tt);
					if ((((*(_144113_tup))._field_Types.len() - _144518_i) > 1LL)) {
						_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
					};
				}
				_iter_next_1db0bb155:;
				++it;
				_144518_i++;
				goto _iter_begin_1db0bb155;
			}
			_iter_end_1db0bb155:;
		};
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
		return;;
	};
	jule::Ptr<_1d6547c57_Enum> _146013_enm = _1d667a939_Enum(_143132_t.ptr());;
	if ((_146013_enm != nullptr)) {
		_1d7b80844_model(_self_, (*((*((*((*(_146013_enm))._field_Items[0LL]))._field_Value))._field_Data))._field_Model);
		return;;
	};
	jule::Ptr<_1d668060e_Prim> _14659_prim = _1d667a186_Prim(_143132_t.ptr());;
	if ((_14659_prim != nullptr)) {
		if (_1d4320c30_IsNum((*(_14659_prim))._field_Kind)) {
			_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("0", 1));
		} else if (_1d6683810_IsBool(_14659_prim.ptr())) {
			_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("false", 5));
		} else if (_1d6683a96_IsStr(_14659_prim.ptr())) {
			_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("jule::Str()", 11));
		};
		return;;
	};
	if ((_1d667ae56_Arr(_143132_t.ptr()) != nullptr)) {
		jule::Ptr<_1d6686e2e_Arr> _147717_arr = _1d667ae56_Arr(_143132_t.ptr());;
		_1d7c63482_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), _143132_t);
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1d7b80aec_initExpr(_self_, (*(_147717_arr))._field_Elem);
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	jule::Ptr<_1d652005e_StructIns> _148413_s = _1d667b709_Struct(_143132_t.ptr());;
	if ((((_148413_s != nullptr) && (*((*(_148413_s))._field_Decl))._field_Binded) && (_1d7c6a28b_findDirective(&((*((*(_148413_s))._field_Decl))._field_Directives), jule::Str::lit("typedef", 7)) == nullptr))) {
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1d7c63482_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), _143132_t);
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("){}", 3));
		return;;
	};
	_1d7c63482_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), _143132_t);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
}





std::ostream &operator<<(std::ostream &_Stream, _1d7b734d5_exprCoder _Src) {
	_Stream << "exprCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1d7b83cba_TestCoder> static__1d7b8420a_New(jule::Ptr<_1d7c4c856_ObjectCoder>* _2924_oc) {
	return jule::new_ptr<_1d7b83cba_TestCoder>(_1d7b83cba_TestCoder{._field_oc=(*(_2924_oc))});;
}



inline jule::Ptr<_1d659590e_ImportInfo> _1d7b84491_findTestingPackage(jule::Ptr<_1d7b83cba_TestCoder> _self_) {
	{
		auto expr = &((*((*((*(_self_))._field_oc))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1db0cae9a:;
		if (it != expr_end) {
			jule::Ptr<_1d659590e_ImportInfo> _3621_imp = *it;
			{
				if ((*(_3621_imp))._field_LinkPath.equal("std::testing", 12)) {
					return _3621_imp;;
				};
			}
			_iter_next_1db0cae9a:;
			++it;
			goto _iter_begin_1db0cae9a;
		}
		_iter_end_1db0cae9a:;
	};
	return nullptr;;
}



inline void _1d7b84749_appendTest(jule::Ptr<_1d7b83cba_TestCoder> _self_, jule::Ptr<_1d6535173_FnIns> _4434_f) {
	_1d7c4d8ac_indent((*(_self_))._field_oc);
	_1d7b84e86_callTmReset(_self_);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1d7c4d8ac_indent((*(_self_))._field_oc);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("std::cout << \">>> TEST RUNNING: \" ", 34));
	_1d7b818de_cstrLit(&((*((*(_self_))._field_oc))._field_Buf), (*((*(_4434_f))._field_Decl))._field_Ident);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(" << std::endl;\n", 15));
	_1d7c4d8ac_indent((*(_self_))._field_oc);
	static__1d7b87e89_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_4434_f));
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("(_t);\n", 6));
	_1d7c4d8ac_indent((*(_self_))._field_oc);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("post_test();\n", 13));
}



inline void _1d7b84a02_appendPackageTests(jule::Ptr<_1d7b83cba_TestCoder> _self_, jule::Ptr<_1d6598835_Package>* _5943_p) {
	{
		auto expr = &((*((*(_5943_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1db0d27ba:;
		if (it != expr_end) {
			jule::Ptr<_1d6641d73_SymbolTable> _6021_file = *it;
			{
				{
					auto expr = &((*(_6021_file))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1db0d3216:;
					if (it != expr_end) {
						jule::Ptr<_1d653226e_Fn> _6125_f = *it;
						{
							if (_1d7c6a654_hasDirective(&((*(_6125_f))._field_Directives), jule::Str::lit("test", 4))) {
								_1d7b84749_appendTest(_self_, (*(_6125_f))._field_Instances[0LL]);
							};
						}
						_iter_next_1db0d3216:;
						++it;
						goto _iter_begin_1db0d3216;
					}
					_iter_end_1db0d3216:;
				};
			}
			_iter_next_1db0d27ba:;
			++it;
			goto _iter_begin_1db0d27ba;
		}
		_iter_end_1db0d27ba:;
	};
}



inline jule::Bool _1d7b84c88_readyTestingPackage(jule::Ptr<_1d7b83cba_TestCoder> _self_) {
	jule::Ptr<_1d659590e_ImportInfo> _7013_p = _1d7b84491_findTestingPackage(_self_);;
	if ((_7013_p == nullptr)) {
		return false;;
	};
	(*(_self_))._field_t=(*(_1d6596adb_FindStruct(_7013_p.ptr(), jule::Str::lit("T", 1), false)))._field_Instances[0LL];
	(*(_self_))._field_tmReset=_1d65210c6_FindMethod((*(_self_))._field_t.ptr(), jule::Str::lit("reset", 5), false);
	(*(_self_))._field_tmFailed=_1d65210c6_FindMethod((*(_self_))._field_t.ptr(), jule::Str::lit("Failed", 6), false);
	(*(_self_))._field_tmSkipped=_1d65210c6_FindMethod((*(_self_))._field_t.ptr(), jule::Str::lit("Skipped", 7), false);
	return true;;
}



inline void _1d7b84e86_callTmReset(jule::Ptr<_1d7b83cba_TestCoder> _self_) {
	static__1d7b87b9d_func(&((*((*(_self_))._field_oc))._field_Buf), &((*(_self_))._field_tmReset));
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1d7b85184_callTmFailed(jule::Ptr<_1d7b83cba_TestCoder> _self_) {
	static__1d7b87b9d_func(&((*((*(_self_))._field_oc))._field_Buf), &((*(_self_))._field_tmFailed));
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1d7b85382_callTmSkipped(jule::Ptr<_1d7b83cba_TestCoder> _self_) {
	static__1d7b87b9d_func(&((*((*(_self_))._field_oc))._field_Buf), &((*(_self_))._field_tmSkipped));
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1d7b85580_Serialize(jule::Ptr<_1d7b83cba_TestCoder> _self_) {
	_1d7c594ab_serializeHead((*(_self_))._field_oc);
	__JULE_DEFER({
		_1d7c592ad_end((*(_self_))._field_oc);
	});;
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("\nvoid test_point(void) {\n", 25));
	_1d7c4d4b1_addIndent((*(_self_))._field_oc);
	_1d7c4d8ac_indent((*(_self_))._field_oc);
	if ((!(_1d7b84c88_readyTestingPackage(_self_)))) {
		_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
		_1d7c4d6ae_doneIndent((*(_self_))._field_oc);
		return;;
	};
	_1e01838bc_StrBuilder _11813_tb = static__1e0183b64_New(40LL);;
	_1d7c61738_structureIns((*((*(_self_))._field_oc))._field_tc.ptr(), &(_11813_tb), (*(_self_))._field_t);
	_1d7c5dea5_asSptr((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), _1e018d993_Buf(&_11813_tb));
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(" _t = jule::new_ptr<", 20));
	_1d7c4d2b3_writeBytes((*(_self_))._field_oc, _1e018d993_Buf(&_11813_tb));
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(">(); _t.ref = nullptr;\n", 23));
	_1d7c4d8ac_indent((*(_self_))._field_oc);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("jule::Uint total = 0, failed = 0, skipped = 0;\n", 47));
	_1d7c4d8ac_indent((*(_self_))._field_oc);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("auto post_test = [&](void) {\n", 29));
	_1d7c4d4b1_addIndent((*(_self_))._field_oc);
	_1d7c4d8ac_indent((*(_self_))._field_oc);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("++total;\n", 9));
	_1d7c4d8ac_indent((*(_self_))._field_oc);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
	_1d7b85184_callTmFailed(_self_);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(") { ++failed; std::cout << \"    [*] FAILED\" << std::endl; }\n", 60));
	_1d7c4d8ac_indent((*(_self_))._field_oc);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("else if (", 9));
	_1d7b85382_callTmSkipped(_self_);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit(") { ++skipped; std::cout << \"    [*] SKIPPED\" << std::endl; }\n", 62));
	_1d7c4d8ac_indent((*(_self_))._field_oc);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("else { std::cout << \"    [*] PASSED\" << std::endl; }\n", 53));
	_1d7c4d6ae_doneIndent((*(_self_))._field_oc);
	_1d7c4d8ac_indent((*(_self_))._field_oc);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("};\n", 3));
	_1d7b84a02_appendPackageTests(_self_, &((*((*((*(_self_))._field_oc))._field_ir))._field_Main));
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("\n\n", 2));
	_1d7c4d8ac_indent((*(_self_))._field_oc);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("std::cout << std::endl << \"total tests: \" << total << \" skipped: \" << skipped << \" failed: \" << failed << \" pass: \" << total-failed-skipped << std::endl;\n", 154));
	_1d7c4d8ac_indent((*(_self_))._field_oc);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("if (failed != 0) std::exit(1);\n", 31));
	_1d7c4d6ae_doneIndent((*(_self_))._field_oc);
	_1d7c4d8ac_indent((*(_self_))._field_oc);
	_1d7c4d00a_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
}





std::ostream &operator<<(std::ostream &_Stream, _1d7b83cba_TestCoder _Src) {
	_Stream << "TestCoder{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "tmReset:" << _Src._field_tmReset << ", ";
	_Stream << "tmFailed:" << _Src._field_tmFailed << ", ";
	_Stream << "tmSkipped:" << _Src._field_tmSkipped << ", ";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline void static__1d7b870ba_writeIdentTo(_1e01838bc_StrBuilder* _3433_buf, jule::Str* _3451_ident) {
	{
		auto expr = _3451_ident;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1db0ecb9d:;
		if (it != expr_end) {
			jule::U8 *_3516_b = it;
			{
				if (((*(_3516_b)) >= 128LLU)) {
					goto _julec_label_1db0ecede;
				};
			}
			_iter_next_1db0ecb9d:;
			++it;
			goto _iter_begin_1db0ecb9d;
		}
		_iter_end_1db0ecb9d:;
	};
	_1e018c6ea_WriteStr(_3433_buf, (*(_3451_ident)));
	return;;
	_julec_label_1db0ecede:;
	{
		auto expr = static_cast<jule::Slice<jule::I32>>((*(_3451_ident)));
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1db0ee056:;
		if (it != expr_end) {
			jule::I32 _4516_r = *it;
			{
				if ((_4516_r < 128LL)) {
					_1e018c9a3_WriteByte(_3433_buf, static_cast<jule::U8>(static_cast<jule::U8>(_4516_r)));
					goto _iter_next_1db0ee056;
				};
				_1e018c6ea_WriteStr(_3433_buf, _1d4312e31_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_4516_r)), 15LL));
			}
			_iter_next_1db0ee056:;
			++it;
			goto _iter_begin_1db0ee056;
		}
		_iter_end_1db0ee056:;
	};
}



inline void static__1d7b87461_toOut(_1e01838bc_StrBuilder* _6226_buf, jule::Str _6243_ident, jule::Uintptr _6255_addr) {
	_1e018c9a3_WriteByte(_6226_buf, '_');
	if ((_6255_addr != 0LLU)) {
		_1e018c6ea_WriteStr(_6226_buf, _1d4312a68_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_6255_addr)), 15LL));
		_1e018c9a3_WriteByte(_6226_buf, '_');
	};
	static__1d7b870ba_writeIdentTo(_6226_buf, &(_6243_ident));
}



inline void static__1d7b878b2_toLocal(_1e01838bc_StrBuilder* _7728_buf, jule::I64 _7745_row, jule::I64 _7755_col, jule::Str* _7766_ident) {
	_1e018c9a3_WriteByte(_7728_buf, '_');
	_1e018c6ea_WriteStr(_7728_buf, _1d43131ea_Itoa(_7745_row));
	_1e018c6ea_WriteStr(_7728_buf, _1d43131ea_Itoa(_7755_col));
	_1e018c9a3_WriteByte(_7728_buf, '_');
	static__1d7b870ba_writeIdentTo(_7728_buf, _7766_ident);
}



inline void static__1d7b87b9d_func(_1e01838bc_StrBuilder* _8525_buf, jule::Ptr<_1d653226e_Fn>* _8543_f) {
	{
		
		if ((*((*(_8543_f))))._field_Binded) {
			_case_begin_1db103a1c:;
			{
				_1e018c6ea_WriteStr(_8525_buf, (*((*(_8543_f))))._field_Ident);
				return;;
			}
		}
		else if ((*((*(_8543_f))))._field_Ident.equal("main", 4)) {
			_case_begin_1db103a94:;
			{
				_1e018c6ea_WriteStr(_8525_buf, jule::Str::lit("entry_point", 11));
				return;;
			}
		}
		else if (_1d6532978_IsMethod((*(_8543_f)).ptr())) {
			_case_begin_1db103b1b:;
			{
				if ((*((*(_8543_f))))._field_Statically) {
					_1e018c6ea_WriteStr(_8525_buf, jule::Str::lit("static_", 7));
				};
			}
		}
		_match_end_1db1038eb:;
	};
	static__1d7b87461_toOut(_8525_buf, (*((*(_8543_f))))._field_Ident, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_8543_f)))));
}



inline void static__1d7b87e89_funcIns(_1e01838bc_StrBuilder* _10128_buf, jule::Ptr<_1d6535173_FnIns>* _10146_f) {
	if (_1d6536608_IsBuiltin((*(_10146_f)).ptr())) {
		_1e018c6ea_WriteStr(_10128_buf, jule::Str::lit("jule::", 6));
		_1e018c6ea_WriteStr(_10128_buf, (*((*((*(_10146_f))))._field_Decl))._field_Ident);
		return;;
	};
	if (((*((*((*(_10146_f))))._field_Decl))._field_Binded || ((*((*(_10146_f))))._field_Generics.len() == 0LL))) {
		static__1d7b87b9d_func(_10128_buf, &((*((*(_10146_f))))._field_Decl));
		return;;
	};
	static__1d7b87461_toOut(_10128_buf, (*((*((*(_10146_f))))._field_Decl))._field_Ident, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_10146_f)))));
}



inline void static__1d7b88275_traitDecl(_1e01838bc_StrBuilder* _11630_buf, jule::Ptr<_1d654554b_Trait> _11647_t) {
	static__1d7b87461_toOut(_11630_buf, (*(_11647_t))._field_Ident, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_11647_t)));
}



inline void static__1d7b88561_param(_1e01838bc_StrBuilder* _12026_buf, jule::Ptr<_1d653079a_Param>* _12044_p) {
	if ((_1d64d8a0b_IsAnonIdent((*((*(_12044_p))))._field_Ident) || _1d64d8742_IsIgnoreIdent((*((*(_12044_p))))._field_Ident))) {
		return;;
	};
	if (_1d6530db6_IsSelf((*(_12044_p)).ptr())) {
		_1e018c6ea_WriteStr(_12026_buf, jule::Str::lit("_self_", 6));
		return;;
	};
	if (((*((*(_12044_p))))._field_Token == nullptr)) {
		static__1d7b878b2_toLocal(_12026_buf, 0LL, 0LL, &((*((*(_12044_p))))._field_Ident));
		return;;
	};
	static__1d7b878b2_toLocal(_12026_buf, (*((*((*(_12044_p))))._field_Token))._field_Row, (*((*((*(_12044_p))))._field_Token))._field_Column, &((*((*(_12044_p))))._field_Ident));
}



inline void static__1d7b8884c_structure(_1e01838bc_StrBuilder* _13530_buf, jule::Ptr<_1d651c2d1_Struct>* _13548_s) {
	if ((*((*(_13548_s))))._field_Binded) {
		if ((!(_1d7c6a654_hasDirective(&((*((*(_13548_s))))._field_Directives), jule::Str::lit("typedef", 7))))) {
			_1e018c6ea_WriteStr(_13530_buf, jule::Str::lit("struct ", 7));
		};
		_1e018c6ea_WriteStr(_13530_buf, (*((*(_13548_s))))._field_Ident);
		return;;
	};
	static__1d7b87461_toOut(_13530_buf, (*((*(_13548_s))))._field_Ident, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_13548_s)))));
}



inline void static__1d7b88b38_structureIns(_1e01838bc_StrBuilder* _14633_buf, jule::Ptr<_1d652005e_StructIns>* _14651_s) {
	if (((*((*((*(_14651_s))))._field_Decl))._field_Binded || ((*((*(_14651_s))))._field_Generics.len() == 0LL))) {
		static__1d7b8884c_structure(_14633_buf, &((*((*(_14651_s))))._field_Decl));
		return;;
	};
	static__1d7b87461_toOut(_14633_buf, (*((*((*(_14651_s))))._field_Decl))._field_Ident, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_14651_s)))));
}



inline void static__1d7b88e24_field(_1e01838bc_StrBuilder* _15426_buf, jule::Ptr<_1d65193dd_Field>* _15444_f) {
	if ((*((*((*(_15444_f))))._field_Owner))._field_Binded) {
		_1e018c6ea_WriteStr(_15426_buf, (*((*(_15444_f))))._field_Ident);
		return;;
	};
	_1e018c6ea_WriteStr(_15426_buf, jule::Str::lit("_field_", 7));
	static__1d7b870ba_writeIdentTo(_15426_buf, &((*((*(_15444_f))))._field_Ident));
}



inline void static__1d7b89210_var(_1e01838bc_StrBuilder* _16424_buf, jule::Ptr<_1d65d9018_Var> _16445_v) {
	{
		
		if ((*(_16445_v))._field_Binded) {
			_case_begin_1db1123dd:;
			{
				_1e018c6ea_WriteStr(_16424_buf, (*(_16445_v))._field_Ident);
			}
		}
		else if ((*(_16445_v))._field_Ident.equal("error", 5)) {
			_case_begin_1db112454:;
			{
				_1e018c6ea_WriteStr(_16424_buf, jule::Str::lit("except.error", 12));
			}
		}
		else if ((*(_16445_v))._field_Ident.equal("self", 4)) {
			_case_begin_1db1124ba:;
			{
				_1e018c6ea_WriteStr(_16424_buf, jule::Str::lit("_self_", 6));
			}
		}
		else if (((*(_16445_v))._field_RetOrder == -1LL)) {
			_case_begin_1db112531:;
			{
				_1e018c6ea_WriteStr(_16424_buf, jule::Str::lit("__jule_func_result", 18));
			}
		}
		else if (((*(_16445_v))._field_RetOrder >= 0LL)) {
			_case_begin_1db112e49:;
			{
				_1e018c6ea_WriteStr(_16424_buf, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
				_1e018c6ea_WriteStr(_16424_buf, _1d43131ea_Itoa((*(_16445_v))._field_RetOrder));
			}
		}
		else if (((*(_16445_v))._field_Scope != nullptr)) {
			_case_begin_1db112eb0:;
			{
				static__1d7b878b2_toLocal(_16424_buf, (*((*(_16445_v))._field_Token))._field_Row, (*((*(_16445_v))._field_Token))._field_Column, &((*(_16445_v))._field_Ident));
			}
		}
		else {
			_case_begin_1db112377:;
			{
				static__1d7b87461_toOut(_16424_buf, (*(_16445_v))._field_Ident, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_16445_v)));
			}
		}
		_match_end_1db1122ab:;
	};
}



inline void static__1d7b894eb_iterBegin(_1e01838bc_StrBuilder* _18630_buf, jule::Uintptr _18647_it) {
	_1e018c6ea_WriteStr(_18630_buf, jule::Str::lit("_iter_begin_", 12));
	_1e018c6ea_WriteStr(_18630_buf, _1d4312a68_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_18647_it)), 15LL));
}



inline void static__1d7b897d7_iterEnd(_1e01838bc_StrBuilder* _19128_buf, jule::Uintptr _19145_it) {
	_1e018c6ea_WriteStr(_19128_buf, jule::Str::lit("_iter_end_", 10));
	_1e018c6ea_WriteStr(_19128_buf, _1d4312a68_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_19145_it)), 15LL));
}



inline void static__1d7b89ac3_iterNext(_1e01838bc_StrBuilder* _19629_buf, jule::Uintptr _19646_it) {
	_1e018c6ea_WriteStr(_19629_buf, jule::Str::lit("_iter_next_", 11));
	_1e018c6ea_WriteStr(_19629_buf, _1d4312a68_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_19646_it)), 15LL));
}



inline void static__1d7b89dae_label(_1e01838bc_StrBuilder* _20126_buf, jule::Uintptr _20143_u) {
	_1e018c6ea_WriteStr(_20126_buf, jule::Str::lit("_julec_label_", 13));
	_1e018c6ea_WriteStr(_20126_buf, _1d4312a68_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_20143_u)), 15LL));
}



inline void static__1d7b8a19a_matchEnd(_1e01838bc_StrBuilder* _20629_buf, jule::Uintptr _20646_m) {
	_1e018c6ea_WriteStr(_20629_buf, jule::Str::lit("_match_end_", 11));
	_1e018c6ea_WriteStr(_20629_buf, _1d4312a68_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_20646_m)), 15LL));
}



inline void static__1d7b8a486_caseBegin(_1e01838bc_StrBuilder* _21130_buf, jule::Uintptr _21147_c) {
	_1e018c6ea_WriteStr(_21130_buf, jule::Str::lit("_case_begin_", 12));
	_1e018c6ea_WriteStr(_21130_buf, _1d4312a68_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_21147_c)), 15LL));
}





std::ostream &operator<<(std::ostream &_Stream, _1d7b86a8c_identCoder _Src) {
	_Stream << "identCoder{";
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d7c4ad3d_SerializationInfo _Src) {
	_Stream << "SerializationInfo{";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CompilerCommand:" << _Src._field_CompilerCommand;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d7c4b415_traitHash _Src) {
	_Stream << "traitHash{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "ti:" << _Src._field_ti << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d7c4b7de_traitCast _Src) {
	_Stream << "traitCast{";
	_Stream << "t1:" << _Src._field_t1 << ", ";
	_Stream << "t2:" << _Src._field_t2;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1d7c5c349_Str(_1d7c5bea3_customType* _self_) {
	return (*(_self_))._field_kind;;
}



inline jule::Bool _1d7c5c68a_Equal(jule::Ptr<_1d7c5bea3_customType> _self_, jule::Ptr<_1d6677a35_TypeKind> _4121_k) {
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1d7c5bea3_customType _Src) {
	_Stream << _1d7c5c349_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1d7c5cab9_typeCoder> static__1d7c5d108_new(jule::Ptr<_1d7c4c856_ObjectCoder>* _6624_oc) {
	jule::Ptr<_1d7c5cab9_typeCoder> _6713_tc = jule::new_ptr<_1d7c5cab9_typeCoder>(_1d7c5cab9_typeCoder{._field_oc=(*(_6624_oc)), });;
	(*(_6713_tc))._field_rc=static__1d7c66463_new(&(_6713_tc));
	return _6713_tc;;
}



inline void _1d7c5d46b_toType(_1d7c5cab9_typeCoder* _self_, _1e01838bc_StrBuilder* _7330_buf, jule::Str _7351_id) {
	if ((!_7351_id.equal("uintptr", 7))) {
		_7351_id=_1d4315296_RealKindOf(_7351_id);
	};
	_1e018c6ea_WriteStr(_7330_buf, jule::Str::lit("jule::", 6));
	if (((97LL <= _7351_id[0LL]) && (_7351_id[0LL] <= 122LLU))) {
		_1e018c9a3_WriteByte(_7330_buf, static_cast<jule::U8>((_7351_id[0LL] - 32LLU)));
	} else {
		_1e018c9a3_WriteByte(_7330_buf, _7351_id[0LL]);
	};
	_1e018c6ea_WriteStr(_7330_buf, _7351_id.slice(1LL));
}



inline void _1d7c5d7ce_prim(_1d7c5cab9_typeCoder* _self_, _1e01838bc_StrBuilder* _8728_buf, jule::Ptr<_1d668060e_Prim> _8745_p) {
	_1d7c5d46b_toType(_self_, _8728_buf, (*(_8745_p))._field_Kind);
}



inline void _1d7c5db42_tuple(_1d7c5cab9_typeCoder* _self_, _1e01838bc_StrBuilder* _9229_buf, jule::Ptr<_1d6685702_Tuple> _9250_t) {
	_1e018c6ea_WriteStr(_9229_buf, jule::Str::lit("std::tuple<", 11));
	{
		auto expr = &((*(_9250_t))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1db275485:;
		if (it != expr_end) {
			jule::I64 _9414_i = it - expr->begin();
			jule::Ptr<_1d6677a35_TypeKind> _9421_tk = *it;
			{
				_1d7c63482_kind(_self_, _9229_buf, _9421_tk);
				if ((((*(_9250_t))._field_Types.len() - _9414_i) > 1LL)) {
					_1e018c9a3_WriteByte(_9229_buf, ',');
				};
			}
			_iter_next_1db275485:;
			++it;
			_9414_i++;
			goto _iter_begin_1db275485;
		}
		_iter_end_1db275485:;
	};
	_1e018c9a3_WriteByte(_9229_buf, '>');
}



inline void _1d7c5dea5_asSptr(_1d7c5cab9_typeCoder* _self_, _1e01838bc_StrBuilder* _10430_buf, jule::Slice<jule::U8> _10447_elem) {
	_1e018c6ea_WriteStr(_10430_buf, jule::Str::lit("jule::Ptr<", 10));
	_1e018c442_Write(_10430_buf, _10447_elem);
	_1e018c9a3_WriteByte(_10430_buf, '>');
}



inline void _1d7c5e318_sptr(_1d7c5cab9_typeCoder* _self_, _1e01838bc_StrBuilder* _11128_buf, jule::Ptr<_1d668413a_Sptr> _11149_sptr) {
	_1e018c6ea_WriteStr(_11128_buf, jule::Str::lit("jule::Ptr<", 10));
	_1d7c63482_kind(_self_, _11128_buf, (*(_11149_sptr))._field_Elem);
	_1e018c9a3_WriteByte(_11128_buf, '>');
}



inline void _1d7c5e67b_ptr(_1d7c5cab9_typeCoder* _self_, _1e01838bc_StrBuilder* _11827_buf, jule::Ptr<_1d6687902_Ptr> _11848_p) {
	;
	if (_1d668843b_IsUnsafe(_11848_p.ptr())) {
		_1e018c6ea_WriteStr(_11827_buf, jule::Str::lit("void*", 5));
	} else {
		_1d7c63482_kind(_self_, _11827_buf, (*(_11848_p))._field_Elem);
		_1e018c6ea_WriteStr(_11827_buf, jule::Str::lit("*", 1));
	};
}



inline void _1d7c5e9de_enumDecl(_1d7c5cab9_typeCoder* _self_, _1e01838bc_StrBuilder* _12932_buf, jule::Ptr<_1d6547c57_Enum> _12953_e) {
	_1d7c63482_kind(_self_, _12932_buf, (*((*(_12953_e))._field_Kind))._field_Kind);
}



inline void _1d7c5ed52_typeEnumDecl(_1d7c5cab9_typeCoder* _self_, _1e01838bc_StrBuilder* _13436_buf, jule::Ptr<_1d6549462_TypeEnum> _13457_e) {
	_1e018c6ea_WriteStr(_13436_buf, jule::Str::lit("jule::Any", 9));
}



inline void _1d7c601b5_asSlice(_1d7c5cab9_typeCoder* _self_, _1e01838bc_StrBuilder* _13831_buf, jule::Ptr<_1d6677a35_TypeKind> _13852_elem) {
	_1e018c6ea_WriteStr(_13831_buf, jule::Str::lit("jule::Slice<", 12));
	_1d7c63482_kind(_self_, _13831_buf, _13852_elem);
	_1e018c9a3_WriteByte(_13831_buf, '>');
}



inline void _1d7c60528_slice(_1d7c5cab9_typeCoder* _self_, _1e01838bc_StrBuilder* _14529_buf, jule::Ptr<_1d6684b0d_Slc> _14550_s) {
	_1d7c601b5_asSlice(_self_, _14529_buf, (*(_14550_s))._field_Elem);
}



inline void _1d7c6088b_mapType(_1d7c5cab9_typeCoder* _self_, _1e01838bc_StrBuilder* _15031_buf, jule::Ptr<_1d66862a2_Map> _15052_m) {
	_1e018c6ea_WriteStr(_15031_buf, jule::Str::lit("jule::Map<", 10));
	_1d7c63482_kind(_self_, _15031_buf, (*(_15052_m))._field_Key);
	_1e018c9a3_WriteByte(_15031_buf, ',');
	_1d7c63482_kind(_self_, _15031_buf, (*(_15052_m))._field_Val);
	_1e018c9a3_WriteByte(_15031_buf, '>');
}



inline void _1d7c61062_traitDecl(_1d7c5cab9_typeCoder* _self_, _1e01838bc_StrBuilder* _16533_buf, jule::Ptr<_1d654554b_Trait> _16550_t) {
	_1e018c6ea_WriteStr(_16533_buf, jule::Str::lit("jule::Trait<", 12));
	static__1d7b88275_traitDecl(_16533_buf, _16550_t);
	_1e018c9a3_WriteByte(_16533_buf, '>');
}



inline void _1d7c613c5_structure(_1d7c5cab9_typeCoder* _self_, _1e01838bc_StrBuilder* _17233_buf, jule::Ptr<_1d651c2d1_Struct> _17250_s) {
	static__1d7b8884c_structure(_17233_buf, &(_17250_s));
}



inline void _1d7c61738_structureIns(_1d7c5cab9_typeCoder* _self_, _1e01838bc_StrBuilder* _17736_buf, jule::Ptr<_1d652005e_StructIns> _17757_s) {
	if ((!((*((*(_17757_s))._field_Decl))._field_Binded))) {
		static__1d7b88b38_structureIns(_17736_buf, &(_17757_s));
		return;;
	};
	jule::Ptr<_1d64ea7ed_Directive> _1829_d = _1d7c6a28b_findDirective(&((*((*(_17757_s))._field_Decl))._field_Directives), jule::Str::lit("namespace", 9));;
	if ((_1829_d != nullptr)) {
		_1e018c442_Write(_17736_buf, _1d7c59da2_concatAllParts((*(_1829_d))._field_Args));
		_1e018c6ea_WriteStr(_17736_buf, jule::Str::lit("::", 2));
	};
	static__1d7b88b38_structureIns(_17736_buf, &(_17757_s));
	if (((*(_17757_s))._field_Generics.len() > 0LL)) {
		_1e018c9a3_WriteByte(_17736_buf, '<');
		{
			auto expr = &((*(_17757_s))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1db284b48:;
			if (it != expr_end) {
				jule::I64 _19018_i = it - expr->begin();
				jule::Ptr<_1d667614e_InsGeneric> _19025_g = *it;
				{
					_1d7c63482_kind(_self_, _17736_buf, (*(_19025_g))._field_Kind);
					if ((((*(_17757_s))._field_Generics.len() - _19018_i) > 1LL)) {
						_1e018c9a3_WriteByte(_17736_buf, ',');
					};
				}
				_iter_next_1db284b48:;
				++it;
				_19018_i++;
				goto _iter_begin_1db284b48;
			}
			_iter_end_1db284b48:;
		};
		_1e018c9a3_WriteByte(_17736_buf, '>');
	};
}



inline void _1d7c61a9b_array(_1d7c5cab9_typeCoder* _self_, _1e01838bc_StrBuilder* _20129_buf, jule::Ptr<_1d6686e2e_Arr> _20150_a) {
	_1e018c6ea_WriteStr(_20129_buf, jule::Str::lit("jule::Array<", 12));
	_1d7c63482_kind(_self_, _20129_buf, (*(_20150_a))._field_Elem);
	_1e018c9a3_WriteByte(_20129_buf, ',');
	_1e018c6ea_WriteStr(_20129_buf, _1d43131ea_Itoa((*(_20150_a))._field_N));
	_1e018c9a3_WriteByte(_20129_buf, '>');
}



inline void _1d7c62272_paramIns(_1d7c5cab9_typeCoder* _self_, _1e01838bc_StrBuilder* _22432_buf, jule::Ptr<_1d65341c7_ParamIns>* _22454_p) {
	if ((*((*((*(_22454_p))))._field_Decl))._field_Variadic) {
		_1e018c6ea_WriteStr(_22432_buf, jule::Str::lit("jule::Slice<", 12));
		_1d7c63482_kind(_self_, _22432_buf, (*((*(_22454_p))))._field_Kind);
		_1e018c9a3_WriteByte(_22432_buf, '>');
	} else {
		_1d7c63482_kind(_self_, _22432_buf, (*((*(_22454_p))))._field_Kind);
	};
	if ((*((*((*(_22454_p))))._field_Decl))._field_Reference) {
		_1e018c9a3_WriteByte(_22432_buf, '*');
	};
}



inline void _1d7c62948_funcInsResult(_1d7c5cab9_typeCoder* _self_, _1e01838bc_StrBuilder* _25637_s, jule::Ptr<_1d6535173_FnIns>* _25657_f) {
	if (_1d65326e2_IsVoid((*((*(_25657_f))))._field_Decl.ptr())) {
		if ((*((*((*(_25657_f))))._field_Decl))._field_Exceptional) {
			_1e018c6ea_WriteStr(_25637_s, jule::Str::lit("jule::VoidExceptional", 21));
		} else {
			_1e018c6ea_WriteStr(_25637_s, jule::Str::lit("void", 4));
		};
		return;;
	};
	if ((*((*((*(_25657_f))))._field_Decl))._field_Exceptional) {
		_1e018c6ea_WriteStr(_25637_s, jule::Str::lit("jule::Exceptional<", 18));
		_1d7c68520_codeMut1((*(_self_))._field_rc.ptr(), _25637_s, &((*((*(_25657_f))))._field_Result));
		_1e018c9a3_WriteByte(_25637_s, '>');
		return;;
	};
	_1d7c68520_codeMut1((*(_self_))._field_rc.ptr(), _25637_s, &((*((*(_25657_f))))._field_Result));
}



inline void _1d7c62cab_anonFunc(_1d7c5cab9_typeCoder* _self_, _1e01838bc_StrBuilder* _27432_buf, jule::Ptr<_1d6535173_FnIns> _27453_f) {
	if ((((*(_27453_f))._field_Result != nullptr) && (_1d667beac_Tup((*(_27453_f))._field_Result.ptr()) != nullptr))) {
		_1d7c4e2e7_pushResultIns((*(_self_))._field_oc, &(_27453_f));
	};
	_1d7c62948_funcInsResult(_self_, _27432_buf, &(_27453_f));
	_1e018c9a3_WriteByte(_27432_buf, '(');
	if (((*(_27453_f))._field_Params.len() > 0LL)) {
		{
			auto expr = &((*(_27453_f))._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1db295ecd:;
			if (it != expr_end) {
				jule::I64 _28118_i = it - expr->begin();
				jule::Ptr<_1d65341c7_ParamIns> _28125_param = *it;
				{
					if (_1d6530db6_IsSelf((*(_28125_param))._field_Decl.ptr())) {
						goto _iter_next_1db295ecd;
					};
					_1d7c62272_paramIns(_self_, _27432_buf, &(_28125_param));
					if ((((*(_27453_f))._field_Params.len() - _28118_i) > 1LL)) {
						_1e018c9a3_WriteByte(_27432_buf, ',');
					};
				}
				_iter_next_1db295ecd:;
				++it;
				_28118_i++;
				goto _iter_begin_1db295ecd;
			}
			_iter_end_1db295ecd:;
		};
	} else {
		_1e018c6ea_WriteStr(_27432_buf, jule::Str::lit("void", 4));
	};
	_1e018c9a3_WriteByte(_27432_buf, ')');
}



inline void _1d7c6311e_func(_1d7c5cab9_typeCoder* _self_, _1e01838bc_StrBuilder* _29728_buf, jule::Ptr<_1d6535173_FnIns> _29749_f) {
	_1e018c6ea_WriteStr(_29728_buf, jule::Str::lit("jule::Fn<", 9));
	_1d7c62cab_anonFunc(_self_, _29728_buf, _29749_f);
	_1e018c9a3_WriteByte(_29728_buf, '>');
}



inline void _1d7c63482_kind(_1d7c5cab9_typeCoder* _self_, _1e01838bc_StrBuilder* _30428_buf, jule::Ptr<_1d6677a35_TypeKind> _30449_k) {
	{
		
		if ((_1d667b709_Struct(_30449_k.ptr()) != nullptr)) {
			_case_begin_1db29a2ce:;
			{
				_1d7c61738_structureIns(_self_, _30428_buf, _1d667b709_Struct(_30449_k.ptr()));
				return;;
			}
		}
		else if (_1d667887c_Binded(_30449_k.ptr())) {
			_case_begin_1db29a356:;
			{
				_1e018c6ea_WriteStr(_30428_buf, (*(_30449_k))._field_BindIdent);
				return;;
			}
		}
		else if ((_1d667a186_Prim(_30449_k.ptr()) != nullptr)) {
			_case_begin_1db29a3cd:;
			{
				_1d7c5d7ce_prim(_self_, _30428_buf, _1d667a186_Prim(_30449_k.ptr()));
				return;;
			}
		}
		else if ((_1d667beac_Tup(_30449_k.ptr()) != nullptr)) {
			_case_begin_1db29a455:;
			{
				_1d7c5db42_tuple(_self_, _30428_buf, _1d667beac_Tup(_30449_k.ptr()));
				return;;
			}
		}
		else if ((_1d667a41c_Sptr(_30449_k.ptr()) != nullptr)) {
			_case_begin_1db29a4cc:;
			{
				_1d7c5e318_sptr(_self_, _30428_buf, _1d667a41c_Sptr(_30449_k.ptr()));
				return;;
			}
		}
		else if ((_1d667a6a3_Ptr(_30449_k.ptr()) != nullptr)) {
			_case_begin_1db29a554:;
			{
				_1d7c5e67b_ptr(_self_, _30428_buf, _1d667a6a3_Ptr(_30449_k.ptr()));
				return;;
			}
		}
		else if ((_1d667a939_Enum(_30449_k.ptr()) != nullptr)) {
			_case_begin_1db29a5cb:;
			{
				_1d7c5e9de_enumDecl(_self_, _30428_buf, _1d667a939_Enum(_30449_k.ptr()));
				return;;
			}
		}
		else if ((_1d667abc0_TypeEnum(_30449_k.ptr()) != nullptr)) {
			_case_begin_1db29a653:;
			{
				_1d7c5ed52_typeEnumDecl(_self_, _30428_buf, _1d667abc0_TypeEnum(_30449_k.ptr()));
				return;;
			}
		}
		else if ((_1d667b1dc_Slc(_30449_k.ptr()) != nullptr)) {
			_case_begin_1db29a6ca:;
			{
				_1d7c60528_slice(_self_, _30428_buf, _1d667b1dc_Slc(_30449_k.ptr()));
				return;;
			}
		}
		else if ((_1d667bc26_Map(_30449_k.ptr()) != nullptr)) {
			_case_begin_1db29a752:;
			{
				_1d7c6088b_mapType(_self_, _30428_buf, _1d667bc26_Map(_30449_k.ptr()));
				return;;
			}
		}
		else if ((_1d667b990_Trait(_30449_k.ptr()) != nullptr)) {
			_case_begin_1db29a7c9:;
			{
				_1d7c61062_traitDecl(_self_, _30428_buf, _1d667b990_Trait(_30449_k.ptr()));
				return;;
			}
		}
		else if ((_1d667ae56_Arr(_30449_k.ptr()) != nullptr)) {
			_case_begin_1db29a851:;
			{
				_1d7c61a9b_array(_self_, _30428_buf, _1d667ae56_Arr(_30449_k.ptr()));
				return;;
			}
		}
		else if ((_1d667b473_Fn(_30449_k.ptr()) != nullptr)) {
			_case_begin_1db29a8c8:;
			{
				_1d7c6311e_func(_self_, _30428_buf, _1d667b473_Fn(_30449_k.ptr()));
				return;;
			}
		}
		_match_end_1db29a103:;
	};
	{
		auto &_match_expr{ (*(_30449_k))._field_Kind };
		
		if (_match_expr.type_is(true, 27)) {
			_case_begin_1db29a983:;
			{
				_1e018c6ea_WriteStr(_30428_buf, (*((*(_30449_k))._field_Kind.cast_ptr<_1d7c5bea3_customType>(27)))._field_kind);
			}
		}
		else {
			_case_begin_1db2a40da:;
			{
				_1e018c6ea_WriteStr(_30428_buf, jule::Str::lit("[<unimplemented_type_kind>]", 27));
			}
		}
		_match_end_1db2a4085:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1d7c5cab9_typeCoder _Src) {
	_Stream << "typeCoder{";
	_Stream << "oc:" << _Src._field_oc << ", ";
	_Stream << "rc:" << _Src._field_rc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1d7c65e8a_resultCoder> static__1d7c66463_new(jule::Ptr<_1d7c5cab9_typeCoder>* _37124_tc) {
	return jule::new_ptr<_1d7c65e8a_resultCoder>(_1d7c65e8a_resultCoder{._field_tc=(*(_37124_tc))});;
}



inline void _1d7c667c6_ptr(_1d7c65e8a_resultCoder* _self_, _1e01838bc_StrBuilder* _37527_s, jule::Ptr<_1d6687902_Ptr> _37546_p) {
	_1e018c6ea_WriteStr(_37527_s, jule::Str::lit("p", 1));
	_1d7c681ac_codeMut(_self_, _37527_s, &((*(_37546_p))._field_Elem));
}



inline void _1d7c66b39_sptr(_1d7c65e8a_resultCoder* _self_, _1e01838bc_StrBuilder* _38028_s, jule::Ptr<_1d668413a_Sptr> _38047_p) {
	_1e018c6ea_WriteStr(_38028_s, jule::Str::lit("x", 1));
	_1d7c681ac_codeMut(_self_, _38028_s, &((*(_38047_p))._field_Elem));
}



inline void _1d7c66e9c_mapType(_1d7c65e8a_resultCoder* _self_, _1e01838bc_StrBuilder* _38531_s, jule::Ptr<_1d66862a2_Map> _38550_p) {
	_1e018c6ea_WriteStr(_38531_s, jule::Str::lit("m", 1));
	_1d7c681ac_codeMut(_self_, _38531_s, &((*(_38550_p))._field_Key));
	_1d7c681ac_codeMut(_self_, _38531_s, &((*(_38550_p))._field_Val));
}



inline void _1d7c67310_slice(_1d7c65e8a_resultCoder* _self_, _1e01838bc_StrBuilder* _39129_s, jule::Ptr<_1d6684b0d_Slc> _39148_slc) {
	_1e018c6ea_WriteStr(_39129_s, jule::Str::lit("s", 1));
	_1d7c681ac_codeMut(_self_, _39129_s, &((*(_39148_slc))._field_Elem));
}



inline void _1d7c67673_arr(_1d7c65e8a_resultCoder* _self_, _1e01838bc_StrBuilder* _39627_s, jule::Ptr<_1d6686e2e_Arr> _39646_arr) {
	_1e018c6ea_WriteStr(_39627_s, jule::Str::lit("a", 1));
	_1e018c6ea_WriteStr(_39627_s, _1d4312e31_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>((*(_39646_arr))._field_N)), 16LL));
	_1d7c681ac_codeMut(_self_, _39627_s, &((*(_39646_arr))._field_Elem));
}



inline void _1d7c679d6_func(_1d7c65e8a_resultCoder* _self_, _1e01838bc_StrBuilder* _40228_s, jule::Ptr<_1d6535173_FnIns> _40247_f) {
	_1e018c6ea_WriteStr(_40228_s, jule::Str::lit("f", 1));
	{
		auto expr = &((*(_40247_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1db2ab6ca:;
		if (it != expr_end) {
			jule::Ptr<_1d65341c7_ParamIns> _40421_p = *it;
			{
				if ((*((*(_40421_p))._field_Decl))._field_Reference) {
					_1e018c6ea_WriteStr(_40228_s, jule::Str::lit("r", 1));
				};
				_1d7c681ac_codeMut(_self_, _40228_s, &((*(_40421_p))._field_Kind));
			}
			_iter_next_1db2ab6ca:;
			++it;
			goto _iter_begin_1db2ab6ca;
		}
		_iter_end_1db2ab6ca:;
	};
	if (((*(_40247_f))._field_Result != nullptr)) {
		_1d7c681ac_codeMut(_self_, _40228_s, &((*(_40247_f))._field_Result));
	};
}



inline void _1d7c67d49_tup(_1d7c65e8a_resultCoder* _self_, _1e01838bc_StrBuilder* _41527_s, jule::Ptr<_1d6685702_Tuple> _41546_tup) {
	{
		auto expr = &((*(_41546_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1db2add70:;
		if (it != expr_end) {
			jule::Ptr<_1d6677a35_TypeKind> _41621_t = *it;
			{
				_1e018c6ea_WriteStr(_41527_s, jule::Str::lit("__jule_tuple_", 13));
				_1d7c681ac_codeMut(_self_, _41527_s, &(_41621_t));
			}
			_iter_next_1db2add70:;
			++it;
			goto _iter_begin_1db2add70;
		}
		_iter_end_1db2add70:;
	};
}



inline void _1d7c681ac_codeMut(_1d7c65e8a_resultCoder* _self_, _1e01838bc_StrBuilder* _42231_s, jule::Ptr<_1d6677a35_TypeKind>* _42251_t) {
	{
		auto &_match_expr{ (*((*(_42251_t))))._field_Kind };
		
		if (_match_expr.type_is(true, 26)) {
			_case_begin_1db2b00b3:;
			{
				_1d7c667c6_ptr(_self_, _42231_s, (*((*(_42251_t))))._field_Kind.cast_ptr<_1d6687902_Ptr>(26));
			}
		}
		else if (_match_expr.type_is(true, 21)) {
			_case_begin_1db2b047b:;
			{
				_1d7c66b39_sptr(_self_, _42231_s, (*((*(_42251_t))))._field_Kind.cast_ptr<_1d668413a_Sptr>(21));
			}
		}
		else if (_match_expr.type_is(true, 24)) {
			_case_begin_1db2b04e2:;
			{
				_1d7c66e9c_mapType(_self_, _42231_s, (*((*(_42251_t))))._field_Kind.cast_ptr<_1d66862a2_Map>(24));
			}
		}
		else if (_match_expr.type_is(true, 22)) {
			_case_begin_1db2b0558:;
			{
				_1d7c67310_slice(_self_, _42231_s, (*((*(_42251_t))))._field_Kind.cast_ptr<_1d6684b0d_Slc>(22));
			}
		}
		else if (_match_expr.type_is(true, 25)) {
			_case_begin_1db2b05d0:;
			{
				_1d7c67673_arr(_self_, _42231_s, (*((*(_42251_t))))._field_Kind.cast_ptr<_1d6686e2e_Arr>(25));
			}
		}
		else if (_match_expr.type_is(true, 1)) {
			_case_begin_1db2b0a20:;
			{
				_1d7c679d6_func(_self_, _42231_s, (*((*(_42251_t))))._field_Kind.cast_ptr<_1d6535173_FnIns>(1));
			}
		}
		else if (_match_expr.type_is(true, 3)) {
			_case_begin_1db2b0a97:;
			{
				jule::Ptr<_1d6547c57_Enum> _43713_te = (*((*(_42251_t))))._field_Kind.cast_ptr<_1d6547c57_Enum>(3);;
				static__1d7b87461_toOut(_42231_s, (*(_43713_te))._field_Ident, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_43713_te)));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_1db2b0b1e:;
			{
				jule::Ptr<_1d6549462_TypeEnum> _44013_te = (*((*(_42251_t))))._field_Kind.cast_ptr<_1d6549462_TypeEnum>(4);;
				static__1d7b87461_toOut(_42231_s, (*(_44013_te))._field_Ident, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_44013_te)));
			}
		}
		else if (_match_expr.type_is(true, 0)) {
			_case_begin_1db2b0b96:;
			{
				jule::Ptr<_1d652005e_StructIns> _44317_si = (*((*(_42251_t))))._field_Kind.cast_ptr<_1d652005e_StructIns>(0);;
				static__1d7b88b38_structureIns(_42231_s, &(_44317_si));
			}
		}
		else if (_match_expr.type_is(true, 2)) {
			_case_begin_1db2b0c1d:;
			{
				jule::Ptr<_1d654554b_Trait> _44617_trt = (*((*(_42251_t))))._field_Kind.cast_ptr<_1d654554b_Trait>(2);;
				static__1d7b88275_traitDecl(_42231_s, _44617_trt);
			}
		}
		else if (_match_expr.type_is(true, 20)) {
			_case_begin_1db2b0c95:;
			{
				_1e018c6ea_WriteStr(_42231_s, (*((*((*(_42251_t))))._field_Kind.cast_ptr<_1d668060e_Prim>(20)))._field_Kind);
			}
		}
		else if (_match_expr.type_is(true, 23)) {
			_case_begin_1db2b0d1c:;
			{
				_1d7c67d49_tup(_self_, _42231_s, (*((*(_42251_t))))._field_Kind.cast_ptr<_1d6685702_Tuple>(23));
			}
		}
		else {
			_case_begin_1db2b0415:;
			{
				jule::panic(jule::Str::lit("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/type.jule:453:13"));;
			}
		}
		_match_end_1db2b03b0:;
	};
}



inline void _1d7c68520_codeMut1(_1d7c65e8a_resultCoder* _self_, _1e01838bc_StrBuilder* _45732_s, jule::Ptr<_1d6677a35_TypeKind>* _45752_t) {
	jule::Ptr<_1d6685702_Tuple> _45813_tup = _1d667beac_Tup((*(_45752_t)).ptr());;
	if ((_45813_tup != nullptr)) {
		_1d7c67d49_tup(_self_, _45732_s, _45813_tup);
	} else {
		_1d7c63482_kind((*(_self_))._field_tc.ptr(), _45732_s, (*(_45752_t)));
	};
}



inline jule::Slice<jule::U8> _1d7c6882d_code(_1d7c65e8a_resultCoder* _self_, jule::Ptr<_1d6677a35_TypeKind>* _46628_t) {
	_1e01838bc_StrBuilder _46713_s = static__1e0183b64_New(20LL);;
	_1d7c681ac_codeMut(_self_, &(_46713_s), _46628_t);
	return _1e018d993_Buf(&_46713_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _1d7c65e8a_resultCoder _Src) {
	_Stream << "resultCoder{";
	_Stream << "tc:" << _Src._field_tc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1db2bb4cb_Name(_1db2bb663_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1db2bb94e_What(_1db2bb663_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1db2bba92_Reset(_1db2bb663_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1db2bbbd5_Short(_1db2bb663_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1db2bb663_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1db2beb2d_Name(_1db2c0007_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1db2c02e3_What(_1db2c0007_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1db2c0436_Reset(_1db2c0007_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1db2c0579_Short(_1db2c0007_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1db2c0007_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1db2c3329_Name(_1db2c3703_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1db2c39de_What(_1db2c3703_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1db2c3b32_Reset(_1db2c3703_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1db2c3c75_Short(_1db2c3703_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1db2c3703_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1db2c6a69_Name(_1db2c6e43_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1db2c722e_What(_1db2c6e43_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1db2c7372_Reset(_1db2c6e43_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1db2c74b5_Short(_1db2c6e43_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1db2c6e43_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1db2ca265_Name(_1db2ca63e_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1db2ca92a_What(_1db2ca63e_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1db2caa6d_Reset(_1db2ca63e_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1db2cabb1_Short(_1db2ca63e_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1db2ca63e_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1d7cd19d9_FlagSet> static__1d7cd1cc5_New(void) {
	return jule::new_ptr<_1d7cd19d9_FlagSet>(_1d7cd19d9_FlagSet{._field_flags=jule::Slice<jule::Trait<_1d7ccee38_CommonFlag>>::alloc(0LL, 20LL)});;
}



inline jule::Trait<_1d7ccee38_CommonFlag> _1d7cd2248_FindFlag(_1d7cd19d9_FlagSet* _self_, jule::Str _7127_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1db2d9c25:;
		if (it != expr_end) {
			jule::Trait<_1d7ccee38_CommonFlag> _7221_flag = *it;
			{
				if ((_1d7ccee38_CommonFlag_mptr_data[(_7221_flag).type_offset]._1d7c9e116_Name(_7221_flag) == _7127_name)) {
					return _7221_flag;;
				};
			}
			_iter_next_1db2d9c25:;
			++it;
			goto _iter_begin_1db2d9c25;
		}
		_iter_end_1db2d9c25:;
	};
	return nullptr;;
}



inline jule::Trait<_1d7ccee38_CommonFlag> _1d7cd2589_FindFlagShort(_1d7cd19d9_FlagSet* _self_, jule::I32 _8132_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1db2db52e:;
		if (it != expr_end) {
			jule::Trait<_1d7ccee38_CommonFlag> _8221_flag = *it;
			{
				if ((_1d7ccee38_CommonFlag_mptr_data[(_8221_flag).type_offset]._1d7c9e259_Short(_8221_flag) == _8132_name)) {
					return _8221_flag;;
				};
			}
			_iter_next_1db2db52e:;
			++it;
			goto _iter_begin_1db2db52e;
		}
		_iter_end_1db2db52e:;
	};
	return nullptr;;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _1d7cd2b61_Parse(_1d7cd19d9_FlagSet* _self_, jule::Slice<jule::Str> _11524_args) {
	_1d7cd446a_argParser _11613_ap = _1d7cd446a_argParser{._field_set=(*(_self_)), ._field_args=_11524_args, };;
	({
		auto except = _1d7cd5966_parse(&_11613_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>(except.error);
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>(jule::Any(), _11613_ap._field_content);;
}



inline jule::Ptr<_1db2ca63e_Flag> _1db348d61_addFlagCommon(_1d7cd19d9_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	if ((_1d7cd2248_FindFlag(_self_, _13135_name) != nullptr)) {
		jule::panic((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:133:13"));;
	};
	if (((_13146_short != 0LL) && (_1d7cd2589_FindFlagShort(_self_, _13146_short) != nullptr))) {
		jule::panic((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + jule::Str::from_rune(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:137:13"));;
	};
	jule::Ptr<_1db2ca63e_Flag> _14013_flag = jule::new_ptr<_1db2ca63e_Flag>(_1db2ca63e_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	{ jule::Slice<jule::Trait<_1d7ccee38_CommonFlag>> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait<_1d7ccee38_CommonFlag>(_14013_flag, 4)); };
	return _14013_flag;;
}

inline jule::Ptr<_1db2c6e43_Flag> _1db350b8c_addFlagCommon(_1d7cd19d9_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	if ((_1d7cd2248_FindFlag(_self_, _13135_name) != nullptr)) {
		jule::panic((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:133:13"));;
	};
	if (((_13146_short != 0LL) && (_1d7cd2589_FindFlagShort(_self_, _13146_short) != nullptr))) {
		jule::panic((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + jule::Str::from_rune(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:137:13"));;
	};
	jule::Ptr<_1db2c6e43_Flag> _14013_flag = jule::new_ptr<_1db2c6e43_Flag>(_1db2c6e43_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	{ jule::Slice<jule::Trait<_1d7ccee38_CommonFlag>> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait<_1d7ccee38_CommonFlag>(_14013_flag, 3)); };
	return _14013_flag;;
}



inline void _1db346a51_AddVar(_1d7cd19d9_FlagSet* _self_, jule::Ptr<jule::Str> _16762_var, jule::Str _16771_name, jule::I32 _16782_short, jule::Str _16795_what) {
	jule::Ptr<_1db2ca63e_Flag> _16813_flag = _1db348d61_addFlagCommon(_self_, _16771_name, _16782_short, _16795_what);;
	(*(_16813_flag))._field_default=(*(_16762_var));
	(*(_16813_flag))._field_data=_16762_var;
}

inline void _1db34d8c1_AddVar(_1d7cd19d9_FlagSet* _self_, jule::Ptr<jule::Bool> _16762_var, jule::Str _16771_name, jule::I32 _16782_short, jule::Str _16795_what) {
	jule::Ptr<_1db2c6e43_Flag> _16813_flag = _1db350b8c_addFlagCommon(_self_, _16771_name, _16782_short, _16795_what);;
	(*(_16813_flag))._field_default=(*(_16762_var));
	(*(_16813_flag))._field_data=_16762_var;
}





std::ostream &operator<<(std::ostream &_Stream, _1d7cd19d9_FlagSet _Src) {
	_Stream << "FlagSet{";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_i64__jule_tuple_bool _1db2e33c1_parseInteger(_1d7cd446a_argParser* _self_, jule::Str* _18231_s, jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I64)> _18239_parser) {
	__jule_tuple_i64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (((*(_18231_s))).empty()) {
			_case_begin_1db2e61e8:;
			{
				__jule_func_result.__jule_result_arg0 = 0LL;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_1e016e5ab_HasPrefix((*(_18231_s)), jule::Str::lit("0x", 2))) {
			_case_begin_1db2e603e:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1e016e5ab_HasPrefix((*(_18231_s)), jule::Str::lit("0b", 2))) {
			_case_begin_1db2e63c4:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1e016e5ab_HasPrefix((*(_18231_s)), jule::Str::lit("0o", 2))) {
			_case_begin_1db2e643a:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_18231_s))[0LL] == '0')) {
			_case_begin_1db2e5a55:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1db2e59de:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1db2e5923:;
	};
	return __jule_func_result;;
}

inline __jule_tuple_u64__jule_tuple_bool _1db2eab9d_parseInteger(_1d7cd446a_argParser* _self_, jule::Str* _18231_s, jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I64)> _18239_parser) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (((*(_18231_s))).empty()) {
			_case_begin_1db2ed981:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_1e016e5ab_HasPrefix((*(_18231_s)), jule::Str::lit("0x", 2))) {
			_case_begin_1db2ed7c7:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1e016e5ab_HasPrefix((*(_18231_s)), jule::Str::lit("0b", 2))) {
			_case_begin_1db2edb5c:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1e016e5ab_HasPrefix((*(_18231_s)), jule::Str::lit("0o", 2))) {
			_case_begin_1db2edbc3:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_18231_s))[0LL] == '0')) {
			_case_begin_1db2ed2dd:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1db2ed277:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1db2ed1ab:;
	};
	return __jule_func_result;;
}



inline jule::Str _1d7cd4c84_getData(_1d7cd446a_argParser* _self_) {
	if ((((*(_self_))._field_i + 1LL) >= (*(_self_))._field_args.len())) {
		return jule::Str();;
	};
	((*(_self_))._field_i)++;
	return (*(_self_))._field_args[(*(_self_))._field_i];;
}



inline jule::VoidExceptional _1d7cd5009_processFlag(_1d7cd446a_argParser* _self_, jule::Trait<_1d7ccee38_CommonFlag>* _20935_flag) {
	{
		auto &_match_expr{ (*(_20935_flag)) };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1db2e0665:;
			{
				jule::Ptr<_1db2c6e43_Flag> _21217_bf = (*(_20935_flag)).cast_ptr<_1db2c6e43_Flag>(3);;
				(*((*(_21217_bf))._field_data))=(!((*(_21217_bf))._field_default));
				return jule::VoidExceptional();;
			}
		}
		_match_end_1db2e0610:;
	};
	jule::Str _2179_data = _1d7cd4c84_getData(_self_);;
	if ((_2179_data).empty()) {
		return jule::VoidExceptional(jule::Any(((jule::Str::lit("--", 2) + _1d7ccee38_CommonFlag_mptr_data[((*(_20935_flag))).type_offset]._1d7c9e116_Name((*(_20935_flag)))) + jule::Str::lit(": expression missing", 20)), &__jule_any_type4));
	};
	{
		auto &_match_expr{ (*(_20935_flag)) };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1db2e24d0:;
			{
				jule::Ptr<_1db2bb663_Flag> _22417_intf = (*(_20935_flag)).cast_ptr<_1db2bb663_Flag>(0);;
				jule::Bool _22527_ok = false;;
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _1db2e33c1_parseInteger(_self_, &(_2179_data), jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I64)>([=](jule::Str _22565_s, jule::I64 _22573_base) mutable -> __jule_tuple_i64__jule_tuple_bool {
						__jule_tuple_i64__jule_tuple_bool __jule_func_result;
						__jule_func_result.__jule_result_arg0 = 0;
						__jule_func_result.__jule_result_arg1 = false;
						__jule_func_result.__jule_result_arg0 = static_cast<jule::I64>(({
							auto except = _1d4301738_ParseInt(_22565_s, _22573_base, 64LL);
							(except.ok()) ? (except.result) : ({{
								__jule_func_result.__jule_result_arg0 = 0LL;
								__jule_func_result.__jule_result_arg1 = false;
								return __jule_func_result;;
							} 0;});
						}));
						__jule_func_result.__jule_result_arg1 = true;
						return __jule_func_result;;
					}));
					(*((*(_22417_intf))._field_data)) = __jule_assign_result.__jule_result_arg0;
					_22527_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_22527_ok))) {
					return jule::VoidExceptional(jule::Any(((jule::Str::lit("--", 2) + _1d7ccee38_CommonFlag_mptr_data[((*(_20935_flag))).type_offset]._1d7c9e116_Name((*(_20935_flag)))) + jule::Str::lit(": expression must be valid signed integer", 41)), &__jule_any_type4));
				};
			}
		}
		else if (_match_expr.type_is(true, 1)) {
			_case_begin_1db2e2546:;
			{
				jule::Ptr<_1db2c0007_Flag> _23217_uintf = (*(_20935_flag)).cast_ptr<_1db2c0007_Flag>(1);;
				jule::Bool _23328_ok = false;;
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1db2eab9d_parseInteger(_self_, &(_2179_data), jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I64)>([=](jule::Str _23366_s, jule::I64 _23374_base) mutable -> __jule_tuple_u64__jule_tuple_bool {
						__jule_tuple_u64__jule_tuple_bool __jule_func_result;
						__jule_func_result.__jule_result_arg0 = 0;
						__jule_func_result.__jule_result_arg1 = false;
						__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>(({
							auto except = _1d4301282_ParseUint(_23366_s, _23374_base, 64LL);
							(except.ok()) ? (except.result) : ({{
								__jule_func_result.__jule_result_arg0 = 0LLU;
								__jule_func_result.__jule_result_arg1 = false;
								return __jule_func_result;;
							} 0;});
						}));
						__jule_func_result.__jule_result_arg1 = true;
						return __jule_func_result;;
					}));
					(*((*(_23217_uintf))._field_data)) = __jule_assign_result.__jule_result_arg0;
					_23328_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_23328_ok))) {
					return jule::VoidExceptional(jule::Any(((jule::Str::lit("--", 2) + _1d7ccee38_CommonFlag_mptr_data[((*(_20935_flag))).type_offset]._1d7c9e116_Name((*(_20935_flag)))) + jule::Str::lit(": expression must be valid unsigned integer", 43)), &__jule_any_type4));
				};
			}
		}
		else if (_match_expr.type_is(true, 2)) {
			_case_begin_1db2e25ac:;
			{
				jule::Ptr<_1db2c3703_Flag> _24017_ff = (*(_20935_flag)).cast_ptr<_1db2c3703_Flag>(2);;
				(*((*(_24017_ff))._field_data))=static_cast<jule::F64>(({
					auto except = _1d4308179_ParseFloat(_2179_data, 64LL);
					(except.ok()) ? (except.result) : ({{

						return jule::VoidExceptional(jule::Any(((jule::Str::lit("--", 2) + _1d7ccee38_CommonFlag_mptr_data[((*(_20935_flag))).type_offset]._1d7c9e116_Name((*(_20935_flag)))) + jule::Str::lit(": expression must be valid floating-point", 41)), &__jule_any_type4));
					} 0;});
				}));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_1db2e2623:;
			{
				(*((*((*(_20935_flag)).cast_ptr<_1db2ca63e_Flag>(4)))._field_data))=_2179_data;
			}
		}
		_match_end_1db2e1c1b:;
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1d7cd52b2_singleDash(_1d7cd446a_argParser* _self_, jule::Str* _24930_arg) {
	if (((*(_24930_arg)).len() == 1LL)) {
		return jule::VoidExceptional(jule::Any(((*(_24930_arg)) + jule::Str::lit(": missing argument", 18)), &__jule_any_type4));
	};
	jule::Slice<jule::I32> _2539_rarg = static_cast<jule::Slice<jule::I32>>((*(_24930_arg))).slice(1LL);;
	{
		auto expr = &(_2539_rarg);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1db30514c:;
		if (it != expr_end) {
			jule::I32 *_25416_r = it;
			{
				jule::Trait<_1d7ccee38_CommonFlag> _25517_flag = _1d7cd2589_FindFlagShort(&(*(_self_))._field_set, (*(_25416_r)));;
				if ((_25517_flag == nullptr)) {
					return jule::VoidExceptional(jule::Any((((*(_24930_arg)) + jule::Str::lit(": flag is not exist: ", 21)) + jule::Str::from_rune((*(_25416_r)))), &__jule_any_type4));
				};
				({
					auto except = _1d7cd5009_processFlag(_self_, &(_25517_flag));
					if (!except.ok()) {
						return jule::VoidExceptional(except.error);
					}
				});
			}
			_iter_next_1db30514c:;
			++it;
			goto _iter_begin_1db30514c;
		}
		_iter_end_1db30514c:;
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1d7cd556a_doubleDash(_1d7cd446a_argParser* _self_, jule::Str* _26430_arg) {
	if (((*(_26430_arg)).len() == 2LL)) {
		return jule::VoidExceptional(jule::Any(((*(_26430_arg)) + jule::Str::lit(": missing argument", 18)), &__jule_any_type4));
	};
	jule::Trait<_1d7ccee38_CommonFlag> _26813_flag = _1d7cd2248_FindFlag(&(*(_self_))._field_set, (*(_26430_arg)).slice(2LL));;
	if ((_26813_flag == nullptr)) {
		return jule::VoidExceptional(jule::Any(((*(_26430_arg)) + jule::Str::lit(": flag is not exist", 19)), &__jule_any_type4));
	};
	({
		auto except = _1d7cd5009_processFlag(_self_, &(_26813_flag));
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1d7cd5768_tryArg(_1d7cd446a_argParser* _self_) {
	jule::Str _2769_arg = (*(_self_))._field_args[(*(_self_))._field_i];;
	if (((*(_self_))._field_args.len() == 0LL)) {
		return jule::VoidExceptional();;
	};
	if ((_2769_arg[0LL] == '-')) {
		if (((_2769_arg.len() > 1LL) && (_2769_arg[1LL] == '-'))) {
			({
				auto except = _1d7cd556a_doubleDash(_self_, &(_2769_arg));
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
			return jule::VoidExceptional();;
		};
		({
			auto except = _1d7cd52b2_singleDash(_self_, &(_2769_arg));
			if (!except.ok()) {
				return jule::VoidExceptional(except.error);
			}
		});
		return jule::VoidExceptional();;
	};
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_content; __jule_push_dest.push(_2769_arg); };
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1d7cd5966_parse(_1d7cd446a_argParser* _self_) {
	for (; ((*(_self_))._field_i < (*(_self_))._field_args.len()); ((*(_self_))._field_i)++) {
		{
			({
				auto except = _1d7cd5768_tryArg(_self_);
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
		}
	_iter_next_1db30bde0:;
	}
	_iter_end_1db30bde0:;;
	return jule::VoidExceptional();
}





std::ostream &operator<<(std::ostream &_Stream, _1d7cd446a_argParser _Src) {
	_Stream << "argParser{";
	_Stream << "set:" << _Src._field_set << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "content:" << _Src._field_content << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1d7c4c856_ObjectCoder> static__1d7c4cc52_New(jule::Ptr<_1d7166787_IR>* _9424_ir, _1d7c4ad3d_SerializationInfo _9433_info) {
	jule::Ptr<_1d7c4c856_ObjectCoder> _9513_oc = jule::new_ptr<_1d7c4c856_ObjectCoder>(_1d7c4c856_ObjectCoder{._field_ir=(*(_9424_ir)), ._field_info=_9433_info, });;
	(*(_9513_oc))._field_ec=static__1d7b7389d_new(&(_9513_oc));
	(*(_9513_oc))._field_sc=static__1d7b69971_new(&(_9513_oc));
	(*(_9513_oc))._field_tc=static__1d7c5d108_new(&(_9513_oc));
	return _9513_oc;;
}



inline void _1d7c4d00a_write(jule::Ptr<_1d7c4c856_ObjectCoder> _self_, jule::Str _10525_s) {
	_1e018c6ea_WriteStr(&(*(_self_))._field_Buf, _10525_s);
}



inline void _1d7c4d2b3_writeBytes(jule::Ptr<_1d7c4c856_ObjectCoder> _self_, jule::Slice<jule::U8> _10930_b) {
	_1e018c442_Write(&(*(_self_))._field_Buf, _10930_b);
}



inline void _1d7c4d4b1_addIndent(jule::Ptr<_1d7c4c856_ObjectCoder> _self_) {
	{ jule::Slice<jule::U8> &__jule_push_dest = (*(_self_))._field_indentBuffer; __jule_push_dest.push(9LLU); };
}



inline void _1d7c4d6ae_doneIndent(jule::Ptr<_1d7c4c856_ObjectCoder> _self_) {
	(*(_self_))._field_indentBuffer=(*(_self_))._field_indentBuffer.slice(0LL, ((*(_self_))._field_indentBuffer.len() - 1LL));
}



inline void _1d7c4d8ac_indent(jule::Ptr<_1d7c4c856_ObjectCoder> _self_) {
	_1e018c442_Write(&(*(_self_))._field_Buf, (*(_self_))._field_indentBuffer);
}



inline jule::I64 _1d7c4dbed_findAnyType(jule::Ptr<_1d7c4c856_ObjectCoder> _self_, jule::Ptr<_1d6677a35_TypeKind>* _12836_t) {
	{
		auto expr = &((*(_self_))._field_anyTypeMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1db137754:;
		if (it != expr_end) {
			jule::I64 _12914_i = it - expr->begin();
			jule::Ptr<_1d6677a35_TypeKind> _12921_at = *it;
			{
				if (_1d667823e_Equal(_12921_at, (*(_12836_t)))) {
					return _12914_i;;
				};
			}
			_iter_next_1db137754:;
			++it;
			_12914_i++;
			goto _iter_begin_1db137754;
		}
		_iter_end_1db137754:;
	};
	return -1LL;;
}



inline jule::I64 _1d7c4e03e_pushAnyType(jule::Ptr<_1d7c4c856_ObjectCoder> _self_, jule::Ptr<_1d6677a35_TypeKind> _13735_t) {
	if ((_1d667a939_Enum(_13735_t.ptr()) != nullptr)) {
		_13735_t=(*((*(_1d667a939_Enum(_13735_t.ptr())))._field_Kind))._field_Kind;
	};
	jule::I64 _14113_i = _1d7c4dbed_findAnyType(_self_, &(_13735_t));;
	if ((_14113_i != -1LL)) {
		return _14113_i;;
	};
	_14113_i=static_cast<jule::I64>((*(_self_))._field_anyTypeMap.len());
	{ jule::Slice<jule::Ptr<_1d6677a35_TypeKind>> &__jule_push_dest = (*(_self_))._field_anyTypeMap; __jule_push_dest.push(_13735_t); };
	jule::Str _1479_si = _1d43131ea_Itoa(_14113_i);;
	if ((_1d667a41c_Sptr(_13735_t.ptr()) != nullptr)) {
		_1e01838bc_StrBuilder _14917_elemKind = static__1e0183b64_New(40LL);;
		_1d7c63482_kind((*(_self_))._field_tc.ptr(), &(_14917_elemKind), (*(_1d667a41c_Sptr(_13735_t.ptr())))._field_Elem);
		_1e018c6ea_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("void __jule_any_type", 20));
		_1e018c6ea_WriteStr(&(*(_self_))._field_anyObj, _1479_si);
		_1e018c6ea_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 64));
		_1e018c442_Write(&(*(_self_))._field_anyObj, _1e018d993_Buf(&_14917_elemKind));
		_1e018c6ea_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(">().dealloc(); }\n", 17));
		_1e018c6ea_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("struct jule::Any::Type ", 23));
		_1e018c6ea_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("__jule_any_type", 15));
		_1e018c6ea_WriteStr(&(*(_self_))._field_anyObj, _1479_si);
		_1e018c6ea_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("{.dealloc=__jule_any_type", 25));
		_1e018c6ea_WriteStr(&(*(_self_))._field_anyObj, _1479_si);
		_1e018c6ea_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};\n", 58));
		_1e018c6ea_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
		_1e018c6ea_WriteStr(&(*(_self_))._field_anyObj, _1479_si);
		_1e018c6ea_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_compare(const jule::Any &any, const ", 37));
		_1d7c5dea5_asSptr((*(_self_))._field_tc.ptr(), &((*(_self_))._field_anyObj), _1e018d993_Buf(&_14917_elemKind));
		_1e018c6ea_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(" &other) { return any.type == &__jule_any_type", 46));
		_1e018c6ea_WriteStr(&(*(_self_))._field_anyObj, _1479_si);
		_1e018c6ea_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(" && jule::ptr_equal(any.data.alloc, other.alloc); }\n", 52));
	} else {
		jule::Bool _17613_comparable = _1d6679130_Comparable(_13735_t.ptr());;
		_1e01838bc_StrBuilder _17717_kindB = static__1e0183b64_New(40LL);;
		_1d7c63482_kind((*(_self_))._field_tc.ptr(), &(_17717_kindB), _13735_t);
		jule::Slice<jule::U8> _17913_kind = _1e018d993_Buf(&_17717_kindB);;
		if (_216828656_BytesStr(_17913_kind).equal("[<unimplemented_type_kind>]", 27)) {
			jule::outln(_1d6677ded_Str(_13735_t.ptr()));
		};
		_1e018c6ea_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("void __jule_any_type", 20));
		_1e018c6ea_WriteStr(&(*(_self_))._field_anyObj, _1479_si);
		_1e018c6ea_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 64));
		_1e018c442_Write(&(*(_self_))._field_anyObj, _17913_kind);
		_1e018c6ea_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(">().dealloc(); }\n", 17));
		if (_17613_comparable) {
			_1e018c6ea_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
			_1e018c6ea_WriteStr(&(*(_self_))._field_anyObj, _1479_si);
			_1e018c6ea_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<", 66));
			_1e018c442_Write(&(*(_self_))._field_anyObj, _17913_kind);
			_1e018c6ea_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("*>(alloc) == *reinterpret_cast<", 31));
			_1e018c442_Write(&(*(_self_))._field_anyObj, _17913_kind);
			_1e018c6ea_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("*>(other); }\n", 13));
		};
		_1e018c6ea_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("jule::Str __jule_any_type", 25));
		_1e018c6ea_WriteStr(&(*(_self_))._field_anyObj, _1479_si);
		_1e018c6ea_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<", 76));
		if ((_1d667a6a3_Ptr(_13735_t.ptr()) == nullptr)) {
			_1e018c6ea_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("const ", 6));
			_1e018c442_Write(&(*(_self_))._field_anyObj, _17913_kind);
		} else {
			_1e018c442_Write(&(*(_self_))._field_anyObj, _17913_kind);
			_1e018c6ea_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("* const", 7));
		};
		_1e018c6ea_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("*>(alloc)); }\n", 14));
		_1e018c6ea_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("struct jule::Any::Type ", 23));
		_1e018c6ea_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("__jule_any_type", 15));
		_1e018c6ea_WriteStr(&(*(_self_))._field_anyObj, _1479_si);
		_1e018c6ea_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("{.dealloc=__jule_any_type", 25));
		_1e018c6ea_WriteStr(&(*(_self_))._field_anyObj, _1479_si);
		_1e018c6ea_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_dealloc, ", 10));
		if (_17613_comparable) {
			_1e018c6ea_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(".eq=__jule_any_type", 19));
			_1e018c6ea_WriteStr(&(*(_self_))._field_anyObj, _1479_si);
			_1e018c6ea_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_eq, ", 5));
		};
		_1e018c6ea_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(".to_str=__jule_any_type", 23));
		_1e018c6ea_WriteStr(&(*(_self_))._field_anyObj, _1479_si);
		_1e018c6ea_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_to_str};\n", 10));
		if (_17613_comparable) {
			_1e018c6ea_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
			_1e018c6ea_WriteStr(&(*(_self_))._field_anyObj, _1479_si);
			_1e018c6ea_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_compare(const jule::Any &any, const ", 37));
			_1e018c442_Write(&(*(_self_))._field_anyObj, _17913_kind);
			_1e018c6ea_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(" &other) { return any.type == &__jule_any_type", 46));
			_1e018c6ea_WriteStr(&(*(_self_))._field_anyObj, _1479_si);
			_1e018c6ea_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(" && __jule_any_type", 19));
			_1e018c6ea_WriteStr(&(*(_self_))._field_anyObj, _1479_si);
			_1e018c6ea_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_eq(any.data.alloc, (void*)&other); }\n", 38));
		};
	};
	return _14113_i;;
}



inline void _1d7c4e2e7_pushResultIns(jule::Ptr<_1d7c4c856_ObjectCoder> _self_, jule::Ptr<_1d6535173_FnIns>* _24738_f) {
	jule::Str _2489_s = static_cast<jule::Str>(_1d7c6882d_code((*((*(_self_))._field_tc))._field_rc.ptr(), &((*((*(_24738_f))))._field_Result)));;
	jule::Bool _24912_ok = false;;
	(*(_self_))._field_resultMap.lookup(_2489_s, nullptr, &(_24912_ok));
	if (_24912_ok) {
		return;;
	};
	(*(_self_))._field_resultMap[_2489_s]=false;
	_1e018c6ea_WriteStr(&(*(_self_))._field_resultDecls, jule::Str::lit("struct ", 7));
	_1e018c6ea_WriteStr(&(*(_self_))._field_resultDecls, _2489_s);
	_1e018c6ea_WriteStr(&(*(_self_))._field_resultDecls, jule::Str::lit(" {\n", 3));
	{
		auto expr = &((*(_1d667beac_Tup((*((*(_24738_f))))._field_Result.ptr())))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1db158247:;
		if (it != expr_end) {
			jule::I64 _25714_i = it - expr->begin();
			jule::Ptr<_1d6677a35_TypeKind> _25721_t = *it;
			{
				_1e018c9a3_WriteByte(&(*(_self_))._field_resultDecls, 9LLU);
				_1d7c63482_kind((*(_self_))._field_tc.ptr(), &((*(_self_))._field_resultDecls), _25721_t);
				_1e018c9a3_WriteByte(&(*(_self_))._field_resultDecls, ' ');
				_1e018c6ea_WriteStr(&(*(_self_))._field_resultDecls, jule::Str::lit("__jule_result_arg", 17));
				_1e018c6ea_WriteStr(&(*(_self_))._field_resultDecls, _1d43131ea_Itoa(_25714_i));
				_1e018c6ea_WriteStr(&(*(_self_))._field_resultDecls, jule::Str::lit(";\n", 2));
			}
			_iter_next_1db158247:;
			++it;
			_25714_i++;
			goto _iter_begin_1db158247;
		}
		_iter_end_1db158247:;
	};
	_1e018c6ea_WriteStr(&(*(_self_))._field_resultDecls, jule::Str::lit("};\n", 3));
}



inline void _1d7c4e5a0_pushResult(jule::Ptr<_1d7c4c856_ObjectCoder> _self_, jule::Ptr<_1d653226e_Fn>* _26835_f) {
	if ((_1d65326e2_IsVoid((*(_26835_f)).ptr()) || ((*((*((*(_26835_f))))._field_Result))._field_Idents.len() <= 1LL))) {
		return;;
	};
	jule::I64 _27213_n = (*((*(_26835_f))))._field_Instances.len();;
	if (((*((*(_26835_f))))._field_Generics.len() == 0LL)) {
		_27213_n=1LL;
	};
	{
		auto expr = (*((*(_26835_f))))._field_Instances.slice(0LL, _27213_n);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1db15d34b:;
		if (it != expr_end) {
			jule::Ptr<_1d6535173_FnIns> _27621_ins = *it;
			{
				_1d7c4e2e7_pushResultIns(_self_, &(_27621_ins));
			}
			_iter_next_1db15d34b:;
			++it;
			goto _iter_begin_1db15d34b;
		}
		_iter_end_1db15d34b:;
	};
}



inline jule::I64 _1d7c4e99b_findTypeOffsetS(_1d7c4c856_ObjectCoder* _self_, jule::Ptr<_1d654554b_Trait> _28130_t, jule::Ptr<_1d652005e_StructIns> _28145_s) {
	if (((*(_28130_t))._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	{
		auto expr = &((*(_self_))._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1db15e935:;
		if (it != expr_end) {
			jule::Ptr<_1d7c4b415_traitHash> *_28516_hash = it;
			{
				if ((((*((*(_28516_hash))))._field_t == _28130_t) && ((*((*(_28516_hash))))._field_s == _28145_s))) {
					return (*((*(_28516_hash))))._field_i;;
				};
			}
			_iter_next_1db15e935:;
			++it;
			goto _iter_begin_1db15e935;
		}
		_iter_end_1db15e935:;
	};
	return -1LL;;
}



inline jule::I64 _1d7c4ed97_findTypeOffset(_1d7c4c856_ObjectCoder* _self_, jule::Ptr<_1d654554b_Trait> _29329_t, jule::Ptr<_1d6677a35_TypeKind> _29344_k) {
	if (((*(_29329_t))._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	jule::Ptr<_1d652005e_StructIns> _29717_s = nullptr;;
	if ((_1d667a41c_Sptr(_29344_k.ptr()) != nullptr)) {
		_29344_k=(*(_1d667a41c_Sptr(_29344_k.ptr())))._field_Elem;
	};
	_29717_s=_1d667b709_Struct(_29344_k.ptr());
	if ((_29717_s == nullptr)) {
		return -1LL;;
	};
	return static_cast<jule::I64>(_1d7c4e99b_findTypeOffsetS(_self_, _29329_t, _29717_s));;
}



inline void _1d7c5020a_pushAndWriteMaskMapper(jule::Ptr<_1d7c4c856_ObjectCoder> _self_, jule::Ptr<_1d654554b_Trait> _30846_t1, jule::Ptr<_1d654554b_Trait> _30862_t2) {
	_1e01838bc_StrBuilder _30913_ident = static__1e0183b64_New(32LL);;
	_1e018c6ea_WriteStr(&_30913_ident, jule::Str::lit("__jule_trait_offset_mapper_", 27));
	_1e018c6ea_WriteStr(&_30913_ident, _1d4312a68_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::Uintptr>(_30862_t2))), 15LL));
	_1e018c6ea_WriteStr(&_30913_ident, jule::Str::lit("_to_", 4));
	_1e018c6ea_WriteStr(&_30913_ident, _1d4312a68_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::Uintptr>(_30846_t1))), 15LL));
	_1e018c442_Write(&(*(_self_))._field_Buf, _1e018d993_Buf(&_30913_ident));
	{
		auto expr = &((*(_self_))._field_traitCastMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1db165023:;
		if (it != expr_end) {
			_1d7c4b7de_traitCast _31716_m = *it;
			{
				if (((_31716_m._field_t1 == _30846_t1) && (_31716_m._field_t2 == _30862_t2))) {
					return;;
				};
			}
			_iter_next_1db165023:;
			++it;
			goto _iter_begin_1db165023;
		}
		_iter_end_1db165023:;
	};
	{ jule::Slice<_1d7c4b7de_traitCast> &__jule_push_dest = (*(_self_))._field_traitCastMap; __jule_push_dest.push(_1d7c4b7de_traitCast{._field_t1=_30846_t1, ._field_t2=_30862_t2}); };
	;
	_1e018c6ea_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("jule::Int", 9));
	_1e018c9a3_WriteByte(&(*(_self_))._field_anyObj, ' ');
	_1e018c442_Write(&(*(_self_))._field_anyObj, _1e018d993_Buf(&_30913_ident));
	_1e018c6ea_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("(const jule::Int offset) noexcept { ", 36));
	{
		auto expr = &((*(_30846_t1))._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1db168433:;
		if (it != expr_end) {
			jule::Ptr<_1d651c2d1_Struct> _33621_s1 = *it;
			{
				{
					auto expr = &((*(_30862_t2))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1db1693ac:;
					if (it != expr_end) {
						jule::Ptr<_1d651c2d1_Struct> _33720_s2 = *it;
						{
							if ((_33621_s1 == _33720_s2)) {
								{
									auto expr = &((*(_33621_s1))._field_Instances);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1db16a215:;
									if (it != expr_end) {
										jule::Ptr<_1d652005e_StructIns> _33933_s1i = *it;
										{
											jule::I64 _34025_i1 = _1d7c4e99b_findTypeOffsetS(_self_.ptr(), _30846_t1, _33933_s1i);;
											jule::I64 _34125_i2 = _1d7c4e99b_findTypeOffsetS(_self_.ptr(), _30862_t2, _33933_s1i);;
											_1e018c6ea_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("if (offset == ", 14));
											_1e018c6ea_WriteStr(&(*(_self_))._field_anyObj, _1d43131ea_Itoa(_34125_i2));
											_1e018c6ea_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(") return ", 9));
											_1e018c6ea_WriteStr(&(*(_self_))._field_anyObj, _1d43131ea_Itoa(_34025_i1));
											_1e018c6ea_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("; ", 2));
										}
										_iter_next_1db16a215:;
										++it;
										goto _iter_begin_1db16a215;
									}
									_iter_end_1db16a215:;
								};
							};
						}
						_iter_next_1db1693ac:;
						++it;
						goto _iter_begin_1db1693ac;
					}
					_iter_end_1db1693ac:;
				};
			}
			_iter_next_1db168433:;
			++it;
			goto _iter_begin_1db168433;
		}
		_iter_end_1db168433:;
	};
	_1e018c6ea_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(" return ", 8));
	_1e018c6ea_WriteStr(&(*(_self_))._field_anyObj, _1d43131ea_Itoa(0LL));
	_1e018c6ea_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("; }\n", 4));
}



inline void _1d7c504b3_locInfo(jule::Ptr<_1d7c4c856_ObjectCoder> _self_, jule::Ptr<_1d64d5cd3_Token>* _35728_t) {
	jule::Str *_35810_loc = &((*((*((*(_35728_t))))._field_File))._field_Path);;
	if (_208a42c35_Production) {
		{
			
			if (_1e016e5ab_HasPrefix((*(_35810_loc)), _1e034e33a_PathStdlib)) {
				_case_begin_1db1703d5:;
				{
					_1d7b815ae_cstrBytes(&((*(_self_))._field_Buf), (*(_35810_loc)).slice((_1e0191985_Dir(_1e034e33a_PathStdlib).len() + 1LL)));
				}
			}
			else if (_1e016e5ab_HasPrefix((*(_35810_loc)), (*((*(_self_))._field_ir))._field_Root)) {
				_case_begin_1db1704b2:;
				{
					_1d7b815ae_cstrBytes(&((*(_self_))._field_Buf), (*(_35810_loc)).slice((_1e0191985_Dir((*((*(_self_))._field_ir))._field_Root).len() + 1LL)));
				}
			}
			else {
				_case_begin_1db17002d:;
				{
					_1d7b815ae_cstrBytes(&((*(_self_))._field_Buf), (*(_35810_loc)));
				}
			}
			_match_end_1db16ee62:;
		};
	} else {
		_1d7b815ae_cstrBytes(&((*(_self_))._field_Buf), (*(_35810_loc)));
	};
	_1d7c4d00a_write(_self_, jule::Str::lit(":", 1));
	_1d7c4d00a_write(_self_, _1d43131ea_Itoa((*((*(_35728_t))))._field_Row));
	_1d7c4d00a_write(_self_, jule::Str::lit(":", 1));
	_1d7c4d00a_write(_self_, _1d43131ea_Itoa((*((*(_35728_t))))._field_Column));
}



inline void _1d7c506b1_head(jule::Ptr<_1d7c4c856_ObjectCoder> _self_) {
	_1d7c433a7_Time _3849_time = static__1d7c4396d_Now();;
	_1d7c42bd1_AbsTime _3859_abs = _1d7c45156_Abs(&_3849_time);;
	_1d7c4d00a_write(_self_, jule::Str::lit("// Auto generated by JuleC.\n", 28));
	_1d7c4d00a_write(_self_, jule::Str::lit("// JuleC version: ", 18));
	_1d7c4d00a_write(_self_, jule::Str::lit("jule0.0.15 @master", 18));
	_1d7c4d00a_write(_self_, jule::Str::lit("\n", 1));
	_1d7c4d00a_write(_self_, jule::Str::lit("// Date: ", 9));
	_1d7c4d00a_write(_self_, _1d4312a68_FmtUint(_3859_abs._field_Day, 10LL));
	_1d7c4d00a_write(_self_, jule::Str::lit("/", 1));
	_1d7c4d00a_write(_self_, _1d4312a68_FmtUint(_3859_abs._field_Month, 10LL));
	_1d7c4d00a_write(_self_, jule::Str::lit("/", 1));
	_1d7c4d00a_write(_self_, _1d4312a68_FmtUint(_3859_abs._field_Year, 10LL));
	_1d7c4d00a_write(_self_, jule::Str::lit(" (DD/MM/YYYY) UTC\n//\n// Recomended Compile Command;\n// ", 55));
	_1d7c4d00a_write(_self_, (*(_self_))._field_info._field_Compiler);
	_1d7c4d00a_write(_self_, jule::Str::lit(" ", 1));
	_1d7c4d00a_write(_self_, (*(_self_))._field_info._field_CompilerCommand);
	_1d7c4d00a_write(_self_, jule::Str::lit("\n\n", 2));
	if (_208a42c35_Production) {
		_1d7c4d00a_write(_self_, jule::Str::lit("#define __JULE_ENABLE__PRODUCTION\n", 34));
	};
	if ((!(_208a42592_RC))) {
		_1d7c4d00a_write(_self_, jule::Str::lit("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43));
	};
	if ((!(_208a4296b_Safety))) {
		_1d7c4d00a_write(_self_, jule::Str::lit("#define __JULE_DISABLE__SAFETY\n", 31));
	};
	_1d7c508ae_links(_self_);
	_1d7c4d00a_write(_self_, jule::Str::lit("\n\n#include \"", 12));
	_1d7c4d00a_write(_self_, _1e034eb54_PathApi);
	_1d7c4d00a_write(_self_, jule::Str::lit("\"\n\n", 3));
}



inline void _1d7c508ae_links(jule::Ptr<_1d7c4c856_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1db181913:;
		if (it != expr_end) {
			jule::Ptr<_1d659590e_ImportInfo> _42216_used = *it;
			{
				{
					
					if ((!((*(_42216_used))._field_Binded))) {
						_case_begin_1db1826c2:;
						{
							goto _iter_next_1db181913;
						}
					}
					else if (_1e0228500_IsStdHeaderPath((*(_42216_used))._field_Path)) {
						_case_begin_1db182749:;
						{
							_1d7c4d00a_write(_self_, jule::Str::lit("#include ", 9));
							_1d7c4d00a_write(_self_, (*(_42216_used))._field_Path);
							_1d7c4d00a_write(_self_, jule::Str::lit("\n", 1));
						}
					}
					else if (_1e02287ca_IsValidHeaderExt(_1e019105b_Ext((*(_42216_used))._field_Path))) {
						_case_begin_1db1827c1:;
						{
							_1d7c4d00a_write(_self_, jule::Str::lit("#include \"", 10));
							_1d7c4d00a_write(_self_, (*(_42216_used))._field_Path);
							_1d7c4d00a_write(_self_, jule::Str::lit("\"\n", 2));
						}
					}
					_match_end_1db1825a1:;
				};
			}
			_iter_next_1db181913:;
			++it;
			goto _iter_begin_1db181913;
		}
		_iter_end_1db181913:;
	};
}



inline void _1d7c50b67_prepareStructure(_1d7c4c856_ObjectCoder* _self_, jule::Ptr<_1d651c2d1_Struct>* _43840_s) {
	{
		auto expr = &((*((*(_43840_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1db184938:;
		if (it != expr_end) {
			jule::Ptr<_1d652005e_StructIns> _43921_ins = *it;
			{
				{
					auto expr = &((*(_43921_ins))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1db186055:;
					if (it != expr_end) {
						jule::Ptr<_1d653226e_Fn> _44025_m = *it;
						{
							if ((*(_44025_m))._field_Statically) {
								goto _iter_next_1db186055;
							};
							{
								auto expr = &((*(_44025_m))._field_Instances);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1db186e13:;
								if (it != expr_end) {
									jule::Ptr<_1d6535173_FnIns> _44429_mins = *it;
									{
										jule::Ptr<_1d65341c7_ParamIns> _44525_p = (*(_44429_mins))._field_Params[0LL];;
										_1e01838bc_StrBuilder _44625_kind = static__1e0183b64_New(40LL);;
										_1d7c63482_kind((*(_self_))._field_tc.ptr(), &(_44625_kind), (*(_44525_p))._field_Kind);
										if ((!(_1d653114c_IsRef((*(_44525_p))._field_Decl.ptr())))) {
											_1e018c6ea_WriteStr(&_44625_kind, jule::Str::lit("*", 1));
										};
										(*(_44525_p))._field_Kind=jule::new_ptr<_1d6677a35_TypeKind>(_1d6677a35_TypeKind{._field_Kind=jule::Trait<_1d667757e_Kind>(jule::new_ptr<_1d7c5bea3_customType>(_1d7c5bea3_customType{._field_kind=_1e018cee2_Str(&_44625_kind)}), 27)});
									}
									_iter_next_1db186e13:;
									++it;
									goto _iter_begin_1db186e13;
								}
								_iter_end_1db186e13:;
							};
						}
						_iter_next_1db186055:;
						++it;
						goto _iter_begin_1db186055;
					}
					_iter_end_1db186055:;
				};
			}
			_iter_next_1db184938:;
			++it;
			goto _iter_begin_1db184938;
		}
		_iter_end_1db184938:;
	};
}



inline void _1d7c50d65_prepareStructures(jule::Ptr<_1d7c4c856_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1db187562:;
		if (it != expr_end) {
			jule::Ptr<_1d651c2d1_Struct> _46221_s = *it;
			{
				if (((*(_46221_s))._field_Token != nullptr)) {
					_1d7c50b67_prepareStructure(_self_.ptr(), &(_46221_s));
				};
			}
			_iter_next_1db187562:;
			++it;
			goto _iter_begin_1db187562;
		}
		_iter_end_1db187562:;
	};
}



inline void _1d7c5111d_iterPackages(jule::Ptr<_1d7c4c856_ObjectCoder> _self_, jule::Fn<void(jule::Ptr<_1d6598835_Package>*)> _46932_f) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1db18a5ba:;
		if (it != expr_end) {
			jule::Ptr<_1d659590e_ImportInfo> _47021_used = *it;
			{
				if ((!((*(_47021_used))._field_Binded))) {
					_46932_f(&((*(_47021_used))._field_Package));
				};
			}
			_iter_next_1db18a5ba:;
			++it;
			goto _iter_begin_1db18a5ba;
		}
		_iter_end_1db18a5ba:;
	};
	_46932_f(&((*((*(_self_))._field_ir))._field_Main));
}



inline void _1d7c5131b_buildTraitMap(jule::Ptr<_1d7c4c856_ObjectCoder> _self_) {
	_1d7c5111d_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1d6598835_Package>*)>([=](jule::Ptr<_1d6598835_Package>* _47935_pkg) mutable -> void {
		_1d7c59a94_iterFiles(_47935_pkg, jule::Fn<void(jule::Ptr<_1d6641d73_SymbolTable>*)>([=](jule::Ptr<_1d6641d73_SymbolTable>* _48036_file) mutable -> void {
			{
				auto expr = &((*((*(_48036_file))))._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1db18eab9:;
				if (it != expr_end) {
					jule::Ptr<_1d654554b_Trait> _48129_t = *it;
					{
						if (((*(_48129_t))._field_Token == nullptr)) {
							return;;
						};
						if (((*(_48129_t))._field_Implemented.len() == 0LL)) {
							jule::Ptr<_1d7c4b415_traitHash> _48629_hash = jule::new_ptr<_1d7c4b415_traitHash>(_1d7c4b415_traitHash{._field_t=_48129_t, ._field_s=nullptr, ._field_i=0LL});;
							_1e01838bc_StrBuilder _49129_b = static__1e0183b64_New(static_cast<jule::I64>((*(_48129_t))._field_Ident.len()));;
							static__1d7b870ba_writeIdentTo(&(_49129_b), &((*(_48129_t))._field_Ident));
							(*(_48629_hash))._field_ti=_1e018cee2_Str(&_49129_b);
							{ jule::Slice<jule::Ptr<_1d7c4b415_traitHash>> &__jule_push_dest = (*(_self_))._field_tmap; __jule_push_dest.push(_48629_hash); };
							goto _iter_next_1db18eab9;
						};
						jule::I64 _49725_i = 0LL;;
						{
							auto expr = &((*(_48129_t))._field_Implemented);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1db1904d2:;
							if (it != expr_end) {
								jule::Ptr<_1d651c2d1_Struct> _49833_s = *it;
								{
									{
										auto expr = &((*(_49833_s))._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1db194063:;
										if (it != expr_end) {
											jule::Ptr<_1d652005e_StructIns> _49937_ins = *it;
											{
												jule::Ptr<_1d7c4b415_traitHash> _50033_hash = jule::new_ptr<_1d7c4b415_traitHash>(_1d7c4b415_traitHash{._field_t=_48129_t, ._field_s=_49937_ins, ._field_i=_49725_i});;
												_1e01838bc_StrBuilder _50533_b = static__1e0183b64_New(static_cast<jule::I64>((*(_48129_t))._field_Ident.len()));;
												static__1d7b870ba_writeIdentTo(&(_50533_b), &((*(_48129_t))._field_Ident));
												(*(_50033_hash))._field_ti=_1e018cee2_Str(&_50533_b);
												{ jule::Slice<jule::Ptr<_1d7c4b415_traitHash>> &__jule_push_dest = (*(_self_))._field_tmap; __jule_push_dest.push(_50033_hash); };
												(_49725_i)++;
											}
											_iter_next_1db194063:;
											++it;
											goto _iter_begin_1db194063;
										}
										_iter_end_1db194063:;
									};
								}
								_iter_next_1db1904d2:;
								++it;
								goto _iter_begin_1db1904d2;
							}
							_iter_end_1db1904d2:;
						};
						_1d7c5a842_pushMethodsFromInherits(&(_48129_t), &(_48129_t));
					}
					_iter_next_1db18eab9:;
					++it;
					goto _iter_begin_1db18eab9;
				}
				_iter_end_1db18eab9:;
			};
		}));
	}));
}



inline void _1d7c51519_traitDecls(jule::Ptr<_1d7c4c856_ObjectCoder> _self_) {
	_1d7c5111d_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1d6598835_Package>*)>([=](jule::Ptr<_1d6598835_Package>* _52135_pkg) mutable -> void {
		_1d7c59a94_iterFiles(_52135_pkg, jule::Fn<void(jule::Ptr<_1d6641d73_SymbolTable>*)>([=](jule::Ptr<_1d6641d73_SymbolTable>* _52236_file) mutable -> void {
			{
				auto expr = &((*((*(_52236_file))))._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1db197c7b:;
				if (it != expr_end) {
					jule::Ptr<_1d654554b_Trait> _52329_t = *it;
					{
						if (((*(_52329_t))._field_Token == nullptr)) {
							return;;
						};
						_1d7c4d8ac_indent(_self_);
						_1d7c4d00a_write(_self_, jule::Str::lit("struct ", 7));
						static__1d7b88275_traitDecl(&((*(_self_))._field_Buf), _52329_t);
						_1d7c4d00a_write(_self_, jule::Str::lit("{};\n", 4));
					}
					_iter_next_1db197c7b:;
					++it;
					goto _iter_begin_1db197c7b;
				}
				_iter_end_1db197c7b:;
			};
		}));
	}));
}



inline void _1d7c517c2_structurePlainDecl(jule::Ptr<_1d7c4c856_ObjectCoder> _self_, jule::Ptr<_1d651c2d1_Struct>* _53643_s) {
	{
		auto expr = &((*((*(_53643_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1db1903e4:;
		if (it != expr_end) {
			jule::Ptr<_1d652005e_StructIns> _53721_ins = *it;
			{
				_1d7c4d00a_write(_self_, jule::Str::lit("struct ", 7));
				static__1d7b88b38_structureIns(&((*(_self_))._field_Buf), &(_53721_ins));
				_1d7c4d00a_write(_self_, jule::Str::lit(";\n", 2));
			}
			_iter_next_1db1903e4:;
			++it;
			goto _iter_begin_1db1903e4;
		}
		_iter_end_1db1903e4:;
	};
}



inline void _1d7c519c0_structurePlainDecls(jule::Ptr<_1d7c4c856_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1db19a036:;
		if (it != expr_end) {
			jule::Ptr<_1d651c2d1_Struct> _54521_s = *it;
			{
				if (((*(_54521_s))._field_Token != nullptr)) {
					_1d7c517c2_structurePlainDecl(_self_, &(_54521_s));
				};
			}
			_iter_next_1db19a036:;
			++it;
			goto _iter_begin_1db19a036;
		}
		_iter_end_1db19a036:;
	};
}



inline void _1d7c51c78_fieldDecl(jule::Ptr<_1d7c4c856_ObjectCoder> _self_, jule::Ptr<_1d651e4ae_FieldIns>* _55234_f) {
	_1d7c63482_kind((*(_self_))._field_tc.ptr(), &((*(_self_))._field_Buf), (*((*(_55234_f))))._field_Kind);
	_1d7c4d00a_write(_self_, jule::Str::lit(" ", 1));
	static__1d7b88e24_field(&((*(_self_))._field_Buf), &((*((*(_55234_f))))._field_Decl));
	if (((*((*(_55234_f))))._field_Default == nullptr)) {
		if (_1d7c6a91d_shouldInitialized(&((*((*(_55234_f))))._field_Kind))) {
			_1d7c4d00a_write(_self_, jule::Str::lit(" = ", 3));
			_1d7b80aec_initExpr((*(_self_))._field_ec, (*((*(_55234_f))))._field_Kind);
		};
	} else {
		_1d7c4d00a_write(_self_, jule::Str::lit(" = ", 3));
		_1d7b76829_possibleRefExpr((*(_self_))._field_ec, (*((*((*(_55234_f))))._field_Default))._field_Model);
	};
	_1d7c4d00a_write(_self_, jule::Str::lit(";", 1));
}



inline void _1d7c52031_structureDestructor(jule::Ptr<_1d7c4c856_ObjectCoder> _self_, jule::Ptr<_1d652005e_StructIns>* _57044_s) {
	;
	jule::Ptr<_1d653226e_Fn> _5739_disposeMethod = _1d65210c6_FindMethod((*(_57044_s)).ptr(), jule::Str::lit("Dispose", 7), false);;
	jule::Bool _57413_disposed = static__1d65da46a_Dispose(_5739_disposeMethod);;
	if ((!(_57413_disposed))) {
		return;;
	};
	_1d7c4d00a_write(_self_, jule::Str::lit("~", 1));
	static__1d7b88b38_structureIns(&((*(_self_))._field_Buf), _57044_s);
	_1d7c4d00a_write(_self_, jule::Str::lit("(void) { ", 9));
	static__1d7b87b9d_func(&((*(_self_))._field_Buf), &(_5739_disposeMethod));
	_1d7c4d00a_write(_self_, jule::Str::lit("(this); }", 9));
}



inline void _1d7c52394_structureOperatorEq(jule::Ptr<_1d7c4c856_ObjectCoder> _self_, jule::Slice<jule::U8> _58639_ident, jule::Ptr<_1d652005e_StructIns>* _58659_s) {
	if ((!((*((*(_58659_s))))._field_Comparable))) {
		return;;
	};
	if (((*((*(_58659_s))))._field_Operators._field_Eq != nullptr)) {
		_1d7c52b25_structureOperator(_self_, _58639_ident, &((*((*(_58659_s))))._field_Operators._field_Eq), jule::Str::lit("==", 2));
		return;;
	};
	_1d7c4d8ac_indent(_self_);
	if (_1d678537e_Inline) {
		_1d7c4d00a_write(_self_, jule::Str::lit("inline ", 7));
	};
	_1d7c4d00a_write(_self_, jule::Str::lit("bool operator==(", 16));
	_1d7c4d2b3_writeBytes(_self_, _58639_ident);
	_1d7c4d00a_write(_self_, jule::Str::lit(" _other) {", 10));
	if (((*((*(_58659_s))))._field_Fields.len() > 0LL)) {
		_1d7c4d4b1_addIndent(_self_);
		_1d7c4d00a_write(_self_, jule::Str::lit("\n", 1));
		_1d7c4d8ac_indent(_self_);
		_1d7c4d00a_write(_self_, jule::Str::lit("return ", 7));
		_1d7c4d4b1_addIndent(_self_);
		jule::Bool _60917_writed = false;;
		{
			auto expr = &((*((*(_58659_s))))._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1db1a8d25:;
			if (it != expr_end) {
				jule::Ptr<_1d651e4ae_FieldIns> _61025_f = *it;
				{
					jule::Ptr<_1d652005e_StructIns> _61217_strct = _1d667b709_Struct((*(_61025_f))._field_Kind.ptr());;
					if ((((_61217_strct != nullptr) && ((*(_61217_strct))._field_Decl != nullptr)) && (*((*(_61217_strct))._field_Decl))._field_Binded)) {
						goto _iter_next_1db1a8d25;
					};
					if (_60917_writed) {
						_1d7c4d00a_write(_self_, jule::Str::lit(" &&", 3));
					};
					_60917_writed=true;
					_1d7c4d00a_write(_self_, jule::Str::lit("\n", 1));
					_1d7c4d8ac_indent(_self_);
					_1d7c4d00a_write(_self_, jule::Str::lit("this->", 6));
					_1e01838bc_StrBuilder _62321_fIdent = static__1e0183b64_New(static_cast<jule::I64>((*((*(_61025_f))._field_Decl))._field_Ident.len()));;
					static__1d7b88e24_field(&(_62321_fIdent), &((*(_61025_f))._field_Decl));
					_1d7c4d2b3_writeBytes(_self_, _1e018d993_Buf(&_62321_fIdent));
					_1d7c4d00a_write(_self_, jule::Str::lit(" == _other.", 11));
					_1d7c4d2b3_writeBytes(_self_, _1e018d993_Buf(&_62321_fIdent));
				}
				_iter_next_1db1a8d25:;
				++it;
				goto _iter_begin_1db1a8d25;
			}
			_iter_end_1db1a8d25:;
		};
		_1d7c4d6ae_doneIndent(_self_);
		if ((!(_60917_writed))) {
			_1d7c4d00a_write(_self_, jule::Str::lit("true", 4));
		};
		_1d7c4d00a_write(_self_, jule::Str::lit(";\n", 2));
		_1d7c4d6ae_doneIndent(_self_);
		_1d7c4d8ac_indent(_self_);
		_1d7c4d00a_write(_self_, jule::Str::lit("}", 1));
	} else {
		_1d7c4d00a_write(_self_, jule::Str::lit(" return true; }", 15));
	};
	_1d7c4d00a_write(_self_, jule::Str::lit("\n\n", 2));
}



inline void _1d7c52707_structureOperatorNotEq(jule::Ptr<_1d7c4c856_ObjectCoder> _self_, jule::Slice<jule::U8> _64342_ident, jule::Ptr<_1d652005e_StructIns>* _64362_s) {
	if ((!((*((*(_64362_s))))._field_Comparable))) {
		return;;
	};
	_1d7c4d8ac_indent(_self_);
	if (_1d678537e_Inline) {
		_1d7c4d00a_write(_self_, jule::Str::lit("inline ", 7));
	};
	_1d7c4d00a_write(_self_, jule::Str::lit("bool operator!=(", 16));
	_1d7c4d2b3_writeBytes(_self_, _64342_ident);
	_1d7c4d00a_write(_self_, jule::Str::lit(" _other) { return !this->operator==(_other); }\n\n", 48));
}



inline void _1d7c52b25_structureOperator(jule::Ptr<_1d7c4c856_ObjectCoder> _self_, jule::Slice<jule::U8> _65737_ident, jule::Ptr<_1d6535173_FnIns>* _65757_f, jule::Str _65768_op) {
	if (((*(_65757_f)) == nullptr)) {
		return;;
	};
	jule::Bool _6629_unary = ((*((*(_65757_f))))._field_Params.len() == 1LL);;
	jule::Bool _6639_assignment = _1d65326e2_IsVoid((*((*(_65757_f))))._field_Decl.ptr());;
	_1d7c4d8ac_indent(_self_);
	if (_1d678537e_Inline) {
		_1d7c4d00a_write(_self_, jule::Str::lit("inline ", 7));
	};
	if (_6639_assignment) {
		_1d7c4d2b3_writeBytes(_self_, _65737_ident);
		_1d7c4d00a_write(_self_, jule::Str::lit("&", 1));
	} else {
		if ((_1d667a186_Prim((*((*(_65757_f))))._field_Result.ptr()) == nullptr)) {
			_1d7c4d2b3_writeBytes(_self_, _65737_ident);
		} else {
			_1d7c4d00a_write(_self_, jule::Str::lit("jule::Bool", 10));
		};
	};
	_1d7c4d00a_write(_self_, jule::Str::lit(" operator", 9));
	_1d7c4d00a_write(_self_, _65768_op);
	_1d7c4d00a_write(_self_, jule::Str::lit("(", 1));
	if ((!(_6629_unary))) {
		jule::Ptr<_1d65341c7_ParamIns> _68517_p = (*((*(_65757_f))))._field_Params[1LL];;
		_1d7c62272_paramIns((*(_self_))._field_tc.ptr(), &((*(_self_))._field_Buf), &(_68517_p));
		_1d7c4d00a_write(_self_, jule::Str::lit(" _other", 7));
	};
	_1d7c4d00a_write(_self_, jule::Str::lit(") { ", 4));
	if ((!(_6639_assignment))) {
		_1d7c4d00a_write(_self_, jule::Str::lit("return ", 7));
	};
	static__1d7b87e89_funcIns(&((*(_self_))._field_Buf), _65757_f);
	if ((!(_6629_unary))) {
		_1d7c4d00a_write(_self_, jule::Str::lit("(this, _other); ", 16));
		if (_6639_assignment) {
			_1d7c4d00a_write(_self_, jule::Str::lit("return *this; ", 14));
		};
		_1d7c4d00a_write(_self_, jule::Str::lit("}", 1));
	} else {
		_1d7c4d00a_write(_self_, jule::Str::lit("(this); }", 9));
	};
	_1d7c4d00a_write(_self_, jule::Str::lit("\n\n", 2));
}



inline void _1d7c52dcd_structureOperators(jule::Ptr<_1d7c4c856_ObjectCoder> _self_, jule::Ptr<_1d652005e_StructIns>* _70643_s) {
	_1e01838bc_StrBuilder _70713_sb = static__1e0183b64_New(40LL);;
	static__1d7b88b38_structureIns(&(_70713_sb), _70643_s);
	jule::Slice<jule::U8> _7099_ident = _1e018d993_Buf(&_70713_sb);;
	_1d7c52394_structureOperatorEq(_self_, _7099_ident, _70643_s);
	_1d7c52707_structureOperatorNotEq(_self_, _7099_ident, _70643_s);
	_1d7c52b25_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_Gt), jule::Str::lit(">", 1));
	_1d7c52b25_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_GtEq), jule::Str::lit(">=", 2));
	_1d7c52b25_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_Lt), jule::Str::lit("<", 1));
	_1d7c52b25_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_LtEq), jule::Str::lit("<=", 2));
	_1d7c52b25_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_Shl), jule::Str::lit("<<", 2));
	_1d7c52b25_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_Shr), jule::Str::lit(">>", 2));
	_1d7c52b25_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_Add), jule::Str::lit("+", 1));
	_1d7c52b25_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_Sub), jule::Str::lit("-", 1));
	_1d7c52b25_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_Div), jule::Str::lit("/", 1));
	_1d7c52b25_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_Mul), jule::Str::lit("*", 1));
	_1d7c52b25_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_Mod), jule::Str::lit("%", 1));
	_1d7c52b25_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_BitAnd), jule::Str::lit("&", 1));
	_1d7c52b25_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_BitOr), jule::Str::lit("|", 1));
	_1d7c52b25_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_BitXor), jule::Str::lit("^", 1));
	_1d7c52b25_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_Neg), jule::Str::lit("-", 1));
	_1d7c52b25_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_Pos), jule::Str::lit("+", 1));
	_1d7c52b25_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_BitNot), jule::Str::lit("~", 1));
	_1d7c52b25_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_AddAssign), jule::Str::lit("+=", 2));
	_1d7c52b25_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_SubAssign), jule::Str::lit("-=", 2));
	_1d7c52b25_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_DivAssign), jule::Str::lit("/=", 2));
	_1d7c52b25_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_MulAssign), jule::Str::lit("*=", 2));
	_1d7c52b25_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_ModAssign), jule::Str::lit("%=", 2));
	_1d7c52b25_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_ShlAssign), jule::Str::lit("<<=", 3));
	_1d7c52b25_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_ShrAssign), jule::Str::lit(">>=", 3));
	_1d7c52b25_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_BitOrAssign), jule::Str::lit("|=", 2));
	_1d7c52b25_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_BitAndAssign), jule::Str::lit("&=", 2));
	_1d7c52b25_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_BitXorAssign), jule::Str::lit("^=", 2));
}



inline void _1d7c53186_structureInsDecl(jule::Ptr<_1d7c4c856_ObjectCoder> _self_, jule::Ptr<_1d652005e_StructIns>* _74741_s) {
	{
		auto expr = &((*((*(_74741_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1db1cbb8e:;
		if (it != expr_end) {
			jule::Ptr<_1d653226e_Fn> _74821_m = *it;
			{
				if (_1d7c5adc5_isHeadDecl(&(_74821_m))) {
					_1d7c5462c_funcDecl(_self_, &(_74821_m), false);
				};
			}
			_iter_next_1db1cbb8e:;
			++it;
			goto _iter_begin_1db1cbb8e;
		}
		_iter_end_1db1cbb8e:;
	};
	_1d7c4d00a_write(_self_, jule::Str::lit("struct ", 7));
	static__1d7b88b38_structureIns(&((*(_self_))._field_Buf), _74741_s);
	_1d7c4d00a_write(_self_, jule::Str::lit(" {\n", 3));
	_1d7c4d4b1_addIndent(_self_);
	{
		auto expr = &((*((*(_74741_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1db1cc4ec:;
		if (it != expr_end) {
			jule::Ptr<_1d651e4ae_FieldIns> _75921_f = *it;
			{
				_1d7c4d8ac_indent(_self_);
				_1d7c51c78_fieldDecl(_self_, &(_75921_f));
				_1d7c4d00a_write(_self_, jule::Str::lit("\n", 1));
			}
			_iter_next_1db1cc4ec:;
			++it;
			goto _iter_begin_1db1cc4ec;
		}
		_iter_end_1db1cc4ec:;
	};
	_1d7c4d8ac_indent(_self_);
	_1d7c52031_structureDestructor(_self_, _74741_s);
	_1d7c4d00a_write(_self_, jule::Str::lit("\n\n", 2));
	_1d7c52dcd_structureOperators(_self_, _74741_s);
	_1d7c4d00a_write(_self_, jule::Str::lit("\n", 1));
	_1d7c4d6ae_doneIndent(_self_);
	_1d7c4d8ac_indent(_self_);
	_1d7c4d00a_write(_self_, jule::Str::lit("};", 2));
}



inline void _1d7c5343e_structureDecl(jule::Ptr<_1d7c4c856_ObjectCoder> _self_, jule::Ptr<_1d651c2d1_Struct>* _77738_s) {
	{
		auto expr = &((*((*(_77738_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1db1d2117:;
		if (it != expr_end) {
			jule::Ptr<_1d652005e_StructIns> _77821_ins = *it;
			{
				_1d7c53186_structureInsDecl(_self_, &(_77821_ins));
			}
			_iter_next_1db1d2117:;
			++it;
			goto _iter_begin_1db1d2117;
		}
		_iter_end_1db1d2117:;
	};
}



inline void _1d7c5363c_structureDecls(jule::Ptr<_1d7c4c856_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1db1d29b9:;
		if (it != expr_end) {
			jule::Ptr<_1d651c2d1_Struct> _78421_s = *it;
			{
				if (((*(_78421_s))._field_Token != nullptr)) {
					_1d7c5343e_structureDecl(_self_, &(_78421_s));
					_1d7c4d00a_write(_self_, jule::Str::lit("\n", 1));
				};
			}
			_iter_next_1db1d29b9:;
			++it;
			goto _iter_begin_1db1d29b9;
		}
		_iter_end_1db1d29b9:;
	};
}



inline void _1d7c5383a_structureMethodDecls(jule::Ptr<_1d7c4c856_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1db1d3921:;
		if (it != expr_end) {
			jule::Ptr<_1d651c2d1_Struct> _79321_s = *it;
			{
				if (((*(_79321_s))._field_Token != nullptr)) {
					{
						auto expr = &((*(_79321_s))._field_Instances);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1db1d5967:;
						if (it != expr_end) {
							jule::Ptr<_1d652005e_StructIns> _79529_ins = *it;
							{
								{
									auto expr = &((*(_79529_ins))._field_Methods);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1db1d63b3:;
									if (it != expr_end) {
										jule::Ptr<_1d653226e_Fn> _79633_m = *it;
										{
											if ((!(_1d7c5adc5_isHeadDecl(&(_79633_m))))) {
												_1d7c4e5a0_pushResult(_self_, &(_79633_m));
												_1d7c5462c_funcDecl(_self_, &(_79633_m), false);
											};
										}
										_iter_next_1db1d63b3:;
										++it;
										goto _iter_begin_1db1d63b3;
									}
									_iter_end_1db1d63b3:;
								};
							}
							_iter_next_1db1d5967:;
							++it;
							goto _iter_begin_1db1d5967;
						}
						_iter_end_1db1d5967:;
					};
				};
			}
			_iter_next_1db1d3921:;
			++it;
			goto _iter_begin_1db1d3921;
		}
		_iter_end_1db1d3921:;
	};
}



inline void _1d7c53ae3_paramsDecls(jule::Ptr<_1d7c4c856_ObjectCoder> _self_, jule::Slice<jule::Ptr<_1d65341c7_ParamIns>>* _80836_params) {
	if (((*(_80836_params)).len() == 0LL)) {
		_1d7c4d00a_write(_self_, jule::Str::lit("(void)", 6));
		return;;
	};
	_1d7c4d00a_write(_self_, jule::Str::lit("(", 1));
	{
		auto expr = _80836_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1db1d61d7:;
		if (it != expr_end) {
			jule::I64 _81514_i = it - expr->begin();
			jule::Ptr<_1d65341c7_ParamIns> _81521_p = *it;
			{
				_1d7c62272_paramIns((*(_self_))._field_tc.ptr(), &((*(_self_))._field_Buf), &(_81521_p));
				if ((((*(_80836_params)).len() - _81514_i) > 1LL)) {
					_1d7c4d00a_write(_self_, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1db1d61d7:;
			++it;
			_81514_i++;
			goto _iter_begin_1db1d61d7;
		}
		_iter_end_1db1d61d7:;
	};
	_1d7c4d00a_write(_self_, jule::Str::lit(")", 1));
}



inline void _1d7c53e56_funcHead(jule::Ptr<_1d7c4c856_ObjectCoder> _self_, jule::Ptr<_1d6535173_FnIns>* _82533_f, jule::Bool _82544_ptr) {
	if ((((!(_82544_ptr)) && _1d678537e_Inline) && (!(_1d6532c0e_IsEntryPoint((*((*(_82533_f))))._field_Decl.ptr()))))) {
		_1d7c4d00a_write(_self_, jule::Str::lit("inline ", 7));
	};
	_1d7c62948_funcInsResult((*(_self_))._field_tc.ptr(), &((*(_self_))._field_Buf), _82533_f);
	if (_82544_ptr) {
		_1d7c4d00a_write(_self_, jule::Str::lit("(*", 2));
		static__1d7b87e89_funcIns(&((*(_self_))._field_Buf), _82533_f);
		_1d7c4d00a_write(_self_, jule::Str::lit(")", 1));
	} else {
		_1d7c4d00a_write(_self_, jule::Str::lit(" ", 1));
		static__1d7b87e89_funcIns(&((*(_self_))._field_Buf), _82533_f);
	};
}



inline void _1d7c542b9_funcDeclIns(jule::Ptr<_1d7c4c856_ObjectCoder> _self_, jule::Ptr<_1d6535173_FnIns>* _84036_f, jule::Bool _84047_ptr) {
	_1d7c4d8ac_indent(_self_);
	_1d7c53e56_funcHead(_self_, _84036_f, _84047_ptr);
	_1d7c53ae3_paramsDecls(_self_, &((*((*(_84036_f))))._field_Params));
	_1d7c4d00a_write(_self_, jule::Str::lit(";\n", 2));
}



inline void _1d7c5462c_funcDecl(jule::Ptr<_1d7c4c856_ObjectCoder> _self_, jule::Ptr<_1d653226e_Fn>* _84733_f, jule::Bool _84741_ptr) {
	{
		auto expr = &((*((*(_84733_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1db1e0444:;
		if (it != expr_end) {
			jule::Ptr<_1d6535173_FnIns> _84821_c = *it;
			{
				_1d7c542b9_funcDeclIns(_self_, &(_84821_c), _84741_ptr);
			}
			_iter_next_1db1e0444:;
			++it;
			goto _iter_begin_1db1e0444;
		}
		_iter_end_1db1e0444:;
	};
}



inline void _1d7c54a4a_funcDeclTrait(jule::Ptr<_1d7c4c856_ObjectCoder> _self_, jule::Ptr<_1d654554b_Trait>* _85338_t, jule::Ptr<_1d653226e_Fn>* _85354_f, jule::Bool _85362_ptr) {
	{
		auto expr = &((*((*(_85354_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1db1e17ca:;
		if (it != expr_end) {
			jule::Ptr<_1d6535173_FnIns> _85421_c = *it;
			{
				jule::Ptr<_1d6677a35_TypeKind> _85517_k = (*((*(_85421_c))._field_Params[0LL]))._field_Kind;;
				(*((*(_85421_c))._field_Params[0LL]))._field_Kind=jule::new_ptr<_1d6677a35_TypeKind>(_1d6677a35_TypeKind{._field_Kind=jule::Trait<_1d667757e_Kind>((*(_85338_t)), 2)});
				_1d7c542b9_funcDeclIns(_self_, &(_85421_c), _85362_ptr);
				(*((*(_85421_c))._field_Params[0LL]))._field_Kind=_85517_k;
			}
			_iter_next_1db1e17ca:;
			++it;
			goto _iter_begin_1db1e17ca;
		}
		_iter_end_1db1e17ca:;
	};
}



inline void _1d7c54c48_funcDecls(jule::Ptr<_1d7c4c856_ObjectCoder> _self_) {
	_1d7c5111d_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1d6598835_Package>*)>([=](jule::Ptr<_1d6598835_Package>* _86335_pkg) mutable -> void {
		_1d7c59a94_iterFiles(_86335_pkg, jule::Fn<void(jule::Ptr<_1d6641d73_SymbolTable>*)>([=](jule::Ptr<_1d6641d73_SymbolTable>* _86436_file) mutable -> void {
			{
				auto expr = &((*((*(_86436_file))))._field_Funcs);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1db1e5e94:;
				if (it != expr_end) {
					jule::Ptr<_1d653226e_Fn> _86529_f = *it;
					{
						if (((!((*(_86529_f))._field_Binded)) && ((*(_86529_f))._field_Token != nullptr))) {
							_1d7c4e5a0_pushResult(_self_, &(_86529_f));
							_1d7c5462c_funcDecl(_self_, &(_86529_f), false);
						};
					}
					_iter_next_1db1e5e94:;
					++it;
					goto _iter_begin_1db1e5e94;
				}
				_iter_end_1db1e5e94:;
			};
		}));
	}));
}



inline void _1d7c550ab_traitDataTypeMethods(jule::Ptr<_1d7c4c856_ObjectCoder> _self_, jule::Ptr<_1d654554b_Trait>* _87545_owner, jule::Ptr<_1d654554b_Trait>* _87565_t) {
	{
		auto expr = &((*((*(_87565_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1db1e5b42:;
		if (it != expr_end) {
			jule::Ptr<_1d653226e_Fn> _87621_m = *it;
			{
				jule::Ptr<_1d6535173_FnIns> _87717_ins = (*(_87621_m))._field_Instances[0LL];;
				jule::Ptr<_1d65341c7_ParamIns> _87817_p = (*(_87717_ins))._field_Params[0LL];;
				(*(_87817_p))._field_Kind=jule::new_ptr<_1d6677a35_TypeKind>(_1d6677a35_TypeKind{._field_Kind=jule::Trait<_1d667757e_Kind>((*(_87565_t)), 2)});
				{
					auto expr = (*(_87717_ins))._field_Params.slice(1LL);
					auto it = expr.begin();
					auto expr_end = expr.end();
					_iter_begin_1db1e9937:;
					if (it != expr_end) {
						jule::I64 _88218_i = it - expr.begin();
						jule::Ptr<_1d65341c7_ParamIns> _88225_ip = *it;
						{
							if (_1d64d8a0b_IsAnonIdent((*((*(_88225_ip))._field_Decl))._field_Ident)) {
								(*((*(_88225_ip))._field_Decl))._field_Ident=(jule::Str::lit("_", 1) + _1d43131ea_Itoa(_88218_i));
							};
						}
						_iter_next_1db1e9937:;
						++it;
						_88218_i++;
						goto _iter_begin_1db1e9937;
					}
					_iter_end_1db1e9937:;
				};
				if ((!(_208a42c35_Production))) {
					jule::Ptr<_1d65341c7_ParamIns> _88821_lp = (*(_87717_ins))._field_Params[((*(_87717_ins))._field_Params.len() - 1LL)];;
					{
						auto &_match_expr{ (*((*(_88821_lp))._field_Kind))._field_Kind };
						
						if (_match_expr.type_is(true, 27)) {
							_case_begin_1db1ee167:;
							{
								goto _match_end_1db1ec484;
							}
						}
						else {
							_case_begin_1db1ec4d9:;
							{
								{ jule::Slice<jule::Ptr<_1d65341c7_ParamIns>> &__jule_push_dest = (*(_87717_ins))._field_Params; __jule_push_dest.push(jule::new_ptr<_1d65341c7_ParamIns>(_1d65341c7_ParamIns{._field_Decl=jule::new_ptr<_1d653079a_Param>(_1d653079a_Param{._field_Ident=jule::Str::lit("__file", 6)}), ._field_Kind=jule::new_ptr<_1d6677a35_TypeKind>(_1d6677a35_TypeKind{._field_Kind=jule::Trait<_1d667757e_Kind>(jule::new_ptr<_1d7c5bea3_customType>(_1d7c5bea3_customType{._field_kind=jule::Str::lit("const char*", 11)}), 27)})})); };
							}
						}
						_match_end_1db1ec484:;
					};
				};
				_1d7c4e5a0_pushResult(_self_, &(_87621_m));
				_1d7c54a4a_funcDeclTrait(_self_, _87545_owner, &(_87621_m), true);
			}
			_iter_next_1db1e5b42:;
			++it;
			goto _iter_begin_1db1e5b42;
		}
		_iter_end_1db1e5b42:;
	};
}



inline void _1d7c552a9_traitDataTypes(jule::Ptr<_1d7c4c856_ObjectCoder> _self_) {
	_1d7c5111d_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1d6598835_Package>*)>([=](jule::Ptr<_1d6598835_Package>* _91135_pkg) mutable -> void {
		_1d7c59a94_iterFiles(_91135_pkg, jule::Fn<void(jule::Ptr<_1d6641d73_SymbolTable>*)>([=](jule::Ptr<_1d6641d73_SymbolTable>* _91236_file) mutable -> void {
			{
				auto expr = &((*((*(_91236_file))))._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1db2010e2:;
				if (it != expr_end) {
					jule::Ptr<_1d654554b_Trait> _91329_t = *it;
					{
						if (((*(_91329_t))._field_Token == nullptr)) {
							return;;
						};
						if (((*(_91329_t))._field_Methods.len() == 0LL)) {
							goto _iter_next_1db2010e2;
						};
						_1d7c4d00a_write(_self_, jule::Str::lit("struct ", 7));
						static__1d7b88275_traitDecl(&((*(_self_))._field_Buf), _91329_t);
						_1d7c4d00a_write(_self_, jule::Str::lit("MptrData", 8));
						_1d7c4d00a_write(_self_, jule::Str::lit(" {\n", 3));
						_1d7c4d4b1_addIndent(_self_);
						_1d7c550ab_traitDataTypeMethods(_self_, &(_91329_t), &(_91329_t));
						_1d7c4d6ae_doneIndent(_self_);
						_1d7c4d8ac_indent(_self_);
						_1d7c4d00a_write(_self_, jule::Str::lit("};\n\n", 4));
					}
					_iter_next_1db2010e2:;
					++it;
					goto _iter_begin_1db2010e2;
				}
				_iter_end_1db2010e2:;
			};
		}));
	}));
}



inline void _1d7c55562_paramIns(jule::Ptr<_1d7c4c856_ObjectCoder> _self_, jule::Ptr<_1d65341c7_ParamIns>* _93433_p) {
	_1d7c62272_paramIns((*(_self_))._field_tc.ptr(), &((*(_self_))._field_Buf), _93433_p);
	_1d7c4d00a_write(_self_, jule::Str::lit(" ", 1));
	static__1d7b88561_param(&((*(_self_))._field_Buf), &((*((*(_93433_p))))._field_Decl));
}



inline void _1d7c5581a_paramsIns(jule::Ptr<_1d7c4c856_ObjectCoder> _self_, jule::Slice<jule::Ptr<_1d65341c7_ParamIns>>* _94034_params) {
	if (((*(_94034_params)).len() == 0LL)) {
		_1d7c4d00a_write(_self_, jule::Str::lit("(void)", 6));
		return;;
	};
	_1d7c4d00a_write(_self_, jule::Str::lit("(", 1));
	{
		auto expr = _94034_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1db205de9:;
		if (it != expr_end) {
			jule::I64 _94614_i = it - expr->begin();
			jule::Ptr<_1d65341c7_ParamIns> _94621_p = *it;
			{
				_1d7c55562_paramIns(_self_, &(_94621_p));
				if ((((*(_94034_params)).len() - _94614_i) > 1LL)) {
					_1d7c4d00a_write(_self_, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1db205de9:;
			++it;
			_94614_i++;
			goto _iter_begin_1db205de9;
		}
		_iter_end_1db205de9:;
	};
	_1d7c4d00a_write(_self_, jule::Str::lit(")", 1));
}



inline void _1d7c55b7d_varInitExpr(jule::Ptr<_1d7c4c856_ObjectCoder> _self_, jule::Ptr<_1d65d9018_Var>* _95536_v, jule::Fn<void(void)> _95545_init) {
	if ((*((*(_95536_v))))._field_Statically) {
		_1d7c4d00a_write(_self_, jule::Str::lit("static ", 7));
	};
	_1d7c63482_kind((*(_self_))._field_tc.ptr(), &((*(_self_))._field_Buf), (*((*((*(_95536_v))))._field_Kind))._field_Kind);
	_1d7c4d00a_write(_self_, jule::Str::lit(" ", 1));
	if ((*((*(_95536_v))))._field_Reference) {
		_1d7c4d00a_write(_self_, jule::Str::lit("*", 1));
	};
	static__1d7b89210_var(&((*(_self_))._field_Buf), (*(_95536_v)));
	if ((_95545_init != nullptr)) {
		_1d7c4d00a_write(_self_, jule::Str::lit(" = ", 3));
		_95545_init();
	};
	_1d7c4d00a_write(_self_, jule::Str::lit(";", 1));
}



inline void _1d7c55e36_var(jule::Ptr<_1d7c4c856_ObjectCoder> _self_, jule::Ptr<_1d65d9018_Var> _97327_v) {
	if (_1d64d8742_IsIgnoreIdent((*(_97327_v))._field_Ident)) {
		return;;
	};
	if ((((*(_97327_v))._field_Value != nullptr) && ((*((*(_97327_v))._field_Value))._field_Expr != nullptr))) {
		if (((*((*((*(_97327_v))._field_Value))._field_Data))._field_Model != nullptr)) {
			if ((*(_97327_v))._field_Reference) {
				_1d7c55b7d_varInitExpr(_self_, &(_97327_v), jule::Fn<void(void)>([=](void) mutable -> void {
					_1d7c4d00a_write(_self_, jule::Str::lit("&(", 2));
					_1d7b80844_model((*(_self_))._field_ec, (*((*((*(_97327_v))._field_Value))._field_Data))._field_Model);
					_1d7c4d00a_write(_self_, jule::Str::lit(")", 1));
				}));
			} else {
				_1d7c55b7d_varInitExpr(_self_, &(_97327_v), jule::Fn<void(void)>([=](void) mutable -> void {
					_1d7b76829_possibleRefExpr((*(_self_))._field_ec, (*((*((*(_97327_v))._field_Value))._field_Data))._field_Model);
				}));
			};
			return;;
		};
		_1d7c55b7d_varInitExpr(_self_, &(_97327_v), nullptr);
		return;;
	};
	if ((*(_97327_v))._field_Reference) {
		_1d7c55b7d_varInitExpr(_self_, &(_97327_v), jule::Fn<void(void)>([=](void) mutable -> void {
			_1d7c4d00a_write(_self_, jule::Str::lit("nullptr", 7));
		}));
		return;;
	};
	if (_1d7c6a91d_shouldInitialized(&((*((*(_97327_v))._field_Kind))._field_Kind))) {
		_1d7c55b7d_varInitExpr(_self_, &(_97327_v), jule::Fn<void(void)>([=](void) mutable -> void {
			_1d7b80aec_initExpr((*(_self_))._field_ec, (*((*(_97327_v))._field_Kind))._field_Kind);
		}));
		return;;
	};
	_1d7c55b7d_varInitExpr(_self_, &(_97327_v), nullptr);
}



inline void _1d7c561de_funcIns(jule::Ptr<_1d7c4c856_ObjectCoder> _self_, jule::Ptr<_1d6535173_FnIns>* _100432_f) {
	_1d7c53e56_funcHead(_self_, _100432_f, false);
	_1d7c5581a_paramsIns(_self_, &((*((*(_100432_f))))._field_Params));
	_1d7c4d00a_write(_self_, jule::Str::lit(" ", 1));
	_1d7b705e2_funcScope((*(_self_))._field_sc, (*(_100432_f)));
	if (((*((*(_100432_f))))._field_Scope != nullptr)) {
		_1d7c4d00a_write(_self_, jule::Str::lit("\n\n", 2));
	};
}



inline void _1d7c56497_func(jule::Ptr<_1d7c4c856_ObjectCoder> _self_, jule::Ptr<_1d653226e_Fn>* _101429_f) {
	{
		auto expr = &((*((*(_101429_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1db217da6:;
		if (it != expr_end) {
			jule::Ptr<_1d6535173_FnIns> _101521_ins = *it;
			{
				_1d7c561de_funcIns(_self_, &(_101521_ins));
			}
			_iter_next_1db217da6:;
			++it;
			goto _iter_begin_1db217da6;
		}
		_iter_end_1db217da6:;
	};
}



inline void _1d7c5680a_funcTrait(jule::Ptr<_1d7c4c856_ObjectCoder> _self_, jule::Ptr<_1d7c4b415_traitHash>* _102034_hash, jule::Ptr<_1d653226e_Fn>* _102057_f) {
	jule::Str _10219_ident = (*((*(_102057_f))))._field_Ident;;
	{
		auto expr = &((*((*(_102057_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1db219649:;
		if (it != expr_end) {
			jule::Ptr<_1d6535173_FnIns> _102221_ins = *it;
			{
				(*(_102221_ins))._field_Scope=nullptr;
				_1e01838bc_StrBuilder _102517_s = static__1e0183b64_New(static_cast<jule::I64>((((((*((*(_102057_f))))._field_Ident.len() + _10219_ident.len()) + (*((*(_102034_hash))))._field_ti.len()) + 2LL) + 4LLU)));;
				_1e018c6ea_WriteStr(&_102517_s, _10219_ident);
				_1e018c9a3_WriteByte(&_102517_s, '_');
				_1e018c6ea_WriteStr(&_102517_s, (*((*(_102034_hash))))._field_ti);
				_1e018c9a3_WriteByte(&_102517_s, '_');
				_1e018c6ea_WriteStr(&_102517_s, _1d43131ea_Itoa((*((*(_102034_hash))))._field_i));
				(*((*(_102057_f))))._field_Ident=_1e018cee2_Str(&_102517_s);
				jule::Ptr<_1d6677a35_TypeKind> _103417_k = (*((*(_102221_ins))._field_Params[0LL]))._field_Kind;;
				(*((*(_102221_ins))._field_Params[0LL]))._field_Kind=jule::new_ptr<_1d6677a35_TypeKind>(_1d6677a35_TypeKind{._field_Kind=jule::Trait<_1d667757e_Kind>((*((*(_102034_hash))))._field_t, 2)});
				_1d7c561de_funcIns(_self_, &(_102221_ins));
				(*((*(_102221_ins))._field_Params[0LL]))._field_Kind=_103417_k;
			}
			_iter_next_1db219649:;
			++it;
			goto _iter_begin_1db219649;
		}
		_iter_end_1db219649:;
	};
	(*((*(_102057_f))))._field_Ident=_10219_ident;
}



inline void _1d7c56b6d_traitWrapper(jule::Ptr<_1d7c4c856_ObjectCoder> _self_, jule::Ptr<_1d653226e_Fn>* _104237_m, jule::Ptr<_1d7c4b415_traitHash>* _104250_hash) {
	_1d7c5680a_funcTrait(_self_, _104250_hash, _104237_m);
	if (((*((*(_104250_hash))))._field_s == nullptr)) {
		if (_208a42c35_Production) {
			_1d7c4d00a_write(_self_, jule::Str::lit(" { jule::panic(__JULE_ERROR__INVALID_MEMORY); }\n", 48));
		} else {
			_1d7c4d00a_write(_self_, jule::Str::lit(" { jule::panic(jule::Str(__JULE_ERROR__INVALID_MEMORY \"\\nlocation: \") + jule::Str(_00___file)); }\n", 98));
		};
		return;;
	};
	jule::Bool _10549_ptr = (!(_1d653114c_IsRef((*((*(_104237_m))))._field_Params[0LL].ptr())));;
	jule::Ptr<_1d653226e_Fn> _105613_sm = _1d65210c6_FindMethod((*((*(_104250_hash))))._field_s.ptr(), (*((*(_104237_m))))._field_Ident, false);;
	if (((_105613_sm == nullptr) || ((*(_105613_sm))._field_Instances.len() == 0LL))) {
		return;;
	};
	_1d7c4d4b1_addIndent(_self_);
	_1d7c4d00a_write(_self_, jule::Str::lit("{\n", 2));
	_1d7c4d8ac_indent(_self_);
	if (((*(_105613_sm))._field_Exceptional || (!(_1d65326e2_IsVoid(_105613_sm.ptr()))))) {
		_1d7c4d00a_write(_self_, jule::Str::lit("return ", 7));
	};
	static__1d7b87b9d_func(&((*(_self_))._field_Buf), &(_105613_sm));
	_1d7c4d00a_write(_self_, jule::Str::lit("(", 1));
	if (_10549_ptr) {
		_1d7c4d00a_write(_self_, jule::Str::lit("_self_.safe_ptr<", 16));
		_1d7c61738_structureIns((*(_self_))._field_tc.ptr(), &((*(_self_))._field_Buf), (*((*(_104250_hash))))._field_s);
		_1d7c4d00a_write(_self_, jule::Str::lit(">(", 2));
		if ((!(_208a42c35_Production))) {
			_1d7c4d00a_write(_self_, jule::Str::lit("_00___file", 10));
		};
		_1d7c4d00a_write(_self_, jule::Str::lit(")", 1));
	} else {
		_1d7c4d00a_write(_self_, jule::Str::lit("_self_.data.as<", 15));
		_1d7c613c5_structure((*(_self_))._field_tc.ptr(), &((*(_self_))._field_Buf), (*(_105613_sm))._field_Owner);
		_1d7c4d00a_write(_self_, jule::Str::lit(">()", 3));
	};
	{
		auto expr = (*((*(_104237_m))))._field_Params.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1db225a95:;
		if (it != expr_end) {
			jule::Ptr<_1d653079a_Param> _108216_mp = *it;
			{
				_1d7c4d00a_write(_self_, jule::Str::lit(", ", 2));
				static__1d7b88561_param(&((*(_self_))._field_Buf), &(_108216_mp));
			}
			_iter_next_1db225a95:;
			++it;
			goto _iter_begin_1db225a95;
		}
		_iter_end_1db225a95:;
	};
	_1d7c4d00a_write(_self_, jule::Str::lit(");\n}\n", 5));
	_1d7c4d6ae_doneIndent(_self_);
}



inline void _1d7c56d6b_traitWrappers(jule::Ptr<_1d7c4c856_ObjectCoder> _self_) {
	{
		auto expr = &((*(_self_))._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1db22a68d:;
		if (it != expr_end) {
			jule::Ptr<_1d7c4b415_traitHash> _109121_hash = *it;
			{
				{
					auto expr = &((*((*(_109121_hash))._field_t))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1db22b0d9:;
					if (it != expr_end) {
						jule::Ptr<_1d653226e_Fn> _109225_m = *it;
						{
							_1d7c56b6d_traitWrapper(_self_, &(_109225_m), &(_109121_hash));
						}
						_iter_next_1db22b0d9:;
						++it;
						goto _iter_begin_1db22b0d9;
					}
					_iter_end_1db22b0d9:;
				};
			}
			_iter_next_1db22a68d:;
			++it;
			goto _iter_begin_1db22a68d;
		}
		_iter_end_1db22a68d:;
	};
}



inline void _1d7c571ce_traitDataMethods(jule::Ptr<_1d7c4c856_ObjectCoder> _self_, jule::Ptr<_1d654554b_Trait>* _109841_t, jule::Ptr<_1d7c4b415_traitHash>* _109853_hash) {
	{
		auto expr = &((*((*(_109841_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1db22c1d9:;
		if (it != expr_end) {
			jule::Ptr<_1d653226e_Fn> _109921_m = *it;
			{
				_1e01838bc_StrBuilder _110017_mIdent = static__1e0183b64_New(static_cast<jule::I64>((*(_109921_m))._field_Ident.len()));;
				static__1d7b87b9d_func(&(_110017_mIdent), &(_109921_m));
				_1d7c4d8ac_indent(_self_);
				_1d7c4d00a_write(_self_, jule::Str::lit(".", 1));
				_1d7c4d2b3_writeBytes(_self_, _1e018d993_Buf(&_110017_mIdent));
				_1d7c4d00a_write(_self_, jule::Str::lit("=", 1));
				_1d7c4d2b3_writeBytes(_self_, _1e018d993_Buf(&_110017_mIdent));
				_1d7c4d00a_write(_self_, jule::Str::lit("_", 1));
				_1d7c4d00a_write(_self_, (*((*(_109853_hash))))._field_ti);
				_1d7c4d00a_write(_self_, jule::Str::lit("_", 1));
				_1d7c4d00a_write(_self_, _1d43131ea_Itoa((*((*(_109853_hash))))._field_i));
				_1d7c4d00a_write(_self_, jule::Str::lit(",\n", 2));
			}
			_iter_next_1db22c1d9:;
			++it;
			goto _iter_begin_1db22c1d9;
		}
		_iter_end_1db22c1d9:;
	};
}



inline void _1d7c57542_traitData(jule::Ptr<_1d7c4c856_ObjectCoder> _self_, jule::Ptr<_1d7c4b415_traitHash>* _111534_hash, jule::Ptr<_1d654554b_Trait>* _111557_old) {
	if (((*((*((*(_111534_hash))))._field_t))._field_Methods.len() == 0LL)) {
		return;;
	};
	_1e01838bc_StrBuilder _111913_ident = static__1e0183b64_New(static_cast<jule::I64>((*((*((*(_111534_hash))))._field_t))._field_Ident.len()));;
	static__1d7b88275_traitDecl(&(_111913_ident), (*((*(_111534_hash))))._field_t);
	if (((*((*(_111534_hash))))._field_t != (*(_111557_old)))) {
		if (((*(_111557_old)) != nullptr)) {
			_1d7c4d6ae_doneIndent(_self_);
			_1d7c4d8ac_indent(_self_);
			_1d7c4d00a_write(_self_, jule::Str::lit("};\n", 3));
		};
		_1d7c4d00a_write(_self_, jule::Str::lit("static ", 7));
		_1d7c4d2b3_writeBytes(_self_, _1e018d993_Buf(&_111913_ident));
		_1d7c4d00a_write(_self_, jule::Str::lit("MptrData ", 9));
		_1d7c4d2b3_writeBytes(_self_, _1e018d993_Buf(&_111913_ident));
		_1d7c4d00a_write(_self_, jule::Str::lit("_mptr_data[] = {\n", 17));
		(*(_111557_old))=(*((*(_111534_hash))))._field_t;
		_1d7c4d4b1_addIndent(_self_);
	};
	_1d7c4d8ac_indent(_self_);
	_1d7c4d00a_write(_self_, jule::Str::lit("{\n", 2));
	_1d7c4d4b1_addIndent(_self_);
	_1d7c571ce_traitDataMethods(_self_, &((*((*(_111534_hash))))._field_t), _111534_hash);
	_1d7c4d6ae_doneIndent(_self_);
	_1d7c4d8ac_indent(_self_);
	_1d7c4d00a_write(_self_, jule::Str::lit("},\n", 3));
}



inline void _1d7c57740_traitDatas(jule::Ptr<_1d7c4c856_ObjectCoder> _self_) {
	jule::Ptr<_1d654554b_Trait> _114517_old = nullptr;;
	{
		auto expr = &((*(_self_))._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1db2385d0:;
		if (it != expr_end) {
			jule::Ptr<_1d7c4b415_traitHash> _114621_hash = *it;
			{
				_1d7c57542_traitData(_self_, &(_114621_hash), &(_114517_old));
			}
			_iter_next_1db2385d0:;
			++it;
			goto _iter_begin_1db2385d0;
		}
		_iter_end_1db2385d0:;
	};
	if ((_114517_old != nullptr)) {
		_1d7c4d6ae_doneIndent(_self_);
		_1d7c4d8ac_indent(_self_);
		_1d7c4d00a_write(_self_, jule::Str::lit("};\n", 3));
	};
}



inline void _1d7c5793d_globals(jule::Ptr<_1d7c4c856_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Globals);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1db23a439:;
		if (it != expr_end) {
			jule::Ptr<_1d65d9018_Var> _115721_v = *it;
			{
				_1d7c63482_kind((*(_self_))._field_tc.ptr(), &((*(_self_))._field_Buf), (*((*(_115721_v))._field_Kind))._field_Kind);
				_1d7c4d00a_write(_self_, jule::Str::lit(" ", 1));
				static__1d7b89210_var(&((*(_self_))._field_Buf), _115721_v);
				_1d7c4d00a_write(_self_, jule::Str::lit(" = ", 3));
				_1d7b80844_model((*(_self_))._field_ec, (*((*((*(_115721_v))._field_Value))._field_Data))._field_Model);
				_1d7c4d00a_write(_self_, jule::Str::lit(";\n", 2));
			}
			_iter_next_1db23a439:;
			++it;
			goto _iter_begin_1db23a439;
		}
		_iter_end_1db23a439:;
	};
}



inline void _1d7c57b3b_decls(jule::Ptr<_1d7c4c856_ObjectCoder> _self_) {
	_1d7c51519_traitDecls(_self_);
	_1d7c519c0_structurePlainDecls(_self_);
	_1d7c5363c_structureDecls(_self_);
	(*(_self_))._field_headPos=static_cast<jule::I64>(_1e018d476_Len(&(*(_self_))._field_Buf));
	_1d7c5383a_structureMethodDecls(_self_);
	_1d7c54c48_funcDecls(_self_);
	_1d7c4d00a_write(_self_, jule::Str::lit("\n\n", 2));
	_1d7c552a9_traitDataTypes(_self_);
	_1d7c4d00a_write(_self_, jule::Str::lit("\n\n", 2));
	_1d7c56d6b_traitWrappers(_self_);
	_1d7c4d00a_write(_self_, jule::Str::lit("\n\n", 2));
	_1d7c57740_traitDatas(_self_);
	_1d7c4d00a_write(_self_, jule::Str::lit("\n\n", 2));
	(*(_self_))._field_declPos=static_cast<jule::I64>(_1e018d476_Len(&(*(_self_))._field_Buf));
	_1d7c5793d_globals(_self_);
}



inline void _1d7c57de4_structureMethods(jule::Ptr<_1d7c4c856_ObjectCoder> _self_, jule::Ptr<_1d652005e_StructIns>* _118541_s) {
	{
		auto expr = &((*((*(_118541_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1db243035:;
		if (it != expr_end) {
			jule::Ptr<_1d653226e_Fn> _118621_f = *it;
			{
				_1d7c56497_func(_self_, &(_118621_f));
				_1d7c4d00a_write(_self_, jule::Str::lit("\n\n", 2));
			}
			_iter_next_1db243035:;
			++it;
			goto _iter_begin_1db243035;
		}
		_iter_end_1db243035:;
	};
}



inline void _1d7c5819c_structureOstream(jule::Ptr<_1d7c4c856_ObjectCoder> _self_, jule::Ptr<_1d652005e_StructIns>* _119241_s) {
	_1d7c4d8ac_indent(_self_);
	_1d7c4d00a_write(_self_, jule::Str::lit("std::ostream &operator<<(std::ostream &_Stream, ", 48));
	static__1d7b88b38_structureIns(&((*(_self_))._field_Buf), _119241_s);
	_1d7c4d00a_write(_self_, jule::Str::lit(" _Src) {\n", 9));
	_1d7c4d4b1_addIndent(_self_);
	_1d7c4d8ac_indent(_self_);
	jule::Ptr<_1d653226e_Fn> _120013_fts = _1d65210c6_FindMethod((*(_119241_s)).ptr(), jule::Str::lit("Str", 3), false);;
	if (static__1d65da734_Str(_120013_fts)) {
		_1d7c4d00a_write(_self_, jule::Str::lit("_Stream << ", 11));
		static__1d7b87b9d_func(&((*(_self_))._field_Buf), &(_120013_fts));
		_1d7c4d00a_write(_self_, jule::Str::lit("(&_Src);\n", 9));
	} else {
		_1d7c4d00a_write(_self_, jule::Str::lit("_Stream << \"", 12));
		_1d7b815ae_cstrBytes(&((*(_self_))._field_Buf), (*((*((*(_119241_s))))._field_Decl))._field_Ident);
		_1d7c4d00a_write(_self_, jule::Str::lit("{\";\n", 4));
		{
			auto expr = &((*((*(_119241_s))))._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1db2479da:;
			if (it != expr_end) {
				jule::I64 _121018_i = it - expr->begin();
				jule::Ptr<_1d651e4ae_FieldIns> _121025_f = *it;
				{
					_1d7c4d8ac_indent(_self_);
					_1d7c4d00a_write(_self_, jule::Str::lit("_Stream << \"", 12));
					_1d7b815ae_cstrBytes(&((*(_self_))._field_Buf), (*((*(_121025_f))._field_Decl))._field_Ident);
					_1d7c4d00a_write(_self_, jule::Str::lit(":", 1));
					jule::Ptr<_1d652005e_StructIns> _121717_strct = _1d667b709_Struct((*(_121025_f))._field_Kind.ptr());;
					if ((((_121717_strct != nullptr) && ((*(_121717_strct))._field_Decl != nullptr)) && (*((*(_121717_strct))._field_Decl))._field_Binded)) {
						_1d7c4d00a_write(_self_, jule::Str::lit(" cpp.", 5));
						static__1d7b88e24_field(&((*(_self_))._field_Buf), &((*(_121025_f))._field_Decl));
						_1d7c4d00a_write(_self_, jule::Str::lit("\"", 1));
					} else {
						_1d7c4d00a_write(_self_, jule::Str::lit("\" << _Src.", 10));
						static__1d7b88e24_field(&((*(_self_))._field_Buf), &((*(_121025_f))._field_Decl));
					};
					if (((_121018_i + 1LL) < (*((*(_119241_s))))._field_Fields.len())) {
						_1d7c4d00a_write(_self_, jule::Str::lit(" << \", \"", 8));
					};
					_1d7c4d00a_write(_self_, jule::Str::lit(";\n", 2));
				}
				_iter_next_1db2479da:;
				++it;
				_121018_i++;
				goto _iter_begin_1db2479da;
			}
			_iter_end_1db2479da:;
		};
		_1d7c4d8ac_indent(_self_);
		_1d7c4d00a_write(_self_, jule::Str::lit("_Stream << \"}\";\n", 16));
	};
	_1d7c4d8ac_indent(_self_);
	_1d7c4d00a_write(_self_, jule::Str::lit("return _Stream;\n", 16));
	_1d7c4d6ae_doneIndent(_self_);
	_1d7c4d00a_write(_self_, jule::Str::lit("}", 1));
}



inline void _1d7c58455_structureIns(jule::Ptr<_1d7c4c856_ObjectCoder> _self_, jule::Ptr<_1d652005e_StructIns>* _124337_s) {
	_1d7c57de4_structureMethods(_self_, _124337_s);
	_1d7c4d00a_write(_self_, jule::Str::lit("\n\n", 2));
	_1d7c5819c_structureOstream(_self_, _124337_s);
}



inline void _1d7c5870d_structure(jule::Ptr<_1d7c4c856_ObjectCoder> _self_, jule::Ptr<_1d651c2d1_Struct>* _124934_s) {
	{
		auto expr = &((*((*(_124934_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1db251ede:;
		if (it != expr_end) {
			jule::Ptr<_1d652005e_StructIns> _125021_ins = *it;
			{
				_1d7c58455_structureIns(_self_, &(_125021_ins));
				_1d7c4d00a_write(_self_, jule::Str::lit("\n\n", 2));
			}
			_iter_next_1db251ede:;
			++it;
			goto _iter_begin_1db251ede;
		}
		_iter_end_1db251ede:;
	};
}



inline void _1d7c5890b_structures(jule::Ptr<_1d7c4c856_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1db25283b:;
		if (it != expr_end) {
			jule::Ptr<_1d651c2d1_Struct> _125721_s = *it;
			{
				if (((*(_125721_s))._field_Token != nullptr)) {
					_1d7c5870d_structure(_self_, &(_125721_s));
					_1d7c4d00a_write(_self_, jule::Str::lit("\n\n", 2));
				};
			}
			_iter_next_1db25283b:;
			++it;
			goto _iter_begin_1db25283b;
		}
		_iter_end_1db25283b:;
	};
}



inline void _1d7c58b09_funcs(jule::Ptr<_1d7c4c856_ObjectCoder> _self_) {
	_1d7c5111d_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1d6598835_Package>*)>([=](jule::Ptr<_1d6598835_Package>* _126635_pkg) mutable -> void {
		_1d7c59a94_iterFiles(_126635_pkg, jule::Fn<void(jule::Ptr<_1d6641d73_SymbolTable>*)>([=](jule::Ptr<_1d6641d73_SymbolTable>* _126736_file) mutable -> void {
			{
				auto expr = &((*((*(_126736_file))))._field_Funcs);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1db256aa4:;
				if (it != expr_end) {
					jule::Ptr<_1d653226e_Fn> _126829_f = *it;
					{
						if (((!(_208a422c8_Test)) && _1d7c6a654_hasDirective(&((*(_126829_f))._field_Directives), jule::Str::lit("test", 4)))) {
							goto _iter_next_1db256aa4;
						};
						if (((!((*(_126829_f))._field_Binded)) && ((*(_126829_f))._field_Token != nullptr))) {
							_1d7c56497_func(_self_, &(_126829_f));
							_1d7c4d00a_write(_self_, jule::Str::lit("\n\n", 2));
						};
					}
					_iter_next_1db256aa4:;
					++it;
					goto _iter_begin_1db256aa4;
				}
				_iter_end_1db256aa4:;
			};
		}));
	}));
}



inline void _1d7c58db2_pushInit(jule::Ptr<_1d7c4c856_ObjectCoder> _self_, jule::Ptr<_1d6598835_Package>* _128133_pkg) {
	_1d7c59a94_iterFiles(_128133_pkg, jule::Fn<void(jule::Ptr<_1d6641d73_SymbolTable>*)>([=](jule::Ptr<_1d6641d73_SymbolTable>* _128232_file) mutable -> void {
		{
			auto expr = &((*((*(_128232_file))))._field_Funcs);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1db259645:;
			if (it != expr_end) {
				jule::Ptr<_1d653226e_Fn> _128320_f = *it;
				{
					if ((*(_128320_f))._field_Ident.equal("init", 4)) {
						_1d7c4d8ac_indent(_self_);
						static__1d7b87b9d_func(&((*(_self_))._field_Buf), &(_128320_f));
						_1d7c4d00a_write(_self_, jule::Str::lit("();\n", 4));
					};
				}
				_iter_next_1db259645:;
				++it;
				goto _iter_begin_1db259645;
			}
			_iter_end_1db259645:;
		};
	}));
}



inline void _1d7c590b0_initCaller(jule::Ptr<_1d7c4c856_ObjectCoder> _self_) {
	_1d7c4d00a_write(_self_, jule::Str::lit("void __jule_call_initializers(void) {\n", 38));
	_1d7c4d4b1_addIndent(_self_);
	_1d7c5111d_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1d6598835_Package>*)>([=](jule::Ptr<_1d6598835_Package>* _129635_pkg) mutable -> void {
		_1d7c58db2_pushInit(_self_, _129635_pkg);
	}));
	_1d7c4d6ae_doneIndent(_self_);
	_1d7c4d00a_write(_self_, jule::Str::lit("\n}", 2));
}



inline void _1d7c592ad_end(jule::Ptr<_1d7c4c856_ObjectCoder> _self_) {
	_1d7c4d00a_write(_self_, jule::Str::lit("int main(int argc, char *argv[], char *envp[]) {\n    jule::setup_argv(argc, argv);\n    jule::setup_envp(envp);\n\n    __jule_call_initializers();\n    ", 148));
	if (_208a422c8_Test) {
		_1d7c4d00a_write(_self_, jule::Str::lit("test_point();", 13));
	} else {
		_1d7c4d00a_write(_self_, jule::Str::lit("entry_point();", 14));
	};
	_1d7c4d00a_write(_self_, jule::Str::lit("\n\n    return EXIT_SUCCESS;\n}", 28));
}



inline void _1d7c594ab_serializeHead(jule::Ptr<_1d7c4c856_ObjectCoder> _self_) {
	_1d7c50d65_prepareStructures(_self_);
	_1d7c5131b_buildTraitMap(_self_);
	_1d7c506b1_head(_self_);
	_1d7c4d00a_write(_self_, jule::Str::lit("\n", 1));
	_1d7c57b3b_decls(_self_);
	if ((_1e018d476_Len(&(*(_self_))._field_resultDecls) > 0LL)) {
		jule::Slice<jule::U8> _133117_head = jule::Slice<jule::U8>::alloc(0LL, (_1e018d476_Len(&(*(_self_))._field_Buf) + _1e018d476_Len(&(*(_self_))._field_resultDecls)), 0);;
		(_133117_head).append(_1e018d993_Buf(&(*(_self_))._field_Buf).slice(0LL, (*(_self_))._field_headPos));;
		(_133117_head).append(_1e018d993_Buf(&(*(_self_))._field_resultDecls));;
		(*(_self_))._field_declPos+=_1e018d476_Len(&(*(_self_))._field_resultDecls);
		(_133117_head).append(_1e018d993_Buf(&(*(_self_))._field_Buf).slice((*(_self_))._field_headPos));;
		{
			_1e018dc4b_SetBuf(&(*(_self_))._field_Buf, _133117_head);
		};
	};
	_1d7c4d00a_write(_self_, jule::Str::lit("\n", 1));
	_1d7c5890b_structures(_self_);
	_1d7c58b09_funcs(_self_);
	_1d7c590b0_initCaller(_self_);
	_1d7c4d00a_write(_self_, jule::Str::lit("\n\n", 2));
	if ((_1e018d476_Len(&(*(_self_))._field_anyObj) > 0LL)) {
		jule::Slice<jule::U8> _134617_head = jule::Slice<jule::U8>::alloc(0LL, (_1e018d476_Len(&(*(_self_))._field_Buf) + _1e018d476_Len(&(*(_self_))._field_anyObj)), 0);;
		(_134617_head).append(_1e018d993_Buf(&(*(_self_))._field_Buf).slice(0LL, (*(_self_))._field_declPos));;
		(_134617_head).append(_1e018d993_Buf(&(*(_self_))._field_anyObj));;
		(_134617_head).append(_1e018d993_Buf(&(*(_self_))._field_Buf).slice((*(_self_))._field_declPos));;
		{
			_1e018dc4b_SetBuf(&(*(_self_))._field_Buf, _134617_head);
		};
	};
}



inline void _1d7c596a9_Serialize(jule::Ptr<_1d7c4c856_ObjectCoder> _self_) {
	_1d7c594ab_serializeHead(_self_);
	_1d7c592ad_end(_self_);
}





std::ostream &operator<<(std::ostream &_Stream, _1d7c4c856_ObjectCoder _Src) {
	_Stream << "ObjectCoder{";
	_Stream << "Buf:" << _Src._field_Buf << ", ";
	_Stream << "resultDecls:" << _Src._field_resultDecls << ", ";
	_Stream << "anyObj:" << _Src._field_anyObj << ", ";
	_Stream << "ir:" << _Src._field_ir << ", ";
	_Stream << "info:" << _Src._field_info << ", ";
	_Stream << "tmap:" << _Src._field_tmap << ", ";
	_Stream << "indentBuffer:" << _Src._field_indentBuffer << ", ";
	_Stream << "resultMap:" << _Src._field_resultMap << ", ";
	_Stream << "anyTypeMap:" << _Src._field_anyTypeMap << ", ";
	_Stream << "traitCastMap:" << _Src._field_traitCastMap << ", ";
	_Stream << "ec:" << _Src._field_ec << ", ";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "tc:" << _Src._field_tc << ", ";
	_Stream << "headPos:" << _Src._field_headPos << ", ";
	_Stream << "declPos:" << _Src._field_declPos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1d7292c15_ObjectDeadCode> static__1d72931aa_new(jule::Ptr<_1d7166787_IR>* _3424_ir) {
	return jule::new_ptr<_1d7292c15_ObjectDeadCode>(_1d7292c15_ObjectDeadCode{._field_ir=(*(_3424_ir))});;
}



inline jule::Bool _1daa4a563_isLive(jule::Ptr<_1d7292c15_ObjectDeadCode> _self_, jule::Ptr<_1d654554b_Trait>* _4030_t) {
	jule::Slice<jule::Ptr<_1d654554b_Trait>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1daa4c334:;
			{
				_4117_live=(*(_self_))._field_live._field_traits;
			}
		}
		_match_end_1daa4c136:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1daa4bee3:;
		if (it != expr_end) {
			jule::I64 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1daa4bee3:;
			++it;
			_5213_i++;
			goto _iter_begin_1daa4bee3;
		}
		_iter_end_1daa4bee3:;
	};
	return false;;
}

inline jule::Bool _1daa510d5_isLive(jule::Ptr<_1d7292c15_ObjectDeadCode> _self_, jule::Ptr<_1d6535173_FnIns>* _4030_t) {
	jule::Slice<jule::Ptr<_1d6535173_FnIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1daa52bb9:;
			{
				_4117_live=(*(_self_))._field_live._field_fns;
			}
		}
		_match_end_1daa52b0e:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1daa53181:;
		if (it != expr_end) {
			jule::I64 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1daa53181:;
			++it;
			_5213_i++;
			goto _iter_begin_1daa53181;
		}
		_iter_end_1daa53181:;
	};
	return false;;
}

inline jule::Bool _1daa56dbb_isLive(jule::Ptr<_1d7292c15_ObjectDeadCode> _self_, jule::Ptr<_1d652005e_StructIns>* _4030_t) {
	jule::Slice<jule::Ptr<_1d652005e_StructIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1daa5b92b:;
			{
				_4117_live=(*(_self_))._field_live._field_structs;
			}
		}
		_match_end_1daa5b794:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1daa5c322:;
		if (it != expr_end) {
			jule::I64 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1daa5c322:;
			++it;
			_5213_i++;
			goto _iter_begin_1daa5c322;
		}
		_iter_end_1daa5c322:;
	};
	return false;;
}

inline jule::Bool _1daa5e247_isLive(jule::Ptr<_1d7292c15_ObjectDeadCode> _self_, jule::Ptr<_1d65d9018_Var>* _4030_t) {
	jule::Slice<jule::Ptr<_1d65d9018_Var>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1daa60de7:;
			{
				_4117_live=(*(_self_))._field_live._field_vars;
			}
		}
		_match_end_1daa60cc6:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1daa6137b:;
		if (it != expr_end) {
			jule::I64 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1daa6137b:;
			++it;
			_5213_i++;
			goto _iter_begin_1daa6137b;
		}
		_iter_end_1daa6137b:;
	};
	return false;;
}



inline void _1daa4a970_pushLive(jule::Ptr<_1d7292c15_ObjectDeadCode> _self_, jule::Ptr<_1d654554b_Trait> _6035_t) {
	{
		
{
			_case_begin_1daa4e501:;
			{
				{ jule::Slice<jule::Ptr<_1d654554b_Trait>> &__jule_push_dest = (*(_self_))._field_live._field_traits; __jule_push_dest.push(_6035_t); };
			}
		}
		_match_end_1daa4e2e2:;
	};
}

inline void _1daa5148c_pushLive(jule::Ptr<_1d7292c15_ObjectDeadCode> _self_, jule::Ptr<_1d6535173_FnIns> _6035_t) {
	{
		
{
			_case_begin_1daa55507:;
			{
				{ jule::Slice<jule::Ptr<_1d6535173_FnIns>> &__jule_push_dest = (*(_self_))._field_live._field_fns; __jule_push_dest.push(_6035_t); };
			}
		}
		_match_end_1daa553d6:;
	};
}

inline void _1daa574c6_pushLive(jule::Ptr<_1d7292c15_ObjectDeadCode> _self_, jule::Ptr<_1d652005e_StructIns> _6035_t) {
	{
		
{
			_case_begin_1daa58c7a:;
			{
				{ jule::Slice<jule::Ptr<_1d652005e_StructIns>> &__jule_push_dest = (*(_self_))._field_live._field_structs; __jule_push_dest.push(_6035_t); };
			}
		}
		_match_end_1daa58ae3:;
	};
}

inline void _1daa5e654_pushLive(jule::Ptr<_1d7292c15_ObjectDeadCode> _self_, jule::Ptr<_1d65d9018_Var> _6035_t) {
	{
		
{
			_case_begin_1daa63438:;
			{
				{ jule::Slice<jule::Ptr<_1d65d9018_Var>> &__jule_push_dest = (*(_self_))._field_live._field_vars; __jule_push_dest.push(_6035_t); };
			}
		}
		_match_end_1daa6337d:;
	};
}



inline void _1d72c354d_setReferencesAsLive(jule::Ptr<_1d7292c15_ObjectDeadCode> _self_, jule::Ptr<_1d6538341_ReferenceStack>* _7344_rs) {
	if (((*(_7344_rs)) == nullptr)) {
		return;;
	};
	jule::I64 _7713_i = 0LL;;
	for (; (_7713_i < _1d6538a39_Len((*(_7344_rs)).ptr())); (_7713_i)++) {
		{
			jule::Any _7917_ref = _1d6538d7a_At((*(_7344_rs)).ptr(), _7713_i);;
			{
				auto &_match_expr{ _7917_ref };
				
				if (_match_expr.type == &__jule_any_type10) {
					_case_begin_1daa492cb:;
					{
						jule::Ptr<_1d654554b_Trait> _8221_t = _7917_ref.cast_ptr<_1d654554b_Trait>(&__jule_any_type10);;
						if (_1daa4a563_isLive(_self_, &(_8221_t))) {
							goto _iter_next_1daa4851c;
						};
						_1daa4a970_pushLive(_self_, _8221_t);
						{
							auto expr = &((*(_8221_t))._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1daa49ee1:;
							if (it != expr_end) {
								jule::Ptr<_1d653226e_Fn> _8729_ins = *it;
								{
									{
										auto expr = &((*(_8729_ins))._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1daa4b278:;
										if (it != expr_end) {
											jule::Ptr<_1d6535173_FnIns> _8833_mins = *it;
											{
												if (_1daa510d5_isLive(_self_, &(_8833_mins))) {
													goto _iter_next_1daa4b278;
												};
												_1daa5148c_pushLive(_self_, _8833_mins);
												_1d72c354d_setReferencesAsLive(_self_, &((*(_8833_mins))._field_Refers));
											}
											_iter_next_1daa4b278:;
											++it;
											goto _iter_begin_1daa4b278;
										}
										_iter_end_1daa4b278:;
									};
								}
								_iter_next_1daa49ee1:;
								++it;
								goto _iter_begin_1daa49ee1;
							}
							_iter_end_1daa49ee1:;
						};
					}
				}
				else if (_match_expr.type == &__jule_any_type7) {
					_case_begin_1daa49342:;
					{
						jule::Ptr<_1d6535173_FnIns> _9721_f = _7917_ref.cast_ptr<_1d6535173_FnIns>(&__jule_any_type7);;
						if (_1daa510d5_isLive(_self_, &(_9721_f))) {
							goto _match_end_1daa48b8d;
						};
						if ((((*(_9721_f))._field_Owner != nullptr) && (!((*((*(_9721_f))._field_Decl))._field_Statically)))) {
							if ((!(_1daa56dbb_isLive(_self_, &((*(_9721_f))._field_Owner))))) {
								_1daa574c6_pushLive(_self_, (*(_9721_f))._field_Owner);
								_1d72c354d_setReferencesAsLive(_self_, &((*((*(_9721_f))._field_Owner))._field_Refers));
							};
						};
						_1daa5148c_pushLive(_self_, _9721_f);
						_1d72c354d_setReferencesAsLive(_self_, &((*(_9721_f))._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type8) {
					_case_begin_1daa493a8:;
					{
						jule::Ptr<_1d65d9018_Var> _11021_v = _7917_ref.cast_ptr<_1d65d9018_Var>(&__jule_any_type8);;
						if (_1daa5e247_isLive(_self_, &(_11021_v))) {
							goto _match_end_1daa48b8d;
						};
						_1daa5e654_pushLive(_self_, _11021_v);
						_1d72c354d_setReferencesAsLive(_self_, &((*(_11021_v))._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type9) {
					_case_begin_1daa4941e:;
					{
						jule::Ptr<_1d652005e_StructIns> _11721_s = _7917_ref.cast_ptr<_1d652005e_StructIns>(&__jule_any_type9);;
						if (_1daa56dbb_isLive(_self_, &(_11721_s))) {
							goto _match_end_1daa48b8d;
						};
						_1daa574c6_pushLive(_self_, _11721_s);
						_1d72c354d_setReferencesAsLive(_self_, &((*(_11721_s))._field_Refers));
						{
							auto expr = &((*(_11721_s))._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1daa64c64:;
							if (it != expr_end) {
								jule::Ptr<_1d653226e_Fn> _12329_m = *it;
								{
									{
										auto expr = &((*(_12329_m))._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1daa6642a:;
										if (it != expr_end) {
											jule::Ptr<_1d6535173_FnIns> _12433_ins = *it;
											{
												if (_1daa510d5_isLive(_self_, &(_12433_ins))) {
													goto _iter_next_1daa6642a;
												};
												if (_1d72c6221_isTraitMethod(&(_11721_s), &(_12433_ins))) {
													_1daa5148c_pushLive(_self_, _12433_ins);
													_1d72c354d_setReferencesAsLive(_self_, &((*(_12433_ins))._field_Refers));
												};
											}
											_iter_next_1daa6642a:;
											++it;
											goto _iter_begin_1daa6642a;
										}
										_iter_end_1daa6642a:;
									};
								}
								_iter_next_1daa64c64:;
								++it;
								goto _iter_begin_1daa64c64;
							}
							_iter_end_1daa64c64:;
						};
					}
				}
				_match_end_1daa48b8d:;
			};
		}
	_iter_next_1daa4851c:;
	}
	_iter_end_1daa4851c:;;
}



inline void _1d72c3806_inits(jule::Ptr<_1d7292c15_ObjectDeadCode> _self_, jule::Ptr<_1d6598835_Package>* _14130_pkg) {
	{
		auto expr = &((*((*(_14130_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1daa5d796:;
		if (it != expr_end) {
			jule::Ptr<_1d6641d73_SymbolTable> _14221_file = *it;
			{
				{
					auto expr = &((*(_14221_file))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1daa66c77:;
					if (it != expr_end) {
						jule::Ptr<_1d653226e_Fn> _14325_f = *it;
						{
							if ((*(_14325_f))._field_Ident.equal("init", 4)) {
								jule::Ptr<_1d6535173_FnIns> _14525_ins = (*(_14325_f))._field_Instances[0LL];;
								{ jule::Slice<jule::Ptr<_1d6535173_FnIns>> &__jule_push_dest = (*(_self_))._field_live._field_fns; __jule_push_dest.push(_14525_ins); };
								_1d72c354d_setReferencesAsLive(_self_, &((*(_14525_ins))._field_Refers));
							};
						}
						_iter_next_1daa66c77:;
						++it;
						goto _iter_begin_1daa66c77;
					}
					_iter_end_1daa66c77:;
				};
			}
			_iter_next_1daa5d796:;
			++it;
			goto _iter_begin_1daa5d796;
		}
		_iter_end_1daa5d796:;
	};
}



inline void _1d72c3aae_collectLivePackage(jule::Ptr<_1d7292c15_ObjectDeadCode> _self_, jule::Ptr<_1d6598835_Package>* _15343_pkg) {
	_1d72c3806_inits(_self_, _15343_pkg);
	if (_208a422c8_Test) {
		{
			auto expr = &((*((*(_15343_pkg))))._field_Files);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1daa6ac15:;
			if (it != expr_end) {
				jule::Ptr<_1d6641d73_SymbolTable> _15925_file = *it;
				{
					{
						auto expr = &((*(_15925_file))._field_Funcs);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1daa6b661:;
						if (it != expr_end) {
							jule::Ptr<_1d653226e_Fn> _16029_f = *it;
							{
								if (_1d72c5d58_hasDirective(&((*(_16029_f))._field_Directives), jule::Str::lit("test", 4))) {
									jule::Ptr<_1d6535173_FnIns> _16229_ins = (*(_16029_f))._field_Instances[0LL];;
									{ jule::Slice<jule::Ptr<_1d6535173_FnIns>> &__jule_push_dest = (*(_self_))._field_live._field_fns; __jule_push_dest.push(_16229_ins); };
									_1d72c354d_setReferencesAsLive(_self_, &((*(_16229_ins))._field_Refers));
								};
							}
							_iter_next_1daa6b661:;
							++it;
							goto _iter_begin_1daa6b661;
						}
						_iter_end_1daa6b661:;
					};
				}
				_iter_next_1daa6ac15:;
				++it;
				goto _iter_begin_1daa6ac15;
			}
			_iter_end_1daa6ac15:;
		};
	};
}



inline void _1d72c3cac_collectLive(jule::Ptr<_1d7292c15_ObjectDeadCode> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1daa6c343:;
		if (it != expr_end) {
			jule::Ptr<_1d659590e_ImportInfo> _17221_used = *it;
			{
				if ((!((*(_17221_used))._field_Binded))) {
					_1d72c3aae_collectLivePackage(_self_, &((*(_17221_used))._field_Package));
				};
			}
			_iter_next_1daa6c343:;
			++it;
			goto _iter_begin_1daa6c343;
		}
		_iter_end_1daa6c343:;
	};
	_1d72c3aae_collectLivePackage(_self_, &((*((*(_self_))._field_ir))._field_Main));
	jule::Ptr<_1d653226e_Fn> _18013_main = _1d6599db9_FindFn((*((*(_self_))._field_ir))._field_Main.ptr(), jule::Str::lit("main", 4), false);;
	jule::Ptr<_1d6535173_FnIns> _18113_ins = (*(_18013_main))._field_Instances[0LL];;
	{ jule::Slice<jule::Ptr<_1d6535173_FnIns>> &__jule_push_dest = (*(_self_))._field_live._field_fns; __jule_push_dest.push(_18113_ins); };
	_1d72c354d_setReferencesAsLive(_self_, &((*(_18113_ins))._field_Refers));
}



inline void _1d72c4065_removeDeadGlobals(jule::Ptr<_1d7292c15_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1d65d9018_Var>>* _18642_vars) {
	jule::I64 _18713_i = 0LL;;
	while ((_18713_i < (*(_18642_vars)).len())) {
		{
			jule::Ptr<_1d65d9018_Var> _18913_v = (*(_18642_vars))[_18713_i];;
			if (_1daa5e247_isLive(_self_, &(_18913_v))) {
				(_18713_i)++;
				goto _iter_next_1daa72a0d;
			};
			(*(_18642_vars))=jule::append((*(_18642_vars)).slice(0LL, _18713_i),(*(_18642_vars)).slice((_18713_i + 1LL)));
		}
	_iter_next_1daa72a0d:;
	}
	_iter_end_1daa72a0d:;;
}



inline void _1d72c431d_removeDeadFns(jule::Ptr<_1d7292c15_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1d653226e_Fn>>* _19838_funcs) {
	jule::I64 _19913_i = 0LL;;
	while ((_19913_i < (*(_19838_funcs)).len())) {
		{
			jule::Ptr<_1d653226e_Fn> _20117_f = (*(_19838_funcs))[_19913_i];;
			jule::I64 _20217_j = 0LL;;
			while ((_20217_j < (*(_20117_f))._field_Instances.len())) {
				{
					jule::Ptr<_1d6535173_FnIns> _20417_ins = (*(_20117_f))._field_Instances[_20217_j];;
					if (_1daa510d5_isLive(_self_, &(_20417_ins))) {
						(_20217_j)++;
						goto _iter_next_1daa75406;
					};
					(*(_20117_f))._field_Instances=jule::append((*(_20117_f))._field_Instances.slice(0LL, _20217_j),(*(_20117_f))._field_Instances.slice((_20217_j + 1LL)));
				}
			_iter_next_1daa75406:;
			}
			_iter_end_1daa75406:;;
			if (((*(_20117_f))._field_Instances.len() == 0LL)) {
				(*(_19838_funcs))=jule::append((*(_19838_funcs)).slice(0LL, _19913_i),(*(_19838_funcs)).slice((_19913_i + 1LL)));
				goto _iter_next_1daa74614;
			};
			(_19913_i)++;
		}
	_iter_next_1daa74614:;
	}
	_iter_end_1daa74614:;;
}



inline void _1d72c45c6_removeDeadStructs(jule::Ptr<_1d7292c15_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1d651c2d1_Struct>>* _21942_structs) {
	jule::I64 _22013_i = 0LL;;
	while ((_22013_i < (*(_21942_structs)).len())) {
		{
			jule::Ptr<_1d651c2d1_Struct> _22217_s = (*(_21942_structs))[_22013_i];;
			jule::I64 _22317_j = 0LL;;
			while ((_22317_j < (*(_22217_s))._field_Instances.len())) {
				{
					jule::Ptr<_1d652005e_StructIns> _22521_ins = (*(_22217_s))._field_Instances[_22317_j];;
					_1d72c431d_removeDeadFns(_self_, &((*(_22521_ins))._field_Methods));
					if ((((*(_22521_ins))._field_Methods.len() != 0LL) || _1daa56dbb_isLive(_self_, &(_22521_ins)))) {
						(_22317_j)++;
						goto _iter_next_1daa791a7;
					};
					(*(_22217_s))._field_Instances=jule::append((*(_22217_s))._field_Instances.slice(0LL, _22317_j),(*(_22217_s))._field_Instances.slice((_22317_j + 1LL)));
				}
			_iter_next_1daa791a7:;
			}
			_iter_end_1daa791a7:;;
			if (((*(_22217_s))._field_Instances.len() == 0LL)) {
				(*(_21942_structs))=jule::append((*(_21942_structs)).slice(0LL, _22013_i),(*(_21942_structs)).slice((_22013_i + 1LL)));
				goto _iter_next_1daa783a4;
			};
			(_22013_i)++;
		}
	_iter_next_1daa783a4:;
	}
	_iter_end_1daa783a4:;;
}



inline void _1d72c487e_removeDeadTraits(jule::Ptr<_1d7292c15_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1d654554b_Trait>>* _24141_traits) {
	jule::I64 _24213_i = 0LL;;
	while ((_24213_i < (*(_24141_traits)).len())) {
		{
			jule::Ptr<_1d654554b_Trait> _24417_t = (*(_24141_traits))[_24213_i];;
			if ((!(_1daa4a563_isLive(_self_, &(_24417_t))))) {
				(*(_24141_traits))=jule::append((*(_24141_traits)).slice(0LL, _24213_i),(*(_24141_traits)).slice((_24213_i + 1LL)));
				goto _iter_next_1daa7cbb1;
			};
			jule::I64 _24917_j = 0LL;;
			while ((_24917_j < (*(_24417_t))._field_Implemented.len())) {
				{
					jule::Ptr<_1d651c2d1_Struct> _25117_s = (*(_24417_t))._field_Implemented[_24917_j];;
					if (((*(_25117_s))._field_Instances.len() > 0LL)) {
						(_24917_j)++;
						goto _iter_next_1daa7d541;
					};
					(*(_24417_t))._field_Implemented=jule::append((*(_24417_t))._field_Implemented.slice(0LL, _24917_j),(*(_24417_t))._field_Implemented.slice((_24917_j + 1LL)));
				}
			_iter_next_1daa7d541:;
			}
			_iter_end_1daa7d541:;;
			(_24213_i)++;
		}
	_iter_next_1daa7cbb1:;
	}
	_iter_end_1daa7cbb1:;;
}



inline void _1d72c4b37_removeDeadsFile(jule::Ptr<_1d7292c15_ObjectDeadCode> _self_, jule::Ptr<_1d6641d73_SymbolTable>* _26240_file) {
	_1d72c431d_removeDeadFns(_self_, &((*((*(_26240_file))))._field_Funcs));
	_1d72c45c6_removeDeadStructs(_self_, &((*((*(_26240_file))))._field_Structs));
	_1d72c487e_removeDeadTraits(_self_, &((*((*(_26240_file))))._field_Traits));
	_1d72c4065_removeDeadGlobals(_self_, &((*((*(_26240_file))))._field_Vars));
}



inline void _1d72c4de0_removeDeadsPackage(jule::Ptr<_1d7292c15_ObjectDeadCode> _self_, jule::Ptr<_1d6598835_Package>* _26943_pkg) {
	{
		auto expr = &((*((*(_26943_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1daa8327c:;
		if (it != expr_end) {
			jule::Ptr<_1d6641d73_SymbolTable> _27021_file = *it;
			{
				_1d72c4b37_removeDeadsFile(_self_, &(_27021_file));
			}
			_iter_next_1daa8327c:;
			++it;
			goto _iter_begin_1daa8327c;
		}
		_iter_end_1daa8327c:;
	};
}



inline void _1d72c50dd_removeDeads(jule::Ptr<_1d7292c15_ObjectDeadCode> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1daa83b2e:;
		if (it != expr_end) {
			jule::Ptr<_1d659590e_ImportInfo> _27621_used = *it;
			{
				if ((!((*(_27621_used))._field_Binded))) {
					_1d72c4de0_removeDeadsPackage(_self_, &((*(_27621_used))._field_Package));
				};
			}
			_iter_next_1daa83b2e:;
			++it;
			goto _iter_begin_1daa83b2e;
		}
		_iter_end_1daa83b2e:;
	};
	_1d72c4de0_removeDeadsPackage(_self_, &((*((*(_self_))._field_ir))._field_Main));
}



inline void _1d72c52db_elimanate(jule::Ptr<_1d7292c15_ObjectDeadCode> _self_) {
	_1d72c3cac_collectLive(_self_);
	_1d72c50dd_removeDeads(_self_);
}





std::ostream &operator<<(std::ostream &_Stream, _1d7292c15_ObjectDeadCode _Src) {
	_Stream << "ObjectDeadCode{";
	_Stream << "live:" << _Src._field_live << ", ";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_x_1d7166787_IR__jule_tuple_s_1e0235a7e_Log static__1d7166be9_Build(jule::Str _2721_path, jule::I64 _2732_flags) {
	__jule_tuple_x_1d7166787_IR__jule_tuple_s_1e0235a7e_Log __jule_func_result;
	jule::Ptr<_1d7163e49_JuleImporter> _2813_importer = static__1d7164345_New(_1d71686ce_buildCompileInfo());;
	jule::Slice<jule::Ptr<_1d64e9423_Ast>> _2913_files;;
	jule::Slice<_1e0235a7e_Log> _2924_logs;;
	({
		__jule_tuple_sx_1d64e9423_Ast__jule_tuple_s_1e0235a7e_Log __jule_assign_result = _1d7165830_ImportPackage(_2813_importer.ptr(), _2721_path, true);
		_2913_files = __jule_assign_result.__jule_result_arg0;
		_2924_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2924_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _2924_logs;
		return __jule_func_result;;
	};
	jule::Str _339_root = _2721_path;;
	if ((_2913_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_1d6598835_Package> _3913_pkg;;
	({
		__jule_tuple_x_1d6598835_Package__jule_tuple_s_1e0235a7e_Log __jule_assign_result = _1d6698c10_AnalyzePackage(_2913_files, jule::Trait<_1d65929e9_Importer>(_2813_importer, 0), _2732_flags);
		_3913_pkg = __jule_assign_result.__jule_result_arg0;
		_2924_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2924_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _2924_logs;
		return __jule_func_result;;
	};
	jule::Ptr<_1d7166787_IR> _4413_ir = jule::new_ptr<_1d7166787_IR>(_1d7166787_IR{._field_Root=_339_root, ._field_Main=_3913_pkg, ._field_Used=_1d71645cb_AllPackages(_2813_importer.ptr()), });;
	(*(_4413_ir))._field_Passes=_1d71684c0_getAllUniquePasses(&((*(_4413_ir))._field_Main), (*(_4413_ir))._field_Used);
	__jule_func_result.__jule_result_arg0 = _4413_ir;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1d71671d3_appendStructs(_1d7166787_IR* _self_, jule::Ptr<_1d6598835_Package>* _5633_p, jule::Slice<jule::Ptr<_1d651c2d1_Struct>>* _5657_buffer) {
	{
		auto expr = &((*((*(_5633_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1daa111d8:;
		if (it != expr_end) {
			jule::Ptr<_1d6641d73_SymbolTable> _5721_f = *it;
			{
				{
					auto expr = &((*(_5721_f))._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1daa11b34:;
					if (it != expr_end) {
						jule::Ptr<_1d651c2d1_Struct> _5825_s = *it;
						{
							if ((!((*(_5825_s))._field_Binded))) {
								{ jule::Slice<jule::Ptr<_1d651c2d1_Struct>> &__jule_push_dest = (*(_5657_buffer)); __jule_push_dest.push(_5825_s); };
							};
						}
						_iter_next_1daa11b34:;
						++it;
						goto _iter_begin_1daa11b34;
					}
					_iter_end_1daa11b34:;
				};
			}
			_iter_next_1daa111d8:;
			++it;
			goto _iter_begin_1daa111d8;
		}
		_iter_end_1daa111d8:;
	};
}



inline jule::Slice<jule::Ptr<_1d651c2d1_Struct>> _1d7167469_GetAllStructures(_1d7166787_IR* _self_) {
	jule::Slice<jule::Ptr<_1d651c2d1_Struct>> _6917_buffer = nullptr;;
	_1d71671d3_appendStructs(_self_, &((*(_self_))._field_Main), &(_6917_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1daa12b46:;
		if (it != expr_end) {
			jule::Ptr<_1d659590e_ImportInfo> _7121_u = *it;
			{
				if ((!((*(_7121_u))._field_Binded))) {
					_1d71671d3_appendStructs(_self_, &((*(_7121_u))._field_Package), &(_6917_buffer));
				};
			}
			_iter_next_1daa12b46:;
			++it;
			goto _iter_begin_1daa12b46;
		}
		_iter_end_1daa12b46:;
	};
	return _6917_buffer;;
}



inline void _1d71677cc_appendGlobals(_1d7166787_IR* _self_, jule::Ptr<_1d6598835_Package>* _7933_p, jule::Slice<jule::Ptr<_1d65d9018_Var>>* _7957_buffer) {
	{
		auto expr = &((*((*(_7933_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1daa144b6:;
		if (it != expr_end) {
			jule::Ptr<_1d6641d73_SymbolTable> _8021_f = *it;
			{
				{
					auto expr = &((*(_8021_f))._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1daa14e12:;
					if (it != expr_end) {
						jule::Ptr<_1d65d9018_Var> _8125_v = *it;
						{
							if (((((*(_8125_v))._field_Token != nullptr) && (!((*(_8125_v))._field_Binded))) && (!((*(_8125_v))._field_Constant)))) {
								{ jule::Slice<jule::Ptr<_1d65d9018_Var>> &__jule_push_dest = (*(_7957_buffer)); __jule_push_dest.push(_8125_v); };
							};
						}
						_iter_next_1daa14e12:;
						++it;
						goto _iter_begin_1daa14e12;
					}
					_iter_end_1daa14e12:;
				};
			}
			_iter_next_1daa144b6:;
			++it;
			goto _iter_begin_1daa144b6;
		}
		_iter_end_1daa144b6:;
	};
}



inline jule::Slice<jule::Ptr<_1d65d9018_Var>> _1d7167a63_GetAllGlobals(_1d7166787_IR* _self_) {
	jule::Slice<jule::Ptr<_1d65d9018_Var>> _9217_buffer = nullptr;;
	_1d71677cc_appendGlobals(_self_, &((*(_self_))._field_Main), &(_9217_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1daa1541d:;
		if (it != expr_end) {
			jule::Ptr<_1d659590e_ImportInfo> _9421_u = *it;
			{
				if ((!((*(_9421_u))._field_Binded))) {
					_1d71677cc_appendGlobals(_self_, &((*(_9421_u))._field_Package), &(_9217_buffer));
				};
			}
			_iter_next_1daa1541d:;
			++it;
			goto _iter_begin_1daa1541d;
		}
		_iter_end_1daa1541d:;
	};
	return _9217_buffer;;
}



inline void _1d7167c61_Order(_1d7166787_IR* _self_) {
	(*(_self_))._field_Ordered._field_Structs=_1d7167469_GetAllStructures(_self_);
	(*(_self_))._field_Ordered._field_Globals=_1d7167a63_GetAllGlobals(_self_);
	static__1d7169a98_orderStructures(&((*(_self_))._field_Ordered._field_Structs));
	static__1d7169cc9_orderVars(&((*(_self_))._field_Ordered._field_Globals));
}





std::ostream &operator<<(std::ostream &_Stream, _1d7166787_IR _Src) {
	_Stream << "IR{";
	_Stream << "Root:" << _Src._field_Root << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Main:" << _Src._field_Main << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Ordered:" << _Src._field_Ordered;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1d65203d3_Str(_1d652005e_StructIns* _self_) {
	_1e01838bc_StrBuilder _23913_kind = static__1e0183b64_New(32LL);;
	_1e018c6ea_WriteStr(&_23913_kind, (*((*(_self_))._field_Decl))._field_Ident);
	if (((*(_self_))._field_Generics.len() > 0LL)) {
		_1e018c9a3_WriteByte(&_23913_kind, '[');
		{
			auto expr = &((*(_self_))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1d9611d95:;
			if (it != expr_end) {
				jule::I64 _24317_i = it - expr->begin();
				jule::Ptr<_1d667614e_InsGeneric> *_24320_g = it;
				{
					_1e018c6ea_WriteStr(&_23913_kind, _1d6677ded_Str((*((*(_24320_g))))._field_Kind.ptr()));
					if ((_24317_i < ((*(_self_))._field_Generics.len() - 1LL))) {
						_1e018c9a3_WriteByte(&_23913_kind, ',');
					};
				}
				_iter_next_1d9611d95:;
				++it;
				_24317_i++;
				goto _iter_begin_1d9611d95;
			}
			_iter_end_1d9611d95:;
		};
		_1e018c9a3_WriteByte(&_23913_kind, ']');
	};
	return _1e018cee2_Str(&_23913_kind);;
}



inline jule::Bool _1d6520724_Equal(jule::Ptr<_1d652005e_StructIns> _self_, jule::Ptr<_1d6677a35_TypeKind> _25521_other) {
	jule::Ptr<_1d652005e_StructIns> _2569_s = _1d667b709_Struct(_25521_other.ptr());;
	if ((_2569_s == nullptr)) {
		return false;;
	};
	if (((*(_self_))._field_Decl != (*(_2569_s))._field_Decl)) {
		return false;;
	};
	if (((*(_self_))._field_Generics.len() != (*(_2569_s))._field_Generics.len())) {
		return false;;
	};
	jule::I64 _26913_i = 0LL;;
	for (; (_26913_i < (*(_self_))._field_Generics.len()); (_26913_i)++) {
		{
			if ((!(_1d667823e_Equal((*((*(_self_))._field_Generics[_26913_i]))._field_Kind, (*((*(_2569_s))._field_Generics[_26913_i]))._field_Kind)))) {
				return false;;
			};
		}
	_iter_next_1d96160a8:;
	}
	_iter_end_1d96160a8:;;
	return true;;
}



inline jule::Bool _1d6520bca_Same(_1d652005e_StructIns* _self_, jule::Ptr<_1d652005e_StructIns> _28319_s) {
	if ((((*(_self_))._field_Decl != (*(_28319_s))._field_Decl) || ((*(_28319_s))._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9618a5b:;
		if (it != expr_end) {
			jule::I64 _28713_i = it - expr->begin();
			jule::Ptr<_1d667614e_InsGeneric> *_28716_g = it;
			{
				jule::Ptr<_1d667614e_InsGeneric> _28813_g2 = (*(_28319_s))._field_Generics[_28713_i];;
				if ((((*((*((*(_28716_g))))._field_Kind))._field_BindIdent != (*((*(_28813_g2))._field_Kind))._field_BindIdent) || (!(_1d667823e_Equal((*((*(_28716_g))))._field_Kind, (*(_28813_g2))._field_Kind))))) {
					return false;;
				};
			}
			_iter_next_1d9618a5b:;
			++it;
			_28713_i++;
			goto _iter_begin_1d9618a5b;
		}
		_iter_end_1d9618a5b:;
	};
	return true;;
}



inline jule::Ptr<_1d653226e_Fn> _1d65210c6_FindMethod(_1d652005e_StructIns* _self_, jule::Str _29829_ident, jule::Bool _29841_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d961b5b9:;
		if (it != expr_end) {
			jule::Ptr<_1d653226e_Fn> _29921_f = *it;
			{
				if ((((*(_29921_f))._field_Statically == _29841_statically) && ((*(_29921_f))._field_Ident == _29829_ident))) {
					return _29921_f;;
				};
			}
			_iter_next_1d961b5b9:;
			++it;
			goto _iter_begin_1d961b5b9;
		}
		_iter_end_1d961b5b9:;
	};
	return nullptr;;
}



inline jule::Ptr<_1d651e4ae_FieldIns> _1d6521417_FindField(_1d652005e_StructIns* _self_, jule::Str _30928_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d961c91c:;
		if (it != expr_end) {
			jule::Ptr<_1d651e4ae_FieldIns> _31021_f = *it;
			{
				if (((*((*(_31021_f))._field_Decl))._field_Ident == _30928_ident)) {
					return _31021_f;;
				};
			}
			_iter_next_1d961c91c:;
			++it;
			goto _iter_begin_1d961c91c;
		}
		_iter_end_1d961c91c:;
	};
	return nullptr;;
}



inline jule::Ptr<_1d65d9018_Var> _1d6521758_FindStatic(_1d652005e_StructIns* _self_, jule::Str _32029_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d961d9a6:;
		if (it != expr_end) {
			jule::Ptr<_1d65d9018_Var> _32121_v = *it;
			{
				if (((*(_32121_v))._field_Ident == _32029_ident)) {
					return _32121_v;;
				};
			}
			_iter_next_1d961d9a6:;
			++it;
			goto _iter_begin_1d961d9a6;
		}
		_iter_end_1d961d9a6:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1d652005e_StructIns _Src) {
	_Stream << _1d65203d3_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1e02e7aa8_Cmd> static__1e02e7ec6_New(jule::Str _2619_path) {
	return jule::new_ptr<_1e02e7aa8_Cmd>(_1e02e7aa8_Cmd{._field_path=_2619_path, });;
}



inline jule::VoidExceptional _1e02e81c4_Spawn(_1e02e7aa8_Cmd* _self_) {
	({
		auto except = _1e034c58b_spawn(_self_);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _1e02e8658_Wait(_1e02e7aa8_Cmd* _self_) {
	return jule::Exceptional<jule::I64>(jule::Any(), static_cast<jule::I64>(({
		auto except = _1e034ca20_wait(_self_);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::I64>(except.error);
		} 0;});
	})));;
}



inline jule::VoidExceptional _1e034c58b_spawn(_1e02e7aa8_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_pid != -1LL)) {
		jule::panic(jule::Str::lit("command is already spawned", 26) + jule::Str("\nlocation: std/process/cmd_unix.jule:83:13"));;
	};
	jule::Str _859_path = (*(_self_))._field_path;;
	jule::Array<signed,2> _8613_pipe = jule::Array<signed,2>(0);;
	if ((pipe((&(_8613_pipe[0LL]))) == -1LL)) {
		return jule::VoidExceptional(jule::Any(static_cast<jule::I64>(3LL), &__jule_any_type0));
	};
	if ((_21672ec55_Fcntl(static_cast<jule::I64>(static_cast<jule::I64>(_8613_pipe[1LL])), F_SETFD, static_cast<jule::I64>((fcntl(static_cast<jule::I64>(static_cast<jule::I64>(_8613_pipe[1LL])), F_GETFD) | FD_CLOEXEC))) == -1LL)) {
		_216737dd4_Close(static_cast<jule::I64>(static_cast<jule::I64>(_8613_pipe[0LL])));
		_216737dd4_Close(static_cast<jule::I64>(static_cast<jule::I64>(_8613_pipe[1LL])));
		return jule::VoidExceptional(jule::Any(static_cast<jule::I64>(3LL), &__jule_any_type0));
	};
	(*(_self_))._field_attrs._field_pid=static_cast<jule::I64>(fork());
	{
		auto &_match_expr{ (*(_self_))._field_attrs._field_pid };
		
		if (_match_expr == -1LL) {
			_case_begin_1d844b40b:;
			{
				return jule::VoidExceptional(jule::Any(static_cast<jule::I64>(3LL), &__jule_any_type0));
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1d844a7c3:;
			{
				_216737dd4_Close(static_cast<jule::I64>(static_cast<jule::I64>(_8613_pipe[0LL])));
				jule::Slice<jule::Str> _10117_args = jule::Slice<jule::Str>::alloc(1LL, (1LL + (*(_self_))._field_Args.len()));;
				_10117_args[0LL]=_859_path;
				(_10117_args).append((*(_self_))._field_Args);;
				({
					auto except = _1e034c338_setenv(&((*(_self_))._field_Env));
					if (!except.ok()) {
						return jule::VoidExceptional(except.error);
					}
				});
				_1e034c107_execvp(&(_859_path), &(_10117_args));
				jule::Str _10613_code = _1e03480e2_Itoa(static_cast<jule::I64>(_208aec51a_GetLastErrno()));;
				{
					_216738313_Write(static_cast<jule::I64>(static_cast<jule::I64>(_8613_pipe[1LL])), (&(_10613_code[0LL])), static_cast<jule::U64>(static_cast<jule::U64>(_10613_code.len())));
				};
				_216737dd4_Close(static_cast<jule::I64>(static_cast<jule::I64>(_8613_pipe[1LL])));
				_1e034dd2e_Exit(1LL);
			}
		}
		else {
			_case_begin_1d8445e50:;
			{
				_216737dd4_Close(static_cast<jule::I64>(static_cast<jule::I64>(_8613_pipe[1LL])));
				jule::Array<jule::U8,16> _11221_buf = jule::Array<jule::U8,16>(0);;
				jule::I64 _11313_n = _216737a3d_Read(static_cast<jule::I64>(static_cast<jule::I64>(_8613_pipe[0LL])), (&(_11221_buf[0LL])), static_cast<jule::U64>(16LLU));;
				_216737dd4_Close(static_cast<jule::I64>(static_cast<jule::I64>(_8613_pipe[0LL])));
				if ((_11313_n != 0LL)) {
					(*(_self_))._field_attrs._field_pid=-1LL;
					jule::I64 _11717_code = 0;;
					({
						__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1e02e91c5_AtoiBp((&(_11221_buf[0LL])), _11313_n);
						_11717_code = __jule_assign_result.__jule_result_arg0;
					});
					return jule::VoidExceptional(jule::Any(_1e034d2b2_processErrorFromCode(_11717_code), &__jule_any_type0));
				};
			}
		}
		_match_end_1d8448507:;
	};
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _1e034ca20_wait(_1e02e7aa8_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_pid == -1LL)) {
		jule::panic(jule::Str::lit("command is not spawned", 22) + jule::Str("\nlocation: std/process/cmd_unix.jule:135:13"));;
	};
	jule::I64 _13713_stat = 0LL;;
	{
		if ((waitpid((*(_self_))._field_attrs._field_pid, ((signed*)((&(_13713_stat)))), 0LL) == -1LL)) {
			return jule::Exceptional<jule::I64>(jule::Any(_1e034d515_getLastProcessError(), &__jule_any_type0));
		};
	};
	(*(_self_))._field_attrs._field_pid=-1LL;
	return jule::Exceptional<jule::I64>(jule::Any(), static_cast<jule::I64>(WEXITSTATUS(_13713_stat)));;
}





std::ostream &operator<<(std::ostream &_Stream, _1e02e7aa8_Cmd _Src) {
	_Stream << "Cmd{";
	_Stream << "attrs:" << _Src._field_attrs << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Env:" << _Src._field_Env;
	_Stream << "}";
	return _Stream;
}



inline void _2166de85d_Free(void* _4520_ptr) {
	free(_4520_ptr);
}



inline jule::Str _2167201b8_BytePtrToStr(jule::U8* _6924_s) {
	if ((_6924_s == nullptr)) {
		return jule::Str();;
	};
	jule::I64 _739_n = 0LL;;
	{
		for (; (_6924_s[_739_n] != 0LLU); (_739_n)++) {
			{
			}
		_iter_next_1d7d0e572:;
		}
		_iter_end_1d7d0e572:;;
	};
	if ((_739_n == 0LL)) {
		return jule::Str();;
	};
	jule::Slice<jule::U8> _809_buf = jule::Slice<jule::U8>::alloc(_739_n, _739_n, 0);;
	_739_n=0LL;
	{
		for (; (_6924_s[_739_n] != 0LLU); (_739_n)++) {
			{
				_809_buf[_739_n]=_6924_s[_739_n];
			}
		_iter_next_1d7d10c49:;
		}
		_iter_end_1d7d10c49:;;
	};
	return static_cast<jule::Str>(_809_buf);;
}



inline jule::Slice<jule::U8> _216720482_StrToBytes(jule::Str _9315_s) {
	{
		auto expr = &(_9315_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7d0e8c4:;
		if (it != expr_end) {
			jule::I64 _949_i = it - expr->begin();
			jule::U8 *_9412_b = it;
			{
				if (((*(_9412_b)) == 0LLU)) {
					jule::Slice<jule::U8> _9617_bytes = jule::Slice<jule::U8>::alloc((_949_i + 1LL), (_949_i + 1LL), 0);;
					jule::copy((_9617_bytes), (_9315_s.slice(0LL, _9617_bytes.len())).fake_slice());
					return _9617_bytes;;
				};
			}
			_iter_next_1d7d0e8c4:;
			++it;
			_949_i++;
			goto _iter_begin_1d7d0e8c4;
		}
		_iter_end_1d7d0e8c4:;
	};
	jule::Slice<jule::U8> _1019_bytes = jule::Slice<jule::U8>::alloc((_9315_s.len() + 1LL), (_9315_s.len() + 1LL), 0);;
	jule::copy((_1019_bytes), (_9315_s).fake_slice());
	return _1019_bytes;;
}



inline jule::I64 _208aec51a_GetLastErrno(void) {
	return errno;;
}



inline jule::I64 _21672ec55_Fcntl(jule::I64 _5410_handle, jule::I64 _5423_cmd, jule::I64 _5433_arg) {
	return static_cast<jule::I64>(fcntl(_5410_handle, _5423_cmd, _5433_arg));;
}



inline jule::I64 _2167300c9_Stat(jule::U8* _5916_path, struct stat* _5933_stat) {
	return static_cast<jule::I64>(stat(((char*)(_5916_path)), _5933_stat));;
}



inline jule::I64 _216730508_Open(jule::U8* _6416_path, jule::I64 _6429_flag, jule::I64 _6440_mode) {
	return static_cast<jule::I64>(open(((char*)(_6416_path)), _6429_flag, _6440_mode));;
}



inline jule::U8* _21673087c_Getcwd(jule::U8* _7018_buff, jule::U64 _7031_bufflen) {
	return ((jule::U8*)(getcwd(((char*)(_7018_buff)), _7031_bufflen)));;
}



inline DIR* _216730d77_Opendir(jule::U8* _7519_path) {
	return opendir(((char*)(_7519_path)));;
}



inline struct dirent* _216731141_Readdir(DIR* _7823_dir) {
	return readdir(_7823_dir);;
}



inline jule::I64 _21673140a_Closedir(DIR* _8124_dir) {
	return static_cast<jule::I64>(closedir(_8124_dir));;
}



inline jule::I64 _216731d12_Mkdir(jule::U8* _9017_path, jule::I64 _9030_mode) {
	return static_cast<jule::I64>(mkdir(((char*)(_9017_path)), _9030_mode));;
}



inline jule::I64 _2167320cb_Rmdir(jule::U8* _9517_path) {
	return static_cast<jule::I64>(rmdir(((char*)(_9517_path))));;
}



inline jule::I64 _216732395_Unlink(jule::U8* _9818_path) {
	return static_cast<jule::I64>(unlink(((char*)(_9818_path))));;
}



inline jule::I64 _216737a3d_Read(jule::I64 _2016_handle, void* _2033_buff, jule::U64 _2048_n) {
	return static_cast<jule::I64>(read(_2016_handle, _2033_buff, _2048_n));;
}



inline jule::I64 _216737dd4_Close(jule::I64 _2510_handle) {
	return static_cast<jule::I64>(close(_2510_handle));;
}



inline jule::I64 _216738313_Write(jule::I64 _2817_handle, void* _2830_buff, jule::U64 _2845_n) {
	return static_cast<jule::I64>(write(_2817_handle, _2830_buff, _2845_n));;
}



inline void _216738544_Exit(jule::I64 _339_code) {
	exit(_339_code);
}



inline jule::Str _21681c5e5_Str(jule::U8* _108_b, jule::I64 _1018_n) {
	jule::Str _119_s = jule::Str();;
	{
		_119_s.buffer = jule::Ptr<jule::U8>::make(_108_b, nullptr);
		_119_s._len = _1018_n;
		_119_s._slice = _108_b;
	};
	return _119_s;;
}



inline jule::Slice<jule::U8> _1d7d6a875_Slice(jule::U8* _2316_e, jule::I64 _2326_n) {
	jule::Slice<jule::U8> _249_buf = static_cast<jule::Slice<jule::U8>>(nullptr);;
	{
		_249_buf.data = jule::Ptr<jule::U8>::make(_2316_e, nullptr);
		_249_buf._len = _2326_n;
		_249_buf._cap = _2326_n;
		_249_buf._slice = _2316_e;
	};
	return _249_buf;;
}



inline jule::Slice<jule::U8> _21682838c_StrBytes(jule::Str _4113_s) {
	if ((_4113_s.len() == 0LL)) {
		return nullptr;;
	};
	return _1d7d6a875_Slice((&(_4113_s[0LL])), static_cast<jule::I64>(_4113_s.len()));;
}



inline jule::Str _216828656_BytesStr(jule::Slice<jule::U8> _5013_b) {
	if ((_5013_b.len() == 0LL)) {
		return jule::Str();;
	};
	return _21681c5e5_Str((&(_5013_b[0LL])), static_cast<jule::I64>(_5013_b.len()));;
}



inline jule::Str _216828920_StrFromBytes(jule::Slice<jule::U8> _5817_b) {
	return (*(((jule::Str*)((&(_5817_b))))));;
}



inline jule::I64 _21684dd96_getLastOsError(void) {
	jule::I64 _305_err = _208aec51a_GetLastErrno();;
	{
		auto &_match_expr{ _305_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1d7d73729:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1d7d730db:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else if (_match_expr == 40LL) {
			_case_begin_1d7d73163:;
			{
				return static_cast<jule::I64>(2LL);;
			}
		}
		else if (_match_expr == 36LL) {
			_case_begin_1d7d731da:;
			{
				return static_cast<jule::I64>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1d7d73460:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1d7d734c6:;
			{
				return static_cast<jule::I64>(5LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1d7d7353c:;
			{
				return static_cast<jule::I64>(6LL);;
			}
		}
		else {
			_case_begin_1d7d73075:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		_match_end_1d7d73020:;
	};
}



inline jule::Slice<jule::Str> _2168535b5_Args(void) {
	return jule::args();;
}



inline jule::Exceptional<jule::Str> _216853a5a_WorkingDir(void) {
	return jule::Exceptional<jule::Str>(jule::Any(), ({
		auto except = _216854495_getwd();
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Str>(except.error);
		} jule::Str();});
	}));;
}



inline jule::Exceptional<jule::Str> _216854495_getwd(void) {
	jule::U8* _119_buf = _21673087c_Getcwd(nullptr, 0LLU);;
	if ((_119_buf == nullptr)) {
		return jule::Exceptional<jule::Str>(jule::Any(_21684dd96_getLastOsError(), &__jule_any_type0));
	};
	jule::Str _155_pwd = _2167201b8_BytePtrToStr(_119_buf);;
	{
		_2166de85d_Free(_119_buf);
	};
	return jule::Exceptional<jule::Str>(jule::Any(), _155_pwd);;
}



inline jule::Bool _21944dc18_IsLetter(jule::I32 _7613_r) {
	if ((static_cast<jule::U32>(_7613_r) <= 255LLU)) {
		return ((_2194add55__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_7613_r))] & 96LLU) != 0LLU);;
	};
	return _2194b7457_isExcludingLatin(_219457e75_Letter, _7613_r);;
}



inline jule::Bool _2194b67ca_is16(jule::Slice<_2194b4a3c_Range16> _1919_ranges, jule::U16 _19128_r) {
	if (((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU))) {
		{
			auto expr = &(_1919_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1d89bbd66:;
			if (it != expr_end) {
				jule::I64 _19313_i = it - expr->begin();
				{
					_2194b4a3c_Range16* _19413_range = (&(_1919_ranges[_19313_i]));;
					{
						if ((_19128_r < (*(_19413_range))._field_Lo)) {
							return false;;
						};
						if ((_19128_r <= (*(_19413_range))._field_Hi)) {
							return (((*(_19413_range))._field_Stride == 1LLU) || (jule::mod((_19128_r - (*(_19413_range))._field_Lo),(*(_19413_range))._field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_1d89bbd66:;
				++it;
				_19313_i++;
				goto _iter_begin_1d89bbd66;
			}
			_iter_end_1d89bbd66:;
		};
		return false;;
	};
	jule::I64 _2089_lo = 0LL;;
	jule::I64 _2099_hi = _1919_ranges.len();;
	while ((_2089_lo < _2099_hi)) {
		{
			jule::I64 _2119_m = (_2089_lo + ((_2099_hi - _2089_lo) >> 1LLU));;
			_2194b4a3c_Range16* _2129_range = (&(_1919_ranges[_2119_m]));;
			{
				if ((((*(_2129_range))._field_Lo <= _19128_r) && (_19128_r <= (*(_2129_range))._field_Hi))) {
					return (((*(_2129_range))._field_Stride == 1LLU) || (jule::mod((_19128_r - (*(_2129_range))._field_Lo),(*(_2129_range))._field_Stride) == 0LLU));;
				};
				if ((_19128_r < (*(_2129_range))._field_Lo)) {
					_2099_hi=_2119_m;
				} else {
					_2089_lo=static_cast<jule::I64>((_2119_m + 1LL));
				};
			};
		}
	_iter_next_1d89baa8a:;
	}
	_iter_end_1d89baa8a:;;
	return false;;
}



inline jule::Bool _2194b6b4e_is32(jule::Slice<_2194b506a_Range32> _2289_ranges, jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto expr = &(_2289_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1d89bee79:;
			if (it != expr_end) {
				jule::I64 _23013_i = it - expr->begin();
				{
					_2194b506a_Range32* _23113_range = (&(_2289_ranges[_23013_i]));;
					{
						if ((_22828_r < (*(_23113_range))._field_Lo)) {
							return false;;
						};
						if ((_22828_r <= (*(_23113_range))._field_Hi)) {
							return (((*(_23113_range))._field_Stride == 1LLU) || (jule::mod((_22828_r - (*(_23113_range))._field_Lo),(*(_23113_range))._field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_1d89bee79:;
				++it;
				_23013_i++;
				goto _iter_begin_1d89bee79;
			}
			_iter_end_1d89bee79:;
		};
		return false;;
	};
	jule::I64 _2459_lo = 0LL;;
	jule::I64 _2469_hi = _2289_ranges.len();;
	while ((_2459_lo < _2469_hi)) {
		{
			jule::I64 _2489_m = (_2459_lo + ((_2469_hi - _2459_lo) >> 1LLU));;
			_2194b506a_Range32* _2499_range = (&(_2289_ranges[_2489_m]));;
			{
				if ((((*(_2499_range))._field_Lo <= _22828_r) && (_22828_r <= (*(_2499_range))._field_Hi))) {
					return (((*(_2499_range))._field_Stride == 1LLU) || (jule::mod((_22828_r - (*(_2499_range))._field_Lo),(*(_2499_range))._field_Stride) == 0LLU));;
				};
				if ((_22828_r < (*(_2499_range))._field_Lo)) {
					_2469_hi=_2489_m;
				} else {
					_2459_lo=static_cast<jule::I64>((_2489_m + 1LL));
				};
			};
		}
	_iter_next_1d89bed25:;
	}
	_iter_end_1d89bed25:;;
	return false;;
}



inline jule::Bool _2194b7457_isExcludingLatin(jule::Ptr<_2194b5521_RangeTable> _27821_rangeTab, jule::I32 _27844_r) {
	{
		jule::Slice<_2194b4a3c_Range16> *_28010_R16 = &((*(_27821_rangeTab))._field_R16);;
		jule::I64 _2829_off = (*(_27821_rangeTab))._field_LatinOffset;;
		if ((((*(_28010_R16)).len() > _2829_off) && (static_cast<jule::U32>(_27844_r) <= static_cast<jule::U32>((*(_28010_R16))[((*(_28010_R16)).len() - 1LL)]._field_Hi)))) {
			return _2194b67ca_is16((*(_28010_R16)).slice(_2829_off), static_cast<jule::U16>(static_cast<jule::U16>(_27844_r)));;
		};
	};
	jule::Slice<_2194b506a_Range32> *_2876_R32 = &((*(_27821_rangeTab))._field_R32);;
	if ((((*(_2876_R32)).len() > 0LL) && (_27844_r >= static_cast<jule::I32>((*(_2876_R32))[0LL]._field_Lo)))) {
		return _2194b6b4e_is32((*(_2876_R32)), static_cast<jule::U32>(static_cast<jule::U32>(_27844_r)));;
	};
	return false;;
}



inline jule::Bool _2194b7721_IsUpper(jule::I32 _29512_r) {
	if ((static_cast<jule::U32>(_29512_r) <= 255LLU)) {
		return ((_2194add55__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_29512_r))] & 96LLU) == 32LLU);;
	};
	return _2194b7457_isExcludingLatin(_21945e4cb_Upper, _29512_r);;
}



inline __jule_tuple_i32__jule_tuple_int _1e012a138_DecodeRune(jule::Slice<jule::U8> _18215_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_18215_p.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _1865_p0 = _18215_p[0LL];;
	jule::U8 _1875_x = _1e0128e8e_first[static_cast<jule::I64>(_1865_p0)];;
	if ((_1875_x >= 240LLU)) {
		jule::I32 _1929_mask = static_cast<jule::I32>(((_1875_x << 31LLU) >> 31LLU));;
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>(_18215_p[0LL]) & (~(_1929_mask))) | (65533LL & _1929_mask)));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _1955_sz = static_cast<jule::I64>((_1875_x & 7LLU));;
	_1e0129522_acceptRange _1965_accept = _1e0129830_acceptRanges[static_cast<jule::I64>((_1875_x >> 4LLU))];;
	if ((_18215_p.len() < _1955_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2005_b1 = _18215_p[1LL];;
	if (((_2005_b1 < _1965_accept._field_lo) || (_1965_accept._field_hi < _2005_b1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1955_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>((_1865_p0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2005_b1 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2075_b2 = _18215_p[2LL];;
	if (((_2075_b2 < 128LLU) || (191LL < _2075_b2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1955_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>((((static_cast<jule::I32>((_1865_p0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2005_b1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2075_b2 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2145_b3 = _18215_p[3LL];;
	if (((_2145_b3 < 128LLU) || (191LL < _2145_b3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((((static_cast<jule::I32>((_1865_p0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2005_b1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2075_b2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2145_b3 & 63LLU))));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _1e012a479_DecodeRuneStr(jule::Str _22918_s) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_22918_s.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _2335_s0 = _22918_s[0LL];;
	jule::U8 _2345_x = _1e0128e8e_first[static_cast<jule::I64>(_2335_s0)];;
	if ((_2345_x >= 240LLU)) {
		jule::I32 _2399_mask = static_cast<jule::I32>(((_2345_x << 31LLU) >> 31LLU));;
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>(_22918_s[0LL]) & (~(_2399_mask))) | (65533LL & _2399_mask)));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _2425_sz = static_cast<jule::I64>((_2345_x & 7LLU));;
	_1e0129522_acceptRange _2435_accept = _1e0129830_acceptRanges[static_cast<jule::I64>((_2345_x >> 4LLU))];;
	if ((_22918_s.len() < _2425_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2475_s1 = _22918_s[1LL];;
	if (((_2475_s1 < _2435_accept._field_lo) || (_2435_accept._field_hi < _2475_s1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2425_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>((_2335_s0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2475_s1 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2545_s2 = _22918_s[2LL];;
	if (((_2545_s2 < 128LLU) || (191LL < _2545_s2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2425_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>((((static_cast<jule::I32>((_2335_s0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2475_s1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2545_s2 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2615_s3 = _22918_s[3LL];;
	if (((_2615_s3 < 128LLU) || (191LL < _2615_s3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((((static_cast<jule::I32>((_2335_s0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2475_s1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2545_s2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2615_s3 & 63LLU))));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _1e012aa0c_DecodeLastRuneStr(jule::Str _31722_s) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_31722_s.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::I64 _3215_end = _31722_s.len();;
	jule::I64 _3229_start = (_3215_end - 1LL);;
	__jule_func_result.__jule_result_arg0=static_cast<jule::I32>(static_cast<jule::I32>(_31722_s[_3229_start]));
	if ((__jule_func_result.__jule_result_arg0 < 128LL)) {
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _3309_lim = (_3215_end - 4LL);;
	if ((_3309_lim < 0LL)) {
		_3309_lim=0LL;
	};
	(_3229_start)--;
	for (; (_3229_start >= _3309_lim); (_3229_start)--) {
		{
			if (_1e012c26c_RuneStart(_31722_s[_3229_start])) {
				goto _iter_end_1d8a1b5ad;
			};
		}
	_iter_next_1d8a1b5ad:;
	}
	_iter_end_1d8a1b5ad:;;
	if ((_3229_start < 0LL)) {
		_3229_start=0LL;
	};
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1e012a479_DecodeRuneStr(_31722_s.slice(_3229_start, _3215_end));
		__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if (((_3229_start + __jule_func_result.__jule_result_arg1) != _3215_end)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline jule::Slice<jule::U8> _1e012b59b_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r) {
	if ((_40530_r <= 127LL)) {
		return jule::append(_40519_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_40530_r))}));;
	};
	return _1e012b920_appendRuneNonASCII(_40519_p, _40530_r);;
}



inline jule::Slice<jule::U8> _1e012b920_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r) {
	jule::U32 _4145_i = static_cast<jule::U32>(_41242_r);;
	{
		
		if ((_4145_i <= 2047LLU)) {
			_case_begin_1d8a2b128:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((192LLU | static_cast<jule::U8>((_41242_r >> 6LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		else if ((_4145_i > 1114111LLU) || ((55296LL <= _4145_i) && (_4145_i <= 57343LLU))) {
			_case_begin_1d8a2b447:;
			{
				_41242_r=128LL;
				goto _case_begin_1d8a290b0;
			}
		}
		else if ((_4145_i <= 65535LLU)) {
			_case_begin_1d8a290b0:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((224LLU | static_cast<jule::U8>((_41242_r >> 12LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		else {
			_case_begin_1d8a29049:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((240LLU | static_cast<jule::U8>((_41242_r >> 18LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 12LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		_match_end_1d8a28ed3:;
	};
}



inline jule::I64 _1e012bea3_RuneCountStr(jule::Str _47317_s) {
	jule::I64 __jule_func_result = 0;
	jule::I64 _4749_i = 0LL;;
	for (; (_4749_i < _47317_s.len()); (__jule_func_result)++) {
		{
			jule::U8 _47613_c = _47317_s[_4749_i];;
			if ((_47613_c < 128LLU)) {
				(_4749_i)++;
				goto _iter_next_1d8a35132;
			};
			jule::U8 _4829_x = _1e0128e8e_first[static_cast<jule::I64>(_47613_c)];;
			if ((_4829_x == 241LLU)) {
				(_4749_i)++;
				goto _iter_next_1d8a35132;
			};
			jule::I64 _48713_size = static_cast<jule::I64>((_4829_x & 7LLU));;
			if (((_4749_i + _48713_size) > _47317_s.len())) {
				(_4749_i)++;
				goto _iter_next_1d8a35132;
			};
			_1e0129522_acceptRange _4929_accept = _1e0129830_acceptRanges[static_cast<jule::I64>((_4829_x >> 4LLU))];;
			_47613_c=_47317_s[(_4749_i + 1LL)];
			if (((_47613_c < _4929_accept._field_lo) || (_4929_accept._field_hi < _47613_c))) {
				_48713_size=1LL;
			} else if ((_48713_size == 2LL)) {
			} else {
				_47613_c=_47317_s[(_4749_i + 2LL)];
				if (((_47613_c < 128LLU) || (191LL < _47613_c))) {
					_48713_size=1LL;
				} else if ((_48713_size == 3LL)) {
				} else {
					_47613_c=_47317_s[(_4749_i + 3LL)];
					if (((_47613_c < 128LLU) || (191LL < _47613_c))) {
						_48713_size=1LL;
					};
				};
			};
			_4749_i+=_48713_size;
		}
	_iter_next_1d8a35132:;
	}
	_iter_end_1d8a35132:;;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1e012c26c_RuneStart(jule::U8 _51714_b) {
	return ((_51714_b & 192LLU) != 128LLU);;
}



inline jule::I64 _1e016ceb1_findLastByte(jule::U8* _4517_begin, jule::U8* _4535_end, jule::U8 _4547_b) {
	jule::U8* _469_it = _4535_end;;
	for (; (_469_it >= _4517_begin); (_469_it)--) {
		{
			{
				if (((*(_469_it)) == _4547_b)) {
					return static_cast<jule::I64>(((jule::I64)((_469_it - _4517_begin))));;
				};
			};
		}
	_iter_next_1d8a58001:;
	}
	_iter_end_1d8a58001:;;
	return -1LL;;
}



inline jule::I64 _1e016d643_FindByteStr(jule::Str _6816_s, jule::U8 _6824_b) {
	{
		auto expr = &(_6816_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d8a5973e:;
		if (it != expr_end) {
			jule::I64 _709_i = it - expr->begin();
			jule::U8 *_7012_se = it;
			{
				if (((*(_7012_se)) == _6824_b)) {
					return _709_i;;
				};
			}
			_iter_next_1d8a5973e:;
			++it;
			_709_i++;
			goto _iter_begin_1d8a5973e;
		}
		_iter_end_1d8a5973e:;
	};
	return -1LL;;
}



inline jule::I64 _1e016d9b7_FindLastByteStr(jule::Str _7920_s, jule::U8 _7928_b) {
	if ((_7920_s.len() == 0LL)) {
		return -1LL;;
	};
	return static_cast<jule::I64>(_1e016ceb1_findLastByte((&(_7920_s[0LL])), (&(_7920_s[(_7920_s.len() - 1LL)])), _7928_b));;
}



inline jule::Str _1e016dcb4_Repeat(jule::Str _1111_s, jule::I64 _1123_n) {
	if ((_1123_n <= 0LL)) {
		return jule::Str();;
	};
	if ((_1111_s.len() > jule::div(jule::MAX_I64,_1123_n))) {
		jule::panic(jule::Str::lit("std::strings: repeat: integer buffer size overflow", 50) + jule::Str("\nlocation: std/strings/strings.jule:16:9"));;
	};
	_1e01838bc_StrBuilder _189_ss = static__1e0183b64_New(static_cast<jule::I64>((_1111_s.len() * _1123_n)));;
	for (; (_1123_n > 0LL); (_1123_n)--) {
		{
			_1e018c6ea_WriteStr(&_189_ss, _1111_s);
		}
	_iter_next_1d8a76e65:;
	}
	_iter_end_1d8a76e65:;;
	return _1e018cee2_Str(&_189_ss);;
}



inline jule::Bool _1e016e237_hasPrefix(jule::Str* _2515_s, jule::Str* _2524_sub, jule::I64 _2538_start) {
	if ((((*(_2524_sub)).len() == 0LL) || (((*(_2515_s)).len() - _2538_start) < (*(_2524_sub)).len()))) {
		return false;;
	};
	jule::I64 _309_i = 0LL;;
	for (; (_309_i < (*(_2524_sub)).len()); ({
		jule::I64 ___jule_assign_arg = static_cast<jule::I64>((_309_i + 1LL));
		jule::I64 _1___jule_assign_arg = static_cast<jule::I64>((_2538_start + 1LL));
		_309_i = ___jule_assign_arg;
		_2538_start = _1___jule_assign_arg;
	})) {
		{
			if (((*(_2515_s))[_2538_start] != (*(_2524_sub))[_309_i])) {
				return false;;
			};
		}
	_iter_next_1d8a79cae:;
	}
	_iter_end_1d8a79cae:;;
	return true;;
}



inline jule::Bool _1e016e5ab_HasPrefix(jule::Str _4014_s, jule::Str _4022_sub) {
	return _1e016e237_hasPrefix(&(_4014_s), &(_4022_sub), 0LL);;
}



inline jule::Bool _1e016ea62_hasSuffix(jule::Str* _4415_s, jule::Str* _4424_sub, jule::I64 _4438_start) {
	if ((((*(_4424_sub)).len() == 0LL) || (((*(_4415_s)).len() - _4438_start) < (*(_4424_sub)).len()))) {
		return false;;
	};
	_4438_start=static_cast<jule::I64>(((*(_4415_s)).len() - _4438_start));
	jule::I64 _509_i = 0LL;;
	for (; (_509_i < (*(_4424_sub)).len()); (_509_i)++) {
		{
			if (((*(_4415_s))[((_4438_start - _509_i) - 1LL)] != (*(_4424_sub))[(((*(_4424_sub)).len() - _509_i) - 1LL)])) {
				return false;;
			};
		}
	_iter_next_1d8a7bb07:;
	}
	_iter_end_1d8a7bb07:;;
	return true;;
}



inline jule::Bool _1e016eda3_HasSuffix(jule::Str _6014_s, jule::Str _6022_sub) {
	return _1e016ea62_hasSuffix(&(_6014_s), &(_6022_sub), 0LL);;
}



inline jule::I64 _1e01702d2_FindAt(jule::Str _6811_s, jule::Str _6819_sub, jule::I64 _6833_i) {
	if ((((_6833_i < 0LL) || (_6811_s.len() < _6819_sub.len())) || (_6819_sub.len() == 0LL))) {
		return -1LL;;
	};
	for (; (_6833_i < _6811_s.len()); (_6833_i)++) {
		{
			if (_1e016e237_hasPrefix(&(_6811_s), &(_6819_sub), _6833_i)) {
				return _6833_i;;
			};
		}
	_iter_next_1d8a7e9d9:;
	}
	_iter_end_1d8a7e9d9:;;
	return -1LL;;
}



inline jule::I64 _1e0170656_Find(jule::Str _839_s, jule::Str _8317_sub) {
	return static_cast<jule::I64>(_1e01702d2_FindAt(_839_s, _8317_sub, 0LL));;
}



inline jule::I64 _1e0170b95_FindLastAt(jule::Str _9115_s, jule::Str _9123_sub, jule::I64 _9133_i) {
	jule::I64 _929_j = ((_9133_i - _9123_sub.len()) + 1LL);;
	if (((((_9123_sub.len() == 0LL) || (_9133_i < 0LL)) || (_9133_i >= _9115_s.len())) || (_929_j < 0LL))) {
		return -1LL;;
	};
	_julec_label_1d8a82d0b:;
	for (; (_929_j >= 0LL); (_929_j)--) {
		{
			jule::I64 _9813_k = _929_j;;
			jule::I64 _9913_z = 0LL;;
			for (; (_9913_z < _9123_sub.len()); ({
				jule::I64 ___jule_assign_arg = static_cast<jule::I64>((_9813_k + 1LL));
				jule::I64 _1___jule_assign_arg = static_cast<jule::I64>((_9913_z + 1LL));
				_9813_k = ___jule_assign_arg;
				_9913_z = _1___jule_assign_arg;
			})) {
				{
					if ((_9115_s[_9813_k] != _9123_sub[_9913_z])) {
						goto _iter_next_1d8a82976;
					};
				}
			_iter_next_1d8a83aed:;
			}
			_iter_end_1d8a83aed:;;
			return _929_j;;
		}
	_iter_next_1d8a82976:;
	}
	_iter_end_1d8a82976:;;
	return -1LL;;
}



inline jule::I64 _1e0171019_FindLast(jule::Str _11313_s, jule::Str _11321_sub) {
	return static_cast<jule::I64>(_1e0170b95_FindLastAt(_11313_s, _11321_sub, static_cast<jule::I64>((_11313_s.len() - 1LL))));;
}



inline jule::I64 _1e0172768_FindLastByte(jule::Str _17717_s, jule::U8 _17725_b) {
	return static_cast<jule::I64>(_1e016d9b7_FindLastByteStr(_17717_s, _17725_b));;
}



inline jule::I64 _1e0172c96_FindRune(jule::Str _18413_s, jule::I32 _18421_r) {
	jule::I64 _1859_i = 0LL;;
	while ((_1859_i < _18413_s.len())) {
		{
			jule::I32 _1879_br = 0;;
			jule::I64 _18713_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1e012a479_DecodeRuneStr(_18413_s.slice(_1859_i));
				_1879_br = __jule_assign_result.__jule_result_arg0;
				_18713_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_18421_r == _1879_br)) {
				return _1859_i;;
			};
			_1859_i+=_18713_n;
		}
	_iter_next_1d8a9137a:;
	}
	_iter_end_1d8a9137a:;;
	return -1LL;;
}



inline jule::I64 _1e017348e_FindAny(jule::Str _21412_s, jule::Str _21420_runes) {
	jule::I64 _2159_i = 0LL;;
	while ((_2159_i < _21412_s.len())) {
		{
			jule::I32 _2179_r = 0;;
			jule::I64 _21712_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1e012a479_DecodeRuneStr(_21412_s.slice(_2159_i));
				_2179_r = __jule_assign_result.__jule_result_arg0;
				_21712_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1e0172c96_FindRune(_21420_runes, _2179_r) != -1LL)) {
				return _2159_i;;
			};
			_2159_i+=_21712_n;
		}
	_iter_next_1d8a94449:;
	}
	_iter_end_1d8a94449:;;
	return -1LL;;
}



inline jule::Slice<jule::Str> _1e0173c42_Split(jule::Str _24410_s, jule::Str _24418_sub, jule::I64 _24432_n) {
	jule::I64 _2459_cap = _24432_n;;
	if ((_24432_n < 0LL)) {
		_2459_cap=16LLU;
	};
	jule::Slice<jule::Str> _2499_parts = jule::Slice<jule::Str>::alloc(0LL, _2459_cap);;
	if ((_24432_n == 0LL)) {
		return _2499_parts;;
	};
	if ((_24432_n < 0LL)) {
		_24432_n=static_cast<jule::I64>(_24410_s.len());
	};
	jule::I64 _2569_i = 0LL;;
	for (; (_24432_n > 0LL); (_24432_n)--) {
		{
			jule::I64 _2589_j = _1e01702d2_FindAt(_24410_s, _24418_sub, _2569_i);;
			if ((_2589_j == -1LL)) {
				goto _iter_end_1d8a9943d;
			};
			{ jule::Slice<jule::Str> &__jule_push_dest = _2499_parts; __jule_push_dest.push(_24410_s.slice(_2569_i, _2589_j)); };
			_2569_i=static_cast<jule::I64>((_2589_j + _24418_sub.len()));
		}
	_iter_next_1d8a9943d:;
	}
	_iter_end_1d8a9943d:;;
	if (((_24432_n > 0LL) && (_2569_i < _24410_s.len()))) {
		{ jule::Slice<jule::Str> &__jule_push_dest = _2499_parts; __jule_push_dest.push(_24410_s.slice(_2569_i)); };
	};
	return _2499_parts;;
}



inline jule::Bool _1e01740b6_Contains(jule::Str _27213_s, jule::Str _27221_sub) {
	return (_1e01702d2_FindAt(_27213_s, _27221_sub, 0LL) != -1LL);;
}



inline jule::Bool _1e0174b33_ContainsAny(jule::Str _28716_s, jule::Str _28724_runes) {
	return (_1e017348e_FindAny(_28716_s, _28724_runes) != -1LL);;
}



inline jule::I64 _1e0174ea7_Count(jule::Str _29310_s, jule::Str _29318_sub) {
	if ((_29318_sub.len() == 0LL)) {
		return 0LL;;
	};
	jule::I64 _2979_n = 0LL;;
	jule::I64 _2989_i = 0LL;;
	for (;;) {
		{
			jule::I64 _3009_j = _1e01702d2_FindAt(_29310_s, _29318_sub, _2989_i);;
			if ((_3009_j == -1LL)) {
				goto _iter_end_1d8a9e201;
			};
			(_2979_n)++;
			_2989_i=static_cast<jule::I64>((_3009_j + _29318_sub.len()));
		}
	_iter_next_1d8a9e201:;
	}
	_iter_end_1d8a9e201:;;
	return _2979_n;;
}



inline jule::Str _1e0175491_Replace(jule::Str _31312_s, jule::Str _31320_sub, jule::Str _31330_new, jule::I64 _31344_n) {
	if (((_31344_n == 0LL) || (_31320_sub == _31330_new))) {
		return _31312_s;;
	};
	jule::I64 _3185_m = _1e0174ea7_Count(_31312_s, _31320_sub);;
	if ((_3185_m == 0LL)) {
		return _31312_s;;
	};
	if (((_31344_n < 0LL) || (_3185_m < _31344_n))) {
		_31344_n=_3185_m;
	};
	_1e01838bc_StrBuilder _3269_ss = static__1e0183b64_New(static_cast<jule::I64>(((_31312_s.len() + (_31344_n * (_31330_new.len() - _31320_sub.len()))) + 1LL)));;
	jule::I64 _3279_i = 0LL;;
	for (; (_31344_n > 0LL); (_31344_n)--) {
		{
			jule::I64 _3299_j = _1e01702d2_FindAt(_31312_s, _31320_sub, _3279_i);;
			if ((_3299_j == -1LL)) {
				goto _iter_end_1d8aa2d3c;
			};
			_1e018c6ea_WriteStr(&_3269_ss, _31312_s.slice(_3279_i, _3299_j));
			_1e018c6ea_WriteStr(&_3269_ss, _31330_new);
			_3279_i=static_cast<jule::I64>((_3299_j + _31320_sub.len()));
		}
	_iter_next_1d8aa2d3c:;
	}
	_iter_end_1d8aa2d3c:;;
	_1e018c6ea_WriteStr(&_3269_ss, _31312_s.slice(_3279_i));
	return _1e018cee2_Str(&_3269_ss);;
}



inline jule::Str _1e017621c_TrimLeft(jule::Str _37017_s, jule::Str _37025_cutset) {
	jule::I64 _3719_i = 0LL;;
	while ((_3719_i < _37017_s.len())) {
		{
			jule::I32 _3739_r = 0;;
			jule::I64 _37312_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1e012a479_DecodeRuneStr(_37017_s.slice(_3719_i));
				_3739_r = __jule_assign_result.__jule_result_arg0;
				_37312_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1e0172c96_FindRune(_37025_cutset, _3739_r) == -1LL)) {
				return _37017_s.slice(_3719_i);;
			};
			_3719_i+=_37312_n;
		}
	_iter_next_1d8aa7d86:;
	}
	_iter_end_1d8aa7d86:;;
	return jule::Str();;
}



inline jule::Str _1e0176591_TrimRight(jule::Str _38414_s, jule::Str _38422_cutset) {
	jule::I64 _3859_i = _38414_s.len();;
	while ((_3859_i > 0LL)) {
		{
			jule::I32 _3879_r = 0;;
			jule::I64 _38712_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1e012aa0c_DecodeLastRuneStr(_38414_s.slice(0LL, _3859_i));
				_3879_r = __jule_assign_result.__jule_result_arg0;
				_38712_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1e0172c96_FindRune(_38422_cutset, _3879_r) == -1LL)) {
				return _38414_s.slice(0LL, _3859_i);;
			};
			_3859_i-=_38712_n;
		}
	_iter_next_1d8aa8095:;
	}
	_iter_end_1d8aa8095:;;
	return jule::Str();;
}



inline jule::Str _1e0176b68_Trim(jule::Str _3989_s, jule::Str _39817_cutset) {
	return _1e017621c_TrimLeft(_1e0176591_TrimRight(_3989_s, _39817_cutset), _39817_cutset);;
}



inline jule::Str _1e0176dbb_Join(jule::Slice<jule::Str> _4049_parts, jule::Str _40423_sep) {
	{
		auto _match_expr{ _4049_parts.len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1d8aab6e7:;
			{
				return jule::Str();;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1d8aab76e:;
			{
				return _4049_parts[0LL];;
			}
		}
		_match_end_1d8aab0ed:;
	};
	jule::I64 _4119_n = 0LL;;
	{
		auto expr = &(_4049_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d8aabb48:;
		if (it != expr_end) {
			jule::Str *_41212_part = it;
			{
				_4119_n+=(*(_41212_part)).len();
				(_4119_n)++;
			}
			_iter_next_1d8aabb48:;
			++it;
			goto _iter_begin_1d8aabb48;
		}
		_iter_end_1d8aabb48:;
	};
	_1e01838bc_StrBuilder _4169_s = static__1e0183b64_New(static_cast<jule::I64>((_4119_n + 1LL)));;
	_1e018c6ea_WriteStr(&_4169_s, _4049_parts[0LL]);
	{
		auto expr = _4049_parts.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1d8aad067:;
		if (it != expr_end) {
			jule::Str *_41812_part = it;
			{
				_1e018c6ea_WriteStr(&_4169_s, _40423_sep);
				_1e018c6ea_WriteStr(&_4169_s, (*(_41812_part)));
			}
			_iter_next_1d8aad067:;
			++it;
			goto _iter_begin_1d8aad067;
		}
		_iter_end_1d8aad067:;
	};
	return _1e018cee2_Str(&_4169_s);;
}



inline jule::Str _1e0190412_Clean(jule::Str _10914_path) {
	jule::Str _1105_originalPath = _10914_path;;
	jule::I64 _1115_volLen = _1e0193217_volumeNameLen(_10914_path);;
	(_10914_path).mut_slice(_1115_volLen);;
	if ((_10914_path).empty()) {
		if ((((_1115_volLen > 1LL) && _1e0192b40_IsPathSep(_1105_originalPath[0LL])) && _1e0192b40_IsPathSep(_1105_originalPath[1LL]))) {
			return _1e01909d9_FromSlash(_1105_originalPath);;
		};
		return (_1105_originalPath + jule::Str::lit(".", 1));;
	};
	jule::Bool _1205_rooted = _1e0192b40_IsPathSep(_10914_path[0LL]);;
	jule::I64 _1275_n = _10914_path.len();;
	_1e018e576_lazyBuff _1289_out = _1e018e576_lazyBuff{._field_path=_10914_path, ._field_volAndPath=_1105_originalPath, ._field_volLen=_1115_volLen};;
	jule::I64 _1339_r = 0;;
	jule::I64 _13316_dotdot = 0;;
	({
		jule::I64 ___jule_assign_arg = 0LL;
		jule::I64 _1___jule_assign_arg = 0LL;
		_1339_r = ___jule_assign_arg;
		_13316_dotdot = _1___jule_assign_arg;
	});
	if (_1205_rooted) {
		_1e018ecb3_append(&_1289_out, 47LLU);
		({
			jule::I64 ___jule_assign_arg = 1LL;
			jule::I64 _1___jule_assign_arg = 1LL;
			_1339_r = ___jule_assign_arg;
			_13316_dotdot = _1___jule_assign_arg;
		});
	};
	while ((_1339_r < _1275_n)) {
		{
			{
				
				if (_1e0192b40_IsPathSep(_10914_path[_1339_r])) {
					_case_begin_1d8abe870:;
					{
						(_1339_r)++;
					}
				}
				else if (((_10914_path[_1339_r] == '.') && (((_1339_r + 1LL) == _1275_n) || _1e0192b40_IsPathSep(_10914_path[(_1339_r + 1LL)])))) {
					_case_begin_1d8abb394:;
					{
						(_1339_r)++;
					}
				}
				else if ((((_10914_path[_1339_r] == '.') && (_10914_path[(_1339_r + 1LL)] == '.')) && (((_1339_r + 2LL) == _1275_n) || _1e0192b40_IsPathSep(_10914_path[(_1339_r + 2LL)])))) {
					_case_begin_1d8abb40a:;
					{
						_1339_r+=2LL;
						{
							
							if ((_1289_out._field_w > _13316_dotdot)) {
								_case_begin_1d8ac28d9:;
								{
									(_1289_out._field_w)--;
									while (((_1289_out._field_w > _13316_dotdot) && (!(_1e0192b40_IsPathSep(static_cast<jule::U8>(_1e018ea0a_index(&_1289_out, _1289_out._field_w))))))) {
										{
											(_1289_out._field_w)--;
										}
									_iter_next_1d8ac316a:;
									}
									_iter_end_1d8ac316a:;;
								}
							}
							else if ((!(_1205_rooted))) {
								_case_begin_1d8ac2961:;
								{
									if ((_1289_out._field_w > 0LL)) {
										_1e018ecb3_append(&_1289_out, 47LLU);
									};
									_1e018ecb3_append(&_1289_out, '.');
									_1e018ecb3_append(&_1289_out, '.');
									_13316_dotdot=_1289_out._field_w;
								}
							}
							_match_end_1d8ac260e:;
						};
					}
				}
				else {
					_case_begin_1d8abb32d:;
					{
						if (((_1205_rooted && (_1289_out._field_w != 1LL)) || ((!(_1205_rooted)) && (_1289_out._field_w != 0LL)))) {
							_1e018ecb3_append(&_1289_out, 47LLU);
						};
						;
						for (; ((_1339_r < _1275_n) && (!(_1e0192b40_IsPathSep(_10914_path[_1339_r])))); (_1339_r)++) {
							{
								_1e018ecb3_append(&_1289_out, _10914_path[_1339_r]);
							}
						_iter_next_1d8abe364:;
						}
						_iter_end_1d8abe364:;;
					}
				}
				_match_end_1d8abb00e:;
			};
		}
	_iter_next_1d8ab93e7:;
	}
	_iter_end_1d8ab93e7:;;
	if ((_1289_out._field_w == 0LL)) {
		_1e018ecb3_append(&_1289_out, '.');
	};
	return _1e01909d9_FromSlash(_1e0190049_string(&_1289_out));;
}



inline jule::Str _1e01909d9_FromSlash(jule::Str _21214_path) {
	{
		return _21214_path;;
	};
}



inline jule::Str _1e0190c92_Join(jule::Slice<jule::Str> _2269_elem) {
	return _1e0193822_join(_2269_elem);;
}



inline jule::Str _1e019105b_Ext(jule::Str _2318_path) {
	jule::I64 _2329_i = (_2318_path.len() - 1LL);;
	for (; ((_2329_i >= 0LL) && (!(_1e0192b40_IsPathSep(_2318_path[_2329_i])))); (_2329_i)--) {
		{
			if ((_2318_path[_2329_i] == '.')) {
				return _2318_path.slice(_2329_i);;
			};
		}
	_iter_next_1d8ac6437:;
	}
	_iter_end_1d8ac6437:;;
	return jule::Str();;
}



inline __jule_tuple_str__jule_tuple_bool _1e0191325_Abs(jule::Str _2468_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Str _2475_abs_path;;
	jule::Bool _24715_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1e0193558_abs(_2468_path);
		_2475_abs_path = __jule_assign_result.__jule_result_arg0;
		_24715_ok = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _2475_abs_path;
	__jule_func_result.__jule_result_arg1 = _24715_ok;
	return __jule_func_result;;
}



inline jule::Str _1e01915de_Base(jule::Str _25513_path) {
	if ((_25513_path).empty()) {
		return jule::Str::lit(".", 1);;
	};
	while (((_25513_path.len() > 0LL) && _1e0192b40_IsPathSep(_25513_path[(_25513_path.len() - 1LL)]))) {
		{
			(_25513_path).mut_slice(0LL, (_25513_path.len() - 1LL));;
		}
	_iter_next_1d8ac87e1:;
	}
	_iter_end_1d8ac87e1:;;
	(_25513_path).mut_slice(_1e0191c4e_VolumeName(_25513_path).len());;
	jule::I64 _2669_i = (_25513_path.len() - 1LL);;
	while (((_2669_i >= 0LL) && (!(_1e0192b40_IsPathSep(_25513_path[_2669_i]))))) {
		{
			(_2669_i)--;
		}
	_iter_next_1d8aca282:;
	}
	_iter_end_1d8aca282:;;
	if ((_2669_i >= 0LL)) {
		(_25513_path).mut_slice((_2669_i + 1LL));;
	};
	if ((_25513_path).empty()) {
		return jule::Str::lit("/", 1);;
	};
	return _25513_path;;
}



inline jule::Str _1e0191985_Dir(jule::Str _2868_path) {
	jule::Str _2875_vol = _1e0191c4e_VolumeName(_2868_path);;
	jule::I64 _2889_i = (_2868_path.len() - 1LL);;
	while (((_2889_i >= _2875_vol.len()) && (!(_1e0192b40_IsPathSep(_2868_path[_2889_i]))))) {
		{
			(_2889_i)--;
		}
	_iter_next_1d8acc361:;
	}
	_iter_end_1d8acc361:;;
	jule::Str _2925_dir = _1e0190412_Clean(_2868_path.slice(_2875_vol.len(), (_2889_i + 1LL)));;
	if ((_2925_dir.equal(".", 1) && (_2875_vol.len() > 2LL))) {
		return _2875_vol;;
	};
	return (_2875_vol + _2925_dir);;
}



inline jule::Str _1e0191c4e_VolumeName(jule::Str _30415_path) {
	return _1e01909d9_FromSlash(_30415_path.slice(0LL, _1e0193217_volumeNameLen(_30415_path)));;
}



inline jule::Bool _1e0192b40_IsPathSep(jule::U8 _4814_c) {
	return (47LL == _4814_c);;
}



inline jule::Bool _1e0192e4d_IsAbs(jule::Str _5310_path) {
	return _1e016e5ab_HasPrefix(_5310_path, jule::Str::lit("/", 1));;
}



inline jule::I64 _1e0193217_volumeNameLen(jule::Str _5918_path) {
	return 0LL;;
}



inline __jule_tuple_str__jule_tuple_bool _1e0193558_abs(jule::Str _638_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if (_1e0192e4d_IsAbs(_638_path)) {
		__jule_func_result.__jule_result_arg0 = _1e0190412_Clean(_638_path);
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	jule::Str _675_wd = ({
		auto except = _216853a5a_WorkingDir();
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = jule::Str();
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		} jule::Str();});
	});;
	__jule_func_result.__jule_result_arg0 = _1e0193822_join(jule::Slice<jule::Str>::make({_675_wd,_638_path}));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Str _1e0193822_join(jule::Slice<jule::Str> _739_elem) {
	{
		auto expr = &(_739_elem);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d8ad5864:;
		if (it != expr_end) {
			jule::I64 _749_i = it - expr->begin();
			jule::Str *_7412_e = it;
			{
				if (!((*(_7412_e))).empty()) {
					return _1e0190412_Clean(_1e0176dbb_Join(_739_elem.slice(_749_i), jule::Str::lit("/", 1)));;
				};
			}
			_iter_next_1d8ad5864:;
			++it;
			_749_i++;
			goto _iter_begin_1d8ad5864;
		}
		_iter_end_1d8ad5864:;
	};
	return jule::Str();;
}



inline jule::I64 _21676320b_getLastFsError(void) {
	jule::I64 _725_err = _208aec51a_GetLastErrno();;
	{
		auto &_match_expr{ _725_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1d8ae3212:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1d8ae28d7:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else if (_match_expr == 40LL) {
			_case_begin_1d8ae2ac4:;
			{
				return static_cast<jule::I64>(2LL);;
			}
		}
		else if (_match_expr == 36LL) {
			_case_begin_1d8ae2b3a:;
			{
				return static_cast<jule::I64>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1d8ae2ba1:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1d8ae2c17:;
			{
				return static_cast<jule::I64>(5LL);;
			}
		}
		else if (_match_expr == 75LL) {
			_case_begin_1d8ae3344:;
			{
				return static_cast<jule::I64>(6LL);;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1d8ae33aa:;
			{
				return static_cast<jule::I64>(7LL);;
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_1d8ae3421:;
			{
				return static_cast<jule::I64>(8LL);;
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_1d8ae3487:;
			{
				return static_cast<jule::I64>(9LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1d8ae350e:;
			{
				return static_cast<jule::I64>(10LL);;
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_1d8ae3586:;
			{
				return static_cast<jule::I64>(11LL);;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1d8ae360d:;
			{
				return static_cast<jule::I64>(12LL);;
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1d8ae3685:;
			{
				return static_cast<jule::I64>(13LL);;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1d8ae370c:;
			{
				return static_cast<jule::I64>(14LL);;
			}
		}
		else if (_match_expr == 63LL) {
			_case_begin_1d8ae3784:;
			{
				return static_cast<jule::I64>(15LL);;
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_1d8ae380b:;
			{
				return static_cast<jule::I64>(16LL);;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1d8ae3883:;
			{
				return static_cast<jule::I64>(17LL);;
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_1d8ae390a:;
			{
				return static_cast<jule::I64>(18LL);;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1d8ae3982:;
			{
				return static_cast<jule::I64>(19LL);;
			}
		}
		else if (_match_expr == 26LL || _match_expr == 16LL) {
			_case_begin_1d8ae3a09:;
			{
				return static_cast<jule::I64>(20LL);;
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_1d8ae3a81:;
			{
				return static_cast<jule::I64>(21LL);;
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1d8ae3b08:;
			{
				return static_cast<jule::I64>(22LL);;
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_1d8ae3b80:;
			{
				return static_cast<jule::I64>(23LL);;
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_1d8ae3c07:;
			{
				return static_cast<jule::I64>(24LL);;
			}
		}
		else if (_match_expr == 105LL) {
			_case_begin_1d8ae3c7e:;
			{
				return static_cast<jule::I64>(25LL);;
			}
		}
		else if (_match_expr == 74LL) {
			_case_begin_1d8ae3d06:;
			{
				return static_cast<jule::I64>(26LL);;
			}
		}
		else if (_match_expr == 39LL) {
			_case_begin_1d8ae3d7d:;
			{
				return static_cast<jule::I64>(27LL);;
			}
		}
		else {
			_case_begin_1d8ae2a5d:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		_match_end_1d8ae2a08:;
	};
}



inline __jule_tuple_int__jule_tuple_bool _1e02e91c5_AtoiBp(jule::U8* _722_b, jule::I64 _736_n) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Bool _89_neg = ((*(_722_b)) == '-');;
	if (_89_neg) {
		if ((_736_n == 1LL)) {
			return __jule_func_result;;
		};
		(_736_n)--;
		(_722_b)++;
	};
	for (; (_736_n > 0LL); (_736_n)--) {
		{
			if ((('0' <= (*(_722_b))) && ((*(_722_b)) <= '9'))) {
				__jule_func_result.__jule_result_arg0*=10LL;
				__jule_func_result.__jule_result_arg0+=static_cast<jule::I64>(((*(_722_b)) - '0'));
			} else {
				return __jule_func_result;;
			};
			(_722_b)++;
		}
	_iter_next_1d8b19c72:;
	}
	_iter_end_1d8b19c72:;;
	__jule_func_result.__jule_result_arg1=true;
	if (_89_neg) {
		__jule_func_result.__jule_result_arg0=static_cast<jule::I64>((-(__jule_func_result.__jule_result_arg0)));
	};
	return __jule_func_result;;
}



inline jule::Str _1e03480e2_Itoa(jule::I64 _89_x) {
	if ((_89_x < 0LL)) {
		return (jule::Str::lit("-", 1) + _1e0348400_Utoa(static_cast<jule::U64>(static_cast<jule::U64>((-(_89_x))))));;
	};
	return _1e0348400_Utoa(static_cast<jule::U64>(static_cast<jule::U64>(_89_x)));;
}



inline jule::Str _1e0348400_Utoa(jule::U64 _1613_x) {
	if ((_1613_x == 0LLU)) {
		return jule::Str::lit("0", 1);;
	};
	jule::Slice<jule::U8> _209_buf = jule::Slice<jule::U8>::alloc(20LL, 20LL, 0);;
	jule::I64 _219_i = 0LL;;
	while ((_1613_x >= 10LLU)) {
		{
			jule::U64 _239_q = (_1613_x / 10LLU);;
			_209_buf[_219_i]=static_cast<jule::U8>(static_cast<jule::U8>((('0' + _1613_x) - (_239_q * 10LLU))));
			(_219_i)++;
			_1613_x=_239_q;
		}
	_iter_next_1d84353d4:;
	}
	_iter_end_1d84353d4:;;
	_209_buf[_219_i]=static_cast<jule::U8>(static_cast<jule::U8>(('0' + _1613_x)));
	(_209_buf).mut_slice(0LL, (_219_i + 1LL));;
	_1e0348631_rev(&(_209_buf));
	return _216828920_StrFromBytes(_209_buf);;
}



inline void _1e0348631_rev(jule::Slice<jule::U8>* _3513_b) {
	jule::I64 _369_i = 0LL;;
	for (; (_369_i < ((*(_3513_b)).len() >> 1LL)); (_369_i)++) {
		{
			({
				jule::U8 ___jule_assign_arg = (*(_3513_b))[(((*(_3513_b)).len() - 1LL) - _369_i)];
				jule::U8 _1___jule_assign_arg = (*(_3513_b))[_369_i];
				(*(_3513_b))[_369_i] = ___jule_assign_arg;
				(*(_3513_b))[(((*(_3513_b)).len() - 1LL) - _369_i)] = _1___jule_assign_arg;
			});
		}
	_iter_next_1d8436ddb:;
	}
	_iter_end_1d8436ddb:;;
}



inline jule::Slice<char*> _1e034bc83_strSliceToCstrSlice(jule::Slice<jule::Str>* _3525_s, jule::Slice<jule::Slice<jule::U8>>* _3540_bargs) {
	jule::Slice<char*> _369_cs = jule::Slice<char*>::alloc(((*(_3525_s)).len() + 1LL), ((*(_3525_s)).len() + 1LL), nullptr);;
	(*(_3540_bargs))=jule::Slice<jule::Slice<jule::U8>>::alloc((*(_3525_s)).len(), (*(_3525_s)).len());
	{
		auto expr = _3525_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d8455415:;
		if (it != expr_end) {
			jule::I64 _389_i = it - expr->begin();
			jule::Str *_3812_arg = it;
			{
				jule::Slice<jule::U8> _3913_barg = _216720482_StrToBytes((*(_3812_arg)));;
				(*(_3540_bargs))[_389_i]=_3913_barg;
				_369_cs[_389_i]=((char*)((&(_3913_barg[0LL]))));
			}
			_iter_next_1d8455415:;
			++it;
			_389_i++;
			goto _iter_begin_1d8455415;
		}
		_iter_end_1d8455415:;
	};
	_369_cs[(_369_cs.len() - 1LL)]=nullptr;
	return _369_cs;;
}



inline jule::I64 _1e034c107_execvp(jule::Str* _4712_file, jule::Slice<jule::Str>* _4724_argv) {
	jule::Slice<jule::Slice<jule::U8>> _489_bargs = static_cast<jule::Slice<jule::Slice<jule::U8>>>(nullptr);;
	jule::Slice<char*> _495_cargv = _1e034bc83_strSliceToCstrSlice(_4724_argv, &(_489_bargs));;
	jule::Slice<jule::U8> _505_s = _216720482_StrToBytes((*(_4712_file)));;
	{
		return static_cast<jule::I64>(execvp(((char*)((&(_505_s[0LL])))), (char*const*)(&(_495_cargv[0LL]))));;
	};
}



inline jule::VoidExceptional _1e034c338_setenv(jule::Slice<jule::Str>* _5612_envv) {
	;
	{
		auto expr = _5612_envv;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d845965b:;
		if (it != expr_end) {
			jule::Str *_5812_env = it;
			{
				jule::I64 _599_i = _1e016d643_FindByteStr((*(_5812_env)), '=');;
				if ((_599_i == -1LL)) {
					return jule::VoidExceptional(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0));
				};
				{
					jule::Slice<jule::U8> _6413_key = _216720482_StrToBytes((*(_5812_env)).slice(0LL, _599_i));;
					if ((((*(_5812_env)).len() - _599_i) == 1LL)) {
						jule::Str _6617_val = jule::Str::lit("\x00", 1);;
						if ((setenv(((char*)((&(_6413_key[0LL])))), ((char*)((&(_6617_val[0LL])))), 1LL) == -1LL)) {
							return jule::VoidExceptional(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0));
						};
					} else {
						jule::Slice<jule::U8> _7117_val = _216720482_StrToBytes((*(_5812_env)).slice((_599_i + 1LL)));;
						if ((setenv(((char*)((&(_6413_key[0LL])))), ((char*)((&(_7117_val[0LL])))), 1LL) == -1LL)) {
							return jule::VoidExceptional(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0));
						};
					};
				};
			}
			_iter_next_1d845965b:;
			++it;
			goto _iter_begin_1d845965b;
		}
		_iter_end_1d845965b:;
	};
	return jule::VoidExceptional();
}



inline jule::I64 _1e034d2b2_processErrorFromCode(jule::I64 _1125_code) {
	{
		auto &_match_expr{ _1125_code };
		
		if (_match_expr == 13LL) {
			_case_begin_1d845e3a8:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1d8459a13:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else {
			_case_begin_1d845ac01:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		_match_end_1d845ab9b:;
	};
}



inline jule::I64 _1e034d515_getLastProcessError(void) {
	return _1e034d2b2_processErrorFromCode(static_cast<jule::I64>(_208aec51a_GetLastErrno()));;
}



inline void _1e034dd2e_Exit(jule::I64 _129_code) {
	_216738544_Exit(_129_code);
}



inline jule::Str _1e034e03d_Executable(void) {
	return jule::executable();;
}



inline jule::Bool _1e0228500_IsStdHeaderPath(jule::Str _2620_p) {
	return ((_2620_p[0LL] == '<') && (_2620_p[(_2620_p.len() - 1LL)] == '>'));;
}



inline jule::Bool _1e02287ca_IsValidHeaderExt(jule::Str _3121_ext) {
	{
		auto expr = &(_1e0194b0e_CppHeaderExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d8481809:;
		if (it != expr_end) {
			jule::Str *_3212_validExt = it;
			{
				if ((_3121_ext == (*(_3212_validExt)))) {
					return true;;
				};
			}
			_iter_next_1d8481809:;
			++it;
			goto _iter_begin_1d8481809;
		}
		_iter_end_1d8481809:;
	};
	return false;;
}



inline jule::Bool _1e0228a94_IsValidCppExt(jule::Str _4118_ext) {
	if (_4118_ext.equal(".c", 2)) {
		return true;;
	};
	{
		auto expr = &(_1e02265ec_CppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d84827a5:;
		if (it != expr_end) {
			jule::Str *_4512_e = it;
			{
				if ((_4118_ext == (*(_4512_e)))) {
					return true;;
				};
			}
			_iter_next_1d84827a5:;
			++it;
			goto _iter_begin_1d84827a5;
		}
		_iter_end_1d84827a5:;
	};
	{
		auto expr = &(_1e02268b6_ObjectiveCppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d84830e1:;
		if (it != expr_end) {
			jule::Str *_5012_e = it;
			{
				if ((_4118_ext == (*(_5012_e)))) {
					return true;;
				};
			}
			_iter_next_1d84830e1:;
			++it;
			goto _iter_begin_1d84830e1;
		}
		_iter_end_1d84830e1:;
	};
	return false;;
}



inline jule::Str _1e0235ee1_Logf(jule::Str _3229_fmt, jule::Slice<jule::Any> _32222_args) {
	return _1e0236981_applyFmt(_3229_fmt, _32222_args);;
}



inline jule::Str _1e02362ee_argToStr(jule::Any _32613_arg) {
	{
		auto &_match_expr{ _32613_arg };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1d8483685:;
			{
				return _32613_arg.cast<jule::Str>(&__jule_any_type4);;
			}
		}
		else if (_match_expr.type == &__jule_any_type129) {
			_case_begin_1d84846a8:;
			{
				return jule::Str::from_byte(_32613_arg.cast<jule::U8>(&__jule_any_type129));;
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1d848471e:;
			{
				return jule::Str::from_rune(_32613_arg.cast<jule::I32>(&__jule_any_type6));;
			}
		}
		else {
			_case_begin_1d84840d1:;
			{
				return jule::Str::lit("<fmt?>", 6);;
			}
		}
		_match_end_1d848407b:;
	};
}



inline jule::I64 _1e02365b8_findNextFmt(jule::Str _33916_fmt) {
	{
		auto expr = &(_33916_fmt);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d848505a:;
		if (it != expr_end) {
			jule::I64 _3409_i = it - expr->begin();
			jule::U8 *_34012_b = it;
			{
				if (((*(_34012_b)) == '@')) {
					return _3409_i;;
				};
			}
			_iter_next_1d848505a:;
			++it;
			_3409_i++;
			goto _iter_begin_1d848505a;
		}
		_iter_end_1d848505a:;
	};
	return -1LL;;
}



inline jule::Str _1e0236981_applyFmt(jule::Str _34817_fmt, jule::Slice<jule::Any> _34827_args) {
	_1e01838bc_StrBuilder _3499_s = static__1e0183b64_New(32LL);;
	{
		auto expr = &(_34827_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d84869b8:;
		if (it != expr_end) {
			jule::Any *_35012_arg = it;
			{
				jule::I64 _3519_i = _1e02365b8_findNextFmt(_34817_fmt);;
				if ((_3519_i == -1LL)) {
					goto _iter_end_1d84869b8;
				};
				_1e018c6ea_WriteStr(&_3499_s, _34817_fmt.slice(0LL, _3519_i));
				_1e018c6ea_WriteStr(&_3499_s, _1e02362ee_argToStr((*(_35012_arg))));
				(_34817_fmt).mut_slice((_3519_i + 1LL));;
			}
			_iter_next_1d84869b8:;
			++it;
			goto _iter_begin_1d84869b8;
		}
		_iter_end_1d84869b8:;
	};
	_1e018c6ea_WriteStr(&_3499_s, _34817_fmt);
	return _1e018cee2_Str(&_3499_s);;
}



inline jule::Bool _1e02377ea_IsTopDirective(jule::Str _2219_directive) {
	return (_2219_directive.equal("pass", 4) || _2219_directive.equal("build", 5));;
}



inline jule::Bool _1e023daa9_IsWindows(jule::Str _3714_os) {
	return _3714_os.equal("windows", 7);;
}



inline jule::Bool _1e023dd84_IsDarwin(jule::Str _4013_os) {
	return _4013_os.equal("darwin", 6);;
}



inline jule::Bool _1e023e14d_IsLinux(jule::Str _4312_os) {
	return _4312_os.equal("linux", 5);;
}



inline jule::Bool _1e023e48e_IsI386(jule::Str _4611_arch) {
	return _4611_arch.equal("i386", 4);;
}



inline jule::Bool _1e023e758_IsAmd64(jule::Str _4912_arch) {
	return _4912_arch.equal("amd64", 5);;
}



inline jule::Bool _1e023ea22_IsArm64(jule::Str _5212_arch) {
	return _5212_arch.equal("arm64", 5);;
}



inline jule::Bool _1e023ecdb_IsUnix(jule::Str _5511_os) {
	return (_1e023dd84_IsDarwin(_5511_os) || _1e023e14d_IsLinux(_5511_os));;
}



inline jule::Bool _1e0240182_Is32Bit(jule::Str _5812_arch) {
	return _1e023e48e_IsI386(_5812_arch);;
}



inline jule::Bool _1e024044b_Is64Bit(jule::Str _6112_arch) {
	return (_1e023e758_IsAmd64(_6112_arch) || _1e023ea22_IsArm64(_6112_arch));;
}



inline void _1e0350319_init(void) {
	jule::Str _259_path = _1e034e03d_Executable();;
	if ((_259_path).empty()) {
		jule::panic(jule::Str::lit("std::jule::build: executable file cannot found", 46) + jule::Str("\nlocation: std/jule/build/env.jule:27:9"));;
	};
	{
		_1e034e846_PathWd=({
			auto except = _216853a5a_WorkingDir();
			(except.ok()) ? (except.result) : ({{
				jule::panic(jule::Str::lit("std::jule::build: working directory path cannot found", 53) + jule::Str("\nlocation: std/jule/build/env.jule:33:13"));;
				return;;
			} jule::Str();});
		});
		_1e034e58d_PathExec=_1e0191985_Dir(_259_path);
		_1e034e33a_PathStdlib=_1e0190c92_Join(jule::Slice<jule::Str>::make({_1e034e58d_PathExec,jule::Str::lit("..", 2),jule::Str::lit("std", 3)}));
		_1e034eb54_PathApi=_1e0190c92_Join(jule::Slice<jule::Str>::make({_1e034e58d_PathExec,jule::Str::lit("..", 2),jule::Str::lit("api", 3),jule::Str::lit("jule.hpp", 8)}));
	};
}



inline jule::I64 _1c75db37b_LeadingZeros64(jule::U64 _6119_x) {
	return static_cast<jule::I64>((64LL - _1c75e3c79_Len64(_6119_x)));;
}



inline jule::I64 _1c75dc2d3_TrailingZeros(jule::U64 _8318_x) {
	;
	return static_cast<jule::I64>(_1c75dd009_TrailingZeros64(static_cast<jule::U64>(static_cast<jule::U64>(_8318_x))));;
}



inline jule::I64 _1c75dcc40_TrailingZeros32(jule::U32 _10520_x) {
	if ((_10520_x == 0LLU)) {
		return 32LL;;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_1c75db997__DE_BRUIJN32_TAB[static_cast<jule::I64>((((_10520_x & (-(_10520_x))) * 125613361LLU) >> 27LLU))]));;
}



inline jule::I64 _1c75dd009_TrailingZeros64(jule::U64 _11420_x) {
	if ((_11420_x == 0LLU)) {
		return 64LL;;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_1c75dc05d__DE_BRUIJN64_TAB[static_cast<jule::I64>((((_11420_x & (-(_11420_x))) * 285870213051353865LLU) >> 58LLU))]));;
}



inline jule::I64 _1c75e39b0_Len32(jule::U32 _35214_x) {
	jule::I64 __jule_func_result = 0;
	if ((_35214_x >= 65536LLU)) {
		_35214_x>>=16LLU;
		__jule_func_result=16LL;
	};
	if ((_35214_x >= 256LLU)) {
		_35214_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = static_cast<jule::I64>((__jule_func_result + static_cast<jule::I64>(jule::Str::at(reinterpret_cast<const jule::U8*>("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b"), 256, static_cast<jule::I64>(_35214_x)))));
	return __jule_func_result;;
}



inline jule::I64 _1c75e3c79_Len64(jule::U64 _36614_x) {
	jule::I64 __jule_func_result = 0;
	if ((_36614_x >= 4294967296LLU)) {
		_36614_x>>=32LLU;
		__jule_func_result=32LL;
	};
	if ((_36614_x >= 65536LLU)) {
		_36614_x>>=16LLU;
		__jule_func_result+=16LL;
	};
	if ((_36614_x >= 256LLU)) {
		_36614_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = static_cast<jule::I64>((__jule_func_result + static_cast<jule::I64>(jule::Str::at(reinterpret_cast<const jule::U8*>("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b"), 256, static_cast<jule::I64>(_36614_x)))));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _1c75e4a16_Add64(jule::U64 _41510_x, jule::U64 _41518_y, jule::U64 _41526_carry) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg0=static_cast<jule::U64>(((_41510_x + _41518_y) + _41526_carry));
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>((((_41510_x & _41518_y) | ((_41510_x | _41518_y) & (~(__jule_func_result.__jule_result_arg0)))) >> 63LLU));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _1c75e6320_Mul64(jule::U64 _49910_x, jule::U64 _49918_y) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::U64 _5015_x0 = (_49910_x & 4294967295LLU);;
	jule::U64 _5025_x1 = (_49910_x >> 32LLU);;
	jule::U64 _5035_y0 = (_49918_y & 4294967295LLU);;
	jule::U64 _5045_y1 = (_49918_y >> 32LLU);;
	jule::U64 _5055_w0 = (_5015_x0 * _5035_y0);;
	jule::U64 _5065_t = ((_5025_x1 * _5035_y0) + (_5055_w0 >> 32LLU));;
	jule::U64 _5079_w1 = (_5065_t & 4294967295LLU);;
	jule::U64 _5085_w2 = (_5065_t >> 32LLU);;
	_5079_w1+=(_5015_x0 * _5045_y1);
	__jule_func_result.__jule_result_arg0=static_cast<jule::U64>((((_5025_x1 * _5045_y1) + _5085_w2) + (_5079_w1 >> 32LLU)));
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>((_49910_x * _49918_y));
	return __jule_func_result;;
}



inline jule::U32 _1c74ece91_F32Bits(jule::F32 _4112_f) {
	return (*(((jule::U32*)((&(_4112_f))))));;
}



inline jule::F32 _1c74ed25a_F32FromBits(jule::U32 _4716_b) {
	return (*(((jule::F32*)((&(_4716_b))))));;
}



inline jule::U64 _1c74ed524_F64Bits(jule::F64 _5212_f) {
	return (*(((jule::U64*)((&(_5212_f))))));;
}



inline jule::F64 _1c74ed865_F64FromBits(jule::U64 _5816_b) {
	return (*(((jule::F64*)((&(_5816_b))))));;
}



inline __jule_tuple_f64__jule_tuple_int _1c7500e1c_Frexp(jule::F64 _4714_f) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		
		if ((_4714_f == 0LL)) {
			_case_begin_1d8b626b0:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		else if (_1c75ee02b_IsInf(_4714_f, 0LL) || _1c75ed921_IsNaN(_4714_f)) {
			_case_begin_1d8b62737:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		_match_end_1d8b625d3:;
	};
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1c75ee2e5_normalize(_4714_f);
		_4714_f = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _569_x = _1c74ed524_F64Bits(_4714_f);;
	__jule_func_result.__jule_result_arg1+=((static_cast<jule::I64>(((_569_x >> 52LLU) & 2047LLU)) - 1023LL) + 1LL);
	_569_x=static_cast<jule::U64>((_569_x & 9227875636482146303LLU));
	_569_x|=4602678819172646912LLU;
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_1c74ed865_F64FromBits(_569_x));
	return __jule_func_result;;
}



inline jule::F64 _1c75ed613_NaN(void) {
	return static_cast<jule::F64>(_1c74ed865_F64FromBits(9221120237041090561LLU));;
}



inline jule::Bool _1c75ed921_IsNaN(jule::F64 _5210_f) {
	return false;;
}



inline jule::F64 _1c75edbda_Inf(jule::I64 _618_sign) {
	if ((_618_sign >= 0LL)) {
		return static_cast<jule::F64>(_1c74ed865_F64FromBits(9218868437227405312LLU));;
	};
	return static_cast<jule::F64>(_1c74ed865_F64FromBits(18442240474082181120LLU));;
}



inline jule::Bool _1c75ee02b_IsInf(jule::F64 _7210_f, jule::I64 _7218_sign) {
	return (((_7218_sign >= 0LL) && (_7210_f > jule::MAX_F64)) || ((_7218_sign <= 0LL) && (_7210_f < jule::MIN_F64)));;
}



inline __jule_tuple_f64__jule_tuple_int _1c75ee2e5_normalize(jule::F64 _8214_x) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	if ((_1c760169e_Abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>((_8214_x * 4503599627370496LLU));
		__jule_func_result.__jule_result_arg1 = -52LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _8214_x;
	__jule_func_result.__jule_result_arg1 = 0LL;
	return __jule_func_result;;
}



inline jule::F64 _1c7600cb9_Log(jule::F64 _1118_x) {
	;
	;
	;
	;
	;
	;
	;
	;
	;
	{
		
		if (_1c75ed921_IsNaN(_1118_x) || _1c75ee02b_IsInf(_1118_x, 1LL)) {
			_case_begin_1d8ba0c1a:;
			{
				return _1118_x;;
			}
		}
		else if ((_1118_x < 0LL)) {
			_case_begin_1d8ba0c92:;
			{
				return static_cast<jule::F64>(_1c75ed613_NaN());;
			}
		}
		else if ((_1118_x == 0LL)) {
			_case_begin_1d8ba0d19:;
			{
				return static_cast<jule::F64>(_1c75edbda_Inf(-1LL));;
			}
		}
		_match_end_1d8ba0b4e:;
	};
	jule::F64 _1339_f1 = 0;;
	jule::I64 _13317_ki = 0;;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1c7500e1c_Frexp(_1118_x);
		_1339_f1 = __jule_assign_result.__jule_result_arg0;
		_13317_ki = __jule_assign_result.__jule_result_arg1;
	});
	if ((_1339_f1 < 0.7071067811865476)) {
		_1339_f1*=2LL;
		(_13317_ki)--;
	};
	jule::F64 _1385_f = (_1339_f1 - 1LL);;
	jule::F64 _1395_k = static_cast<jule::F64>(_13317_ki);;
	jule::F64 _1425_s = jule::div(_1385_f,(2LL + _1385_f));;
	jule::F64 _1435_s2 = (_1425_s * _1425_s);;
	jule::F64 _1445_s4 = (_1435_s2 * _1435_s2);;
	jule::F64 _1455_t1 = (_1435_s2 * (0.6666666666666735 + (_1445_s4 * (0.2857142874366239 + (_1445_s4 * (0.1818357216161805 + (_1445_s4 * 0.14798198605116586)))))));;
	jule::F64 _1465_t2 = (_1445_s4 * (0.3999999999940942 + (_1445_s4 * (0.22222198432149784 + (_1445_s4 * 0.15313837699209373)))));;
	jule::F64 _1475_R = (_1455_t1 + _1465_t2);;
	jule::F64 _1485_hfsq = ((0.5 * _1385_f) * _1385_f);;
	return static_cast<jule::F64>(((_1395_k * 0.6931471803691238) - ((_1485_hfsq - ((_1425_s * (_1485_hfsq + _1475_R)) + (_1395_k * 0.00000000019082149292705877))) - _1385_f)));;
}



inline jule::F64 _1c760169e_Abs(jule::F64 _438_x) {
	return static_cast<jule::F64>(_1c74ed865_F64FromBits(static_cast<jule::U64>((_1c74ed524_F64Bits(_438_x) & 9223372036854775807LLU))));;
}



inline __jule_tuple_f64__jule_tuple_f64 _1c7608398_Modf(jule::F64 _449_f) {
	__jule_tuple_f64__jule_tuple_f64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::F64 _465_absF = _1c760169e_Abs(_449_f);;
	jule::F64 _479_i = 0LL;;
	if ((_465_absF > 4503599627370496LL)) {
		_479_i=_449_f;
	} else {
		_479_i=static_cast<jule::F64>((_465_absF + 4503599627370496LL));
		_479_i-=4503599627370496LL;
		while ((_479_i > _465_absF)) {
			{
				(_479_i)--;
			}
		_iter_next_1d8d77133:;
		}
		_iter_end_1d8d77133:;;
		if ((_449_f < 0LL)) {
			_479_i=static_cast<jule::F64>((-(_479_i)));
		};
	};
	__jule_func_result.__jule_result_arg0 = _479_i;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::F64>((_449_f - _479_i));
	return __jule_func_result;;
}



inline jule::F64 _1c7608ba1_Log2(jule::F64 _449_x) {
	jule::F64 _455_frac = 0;;
	jule::I64 _4511_exp = 0;;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1c7500e1c_Frexp(_449_x);
		_455_frac = __jule_assign_result.__jule_result_arg0;
		_4511_exp = __jule_assign_result.__jule_result_arg1;
	});
	if ((_455_frac == 0.5)) {
		return static_cast<jule::F64>(static_cast<jule::F64>((_4511_exp - 1LL)));;
	};
	return static_cast<jule::F64>(((_1c7600cb9_Log(_455_frac) * 1.4426950408889634) + static_cast<jule::F64>(_4511_exp)));;
}



inline jule::Str _1d42eb36a_FmtFloat(jule::F64 _7913_f, jule::U8 _7921_fmt, jule::I64 _7932_prec, jule::I64 _7943_bitSize) {
	return _216828920_StrFromBytes(_1d42eb953_genericFtoa(jule::Slice<jule::U8>::alloc(0LL, _1d42eed85_max(static_cast<jule::I64>(((_7932_prec + 4LL) + 1LL)), 25LL), 0), _7913_f, _7921_fmt, _7932_prec, _7943_bitSize));;
}



inline jule::Slice<jule::U8> _1d42eb953_genericFtoa(jule::Slice<jule::U8> _8720_dst, jule::F64 _8733_val, jule::U8 _8743_fmt, jule::I64 _8758_prec, jule::I64 _8769_bitSize) {
	jule::U64 _889_bits = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_1d42ea2c0_floatInfo> _8913_flt = nullptr;;
	{
		auto &_match_expr{ _8769_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1d8eedd8c:;
			{
				_889_bits=static_cast<jule::U64>(static_cast<jule::U64>(_1c74ece91_F32Bits(static_cast<jule::F32>(static_cast<jule::F32>(_8733_val)))));
				_8913_flt=((jule::Ptr<_1d42ea2c0_floatInfo>)((&(_1d42ea5cd_f32info))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1d8eedc05:;
			{
				_889_bits=static_cast<jule::U64>(_1c74ed524_F64Bits(_8733_val));
				_8913_flt=((jule::Ptr<_1d42ea2c0_floatInfo>)((&(_1d42ea842_f64info))));
			}
		}
		else {
			_case_begin_1d8eed650:;
			{
				jule::panic(jule::Str::lit("std::conv: illegal bitSize", 26) + jule::Str("\nlocation: std/conv/ftoa.jule:98:9"));;
			}
		}
		_match_end_1d8eed4a7:;
	};
	jule::Bool _1015_neg = ((_889_bits >> ((*(_8913_flt))._field_expbits + (*(_8913_flt))._field_mantbits)) != 0LLU);;
	jule::I64 _1029_exp = (static_cast<jule::I64>((_889_bits >> (*(_8913_flt))._field_mantbits)) & static_cast<jule::I64>(((1LL << (*(_8913_flt))._field_expbits) - 1LL)));;
	jule::U64 _1039_mant = (_889_bits & ((static_cast<jule::U64>(1LLU) << (*(_8913_flt))._field_mantbits) - 1LLU));;
	{
		auto &_match_expr{ _1029_exp };
		
		if (_match_expr == static_cast<jule::I64>(static_cast<jule::I64>(((1LL << (*(_8913_flt))._field_expbits) - 1LL)))) {
			_case_begin_1d90029b7:;
			{
				{
					
					if ((_1039_mant != 0LLU)) {
						_case_begin_1d9004777:;
						{
							return jule::append(_8720_dst,_21682838c_StrBytes(jule::Str::lit("nan", 3)));;
						}
					}
					else if (_1015_neg) {
						_case_begin_1d9003ac8:;
						{
							return jule::append(_8720_dst,_21682838c_StrBytes(jule::Str::lit("-inf", 4)));;
						}
					}
					else {
						_case_begin_1d9003a62:;
						{
							return jule::append(_8720_dst,_21682838c_StrBytes(jule::Str::lit("+inf", 4)));;
						}
					}
					_match_end_1d9003996:;
				};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1d9002ae9:;
			{
				(_1029_exp)++;
			}
		}
		else {
			_case_begin_1d9001bc5:;
			{
				_1039_mant|=(static_cast<jule::U64>(1LLU) << (*(_8913_flt))._field_mantbits);
			}
		}
		_match_end_1d9001d3a:;
	};
	_1029_exp+=(*(_8913_flt))._field_bias;
	if ((_8743_fmt == 'b')) {
		return _1d42ede83_fmtB(_8720_dst, _1015_neg, _1039_mant, _1029_exp, &((*(_8913_flt))));;
	};
	if (((_8743_fmt == 'x') || (_8743_fmt == 'X'))) {
		return _1d42ee68c_fmtX(_8720_dst, _8758_prec, _8743_fmt, _1015_neg, _1039_mant, _1029_exp, &((*(_8913_flt))));;
	};
	;
	_1d42eacd7_decimalSlice _1379_digs = _1d42eacd7_decimalSlice{};;
	jule::Bool _1389_ok = false;;
	jule::Bool _1405_shortest = (_8758_prec < 0LL);;
	if (_1405_shortest) {
		_1379_digs._field_d=jule::Slice<jule::U8>::alloc(32LL, 32LL, 0);
		_1d4309c4c_ryuFtoaShortest(&(_1379_digs), _1039_mant, static_cast<jule::I64>((_1029_exp - static_cast<jule::I64>((*(_8913_flt))._field_mantbits))), &((*(_8913_flt))));
		_1389_ok=true;
		{
			auto &_match_expr{ _8743_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1d900822b:;
				{
					_8758_prec=static_cast<jule::I64>(_1d42eed85_max(static_cast<jule::I64>((_1379_digs._field_nd - 1LL)), 0LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1d9008292:;
				{
					_8758_prec=static_cast<jule::I64>(_1d42eed85_max(static_cast<jule::I64>((_1379_digs._field_nd - _1379_digs._field_dp)), 0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1d9008308:;
				{
					_8758_prec=_1379_digs._field_nd;
				}
			}
			_match_end_1d9007428:;
		};
	} else if ((_8743_fmt != 'f')) {
		jule::I64 _15713_digits = _8758_prec;;
		{
			auto &_match_expr{ _8743_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1d9009e42:;
				{
					(_15713_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1d900a151:;
				{
					if ((_8758_prec == 0LL)) {
						_8758_prec=1LL;
					};
					_15713_digits=_8758_prec;
				}
			}
			else {
				_case_begin_1d900a0da:;
				{
					_15713_digits=1LL;
				}
			}
			_match_end_1d900a085:;
		};
		if (((_8769_bitSize == 32LL) && (_15713_digits <= 9LL))) {
			_1379_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_1d4308982_ryuFtoaFixed32(&(_1379_digs), static_cast<jule::U32>(static_cast<jule::U32>(_1039_mant)), static_cast<jule::I64>((_1029_exp - static_cast<jule::I64>((*(_8913_flt))._field_mantbits))), _15713_digits);
			_1389_ok=true;
		} else if ((_15713_digits <= 18LL)) {
			_1379_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_1d4308e27_ryuFtoaFixed64(&(_1379_digs), _1039_mant, static_cast<jule::I64>((_1029_exp - static_cast<jule::I64>((*(_8913_flt))._field_mantbits))), _15713_digits);
			_1389_ok=true;
		};
	};
	if ((!(_1389_ok))) {
		return _1d42ec15c_bigFtoa(_8720_dst, _8758_prec, _8743_fmt, _1015_neg, _1039_mant, _1029_exp, &((*(_8913_flt))));;
	};
	return _1d42ec833_fmtDigits(_8720_dst, _1405_shortest, _1015_neg, _1379_digs, _8758_prec, _8743_fmt);;
}



inline jule::Slice<jule::U8> _1d42ec15c_bigFtoa(jule::Slice<jule::U8> _18716_dst, jule::I64 _18733_prec, jule::U8 _18744_fmt, jule::Bool _18755_neg, jule::U64 _1885_mant, jule::I64 _18816_exp, _1d42ea2c0_floatInfo* _18827_flt) {
	_1d430da64_decimal _1899_d = _1d430da64_decimal{};;
	_1d430de1b_assign(&_1899_d, _1885_mant);
	_1d430e1c4_shift(&_1899_d, static_cast<jule::I64>((_18816_exp - static_cast<jule::I64>((*(_18827_flt))._field_mantbits))));
	_1d42eacd7_decimalSlice _1929_digs = _1d42eacd7_decimalSlice{};;
	jule::Bool _1935_shortest = (_18733_prec < 0LL);;
	if (_1935_shortest) {
		_1d42ecc84_roundShortest(&(_1899_d), _1885_mant, _18816_exp, _18827_flt);
		_1929_digs=_1d42eacd7_decimalSlice{._field_d=_1899_d._field_d.slice(0LL), ._field_nd=_1899_d._field_nd, ._field_dp=_1899_d._field_dp, };
		{
			auto &_match_expr{ _18744_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1d90113ee:;
				{
					_18733_prec=static_cast<jule::I64>((_1929_digs._field_nd - 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1d9012202:;
				{
					_18733_prec=static_cast<jule::I64>(_1d42eed85_max(static_cast<jule::I64>((_1929_digs._field_nd - _1929_digs._field_dp)), 0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1d9012268:;
				{
					_18733_prec=_1929_digs._field_nd;
				}
			}
			_match_end_1d9011531:;
		};
	} else {
		{
			auto &_match_expr{ _18744_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1d90111e0:;
				{
					_1d430e9dd_round(&_1899_d, static_cast<jule::I64>((_18733_prec + 1LL)));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1d9011256:;
				{
					_1d430e9dd_round(&_1899_d, static_cast<jule::I64>((_1899_d._field_dp + _18733_prec)));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1d90112cd:;
				{
					if ((_18733_prec == 0LL)) {
						_18733_prec=1LL;
					};
					_1d430e9dd_round(&_1899_d, _18733_prec);
				}
			}
			_match_end_1d9011146:;
		};
		_1929_digs=_1d42eacd7_decimalSlice{._field_d=_1899_d._field_d.slice(0LL), ._field_nd=_1899_d._field_nd, ._field_dp=_1899_d._field_dp, };
	};
	return _1d42ec833_fmtDigits(_18716_dst, _1935_shortest, _18755_neg, _1929_digs, _18733_prec, _18744_fmt);;
}



inline jule::Slice<jule::U8> _1d42ec833_fmtDigits(jule::Slice<jule::U8> _22418_dst, jule::Bool _22431_shortest, jule::Bool _22447_neg, _1d42eacd7_decimalSlice _2255_digs, jule::I64 _22529_prec, jule::U8 _22540_fmt) {
	{
		auto &_match_expr{ _22540_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_1d9016bda:;
			{
				return _1d42ed328_fmtE(_22418_dst, _22447_neg, _2255_digs, _22529_prec, _22540_fmt);;
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1d9016c62:;
			{
				return _1d42ed812_fmtF(_22418_dst, _22447_neg, _2255_digs, _22529_prec);;
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_1d9016cd9:;
			{
				jule::I64 _23313_eprec = _22529_prec;;
				if (((_23313_eprec > _2255_digs._field_nd) && (_2255_digs._field_nd >= _2255_digs._field_dp))) {
					_23313_eprec=_2255_digs._field_nd;
				};
				if (_22431_shortest) {
					_23313_eprec=6LL;
				};
				jule::I64 _2439_exp = (_2255_digs._field_dp - 1LL);;
				if (((_2439_exp < -4LL) || (_2439_exp >= _23313_eprec))) {
					if ((_22529_prec > _2255_digs._field_nd)) {
						_22529_prec=_2255_digs._field_nd;
					};
					return _1d42ed328_fmtE(_22418_dst, _22447_neg, _2255_digs, static_cast<jule::I64>((_22529_prec - 1LL)), static_cast<jule::U8>(((_22540_fmt + 'e') - 'g')));;
				};
				if ((_22529_prec > _2255_digs._field_dp)) {
					_22529_prec=_2255_digs._field_nd;
				};
				return _1d42ed812_fmtF(_22418_dst, _22447_neg, _2255_digs, static_cast<jule::I64>(_1d42eed85_max(static_cast<jule::I64>((_22529_prec - _2255_digs._field_dp)), 0LL)));;
			}
		}
		_match_end_1d9016b41:;
	};
	return jule::append(_22418_dst,jule::Slice<jule::U8>::make({'%',_22540_fmt}));;
}



inline void _1d42ecc84_roundShortest(_1d430da64_decimal* _26223_d, jule::U64 _26235_mant, jule::I64 _26246_exp, _1d42ea2c0_floatInfo* _26257_flt) {
	if ((_26235_mant == 0LLU)) {
		(*(_26223_d))._field_nd=0LL;
		return;;
	};
	jule::I64 _2835_minexp = ((*(_26257_flt))._field_bias + 1LL);;
	if (((_26246_exp > _2835_minexp) && ((332LL * ((*(_26223_d))._field_dp - (*(_26223_d))._field_nd)) >= (100LL * (_26246_exp - static_cast<jule::I64>((*(_26257_flt))._field_mantbits)))))) {
		return;;
	};
	_1d430da64_decimal _2929_upper = _1d430da64_decimal{};;
	_1d430de1b_assign(&_2929_upper, static_cast<jule::U64>(((_26235_mant << 1LLU) + 1LLU)));
	_1d430e1c4_shift(&_2929_upper, static_cast<jule::I64>(((_26246_exp - static_cast<jule::I64>((*(_26257_flt))._field_mantbits)) - 1LL)));
	jule::U64 _3029_mantlo = static_cast<jule::U64>(0LLU);;
	jule::I64 _3039_explo = 0LL;;
	if (((_26235_mant > (1LLU << (*(_26257_flt))._field_mantbits)) || (_26246_exp == _2835_minexp))) {
		_3029_mantlo=static_cast<jule::U64>((_26235_mant - 1LLU));
		_3039_explo=_26246_exp;
	} else {
		_3029_mantlo=static_cast<jule::U64>(((_26235_mant << 1LLU) - 1LLU));
		_3039_explo=static_cast<jule::I64>((_26246_exp - 1LL));
	};
	_1d430da64_decimal _3119_lower = _1d430da64_decimal{};;
	_1d430de1b_assign(&_3119_lower, static_cast<jule::U64>(((_3029_mantlo << 1LLU) + 1LLU)));
	_1d430e1c4_shift(&_3119_lower, static_cast<jule::I64>(((_3039_explo - static_cast<jule::I64>((*(_26257_flt))._field_mantbits)) - 1LL)));
	jule::Bool _3185_inclusive = ((_26235_mant & 1LL) == 0LLU);;
	jule::U8 _3319_upperdelta = static_cast<jule::U8>(0LLU);;
	jule::I64 _3359_ui = 0LL;;
	for (; ; (_3359_ui)++) {
		{
			jule::I64 _3409_mi = ((_3359_ui - _2929_upper._field_dp) + (*(_26223_d))._field_dp);;
			if ((_3409_mi >= (*(_26223_d))._field_nd)) {
				goto _iter_end_1d902392d;
			};
			jule::I64 _3449_li = ((_3359_ui - _2929_upper._field_dp) + _3119_lower._field_dp);;
			jule::U8 _34513_l = static_cast<jule::U8>(48LLU);;
			if (((_3449_li >= 0LL) && (_3449_li < _3119_lower._field_nd))) {
				_34513_l=_3119_lower._field_d[_3449_li];
			};
			jule::U8 _34913_m = static_cast<jule::U8>(48LLU);;
			if ((_3409_mi >= 0LL)) {
				_34913_m=(*(_26223_d))._field_d[_3409_mi];
			};
			jule::U8 _35313_u = static_cast<jule::U8>(48LLU);;
			if ((_3359_ui < _2929_upper._field_nd)) {
				_35313_u=_2929_upper._field_d[_3359_ui];
			};
			jule::Bool _3619_okdown = ((_34513_l != _34913_m) || (_3185_inclusive && ((_3449_li + 1LL) == _3119_lower._field_nd)));;
			{
				
				if (((_3319_upperdelta == 0LLU) && ((_34913_m + 1LLU) < _35313_u))) {
					_case_begin_1d90284c1:;
					{
						_3319_upperdelta=2LLU;
					}
				}
				else if (((_3319_upperdelta == 0LLU) && (_34913_m != _35313_u))) {
					_case_begin_1d9028537:;
					{
						_3319_upperdelta=1LLU;
					}
				}
				else if (((_3319_upperdelta == 1LLU) && ((_34913_m != '9') || (_35313_u != '0')))) {
					_case_begin_1d902859d:;
					{
						_3319_upperdelta=2LLU;
					}
				}
				_match_end_1d9028427:;
			};
			jule::Bool _3829_okup = ((_3319_upperdelta > 0LLU) && ((_3185_inclusive || (_3319_upperdelta > 1LLU)) || ((_3359_ui + 1LL) < _2929_upper._field_nd)));;
			{
				
				if ((_3619_okdown && _3829_okup)) {
					_case_begin_1d902b0a6:;
					{
						_1d430e9dd_round(_26223_d, static_cast<jule::I64>((_3409_mi + 1LL)));
						return;;
					}
				}
				else if (_3619_okdown) {
					_case_begin_1d902b11c:;
					{
						_1d430e47c_roundDown(_26223_d, static_cast<jule::I64>((_3409_mi + 1LL)));
						return;;
					}
				}
				else if (_3829_okup) {
					_case_begin_1d902b183:;
					{
						_1d430e735_roundUp(_26223_d, static_cast<jule::I64>((_3409_mi + 1LL)));
						return;;
					}
				}
				_match_end_1d902b00c:;
			};
		}
	_iter_next_1d902392d:;
	}
	_iter_end_1d902392d:;;
}



inline jule::Slice<jule::U8> _1d42ed328_fmtE(jule::Slice<jule::U8> _40113_dst, jule::Bool _40126_neg, _1d42eacd7_decimalSlice _40137_d, jule::I64 _40154_prec, jule::U8 _40165_fmt) {
	if (_40126_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('-'); };
	};
	jule::U8 _4089_ch = '0';;
	if ((_40137_d._field_nd != 0LL)) {
		_4089_ch=_40137_d._field_d[0LL];
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_4089_ch); };
	if ((_40154_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('.'); };
		jule::I64 _41713_i = 1LL;;
		jule::I64 _4189_m = _1d42eea11_min(_40137_d._field_nd, static_cast<jule::I64>((_40154_prec + 1LL)));;
		if ((_41713_i < _4189_m)) {
			(_40113_dst).append(_40137_d._field_d.slice(_41713_i, _4189_m));;
			_41713_i=_4189_m;
		};
		for (; (_41713_i <= _40154_prec); (_41713_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_1d90302ec:;
		}
		_iter_end_1d90302ec:;;
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_40165_fmt); };
	jule::I64 _4309_exp = (_40137_d._field_dp - 1LL);;
	if ((_40137_d._field_nd == 0LL)) {
		_4309_exp=0LL;
	};
	if ((_4309_exp < 0LL)) {
		_4089_ch='-';
		_4309_exp=static_cast<jule::I64>((-(_4309_exp)));
	} else {
		_4089_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_4089_ch); };
	{
		
		if ((_4309_exp < 10LL)) {
			_case_begin_1d9032b5c:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push('0'); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>(_4309_exp) + '0'))); };
			}
		}
		else if ((_4309_exp < 100LL)) {
			_case_begin_1d9034268:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_4309_exp / 10LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_4309_exp % 10LL)) + '0'))); };
			}
		}
		else {
			_case_begin_1d9032ac4:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_4309_exp / 100LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_4309_exp / 10LL)) % 10LL) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_4309_exp % 10LL)) + '0'))); };
			}
		}
		_match_end_1d9031d8c:;
	};
	return _40113_dst;;
}



inline jule::Slice<jule::U8> _1d42ed812_fmtF(jule::Slice<jule::U8> _45613_dst, jule::Bool _45626_neg, _1d42eacd7_decimalSlice _45637_d, jule::I64 _45654_prec) {
	if (_45626_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('-'); };
	};
	if ((_45637_d._field_dp > 0LL)) {
		jule::I64 _46413_m = _1d42eea11_min(_45637_d._field_nd, _45637_d._field_dp);;
		(_45613_dst).append(_45637_d._field_d.slice(0LL, _46413_m));;
		for (; (_46413_m < _45637_d._field_dp); (_46413_m)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_1d9035e07:;
		}
		_iter_end_1d9035e07:;;
	} else {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('0'); };
	};
	if ((_45654_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('.'); };
		jule::I64 _47513_i = 0LL;;
		for (; (_47513_i < _45654_prec); (_47513_i)++) {
			{
				jule::U8 _47717_ch = static_cast<jule::U8>(48LLU);;
				jule::I64 _47813_j = (_45637_d._field_dp + _47513_i);;
				if (((0LL <= _47813_j) && (_47813_j < _45637_d._field_nd))) {
					_47717_ch=_45637_d._field_d[_47813_j];
				};
				{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push(_47717_ch); };
			}
		_iter_next_1d9037e4d:;
		}
		_iter_end_1d9037e4d:;;
	};
	return _45613_dst;;
}



inline jule::Slice<jule::U8> _1d42ede83_fmtB(jule::Slice<jule::U8> _48913_dst, jule::Bool _48926_neg, jule::U64 _48937_mant, jule::I64 _48952_exp, _1d42ea2c0_floatInfo* _48963_flt) {
	if (_48926_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('-'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1d4313d99_fmtBits(_48913_dst, _48937_mant, 10LL, false, true);
		_48913_dst = __jule_assign_result.__jule_result_arg0;
	});
	{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('p'); };
	_48952_exp-=static_cast<jule::I64>((*(_48963_flt))._field_mantbits);
	if ((_48952_exp >= 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('+'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1d4313d99_fmtBits(_48913_dst, static_cast<jule::U64>(static_cast<jule::U64>(_48952_exp)), 10LL, (_48952_exp < 0LL), true);
		_48913_dst = __jule_assign_result.__jule_result_arg0;
	});
	return _48913_dst;;
}



inline jule::Slice<jule::U8> _1d42ee68c_fmtX(jule::Slice<jule::U8> _51113_dst, jule::I64 _51126_prec, jule::U8 _51137_fmt, jule::Bool _51148_neg, jule::U64 _5129_mant, jule::I64 _51224_exp, _1d42ea2c0_floatInfo* _51235_flt) {
	if ((_5129_mant == 0LLU)) {
		_51224_exp=0LL;
	};
	_5129_mant<<=(60LLU - (*(_51235_flt))._field_mantbits);
	while (((_5129_mant != 0LLU) && ((_5129_mant & 1152921504606846976LLU) == 0LLU))) {
		{
			_5129_mant<<=1LLU;
			(_51224_exp)--;
		}
	_iter_next_1d903c34d:;
	}
	_iter_end_1d903c34d:;;
	if (((_51126_prec >= 0LL) && (_51126_prec < 15LL))) {
		jule::U64 _5269_shift = static_cast<jule::U64>((_51126_prec << 2LLU));;
		jule::U64 _5279_extra = ((_5129_mant << _5269_shift) & 1152921504606846975LLU);;
		_5129_mant>>=(60LLU - _5269_shift);
		if (((_5279_extra | (_5129_mant & 1LLU)) > 576460752303423488LLU)) {
			(_5129_mant)++;
		};
		_5129_mant<<=(60LLU - _5269_shift);
		if (((_5129_mant & 2305843009213693952LLU) != 0LLU)) {
			_5129_mant>>=1LLU;
			(_51224_exp)++;
		};
	};
	jule::Str _5409_hex = jule::Str();;
	if ((_51137_fmt == 'X')) {
		_5409_hex=jule::Str::lit("0123456789ABCDEF", 16);
	} else {
		_5409_hex=jule::Str::lit("0123456789abcdef", 16);
	};
	if (_51148_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('-'); };
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push('0'); __jule_push_dest.__push(_51137_fmt); __jule_push_dest.__push(static_cast<jule::U8>(('0' + static_cast<jule::U8>(((_5129_mant >> 60LLU) & 1LLU))))); };
	_5129_mant<<=4LLU;
	if (((_51126_prec < 0LL) && (_5129_mant != 0LLU))) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('.'); };
		while ((_5129_mant != 0LLU)) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5409_hex[static_cast<jule::I64>(((_5129_mant >> 60LLU) & 15LLU))]); };
				_5129_mant<<=4LLU;
			}
		_iter_next_1d90435eb:;
		}
		_iter_end_1d90435eb:;;
	} else if ((_51126_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('.'); };
		jule::I64 _56313_i = 0LL;;
		for (; (_56313_i < _51126_prec); (_56313_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5409_hex[static_cast<jule::I64>(((_5129_mant >> 60LLU) & 15LLU))]); };
				_5129_mant<<=4LLU;
			}
		_iter_next_1d9044c7e:;
		}
		_iter_end_1d9044c7e:;;
	};
	jule::U8 _5719_ch = static_cast<jule::U8>(80LLU);;
	if ((_51137_fmt == _1d43008d0_lower(_51137_fmt))) {
		_5719_ch='p';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5719_ch); };
	if ((_51224_exp < 0LL)) {
		_5719_ch='-';
		_51224_exp=static_cast<jule::I64>((-(_51224_exp)));
	} else {
		_5719_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5719_ch); };
	{
		
		if ((_51224_exp < 100LL)) {
			_case_begin_1d9049536:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_51224_exp / 10LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_51224_exp % 10LL)) + '0'))); };
			}
		}
		else if ((_51224_exp < 1000LL)) {
			_case_begin_1d9042221:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_51224_exp / 100LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_51224_exp / 10LL) % 10LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_51224_exp % 10LL)) + '0'))); };
			}
		}
		else {
			_case_begin_1d9047655:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(4); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_51224_exp / 1000LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_51224_exp / 100LL)) % 10LL) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_51224_exp / 10LL) % 10LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_51224_exp % 10LL)) + '0'))); };
			}
		}
		_match_end_1d9046bb5:;
	};
	return _51113_dst;;
}



inline jule::I64 _1d42eea11_min(jule::I64 _5968_a, jule::I64 _59616_b) {
	if ((_5968_a < _59616_b)) {
		return _5968_a;;
	};
	return _59616_b;;
}



inline jule::I64 _1d42eed85_max(jule::I64 _6038_a, jule::I64 _60316_b) {
	if ((_6038_a > _60316_b)) {
		return _6038_a;;
	};
	return _60316_b;;
}



inline jule::U8 _1d43008d0_lower(jule::U8 _4710_c) {
	return static_cast<jule::U8>((_4710_c | 32LL));;
}



inline __jule_tuple_u64__jule_tuple__1c69823b0_ConvError _1d4300d53_parseUint(jule::Str* _5119_s, jule::I64 _5131_base, jule::I64 _5146_bitSize) {
	__jule_tuple_u64__jule_tuple__1c69823b0_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	if (((*(_5119_s))).empty()) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	{
		
		if (((2LL <= _5131_base) && (_5131_base <= 36LL))) {
			_case_begin_1d904d969:;
		}
		else if ((_5131_base == 0LL)) {
			_case_begin_1d904d86a:;
			{
				_5131_base=10LL;
				if (((*(_5119_s))[0LL] == '0')) {
					{
						
						if ((((*(_5119_s)).len() >= 3LL) && (_1d43008d0_lower((*(_5119_s))[1LL]) == 'b'))) {
							_case_begin_1d90502d9:;
							{
								_5131_base=2LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_1d43008d0_lower((*(_5119_s))[1LL]) == 'o'))) {
							_case_begin_1d90506b3:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_1d43008d0_lower((*(_5119_s))[1LL]) == 'x'))) {
							_case_begin_1d904eea9:;
							{
								_5131_base=16LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else {
							_case_begin_1d904ee43:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(1LL);;
							}
						}
						_match_end_1d904ed77:;
					};
				};
			}
		}
		else {
			_case_begin_1d904cced:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(3LL);
				return __jule_func_result;;
			}
		}
		_match_end_1d904d150:;
	};
	if ((_5146_bitSize == 0LL)) {
		_5146_bitSize=64LL;
	} else if (((_5146_bitSize < 0LL) || (_5146_bitSize > 64LL))) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(4LL);
		return __jule_func_result;;
	};
	jule::U64 _909_cutoff = static_cast<jule::U64>(0LLU);;
	{
		auto &_match_expr{ _5131_base };
		
		if (_match_expr == 10LL) {
			_case_begin_1d9054475:;
			{
				_909_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1d9053199:;
			{
				_909_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_1d9053e58:;
			{
				_909_cutoff=static_cast<jule::U64>((jule::div(jule::MAX_U64,static_cast<jule::U64>(_5131_base)) + 1LLU));
			}
		}
		_match_end_1d9053e03:;
	};
	jule::U64 _1009_maxVal = static_cast<jule::U64>(0LLU);;
	{
		auto &_match_expr{ _5146_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1d9053ebe:;
			{
				_1009_maxVal=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1d9055597:;
			{
				_1009_maxVal=jule::MAX_U64;
			}
		}
		_match_end_1d9054200:;
	};
	jule::U64 _1089_n = static_cast<jule::U64>(0LLU);;
	{
		auto expr = _5119_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d90562e0:;
		if (it != expr_end) {
			jule::U8 _10912_c = *it;
			{
				jule::U8 _11013_d = static_cast<jule::U8>(0LLU);;
				{
					
					if ((('0' <= _10912_c) && (_10912_c <= '9'))) {
						_case_begin_1d9057522:;
						{
							_11013_d=static_cast<jule::U8>((_10912_c - '0'));
						}
					}
					else if ((('a' <= _1d43008d0_lower(_10912_c)) && (_1d43008d0_lower(_10912_c) <= 'z'))) {
						_case_begin_1d9057412:;
						{
							_11013_d=static_cast<jule::U8>(((_1d43008d0_lower(_10912_c) - 'a') + 10LLU));
						}
					}
					else if ((_10912_c == '_')) {
						_case_begin_1d9057038:;
						{
							goto _iter_next_1d90562e0;
						}
					}
					else {
						_case_begin_1d9056ec2:;
						{
							__jule_func_result.__jule_result_arg0 = 0LLU;
							__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
							return __jule_func_result;;
						}
					}
					_match_end_1d9056e5b:;
				};
				if ((_11013_d >= static_cast<jule::U8>(_5131_base))) {
					__jule_func_result.__jule_result_arg0 = 0LLU;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
					return __jule_func_result;;
				};
				if ((_1089_n >= _909_cutoff)) {
					__jule_func_result.__jule_result_arg0 = _1009_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(1LL);
					return __jule_func_result;;
				};
				_1089_n*=static_cast<jule::U64>(_5131_base);
				jule::U64 _1329_n1 = (_1089_n + static_cast<jule::U64>(_11013_d));;
				if (((_1329_n1 < _1089_n) || (_1329_n1 > _1009_maxVal))) {
					__jule_func_result.__jule_result_arg0 = _1009_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(1LL);
					return __jule_func_result;;
				};
				_1089_n=_1329_n1;
			}
			_iter_next_1d90562e0:;
			++it;
			goto _iter_begin_1d90562e0;
		}
		_iter_end_1d90562e0:;
	};
	__jule_func_result.__jule_result_arg0 = _1089_n;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(0LL);
	return __jule_func_result;;
}



inline jule::Exceptional<jule::U64> _1d4301282_ParseUint(jule::Str _14618_s, jule::I64 _14630_base, jule::I64 _14645_bitSize) {
	jule::U64 _1475_un = 0;;
	jule::I64 _1479_err = 0LL;;
	({
		__jule_tuple_u64__jule_tuple__1c69823b0_ConvError __jule_assign_result = _1d4300d53_parseUint(&(_14618_s), _14630_base, _14645_bitSize);
		_1475_un = __jule_assign_result.__jule_result_arg0;
		_1479_err = __jule_assign_result.__jule_result_arg1;
	});
	if ((_1479_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::U64>(jule::Any(_1479_err, &__jule_any_type0));
	};
	return jule::Exceptional<jule::U64>(jule::Any(), _1475_un);;
}



inline jule::Exceptional<jule::I64> _1d4301738_ParseInt(jule::Str _17217_s, jule::I64 _17225_base, jule::I64 _17240_bitSize) {
	if ((_17217_s).empty()) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0));
	};
	jule::Bool _1789_neg = false;;
	if ((_17217_s[0LL] == '+')) {
		(_17217_s).mut_slice(1LL);;
	} else if ((_17217_s[0LL] == '-')) {
		_1789_neg=true;
		(_17217_s).mut_slice(1LL);;
	};
	jule::U64 _1879_un = 0;;
	jule::I64 _18713_err = 0LL;;
	({
		__jule_tuple_u64__jule_tuple__1c69823b0_ConvError __jule_assign_result = _1d4300d53_parseUint(&(_17217_s), _17225_base, _17240_bitSize);
		_1879_un = __jule_assign_result.__jule_result_arg0;
		_18713_err = __jule_assign_result.__jule_result_arg1;
	});
	if (((_18713_err != static_cast<jule::I64>(0LL)) && (_18713_err != static_cast<jule::I64>(1LL)))) {
		return jule::Exceptional<jule::I64>(jule::Any(_18713_err, &__jule_any_type0));
	};
	if ((_17240_bitSize == 0LL)) {
		_17240_bitSize=64LL;
	};
	jule::U64 _1965_cutoff = static_cast<jule::U64>((1LL << static_cast<jule::U64>((_17240_bitSize - 1LL))));;
	if (((!(_1789_neg)) && (_1879_un >= _1965_cutoff))) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0));
	};
	if ((_1789_neg && (_1879_un > _1965_cutoff))) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0));
	};
	jule::I64 _2039_n = static_cast<jule::I64>(_1879_un);;
	if (_1789_neg) {
		_2039_n=static_cast<jule::I64>((-(_2039_n)));
	};
	return jule::Exceptional<jule::I64>(jule::Any(), _2039_n);;
}



inline __jule_tuple_f64__jule_tuple_bool _1d430242b_eiselLemire64(jule::U64 _4122_man, jule::I64 _4132_exp10, jule::Bool _4144_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_4122_man == 0LLU)) {
		if (_4144_neg) {
			__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_1c74ed865_F64FromBits(9223372036854775808LLU));
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_4132_exp10 < -348LL) || (347LL < _4132_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I64 _575_clz = _1c75db37b_LeadingZeros64(_4122_man);;
	_4122_man<<=static_cast<jule::U64>(_575_clz);
	;
	jule::U64 _609_retExp2 = (static_cast<jule::U64>(((((217706LL * _4132_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(_575_clz));;
	jule::U64 _639_xHi = 0;;
	jule::U64 _6318_xLo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1c75e6320_Mul64(_4122_man, _1d4303284_detailedPowsOfTen[(_4132_exp10 - -348LL)][1LL]);
		_639_xHi = __jule_assign_result.__jule_result_arg0;
		_6318_xLo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_639_xHi & 511LLU) == 511LLU) && ((_6318_xLo + _4122_man) < _4122_man))) {
		jule::U64 _679_yHi = 0;;
		jule::U64 _6714_yLo = 0;;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1c75e6320_Mul64(_4122_man, _1d4303284_detailedPowsOfTen[(_4132_exp10 - -348LL)][0LL]);
			_679_yHi = __jule_assign_result.__jule_result_arg0;
			_6714_yLo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _6813_mergedHi = 0;;
		jule::U64 _6823_mergedLo = 0;;
		({
			jule::U64 ___jule_assign_arg = _639_xHi;
			jule::U64 _1___jule_assign_arg = (_6318_xLo + _679_yHi);
			_6813_mergedHi = ___jule_assign_arg;
			_6823_mergedLo = _1___jule_assign_arg;
		});
		if ((_6823_mergedLo < _6318_xLo)) {
			(_6813_mergedHi)++;
		};
		if (((((_6813_mergedHi & 511LLU) == 511LLU) && ((_6823_mergedLo + 1LLU) == 0LLU)) && ((_6714_yLo + _4122_man) < _4122_man))) {
			__jule_func_result.__jule_result_arg0 = 0LL;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _6813_mergedHi;
			jule::U64 _1___jule_assign_arg = _6823_mergedLo;
			_639_xHi = ___jule_assign_arg;
			_6318_xLo = _1___jule_assign_arg;
		});
	};
	jule::U64 _795_msb = (_639_xHi >> 63LLU);;
	jule::U64 _809_retMantissa = (_639_xHi >> (_795_msb + 9LLU));;
	_609_retExp2-=(1LLU ^ _795_msb);
	if ((((_6318_xLo == 0LLU) && ((_639_xHi & 511LLU) == 0LLU)) && ((_809_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_809_retMantissa+=(_809_retMantissa & 1LLU);
	_809_retMantissa>>=1LLU;
	if (((_809_retMantissa >> 53LLU) > 0LLU)) {
		_809_retMantissa>>=1LLU;
		_609_retExp2+=1LLU;
	};
	if (((_609_retExp2 - 1LLU) >= 2046LLU)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _1039_retBits = ((_609_retExp2 << 52LLU) | (_809_retMantissa & 4503599627370495LLU));;
	if (_4144_neg) {
		_1039_retBits|=9223372036854775808LLU;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1c74ed865_F64FromBits(_1039_retBits));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1d430286b_eiselLemire32(jule::U64 _11022_man, jule::I64 _11032_exp10, jule::Bool _11044_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_11022_man == 0LLU)) {
		if (_11044_neg) {
			__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_1c74ed25a_F32FromBits(2147483648LLU));
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_11032_exp10 < -348LL) || (347LL < _11032_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I64 _1325_clz = _1c75db37b_LeadingZeros64(_11022_man);;
	_11022_man<<=static_cast<jule::U64>(_1325_clz);
	;
	jule::U64 _1359_retExp2 = (static_cast<jule::U64>(((((217706LL * _11032_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(_1325_clz));;
	jule::U64 _1389_x_hi = 0;;
	jule::U64 _13819_x_lo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1c75e6320_Mul64(_11022_man, _1d4303284_detailedPowsOfTen[(_11032_exp10 - -348LL)][1LL]);
		_1389_x_hi = __jule_assign_result.__jule_result_arg0;
		_13819_x_lo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_1389_x_hi & 274877906943LLU) == 274877906943LLU) && ((_13819_x_lo + _11022_man) < _11022_man))) {
		jule::U64 _1429_y_hi = 0;;
		jule::U64 _14215_y_lo = 0;;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1c75e6320_Mul64(_11022_man, _1d4303284_detailedPowsOfTen[(_11032_exp10 - -348LL)][0LL]);
			_1429_y_hi = __jule_assign_result.__jule_result_arg0;
			_14215_y_lo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _14313_merged_hi = 0;;
		jule::U64 _14324_merged_lo = 0;;
		({
			jule::U64 ___jule_assign_arg = _1389_x_hi;
			jule::U64 _1___jule_assign_arg = (_13819_x_lo + _1429_y_hi);
			_14313_merged_hi = ___jule_assign_arg;
			_14324_merged_lo = _1___jule_assign_arg;
		});
		if ((_14324_merged_lo < _13819_x_lo)) {
			(_14313_merged_hi)++;
		};
		if (((((_14313_merged_hi & 274877906943LLU) == 274877906943LLU) && ((_14324_merged_lo + 1LLU) == 0LLU)) && ((_14215_y_lo + _11022_man) < _11022_man))) {
			__jule_func_result.__jule_result_arg0 = 0.0f;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _14313_merged_hi;
			jule::U64 _1___jule_assign_arg = _14324_merged_lo;
			_1389_x_hi = ___jule_assign_arg;
			_13819_x_lo = _1___jule_assign_arg;
		});
	};
	jule::U64 _1545_msb = (_1389_x_hi >> 63LLU);;
	jule::U64 _1559_retMantissa = (_1389_x_hi >> (_1545_msb + 38LLU));;
	_1359_retExp2-=(1LLU ^ _1545_msb);
	if ((((_13819_x_lo == 0LLU) && ((_1389_x_hi & 274877906943LLU) == 0LLU)) && ((_1559_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_1559_retMantissa+=(_1559_retMantissa & 1LLU);
	_1559_retMantissa>>=1LLU;
	if (((_1559_retMantissa >> 24LLU) > 0LLU)) {
		_1559_retMantissa>>=1LLU;
		_1359_retExp2+=1LLU;
	};
	if (((_1359_retExp2 - 1LLU) >= 254LLU)) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _1789_retBits = ((_1359_retExp2 << 23LLU) | (_1559_retMantissa & 8388607LLU));;
	if (_11044_neg) {
		_1789_retBits|=2147483648LLU;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_1c74ed25a_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_1789_retBits))));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::I64 _1d43046b4_commonPrefixLenIgnoreCase(jule::Str _4630_s, jule::Str _4638_prefix) {
	jule::I64 _479_n = _4638_prefix.len();;
	if ((_479_n > _4630_s.len())) {
		_479_n=static_cast<jule::I64>(_4630_s.len());
	};
	jule::I64 _519_i = 0LL;;
	for (; (_519_i < _479_n); (_519_i)++) {
		{
			jule::U8 _5313_c = _4630_s[_519_i];;
			if ((('A' <= _5313_c) && (_5313_c <= 'Z'))) {
				_5313_c+=32LL;
			};
			if ((_5313_c != _4638_prefix[_519_i])) {
				return _519_i;;
			};
		}
	_iter_next_1d907aea2:;
	}
	_iter_end_1d907aea2:;;
	return _479_n;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1d43049c2_special(jule::Str _6912_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_6912_s.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		__jule_func_result.__jule_result_arg2 = false;
		return __jule_func_result;;
	};
	jule::I64 _739_sign = 1LL;;
	jule::I64 _749_nsign = 0LL;;
	{
		auto &_match_expr{ _6912_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_1d907e923:;
			{
				if ((_6912_s[0LL] == '-')) {
					_739_sign=-1LL;
				};
				_749_nsign=1LL;
				{
					jule::Str* _8317_sp = (&(_6912_s));;
					(*(_8317_sp))=(*(_8317_sp)).slice(1LL);
				};
				goto _case_begin_1d907e99a;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_1d907e99a:;
			{
				jule::I64 _8813_caseN = _1d43046b4_commonPrefixLenIgnoreCase(_6912_s, jule::Str::lit("infinity", 8));;
				if (((3LL < _8813_caseN) && (_8813_caseN < 8LL))) {
					_8813_caseN=3LL;
				};
				if (((_8813_caseN == 3LL) || (_8813_caseN == 8LL))) {
					__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1c75edbda_Inf(_739_sign));
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>((_749_nsign + __jule_func_result.__jule_result_arg1));
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_1d907ea22:;
			{
				if ((_1d43046b4_commonPrefixLenIgnoreCase(_6912_s, jule::Str::lit("NaN", 3)) == 3LL)) {
					__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1c75ed613_NaN());
					__jule_func_result.__jule_result_arg1 = 3LL;
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1d907e857:;
	};
	__jule_func_result.__jule_result_arg0 = 0LL;
	__jule_func_result.__jule_result_arg1 = 0LL;
	__jule_func_result.__jule_result_arg2 = false;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1d4304c8b_readFloat(jule::Str* _10815_s) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	__jule_func_result.__jule_result_arg3 = false;
	__jule_func_result.__jule_result_arg4 = false;
	__jule_func_result.__jule_result_arg5 = 0;
	__jule_func_result.__jule_result_arg6 = false;
	if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
		return __jule_func_result;;
	};
	{
		
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			_case_begin_1d9084e9a:;
			{
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			_case_begin_1d9085220:;
			{
				__jule_func_result.__jule_result_arg2=true;
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		_match_end_1d9085154:;
	};
	jule::U64 _1229_base = static_cast<jule::U64>(10LLU);;
	jule::I64 _1239_maxMantDigits = 19LL;;
	jule::U8 _1249_expChar = 'e';;
	if (((((__jule_func_result.__jule_result_arg5 + 2LL) < (*(_10815_s)).len()) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '0')) && (_1d43008d0_lower((*(_10815_s))[(__jule_func_result.__jule_result_arg5 + 1LL)]) == 'x'))) {
		_1229_base=16LLU;
		_1239_maxMantDigits=16LL;
		__jule_func_result.__jule_result_arg5+=2LL;
		_1249_expChar='p';
		__jule_func_result.__jule_result_arg4=true;
	};
	jule::Bool _1329_sawdot = false;;
	jule::Bool _1339_sawdigits = false;;
	jule::I64 _1349_nd = 0LL;;
	jule::I64 _1359_ndMant = 0LL;;
	jule::I64 _1369_dp = 0LL;;
	for (; (__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()); (__jule_func_result.__jule_result_arg5)++) {
		{
			jule::U8 _1389_c = (*(_10815_s))[__jule_func_result.__jule_result_arg5];;
			{
				
				if ((_1389_c == '_')) {
					_case_begin_1d908a236:;
					{
						goto _iter_next_1d9084906;
					}
				}
				else if ((_1389_c == '.')) {
					_case_begin_1d908a2ad:;
					{
						if (_1329_sawdot) {
							goto _julec_label_1d908dde9;
						};
						_1329_sawdot=true;
						_1369_dp=_1349_nd;
						goto _iter_next_1d9084906;
					}
				}
				else if ((('0' <= _1389_c) && (_1389_c <= '9'))) {
					_case_begin_1d908a335:;
					{
						_1339_sawdigits=true;
						if (((_1389_c == '0') && (_1349_nd == 0LL))) {
							(_1369_dp)--;
							goto _iter_next_1d9084906;
						};
						(_1349_nd)++;
						if ((_1359_ndMant < _1239_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=_1229_base;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>((_1389_c - '0'));
							(_1359_ndMant)++;
						} else if ((_1389_c != '0')) {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1d9084906;
					}
				}
				else if ((((_1229_base == 16LLU) && ('a' <= _1d43008d0_lower(_1389_c))) && (_1d43008d0_lower(_1389_c) <= 'f'))) {
					_case_begin_1d908a3ac:;
					{
						_1339_sawdigits=true;
						(_1349_nd)++;
						if ((_1359_ndMant < _1239_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=16LLU;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>(((_1d43008d0_lower(_1389_c) - 'a') + 10LLU));
							(_1359_ndMant)++;
						} else {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1d9084906;
					}
				}
				_match_end_1d908a159:;
			};
			goto _iter_end_1d9084906;
		}
	_iter_next_1d9084906:;
	}
	_iter_end_1d9084906:;;
	_julec_label_1d908dde9:;
	if ((!(_1339_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_1329_sawdot))) {
		_1369_dp=_1349_nd;
	};
	if ((_1229_base == 16LLU)) {
		_1369_dp*=4LL;
		_1359_ndMant*=4LL;
	};
	if (((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && (_1d43008d0_lower((*(_10815_s))[__jule_func_result.__jule_result_arg5]) == _1249_expChar))) {
		(__jule_func_result.__jule_result_arg5)++;
		if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
			return __jule_func_result;;
		};
		jule::I64 _20113_esign = 1LL;;
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			(__jule_func_result.__jule_result_arg5)++;
		} else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			(__jule_func_result.__jule_result_arg5)++;
			_20113_esign=-1LL;
		};
		if ((((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len()) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] < '0')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] > '9'))) {
			return __jule_func_result;;
		};
		jule::I64 _21113_e = 0LL;;
		for (; ((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && ((('0' <= (*(_10815_s))[__jule_func_result.__jule_result_arg5]) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] <= '9')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_'))); (__jule_func_result.__jule_result_arg5)++) {
			{
				if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_')) {
					goto _iter_next_1d9092d43;
				};
				if ((_21113_e < 10000LL)) {
					_21113_e=static_cast<jule::I64>((((_21113_e * 10LL) + static_cast<jule::I64>((*(_10815_s))[__jule_func_result.__jule_result_arg5])) - '0'));
				};
			}
		_iter_next_1d9092d43:;
		}
		_iter_end_1d9092d43:;;
		_1369_dp+=(_21113_e * _20113_esign);
	} else if ((_1229_base == 16LLU)) {
		return __jule_func_result;;
	};
	if ((__jule_func_result.__jule_result_arg0 != 0LLU)) {
		__jule_func_result.__jule_result_arg1=static_cast<jule::I64>((_1369_dp - _1359_ndMant));
	};
	__jule_func_result.__jule_result_arg6=true;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_bool _1d430681a_atof64exact(jule::U64 _48616_mantissa, jule::I64 _48635_exp, jule::Bool _48645_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_48616_mantissa >> _1d42ea842_f64info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(static_cast<jule::F64>(_48616_mantissa));
	if (_48645_neg) {
		__jule_func_result.__jule_result_arg0=static_cast<jule::F64>((-(__jule_func_result.__jule_result_arg0)));
	};
	{
		
		if ((_48635_exp == 0LL)) {
			_case_begin_1d909b676:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp > 0LL) && (_48635_exp <= 37LL))) {
			_case_begin_1d909b6ed:;
			{
				if ((_48635_exp > 22LL)) {
					__jule_func_result.__jule_result_arg0*=_1d4305bb0_f64pow10[(_48635_exp - 22LL)];
					_48635_exp=22LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 1000000000000000LL) || (__jule_func_result.__jule_result_arg0 < -1000000000000000LL))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>((__jule_func_result.__jule_result_arg0 * _1d4305bb0_f64pow10[_48635_exp]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp < 0LL) && (_48635_exp >= -22LL))) {
			_case_begin_1d909b775:;
			{
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(jule::div(__jule_func_result.__jule_result_arg0,_1d4305bb0_f64pow10[(-(_48635_exp))]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1d909b126:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1d4306c49_atof32exact(jule::U64 _52016_mantissa, jule::I64 _52035_exp, jule::Bool _52049_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_52016_mantissa >> _1d42ea5cd_f32info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(static_cast<jule::F32>(_52016_mantissa));
	if (_52049_neg) {
		__jule_func_result.__jule_result_arg0=static_cast<jule::F32>((-(__jule_func_result.__jule_result_arg0)));
	};
	{
		
		if ((_52035_exp == 0LL)) {
			_case_begin_1d90a0a65:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp > 0LL) && (_52035_exp <= 17LL))) {
			_case_begin_1d90a0adc:;
			{
				if ((_52035_exp > 10LL)) {
					__jule_func_result.__jule_result_arg0*=_1d4306001_f32pow10[(_52035_exp - 10LL)];
					_52035_exp=10LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 10000000.0f) || (__jule_func_result.__jule_result_arg0 < -10000000.0f))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>((__jule_func_result.__jule_result_arg0 * _1d4306001_f32pow10[_52035_exp]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp < 0LL) && (_52035_exp >= -10LL))) {
			_case_begin_1d90a0b64:;
			{
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(jule::div(__jule_func_result.__jule_result_arg0,_1d4306001_f32pow10[(-(_52035_exp))]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1d90a0515:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple__1c69823b0_ConvError _1d43072dd_atofHex(_1d42ea2c0_floatInfo* _55613_flt, jule::U64 _55633_mantissa, jule::I64 _55652_exp, jule::Bool _55662_neg, jule::Bool _55673_trunc) {
	__jule_tuple_f64__jule_tuple__1c69823b0_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	jule::I64 _5575_maxExp = ((static_cast<jule::I64>((1LL << (*(_55613_flt))._field_expbits)) + (*(_55613_flt))._field_bias) - 2LL);;
	jule::I64 _5585_minExp = ((*(_55613_flt))._field_bias + 1LL);;
	_55652_exp+=static_cast<jule::I64>((*(_55613_flt))._field_mantbits);
	while (((_55633_mantissa != 0LLU) && ((_55633_mantissa >> ((*(_55613_flt))._field_mantbits + 2LLU)) == 0LLU))) {
		{
			_55633_mantissa<<=1LLU;
			(_55652_exp)--;
		}
	_iter_next_1d90a4ea9:;
	}
	_iter_end_1d90a4ea9:;;
	if (_55673_trunc) {
		_55633_mantissa|=1LLU;
	};
	while (((_55633_mantissa >> ((1LLU + (*(_55613_flt))._field_mantbits) + 2LLU)) != 0LLU)) {
		{
			_55633_mantissa=static_cast<jule::U64>(((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU)));
			(_55652_exp)++;
		}
	_iter_next_1d90a66c5:;
	}
	_iter_end_1d90a66c5:;;
	while (((_55633_mantissa > 1LLU) && (_55652_exp < (_5585_minExp - 2LL)))) {
		{
			_55633_mantissa=static_cast<jule::U64>(((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU)));
			(_55652_exp)++;
		}
	_iter_next_1d90a6a49:;
	}
	_iter_end_1d90a6a49:;;
	jule::U64 _5889_round = (_55633_mantissa & 3LLU);;
	_55633_mantissa>>=2LLU;
	_5889_round|=(_55633_mantissa & 1LLU);
	_55652_exp+=2LL;
	if ((_5889_round == 3LLU)) {
		(_55633_mantissa)++;
		if ((_55633_mantissa == (1LLU << (1LLU + (*(_55613_flt))._field_mantbits)))) {
			_55633_mantissa>>=1LLU;
			(_55652_exp)++;
		};
	};
	if (((_55633_mantissa >> (*(_55613_flt))._field_mantbits) == 0LLU)) {
		_55652_exp=(*(_55613_flt))._field_bias;
	};
	jule::I64 _6039_err = static_cast<jule::I64>(0LL);;
	if ((_55652_exp > _5575_maxExp)) {
		_55633_mantissa=static_cast<jule::U64>(static_cast<jule::U64>((1LL << (*(_55613_flt))._field_mantbits)));
		_55652_exp=static_cast<jule::I64>((_5575_maxExp + 1LL));
		_6039_err=static_cast<jule::I64>(1LL);
	};
	jule::U64 _6109_bits = (_55633_mantissa & ((1LLU << (*(_55613_flt))._field_mantbits) - 1LLU));;
	_6109_bits|=(static_cast<jule::U64>(((_55652_exp - (*(_55613_flt))._field_bias) & static_cast<jule::I64>(((1LL << (*(_55613_flt))._field_expbits) - 1LL)))) << (*(_55613_flt))._field_mantbits);
	if (_55662_neg) {
		_6109_bits|=((1LLU << (*(_55613_flt))._field_mantbits) << (*(_55613_flt))._field_expbits);
	};
	if (((*(_55613_flt)) == _1d42ea5cd_f32info)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(static_cast<jule::F64>(_1c74ed25a_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_6109_bits)))));
		__jule_func_result.__jule_result_arg1 = _6039_err;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1c74ed865_F64FromBits(_6109_bits));
	__jule_func_result.__jule_result_arg1 = _6039_err;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_int__jule_tuple__1c69823b0_ConvError _1d43076b7_atof32(jule::Str _62111_s) {
	__jule_tuple_f32__jule_tuple_int__jule_tuple__1c69823b0_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _6239_val = 0;;
		jule::I64 _62314__n = 0;;
		jule::Bool _62318_ok = false;;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1d43049c2_special(_62111_s);
			_6239_val = __jule_assign_result.__jule_result_arg0;
			_62314__n = __jule_assign_result.__jule_result_arg1;
			_62318_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_62318_ok) {
			__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(static_cast<jule::F32>(_6239_val));
			__jule_func_result.__jule_result_arg1 = _62314__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _6295_mantissa = 0;;
	jule::I64 _62915_exp = 0;;
	jule::Bool _62920_neg = false;;
	jule::Bool _62925_trunc = false;;
	jule::Bool _62932_hex = false;;
	jule::I64 _62937__n = 0;;
	jule::Bool _62945_ok = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1d4304c8b_readFloat(&(_62111_s));
		_6295_mantissa = __jule_assign_result.__jule_result_arg0;
		_62915_exp = __jule_assign_result.__jule_result_arg1;
		_62920_neg = __jule_assign_result.__jule_result_arg2;
		_62925_trunc = __jule_assign_result.__jule_result_arg3;
		_62932_hex = __jule_assign_result.__jule_result_arg4;
		_62937__n = __jule_assign_result.__jule_result_arg5;
		_62945_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_62937__n;
	if ((!(_62945_ok))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	if (_62932_hex) {
		jule::F64 _63613_ff = 0LL;;
		({
			__jule_tuple_f64__jule_tuple__1c69823b0_ConvError __jule_assign_result = _1d43072dd_atofHex(&(_1d42ea5cd_f32info), _6295_mantissa, _62915_exp, _62920_neg, _62925_trunc);
			_63613_ff = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(static_cast<jule::F32>(_63613_ff));
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_62925_trunc))) {
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1d4306c49_atof32exact(_6295_mantissa, _62915_exp, _62920_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_62945_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_62945_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1d430286b_eiselLemire32(_6295_mantissa, _62915_exp, _62920_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_62945_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_62945_ok) {
			if ((!(_62925_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
			jule::F32 _65817_fUp = static_cast<jule::F32>(0.0f);;
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1d430286b_eiselLemire32(static_cast<jule::U64>((_6295_mantissa + 1LLU)), _62915_exp, _62920_neg);
				_65817_fUp = __jule_assign_result.__jule_result_arg0;
				_62945_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_62945_ok && (__jule_func_result.__jule_result_arg0 == _65817_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1d430da64_decimal _6679_d = _1d430da64_decimal{};;
	if ((!(_1d430542e_set(&_6679_d, _21682838c_StrBytes(_62111_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _6715_b = 0;;
	jule::Bool _6718_ovf = false;;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1d4305770_floatBits(&_6679_d, &(_1d42ea5cd_f32info));
		_6715_b = __jule_assign_result.__jule_result_arg0;
		_6718_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_1c74ed25a_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_6715_b))));
	if (_6718_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I64>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1c69823b0_ConvError _1d4307981_atof64(jule::Str _67911_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__1c69823b0_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _6819_val = 0;;
		jule::I64 _68114__n = 0;;
		jule::Bool _68118_ok = false;;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1d43049c2_special(_67911_s);
			_6819_val = __jule_assign_result.__jule_result_arg0;
			_68114__n = __jule_assign_result.__jule_result_arg1;
			_68118_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_68118_ok) {
			__jule_func_result.__jule_result_arg0 = _6819_val;
			__jule_func_result.__jule_result_arg1 = _68114__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _6875_mantissa = 0;;
	jule::I64 _68715_exp = 0;;
	jule::Bool _68720_neg = false;;
	jule::Bool _68725_trunc = false;;
	jule::Bool _68732_hex = false;;
	jule::I64 _68737__n = 0;;
	jule::Bool _68745_ok = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1d4304c8b_readFloat(&(_67911_s));
		_6875_mantissa = __jule_assign_result.__jule_result_arg0;
		_68715_exp = __jule_assign_result.__jule_result_arg1;
		_68720_neg = __jule_assign_result.__jule_result_arg2;
		_68725_trunc = __jule_assign_result.__jule_result_arg3;
		_68732_hex = __jule_assign_result.__jule_result_arg4;
		_68737__n = __jule_assign_result.__jule_result_arg5;
		_68745_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_68737__n;
	if ((!(_68745_ok))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	if (_68732_hex) {
		({
			__jule_tuple_f64__jule_tuple__1c69823b0_ConvError __jule_assign_result = _1d43072dd_atofHex(&(_1d42ea842_f64info), _6875_mantissa, _68715_exp, _68720_neg, _68725_trunc);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_68725_trunc))) {
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1d430681a_atof64exact(_6875_mantissa, _68715_exp, _68720_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_68745_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_68745_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1d430242b_eiselLemire64(_6875_mantissa, _68715_exp, _68720_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_68745_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_68745_ok) {
			if ((!(_68725_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
			jule::F64 _71517_fUp = 0LL;;
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1d430242b_eiselLemire64(static_cast<jule::U64>((_6875_mantissa + 1LLU)), _68715_exp, _68720_neg);
				_71517_fUp = __jule_assign_result.__jule_result_arg0;
				_68745_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_68745_ok && (__jule_func_result.__jule_result_arg0 == _71517_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1d430da64_decimal _7249_d = _1d430da64_decimal{};;
	if ((!(_1d430542e_set(&_7249_d, _21682838c_StrBytes(_67911_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _7285_b = 0;;
	jule::Bool _7288_ovf = false;;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1d4305770_floatBits(&_7249_d, &(_1d42ea842_f64info));
		_7285_b = __jule_assign_result.__jule_result_arg0;
		_7288_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_1c74ed865_F64FromBits(_7285_b));
	if (_7288_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I64>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1c69823b0_ConvError _1d4307d05_parseFloatPrefix(jule::Str* _73622_s, jule::I64 _73630_bitSize) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__1c69823b0_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	if ((_73630_bitSize == 32LL)) {
		jule::F32 _7389_f = 0;;
		jule::I64 _73812_n = 0;;
		jule::I64 _73815_err = 0LL;;
		({
			__jule_tuple_f32__jule_tuple_int__jule_tuple__1c69823b0_ConvError __jule_assign_result = _1d43076b7_atof32((*(_73622_s)));
			_7389_f = __jule_assign_result.__jule_result_arg0;
			_73812_n = __jule_assign_result.__jule_result_arg1;
			_73815_err = __jule_assign_result.__jule_result_arg2;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(static_cast<jule::F64>(_7389_f));
		__jule_func_result.__jule_result_arg1 = _73812_n;
		__jule_func_result.__jule_result_arg2 = _73815_err;
		return __jule_func_result;;
	};
	jule::F64 _7415_f = 0;;
	jule::I64 _7418_n = 0;;
	jule::I64 _74111_err = 0LL;;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__1c69823b0_ConvError __jule_assign_result = _1d4307981_atof64((*(_73622_s)));
		_7415_f = __jule_assign_result.__jule_result_arg0;
		_7418_n = __jule_assign_result.__jule_result_arg1;
		_74111_err = __jule_assign_result.__jule_result_arg2;
	});
	__jule_func_result.__jule_result_arg0 = _7415_f;
	__jule_func_result.__jule_result_arg1 = _7418_n;
	__jule_func_result.__jule_result_arg2 = _74111_err;
	return __jule_func_result;;
}



inline jule::Exceptional<jule::F64> _1d4308179_ParseFloat(jule::Str _76915_s, jule::I64 _76923_bitSize) {
	jule::F64 _7705_f = 0;;
	jule::I64 _7708_n = 0;;
	jule::I64 _77011_err = 0LL;;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__1c69823b0_ConvError __jule_assign_result = _1d4307d05_parseFloatPrefix(&(_76915_s), _76923_bitSize);
		_7705_f = __jule_assign_result.__jule_result_arg0;
		_7708_n = __jule_assign_result.__jule_result_arg1;
		_77011_err = __jule_assign_result.__jule_result_arg2;
	});
	if (((_7708_n != _76915_s.len()) && ((_77011_err == static_cast<jule::I64>(0LL)) || (_77011_err != static_cast<jule::I64>(2LL))))) {
		return jule::Exceptional<jule::F64>(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0));
	};
	if ((_77011_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::F64>(jule::Any(_77011_err, &__jule_any_type0));
	};
	return jule::Exceptional<jule::F64>(jule::Any(), _7705_f);;
}



inline void _1d4308982_ryuFtoaFixed32(_1d42eacd7_decimalSlice* _4924_d, jule::U32 _4945_mant, jule::I64 _4956_exp, jule::I64 _4966_prec) {
	if ((_4966_prec < 0LL)) {
		jule::panic(jule::Str::lit("ryuFtoaFixed32 called with negative prec", 40) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:9"));;
	};
	if ((_4966_prec > 9LL)) {
		jule::panic(jule::Str::lit("ryuFtoaFixed32 called with prec > 9", 35) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:9"));;
	};
	if ((_4945_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_4924_d))._field_nd = ___jule_assign_arg;
			(*(_4924_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I64 _629_e2 = _4956_exp;;
	jule::I64 _635_b = _1c75e39b0_Len32(_4945_mant);;
	if ((_635_b < 25LL)) {
		_4945_mant<<=static_cast<jule::U64>((25LL - _635_b));
		_629_e2+=(static_cast<jule::I64>(_635_b) - 25LL);
	};
	jule::I64 _745_q = (((-(_1d430a016_mulByLog2Log10(static_cast<jule::I64>((_629_e2 + 24LL))))) + _4966_prec) - 1LL);;
	jule::Bool _799_exact = ((_745_q <= 27LL) && (_745_q >= 0LL));;
	jule::U32 _819_di = 0;;
	jule::I64 _8113_dexp2 = 0;;
	jule::Bool _8124_d0 = false;;
	({
		__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1d430b8ca_mult64bitPow10(_4945_mant, _629_e2, _745_q);
		_819_di = __jule_assign_result.__jule_result_arg0;
		_8113_dexp2 = __jule_assign_result.__jule_result_arg1;
		_8124_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_8113_dexp2 >= 0LL)) {
		jule::panic(jule::Str::lit("not enough significant bits after mult64bitPow10", 48) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:9"));;
	};
	if ((((_745_q < 0LL) && (_745_q >= -10LL)) && _1d430c17d_divisibleByPow5(static_cast<jule::U64>(static_cast<jule::U64>(_4945_mant)), static_cast<jule::I64>((-(_745_q)))))) {
		_799_exact=true;
		_8124_d0=true;
	};
	jule::U64 _945_extra = static_cast<jule::U64>((-(_8113_dexp2)));;
	jule::U32 _955_extraMask = static_cast<jule::U32>(((1LL << _945_extra) - 1LL));;
	jule::U32 _979_dfrac = static_cast<jule::U32>(0LLU);;
	({
		jule::U32 ___jule_assign_arg = static_cast<jule::U32>((_819_di >> _945_extra));
		jule::U32 _1___jule_assign_arg = static_cast<jule::U32>((_819_di & _955_extraMask));
		_819_di = ___jule_assign_arg;
		_979_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _999_roundUp = false;;
	if (_799_exact) {
		_999_roundUp=(((_979_dfrac > (1LLU << (_945_extra - 1LLU))) || ((_979_dfrac == (1LLU << (_945_extra - 1LLU))) && (!(_8124_d0)))) || (((_979_dfrac == (1LLU << (_945_extra - 1LLU))) && _8124_d0) && ((_819_di & 1LLU) == 1LLU)));
	} else {
		_999_roundUp=((_979_dfrac >> (_945_extra - 1LLU)) == 1LLU);
	};
	if ((_979_dfrac != 0LLU)) {
		_8124_d0=false;
	};
	_1d4309774_formatDecimal(_4924_d, static_cast<jule::U64>(static_cast<jule::U64>(_819_di)), (!(_8124_d0)), _999_roundUp, _4966_prec);
	(*(_4924_d))._field_dp-=_745_q;
}



inline void _1d4308e27_ryuFtoaFixed64(_1d42eacd7_decimalSlice* _12124_d, jule::U64 _12145_mant, jule::I64 _12156_exp, jule::I64 _12166_prec) {
	if ((_12166_prec > 18LL)) {
		jule::panic(jule::Str::lit("ryuFtoaFixed64 called with prec > 18", 36) + jule::Str("\nlocation: std/conv/ftoaryu.jule:123:9"));;
	};
	if ((_12145_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_12124_d))._field_nd = ___jule_assign_arg;
			(*(_12124_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I64 _1319_e2 = _12156_exp;;
	jule::I64 _1325_b = _1c75e3c79_Len64(_12145_mant);;
	if ((_1325_b < 55LL)) {
		_12145_mant=static_cast<jule::U64>((_12145_mant << static_cast<jule::U64>((55LL - _1325_b))));
		_1319_e2+=(static_cast<jule::I64>(_1325_b) - 55LL);
	};
	jule::I64 _1465_q = (((-(_1d430a016_mulByLog2Log10(static_cast<jule::I64>((_1319_e2 + 54LL))))) + _12166_prec) - 1LL);;
	jule::Bool _1519_exact = ((_1465_q <= 55LL) && (_1465_q >= 0LL));;
	jule::U64 _1539_di = 0;;
	jule::I64 _15313_dexp2 = 0;;
	jule::Bool _15324_d0 = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1d430bd09_mult128bitPow10(_12145_mant, _1319_e2, _1465_q);
		_1539_di = __jule_assign_result.__jule_result_arg0;
		_15313_dexp2 = __jule_assign_result.__jule_result_arg1;
		_15324_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_15313_dexp2 >= 0LL)) {
		jule::panic(jule::Str::lit("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:155:9"));;
	};
	if ((((_1465_q < 0LL) && (_1465_q >= -22LL)) && _1d430c17d_divisibleByPow5(_12145_mant, static_cast<jule::I64>((-(_1465_q)))))) {
		_1519_exact=true;
		_15324_d0=true;
	};
	jule::U64 _1665_extra = static_cast<jule::U64>((-(_15313_dexp2)));;
	jule::U64 _1675_extraMask = static_cast<jule::U64>(((1LL << _1665_extra) - 1LL));;
	jule::U64 _1699_dfrac = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_1539_di >> _1665_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_1539_di & _1675_extraMask));
		_1539_di = ___jule_assign_arg;
		_1699_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _1719_roundUp = false;;
	if (_1519_exact) {
		_1719_roundUp=(((_1699_dfrac > (1LLU << (_1665_extra - 1LLU))) || ((_1699_dfrac == (1LLU << (_1665_extra - 1LLU))) && (!(_15324_d0)))) || (((_1699_dfrac == (1LLU << (_1665_extra - 1LLU))) && _15324_d0) && ((_1539_di & 1LLU) == 1LLU)));
	} else {
		_1719_roundUp=((_1699_dfrac >> (_1665_extra - 1LLU)) == 1LLU);
	};
	if ((_1699_dfrac != 0LLU)) {
		_15324_d0=false;
	};
	_1d4309774_formatDecimal(_12124_d, _1539_di, (!(_15324_d0)), _1719_roundUp, _12166_prec);
	(*(_12124_d))._field_dp-=_1465_q;
}



inline void _1d4309774_formatDecimal(_1d42eacd7_decimalSlice* _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I64 _20088_prec) {
	jule::U64 _2015_max = _1d4309268_u64pow10[_20088_prec];;
	jule::I64 _2029_trimmed = 0LL;;
	while ((_20044_m >= _2015_max)) {
		{
			jule::U64 _2049_a = 0;;
			jule::U64 _20412_b = 0;;
			({
				jule::U64 ___jule_assign_arg = (_20044_m / 10LLU);
				jule::U64 _1___jule_assign_arg = (_20044_m % 10LL);
				_2049_a = ___jule_assign_arg;
				_20412_b = _1___jule_assign_arg;
			});
			_20044_m=_2049_a;
			(_2029_trimmed)++;
			if ((_20412_b > 5LLU)) {
				_20073_roundUp=true;
			} else if ((_20412_b < 5LLU)) {
				_20073_roundUp=false;
			} else {
				_20073_roundUp=(_20056_trunc || ((_20044_m & 1LLU) == 1LLU));
			};
			if ((_20412_b != 0LLU)) {
				_20056_trunc=true;
			};
		}
	_iter_next_1d90db463:;
	}
	_iter_end_1d90db463:;;
	if (_20073_roundUp) {
		(_20044_m)++;
	};
	if ((_20044_m >= _2015_max)) {
		_20044_m/=10LLU;
		(_2029_trimmed)++;
	};
	jule::U64 _2299_n = static_cast<jule::U64>(_20088_prec);;
	(*(_20023_d))._field_nd=static_cast<jule::I64>(static_cast<jule::I64>(_20088_prec));
	jule::U64 _2319_v = _20044_m;;
	while ((_2319_v >= 100LLU)) {
		{
			jule::U64 _23313_v1 = static_cast<jule::U64>(0LLU);;
			jule::U64 _23413_v2 = static_cast<jule::U64>(0LLU);;
			if (((_2319_v >> 32LLU) == 0LLU)) {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_2319_v) / 100LLU)));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_2319_v) % 100LL)));
					_23313_v1 = ___jule_assign_arg;
					_23413_v2 = _1___jule_assign_arg;
				});
			} else {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_2319_v / 100LLU));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_2319_v % 100LL));
					_23313_v1 = ___jule_assign_arg;
					_23413_v2 = _1___jule_assign_arg;
				});
			};
			_2299_n-=2LLU;
			(*(_20023_d))._field_d[static_cast<jule::I64>((_2299_n + 1LLU))]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>(((2LL * _23413_v2) + 1LLU)));
			(*(_20023_d))._field_d[static_cast<jule::I64>(_2299_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((2LL * _23413_v2)));
			_2319_v=_23313_v1;
		}
	_iter_next_1d90dde38:;
	}
	_iter_end_1d90dde38:;;
	if ((_2319_v > 0LLU)) {
		(_2299_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I64>(_2299_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>(((2LL * _2319_v) + 1LLU)));
	};
	if ((_2319_v >= 10LLU)) {
		(_2299_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I64>(_2299_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((2LL * _2319_v)));
	};
	while (((*(_20023_d))._field_d[((*(_20023_d))._field_nd - 1LL)] == '0')) {
		{
			((*(_20023_d))._field_nd)--;
			(_2029_trimmed)++;
		}
	_iter_next_1d90e4a43:;
	}
	_iter_end_1d90e4a43:;;
	(*(_20023_d))._field_dp=static_cast<jule::I64>(((*(_20023_d))._field_nd + _2029_trimmed));
}



inline void _1d4309c4c_ryuFtoaShortest(_1d42eacd7_decimalSlice* _26125_d, jule::U64 _26146_mant, jule::I64 _26157_exp, _1d42ea2c0_floatInfo* _26168_flt) {
	if ((_26146_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_26125_d))._field_nd = ___jule_assign_arg;
			(*(_26125_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	if (((_26157_exp <= 0LL) && (_1c75dd009_TrailingZeros64(_26146_mant) >= (-(_26157_exp))))) {
		_26146_mant>>=static_cast<jule::U64>((-(_26157_exp)));
		_1d430ad2a_ryuDigits(_26125_d, _26146_mant, _26146_mant, _26146_mant, true, false);
		return;;
	};
	jule::U64 _2735_ml = 0;;
	jule::U64 _2739_mc = 0;;
	jule::U64 _27313_mu = 0;;
	jule::I64 _27321_e2 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_assign_result = _1d430a70e_computeBounds(_26146_mant, _26157_exp, _26168_flt);
		_2735_ml = __jule_assign_result.__jule_result_arg0;
		_2739_mc = __jule_assign_result.__jule_result_arg1;
		_27313_mu = __jule_assign_result.__jule_result_arg2;
		_27321_e2 = __jule_assign_result.__jule_result_arg3;
	});
	if ((_27321_e2 == 0LL)) {
		_1d430ad2a_ryuDigits(_26125_d, _2735_ml, _2739_mc, _27313_mu, true, false);
		return;;
	};
	jule::I64 _2795_q = (_1d430a016_mulByLog2Log10(static_cast<jule::I64>((-(_27321_e2)))) + 1LL);;
	jule::U64 _2839_dl = static_cast<jule::U64>(0LLU);;
	jule::U64 _2849_dc = static_cast<jule::U64>(0LLU);;
	jule::U64 _2859_du = static_cast<jule::U64>(0LLU);;
	jule::Bool _2869_dl0 = false;;
	jule::Bool _2879_dc0 = false;;
	jule::Bool _2889_du0 = false;;
	if (((*(_26168_flt)) == _1d42ea5cd_f32info)) {
		jule::U32 _29013_dl32 = static_cast<jule::U32>(0LLU);;
		jule::U32 _29113_dc32 = static_cast<jule::U32>(0LLU);;
		jule::U32 _29213_du32 = static_cast<jule::U32>(0LLU);;
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1d430b8ca_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_2735_ml)), _27321_e2, _2795_q);
			_29013_dl32 = __jule_assign_result.__jule_result_arg0;
			_2869_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1d430b8ca_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_2739_mc)), _27321_e2, _2795_q);
			_29113_dc32 = __jule_assign_result.__jule_result_arg0;
			_2879_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1d430b8ca_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27313_mu)), _27321_e2, _2795_q);
			_29213_du32 = __jule_assign_result.__jule_result_arg0;
			_27321_e2 = __jule_assign_result.__jule_result_arg1;
			_2889_du0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29013_dl32));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29113_dc32));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29213_du32));
			_2839_dl = ___jule_assign_arg;
			_2849_dc = _1___jule_assign_arg;
			_2859_du = _2___jule_assign_arg;
		});
	} else {
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1d430bd09_mult128bitPow10(_2735_ml, _27321_e2, _2795_q);
			_2839_dl = __jule_assign_result.__jule_result_arg0;
			_2869_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1d430bd09_mult128bitPow10(_2739_mc, _27321_e2, _2795_q);
			_2849_dc = __jule_assign_result.__jule_result_arg0;
			_2879_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1d430bd09_mult128bitPow10(_27313_mu, _27321_e2, _2795_q);
			_2859_du = __jule_assign_result.__jule_result_arg0;
			_27321_e2 = __jule_assign_result.__jule_result_arg1;
			_2889_du0 = __jule_assign_result.__jule_result_arg2;
		});
	};
	if ((_27321_e2 >= 0LL)) {
		jule::panic(jule::Str::lit("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:303:9"));;
	};
	if ((_2795_q > 55LL)) {
		({
			jule::Bool ___jule_assign_arg = false;
			jule::Bool _1___jule_assign_arg = false;
			jule::Bool _2___jule_assign_arg = false;
			_2869_dl0 = ___jule_assign_arg;
			_2879_dc0 = _1___jule_assign_arg;
			_2889_du0 = _2___jule_assign_arg;
		});
	};
	if (((_2795_q < 0LL) && (_2795_q >= -24LL))) {
		if (_1d430c17d_divisibleByPow5(_2735_ml, static_cast<jule::I64>((-(_2795_q))))) {
			_2869_dl0=true;
		};
		if (_1d430c17d_divisibleByPow5(_2739_mc, static_cast<jule::I64>((-(_2795_q))))) {
			_2879_dc0=true;
		};
		if (_1d430c17d_divisibleByPow5(_27313_mu, static_cast<jule::I64>((-(_2795_q))))) {
			_2889_du0=true;
		};
	};
	jule::U64 _3255_extra = static_cast<jule::U64>((-(_27321_e2)));;
	jule::U64 _3265_extraMask = static_cast<jule::U64>(((1LL << _3255_extra) - 1LL));;
	jule::U64 _3289_fracl = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_2839_dl >> _3255_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_2839_dl & _3265_extraMask));
		_2839_dl = ___jule_assign_arg;
		_3289_fracl = _1___jule_assign_arg;
	});
	jule::U64 _3309_fracc = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_2849_dc >> _3255_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_2849_dc & _3265_extraMask));
		_2849_dc = ___jule_assign_arg;
		_3309_fracc = _1___jule_assign_arg;
	});
	jule::U64 _3329_fracu = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_2859_du >> _3255_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_2859_du & _3265_extraMask));
		_2859_du = ___jule_assign_arg;
		_3329_fracu = _1___jule_assign_arg;
	});
	jule::Bool _3389_uok = ((!(_2889_du0)) || (_3329_fracu > 0LLU));;
	if ((_2889_du0 && (_3329_fracu == 0LLU))) {
		_3389_uok=((_26146_mant & 1LLU) == 0LLU);
	};
	if ((!(_3389_uok))) {
		(_2859_du)--;
	};
	jule::Bool _3479_cup = false;;
	if (_2879_dc0) {
		_3479_cup=((_3309_fracc > (1LLU << (_3255_extra - 1LLU))) || ((_3309_fracc == (1LLU << (_3255_extra - 1LLU))) && ((_2849_dc & 1LLU) == 1LLU)));
	} else {
		_3479_cup=((_3309_fracc >> (_3255_extra - 1LLU)) == 1LLU);
	};
	jule::Bool _3615_lok = ((_2869_dl0 && (_3289_fracl == 0LLU)) && ((_26146_mant & 1LLU) == 0LLU));;
	if ((!(_3615_lok))) {
		(_2839_dl)++;
	};
	jule::Bool _3665_c0 = (_2879_dc0 && (_3309_fracc == 0LLU));;
	_1d430ad2a_ryuDigits(_26125_d, _2839_dl, _2849_dc, _2859_du, _3665_c0, _3479_cup);
	(*(_26125_d))._field_dp-=_2795_q;
}



inline jule::I64 _1d430a016_mulByLog2Log10(jule::I64 _37719_x) {
	return static_cast<jule::I64>(((_37719_x * 78913LL) >> 18LL));;
}



inline jule::I64 _1d430a2d0_mulByLog10Log2(jule::I64 _38719_x) {
	return static_cast<jule::I64>(((_38719_x * 108853LL) >> 15LL));;
}



inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1d430a70e_computeBounds(jule::U64 _39518_mant, jule::I64 _39529_exp, _1d42ea2c0_floatInfo* _3966_flt) {
	__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0;
	__jule_func_result.__jule_result_arg3 = 0;
	if (((_39518_mant != (1LLU << (*(_3966_flt))._field_mantbits)) || (_39529_exp == (((*(_3966_flt))._field_bias + 1LL) - static_cast<jule::I64>((*(_3966_flt))._field_mantbits))))) {
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(((2LL * _39518_mant) - 1LLU));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((2LL * _39518_mant));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(((2LL * _39518_mant) + 1LLU));
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=static_cast<jule::I64>((_39529_exp - 1LL));
	} else {
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(((4LL * _39518_mant) - 1LLU));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((4LL * _39518_mant));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(((4LL * _39518_mant) + 2LLU));
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=static_cast<jule::I64>((_39529_exp - 2LL));
	};
	return __jule_func_result;;
}



inline void _1d430ad2a_ryuDigits(_1d42eacd7_decimalSlice* _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup) {
	jule::U32 _4109_lhi = 0;;
	jule::U32 _41014_llo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1d430c447_divmod1e9(_40936_lower);
		_4109_lhi = __jule_assign_result.__jule_result_arg0;
		_41014_llo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _4115_chi = 0;;
	jule::U32 _41110_clo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1d430c447_divmod1e9(_40948_central);
		_4115_chi = __jule_assign_result.__jule_result_arg0;
		_41110_clo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _4125_uhi = 0;;
	jule::U32 _41210_ulo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1d430c447_divmod1e9(_40962_upper);
		_4125_uhi = __jule_assign_result.__jule_result_arg0;
		_41210_ulo = __jule_assign_result.__jule_result_arg1;
	});
	if ((_4125_uhi == 0LLU)) {
		_1d430b49b_ryuDigits32(_40919_d, _41014_llo, _41110_clo, _41210_ulo, _40978_c0, _40992_cup, 8LL);
	} else if ((_4109_lhi < _4125_uhi)) {
		if ((_41014_llo != 0LLU)) {
			(_4109_lhi)++;
		};
		_40978_c0=(_40978_c0 && (_41110_clo == 0LLU));
		_40992_cup=((_41110_clo > 500000000LL) || ((_41110_clo == 500000000LL) && _40992_cup));
		_1d430b49b_ryuDigits32(_40919_d, _4109_lhi, _4115_chi, _4125_uhi, _40978_c0, _40992_cup, 8LL);
		(*(_40919_d))._field_dp+=9LL;
	} else {
		(*(_40919_d))._field_nd=0LL;
		jule::U64 _42813_n = static_cast<jule::U64>(9LLU);;
		jule::U32 _42913_v = _4115_chi;;
		while ((_42913_v > 0LLU)) {
			{
				jule::U32 _43113_v1 = 0;;
				jule::U32 _43117_v2 = 0;;
				({
					jule::U32 ___jule_assign_arg = (_42913_v / 10LLU);
					jule::U32 _1___jule_assign_arg = (_42913_v % 10LL);
					_43113_v1 = ___jule_assign_arg;
					_43117_v2 = _1___jule_assign_arg;
				});
				_42913_v=_43113_v1;
				(_42813_n)--;
				(*(_40919_d))._field_d[static_cast<jule::I64>(_42813_n)]=static_cast<jule::U8>(static_cast<jule::U8>((_43117_v2 + '0')));
			}
		_iter_next_1d91132c0:;
		}
		_iter_end_1d91132c0:;;
		(*(_40919_d))._field_d=(*(_40919_d))._field_d.slice(static_cast<jule::I64>(_42813_n));
		(*(_40919_d))._field_nd=static_cast<jule::I64>(static_cast<jule::I64>((9LL - _42813_n)));
		_1d430b49b_ryuDigits32(_40919_d, _41014_llo, _41110_clo, _41210_ulo, _40978_c0, _40992_cup, static_cast<jule::I64>(((*(_40919_d))._field_nd + 8LL)));
	};
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[((*(_40919_d))._field_nd - 1LL)] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
		}
	_iter_next_1d9115d2d:;
	}
	_iter_end_1d9115d2d:;;
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[0LL] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
			((*(_40919_d))._field_dp)--;
			(*(_40919_d))._field_d=(*(_40919_d))._field_d.slice(1LL);
		}
	_iter_next_1d9115921:;
	}
	_iter_end_1d9115921:;;
}



inline void _1d430b49b_ryuDigits32(_1d42eacd7_decimalSlice* _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4559_upper, jule::Bool _45525_c0, jule::Bool _45539_cup, jule::I64 _45554_endindex) {
	if ((_4559_upper == 0LLU)) {
		(*(_45421_d))._field_dp=static_cast<jule::I64>((_45554_endindex + 1LL));
		return;;
	};
	jule::I64 _4609_trimmed = 0LL;;
	jule::I64 _4639_cNextDigit = 0LL;;
	while ((_4559_upper > 0LLU)) {
		{
			jule::U32 _4709_l = ((_45442_lower + 9LLU) / 10LLU);;
			jule::U32 _47113_c = 0;;
			jule::U32 _47120_cdigit = 0;;
			({
				jule::U32 ___jule_assign_arg = (_45458_central / 10LLU);
				jule::U32 _1___jule_assign_arg = (_45458_central % 10LL);
				_47113_c = ___jule_assign_arg;
				_47120_cdigit = _1___jule_assign_arg;
			});
			jule::U32 _4729_u = (_4559_upper / 10LLU);;
			if ((_4709_l > _4729_u)) {
				goto _iter_end_1d911d4b7;
			};
			if (((_4709_l == (_47113_c + 1LLU)) && (_47113_c < _4729_u))) {
				(_47113_c)++;
				_47120_cdigit=0LLU;
				_45539_cup=false;
			};
			(_4609_trimmed)++;
			_45525_c0=(_45525_c0 && (_4639_cNextDigit == 0LL));
			_4639_cNextDigit=static_cast<jule::I64>(static_cast<jule::I64>(_47120_cdigit));
			({
				jule::U32 ___jule_assign_arg = _4709_l;
				jule::U32 _1___jule_assign_arg = _47113_c;
				jule::U32 _2___jule_assign_arg = _4729_u;
				_45442_lower = ___jule_assign_arg;
				_45458_central = _1___jule_assign_arg;
				_4559_upper = _2___jule_assign_arg;
			});
		}
	_iter_next_1d911d4b7:;
	}
	_iter_end_1d911d4b7:;;
	if ((_4609_trimmed > 0LL)) {
		_45539_cup=(((_4639_cNextDigit > 5LL) || ((_4639_cNextDigit == 5LL) && (!(_45525_c0)))) || (((_4639_cNextDigit == 5LL) && _45525_c0) && ((_45458_central & 1LLU) == 1LLU)));
	};
	if (((_45458_central < _4559_upper) && _45539_cup)) {
		(_45458_central)++;
	};
	_45554_endindex-=_4609_trimmed;
	jule::U32 _5099_v = _45458_central;;
	jule::I64 _5109_n = _45554_endindex;;
	while ((_5109_n > (*(_45421_d))._field_nd)) {
		{
			jule::U32 _5129_v1 = 0;;
			jule::U32 _51213_v2 = 0;;
			({
				jule::U32 ___jule_assign_arg = (_5099_v / 100LLU);
				jule::U32 _1___jule_assign_arg = (_5099_v % 100LL);
				_5129_v1 = ___jule_assign_arg;
				_51213_v2 = _1___jule_assign_arg;
			});
			(*(_45421_d))._field_d[_5109_n]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>(((2LL * _51213_v2) + 1LLU)));
			(*(_45421_d))._field_d[(_5109_n - 1LL)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((2LL * _51213_v2)));
			_5109_n-=2LL;
			_5099_v=_5129_v1;
		}
	_iter_next_1d9124875:;
	}
	_iter_end_1d9124875:;;
	if ((_5109_n == (*(_45421_d))._field_nd)) {
		(*(_45421_d))._field_d[_5109_n]=static_cast<jule::U8>(static_cast<jule::U8>((_5099_v + '0')));
	};
	(*(_45421_d))._field_nd=static_cast<jule::I64>((_45554_endindex + 1LL));
	(*(_45421_d))._field_dp=static_cast<jule::I64>(((*(_45421_d))._field_nd + _4609_trimmed));
}



inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1d430b8ca_mult64bitPow10(jule::U32 _53419_m, jule::I64 _53431_e2, jule::I64 _53440_q) {
	__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_53440_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>((_53419_m << 6LLU));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>((_53431_e2 - 6LL));
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_53440_q < -348LL) || (347LL < _53440_q))) {
		jule::panic(jule::Str::lit("mult64bitPow10: power of 10 is out of range", 43) + jule::Str("\nlocation: std/conv/ftoaryu.jule:541:9"));;
	};
	jule::U64 _5439_pow = _1d4303284_detailedPowsOfTen[(_53440_q - -348LL)][1LL];;
	if ((_53440_q < 0LL)) {
		_5439_pow+=1LLU;
	};
	jule::U64 _5485_hi = 0;;
	jule::U64 _5489_lo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1c75e6320_Mul64(static_cast<jule::U64>(static_cast<jule::U64>(_53419_m)), _5439_pow);
		_5485_hi = __jule_assign_result.__jule_result_arg0;
		_5489_lo = __jule_assign_result.__jule_result_arg1;
	});
	_53431_e2+=((_1d430a2d0_mulByLog10Log2(_53440_q) - 63LL) + 57LL);
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(static_cast<jule::U32>(((_5485_hi << 7LLU) | (_5489_lo >> 57LLU))));
	__jule_func_result.__jule_result_arg1 = _53431_e2;
	__jule_func_result.__jule_result_arg2 = ((_5489_lo << 7LLU) == 0LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1d430bd09_mult128bitPow10(jule::U64 _56220_m, jule::I64 _56232_e2, jule::I64 _56241_q) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_56241_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>((_56220_m << 8LLU));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>((_56232_e2 - 8LL));
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_56241_q < -348LL) || (347LL < _56241_q))) {
		jule::panic(jule::Str::lit("mult128bitPow10: power of 10 is out of range", 44) + jule::Str("\nlocation: std/conv/ftoaryu.jule:569:9"));;
	};
	jule::Array<jule::U64,2> _5719_pow = _1d4303284_detailedPowsOfTen[(_56241_q - -348LL)];;
	if ((_56241_q < 0LL)) {
		_5719_pow[0LL]+=1LLU;
	};
	_56232_e2+=((_1d430a2d0_mulByLog10Log2(_56241_q) - 127LL) + 119LL);
	jule::U64 _5795_l1 = 0;;
	jule::U64 _5799_l0 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1c75e6320_Mul64(_56220_m, _5719_pow[0LL]);
		_5795_l1 = __jule_assign_result.__jule_result_arg0;
		_5799_l0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5809_h1 = 0;;
	jule::U64 _58013_h0 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1c75e6320_Mul64(_56220_m, _5719_pow[1LL]);
		_5809_h1 = __jule_assign_result.__jule_result_arg0;
		_58013_h0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5815_mid = 0;;
	jule::U64 _58110_carry = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1c75e4a16_Add64(_5795_l1, _58013_h0, 0LLU);
		_5815_mid = __jule_assign_result.__jule_result_arg0;
		_58110_carry = __jule_assign_result.__jule_result_arg1;
	});
	_5809_h1+=_58110_carry;
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>(((_5809_h1 << 9LLU) | (_5815_mid >> 55LLU)));
	__jule_func_result.__jule_result_arg1 = _56232_e2;
	__jule_func_result.__jule_result_arg2 = (((_5815_mid << 9LLU) == 0LLU) && (_5799_l0 == 0LLU));
	return __jule_func_result;;
}



inline jule::Bool _1d430c17d_divisibleByPow5(jule::U64 _58624_m, jule::I64 _58632_k) {
	if ((_58624_m == 0LLU)) {
		return true;;
	};
	jule::I64 _5909_i = 0LL;;
	for (; (_5909_i < _58632_k); (_5909_i)++) {
		{
			if (((_58624_m % 5LL) != 0LLU)) {
				return false;;
			};
			_58624_m/=5LLU;
		}
	_iter_next_1d9132c7e:;
	}
	_iter_end_1d9132c7e:;;
	return true;;
}



inline __jule_tuple_u32__jule_tuple_u32 _1d430c447_divmod1e9(jule::U64 _60214_x) {
	__jule_tuple_u32__jule_tuple_u32 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(static_cast<jule::U32>((_60214_x / 1000000000LL)));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::U32>(static_cast<jule::U32>((_60214_x % 1000000000LL)));
		return __jule_func_result;;
	};
}



inline void _1d43103b2_trim(_1d430da64_decimal* _27414_a) {
	while ((((*(_27414_a))._field_nd > 0LL) && ((*(_27414_a))._field_d[((*(_27414_a))._field_nd - 1LL)] == '0'))) {
		{
			((*(_27414_a))._field_nd)--;
		}
	_iter_next_1d9136403:;
	}
	_iter_end_1d9136403:;;
	if (((*(_27414_a))._field_nd == 0LL)) {
		(*(_27414_a))._field_dp=0LL;
	};
}



inline void _1d431069d_rightShift(_1d430da64_decimal* _28420_a, jule::U64 _28432_k) {
	jule::I64 _2859_r = 0LL;;
	jule::I64 _2869_w = 0LL;;
	jule::U64 _2899_n = static_cast<jule::U64>(0LLU);;
	for (; ((_2899_n >> _28432_k) == 0LLU); (_2859_r)++) {
		{
			if ((_2859_r >= (*(_28420_a))._field_nd)) {
				if ((_2899_n == 0LLU)) {
					(*(_28420_a))._field_nd=0LL;
					return;;
				};
				while (((_2899_n >> _28432_k) == 0LLU)) {
					{
						_2899_n=static_cast<jule::U64>((_2899_n * 10LLU));
						(_2859_r)++;
					}
				_iter_next_1d91396e2:;
				}
				_iter_end_1d91396e2:;;
				goto _iter_end_1d91380e7;
			};
			jule::U64 _3039_c = static_cast<jule::U64>((*(_28420_a))._field_d[_2859_r]);;
			_2899_n=static_cast<jule::U64>((((_2899_n * 10LLU) + _3039_c) - '0'));
		}
	_iter_next_1d91380e7:;
	}
	_iter_end_1d91380e7:;;
	(*(_28420_a))._field_dp-=(_2859_r - 1LL);
	jule::U64 _3085_mask = (static_cast<jule::U64>((1LL << _28432_k)) - 1LLU);;
	for (; (_2859_r < (*(_28420_a))._field_nd); (_2859_r)++) {
		{
			jule::U64 _3129_c = static_cast<jule::U64>((*(_28420_a))._field_d[_2859_r]);;
			jule::U64 _3139_dig = (_2899_n >> _28432_k);;
			_2899_n&=_3085_mask;
			(*(_28420_a))._field_d[_2869_w]=static_cast<jule::U8>(static_cast<jule::U8>((_3139_dig + '0')));
			(_2869_w)++;
			_2899_n=static_cast<jule::U64>((((_2899_n * 10LLU) + _3129_c) - '0'));
		}
	_iter_next_1d913b9ad:;
	}
	_iter_end_1d913b9ad:;;
	while ((_2899_n > 0LLU)) {
		{
			jule::U64 _3229_dig = (_2899_n >> _28432_k);;
			_2899_n&=_3085_mask;
			if ((_2869_w < 800LL)) {
				(*(_28420_a))._field_d[_2869_w]=static_cast<jule::U8>(static_cast<jule::U8>((_3229_dig + '0')));
				(_2869_w)++;
			} else if ((_3229_dig > 0LLU)) {
				(*(_28420_a))._field_trunc=true;
			};
			_2899_n=static_cast<jule::U64>((_2899_n * 10LLU));
		}
	_iter_next_1d913bc44:;
	}
	_iter_end_1d913bc44:;;
	(*(_28420_a))._field_nd=_2869_w;
	_1d43103b2_trim(_28420_a);
}



inline jule::Bool _1d4310b54_prefixIsLessThan(jule::Array<jule::U8,800> _33821_b, jule::I64 _33835_end, jule::Str* _33846_s) {
	jule::I64 _3399_i = 0LL;;
	for (; (_3399_i < (*(_33846_s)).len()); (_3399_i)++) {
		{
			if ((_3399_i >= _33835_end)) {
				return true;;
			};
			if ((_33821_b[_3399_i] != (*(_33846_s))[_3399_i])) {
				return (_33821_b[_3399_i] < (*(_33846_s))[_3399_i]);;
			};
		}
	_iter_next_1d9140b8d:;
	}
	_iter_end_1d9140b8d:;;
	return false;;
}



inline void _1d4310e0c_leftShift(_1d430da64_decimal* _35219_a, jule::U64 _35231_k) {
	jule::I64 _3539_delta = _1d430d46a_leftCheats[static_cast<jule::I64>(_35231_k)]._field_delta;;
	if (_1d4310b54_prefixIsLessThan((*(_35219_a))._field_d, (*(_35219_a))._field_nd, &(_1d430d46a_leftCheats[static_cast<jule::I64>(_35231_k)]._field_cutoff))) {
		(_3539_delta)--;
	};
	jule::I64 _3589_r = (*(_35219_a))._field_nd;;
	jule::I64 _3599_w = ((*(_35219_a))._field_nd + _3539_delta);;
	jule::U64 _3629_n = static_cast<jule::U64>(0LLU);;
	(_3589_r)--;
	for (; (_3589_r >= 0LL); (_3589_r)--) {
		{
			_3629_n+=((static_cast<jule::U64>((*(_35219_a))._field_d[_3589_r]) - '0') << _35231_k);
			jule::U64 _3669_quo = (_3629_n / 10LLU);;
			jule::U64 _3679_rem = (_3629_n - (10LLU * _3669_quo));;
			(_3599_w)--;
			if ((_3599_w < 800LL)) {
				(*(_35219_a))._field_d[_3599_w]=static_cast<jule::U8>(static_cast<jule::U8>((_3679_rem + '0')));
			} else if ((_3679_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_3629_n=_3669_quo;
		}
	_iter_next_1d914407b:;
	}
	_iter_end_1d914407b:;;
	while ((_3629_n > 0LLU)) {
		{
			jule::U64 _3799_quo = (_3629_n / 10LLU);;
			jule::U64 _3809_rem = (_3629_n - (10LLU * _3799_quo));;
			(_3599_w)--;
			if ((_3599_w < 800LL)) {
				(*(_35219_a))._field_d[_3599_w]=static_cast<jule::U8>(static_cast<jule::U8>((_3809_rem + '0')));
			} else if ((_3809_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_3629_n=_3799_quo;
		}
	_iter_next_1d91445ed:;
	}
	_iter_end_1d91445ed:;;
	(*(_35219_a))._field_nd+=_3539_delta;
	if (((*(_35219_a))._field_nd >= 800LL)) {
		(*(_35219_a))._field_nd=800LL;
	};
	(*(_35219_a))._field_dp+=_3539_delta;
	_1d43103b2_trim(_35219_a);
}



inline jule::Bool _1d4311281_shouldRoundUp(_1d430da64_decimal* _39919_a, jule::I64 _39931_nd) {
	if (((_39931_nd < 0LL) || (_39931_nd >= (*(_39919_a))._field_nd))) {
		return false;;
	};
	if ((((*(_39919_a))._field_d[_39931_nd] == '5') && ((_39931_nd + 1LL) == (*(_39919_a))._field_nd))) {
		if ((*(_39919_a))._field_trunc) {
			return true;;
		};
		return ((_39931_nd > 0LL) && ((((*(_39919_a))._field_d[(_39931_nd - 1LL)] - '0') & 1LL) != 0LLU));;
	};
	return ((*(_39919_a))._field_d[_39931_nd] >= '5');;
}



inline jule::Str _1d4312a68_FmtUint(jule::U64 _6112_i, jule::I64 _6120_base) {
	if (((_6112_i < 100LLU) && (_6120_base == 10LL))) {
		return _1d431353b_small(static_cast<jule::I64>(static_cast<jule::I64>(_6112_i)));;
	};
	jule::Str _658_s;;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1d4313d99_fmtBits(nullptr, _6112_i, _6120_base, false, false);
		_658_s = __jule_assign_result.__jule_result_arg1;
	});
	return _658_s;;
}



inline jule::Str _1d4312e31_FmtInt(jule::I64 _7211_i, jule::I64 _7219_base) {
	if ((((0LL <= _7211_i) && (_7211_i < 100LL)) && (_7219_base == 10LL))) {
		return _1d431353b_small(static_cast<jule::I64>(static_cast<jule::I64>(_7211_i)));;
	};
	jule::Str _768_s;;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1d4313d99_fmtBits(nullptr, static_cast<jule::U64>(static_cast<jule::U64>(_7211_i)), _7219_base, (_7211_i < 0LL), false);
		_768_s = __jule_assign_result.__jule_result_arg1;
	});
	return _768_s;;
}



inline jule::Str _1d43131ea_Itoa(jule::I64 _819_i) {
	return _1d4312e31_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_819_i)), 10LL);;
}



inline jule::Str _1d431353b_small(jule::I64 _8610_i) {
	if ((_8610_i < 10LL)) {
		return jule::Str::from_byte(static_cast<jule::U8>(('0' + _8610_i)));;
	};
	jule::Slice<jule::U8> _909_buf = jule::Slice<jule::U8>::alloc(3LL, 3LL, 0);;
	_909_buf[0LL]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, (_8610_i << 1LL));
	_909_buf[1LL]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, ((_8610_i << 1LL) + 1LL));
	return _216828920_StrFromBytes(_909_buf.slice(0LL, 2LL));;
}



inline jule::Bool _1d4313805_isPowerOfTwo(jule::I64 _9617_x) {
	return ((_9617_x & (_9617_x - 1LL)) == 0LL);;
}



inline __jule_tuple_su8__jule_tuple_str _1d4313d99_fmtBits(jule::Slice<jule::U8> _10516_dst, jule::U64 _10533_u, jule::I64 _10541_base, jule::Bool _10552_neg, jule::Bool _10563_append_) {
	__jule_tuple_su8__jule_tuple_str __jule_func_result;
	if (((_10541_base < 2LL) || (_10541_base > 36LL))) {
		jule::panic(jule::Str::lit("std::conv: illegal base", 23) + jule::Str("\nlocation: std/conv/itoa.jule:107:9"));;
	};
	jule::Slice<jule::U8> _1119_a = jule::Slice<jule::U8>::alloc(65LL, 65LL, 0);;
	jule::I64 _1129_i = _1119_a.len();;
	if (_10552_neg) {
		_10533_u=static_cast<jule::U64>((-(_10533_u)));
	};
	{
		
		if ((_10541_base == 10LL)) {
			_case_begin_1d917eb55:;
			{
				;
				jule::U64 _15413_us = static_cast<jule::U64>(_10533_u);;
				while ((_15413_us >= 100LLU)) {
					{
						jule::U64 _15613_is = ((_15413_us % 100LL) << 1LLU);;
						_15413_us/=100LLU;
						_1129_i-=2LL;
						_1119_a[(_1129_i + 1LL)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((_15613_is + 1LLU)));
						_1119_a[_1129_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>(_15613_is));
					}
				_iter_next_1d91814a3:;
				}
				_iter_end_1d91814a3:;;
				jule::U64 _1649_is = (_15413_us << 1LLU);;
				(_1129_i)--;
				_1119_a[_1129_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((_1649_is + 1LLU)));
				if ((_15413_us >= 10LLU)) {
					(_1129_i)--;
					_1119_a[_1129_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>(_1649_is));
				};
			}
		}
		else if (_1d4313805_isPowerOfTwo(_10541_base)) {
			_case_begin_1d9180309:;
			{
				jule::U64 _1799_shift = (static_cast<jule::U64>(_1c75dc2d3_TrailingZeros(static_cast<jule::U64>(static_cast<jule::U64>(_10541_base)))) & 7LLU);;
				jule::U64 _1809_b = static_cast<jule::U64>(_10541_base);;
				jule::U64 _1819_m = (static_cast<jule::U64>(_10541_base) - 1LLU);;
				while ((_10533_u >= _1809_b)) {
					{
						(_1129_i)--;
						_1119_a[_1129_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I64>((static_cast<jule::U64>(_10533_u) & _1819_m)));
						_10533_u>>=_1799_shift;
					}
				_iter_next_1d91895ee:;
				}
				_iter_end_1d91895ee:;;
				(_1129_i)--;
				_1119_a[_1129_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I64>(static_cast<jule::U64>(_10533_u)));
			}
		}
		else {
			_case_begin_1d917dc31:;
			{
				jule::U64 _1929_b = static_cast<jule::U64>(_10541_base);;
				while ((_10533_u >= _1929_b)) {
					{
						(_1129_i)--;
						jule::U64 _19813_q = jule::div(_10533_u,_1929_b);;
						_1119_a[_1129_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I64>(static_cast<jule::U64>((_10533_u - (_19813_q * _1929_b)))));
						_10533_u=_19813_q;
					}
				_iter_next_1d917e67c:;
				}
				_iter_end_1d917e67c:;;
				(_1129_i)--;
				_1119_a[_1129_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I64>(static_cast<jule::U64>(_10533_u)));
			}
		}
		_match_end_1d917dbcb:;
	};
	if (_10552_neg) {
		(_1129_i)--;
		_1119_a[_1129_i]='-';
	};
	if (_10563_append_) {
		__jule_func_result.__jule_result_arg0=jule::append(_10516_dst,_1119_a.slice(_1129_i));
		return __jule_func_result;;
	};
	jule::I64 _2175_n = jule::copy((_1119_a), (_1119_a.slice(_1129_i)));;
	__jule_func_result.__jule_result_arg1=_216828920_StrFromBytes(_1119_a.slice(0LL, _2175_n));
	return __jule_func_result;;
}



inline jule::Str _1d4315296_RealKindOf(jule::Str _4515_kind) {
	{
		auto &_match_expr{ _4515_kind };
		
		if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1d919daec:;
			{
				return _1d4314790_SysInt;;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4) || _match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1d919db63:;
			{
				return _1d4314a59_SysUint;;
			}
		}
		else {
			_case_begin_1d919d646:;
			{
				return _4515_kind;;
			}
		}
		_match_end_1d919d5e1:;
	};
}



inline jule::I64 _1d4315560_BitsizeOf(jule::Str _5914_k) {
	{
		auto &_match_expr{ _5914_k };
		
		if (_match_expr == jule::Str::lit("i8", 2) || _match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1d919ec74:;
			{
				return 8LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3) || _match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1d919eda6:;
			{
				return 16LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3) || _match_expr == jule::Str::lit("u32", 3) || _match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1d919ee1c:;
			{
				return 32LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3) || _match_expr == jule::Str::lit("u64", 3) || _match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1d919ee83:;
			{
				return 64LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4) || _match_expr == jule::Str::lit("int", 3) || _match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1d919eee9:;
			{
				return _1d4314493_BitSize;;
			}
		}
		else {
			_case_begin_1d919e889:;
			{
				return -1LL;;
			}
		}
		_match_end_1d919e823:;
	};
}



inline jule::Str _1d43158a1_IntFromBits(jule::I64 _8716_bits) {
	{
		auto &_match_expr{ _8716_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1d91a1935:;
			{
				return jule::Str::lit("i8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1d91a233c:;
			{
				return jule::Str::lit("i16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1d91a23a3:;
			{
				return jule::Str::lit("i32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1d91a2419:;
			{
				return jule::Str::lit("i64", 3);;
			}
		}
		else {
			_case_begin_1d91a1dca:;
			{
				return jule::Str();;
			}
		}
		_match_end_1d91a1d64:;
	};
}



inline jule::Str _1d4315b6a_UintFromBits(jule::I64 _10517_bits) {
	{
		auto &_match_expr{ _10517_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1d91a26c2:;
			{
				return jule::Str::lit("u8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1d91a35b3:;
			{
				return jule::Str::lit("u16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1d91a3629:;
			{
				return jule::Str::lit("u32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1d91a3690:;
			{
				return jule::Str::lit("u64", 3);;
			}
		}
		else {
			_case_begin_1d91a3063:;
			{
				return jule::Str();;
			}
		}
		_match_end_1d91a2eec:;
	};
}



inline jule::Str _1d4315e34_FloatFromBits(jule::I64 _12318_bits) {
	{
		auto &_match_expr{ _12318_bits };
		
		if (_match_expr == 32LLU) {
			_case_begin_1d91a3959:;
			{
				return jule::Str::lit("f32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1d91a484a:;
			{
				return jule::Str::lit("f64", 3);;
			}
		}
		else {
			_case_begin_1d91a42ea:;
			{
				return jule::Str();;
			}
		}
		_match_end_1d91a4284:;
	};
}



inline jule::Bool _1d4316a7d_CheckBitFloat(jule::Str _15118_val, jule::I64 _15128_bit) {
	({
		auto except = _1d4308179_ParseFloat(_15118_val, _15128_bit);
		(except.ok()) ? (except.result) : ({{
			return false;;
		} 0;});
	});
	return true;;
}



inline jule::I64 _1d4316d47_BitsizeOfFloat(jule::F64 _16119_x) {
	{
		
		if (((-340282346638528860000000000000000000000.0 <= _16119_x) && (_16119_x <= 340282346638528860000000000000000000000.0))) {
			_case_begin_1d91a9740:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1d91a7c27:;
			{
				return 64LLU;;
			}
		}
		_match_end_1d91a7b7d:;
	};
}



inline jule::I64 _1d4317111_BitsizeOfInt(jule::I64 _17717_x) {
	{
		
		if (((-128LL <= _17717_x) && (_17717_x <= 127LL))) {
			_case_begin_1d91aa499:;
			{
				return 8LLU;;
			}
		}
		else if (((-32768LL <= _17717_x) && (_17717_x <= 32767LL))) {
			_case_begin_1d91aa554:;
			{
				return 16LLU;;
			}
		}
		else if (((-2147483648LL <= _17717_x) && (_17717_x <= 2147483647LL))) {
			_case_begin_1d91aa5ba:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1d91a99e8:;
			{
				return 64LLU;;
			}
		}
		_match_end_1d91aa059:;
	};
}



inline jule::I64 _1d43173ca_BitsizeOfUint(jule::U64 _19718_x) {
	{
		
		if ((_19718_x <= 255LLU)) {
			_case_begin_1d91ac006:;
			{
				return 8LLU;;
			}
		}
		else if ((_19718_x <= 65535LLU)) {
			_case_begin_1d91ac0b1:;
			{
				return 16LLU;;
			}
		}
		else if ((_19718_x <= 4294967295LLU)) {
			_case_begin_1d91ac127:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1d91ab9b7:;
			{
				return 64LLU;;
			}
		}
		_match_end_1d91ab5aa:;
	};
}



inline void _1d4317551_UpdateTarget(void) {
	{
		{
			auto &_match_expr{ _1e03501d7_Arch };
			
			if (_match_expr == jule::Str::lit("arm64", 5) || _match_expr == jule::Str::lit("amd64", 5)) {
				_case_begin_1d91acee6:;
				{
					_1d4314493_BitSize=64LLU;
					_1d4314790_SysInt=jule::Str::lit("i64", 3);
					_1d4314a59_SysUint=jule::Str::lit("u64", 3);
				}
			}
			else if (_match_expr == jule::Str::lit("i386", 4)) {
				_case_begin_1d91ad05c:;
				{
					_1d4314493_BitSize=32LLU;
					_1d4314790_SysInt=jule::Str::lit("i32", 3);
					_1d4314a59_SysUint=jule::Str::lit("u32", 3);
				}
			}
			_match_end_1d91acde7:;
		};
	};
}



inline void _1d43176c7_init(void) {
	_1d4317551_UpdateTarget();
}



inline jule::I64 _1d431b489_MinI(jule::Str _6113_k) {
	_6113_k=_1d4315296_RealKindOf(_6113_k);
	{
		auto &_match_expr{ _6113_k };
		
		if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1d91ac29d:;
			{
				return -128LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1d91b00e7:;
			{
				return -32768LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1d91b015d:;
			{
				return -2147483648LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1d91b01c4:;
			{
				return jule::MIN_I64;;
			}
		}
		else {
			_case_begin_1d91ac3d0:;
			{
				return 0LL;;
			}
		}
		_match_end_1d91ac37a:;
	};
}



inline jule::I64 _1d431b797_MaxI(jule::Str _7913_k) {
	_7913_k=_1d4315296_RealKindOf(_7913_k);
	{
		auto &_match_expr{ _7913_k };
		
		if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1d91b046b:;
			{
				return 127LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1d91b1703:;
			{
				return 32767LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1d91b1769:;
			{
				return 2147483647LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1d91b17d0:;
			{
				return jule::MAX_I64;;
			}
		}
		else {
			_case_begin_1d91b0d84:;
			{
				return 0LL;;
			}
		}
		_match_end_1d91b158d:;
	};
}



inline jule::U64 _1d431ba61_MaxU(jule::Str _9713_k) {
	_9713_k=_1d4315296_RealKindOf(_9713_k);
	{
		auto &_match_expr{ _9713_k };
		
		if (_match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1d91b1a77:;
			{
				return 255LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1d91b2d0e:;
			{
				return 65535LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1d91b2d75:;
			{
				return 4294967295LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1d91b2ddb:;
			{
				return jule::MAX_U64;;
			}
		}
		else {
			_case_begin_1d91b2490:;
			{
				return 0LLU;;
			}
		}
		_match_end_1d91b2b99:;
	};
}



inline jule::F64 _1d431bc92_Min(jule::Str _11512_k) {
	_11512_k=_1d4315296_RealKindOf(_11512_k);
	jule::I64 _1175_i = _1d431b489_MinI(_11512_k);;
	if ((_1175_i != 0LL)) {
		return static_cast<jule::F64>(static_cast<jule::F64>(_1175_i));;
	};
	{
		auto &_match_expr{ _11512_k };
		
		if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1d91b54b5:;
			{
				return -340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1d91b4dee:;
			{
				return jule::MIN_F64;;
			}
		}
		else {
			_case_begin_1d91b48d2:;
			{
				return 0LL;;
			}
		}
		_match_end_1d91b4b57:;
	};
}



inline jule::F64 _1d431c05b_Max(jule::Str _13312_k) {
	_13312_k=_1d4315296_RealKindOf(_13312_k);
	jule::I64 _1355_i = _1d431b797_MaxI(_13312_k);;
	if ((_1355_i != 0LL)) {
		return static_cast<jule::F64>(static_cast<jule::F64>(_1355_i));;
	};
	jule::U64 _1395_u = _1d431ba61_MaxU(_13312_k);;
	if ((_1395_u != 0LLU)) {
		return static_cast<jule::F64>(static_cast<jule::F64>(_1395_u));;
	};
	{
		auto &_match_expr{ _13312_k };
		
		if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1d91b782a:;
			{
				return 340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1d91b7264:;
			{
				return jule::MAX_F64;;
			}
		}
		else {
			_case_begin_1d91b6b9d:;
			{
				return 0LL;;
			}
		}
		_match_end_1d91b6e9a:;
	};
}



inline jule::Bool _1d431c4ce_IsI16Greater(jule::Str _621_k) {
	return _621_k.equal("i8", 2);;
}



inline jule::Bool _1d431c7dc_IsI32Greater(jule::Str _1121_k) {
	return (_1121_k.equal("i8", 2) || _1121_k.equal("i16", 3));;
}



inline jule::Bool _1d431caa6_IsI64Greater(jule::Str _1621_k) {
	return ((_1621_k.equal("i8", 2) || _1621_k.equal("i16", 3)) || _1621_k.equal("i32", 3));;
}



inline jule::Bool _1d431cde7_IsU16Greater(jule::Str _2321_k) {
	return _2321_k.equal("u8", 2);;
}



inline jule::Bool _1d431d1b1_IsU32Greater(jule::Str _2821_k) {
	return (_2821_k.equal("u8", 2) || _2821_k.equal("u16", 3));;
}



inline jule::Bool _1d431d47a_IsU64Greater(jule::Str _3421_k) {
	return ((_3421_k.equal("u8", 2) || _3421_k.equal("u16", 3)) || _3421_k.equal("u32", 3));;
}



inline jule::Bool _1d431d744_IsF32Greater(jule::Str _4117_k) {
	return (!_4117_k.equal("f64", 3));;
}



inline jule::Bool _1d431dada_IsF64Greater(jule::Str _4617_k) {
	return true;;
}



inline jule::Bool _1d431de5e_IsGreater(jule::Str _5118_k1, jule::Str _5127_k2) {
	{
		auto &_match_expr{ _5118_k1 };
		
		if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1d91bad8e:;
			{
				return _1d432004d_IsSigInt(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4)) {
			_case_begin_1d91bb202:;
			{
				return _1d432035b_IsUnsigInt(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1d91bb279:;
			{
				return _1d432035b_IsUnsigInt(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1d91bb4cc:;
			{
				return _1d431c4ce_IsI16Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1d91bb554:;
			{
				return _1d431c7dc_IsI32Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1d91bb5cb:;
			{
				return _1d431caa6_IsI64Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1d91bb653:;
			{
				return _1d431cde7_IsU16Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1d91bb730:;
			{
				return _1d431d1b1_IsU32Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1d91bb7a7:;
			{
				return _1d431d47a_IsU64Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1d91bb82e:;
			{
				return _1d431d744_IsF32Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1d91bb8a6:;
			{
				return _1d431dada_IsF64Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("any", 3)) {
			_case_begin_1d91bb92d:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1d91bb08c:;
			{
				return false;;
			}
		}
		_match_end_1d91bb015:;
	};
}



inline jule::Bool _1d432004d_IsSigInt(jule::Str _2717_k) {
	return ((((_2717_k.equal("i8", 2) || _2717_k.equal("i16", 3)) || _2717_k.equal("i32", 3)) || _2717_k.equal("i64", 3)) || _2717_k.equal("int", 3));;
}



inline jule::Bool _1d432035b_IsUnsigInt(jule::Str _3619_k) {
	return (((((_3619_k.equal("u8", 2) || _3619_k.equal("u16", 3)) || _3619_k.equal("u32", 3)) || _3619_k.equal("u64", 3)) || _3619_k.equal("uint", 4)) || _3619_k.equal("uintptr", 7));;
}



inline jule::Bool _1d4320625_IsInt(jule::Str _4610_k) {
	return (_1d432004d_IsSigInt(_4610_k) || _1d432035b_IsUnsigInt(_4610_k));;
}



inline jule::Bool _1d4320966_IsFloat(jule::Str _5112_k) {
	return (_5112_k.equal("f32", 3) || _5112_k.equal("f64", 3));;
}



inline jule::Bool _1d4320c30_IsNum(jule::Str _5610_k) {
	return (_1d4320625_IsInt(_5610_k) || _1d4320966_IsFloat(_5610_k));;
}



inline jule::Bool _1d4320ee9_IsSigNum(jule::Str _6113_k) {
	return (_1d432004d_IsSigInt(_6113_k) || _1d4320966_IsFloat(_6113_k));;
}



inline void _1d432a223_lshiftUnsig(_1d4321208_Const* _59021_c, _1d4321208_Const* _59032_x) {
	jule::U64 _5915_l = _1d4323b34_AsU64(_59021_c);;
	jule::U64 _5925_r = _1d4323b34_AsU64(_59032_x);;
	_1d432442b_SetU64(_59021_c, static_cast<jule::U64>((_5915_l << _5925_r)));
}



inline void _1d432a553_rshiftUnsig(_1d4321208_Const* _59621_c, _1d4321208_Const* _59632_x) {
	jule::U64 _5975_l = _1d4323b34_AsU64(_59621_c);;
	jule::U64 _5985_r = _1d4323b34_AsU64(_59632_x);;
	_1d432442b_SetU64(_59621_c, static_cast<jule::U64>((_5975_l >> _5985_r)));
}



inline jule::Bool _1d64d6520_IsUnaryOp(jule::U64 _33414_id) {
	{
		auto expr = &(_1e04842d8_UnaryOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9272bd2:;
		if (it != expr_end) {
			jule::U64 *_33512_op = it;
			{
				if ((_33414_id == (*(_33512_op)))) {
					return true;;
				};
			}
			_iter_next_1d9272bd2:;
			++it;
			goto _iter_begin_1d9272bd2;
		}
		_iter_end_1d9272bd2:;
	};
	return false;;
}



inline jule::Bool _1d64d682d_IsBinOp(jule::U64 _34412_id) {
	{
		auto expr = &(_1d64ceb9a_BinOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9278039:;
		if (it != expr_end) {
			jule::U64 *_34512_op = it;
			{
				if ((_34412_id == (*(_34512_op)))) {
					return true;;
				};
			}
			_iter_next_1d9278039:;
			++it;
			goto _iter_begin_1d9278039;
		}
		_iter_end_1d9278039:;
	};
	return false;;
}



inline jule::Bool _1d64d6e38_IsStr(jule::Str _36410_k) {
	return (!(_36410_k).empty() && ((_36410_k[0LL] == '\"') || _1d64d7202_IsRawStr(_36410_k)));;
}



inline jule::Bool _1d64d7202_IsRawStr(jule::Str _36713_k) {
	return (!(_36713_k).empty() && (_36713_k[0LL] == '`'));;
}



inline jule::Bool _1d64d74bb_IsRune(jule::Str _37111_k) {
	return (!(_37111_k).empty() && (_37111_k[0LL] == '\''));;
}



inline jule::Bool _1d64d7de5_IsFloat(jule::Str _38012_k) {
	if (_1e016e5ab_HasPrefix(_38012_k, jule::Str::lit("0x", 2))) {
		return _1e0174b33_ContainsAny(_38012_k, jule::Str::lit(".pP", 3));;
	};
	return _1e0174b33_ContainsAny(_38012_k, jule::Str::lit(".eE", 3));;
}



inline jule::Bool _1d64d81ae_IsNum(jule::Str _38810_k) {
	if ((_38810_k).empty()) {
		return false;;
	};
	jule::U8 _3935_b = _38810_k[0LL];;
	return ((_3935_b == '.') || (('0' <= _3935_b) && (_3935_b <= '9')));;
}



inline jule::Bool _1d64d8742_IsIgnoreIdent(jule::Str _40318_ident) {
	return _40318_ident.equal("_", 1);;
}



inline jule::Bool _1d64d8a0b_IsAnonIdent(jule::Str _40616_ident) {
	return _40616_ident.equal("<anonymous>", 11);;
}



inline jule::Bool _1d64d908e_IsSpace(jule::I32 _41912_r) {
	{
		auto expr = &(_1e0483edb_Spaces);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d928053b:;
		if (it != expr_end) {
			jule::I32 *_42012_cr = it;
			{
				if ((_41912_r == (*(_42012_cr)))) {
					return true;;
				};
			}
			_iter_next_1d928053b:;
			++it;
			goto _iter_begin_1d928053b;
		}
		_iter_end_1d928053b:;
	};
	return false;;
}



inline jule::Bool _1d64d9512_IsLetter(jule::I32 _42913_r) {
	return _21944dc18_IsLetter(_42913_r);;
}



inline jule::Bool _1d64d9a95_IsDecimal(jule::U8 _44914_b) {
	return (('0' <= _44914_b) && (_44914_b <= '9'));;
}



inline jule::Bool _1d64d9d5e_IsBinary(jule::U8 _45213_b) {
	return ((_45213_b == '0') || (_45213_b == '1'));;
}



inline jule::Bool _1d64da128_IsOctal(jule::U8 _45512_b) {
	return (('0' <= _45512_b) && (_45512_b <= '7'));;
}



inline jule::Bool _1d64da3e2_IsHex(jule::U8 _45810_b) {
	{
		
		if ((('0' <= _45810_b) && (_45810_b <= '9'))) {
			_case_begin_1d92840cd:;
			{
				return true;;
			}
		}
		else if ((('a' <= _45810_b) && (_45810_b <= 'f'))) {
			_case_begin_1d9284155:;
			{
				return true;;
			}
		}
		else if ((('A' <= _45810_b) && (_45810_b <= 'F'))) {
			_case_begin_1d92841cc:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1d9284012:;
			{
				return false;;
			}
		}
		_match_end_1d9282eab:;
	};
}



inline jule::Bool _1d64da6ab_IsAssign(jule::U64 _47313_id) {
	return ((((((((_47313_id == static_cast<jule::U64>(1LLU)) || (_47313_id == static_cast<jule::U64>(27LLU))) || (_47313_id == static_cast<jule::U64>(30LLU))) || (_47313_id == static_cast<jule::U64>(32LLU))) || (_47313_id == static_cast<jule::U64>(24LLU))) || (_47313_id == static_cast<jule::U64>(74LLU))) || (_47313_id == static_cast<jule::U64>(62LLU))) || (_47313_id == static_cast<jule::U64>(65LLU)));;
}



inline jule::Bool _1d64da975_IsPostfixOp(jule::U64 _48516_id) {
	{
		auto expr = &(_1d64d0294_PostfixOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d928573e:;
		if (it != expr_end) {
			jule::U64 *_48612_op = it;
			{
				if ((_48516_id == (*(_48612_op)))) {
					return true;;
				};
			}
			_iter_next_1d928573e:;
			++it;
			goto _iter_begin_1d928573e;
		}
		_iter_end_1d928573e:;
	};
	return false;;
}



inline jule::Bool _1d64dac3e_IsAssignOp(jule::U64 _49515_id) {
	if (_1d64da975_IsPostfixOp(_49515_id)) {
		return true;;
	};
	{
		auto expr = &(_1d64d0591_AssignOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d92875dc:;
		if (it != expr_end) {
			jule::U64 *_49912_op = it;
			{
				if ((_49515_id == (*(_49912_op)))) {
					return true;;
				};
			}
			_iter_next_1d92875dc:;
			++it;
			goto _iter_begin_1d92875dc;
		}
		_iter_end_1d92875dc:;
	};
	return false;;
}



inline jule::Ptr<_1d64db59c_File> _1d64dc944_NewFileSet(jule::Str _5715_path) {
	return jule::new_ptr<_1d64db59c_File>(_1d64db59c_File{._field_Path=_5715_path, });;
}



inline _1e0235a7e_Log _1d64de490_makeErr(jule::I64 _10012_row, jule::I64 _10022_col, jule::Ptr<_1d64db59c_File>* _10033_f, jule::Str _10043_fmt, jule::Slice<jule::Any> _10056_args) {
	return _1e0235a7e_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_10012_row, ._field_Column=_10022_col, ._field_Path=(*((*(_10033_f))))._field_Path, ._field_Text=_1e0235ee1_Logf(_10043_fmt, _10056_args), };;
}



inline jule::Bool _1d64de858_bytesHasPrefix(jule::Slice<jule::U8>* _11020_bytes, jule::Str _11035_prefix) {
	if (((*(_11020_bytes)).len() < _11035_prefix.len())) {
		return false;;
	};
	{
		auto expr = &(_11035_prefix);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d929284a:;
		if (it != expr_end) {
			jule::I64 _1149_i = it - expr->begin();
			{
				if (((*(_11020_bytes))[_1149_i] != _11035_prefix[_1149_i])) {
					return false;;
				};
			}
			_iter_next_1d929284a:;
			++it;
			_1149_i++;
			goto _iter_begin_1d929284a;
		}
		_iter_end_1d929284a:;
	};
	return true;;
}



inline jule::Str _1d64debcc_floatFmtE(jule::Slice<jule::U8>* _12215_txt, jule::I64 _12232_i) {
	jule::Str __jule_func_result;
	(_12232_i)++;
	if ((_12232_i >= (*(_12215_txt)).len())) {
		return __jule_func_result;;
	};
	jule::U8 _1289_b = (*(_12215_txt))[_12232_i];;
	if ((_1289_b == '_')) {
		return __jule_func_result;;
	};
	if (((_1289_b == '+') || (_1289_b == '-'))) {
		(_12232_i)++;
		if ((_12232_i >= (*(_12215_txt)).len())) {
			return __jule_func_result;;
		};
		if (((*(_12215_txt))[_12232_i] == '_')) {
			return __jule_func_result;;
		};
	};
	jule::I64 _1425_first = _12232_i;;
	for (; (_12232_i < (*(_12215_txt)).len()); (_12232_i)++) {
		{
			_1289_b=(*(_12215_txt))[_12232_i];
			if (((_1289_b != '_') && (!(_1d64d9a95_IsDecimal(_1289_b))))) {
				goto _iter_end_1d9295760;
			};
		}
	_iter_next_1d9295760:;
	}
	_iter_end_1d9295760:;;
	if ((_12232_i == _1425_first)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_12215_txt)).slice(0LL, _12232_i));
	return __jule_func_result;;
}



inline jule::Str _1d64e0095_floatFmtP(jule::Slice<jule::U8>* _15615_txt, jule::I64 _15628_i) {
	return _1d64debcc_floatFmtE(_15615_txt, _15628_i);;
}



inline jule::Str _1d64e0419_floatFmtDotnp(jule::Slice<jule::U8>* _16019_txt, jule::I64 _16036_i) {
	if (((*(_16019_txt))[_16036_i] != '.')) {
		return jule::Str();;
	};
	(_16036_i)++;
	_julec_label_1d92975ec:;
	for (; (_16036_i < (*(_16019_txt)).len()); (_16036_i)++) {
		{
			jule::U8 _1689_b = (*(_16019_txt))[_16036_i];;
			{
				
				if ((_1689_b == '_') || _1d64d9a95_IsDecimal(_1689_b)) {
					_case_begin_1d92985ed:;
					{
						goto _iter_next_1d9297531;
					}
				}
				else if (_1d64e1d22_isFloatFmtP(_1689_b, _16036_i)) {
					_case_begin_1d9298675:;
					{
						return _1d64e0095_floatFmtP(_16019_txt, _16036_i);;
					}
				}
				else {
					_case_begin_1d9298532:;
					{
						goto _iter_end_1d9297531;
					}
				}
				_match_end_1d92984bb:;
			};
		}
	_iter_next_1d9297531:;
	}
	_iter_end_1d9297531:;;
	return jule::Str();;
}



inline jule::Str _1d64e078d_floatFmtDotfp(jule::Slice<jule::U8>* _18119_txt, jule::I64 _18136_i) {
	_18136_i+=2LL;
	return _1d64debcc_floatFmtE(_18119_txt, _18136_i);;
}



inline jule::Str _1d64e0b12_floatFmtDotp(jule::Slice<jule::U8>* _18618_txt, jule::I64 _18635_i) {
	(_18635_i)++;
	return _1d64debcc_floatFmtE(_18618_txt, _18635_i);;
}



inline jule::Str _1d64e1096_floatNum(jule::Slice<jule::U8>* _19114_txt, jule::I64 _19131_i) {
	jule::Str __jule_func_result;
	(_19131_i)++;
	if ((_19131_i >= (*(_19114_txt)).len())) {
		__jule_func_result = static_cast<jule::Str>((*(_19114_txt)));
		return __jule_func_result;;
	};
	if (((*(_19114_txt))[_19131_i] == '_')) {
		(_19131_i)--;
		__jule_func_result = static_cast<jule::Str>((*(_19114_txt)).slice(0LL, _19131_i));
		return __jule_func_result;;
	};
	for (; (_19131_i < (*(_19114_txt)).len()); (_19131_i)++) {
		{
			jule::U8 _2019_b = (*(_19114_txt))[_19131_i];;
			if (((_19131_i > 1LL) && ((_2019_b == 'e') || (_2019_b == 'E')))) {
				__jule_func_result = _1d64debcc_floatFmtE(_19114_txt, _19131_i);
				return __jule_func_result;;
			};
			if (((_2019_b != '_') && (!(_1d64d9a95_IsDecimal(_2019_b))))) {
				goto _iter_end_1d929ad5e;
			};
		}
	_iter_next_1d929ad5e:;
	}
	_iter_end_1d929ad5e:;;
	if ((_19131_i == 1LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_19114_txt)).slice(0LL, _19131_i));
	return __jule_func_result;;
}



inline jule::Str _1d64e1360_commonNum(jule::Slice<jule::U8>* _21615_txt) {
	jule::Str __jule_func_result;
	jule::I64 _2179_i = 0LL;;
	_julec_label_1d929d7ac:;
	for (; (_2179_i < (*(_21615_txt)).len()); (_2179_i)++) {
		{
			jule::U8 _2209_b = (*(_21615_txt))[_2179_i];;
			{
				
				if ((_2209_b == '.')) {
					_case_begin_1d929e44a:;
					{
						__jule_func_result = _1d64e1096_floatNum(_21615_txt, _2179_i);
						return __jule_func_result;;
					}
				}
				else if ((_2209_b == '_')) {
					_case_begin_1d929e4c2:;
					{
						goto _iter_next_1d929d856;
					}
				}
				else if (_1d64e199d_isFloatFmtE(_2209_b, _2179_i)) {
					_case_begin_1d929e549:;
					{
						__jule_func_result = _1d64debcc_floatFmtE(_21615_txt, _2179_i);
						return __jule_func_result;;
					}
				}
				else if ((!(_1d64d9a95_IsDecimal(_2209_b)))) {
					_case_begin_1d929e5c1:;
					{
						goto _iter_end_1d929d856;
					}
				}
				_match_end_1d929e36d:;
			};
		}
	_iter_next_1d929d856:;
	}
	_iter_end_1d929d856:;;
	if ((_2179_i == 0LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_21615_txt)).slice(0LL, _2179_i));
	return __jule_func_result;;
}



inline jule::Str _1d64e1629_binaryNum(jule::Slice<jule::U8>* _23915_txt) {
	jule::Str __jule_func_result;
	if ((!(_1d64de858_bytesHasPrefix(_23915_txt, jule::Str::lit("0b", 2))))) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_23915_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	;
	jule::I64 _2489_i = 2LL;;
	for (; (_2489_i < (*(_23915_txt)).len()); (_2489_i)++) {
		{
			if ((((*(_23915_txt))[_2489_i] != '_') && (!(_1d64d9d5e_IsBinary((*(_23915_txt))[_2489_i]))))) {
				goto _iter_end_1d92a243c;
			};
		}
	_iter_next_1d92a243c:;
	}
	_iter_end_1d92a243c:;;
	if ((_2489_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_23915_txt)).slice(0LL, _2489_i));
	return __jule_func_result;;
}



inline jule::Bool _1d64e199d_isFloatFmtE(jule::U8 _26116_b, jule::I64 _26125_i) {
	return ((_26125_i > 0LL) && ((_26116_b == 'e') || (_26116_b == 'E')));;
}



inline jule::Bool _1d64e1d22_isFloatFmtP(jule::U8 _26516_b, jule::I64 _26525_i) {
	return ((_26525_i > 0LL) && ((_26516_b == 'p') || (_26516_b == 'P')));;
}



inline jule::Bool _1d64e2196_isFloatFmtDotnp(jule::Slice<jule::U8>* _26921_txt, jule::I64 _26938_i) {
	if (((*(_26921_txt))[_26938_i] != '.')) {
		return false;;
	};
	(_26938_i)++;
	_julec_label_1d92a4e23:;
	for (; (_26938_i < (*(_26921_txt)).len()); (_26938_i)++) {
		{
			jule::U8 _2769_b = (*(_26921_txt))[_26938_i];;
			{
				
				if ((_2769_b == '_') || _1d64d9a95_IsDecimal(_2769_b)) {
					_case_begin_1d92a5e57:;
					{
						goto _iter_next_1d92a4d13;
					}
				}
				else if (_1d64e1d22_isFloatFmtP(_2769_b, _26938_i)) {
					_case_begin_1d92a5ece:;
					{
						return true;;
					}
				}
				else {
					_case_begin_1d92a5d8b:;
					{
						goto _iter_end_1d92a4d13;
					}
				}
				_match_end_1d92a5d25:;
			};
		}
	_iter_next_1d92a4d13:;
	}
	_iter_end_1d92a4d13:;;
	return false;;
}



inline jule::Bool _1d64e251a_isFloatFmtDotp(jule::Slice<jule::U8>* _29020_txt, jule::I64 _29033_i) {
	{
		
		if (((*(_29020_txt)).len() < 3LL)) {
			_case_begin_1d92a7288:;
			{
				goto _case_begin_1d92a7310;
			}
		}
		else if (((*(_29020_txt))[_29033_i] != '.')) {
			_case_begin_1d92a7310:;
			{
				goto _case_begin_1d92a7387;
			}
		}
		else if ((((*(_29020_txt))[(_29033_i + 1LL)] != 'p') && ((*(_29020_txt))[(_29033_i + 1LL)] != 'P'))) {
			_case_begin_1d92a7387:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1d92a71ab:;
			{
				return true;;
			}
		}
		_match_end_1d92a70e0:;
	};
}



inline jule::Bool _1d64e288e_isFloatFmtDotfp(jule::Slice<jule::U8>* _30321_txt, jule::I64 _30334_i) {
	{
		
		if (((*(_30321_txt)).len() < 4LL)) {
			_case_begin_1d92a9004:;
			{
				goto _case_begin_1d92a907b;
			}
		}
		else if (((*(_30321_txt))[_30334_i] != '.')) {
			_case_begin_1d92a907b:;
			{
				goto _case_begin_1d92a9103;
			}
		}
		else if ((((*(_30321_txt))[(_30334_i + 1LL)] != 'f') && ((*(_30321_txt))[(_30334_i + 1LL)] != 'F'))) {
			_case_begin_1d92a9103:;
			{
				goto _case_begin_1d92a9356;
			}
		}
		else if ((((*(_30321_txt))[(_30334_i + 2LL)] != 'p') && ((*(_30321_txt))[(_30334_i + 1LL)] != 'P'))) {
			_case_begin_1d92a9356:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1d92a8ae7:;
			{
				return true;;
			}
		}
		_match_end_1d92a8a2b:;
	};
}



inline jule::Str _1d64e2d12_octalNum(jule::Slice<jule::U8>* _31814_txt) {
	jule::Str __jule_func_result;
	if (((*(_31814_txt))[0LL] != '0')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_31814_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	jule::I64 _3269_octalStart = 1LL;;
	jule::Bool _3289_o = false;;
	if (((*(_31814_txt))[1LL] == 'o')) {
		if (((*(_31814_txt)).len() < 3LL)) {
			return __jule_func_result;;
		};
		(_3269_octalStart)++;
		_3289_o=true;
	};
	jule::I64 _3379_i = _3269_octalStart;;
	for (; (_3379_i < (*(_31814_txt)).len()); (_3379_i)++) {
		{
			jule::U8 _3399_b = (*(_31814_txt))[_3379_i];;
			if ((_3399_b == '.')) {
				if (_3289_o) {
					__jule_func_result = jule::Str();
					return __jule_func_result;;
				};
				__jule_func_result = _1d64e1096_floatNum(_31814_txt, _3379_i);
				return __jule_func_result;;
			};
			if (_1d64e199d_isFloatFmtE(_3399_b, _3379_i)) {
				__jule_func_result = _1d64debcc_floatFmtE(_31814_txt, _3379_i);
				return __jule_func_result;;
			};
			if (((_3399_b != '_') && (!(_1d64da128_IsOctal(_3399_b))))) {
				goto _iter_end_1d92acaa7;
			};
		}
	_iter_next_1d92acaa7:;
	}
	_iter_end_1d92acaa7:;;
	if ((_3379_i == _3269_octalStart)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_31814_txt)).slice(0LL, _3379_i));
	return __jule_func_result;;
}



inline jule::Str _1d64e30cb_hexNum(jule::Slice<jule::U8>* _36012_txt) {
	jule::Str __jule_func_result;
	if (((*(_36012_txt)).len() < 3LL)) {
		return __jule_func_result;;
	};
	if ((((*(_36012_txt))[0LL] != '0') || (((*(_36012_txt))[1LL] != 'x') && ((*(_36012_txt))[1LL] != 'X')))) {
		return __jule_func_result;;
	};
	;
	jule::I64 _3699_i = 2LL;;
	_julec_label_1d92b2161:;
	for (; (_3699_i < (*(_36012_txt)).len()); (_3699_i)++) {
		{
			jule::U8 _3729_b = (*(_36012_txt))[_3699_i];;
			{
				
				if (_1d64e251a_isFloatFmtDotp(_36012_txt, _3699_i)) {
					_case_begin_1d92b2d87:;
					{
						__jule_func_result = _1d64e0b12_floatFmtDotp(_36012_txt, _3699_i);
						return __jule_func_result;;
					}
				}
				else if (_1d64e288e_isFloatFmtDotfp(_36012_txt, _3699_i)) {
					_case_begin_1d92b2e0e:;
					{
						__jule_func_result = _1d64e078d_floatFmtDotfp(_36012_txt, _3699_i);
						return __jule_func_result;;
					}
				}
				else if (_1d64e1d22_isFloatFmtP(_3729_b, _3699_i)) {
					_case_begin_1d92b2e86:;
					{
						__jule_func_result = _1d64e0095_floatFmtP(_36012_txt, _3699_i);
						return __jule_func_result;;
					}
				}
				else if (_1d64e2196_isFloatFmtDotnp(_36012_txt, _3699_i)) {
					_case_begin_1d92b300d:;
					{
						__jule_func_result = _1d64e0419_floatFmtDotnp(_36012_txt, _3699_i);
						return __jule_func_result;;
					}
				}
				else if (((_3729_b != '_') && (!(_1d64da3e2_IsHex(_3729_b))))) {
					_case_begin_1d92b3085:;
					{
						goto _iter_end_1d92b22e8;
					}
				}
				_match_end_1d92b2c99:;
			};
		}
	_iter_next_1d92b22e8:;
	}
	_iter_end_1d92b22e8:;;
	if ((_3699_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_36012_txt)).slice(0LL, _3699_i));
	return __jule_func_result;;
}



inline jule::Str _1d64e3450_hexEscape(jule::Slice<jule::U8>* _39315_txt, jule::I64 _39328_n) {
	jule::Str __jule_func_result;
	if (((*(_39315_txt)).len() < _39328_n)) {
		return __jule_func_result;;
	};
	;
	jule::I64 _3999_i = 2LL;;
	for (; (_3999_i < _39328_n); (_3999_i)++) {
		{
			if ((!(_1d64da3e2_IsHex((*(_39315_txt))[_3999_i])))) {
				return __jule_func_result;;
			};
		}
	_iter_next_1d92b5609:;
	}
	_iter_end_1d92b5609:;;
	__jule_func_result=static_cast<jule::Str>((*(_39315_txt)).slice(0LL, _39328_n));
	return __jule_func_result;;
}



inline jule::Str _1d64e3719_bigUnicodePointEscape(jule::Slice<jule::U8>* _41127_txt) {
	return _1d64e3450_hexEscape(_41127_txt, 10LL);;
}



inline jule::Str _1d64e39d3_littleUnicodePointEscape(jule::Slice<jule::U8>* _41630_txt) {
	return _1d64e3450_hexEscape(_41630_txt, 6LL);;
}



inline jule::Str _1d64e3c9c_hexByteEscape(jule::Slice<jule::U8>* _42119_txt) {
	return _1d64e3450_hexEscape(_42119_txt, 4LL);;
}



inline jule::Str _1d64e4066_byteEscape(jule::Slice<jule::U8>* _42616_txt) {
	jule::Str __jule_func_result;
	if (((*(_42616_txt)).len() < 4LL)) {
		return __jule_func_result;;
	};
	if ((((!(_1d64da128_IsOctal((*(_42616_txt))[1LL]))) || (!(_1d64da128_IsOctal((*(_42616_txt))[2LL])))) || (!(_1d64da128_IsOctal((*(_42616_txt))[3LL]))))) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_42616_txt)).slice(0LL, 4LL));
	return __jule_func_result;;
}



inline jule::Slice<_1e0235a7e_Log> _1d64e905a_Lex(jule::Ptr<_1d64db59c_File> _80912_f, jule::I64 _80922_mode) {
	if ((_80912_f == nullptr)) {
		return nullptr;;
	};
	_1d64e47d6_lex _8149_lex = _1d64e47d6_lex{._field_mode=_80922_mode, ._field_file=_80912_f, ._field_pos=0LL, ._field_row=-1LL, };;
	_1d64e75ec_newLine(&_8149_lex);
	_1d64e53ca_lex(&_8149_lex);
	if ((_8149_lex._field_errors.len() > 0LL)) {
		return _8149_lex._field_errors;;
	};
	(*(_80912_f))._field_Tokens=_8149_lex._field_tokens;
	return nullptr;;
}



inline jule::Bool _1d65b1e7a_FindModuleFile(jule::Slice<jule::Ptr<_216764ce0_DirEntry>>* _1320_dirents) {
	{
		auto expr = _1320_dirents;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9347e3e:;
		if (it != expr_end) {
			jule::Ptr<_216764ce0_DirEntry> *_1412_d = it;
			{
				if (((!(_216769179_IsDir((*((*(_1412_d))))._field_Stat.ptr()))) && (*((*(_1412_d))))._field_Name.equal("jule.mod", 8))) {
					return true;;
				};
			}
			_iter_next_1d9347e3e:;
			++it;
			goto _iter_begin_1d9347e3e;
		}
		_iter_end_1d9347e3e:;
	};
	return false;;
}



inline jule::Str _1d65b2233_FindModuleFileDeep(jule::Str _2527_path) {
	for (;;) {
		{
			jule::Slice<jule::Ptr<_216764ce0_DirEntry>> _2713_dirents = ({
				auto except = static__1e0193de9_Read(_2527_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_1d9348813;
				} jule::Slice<jule::Ptr<_216764ce0_DirEntry>>(nullptr);});
			});;
			jule::Bool _319_exist = _1d65b1e7a_FindModuleFile(&(_2713_dirents));;
			if (_319_exist) {
				return _2527_path;;
			};
			jule::I64 _369_n = _2527_path.len();;
			_2527_path=_1e0191985_Dir(_2527_path);
			if ((_2527_path.len() == _369_n)) {
				goto _iter_end_1d9348813;
			};
		}
	_iter_next_1d9348813:;
	}
	_iter_end_1d9348813:;;
	return jule::Str();;
}



inline jule::Slice<_1e0235a7e_Log> _1d65b24ec_CheckModuleFile(jule::Str* _4721_path) {
	jule::Slice<jule::U8> _485_bytes = ({
		auto except = static__216767661_Read(_1e0190c92_Join(jule::Slice<jule::Str>::make({(*(_4721_path)),jule::Str::lit("jule.mod", 8)})));
		(except.ok()) ? (except.result) : ({{
			return jule::Slice<_1e0235a7e_Log>::make({_1e0235a7e_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Text=jule::Str::lit("module file could not checked because of a problem", 50), }});;
		} jule::Slice<jule::U8>(nullptr);});
	});;
	jule::Str _545_s = _1e0176b68_Trim(_216828656_BytesStr(_485_bytes), jule::Str::lit(" \n\r\t\v", 5));;
	if ((_545_s.len() != 0LL)) {
		return jule::Slice<_1e0235a7e_Log>::make({_1e0235a7e_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Text=jule::Str::lit("module file has syntax error(s)", 31), }});;
	};
	return nullptr;;
}



inline jule::Bool _1d65b2d7c_IsPub(jule::Str _910_ident) {
	if ((_910_ident[0LL] < 128LLU)) {
		jule::U8 _119_b = _910_ident[0LL];;
		return (('A' <= _119_b) && (_119_b <= 'Z'));;
	};
	jule::I32 _145_r = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1e012a479_DecodeRuneStr(_910_ident);
		_145_r = __jule_assign_result.__jule_result_arg0;
	});
	return _2194b7721_IsUpper(_145_r);;
}



inline jule::Bool _1d660ad81_IsAscii(jule::I32 _1112_r) {
	;
	return (_1112_r <= 127LL);;
}



inline jule::I32 _1d662b456_ToRune(jule::Str _2015_lit) {
	jule::I32 _219_r = static_cast<jule::I32>(0LL);;
	(_2015_lit).mut_slice(1LL, (_2015_lit.len() - 1LL));;
	if (((_2015_lit[0LL] == '\\') && (_2015_lit.len() > 1LL))) {
		jule::I64 _2413_i = 0LL;;
		_219_r=static_cast<jule::I32>(_1d662c0c2_runeFromEsqSeq(_2015_lit, &(_2413_i)));
	} else {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1e012a479_DecodeRuneStr(_2015_lit);
			_219_r = __jule_assign_result.__jule_result_arg0;
		});
	};
	return _219_r;;
}



inline jule::Str _1d662b676_ToRawStr(jule::Str _3613_lit) {
	if ((_3613_lit.len() == 2LL)) {
		return jule::Str();;
	};
	return _3613_lit.slice(1LL, (_3613_lit.len() - 1LL));;
}



inline jule::Str _1d662b9b7_ToStr(jule::Str _4714_lit) {
	if ((_4714_lit.len() == 2LL)) {
		return jule::Str();;
	};
	jule::Bool _539_isPure = true;;
	{
		auto expr = &(_4714_lit);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9355325:;
		if (it != expr_end) {
			jule::U8 _5412_b = *it;
			{
				if (((_5412_b >= 128LLU) || (_5412_b == '\\'))) {
					_539_isPure=false;
					goto _iter_end_1d9355325;
				};
			}
			_iter_next_1d9355325:;
			++it;
			goto _iter_begin_1d9355325;
		}
		_iter_end_1d9355325:;
	};
	if (_539_isPure) {
		return _4714_lit.slice(1LL, (_4714_lit.len() - 1LL));;
	};
	(_4714_lit).mut_slice(1LL, (_4714_lit.len() - 1LL));;
	jule::Slice<jule::U8> _689_s = jule::Slice<jule::U8>::alloc(0LL, _4714_lit.len(), 0);;
	jule::I64 _699_i = 0LL;;
	while ((_699_i < _4714_lit.len())) {
		{
			jule::U8 _719_b = _4714_lit[_699_i];;
			if ((_719_b == '\\')) {
				_1d662c468_strEsqSeq(&(_689_s), _4714_lit, &(_699_i));
			} else {
				jule::I32 _7513_r = 0;;
				jule::I64 _7516_size = 0;;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1e012a479_DecodeRuneStr(_4714_lit.slice(_699_i));
					_7513_r = __jule_assign_result.__jule_result_arg0;
					_7516_size = __jule_assign_result.__jule_result_arg1;
				});
				_699_i+=_7516_size;
				_689_s=_1e012b59b_AppendRune(_689_s, _7513_r);
			};
		}
	_iter_next_1d935738d:;
	}
	_iter_end_1d935738d:;;
	return _216828920_StrFromBytes(_689_s);;
}



inline __jule_tuple_u8__jule_tuple_bool _1d662bc81_tryBtoaCommonEsq(jule::Str _8321_s) {
	__jule_tuple_u8__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_8321_s.len() < 2LL) || (_8321_s[0LL] != '\\'))) {
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _8321_s[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_1d9359dc9:;
			{
				__jule_func_result.__jule_result_arg0='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1d9359e51:;
			{
				__jule_func_result.__jule_result_arg0='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1d9359ec8:;
			{
				__jule_func_result.__jule_result_arg0='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_1d935a050:;
			{
				__jule_func_result.__jule_result_arg0='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_1d935a0c7:;
			{
				__jule_func_result.__jule_result_arg0='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1d935a14e:;
			{
				__jule_func_result.__jule_result_arg0='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_1d935a1c6:;
			{
				__jule_func_result.__jule_result_arg0='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_1d935a24d:;
			{
				__jule_func_result.__jule_result_arg0='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_1d935a2c5:;
			{
				__jule_func_result.__jule_result_arg0='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_1d935a34c:;
			{
				__jule_func_result.__jule_result_arg0='\v';
			}
		}
		_match_end_1d9359c86:;
	};
	__jule_func_result.__jule_result_arg1=(__jule_func_result.__jule_result_arg0 != 0LLU);
	return __jule_func_result;;
}



inline jule::I32 _1d662c0c2_runeFromEsqSeq(jule::Str _11319_s, jule::I64* _11332_i) {
	jule::U8 _1145_b = 0;;
	jule::Bool _1148_ok = false;;
	({
		__jule_tuple_u8__jule_tuple_bool __jule_assign_result = _1d662bc81_tryBtoaCommonEsq(_11319_s.slice((*(_11332_i))));
		_1145_b = __jule_assign_result.__jule_result_arg0;
		_1148_ok = __jule_assign_result.__jule_result_arg1;
	});
	((*(_11332_i)))++;
	if (_1148_ok) {
		((*(_11332_i)))++;
		return static_cast<jule::I32>(static_cast<jule::I32>(_1145_b));;
	};
	{
		auto &_match_expr{ _11319_s[(*(_11332_i))] };
		
		if (_match_expr == 'u') {
			_case_begin_1d935ec9c:;
			{
				;
				jule::I32 _1249_r = static_cast<jule::I32>(({
					auto except = _1d4301282_ParseUint(_11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 5LL)), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:124:19"));
					(except.result);
				}));;
				(*(_11332_i))+=5LL;
				return _1249_r;;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1d935ea5a:;
			{
				;
				jule::I32 _1299_r = static_cast<jule::I32>(({
					auto except = _1d4301282_ParseUint(_11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 9LL)), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:129:19"));
					(except.result);
				}));;
				(*(_11332_i))+=9LL;
				return _1299_r;;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1d935eac1:;
			{
				;
				jule::Str _1349_seq = _11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 3LL));;
				(*(_11332_i))+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _1d4301282_ParseUint(_1349_seq, 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:136:18"));
					(except.result);
				})));;
			}
		}
		else {
			_case_begin_1d935d41b:;
			{
				;
				jule::Str _1399_seq = _11319_s.slice((*(_11332_i)), ((*(_11332_i)) + 3LL));;
				(*(_11332_i))+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _1d4301282_ParseUint(_1399_seq.slice(1LL), 8LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:141:18"));
					(except.result);
				})));;
			}
		}
		_match_end_1d935d3b6:;
	};
}



inline void _1d662c468_strEsqSeq(jule::Slice<jule::U8>* _14519_buf, jule::Str _14532_s, jule::I64* _14545_i) {
	jule::I32 _1465_r = _1d662c0c2_runeFromEsqSeq(_14532_s, _14545_i);;
	if ((_1465_r <= 255LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = (*(_14519_buf)); __jule_push_dest.push(static_cast<jule::U8>(static_cast<jule::U8>(_1465_r))); };
		return;;
	};
	jule::Str _1515_sr = jule::Str::from_rune(_1465_r);;
	((*(_14519_buf))).append(_21682838c_StrBytes(_1515_sr));;
}



inline jule::I64 _1d6755591_findFormatPrefix(jule::Slice<jule::U8>* _1122_bytes, jule::I64 _1141_i) {
	while ((_1141_i < (*(_1122_bytes)).len())) {
		{
			jule::I32 _139_r = 0;;
			jule::I64 _1312_size = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1e012a138_DecodeRune((*(_1122_bytes)).slice(_1141_i));
				_139_r = __jule_assign_result.__jule_result_arg0;
				_1312_size = __jule_assign_result.__jule_result_arg1;
			});
			if ((_139_r == '{')) {
				return _1141_i;;
			};
			_1141_i+=_1312_size;
		}
	_iter_next_1d938b290:;
	}
	_iter_end_1d938b290:;;
	return -1LL;;
}



inline jule::Slice<jule::U8> _1d6755915_getFormatRange(jule::I64* _2724_i, jule::Slice<jule::U8>* _2737_bytes) {
	jule::I64 _285_start = (*(_2724_i));;
	jule::I64 _299_braces = 0LL;;
	while (((*(_2724_i)) < (*(_2737_bytes)).len())) {
		{
			jule::I32 _319_r = 0;;
			jule::I64 _3112_size = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1e012a138_DecodeRune((*(_2737_bytes)).slice((*(_2724_i))));
				_319_r = __jule_assign_result.__jule_result_arg0;
				_3112_size = __jule_assign_result.__jule_result_arg1;
			});
			(*(_2724_i))+=_3112_size;
			{
				auto &_match_expr{ _319_r };
				
				if (_match_expr == '{') {
					_case_begin_1d938dade:;
					{
						(_299_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_1d938db55:;
					{
						(_299_braces)--;
						if ((_299_braces == 0LL)) {
							return (*(_2737_bytes)).slice(_285_start, (*(_2724_i)));;
						};
					}
				}
				_match_end_1d938d76a:;
			};
		}
	_iter_next_1d938cd41:;
	}
	_iter_end_1d938cd41:;;
	return nullptr;;
}



inline void _1d6755c01_FmtByDefault(_1e01838bc_StrBuilder* _4722_buf, jule::Any* _4740_arg) {
	if (((*(_4740_arg)) == nullptr)) {
		_1e018c6ea_WriteStr(_4722_buf, jule::Str::lit("<nil>", 5));
		return;;
	};
	{
		auto &_match_expr{ (*(_4740_arg)) };
		
		if (_match_expr.type == &__jule_any_type130) {
			_case_begin_1d9390838:;
			{
				_1e018c6ea_WriteStr(_4722_buf, _1d42eb36a_FmtFloat(static_cast<jule::F64>(static_cast<jule::F64>((*(_4740_arg)).cast<jule::F32>(&__jule_any_type130))), 'g', -1LL, 32LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1d93900da:;
			{
				_1e018c6ea_WriteStr(_4722_buf, _1d42eb36a_FmtFloat(static_cast<jule::F64>((*(_4740_arg)).cast<jule::F64>(&__jule_any_type5)), 'g', -1LL, 64LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type131) {
			_case_begin_1d9390283:;
			{
				_1e018c6ea_WriteStr(_4722_buf, _1d4312e31_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>((*(_4740_arg)).cast<jule::I8>(&__jule_any_type131))), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type132) {
			_case_begin_1d93902e9:;
			{
				_1e018c6ea_WriteStr(_4722_buf, _1d4312e31_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>((*(_4740_arg)).cast<jule::I16>(&__jule_any_type132))), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1d9390904:;
			{
				_1e018c6ea_WriteStr(_4722_buf, _1d4312e31_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>((*(_4740_arg)).cast<jule::I32>(&__jule_any_type6))), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1d939096a:;
			{
				_1e018c6ea_WriteStr(_4722_buf, _1d4312e31_FmtInt(static_cast<jule::I64>((*(_4740_arg)).cast<jule::I64>(&__jule_any_type1)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type129) {
			_case_begin_1d93909d1:;
			{
				_1e018c6ea_WriteStr(_4722_buf, _1d4312a68_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>((*(_4740_arg)).cast<jule::U8>(&__jule_any_type129))), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type133) {
			_case_begin_1d9390a47:;
			{
				_1e018c6ea_WriteStr(_4722_buf, _1d4312a68_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>((*(_4740_arg)).cast<jule::U16>(&__jule_any_type133))), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type134) {
			_case_begin_1d9390aad:;
			{
				_1e018c6ea_WriteStr(_4722_buf, _1d4312a68_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>((*(_4740_arg)).cast<jule::U32>(&__jule_any_type134))), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1d9390b24:;
			{
				_1e018c6ea_WriteStr(_4722_buf, _1d4312a68_FmtUint(static_cast<jule::U64>((*(_4740_arg)).cast<jule::U64>(&__jule_any_type2)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1d9390b8a:;
			{
				_1e018c6ea_WriteStr(_4722_buf, (*(_4740_arg)).cast<jule::Str>(&__jule_any_type4));
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1d9390c01:;
			{
				if ((*(_4740_arg)).cast<jule::Bool>(&__jule_any_type3)) {
					_1e018c6ea_WriteStr(_4722_buf, jule::Str::lit("true", 4));
				} else {
					_1e018c6ea_WriteStr(_4722_buf, jule::Str::lit("false", 5));
				};
			}
		}
		else {
			_case_begin_1d938ea9b:;
			{
				_1e018c6ea_WriteStr(_4722_buf, jule::to_str((*(_4740_arg))));
			}
		}
		_match_end_1d938dea7:;
	};
}



inline void _1d675611e_applyFmtByDefault(_1e01838bc_StrBuilder* _8627_buf, jule::I64* _8649_j, jule::Slice<jule::Any> _8657_args) {
	jule::Any _875_arg = _8657_args[(*(_8649_j))];;
	((*(_8649_j)))++;
	_1d6755c01_FmtByDefault(_8627_buf, &(_875_arg));
}



inline void _1d6756570_applyFmt(jule::Slice<jule::U8>* _9418_fmt, _1e01838bc_StrBuilder* _9436_buf, jule::I64* _9458_j, jule::Slice<jule::Any> _9466_args) {
	if (((*(_9418_fmt)).len() == 2LL)) {
		_1d675611e_applyFmtByDefault(_9436_buf, _9458_j, _9466_args);
		return;;
	};
	if (((((((*(_9418_fmt)).len() == 4LL) && ((*(_9418_fmt))[0LL] == '{')) && ((*(_9418_fmt))[1LL] == '{')) && ((*(_9418_fmt))[2LL] == '}')) && ((*(_9418_fmt))[3LL] == '}'))) {
		_1e018c6ea_WriteStr(_9436_buf, jule::Str::lit("{}", 2));
		return;;
	};
	_1e018c442_Write(_9436_buf, (*(_9418_fmt)));
}



inline jule::Slice<jule::U8> _1d67568b1_Format(jule::Str _11511_fmt, jule::Slice<jule::Any> _11521_args) {
	jule::Slice<jule::U8> _1169_fmtBytes = _21682838c_StrBytes(_11511_fmt);;
	if ((_11521_args.len() == 0LL)) {
		return _1169_fmtBytes;;
	};
	jule::I64 _1209_i = _1d6755591_findFormatPrefix(&(_1169_fmtBytes), 0LL);;
	if ((_1209_i == -1LL)) {
		return _1169_fmtBytes;;
	};
	jule::I64 _1249_j = 0LL;;
	jule::I64 _1259_last = 0LL;;
	_1e01838bc_StrBuilder _1269_buf = static__1e0183b64_New(static_cast<jule::I64>(_11511_fmt.len()));;
	for (; (_1209_i != -1LL); _1209_i=static_cast<jule::I64>(_1d6755591_findFormatPrefix(&(_1169_fmtBytes), _1209_i))) {
		{
			_1e018c442_Write(&_1269_buf, _1169_fmtBytes.slice(_1259_last, _1209_i));
			jule::Slice<jule::U8> _12913_format = _1d6755915_getFormatRange(&(_1209_i), &(_1169_fmtBytes));;
			if ((_12913_format == nullptr)) {
				goto _iter_next_1d939ca98;
			};
			_1d6756570_applyFmt(&(_12913_format), &(_1269_buf), &(_1249_j), _11521_args);
			if ((_1249_j >= _11521_args.len())) {
				_1e018c442_Write(&_1269_buf, _1169_fmtBytes.slice(_1209_i));
				_1259_last=static_cast<jule::I64>(_1169_fmtBytes.len());
				goto _iter_end_1d939ca98;
			};
			_1259_last=_1209_i;
		}
	_iter_next_1d939ca98:;
	}
	_iter_end_1d939ca98:;;
	if ((_1259_last < _1169_fmtBytes.len())) {
		_1e018c442_Write(&_1269_buf, _1169_fmtBytes.slice(_1259_last));
	};
	return _1e018d993_Buf(&_1269_buf);;
}



inline jule::Str _1d67588d5_Format(jule::Str _3111_fmt, jule::Slice<jule::Any> _3121_args) {
	return _216828920_StrFromBytes(_1d67568b1_Format(_3111_fmt, _3121_args));;
}



inline jule::Bool _1d6537450_parameterUsesGenerics(jule::Ptr<_1d65341c7_ParamIns>* _38431_p, jule::Slice<jule::Ptr<_1d65085db_GenericDecl>>* _38446_generics) {
	if (_1d6530db6_IsSelf((*((*(_38431_p))))._field_Decl.ptr())) {
		return false;;
	};
	return _1d669328c_kindUsesGenerics(&((*((*(_38431_p))))._field_Kind), _38446_generics);;
}



inline jule::Ptr<_1d667ec07_TypeSymbol> _1d6539bc2_buildType(jule::Ptr<_1d64eb3d1_TypeDecl> _9418_t) {
	if ((_9418_t == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1d667ec07_TypeSymbol>(_1d667ec07_TypeSymbol{._field_Decl=_9418_t, });;
}



inline jule::Ptr<_1d6648363_Value> _1d6539ed0_buildExpr(jule::Ptr<_1d6500715_Expr> _10318_expr) {
	if ((_10318_expr == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1d6648363_Value>(_1d6648363_Value{._field_Expr=_10318_expr, });;
}



inline jule::Ptr<_1d6676c43_TypeAlias> _1d653a299_buildTypeAlias(jule::Ptr<_1d6512ded_TypeAliasDecl> _11223_decl) {
	return jule::new_ptr<_1d6676c43_TypeAlias>(_1d6676c43_TypeAlias{._field_Scope=(*(_11223_decl))._field_Scope, ._field_Public=(*(_11223_decl))._field_Public, ._field_Binded=(*(_11223_decl))._field_Binded, ._field_Token=(*(_11223_decl))._field_Token, ._field_Ident=(*(_11223_decl))._field_Ident, ._field_Kind=_1d6539bc2_buildType((*(_11223_decl))._field_Kind), });;
}



inline jule::Ptr<_1d65193dd_Field> _1d653a5da_buildField(jule::Ptr<_1d65167a3_FieldDecl> _12319_decl) {
	return jule::new_ptr<_1d65193dd_Field>(_1d65193dd_Field{._field_Token=(*(_12319_decl))._field_Token, ._field_Public=(*(_12319_decl))._field_Public, ._field_Mutable=(*(_12319_decl))._field_Mutable, ._field_Ident=(*(_12319_decl))._field_Ident, ._field_Kind=_1d6539bc2_buildType((*(_12319_decl))._field_Kind), ._field_Default=(*(_12319_decl))._field_Default});;
}



inline jule::Slice<jule::Ptr<_1d65193dd_Field>> _1d653a8a4_buildFields(jule::Slice<jule::Ptr<_1d65167a3_FieldDecl>>* _13421_decls) {
	jule::Slice<jule::Ptr<_1d65193dd_Field>> _1359_fields = jule::Slice<jule::Ptr<_1d65193dd_Field>>::alloc(0LL, (*(_13421_decls)).len());;
	{
		auto expr = _13421_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9650554:;
		if (it != expr_end) {
			jule::Ptr<_1d65167a3_FieldDecl> _13617_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1d65193dd_Field>> &__jule_push_dest = _1359_fields; __jule_push_dest.push(_1d653a5da_buildField(_13617_decl)); };
			}
			_iter_next_1d9650554:;
			++it;
			goto _iter_begin_1d9650554;
		}
		_iter_end_1d9650554:;
	};
	return _1359_fields;;
}



inline jule::Ptr<_1d651c2d1_Struct> _1d653ab6d_buildStruct(jule::Ptr<_1d6517199_StructDecl> _14220_decl) {
	return jule::new_ptr<_1d651c2d1_Struct>(_1d651c2d1_Struct{._field_Token=(*(_14220_decl))._field_Token, ._field_Ident=(*(_14220_decl))._field_Ident, ._field_Fields=_1d653a8a4_buildFields(&((*(_14220_decl))._field_Fields)), ._field_Public=(*(_14220_decl))._field_Public, ._field_Binded=(*(_14220_decl))._field_Binded, ._field_Directives=(*(_14220_decl))._field_Directives, ._field_Generics=(*(_14220_decl))._field_Generics, });;
}



inline jule::Ptr<_1d653079a_Param> _1d653ae37_buildParam(jule::Ptr<_1d650bb3e_ParamDecl> _15419_decl) {
	return jule::new_ptr<_1d653079a_Param>(_1d653079a_Param{._field_Token=(*(_15419_decl))._field_Token, ._field_Mutable=(*(_15419_decl))._field_Mutable, ._field_Variadic=(*(_15419_decl))._field_Variadic, ._field_Reference=(*(_15419_decl))._field_Reference, ._field_Kind=_1d6539bc2_buildType((*(_15419_decl))._field_Kind), ._field_Ident=(*(_15419_decl))._field_Ident});;
}



inline jule::Slice<jule::Ptr<_1d653079a_Param>> _1d653b2cd_buildParams(jule::Slice<jule::Ptr<_1d650bb3e_ParamDecl>>* _16521_decls) {
	jule::Slice<jule::Ptr<_1d653079a_Param>> _1669_params = jule::Slice<jule::Ptr<_1d653079a_Param>>::alloc(0LL, (*(_16521_decls)).len());;
	{
		auto expr = _16521_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d96540a2:;
		if (it != expr_end) {
			jule::Ptr<_1d650bb3e_ParamDecl> _16717_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1d653079a_Param>> &__jule_push_dest = _1669_params; __jule_push_dest.push(_1d653ae37_buildParam(_16717_decl)); };
			}
			_iter_next_1d96540a2:;
			++it;
			goto _iter_begin_1d96540a2;
		}
		_iter_end_1d96540a2:;
	};
	return _1669_params;;
}



inline jule::Ptr<_1d6530019_RetType> _1d653b597_buildRetType(jule::Ptr<_1d64ee2c4_RetTypeDecl> _17321_decl) {
	if ((((*(_17321_decl))._field_Idents == nullptr) && ((*(_17321_decl))._field_Kind == nullptr))) {
		return nullptr;;
	};
	return jule::new_ptr<_1d6530019_RetType>(_1d6530019_RetType{._field_Kind=_1d6539bc2_buildType((*(_17321_decl))._field_Kind), ._field_Idents=(*(_17321_decl))._field_Idents});;
}



inline jule::Ptr<_1d653226e_Fn> _1d653b861_buildFunc(jule::Ptr<_1d650d091_FnDecl> _18318_decl) {
	return jule::new_ptr<_1d653226e_Fn>(_1d653226e_Fn{._field_Token=(*(_18318_decl))._field_Token, ._field_Global=(*(_18318_decl))._field_Global, ._field_Unsafety=(*(_18318_decl))._field_Unsafety, ._field_Public=(*(_18318_decl))._field_Public, ._field_Binded=(*(_18318_decl))._field_Binded, ._field_Statically=(*(_18318_decl))._field_Statically, ._field_Exceptional=(*(_18318_decl))._field_Exceptional, ._field_Ident=(*(_18318_decl))._field_Ident, ._field_Directives=(*(_18318_decl))._field_Directives, ._field_Scope=(*(_18318_decl))._field_Scope, ._field_Generics=(*(_18318_decl))._field_Generics, ._field_Result=_1d653b597_buildRetType((*(_18318_decl))._field_Result), ._field_Params=_1d653b2cd_buildParams(&((*(_18318_decl))._field_Params)), });;
}



inline jule::Slice<jule::Ptr<_1d653226e_Fn>> _1d653bb2a_buildMethods(jule::Slice<jule::Ptr<_1d650d091_FnDecl>>* _20122_decls) {
	jule::Slice<jule::Ptr<_1d653226e_Fn>> _2029_methods = jule::Slice<jule::Ptr<_1d653226e_Fn>>::alloc(0LL, (*(_20122_decls)).len());;
	{
		auto expr = _20122_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9659717:;
		if (it != expr_end) {
			jule::Ptr<_1d650d091_FnDecl> _20317_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1d653226e_Fn>> &__jule_push_dest = _2029_methods; __jule_push_dest.push(_1d653b861_buildFunc(_20317_decl)); };
			}
			_iter_next_1d9659717:;
			++it;
			goto _iter_begin_1d9659717;
		}
		_iter_end_1d9659717:;
	};
	return _2029_methods;;
}



inline jule::Slice<jule::Ptr<_1d667ec07_TypeSymbol>> _1d653bde4_buildTraitInherits(jule::Slice<jule::Ptr<_1d64eb3d1_TypeDecl>>* _20928_inherits) {
	jule::Slice<jule::Ptr<_1d667ec07_TypeSymbol>> _2109_symbols = jule::Slice<jule::Ptr<_1d667ec07_TypeSymbol>>::alloc(0LL, (*(_20928_inherits)).len());;
	{
		auto expr = _20928_inherits;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d965db17:;
		if (it != expr_end) {
			jule::Ptr<_1d64eb3d1_TypeDecl> _21117_it = *it;
			{
				{ jule::Slice<jule::Ptr<_1d667ec07_TypeSymbol>> &__jule_push_dest = _2109_symbols; __jule_push_dest.push(_1d6539bc2_buildType(_21117_it)); };
			}
			_iter_next_1d965db17:;
			++it;
			goto _iter_begin_1d965db17;
		}
		_iter_end_1d965db17:;
	};
	return _2109_symbols;;
}



inline jule::Ptr<_1d654554b_Trait> _1d653c1ad_buildTrait(jule::Ptr<_1d65178d6_TraitDecl> _21719_decl) {
	return jule::new_ptr<_1d654554b_Trait>(_1d654554b_Trait{._field_Token=(*(_21719_decl))._field_Token, ._field_Ident=(*(_21719_decl))._field_Ident, ._field_Public=(*(_21719_decl))._field_Public, ._field_Inherits=_1d653bde4_buildTraitInherits(&((*(_21719_decl))._field_Inherits)), ._field_Methods=_1d653bb2a_buildMethods(&((*(_21719_decl))._field_Methods)), });;
}



inline jule::Ptr<_1d65471da_EnumItem> _1d653c477_buildEnumItem(jule::Ptr<_1d651498d_EnumItemDecl> _22722_decl) {
	return jule::new_ptr<_1d65471da_EnumItem>(_1d65471da_EnumItem{._field_Token=(*(_22722_decl))._field_Token, ._field_Ident=(*(_22722_decl))._field_Ident, ._field_Value=_1d6539ed0_buildExpr((*(_22722_decl))._field_Expr)});;
}



inline jule::Slice<jule::Ptr<_1d65471da_EnumItem>> _1d653c741_buildEnumItems(jule::Slice<jule::Ptr<_1d651498d_EnumItemDecl>>* _23524_decls) {
	jule::Slice<jule::Ptr<_1d65471da_EnumItem>> _2369_items = jule::Slice<jule::Ptr<_1d65471da_EnumItem>>::alloc(0LL, (*(_23524_decls)).len());;
	{
		auto expr = _23524_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9661c91:;
		if (it != expr_end) {
			jule::Ptr<_1d651498d_EnumItemDecl> _23717_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1d65471da_EnumItem>> &__jule_push_dest = _2369_items; __jule_push_dest.push(_1d653c477_buildEnumItem(_23717_decl)); };
			}
			_iter_next_1d9661c91:;
			++it;
			goto _iter_begin_1d9661c91;
		}
		_iter_end_1d9661c91:;
	};
	return _2369_items;;
}



inline jule::Ptr<_1d6547c57_Enum> _1d653cbb4_buildEnum(jule::Ptr<_1d651554e_EnumDecl> _24318_decl) {
	return jule::new_ptr<_1d6547c57_Enum>(_1d6547c57_Enum{._field_Token=(*(_24318_decl))._field_Token, ._field_Public=(*(_24318_decl))._field_Public, ._field_Ident=(*(_24318_decl))._field_Ident, ._field_Kind=_1d6539bc2_buildType((*(_24318_decl))._field_Kind), ._field_Items=_1d653c741_buildEnumItems(&((*(_24318_decl))._field_Items))});;
}



inline jule::Ptr<_1d6548d8a_TypeEnumItem> _1d653ce7d_buildTypeEnumItem(jule::Ptr<_1d6515d79_TypeEnumItemDecl> _25326_decl) {
	return jule::new_ptr<_1d6548d8a_TypeEnumItem>(_1d6548d8a_TypeEnumItem{._field_Token=(*(_25326_decl))._field_Token, ._field_Ident=(*(_25326_decl))._field_Ident, ._field_Kind=_1d6539bc2_buildType((*(_25326_decl))._field_Kind)});;
}



inline jule::Slice<jule::Ptr<_1d6548d8a_TypeEnumItem>> _1d653d247_buildTypeEnumItems(jule::Slice<jule::Ptr<_1d6515d79_TypeEnumItemDecl>>* _26128_decls) {
	jule::Slice<jule::Ptr<_1d6548d8a_TypeEnumItem>> _2629_items = jule::Slice<jule::Ptr<_1d6548d8a_TypeEnumItem>>::alloc(0LL, (*(_26128_decls)).len());;
	{
		auto expr = _26128_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d966505d:;
		if (it != expr_end) {
			jule::Ptr<_1d6515d79_TypeEnumItemDecl> _26317_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1d6548d8a_TypeEnumItem>> &__jule_push_dest = _2629_items; __jule_push_dest.push(_1d653ce7d_buildTypeEnumItem(_26317_decl)); };
			}
			_iter_next_1d966505d:;
			++it;
			goto _iter_begin_1d966505d;
		}
		_iter_end_1d966505d:;
	};
	return _2629_items;;
}



inline jule::Ptr<_1d6549462_TypeEnum> _1d653d511_buildTypeEnum(jule::Ptr<_1d65164d9_TypeEnumDecl> _26922_decl) {
	return jule::new_ptr<_1d6549462_TypeEnum>(_1d6549462_TypeEnum{._field_Token=(*(_26922_decl))._field_Token, ._field_Public=(*(_26922_decl))._field_Public, ._field_Ident=(*(_26922_decl))._field_Ident, ._field_Items=_1d653d247_buildTypeEnumItems(&((*(_26922_decl))._field_Items))});;
}



inline jule::Ptr<_1d65d9018_Var> _1d653d7ca_buildVar(jule::Ptr<_1d650e24b_VarDecl> _27817_decl) {
	return jule::new_ptr<_1d65d9018_Var>(_1d65d9018_Var{._field_Token=(*(_27817_decl))._field_Token, ._field_Ident=(*(_27817_decl))._field_Ident, ._field_Binded=(*(_27817_decl))._field_Binded, ._field_Constant=(*(_27817_decl))._field_Constant, ._field_Mutable=(*(_27817_decl))._field_Mutable, ._field_Public=(*(_27817_decl))._field_Public, ._field_Statically=(*(_27817_decl))._field_Statically, ._field_Reference=(*(_27817_decl))._field_Reference, ._field_Kind=_1d6539bc2_buildType((*(_27817_decl))._field_Kind), ._field_Value=_1d6539ed0_buildExpr((*(_27817_decl))._field_Expr), ._field_Refers=static__1d653863d_new(), ._field_Directives=(*(_27817_decl))._field_Directives, });;
}



inline jule::Slice<jule::Ptr<_1d65d9018_Var>> _1d653da94_buildVars(jule::Slice<jule::Ptr<_1d650e24b_VarDecl>> _29518_decls) {
	jule::Slice<jule::Ptr<_1d65d9018_Var>> _2969_vars = jule::Slice<jule::Ptr<_1d65d9018_Var>>::alloc(0LL, _29518_decls.len());;
	{
		auto expr = &(_29518_decls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9666b31:;
		if (it != expr_end) {
			jule::Ptr<_1d650e24b_VarDecl> _29717_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1d65d9018_Var>> &__jule_push_dest = _2969_vars; __jule_push_dest.push(_1d653d7ca_buildVar(_29717_decl)); };
			}
			_iter_next_1d9666b31:;
			++it;
			goto _iter_begin_1d9666b31;
		}
		_iter_end_1d9666b31:;
	};
	return _2969_vars;;
}



inline jule::Ptr<_1d656dbc3_Impl> _1d653dd5d_buildImpl(jule::Ptr<_1d6518046_Impl> _30318_decl) {
	return jule::new_ptr<_1d656dbc3_Impl>(_1d656dbc3_Impl{._field_Base=(*(_30318_decl))._field_Base, ._field_Dest=(*(_30318_decl))._field_Dest, ._field_Methods=_1d653bb2a_buildMethods(&((*(_30318_decl))._field_Methods)), ._field_Statics=_1d653da94_buildVars((*(_30318_decl))._field_Statics)});;
}



inline jule::Ptr<_1d664721e_Data> _1d656921d_buildAsComptimeMethodData(jule::Ptr<_1d6535173_FnIns>* _142135_f) {
	return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=jule::new_ptr<_1d6677a35_TypeKind>(_1d6677a35_TypeKind{._field_Kind=jule::Trait<_1d667757e_Kind>((*(_142135_f)), 1)}), });;
}



inline jule::Ptr<_1d659590e_ImportInfo> _1d656952b_findComptimePackage(jule::Ptr<_1d65b5c81_Sema>* _142929_s) {
	return _1d65b6226_SelectPackage((*(_142929_s)).ptr(), jule::Fn<jule::Bool(jule::Ptr<_1d659590e_ImportInfo>)>([=](jule::Ptr<_1d659590e_ImportInfo> _143028_pkg) mutable -> jule::Bool {
		return (*(_143028_pkg))._field_LinkPath.equal("std::comptime", 13);;
	}));;
}



inline jule::Ptr<_1d664721e_Data> _1d65698a0_buildComptimeTypeInfoData(jule::Ptr<_1d65b5c81_Sema>* _143535_s, jule::Ptr<_1d6677a35_TypeKind>* _143550_t) {
	return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=jule::new_ptr<_1d6677a35_TypeKind>(_1d6677a35_TypeKind{._field_Kind=jule::Trait<_1d667757e_Kind>(_1d65b55bb_pushComptimeTypeInfo((*((*(_143535_s))))._field_meta.ptr(), _143550_t), 15)}), });;
}



inline jule::Ptr<_1d664721e_Data> _1d6569ad1_buildComptimeValue(jule::Ptr<_1d664721e_Data>* _144328_d) {
	return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=jule::new_ptr<_1d6677a35_TypeKind>(_1d6677a35_TypeKind{._field_Kind=jule::Trait<_1d667757e_Kind>(jule::new_ptr<_1d6563514_comptimeValue>(_1d6563514_comptimeValue{._field_data=(*(_144328_d))}), 16)}), });;
}



inline jule::Str _1d656cb6c_toStrConstraints(jule::Ptr<_1d667614e_InsGeneric> _14321_g) {
	_1e01838bc_StrBuilder _1449_sb = static__1e0183b64_New(128LL);;
	{
		auto expr = &((*(_14321_g))._field_Constraint);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9832978:;
		if (it != expr_end) {
			jule::I64 _1459_i = it - expr->begin();
			jule::Ptr<_1d6677a35_TypeKind> *_14512_c = it;
			{
				_1e018c6ea_WriteStr(&_1449_sb, _1d6677ded_Str((*(_14512_c)).ptr()));
				if ((((*(_14321_g))._field_Constraint.len() - _1459_i) > 1LL)) {
					_1e018c6ea_WriteStr(&_1449_sb, jule::Str::lit(" | ", 3));
				};
			}
			_iter_next_1d9832978:;
			++it;
			_1459_i++;
			goto _iter_begin_1d9832978;
		}
		_iter_end_1d9832978:;
	};
	return _1e018cee2_Str(&_1449_sb);;
}



inline jule::Bool _1d656d035_matchConstraint(jule::Str* _15421_c, jule::Ptr<_1d6677a35_TypeKind>* _15434_g) {
	{
		auto &_match_expr{ (*(_15421_c)) };
		
		if (_match_expr == jule::Str::lit("signed", 6)) {
			_case_begin_1d9833209:;
			{
				jule::Ptr<_1d668060e_Prim> _1579_prim = _1d667a186_Prim((*(_15434_g)).ptr());;
				if ((_1579_prim == nullptr)) {
					return false;;
				};
				return _1d4320ee9_IsSigNum((*(_1579_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str::lit("unsigned", 8)) {
			_case_begin_1d9834859:;
			{
				jule::Ptr<_1d668060e_Prim> _1639_prim = _1d667a186_Prim((*(_15434_g)).ptr());;
				if ((_1639_prim == nullptr)) {
					return false;;
				};
				return _1d432035b_IsUnsigInt((*(_1639_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str::lit("float", 5)) {
			_case_begin_1d98348d1:;
			{
				jule::Ptr<_1d668060e_Prim> _1699_prim = _1d667a186_Prim((*(_15434_g)).ptr());;
				if ((_1699_prim == nullptr)) {
					return false;;
				};
				return _1d4320966_IsFloat((*(_1699_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str::lit("numeric", 7)) {
			_case_begin_1d9834b78:;
			{
				jule::Ptr<_1d668060e_Prim> _1759_prim = _1d667a186_Prim((*(_15434_g)).ptr());;
				if ((_1759_prim == nullptr)) {
					return false;;
				};
				return _1d4320c30_IsNum((*(_1759_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str::lit("mutable", 7)) {
			_case_begin_1d9834bde:;
			{
				return _1d66793b6_Mutable((*(_15434_g)).ptr());;
			}
		}
		else if (_match_expr == jule::Str::lit("immutable", 9)) {
			_case_begin_1d9834c55:;
			{
				return (!(_1d66793b6_Mutable((*(_15434_g)).ptr())));;
			}
		}
		else if (_match_expr == jule::Str::lit("comparable", 10)) {
			_case_begin_1d9834cbb:;
			{
				return _1d6679130_Comparable((*(_15434_g)).ptr());;
			}
		}
		else if (_match_expr == jule::Str::lit("ordered", 7)) {
			_case_begin_1d9834dcb:;
			{
				return _1d667964c_Ordered((*(_15434_g)).ptr());;
			}
		}
		else {
			_case_begin_1d9834749:;
			{
				return false;;
			}
		}
		_match_end_1d98346e4:;
	};
}



inline jule::Bool _1d656d2ee_isBuiltinConstraint(jule::Str* _19325_ident) {
	{
		auto expr = &(_1d656b022_builtinConstraints);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d983a772:;
		if (it != expr_end) {
			jule::Str *_19412_bc = it;
			{
				if (((*(_19325_ident)) == (*(_19412_bc)))) {
					return true;;
				};
			}
			_iter_next_1d983a772:;
			++it;
			goto _iter_begin_1d983a772;
		}
		_iter_end_1d983a772:;
	};
	return false;;
}



inline jule::Ptr<_1d657b42d_scopeChecker> _1d6570e06_newScopeCheckerBase(jule::Ptr<_1d65b5c81_Sema>* _5829_s, jule::Ptr<_1d6535173_FnIns> _5843_owner) {
	return jule::new_ptr<_1d657b42d_scopeChecker>(_1d657b42d_scopeChecker{._field_s=(*(_5829_s)), ._field_owner=_5843_owner, ._field_table=jule::new_ptr<_1d6641d73_SymbolTable>(), });;
}



inline jule::Ptr<_1d657b42d_scopeChecker> _1d65712be_newScopeChecker(jule::Ptr<_1d65b5c81_Sema>* _6625_s, jule::Ptr<_1d6535173_FnIns> _6639_owner) {
	jule::Ptr<_1d657b42d_scopeChecker> _679_base = _1d6570e06_newScopeCheckerBase(_6625_s, _6639_owner);;
	(*(_679_base))._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1d6579e87_scopeLabel>>>(nullptr);
	(*(_679_base))._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1d657a51a_scopeGoto>>>(nullptr);
	return _679_base;;
}



inline jule::Ptr<_1d6579e87_scopeLabel> _1d6571643_findLabelParent(jule::Str* _7621_ident, jule::Ptr<_1d657b42d_scopeChecker> _7637_scope) {
	jule::Ptr<_1d6579e87_scopeLabel> _779_label = _1d657ee37_findLabelScope(_7637_scope, _7621_ident);;
	while ((_779_label == nullptr)) {
		{
			if ((((*(_7637_scope))._field_parent == nullptr) || ((*(_7637_scope))._field_owner != nullptr))) {
				return nullptr;;
			};
			_7637_scope=(*(_7637_scope))._field_parent;
			_779_label=_1d657ee37_findLabelScope(_7637_scope, _7621_ident);
		}
	_iter_next_1d9854967:;
	}
	_iter_end_1d9854967:;;
	return _779_label;;
}



inline jule::Bool _1d6571a0b_modelIsGotoScope(jule::Any _9021_Model, jule::Ptr<_1d6574129_Scope>* _9034_sc) {
	{
		auto &_match_expr{ _9021_Model };
		
		if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1d9856392:;
			{
				jule::Ptr<_1d65264d8_FnCallExprModel> _939_fcem = _9021_Model.cast_ptr<_1d65264d8_FnCallExprModel>(&__jule_any_type34);;
				if (((*(_939_fcem))._field_Except == (*(_9034_sc)))) {
					return true;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1d9856419:;
			{
				jule::Ptr<_1d664721e_Data> _989_d = _9021_Model.cast_ptr<_1d664721e_Data>(&__jule_any_type24);;
				return _1d6571a0b_modelIsGotoScope((*(_989_d))._field_Model, _9034_sc);;
			}
		}
		_match_end_1d9854dc9:;
	};
	return false;;
}



inline jule::Bool _1d6571d80_stmtIsGotoScope(jule::Any* _10421_stmt, jule::Ptr<_1d6574129_Scope>* _10434_sc) {
	{
		auto &_match_expr{ (*(_10421_stmt)) };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1d985844e:;
			{
				return ((*(_10421_stmt)).cast_ptr<_1d6574129_Scope>(&__jule_any_type22) == (*(_10434_sc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1d98584c6:;
			{
				return ((*((*(_10421_stmt)).cast_ptr<_1d657505e_InfIter>(&__jule_any_type36)))._field_Scope == (*(_10434_sc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1d985854d:;
			{
				jule::Ptr<_1d6575e61_RangeIter> _1119_it = (*(_10421_stmt)).cast_ptr<_1d6575e61_RangeIter>(&__jule_any_type40);;
				return (((*(_1119_it))._field_Scope == (*(_10434_sc))) || _1d6571a0b_modelIsGotoScope((*((*(_1119_it))._field_Expr))._field_Model, _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1d985877e:;
			{
				jule::Ptr<_1d6575515_WhileIter> _1149_it = (*(_10421_stmt)).cast_ptr<_1d6575515_WhileIter>(&__jule_any_type38);;
				return ((((*(_1149_it))._field_Scope == (*(_10434_sc))) || _1d6571a0b_modelIsGotoScope((*(_1149_it))._field_Expr, _10434_sc)) || _1d6571a0b_modelIsGotoScope((*(_1149_it))._field_Next, _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1d98587e5:;
			{
				jule::Ptr<_1d6578260_Match> _1199_m = (*(_10421_stmt)).cast_ptr<_1d6578260_Match>(&__jule_any_type47);;
				{
					auto expr = &((*(_1199_m))._field_Cases);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d985c970:;
					if (it != expr_end) {
						jule::Ptr<_1d6578d98_Case> *_12016_c = it;
						{
							if (((*((*(_12016_c))))._field_Scope == (*(_10434_sc)))) {
								return true;;
							};
							{
								auto expr = &((*((*(_12016_c))))._field_Exprs);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1d985d8b6:;
								if (it != expr_end) {
									jule::Ptr<_1d664721e_Data> *_12420_expr = it;
									{
										if (_1d6571a0b_modelIsGotoScope((*((*(_12420_expr))))._field_Model, _10434_sc)) {
											return true;;
										};
									}
									_iter_next_1d985d8b6:;
									++it;
									goto _iter_begin_1d985d8b6;
								}
								_iter_end_1d985d8b6:;
							};
						}
						_iter_next_1d985c970:;
						++it;
						goto _iter_begin_1d985c970;
					}
					_iter_end_1d985c970:;
				};
				return (((*(_1199_m))._field_Default != nullptr) && ((*((*(_1199_m))._field_Default))._field_Scope == (*(_10434_sc))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1d985885b:;
			{
				jule::Ptr<_1d6574c62_Conditional> _1329_c = (*(_10421_stmt)).cast_ptr<_1d6574c62_Conditional>(&__jule_any_type35);;
				{
					auto expr = &((*(_1329_c))._field_Elifs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d98603e0:;
					if (it != expr_end) {
						jule::Ptr<_1d6574547_If> *_13316_elif = it;
						{
							if ((((*((*(_13316_elif))))._field_Scope == (*(_10434_sc))) || _1d6571a0b_modelIsGotoScope((*((*(_13316_elif))))._field_Expr, _10434_sc))) {
								return true;;
							};
						}
						_iter_next_1d98603e0:;
						++it;
						goto _iter_begin_1d98603e0;
					}
					_iter_end_1d98603e0:;
				};
				return (((*(_1329_c))._field_Default != nullptr) && ((*((*(_1329_c))._field_Default))._field_Scope == (*(_10434_sc))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1d98588c2:;
			{
				jule::Ptr<_1d664721e_Data> _1409_d = (*(_10421_stmt)).cast_ptr<_1d664721e_Data>(&__jule_any_type24);;
				return _1d6571a0b_modelIsGotoScope((*(_1409_d))._field_Model, _10434_sc);;
			}
		}
		else {
			_case_begin_1d9856848:;
			{
				return false;;
			}
		}
		_match_end_1d9858064:;
	};
}



inline jule::I64 _1d6572204_countMatchType(jule::Ptr<_1d6578260_Match>* _14720_m, jule::Ptr<_1d6677a35_TypeKind>* _14732_t) {
	jule::I64 _1489_n = 0LL;;
	jule::Str _1495_kind = _1d6677ded_Str((*(_14732_t)).ptr());;
	_julec_label_1d9862e2b:;
	{
		auto expr = &((*((*(_14720_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d98636ac:;
		if (it != expr_end) {
			jule::Ptr<_1d6578d98_Case> *_15112_c = it;
			{
				if (((*(_15112_c)) == nullptr)) {
					goto _iter_next_1d98636ac;
				};
				{
					auto expr = &((*((*(_15112_c))))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d98643e4:;
					if (it != expr_end) {
						jule::Ptr<_1d664721e_Data> *_15616_expr = it;
						{
							if (((*(_15616_expr)) == nullptr)) {
								goto _iter_end_1d98636ac;
							};
							if ((_1495_kind == _1d6677ded_Str((*((*(_15616_expr))))._field_Model.cast_ptr<_1d6677a35_TypeKind>(&__jule_any_type83).ptr()))) {
								(_1489_n)++;
							};
						}
						_iter_next_1d98643e4:;
						++it;
						goto _iter_begin_1d98643e4;
					}
					_iter_end_1d98643e4:;
				};
			}
			_iter_next_1d98636ac:;
			++it;
			goto _iter_begin_1d98636ac;
		}
		_iter_end_1d98636ac:;
	};
	return _1489_n;;
}



inline jule::Slice<jule::Ptr<_1d664721e_Data>> _1d65724bd_getDatasFromTupleData(jule::Ptr<_1d664721e_Data>* _17131_d) {
	if ((_1d667beac_Tup((*((*(_17131_d))))._field_Kind.ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*((*(_17131_d))))._field_Model };
			
			if (_match_expr.type == &__jule_any_type81) {
				_case_begin_1d986889e:;
				{
					return (*((*((*(_17131_d))))._field_Model.cast_ptr<_1d6529c06_TupleExprModel>(&__jule_any_type81)))._field_Datas;;
				}
			}
			else {
				_case_begin_1d9865deb:;
				{
					jule::Ptr<_1d6685702_Tuple> _17717_t = _1d667beac_Tup((*((*(_17131_d))))._field_Kind.ptr());;
					jule::Slice<jule::Ptr<_1d664721e_Data>> _17817_r = jule::Slice<jule::Ptr<_1d664721e_Data>>::alloc(0LL, (*(_17717_t))._field_Types.len());;
					{
						auto expr = &((*(_17717_t))._field_Types);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1d98676e4:;
						if (it != expr_end) {
							jule::Ptr<_1d6677a35_TypeKind> _17925_kind = *it;
							{
								{ jule::Slice<jule::Ptr<_1d664721e_Data>> &__jule_push_dest = _17817_r; __jule_push_dest.push(jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=_17925_kind, ._field_Mutable=true, })); };
							}
							_iter_next_1d98676e4:;
							++it;
							goto _iter_begin_1d98676e4;
						}
						_iter_end_1d98676e4:;
					};
					return _17817_r;;
				}
			}
			_match_end_1d9865d96:;
		};
	} else {
		return jule::Slice<jule::Ptr<_1d664721e_Data>>::make({(*(_17131_d))});;
	};
}



inline jule::Bool _1d6572d81_checkMut(jule::Ptr<_1d65b5c81_Sema>* _20618_s, jule::Ptr<_1d664721e_Data>* _20629_left, jule::Ptr<_1d664721e_Data> _20646_right, jule::Ptr<_1d64d5cd3_Token> _20660_op) {
	jule::Bool __jule_func_result = false;
	{
		
		if ((!((*((*(_20629_left))))._field_Mutable))) {
			_case_begin_1d986ba06:;
			{
				_1d65b88bb_pushErr((*(_20618_s)).ptr(), _20660_op, jule::Str::lit("cannot assign to immutable storage", 34), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((((_20646_right != nullptr) && (!((*(_20646_right))._field_Mutable))) && _1d66793b6_Mutable((*(_20646_right))._field_Kind.ptr()))) {
			_case_begin_1d986ba7d:;
			{
				if ((((*(_20660_op))._field_Id != static_cast<jule::U64>(71LLU)) && (_1d667b709_Struct((*(_20646_right))._field_Kind.ptr()) != nullptr))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_1d65b88bb_pushErr((*(_20618_s)).ptr(), _20660_op, jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_1d6677ded_Str((*(_20646_right))._field_Kind.ptr()), &__jule_any_type4)}));
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1d986b94b:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1d986b8a2:;
	};
}



inline jule::Bool _1d657336a_checkAssign(jule::Ptr<_1d65b5c81_Sema>* _22521_s, jule::Ptr<_1d664721e_Data>* _22536_left, jule::Ptr<_1d664721e_Data> _22553_right, jule::Ptr<_1d64d5cd3_Token> _22567_op) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1d6535173_FnIns> _2265_f = _1d667b473_Fn((*((*(_22536_left))))._field_Kind.ptr());;
	if ((((_2265_f != nullptr) && ((*(_2265_f))._field_Decl != nullptr)) && (*((*(_2265_f))._field_Decl))._field_Global)) {
		_1d65b88bb_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str::lit("type is not support assignment", 30), jule::Slice<jule::Any>());
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		
		if (_1d6647ae3_IsConst((*(_22536_left)).ptr())) {
			_case_begin_1d987216b:;
			{
				_1d65b88bb_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str::lit("constants is can't assign", 25), jule::Slice<jule::Any>());
				_1d65b8c2e_pushSuggestion((*(_22521_s)).ptr(), jule::Str::lit("remove constant qualifer if you need to assign", 46), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!((*((*(_22536_left))))._field_Lvalue))) {
			_case_begin_1d98721e3:;
			{
				_1d65b88bb_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str::lit("invalid expression: expected lvalue for assignment", 50), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!(_1d6572d81_checkMut(_22521_s, _22536_left, _22553_right, _22567_op)))) {
			_case_begin_1d987226a:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1d98720b1:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1d9871ea1:;
	};
}



inline jule::Bool _1d6573634_isValidAstStForNextSt(jule::Any* _24731_n) {
	{
		auto &_match_expr{ (*(_24731_n)) };
		
		if (_match_expr.type == &__jule_any_type58) {
			_case_begin_1d98724ac:;
			{
				return (!((*((*(_24731_n)).cast_ptr<_1d6509d7e_AssignSt>(&__jule_any_type58)))._field_Declarative));;
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1d987468a:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1d9872a0c:;
			{
				return false;;
			}
		}
		_match_end_1d986d70b:;
	};
}



inline jule::Bool _1d65738ed_isValidStForNextSt(jule::Any* _25824_st) {
	{
		auto &_match_expr{ (*(_25824_st)) };
		
		if (_match_expr.type == &__jule_any_type43 || _match_expr.type == &__jule_any_type44 || _match_expr.type == &__jule_any_type46) {
			_case_begin_1d9874ba7:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1d98754d2:;
			{
				{
					auto &_match_expr{ (*((*(_25824_st)).cast_ptr<_1d664721e_Data>(&__jule_any_type24)))._field_Model };
					
					if (_match_expr.type == &__jule_any_type34) {
						_case_begin_1d987623b:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1d987668c:;
						{
							return false;;
						}
					}
					_match_end_1d9876637:;
				};
			}
		}
		else {
			_case_begin_1d987527e:;
			{
				return false;;
			}
		}
		_match_end_1d9875229:;
	};
}



inline jule::Bool _1d6573bb7_stmtIsDef(jule::Any* _27615_st) {
	{
		auto &_match_expr{ (*(_27615_st)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1d987604e:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1d9875bdb:;
			{
				return false;;
			}
		}
		_match_end_1d98755e2:;
	};
}



inline jule::U64 _1d658d242_removeEqFromOp(jule::U64 _216719_op) {
	{
		auto &_match_expr{ _216719_op };
		
		if (_match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1d9876857:;
			{
				return static_cast<jule::U64>(60LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(41LLU)) {
			_case_begin_1d987789c:;
			{
				return static_cast<jule::U64>(61LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(42LLU)) {
			_case_begin_1d9877913:;
			{
				return static_cast<jule::U64>(62LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1d9877a34:;
			{
				return static_cast<jule::U64>(63LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1d9877a9a:;
			{
				return static_cast<jule::U64>(64LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(45LLU)) {
			_case_begin_1d9877b11:;
			{
				return static_cast<jule::U64>(56LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(46LLU)) {
			_case_begin_1d9877b88:;
			{
				return static_cast<jule::U64>(57LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(47LLU)) {
			_case_begin_1d9877c10:;
			{
				return static_cast<jule::U64>(67LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(48LLU)) {
			_case_begin_1d9877ca9:;
			{
				return static_cast<jule::U64>(65LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(49LLU)) {
			_case_begin_1d9877d20:;
			{
				return static_cast<jule::U64>(66LLU);;
			}
		}
		else {
			_case_begin_1d98775b1:;
			{
				return _216719_op;;
			}
		}
		_match_end_1d9877517:;
	};
}



inline void _1d658d473_makeComptimeRange(jule::Ptr<_1d664721e_Data>* _219627_d) {
	{
		
		if ((_1d667c4c9_comptimeStructFields((*((*(_219627_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d987ab03:;
			{
				(*((*(_219627_d))))._field_Kind=jule::new_ptr<_1d6677a35_TypeKind>(_1d6677a35_TypeKind{._field_Kind=jule::Trait<_1d667757e_Kind>(jule::new_ptr<_1d654c5b9_comptimeRange>(_1d654c5b9_comptimeRange{._field_kind=jule::Trait<_1d654c399_comptimeRangeKind>(_1d667c4c9_comptimeStructFields((*((*(_219627_d))))._field_Kind.ptr()), 0)}), 5)});
			}
		}
		else if ((_1d667c9e6_comptimeEnumFields((*((*(_219627_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d987ab69:;
			{
				(*((*(_219627_d))))._field_Kind=jule::new_ptr<_1d6677a35_TypeKind>(_1d6677a35_TypeKind{._field_Kind=jule::Trait<_1d667757e_Kind>(jule::new_ptr<_1d654c5b9_comptimeRange>(_1d654c5b9_comptimeRange{._field_kind=jule::Trait<_1d654c399_comptimeRangeKind>(_1d667c9e6_comptimeEnumFields((*((*(_219627_d))))._field_Kind.ptr()), 2)}), 5)});
			}
		}
		else if ((_1d667d7b6_comptimeTypeInfos((*((*(_219627_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d987abd0:;
			{
				(*((*(_219627_d))))._field_Kind=jule::new_ptr<_1d6677a35_TypeKind>(_1d6677a35_TypeKind{._field_Kind=jule::Trait<_1d667757e_Kind>(jule::new_ptr<_1d654c5b9_comptimeRange>(_1d654c5b9_comptimeRange{._field_kind=jule::Trait<_1d654c399_comptimeRangeKind>(_1d667d7b6_comptimeTypeInfos((*((*(_219627_d))))._field_Kind.ptr()), 4)}), 5)});
			}
		}
		else if ((_1d667d013_comptimeParams((*((*(_219627_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d987ac46:;
			{
				(*((*(_219627_d))))._field_Kind=jule::new_ptr<_1d6677a35_TypeKind>(_1d6677a35_TypeKind{._field_Kind=jule::Trait<_1d667757e_Kind>(jule::new_ptr<_1d654c5b9_comptimeRange>(_1d654c5b9_comptimeRange{._field_kind=jule::Trait<_1d654c399_comptimeRangeKind>(_1d667d013_comptimeParams((*((*(_219627_d))))._field_Kind.ptr()), 3)}), 5)});
			}
		}
		else if ((_1d667dcd3_comptimeStatics((*((*(_219627_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d987b571:;
			{
				(*((*(_219627_d))))._field_Kind=jule::new_ptr<_1d6677a35_TypeKind>(_1d6677a35_TypeKind{._field_Kind=jule::Trait<_1d667757e_Kind>(jule::new_ptr<_1d654c5b9_comptimeRange>(_1d654c5b9_comptimeRange{._field_kind=jule::Trait<_1d654c399_comptimeRangeKind>(_1d667dcd3_comptimeStatics((*((*(_219627_d))))._field_Kind.ptr()), 1)}), 5)});
			}
		}
		else if ((_1d667e81c_comptimeFiles((*((*(_219627_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d987b5d7:;
			{
				(*((*(_219627_d))))._field_Kind=jule::new_ptr<_1d6677a35_TypeKind>(_1d6677a35_TypeKind{._field_Kind=jule::Trait<_1d667757e_Kind>(jule::new_ptr<_1d654c5b9_comptimeRange>(_1d654c5b9_comptimeRange{._field_kind=jule::Trait<_1d654c399_comptimeRangeKind>(_1d667e81c_comptimeFiles((*((*(_219627_d))))._field_Kind.ptr()), 5)}), 5)});
			}
		}
		else {
			_case_begin_1d987a3d8:;
			{
				(*((*(_219627_d))))._field_Decl=true;
			}
		}
		_match_end_1d987a84a:;
	};
}



inline jule::Bool _1d658d96d_canComptimeMatch(jule::Ptr<_1d664721e_Data>* _221726_d) {
	if ((!(_1d6640e71_isGoodValueToInfer(_221726_d)))) {
		return false;;
	};
	return (_1d6647ae3_IsConst((*(_221726_d)).ptr()) || (_1d667da4c_comptimeTypeInfo((*((*(_221726_d))))._field_Kind.ptr()) != nullptr));;
}



inline jule::Ptr<_1d65d9018_Var> _1d6592de5_findVarInPackage(jule::Slice<jule::Ptr<_1d6641d73_SymbolTable>>* _4626_files, jule::Str* _4650_ident, jule::Bool _4662_binded) {
	{
		auto expr = _4626_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9a51966:;
		if (it != expr_end) {
			jule::Ptr<_1d6641d73_SymbolTable> _4717_f = *it;
			{
				jule::Ptr<_1d65d9018_Var> _4813_v = _1d6642758_FindVar(_4717_f.ptr(), (*(_4650_ident)), _4662_binded);;
				if ((_4813_v != nullptr)) {
					return _4813_v;;
				};
			}
			_iter_next_1d9a51966:;
			++it;
			goto _iter_begin_1d9a51966;
		}
		_iter_end_1d9a51966:;
	};
	return nullptr;;
}



inline jule::Ptr<_1d6676c43_TypeAlias> _1d6593368_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1d6641d73_SymbolTable>>* _5832_files, jule::Str* _5856_ident, jule::Bool _5868_binded) {
	{
		auto expr = _5832_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9a52ec8:;
		if (it != expr_end) {
			jule::Ptr<_1d6641d73_SymbolTable> _5917_f = *it;
			{
				jule::Ptr<_1d6676c43_TypeAlias> _6013_ta = _1d6642b54_FindTypeAlias(_5917_f.ptr(), (*(_5856_ident)), _5868_binded);;
				if ((_6013_ta != nullptr)) {
					return _6013_ta;;
				};
			}
			_iter_next_1d9a52ec8:;
			++it;
			goto _iter_begin_1d9a52ec8;
		}
		_iter_end_1d9a52ec8:;
	};
	return nullptr;;
}



inline jule::Ptr<_1d651c2d1_Struct> _1d6593797_findStructInPackage(jule::Slice<jule::Ptr<_1d6641d73_SymbolTable>>* _7029_files, jule::Str* _7053_ident, jule::Bool _7065_binded) {
	{
		auto expr = _7029_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9a5453a:;
		if (it != expr_end) {
			jule::Ptr<_1d6641d73_SymbolTable> _7117_f = *it;
			{
				jule::Ptr<_1d651c2d1_Struct> _7213_s = _1d6643050_FindStruct(_7117_f.ptr(), (*(_7053_ident)), _7065_binded);;
				if ((_7213_s != nullptr)) {
					return _7213_s;;
				};
			}
			_iter_next_1d9a5453a:;
			++it;
			goto _iter_begin_1d9a5453a;
		}
		_iter_end_1d9a5453a:;
	};
	return nullptr;;
}



inline jule::Ptr<_1d653226e_Fn> _1d6593c4d_findFnInPackage(jule::Slice<jule::Ptr<_1d6641d73_SymbolTable>>* _8225_files, jule::Str* _8249_ident, jule::Bool _8261_binded) {
	{
		auto expr = _8225_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9a55a9c:;
		if (it != expr_end) {
			jule::Ptr<_1d6641d73_SymbolTable> _8317_file = *it;
			{
				jule::Ptr<_1d653226e_Fn> _8413_f = _1d664344b_FindFn(_8317_file.ptr(), (*(_8249_ident)), _8261_binded);;
				if ((_8413_f != nullptr)) {
					return _8413_f;;
				};
			}
			_iter_next_1d9a55a9c:;
			++it;
			goto _iter_begin_1d9a55a9c;
		}
		_iter_end_1d9a55a9c:;
	};
	return nullptr;;
}



inline jule::Ptr<_1d654554b_Trait> _1d659408e_findTraitInPackage(jule::Slice<jule::Ptr<_1d6641d73_SymbolTable>>* _9428_files, jule::Str* _9452_ident) {
	{
		auto expr = _9428_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9a56e66:;
		if (it != expr_end) {
			jule::Ptr<_1d6641d73_SymbolTable> _9517_f = *it;
			{
				jule::Ptr<_1d654554b_Trait> _9613_t = _1d664378c_FindTrait(_9517_f.ptr(), (*(_9452_ident)));;
				if ((_9613_t != nullptr)) {
					return _9613_t;;
				};
			}
			_iter_next_1d9a56e66:;
			++it;
			goto _iter_begin_1d9a56e66;
		}
		_iter_end_1d9a56e66:;
	};
	return nullptr;;
}



inline jule::Ptr<_1d6547c57_Enum> _1d6594413_findEnumInPackage(jule::Slice<jule::Ptr<_1d6641d73_SymbolTable>>* _10627_files, jule::Str* _10651_ident) {
	{
		auto expr = _10627_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9a582a8:;
		if (it != expr_end) {
			jule::Ptr<_1d6641d73_SymbolTable> _10717_f = *it;
			{
				jule::Ptr<_1d6547c57_Enum> _10813_e = _1d6643acd_FindEnum(_10717_f.ptr(), (*(_10651_ident)));;
				if ((_10813_e != nullptr)) {
					return _10813_e;;
				};
			}
			_iter_next_1d9a582a8:;
			++it;
			goto _iter_begin_1d9a582a8;
		}
		_iter_end_1d9a582a8:;
	};
	return nullptr;;
}



inline jule::Ptr<_1d6549462_TypeEnum> _1d6594787_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1d6641d73_SymbolTable>>* _11831_files, jule::Str* _11855_ident) {
	{
		auto expr = _11831_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9a5962d:;
		if (it != expr_end) {
			jule::Ptr<_1d6641d73_SymbolTable> _11917_f = *it;
			{
				jule::Ptr<_1d6549462_TypeEnum> _12013_e = _1d6643e1e_FindTypeEnum(_11917_f.ptr(), (*(_11855_ident)));;
				if ((_12013_e != nullptr)) {
					return _12013_e;;
				};
			}
			_iter_next_1d9a5962d:;
			++it;
			goto _iter_begin_1d9a5962d;
		}
		_iter_end_1d9a5962d:;
	};
	return nullptr;;
}



inline jule::Any _1d6594cc6_defByIdentPackage(jule::Slice<jule::Ptr<_1d6641d73_SymbolTable>>* _12927_files, jule::Str* _12951_ident, jule::Bool _12963_binded) {
	{
		auto expr = _12927_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9a5ab7e:;
		if (it != expr_end) {
			jule::Ptr<_1d6641d73_SymbolTable> _13017_file = *it;
			{
				jule::Any _13113_def = _1d6644ddc_defByIdent(_13017_file.ptr(), _12951_ident, _12963_binded);;
				if ((_13113_def != nullptr)) {
					return _13113_def;;
				};
			}
			_iter_next_1d9a5ab7e:;
			++it;
			goto _iter_begin_1d9a5ab7e;
		}
		_iter_end_1d9a5ab7e:;
	};
	return nullptr;;
}



inline jule::Bool _1d659ad10_isStdPackage(jule::Str* _35518_f, jule::Str _35526_p) {
	return _1e016e5ab_HasPrefix((*(_35518_f)), _1e0190c92_Join(jule::Slice<jule::Str>::make({_1e034e33a_PathStdlib,_35526_p})));;
}



inline jule::Bool _1d65b3421_isValidModelForRef(jule::Any* _1328_m) {
	{
		auto &_match_expr{ (*(_1328_m)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1d9a6b7b6:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1d9a6b82c:;
			{
				jule::Ptr<_1d6529079_StructSubIdentExprModel> _1813_model = (*(_1328_m)).cast_ptr<_1d6529079_StructSubIdentExprModel>(&__jule_any_type97);;
				return _1d65b3421_isValidModelForRef(&((*((*(_1813_model))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1d9a6b893:;
			{
				jule::Ptr<_1d65286d8_TraitSubIdentExprModel> _2113_model = (*(_1328_m)).cast_ptr<_1d65286d8_TraitSubIdentExprModel>(&__jule_any_type96);;
				return _1d65b3421_isValidModelForRef(&((*(_2113_model))._field_Expr));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1d9a6b91a:;
			{
				jule::Ptr<_1d65248d2_UnaryExprModel> _2413_unary = (*(_1328_m)).cast_ptr<_1d65248d2_UnaryExprModel>(&__jule_any_type110);;
				if (((*((*(_2413_unary))._field_Op))._field_Id != static_cast<jule::U64>(62LLU))) {
					return false;;
				};
				if ((_1d667a6a3_Ptr((*((*(_2413_unary))._field_Expr))._field_Kind.ptr()) != nullptr)) {
					return true;;
				};
				if ((_1d667a41c_Sptr((*((*(_2413_unary))._field_Expr))._field_Kind.ptr()) == nullptr)) {
					return false;;
				};
				return _1d65b3421_isValidModelForRef(&((*((*(_2413_unary))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1d9a6bb3a:;
			{
				jule::Ptr<_1d6526d68_IndexingExprModel> _3813_indexing = (*(_1328_m)).cast_ptr<_1d6526d68_IndexingExprModel>(&__jule_any_type45);;
				return _1d65b3421_isValidModelForRef(&((*((*(_3813_indexing))._field_Expr))._field_Model));;
			}
		}
		else {
			_case_begin_1d9a6b3a9:;
			{
				return false;;
			}
		}
		_match_end_1d9a6b354:;
	};
}



inline _1e0235a7e_Log _1d65b394e_compilerErr(jule::Ptr<_1d64d5cd3_Token>* _4517_token, jule::Bool _4532_line, jule::Str _4544_fmt, jule::Slice<jule::Any> _4557_args) {
	_1e0235a7e_Log _469_log = _1e0235a7e_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*((*(_4517_token))))._field_Row, ._field_Column=(*((*(_4517_token))))._field_Column, ._field_Path=(*((*((*(_4517_token))))._field_File))._field_Path, ._field_Text=_1e0235ee1_Logf(_4544_fmt, _4557_args), };;
	if (_4532_line) {
		_469_log._field_Line=_1d64dc57b_GetRow((*((*(_4517_token))))._field_File.ptr(), (*((*(_4517_token))))._field_Row);
	};
	return _469_log;;
}



inline jule::Bool _1d65b3cc3_impIsLookupable(jule::Ptr<_1d659590e_ImportInfo>* _5921_i, jule::Str* _5938_ident) {
	if ((*((*(_5921_i))))._field_Binded) {
		return false;;
	};
	if ((!((*((*(_5921_i))))._field_ImportAll))) {
		if (((*((*(_5921_i))))._field_Selected.len() > 0LL)) {
			return _1d6598291_existIdent((*(_5921_i)).ptr(), (*(_5938_ident)));;
		};
	};
	return (*((*(_5921_i))))._field_ImportAll;;
}



inline void _1d65b407b_appendRetVars(jule::Slice<jule::Ptr<_1d65d9018_Var>>* _7123_dest, jule::Ptr<_1d6535173_FnIns>* _7142_f) {
	if ((_1d65326e2_IsVoid((*((*(_7142_f))))._field_Decl.ptr()) || ((*((*(_7142_f))))._field_Result == nullptr))) {
		return;;
	};
	jule::Slice<jule::Ptr<_1d6677a35_TypeKind>> _769_types = _1d6536372_Types((*(_7142_f)).ptr());;
	{
		auto expr = &((*((*((*((*(_7142_f))))._field_Decl))._field_Result))._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9a77ecb:;
		if (it != expr_end) {
			jule::I64 _7710_i = it - expr->begin();
			jule::Ptr<_1d64d5cd3_Token> _7717_ident = *it;
			{
				if ((_1d64d8742_IsIgnoreIdent((*(_7717_ident))._field_Kind) || _1d64d8a0b_IsAnonIdent((*(_7717_ident))._field_Kind))) {
					goto _iter_next_1d9a77ecb;
				};
				{ jule::Slice<jule::Ptr<_1d65d9018_Var>> &__jule_push_dest = (*(_7123_dest)); __jule_push_dest.push(jule::new_ptr<_1d65d9018_Var>(_1d65d9018_Var{._field_Scope=(*((*(_7142_f))))._field_Scope, ._field_Token=_7717_ident, ._field_Ident=(*(_7717_ident))._field_Kind, ._field_Mutable=true, ._field_Used=true, ._field_Kind=jule::new_ptr<_1d667ec07_TypeSymbol>(_1d667ec07_TypeSymbol{._field_Kind=_769_types[_7710_i]}), ._field_Value=jule::new_ptr<_1d6648363_Value>(_1d6648363_Value{._field_Data=jule::new_ptr<_1d664721e_Data>()}), ._field_RetOrder=_7710_i, })); };
			}
			_iter_next_1d9a77ecb:;
			++it;
			_7710_i++;
			goto _iter_begin_1d9a77ecb;
		}
		_iter_end_1d9a77ecb:;
	};
	if ((((*((*((*((*(_7142_f))))._field_Decl))._field_Result))._field_Idents.len() == 1LL) && ((*(_7123_dest)).len() == 1LL))) {
		(*((*(_7123_dest))[((*(_7123_dest)).len() - 1LL)]))._field_RetOrder=-1LL;
	};
}



inline void _1d65b4367_appendParamVars(jule::Slice<jule::Ptr<_1d65d9018_Var>>* _10125_dest, jule::Ptr<_1d6535173_FnIns>* _10144_f) {
	if (((*((*(_10144_f))))._field_Params.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_10144_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9a7c893:;
		if (it != expr_end) {
			jule::Ptr<_1d65341c7_ParamIns> _10617_p = *it;
			{
				if ((_1d64d8742_IsIgnoreIdent((*((*(_10617_p))._field_Decl))._field_Ident) || _1d64d8a0b_IsAnonIdent((*((*(_10617_p))._field_Decl))._field_Ident))) {
					goto _iter_next_1d9a7c893;
				};
				jule::Ptr<_1d65d9018_Var> _11113_v = jule::new_ptr<_1d65d9018_Var>(_1d65d9018_Var{._field_Scope=(*((*(_10144_f))))._field_Scope, ._field_Token=(*((*(_10617_p))._field_Decl))._field_Token, ._field_Ident=(*((*(_10617_p))._field_Decl))._field_Ident, ._field_Mutable=(*((*(_10617_p))._field_Decl))._field_Mutable, ._field_Used=true, ._field_Reference=(*((*(_10617_p))._field_Decl))._field_Reference, ._field_Kind=jule::new_ptr<_1d667ec07_TypeSymbol>(), ._field_Value=jule::new_ptr<_1d6648363_Value>(_1d6648363_Value{._field_Data=jule::new_ptr<_1d664721e_Data>()}), });;
				{
					
					if (_1d6530db6_IsSelf((*(_10617_p))._field_Decl.ptr())) {
						_case_begin_1d9a816cc:;
						{
							(*((*(_11113_v))._field_Kind))._field_Kind=jule::new_ptr<_1d6677a35_TypeKind>(_1d6677a35_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_1d667757e_Kind>((*((*(_10144_f))))._field_Owner, 0)});
							(*(_11113_v))._field_Reference=(!(_1d653114c_IsRef((*(_10617_p))._field_Decl.ptr())));
							if (_1d653114c_IsRef((*(_10617_p))._field_Decl.ptr())) {
								(*(_11113_v))._field_Ident=(*(_11113_v))._field_Ident.slice(1LL);
								(*((*((*(_11113_v))._field_Kind))._field_Kind))._field_Kind=jule::Trait<_1d667757e_Kind>(jule::new_ptr<_1d668413a_Sptr>(_1d668413a_Sptr{._field_Elem=jule::new_ptr<_1d6677a35_TypeKind>(_1d6677a35_TypeKind{._field_BindIdent=(*((*((*(_11113_v))._field_Kind))._field_Kind))._field_BindIdent, ._field_Kind=(*((*((*(_11113_v))._field_Kind))._field_Kind))._field_Kind})}), 21);
							};
						}
					}
					else if ((*((*(_10617_p))._field_Decl))._field_Variadic) {
						_case_begin_1d9a813e1:;
						{
							(*((*(_11113_v))._field_Kind))._field_Kind=jule::new_ptr<_1d6677a35_TypeKind>(_1d6677a35_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_1d667757e_Kind>(jule::new_ptr<_1d6684b0d_Slc>(_1d6684b0d_Slc{._field_Elem=jule::new_ptr<_1d6677a35_TypeKind>(_1d6677a35_TypeKind{._field_BindIdent=(*((*(_10617_p))._field_Kind))._field_BindIdent, ._field_Kind=(*((*(_10617_p))._field_Kind))._field_Kind})}), 22)});
						}
					}
					else {
						_case_begin_1d9a8137a:;
						{
							(*((*(_11113_v))._field_Kind))._field_Kind=(*(_10617_p))._field_Kind;
						}
					}
					_match_end_1d9a81259:;
				};
				{ jule::Slice<jule::Ptr<_1d65d9018_Var>> &__jule_push_dest = (*(_10125_dest)); __jule_push_dest.push(_11113_v); };
			}
			_iter_next_1d9a7c893:;
			++it;
			goto _iter_begin_1d9a7c893;
		}
		_iter_end_1d9a7c893:;
	};
}



inline void _1d65b4653_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1d6676c43_TypeAlias>>* _16134_dest, jule::Ptr<_1d6535173_FnIns>* _16159_f) {
	jule::I64 _1629_size = (*((*(_16159_f))))._field_Generics.len();;
	if (((*((*((*(_16159_f))))._field_Decl))._field_Owner != nullptr)) {
		_1629_size+=(*((*((*((*(_16159_f))))._field_Decl))._field_Owner))._field_Generics.len();
	};
	if ((_1629_size == 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_16159_f))))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9a89a59:;
		if (it != expr_end) {
			jule::I64 _17110_i = it - expr->begin();
			jule::Ptr<_1d667614e_InsGeneric> _17117_g = *it;
			{
				jule::Ptr<_1d65085db_GenericDecl> _17213_decl = (*((*((*(_16159_f))))._field_Decl))._field_Generics[_17110_i];;
				{ jule::Slice<jule::Ptr<_1d6676c43_TypeAlias>> &__jule_push_dest = (*(_16134_dest)); __jule_push_dest.push(jule::new_ptr<_1d6676c43_TypeAlias>(_1d6676c43_TypeAlias{._field_Scope=(*((*((*(_16159_f))))._field_Decl))._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=(*(_17213_decl))._field_Token, ._field_Ident=(*(_17213_decl))._field_Ident, ._field_Kind=jule::new_ptr<_1d667ec07_TypeSymbol>(_1d667ec07_TypeSymbol{._field_Kind=(*(_17117_g))._field_Kind}), })); };
			}
			_iter_next_1d9a89a59:;
			++it;
			_17110_i++;
			goto _iter_begin_1d9a89a59;
		}
		_iter_end_1d9a89a59:;
	};
	if (((*((*((*(_16159_f))))._field_Decl))._field_Owner != nullptr)) {
		jule::Ptr<_1d652005e_StructIns> _18413_owner = (*((*(_16159_f))))._field_Owner;;
		{
			auto expr = &((*(_18413_owner))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1d9a8cc38:;
			if (it != expr_end) {
				jule::I64 _18514_i = it - expr->begin();
				jule::Ptr<_1d667614e_InsGeneric> _18521_g = *it;
				{
					jule::Ptr<_1d65085db_GenericDecl> _18617_decl = (*((*(_18413_owner))._field_Decl))._field_Generics[_18514_i];;
					{ jule::Slice<jule::Ptr<_1d6676c43_TypeAlias>> &__jule_push_dest = (*(_16134_dest)); __jule_push_dest.push(jule::new_ptr<_1d6676c43_TypeAlias>(_1d6676c43_TypeAlias{._field_Scope=(*((*((*(_16159_f))))._field_Decl))._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=(*(_18617_decl))._field_Token, ._field_Ident=(*(_18617_decl))._field_Ident, ._field_Kind=jule::new_ptr<_1d667ec07_TypeSymbol>(_1d667ec07_TypeSymbol{._field_Kind=(*(_18521_g))._field_Kind}), })); };
				}
				_iter_next_1d9a8cc38:;
				++it;
				_18514_i++;
				goto _iter_begin_1d9a8cc38;
			}
			_iter_end_1d9a8cc38:;
		};
	};
}



inline jule::Ptr<_1d6641d73_SymbolTable> _1d65b49c7_findFile(jule::Slice<jule::Ptr<_1d6641d73_SymbolTable>>* _19918_files, jule::Ptr<_1d64db59c_File>* _19942_handler) {
	{
		auto expr = _19918_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9a8d530:;
		if (it != expr_end) {
			jule::Ptr<_1d6641d73_SymbolTable> _20017_fl = *it;
			{
				if (((*(_20017_fl))._field_File == (*(_19942_handler)))) {
					return _20017_fl;;
				};
			}
			_iter_next_1d9a8d530:;
			++it;
			goto _iter_begin_1d9a8d530;
		}
		_iter_end_1d9a8d530:;
	};
	return nullptr;;
}



inline void _1d65b4e7d_pushSuggestion(_1e0235a7e_Log* _20830_log, jule::Str _20841_fmt, jule::Slice<jule::Any> _20854_args) {
	(*(_20830_log))._field_Suggestion=_1e0235ee1_Logf(_20841_fmt, _20854_args);
}



inline void _1d65d72d0_pushImplemented(jule::Ptr<_1d654554b_Trait> _288524_t, jule::Ptr<_1d651c2d1_Struct>* _288540_d) {
	_julec_label_1d9a9218d:;
	{
		
		if (((*(_288524_t))._field_Implemented.len() > 0LL)) {
			_case_begin_1d9a927ba:;
			{
				{
					auto expr = &((*(_288524_t))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d9a93898:;
					if (it != expr_end) {
						jule::Ptr<_1d651c2d1_Struct> _288916_s = *it;
						{
							if ((_288916_s == (*(_288540_d)))) {
								goto _match_end_1d9a923ad;
							};
						}
						_iter_next_1d9a93898:;
						++it;
						goto _iter_begin_1d9a93898;
					}
					_iter_end_1d9a93898:;
				};
				goto _case_begin_1d9a92424;
			}
		}
		else {
			_case_begin_1d9a92424:;
			{
				{ jule::Slice<jule::Ptr<_1d651c2d1_Struct>> &__jule_push_dest = (*(_288524_t))._field_Implemented; __jule_push_dest.push((*(_288540_d))); };
			}
		}
		_match_end_1d9a923ad:;
	};
	{
		auto expr = &((*(_288524_t))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9a92ec4:;
		if (it != expr_end) {
			jule::Ptr<_1d667ec07_TypeSymbol> _289817_i = *it;
			{
				_1d65d72d0_pushImplemented(_1d667b990_Trait((*(_289817_i))._field_Kind.ptr()), _288540_d);
			}
			_iter_next_1d9a92ec4:;
			++it;
			goto _iter_begin_1d9a92ec4;
		}
		_iter_end_1d9a92ec4:;
	};
}



inline void _1d65d75bb_pushImplements(jule::Ptr<_1d651c2d1_Struct>* _290324_s, jule::Ptr<_1d654554b_Trait> _290340_t) {
	_julec_label_1d9a9514c:;
	{
		
		if (((*((*(_290324_s))))._field_Implements.len() > 0LL)) {
			_case_begin_1d9a95779:;
			{
				{
					auto expr = &((*((*(_290324_s))))._field_Implements);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d9a96857:;
					if (it != expr_end) {
						jule::Ptr<_1d654554b_Trait> _290716_b = *it;
						{
							if ((_290716_b == _290340_t)) {
								goto _match_end_1d9a9536c;
							};
						}
						_iter_next_1d9a96857:;
						++it;
						goto _iter_begin_1d9a96857;
					}
					_iter_end_1d9a96857:;
				};
				goto _case_begin_1d9a953d3;
			}
		}
		else {
			_case_begin_1d9a953d3:;
			{
				{ jule::Slice<jule::Ptr<_1d654554b_Trait>> &__jule_push_dest = (*((*(_290324_s))))._field_Implements; __jule_push_dest.push(_290340_t); };
			}
		}
		_match_end_1d9a9536c:;
	};
	{
		auto expr = &((*(_290340_t))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9a95e83:;
		if (it != expr_end) {
			jule::Ptr<_1d667ec07_TypeSymbol> _291617_i = *it;
			{
				_1d65d75bb_pushImplements(_290324_s, _1d667b990_Trait((*(_291617_i))._field_Kind.ptr()));
			}
			_iter_next_1d9a95e83:;
			++it;
			goto _iter_begin_1d9a95e83;
		}
		_iter_end_1d9a95e83:;
	};
}



inline jule::Bool _1d662cc1b_traitHasReferenceReceiver(jule::Ptr<_1d654554b_Trait>* _2731_t) {
	{
		auto expr = &((*((*(_2731_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9d38577:;
		if (it != expr_end) {
			jule::Ptr<_1d653226e_Fn> *_2812_f = it;
			{
				if ((*((*(_2812_f))))._field_Statically) {
					goto _iter_next_1d9d38577;
				};
				jule::Ptr<_1d653079a_Param> _349_p = (*((*(_2812_f))))._field_Params[0LL];;
				if ((_1d653114c_IsRef(_349_p.ptr()) && _1d6530db6_IsSelf(_349_p.ptr()))) {
					return true;;
				};
			}
			_iter_next_1d9d38577:;
			++it;
			goto _iter_begin_1d9d38577;
		}
		_iter_end_1d9d38577:;
	};
	return false;;
}



inline jule::Bool _1d662d0a1_floatAssignable(jule::Str* _4221_kind, jule::Ptr<_1d664721e_Data>* _4233_d) {
	jule::Str _435_value = _1d42eb36a_FmtFloat(static_cast<jule::F64>(_1d4323dba_AsF64((*((*(_4233_d))))._field_Constant.ptr())), 'g', -1LL, 64LL);;
	return _1d4316a7d_CheckBitFloat(_435_value, static_cast<jule::I64>(_1d4315560_BitsizeOf((*(_4221_kind)))));;
}



inline jule::Bool _1d662d425_sigAssignable(jule::Str _4718_kind, jule::Ptr<_1d664721e_Data>* _4730_d) {
	jule::F64 _485_min = _1d431bc92_Min(_4718_kind);;
	jule::F64 _495_max = _1d431c05b_Max(_4718_kind);;
	{
		
		if (_1d4325c13_IsF64((*((*(_4730_d))))._field_Constant.ptr())) {
			_case_begin_1d9d3c1e6:;
			{
				jule::F64 _529_x = _1d4323617_ReadF64((*((*(_4730_d))))._field_Constant.ptr());;
				jule::F64 _539_i = 0;;
				jule::F64 _5312_frac = 0;;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1c7608398_Modf(_529_x);
					_539_i = __jule_assign_result.__jule_result_arg0;
					_5312_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_5312_frac != 0LL)) {
					return false;;
				};
				return ((_539_i >= _485_min) && (_539_i <= _495_max));;
			}
		}
		else if (_1d4325460_IsU64((*((*(_4730_d))))._field_Constant.ptr())) {
			_case_begin_1d9d3c26d:;
			{
				jule::F64 _599_x = _1d4323dba_AsF64((*((*(_4730_d))))._field_Constant.ptr());;
				if ((_599_x <= _495_max)) {
					return true;;
				};
			}
		}
		else if (_1d43251c9_IsI64((*((*(_4730_d))))._field_Constant.ptr())) {
			_case_begin_1d9d3c2e5:;
			{
				jule::F64 _649_x = _1d4323dba_AsF64((*((*(_4730_d))))._field_Constant.ptr());;
				return ((_485_min <= _649_x) && (_649_x <= _495_max));;
			}
		}
		_match_end_1d9d3bd61:;
	};
	return false;;
}



inline jule::Bool _1d662d7dd_unsigAssignable(jule::Str _7020_kind, jule::Ptr<_1d664721e_Data>* _7032_d) {
	jule::F64 _715_max = _1d431c05b_Max(_7020_kind);;
	if (((*((*(_7032_d))))._field_IsRune && _7020_kind.equal("u8", 2))) {
		return _1d660ad81_IsAscii(static_cast<jule::I32>(static_cast<jule::I32>(_1d4322acd_ReadI64((*((*(_7032_d))))._field_Constant.ptr()))));;
	};
	{
		
		if (_1d4325c13_IsF64((*((*(_7032_d))))._field_Constant.ptr())) {
			_case_begin_1d9d42c79:;
			{
				jule::F64 _789_x = _1d4323617_ReadF64((*((*(_7032_d))))._field_Constant.ptr());;
				if ((_789_x < 0LL)) {
					return false;;
				};
				jule::F64 _829_i = 0;;
				jule::F64 _8212_frac = 0;;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1c7608398_Modf(_789_x);
					_829_i = __jule_assign_result.__jule_result_arg0;
					_8212_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_8212_frac != 0LL)) {
					return false;;
				};
				return (_829_i <= _715_max);;
			}
		}
		else if (_1d4325460_IsU64((*((*(_7032_d))))._field_Constant.ptr())) {
			_case_begin_1d9d42ce0:;
			{
				jule::F64 _889_x = _1d4323dba_AsF64((*((*(_7032_d))))._field_Constant.ptr());;
				if ((_889_x <= _715_max)) {
					return true;;
				};
			}
		}
		else if (_1d43251c9_IsI64((*((*(_7032_d))))._field_Constant.ptr())) {
			_case_begin_1d9d42d56:;
			{
				jule::F64 _939_x = _1d4323dba_AsF64((*((*(_7032_d))))._field_Constant.ptr());;
				return ((0LL <= _939_x) && (_939_x <= _715_max));;
			}
		}
		_match_end_1d9d4240a:;
	};
	return false;;
}



inline jule::Bool _1d662db62_intAssignable(jule::Str _9918_kind, jule::Ptr<_1d664721e_Data>* _9930_d) {
	{
		
		if (_1d432004d_IsSigInt(_9918_kind)) {
			_case_begin_1d9d478e9:;
			{
				return _1d662d425_sigAssignable(_9918_kind, _9930_d);;
			}
		}
		else if (_1d432035b_IsUnsigInt(_9918_kind)) {
			_case_begin_1d9d47960:;
			{
				return _1d662d7dd_unsigAssignable(_9918_kind, _9930_d);;
			}
		}
		else {
			_case_begin_1d9d473aa:;
			{
				return false;;
			}
		}
		_match_end_1d9d465eb:;
	};
}



inline void _1d663a07a_checkMutRiskOfStructLit(jule::Ptr<_1d65b5c81_Sema>* _91433_s, jule::Ptr<_1d65252a6_StructLitExprModel>* _91444_m) {
	{
		auto expr = &((*((*(_91444_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9d489e9:;
		if (it != expr_end) {
			jule::Ptr<_1d6524e10_StructArgExprModel> *_91512_arg = it;
			{
				if ((*((*((*((*(_91512_arg))))._field_Field))._field_Decl))._field_Mutable) {
					goto _iter_next_1d9d489e9;
				};
				if (((!((*((*((*(_91512_arg))))._field_Expr))._field_Mutable)) && _1d66793b6_Mutable((*((*((*(_91512_arg))))._field_Expr))._field_Kind.ptr()))) {
					_1d65b88bb_pushErr((*(_91433_s)).ptr(), (*((*(_91512_arg))))._field_Token, jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_1d6677ded_Str((*((*((*(_91512_arg))))._field_Expr))._field_Kind.ptr()), &__jule_any_type4)}));
				};
			}
			_iter_next_1d9d489e9:;
			++it;
			goto _iter_begin_1d9d489e9;
		}
		_iter_end_1d9d489e9:;
	};
}



inline jule::Ptr<_1d6677a35_TypeKind> _1d6640b1e_lenKind(void) {
	return _1d675b09c_primInt;;
}



inline jule::Bool _1d6640e71_isGoodValueToInfer(jule::Ptr<_1d664721e_Data>* _137824_d) {
	return (!(_1d66475c6_IsNil((*(_137824_d)).ptr())));;
}



inline jule::Ptr<_1d64ea7ed_Directive> _1d6670a83_findDirective(jule::Slice<jule::Ptr<_1d64ea7ed_Directive>>* _424523_directives, jule::Str _424554_d) {
	{
		auto expr = _424523_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9e7ae06:;
		if (it != expr_end) {
			jule::Ptr<_1d64ea7ed_Directive> _424617_dr = *it;
			{
				if (((*((*(_424617_dr))._field_Tag))._field_Kind == _424554_d)) {
					return _424617_dr;;
				};
			}
			_iter_next_1d9e7ae06:;
			++it;
			goto _iter_begin_1d9e7ae06;
		}
		_iter_end_1d9e7ae06:;
	};
	return nullptr;;
}



inline jule::Any _1d6670e4b_findBuiltinsImport(jule::Str* _425424_ident, jule::Ptr<_1d659590e_ImportInfo> _425436_imp) {
	return _1d675e7ed_findPackageBuiltinDef(&((*(_425436_imp))._field_LinkPath), _425424_ident);;
}



inline void _1d667117c_fitBitsize(jule::Ptr<_1d664721e_Data>* _426320_d) {
	jule::Ptr<_1d668060e_Prim> _42649_prim = _1d667a186_Prim((*((*(_426320_d))))._field_Kind.ptr());;
	jule::I64 _42655_z = _1d4315560_BitsizeOf(_1d6680950_Str(_42649_prim.ptr()));;
	{
		
		if (_1d43251c9_IsI64((*((*(_426320_d))))._field_Constant.ptr())) {
			_case_begin_1d9e7d667:;
			{
				jule::I64 _42689_k = _1d4317111_BitsizeOfInt(static_cast<jule::I64>(_1d4322acd_ReadI64((*((*(_426320_d))))._field_Constant.ptr())));;
				if (((_42689_k > _42655_z) || _1d432035b_IsUnsigInt((*(_42649_prim))._field_Kind))) {
					(*((*((*(_426320_d))))._field_Constant))._field_Kind=_1d43158a1_IntFromBits(_42689_k);
					(*((*(_426320_d))))._field_Kind=(*((*(_1d675d4bc_findBuiltinTypeAlias((*((*((*(_426320_d))))._field_Constant))._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		else if (_1d4325460_IsU64((*((*(_426320_d))))._field_Constant.ptr())) {
			_case_begin_1d9e7d6cd:;
			{
				jule::I64 _42749_k = _1d43173ca_BitsizeOfUint(static_cast<jule::U64>(_1d4322d64_ReadU64((*((*(_426320_d))))._field_Constant.ptr())));;
				if (((_42749_k > _42655_z) || _1d432004d_IsSigInt((*(_42649_prim))._field_Kind))) {
					(*((*((*(_426320_d))))._field_Constant))._field_Kind=_1d4315b6a_UintFromBits(_42749_k);
					(*((*(_426320_d))))._field_Kind=(*((*(_1d675d4bc_findBuiltinTypeAlias((*((*((*(_426320_d))))._field_Constant))._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		else if (_1d4325c13_IsF64((*((*(_426320_d))))._field_Constant.ptr())) {
			_case_begin_1d9e7d744:;
			{
				if ((_42655_z == 64LLU)) {
					return;;
				};
				jule::I64 _42849_k = _1d4316d47_BitsizeOfFloat(static_cast<jule::F64>(_1d4323617_ReadF64((*((*(_426320_d))))._field_Constant.ptr())));;
				if ((_42849_k > _42655_z)) {
					(*((*((*(_426320_d))))._field_Constant))._field_Kind=_1d4315e34_FloatFromBits(_42849_k);
					(*((*(_426320_d))))._field_Kind=(*((*(_1d675d4bc_findBuiltinTypeAlias((*((*((*(_426320_d))))._field_Constant))._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		_match_end_1d9e7d557:;
	};
}



inline void _1d66714ac_makeStructLitAlloc(jule::Ptr<_1d664721e_Data>* _429228_d, jule::Ptr<_1d65252a6_StructLitExprModel>* _429243_lit) {
	(*((*(_429228_d))))._field_Kind=jule::new_ptr<_1d6677a35_TypeKind>(_1d6677a35_TypeKind{._field_Kind=jule::Trait<_1d667757e_Kind>(jule::new_ptr<_1d668413a_Sptr>(_1d668413a_Sptr{._field_Elem=jule::new_ptr<_1d6677a35_TypeKind>(_1d6677a35_TypeKind{._field_Kind=jule::Trait<_1d667757e_Kind>((*((*(_429243_lit))))._field_Strct, 0)})}), 21)});
	(*((*(_429228_d))))._field_Model=jule::Any(jule::new_ptr<_1d65255a3_AllocStructLitExprModel>(_1d65255a3_AllocStructLitExprModel{._field_Lit=(*(_429243_lit))}), &__jule_any_type112);
}



inline jule::Ptr<_1d65d9018_Var> _1d6671831_buildErrorVar(jule::Ptr<_1d6574129_Scope>* _430323_s, jule::Ptr<_1d650443e_FnCallExpr>* _430339_fc) {
	return jule::new_ptr<_1d65d9018_Var>(_1d65d9018_Var{._field_Scope=(*(_430323_s)), ._field_Token=(*((*(_430339_fc))))._field_Token, ._field_Ident=jule::Str::lit("error", 5), ._field_Mutable=true, ._field_Used=true, ._field_Reference=false, ._field_Kind=(*(_1d675d4bc_findBuiltinTypeAlias(jule::Str::lit("any", 3))))._field_Kind, ._field_Value=jule::new_ptr<_1d6648363_Value>(_1d6648363_Value{._field_Data=jule::new_ptr<_1d664721e_Data>()}), });;
}



inline jule::Any _1d6671ba5_findBuiltinsSema(jule::Str* _431822_ident, jule::Ptr<_1d65b5c81_Sema> _431838_s) {
	{
		auto expr = &((*((*(_431838_s))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d9e89d7c:;
		if (it != expr_end) {
			jule::Ptr<_1d659590e_ImportInfo> _431917_imp = *it;
			{
				if (((*(_431917_imp))._field_ImportAll || _1d6598291_existIdent(_431917_imp.ptr(), (*(_431822_ident))))) {
					jule::Any _432117_def = _1d6670e4b_findBuiltinsImport(_431822_ident, _431917_imp);;
					if ((_432117_def != nullptr)) {
						return _432117_def;;
					};
				};
			}
			_iter_next_1d9e89d7c:;
			++it;
			goto _iter_begin_1d9e89d7c;
		}
		_iter_end_1d9e89d7c:;
	};
	jule::Str _43299_ppath = _1d64dbc1d_Dir((*((*(_431838_s))._field_file))._field_File.ptr());;
	if (_1e016e5ab_HasPrefix(_43299_ppath, _1e034e33a_PathStdlib)) {
		(_43299_ppath).mut_slice(_1e034e33a_PathStdlib.len());;
		_43299_ppath=(jule::Str::lit("std", 3) + _1e0175491_Replace(_43299_ppath, jule::Str::lit("/", 1), jule::Str::lit("::", 2), -1LL));
		return _1d675e7ed_findPackageBuiltinDef(&(_43299_ppath), _431822_ident);;
	};
	return nullptr;;
}



inline jule::Bool _1d6671e6e_isOkForShifting(jule::Ptr<_1d664721e_Data>* _434325_d) {
	if (_1d6647ae3_IsConst((*(_434325_d)).ptr())) {
		{
			
			if (_1d43251c9_IsI64((*((*(_434325_d))))._field_Constant.ptr())) {
				_case_begin_1d9e8d2c0:;
				{
					return (_1d4322acd_ReadI64((*((*(_434325_d))))._field_Constant.ptr()) >= 0LL);;
				}
			}
			else if (_1d4325460_IsU64((*((*(_434325_d))))._field_Constant.ptr())) {
				_case_begin_1d9e8d347:;
				{
					return true;;
				}
			}
			else if (_1d4325c13_IsF64((*((*(_434325_d))))._field_Constant.ptr())) {
				_case_begin_1d9e8d3be:;
				{
					return (_1d4323617_ReadF64((*((*(_434325_d))))._field_Constant.ptr()) >= 0LL);;
				}
			}
			else {
				_case_begin_1d9e8d1e3:;
				{
					return false;;
				}
			}
			_match_end_1d9e8bd6d:;
		};
	};
	jule::Ptr<_1d668060e_Prim> _43565_prim = _1d667a186_Prim((*((*(_434325_d))))._field_Kind.ptr());;
	return ((_43565_prim != nullptr) && _1d4320625_IsInt(_1d6680950_Str(_43565_prim.ptr())));;
}



inline jule::Bool _1d6672348_isInstancedStruct(jule::Ptr<_1d652005e_StructIns> _436022_s) {
	return ((*((*(_436022_s))._field_Decl))._field_Generics.len() == (*(_436022_s))._field_Generics.len());;
}



inline jule::Bool _1d66726bc_isPtrArithmeticCompatible(jule::Ptr<_1d664721e_Data>* _436435_l, jule::Ptr<_1d664721e_Data>* _436450_r) {
	jule::Ptr<_1d6687902_Ptr> _43655_ptr = _1d667a6a3_Ptr((*((*(_436450_r))))._field_Kind.ptr());;
	if ((_43655_ptr != nullptr)) {
		return _1d667823e_Equal((*(_1d667a6a3_Ptr((*((*(_436435_l))))._field_Kind.ptr())))._field_Elem, (*(_43655_ptr))._field_Elem);;
	};
	if (_1d6647ae3_IsConst((*(_436450_r)).ptr())) {
		return _1d662db62_intAssignable(jule::Str::lit("int", 3), _436450_r);;
	};
	_1d662e14b_typeCompatibilityChecker _43729_tcc = _1d662e14b_typeCompatibilityChecker{._field_dest=_1d675b09c_primInt, ._field_src=(*((*(_436450_r))))._field_Kind, };;
	return _1d6630812_check(&_43729_tcc);;
}



inline void _1d66729a8_applyCastKindModel(jule::Ptr<_1d664721e_Data>* _437928_d, jule::Ptr<_1d6677a35_TypeKind>* _437943_t) {
	(*((*(_437928_d))))._field_Model=jule::Any(jule::new_ptr<_1d6525b36_CastingExprModel>(_1d6525b36_CastingExprModel{._field_Expr=(*((*(_437928_d))))._field_Model, ._field_Kind=(*(_437943_t)), ._field_ExprKind=(*((*(_437928_d))))._field_Kind}), &__jule_any_type92);
}



inline void _1d6672c94_applyCastKind(jule::Ptr<_1d664721e_Data>* _438723_d, jule::Ptr<_1d6677a35_TypeKind>* _438738_t) {
	_1d66729a8_applyCastKindModel(_438723_d, _438738_t);
	(*((*(_438723_d))))._field_Kind=(*(_438738_t));
}



inline jule::Ptr<_1d664721e_Data> _1d6672ea3_buildVoidData(void) {
	return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=_1d6759c9e_primVoid, });;
}



inline jule::Str _1d667326c_checkDataForIntegerIndexing(jule::Ptr<_1d664721e_Data>* _439837_d) {
	jule::Str __jule_func_result = jule::Str();
	if (((*(_439837_d)) == nullptr)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	{
		
		if ((_1d667a186_Prim((*((*(_439837_d))))._field_Kind.ptr()) == nullptr)) {
			_case_begin_1d9e973a6:;
			{
				__jule_func_result = jule::Str::lit("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if ((!(_1d4320625_IsInt(_1d6680950_Str(_1d667a186_Prim((*((*(_439837_d))))._field_Kind.ptr()).ptr()))))) {
			_case_begin_1d9e9741c:;
			{
				__jule_func_result = jule::Str::lit("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if (_1d6647ae3_IsConst((*(_439837_d)).ptr())) {
			_case_begin_1d9e97483:;
			{
				if ((_1d4323dba_AsF64((*((*(_439837_d))))._field_Constant.ptr()) < 0LL)) {
					__jule_func_result = jule::Str::lit("overflow the limit of data-type", 31);
					return __jule_func_result;;
				};
			}
		}
		else if ((_1d667a186_Prim((*((*(_439837_d))))._field_Kind.ptr()) == nullptr) || _1d6647ae3_IsConst((*(_439837_d)).ptr()) || (_1d4315296_RealKindOf(_1d6680950_Str(_1d667a186_Prim((*((*(_439837_d))))._field_Kind.ptr()).ptr())) != _1d4315296_RealKindOf(jule::Str::lit("int", 3)))) {
			_case_begin_1d9e9750a:;
			{
				_1d6672c94_applyCastKind(_439837_d, &(_1d675b09c_primInt));
			}
		}
		_match_end_1d9e97043:;
	};
	__jule_func_result = jule::Str();
	return __jule_func_result;;
}



inline void _1d6673558_applyCastModelByEnum(jule::Ptr<_1d664721e_Data>* _442330_d, jule::Ptr<_1d6547c57_Enum> _442344_e) {
	if ((_442344_e == nullptr)) {
		return;;
	};
	jule::Ptr<_1d668060e_Prim> _44275_p = _1d667a186_Prim((*((*(_442344_e))._field_Kind))._field_Kind.ptr());;
	if (_1d6683a96_IsStr(_44275_p.ptr())) {
		return;;
	};
	_1d66729a8_applyCastKindModel(_442330_d, &((*((*(_442344_e))._field_Kind))._field_Kind));
}



inline void _1d6673844_castConstByType(jule::Str* _443421_t, jule::Ptr<_1d664721e_Data>* _443434_d) {
	{
		
		if (_1d432004d_IsSigInt((*(_443421_t)))) {
			_case_begin_1d9e9d115:;
			{
				{
					auto _match_expr{ _1d4315560_BitsizeOf(_1d4315296_RealKindOf((*(_443421_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1d9e9dc3c:;
						{
							_1d4324173_SetI64((*((*(_443434_d))))._field_Constant.ptr(), static_cast<jule::I64>(_1d432389d_AsI64((*((*(_443434_d))))._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1d9e9dcb4:;
						{
							_1d4324173_SetI64((*((*(_443434_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I32>(_1d432389d_AsI64((*((*(_443434_d))))._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1d9e9dd3b:;
						{
							_1d4324173_SetI64((*((*(_443434_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I16>(_1d432389d_AsI64((*((*(_443434_d))))._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1d9e9ddb3:;
						{
							_1d4324173_SetI64((*((*(_443434_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I8>(_1d432389d_AsI64((*((*(_443434_d))))._field_Constant.ptr())))));
						}
					}
					_match_end_1d9e9d962:;
				};
			}
		}
		else if (_1d432035b_IsUnsigInt((*(_443421_t)))) {
			_case_begin_1d9e9d18c:;
			{
				{
					auto _match_expr{ _1d4315560_BitsizeOf(_1d4315296_RealKindOf((*(_443421_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1d9ea2d1d:;
						{
							_1d432442b_SetU64((*((*(_443434_d))))._field_Constant.ptr(), static_cast<jule::U64>(_1d4323b34_AsU64((*((*(_443434_d))))._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1d9ea2d84:;
						{
							_1d432442b_SetU64((*((*(_443434_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U32>(_1d4323b34_AsU64((*((*(_443434_d))))._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1d9ea2e0b:;
						{
							_1d432442b_SetU64((*((*(_443434_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U16>(_1d4323b34_AsU64((*((*(_443434_d))))._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1d9ea2e83:;
						{
							_1d432442b_SetU64((*((*(_443434_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U8>(_1d4323b34_AsU64((*((*(_443434_d))))._field_Constant.ptr())))));
						}
					}
					_match_end_1d9ea1ca6:;
				};
			}
		}
		else if (_1d4320966_IsFloat((*(_443421_t)))) {
			_case_begin_1d9e9d214:;
			{
				{
					auto _match_expr{ _1d4315560_BitsizeOf(_1d4315296_RealKindOf((*(_443421_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1d9ea6daa:;
						{
							_1d4324c45_SetF64((*((*(_443434_d))))._field_Constant.ptr(), static_cast<jule::F64>(_1d4323dba_AsF64((*((*(_443434_d))))._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1d9ea6e32:;
						{
							_1d4324c45_SetF64((*((*(_443434_d))))._field_Constant.ptr(), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F32>(_1d4323dba_AsF64((*((*(_443434_d))))._field_Constant.ptr())))));
						}
					}
					_match_end_1d9e9e26a:;
				};
			}
		}
		_match_end_1d9e9d005:;
	};
}



inline void _1d6673cd9_updateModelToGenericIns(jule::Any* _446833_m, jule::Ptr<_1d6535173_FnIns>* _446852_f) {
	{
		auto &_match_expr{ (*(_446833_m)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1d9ea33e5:;
			{
				(*(_446833_m))=jule::Any((*(_446852_f)), &__jule_any_type7);
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1d9ea7251:;
			{
				(*((*(_446833_m)).cast_ptr<_1d6529079_StructSubIdentExprModel>(&__jule_any_type97)))._field_Method=(*(_446852_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1d9ea72b7:;
			{
				(*((*(_446833_m)).cast_ptr<_1d6529530_StructStaticIdentExprModel>(&__jule_any_type95)))._field_Method=(*(_446852_f));
			}
		}
		_match_end_1d9ea82eb:;
	};
}



inline jule::Bool _1d667415d_pushSubIdentFromExpr(jule::Any _447929_expr, jule::Ptr<_1d64ebcd8_SubIdentTypeDecl>* _447950_t) {
	{
		auto &_match_expr{ _447929_expr };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1d9eaa70a:;
			{
				jule::Ptr<_1d6502140_IdentExpr> _448213_e = _447929_expr.cast_ptr<_1d6502140_IdentExpr>(&__jule_any_type79);;
				{ jule::Slice<jule::Ptr<_1d64eb9db_IdentTypeDecl>> &__jule_push_dest = (*((*(_447950_t))))._field_Idents; __jule_push_dest.push(jule::new_ptr<_1d64eb9db_IdentTypeDecl>(_1d64eb9db_IdentTypeDecl{._field_Token=(*(_448213_e))._field_Token, ._field_Ident=(*(_448213_e))._field_Ident, })); };
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1d9eaa771:;
			{
				jule::Ptr<_1d6503828_SubIdentExpr> _448813_e = _447929_expr.cast_ptr<_1d6503828_SubIdentExpr>(&__jule_any_type85);;
				if ((!(_1d667415d_pushSubIdentFromExpr((*((*(_448813_e))._field_Expr))._field_Kind, _447950_t)))) {
					return false;;
				};
				{ jule::Slice<jule::Ptr<_1d64eb9db_IdentTypeDecl>> &__jule_push_dest = (*((*(_447950_t))))._field_Idents; __jule_push_dest.push(jule::new_ptr<_1d64eb9db_IdentTypeDecl>(_1d64eb9db_IdentTypeDecl{._field_Token=(*(_448813_e))._field_Ident, ._field_Ident=(*((*(_448813_e))._field_Ident))._field_Kind, })); };
			}
		}
		else {
			_case_begin_1d9eaa694:;
			{
				return false;;
			}
		}
		_match_end_1d9eaa5c8:;
	};
	return true;;
}



inline jule::Str _1d6674427_constoa(jule::Ptr<_1d4321208_Const>* _450213_c) {
	{
		
		if (_1d43251c9_IsI64((*(_450213_c)).ptr())) {
			_case_begin_1d9ead5a9:;
			{
				return _1d4312e31_FmtInt(static_cast<jule::I64>(_1d4322acd_ReadI64((*(_450213_c)).ptr())), 10LL);;
			}
		}
		else if (_1d4325460_IsU64((*(_450213_c)).ptr())) {
			_case_begin_1d9ead620:;
			{
				return _1d4312a68_FmtUint(static_cast<jule::U64>(_1d4322d64_ReadU64((*(_450213_c)).ptr())), 10LL);;
			}
		}
		else {
			_case_begin_1d9eaa8d6:;
			{
				return jule::Str();;
			}
		}
		_match_end_1d9eaae25:;
	};
}



inline jule::Ptr<_1d664721e_Data> _1d667479b_evalEnumStatic(jule::Ptr<_1d6547c57_Enum>* _451324_enm, jule::Ptr<_1d65471da_EnumItem>* _451341_item) {
	jule::Ptr<_1d664721e_Data> _45149_d = jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=jule::new_ptr<_1d6677a35_TypeKind>(_1d6677a35_TypeKind{._field_Kind=jule::Trait<_1d667757e_Kind>((*(_451324_enm)), 3)}), });;
	if (((*(_451341_item)) != nullptr)) {
		(*(_45149_d))._field_Constant=jule::new_ptr<_1d4321208_Const>((*((*((*((*((*(_451341_item))))._field_Value))._field_Data))._field_Constant)));
		(*(_45149_d))._field_Model=jule::Any((*(_45149_d))._field_Constant, &__jule_any_type19);
		_1d6673558_applyCastModelByEnum(&(_45149_d), (*(_451324_enm)));
	};
	return _45149_d;;
}



inline jule::Ptr<_1d65252a6_StructLitExprModel> _1d6674a65_isLitBased(jule::Any* _453020_m) {
	{
		auto &_match_expr{ (*(_453020_m)) };
		
		if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1d9eb304d:;
			{
				return (*(_453020_m)).cast_ptr<_1d65252a6_StructLitExprModel>(&__jule_any_type94);;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1d9eb30b4:;
			{
				return (*((*(_453020_m)).cast_ptr<_1d65255a3_AllocStructLitExprModel>(&__jule_any_type112)))._field_Lit;;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1d9eb312a:;
			{
				jule::Ptr<_1d6529079_StructSubIdentExprModel> _453713_ssi = (*(_453020_m)).cast_ptr<_1d6529079_StructSubIdentExprModel>(&__jule_any_type97);;
				return _1d6674a65_isLitBased(&((*((*(_453713_ssi))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1d9eb3191:;
			{
				jule::Ptr<_1d6525b36_CastingExprModel> _454013_c = (*(_453020_m)).cast_ptr<_1d6525b36_CastingExprModel>(&__jule_any_type92);;
				return _1d6674a65_isLitBased(&((*(_454013_c))._field_Expr));;
			}
		}
		else {
			_case_begin_1d9eb2ed7:;
			{
				return nullptr;;
			}
		}
		_match_end_1d9eb2e82:;
	};
}



inline void _1d6674d51_makeImplicitDeref(jule::Ptr<_1d664721e_Data>* _454727_d, jule::Ptr<_1d64d5cd3_Token> _454741_baseToken) {
	jule::Ptr<_1d65248d2_UnaryExprModel> _45489_unary = jule::new_ptr<_1d65248d2_UnaryExprModel>(_1d65248d2_UnaryExprModel{._field_Expr=jule::new_ptr<_1d664721e_Data>((*((*(_454727_d))))), ._field_Op=jule::new_ptr<_1d64d5cd3_Token>((*(_454741_baseToken)))});;
	(*((*(_45489_unary))._field_Op))._field_Id=static_cast<jule::U64>(62LLU);
	(*((*(_45489_unary))._field_Op))._field_Kind=jule::Str::lit("*", 1);
	(*((*(_454727_d))))._field_Model=jule::Any(_45489_unary, &__jule_any_type110);
}



inline void _1da09bb2b_updateRefer(jule::Ptr<_1d6538341_ReferenceStack> _455823_ref, jule::Ptr<_1d6535173_FnIns>* _455846_old, jule::Ptr<_1d6535173_FnIns>* _455859_new) {
	{
		auto expr = &((*(_455823_ref))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1da09d545:;
		if (it != expr_end) {
			jule::I64 _45599_i = it - expr->begin();
			jule::Any _455912_sym = *it;
			{
				if ((__jule_any_type7_compare(_455912_sym, (*(_455846_old))))) {
					(*(_455823_ref))._field_buffer[_45599_i]=jule::Any((*(_455859_new)), &__jule_any_type7);
				};
			}
			_iter_next_1da09d545:;
			++it;
			_45599_i++;
			goto _iter_begin_1da09d545;
		}
		_iter_end_1da09d545:;
	};
}



inline jule::Bool _1d669328c_kindUsesGenerics(jule::Ptr<_1d6677a35_TypeKind>* _171126_k, jule::Slice<jule::Ptr<_1d65085db_GenericDecl>>* _171141_generics) {
	{
		auto expr = _171141_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1da3902b5:;
		if (it != expr_end) {
			jule::Ptr<_1d65085db_GenericDecl> *_171212_g = it;
			{
				if (static__1d6692d5d_exist(&((*((*(_171212_g))))._field_Ident), _171126_k)) {
					return true;;
				};
			}
			_iter_next_1da3902b5:;
			++it;
			goto _iter_begin_1da3902b5;
		}
		_iter_end_1da3902b5:;
	};
	return false;;
}



inline jule::Bool _1d6693655_hasDirective(jule::Slice<jule::Ptr<_1d64ea7ed_Directive>>* _172122_directives, jule::Str _172153_tag) {
	{
		auto expr = _172122_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1da3914c5:;
		if (it != expr_end) {
			jule::Ptr<_1d64ea7ed_Directive> _172217_dr = *it;
			{
				if (((*((*(_172217_dr))._field_Tag))._field_Kind == _172153_tag)) {
					return true;;
				};
			}
			_iter_next_1da3914c5:;
			++it;
			goto _iter_begin_1da3914c5;
		}
		_iter_end_1da3914c5:;
	};
	return false;;
}



inline jule::Bool _1d669391e_canGetPtr(jule::Ptr<_1d664721e_Data>* _173019_d) {
	{
		
		if ((!((*((*(_173019_d))))._field_Lvalue)) || _1d6647ae3_IsConst((*(_173019_d)).ptr())) {
			_case_begin_1da3924e8:;
			{
				return false;;
			}
		}
		else if ((_1d667b473_Fn((*((*(_173019_d))))._field_Kind.ptr()) != nullptr) || (_1d667a939_Enum((*((*(_173019_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1da392570:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1da391849:;
			{
				return true;;
			}
		}
		_match_end_1da3917c2:;
	};
}



inline jule::Bool _1d6693c60_isValidForSptrType(jule::Ptr<_1d6677a35_TypeKind>* _174228_t) {
	jule::Ptr<_1d652005e_StructIns> _17439_s = _1d667b709_Struct((*(_174228_t)).ptr());;
	if ((((_17439_s != nullptr) && ((*(_17439_s))._field_Decl != nullptr)) && (*((*(_17439_s))._field_Decl))._field_Binded)) {
		return false;;
	};
	return true;;
}



inline jule::Bool _1d6694029_isValidForRef(jule::Ptr<_1d6677a35_TypeKind>* _175123_t) {
	return (_1d667b473_Fn((*(_175123_t)).ptr()) == nullptr);;
}



inline jule::Bool _1d66942e3_isBuiltinStrConvertable(jule::Ptr<_1d6677a35_TypeKind>* _175433_t) {
	return ((((!(_1d6678d99_Void((*(_175433_t)).ptr()))) && (_1d667b473_Fn((*(_175433_t)).ptr()) == nullptr)) && (_1d667beac_Tup((*(_175433_t)).ptr()) == nullptr)) && (!(_1d667c243_comptime((*(_175433_t)).ptr()))));;
}



inline jule::Str _1d66945ac_buildLinkPathByTokens(jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _175827_tokens) {
	if ((((*(_175827_tokens)).len() == 1LL) && ((*((*(_175827_tokens))[0LL]))._field_Id == static_cast<jule::U64>(31LLU)))) {
		return jule::Str::lit("std::unsafe", 11);;
	};
	jule::I64 _17629_n = 0LL;;
	{
		auto expr = _175827_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1da39839a:;
		if (it != expr_end) {
			jule::Ptr<_1d64d5cd3_Token> *_176312_token = it;
			{
				_17629_n+=(*((*(_176312_token))))._field_Kind.len();
				_17629_n+=2LL;
			}
			_iter_next_1da39839a:;
			++it;
			goto _iter_begin_1da39839a;
		}
		_iter_end_1da39839a:;
	};
	_1e01838bc_StrBuilder _17679_s = static__1e0183b64_New(_17629_n);;
	{
		auto expr = _175827_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1da398b92:;
		if (it != expr_end) {
			jule::I64 _17689_i = it - expr->begin();
			jule::Ptr<_1d64d5cd3_Token> *_176812_token = it;
			{
				_1e018c6ea_WriteStr(&_17679_s, (*((*(_176812_token))))._field_Kind);
				if ((((*(_175827_tokens)).len() - _17689_i) > 1LL)) {
					_1e018c6ea_WriteStr(&_17679_s, jule::Str::lit("::", 2));
				};
			}
			_iter_next_1da398b92:;
			++it;
			_17689_i++;
			goto _iter_begin_1da398b92;
		}
		_iter_end_1da398b92:;
	};
	return _1e018cee2_Str(&_17679_s);;
}



inline jule::Ptr<_1d668060e_Prim> _1d6694953_buildPrimType(jule::Str _177718_kind) {
	return jule::new_ptr<_1d668060e_Prim>(_1d668060e_Prim{._field_Kind=_177718_kind});;
}



inline void _1d6695008_applyImplicitCast(jule::Ptr<_1d6677a35_TypeKind>* _180527_dest, jule::Ptr<_1d664721e_Data>* _180549_d) {
	if (_1d6678b13_IsNil((*((*(_180549_d))))._field_Kind.ptr())) {
		return;;
	};
	jule::Ptr<_1d668060e_Prim> _18095_destPrim = _1d667a186_Prim((*(_180527_dest)).ptr());;
	jule::Ptr<_1d668060e_Prim> _18105_prim = _1d667a186_Prim((*((*(_180549_d))))._field_Kind.ptr());;
	if ((_18095_destPrim != nullptr)) {
		if (_1d6683d2c_IsAny(_18095_destPrim.ptr())) {
			if (((_18105_prim == nullptr) || (!(_1d6683d2c_IsAny(_18105_prim.ptr()))))) {
				_1d6672c94_applyCastKind(_180549_d, _180527_dest);
			};
			return;;
		};
		if (((((((!(_1d667887c_Binded((*((*(_180549_d))))._field_Kind.ptr()))) && (!((*((*((*(_180549_d))))._field_Kind))._field_Variadic))) && (!((*((*(_180549_d))))._field_Lvalue))) && (!(_1d6647ae3_IsConst((*(_180549_d)).ptr())))) && (_18105_prim != nullptr)) && _1d4320c30_IsNum((*(_18105_prim))._field_Kind))) {
			_1d6672c94_applyCastKind(_180549_d, _180527_dest);
		};
		return;;
	};
	jule::Ptr<_1d654554b_Trait> _18295_dt = _1d667b990_Trait((*(_180527_dest)).ptr());;
	if ((_18295_dt != nullptr)) {
		jule::Ptr<_1d654554b_Trait> _18319_bt = _1d667b990_Trait((*((*(_180549_d))))._field_Kind.ptr());;
		if (((_18319_bt == nullptr) || (_18319_bt != _18295_dt))) {
			_1d66729a8_applyCastKindModel(_180549_d, _180527_dest);
			return;;
		};
	};
	if (((_1d667abc0_TypeEnum((*(_180527_dest)).ptr()) != nullptr) && (_1d667abc0_TypeEnum((*((*(_180549_d))))._field_Kind.ptr()) == nullptr))) {
		_1d66729a8_applyCastKindModel(_180549_d, _180527_dest);
		return;;
	};
}



inline jule::Bool _1d66952c2_validTypeForXof(jule::Ptr<_1d6677a35_TypeKind>* _184425_t) {
	return ((!(_1d6678d99_Void((*(_184425_t)).ptr()))) && (_1d667b473_Fn((*(_184425_t)).ptr()) == nullptr));;
}



inline __jule_tuple_x_1d6641d73_SymbolTable__jule_tuple_s_1e0235a7e_Log _1d669835d_buildSymbols(jule::Ptr<_1d64e9423_Ast>* _1622_ast, jule::Trait<_1d65929e9_Importer>* _1638_importer, jule::Ptr<_1d653e424_symbolBuilder> _1662_owner) {
	__jule_tuple_x_1d6641d73_SymbolTable__jule_tuple_s_1e0235a7e_Log __jule_func_result;
	jule::Ptr<_1d653e424_symbolBuilder> _179_sb = jule::new_ptr<_1d653e424_symbolBuilder>(_1d653e424_symbolBuilder{._field_owner=_1662_owner, ._field_importer=(*(_1638_importer)), ._field_ast=(*(_1622_ast)), });;
	_1d6544913_build(_179_sb);
	if (((*(_179_sb))._field_errors.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*(_179_sb))._field_table;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = (*(_179_sb))._field_errors;
	return __jule_func_result;;
}



inline __jule_tuple_x_1d6598835_Package__jule_tuple_s_1e0235a7e_Log _1d66987d1_analyzePackage(jule::Slice<jule::Ptr<_1d64e9423_Ast>>* _3024_files, jule::Trait<_1d65929e9_Importer>* _3044_importer, jule::I64* _3065_flags) {
	__jule_tuple_x_1d6598835_Package__jule_tuple_s_1e0235a7e_Log __jule_func_result;
	jule::Slice<jule::Ptr<_1d6641d73_SymbolTable>> _329_tables = jule::Slice<jule::Ptr<_1d6641d73_SymbolTable>>::alloc(0LL, (*(_3024_files)).len());;
	{
		auto expr = _3024_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1da4bc1b1:;
		if (it != expr_end) {
			jule::Ptr<_1d64e9423_Ast> _3317_f = *it;
			{
				jule::Ptr<_1d6641d73_SymbolTable> _3413_table;;
				jule::Slice<_1e0235a7e_Log> _3424_errors;;
				({
					__jule_tuple_x_1d6641d73_SymbolTable__jule_tuple_s_1e0235a7e_Log __jule_assign_result = _1d669835d_buildSymbols(&(_3317_f), _3044_importer, nullptr);
					_3413_table = __jule_assign_result.__jule_result_arg0;
					_3424_errors = __jule_assign_result.__jule_result_arg1;
				});
				if ((_3424_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _3424_errors;
					return __jule_func_result;;
				};
				{ jule::Slice<jule::Ptr<_1d6641d73_SymbolTable>> &__jule_push_dest = _329_tables; __jule_push_dest.push(_3413_table); };
			}
			_iter_next_1da4bc1b1:;
			++it;
			goto _iter_begin_1da4bc1b1;
		}
		_iter_end_1da4bc1b1:;
	};
	jule::Ptr<_1d65b5c81_Sema> _419_sema = jule::new_ptr<_1d65b5c81_Sema>(_1d65b5c81_Sema{._field_flags=(*(_3065_flags)), ._field_meta=jule::new_ptr<_1d65b5159_commonSemaMeta>()});;
	_1d65d5520_check(_419_sema, &(_329_tables));
	if (((*(_419_sema))._field_errors.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = (*(_419_sema))._field_errors;
		return __jule_func_result;;
	};
	jule::Ptr<_1d6598835_Package> _509_pkg = jule::new_ptr<_1d6598835_Package>(_1d6598835_Package{._field_Files=(*(_419_sema))._field_files});;
	__jule_func_result.__jule_result_arg0 = _509_pkg;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_x_1d6598835_Package__jule_tuple_s_1e0235a7e_Log _1d6698c10_AnalyzePackage(jule::Slice<jule::Ptr<_1d64e9423_Ast>> _7423_files, jule::Trait<_1d65929e9_Importer> _7442_importer, jule::I64 _7462_flags) {
	__jule_tuple_x_1d6598835_Package__jule_tuple_s_1e0235a7e_Log __jule_func_result;
	if ((_7423_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_1d6598835_Package> _789_package;;
	jule::Slice<_1e0235a7e_Log> _7822_logs;;
	({
		__jule_tuple_x_1d6598835_Package__jule_tuple_s_1e0235a7e_Log __jule_assign_result = _1d66987d1_analyzePackage(&(_7423_files), &(_7442_importer), &(_7462_flags));
		_789_package = __jule_assign_result.__jule_result_arg0;
		_7822_logs = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _789_package;
	__jule_func_result.__jule_result_arg1 = _7822_logs;
	return __jule_func_result;;
}



inline jule::Ptr<_1d6535173_FnIns> _1d6759375_findBuiltinFunc(jule::Str* _2521_ident) {
	{
		auto &_match_expr{ (*(_2521_ident)) };
		
		if (_match_expr == jule::Str::lit("out", 3)) {
			_case_begin_1da4c6583:;
			{
				static jule::Ptr<_1d6535173_FnIns> _2820_f = jule::new_ptr<_1d6535173_FnIns>(_1d6535173_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d664721e_Data>(jule::Ptr<_1d6648e13_Eval>*,jule::Ptr<_1d650443e_FnCallExpr>*,jule::Ptr<_1d664721e_Data>*)>(_1d67604d0_builtinCallerOut), });;
				return _2820_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("outln", 5)) {
			_case_begin_1da4c675e:;
			{
				static jule::Ptr<_1d6535173_FnIns> _3120_f = jule::new_ptr<_1d6535173_FnIns>(_1d6535173_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d664721e_Data>(jule::Ptr<_1d6648e13_Eval>*,jule::Ptr<_1d650443e_FnCallExpr>*,jule::Ptr<_1d664721e_Data>*)>(_1d676090e_builtinCallerOutln), });;
				return _3120_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("new", 3)) {
			_case_begin_1da4c67d6:;
			{
				static jule::Ptr<_1d6535173_FnIns> _3420_f = jule::new_ptr<_1d6535173_FnIns>(_1d6535173_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d664721e_Data>(jule::Ptr<_1d6648e13_Eval>*,jule::Ptr<_1d650443e_FnCallExpr>*,jule::Ptr<_1d664721e_Data>*)>(_1d6760d3d_builtinCallerNew), });;
				return _3420_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("panic", 5)) {
			_case_begin_1da4c685d:;
			{
				static jule::Ptr<_1d6535173_FnIns> _3720_f = jule::new_ptr<_1d6535173_FnIns>(_1d6535173_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d664721e_Data>(jule::Ptr<_1d6648e13_Eval>*,jule::Ptr<_1d650443e_FnCallExpr>*,jule::Ptr<_1d664721e_Data>*)>(_1d6761426_builtinCallerPanic), });;
				return _3720_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("make", 4)) {
			_case_begin_1da4c68d5:;
			{
				static jule::Ptr<_1d6535173_FnIns> _4020_f = jule::new_ptr<_1d6535173_FnIns>(_1d6535173_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d664721e_Data>(jule::Ptr<_1d6648e13_Eval>*,jule::Ptr<_1d650443e_FnCallExpr>*,jule::Ptr<_1d664721e_Data>*)>(_1d6761855_builtinCallerMake), });;
				return _4020_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("append", 6)) {
			_case_begin_1da4c6b38:;
			{
				static jule::Ptr<_1d6535173_FnIns> _4320_f = jule::new_ptr<_1d6535173_FnIns>(_1d6535173_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d664721e_Data>(jule::Ptr<_1d6648e13_Eval>*,jule::Ptr<_1d650443e_FnCallExpr>*,jule::Ptr<_1d664721e_Data>*)>(_1d6761c84_builtinCallerAppend), });;
				return _4320_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("copy", 4)) {
			_case_begin_1da4c6bb0:;
			{
				static jule::Ptr<_1d6535173_FnIns> _4620_f = jule::new_ptr<_1d6535173_FnIns>(_1d6535173_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d664721e_Data>(jule::Ptr<_1d6648e13_Eval>*,jule::Ptr<_1d650443e_FnCallExpr>*,jule::Ptr<_1d664721e_Data>*)>(_1d676269c_builtinCallerCopy), });;
				return _4620_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("len", 3)) {
			_case_begin_1da4c6c37:;
			{
				static jule::Ptr<_1d6535173_FnIns> _4920_f = jule::new_ptr<_1d6535173_FnIns>(_1d6535173_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d664721e_Data>(jule::Ptr<_1d6648e13_Eval>*,jule::Ptr<_1d650443e_FnCallExpr>*,jule::Ptr<_1d664721e_Data>*)>(_1d6763d41_builtinCallerLen), });;
				return _4920_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("cap", 3)) {
			_case_begin_1da4c6cae:;
			{
				static jule::Ptr<_1d6535173_FnIns> _5220_f = jule::new_ptr<_1d6535173_FnIns>(_1d6535173_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d664721e_Data>(jule::Ptr<_1d6648e13_Eval>*,jule::Ptr<_1d650443e_FnCallExpr>*,jule::Ptr<_1d664721e_Data>*)>(_1d67645e4_builtinCallerCap), });;
				return _5220_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("delete", 6)) {
			_case_begin_1da4c6d8b:;
			{
				static jule::Ptr<_1d6535173_FnIns> _5520_f = jule::new_ptr<_1d6535173_FnIns>(_1d6535173_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d664721e_Data>(jule::Ptr<_1d6648e13_Eval>*,jule::Ptr<_1d650443e_FnCallExpr>*,jule::Ptr<_1d664721e_Data>*)>(_1d676500c_builtinCallerDelete), });;
				return _5520_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("assert", 6)) {
			_case_begin_1da4c6e13:;
			{
				static jule::Ptr<_1d6535173_FnIns> _5820_f = jule::new_ptr<_1d6535173_FnIns>(_1d6535173_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d664721e_Data>(jule::Ptr<_1d6648e13_Eval>*,jule::Ptr<_1d650443e_FnCallExpr>*,jule::Ptr<_1d664721e_Data>*)>(_1d676543b_builtinCallerAssert), });;
				return _5820_f;;
			}
		}
		else {
			_case_begin_1da4c66e8:;
			{
				return nullptr;;
			}
		}
		_match_end_1da4c6693:;
	};
}



inline jule::Ptr<_1d6676c43_TypeAlias> _1d6759683_primTypeAlias(jule::Ptr<_1d6677a35_TypeKind>* _6523_k) {
	return jule::new_ptr<_1d6676c43_TypeAlias>(_1d6676c43_TypeAlias{._field_Public=true, ._field_Kind=jule::new_ptr<_1d667ec07_TypeSymbol>(_1d667ec07_TypeSymbol{._field_Kind=(*(_6523_k))}), });;
}



inline jule::Ptr<_1d65d9018_Var> _1d675d28b_findBuiltinVar(jule::Str* _9320_ident) {
	{
		auto &_match_expr{ (*(_9320_ident)) };
		
		if (_match_expr == jule::Str::lit("nil", 3)) {
			_case_begin_1da4ce1c3:;
			{
				static jule::Ptr<_1d65d9018_Var> _9620_v = jule::new_ptr<_1d65d9018_Var>(_1d65d9018_Var{._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Kind=jule::new_ptr<_1d667ec07_TypeSymbol>(_1d667ec07_TypeSymbol{._field_Kind=_1d6759991_primNil}), ._field_Value=jule::new_ptr<_1d6648363_Value>(_1d6648363_Value{._field_Data=jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Constant=static__1d432246d_NewNil()})}), });;
				return _9620_v;;
			}
		}
		else if (_match_expr == jule::Str::lit("true", 4)) {
			_case_begin_1da4ce239:;
			{
				static jule::Ptr<_1d65d9018_Var> _11120_v = jule::new_ptr<_1d65d9018_Var>(_1d65d9018_Var{._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Kind=(*(_1d675d4bc_findBuiltinTypeAlias(jule::Str::lit("bool", 4))))._field_Kind, ._field_Value=jule::new_ptr<_1d6648363_Value>(_1d6648363_Value{._field_Data=jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Constant=static__1d4321bcb_NewBool(true)})}), });;
				return _11120_v;;
			}
		}
		else if (_match_expr == jule::Str::lit("false", 5)) {
			_case_begin_1da4ce2a0:;
			{
				static jule::Ptr<_1d65d9018_Var> _12420_v = jule::new_ptr<_1d65d9018_Var>(_1d65d9018_Var{._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Kind=(*(_1d675d4bc_findBuiltinTypeAlias(jule::Str::lit("bool", 4))))._field_Kind, ._field_Value=jule::new_ptr<_1d6648363_Value>(_1d6648363_Value{._field_Data=jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Constant=static__1d4321bcb_NewBool(false)})}), });;
				return _12420_v;;
			}
		}
		else {
			_case_begin_1da4ce15c:;
			{
				return nullptr;;
			}
		}
		_match_end_1da4ce06e:;
	};
}



inline jule::Ptr<_1d6676c43_TypeAlias> _1d675d4bc_findBuiltinTypeAlias(jule::Str _14125_ident) {
	{
		auto &_match_expr{ _14125_ident };
		
		if (_match_expr == jule::Str::lit("any", 3)) {
			_case_begin_1da4ce899:;
			{
				static jule::Ptr<_1d6676c43_TypeAlias> _14420_t = _1d6759683_primTypeAlias(&(_1d675a068_primAny));;
				return _14420_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("str", 3)) {
			_case_begin_1da4d4085:;
			{
				static jule::Ptr<_1d6676c43_TypeAlias> _14720_t = _1d6759683_primTypeAlias(&(_1d675a376_primStr));;
				return _14720_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("bool", 4)) {
			_case_begin_1da4d42e9:;
			{
				static jule::Ptr<_1d6676c43_TypeAlias> _15020_t = _1d6759683_primTypeAlias(&(_1d675a640_primBool));;
				return _15020_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1da4d4360:;
			{
				static jule::Ptr<_1d6676c43_TypeAlias> _15320_t = _1d6759683_primTypeAlias(&(_1d675a909_primUintptr));;
				return _15320_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4)) {
			_case_begin_1da4d43c6:;
			{
				static jule::Ptr<_1d6676c43_TypeAlias> _15620_t = _1d6759683_primTypeAlias(&(_1d675abc3_primUint));;
				return _15620_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1da4d443c:;
			{
				static jule::Ptr<_1d6676c43_TypeAlias> _15920_t = _1d6759683_primTypeAlias(&(_1d675b09c_primInt));;
				return _15920_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1da4d452a:;
			{
				static jule::Ptr<_1d6676c43_TypeAlias> _16220_t = _1d6759683_primTypeAlias(&(_1d675b366_primI8));;
				return _16220_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1da4d4591:;
			{
				static jule::Ptr<_1d6676c43_TypeAlias> _16520_t = _1d6759683_primTypeAlias(&(_1d675b630_primI16));;
				return _16520_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1da4d4607:;
			{
				static jule::Ptr<_1d6676c43_TypeAlias> _16820_t = _1d6759683_primTypeAlias(&(_1d675bbb3_primI64));;
				return _16820_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1da4d466d:;
			{
				static jule::Ptr<_1d6676c43_TypeAlias> _17120_t = _1d6759683_primTypeAlias(&(_1d675c246_primU16));;
				return _17120_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1da4d46e5:;
			{
				static jule::Ptr<_1d6676c43_TypeAlias> _17420_t = _1d6759683_primTypeAlias(&(_1d675c510_primU32));;
				return _17420_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1da4d476c:;
			{
				static jule::Ptr<_1d6676c43_TypeAlias> _17720_t = _1d6759683_primTypeAlias(&(_1d675c983_primU64));;
				return _17720_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1da4d47e4:;
			{
				static jule::Ptr<_1d6676c43_TypeAlias> _18020_t = _1d6759683_primTypeAlias(&(_1d675cc4c_primF32));;
				return _18020_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1da4d486b:;
			{
				static jule::Ptr<_1d6676c43_TypeAlias> _18320_t = _1d6759683_primTypeAlias(&(_1d675d016_primF64));;
				return _18320_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("byte", 4) || _match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1da4d48e3:;
			{
				static jule::Ptr<_1d6676c43_TypeAlias> _18620_t = _1d6759683_primTypeAlias(&(_1d675be7c_primU8));;
				return _18620_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("rune", 4) || _match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1da4d496a:;
			{
				static jule::Ptr<_1d6676c43_TypeAlias> _18920_t = _1d6759683_primTypeAlias(&(_1d675b8e9_primI32));;
				return _18920_t;;
			}
		}
		else {
			_case_begin_1da4d3ddc:;
			{
				return nullptr;;
			}
		}
		_match_end_1da4d267c:;
	};
}



inline jule::Any _1d675d786_findBuiltinDef(jule::Str* _19620_ident) {
	jule::Ptr<_1d65d9018_Var> _1979_v = _1d675d28b_findBuiltinVar(_19620_ident);;
	if ((_1979_v != nullptr)) {
		return jule::Any(_1979_v, &__jule_any_type8);;
	};
	jule::Ptr<_1d6535173_FnIns> _2019_f = _1d6759375_findBuiltinFunc(_19620_ident);;
	if ((_2019_f != nullptr)) {
		return jule::Any(_2019_f, &__jule_any_type7);;
	};
	jule::Ptr<_1d6676c43_TypeAlias> _2059_ta = _1d675d4bc_findBuiltinTypeAlias((*(_19620_ident)));;
	if ((_2059_ta != nullptr)) {
		return jule::Any(_2059_ta, &__jule_any_type66);;
	};
	return nullptr;;
}



inline jule::Any _1d675da50_findBuiltinDefStdDebug(jule::Str* _21228_ident) {
	{
		auto &_match_expr{ (*(_21228_ident)) };
		
		if (_match_expr == jule::Str::lit("Out", 3)) {
			_case_begin_1da4de0a1:;
			{
				static jule::Ptr<_1d6535173_FnIns> _21520_f = jule::new_ptr<_1d6535173_FnIns>(_1d6535173_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d664721e_Data>(jule::Ptr<_1d6648e13_Eval>*,jule::Ptr<_1d650443e_FnCallExpr>*,jule::Ptr<_1d664721e_Data>*)>(_1d676d92d_builtinCallerStdDebugOut), });;
				return jule::Any(_21520_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Outln", 5)) {
			_case_begin_1da4de117:;
			{
				static jule::Ptr<_1d6535173_FnIns> _21820_f = jule::new_ptr<_1d6535173_FnIns>(_1d6535173_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d664721e_Data>(jule::Ptr<_1d6648e13_Eval>*,jule::Ptr<_1d650443e_FnCallExpr>*,jule::Ptr<_1d664721e_Data>*)>(_1d676dd5c_builtinCallerStdDebugOutln), });;
				return jule::Any(_21820_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1da4de03a:;
			{
				return nullptr;;
			}
		}
		_match_end_1da4dcde6:;
	};
}



inline jule::Any _1d675dd19_findBuiltinDefStdMem(jule::Str* _22526_ident) {
	{
		auto &_match_expr{ (*(_22526_ident)) };
		
		if (_match_expr == jule::Str::lit("SizeOf", 6)) {
			_case_begin_1da4e08aa:;
			{
				static jule::Ptr<_1d6535173_FnIns> _22820_f = jule::new_ptr<_1d6535173_FnIns>(_1d6535173_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d664721e_Data>(jule::Ptr<_1d6648e13_Eval>*,jule::Ptr<_1d650443e_FnCallExpr>*,jule::Ptr<_1d664721e_Data>*)>(_1d67674c6_builtinCallerStdMemSizeOf), });;
				return jule::Any(_22820_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("AlignOf", 7)) {
			_case_begin_1da4e0921:;
			{
				static jule::Ptr<_1d6535173_FnIns> _23120_f = jule::new_ptr<_1d6535173_FnIns>(_1d6535173_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d664721e_Data>(jule::Ptr<_1d6648e13_Eval>*,jule::Ptr<_1d650443e_FnCallExpr>*,jule::Ptr<_1d664721e_Data>*)>(_1d6767905_builtinCallerStdMemAlignOf), });;
				return jule::Any(_23120_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Free", 4)) {
			_case_begin_1da4e0987:;
			{
				static jule::Ptr<_1d6535173_FnIns> _23420_f = jule::new_ptr<_1d6535173_FnIns>(_1d6535173_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d664721e_Data>(jule::Ptr<_1d6648e13_Eval>*,jule::Ptr<_1d650443e_FnCallExpr>*,jule::Ptr<_1d664721e_Data>*)>(_1d6767d34_builtinCallerStdMemFree), });;
				return jule::Any(_23420_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1da4e0019:;
			{
				return nullptr;;
			}
		}
		_match_end_1da4deeb4:;
	};
}



inline jule::Any _1d675e1b0_findBuiltinDefStdComptime(jule::Str* _24131_ident) {
	{
		auto &_match_expr{ (*(_24131_ident)) };
		
		if (_match_expr == jule::Str::lit("TypeOf", 6)) {
			_case_begin_1da4e2c64:;
			{
				static jule::Ptr<_1d6535173_FnIns> _24420_f = jule::new_ptr<_1d6535173_FnIns>(_1d6535173_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d664721e_Data>(jule::Ptr<_1d6648e13_Eval>*,jule::Ptr<_1d650443e_FnCallExpr>*,jule::Ptr<_1d664721e_Data>*)>(_1d6765a13_builtinCallerStdComptimeTypeOf), });;
				return jule::Any(_24420_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("ValueOf", 7)) {
			_case_begin_1da4e2cca:;
			{
				static jule::Ptr<_1d6535173_FnIns> _24720_f = jule::new_ptr<_1d6535173_FnIns>(_1d6535173_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d664721e_Data>(jule::Ptr<_1d6648e13_Eval>*,jule::Ptr<_1d650443e_FnCallExpr>*,jule::Ptr<_1d664721e_Data>*)>(_1d6765dcb_builtinCallerStdComptimeValueOf), });;
				return jule::Any(_24720_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Line", 4)) {
			_case_begin_1da4e2d41:;
			{
				static jule::Ptr<_1d6535173_FnIns> _25020_f = jule::new_ptr<_1d6535173_FnIns>(_1d6535173_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d664721e_Data>(jule::Ptr<_1d6648e13_Eval>*,jule::Ptr<_1d650443e_FnCallExpr>*,jule::Ptr<_1d664721e_Data>*)>(_1d676630a_builtinCallerStdComptimeLine), });;
				return jule::Any(_25020_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("File", 4)) {
			_case_begin_1da4e2db8:;
			{
				static jule::Ptr<_1d6535173_FnIns> _25320_f = jule::new_ptr<_1d6535173_FnIns>(_1d6535173_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d664721e_Data>(jule::Ptr<_1d6648e13_Eval>*,jule::Ptr<_1d650443e_FnCallExpr>*,jule::Ptr<_1d664721e_Data>*)>(_1d6766739_builtinCallerStdComptimeFile), });;
				return jule::Any(_25320_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Files", 5)) {
			_case_begin_1da4e321a:;
			{
				static jule::Ptr<_1d6535173_FnIns> _25620_f = jule::new_ptr<_1d6535173_FnIns>(_1d6535173_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d664721e_Data>(jule::Ptr<_1d6648e13_Eval>*,jule::Ptr<_1d650443e_FnCallExpr>*,jule::Ptr<_1d664721e_Data>*)>(_1d6766b68_builtinCallerStdComptimeFiles), });;
				return jule::Any(_25620_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("TypeAlias", 9)) {
			_case_begin_1da4e3292:;
			{
				static jule::Ptr<_1d6535173_FnIns> _25920_f = jule::new_ptr<_1d6535173_FnIns>(_1d6535173_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d664721e_Data>(jule::Ptr<_1d6648e13_Eval>*,jule::Ptr<_1d650443e_FnCallExpr>*,jule::Ptr<_1d664721e_Data>*)>(_1d6767097_builtinCallerStdComptimeTypeAlias), });;
				return jule::Any(_25920_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1da4e23c3:;
			{
				return nullptr;;
			}
		}
		_match_end_1da4e236d:;
	};
}



inline jule::Any _1d675e479_findBuiltinDefStdJuleIntegrated(jule::Str* _26637_ident) {
	{
		auto &_match_expr{ (*(_26637_ident)) };
		
		if (_match_expr == jule::Str::lit("ToStr", 5)) {
			_case_begin_1da4e6eaa:;
			{
				static jule::Ptr<_1d6535173_FnIns> _26920_f = jule::new_ptr<_1d6535173_FnIns>(_1d6535173_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d664721e_Data>(jule::Ptr<_1d6648e13_Eval>*,jule::Ptr<_1d650443e_FnCallExpr>*,jule::Ptr<_1d664721e_Data>*)>(_1d676d0c0_builtinCallerStdJuleIntegratedToStr), });;
				return jule::Any(_26920_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Emit", 4)) {
			_case_begin_1da4e7021:;
			{
				static jule::Ptr<_1d6535173_FnIns> _27220_f = jule::new_ptr<_1d6535173_FnIns>(_1d6535173_FnIns{._field_Decl=jule::new_ptr<_1d653226e_Fn>(_1d653226e_Fn{._field_Generics=jule::Slice<jule::Ptr<_1d65085db_GenericDecl>>::alloc(1LL, 1LL), }), ._field_caller=jule::Fn<jule::Ptr<_1d664721e_Data>(jule::Ptr<_1d6648e13_Eval>*,jule::Ptr<_1d650443e_FnCallExpr>*,jule::Ptr<_1d664721e_Data>*)>(_1d676d4ee_builtinCallerStdJuleIntegratedEmit), });;
				return jule::Any(_27220_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1da4e368d:;
			{
				return nullptr;;
			}
		}
		_match_end_1da4e3638:;
	};
}



inline jule::Any _1d675e7ed_findPackageBuiltinDef(jule::Str* _28427_linkPath, jule::Str* _28443_ident) {
	{
		auto &_match_expr{ (*(_28427_linkPath)) };
		
		if (_match_expr == jule::Str::lit("std::comptime", 13)) {
			_case_begin_1da4e92cb:;
			{
				return _1d675e1b0_findBuiltinDefStdComptime(_28443_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std::debug", 10)) {
			_case_begin_1da4e9342:;
			{
				return _1d675da50_findBuiltinDefStdDebug(_28443_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std::mem", 8)) {
			_case_begin_1da4e93a8:;
			{
				return _1d675dd19_findBuiltinDefStdMem(_28443_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std::jule::integrated", 21)) {
			_case_begin_1da4e941e:;
			{
				return _1d675e479_findBuiltinDefStdJuleIntegrated(_28443_ident);;
			}
		}
		else {
			_case_begin_1da4e90cd:;
			{
				return nullptr;;
			}
		}
		_match_end_1da4e9078:;
	};
}



inline jule::Ptr<_1d664721e_Data> _1d675ec2c_builtinCallerCommonPlain(jule::Ptr<_1d6648e13_Eval>* _29934_e, jule::Ptr<_1d650443e_FnCallExpr>* _29949_fc, jule::Ptr<_1d664721e_Data>* _29971_d) {
	jule::Ptr<_1d6535173_FnIns> _3009_f = _1d667b473_Fn((*((*(_29971_d))))._field_Kind.ptr());;
	_1d663762c_fnCallArgChecker _3029_fcac = _1d663762c_fnCallArgChecker{._field_e=(*(_29934_e)), ._field_args=(*((*(_29949_fc))))._field_Args, ._field_errorToken=(*((*(_29949_fc))))._field_Token, ._field_f=_3009_f, ._field_dynamicAnnotation=false, };;
	if ((!(_1d6639bd4_check(&_3029_fcac)))) {
		return nullptr;;
	};
	jule::Ptr<_1d65264d8_FnCallExprModel> _3139_model = jule::new_ptr<_1d65264d8_FnCallExprModel>(_1d65264d8_FnCallExprModel{._field_Token=(*((*(_29949_fc))))._field_Token, ._field_Func=_3009_f, ._field_Expr=(*((*(_29971_d))))._field_Model, ._field_Args=_3029_fcac._field_argModels, });;
	if (((*(_3009_f))._field_Result == nullptr)) {
		(*(_29971_d))=_1d6672ea3_buildVoidData();
	} else {
		(*(_29971_d))=jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=(*(_3009_f))._field_Result, });
	};
	(*((*(_29971_d))))._field_Model=jule::Any(_3139_model, &__jule_any_type34);
	return (*(_29971_d));;
}



inline jule::Ptr<_1d664721e_Data> _1d67600a1_builtinCallerError(jule::Ptr<_1d6648e13_Eval>* _33228_e, jule::Ptr<_1d650443e_FnCallExpr>* _33243_fc) {
	if (((*((*(_33243_fc))))._field_Args.len() < 1LL)) {
		_1d6649463_pushErr((*(_33228_e)).ptr(), (*((*(_33243_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("err", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_33243_fc))))._field_Args.len() > 1LL)) {
		_1d6649463_pushErr((*(_33228_e)).ptr(), (*((*((*(_33243_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("error", 5), &__jule_any_type4)}));
	};
	jule::Ptr<_1d664721e_Data> _3409_expr = _1d6667173_evalExpr((*(_33228_e)), (*((*(_33243_fc))))._field_Args[0LL]);;
	if ((_3409_expr == nullptr)) {
		return nullptr;;
	};
	if (_1d66475c6_IsNil(_3409_expr.ptr())) {
		_1d6649463_pushErr((*(_33228_e)).ptr(), (*((*((*(_33243_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("you cannot call error function with nil", 39), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1d664721e_Data> _3499_d = _1d6672ea3_buildVoidData();;
	(*(_3499_d))._field_Model=jule::Any(jule::new_ptr<_1d652cd19_BuiltinErrorCallExprModel>(_1d652cd19_BuiltinErrorCallExprModel{._field_Err=_3409_expr}), &__jule_any_type23);
	return _3499_d;;
}



inline jule::Ptr<_1d664721e_Data> _1d67604d0_builtinCallerOut(jule::Ptr<_1d6648e13_Eval>* _35426_e, jule::Ptr<_1d650443e_FnCallExpr>* _35441_fc, jule::Ptr<_1d664721e_Data>* ) {
	if (((*((*(_35441_fc))))._field_Args.len() < 1LL)) {
		_1d6649463_pushErr((*(_35426_e)).ptr(), (*((*(_35441_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("v", 1), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_35441_fc))))._field_Args.len() > 1LL)) {
		_1d6649463_pushErr((*(_35426_e)).ptr(), (*((*((*(_35441_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("out", 3), &__jule_any_type4)}));
	};
	jule::Ptr<_1d664721e_Data> _3639_expr = _1d6667173_evalExpr((*(_35426_e)), (*((*(_35441_fc))))._field_Args[0LL]);;
	if ((_3639_expr == nullptr)) {
		return nullptr;;
	};
	if ((!(_1d66942e3_isBuiltinStrConvertable(&((*(_3639_expr))._field_Kind))))) {
		_1d6649463_pushErr((*(_35426_e)).ptr(), (*((*((*(_35441_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1d664721e_Data> _3739_d = _1d6672ea3_buildVoidData();;
	(*(_3739_d))._field_Model=jule::Any(jule::new_ptr<_1d652a0d0_BuiltinOutCallExprModel>(_1d652a0d0_BuiltinOutCallExprModel{._field_Expr=(*(_3639_expr))._field_Model, }), &__jule_any_type27);
	return _3739_d;;
}



inline jule::Ptr<_1d664721e_Data> _1d676090e_builtinCallerOutln(jule::Ptr<_1d6648e13_Eval>* _37828_e, jule::Ptr<_1d650443e_FnCallExpr>* _37843_fc, jule::Ptr<_1d664721e_Data>* _37865_d) {
	(*(_37865_d))=_1d67604d0_builtinCallerOut(_37828_e, _37843_fc, _37865_d);
	if (((*(_37865_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*(_37865_d))))._field_Model=jule::Any(jule::new_ptr<_1d652a4a9_BuiltinOutlnCallExprModel>(_1d652a4a9_BuiltinOutlnCallExprModel{._field_Expr=(*((*((*(_37865_d))))._field_Model.cast_ptr<_1d652a0d0_BuiltinOutCallExprModel>(&__jule_any_type27)))._field_Expr, }), &__jule_any_type28);
	return (*(_37865_d));;
}



inline jule::Ptr<_1d664721e_Data> _1d6760d3d_builtinCallerNew(jule::Ptr<_1d6648e13_Eval>* _39026_e, jule::Ptr<_1d650443e_FnCallExpr>* _39041_fc, jule::Ptr<_1d664721e_Data>* _39063_d) {
	if (((*((*(_39041_fc))))._field_Args.len() < 1LL)) {
		_1d6649463_pushErr((*(_39026_e)).ptr(), (*((*(_39041_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_39041_fc))))._field_Args.len() > 2LL)) {
		_1d6649463_pushErr((*(_39026_e)).ptr(), (*((*((*(_39041_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("new", 3), &__jule_any_type4)}));
	};
	jule::Ptr<_1d664721e_Data> _3999_t = _1d666635e_evalExprKind((*(_39026_e)), (*((*((*(_39041_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_3999_t == nullptr)) {
		return nullptr;;
	};
	if ((!((*(_3999_t))._field_Decl))) {
		_1d6649463_pushErr((*(_39026_e)).ptr(), (*((*((*(_39041_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((!(_1d6693c60_isValidForSptrType(&((*(_3999_t))._field_Kind))))) {
		jule::Ptr<_1d652005e_StructIns> _41013_s = _1d667b709_Struct((*(_3999_t))._field_Kind.ptr());;
		if ((((_41013_s != nullptr) && ((*(_41013_s))._field_Decl != nullptr)) && (*((*(_41013_s))._field_Decl))._field_Binded)) {
			_1d6649463_pushErr((*(_39026_e)).ptr(), (*((*((*(_39041_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("binded structures cannot supports reference counting", 52), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	(*((*(_39063_d))))._field_Kind=jule::new_ptr<_1d6677a35_TypeKind>(_1d6677a35_TypeKind{._field_Kind=jule::Trait<_1d667757e_Kind>(jule::new_ptr<_1d668413a_Sptr>(_1d668413a_Sptr{._field_Elem=(*(_3999_t))._field_Kind}), 21)});
	if (((*((*(_39041_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1d6677a35_TypeKind> _42413_old = (*((*(_39026_e))))._field_prefix;;
		(*((*(_39026_e))))._field_prefix=(*(_3999_t))._field_Kind;
		jule::Ptr<_1d664721e_Data> _42713_init = _1d6667173_evalExpr((*(_39026_e)), (*((*(_39041_fc))))._field_Args[1LL]);;
		(*((*(_39026_e))))._field_prefix=_42413_old;
		if ((_42713_init != nullptr)) {
			jule::Ptr<_1d64d5cd3_Token> _43217_token = (*((*((*(_39041_fc))))._field_Args[1LL]))._field_Token;;
			;
			_1d65c5763_checkValidityForInitExpr((*((*(_39026_e))))._field_s, (!((*((*(_39026_e))))._field_immutable)), false, &((*(_3999_t))._field_Kind), &(_42713_init), &(_43217_token));
			_1d65c13c9_checkAssignType((*((*(_39026_e))))._field_s, false, &((*(_3999_t))._field_Kind), &(_42713_init), _43217_token);
			(*((*(_39063_d))))._field_Model=jule::Any(jule::new_ptr<_1d652a883_BuiltinNewCallExprModel>(_1d652a883_BuiltinNewCallExprModel{._field_Kind=(*(_3999_t))._field_Kind, ._field_Init=(*(_42713_init))._field_Model}), &__jule_any_type113);
		};
	} else {
		(*((*(_39063_d))))._field_Model=jule::Any(jule::new_ptr<_1d652a883_BuiltinNewCallExprModel>(_1d652a883_BuiltinNewCallExprModel{._field_Kind=(*(_3999_t))._field_Kind, }), &__jule_any_type113);
	};
	return (*(_39063_d));;
}



inline jule::Ptr<_1d664721e_Data> _1d6761426_builtinCallerPanic(jule::Ptr<_1d6648e13_Eval>* _45228_e, jule::Ptr<_1d650443e_FnCallExpr>* _45243_fc, jule::Ptr<_1d664721e_Data>* ) {
	if (((*((*(_45243_fc))))._field_Args.len() < 1LL)) {
		_1d6649463_pushErr((*(_45228_e)).ptr(), (*((*(_45243_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("message", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_45243_fc))))._field_Args.len() > 1LL)) {
		_1d6649463_pushErr((*(_45228_e)).ptr(), (*((*((*(_45243_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("panic", 5), &__jule_any_type4)}));
	};
	jule::Ptr<_1d664721e_Data> _4619_expr = _1d6667173_evalExpr((*(_45228_e)), (*((*(_45243_fc))))._field_Args[0LL]);;
	if ((_4619_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1d667a186_Prim((*(_4619_expr))._field_Kind.ptr()) == nullptr) || (!(_1d6683a96_IsStr(_1d667a186_Prim((*(_4619_expr))._field_Kind.ptr()).ptr()))))) {
		_1d6649463_pushErr((*(_45228_e)).ptr(), (*((*(_45243_fc))))._field_Token, jule::Str::lit("panic function only accepts strings", 35), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1d664721e_Data> _4709_d = _1d6672ea3_buildVoidData();;
	(*(_4709_d))._field_Model=jule::Any(jule::new_ptr<_1d652ac5c_BuiltinPanicCallExprModel>(_1d652ac5c_BuiltinPanicCallExprModel{._field_Token=(*((*(_45243_fc))))._field_Token, ._field_Expr=(*(_4619_expr))._field_Model}), &__jule_any_type29);
	return _4709_d;;
}



inline jule::Ptr<_1d664721e_Data> _1d6761855_builtinCallerMake(jule::Ptr<_1d6648e13_Eval>* _47827_e, jule::Ptr<_1d650443e_FnCallExpr>* _47842_fc, jule::Ptr<_1d664721e_Data>* _47864_d) {
	if (((*((*(_47842_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_47842_fc))))._field_Args.len() == 1LL)) {
			_1d6649463_pushErr((*(_47827_e)).ptr(), (*((*(_47842_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("size", 4), &__jule_any_type4)}));
			return nullptr;;
		};
		_1d6649463_pushErr((*(_47827_e)).ptr(), (*((*(_47842_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type, size", 10), &__jule_any_type4)}));
		return nullptr;;
	} else if (((*((*(_47842_fc))))._field_Args.len() > 3LL)) {
		_1d6649463_pushErr((*(_47827_e)).ptr(), (*((*((*(_47842_fc))))._field_Args[3LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("make", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1d664721e_Data> _4919_t = _1d666635e_evalExprKind((*(_47827_e)), (*((*((*(_47842_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_4919_t == nullptr)) {
		return nullptr;;
	};
	if ((!((*(_4919_t))._field_Decl))) {
		_1d6649463_pushErr((*(_47827_e)).ptr(), (*((*((*(_47842_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_1d667b1dc_Slc((*(_4919_t))._field_Kind.ptr()) == nullptr)) {
		_1d6649463_pushErr((*(_47827_e)).ptr(), (*((*((*(_47842_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1d6677ded_Str((*(_4919_t))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("make", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	(*((*(_47864_d))))._field_Kind=(*(_4919_t))._field_Kind;
	jule::Ptr<_1d664721e_Data> _5069_lenExpr = _1d6667173_evalExpr(_1d65c0a27_evalp((*((*(_47827_e))))._field_s, (*((*(_47827_e))))._field_lookup, (*(_4919_t))._field_Kind), (*((*(_47842_fc))))._field_Args[1LL]);;
	if ((_5069_lenExpr == nullptr)) {
		return nullptr;;
	};
	_1d665314d_checkIntegerIndexingByData((*(_47827_e)).ptr(), &(_5069_lenExpr), (*((*((*(_47842_fc))))._field_Args[1LL]))._field_Token);
	jule::Ptr<_1d652b6b9_BuiltinMakeCallExprModel> _5139_model = jule::new_ptr<_1d652b6b9_BuiltinMakeCallExprModel>(_1d652b6b9_BuiltinMakeCallExprModel{._field_Kind=(*(_4919_t))._field_Kind, ._field_Len=(*(_5069_lenExpr))._field_Model, });;
	(*((*(_47864_d))))._field_Model=jule::Any(_5139_model, &__jule_any_type114);
	if (((*((*(_47842_fc))))._field_Args.len() == 3LL)) {
		jule::Ptr<_1d664721e_Data> _51913_capExpr = _1d6667173_evalExpr(_1d65c0a27_evalp((*((*(_47827_e))))._field_s, (*((*(_47827_e))))._field_lookup, (*(_4919_t))._field_Kind), (*((*(_47842_fc))))._field_Args[2LL]);;
		if ((_51913_capExpr == nullptr)) {
			return (*(_47864_d));;
		};
		_1d665314d_checkIntegerIndexingByData((*(_47827_e)).ptr(), &(_51913_capExpr), (*((*((*(_47842_fc))))._field_Args[2LL]))._field_Token);
		(*(_5139_model))._field_Cap=(*(_51913_capExpr))._field_Model;
	};
	return (*(_47864_d));;
}



inline jule::Ptr<_1d664721e_Data> _1d6761c84_builtinCallerAppend(jule::Ptr<_1d6648e13_Eval>* _52929_e, jule::Ptr<_1d650443e_FnCallExpr>* _52944_fc, jule::Ptr<_1d664721e_Data>* _52966_d) {
	if (((*((*(_52944_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_52944_fc))))._field_Args.len() == 1LL)) {
			_1d6649463_pushErr((*(_52929_e)).ptr(), (*((*(_52944_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("src", 3), &__jule_any_type4)}));
			return nullptr;;
		};
		_1d6649463_pushErr((*(_52929_e)).ptr(), (*((*(_52944_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("src, values", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1d664721e_Data> _5399_t = _1d6667173_evalExpr((*(_52929_e)), (*((*(_52944_fc))))._field_Args[0LL]);;
	if ((_5399_t == nullptr)) {
		return nullptr;;
	};
	if ((_1d667b1dc_Slc((*(_5399_t))._field_Kind.ptr()) == nullptr)) {
		_1d6649463_pushErr((*(_52929_e)).ptr(), (*((*((*(_52944_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1d6535173_FnIns> _5499_f = jule::new_ptr<_1d6535173_FnIns>(_1d6535173_FnIns{._field_Params=jule::Slice<jule::Ptr<_1d65341c7_ParamIns>>::make({jule::new_ptr<_1d65341c7_ParamIns>(_1d65341c7_ParamIns{._field_Decl=jule::new_ptr<_1d653079a_Param>(_1d653079a_Param{._field_Mutable=true, }), ._field_Kind=(*(_5399_t))._field_Kind}),jule::new_ptr<_1d65341c7_ParamIns>(_1d65341c7_ParamIns{._field_Decl=jule::new_ptr<_1d653079a_Param>(_1d653079a_Param{._field_Mutable=true, ._field_Variadic=true, }), ._field_Kind=(*(_1d667b1dc_Slc((*(_5399_t))._field_Kind.ptr())))._field_Elem})}), ._field_Result=(*(_5399_t))._field_Kind, ._field_caller=jule::Fn<jule::Ptr<_1d664721e_Data>(jule::Ptr<_1d6648e13_Eval>*,jule::Ptr<_1d650443e_FnCallExpr>*,jule::Ptr<_1d664721e_Data>*)>(_1d675ec2c_builtinCallerCommonPlain), });;
	(*((*(_52966_d))))._field_Kind=jule::new_ptr<_1d6677a35_TypeKind>(_1d6677a35_TypeKind{._field_Kind=jule::Trait<_1d667757e_Kind>(_5499_f, 1)});
	(*(_52966_d))=_1d675ec2c_builtinCallerCommonPlain(_52929_e, _52944_fc, _52966_d);
	if (((*(_52966_d)) != nullptr)) {
		jule::Ptr<_1d65264d8_FnCallExprModel> _57313_model = (*((*(_52966_d))))._field_Model.cast_ptr<_1d65264d8_FnCallExprModel>(&__jule_any_type34);;
		(*((*(_52966_d))))._field_Model=jule::Any(jule::new_ptr<_1d652ba93_BuiltinAppendCallExprModel>(_1d652ba93_BuiltinAppendCallExprModel{._field_Dest=(*(_57313_model))._field_Args[0LL], ._field_Elements=(*(_57313_model))._field_Args[1LL]}), &__jule_any_type26);
	};
	return (*(_52966_d));;
}



inline jule::Ptr<_1d664721e_Data> _1d676226d_callerCopySlice(jule::Ptr<_1d664721e_Data>* _58225_dest, jule::Ptr<_1d6648e13_Eval>* _58243_e, jule::Ptr<_1d650443e_FnCallExpr>* _58258_fc, jule::Ptr<_1d664721e_Data>* _58280_d) {
	if ((!((*((*(_58225_dest))))._field_Mutable))) {
		_1d6649463_pushErr((*(_58243_e)).ptr(), (*((*((*(_58258_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1d664721e_Data> _5879_src = _1d6667173_evalExpr((*(_58243_e)), (*((*(_58258_fc))))._field_Args[1LL]);;
	if ((_5879_src == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1d6684b0d_Slc> _5919_slc = _1d667b1dc_Slc((*(_5879_src))._field_Kind.ptr());;
	if ((_5919_slc != nullptr)) {
		if (((!((*(_5879_src))._field_Mutable)) && _1d66793b6_Mutable((*(_5919_slc))._field_Elem.ptr()))) {
			_1d6649463_pushErr((*(_58243_e)).ptr(), (*((*((*(_58258_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
		};
		if ((!(_1d667823e_Equal((*((*(_58225_dest))))._field_Kind, (*(_5879_src))._field_Kind)))) {
			_1d6649463_pushErr((*(_58243_e)).ptr(), (*((*((*(_58258_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1d6677ded_Str((*((*(_58225_dest))))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1d6677ded_Str((*(_5879_src))._field_Kind.ptr()), &__jule_any_type4)}));
		};
	} else {
		jule::Ptr<_1d668060e_Prim> _6019_destPrim = _1d667a186_Prim((*(_1d667b1dc_Slc((*((*(_58225_dest))))._field_Kind.ptr())))._field_Elem.ptr());;
		jule::Ptr<_1d668060e_Prim> _6029_prim = _1d667a186_Prim((*(_5879_src))._field_Kind.ptr());;
		if (((((_6019_destPrim == nullptr) || (_6029_prim == nullptr)) || (!(_1d6683a96_IsStr(_6029_prim.ptr())))) || (!(_1d6682006_IsU8(_6019_destPrim.ptr()))))) {
			_1d6649463_pushErr((*(_58243_e)).ptr(), (*((*((*(_58258_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1d6677ded_Str((*((*(_58225_dest))))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1d6677ded_Str((*(_5879_src))._field_Kind.ptr()), &__jule_any_type4)}));
		};
	};
	(*((*(_58280_d))))._field_Kind=_1d6640b1e_lenKind();
	(*((*(_58280_d))))._field_Model=jule::Any(jule::new_ptr<_1d652c940_BuiltinCopyCallExprModel>(_1d652c940_BuiltinCopyCallExprModel{._field_Dest=(*(_58225_dest)), ._field_Src=_5879_src}), &__jule_any_type31);
	return (*(_58280_d));;
}



inline jule::Ptr<_1d664721e_Data> _1d676269c_builtinCallerCopy(jule::Ptr<_1d6648e13_Eval>* _61627_e, jule::Ptr<_1d650443e_FnCallExpr>* _61642_fc, jule::Ptr<_1d664721e_Data>* _61664_d) {
	if (((*((*(_61642_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_61642_fc))))._field_Args.len() == 1LL)) {
			_1d6649463_pushErr((*(_61627_e)).ptr(), (*((*(_61642_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("src", 3), &__jule_any_type4)}));
			return nullptr;;
		};
		_1d6649463_pushErr((*(_61627_e)).ptr(), (*((*(_61642_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("src, values", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_61642_fc))))._field_Args.len() > 2LL)) {
		_1d6649463_pushErr((*(_61627_e)).ptr(), (*((*((*(_61642_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("copy", 4), &__jule_any_type4)}));
	};
	jule::Ptr<_1d664721e_Data> _6299_dest = _1d6667173_evalExpr((*(_61627_e)), (*((*(_61642_fc))))._field_Args[0LL]);;
	{
		
		if ((_6299_dest == nullptr)) {
			_case_begin_1da5473e5:;
			{
				return nullptr;;
			}
		}
		else if ((_1d667b1dc_Slc((*(_6299_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1da5480b6:;
			{
				return _1d676226d_callerCopySlice(&(_6299_dest), _61627_e, _61642_fc, _61664_d);;
			}
		}
		else {
			_case_begin_1da54704e:;
			{
				_1d6649463_pushErr((*(_61627_e)).ptr(), (*((*((*(_61642_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1da5455be:;
	};
}



inline jule::Ptr<_1d664721e_Data> _1d6762a21_callerLenSlice(jule::Ptr<_1d664721e_Data>* _64124_expr, jule::Ptr<_1d664721e_Data>* _64142_d) {
	(*((*(_64142_d))))._field_Kind=_1d6640b1e_lenKind();
	(*((*(_64142_d))))._field_Model=jule::Any(jule::new_ptr<_1d652bd90_BuiltinLenCallExprModel>(_1d652bd90_BuiltinLenCallExprModel{._field_Expr=(*(_64124_expr))}), &__jule_any_type115);
	return (*(_64142_d));;
}



inline jule::Ptr<_1d664721e_Data> _1d6762d95_callerLenMap(jule::Ptr<_1d664721e_Data>* _64922_expr, jule::Ptr<_1d664721e_Data>* _64940_d) {
	(*((*(_64940_d))))._field_Kind=_1d6640b1e_lenKind();
	(*((*(_64940_d))))._field_Model=jule::Any(jule::new_ptr<_1d652bd90_BuiltinLenCallExprModel>(_1d652bd90_BuiltinLenCallExprModel{._field_Expr=(*(_64922_expr))}), &__jule_any_type115);
	return (*(_64940_d));;
}



inline jule::Ptr<_1d664721e_Data> _1d6763219_callerLenArr(jule::Ptr<_1d664721e_Data>* _65722_expr, jule::Ptr<_1d664721e_Data>* _65740_d) {
	(*((*(_65740_d))))._field_Kind=_1d6640b1e_lenKind();
	(*((*(_65740_d))))._field_Constant=static__1d4321648_NewI64(static_cast<jule::I64>(static_cast<jule::I64>((*(_1d667ae56_Arr((*((*(_65722_expr))))._field_Kind.ptr())))._field_N)));
	(*((*(_65740_d))))._field_Model=jule::Any((*((*(_65740_d))))._field_Constant, &__jule_any_type19);
	return (*(_65740_d));;
}



inline jule::Ptr<_1d664721e_Data> _1d676358d_callerLenStr(jule::Ptr<_1d664721e_Data>* _66422_expr, jule::Ptr<_1d664721e_Data>* _66440_d) {
	(*((*(_66440_d))))._field_Kind=_1d6640b1e_lenKind();
	if (_1d6647ae3_IsConst((*(_66422_expr)).ptr())) {
		(*((*(_66440_d))))._field_Constant=static__1d4321648_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1d4323381_ReadStr((*((*(_66422_expr))))._field_Constant.ptr()).len())));
		(*((*(_66440_d))))._field_Model=jule::Any((*((*(_66440_d))))._field_Constant, &__jule_any_type19);
	} else {
		(*((*(_66440_d))))._field_Model=jule::Any(jule::new_ptr<_1d652bd90_BuiltinLenCallExprModel>(_1d652bd90_BuiltinLenCallExprModel{._field_Expr=(*(_66422_expr))}), &__jule_any_type115);
	};
	return (*(_66440_d));;
}



inline jule::Ptr<_1d664721e_Data> _1d6763912_callerLenComptime(jule::Ptr<_1d664721e_Data>* _67727_d, jule::I64 _67737_n) {
	(*((*(_67727_d))))._field_Kind=_1d6640b1e_lenKind();
	(*((*(_67727_d))))._field_Constant=static__1d4321648_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_67737_n)));
	(*((*(_67727_d))))._field_Model=jule::Any((*((*(_67727_d))))._field_Constant, &__jule_any_type19);
	return (*(_67727_d));;
}



inline jule::Ptr<_1d664721e_Data> _1d6763d41_builtinCallerLen(jule::Ptr<_1d6648e13_Eval>* _68426_e, jule::Ptr<_1d650443e_FnCallExpr>* _68441_fc, jule::Ptr<_1d664721e_Data>* _68463_d) {
	if (((*((*(_68441_fc))))._field_Args.len() < 1LL)) {
		_1d6649463_pushErr((*(_68426_e)).ptr(), (*((*(_68441_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("obj", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_68441_fc))))._field_Args.len() > 1LL)) {
		_1d6649463_pushErr((*(_68426_e)).ptr(), (*((*((*(_68441_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("len", 3), &__jule_any_type4)}));
	};
	jule::Ptr<_1d664721e_Data> _6929_dest = _1d6666d32_evalExpr1((*(_68426_e)), (*((*(_68441_fc))))._field_Args[0LL]);;
	{
		
		if ((_6929_dest == nullptr)) {
			_case_begin_1da5544bd:;
			{
				return nullptr;;
			}
		}
		else if ((_1d667b1dc_Slc((*(_6929_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1da55518e:;
			{
				return _1d6762a21_callerLenSlice(&(_6929_dest), _68463_d);;
			}
		}
		else if ((_1d667ae56_Arr((*(_6929_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1da555205:;
			{
				return _1d6763219_callerLenArr(&(_6929_dest), _68463_d);;
			}
		}
		else if ((_1d667bc26_Map((*(_6929_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1da55526b:;
			{
				return _1d6762d95_callerLenMap(&(_6929_dest), _68463_d);;
			}
		}
		else if (((_1d667a186_Prim((*(_6929_dest))._field_Kind.ptr()) != nullptr) && _1d6683a96_IsStr(_1d667a186_Prim((*(_6929_dest))._field_Kind.ptr()).ptr()))) {
			_case_begin_1da55418d:;
			{
				return _1d676358d_callerLenStr(&(_6929_dest), _68463_d);;
			}
		}
		else if ((_1d667c4c9_comptimeStructFields((*(_6929_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1da554204:;
			{
				return _1d6763912_callerLenComptime(_68463_d, static_cast<jule::I64>((*(_1d667c4c9_comptimeStructFields((*(_6929_dest))._field_Kind.ptr())))._field_fields.len()));;
			}
		}
		else if ((_1d667c9e6_comptimeEnumFields((*(_6929_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1da55426a:;
			{
				return _1d6763912_callerLenComptime(_68463_d, static_cast<jule::I64>((*(_1d667c9e6_comptimeEnumFields((*(_6929_dest))._field_Kind.ptr())))._field_fields.len()));;
			}
		}
		else if ((_1d667d7b6_comptimeTypeInfos((*(_6929_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1da5542d1:;
			{
				return _1d6763912_callerLenComptime(_68463_d, static_cast<jule::I64>((*(_1d667d7b6_comptimeTypeInfos((*(_6929_dest))._field_Kind.ptr())))._field_types.len()));;
			}
		}
		else if ((_1d667d013_comptimeParams((*(_6929_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1da555337:;
			{
				return _1d6763912_callerLenComptime(_68463_d, static_cast<jule::I64>((*(_1d667d013_comptimeParams((*(_6929_dest))._field_Kind.ptr())))._field_params.len()));;
			}
		}
		else if ((_1d667dcd3_comptimeStatics((*(_6929_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1da55539d:;
			{
				return _1d6763912_callerLenComptime(_68463_d, static_cast<jule::I64>((*(_1d667dcd3_comptimeStatics((*(_6929_dest))._field_Kind.ptr())))._field_fields.len()));;
			}
		}
		else if ((_1d667e81c_comptimeFiles((*(_6929_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1da555414:;
			{
				return _1d6763912_callerLenComptime(_68463_d, static_cast<jule::I64>((*(_1d667e81c_comptimeFiles((*(_6929_dest))._field_Kind.ptr())))._field_files.len()));;
			}
		}
		else {
			_case_begin_1da554127:;
			{
				_1d6649463_pushErr((*(_68426_e)).ptr(), (*((*((*(_68441_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1da552697:;
	};
}



inline jule::Ptr<_1d664721e_Data> _1d67641b5_callerCapSlice(jule::Ptr<_1d664721e_Data>* _72224_expr, jule::Ptr<_1d664721e_Data>* _72242_d) {
	(*((*(_72242_d))))._field_Kind=_1d6640b1e_lenKind();
	(*((*(_72242_d))))._field_Model=jule::Any(jule::new_ptr<_1d652c18c_BuiltinCapCallExprModel>(_1d652c18c_BuiltinCapCallExprModel{._field_Expr=(*(_72224_expr))}), &__jule_any_type116);
	return (*(_72242_d));;
}



inline jule::Ptr<_1d664721e_Data> _1d67645e4_builtinCallerCap(jule::Ptr<_1d6648e13_Eval>* _73026_e, jule::Ptr<_1d650443e_FnCallExpr>* _73041_fc, jule::Ptr<_1d664721e_Data>* _73063_d) {
	if (((*((*(_73041_fc))))._field_Args.len() < 1LL)) {
		_1d6649463_pushErr((*(_73026_e)).ptr(), (*((*(_73041_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("obj", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_73041_fc))))._field_Args.len() > 1LL)) {
		_1d6649463_pushErr((*(_73026_e)).ptr(), (*((*((*(_73041_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("cap", 3), &__jule_any_type4)}));
	};
	jule::Ptr<_1d664721e_Data> _7389_dest = _1d6667173_evalExpr((*(_73026_e)), (*((*(_73041_fc))))._field_Args[0LL]);;
	{
		
		if ((_7389_dest == nullptr)) {
			_case_begin_1da564115:;
			{
				return nullptr;;
			}
		}
		else if ((*(_7389_dest))._field_Decl) {
			_case_begin_1da564cd6:;
			{
				_1d6649463_pushErr((*(_73026_e)).ptr(), (*((*((*(_73041_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1d667b1dc_Slc((*(_7389_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1da564d4c:;
			{
				return _1d67641b5_callerCapSlice(&(_7389_dest), _73063_d);;
			}
		}
		else {
			_case_begin_1da563c6e:;
			{
				_1d6649463_pushErr((*(_73026_e)).ptr(), (*((*((*(_73041_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1da5622de:;
	};
}



inline jule::Ptr<_1d664721e_Data> _1d6764acd_callerDeleteMap(jule::Ptr<_1d6648e13_Eval>* _75325_e, jule::Ptr<_1d650443e_FnCallExpr>* _75340_fc, jule::Ptr<_1d664721e_Data>* _75362_expr, jule::Ptr<_1d664721e_Data>* _75380_d) {
	if ((!((*((*(_75362_expr))))._field_Mutable))) {
		_1d6649463_pushErr((*(_75325_e)).ptr(), (*((*((*(_75340_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	(*(_75380_d))=_1d6672ea3_buildVoidData();
	jule::Ptr<_1d652c566_BuiltinDeleteCallExprModel> _7589_model = jule::new_ptr<_1d652c566_BuiltinDeleteCallExprModel>(_1d652c566_BuiltinDeleteCallExprModel{._field_Dest=(*(_75362_expr)), });;
	if (((*((*(_75340_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1d664721e_Data> _76213_key = _1d6667173_evalExpr((*(_75325_e)), (*((*(_75340_fc))))._field_Args[1LL]);;
		{
			
			if ((_76213_key == nullptr)) {
				_case_begin_1da5709d4:;
				{
					return nullptr;;
				}
			}
			else if ((*(_76213_key))._field_Decl) {
				_case_begin_1da56e5c6:;
				{
					_1d6649463_pushErr((*(_75325_e)).ptr(), (*((*((*(_75340_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			else {
				_case_begin_1da56e560:;
				{
					;
					jule::Ptr<_1d6677a35_TypeKind> _77117_keyType = (*(_1d667bc26_Map((*((*(_75362_expr))))._field_Kind.ptr())))._field_Key;;
					if ((!(_1d65c13c9_checkAssignType((*((*(_75325_e))))._field_s, false, &(_77117_keyType), &(_76213_key), (*((*((*(_75340_fc))))._field_Args[1LL]))._field_Token)))) {
						return nullptr;;
					};
				}
			}
			_match_end_1da56e4e9:;
		};
		(*(_7589_model))._field_Key=_76213_key;
	};
	(*((*(_75380_d))))._field_Model=jule::Any(_7589_model, &__jule_any_type32);
	return (*(_75380_d));;
}



inline jule::Ptr<_1d664721e_Data> _1d676500c_builtinCallerDelete(jule::Ptr<_1d6648e13_Eval>* _78229_e, jule::Ptr<_1d650443e_FnCallExpr>* _78244_fc, jule::Ptr<_1d664721e_Data>* _78266_d) {
	if (((*((*(_78244_fc))))._field_Args.len() < 1LL)) {
		_1d6649463_pushErr((*(_78229_e)).ptr(), (*((*(_78244_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("map", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_78244_fc))))._field_Args.len() > 2LL)) {
		_1d6649463_pushErr((*(_78229_e)).ptr(), (*((*((*(_78244_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("delete", 6), &__jule_any_type4)}));
	};
	jule::Ptr<_1d664721e_Data> _7909_dest = _1d6667173_evalExpr((*(_78229_e)), (*((*(_78244_fc))))._field_Args[0LL]);;
	{
		
		if ((_7909_dest == nullptr)) {
			_case_begin_1da5768ca:;
			{
				return nullptr;;
			}
		}
		else if ((*(_7909_dest))._field_Decl) {
			_case_begin_1da57759b:;
			{
				_1d6649463_pushErr((*(_78229_e)).ptr(), (*((*((*(_78244_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1d667bc26_Map((*(_7909_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1da577612:;
			{
				return _1d6764acd_callerDeleteMap(_78229_e, _78244_fc, &(_7909_dest), _78266_d);;
			}
		}
		else {
			_case_begin_1da576534:;
			{
				_1d6649463_pushErr((*(_78229_e)).ptr(), (*((*((*(_78244_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1da574aa4:;
	};
}



inline jule::Ptr<_1d664721e_Data> _1d676543b_builtinCallerAssert(jule::Ptr<_1d6648e13_Eval>* _80529_e, jule::Ptr<_1d650443e_FnCallExpr>* _80544_fc, jule::Ptr<_1d664721e_Data>* ) {
	if (((*((*(_80544_fc))))._field_Args.len() < 1LL)) {
		_1d6649463_pushErr((*(_80529_e)).ptr(), (*((*(_80544_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("expr", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_80544_fc))))._field_Args.len() > 2LL)) {
		_1d6649463_pushErr((*(_80529_e)).ptr(), (*((*((*(_80544_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("assert", 6), &__jule_any_type4)}));
	};
	jule::Ptr<_1d664721e_Data> _8149_expr = _1d6667173_evalExpr((*(_80529_e)), (*((*(_80544_fc))))._field_Args[0LL]);;
	if ((_8149_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1d667a186_Prim((*(_8149_expr))._field_Kind.ptr()) == nullptr) || (!(_1d6683810_IsBool(_1d667a186_Prim((*(_8149_expr))._field_Kind.ptr()).ptr()))))) {
		_1d6649463_pushErr((*(_80529_e)).ptr(), (*((*(_80544_fc))))._field_Token, jule::Str::lit("assertion requires boolean expression", 37), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1d652b213_BuiltinAssertCallExprModel> _8239_model = jule::new_ptr<_1d652b213_BuiltinAssertCallExprModel>(_1d652b213_BuiltinAssertCallExprModel{._field_Token=(*((*(_80544_fc))))._field_Token, ._field_Expr=(*(_8149_expr))._field_Model, ._field_Log=jule::Str::lit("assertion failed", 16)});;
	if (((*((*(_80544_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1d664721e_Data> _83113_log = _1d6667173_evalExpr((*(_80529_e)), (*((*(_80544_fc))))._field_Args[1LL]);;
		if ((_83113_log == nullptr)) {
			return nullptr;;
		};
		if ((((!(_1d6647ae3_IsConst(_83113_log.ptr()))) || (_1d667a186_Prim((*(_83113_log))._field_Kind.ptr()) == nullptr)) || (!(_1d6683a96_IsStr(_1d667a186_Prim((*(_83113_log))._field_Kind.ptr()).ptr()))))) {
			_1d6649463_pushErr((*(_80529_e)).ptr(), (*((*((*(_80544_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("const str", 9), &__jule_any_type4),jule::Any(_1d6677ded_Str((*(_83113_log))._field_Kind.ptr()), &__jule_any_type4)}));
			return nullptr;;
		};
		(*(_8239_model))._field_Log=_1d4323381_ReadStr((*(_83113_log))._field_Constant.ptr());
	};
	jule::Ptr<_1d664721e_Data> _8449_d = _1d6672ea3_buildVoidData();;
	(*(_8449_d))._field_Model=jule::Any(_8239_model, &__jule_any_type30);
	return _8449_d;;
}



inline jule::Ptr<_1d664721e_Data> _1d6765a13_builtinCallerStdComptimeTypeOf(jule::Ptr<_1d6648e13_Eval>* _84940_e, jule::Ptr<_1d650443e_FnCallExpr>* _84955_fc, jule::Ptr<_1d664721e_Data>* ) {
	if (((*((*(_84955_fc))))._field_Args.len() < 1LL)) {
		_1d6649463_pushErr((*(_84940_e)).ptr(), (*((*(_84955_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_84955_fc))))._field_Args.len() > 1LL)) {
		_1d6649463_pushErr((*(_84940_e)).ptr(), (*((*((*(_84955_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("TypeOf", 6), &__jule_any_type4)}));
	};
	jule::Ptr<_1d664721e_Data> _8589_d = _1d666635e_evalExprKind((*(_84940_e)), (*((*((*(_84955_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_8589_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1d6535173_FnIns> _8625_f = _1d667b473_Fn((*(_8589_d))._field_Kind.ptr());;
	if ((_8625_f != nullptr)) {
		if (_1d6536608_IsBuiltin(_8625_f.ptr())) {
			_1d6649463_pushErr((*(_84940_e)).ptr(), (*((*((*(_84955_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("comptime::TypeOf is not supports type @", 39), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("<built-in fn>", 13), &__jule_any_type4)}));
			return nullptr;;
		};
		if (((*(_8625_f))._field_Generics.len() != (*((*(_8625_f))._field_Decl))._field_Generics.len())) {
			_1d6649463_pushErr((*(_84940_e)).ptr(), (*((*((*(_84955_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	jule::Ptr<_1d652005e_StructIns> _8735_s = _1d667b709_Struct((*(_8589_d))._field_Kind.ptr());;
	if (((_8735_s != nullptr) && ((*(_8735_s))._field_Generics.len() != (*((*(_8735_s))._field_Decl))._field_Generics.len()))) {
		_1d6649463_pushErr((*(_84940_e)).ptr(), (*((*((*(_84955_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (_1d667c243_comptime((*(_8589_d))._field_Kind.ptr())) {
		_1d6649463_pushErr((*(_84940_e)).ptr(), (*((*((*(_84955_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("comptime::TypeOf is not supports type @", 39), jule::Slice<jule::Any>::make({jule::Any(_1d6677ded_Str((*(_8589_d))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1d65698a0_buildComptimeTypeInfoData(&((*((*(_84940_e))))._field_s), &((*(_8589_d))._field_Kind));;
}



inline jule::Ptr<_1d664721e_Data> _1d6765dcb_builtinCallerStdComptimeValueOf(jule::Ptr<_1d6648e13_Eval>* _88541_e, jule::Ptr<_1d650443e_FnCallExpr>* _88556_fc, jule::Ptr<_1d664721e_Data>* ) {
	if (((*((*(_88556_fc))))._field_Args.len() < 1LL)) {
		_1d6649463_pushErr((*(_88541_e)).ptr(), (*((*(_88556_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("expr", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_88556_fc))))._field_Args.len() > 1LL)) {
		_1d6649463_pushErr((*(_88541_e)).ptr(), (*((*((*(_88556_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("ValueOf", 7), &__jule_any_type4)}));
	};
	jule::Ptr<_1d664721e_Data> _8939_d = _1d6667173_evalExpr((*(_88541_e)), (*((*(_88556_fc))))._field_Args[0LL]);;
	if ((_8939_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1d6640e71_isGoodValueToInfer(&(_8939_d))))) {
		_1d6649463_pushErr((*(_88541_e)).ptr(), (*((*((*(_88556_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1d6677ded_Str((*(_8939_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("ValueOf", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1d6569ad1_buildComptimeValue(&(_8939_d));;
}



inline jule::Ptr<_1d664721e_Data> _1d676630a_builtinCallerStdComptimeLine(jule::Ptr<_1d6648e13_Eval>* _90538_e, jule::Ptr<_1d650443e_FnCallExpr>* _90553_fc, jule::Ptr<_1d664721e_Data>* ) {
	if (((*((*(_90553_fc))))._field_Args.len() > 0LL)) {
		_1d6649463_pushErr((*(_90538_e)).ptr(), (*((*((*(_90553_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Line", 4), &__jule_any_type4)}));
	};
	jule::Ptr<_1d4321208_Const> _9099_constant = static__1d4321648_NewI64(static_cast<jule::I64>(static_cast<jule::I64>((*((*((*(_90553_fc))))._field_Token))._field_Row)));;
	return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=_1d675b09c_primInt, ._field_Model=jule::Any(_9099_constant, &__jule_any_type19), ._field_Constant=_9099_constant});;
}



inline jule::Ptr<_1d664721e_Data> _1d6766739_builtinCallerStdComptimeFile(jule::Ptr<_1d6648e13_Eval>* _91738_e, jule::Ptr<_1d650443e_FnCallExpr>* _91753_fc, jule::Ptr<_1d664721e_Data>* ) {
	if (((*((*(_91753_fc))))._field_Args.len() > 0LL)) {
		_1d6649463_pushErr((*(_91738_e)).ptr(), (*((*((*(_91753_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("File", 4), &__jule_any_type4)}));
	};
	return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=jule::new_ptr<_1d6677a35_TypeKind>(_1d6677a35_TypeKind{._field_Kind=jule::Trait<_1d667757e_Kind>(jule::new_ptr<_1d656745d_comptimeFile>(_1d656745d_comptimeFile{._field_file=(*((*((*(_91738_e))))._field_s))._field_file}), 18)}), });;
}



inline jule::Ptr<_1d664721e_Data> _1d6766b68_builtinCallerStdComptimeFiles(jule::Ptr<_1d6648e13_Eval>* _93039_e, jule::Ptr<_1d650443e_FnCallExpr>* _93054_fc, jule::Ptr<_1d664721e_Data>* ) {
	if (((*((*(_93054_fc))))._field_Args.len() > 0LL)) {
		_1d6649463_pushErr((*(_93039_e)).ptr(), (*((*((*(_93054_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Files", 5), &__jule_any_type4)}));
	};
	return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=jule::new_ptr<_1d6677a35_TypeKind>(_1d6677a35_TypeKind{._field_Kind=jule::Trait<_1d667757e_Kind>(jule::new_ptr<_1d6565d63_comptimeFiles>(_1d6565d63_comptimeFiles{._field_files=(*((*((*(_93039_e))))._field_s))._field_files}), 17)}), });;
}



inline jule::Ptr<_1d664721e_Data> _1d6767097_builtinCallerStdComptimeTypeAlias(jule::Ptr<_1d6648e13_Eval>* _94343_e, jule::Ptr<_1d650443e_FnCallExpr>* _94358_fc, jule::Ptr<_1d664721e_Data>* ) {
	if (((*((*(_94358_fc))))._field_Args.len() > 2LL)) {
		_1d6649463_pushErr((*(_94343_e)).ptr(), (*((*((*(_94358_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("TypeAlias", 9), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_94358_fc))))._field_Args.len() == 0LL)) {
		_1d6649463_pushErr((*(_94343_e)).ptr(), (*((*(_94358_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("ident, type", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_94358_fc))))._field_Args.len() == 1LL)) {
		_1d6649463_pushErr((*(_94343_e)).ptr(), (*((*(_94358_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*((*(_94358_fc))))._field_Args[0LL]))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1da59de1e:;
			{
				goto _match_end_1da5a010c;
			}
		}
		else {
			_case_begin_1da5a0173:;
			{
				_1d6649463_pushErr((*(_94343_e)).ptr(), (*((*((*(_94358_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				_1d66497c6_pushSuggestion((*(_94343_e)).ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1da5a010c:;
	};
	jule::Ptr<_1d64d5cd3_Token> _9649_ident = (*((*((*((*(_94358_fc))))._field_Args[0LL]))._field_Kind.cast_ptr<_1d6502140_IdentExpr>(&__jule_any_type79)))._field_Token;;
	{
		auto &_match_expr{ (*((*(_94343_e))))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1da5a2373:;
			{
				goto _match_end_1da5a263c;
			}
		}
		else {
			_case_begin_1da5a2692:;
			{
				_1d6649463_pushErr((*(_94343_e)).ptr(), (*((*(_94358_fc))))._field_Token, jule::Str::lit("you can call @ function in the scopes only", 42), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("TypeAlias", 9), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1da5a263c:;
	};
	jule::Ptr<_1d657b42d_scopeChecker> _9739_sc = (*((*(_94343_e))))._field_lookup.cast_ptr<_1d657b42d_scopeChecker>(0);;
	jule::Ptr<_1d6676c43_TypeAlias> _9749_alias = jule::new_ptr<_1d6676c43_TypeAlias>(_1d6676c43_TypeAlias{._field_Scope=(*(_9739_sc))._field_tree, ._field_Public=_1d65b2d7c_IsPub((*(_9649_ident))._field_Kind), ._field_Binded=false, ._field_Used=false, ._field_Generic=false, ._field_Token=_9649_ident, ._field_Ident=(*(_9649_ident))._field_Kind, ._field_Kind=jule::new_ptr<_1d667ec07_TypeSymbol>(), });;
	jule::Ptr<_1d664721e_Data> _9849_t = _1d66666a0_eval1((*(_94343_e)), (*((*(_94358_fc))))._field_Args[1LL]);;
	if ((_9849_t == nullptr)) {
		return nullptr;;
	};
	if ((*(_9849_t))._field_Decl) {
		(*((*(_9749_alias))._field_Kind))._field_Kind=(*(_9849_t))._field_Kind;
	} else {
		jule::Ptr<_1d655c002_comptimeTypeInfo> _99113_cti = _1d667da4c_comptimeTypeInfo((*(_9849_t))._field_Kind.ptr());;
		if ((_99113_cti == nullptr)) {
			_1d6649463_pushErr((*(_94343_e)).ptr(), (*((*((*(_94358_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			_1d66497c6_pushSuggestion((*(_94343_e)).ptr(), jule::Str::lit("expected type declaration", 25), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*((*(_9749_alias))._field_Kind))._field_Kind=(*(_99113_cti))._field_base;
	};
	_1d6580bd5_checkTypeAlias(_9739_sc, &(_9749_alias));
	return _1d6672ea3_buildVoidData();;
}



inline jule::Ptr<_1d664721e_Data> _1d67674c6_builtinCallerStdMemSizeOf(jule::Ptr<_1d6648e13_Eval>* _100335_e, jule::Ptr<_1d650443e_FnCallExpr>* _100350_fc, jule::Ptr<_1d664721e_Data>* ) {
	jule::Ptr<_1d664721e_Data> _10049_result = jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=_1d675abc3_primUint, });;
	if (((*((*(_100350_fc))))._field_Args.len() < 1LL)) {
		_1d6649463_pushErr((*(_100335_e)).ptr(), (*((*(_100350_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type4)}));
		return _10049_result;;
	};
	if (((*((*(_100350_fc))))._field_Args.len() > 1LL)) {
		_1d6649463_pushErr((*(_100335_e)).ptr(), (*((*((*(_100350_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("SizeOf", 6), &__jule_any_type4)}));
	};
	jule::Ptr<_1d664721e_Data> _10169_d = _1d666635e_evalExprKind((*(_100335_e)), (*((*((*(_100350_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_10169_d == nullptr)) {
		return _10049_result;;
	};
	if ((!(_1d66952c2_validTypeForXof(&((*(_10169_d))._field_Kind))))) {
		_1d6649463_pushErr((*(_100335_e)).ptr(), (*((*((*(_100350_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1d6677ded_Str((*(_10169_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("SizeOf", 6), &__jule_any_type4)}));
	};
	(*(_10049_result))._field_Model=jule::Any(jule::new_ptr<_1d65288c5_SizeofExprModel>(_1d65288c5_SizeofExprModel{._field_Expr=(*(_10169_d))._field_Model}), &__jule_any_type117);
	return _10049_result;;
}



inline jule::Ptr<_1d664721e_Data> _1d6767905_builtinCallerStdMemAlignOf(jule::Ptr<_1d6648e13_Eval>* _102836_e, jule::Ptr<_1d650443e_FnCallExpr>* _102851_fc, jule::Ptr<_1d664721e_Data>* ) {
	jule::Ptr<_1d664721e_Data> _10299_result = jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=_1d675abc3_primUint, });;
	if (((*((*(_102851_fc))))._field_Args.len() < 1LL)) {
		_1d6649463_pushErr((*(_102836_e)).ptr(), (*((*(_102851_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type4)}));
		return _10299_result;;
	};
	if (((*((*(_102851_fc))))._field_Args.len() > 1LL)) {
		_1d6649463_pushErr((*(_102836_e)).ptr(), (*((*((*(_102851_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("AlignOf", 7), &__jule_any_type4)}));
	};
	jule::Ptr<_1d664721e_Data> _10419_d = _1d666635e_evalExprKind((*(_102836_e)), (*((*((*(_102851_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_10419_d == nullptr)) {
		return _10299_result;;
	};
	if ((!(_1d66952c2_validTypeForXof(&((*(_10419_d))._field_Kind))))) {
		_1d6649463_pushErr((*(_102836_e)).ptr(), (*((*((*(_102851_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1d6677ded_Str((*(_10419_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("AlignOf", 7), &__jule_any_type4)}));
	};
	(*(_10299_result))._field_Model=jule::Any(jule::new_ptr<_1d652d545_AlignofExprModel>(_1d652d545_AlignofExprModel{._field_Expr=(*(_10419_d))._field_Model}), &__jule_any_type118);
	return _10299_result;;
}



inline jule::Ptr<_1d664721e_Data> _1d6767d34_builtinCallerStdMemFree(jule::Ptr<_1d6648e13_Eval>* _105333_e, jule::Ptr<_1d650443e_FnCallExpr>* _105348_fc, jule::Ptr<_1d664721e_Data>* ) {
	if (((*((*(_105348_fc))))._field_Args.len() < 1LL)) {
		_1d6649463_pushErr((*(_105333_e)).ptr(), (*((*(_105348_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("h", 1), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_105348_fc))))._field_Args.len() > 1LL)) {
		_1d6649463_pushErr((*(_105333_e)).ptr(), (*((*((*(_105348_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Free", 4), &__jule_any_type4)}));
	};
	jule::Ptr<_1d664721e_Data> _10629_d = _1d6667173_evalExpr((*(_105333_e)), (*((*(_105348_fc))))._field_Args[0LL]);;
	if ((_10629_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1d6679b69_PerformsRC((*(_10629_d))._field_Kind.ptr())))) {
		_1d6649463_pushErr((*(_105333_e)).ptr(), (*((*((*(_105348_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1d664721e_Data> _10719_result = _1d6672ea3_buildVoidData();;
	(*(_10719_result))._field_Model=jule::Any(jule::new_ptr<_1d652e315_FreeExprModel>(_1d652e315_FreeExprModel{._field_Expr=(*(_10629_d))._field_Model}), &__jule_any_type33);
	return _10719_result;;
}



inline jule::Ptr<_1d664721e_Data> _1d676d0c0_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_1d6648e13_Eval>* _107645_e, jule::Ptr<_1d650443e_FnCallExpr>* _107660_fc, jule::Ptr<_1d664721e_Data>* ) {
	if (((*((*(_107660_fc))))._field_Args.len() < 1LL)) {
		_1d6649463_pushErr((*(_107645_e)).ptr(), (*((*(_107660_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("expr", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_107660_fc))))._field_Args.len() > 1LL)) {
		_1d6649463_pushErr((*(_107645_e)).ptr(), (*((*((*(_107660_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("ToStr", 5), &__jule_any_type4)}));
	};
	jule::Ptr<_1d664721e_Data> _10859_d = _1d6667173_evalExpr((*(_107645_e)), (*((*(_107660_fc))))._field_Args[0LL]);;
	if ((_10859_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1d66942e3_isBuiltinStrConvertable(&((*(_10859_d))._field_Kind))))) {
		_1d6649463_pushErr((*(_107645_e)).ptr(), (*((*((*(_107660_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1d664721e_Data>(_1d664721e_Data{._field_Kind=_1d675a376_primStr, ._field_Model=jule::Any(jule::new_ptr<_1d652db3e_IntegratedToStrExprModel>(_1d652db3e_IntegratedToStrExprModel{._field_Expr=(*(_10859_d))._field_Model}), &__jule_any_type119), });;
}



inline jule::Ptr<_1d664721e_Data> _1d676d4ee_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_1d6648e13_Eval>* _110344_e, jule::Ptr<_1d650443e_FnCallExpr>* _110359_fc, jule::Ptr<_1d664721e_Data>* _110381_d) {
	if ((!(_1d6649e58_isUnsafe((*(_110344_e)).ptr())))) {
		_1d6649463_pushErr((*(_110344_e)).ptr(), (*((*(_110359_fc))))._field_Token, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
	};
	if (((*((*(_110359_fc))))._field_Args.len() < 1LL)) {
		_1d6649463_pushErr((*(_110344_e)).ptr(), (*((*(_110359_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("code", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1d664721e_Data> _11139_argd = _1d6667173_evalExpr((*(_110344_e)), (*((*(_110359_fc))))._field_Args[0LL]);;
	if ((_11139_argd == nullptr)) {
		return nullptr;;
	};
	if (((_1d667a186_Prim((*(_11139_argd))._field_Kind.ptr()) == nullptr) || (!(_1d6683a96_IsStr(_1d667a186_Prim((*(_11139_argd))._field_Kind.ptr()).ptr()))))) {
		_1d6649463_pushErr((*(_110344_e)).ptr(), (*((*((*(_110359_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1d6677ded_Str((*(_11139_argd))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((!(_1d6647ae3_IsConst(_11139_argd.ptr()))) || (!(_1d432597c_IsStr((*(_11139_argd))._field_Constant.ptr()))))) {
		_1d6649463_pushErr((*(_110344_e)).ptr(), (*((*((*(_110359_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1d664721e_Data> _11289_r = _1d6672ea3_buildVoidData();;
	jule::Ptr<_1d6535173_FnIns> _11309_f = _1d667b473_Fn((*((*(_110381_d))))._field_Kind.ptr());;
	if (((*(_11309_f))._field_Generics.len() > 0LL)) {
		(*(_11289_r))._field_Kind=(*((*(_11309_f))._field_Generics[0LL]))._field_Kind;
	};
	jule::Ptr<_1d652e018_BackendEmitExprModel> _11359_model = jule::new_ptr<_1d652e018_BackendEmitExprModel>(_1d652e018_BackendEmitExprModel{._field_Code=_1d4323381_ReadStr((*(_11139_argd))._field_Constant.ptr()), });;
	if (((*((*(_110359_fc))))._field_Args.len() > 1LL)) {
		(*(_11359_model))._field_Exprs=jule::Slice<jule::Any>::alloc(0LL, ((*((*(_110359_fc))))._field_Args.len() - 1LL), jule::Any(nullptr));
		{
			auto expr = (*((*(_110359_fc))))._field_Args.slice(1LL);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1da5cb347:;
			if (it != expr_end) {
				jule::Ptr<_1d6500715_Expr> _114121_arg = *it;
				{
					_11139_argd=_1d66666a0_eval1((*(_110344_e)), _114121_arg);
					if ((_11139_argd == nullptr)) {
						return nullptr;;
					};
					{ jule::Slice<jule::Any> &__jule_push_dest = (*(_11359_model))._field_Exprs; __jule_push_dest.push((*(_11139_argd))._field_Model); };
				}
				_iter_next_1da5cb347:;
				++it;
				goto _iter_begin_1da5cb347;
			}
			_iter_end_1da5cb347:;
		};
	};
	(*(_11289_r))._field_Model=jule::Any(_11359_model, &__jule_any_type25);
	return _11289_r;;
}



inline jule::Ptr<_1d664721e_Data> _1d676d92d_builtinCallerStdDebugOut(jule::Ptr<_1d6648e13_Eval>* _115434_e, jule::Ptr<_1d650443e_FnCallExpr>* _115449_fc, jule::Ptr<_1d664721e_Data>* _115471_d) {
	(*(_115471_d))=_1d67604d0_builtinCallerOut(_115434_e, _115449_fc, _115471_d);
	if (((*(_115471_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*((*(_115471_d))))._field_Model.cast_ptr<_1d652a0d0_BuiltinOutCallExprModel>(&__jule_any_type27)))._field_Debug=true;
	return (*(_115471_d));;
}



inline jule::Ptr<_1d664721e_Data> _1d676dd5c_builtinCallerStdDebugOutln(jule::Ptr<_1d6648e13_Eval>* _116336_e, jule::Ptr<_1d650443e_FnCallExpr>* _116351_fc, jule::Ptr<_1d664721e_Data>* _116373_d) {
	(*(_116373_d))=_1d676090e_builtinCallerOutln(_116336_e, _116351_fc, _116373_d);
	if (((*(_116373_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*((*(_116373_d))))._field_Model.cast_ptr<_1d652a4a9_BuiltinOutlnCallExprModel>(&__jule_any_type28)))._field_Debug=true;
	return (*(_116373_d));;
}



inline jule::Ptr<_1d70d5b8a_FileInfo> _1d70d8a39_ParseFile(jule::Ptr<_1d64db59c_File> _2318_f) {
	if ((_2318_f == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1d70d5b8a_FileInfo> _279_finf = jule::new_ptr<_1d70d5b8a_FileInfo>();;
	({
		__jule_tuple_x_1d64e9423_Ast__jule_tuple_s_1e0235a7e_Log __jule_assign_result = _1d712c40c_parseFileset(_2318_f);
		(*(_279_finf))._field_Ast = __jule_assign_result.__jule_result_arg0;
		(*(_279_finf))._field_Errors = __jule_assign_result.__jule_result_arg1;
	});
	if (((*(_279_finf))._field_Errors.len() > 0LL)) {
		(*(_279_finf))._field_Ast=nullptr;
	};
	return _279_finf;;
}



inline __jule_tuple_x_1d64e9423_Ast__jule_tuple_s_1e0235a7e_Log _1d712c40c_parseFileset(jule::Ptr<_1d64db59c_File> _5521_f) {
	__jule_tuple_x_1d64e9423_Ast__jule_tuple_s_1e0235a7e_Log __jule_func_result;
	jule::Ptr<_1d714cc79_parser> _569_p = jule::new_ptr<_1d714cc79_parser>();;
	_1d715db8b_parse(_569_p, &(_5521_f));
	__jule_func_result.__jule_result_arg0 = (*(_569_p))._field_ast;
	__jule_func_result.__jule_result_arg1 = (*(_569_p))._field_errors;
	return __jule_func_result;;
}



inline jule::Ptr<_1d650b402_ScopeTree> _1d712cd9c_newScope(void) {
	return jule::new_ptr<_1d650b402_ScopeTree>();;
}



inline __jule_tuple_bool__jule_tuple_bool _1d712d232_isSt(jule::Ptr<_1d64d5cd3_Token> _499_current, jule::Ptr<_1d64d5cd3_Token> _4926_prev) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=(((*(_499_current))._field_Id == static_cast<jule::U64>(3LLU)) || ((*(_4926_prev))._field_Row < (*(_499_current))._field_Row));
	__jule_func_result.__jule_result_arg1=((*(_499_current))._field_Id == static_cast<jule::U64>(3LLU));
	return __jule_func_result;;
}



inline jule::Bool _1d712d5a6_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _5526_tokens, jule::I64* _5545_i) {
	if ((((*(_5545_i)) > 1LL) && ((*((*(_5526_tokens))[((*(_5545_i)) - 2LL)]))._field_Id == static_cast<jule::U64>(19LLU)))) {
		return false;;
	};
	{
		jule::Ptr<_1d64d5cd3_Token> _619_prev = (*(_5526_tokens))[((*(_5545_i)) - 1LL)];;
		return (((*(_619_prev))._field_Id == static_cast<jule::U64>(17LLU)) || (_1d64d682d_IsBinOp((*(_619_prev))._field_Id) && ((*(_619_prev))._field_Row < (*((*(_5526_tokens))[(*(_5545_i))]))._field_Row)));;
	};
}



inline __jule_tuple_int__jule_tuple_bool _1d712d96e_nextStPos(jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _6815_tokens, jule::I64 _6833_start) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _699_braceN = 0LL;;
	jule::I64 _709_i = _6833_start;;
	for (; (_709_i < (*(_6815_tokens)).len()); (_709_i)++) {
		{
			jule::Bool _7213_ok = false;;
			jule::Bool _7313_terminated = false;;
			jule::Ptr<_1d64d5cd3_Token> _749_tok = (*(_6815_tokens))[_709_i];;
			{
				auto &_match_expr{ (*(_749_tok))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1da6596c2:;
					{
						if (((_699_braceN == 0LL) && (_709_i > _6833_start))) {
							if ((!(_1d712d5a6_prevIsIncompleteExpr(_6815_tokens, &(_709_i))))) {
								({
									__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1d712d232_isSt(_749_tok, (*(_6815_tokens))[(_709_i - 1LL)]);
									_7213_ok = __jule_assign_result.__jule_result_arg0;
									_7313_terminated = __jule_assign_result.__jule_result_arg1;
								});
								if (_7213_ok) {
									goto _julec_label_1da65e40d;
								};
							};
						};
						(_699_braceN)++;
						goto _iter_next_1da658160;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1da659749:;
					{
						(_699_braceN)--;
						if (((_699_braceN == 0LL) && ((_709_i + 1LL) < (*(_6815_tokens)).len()))) {
							({
								__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1d712d232_isSt((*(_6815_tokens))[(_709_i + 1LL)], _749_tok);
								_7213_ok = __jule_assign_result.__jule_result_arg0;
								_7313_terminated = __jule_assign_result.__jule_result_arg1;
							});
							if (_7213_ok) {
								(_709_i)++;
								goto _julec_label_1da65e40d;
							};
						};
						goto _iter_next_1da658160;
					}
				}
				_match_end_1da65966c:;
			};
			if ((_699_braceN != 0LL)) {
				goto _iter_next_1da658160;
			};
			if ((_709_i > _6833_start)) {
				if (_1d712d5a6_prevIsIncompleteExpr(_6815_tokens, &(_709_i))) {
					goto _iter_next_1da658160;
				};
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1d712d232_isSt(_749_tok, (*(_6815_tokens))[(_709_i - 1LL)]);
					_7213_ok = __jule_assign_result.__jule_result_arg0;
					_7313_terminated = __jule_assign_result.__jule_result_arg1;
				});
			} else {
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1d712d232_isSt(_749_tok, _749_tok);
					_7213_ok = __jule_assign_result.__jule_result_arg0;
					_7313_terminated = __jule_assign_result.__jule_result_arg1;
				});
			};
			if ((!(_7213_ok))) {
				goto _iter_next_1da658160;
			};
			_julec_label_1da65e40d:;
			if (_7313_terminated) {
				(_709_i)++;
			};
			__jule_func_result.__jule_result_arg0 = _709_i;
			__jule_func_result.__jule_result_arg1 = _7313_terminated;
			return __jule_func_result;;
		}
	_iter_next_1da658160:;
	}
	_iter_end_1da658160:;;
	__jule_func_result.__jule_result_arg0 = _709_i;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1d64d5cd3_Token__jule_tuple_bool _1d712dce3_skipSt(jule::I64* _13016_i, jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _13028_tokens) {
	__jule_tuple_sx_1d64d5cd3_Token__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _1315_start = (*(_13016_i));;
	jule::Bool _1329_terminated = false;;
	({
		__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1d712d96e_nextStPos(&(_13028_tokens), _1315_start);
		(*(_13016_i)) = __jule_assign_result.__jule_result_arg0;
		_1329_terminated = __jule_assign_result.__jule_result_arg1;
	});
	jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _1349_stTokens = _13028_tokens.slice(_1315_start, (*(_13016_i)));;
	if (_1329_terminated) {
		if ((_1349_stTokens.len() == 1LL)) {
			({
				__jule_tuple_sx_1d64d5cd3_Token__jule_tuple_bool __jule_assign_result = _1d712dce3_skipSt(_13016_i, _13028_tokens);
				_1349_stTokens = __jule_assign_result.__jule_result_arg0;
				_1329_terminated = __jule_assign_result.__jule_result_arg1;
			});
			__jule_func_result.__jule_result_arg0 = _1349_stTokens;
			__jule_func_result.__jule_result_arg1 = _1329_terminated;
			return __jule_func_result;;
		};
		(_1349_stTokens).mut_slice(0LL, (_1349_stTokens.len() - 1LL));;
	};
	__jule_func_result.__jule_result_arg0 = _1349_stTokens;
	__jule_func_result.__jule_result_arg1 = _1329_terminated;
	return __jule_func_result;;
}



inline jule::Slice<jule::Ptr<_1d712e123_stmt>> _1d712e4ca_splitStmts(jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _15220_tokens) {
	jule::Slice<jule::Ptr<_1d712e123_stmt>> _1539_stmts = jule::Slice<jule::Ptr<_1d712e123_stmt>>::alloc(0LL, 20LL);;
	jule::I64 _1549_pos = 0LL;;
	while ((_1549_pos < (*(_15220_tokens)).len())) {
		{
			jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _15613_stmt;;
			jule::Bool _15619_terminated = false;;
			({
				__jule_tuple_sx_1d64d5cd3_Token__jule_tuple_bool __jule_assign_result = _1d712dce3_skipSt(&(_1549_pos), (*(_15220_tokens)));
				_15613_stmt = __jule_assign_result.__jule_result_arg0;
				_15619_terminated = __jule_assign_result.__jule_result_arg1;
			});
			{ jule::Slice<jule::Ptr<_1d712e123_stmt>> &__jule_push_dest = _1539_stmts; __jule_push_dest.push(jule::new_ptr<_1d712e123_stmt>(_1d712e123_stmt{._field_tokens=_15613_stmt, ._field_terminated=_15619_terminated})); };
		}
	_iter_next_1da6641d2:;
	}
	_iter_end_1da6641d2:;;
	return _1539_stmts;;
}



inline jule::Bool _1d7147b31_isTypeOp(jule::U64* _88514_id) {
	return ((((*(_88514_id)) == static_cast<jule::U64>(65LLU)) || ((*(_88514_id)) == static_cast<jule::U64>(54LLU))) || ((*(_88514_id)) == static_cast<jule::U64>(62LLU)));;
}



inline jule::Bool _1d7147e3e_isTypeRange(jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _89221_tokens) {
	jule::Bool _8939_op = false;;
	{
		auto expr = _89221_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1da734dc9:;
		if (it != expr_end) {
			jule::I64 _8949_i = it - expr->begin();
			jule::Ptr<_1d64d5cd3_Token> _89412_token = *it;
			{
				if (((*(_89412_token))._field_Id == static_cast<jule::U64>(76LLU))) {
					if (_8939_op) {
						return true;;
					};
					jule::I64 _89917_rangeN = 0LL;;
					jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _90017_lTokens = (*(_89221_tokens)).slice(_8949_i);;
					{
						auto expr = &(_90017_lTokens);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1da735bdd:;
						if (it != expr_end) {
							jule::Ptr<_1d64d5cd3_Token> _90120_lToken = *it;
							{
								{
									auto &_match_expr{ (*(_90120_lToken))._field_Id };
									
									if (_match_expr == static_cast<jule::U64>(76LLU)) {
										_case_begin_1da7373b5:;
										{
											(_89917_rangeN)++;
											goto _iter_next_1da735bdd;
										}
									}
									else if (_match_expr == static_cast<jule::U64>(77LLU)) {
										_case_begin_1da73743c:;
										{
											(_89917_rangeN)--;
											goto _iter_next_1da735bdd;
										}
									}
									_match_end_1da7372e9:;
								};
								if ((_89917_rangeN == 0LL)) {
									return _1d7147b31_isTypeOp(&((*(_90120_lToken))._field_Id));;
								};
							}
							_iter_next_1da735bdd:;
							++it;
							goto _iter_begin_1da735bdd;
						}
						_iter_end_1da735bdd:;
					};
					return true;;
				};
				if ((!(_1d7147b31_isTypeOp(&((*(_89412_token))._field_Id))))) {
					return false;;
				};
				_8939_op=true;
			}
			_iter_next_1da734dc9:;
			++it;
			_8949_i++;
			goto _iter_begin_1da734dc9;
		}
		_iter_end_1da734dc9:;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _1d7148208_getBlockExpr(jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _92522_tokens) {
	jule::I64 _9269_braceN = 0LL;;
	jule::I64 _9279_skipToNextBraceClose = 0LL;;
	{
		auto expr = _92522_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1da739164:;
		if (it != expr_end) {
			jule::I64 _9289_i = it - expr->begin();
			jule::Ptr<_1d64d5cd3_Token> _92812_tok = *it;
			{
				{
					auto &_match_expr{ (*(_92812_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(31LLU)) {
						_case_begin_1da73a077:;
						{
							if (((((*(_92522_tokens)).len() - _9289_i) > 1LL) && ((*((*(_92522_tokens))[(_9289_i + 1LL)]))._field_Id == static_cast<jule::U64>(72LLU)))) {
								(_9279_skipToNextBraceClose)++;
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1da73a0ee:;
						{
							if (((_9269_braceN > 0LL) || (_9279_skipToNextBraceClose > 0LL))) {
								if ((_9279_skipToNextBraceClose > 0LL)) {
									(_9279_skipToNextBraceClose)--;
								};
								(_9269_braceN)++;
								goto _match_end_1da739e89;
							};
							return (*(_92522_tokens)).slice(0LL, _9289_i);;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1da73a176:;
						{
							(_9269_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1da73a1ed:;
						{
							(_9269_braceN)--;
						}
					}
					_match_end_1da739e89:;
				};
			}
			_iter_next_1da739164:;
			++it;
			_9289_i++;
			goto _iter_begin_1da739164;
		}
		_iter_end_1da739164:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1d64d5cd3_Token__jule_tuple_sx_1d64d5cd3_Token _1d71485c1_splitDelim(jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _95720_tokens, jule::U64 _95738_delim) {
	__jule_tuple_sx_1d64d5cd3_Token__jule_tuple_sx_1d64d5cd3_Token __jule_func_result;
	jule::I64 _9589_rangeN = 0LL;;
	{
		auto expr = _95720_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1da73d421:;
		if (it != expr_end) {
			jule::I64 _9599_i = it - expr->begin();
			jule::Ptr<_1d64d5cd3_Token> _95912_token = *it;
			{
				{
					auto &_match_expr{ (*(_95912_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1da73e224:;
						{
							(_9589_rangeN)++;
							goto _iter_next_1da73d421;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1da73e29b:;
						{
							(_9589_rangeN)--;
						}
					}
					else if (_match_expr == _95738_delim) {
						_case_begin_1da73e323:;
						{
							if ((_9589_rangeN == 0LL)) {
								jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _97221_l = (*(_95720_tokens)).slice(0LL, _9599_i);;
								jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _97321_r = (*(_95720_tokens)).slice((_9599_i + 1LL));;
								__jule_func_result.__jule_result_arg0 = _97221_l;
								__jule_func_result.__jule_result_arg1 = _97321_r;
								return __jule_func_result;;
							};
						}
					}
					_match_end_1da73e147:;
				};
			}
			_iter_next_1da73d421:;
			++it;
			_9599_i++;
			goto _iter_begin_1da73d421;
		}
		_iter_end_1da73d421:;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline jule::I64 _1d714888a_findLowestPrecOp(jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _98322_tokens) {
	jule::U8 _9889_prec = 255LLU;;
	jule::I64 _9899_precPos = -1LL;;
	jule::I64 _9919_braceN = 0LL;;
	jule::Bool _9929_skipToNextBraceOpen = false;;
	{
		auto expr = _98322_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1da742645:;
		if (it != expr_end) {
			jule::I64 _9939_i = it - expr->begin();
			jule::Ptr<_1d64d5cd3_Token> *_99312_token = it;
			{
				{
					auto &_match_expr{ (*((*(_99312_token))))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1da74348c:;
						{
							_9929_skipToNextBraceOpen=false;
							goto _case_begin_1da743514;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1da743514:;
						{
							(_9919_braceN)++;
							goto _iter_next_1da742645;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(75LLU) || _match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_1da74358b:;
						{
							(_9919_braceN)--;
							goto _iter_next_1da742645;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(13LLU)) {
						_case_begin_1da743613:;
						{
							_9929_skipToNextBraceOpen=true;
							goto _iter_next_1da742645;
						}
					}
					_match_end_1da74339e:;
				};
				{
					
					if (_9929_skipToNextBraceOpen) {
						_case_begin_1da744a76:;
						{
							goto _iter_next_1da742645;
						}
					}
					else if ((_9939_i == 0LL)) {
						_case_begin_1da744aed:;
						{
							goto _iter_next_1da742645;
						}
					}
					else if ((_9919_braceN > 0LL)) {
						_case_begin_1da744b75:;
						{
							goto _iter_next_1da742645;
						}
					}
					else if ((!(_1d64d682d_IsBinOp((*((*(_99312_token))))._field_Id)))) {
						_case_begin_1da744bec:;
						{
							goto _iter_next_1da742645;
						}
					}
					_match_end_1da744823:;
				};
				jule::Ptr<_1d64d5cd3_Token> _10229_left = (*(_98322_tokens))[(_9939_i - 1LL)];;
				if ((_1d64d6520_IsUnaryOp((*(_10229_left))._field_Id) || ((*(_10229_left))._field_Id == static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_1da742645;
				};
				if (((_9939_i > 1LL) && ((*(_10229_left))._field_Id == static_cast<jule::U64>(77LLU)))) {
					jule::Ptr<_1d64d5cd3_Token> _103013_lleft = (*(_98322_tokens))[(_9939_i - 2LL)];;
					if (((*(_103013_lleft))._field_Id == static_cast<jule::U64>(76LLU))) {
						if ((((*((*(_99312_token))))._field_Id == static_cast<jule::U64>(65LLU)) || ((*((*(_99312_token))))._field_Id == static_cast<jule::U64>(62LLU)))) {
							goto _iter_next_1da742645;
						};
					};
				};
				jule::U8 _10399_p = _1d64d6157_Prec((*(_99312_token)).ptr());;
				if (((_10399_p != 0LLU) && (_10399_p <= _9889_prec))) {
					_9889_prec=_10399_p;
					_9899_precPos=_9939_i;
				};
			}
			_iter_next_1da742645:;
			++it;
			_9939_i++;
			goto _iter_begin_1da742645;
		}
		_iter_end_1da742645:;
	};
	return _9899_precPos;;
}



inline jule::Ptr<_1d6502140_IdentExpr> _1d7148b54_buildIdentExpr(jule::Ptr<_1d64d5cd3_Token>* _104824_token) {
	return jule::new_ptr<_1d6502140_IdentExpr>(_1d6502140_IdentExpr{._field_Token=(*(_104824_token)), ._field_Ident=(*((*(_104824_token))))._field_Kind, ._field_Binded=false});;
}



inline __jule_tuple_sx_1d64d5cd3_Token__jule_tuple_int _1d7148e1d_getRangeExprTokens(jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _105628_tokens) {
	__jule_tuple_sx_1d64d5cd3_Token__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg1 = 0;
	jule::I64 _10579_rangeN = 0LL;;
	jule::I64 _10589_i = ((*(_105628_tokens)).len() - 1LL);;
	for (; (_10589_i >= 0LL); (_10589_i)--) {
		{
			jule::Ptr<_1d64d5cd3_Token> _10609_tok = (*(_105628_tokens))[_10589_i];;
			{
				auto &_match_expr{ (*(_10609_tok))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1da74bc37:;
					{
						(_10579_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1da74bcae:;
					{
						(_10579_rangeN)--;
					}
				}
				_match_end_1da74bbc1:;
			};
			if ((_10579_rangeN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_105628_tokens)).slice(0LL, _10589_i);
				__jule_func_result.__jule_result_arg1 = _10579_rangeN;
				return __jule_func_result;;
			};
		}
	_iter_next_1da74aede:;
	}
	_iter_end_1da74aede:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = _10579_rangeN;
	return __jule_func_result;;
}



inline jule::Bool _1d7149c32_checkAssignTokens(jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _1623_tokens) {
	if ((((*(_1623_tokens)).len() == 0LL) || (!(_1d64da6ab_IsAssign((*((*(_1623_tokens))[0LL]))._field_Id))))) {
		return false;;
	};
	jule::I64 _209_braceN = 0LL;;
	{
		auto expr = _1623_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1da7d9236:;
		if (it != expr_end) {
			jule::Ptr<_1d64d5cd3_Token> *_2112_t = it;
			{
				{
					auto &_match_expr{ (*((*(_2112_t))))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1da7d9d19:;
						{
							(_209_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1da7d9d91:;
						{
							(_209_braceN)--;
						}
					}
					_match_end_1da7d9c4d:;
				};
				{
					
					if ((_209_braceN < 0LL)) {
						_case_begin_1da7dac2c:;
						{
							return false;;
						}
					}
					else if ((_209_braceN > 0LL)) {
						_case_begin_1da7dac93:;
						{
							goto _iter_next_1da7d9236;
						}
					}
					else if (_1d64dac3e_IsAssignOp((*((*(_2112_t))))._field_Id) || ((*((*(_2112_t))))._field_Id == static_cast<jule::U64>(38LLU))) {
						_case_begin_1da7dad1a:;
						{
							return true;;
						}
					}
					_match_end_1da7dab83:;
				};
			}
			_iter_next_1da7d9236:;
			++it;
			goto _iter_begin_1da7d9236;
		}
		_iter_end_1da7d9236:;
	};
	return false;;
}



inline _1e0235a7e_Log _1d714ae31_makeErr(jule::I64 _5112_row, jule::I64 _5122_col, jule::Ptr<_1d64db59c_File>* _5133_f, jule::Str _5143_fmt, jule::Slice<jule::Any> _5156_args) {
	return _1e0235a7e_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_5112_row, ._field_Column=_5122_col, ._field_Path=(*((*(_5133_f))))._field_Path, ._field_Text=_1e0235ee1_Logf(_5143_fmt, _5156_args), };;
}



inline jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _1d714b42b_range(jule::I64* _6915_i, jule::U64 _6923_open, jule::U64 _6938_close, jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _6959_tokens) {
	if (((*(_6915_i)) >= (*(_6959_tokens)).len())) {
		return nullptr;;
	};
	jule::Ptr<_1d64d5cd3_Token> _735_tok = (*(_6959_tokens))[(*(_6915_i))];;
	if (((*(_735_tok))._field_Id != _6923_open)) {
		return nullptr;;
	};
	((*(_6915_i)))++;
	jule::I64 _789_rangeN = 1LL;;
	jule::I64 _795_start = (*(_6915_i));;
	for (; ((_789_rangeN != 0LL) && ((*(_6915_i)) < (*(_6959_tokens)).len())); ((*(_6915_i)))++) {
		{
			jule::Ptr<_1d64d5cd3_Token> _819_token = (*(_6959_tokens))[(*(_6915_i))];;
			{
				auto &_match_expr{ (*(_819_token))._field_Id };
				
				if (_match_expr == _6923_open) {
					_case_begin_1da7e1183:;
					{
						(_789_rangeN)++;
					}
				}
				else if (_match_expr == _6938_close) {
					_case_begin_1da7e120a:;
					{
						(_789_rangeN)--;
					}
				}
				_match_end_1da7e111c:;
			};
		}
	_iter_next_1da7e035d:;
	}
	_iter_end_1da7e035d:;;
	return (*(_6959_tokens)).slice(_795_start, ((*(_6915_i)) - 1LL));;
}



inline __jule_tuple_sx_1d64d5cd3_Token__jule_tuple_sx_1d64d5cd3_Token _1d714b6e5_rangeLast(jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _9919_tokens) {
	__jule_tuple_sx_1d64d5cd3_Token__jule_tuple_sx_1d64d5cd3_Token __jule_func_result;
	if (((*(_9919_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::U64 _1035_first = (*((*(_9919_tokens))[((*(_9919_tokens)).len() - 1LL)]))._field_Id;;
	if ((((_1035_first != static_cast<jule::U64>(73LLU)) && (_1035_first != static_cast<jule::U64>(76LLU))) && (_1035_first != static_cast<jule::U64>(75LLU)))) {
		__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I64 _1099_braceN = 0LL;;
	jule::I64 _1109_i = ((*(_9919_tokens)).len() - 1LL);;
	for (; (_1109_i >= 0LL); (_1109_i)--) {
		{
			jule::Ptr<_1d64d5cd3_Token> _1129_token = (*(_9919_tokens))[_1109_i];;
			{
				auto &_match_expr{ (*(_1129_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1da7e5385:;
					{
						(_1099_braceN)++;
						goto _iter_next_1da7e46e7;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1da7e540c:;
					{
						(_1099_braceN)--;
					}
				}
				_match_end_1da7e531e:;
			};
			if ((_1099_braceN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_9919_tokens)).slice(0LL, _1109_i);
				__jule_func_result.__jule_result_arg1 = (*(_9919_tokens)).slice(_1109_i);
				return __jule_func_result;;
			};
		}
	_iter_next_1da7e46e7:;
	}
	_iter_end_1da7e46e7:;;
	__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_ssx_1d64d5cd3_Token__jule_tuple_s_1e0235a7e_Log _1d714bb9b_parts(jule::Slice<jule::Ptr<_1d64d5cd3_Token>>* _13715_tokens, jule::U64 _13733_id, jule::Bool _13746_exprMust) {
	__jule_tuple_ssx_1d64d5cd3_Token__jule_tuple_s_1e0235a7e_Log __jule_func_result;
	if (((*(_13715_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1d64d5cd3_Token>>> _14213_parts = nullptr;;
	jule::Slice<_1e0235a7e_Log> _14313_errors = nullptr;;
	jule::I64 _1459_rangeN = 0LL;;
	jule::I64 _1469_last = 0LL;;
	{
		auto expr = _13715_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1da7e3064:;
		if (it != expr_end) {
			jule::I64 _1479_i = it - expr->begin();
			jule::Ptr<_1d64d5cd3_Token> _14712_token = *it;
			{
				{
					auto &_match_expr{ (*(_14712_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1da7e9774:;
						{
							(_1459_rangeN)++;
							goto _iter_next_1da7e3064;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1da7e97eb:;
						{
							(_1459_rangeN)--;
						}
					}
					_match_end_1da7e96a8:;
				};
				if ((_1459_rangeN > 0LL)) {
					goto _iter_next_1da7e3064;
				};
				if (((*(_14712_token))._field_Id == _13733_id)) {
					if ((_13746_exprMust && ((_1479_i - _1469_last) <= 0LL))) {
						_1e0235a7e_Log _16617_err = _1d714ae31_makeErr((*(_14712_token))._field_Row, (*(_14712_token))._field_Column, &((*(_14712_token))._field_File), jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());;
						{ jule::Slice<_1e0235a7e_Log> &__jule_push_dest = _14313_errors; __jule_push_dest.push(_16617_err); };
					};
					{ jule::Slice<jule::Slice<jule::Ptr<_1d64d5cd3_Token>>> &__jule_push_dest = _14213_parts; __jule_push_dest.push((*(_13715_tokens)).slice(_1469_last, _1479_i)); };
					_1469_last=static_cast<jule::I64>((_1479_i + 1LL));
				};
			}
			_iter_next_1da7e3064:;
			++it;
			_1479_i++;
			goto _iter_begin_1da7e3064;
		}
		_iter_end_1da7e3064:;
	};
	if ((_1469_last < (*(_13715_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1d64d5cd3_Token>>> &__jule_push_dest = _14213_parts; __jule_push_dest.push((*(_13715_tokens)).slice(_1469_last)); };
	} else if ((!(_13746_exprMust))) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1d64d5cd3_Token>>> &__jule_push_dest = _14213_parts; __jule_push_dest.push(jule::Slice<jule::Ptr<_1d64d5cd3_Token>>()); };
	};
	__jule_func_result.__jule_result_arg0 = _14213_parts;
	__jule_func_result.__jule_result_arg1 = _14313_errors;
	return __jule_func_result;;
}



inline jule::U64 _1d714be65_getCloseOfBrace(jule::U64 _18320_left) {
	{
		auto &_match_expr{ _18320_left };
		
		if (_match_expr == static_cast<jule::U64>(75LLU)) {
			_case_begin_1da7ed2a0:;
			{
				return static_cast<jule::U64>(74LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1da7ed316:;
			{
				return static_cast<jule::U64>(72LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_1da7ed37c:;
			{
				return static_cast<jule::U64>(76LLU);;
			}
		}
		else {
			_case_begin_1da7ecb2e:;
			{
				return _18320_left;;
			}
		}
		_match_end_1da7ecac9:;
	};
}



inline _1e0235a7e_Log _1d714c394_compilerErr(jule::Ptr<_1d64d5cd3_Token>* _19617_token, jule::Str* _19633_fmt, jule::Slice<jule::Any> _19646_args) {
	return _1e0235a7e_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*((*(_19617_token))))._field_Row, ._field_Column=(*((*(_19617_token))))._field_Column, ._field_Path=(*((*((*(_19617_token))))._field_File))._field_Path, ._field_Text=_1e0235ee1_Logf((*(_19633_fmt)), _19646_args), ._field_Line=_1d64dc57b_GetRow((*((*(_19617_token))))._field_File.ptr(), (*((*(_19617_token))))._field_Row), };;
}



inline void _1d714c73a_pushSuggestion(_1e0235a7e_Log* _20730_log, jule::Str _20741_fmt, jule::Slice<jule::Any> _20754_args) {
	(*(_20730_log))._field_Suggestion=_1e0235ee1_Logf(_20741_fmt, _20754_args);
}



inline jule::Ptr<_1d64eb3d1_TypeDecl> _1d715e692_buildVoidType(void) {
	return jule::new_ptr<_1d64eb3d1_TypeDecl>();;
}



inline __jule_tuple_bool__jule_tuple_bool _1d685d941_checkOs(jule::Str _912_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _912_arg };
		
		if (_match_expr == jule::Str::lit("windows", 7)) {
			_case_begin_1da9b61b0:;
			{
				__jule_func_result.__jule_result_arg0=_1e023daa9_IsWindows(_1e034ee1d_Os);
			}
		}
		else if (_match_expr == jule::Str::lit("darwin", 6)) {
			_case_begin_1da9b5e07:;
			{
				__jule_func_result.__jule_result_arg0=_1e023dd84_IsDarwin(_1e034ee1d_Os);
			}
		}
		else if (_match_expr == jule::Str::lit("linux", 5)) {
			_case_begin_1da9b5e6d:;
			{
				__jule_func_result.__jule_result_arg0=_1e023e14d_IsLinux(_1e034ee1d_Os);
			}
		}
		else if (_match_expr == jule::Str::lit("unix", 4)) {
			_case_begin_1da9b5ed4:;
			{
				__jule_func_result.__jule_result_arg0=_1e023ecdb_IsUnix(_1e034ee1d_Os);
			}
		}
		else {
			_case_begin_1da9b58a7:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1da9b5ce7:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_bool__jule_tuple_bool _1d685da84_checkArch(jule::Str _2814_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _2814_arg };
		
		if (_match_expr == jule::Str::lit("i386", 4)) {
			_case_begin_1da9b8118:;
			{
				__jule_func_result.__jule_result_arg0=_1e023e48e_IsI386(_1e03501d7_Arch);
			}
		}
		else if (_match_expr == jule::Str::lit("amd64", 5)) {
			_case_begin_1da9b817e:;
			{
				__jule_func_result.__jule_result_arg0=_1e023e758_IsAmd64(_1e03501d7_Arch);
			}
		}
		else if (_match_expr == jule::Str::lit("arm64", 5)) {
			_case_begin_1da9b81e5:;
			{
				__jule_func_result.__jule_result_arg0=_1e023ea22_IsArm64(_1e03501d7_Arch);
			}
		}
		else if (_match_expr == jule::Str::lit("x64", 3)) {
			_case_begin_1da9b825b:;
			{
				__jule_func_result.__jule_result_arg0=_1e024044b_Is64Bit(_1e03501d7_Arch);
			}
		}
		else if (_match_expr == jule::Str::lit("x32", 3)) {
			_case_begin_1da9b8778:;
			{
				__jule_func_result.__jule_result_arg0=_1e0240182_Is32Bit(_1e03501d7_Arch);
			}
		}
		else {
			_case_begin_1da9b7ab8:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1da9b8008:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1d6878340_isPassFileAnnotation(jule::Str _5029_p) {
	_5029_p=_1e01915de_Base(_5029_p);
	jule::I64 _525_n = _5029_p.len();;
	(_5029_p).mut_slice(0LL, (_525_n - _1e019105b_Ext(_5029_p).len()));;
	jule::Str _589_a1 = jule::Str();;
	jule::Str _619_a2 = jule::Str();;
	jule::I64 _649_i = _1e0172768_FindLastByte(_5029_p, '_');;
	if ((_649_i == -1LL)) {
		jule::Bool _6713_ok = false;;
		jule::Bool _6721_exist = false;;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1d685d941_checkOs(_5029_p);
			_6713_ok = __jule_assign_result.__jule_result_arg0;
			_6721_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_6721_exist) {
			return _6713_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1d685da84_checkArch(_5029_p);
			_6713_ok = __jule_assign_result.__jule_result_arg0;
			_6721_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_6721_exist)) || _6713_ok);;
	};
	if (((_649_i + 1LL) >= _525_n)) {
		return true;;
	};
	_589_a1=_5029_p.slice((_649_i + 1LL));
	(_5029_p).mut_slice(0LL, _649_i);;
	_649_i=static_cast<jule::I64>(_1e0172768_FindLastByte(_5029_p, '_'));
	if ((_649_i != -1LL)) {
		_619_a2=_5029_p.slice((_649_i + 1LL));
	};
	if ((_619_a2).empty()) {
		jule::Bool _8813_ok = false;;
		jule::Bool _8821_exist = false;;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1d685d941_checkOs(_589_a1);
			_8813_ok = __jule_assign_result.__jule_result_arg0;
			_8821_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_8821_exist) {
			return _8813_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1d685da84_checkArch(_589_a1);
			_8813_ok = __jule_assign_result.__jule_result_arg0;
			_8821_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_8821_exist)) || _8813_ok);;
	};
	jule::Bool _969_ok = false;;
	jule::Bool _9617_exist = false;;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1d685da84_checkArch(_589_a1);
		_969_ok = __jule_assign_result.__jule_result_arg0;
		_9617_exist = __jule_assign_result.__jule_result_arg1;
	});
	if (_9617_exist) {
		if ((!(_969_ok))) {
			return false;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1d685d941_checkOs(_619_a2);
			_969_ok = __jule_assign_result.__jule_result_arg0;
			_9617_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_9617_exist)) || _969_ok);;
	};
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1d685d941_checkOs(_589_a1);
		_969_ok = __jule_assign_result.__jule_result_arg0;
		_9617_exist = __jule_assign_result.__jule_result_arg1;
	});
	return ((!(_9617_exist)) || _969_ok);;
}



inline void _1d68794b7_setOsVars(jule::Slice<jule::Str>* _3619_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(_1e034ee1d_Os); };
	if (_1e023ecdb_IsUnix(_1e034ee1d_Os)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(jule::Str::lit("unix", 4)); };
	};
}



inline void _1d687973c_setArchVars(jule::Slice<jule::Str>* _4421_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(_1e03501d7_Arch); };
	if (_1e024044b_Is64Bit(_1e03501d7_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str::lit("x64", 3)); };
	};
	if (_1e0240182_Is32Bit(_1e03501d7_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str::lit("x32", 3)); };
	};
}



inline void _1d6879a28_initVars(jule::Slice<jule::Str>* _5518_vars, _1d6879198_CompileInfo* _5532_info) {
	_1d68794b7_setOsVars(_5518_vars);
	_1d687973c_setArchVars(_5518_vars);
	if ((*(_5532_info))._field_Prod) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("production", 10)); };
	};
	if ((*(_5532_info))._field_Test) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("test", 4)); };
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_Compiler };
		
		if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1da9c3464:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("clang", 5)); };
			}
		}
		else if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1da9c34db:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("gcc", 3)); };
			}
		}
		_match_end_1da9c340e:;
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1da9c4685:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp14", 5)); };
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1da9c46eb:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp17", 5)); };
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1da9c4773:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp20", 5)); };
			}
		}
		_match_end_1da9c48b6:;
	};
}



inline jule::Slice<jule::U8> _1d7163685_readBuff(jule::Str _3013_path) {
	return ({
		auto except = static__216767661_Read(_3013_path);
		(except.ok()) ? (except.result) : ({{
			jule::outln(jule::Str::lit("error: file cannot read", 23));
			;
			_1e034dd2e_Exit(1LL);
			return nullptr;;
		} jule::Slice<jule::U8>(nullptr);});
	});;
}



inline _1e0235a7e_Log _1d7163960_flatCompilerErr(jule::Str _4120_text) {
	return _1e0235a7e_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Text=_4120_text, };;
}



inline void _1d7168107_pushPasses(jule::Ptr<_1d6598835_Package>* _11120_p, jule::Slice<jule::Str>* _11144_passes) {
	{
		auto expr = &((*((*(_11120_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1daa05320:;
		if (it != expr_end) {
			jule::Ptr<_1d6641d73_SymbolTable> _11217_f = *it;
			{
				_julec_label_1daa0594c:;
				{
					auto expr = &((*(_11217_f))._field_Passes);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1daa05d9d:;
					if (it != expr_end) {
						_1d653985e_Pass _11416_pass = *it;
						{
							if ((_11416_pass._field_Text).empty()) {
								goto _iter_next_1daa05d9d;
							};
							{
								auto expr = _11144_passes;
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1daa0662e:;
								if (it != expr_end) {
									jule::Str _11820_cpass = *it;
									{
										if ((_11820_cpass == _11416_pass._field_Text)) {
											goto _iter_next_1daa05d9d;
										};
									}
									_iter_next_1daa0662e:;
									++it;
									goto _iter_begin_1daa0662e;
								}
								_iter_end_1daa0662e:;
							};
							{ jule::Slice<jule::Str> &__jule_push_dest = (*(_11144_passes)); __jule_push_dest.push(_11416_pass._field_Text); };
						}
						_iter_next_1daa05d9d:;
						++it;
						goto _iter_begin_1daa05d9d;
					}
					_iter_end_1daa05d9d:;
				};
			}
			_iter_next_1daa05320:;
			++it;
			goto _iter_begin_1daa05320;
		}
		_iter_end_1daa05320:;
	};
}



inline jule::Slice<jule::Str> _1d71684c0_getAllUniquePasses(jule::Ptr<_1d6598835_Package>* _12828_pkg, jule::Slice<jule::Ptr<_1d659590e_ImportInfo>> _12853_uses) {
	jule::Slice<jule::Str> _12913_passes = nullptr;;
	_1d7168107_pushPasses(_12828_pkg, &(_12913_passes));
	{
		auto expr = &(_12853_uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1daa08224:;
		if (it != expr_end) {
			jule::Ptr<_1d659590e_ImportInfo> _13217_u = *it;
			{
				if ((!((*(_13217_u))._field_Binded))) {
					_1d7168107_pushPasses(&((*(_13217_u))._field_Package), &(_12913_passes));
				};
			}
			_iter_next_1daa08224:;
			++it;
			goto _iter_begin_1daa08224;
		}
		_iter_end_1daa08224:;
	};
	return _12913_passes;;
}



inline _1d6879198_CompileInfo _1d71686ce_buildCompileInfo(void) {
	_1d6879198_CompileInfo _1429_info = _1d6879198_CompileInfo{._field_Prod=_208a42c35_Production, ._field_Test=_208a422c8_Test, };;
	{
		auto &_match_expr{ _208a403c5_Compiler };
		
		if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1daa095ee:;
			{
				_1429_info._field_Compiler=jule::Str::lit("clang", 5);
			}
		}
		else if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1daa09676:;
			{
				_1429_info._field_Compiler=jule::Str::lit("gcc", 3);
			}
		}
		_match_end_1daa08873:;
	};
	{
		auto &_match_expr{ _208a419ae_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1daa094ab:;
			{
				_1429_info._field_CppStd=jule::Str::lit("cpp14", 5);
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1daa0a204:;
			{
				_1429_info._field_CppStd=jule::Str::lit("cpp17", 5);
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1daa09a3e:;
			{
				_1429_info._field_CppStd=jule::Str::lit("cpp20", 5);
			}
		}
		_match_end_1daa0a3d0:;
	};
	return _1429_info;;
}



inline void _1d72c561b_EliminateDefines(jule::Ptr<_1d7166787_IR>* _29026_ir) {
	jule::Ptr<_1d7292c15_ObjectDeadCode> _2919_ocd = static__1d72931aa_new(_29026_ir);;
	_1d72c52db_elimanate(_2919_ocd);
}



inline jule::Ptr<_1d64ea7ed_Directive> _1d72c59d4_findDirective(jule::Slice<jule::Ptr<_1d64ea7ed_Directive>>* _29623_directives, jule::Str _29654_tag) {
	{
		auto expr = _29623_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1daa4456d:;
		if (it != expr_end) {
			jule::Ptr<_1d64ea7ed_Directive> _29717_dr = *it;
			{
				if (((*((*(_29717_dr))._field_Tag))._field_Kind == _29654_tag)) {
					return _29717_dr;;
				};
			}
			_iter_next_1daa4456d:;
			++it;
			goto _iter_begin_1daa4456d;
		}
		_iter_end_1daa4456d:;
	};
	return nullptr;;
}



inline jule::Bool _1d72c5d58_hasDirective(jule::Slice<jule::Ptr<_1d64ea7ed_Directive>>* _30618_directives, jule::Str _30649_tag) {
	return (_1d72c59d4_findDirective(&((*(_30618_directives))), _30649_tag) != nullptr);;
}



inline jule::Bool _1d72c6221_isTraitMethod(jule::Ptr<_1d652005e_StructIns>* _31123_owner, jule::Ptr<_1d6535173_FnIns>* _31143_f) {
	{
		auto expr = &((*((*((*(_31123_owner))))._field_Decl))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1daa457b1:;
		if (it != expr_end) {
			jule::Ptr<_1d654554b_Trait> _31217_t = *it;
			{
				if ((_1d65461ea_FindMethod(_31217_t.ptr(), (*((*((*(_31143_f))))._field_Decl))._field_Ident) != nullptr)) {
					return true;;
				};
			}
			_iter_next_1daa457b1:;
			++it;
			goto _iter_begin_1daa457b1;
		}
		_iter_end_1daa457b1:;
	};
	return false;;
}



inline void _1d72ca225_eliminateDeadCodeOfScope(jule::Ptr<_1d6574129_Scope> _24133_s) {
	jule::Slice<jule::Ptr<_1d65769bc_Label>> _2425_labels = jule::Slice<jule::Ptr<_1d65769bc_Label>>::alloc(0LL, 16LLU);;
	jule::Slice<jule::Ptr<_1d6576d96_GotoSt>> _2435_gotos = jule::Slice<jule::Ptr<_1d6576d96_GotoSt>>::alloc(0LL, 16LLU);;
	jule::Ptr<_1d72c7024_scopeDeadCode> _2449_sdc = jule::new_ptr<_1d72c7024_scopeDeadCode>(_1d72c7024_scopeDeadCode{._field_s=_24133_s, ._field_stmts=(&((*(_24133_s))._field_Stmts)), ._field_labels=((jule::Ptr<jule::Slice<jule::Ptr<_1d65769bc_Label>>>)((&(_2425_labels)))), ._field_gotos=((jule::Ptr<jule::Slice<jule::Ptr<_1d6576d96_GotoSt>>>)((&(_2435_gotos)))), });;
	{
		_1d72c9de5_optimizeStmts(_2449_sdc);
	};
}



inline void _1d72ca49a_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1d653226e_Fn>>* _25433_funcs) {
	{
		auto expr = _25433_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1daa88ace:;
		if (it != expr_end) {
			jule::Ptr<_1d653226e_Fn> _25517_func = *it;
			{
				{
					auto expr = &((*(_25517_func))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1daa896e5:;
					if (it != expr_end) {
						jule::Ptr<_1d6535173_FnIns> _25621_ins = *it;
						{
							_1d72ca225_eliminateDeadCodeOfScope((*(_25621_ins))._field_Scope);
						}
						_iter_next_1daa896e5:;
						++it;
						goto _iter_begin_1daa896e5;
					}
					_iter_end_1daa896e5:;
				};
			}
			_iter_next_1daa88ace:;
			++it;
			goto _iter_begin_1daa88ace;
		}
		_iter_end_1daa88ace:;
	};
}



inline void _1d72ca6cb_eliminateFunctionsScopePackage(jule::Ptr<_1d6598835_Package>* _26240_pkg) {
	{
		auto expr = &((*((*(_26240_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1daa8952a:;
		if (it != expr_end) {
			jule::Ptr<_1d6641d73_SymbolTable> _26317_f = *it;
			{
				_1d72ca49a_eliminateScopeFunctions(&((*(_26317_f))._field_Funcs));
			}
			_iter_next_1daa8952a:;
			++it;
			goto _iter_begin_1daa8952a;
		}
		_iter_end_1daa8952a:;
	};
}



inline void _1d72ca984_eliminateScopePackage(jule::Ptr<_1d6598835_Package>* _26831_pkg) {
	_1d72ca6cb_eliminateFunctionsScopePackage(_26831_pkg);
}



inline void _1d72cabb5_EliminateScopes(jule::Ptr<_1d7166787_IR>* _27325_ir) {
	jule::I64 _2749_i = ((*((*(_27325_ir))))._field_Used.len() - 1LL);;
	for (; (_2749_i >= 0LL); (_2749_i)--) {
		{
			jule::Ptr<_1d659590e_ImportInfo> _27613_u = (*((*(_27325_ir))))._field_Used[_2749_i];;
			if ((!((*(_27613_u))._field_Binded))) {
				_1d72ca984_eliminateScopePackage(&((*(_27613_u))._field_Package));
			};
		}
	_iter_next_1daa8b351:;
	}
	_iter_end_1daa8b351:;;
	_1d72ca984_eliminateScopePackage(&((*((*(_27325_ir))))._field_Main));
}



inline jule::Uintptr _1d676e19d_typeData(jule::Any* _1714_m) {
	return static_cast<jule::Uintptr>(((jule::Uintptr)(((*(_1714_m))).type)));;
}



inline jule::Bool _1d676e566_equalConst(jule::Ptr<_1d4321208_Const> _2115_l, jule::Ptr<_1d4321208_Const> _2126_r) {
	{
		
		if (_1d43251c9_IsI64(_2115_l.ptr())) {
			_case_begin_1dab217b0:;
			{
				return (_1d43251c9_IsI64(_2126_r.ptr()) && (_1d4322acd_ReadI64(_2115_l.ptr()) == _1d4322acd_ReadI64(_2126_r.ptr())));;
			}
		}
		else if (_1d4325460_IsU64(_2115_l.ptr())) {
			_case_begin_1dab21837:;
			{
				return (_1d4325460_IsU64(_2126_r.ptr()) && (_1d4322d64_ReadU64(_2115_l.ptr()) == _1d4322d64_ReadU64(_2126_r.ptr())));;
			}
		}
		else if (_1d4325c13_IsF64(_2115_l.ptr())) {
			_case_begin_1dab21ae0:;
			{
				return (_1d4325c13_IsF64(_2126_r.ptr()) && (_1d4323617_ReadF64(_2115_l.ptr()) == _1d4323617_ReadF64(_2126_r.ptr())));;
			}
		}
		else if (_1d432597c_IsStr(_2115_l.ptr())) {
			_case_begin_1dab21b56:;
			{
				return (_1d432597c_IsStr(_2126_r.ptr()) && (_1d4323381_ReadStr(_2115_l.ptr()) == _1d4323381_ReadStr(_2126_r.ptr())));;
			}
		}
		else if (_1d43256e6_IsBool(_2115_l.ptr())) {
			_case_begin_1dab21bbc:;
			{
				return (_1d43256e6_IsBool(_2126_r.ptr()) && (_1d43230ea_ReadBool(_2115_l.ptr()) == _1d43230ea_ReadBool(_2126_r.ptr())));;
			}
		}
		else if (_1d4325e99_IsNil(_2115_l.ptr())) {
			_case_begin_1dab21c33:;
			{
				return _1d4325e99_IsNil(_2126_r.ptr());;
			}
		}
		else {
			_case_begin_1dab216a0:;
			{
				return false;;
			}
		}
		_match_end_1dab21040:;
	};
}



inline jule::Bool _1d676e8da_equalCasting(jule::Ptr<_1d6525b36_CastingExprModel> _4017_l, jule::Ptr<_1d6525b36_CastingExprModel> _4039_r) {
	if ((!(_1d667823e_Equal((*(_4017_l))._field_Kind, (*(_4039_r))._field_Kind)))) {
		return false;;
	};
	return _1d6770787_equalModels((*(_4017_l))._field_Expr, (*(_4039_r))._field_Expr);;
}



inline jule::Bool _1d676ec1a_equalUnary(jule::Ptr<_1d65248d2_UnaryExprModel> _4715_l, jule::Ptr<_1d65248d2_UnaryExprModel> _4735_r) {
	if ((((*((*(_4715_l))._field_Op))._field_Id != (*((*(_4735_r))._field_Op))._field_Id) || ((*((*(_4715_l))._field_Op))._field_Kind != (*((*(_4735_r))._field_Op))._field_Kind))) {
		return false;;
	};
	return _1d6770787_equalModels((*((*(_4715_l))._field_Expr))._field_Model, (*((*(_4735_r))._field_Expr))._field_Model);;
}



inline jule::Bool _1d677008e_equalIndexing(jule::Ptr<_1d6526d68_IndexingExprModel> _5418_l, jule::Ptr<_1d6526d68_IndexingExprModel> _5441_r) {
	return (_1d6770787_equalModels((*((*(_5418_l))._field_Expr))._field_Model, (*((*(_5441_r))._field_Expr))._field_Model) && _1d6770787_equalModels((*((*(_5418_l))._field_Index))._field_Model, (*((*(_5441_r))._field_Index))._field_Model));;
}



inline jule::Bool _1d6770413_equalBinary(jule::Ptr<_1d6524508_BinaryExprModel> _5916_l, jule::Ptr<_1d6524508_BinaryExprModel> _5937_r) {
	if ((((*((*(_5916_l))._field_Op))._field_Id != (*((*(_5937_r))._field_Op))._field_Id) || ((*((*(_5916_l))._field_Op))._field_Kind != (*((*(_5937_r))._field_Op))._field_Kind))) {
		return false;;
	};
	return (_1d6770787_equalModels((*((*(_5916_l))._field_Left))._field_Model, (*((*(_5937_r))._field_Left))._field_Model) && _1d6770787_equalModels((*((*(_5916_l))._field_Right))._field_Model, (*((*(_5937_r))._field_Right))._field_Model));;
}



inline jule::Bool _1d6770787_equalModels(jule::Any _7016_l, jule::Any _7030_r) {
	if ((_1d676e19d_typeData(&(_7016_l)) != _1d676e19d_typeData(&(_7030_r)))) {
		return false;;
	};
	{
		auto &_match_expr{ _7016_l };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1dab30725:;
			{
				return (_7016_l.cast_ptr<_1d65d9018_Var>(&__jule_any_type8) == _7030_r.cast_ptr<_1d65d9018_Var>(&__jule_any_type8));;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1dab3079c:;
			{
				jule::Ptr<_1d6529079_StructSubIdentExprModel> _789_li = _7016_l.cast_ptr<_1d6529079_StructSubIdentExprModel>(&__jule_any_type97);;
				jule::Ptr<_1d6529079_StructSubIdentExprModel> _799_ri = _7030_r.cast_ptr<_1d6529079_StructSubIdentExprModel>(&__jule_any_type97);;
				return (((*(_789_li))._field_Field == (*(_799_ri))._field_Field) && _1d6770787_equalModels((*((*(_789_li))._field_Expr))._field_Model, (*((*(_799_ri))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1dab30824:;
			{
				return _1d676e566_equalConst(_7016_l.cast_ptr<_1d4321208_Const>(&__jule_any_type19), _7030_r.cast_ptr<_1d4321208_Const>(&__jule_any_type19));;
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1dab30a99:;
			{
				return _1d676e8da_equalCasting(_7016_l.cast_ptr<_1d6525b36_CastingExprModel>(&__jule_any_type92), _7030_r.cast_ptr<_1d6525b36_CastingExprModel>(&__jule_any_type92));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1dab30b10:;
			{
				return _1d676ec1a_equalUnary(_7016_l.cast_ptr<_1d65248d2_UnaryExprModel>(&__jule_any_type110), _7030_r.cast_ptr<_1d65248d2_UnaryExprModel>(&__jule_any_type110));;
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1dab30b76:;
			{
				return _1d677008e_equalIndexing(_7016_l.cast_ptr<_1d6526d68_IndexingExprModel>(&__jule_any_type45), _7030_r.cast_ptr<_1d6526d68_IndexingExprModel>(&__jule_any_type45));;
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1dab30bdc:;
			{
				return _1d6770413_equalBinary(_7016_l.cast_ptr<_1d6524508_BinaryExprModel>(&__jule_any_type111), _7030_r.cast_ptr<_1d6524508_BinaryExprModel>(&__jule_any_type111));;
			}
		}
		else {
			_case_begin_1dab301b4:;
			{
				return false;;
			}
		}
		_match_end_1dab3066a:;
	};
}



inline jule::Bool _1d6778ae2_isStdPackage(jule::Str* _46318_f, jule::Str _46326_p) {
	return _1e016e5ab_HasPrefix((*(_46318_f)), _1e0190c92_Join(jule::Slice<jule::Str>::make({_1e034e33a_PathStdlib,_46326_p})));;
}



inline jule::Bool _1d6778e00_isConstantValidConditionalCase(jule::Ptr<_1d6574547_If>* _46736_i) {
	{
		auto &_match_expr{ (*((*(_46736_i))))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1dab36165:;
			{
				jule::Ptr<_1d4321208_Const> _4709_c = (*((*(_46736_i))))._field_Expr.cast_ptr<_1d4321208_Const>(&__jule_any_type19);;
				return (_1d43256e6_IsBool(_4709_c.ptr()) && _1d43230ea_ReadBool(_4709_c.ptr()));;
			}
		}
		_match_end_1dab36110:;
	};
	return false;;
}



inline jule::Bool _1d67791b9_isUnreachableExpr(jule::Any* _47623_expr) {
	{
		auto &_match_expr{ (*(_47623_expr)) };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1dab362b9:;
			{
				jule::Ptr<_1d4321208_Const> _4799_c = (*(_47623_expr)).cast_ptr<_1d4321208_Const>(&__jule_any_type19);;
				return (_1d43256e6_IsBool(_4799_c.ptr()) && (!(_1d43230ea_ReadBool(_4799_c.ptr()))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1dab36e8a:;
			{
				jule::Ptr<_1d6524508_BinaryExprModel> _4829_m = (*(_47623_expr)).cast_ptr<_1d6524508_BinaryExprModel>(&__jule_any_type111);;
				if (((*((*(_4829_m))._field_Op))._field_Id == static_cast<jule::U64>(54LLU))) {
					return (_1d67791b9_isUnreachableExpr(&((*((*(_4829_m))._field_Left))._field_Model)) || _1d67791b9_isUnreachableExpr(&((*((*(_4829_m))._field_Right))._field_Model)));;
				};
			}
		}
		_match_end_1dab36264:;
	};
	return false;;
}



inline jule::Bool _1d677950a_isConstantValidMatchCase(jule::Ptr<_1d6578d98_Case>* _49130_case) {
	{
		auto expr = &((*((*(_49130_case))))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1dab3a741:;
		if (it != expr_end) {
			jule::Ptr<_1d664721e_Data> *_49212_expr = it;
			{
				if (((_1d6647ae3_IsConst((*(_49212_expr)).ptr()) && _1d43256e6_IsBool((*((*(_49212_expr))))._field_Constant.ptr())) && _1d43230ea_ReadBool((*((*(_49212_expr))))._field_Constant.ptr()))) {
					return true;;
				};
			}
			_iter_next_1dab3a741:;
			++it;
			goto _iter_begin_1dab3a741;
		}
		_iter_end_1dab3a741:;
	};
	return false;;
}



inline jule::Bool _1d67797c4_isUnreachableConditionalCase(jule::Ptr<_1d6574547_If>* _50034_i) {
	return _1d67791b9_isUnreachableExpr(&((*((*(_50034_i))))._field_Expr));;
}



inline jule::Bool _1d6779a8d_isUnreachableMatchCase(jule::Ptr<_1d6578d98_Case>* _50428_case) {
	{
		auto expr = &((*((*(_50428_case))))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1dab3c743:;
		if (it != expr_end) {
			jule::Ptr<_1d664721e_Data> *_50512_expr = it;
			{
				if ((!(_1d67791b9_isUnreachableExpr(&((*((*(_50512_expr))))._field_Model))))) {
					return false;;
				};
			}
			_iter_next_1dab3c743:;
			++it;
			goto _iter_begin_1dab3c743;
		}
		_iter_end_1dab3c743:;
	};
	return true;;
}



inline __jule_tuple_bool__jule_tuple_u64 _1d6783877_checkForBitShiftOpt(jule::Ptr<_1d652400d_OperandExprModel>* _63425_l, jule::Ptr<_1d652400d_OperandExprModel>* _63448_r) {
	__jule_tuple_bool__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = 0;
	if (((!(_1d4320625_IsInt(_1d6677ded_Str((*((*(_63425_l))))._field_Kind.ptr())))) || (!(_1d4320625_IsInt(_1d6677ded_Str((*((*(_63448_r))))._field_Kind.ptr())))))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>(_1d4323b34_AsU64((*((*(_63448_r))))._field_Model.cast_ptr<_1d4321208_Const>(&__jule_any_type19).ptr()));
	if (((__jule_func_result.__jule_result_arg1 == 0LLU) || ((__jule_func_result.__jule_result_arg1 & 1LL) != 0LLU))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	jule::F64 _6425_j = _1c7608ba1_Log2(static_cast<jule::F64>(static_cast<jule::F64>(__jule_func_result.__jule_result_arg1)));;
	jule::U64 _6435_z = static_cast<jule::U64>(_6425_j);;
	if ((static_cast<jule::F64>(_6435_z) != _6425_j)) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = _6435_z;
	return __jule_func_result;;
}



inline jule::Bool _1d6783c40_areSameLvalueExprModel(jule::Any* _65128_l, jule::Any* _65143_r) {
	{
		auto &_match_expr{ (*(_65128_l)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1dab8d909:;
			{
				return ((*(_65143_r)) == (*(_65128_l)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1dab8d970:;
			{
				{
					auto &_match_expr{ (*(_65143_r)) };
					
					if (_match_expr.type == &__jule_any_type97) {
						_case_begin_1dab8e443:;
						{
							goto _match_end_1dab8e399;
						}
					}
					else {
						_case_begin_1dab8e586:;
						{
							return false;;
						}
					}
					_match_end_1dab8e399:;
				};
				jule::Ptr<_1d6529079_StructSubIdentExprModel> _6649_lsi = (*(_65128_l)).cast_ptr<_1d6529079_StructSubIdentExprModel>(&__jule_any_type97);;
				jule::Ptr<_1d6529079_StructSubIdentExprModel> _6659_rsi = (*(_65143_r)).cast_ptr<_1d6529079_StructSubIdentExprModel>(&__jule_any_type97);;
				if (((*(_6649_lsi))._field_Field != (*(_6659_rsi))._field_Field)) {
					return false;;
				};
				return _1d6783c40_areSameLvalueExprModel(&((*((*(_6649_lsi))._field_Expr))._field_Model), &((*((*(_6659_rsi))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1dab8d9e7:;
			{
				{
					auto &_match_expr{ (*(_65143_r)) };
					
					if (_match_expr.type == &__jule_any_type110) {
						_case_begin_1dab91005:;
						{
							jule::Ptr<_1d65248d2_UnaryExprModel> _67713_ul = (*(_65128_l)).cast_ptr<_1d65248d2_UnaryExprModel>(&__jule_any_type110);;
							jule::Ptr<_1d65248d2_UnaryExprModel> _67813_ur = (*(_65143_r)).cast_ptr<_1d65248d2_UnaryExprModel>(&__jule_any_type110);;
							if ((((*((*(_67713_ul))._field_Op))._field_Id != (*((*(_67813_ur))._field_Op))._field_Id) || ((*((*(_67713_ul))._field_Op))._field_Kind != (*((*(_67813_ur))._field_Op))._field_Kind))) {
								return false;;
							};
							return _1d6783c40_areSameLvalueExprModel(&((*((*(_67713_ul))._field_Expr))._field_Model), &((*((*(_67813_ur))._field_Expr))._field_Model));;
						}
					}
					_match_end_1dab90631:;
				};
			}
		}
		_match_end_1dab8d8a4:;
	};
	return false;;
}



inline void _1d678655b_PushOptLevel(jule::I64 _2917_level) {
	jule::Bool _305_l1 = (_2917_level >= static_cast<jule::I64>(1LL));;
	_1d6784416_Copy=_305_l1;
	_1d6784724_Deadcode=_305_l1;
	_1d67849dd_Append=_305_l1;
	_1d6784ceb_Math=_305_l1;
	_1d67850b5_Access=_305_l1;
	_1d678537e_Inline=_305_l1;
	_1d6785648_Ptr=_305_l1;
	_1d6785a22_Cond=_305_l1;
	_1d6785cdb_Str=_305_l1;
	_1d67860a5_Slice=_305_l1;
	_1d678636e_Assign=_305_l1;
}



inline void _1d72d50cb_detectEnabled(void) {
	_1d72d2d21_exprEnabled=(((_1d6785648_Ptr || _1d6784ceb_Math) || _1d67850b5_Access) || _1d6785a22_Cond);
	_1d72d30da_scopeEnabled=(((((_1d6785a22_Cond || _1d67849dd_Append) || _1d6784416_Copy) || _1d6785cdb_Str) || _1d67860a5_Slice) || _1d678636e_Assign);
}



inline void _1d730d951_Throw(jule::Str _910_msg) {
	jule::outln(_910_msg);
	_1e034dd2e_Exit(1LL);
}



inline jule::U64 _1d7c45497_unix(void) {
	return static_cast<jule::U64>(static_cast<jule::U64>(time(nullptr)));;
}



inline jule::Bool _1d7b709aa_isCopyOptimizable(jule::Ptr<_1d664721e_Data>* _86523_expr) {
	if ((!((*((*(_86523_expr))))._field_Lvalue))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_86523_expr))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1dacec12d:;
			{
				return false;;
			}
		}
		_match_end_1dacec0c8:;
	};
	return true;;
}



inline jule::Bool _1d7b70d73_isIterCopyOptimizable(jule::Ptr<_1d664721e_Data>* _87627_expr, jule::Ptr<_1d65d9018_Var>* _87641_v) {
	if (((!((*((*(_87627_expr))))._field_Lvalue)) && (!(_1d66793b6_Mutable((*((*(_87627_expr))))._field_Kind.ptr()))))) {
		return true;;
	};
	return ((!((*((*(_87641_v))))._field_Mutable)) && (!((*((*(_87627_expr))))._field_Mutable)));;
}



inline jule::Str _1d7b80eb5_decomposeCommonEsq(jule::U8 _149623_b) {
	{
		auto &_match_expr{ _149623_b };
		
		if (_match_expr == '\\') {
			_case_begin_1dae06ce8:;
			{
				return jule::Str::lit("\\\\", 2);;
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1dae07458:;
			{
				return jule::Str::lit("'", 1);;
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1dae06eb3:;
			{
				return jule::Str::lit("\\\"", 2);;
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_1dae07029:;
			{
				return jule::Str::lit("\\a", 2);;
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_1dae07090:;
			{
				return jule::Str::lit("\\b", 2);;
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_1dae07106:;
			{
				return jule::Str::lit("\\f", 2);;
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_1dae07623:;
			{
				return jule::Str::lit("\\n", 2);;
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_1dae07689:;
			{
				return jule::Str::lit("\\r", 2);;
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_1dae07700:;
			{
				return jule::Str::lit("\\t", 2);;
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_1dae07766:;
			{
				return jule::Str::lit("\\v", 2);;
			}
		}
		else {
			_case_begin_1dae06e4c:;
			{
				return jule::Str();;
			}
		}
		_match_end_1dadec8b0:;
	};
}



inline jule::Str _1d7b812c3_sbtoa(jule::U8 _152310_b) {
	if ((_152310_b == 0LLU)) {
		return jule::Str::lit("\\x00", 4);;
	};
	if ((_152310_b < 128LLU)) {
		jule::Str _15289_seq = _1d7b80eb5_decomposeCommonEsq(_152310_b);;
		if (!(_15289_seq).empty()) {
			return _15289_seq;;
		};
		if (((32LL <= _152310_b) && (_152310_b <= 126LLU))) {
			return jule::Str::from_byte(_152310_b);;
		};
	};
	jule::Str _15365_seq = _1d4312a68_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_152310_b)), 8LL);;
	if ((_15365_seq.len() == 2LL)) {
		return (jule::Str::lit("\\0", 2) + _15365_seq);;
	};
	return (jule::Str::lit("\\", 1) + _15365_seq);;
}



inline void _1d7b815ae_cstrBytes(_1e01838bc_StrBuilder* _154319_s, jule::Str _154334_ctx) {
	{
		auto expr = &(_154334_ctx);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1dae0c3a3:;
		if (it != expr_end) {
			jule::U8 *_154412_b = it;
			{
				_1e018c6ea_WriteStr(_154319_s, _1d7b812c3_sbtoa((*(_154412_b))));
			}
			_iter_next_1dae0c3a3:;
			++it;
			goto _iter_begin_1dae0c3a3;
		}
		_iter_end_1dae0c3a3:;
	};
}



inline void _1d7b818de_cstrLit(_1e01838bc_StrBuilder* _154917_s, jule::Str _154932_ctx) {
	_1e018c9a3_WriteByte(_154917_s, '\"');
	_1d7b815ae_cstrBytes(_154917_s, _154932_ctx);
	_1e018c9a3_WriteByte(_154917_s, '\"');
}



inline void _1d7b81c85_ftoa(_1e01838bc_StrBuilder* _155514_s, jule::F64 _155529_f, jule::I64 _155537_bitsize) {
	if ((_155537_bitsize != 32LL)) {
		if ((_155529_f == static_cast<jule::F64>(static_cast<jule::I64>(_155529_f)))) {
			_1d7b82071_itoa(_155514_s, static_cast<jule::I64>(static_cast<jule::I64>(_155529_f)));
			return;;
		};
		if ((_155529_f == static_cast<jule::F64>(static_cast<jule::U64>(_155529_f)))) {
			_1d7b8235c_utoa(_155514_s, static_cast<jule::U64>(static_cast<jule::U64>(_155529_f)));
			return;;
		};
	};
	jule::Str _15665_m = _1d42eb36a_FmtFloat(_155529_f, 'f', -1LL, _155537_bitsize);;
	_1e018c6ea_WriteStr(_155514_s, _15665_m);
	if ((!(_1e01740b6_Contains(_15665_m, jule::Str::lit(".", 1))))) {
		_1e018c6ea_WriteStr(_155514_s, jule::Str::lit(".0", 2));
	};
}



inline void _1d7b82071_itoa(_1e01838bc_StrBuilder* _157314_s, jule::I64 _157329_x) {
	{
		
		if ((_157329_x == jule::MAX_I64)) {
			_case_begin_1dae115d8:;
			{
				_1e018c6ea_WriteStr(_157314_s, jule::Str::lit("jule::MAX_I64", 13));
				return;;
			}
		}
		else if ((_157329_x == jule::MIN_I64)) {
			_case_begin_1dae11660:;
			{
				_1e018c6ea_WriteStr(_157314_s, jule::Str::lit("jule::MIN_I64", 13));
				return;;
			}
		}
		_match_end_1dae114c8:;
	};
	_1e018c6ea_WriteStr(_157314_s, _1d4312e31_FmtInt(_157329_x, 10LL));
	if (_1e024044b_Is64Bit(jule::Str::lit("arm64", 5))) {
		_1e018c9a3_WriteByte(_157314_s, 'L');
	};
	_1e018c9a3_WriteByte(_157314_s, 'L');
}



inline void _1d7b8235c_utoa(_1e01838bc_StrBuilder* _159014_s, jule::U64 _159029_x) {
	{
		
		if ((_159029_x == jule::MAX_U64)) {
			_case_begin_1dae1371c:;
			{
				_1e018c6ea_WriteStr(_159014_s, jule::Str::lit("jule::MAX_U64", 13));
				return;;
			}
		}
		_match_end_1dae1361d:;
	};
	_1e018c6ea_WriteStr(_159014_s, _1d4312a68_FmtUint(_159029_x, 10LL));
	if (_1e024044b_Is64Bit(jule::Str::lit("arm64", 5))) {
		_1e018c9a3_WriteByte(_159014_s, 'L');
	};
	_1e018c6ea_WriteStr(_159014_s, jule::Str::lit("LU", 2));
}



inline jule::Bool _1d7b82736_isForwarded(jule::Ptr<_1d6574129_Scope>* _160417_s) {
	jule::Any _16055_last = (*((*(_160417_s))))._field_Stmts[((*((*(_160417_s))))._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _16055_last };
		
		if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1dae15a0a:;
			{
				{
					auto &_match_expr{ (*(_16055_last.cast_ptr<_1d664721e_Data>(&__jule_any_type24)))._field_Model };
					
					if (_match_expr.type == &__jule_any_type23) {
						_case_begin_1dae16852:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1dae167db:;
						{
							return false;;
						}
					}
					_match_end_1dae16786:;
				};
			}
		}
		else {
			_case_begin_1dae15ae8:;
			{
				return true;;
			}
		}
		_match_end_1dae150e2:;
	};
}



inline jule::Bool _1d7b82a00_isExprComesFromBind(jule::Ptr<_1d664721e_Data>* _161925_d) {
	{
		auto &_match_expr{ (*((*(_161925_d))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1dae1704a:;
			{
				return (*((*((*(_161925_d))))._field_Model.cast_ptr<_1d65d9018_Var>(&__jule_any_type8)))._field_Binded;;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1dae170b1:;
			{
				return (*((*((*((*((*(_161925_d))))._field_Model.cast_ptr<_1d6529079_StructSubIdentExprModel>(&__jule_any_type97)))._field_Owner))._field_Decl))._field_Binded;;
			}
		}
		else {
			_case_begin_1dae16ed4:;
			{
				return false;;
			}
		}
		_match_end_1dae16e7e:;
	};
}



inline jule::Bool _1d7b82cb9_isAny(jule::Ptr<_1d6677a35_TypeKind>* _163115_t) {
	if ((_1d667abc0_TypeEnum((*(_163115_t)).ptr()) != nullptr)) {
		return true;;
	};
	jule::Ptr<_1d668060e_Prim> _16355_prim = _1d667a186_Prim((*(_163115_t)).ptr());;
	return ((_16355_prim != nullptr) && _1d6683d2c_IsAny(_16355_prim.ptr()));;
}



inline void _1d7c59a94_iterFiles(jule::Ptr<_1d6598835_Package>* _136019_pkg, jule::Fn<void(jule::Ptr<_1d6641d73_SymbolTable>*)> _136034_f) {
	{
		auto expr = &((*((*(_136019_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1db11c0da:;
		if (it != expr_end) {
			jule::Ptr<_1d6641d73_SymbolTable> _136117_file = *it;
			{
				_136034_f(&(_136117_file));
			}
			_iter_next_1db11c0da:;
			++it;
			goto _iter_begin_1db11c0da;
		}
		_iter_end_1db11c0da:;
	};
}



inline jule::Slice<jule::U8> _1d7c59da2_concatAllParts(jule::Slice<jule::Ptr<_1d64d5cd3_Token>> _136719_parts) {
	jule::I64 _13689_n = 0LL;;
	{
		auto expr = &(_136719_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1db11d196:;
		if (it != expr_end) {
			jule::Ptr<_1d64d5cd3_Token> *_136912_part = it;
			{
				_13689_n+=(*((*(_136912_part))))._field_Kind.len();
			}
			_iter_next_1db11d196:;
			++it;
			goto _iter_begin_1db11d196;
		}
		_iter_end_1db11d196:;
	};
	if ((_13689_n == 0LL)) {
		return nullptr;;
	};
	_1e01838bc_StrBuilder _13759_s = static__1e0183b64_New(_13689_n);;
	{
		auto expr = &(_136719_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1db11c87c:;
		if (it != expr_end) {
			jule::Ptr<_1d64d5cd3_Token> *_137612_p = it;
			{
				_1e018c6ea_WriteStr(&_13759_s, (*((*(_137612_p))))._field_Kind);
			}
			_iter_next_1db11c87c:;
			++it;
			goto _iter_begin_1db11c87c;
		}
		_iter_end_1db11c87c:;
	};
	return _1e018d993_Buf(&_13759_s);;
}



inline jule::Bool _1d7c5a226_containsTraitMethod(jule::Ptr<_1d654554b_Trait>* _138329_t, jule::Str* _138341_ident) {
	{
		auto expr = &((*((*(_138329_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1db120220:;
		if (it != expr_end) {
			jule::Ptr<_1d653226e_Fn> _138412_m = *it;
			{
				if (((*(_138412_m))._field_Ident == (*(_138341_ident)))) {
					return true;;
				};
			}
			_iter_next_1db120220:;
			++it;
			goto _iter_begin_1db120220;
		}
		_iter_end_1db120220:;
	};
	return false;;
}



inline void _1d7c5a556_pushMethodsFromInherit(jule::Ptr<_1d654554b_Trait>* _139532_dest, jule::Ptr<_1d654554b_Trait>* _139551_src) {
	_1d7c5a842_pushMethodsFromInherits(_139532_dest, _139551_src);
	{
		auto expr = &((*((*(_139551_src))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1db121441:;
		if (it != expr_end) {
			jule::Ptr<_1d653226e_Fn> _139717_m = *it;
			{
				if ((!(_1d7c5a226_containsTraitMethod(_139532_dest, &((*(_139717_m))._field_Ident))))) {
					{ jule::Slice<jule::Ptr<_1d653226e_Fn>> &__jule_push_dest = (*((*(_139532_dest))))._field_Methods; __jule_push_dest.push(_139717_m); };
				};
			}
			_iter_next_1db121441:;
			++it;
			goto _iter_begin_1db121441;
		}
		_iter_end_1db121441:;
	};
}



inline void _1d7c5a842_pushMethodsFromInherits(jule::Ptr<_1d654554b_Trait>* _140633_dest, jule::Ptr<_1d654554b_Trait>* _140652_src) {
	{
		auto expr = &((*((*(_140652_src))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1db12273e:;
		if (it != expr_end) {
			jule::Ptr<_1d667ec07_TypeSymbol> _140717_inh = *it;
			{
				jule::Ptr<_1d654554b_Trait> _140813_t2 = _1d667b990_Trait((*(_140717_inh))._field_Kind.ptr());;
				_1d7c5a556_pushMethodsFromInherit(_140633_dest, &(_140813_t2));
			}
			_iter_next_1db12273e:;
			++it;
			goto _iter_begin_1db12273e;
		}
		_iter_end_1db12273e:;
	};
}



inline jule::Bool _1d7c5ab0b_isOpMethod(jule::Ptr<_1d653226e_Fn>* _141416_m) {
	if ((((*((*(_141416_m))))._field_Generics.len() > 0LL) || ((*((*(_141416_m))))._field_Instances.len() == 0LL))) {
		return false;;
	};
	jule::Ptr<_1d6535173_FnIns> _14185_mi = (*((*(_141416_m))))._field_Instances[0LL];;
	;
	;
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_Eq)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_Gt)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_GtEq)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_Lt)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_LtEq)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_Shl)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_Shr)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_Add)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_Sub)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_Div)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_Mul)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_Mod)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_BitAnd)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_BitOr)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_BitXor)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_Neg)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_Pos)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_BitNot)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_AddAssign)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_SubAssign)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_DivAssign)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_MulAssign)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_ModAssign)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_ShlAssign)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_ShrAssign)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_BitOrAssign)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_BitAndAssign)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_BitXorAssign)) {
			return true;;
		};
	};
	return false;;
}



inline jule::Bool _1d7c5adc5_isHeadDecl(jule::Ptr<_1d653226e_Fn>* _143020_m) {
	if ((((*((*(_143020_m))))._field_Generics.len() > 0LL) || ((*((*(_143020_m))))._field_Instances.len() == 0LL))) {
		return false;;
	};
	if (_1d7c5ab0b_isOpMethod(_143020_m)) {
		return true;;
	};
	jule::Ptr<_1d6535173_FnIns> _14379_mi = (*((*(_143020_m))))._field_Instances[0LL];;
	;
	return static__1d65da46a_Dispose(_1d65210c6_FindMethod((*(_14379_mi))._field_Owner.ptr(), jule::Str::lit("Dispose", 7), false));;
}



inline jule::Ptr<_1d64ea7ed_Directive> _1d7c6a28b_findDirective(jule::Slice<jule::Ptr<_1d64ea7ed_Directive>>* _47423_directives, jule::Str _47454_tag) {
	{
		auto expr = _47423_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1db2691b0:;
		if (it != expr_end) {
			jule::Ptr<_1d64ea7ed_Directive> _47517_dr = *it;
			{
				if (((*((*(_47517_dr))._field_Tag))._field_Kind == _47454_tag)) {
					return _47517_dr;;
				};
			}
			_iter_next_1db2691b0:;
			++it;
			goto _iter_begin_1db2691b0;
		}
		_iter_end_1db2691b0:;
	};
	return nullptr;;
}



inline jule::Bool _1d7c6a654_hasDirective(jule::Slice<jule::Ptr<_1d64ea7ed_Directive>>* _48418_directives, jule::Str _48449_tag) {
	return (_1d7c6a28b_findDirective(&((*(_48418_directives))), _48449_tag) != nullptr);;
}



inline jule::Bool _1d7c6a91d_shouldInitialized(jule::Ptr<_1d6677a35_TypeKind>* _49127_t) {
	jule::Ptr<_1d668060e_Prim> _4925_prim = _1d667a186_Prim((*(_49127_t)).ptr());;
	if ((_4925_prim != nullptr)) {
		return ((!(_1d6683d2c_IsAny(_4925_prim.ptr()))) && (!(_1d6683a96_IsStr(_4925_prim.ptr()))));;
	};
	{
		
		if ((_1d667a41c_Sptr((*(_49127_t)).ptr()) != nullptr)) {
			_case_begin_1db26bed7:;
			{
				return false;;
			}
		}
		else if ((_1d667bc26_Map((*(_49127_t)).ptr()) != nullptr)) {
			_case_begin_1db26c04d:;
			{
				return false;;
			}
		}
		else if ((_1d667b1dc_Slc((*(_49127_t)).ptr()) != nullptr)) {
			_case_begin_1db26c0c5:;
			{
				return false;;
			}
		}
		else if ((_1d667b990_Trait((*(_49127_t)).ptr()) != nullptr)) {
			_case_begin_1db26c14c:;
			{
				return false;;
			}
		}
		else if ((_1d667b473_Fn((*(_49127_t)).ptr()) != nullptr)) {
			_case_begin_1db26c1c4:;
			{
				return false;;
			}
		}
		else if ((_1d667ae56_Arr((*(_49127_t)).ptr()) != nullptr)) {
			_case_begin_1db26c24b:;
			{
				jule::Ptr<_1d6686e2e_Arr> _50813_arr = _1d667ae56_Arr((*(_49127_t)).ptr());;
				return _1d7c6a91d_shouldInitialized(&((*(_50813_arr))._field_Elem));;
			}
		}
		else if ((_1d667b709_Struct((*(_49127_t)).ptr()) != nullptr)) {
			_case_begin_1db26c2c3:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1db26b27d:;
			{
				return true;;
			}
		}
		_match_end_1db26b05d:;
	};
}



inline void _1e035332d_printErrorMessage(jule::Str _3022_msg) {
	jule::outln(_3022_msg);
}



inline void _1e03535a3_help(jule::Slice<jule::Str>* _3510_args) {
	if (((*(_3510_args)).len() > 2LL)) {
		_1e035332d_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_3510_args))[2LL]));
		return;;
	};
	jule::I64 _419_max = _1e0353141_HelpMap[0LL][0LL].len();;
	{
		auto expr = &(_1e0353141_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1db3194c4:;
		if (it != expr_end) {
			jule::Array<jule::Str,2> *_4212_k = it;
			{
				jule::I64 _439_n = (*(_4212_k))[0LL].len();;
				if ((_439_n > _419_max)) {
					_419_max=_439_n;
				};
			}
			_iter_next_1db3194c4:;
			++it;
			goto _iter_begin_1db3194c4;
		}
		_iter_end_1db3194c4:;
	};
	_1e01838bc_StrBuilder _499_s = static__1e0183b64_New(32LL);;
	;
	{
		auto expr = &(_1e0353141_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1db31acbc:;
		if (it != expr_end) {
			jule::I64 _519_i = it - expr->begin();
			jule::Array<jule::Str,2> *_5112_part = it;
			{
				_1e018c6ea_WriteStr(&_499_s, (*(_5112_part))[0LL]);
				_1e018c6ea_WriteStr(&_499_s, _1e016dcb4_Repeat(jule::Str::lit(" ", 1), static_cast<jule::I64>(((_419_max - (*(_5112_part))[0LL].len()) + 5LL))));
				_1e018c6ea_WriteStr(&_499_s, (*(_5112_part))[1LL]);
				if (((_519_i + 1LL) < 5LL)) {
					_1e018c9a3_WriteByte(&_499_s, '\n');
				};
			}
			_iter_next_1db31acbc:;
			++it;
			_519_i++;
			goto _iter_begin_1db31acbc;
		}
		_iter_end_1db31acbc:;
	};
	jule::outln(_499_s);
}



inline void _1e03537d4_version(jule::Slice<jule::Str>* _6313_args) {
	if (((*(_6313_args)).len() > 2LL)) {
		_1e035332d_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_6313_args))[2LL]));
		return;;
	};
	jule::outln(jule::Str::lit("jule0.0.15 @master", 18));
}



inline void _1e03539d2_toolDistos(void) {
	jule::out(jule::Str::lit("supported operating systems:\n ", 30));
	jule::out(jule::Str::lit("windows", 7));
	jule::out(jule::Str::lit(" ", 1));
	jule::out(jule::Str::lit("linux", 5));
	jule::out(jule::Str::lit(" ", 1));
	jule::out(jule::Str::lit("darwin", 6));
	jule::outln(jule::Str());
}



inline void _1e0353b58_toolDistarch(void) {
	jule::out(jule::Str::lit("supported architects:\n ", 23));
	jule::out(jule::Str::lit("amd64", 5));
	jule::out(jule::Str::lit(" ", 1));
	jule::out(jule::Str::lit("i386", 4));
	jule::out(jule::Str::lit(" ", 1));
	jule::out(jule::Str::lit("arm64", 5));
	jule::outln(jule::Str());
}



inline void _1e0353d89_tool(jule::Slice<jule::Str>* _9410_args) {
	if (((*(_9410_args)).len() == 2LL)) {
		jule::outln(jule::Str::lit("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;;
	} else if (((*(_9410_args)).len() > 3LL)) {
		_1e035332d_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_9410_args))[3LL]));
		return;;
	};
	jule::Str _1055_cmd = (*(_9410_args))[2LL];;
	{
		auto &_match_expr{ _1055_cmd };
		
		if (_match_expr == jule::Str::lit("distos", 6)) {
			_case_begin_1db321bd5:;
			{
				_1e03539d2_toolDistos();
			}
		}
		else if (_match_expr == jule::Str::lit("distarch", 8)) {
			_case_begin_1db32191b:;
			{
				_1e0353b58_toolDistarch();
			}
		}
		else {
			_case_begin_1db32072d:;
			{
				_1e035332d_printErrorMessage((jule::Str::lit("undefined command: ", 19) + _1055_cmd));
			}
		}
		_match_end_1db321795:;
	};
}



inline void _1e03540ba_julenv(jule::Slice<jule::Str>* _11712_args) {
	if (((*(_11712_args)).len() > 2LL)) {
		_1e035332d_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_11712_args))[2LL]));
		return;;
	};
	jule::outln(jule::Str::lit("julec version: jule0.0.15 @master", 33));
	jule::outln(jule::Str::lit("architecture: arm64", 19));
	jule::outln(jule::Str::lit("operating system: linux", 23));
	jule::outln((jule::Str::lit("default compiler: ", 18) + _208a403c5_Compiler));
	jule::outln((jule::Str::lit("default C++ standard: ", 22) + _208a419ae_CppStd));
}



inline void _1e03543c8_mod(jule::Slice<jule::Str>* _1309_args) {
	if (((*(_1309_args)).len() == 2LL)) {
		jule::outln(jule::Str::lit("command is not given, try julec mod init", 40));
		return;;
	};
	if (((*(_1309_args)).len() > 3LL)) {
		_1e035332d_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_1309_args))[3LL]));
		return;;
	};
	{
		auto &_match_expr{ (*(_1309_args))[2LL] };
		
		if (_match_expr == jule::Str::lit("init", 4)) {
			_case_begin_1db325249:;
			{
				({
					auto except = static__216767a07_Write(jule::Str::lit("jule.mod", 8), jule::Slice<jule::U8>(), 432LL);
					if (!except.ok()) {
						_1e035332d_printErrorMessage(jule::Str::lit("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_1db323e6d:;
			{
				_1e035332d_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_1309_args))[2LL]));
			}
		}
		_match_end_1db324d5e:;
	};
}



inline jule::Bool _1e0354692_processCommand(jule::Slice<jule::Str>* _15320_args) {
	{
		auto &_match_expr{ (*(_15320_args))[1LL] };
		
		if (_match_expr == jule::Str::lit("help", 4)) {
			_case_begin_1db326811:;
			{
				_1e03535a3_help(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("version", 7)) {
			_case_begin_1db326877:;
			{
				_1e03537d4_version(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("tool", 4)) {
			_case_begin_1db3268dd:;
			{
				_1e0353d89_tool(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("julenv", 6)) {
			_case_begin_1db326954:;
			{
				_1e03540ba_julenv(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("mod", 3)) {
			_case_begin_1db326190:;
			{
				_1e03543c8_mod(_15320_args);
			}
		}
		else {
			_case_begin_1db326129:;
			{
				return false;;
			}
		}
		_match_end_1db3259ec:;
	};
	return true;;
}



inline void _1e0354818_showInfo(void) {
	jule::outln(jule::Str::lit("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help\n    version       Show version\n    tool          Tools for effective Jule\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 307));
}



void entry_point(void) {
	jule::Slice<jule::Str> _1899_args = _2168535b5_Args();;
	if ((_1899_args.len() < 2LL)) {
		_1e0354818_showInfo();
		return;;
	};
	if (_1e0354692_processCommand(&(_1899_args))) {
		return;;
	};
	_1d7cda3a5_compileCommand(&(_1899_args));
}



inline void _1d7cd71a4_init(void) {
	_208a403c5_Compiler=jule::Str::lit("clang", 5);
}



inline jule::Ptr<_216766bb0_File> _1d7cd747e_openOutput(jule::Str* _4316_path) {
	jule::Str _445_dir = _1e0191985_Dir((*(_4316_path)));;
	({
		auto except = static__21676596c_Of(_445_dir);
		if (!except.ok()) {
			({
				auto except = static__1e019412a_Create(_445_dir);
				if (!except.ok()) {
					_1d730d951_Throw(jule::Str::lit("a problem occurs when code generation", 37));
				}
			});
		}
	});
	return ({
		auto except = static__216767397_Create((*(_4316_path)));
		(except.ok()) ? (except.result) : ({
			_1d730d951_Throw(jule::Str::lit("a problem occurs when code generation", 37));

			nullptr;
		});
	});;
}



inline void _1d7cd7605_clearObjects(void) {
	({
		auto except = static__216763e43_Remove(_1d7cd8804_getCompilePath());
		if (!except.ok()) {
			jule::outln(jule::Str::lit("a problem occurs when object cleaning", 37));
			return;;
		}
	});
	static__1e019435b_Remove(_1d7cd6934_OutDir);
}



inline void _1d7cd7935_compileIr(jule::Str _7214_compiler, jule::Str _7229_compilerCmd) {
	jule::Ptr<_1e02e7aa8_Cmd> _739_cmd = static__1e02e7ec6_New(_7214_compiler);;
	(*(_739_cmd))._field_Args=_1e0173c42_Split(_7229_compilerCmd, jule::Str::lit(" ", 1), -1LL);
	({
		auto except = _1e02e81c4_Spawn(_739_cmd.ptr());
		if (!except.ok()) {
			{
				auto &_match_expr{ except.error };
				
				if (jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0) == _match_expr) {
					_case_begin_1db32c88e:;
					{
						static__1d730b0d0_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(0LL), &__jule_any_type0) == _match_expr) {
					_case_begin_1db32c174:;
					{
						static__1d730b0d0_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_1db32c350:;
					{
						static__1d730b0d0_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of unknown problem", 59));
					}
				}
				_match_end_1db32c2ea:;
			};
			_1d730d951_Throw(jule::Str());
		}
	});
	jule::I64 _865_status = ({
		auto except = _1e02e8658_Wait(_739_cmd.ptr());
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:86:15"));
		(except.result);
	});;
	if ((_865_status != 0LL)) {
		jule::Str _889_errorMessage = ((jule::Str::lit("\n>>> your backend compiler (", 28) + _208a403c5_Compiler) + jule::Str::lit(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149));;
		static__1d730b0d0_Print(jule::Str::lit("\033[31m", 5), _889_errorMessage);
		_1d730d951_Throw(jule::Str());
	};
	_1d7cd7605_clearObjects();
}



inline jule::Bool _1d7cd7bee_isCppSourceFile(jule::Str _9920_path) {
	jule::I64 _1005_offset = _1e0172768_FindLastByte(_9920_path, '.');;
	if ((_1005_offset == -1LL)) {
		return false;;
	};
	return _1e0228a94_IsValidCppExt(_9920_path.slice(_1005_offset));;
}



inline void _1d7cd7e30_pushCompCmdClang(_1e01838bc_StrBuilder* _10726_cmd) {
	_1e018c6ea_WriteStr(_10726_cmd, jule::Str::lit("-Wno-everything ", 16));
	_1e018c6ea_WriteStr(_10726_cmd, jule::Str::lit("--std=", 6));
	{
		auto &_match_expr{ _208a419ae_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1db3311de:;
			{
				_1e018c6ea_WriteStr(_10726_cmd, jule::Str::lit("c++14", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1db32ee68:;
			{
				_1e018c6ea_WriteStr(_10726_cmd, jule::Str::lit("c++17", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1db331321:;
			{
				_1e018c6ea_WriteStr(_10726_cmd, jule::Str::lit("c++20", 5));
			}
		}
		_match_end_1db331189:;
	};
	_1e018c9a3_WriteByte(_10726_cmd, ' ');
	if (_208a42c35_Production) {
		_1e018c6ea_WriteStr(_10726_cmd, jule::Str::lit("-O3 ", 4));
		_1e018c6ea_WriteStr(_10726_cmd, jule::Str::lit("-flto ", 6));
		_1e018c6ea_WriteStr(_10726_cmd, jule::Str::lit("-DNDEBUG ", 9));
		_1e018c6ea_WriteStr(_10726_cmd, jule::Str::lit("-fomit-frame-pointer ", 21));
	} else {
		_1e018c6ea_WriteStr(_10726_cmd, jule::Str::lit("-O0 ", 4));
	};
}



inline void _1d7cd8161_pushCompCmdGcc(_1e01838bc_StrBuilder* _13324_cmd) {
	_1e018c6ea_WriteStr(_13324_cmd, jule::Str::lit("-w ", 3));
	_1e018c6ea_WriteStr(_13324_cmd, jule::Str::lit("--std=", 6));
	{
		auto &_match_expr{ _208a419ae_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1db3341c0:;
			{
				_1e018c6ea_WriteStr(_13324_cmd, jule::Str::lit("c++14", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1db33281c:;
			{
				_1e018c6ea_WriteStr(_13324_cmd, jule::Str::lit("c++17", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1db332883:;
			{
				_1e018c6ea_WriteStr(_13324_cmd, jule::Str::lit("c++20", 5));
			}
		}
		_match_end_1db33416a:;
	};
	_1e018c9a3_WriteByte(_13324_cmd, ' ');
	if (_208a42c35_Production) {
		_1e018c6ea_WriteStr(_13324_cmd, jule::Str::lit("-O3 ", 4));
		_1e018c6ea_WriteStr(_13324_cmd, jule::Str::lit("-DNDEBUG ", 9));
		_1e018c6ea_WriteStr(_13324_cmd, jule::Str::lit("-fomit-frame-pointer ", 21));
	} else {
		_1e018c6ea_WriteStr(_13324_cmd, jule::Str::lit("-O0 ", 4));
	};
}



inline __jule_tuple_str__jule_tuple_str _1d7cd85e5_genCompileCmd(jule::Str _15918_sourcePath, jule::Ptr<_1d7166787_IR>* _15936_ir) {
	__jule_tuple_str__jule_tuple_str __jule_func_result;
	jule::Str *_1606_compiler = &(_208a4175b_CompilerPath);;
	_1e01838bc_StrBuilder _1619_cmd = static__1e0183b64_New(64LL);;
	{
		auto &_match_expr{ _208a403c5_Compiler };
		
		if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1db336ec5:;
			{
				_1d7cd8161_pushCompCmdGcc(&(_1619_cmd));
			}
		}
		else if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1db3374c0:;
			{
				_1d7cd7e30_pushCompCmdClang(&(_1619_cmd));
			}
		}
		_match_end_1db3371d4:;
	};
	{
		auto expr = &((*((*(_15936_ir))))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1db337745:;
		if (it != expr_end) {
			jule::Ptr<_1d659590e_ImportInfo> *_17112_u = it;
			{
				if (((*((*(_17112_u))))._field_Binded && _1d7cd7bee_isCppSourceFile((*((*(_17112_u))))._field_Path))) {
					_1e018c6ea_WriteStr(&_1619_cmd, (*((*(_17112_u))))._field_Path);
					_1e018c9a3_WriteByte(&_1619_cmd, ' ');
				};
			}
			_iter_next_1db337745:;
			++it;
			goto _iter_begin_1db337745;
		}
		_iter_end_1db337745:;
	};
	if (!(_1d7cd6eea_Out).empty()) {
		_1e018c6ea_WriteStr(&_1619_cmd, jule::Str::lit("-o ", 3));
		_1e018c6ea_WriteStr(&_1619_cmd, _1d7cd6eea_Out);
		_1e018c9a3_WriteByte(&_1619_cmd, ' ');
	};
	_1e018c6ea_WriteStr(&_1619_cmd, _15918_sourcePath);
	{
		auto expr = &((*((*(_15936_ir))))._field_Passes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1db33a2b4:;
		if (it != expr_end) {
			jule::Str *_18612_pass = it;
			{
				_1e018c9a3_WriteByte(&_1619_cmd, ' ');
				_1e018c6ea_WriteStr(&_1619_cmd, (*(_18612_pass)));
			}
			_iter_next_1db33a2b4:;
			++it;
			goto _iter_begin_1db33a2b4;
		}
		_iter_end_1db33a2b4:;
	};
	if (_1e034ee1d_Os.equal("windows", 7)) {
		_1e018c6ea_WriteStr(&_1619_cmd, jule::Str::lit(" -lshell32", 10));
	};
	__jule_func_result.__jule_result_arg0 = (*(_1606_compiler));
	__jule_func_result.__jule_result_arg1 = _1e018cee2_Str(&_1619_cmd);
	return __jule_func_result;;
}



inline jule::Str _1d7cd8804_getCompilePath(void) {
	return _1e0190c92_Join(jule::Slice<jule::Str>::make({_1d7cd6934_OutDir,_1d7cd6c31_OutName}));;
}



inline void _1d7cd8a35_applyTargetIndependentOptimizations(jule::Ptr<_1d7166787_IR>* _20545_ir) {
	jule::Ptr<_1d72d32e9_Optimizer> _2069_opt = static__1d72d376c_New(_20545_ir);;
	_1d72d4d56_Optimize(_2069_opt.ptr());
}



inline void _1d7cd8bab_checkCompilerFlag(void) {
	{
		auto &_match_expr{ _208a403c5_Compiler };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1db33be0e:;
			{
				_1d730d951_Throw(jule::Str::lit("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1db33c64b:;
			{
				if ((_208a4175b_CompilerPath).empty()) {
					_208a4175b_CompilerPath=jule::Str::lit("clang++", 7);
				};
			}
		}
		else if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1db33c6b2:;
			{
				if ((_208a4175b_CompilerPath).empty()) {
					_208a4175b_CompilerPath=jule::Str::lit("g++", 3);
				};
			}
		}
		else {
			_case_begin_1db33c5d5:;
			{
				_1d730d951_Throw((jule::Str::lit("invalid option value for --compiler: ", 37) + _208a403c5_Compiler));
			}
		}
		_match_end_1db33c580:;
	};
}



inline void _1d7cd8ddc_checkTargetArch(jule::Str _22720_arch) {
	if ((((!_22720_arch.equal("amd64", 5)) && (!_22720_arch.equal("arm64", 5))) && (!_22720_arch.equal("i386", 4)))) {
		_1d730d951_Throw((jule::Str::lit("--target: unsupported/undefined architecture: ", 46) + _22720_arch));
	};
}



inline void _1d7cd911d_checkTargetOs(jule::Str _23518_os) {
	if ((((!_23518_os.equal("windows", 7)) && (!_23518_os.equal("linux", 5))) && (!_23518_os.equal("darwin", 6)))) {
		_1d730d951_Throw((jule::Str::lit("--target: unsupported/undefined operating system: ", 50) + _23518_os));
	};
}



inline void _1d7cd934e_checkTargetFlag(jule::Str* _24321_target) {
	if (((*(_24321_target))).empty()) {
		_1d730d951_Throw(jule::Str::lit("missing option value: --target", 30));
	};
	jule::Slice<jule::Str> _2485_parts = _1e0173c42_Split((*(_24321_target)), jule::Str::lit("-", 1), -1LL);;
	if ((_2485_parts.len() != 2LL)) {
		_1d730d951_Throw((jule::Str::lit("--target: undefined platform target format: ", 44) + (*(_24321_target))));
	};
	jule::Str _2535_os;;
	jule::Str _2539_arch;;
	({
		jule::Str ___jule_assign_arg = _2485_parts[0LL];
		jule::Str _1___jule_assign_arg = _2485_parts[1LL];
		_2535_os = ___jule_assign_arg;
		_2539_arch = _1___jule_assign_arg;
	});
	if ((!_2535_os.equal("native", 6))) {
		_1d7cd911d_checkTargetOs(_2535_os);
		_1e034ee1d_Os=_2535_os;
	};
	if ((!_2539_arch.equal("native", 6))) {
		_1d7cd8ddc_checkTargetArch(_2539_arch);
		_1e03501d7_Arch=_2539_arch;
	};
	_1d4317551_UpdateTarget();
}



inline void _1d7cd9580_checkOptFlag(jule::Str* _26618_opt) {
	if (((*(_26618_opt))).empty()) {
		_1d730d951_Throw(jule::Str::lit("missing option value: --opt", 27));
	};
	{
		auto &_match_expr{ (*(_26618_opt)) };
		
		if (_match_expr == jule::Str::lit("L0", 2)) {
			_case_begin_1db344323:;
			{
				goto _match_end_1db3439c6;
			}
		}
		else if (_match_expr == jule::Str::lit("L1", 2)) {
			_case_begin_1db344389:;
			{
				_1d678655b_PushOptLevel(static_cast<jule::I64>(1LL));
			}
		}
		else {
			_case_begin_1db343bd5:;
			{
				_1d730d951_Throw((jule::Str::lit("--opt: invalid optimization level: ", 35) + (*(_26618_opt))));
			}
		}
		_match_end_1db3439c6:;
	};
}



inline void _1d7cd9915_checkCppStdFlag(void) {
	{
		auto &_match_expr{ _208a419ae_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5) || _match_expr == jule::Str::lit("cpp17", 5) || _match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1db344026:;
			{
				goto _match_end_1db344785;
			}
		}
		else {
			_case_begin_1db3447da:;
			{
				_1d730d951_Throw((jule::Str::lit("--cppstd: invalid cpp standard: ", 32) + _208a419ae_CppStd));
			}
		}
		_match_end_1db344785:;
	};
}



inline jule::Slice<jule::Str> _1d7cd9b79_checkFlags(jule::Slice<jule::Str>* _29216_args) {
	jule::Str _2939_opt = jule::Str::lit("L0", 2);;
	jule::Str _2949_target = jule::Str::lit("native-native", 13);;
	jule::Ptr<_1d7cd19d9_FlagSet> _2969_fs = static__1d7cd1cc5_New();;
	_1db346a51_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_2939_opt)))), jule::Str::lit("opt", 3), 0LL, jule::Str::lit("Optimization level", 18));
	_1db346a51_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_2949_target)))), jule::Str::lit("target", 6), 0LL, jule::Str::lit("Target system", 13));
	_1db346a51_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1d7cd6eea_Out)))), jule::Str::lit("out", 3), 'o', jule::Str::lit("Output identifier", 17));
	_1db34d8c1_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_208a41c45_Shadowing)))), jule::Str::lit("shadowing", 9), 0LL, jule::Str::lit("Allow shadowing", 15));
	_1db34d8c1_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_208a4200e_Transpilation)))), jule::Str::lit("transpile", 9), 't', jule::Str::lit("Transpile code", 14));
	_1db346a51_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_208a403c5_Compiler)))), jule::Str::lit("compiler", 8), 0LL, jule::Str::lit("Backend compiler", 16));
	_1db346a51_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_208a4175b_CompilerPath)))), jule::Str::lit("compiler-path", 13), 0LL, jule::Str::lit("Path of backend compiler", 24));
	_1db34d8c1_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_208a42c35_Production)))), jule::Str::lit("production", 10), 'p', jule::Str::lit("Compile for production", 22));
	_1db34d8c1_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_208a42592_RC)))), jule::Str::lit("disable-rc", 10), 0LL, jule::Str::lit("Disable reference counting", 26));
	_1db34d8c1_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_208a4296b_Safety)))), jule::Str::lit("disable-safety", 14), 0LL, jule::Str::lit("Disable safety", 14));
	_1db346a51_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_208a419ae_CppStd)))), jule::Str::lit("cppstd", 6), 0LL, jule::Str::lit("C++ standard", 12));
	_1db34d8c1_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1d6784416_Copy)))), jule::Str::lit("opt-copy", 8), 0LL, jule::Str::lit("Copy optimization", 17));
	_1db34d8c1_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1d6784724_Deadcode)))), jule::Str::lit("opt-deadcode", 12), 0LL, jule::Str::lit("Deadcode optimization", 21));
	_1db34d8c1_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1d67849dd_Append)))), jule::Str::lit("opt-append", 10), 0LL, jule::Str::lit("Append optimization", 19));
	_1db34d8c1_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1d6784ceb_Math)))), jule::Str::lit("opt-math", 8), 0LL, jule::Str::lit("Math optimization", 17));
	_1db34d8c1_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1d67850b5_Access)))), jule::Str::lit("opt-access", 10), 0LL, jule::Str::lit("Access optimization", 19));
	_1db34d8c1_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1d678537e_Inline)))), jule::Str::lit("opt-inline", 10), 0LL, jule::Str::lit("Inline optimization", 19));
	_1db34d8c1_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1d6785648_Ptr)))), jule::Str::lit("opt-ptr", 7), 0LL, jule::Str::lit("Pointer optimizations", 21));
	_1db34d8c1_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1d6785a22_Cond)))), jule::Str::lit("opt-cond", 8), 0LL, jule::Str::lit("Conditional optimizations", 25));
	_1db34d8c1_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1d6785cdb_Str)))), jule::Str::lit("opt-str", 7), 0LL, jule::Str::lit("String optimizations", 20));
	_1db34d8c1_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1d67860a5_Slice)))), jule::Str::lit("opt-slice", 9), 0LL, jule::Str::lit("Slice optimizations", 19));
	_1db34d8c1_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1d678636e_Assign)))), jule::Str::lit("opt-assign", 10), 0LL, jule::Str::lit("Assignment optimizations", 24));
	jule::Slice<jule::Str> _3219_content = ({
		auto except = _1d7cd2b61_Parse(_2969_fs.ptr(), (*(_29216_args)));
		(except.ok()) ? (except.result) : ({
			_1d730d951_Throw(except.error.cast<jule::Str>(&__jule_any_type4));

			nullptr;
		});
	});;
	_1d7cd8bab_checkCompilerFlag();
	_1d7cd9915_checkCppStdFlag();
	_1d7cd934e_checkTargetFlag(&(_2949_target));
	_1d7cd9580_checkOptFlag(&(_2939_opt));
	return _3219_content;;
}



inline void _1d7cd9daa_setupSemaFlags(jule::I64* _33424_flags) {
	if (_208a41c45_Shadowing) {
		(*(_33424_flags))|=static_cast<jule::I64>(1LL);
	};
}



inline jule::Ptr<_1d7166787_IR> _1d7cda174_buildIr(jule::Slice<jule::Str>* _34013_args) {
	jule::Slice<jule::Str> _3415_content = _1d7cd9b79_checkFlags(_34013_args);;
	jule::I64 _3439_semaFlags = static_cast<jule::I64>(0LL);;
	_1d7cd9daa_setupSemaFlags(&(_3439_semaFlags));
	if ((_3415_content.len() == 0LL)) {
		_1d730d951_Throw(_1e0235ee1_Logf(jule::Str::lit("missing compile path", 20), jule::Slice<jule::Any>()));
	} else if ((_3415_content.len() > 1LL)) {
		_1d730d951_Throw((jule::Str::lit("undefined content: ", 19) + _3415_content[1LL]));
	};
	jule::Str _3519_path;;
	jule::Bool _35115_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1e0191325_Abs(_3415_content[0LL]);
		_3519_path = __jule_assign_result.__jule_result_arg0;
		_35115_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_35115_ok))) {
		_1d730d951_Throw(jule::Str::lit("compile path could not processed because of a problem", 53));
	};
	jule::Ptr<_216768ca0_Status> _3575_inf = ({
		auto except = static__21676596c_Of(_1e034e33a_PathStdlib);
		(except.ok()) ? (except.result) : ({{
			_1d730d951_Throw(_1e0235ee1_Logf(jule::Str::lit("standard library directory not found", 36), jule::Slice<jule::Any>()));
			return nullptr;;
		} jule::Ptr<_216768ca0_Status>(nullptr);});
	});;
	if ((!(_216769179_IsDir(_3575_inf.ptr())))) {
		_1d730d951_Throw(_1e0235ee1_Logf(jule::Str::lit("standard library directory not found", 36), jule::Slice<jule::Any>()));
	};
	jule::Ptr<_1d7166787_IR> _3659_ir;;
	jule::Slice<_1e0235a7e_Log> _36513_logs;;
	({
		__jule_tuple_x_1d7166787_IR__jule_tuple_s_1e0235a7e_Log __jule_assign_result = static__1d7166be9_Build(_3519_path, _3439_semaFlags);
		_3659_ir = __jule_assign_result.__jule_result_arg0;
		_36513_logs = __jule_assign_result.__jule_result_arg1;
	});
	if (((_3659_ir == nullptr) && (_36513_logs == nullptr))) {
		_1d730d951_Throw(_1e0235ee1_Logf(jule::Str::lit("there is no Jule source code in package: @", 42), jule::Slice<jule::Any>::make({jule::Any(_3519_path, &__jule_any_type4)})));
	};
	if ((_36513_logs != nullptr)) {
		static__1d730ce7d_PrintLogs(&(_36513_logs));
		_1d730d951_Throw(jule::Str());
	};
	return _3659_ir;;
}



inline void _1d7cda3a5_compileCommand(jule::Slice<jule::Str>* _38024_args) {
	((*(_38024_args))).mut_slice(1LL);;
	if ((*(_38024_args))[0LL].equal("test", 4)) {
		_208a422c8_Test=true;
		((*(_38024_args))).mut_slice(1LL);;
	};
	jule::Ptr<_1d7166787_IR> _3869_ir = _1d7cda174_buildIr(_38024_args);;
	;
	if ((!(_208a422c8_Test))) {
		jule::Ptr<_1d653226e_Fn> _39113_main = _1d6599db9_FindFn((*(_3869_ir))._field_Main.ptr(), jule::Str::lit("main", 4), false);;
		if ((_39113_main == nullptr)) {
			_1d730d951_Throw(_1e0235ee1_Logf(jule::Str::lit("missing entry point: entry point (main) function is not defined", 63), jule::Slice<jule::Any>()));
		};
	};
	_1d7cd8a35_applyTargetIndependentOptimizations(&(_3869_ir));
	_1d7167c61_Order(_3869_ir.ptr());
	jule::Str _4025_compPath = _1d7cd8804_getCompilePath();;
	jule::Str _4035_compiler;;
	jule::Str _40315_compilerCmd;;
	({
		__jule_tuple_str__jule_tuple_str __jule_assign_result = _1d7cd85e5_genCompileCmd(_4025_compPath, &(_3869_ir));
		_4035_compiler = __jule_assign_result.__jule_result_arg0;
		_40315_compilerCmd = __jule_assign_result.__jule_result_arg1;
	});
	jule::Ptr<_1d7c4c856_ObjectCoder> _4059_oc = static__1d7c4cc52_New(&(_3869_ir), _1d7c4ad3d_SerializationInfo{._field_Compiler=_4035_compiler, ._field_CompilerCommand=_40315_compilerCmd});;
	if (_208a422c8_Test) {
		jule::Ptr<_1d7b83cba_TestCoder> _41013_tc = static__1d7b8420a_New(&(_4059_oc));;
		_1d7b85580_Serialize(_41013_tc);
	} else {
		_1d7c596a9_Serialize(_4059_oc);
	};
	jule::Ptr<_216766bb0_File> _4169_file = _1d7cd747e_openOutput(&(_4025_compPath));;
	({
		auto except = _2167643c7_Write(_4169_file.ptr(), _1e018d993_Buf(&(*(_4059_oc))._field_Buf));
		if (!except.ok()) {
			_1d730d951_Throw(jule::Str::lit("object code could not write", 27));
		}
	});
	({
		auto except = _216768244_Close(_4169_file.ptr());
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:420:5"));
	});
	if ((!(_208a4200e_Transpilation))) {
		_1d7cd7935_compileIr(_4035_compiler, _40315_compilerCmd);
	};
}



void __jule_call_initializers(void) {
	_1e0350319_init();
	_1d43176c7_init();
	_1d7cd71a4_init();

}

int main(int argc, char *argv[], char *envp[]) {
    jule::setup_argv(argc, argv);
    jule::setup_envp(envp);

    __jule_call_initializers();
    entry_point();

    return EXIT_SUCCESS;
}