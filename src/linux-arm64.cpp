// Auto generated by JuleC.
// JuleC version: jule0.0.16 @master
// Date: 3/9/2024 (DD/MM/YYYY) UTC
//
// Recomended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer dist/ir.cpp

#define __JULE_ENABLE__PRODUCTION
#include "std/jule/integrated/integrated.hpp"                                   
#include <sys/time.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <dirent.h>
#include <fcntl.h>
#include <unistd.h>
#include <cstdio>
#include <sys/stat.h>
#include <signal.h>
#include <sys/wait.h>
#include <chrono>
#include <time.h>


#include "api/jule.hpp"                                   


struct _1cae5752e_Range16;
struct _1cae57a5c_Range32;
struct _1cae57ed0_RangeTable;
struct _1cb178d49_acceptRange;
struct _1cb1d27a9_StrBuilder;
struct _1cb1dd7c6_lazyBuff;
struct _20d927670_DirEntry;
struct _20d927906_Directory;
struct _20d929540_File;
struct _20d92b630_Status;
struct _1cb39ae8e_cmdAttrs;
struct _1cb285120_Log;
struct _1b272c427_floatInfo;
struct _1b272d0a4_decimalSlice;
struct _1b27402e7_leftCheat;
struct _1b2740d0e_decimal;
struct _1b2753508_Const;
struct _1b4ad5712_Token;
struct _1b4adae98_File;
struct _1b4add0ee_kindPair;
struct _1b4ae40d3_lex;
struct _1b4ae8ca8_Ast;
struct _1b4ae9bbb_Node;
struct _1b4aea0d9_Directive;
struct _1b4aeabbc_TypeDecl;
struct _1b4aeb2c7_IdentTypeDecl;
struct _1b4aeb591_SubIdentTypeDecl;
struct _1b4aeb96a_NamespaceTypeDecl;
struct _1b4aebc67_SptrTypeDecl;
struct _1b4aec0ec_SlcTypeDecl;
struct _1b4aec3e9_TupleTypeDecl;
struct _1b4aec6e6_PtrTypeDecl;
struct _1b4aece88_ArrTypeDecl;
struct _1b4aed6d6_MapTypeDecl;
struct _1b4aedab0_RetTypeDecl;
struct _1b4b00001_Expr;
struct _1b4b002ba_RangeExpr;
struct _1b4b008c5_UseExpr;
struct _1b4b00ae5_TupleExpr;
struct _1b4b00e8b_LitExpr;
struct _1b4b01365_UnsafeExpr;
struct _1b4b0181b_IdentExpr;
struct _1b4b020ad_UnaryExpr;
struct _1b4b02487_VariadicExpr;
struct _1b4b02861_CastExpr;
struct _1b4b02c3a_NsSelectionExpr;
struct _1b4b03114_SubIdentExpr;
struct _1b4b035ba_BinaryExpr;
struct _1b4b03c2a_FnCallExpr;
struct _1b4b04720_FieldExprPair;
struct _1b4b0504a_StructLit;
struct _1b4b05501_BraceLit;
struct _1b4b05d2b_KeyValPair;
struct _1b4b06557_SliceExpr;
struct _1b4b06eb4_IndexingExpr;
struct _1b4b07624_SlicingExpr;
struct _1b4b07921_Constraint;
struct _1b4b07dc7_GenericDecl;
struct _1b4b082a1_LabelSt;
struct _1b4b0867a_GotoSt;
struct _1b4b08977_FallSt;
struct _1b4b090d7_AssignLeft;
struct _1b4b0966a_AssignSt;
struct _1b4b103da_Stmt;
struct _1b4b10a4a_ScopeTree;
struct _1b4b11287_ParamDecl;
struct _1b4b126d9_FnDecl;
struct _1b4b13894_VarDecl;
struct _1b4b13c6d_RetSt;
struct _1b4b144dd_Iter;
struct _1b4b14d18_WhileKind;
struct _1b4b15720_RangeKind;
struct _1b4b15ae9_BreakSt;
struct _1b4b15ec3_ContSt;
struct _1b4b16479_If;
struct _1b4b16853_Else;
struct _1b4b16d09_Conditional;
struct _1b4b17546_TypeAliasDecl;
struct _1b4b179ec_Case;
struct _1b4b18316_MatchCase;
struct _1b4b18b30_UseDecl;
struct _1b4b190d6_EnumItemDecl;
struct _1b4b19b97_EnumDecl;
struct _1b4b1a4c2_TypeEnumItemDecl;
struct _1b4b1ab32_TypeEnumDecl;
struct _1b4b1adeb_FieldDecl;
struct _1b4b1b7e2_StructDecl;
struct _1b4b1c02e_TraitDecl;
struct _1b4b1c68e_Impl;
struct _1b4b1d98c_Field;
struct _1b4b209a0_Operators;
struct _1b4b218b3_Struct;
struct _1b4b23a91_FieldIns;
struct _1b4b28546_OperandExprModel;
struct _1b4b28a41_BinaryExprModel;
struct _1b4b28e1a_UnaryExprModel;
struct _1b4b29448_StructArgExprModel;
struct _1b4b297de_StructLitExprModel;
struct _1b4b29adb_AllocStructLitExprModel;
struct _1b4b2a16e_CastingExprModel;
struct _1b4b2aa21_FnCallExprModel;
struct _1b4b2adea_SliceExprModel;
struct _1b4b2b3a1_IndexingExprModel;
struct _1b4b2b857_AnonFnExprModel;
struct _1b4b2bc31_KeyValPairExprModel;
struct _1b4b2c1d7_MapExprModel;
struct _1b4b2c76a_SlicingExprModel;
struct _1b4b2cced_TraitSubIdentExprModel;
struct _1b4b2d68e_StructSubIdentExprModel;
struct _1b4b2da35_StructStaticIdentExprModel;
struct _1b4b2de0e_ArrayExprModel;
struct _1b4b2e20b_TupleExprModel;
struct _1b4b2e5d5_BuiltinOutCallExprModel;
struct _1b4b2e9ae_BuiltinOutlnCallExprModel;
struct _1b4b2ed88_BuiltinNewCallExprModel;
struct _1b4b30262_BuiltinPanicCallExprModel;
struct _1b4b30718_BuiltinAssertCallExprModel;
struct _1b4b30bbe_BuiltinMakeCallExprModel;
struct _1b4b31098_BuiltinAppendCallExprModel;
struct _1b4b31395_BuiltinLenCallExprModel;
struct _1b4b31692_BuiltinCapCallExprModel;
struct _1b4b31a6b_BuiltinDeleteCallExprModel;
struct _1b4b31e45_BuiltinCopyCallExprModel;
struct _1b4b3231e_BuiltinErrorCallExprModel;
struct _1b4b329c3_SizeofExprModel;
struct _1b4b32bb0_AlignofExprModel;
struct _1b4b32e57_RuneExprModel;
struct _1b4b33254_IntegratedToStrExprModel;
struct _1b4b3362d_BackendEmitExprModel;
struct _1b4b3392a_FreeExprModel;
struct _1b4b3462e_RetType;
struct _1b4b34db0_Param;
struct _1b4b36884_Fn;
struct _1b4b387dc_ParamIns;
struct _1b4b39865_FnIns;
struct _1b4b3ca44_ReferenceStack;
struct _1b4b3e051_Pass;
struct _1b4b43a06_symbolBuilder;
struct _1b4b49c3d_Trait;
struct _1b4b4b8cc_EnumItem;
struct _1b4b4c449_Enum;
struct _1b4b4d57c_TypeEnumItem;
struct _1b4b4db54_TypeEnum;
struct _1b4b51cab_comptimeRange;
struct _1b4b5277e_comptimeStructField;
struct _1b4b54440_comptimeStructFields;
struct _1b4b55a3a_comptimeStatic;
struct _1b4b576eb_comptimeStatics;
struct _1b4b58ce6_comptimeEnumField;
struct _1b4b5a18d_comptimeEnumFields;
struct _1b4b5b788_comptimeParam;
struct _1b4b5d922_comptimeParams;
struct _1b4b5eed9_comptimeTypeInfos;
struct _1b4b615d4_comptimeTypeInfo;
struct _1b4b67ae6_comptimeValue;
struct _1b4b6a445_comptimeFiles;
struct _1b4b6ba40_comptimeFile;
struct _1b4b71050_constraintChecker;
struct _1b4b733a4_Impl;
struct _1b4b7880a_Scope;
struct _1b4b78c28_If;
struct _1b4b79025_Else;
struct _1b4b79443_Conditional;
struct _1b4b79740_InfIter;
struct _1b4b79be6_WhileIter;
struct _1b4b7a642_RangeIter;
struct _1b4b7a9c7_ContSt;
struct _1b4b7ada1_BreakSt;
struct _1b4b7b19d_Label;
struct _1b4b7b577_GotoSt;
struct _1b4b7b951_Postfix;
struct _1b4b7be07_Assign;
struct _1b4b7c3ad_MultiAssign;
struct _1b4b7ca1d_Match;
struct _1b4b7d546_Case;
struct _1b4b7dc3e_FallSt;
struct _1b4b7e0d5_RetSt;
struct _1b4b7e745_scopeLabel;
struct _1b4b7ecc8_scopeGoto;
struct _1b4b80cb8_scopeChecker;
struct _1b4b943e7_directiveChecker;
struct _1b4b9a893_ImportInfo;
struct _1b4b9d7b9_Package;
struct _1b4bba132_commonSemaMeta;
struct _1b4bbac37_Sema;
struct _1b4bda905_missingRetChecker;
struct _1b4bddaa1_Var;
struct _1b4bde92b_FuncPattern;
struct _1b4c2d371_typeCompatibilityChecker;
struct _1b4c30120_assignTypeChecker;
struct _1b4c319e5_dynamicTypeAnnotation;
struct _1b4c36852_fnCallArgChecker;
struct _1b4c39789_structLitChecker;
struct _1b4c3b56b_rangeChecker;
struct _1b4c3dccc_retTypeChecker;
struct _1b4c41340_SymbolTable;
struct _1b4c466a8_Data;
struct _1b4c47830_Value;
struct _1b4c483d0_Eval;
struct _1b4c6b964_unaryEval;
struct _1b4c6d900_binaryEval;
struct _1b4c7b028_InsGeneric;
struct _1b4c7bb1c_TypeAlias;
struct _1b4c7c90e_TypeKind;
struct _1b4c84ad1_TypeSymbol;
struct _1b4c854d8_Prim;
struct _1b4c89014_Sptr;
struct _1b4c899d7_Slc;
struct _1b4c8a5cb_Tuple;
struct _1b4c8b17b_Map;
struct _1b4c8bd08_Arr;
struct _1b4c8c7cb_Ptr;
struct _1b4c8d7cc_referencer;
struct _1b4c8e7bc_typeChecker;
struct _1b4c97473_identTypeLookup;
struct _1b5725bd1_FileInfo;
struct _1b576e06a_stmt;
struct _1b576e90b_scopeParser;
struct _1b577c331_exprBuilder;
struct _1b5789a8b_assignInfo;
struct _1b578ce8a_parser;
struct _1b57a00ac_typeBuilder;
struct _1b4eb1abb_CompileInfo;
struct _1b4eb3095_directiveEval;
struct _1b57a40a0_JuleImporter;
struct _1b57b4445_OrderedDefines;
struct _1b5906a0a_liveTable;
struct _1b593a720_scopeDeadCode;
struct _1b593e9aa_exprDeadCode;
struct _1b4d710da_ExceptionalForwardingExprModel;
struct _1b4d71470_SwapExprModel;
struct _1b4d71849_EmptyCompareExprModel;
struct _1b4d71bbd_RefExprModel;
struct _1b4d72141_StrCompExprModel;
struct _1b4d726c4_MutSlicingExprModel;
struct _1b4d729c1_UnsafeBinaryExprModel;
struct _1b4d72d56_UnsafeIndexingExprModel;
struct _1b4d73230_PushToSliceExprModel;
struct _1b4d73609_AppendToSliceExprModel;
struct _1b4d739d3_StrRuneIter;
struct _1b4d73cd0_UnsafeDerefExprModel;
struct _1b4d740cc_UnsafeCastingExprModel;
struct _1b4d74cae_nilVar;
struct _1b4d75100_nils;
struct _1b57b5aa6_scopeOptimizer;
struct _1b57bc22d_exprOptimizer;
struct _1b57c6ca4_dynamicVar;
struct _1b57c70e5_dynamic;
struct _1b57c9c74_data;
struct _1b57cb32a_boundaryVar;
struct _1b57cb66b_boundary;
struct _1b5946a06_Optimizer;
struct _1b596e710_AnsiEscape;
struct _1b5970c83_Logger;
struct _1a901add9_AbsTime;
struct _1a901b5b0_Time;
struct _1b644d496_scopeCoder;
struct _1b6458acd_exprCoder;
struct _1b64693d5_TestCoder;
struct _1b646c361_identCoder;
struct _1a9024d8d_SerializationInfo;
struct _1a90252ab_traitCast;
struct _1a9025685_anonHash;
struct _1a9035cc2_customType;
struct _1a903690a_typeCoder;
struct _1a903e4e5_resultCoder;
struct _1ac9ee589_Flag;
struct _1aca0313c_Flag;
struct _1aca067a0_Flag;
struct _1aca09e57_Flag;
struct _1aca0d5ba_Flag;
struct _1a90a9e45_FlagSet;
struct _1a90ac909_argParser;
struct _1a9026b3c_ObjectCoder;
struct _1b57c9779_dataCheckpoint;
struct _1b5906e28_ObjectDeadCode;
struct _1b57a68aa_IR;
struct _1b4b24641_StructIns;
struct _1cb34715a_Cmd;
struct _1cae5752e_Range16 {
	jule::U16 _field_Lo = 0;
	jule::U16 _field_Hi = 0;
	jule::U16 _field_Stride = 0;
	

	inline bool operator==(_1cae5752e_Range16 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_1cae5752e_Range16 _other) { return !this->operator==(_other); }


};
struct _1cae57a5c_Range32 {
	jule::U32 _field_Lo = 0;
	jule::U32 _field_Hi = 0;
	jule::U32 _field_Stride = 0;
	

	inline bool operator==(_1cae57a5c_Range32 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_1cae57a5c_Range32 _other) { return !this->operator==(_other); }


};
struct _1cae57ed0_RangeTable {
	jule::Slice<_1cae5752e_Range16> _field_R16;
	jule::Slice<_1cae57a5c_Range32> _field_R32;
	jule::I64 _field_LatinOffset = 0;
	


};
struct _1cb178d49_acceptRange {
	jule::U8 _field_lo = 0;
	jule::U8 _field_hi = 0;
	

	inline bool operator==(_1cb178d49_acceptRange _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi;
	}

	inline bool operator!=(_1cb178d49_acceptRange _other) { return !this->operator==(_other); }


};
struct _1cb1d27a9_StrBuilder {
	jule::Slice<jule::U8> _field_buf;
	


};
struct _1cb1dd7c6_lazyBuff {
	jule::Str _field_path;
	jule::Slice<jule::U8> _field_buff;
	jule::I64 _field_w = 0;
	jule::Str _field_volAndPath;
	jule::I64 _field_volLen = 0;
	


};
struct _20d927670_DirEntry {
	jule::Str _field_Name;
	jule::Ptr<_20d92b630_Status> _field_Stat;
	

	inline bool operator==(_20d927670_DirEntry _other) {
		return 
			this->_field_Name == _other._field_Name &&
			this->_field_Stat == _other._field_Stat;
	}

	inline bool operator!=(_20d927670_DirEntry _other) { return !this->operator==(_other); }


};
struct _20d927906_Directory {
	

	inline bool operator==(_20d927906_Directory _other) { return true; }

	inline bool operator!=(_20d927906_Directory _other) { return !this->operator==(_other); }


};
struct _20d929540_File {
	jule::Uintptr _field_handle = 0;
	

	inline bool operator==(_20d929540_File _other) {
		return 
			this->_field_handle == _other._field_handle;
	}

	inline bool operator!=(_20d929540_File _other) { return !this->operator==(_other); }


};
struct _20d92b630_Status {
	jule::I64 _field_mode = 0LL;
	jule::U64 _field_size = 0;
	

	inline bool operator==(_20d92b630_Status _other) {
		return 
			this->_field_mode == _other._field_mode &&
			this->_field_size == _other._field_size;
	}

	inline bool operator!=(_20d92b630_Status _other) { return !this->operator==(_other); }


};
struct _1cb39ae8e_cmdAttrs {
	jule::I64 _field_pid = -1LL;
	

	inline bool operator==(_1cb39ae8e_cmdAttrs _other) {
		return 
			this->_field_pid == _other._field_pid;
	}

	inline bool operator!=(_1cb39ae8e_cmdAttrs _other) { return !this->operator==(_other); }


};
struct _1cb285120_Log {
	jule::I64 _field_Kind = 0LL;
	jule::I64 _field_Row = 0;
	jule::I64 _field_Column = 0;
	jule::Str _field_Path;
	jule::Str _field_Text;
	jule::Str _field_Line;
	jule::Str _field_Suggestion;
	

	inline bool operator==(_1cb285120_Log _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Path == _other._field_Path &&
			this->_field_Text == _other._field_Text &&
			this->_field_Line == _other._field_Line &&
			this->_field_Suggestion == _other._field_Suggestion;
	}

	inline bool operator!=(_1cb285120_Log _other) { return !this->operator==(_other); }


};
struct _1b272c427_floatInfo {
	jule::U64 _field_mantbits = 0;
	jule::U64 _field_expbits = 0;
	jule::I64 _field_bias = 0;
	

	inline bool operator==(_1b272c427_floatInfo _other) {
		return 
			this->_field_mantbits == _other._field_mantbits &&
			this->_field_expbits == _other._field_expbits &&
			this->_field_bias == _other._field_bias;
	}

	inline bool operator!=(_1b272c427_floatInfo _other) { return !this->operator==(_other); }


};
struct _1b272d0a4_decimalSlice {
	jule::Slice<jule::U8> _field_d;
	jule::I64 _field_nd = 0;
	jule::I64 _field_dp = 0;
	jule::Bool _field_neg = false;
	


};
struct _1b27402e7_leftCheat {
	jule::I64 _field_delta = 0;
	jule::Str _field_cutoff;
	

	inline bool operator==(_1b27402e7_leftCheat _other) {
		return 
			this->_field_delta == _other._field_delta &&
			this->_field_cutoff == _other._field_cutoff;
	}

	inline bool operator!=(_1b27402e7_leftCheat _other) { return !this->operator==(_other); }


};
struct _1b2740d0e_decimal {
	jule::Array<jule::U8,800> _field_d = jule::Array<jule::U8,800>(0);
	jule::I64 _field_nd = 0;
	jule::I64 _field_dp = 0;
	jule::Bool _field_neg = false;
	jule::Bool _field_trunc = false;
	

	inline bool operator==(_1b2740d0e_decimal _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg &&
			this->_field_trunc == _other._field_trunc;
	}

	inline bool operator!=(_1b2740d0e_decimal _other) { return !this->operator==(_other); }


};
inline jule::Bool _1b27590ad_Eq(_1b2753508_Const* _self_, _1b2753508_Const _26017_x);
inline jule::Bool _1b27593ee_Lt(_1b2753508_Const* _self_, _1b2753508_Const _28717_x);
inline jule::Bool _1b2759740_LtEq(_1b2753508_Const* _self_, _1b2753508_Const _31019_x);
inline jule::Bool _1b2759a81_Gt(_1b2753508_Const* _self_, _1b2753508_Const _33317_x);
inline jule::Bool _1b2759dc2_GtEq(_1b2753508_Const* _self_, _1b2753508_Const _35619_x);
struct _1b2753508_Const {
	jule::Str _field_Kind;
	jule::Any _field_data;
	

	inline jule::Bool operator==(_1b2753508_Const _other) { return _1b27590ad_Eq(this, _other); }

	inline bool operator!=(_1b2753508_Const _other) { return !this->operator==(_other); }

	inline jule::Bool operator>(_1b2753508_Const _other) { return _1b2759a81_Gt(this, _other); }

	inline jule::Bool operator>=(_1b2753508_Const _other) { return _1b2759dc2_GtEq(this, _other); }

	inline jule::Bool operator<(_1b2753508_Const _other) { return _1b27593ee_Lt(this, _other); }

	inline jule::Bool operator<=(_1b2753508_Const _other) { return _1b2759740_LtEq(this, _other); }


};
struct _1b4ad5712_Token {
	jule::Ptr<_1b4adae98_File> _field_File;
	jule::I64 _field_Row = 0;
	jule::I64 _field_Column = 0;
	jule::Str _field_Kind;
	jule::U64 _field_Id = 0LLU;
	

	inline bool operator==(_1b4ad5712_Token _other) {
		return 
			this->_field_File == _other._field_File &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Id == _other._field_Id;
	}

	inline bool operator!=(_1b4ad5712_Token _other) { return !this->operator==(_other); }


};
struct _1b4adae98_File {
	jule::Str _field_Path;
	jule::Slice<jule::U8> _field_Data;
	jule::Slice<jule::Ptr<_1b4ad5712_Token>> _field_Tokens;
	


};
struct _1b4add0ee_kindPair {
	jule::Str _field_kind = jule::Str::lit("::", 2);
	jule::U64 _field_id = 0LLU;
	

	inline bool operator==(_1b4add0ee_kindPair _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_id == _other._field_id;
	}

	inline bool operator!=(_1b4add0ee_kindPair _other) { return !this->operator==(_other); }


};
struct _1b4ae40d3_lex {
	jule::I64 _field_mode = 0LL;
	jule::Slice<jule::Ptr<_1b4ad5712_Token>> _field_tokens;
	jule::Ptr<_1b4adae98_File> _field_file;
	jule::I64 _field_pos = 0;
	jule::I64 _field_column = 0;
	jule::I64 _field_row = 0;
	jule::Slice<_1cb285120_Log> _field_errors;
	


};
struct _1b4ae8ca8_Ast {
	jule::Ptr<_1b4adae98_File> _field_File;
	jule::Slice<jule::Ptr<_1b4aea0d9_Directive>> _field_TopDirectives;
	jule::Slice<jule::Ptr<_1b4b18b30_UseDecl>> _field_UseDecls;
	jule::Slice<_1b4ae9bbb_Node> _field_Nodes;
	


};
struct _1b4ae9bbb_Node {
	jule::Ptr<_1b4ad5712_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

	inline bool operator==(_1b4ae9bbb_Node _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1b4ae9bbb_Node _other) { return !this->operator==(_other); }


};
struct _1b4aea0d9_Directive {
	jule::Ptr<_1b4ad5712_Token> _field_Tag;
	jule::Slice<jule::Ptr<_1b4ad5712_Token>> _field_Args;
	


};
struct _1b4aeabbc_TypeDecl {
	jule::Ptr<_1b4ad5712_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	

	inline bool operator==(_1b4aeabbc_TypeDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1b4aeabbc_TypeDecl _other) { return !this->operator==(_other); }


};
struct _1b4aeb2c7_IdentTypeDecl {
	jule::Ptr<_1b4ad5712_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_1b4aeabbc_TypeDecl>> _field_Generics;
	


};
struct _1b4aeb591_SubIdentTypeDecl {
	jule::Slice<jule::Ptr<_1b4aeb2c7_IdentTypeDecl>> _field_Idents;
	


};
struct _1b4aeb96a_NamespaceTypeDecl {
	jule::Slice<jule::Ptr<_1b4ad5712_Token>> _field_Idents;
	jule::Ptr<_1b4aeabbc_TypeDecl> _field_Kind;
	


};
struct _1b4aebc67_SptrTypeDecl {
	jule::Ptr<_1b4aeabbc_TypeDecl> _field_Elem;
	

	inline bool operator==(_1b4aebc67_SptrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1b4aebc67_SptrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1b4aec0ec_SlcTypeDecl {
	jule::Ptr<_1b4aeabbc_TypeDecl> _field_Elem;
	

	inline bool operator==(_1b4aec0ec_SlcTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1b4aec0ec_SlcTypeDecl _other) { return !this->operator==(_other); }


};
struct _1b4aec3e9_TupleTypeDecl {
	jule::Slice<jule::Ptr<_1b4aeabbc_TypeDecl>> _field_Types;
	


};
struct _1b4aec6e6_PtrTypeDecl {
	jule::Ptr<_1b4aeabbc_TypeDecl> _field_Elem;
	

	inline bool operator==(_1b4aec6e6_PtrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1b4aec6e6_PtrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1b4aece88_ArrTypeDecl {
	jule::Ptr<_1b4aeabbc_TypeDecl> _field_Elem;
	jule::Ptr<_1b4b00001_Expr> _field_Size;
	

	inline bool operator==(_1b4aece88_ArrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem &&
			this->_field_Size == _other._field_Size;
	}

	inline bool operator!=(_1b4aece88_ArrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1b4aed6d6_MapTypeDecl {
	jule::Ptr<_1b4aeabbc_TypeDecl> _field_Key;
	jule::Ptr<_1b4aeabbc_TypeDecl> _field_Val;
	

	inline bool operator==(_1b4aed6d6_MapTypeDecl _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1b4aed6d6_MapTypeDecl _other) { return !this->operator==(_other); }


};
struct _1b4aedab0_RetTypeDecl {
	jule::Ptr<_1b4aeabbc_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1b4ad5712_Token>> _field_Idents;
	


};
struct _1b4b00001_Expr {
	jule::Ptr<_1b4ad5712_Token> _field_Token;
	jule::Ptr<_1b4ad5712_Token> _field_End;
	jule::Any _field_Kind = jule::Any(nullptr);
	

	inline bool operator==(_1b4b00001_Expr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1b4b00001_Expr _other) { return !this->operator==(_other); }


};
struct _1b4b002ba_RangeExpr {
	jule::Ptr<_1b4b00001_Expr> _field_Expr;
	

	inline bool operator==(_1b4b002ba_RangeExpr _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b4b002ba_RangeExpr _other) { return !this->operator==(_other); }


};
struct _1b4b008c5_UseExpr {
	jule::Ptr<_1b4ad5712_Token> _field_Token;
	jule::Ptr<_1b4b00001_Expr> _field_Expr;
	

	inline bool operator==(_1b4b008c5_UseExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b4b008c5_UseExpr _other) { return !this->operator==(_other); }


};
struct _1b4b00ae5_TupleExpr {
	jule::Slice<jule::Ptr<_1b4b00001_Expr>> _field_Expr;
	


};
struct _1b4b00e8b_LitExpr {
	jule::Ptr<_1b4ad5712_Token> _field_Token;
	jule::Str _field_Value;
	

	inline bool operator==(_1b4b00e8b_LitExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_1b4b00e8b_LitExpr _other) { return !this->operator==(_other); }


};
struct _1b4b01365_UnsafeExpr {
	jule::Ptr<_1b4ad5712_Token> _field_Token;
	jule::Ptr<_1b4b00001_Expr> _field_Expr;
	

	inline bool operator==(_1b4b01365_UnsafeExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b4b01365_UnsafeExpr _other) { return !this->operator==(_other); }


};
struct _1b4b0181b_IdentExpr {
	jule::Ptr<_1b4ad5712_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	

	inline bool operator==(_1b4b0181b_IdentExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Binded == _other._field_Binded;
	}

	inline bool operator!=(_1b4b0181b_IdentExpr _other) { return !this->operator==(_other); }


};
struct _1b4b020ad_UnaryExpr {
	jule::Ptr<_1b4ad5712_Token> _field_Op;
	jule::Ptr<_1b4b00001_Expr> _field_Expr;
	

	inline bool operator==(_1b4b020ad_UnaryExpr _other) {
		return 
			this->_field_Op == _other._field_Op &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b4b020ad_UnaryExpr _other) { return !this->operator==(_other); }


};
struct _1b4b02487_VariadicExpr {
	jule::Ptr<_1b4ad5712_Token> _field_Token;
	jule::Ptr<_1b4b00001_Expr> _field_Expr;
	

	inline bool operator==(_1b4b02487_VariadicExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b4b02487_VariadicExpr _other) { return !this->operator==(_other); }


};
struct _1b4b02861_CastExpr {
	jule::Ptr<_1b4aeabbc_TypeDecl> _field_Kind;
	jule::Ptr<_1b4b00001_Expr> _field_Expr;
	

	inline bool operator==(_1b4b02861_CastExpr _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b4b02861_CastExpr _other) { return !this->operator==(_other); }


};
struct _1b4b02c3a_NsSelectionExpr {
	jule::Slice<jule::Ptr<_1b4ad5712_Token>> _field_Ns;
	jule::Ptr<_1b4ad5712_Token> _field_Ident;
	


};
struct _1b4b03114_SubIdentExpr {
	jule::Ptr<_1b4b00001_Expr> _field_Expr;
	jule::Ptr<_1b4ad5712_Token> _field_Ident;
	

	inline bool operator==(_1b4b03114_SubIdentExpr _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1b4b03114_SubIdentExpr _other) { return !this->operator==(_other); }


};
struct _1b4b035ba_BinaryExpr {
	jule::Ptr<_1b4b00001_Expr> _field_Left;
	jule::Ptr<_1b4b00001_Expr> _field_Right;
	jule::Ptr<_1b4ad5712_Token> _field_Op;
	

	inline bool operator==(_1b4b035ba_BinaryExpr _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1b4b035ba_BinaryExpr _other) { return !this->operator==(_other); }


};
struct _1b4b03c2a_FnCallExpr {
	jule::Ptr<_1b4ad5712_Token> _field_Token;
	jule::Ptr<_1b4b00001_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1b4b00001_Expr>> _field_Args;
	jule::Ptr<_1b4b10a4a_ScopeTree> _field_Exception;
	jule::Bool _field_IsCo = false;
	


};
struct _1b4b04720_FieldExprPair {
	jule::Ptr<_1b4ad5712_Token> _field_Field;
	jule::Ptr<_1b4b00001_Expr> _field_Expr;
	

	inline bool operator==(_1b4b04720_FieldExprPair _other) {
		return 
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b4b04720_FieldExprPair _other) { return !this->operator==(_other); }


};
struct _1b4b0504a_StructLit {
	jule::Ptr<_1b4ad5712_Token> _field_End;
	jule::Ptr<_1b4aeabbc_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1b4b00001_Expr>> _field_Exprs;
	


};
struct _1b4b05501_BraceLit {
	jule::Ptr<_1b4ad5712_Token> _field_Token;
	jule::Ptr<_1b4ad5712_Token> _field_End;
	jule::Slice<jule::Ptr<_1b4b00001_Expr>> _field_Exprs;
	


};
struct _1b4b05d2b_KeyValPair {
	jule::Ptr<_1b4b00001_Expr> _field_Key;
	jule::Ptr<_1b4b00001_Expr> _field_Val;
	jule::Ptr<_1b4ad5712_Token> _field_Colon;
	

	inline bool operator==(_1b4b05d2b_KeyValPair _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val &&
			this->_field_Colon == _other._field_Colon;
	}

	inline bool operator!=(_1b4b05d2b_KeyValPair _other) { return !this->operator==(_other); }


};
struct _1b4b06557_SliceExpr {
	jule::Ptr<_1b4ad5712_Token> _field_Token;
	jule::Ptr<_1b4ad5712_Token> _field_End;
	jule::Slice<jule::Ptr<_1b4b00001_Expr>> _field_Exprs;
	


};
struct _1b4b06eb4_IndexingExpr {
	jule::Ptr<_1b4ad5712_Token> _field_Token;
	jule::Ptr<_1b4ad5712_Token> _field_End;
	jule::Ptr<_1b4b00001_Expr> _field_Expr;
	jule::Ptr<_1b4b00001_Expr> _field_Index;
	

	inline bool operator==(_1b4b06eb4_IndexingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_1b4b06eb4_IndexingExpr _other) { return !this->operator==(_other); }


};
struct _1b4b07624_SlicingExpr {
	jule::Ptr<_1b4ad5712_Token> _field_Token;
	jule::Ptr<_1b4ad5712_Token> _field_End;
	jule::Ptr<_1b4b00001_Expr> _field_Expr;
	jule::Ptr<_1b4b00001_Expr> _field_Start;
	jule::Ptr<_1b4b00001_Expr> _field_To;
	

	inline bool operator==(_1b4b07624_SlicingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Start == _other._field_Start &&
			this->_field_To == _other._field_To;
	}

	inline bool operator!=(_1b4b07624_SlicingExpr _other) { return !this->operator==(_other); }


};
struct _1b4b07921_Constraint {
	jule::Slice<jule::Ptr<_1b4aeabbc_TypeDecl>> _field_Mask;
	


};
struct _1b4b07dc7_GenericDecl {
	jule::Ptr<_1b4ad5712_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1b4b07921_Constraint> _field_Constraint;
	

	inline bool operator==(_1b4b07dc7_GenericDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Constraint == _other._field_Constraint;
	}

	inline bool operator!=(_1b4b07dc7_GenericDecl _other) { return !this->operator==(_other); }


};
struct _1b4b082a1_LabelSt {
	jule::Ptr<_1b4ad5712_Token> _field_Token;
	jule::Str _field_Ident;
	

	inline bool operator==(_1b4b082a1_LabelSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1b4b082a1_LabelSt _other) { return !this->operator==(_other); }


};
struct _1b4b0867a_GotoSt {
	jule::Ptr<_1b4ad5712_Token> _field_Token;
	jule::Ptr<_1b4ad5712_Token> _field_Label;
	

	inline bool operator==(_1b4b0867a_GotoSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1b4b0867a_GotoSt _other) { return !this->operator==(_other); }


};
struct _1b4b08977_FallSt {
	jule::Ptr<_1b4ad5712_Token> _field_Token;
	

	inline bool operator==(_1b4b08977_FallSt _other) {
		return 
			this->_field_Token == _other._field_Token;
	}

	inline bool operator!=(_1b4b08977_FallSt _other) { return !this->operator==(_other); }


};
struct _1b4b090d7_AssignLeft {
	jule::Ptr<_1b4ad5712_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Str _field_Ident;
	jule::Ptr<_1b4b00001_Expr> _field_Expr;
	

	inline bool operator==(_1b4b090d7_AssignLeft _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b4b090d7_AssignLeft _other) { return !this->operator==(_other); }


};
struct _1b4b0966a_AssignSt {
	jule::Bool _field_Declarative = false;
	jule::Ptr<_1b4ad5712_Token> _field_Setter;
	jule::Slice<jule::Ptr<_1b4b090d7_AssignLeft>> _field_Left;
	jule::Ptr<_1b4b00001_Expr> _field_Right;
	


};
struct _1b4b103da_Stmt {
	jule::Ptr<_1b4ad5712_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

	inline bool operator==(_1b4b103da_Stmt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1b4b103da_Stmt _other) { return !this->operator==(_other); }


};
struct _1b4b10a4a_ScopeTree {
	jule::Ptr<_1b4b10a4a_ScopeTree> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<_1b4b103da_Stmt> _field_Stmts;
	jule::Ptr<_1b4ad5712_Token> _field_End;
	


};
struct _1b4b11287_ParamDecl {
	jule::Ptr<_1b4ad5712_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1b4aeabbc_TypeDecl> _field_Kind;
	jule::Str _field_Ident;
	

	inline bool operator==(_1b4b11287_ParamDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1b4b11287_ParamDecl _other) { return !this->operator==(_other); }


};
struct _1b4b126d9_FnDecl {
	jule::Ptr<_1b4ad5712_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1b4aea0d9_Directive>> _field_Directives;
	jule::Ptr<_1b4b10a4a_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1b4b07dc7_GenericDecl>> _field_Generics;
	jule::Ptr<_1b4aedab0_RetTypeDecl> _field_Result;
	jule::Slice<jule::Ptr<_1b4b11287_ParamDecl>> _field_Params;
	


};
struct _1b4b13894_VarDecl {
	jule::Ptr<_1b4b10a4a_ScopeTree> _field_Scope;
	jule::Ptr<_1b4ad5712_Token> _field_Token;
	jule::Ptr<_1b4ad5712_Token> _field_Setter;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Slice<jule::Ptr<_1b4aea0d9_Directive>> _field_Directives;
	jule::Ptr<_1b4aeabbc_TypeDecl> _field_Kind;
	jule::Ptr<_1b4b00001_Expr> _field_Expr;
	


};
struct _1b4b13c6d_RetSt {
	jule::Ptr<_1b4ad5712_Token> _field_Token;
	jule::Ptr<_1b4b00001_Expr> _field_Expr;
	

	inline bool operator==(_1b4b13c6d_RetSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b4b13c6d_RetSt _other) { return !this->operator==(_other); }


};
struct _1b4b144dd_Iter {
	jule::Bool _field_Comptime = false;
	jule::Ptr<_1b4ad5712_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	jule::Ptr<_1b4b10a4a_ScopeTree> _field_Scope;
	

	inline bool operator==(_1b4b144dd_Iter _other) {
		return 
			this->_field_Comptime == _other._field_Comptime &&
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1b4b144dd_Iter _other) { return !this->operator==(_other); }


};
struct _1b4b14d18_WhileKind {
	jule::Ptr<_1b4b00001_Expr> _field_Expr;
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_1b4ad5712_Token> _field_NextToken;
	

	inline bool operator==(_1b4b14d18_WhileKind _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_NextToken == _other._field_NextToken;
	}

	inline bool operator!=(_1b4b14d18_WhileKind _other) { return !this->operator==(_other); }


};
struct _1b4b15720_RangeKind {
	jule::Ptr<_1b4ad5712_Token> _field_InToken;
	jule::Ptr<_1b4b00001_Expr> _field_Expr;
	jule::Ptr<_1b4b13894_VarDecl> _field_KeyA;
	jule::Ptr<_1b4b13894_VarDecl> _field_KeyB;
	

	inline bool operator==(_1b4b15720_RangeKind _other) {
		return 
			this->_field_InToken == _other._field_InToken &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_1b4b15720_RangeKind _other) { return !this->operator==(_other); }


};
struct _1b4b15ae9_BreakSt {
	jule::Ptr<_1b4ad5712_Token> _field_Token;
	jule::Ptr<_1b4ad5712_Token> _field_Label;
	

	inline bool operator==(_1b4b15ae9_BreakSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1b4b15ae9_BreakSt _other) { return !this->operator==(_other); }


};
struct _1b4b15ec3_ContSt {
	jule::Ptr<_1b4ad5712_Token> _field_Token;
	jule::Ptr<_1b4ad5712_Token> _field_Label;
	

	inline bool operator==(_1b4b15ec3_ContSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1b4b15ec3_ContSt _other) { return !this->operator==(_other); }


};
struct _1b4b16479_If {
	jule::Ptr<_1b4ad5712_Token> _field_Token;
	jule::Ptr<_1b4b00001_Expr> _field_Expr;
	jule::Ptr<_1b4b10a4a_ScopeTree> _field_Scope;
	

	inline bool operator==(_1b4b16479_If _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1b4b16479_If _other) { return !this->operator==(_other); }


};
struct _1b4b16853_Else {
	jule::Ptr<_1b4ad5712_Token> _field_Token;
	jule::Ptr<_1b4b10a4a_ScopeTree> _field_Scope;
	

	inline bool operator==(_1b4b16853_Else _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1b4b16853_Else _other) { return !this->operator==(_other); }


};
struct _1b4b16d09_Conditional {
	jule::Ptr<_1b4b16479_If> _field_Head;
	jule::Slice<jule::Ptr<_1b4b16479_If>> _field_Tail;
	jule::Ptr<_1b4b16853_Else> _field_Default;
	


};
struct _1b4b17546_TypeAliasDecl {
	jule::Ptr<_1b4b10a4a_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Ptr<_1b4ad5712_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1b4aeabbc_TypeDecl> _field_Kind;
	

	inline bool operator==(_1b4b17546_TypeAliasDecl _other) {
		return 
			this->_field_Scope == _other._field_Scope &&
			this->_field_Public == _other._field_Public &&
			this->_field_Binded == _other._field_Binded &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1b4b17546_TypeAliasDecl _other) { return !this->operator==(_other); }


};
struct _1b4b179ec_Case {
	jule::Ptr<_1b4ad5712_Token> _field_Token;
	jule::Ptr<_1b4b10a4a_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1b4b00001_Expr>> _field_Exprs;
	


};
struct _1b4b18316_MatchCase {
	jule::Bool _field_Comptime = false;
	jule::Ptr<_1b4ad5712_Token> _field_Token;
	jule::Ptr<_1b4ad5712_Token> _field_End;
	jule::Bool _field_TypeMatch = false;
	jule::Ptr<_1b4b00001_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1b4b179ec_Case>> _field_Cases;
	jule::Ptr<_1b4b16853_Else> _field_Default;
	


};
struct _1b4b18b30_UseDecl {
	jule::Ptr<_1b4ad5712_Token> _field_Token;
	jule::Str _field_LinkPath;
	jule::Str _field_Alias;
	jule::Bool _field_Full = false;
	jule::Slice<jule::Ptr<_1b4ad5712_Token>> _field_Selected;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Std = false;
	


};
struct _1b4b190d6_EnumItemDecl {
	jule::Ptr<_1b4ad5712_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1b4b00001_Expr> _field_Expr;
	

	inline bool operator==(_1b4b190d6_EnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b4b190d6_EnumItemDecl _other) { return !this->operator==(_other); }


};
struct _1b4b19b97_EnumDecl {
	jule::Ptr<_1b4ad5712_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_1b4aeabbc_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1b4b190d6_EnumItemDecl>> _field_Items;
	jule::Ptr<_1b4ad5712_Token> _field_End;
	


};
struct _1b4b1a4c2_TypeEnumItemDecl {
	jule::Ptr<_1b4ad5712_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1b4aeabbc_TypeDecl> _field_Kind;
	

	inline bool operator==(_1b4b1a4c2_TypeEnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1b4b1a4c2_TypeEnumItemDecl _other) { return !this->operator==(_other); }


};
struct _1b4b1ab32_TypeEnumDecl {
	jule::Ptr<_1b4ad5712_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1b4b1a4c2_TypeEnumItemDecl>> _field_Items;
	jule::Ptr<_1b4ad5712_Token> _field_End;
	


};
struct _1b4b1adeb_FieldDecl {
	jule::Ptr<_1b4ad5712_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_1b4aeabbc_TypeDecl> _field_Kind;
	jule::Ptr<_1b4b00001_Expr> _field_Default;
	

	inline bool operator==(_1b4b1adeb_FieldDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1b4b1adeb_FieldDecl _other) { return !this->operator==(_other); }


};
struct _1b4b1b7e2_StructDecl {
	jule::Ptr<_1b4ad5712_Token> _field_Token;
	jule::Ptr<_1b4ad5712_Token> _field_End;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1b4b1adeb_FieldDecl>> _field_Fields;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_1b4aea0d9_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1b4b07dc7_GenericDecl>> _field_Generics;
	


};
struct _1b4b1c02e_TraitDecl {
	jule::Ptr<_1b4ad5712_Token> _field_Token;
	jule::Ptr<_1b4ad5712_Token> _field_End;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Slice<jule::Ptr<_1b4aeabbc_TypeDecl>> _field_Inherits;
	jule::Slice<jule::Ptr<_1b4b126d9_FnDecl>> _field_Methods;
	


};
struct _1b4b1c68e_Impl {
	jule::Ptr<_1b4ad5712_Token> _field_End;
	jule::Ptr<_1b4aeabbc_TypeDecl> _field_Base;
	jule::Ptr<_1b4aeabbc_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1b4b126d9_FnDecl>> _field_Methods;
	jule::Slice<jule::Ptr<_1b4b13894_VarDecl>> _field_Statics;
	


};
struct _1b4b1d98c_Field {
	jule::Ptr<_1b4b218b3_Struct> _field_Owner;
	jule::Ptr<_1b4ad5712_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_1b4c84ad1_TypeSymbol> _field_Kind;
	jule::Ptr<_1b4b00001_Expr> _field_Default;
	

	inline bool operator==(_1b4b1d98c_Field _other) {
		return 
			this->_field_Owner == _other._field_Owner &&
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1b4b1d98c_Field _other) { return !this->operator==(_other); }


};
struct _1b4b209a0_Operators {
	jule::Ptr<_1b4b39865_FnIns> _field_Eq;
	jule::Ptr<_1b4b39865_FnIns> _field_Gt;
	jule::Ptr<_1b4b39865_FnIns> _field_GtEq;
	jule::Ptr<_1b4b39865_FnIns> _field_Lt;
	jule::Ptr<_1b4b39865_FnIns> _field_LtEq;
	jule::Ptr<_1b4b39865_FnIns> _field_Shl;
	jule::Ptr<_1b4b39865_FnIns> _field_Shr;
	jule::Ptr<_1b4b39865_FnIns> _field_Add;
	jule::Ptr<_1b4b39865_FnIns> _field_Sub;
	jule::Ptr<_1b4b39865_FnIns> _field_Div;
	jule::Ptr<_1b4b39865_FnIns> _field_Mul;
	jule::Ptr<_1b4b39865_FnIns> _field_Mod;
	jule::Ptr<_1b4b39865_FnIns> _field_BitAnd;
	jule::Ptr<_1b4b39865_FnIns> _field_BitOr;
	jule::Ptr<_1b4b39865_FnIns> _field_BitXor;
	jule::Ptr<_1b4b39865_FnIns> _field_Neg;
	jule::Ptr<_1b4b39865_FnIns> _field_Pos;
	jule::Ptr<_1b4b39865_FnIns> _field_BitNot;
	jule::Ptr<_1b4b39865_FnIns> _field_AddAssign;
	jule::Ptr<_1b4b39865_FnIns> _field_SubAssign;
	jule::Ptr<_1b4b39865_FnIns> _field_DivAssign;
	jule::Ptr<_1b4b39865_FnIns> _field_MulAssign;
	jule::Ptr<_1b4b39865_FnIns> _field_ModAssign;
	jule::Ptr<_1b4b39865_FnIns> _field_ShlAssign;
	jule::Ptr<_1b4b39865_FnIns> _field_ShrAssign;
	jule::Ptr<_1b4b39865_FnIns> _field_BitOrAssign;
	jule::Ptr<_1b4b39865_FnIns> _field_BitAndAssign;
	jule::Ptr<_1b4b39865_FnIns> _field_BitXorAssign;
	

	inline bool operator==(_1b4b209a0_Operators _other) {
		return 
			this->_field_Eq == _other._field_Eq &&
			this->_field_Gt == _other._field_Gt &&
			this->_field_GtEq == _other._field_GtEq &&
			this->_field_Lt == _other._field_Lt &&
			this->_field_LtEq == _other._field_LtEq &&
			this->_field_Shl == _other._field_Shl &&
			this->_field_Shr == _other._field_Shr &&
			this->_field_Add == _other._field_Add &&
			this->_field_Sub == _other._field_Sub &&
			this->_field_Div == _other._field_Div &&
			this->_field_Mul == _other._field_Mul &&
			this->_field_Mod == _other._field_Mod &&
			this->_field_BitAnd == _other._field_BitAnd &&
			this->_field_BitOr == _other._field_BitOr &&
			this->_field_BitXor == _other._field_BitXor &&
			this->_field_Neg == _other._field_Neg &&
			this->_field_Pos == _other._field_Pos &&
			this->_field_BitNot == _other._field_BitNot &&
			this->_field_AddAssign == _other._field_AddAssign &&
			this->_field_SubAssign == _other._field_SubAssign &&
			this->_field_DivAssign == _other._field_DivAssign &&
			this->_field_MulAssign == _other._field_MulAssign &&
			this->_field_ModAssign == _other._field_ModAssign &&
			this->_field_ShlAssign == _other._field_ShlAssign &&
			this->_field_ShrAssign == _other._field_ShrAssign &&
			this->_field_BitOrAssign == _other._field_BitOrAssign &&
			this->_field_BitAndAssign == _other._field_BitAndAssign &&
			this->_field_BitXorAssign == _other._field_BitXorAssign;
	}

	inline bool operator!=(_1b4b209a0_Operators _other) { return !this->operator==(_other); }


};
struct _1b4b218b3_Struct {
	jule::Ptr<_1b4bbac37_Sema> _field_sema;
	jule::Slice<jule::Ptr<_1b4b218b3_Struct>> _field_Depends;
	jule::Slice<jule::Ptr<_1b4b218b3_Struct>> _field_Uses;
	jule::Ptr<_1b4ad5712_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1b4b1d98c_Field>> _field_Fields;
	jule::Slice<jule::Ptr<_1b4b36884_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1b4bddaa1_Var>> _field_Statics;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_1b4aea0d9_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1b4b07dc7_GenericDecl>> _field_Generics;
	jule::Slice<jule::Ptr<_1b4b49c3d_Trait>> _field_Implements;
	jule::Slice<jule::Ptr<_1b4b24641_StructIns>> _field_Instances;
	


};
struct _1b4b23a91_FieldIns {
	jule::Ptr<_1b4b1d98c_Field> _field_Decl;
	jule::Ptr<_1b4c7c90e_TypeKind> _field_Kind;
	jule::Ptr<_1b4c466a8_Data> _field_Default;
	

	inline bool operator==(_1b4b23a91_FieldIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1b4b23a91_FieldIns _other) { return !this->operator==(_other); }


};
struct _1b4b28546_OperandExprModel {
	jule::Ptr<_1b4c7c90e_TypeKind> _field_Kind;
	jule::Any _field_Model = jule::Any(nullptr);
	

	inline bool operator==(_1b4b28546_OperandExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Model == _other._field_Model;
	}

	inline bool operator!=(_1b4b28546_OperandExprModel _other) { return !this->operator==(_other); }


};
struct _1b4b28a41_BinaryExprModel {
	jule::Ptr<_1b4b28546_OperandExprModel> _field_Left;
	jule::Ptr<_1b4b28546_OperandExprModel> _field_Right;
	jule::Ptr<_1b4ad5712_Token> _field_Op;
	

	inline bool operator==(_1b4b28a41_BinaryExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1b4b28a41_BinaryExprModel _other) { return !this->operator==(_other); }


};
struct _1b4b28e1a_UnaryExprModel {
	jule::Ptr<_1b4c466a8_Data> _field_Expr;
	jule::Ptr<_1b4ad5712_Token> _field_Op;
	

	inline bool operator==(_1b4b28e1a_UnaryExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1b4b28e1a_UnaryExprModel _other) { return !this->operator==(_other); }


};
struct _1b4b29448_StructArgExprModel {
	jule::Ptr<_1b4ad5712_Token> _field_Token;
	jule::Ptr<_1b4b23a91_FieldIns> _field_Field;
	jule::Ptr<_1b4c466a8_Data> _field_Expr;
	

	inline bool operator==(_1b4b29448_StructArgExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b4b29448_StructArgExprModel _other) { return !this->operator==(_other); }


};
struct _1b4b297de_StructLitExprModel {
	jule::Ptr<_1b4b24641_StructIns> _field_Strct;
	jule::Slice<jule::Ptr<_1b4b29448_StructArgExprModel>> _field_Args;
	


};
struct _1b4b29adb_AllocStructLitExprModel {
	jule::Ptr<_1b4b297de_StructLitExprModel> _field_Lit;
	

	inline bool operator==(_1b4b29adb_AllocStructLitExprModel _other) {
		return 
			this->_field_Lit == _other._field_Lit;
	}

	inline bool operator!=(_1b4b29adb_AllocStructLitExprModel _other) { return !this->operator==(_other); }


};
struct _1b4b2a16e_CastingExprModel {
	jule::Ptr<_1b4ad5712_Token> _field_Token;
	jule::Ptr<_1b4c466a8_Data> _field_Expr;
	jule::Ptr<_1b4c7c90e_TypeKind> _field_Kind;
	jule::Ptr<_1b4c7c90e_TypeKind> _field_ExprKind;
	

	inline bool operator==(_1b4b2a16e_CastingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_ExprKind == _other._field_ExprKind;
	}

	inline bool operator!=(_1b4b2a16e_CastingExprModel _other) { return !this->operator==(_other); }


};
struct _1b4b2aa21_FnCallExprModel {
	jule::Ptr<_1b4ad5712_Token> _field_Token;
	jule::Ptr<_1b4b39865_FnIns> _field_Func;
	jule::Bool _field_IsCo = false;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Slice<jule::Any> _field_Args;
	jule::Ptr<_1b4b7880a_Scope> _field_Except;
	jule::Bool _field_Assigned = false;
	


};
struct _1b4b2adea_SliceExprModel {
	jule::Ptr<_1b4c7c90e_TypeKind> _field_ElemKind;
	jule::Slice<jule::Any> _field_Elems;
	


};
struct _1b4b2b3a1_IndexingExprModel {
	jule::Ptr<_1b4ad5712_Token> _field_Token;
	jule::Ptr<_1b4c466a8_Data> _field_Expr;
	jule::Ptr<_1b4c466a8_Data> _field_Index;
	

	inline bool operator==(_1b4b2b3a1_IndexingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_1b4b2b3a1_IndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1b4b2b857_AnonFnExprModel {
	jule::Slice<jule::Ptr<_1b4bddaa1_Var>> _field_Captured;
	jule::Ptr<_1b4b39865_FnIns> _field_Func;
	jule::Bool _field_Global = false;
	


};
struct _1b4b2bc31_KeyValPairExprModel {
	jule::Any _field_Key = jule::Any(nullptr);
	jule::Any _field_Val = jule::Any(nullptr);
	

	inline bool operator==(_1b4b2bc31_KeyValPairExprModel _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1b4b2bc31_KeyValPairExprModel _other) { return !this->operator==(_other); }


};
struct _1b4b2c1d7_MapExprModel {
	jule::Ptr<_1b4c7c90e_TypeKind> _field_KeyKind;
	jule::Ptr<_1b4c7c90e_TypeKind> _field_ValKind;
	jule::Slice<jule::Ptr<_1b4b2bc31_KeyValPairExprModel>> _field_Entries;
	


};
struct _1b4b2c76a_SlicingExprModel {
	jule::Ptr<_1b4ad5712_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

	inline bool operator==(_1b4b2c76a_SlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1b4b2c76a_SlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1b4b2cced_TraitSubIdentExprModel {
	jule::Ptr<_1b4ad5712_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1b4b36884_Fn> _field_Method;
	jule::Ptr<_1b4b49c3d_Trait> _field_Trt;
	

	inline bool operator==(_1b4b2cced_TraitSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Trt == _other._field_Trt;
	}

	inline bool operator!=(_1b4b2cced_TraitSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1b4b2d68e_StructSubIdentExprModel {
	jule::Ptr<_1b4ad5712_Token> _field_Token;
	jule::Ptr<_1b4c466a8_Data> _field_Expr;
	jule::Ptr<_1b4b39865_FnIns> _field_Method;
	jule::Ptr<_1b4b23a91_FieldIns> _field_Field;
	jule::Ptr<_1b4b24641_StructIns> _field_Owner;
	

	inline bool operator==(_1b4b2d68e_StructSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Field == _other._field_Field &&
			this->_field_Owner == _other._field_Owner;
	}

	inline bool operator!=(_1b4b2d68e_StructSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1b4b2da35_StructStaticIdentExprModel {
	jule::Ptr<_1b4b24641_StructIns> _field_Structure;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1b4b39865_FnIns> _field_Method;
	

	inline bool operator==(_1b4b2da35_StructStaticIdentExprModel _other) {
		return 
			this->_field_Structure == _other._field_Structure &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method;
	}

	inline bool operator!=(_1b4b2da35_StructStaticIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1b4b2de0e_ArrayExprModel {
	jule::Ptr<_1b4c8bd08_Arr> _field_Kind;
	jule::Slice<jule::Any> _field_Elems;
	


};
struct _1b4b2e20b_TupleExprModel {
	jule::Slice<jule::Ptr<_1b4c466a8_Data>> _field_Datas;
	


};
struct _1b4b2e5d5_BuiltinOutCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

	inline bool operator==(_1b4b2e5d5_BuiltinOutCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_1b4b2e5d5_BuiltinOutCallExprModel _other) { return !this->operator==(_other); }


};
struct _1b4b2e9ae_BuiltinOutlnCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

	inline bool operator==(_1b4b2e9ae_BuiltinOutlnCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_1b4b2e9ae_BuiltinOutlnCallExprModel _other) { return !this->operator==(_other); }


};
struct _1b4b2ed88_BuiltinNewCallExprModel {
	jule::Ptr<_1b4c7c90e_TypeKind> _field_Kind;
	jule::Any _field_Init = jule::Any(nullptr);
	

	inline bool operator==(_1b4b2ed88_BuiltinNewCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Init == _other._field_Init;
	}

	inline bool operator!=(_1b4b2ed88_BuiltinNewCallExprModel _other) { return !this->operator==(_other); }


};
struct _1b4b30262_BuiltinPanicCallExprModel {
	jule::Ptr<_1b4ad5712_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1b4b30262_BuiltinPanicCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b4b30262_BuiltinPanicCallExprModel _other) { return !this->operator==(_other); }


};
struct _1b4b30718_BuiltinAssertCallExprModel {
	jule::Ptr<_1b4ad5712_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Log;
	

	inline bool operator==(_1b4b30718_BuiltinAssertCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Log == _other._field_Log;
	}

	inline bool operator!=(_1b4b30718_BuiltinAssertCallExprModel _other) { return !this->operator==(_other); }


};
struct _1b4b30bbe_BuiltinMakeCallExprModel {
	jule::Ptr<_1b4c7c90e_TypeKind> _field_Kind;
	jule::Any _field_Len = jule::Any(nullptr);
	jule::Any _field_Cap = jule::Any(nullptr);
	

	inline bool operator==(_1b4b30bbe_BuiltinMakeCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Len == _other._field_Len &&
			this->_field_Cap == _other._field_Cap;
	}

	inline bool operator!=(_1b4b30bbe_BuiltinMakeCallExprModel _other) { return !this->operator==(_other); }


};
struct _1b4b31098_BuiltinAppendCallExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Elements = jule::Any(nullptr);
	

	inline bool operator==(_1b4b31098_BuiltinAppendCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elements == _other._field_Elements;
	}

	inline bool operator!=(_1b4b31098_BuiltinAppendCallExprModel _other) { return !this->operator==(_other); }


};
struct _1b4b31395_BuiltinLenCallExprModel {
	jule::Ptr<_1b4c466a8_Data> _field_Expr;
	

	inline bool operator==(_1b4b31395_BuiltinLenCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b4b31395_BuiltinLenCallExprModel _other) { return !this->operator==(_other); }


};
struct _1b4b31692_BuiltinCapCallExprModel {
	jule::Ptr<_1b4c466a8_Data> _field_Expr;
	

	inline bool operator==(_1b4b31692_BuiltinCapCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b4b31692_BuiltinCapCallExprModel _other) { return !this->operator==(_other); }


};
struct _1b4b31a6b_BuiltinDeleteCallExprModel {
	jule::Ptr<_1b4c466a8_Data> _field_Dest;
	jule::Ptr<_1b4c466a8_Data> _field_Key;
	

	inline bool operator==(_1b4b31a6b_BuiltinDeleteCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Key == _other._field_Key;
	}

	inline bool operator!=(_1b4b31a6b_BuiltinDeleteCallExprModel _other) { return !this->operator==(_other); }


};
struct _1b4b31e45_BuiltinCopyCallExprModel {
	jule::Ptr<_1b4c466a8_Data> _field_Dest;
	jule::Ptr<_1b4c466a8_Data> _field_Src;
	

	inline bool operator==(_1b4b31e45_BuiltinCopyCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Src == _other._field_Src;
	}

	inline bool operator!=(_1b4b31e45_BuiltinCopyCallExprModel _other) { return !this->operator==(_other); }


};
struct _1b4b3231e_BuiltinErrorCallExprModel {
	jule::Ptr<_1b4b39865_FnIns> _field_Func;
	jule::Ptr<_1b4c466a8_Data> _field_Err;
	

	inline bool operator==(_1b4b3231e_BuiltinErrorCallExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Err == _other._field_Err;
	}

	inline bool operator!=(_1b4b3231e_BuiltinErrorCallExprModel _other) { return !this->operator==(_other); }


};
struct _1b4b329c3_SizeofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1b4b329c3_SizeofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b4b329c3_SizeofExprModel _other) { return !this->operator==(_other); }


};
struct _1b4b32bb0_AlignofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1b4b32bb0_AlignofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b4b32bb0_AlignofExprModel _other) { return !this->operator==(_other); }


};
struct _1b4b32e57_RuneExprModel {
	jule::I32 _field_Code = 0;
	

	inline bool operator==(_1b4b32e57_RuneExprModel _other) {
		return 
			this->_field_Code == _other._field_Code;
	}

	inline bool operator!=(_1b4b32e57_RuneExprModel _other) { return !this->operator==(_other); }


};
struct _1b4b33254_IntegratedToStrExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1b4b33254_IntegratedToStrExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b4b33254_IntegratedToStrExprModel _other) { return !this->operator==(_other); }


};
struct _1b4b3362d_BackendEmitExprModel {
	jule::Str _field_Code;
	jule::Slice<jule::Any> _field_Exprs;
	


};
struct _1b4b3392a_FreeExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1b4b3392a_FreeExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b4b3392a_FreeExprModel _other) { return !this->operator==(_other); }


};
struct _1b4b3462e_RetType {
	jule::Ptr<_1b4c84ad1_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_1b4ad5712_Token>> _field_Idents;
	


};
struct _1b4b34db0_Param {
	jule::Ptr<_1b4ad5712_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1b4c84ad1_TypeSymbol> _field_Kind;
	jule::Str _field_Ident;
	

	inline bool operator==(_1b4b34db0_Param _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1b4b34db0_Param _other) { return !this->operator==(_other); }


};
struct _1b4b36884_Fn {
	jule::Ptr<_1b4bbac37_Sema> _field_sema;
	jule::Ptr<_1b4ad5712_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1b4aea0d9_Directive>> _field_Directives;
	jule::Ptr<_1b4b10a4a_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1b4b07dc7_GenericDecl>> _field_Generics;
	jule::Ptr<_1b4b3462e_RetType> _field_Result;
	jule::Slice<jule::Ptr<_1b4b34db0_Param>> _field_Params;
	jule::Ptr<_1b4b218b3_Struct> _field_Owner;
	jule::Slice<jule::Ptr<_1b4b39865_FnIns>> _field_Instances;
	


};
struct _1b4b387dc_ParamIns {
	jule::Ptr<_1b4b34db0_Param> _field_Decl;
	jule::Ptr<_1b4c7c90e_TypeKind> _field_Kind;
	

	inline bool operator==(_1b4b387dc_ParamIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1b4b387dc_ParamIns _other) { return !this->operator==(_other); }


};
struct _1b4b39865_FnIns {
	jule::Ptr<_1b4b24641_StructIns> _field_Owner;
	jule::Ptr<_1b4b36884_Fn> _field_Decl;
	jule::Slice<jule::Ptr<_1b4c7b028_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1b4b387dc_ParamIns>> _field_Params;
	jule::Ptr<_1b4c7c90e_TypeKind> _field_Result;
	jule::Ptr<_1b4b7880a_Scope> _field_Scope;
	jule::Ptr<_1b4b3ca44_ReferenceStack> _field_Refers;
	jule::Bool _field_Anon = false;
	jule::Bool _field_AsAnon = false;
	jule::Fn<jule::Ptr<_1b4c466a8_Data>,jule::Ptr<_1b4c483d0_Eval>*,jule::Ptr<_1b4b03c2a_FnCallExpr>*,jule::Ptr<_1b4c466a8_Data>*> _field_caller;
	jule::Bool _field_reloaded = false;
	


};
struct _1b4b3ca44_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer;
	


};
struct _1b4b3e051_Pass {
	jule::Ptr<_1b4ad5712_Token> _field_Token;
	jule::Str _field_Text;
	

	inline bool operator==(_1b4b3e051_Pass _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Text == _other._field_Text;
	}

	inline bool operator!=(_1b4b3e051_Pass _other) { return !this->operator==(_other); }


};
struct _1b4b43a06_symbolBuilder {
	jule::Ptr<_1b4b43a06_symbolBuilder> _field_owner;
	jule::Trait _field_importer;
	jule::Slice<_1cb285120_Log> _field_errors;
	jule::Ptr<_1b4ae8ca8_Ast> _field_ast;
	jule::Ptr<_1b4c41340_SymbolTable> _field_table;
	


};
struct _1b4b49c3d_Trait {
	jule::Ptr<_1b4ad5712_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Slice<jule::Ptr<_1b4c84ad1_TypeSymbol>> _field_Inherits;
	jule::Slice<jule::Ptr<_1b4b36884_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1b4b218b3_Struct>> _field_Implemented;
	


};
struct _1b4b4b8cc_EnumItem {
	jule::Ptr<_1b4ad5712_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1b4c47830_Value> _field_Value;
	

	inline bool operator==(_1b4b4b8cc_EnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_1b4b4b8cc_EnumItem _other) { return !this->operator==(_other); }


};
struct _1b4b4c449_Enum {
	jule::Ptr<_1b4ad5712_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_1b4c84ad1_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_1b4b4b8cc_EnumItem>> _field_Items;
	


};
struct _1b4b4d57c_TypeEnumItem {
	jule::Ptr<_1b4ad5712_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1b4c84ad1_TypeSymbol> _field_Kind;
	

	inline bool operator==(_1b4b4d57c_TypeEnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1b4b4d57c_TypeEnumItem _other) { return !this->operator==(_other); }


};
struct _1b4b4db54_TypeEnum {
	jule::Ptr<_1b4ad5712_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1b4b4d57c_TypeEnumItem>> _field_Items;
	


};
struct _1b4b51cab_comptimeRange {
	jule::Trait _field_kind;
	

	inline bool operator==(_1b4b51cab_comptimeRange _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1b4b51cab_comptimeRange _other) { return !this->operator==(_other); }


};
struct _1b4b5277e_comptimeStructField {
	jule::Ptr<_1b4b23a91_FieldIns> _field_field;
	

	inline bool operator==(_1b4b5277e_comptimeStructField _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1b4b5277e_comptimeStructField _other) { return !this->operator==(_other); }


};
struct _1b4b54440_comptimeStructFields {
	jule::Slice<jule::Ptr<_1b4b23a91_FieldIns>> _field_fields;
	


};
struct _1b4b55a3a_comptimeStatic {
	jule::Ptr<_1b4bddaa1_Var> _field_field;
	

	inline bool operator==(_1b4b55a3a_comptimeStatic _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1b4b55a3a_comptimeStatic _other) { return !this->operator==(_other); }


};
struct _1b4b576eb_comptimeStatics {
	jule::Slice<jule::Ptr<_1b4bddaa1_Var>> _field_fields;
	


};
struct _1b4b58ce6_comptimeEnumField {
	jule::Ptr<_1b4b4b8cc_EnumItem> _field_field;
	

	inline bool operator==(_1b4b58ce6_comptimeEnumField _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1b4b58ce6_comptimeEnumField _other) { return !this->operator==(_other); }


};
struct _1b4b5a18d_comptimeEnumFields {
	jule::Slice<jule::Ptr<_1b4b4b8cc_EnumItem>> _field_fields;
	


};
struct _1b4b5b788_comptimeParam {
	jule::Ptr<_1b4b387dc_ParamIns> _field_param;
	

	inline bool operator==(_1b4b5b788_comptimeParam _other) {
		return 
			this->_field_param == _other._field_param;
	}

	inline bool operator!=(_1b4b5b788_comptimeParam _other) { return !this->operator==(_other); }


};
struct _1b4b5d922_comptimeParams {
	jule::Slice<jule::Ptr<_1b4b387dc_ParamIns>> _field_params;
	


};
struct _1b4b5eed9_comptimeTypeInfos {
	jule::Slice<jule::Ptr<_1b4b615d4_comptimeTypeInfo>> _field_types;
	


};
struct _1b4b615d4_comptimeTypeInfo {
	jule::Ptr<_1b4c7c90e_TypeKind> _field_base;
	

	inline bool operator==(_1b4b615d4_comptimeTypeInfo _other) {
		return 
			this->_field_base == _other._field_base;
	}

	inline bool operator!=(_1b4b615d4_comptimeTypeInfo _other) { return !this->operator==(_other); }


};
struct _1b4b67ae6_comptimeValue {
	jule::Ptr<_1b4c466a8_Data> _field_data;
	

	inline bool operator==(_1b4b67ae6_comptimeValue _other) {
		return 
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1b4b67ae6_comptimeValue _other) { return !this->operator==(_other); }


};
struct _1b4b6a445_comptimeFiles {
	jule::Slice<jule::Ptr<_1b4c41340_SymbolTable>> _field_files;
	


};
struct _1b4b6ba40_comptimeFile {
	jule::Ptr<_1b4c41340_SymbolTable> _field_file;
	

	inline bool operator==(_1b4b6ba40_comptimeFile _other) {
		return 
			this->_field_file == _other._field_file;
	}

	inline bool operator!=(_1b4b6ba40_comptimeFile _other) { return !this->operator==(_other); }


};
struct _1b4b71050_constraintChecker {
	jule::Ptr<_1b4bbac37_Sema> _field_s;
	jule::Slice<jule::Ptr<_1b4b07dc7_GenericDecl>> _field_genericsD;
	jule::Slice<jule::Ptr<_1b4c7b028_InsGeneric>> _field_generics;
	jule::Slice<jule::Ptr<_1b4c7bb1c_TypeAlias>> _field_genericsA;
	jule::Ptr<_1b4b39865_FnIns> _field_fi;
	jule::Ptr<_1b4b24641_StructIns> _field_si;
	jule::Ptr<_1b4ad5712_Token> _field_et;
	jule::Bool _field_uniq = false;
	


};
struct _1b4b733a4_Impl {
	jule::Ptr<_1b4aeabbc_TypeDecl> _field_Base;
	jule::Ptr<_1b4aeabbc_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1b4b36884_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1b4bddaa1_Var>> _field_Statics;
	


};
struct _1b4b7880a_Scope {
	jule::Ptr<_1b4b7880a_Scope> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<jule::Any> _field_Stmts;
	


};
struct _1b4b78c28_If {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1b4b7880a_Scope> _field_Scope;
	

	inline bool operator==(_1b4b78c28_If _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1b4b78c28_If _other) { return !this->operator==(_other); }


};
struct _1b4b79025_Else {
	jule::Ptr<_1b4b7880a_Scope> _field_Scope;
	

	inline bool operator==(_1b4b79025_Else _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1b4b79025_Else _other) { return !this->operator==(_other); }


};
struct _1b4b79443_Conditional {
	jule::Slice<jule::Ptr<_1b4b78c28_If>> _field_Elifs;
	jule::Ptr<_1b4b79025_Else> _field_Default;
	


};
struct _1b4b79740_InfIter {
	jule::Ptr<_1b4b7880a_Scope> _field_Scope;
	

	inline bool operator==(_1b4b79740_InfIter _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1b4b79740_InfIter _other) { return !this->operator==(_other); }


};
struct _1b4b79be6_WhileIter {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_1b4b7880a_Scope> _field_Scope;
	

	inline bool operator==(_1b4b79be6_WhileIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1b4b79be6_WhileIter _other) { return !this->operator==(_other); }


};
struct _1b4b7a642_RangeIter {
	jule::Ptr<_1b4c466a8_Data> _field_Expr;
	jule::Ptr<_1b4b7880a_Scope> _field_Scope;
	jule::Ptr<_1b4bddaa1_Var> _field_KeyA;
	jule::Ptr<_1b4bddaa1_Var> _field_KeyB;
	

	inline bool operator==(_1b4b7a642_RangeIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_1b4b7a642_RangeIter _other) { return !this->operator==(_other); }


};
struct _1b4b7a9c7_ContSt {
	jule::Uintptr _field_It = 0;
	

	inline bool operator==(_1b4b7a9c7_ContSt _other) {
		return 
			this->_field_It == _other._field_It;
	}

	inline bool operator!=(_1b4b7a9c7_ContSt _other) { return !this->operator==(_other); }


};
struct _1b4b7ada1_BreakSt {
	jule::Uintptr _field_It = 0;
	jule::Uintptr _field_Mtch = 0;
	

	inline bool operator==(_1b4b7ada1_BreakSt _other) {
		return 
			this->_field_It == _other._field_It &&
			this->_field_Mtch == _other._field_Mtch;
	}

	inline bool operator!=(_1b4b7ada1_BreakSt _other) { return !this->operator==(_other); }


};
struct _1b4b7b19d_Label {
	jule::Str _field_Ident;
	

	inline bool operator==(_1b4b7b19d_Label _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1b4b7b19d_Label _other) { return !this->operator==(_other); }


};
struct _1b4b7b577_GotoSt {
	jule::Str _field_Ident;
	jule::Ptr<_1b4b7b19d_Label> _field_Label;
	

	inline bool operator==(_1b4b7b577_GotoSt _other) {
		return 
			this->_field_Ident == _other._field_Ident &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1b4b7b577_GotoSt _other) { return !this->operator==(_other); }


};
struct _1b4b7b951_Postfix {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Op;
	

	inline bool operator==(_1b4b7b951_Postfix _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1b4b7b951_Postfix _other) { return !this->operator==(_other); }


};
struct _1b4b7be07_Assign {
	jule::Ptr<_1b4b28546_OperandExprModel> _field_Left;
	jule::Ptr<_1b4b28546_OperandExprModel> _field_Right;
	jule::Ptr<_1b4ad5712_Token> _field_Op;
	

	inline bool operator==(_1b4b7be07_Assign _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1b4b7be07_Assign _other) { return !this->operator==(_other); }


};
struct _1b4b7c3ad_MultiAssign {
	jule::Slice<jule::Ptr<_1b4bddaa1_Var>> _field_Decls;
	jule::Slice<jule::Ptr<_1b4c466a8_Data>> _field_Left;
	jule::Any _field_Right = jule::Any(nullptr);
	


};
struct _1b4b7ca1d_Match {
	jule::Ptr<_1b4c466a8_Data> _field_Expr;
	jule::Bool _field_TypeMatch = false;
	jule::Bool _field_Comptime = false;
	jule::Slice<jule::Ptr<_1b4b7d546_Case>> _field_Cases;
	jule::Ptr<_1b4b7d546_Case> _field_Default;
	


};
struct _1b4b7d546_Case {
	jule::Ptr<_1b4b7ca1d_Match> _field_Owner;
	jule::Ptr<_1b4b7880a_Scope> _field_Scope;
	jule::Slice<jule::Ptr<_1b4c466a8_Data>> _field_Exprs;
	jule::Ptr<_1b4b7d546_Case> _field_Next;
	


};
struct _1b4b7dc3e_FallSt {
	jule::Uintptr _field_DestCase = 0;
	

	inline bool operator==(_1b4b7dc3e_FallSt _other) {
		return 
			this->_field_DestCase == _other._field_DestCase;
	}

	inline bool operator!=(_1b4b7dc3e_FallSt _other) { return !this->operator==(_other); }


};
struct _1b4b7e0d5_RetSt {
	jule::Ptr<_1b4b39865_FnIns> _field_Func;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1b4b7e0d5_RetSt _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b4b7e0d5_RetSt _other) { return !this->operator==(_other); }


};
struct _1b4b7e745_scopeLabel {
	jule::Ptr<_1b4ad5712_Token> _field_token;
	jule::Ptr<_1b4b7b19d_Label> _field_label;
	jule::I64 _field_pos = 0;
	jule::Ptr<_1b4b80cb8_scopeChecker> _field_scope;
	jule::Bool _field_used = false;
	

	inline bool operator==(_1b4b7e745_scopeLabel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label &&
			this->_field_pos == _other._field_pos &&
			this->_field_scope == _other._field_scope &&
			this->_field_used == _other._field_used;
	}

	inline bool operator!=(_1b4b7e745_scopeLabel _other) { return !this->operator==(_other); }


};
struct _1b4b7ecc8_scopeGoto {
	jule::Ptr<_1b4b7b577_GotoSt> _field_st;
	jule::Ptr<_1b4b0867a_GotoSt> _field_gt;
	jule::Ptr<_1b4b80cb8_scopeChecker> _field_scope;
	jule::I64 _field_pos = 0;
	

	inline bool operator==(_1b4b7ecc8_scopeGoto _other) {
		return 
			this->_field_st == _other._field_st &&
			this->_field_gt == _other._field_gt &&
			this->_field_scope == _other._field_scope &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_1b4b7ecc8_scopeGoto _other) { return !this->operator==(_other); }


};
struct _1b4b80cb8_scopeChecker {
	jule::Ptr<_1b4ad5712_Token> _field_calledFrom;
	jule::Ptr<_1b4bbac37_Sema> _field_s;
	jule::Ptr<_1b4b39865_FnIns> _field_owner;
	jule::Ptr<_1b4b80cb8_scopeChecker> _field_parent;
	jule::I64 _field_childIndex = 0;
	jule::Ptr<_1b4c41340_SymbolTable> _field_table;
	jule::Ptr<_1b4b7880a_Scope> _field_scope;
	jule::Ptr<_1b4b10a4a_ScopeTree> _field_tree;
	jule::Ptr<_1b4b39865_FnIns> _field_result;
	jule::Uintptr _field_it = 0;
	jule::Uintptr _field_cse = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_1b4bddaa1_Var>>> _field_captured;
	jule::Ptr<jule::Slice<jule::Ptr<_1b4b7e745_scopeLabel>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1b4b7ecc8_scopeGoto>>> _field_gotos;
	jule::I64 _field_i = 0;
	

	inline bool operator==(_1b4b80cb8_scopeChecker _other) {
		return 
			this->_field_calledFrom == _other._field_calledFrom &&
			this->_field_s == _other._field_s &&
			this->_field_owner == _other._field_owner &&
			this->_field_parent == _other._field_parent &&
			this->_field_childIndex == _other._field_childIndex &&
			this->_field_table == _other._field_table &&
			this->_field_scope == _other._field_scope &&
			this->_field_tree == _other._field_tree &&
			this->_field_result == _other._field_result &&
			this->_field_it == _other._field_it &&
			this->_field_cse == _other._field_cse &&
			this->_field_captured == _other._field_captured &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1b4b80cb8_scopeChecker _other) { return !this->operator==(_other); }


};
struct _1b4b943e7_directiveChecker {
	jule::Ptr<_1b4bbac37_Sema> _field_s;
	jule::Ptr<jule::Slice<jule::Ptr<_1b4aea0d9_Directive>>> _field_d;
	jule::Any _field_o;
	

	inline bool operator==(_1b4b943e7_directiveChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_d == _other._field_d &&
			this->_field_o == _other._field_o;
	}

	inline bool operator!=(_1b4b943e7_directiveChecker _other) { return !this->operator==(_other); }


};
struct _1b4b9a893_ImportInfo {
	jule::Ptr<_1b4ad5712_Token> _field_Token;
	jule::Str _field_Path;
	jule::Str _field_LinkPath;
	jule::Str _field_Ident;
	jule::Str _field_Alias;
	jule::Bool _field_Duplicate = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Std = false;
	jule::Bool _field_ImportAll = false;
	jule::Slice<jule::Ptr<_1b4ad5712_Token>> _field_Selected;
	jule::Ptr<_1b4b9d7b9_Package> _field_Package;
	jule::I64 _field_ModId = 0;
	


};
struct _1b4b9d7b9_Package {
	jule::Slice<jule::Ptr<_1b4c41340_SymbolTable>> _field_Files;
	


};
struct _1b4bba132_commonSemaMeta {
	jule::Slice<jule::Ptr<_1b4b615d4_comptimeTypeInfo>> _field_comptimeTypeInfos;
	


};
struct _1b4bbac37_Sema {
	jule::Slice<_1cb285120_Log> _field_errors;
	jule::Slice<jule::Ptr<_1b4c41340_SymbolTable>> _field_files;
	jule::Ptr<_1b4c41340_SymbolTable> _field_file;
	jule::I64 _field_flags = 0LL;
	jule::Ptr<_1b4bba132_commonSemaMeta> _field_meta;
	


};
struct _1b4bda905_missingRetChecker {
	jule::Slice<jule::Uintptr> _field_breaked;
	jule::Bool _field_falled = false;
	


};
struct _1b4bddaa1_Var {
	jule::Ptr<_1b4b7880a_Scope> _field_Scope;
	jule::Ptr<_1b4ad5712_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1b4c84ad1_TypeSymbol> _field_Kind;
	jule::Ptr<_1b4c47830_Value> _field_Value;
	jule::Ptr<_1b4b3ca44_ReferenceStack> _field_Refers;
	jule::Slice<jule::Ptr<_1b4aea0d9_Directive>> _field_Directives;
	jule::I64 _field_RetOrder = -2LL;
	jule::Slice<jule::Ptr<_1b4bddaa1_Var>> _field_Depends;
	


};
struct _1b4bde92b_FuncPattern {
	


};
struct _1b4c2d371_typeCompatibilityChecker {
	jule::Ptr<_1b4bbac37_Sema> _field_s;
	jule::Ptr<_1b4c7c90e_TypeKind> _field_dest;
	jule::Ptr<_1b4c7c90e_TypeKind> _field_src;
	jule::Ptr<_1b4ad5712_Token> _field_errorToken;
	

	inline bool operator==(_1b4c2d371_typeCompatibilityChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_src == _other._field_src &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_1b4c2d371_typeCompatibilityChecker _other) { return !this->operator==(_other); }


};
struct _1b4c30120_assignTypeChecker {
	jule::Ptr<_1b4bbac37_Sema> _field_s;
	jule::Ptr<_1b4c7c90e_TypeKind> _field_dest;
	jule::Ptr<_1b4c466a8_Data> _field_d;
	jule::Ptr<_1b4ad5712_Token> _field_errorToken;
	

	inline bool operator==(_1b4c30120_assignTypeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_d == _other._field_d &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_1b4c30120_assignTypeChecker _other) { return !this->operator==(_other); }


};
struct _1b4c319e5_dynamicTypeAnnotation {
	jule::Ptr<_1b4c483d0_Eval> _field_e;
	jule::Ptr<_1b4b39865_FnIns> _field_f;
	jule::Ptr<_1b4b387dc_ParamIns> _field_p;
	jule::Ptr<_1b4c466a8_Data> _field_a;
	jule::Ptr<_1b4ad5712_Token> _field_errorToken;
	jule::Ptr<_1b4c7c90e_TypeKind>* _field_k = nullptr;
	jule::Ptr<_1b4aeabbc_TypeDecl> _field_c;
	jule::Slice<jule::Ptr<_1b4c7c90e_TypeKind>> _field_ignored;
	


};
struct _1b4c36852_fnCallArgChecker {
	jule::Ptr<_1b4c483d0_Eval> _field_e;
	jule::Slice<jule::Ptr<_1b4b00001_Expr>> _field_args;
	jule::Ptr<_1b4ad5712_Token> _field_errorToken;
	jule::Ptr<_1b4b39865_FnIns> _field_f;
	jule::Bool _field_dynamicAnnotation = false;
	jule::Slice<jule::Any> _field_argModels;
	jule::Slice<jule::Ptr<_1b4c7c90e_TypeKind>> _field_ignored;
	


};
struct _1b4c39789_structLitChecker {
	jule::Ptr<_1b4c483d0_Eval> _field_e;
	jule::Ptr<_1b4ad5712_Token> _field_errorToken;
	jule::Ptr<_1b4b24641_StructIns> _field_s;
	jule::Slice<jule::Ptr<_1b4b29448_StructArgExprModel>> _field_args;
	


};
struct _1b4c3b56b_rangeChecker {
	jule::Ptr<_1b4b80cb8_scopeChecker> _field_sc;
	jule::Ptr<_1b4b15720_RangeKind> _field_rang;
	jule::Ptr<_1b4b7a642_RangeIter> _field_Kind;
	jule::Ptr<_1b4c466a8_Data> _field_d;
	

	inline bool operator==(_1b4c3b56b_rangeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_rang == _other._field_rang &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_d == _other._field_d;
	}

	inline bool operator!=(_1b4c3b56b_rangeChecker _other) { return !this->operator==(_other); }


};
struct _1b4c3dccc_retTypeChecker {
	jule::Ptr<_1b4b80cb8_scopeChecker> _field_sc;
	jule::Ptr<_1b4b39865_FnIns> _field_f;
	jule::Slice<jule::Ptr<_1b4c7c90e_TypeKind>> _field_types;
	jule::Slice<jule::Ptr<_1b4b00001_Expr>> _field_exprs;
	jule::Ptr<_1b4ad5712_Token> _field_errorToken;
	jule::Any _field_model = jule::Any(nullptr);
	


};
struct _1b4c41340_SymbolTable {
	jule::Ptr<_1b4adae98_File> _field_File;
	jule::Slice<_1b4b3e051_Pass> _field_Passes;
	jule::Slice<jule::Ptr<_1b4b9a893_ImportInfo>> _field_Imports;
	jule::Slice<jule::Ptr<_1b4bddaa1_Var>> _field_Vars;
	jule::Slice<jule::Ptr<_1b4c7bb1c_TypeAlias>> _field_TypeAliases;
	jule::Slice<jule::Ptr<_1b4b218b3_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1b4b36884_Fn>> _field_Funcs;
	jule::Slice<jule::Ptr<_1b4b49c3d_Trait>> _field_Traits;
	jule::Slice<jule::Ptr<_1b4b4c449_Enum>> _field_Enums;
	jule::Slice<jule::Ptr<_1b4b4db54_TypeEnum>> _field_TypeEnums;
	jule::Slice<jule::Ptr<_1b4b733a4_Impl>> _field_Impls;
	


};
struct _1b4c466a8_Data {
	jule::Bool _field_untyped = false;
	jule::Ptr<_1b4c7c90e_TypeKind> _field_Kind;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Bool _field_Lvalue = false;
	jule::Bool _field_IsRune = false;
	jule::Any _field_Model = jule::Any(nullptr);
	jule::Bool _field_Decl = false;
	jule::Ptr<_1b2753508_Const> _field_Constant;
	

	inline bool operator==(_1b4c466a8_Data _other) {
		return 
			this->_field_untyped == _other._field_untyped &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Lvalue == _other._field_Lvalue &&
			this->_field_IsRune == _other._field_IsRune &&
			this->_field_Model == _other._field_Model &&
			this->_field_Decl == _other._field_Decl &&
			this->_field_Constant == _other._field_Constant;
	}

	inline bool operator!=(_1b4c466a8_Data _other) { return !this->operator==(_other); }


};
struct _1b4c47830_Value {
	jule::Ptr<_1b4b00001_Expr> _field_Expr;
	jule::Ptr<_1b4c466a8_Data> _field_Data;
	

	inline bool operator==(_1b4c47830_Value _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1b4c47830_Value _other) { return !this->operator==(_other); }


};
struct _1b4c483d0_Eval {
	jule::Ptr<_1b4bbac37_Sema> _field_s;
	jule::Trait _field_lookup;
	jule::Ptr<_1b4c7c90e_TypeKind> _field_prefix;
	jule::Bool _field_unsafety = false;
	jule::Bool _field_immutable = false;
	jule::Bool _field_ignored = false;
	jule::Bool _field_disBuiltin = false;
	jule::Ptr<_1b4bddaa1_Var> _field_owner;
	jule::Ptr<_1b4b23a91_FieldIns> _field_field;
	jule::Bool _field_arg = false;
	

	inline bool operator==(_1b4c483d0_Eval _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_prefix == _other._field_prefix &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_immutable == _other._field_immutable &&
			this->_field_ignored == _other._field_ignored &&
			this->_field_disBuiltin == _other._field_disBuiltin &&
			this->_field_owner == _other._field_owner &&
			this->_field_field == _other._field_field &&
			this->_field_arg == _other._field_arg;
	}

	inline bool operator!=(_1b4c483d0_Eval _other) { return !this->operator==(_other); }


};
struct _1b4c6b964_unaryEval {
	jule::Ptr<_1b4c483d0_Eval> _field_e;
	jule::Ptr<_1b4c466a8_Data> _field_d;
	jule::Ptr<_1b4b020ad_UnaryExpr> _field_u;
	

	inline bool operator==(_1b4c6b964_unaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_d == _other._field_d &&
			this->_field_u == _other._field_u;
	}

	inline bool operator!=(_1b4c6b964_unaryEval _other) { return !this->operator==(_other); }


};
struct _1b4c6d900_binaryEval {
	jule::Ptr<_1b4c483d0_Eval> _field_e;
	jule::Ptr<_1b4c466a8_Data> _field_l;
	jule::Ptr<_1b4c466a8_Data> _field_r;
	jule::Ptr<_1b4ad5712_Token> _field_op;
	

	inline bool operator==(_1b4c6d900_binaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1b4c6d900_binaryEval _other) { return !this->operator==(_other); }


};
struct _1b4c7b028_InsGeneric {
	jule::Ptr<_1b4c7c90e_TypeKind> _field_Kind;
	jule::Slice<jule::Ptr<_1b4c7c90e_TypeKind>> _field_Constraint;
	


};
struct _1b4c7bb1c_TypeAlias {
	jule::Ptr<_1b4b10a4a_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Generic = false;
	jule::Ptr<_1b4ad5712_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1b4c84ad1_TypeSymbol> _field_Kind;
	jule::Slice<jule::Any> _field_Refers;
	jule::Slice<jule::Ptr<_1b4c7bb1c_TypeAlias>> _field_Generics;
	


};
struct _1b4c7c90e_TypeKind {
	jule::Str _field_BindIdent;
	jule::Bool _field_Generic = false;
	jule::Bool _field_Variadic = false;
	jule::Trait _field_Kind;
	

	inline bool operator==(_1b4c7c90e_TypeKind _other) {
		return 
			this->_field_BindIdent == _other._field_BindIdent &&
			this->_field_Generic == _other._field_Generic &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1b4c7c90e_TypeKind _other) { return !this->operator==(_other); }


};
struct _1b4c84ad1_TypeSymbol {
	jule::Ptr<_1b4aeabbc_TypeDecl> _field_Decl;
	jule::Ptr<_1b4c7c90e_TypeKind> _field_Kind;
	

	inline bool operator==(_1b4c84ad1_TypeSymbol _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1b4c84ad1_TypeSymbol _other) { return !this->operator==(_other); }


};
struct _1b4c854d8_Prim {
	jule::Str _field_Kind;
	

	inline bool operator==(_1b4c854d8_Prim _other) {
		return 
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1b4c854d8_Prim _other) { return !this->operator==(_other); }


};
struct _1b4c89014_Sptr {
	jule::Ptr<_1b4c7c90e_TypeKind> _field_Elem;
	

	inline bool operator==(_1b4c89014_Sptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1b4c89014_Sptr _other) { return !this->operator==(_other); }


};
struct _1b4c899d7_Slc {
	jule::Ptr<_1b4c7c90e_TypeKind> _field_Elem;
	

	inline bool operator==(_1b4c899d7_Slc _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1b4c899d7_Slc _other) { return !this->operator==(_other); }


};
struct _1b4c8a5cb_Tuple {
	jule::Slice<jule::Ptr<_1b4c7c90e_TypeKind>> _field_Types;
	


};
struct _1b4c8b17b_Map {
	jule::Ptr<_1b4c7c90e_TypeKind> _field_Key;
	jule::Ptr<_1b4c7c90e_TypeKind> _field_Val;
	

	inline bool operator==(_1b4c8b17b_Map _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1b4c8b17b_Map _other) { return !this->operator==(_other); }


};
struct _1b4c8bd08_Arr {
	jule::Bool _field_Auto = false;
	jule::I64 _field_N = 0;
	jule::Ptr<_1b4c7c90e_TypeKind> _field_Elem;
	

	inline bool operator==(_1b4c8bd08_Arr _other) {
		return 
			this->_field_Auto == _other._field_Auto &&
			this->_field_N == _other._field_N &&
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1b4c8bd08_Arr _other) { return !this->operator==(_other); }


};
struct _1b4c8c7cb_Ptr {
	jule::Ptr<_1b4c7c90e_TypeKind> _field_Elem;
	

	inline bool operator==(_1b4c8c7cb_Ptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1b4c8c7cb_Ptr _other) { return !this->operator==(_other); }


};
struct _1b4c8d7cc_referencer {
	jule::Str _field_ident;
	jule::Any _field_owner;
	jule::Slice<jule::Any>* _field_refs = nullptr;
	

	inline bool operator==(_1b4c8d7cc_referencer _other) {
		return 
			this->_field_ident == _other._field_ident &&
			this->_field_owner == _other._field_owner &&
			this->_field_refs == _other._field_refs;
	}

	inline bool operator!=(_1b4c8d7cc_referencer _other) { return !this->operator==(_other); }


};
struct _1b4c8e7bc_typeChecker {
	jule::Ptr<_1b4bbac37_Sema> _field_s;
	jule::Trait _field_rootLookup;
	jule::Trait _field_lookup;
	jule::Ptr<_1b4c8d7cc_referencer> _field_referencer;
	jule::Ptr<_1b4b3ca44_ReferenceStack> _field_refers;
	jule::Ptr<_1b4ad5712_Token> _field_errorToken;
	jule::Slice<jule::Ptr<_1b4b07dc7_GenericDecl>> _field_ignoreGenerics;
	jule::Slice<jule::Ptr<_1b4c7c90e_TypeKind>>* _field_ignoredGenerics = nullptr;
	jule::Slice<jule::Ptr<_1b4c7bb1c_TypeAlias>> _field_useGenerics;
	jule::Bool _field_cycleRisk = true;
	jule::Bool _field_disBuiltin = false;
	jule::Bool _field_selection = false;
	jule::Ptr<_1b4c7bb1c_TypeAlias> _field_ownerAlias;
	jule::Slice<jule::Ptr<_1b4c7bb1c_TypeAlias>> _field_bannedGenerics;
	jule::Bool _field_inscatch = false;
	


};
struct _1b4c97473_identTypeLookup {
	

	inline bool operator==(_1b4c97473_identTypeLookup _other) { return true; }

	inline bool operator!=(_1b4c97473_identTypeLookup _other) { return !this->operator==(_other); }


};
struct _1b5725bd1_FileInfo {
	jule::Ptr<_1b4ae8ca8_Ast> _field_Ast;
	jule::Slice<_1cb285120_Log> _field_Errors;
	


};
struct _1b576e06a_stmt {
	jule::Slice<jule::Ptr<_1b4ad5712_Token>> _field_tokens;
	jule::Bool _field_terminated = false;
	


};
struct _1b576e90b_scopeParser {
	jule::Ptr<_1b578ce8a_parser> _field_p;
	jule::Ptr<_1b4b10a4a_ScopeTree> _field_s;
	jule::Slice<jule::Ptr<_1b576e06a_stmt>> _field_stmts;
	jule::I64 _field_pos = 0;
	


};
struct _1b577c331_exprBuilder {
	jule::Ptr<_1b578ce8a_parser> _field_p;
	

	inline bool operator==(_1b577c331_exprBuilder _other) {
		return 
			this->_field_p == _other._field_p;
	}

	inline bool operator!=(_1b577c331_exprBuilder _other) { return !this->operator==(_other); }


};
struct _1b5789a8b_assignInfo {
	jule::Slice<jule::Ptr<_1b4ad5712_Token>> _field_l;
	jule::Slice<jule::Ptr<_1b4ad5712_Token>> _field_r;
	jule::Ptr<_1b4ad5712_Token> _field_setter;
	jule::Bool _field_ok = false;
	


};
struct _1b578ce8a_parser {
	jule::Ptr<_1b4ae8ca8_Ast> _field_ast;
	jule::Slice<jule::Ptr<_1b4aea0d9_Directive>> _field_directives;
	jule::Slice<_1cb285120_Log> _field_errors;
	jule::Ptr<_1b577c331_exprBuilder> _field_ep;
	


};
struct _1b57a00ac_typeBuilder {
	jule::Ptr<_1b578ce8a_parser> _field_p;
	jule::Slice<jule::Ptr<_1b4ad5712_Token>> _field_tokens;
	jule::I64* _field_i = nullptr;
	jule::Bool _field_err = false;
	


};
struct _1b4eb1abb_CompileInfo {
	jule::Bool _field_Prod = false;
	jule::Bool _field_Test = false;
	jule::Str _field_Compiler = jule::Str::lit("clang", 5);
	jule::Str _field_CppStd = jule::Str::lit("cpp14", 5);
	

	inline bool operator==(_1b4eb1abb_CompileInfo _other) {
		return 
			this->_field_Prod == _other._field_Prod &&
			this->_field_Test == _other._field_Test &&
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CppStd == _other._field_CppStd;
	}

	inline bool operator!=(_1b4eb1abb_CompileInfo _other) { return !this->operator==(_other); }


};
struct _1b4eb3095_directiveEval {
	jule::Slice<_1cb285120_Log> _field_logs;
	jule::Ptr<_1b4aea0d9_Directive> _field_d;
	jule::Slice<jule::Str> _field_vars;
	


};
struct _1b57a40a0_JuleImporter {
	jule::Slice<jule::Str> _field_mods;
	jule::Str _field_mod;
	jule::Slice<jule::Ptr<_1b4b9a893_ImportInfo>> _field_pkgs;
	jule::Slice<jule::Str> _field_vars;
	


};
struct _1b57b4445_OrderedDefines {
	jule::Slice<jule::Ptr<_1b4b218b3_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1b4bddaa1_Var>> _field_Globals;
	


};
struct _1b5906a0a_liveTable {
	jule::Slice<jule::Ptr<_1b4bddaa1_Var>> _field_vars;
	jule::Slice<jule::Ptr<_1b4b39865_FnIns>> _field_fns;
	jule::Slice<jule::Ptr<_1b4b24641_StructIns>> _field_structs;
	jule::Slice<jule::Ptr<_1b4b49c3d_Trait>> _field_traits;
	


};
struct _1b593a720_scopeDeadCode {
	jule::Ptr<_1b593a720_scopeDeadCode> _field_parent;
	jule::Ptr<_1b4b7880a_Scope> _field_s;
	jule::Slice<jule::Any>* _field_stmts = nullptr;
	jule::I64 _field_i = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_1b4b7b19d_Label>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1b4b7b577_GotoSt>>> _field_gotos;
	jule::Bool _field_except = false;
	

	inline bool operator==(_1b593a720_scopeDeadCode _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_i == _other._field_i &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_except == _other._field_except;
	}

	inline bool operator!=(_1b593a720_scopeDeadCode _other) { return !this->operator==(_other); }


};
struct _1b593e9aa_exprDeadCode {
	jule::Ptr<_1b593a720_scopeDeadCode> _field_s;
	

	inline bool operator==(_1b593e9aa_exprDeadCode _other) {
		return 
			this->_field_s == _other._field_s;
	}

	inline bool operator!=(_1b593e9aa_exprDeadCode _other) { return !this->operator==(_other); }


};
struct _1b4d710da_ExceptionalForwardingExprModel {
	jule::Ptr<_1b4b2aa21_FnCallExprModel> _field_Expr;
	

	inline bool operator==(_1b4d710da_ExceptionalForwardingExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b4d710da_ExceptionalForwardingExprModel _other) { return !this->operator==(_other); }


};
struct _1b4d71470_SwapExprModel {
	jule::Ptr<_1b4c466a8_Data> _field_Left;
	jule::Ptr<_1b4c466a8_Data> _field_Right;
	

	inline bool operator==(_1b4d71470_SwapExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1b4d71470_SwapExprModel _other) { return !this->operator==(_other); }


};
struct _1b4d71849_EmptyCompareExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Neg = false;
	

	inline bool operator==(_1b4d71849_EmptyCompareExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Neg == _other._field_Neg;
	}

	inline bool operator!=(_1b4d71849_EmptyCompareExprModel _other) { return !this->operator==(_other); }


};
struct _1b4d71bbd_RefExprModel {
	jule::Ptr<_1b4bddaa1_Var> _field_Var;
	

	inline bool operator==(_1b4d71bbd_RefExprModel _other) {
		return 
			this->_field_Var == _other._field_Var;
	}

	inline bool operator!=(_1b4d71bbd_RefExprModel _other) { return !this->operator==(_other); }


};
struct _1b4d72141_StrCompExprModel {
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Ptr<_1b2753508_Const> _field_Right;
	jule::Bool _field_NotEq = false;
	

	inline bool operator==(_1b4d72141_StrCompExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_NotEq == _other._field_NotEq;
	}

	inline bool operator!=(_1b4d72141_StrCompExprModel _other) { return !this->operator==(_other); }


};
struct _1b4d726c4_MutSlicingExprModel {
	jule::Ptr<_1b4ad5712_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

	inline bool operator==(_1b4d726c4_MutSlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1b4d726c4_MutSlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1b4d729c1_UnsafeBinaryExprModel {
	jule::Ptr<_1b4b28a41_BinaryExprModel> _field_Node;
	

	inline bool operator==(_1b4d729c1_UnsafeBinaryExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_1b4d729c1_UnsafeBinaryExprModel _other) { return !this->operator==(_other); }


};
struct _1b4d72d56_UnsafeIndexingExprModel {
	jule::Ptr<_1b4b2b3a1_IndexingExprModel> _field_Node;
	

	inline bool operator==(_1b4d72d56_UnsafeIndexingExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_1b4d72d56_UnsafeIndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1b4d73230_PushToSliceExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Ptr<_1b4b2adea_SliceExprModel> _field_Elems;
	

	inline bool operator==(_1b4d73230_PushToSliceExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elems == _other._field_Elems;
	}

	inline bool operator!=(_1b4d73230_PushToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _1b4d73609_AppendToSliceExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Slice = jule::Any(nullptr);
	

	inline bool operator==(_1b4d73609_AppendToSliceExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Slice == _other._field_Slice;
	}

	inline bool operator!=(_1b4d73609_AppendToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _1b4d739d3_StrRuneIter {
	jule::Ptr<_1b4c466a8_Data> _field_Expr;
	jule::Ptr<_1b4b7a642_RangeIter> _field_Base;
	

	inline bool operator==(_1b4d739d3_StrRuneIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Base == _other._field_Base;
	}

	inline bool operator!=(_1b4d739d3_StrRuneIter _other) { return !this->operator==(_other); }


};
struct _1b4d73cd0_UnsafeDerefExprModel {
	jule::Ptr<_1b4b28e1a_UnaryExprModel> _field_Base;
	

	inline bool operator==(_1b4d73cd0_UnsafeDerefExprModel _other) {
		return 
			this->_field_Base == _other._field_Base;
	}

	inline bool operator!=(_1b4d73cd0_UnsafeDerefExprModel _other) { return !this->operator==(_other); }


};
struct _1b4d740cc_UnsafeCastingExprModel {
	jule::Ptr<_1b4b2a16e_CastingExprModel> _field_Base;
	

	inline bool operator==(_1b4d740cc_UnsafeCastingExprModel _other) {
		return 
			this->_field_Base == _other._field_Base;
	}

	inline bool operator!=(_1b4d740cc_UnsafeCastingExprModel _other) { return !this->operator==(_other); }


};
struct _1b4d74cae_nilVar {
	jule::Uintptr _field_var = 0;
	jule::Bool _field_safe = false;
	

	inline bool operator==(_1b4d74cae_nilVar _other) {
		return 
			this->_field_var == _other._field_var &&
			this->_field_safe == _other._field_safe;
	}

	inline bool operator!=(_1b4d74cae_nilVar _other) { return !this->operator==(_other); }


};
struct _1b4d75100_nils {
	jule::Slice<_1b4d74cae_nilVar> _field_vars;
	


};
struct _1b57b5aa6_scopeOptimizer {
	jule::Ptr<_1b57b5aa6_scopeOptimizer> _field_parent;
	jule::I64 _field_i = 0;
	jule::Ptr<_1b4b7880a_Scope> _field_scope;
	jule::Ptr<_1b57c9c74_data> _field_data;
	

	inline bool operator==(_1b57b5aa6_scopeOptimizer _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_i == _other._field_i &&
			this->_field_scope == _other._field_scope &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1b57b5aa6_scopeOptimizer _other) { return !this->operator==(_other); }


};
struct _1b57bc22d_exprOptimizer {
	jule::Ptr<jule::Any> _field_model;
	jule::Ptr<_1b57c9c74_data> _field_data;
	

	inline bool operator==(_1b57bc22d_exprOptimizer _other) {
		return 
			this->_field_model == _other._field_model &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1b57bc22d_exprOptimizer _other) { return !this->operator==(_other); }


};
struct _1b57c6ca4_dynamicVar {
	jule::Uintptr _field_var = 0;
	jule::Ptr<_1b4c7c90e_TypeKind> _field_kind;
	

	inline bool operator==(_1b57c6ca4_dynamicVar _other) {
		return 
			this->_field_var == _other._field_var &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1b57c6ca4_dynamicVar _other) { return !this->operator==(_other); }


};
struct _1b57c70e5_dynamic {
	jule::Slice<_1b57c6ca4_dynamicVar> _field_vars;
	


};
struct _1b57c9c74_data {
	jule::Ptr<_1b57cb66b_boundary> _field_boundary;
	jule::Ptr<_1b4d75100_nils> _field_nils;
	jule::Ptr<_1b57c70e5_dynamic> _field_dynamic;
	

	inline bool operator==(_1b57c9c74_data _other) {
		return 
			this->_field_boundary == _other._field_boundary &&
			this->_field_nils == _other._field_nils &&
			this->_field_dynamic == _other._field_dynamic;
	}

	inline bool operator!=(_1b57c9c74_data _other) { return !this->operator==(_other); }


};
struct _1b57cb32a_boundaryVar {
	jule::Uintptr _field_var = 0;
	jule::Slice<jule::Any> _field_maxSize;
	


};
struct _1b57cb66b_boundary {
	jule::Slice<_1b57cb32a_boundaryVar> _field_vars;
	


};
struct _1b5946a06_Optimizer {
	jule::Ptr<_1b57a68aa_IR> _field_ir;
	

	inline bool operator==(_1b5946a06_Optimizer _other) {
		return 
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_1b5946a06_Optimizer _other) { return !this->operator==(_other); }


};
struct _1b596e710_AnsiEscape {
	

	inline bool operator==(_1b596e710_AnsiEscape _other) { return true; }

	inline bool operator!=(_1b596e710_AnsiEscape _other) { return !this->operator==(_other); }


};
struct _1b5970c83_Logger {
	

	inline bool operator==(_1b5970c83_Logger _other) { return true; }

	inline bool operator!=(_1b5970c83_Logger _other) { return !this->operator==(_other); }


};
struct _1a901add9_AbsTime {
	jule::U64 _field_Day = 0;
	jule::U64 _field_WeekDay = 0;
	jule::U64 _field_YearDay = 0;
	jule::U64 _field_Month = 0;
	jule::U64 _field_Year = 0;
	jule::U64 _field_Second = 0;
	jule::U64 _field_Minute = 0;
	jule::U64 _field_Hour = 0;
	

	inline bool operator==(_1a901add9_AbsTime _other) {
		return 
			this->_field_Day == _other._field_Day &&
			this->_field_WeekDay == _other._field_WeekDay &&
			this->_field_YearDay == _other._field_YearDay &&
			this->_field_Month == _other._field_Month &&
			this->_field_Year == _other._field_Year &&
			this->_field_Second == _other._field_Second &&
			this->_field_Minute == _other._field_Minute &&
			this->_field_Hour == _other._field_Hour;
	}

	inline bool operator!=(_1a901add9_AbsTime _other) { return !this->operator==(_other); }


};
struct _1a901b5b0_Time {
	jule::U64 _field_sec = 0;
	

	inline bool operator==(_1a901b5b0_Time _other) {
		return 
			this->_field_sec == _other._field_sec;
	}

	inline bool operator!=(_1a901b5b0_Time _other) { return !this->operator==(_other); }


};
struct _1b644d496_scopeCoder {
	jule::Ptr<_1a9026b3c_ObjectCoder> _field_oc;
	

	inline bool operator==(_1b644d496_scopeCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1b644d496_scopeCoder _other) { return !this->operator==(_other); }


};
struct _1b6458acd_exprCoder {
	jule::Ptr<_1a9026b3c_ObjectCoder> _field_oc;
	jule::Slice<jule::Fn<jule::Bool,jule::Ptr<_1b4bddaa1_Var>>> _field_varPrefixes;
	


};
struct _1b64693d5_TestCoder {
	jule::Ptr<_1b4b24641_StructIns> _field_t;
	jule::Ptr<_1b4b36884_Fn> _field_tmReset;
	jule::Ptr<_1b4b36884_Fn> _field_tmFailed;
	jule::Ptr<_1b4b36884_Fn> _field_tmSkipped;
	jule::Ptr<_1a9026b3c_ObjectCoder> _field_oc;
	

	inline bool operator==(_1b64693d5_TestCoder _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_tmReset == _other._field_tmReset &&
			this->_field_tmFailed == _other._field_tmFailed &&
			this->_field_tmSkipped == _other._field_tmSkipped &&
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1b64693d5_TestCoder _other) { return !this->operator==(_other); }


};
struct _1b646c361_identCoder {
	

	inline bool operator==(_1b646c361_identCoder _other) { return true; }

	inline bool operator!=(_1b646c361_identCoder _other) { return !this->operator==(_other); }


};
struct _1a9024d8d_SerializationInfo {
	jule::Str _field_Compiler;
	jule::Str _field_CompilerCommand;
	

	inline bool operator==(_1a9024d8d_SerializationInfo _other) {
		return 
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CompilerCommand == _other._field_CompilerCommand;
	}

	inline bool operator!=(_1a9024d8d_SerializationInfo _other) { return !this->operator==(_other); }


};
struct _1a90252ab_traitCast {
	jule::Ptr<_1b4b49c3d_Trait> _field_t1;
	jule::Ptr<_1b4b49c3d_Trait> _field_t2;
	

	inline bool operator==(_1a90252ab_traitCast _other) {
		return 
			this->_field_t1 == _other._field_t1 &&
			this->_field_t2 == _other._field_t2;
	}

	inline bool operator!=(_1a90252ab_traitCast _other) { return !this->operator==(_other); }


};
struct _1a9025685_anonHash {
	jule::Ptr<_1b4b2b857_AnonFnExprModel> _field_expr;
	jule::Str _field_ident;
	

	inline bool operator==(_1a9025685_anonHash _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1a9025685_anonHash _other) { return !this->operator==(_other); }


};
struct _1a9035cc2_customType {
	jule::Str _field_kind;
	

	inline bool operator==(_1a9035cc2_customType _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1a9035cc2_customType _other) { return !this->operator==(_other); }


};
struct _1a903690a_typeCoder {
	jule::Ptr<_1a9026b3c_ObjectCoder> _field_oc;
	jule::Ptr<_1a903e4e5_resultCoder> _field_rc;
	

	inline bool operator==(_1a903690a_typeCoder _other) {
		return 
			this->_field_oc == _other._field_oc &&
			this->_field_rc == _other._field_rc;
	}

	inline bool operator!=(_1a903690a_typeCoder _other) { return !this->operator==(_other); }


};
struct _1a903e4e5_resultCoder {
	jule::Ptr<_1a903690a_typeCoder> _field_tc;
	

	inline bool operator==(_1a903e4e5_resultCoder _other) {
		return 
			this->_field_tc == _other._field_tc;
	}

	inline bool operator!=(_1a903e4e5_resultCoder _other) { return !this->operator==(_other); }


};
struct _1ac9ee589_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::I64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::I64> _field_data;
	

	inline bool operator==(_1ac9ee589_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1ac9ee589_Flag _other) { return !this->operator==(_other); }


};struct _1aca0313c_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::U64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::U64> _field_data;
	

	inline bool operator==(_1aca0313c_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1aca0313c_Flag _other) { return !this->operator==(_other); }


};struct _1aca067a0_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::F64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::F64> _field_data;
	

	inline bool operator==(_1aca067a0_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1aca067a0_Flag _other) { return !this->operator==(_other); }


};struct _1aca09e57_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Bool _field_default = false;
	jule::Str _field_what;
	jule::Ptr<jule::Bool> _field_data;
	

	inline bool operator==(_1aca09e57_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1aca09e57_Flag _other) { return !this->operator==(_other); }


};struct _1aca0d5ba_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Str _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::Str> _field_data;
	

	inline bool operator==(_1aca0d5ba_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1aca0d5ba_Flag _other) { return !this->operator==(_other); }


};
struct _1a90a9e45_FlagSet {
	jule::Slice<jule::Trait> _field_flags;
	


};
struct _1a90ac909_argParser {
	_1a90a9e45_FlagSet _field_set;
	jule::Slice<jule::Str> _field_args;
	jule::Slice<jule::Str> _field_content;
	jule::I64 _field_i = 0;
	


};
struct _1a9026b3c_ObjectCoder {
	_1cb1d27a9_StrBuilder _field_Buf;
	_1cb1d27a9_StrBuilder _field_resultDecls;
	_1cb1d27a9_StrBuilder _field_anyObj;
	_1cb1d27a9_StrBuilder _field_anonObj;
	_1cb1d27a9_StrBuilder _field_deallocObj;
	jule::Ptr<_1b57a68aa_IR> _field_ir;
	_1a9024d8d_SerializationInfo _field_info;
	jule::Slice<jule::Ptr<_1a9025685_anonHash>> _field_anons;
	jule::Slice<jule::Ptr<_1b4c7c90e_TypeKind>> _field_deallocated;
	jule::Slice<jule::U8> _field_indentBuffer;
	jule::Map<jule::Str,jule::Bool> _field_resultMap;
	jule::Slice<jule::Ptr<_1b4c7c90e_TypeKind>> _field_anyTypeMap;
	jule::Slice<_1a90252ab_traitCast> _field_traitCastMap;
	jule::Map<jule::Ptr<_1b4b39865_FnIns>,jule::Slice<jule::Uintptr>> _field_traitMetMap;
	jule::Ptr<_1b6458acd_exprCoder> _field_ec;
	jule::Ptr<_1b644d496_scopeCoder> _field_sc;
	jule::Ptr<_1a903690a_typeCoder> _field_tc;
	jule::I64 _field_headPos = 0;
	jule::I64 _field_declPos = 0;
	jule::I64 _field_wrapPos = 0;
	


};
struct _1b57c9779_dataCheckpoint {
	_1b57cb66b_boundary _field_boundary;
	_1b4d75100_nils _field_nils;
	_1b57c70e5_dynamic _field_dynamic;
	


};
struct _1b5906e28_ObjectDeadCode {
	_1b5906a0a_liveTable _field_live;
	jule::Ptr<_1b57a68aa_IR> _field_ir;
	


};
struct _1b57a68aa_IR {
	jule::Str _field_Root;
	jule::Slice<jule::Str> _field_Passes;
	jule::Ptr<_1b4b9d7b9_Package> _field_Main;
	jule::Slice<jule::Ptr<_1b4b9a893_ImportInfo>> _field_Used;
	_1b57b4445_OrderedDefines _field_Ordered;
	


};
struct _1b4b24641_StructIns {
	jule::Bool _field_Checked = false;
	jule::Ptr<_1b4b218b3_Struct> _field_Decl;
	jule::Slice<jule::Ptr<_1b4c7b028_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1b4b23a91_FieldIns>> _field_Fields;
	jule::Slice<jule::Ptr<_1b4bddaa1_Var>> _field_Statics;
	jule::Slice<jule::Ptr<_1b4b36884_Fn>> _field_Methods;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Comparable = false;
	jule::Ptr<_1b4b3ca44_ReferenceStack> _field_Refers;
	_1b4b209a0_Operators _field_Operators;
	


};
struct _1cb34715a_Cmd {
	_1cb39ae8e_cmdAttrs _field_attrs;
	jule::Str _field_path;
	jule::Slice<jule::Str> _field_Args;
	jule::Slice<jule::Str> _field_Env;
	


};
struct __jule_tuple_u64__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1b4c466a8_Data__jule_tuple_x_1b4c466a8_Data {
	jule::Ptr<_1b4c466a8_Data> __jule_result_arg0;
	jule::Ptr<_1b4c466a8_Data> __jule_result_arg1;
};
struct __jule_tuple_x_1b4c466a8_Data__jule_tuple_bool {
	jule::Ptr<_1b4c466a8_Data> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1b4b00001_Expr__jule_tuple_bool {
	jule::Slice<jule::Ptr<_1b4b00001_Expr>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1b4b179ec_Case__jule_tuple_bool {
	jule::Ptr<_1b4b179ec_Case> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1b4b179ec_Case__jule_tuple_x_1b4b16853_Else {
	jule::Slice<jule::Ptr<_1b4b179ec_Case>> __jule_result_arg0;
	jule::Ptr<_1b4b16853_Else> __jule_result_arg1;
};
struct __jule_tuple__1b4b101ba_StmtData__jule_tuple_bool {
	jule::Any __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1b4b0966a_AssignSt__jule_tuple_bool {
	jule::Ptr<_1b4b0966a_AssignSt> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1b4aeabbc_TypeDecl__jule_tuple_bool {
	jule::Ptr<_1b4aeabbc_TypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1b4aedab0_RetTypeDecl__jule_tuple_bool {
	jule::Ptr<_1b4aedab0_RetTypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1b4ae8ca8_Ast__jule_tuple_s_1cb285120_Log {
	jule::Slice<jule::Ptr<_1b4ae8ca8_Ast>> __jule_result_arg0;
	jule::Slice<_1cb285120_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_s_1cb285120_Log {
	jule::Bool __jule_result_arg0;
	jule::Slice<_1cb285120_Log> __jule_result_arg1;
};
struct __jule_tuple_i64__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1b4b39865_FnIns__jule_tuple_bool {
	jule::Ptr<_1b4b39865_FnIns> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1b57a68aa_IR__jule_tuple_s_1cb285120_Log {
	jule::Ptr<_1b57a68aa_IR> __jule_result_arg0;
	jule::Slice<_1cb285120_Log> __jule_result_arg1;
};
struct __jule_tuple_i32__jule_tuple_int {
	jule::I32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_bool {
	jule::Str __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_int__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_u64 {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_f64 {
	jule::F64 __jule_result_arg0;
	jule::F64 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple__1b2176b1e_ConvError {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_bool {
	jule::F32 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
	jule::Bool __jule_result_arg3;
	jule::Bool __jule_result_arg4;
	jule::I64 __jule_result_arg5;
	jule::Bool __jule_result_arg6;
};
struct __jule_tuple_f64__jule_tuple__1b2176b1e_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_int__jule_tuple__1b2176b1e_ConvError {
	jule::F32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::I64 __jule_result_arg2;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple__1b2176b1e_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::I64 __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
	jule::U64 __jule_result_arg2;
	jule::I64 __jule_result_arg3;
};
struct __jule_tuple_u32__jule_tuple_int__jule_tuple_bool {
	jule::U32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u32__jule_tuple_u32 {
	jule::U32 __jule_result_arg0;
	jule::U32 __jule_result_arg1;
};
struct __jule_tuple_su8__jule_tuple_str {
	jule::Slice<jule::U8> __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
struct __jule_tuple_u8__jule_tuple_bool {
	jule::U8 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1b4c41340_SymbolTable__jule_tuple_s_1cb285120_Log {
	jule::Ptr<_1b4c41340_SymbolTable> __jule_result_arg0;
	jule::Slice<_1cb285120_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1b4b9d7b9_Package__jule_tuple_s_1cb285120_Log {
	jule::Ptr<_1b4b9d7b9_Package> __jule_result_arg0;
	jule::Slice<_1cb285120_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1b4ae8ca8_Ast__jule_tuple_s_1cb285120_Log {
	jule::Ptr<_1b4ae8ca8_Ast> __jule_result_arg0;
	jule::Slice<_1cb285120_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_bool {
	jule::Bool __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1b4ad5712_Token__jule_tuple_bool {
	jule::Slice<jule::Ptr<_1b4ad5712_Token>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1b4ad5712_Token__jule_tuple_sx_1b4ad5712_Token {
	jule::Slice<jule::Ptr<_1b4ad5712_Token>> __jule_result_arg0;
	jule::Slice<jule::Ptr<_1b4ad5712_Token>> __jule_result_arg1;
};
struct __jule_tuple_sx_1b4ad5712_Token__jule_tuple_int {
	jule::Slice<jule::Ptr<_1b4ad5712_Token>> __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_ssx_1b4ad5712_Token__jule_tuple_s_1cb285120_Log {
	jule::Slice<jule::Slice<jule::Ptr<_1b4ad5712_Token>>> __jule_result_arg0;
	jule::Slice<_1cb285120_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_u64 {
	jule::Bool __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_str {
	jule::Str __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
inline _1cb1d27a9_StrBuilder static__1cb1d2a73_New(jule::I64 _1519_cap);
inline void _1cb1db131_Write(_1cb1d27a9_StrBuilder* _self_, jule::Slice<jule::U8> _2524_b);
inline void _1cb1db3d9_WriteStr(_1cb1d27a9_StrBuilder* _self_, jule::Str _3027_s);
inline void _1cb1db692_WriteByte(_1cb1d27a9_StrBuilder* _self_, jule::U8 _3528_b);
inline jule::Str _1cb1dbbd1_Str(_1cb1d27a9_StrBuilder* _self_);
inline void _1cb1dbdce_Clear(_1cb1d27a9_StrBuilder* _self_);
inline jule::I64 _1cb1dc165_Len(_1cb1d27a9_StrBuilder* _self_);
inline jule::Slice<jule::U8> _1cb1dc682_Buf(_1cb1d27a9_StrBuilder* _self_);
inline void _1cb1dc93a_SetBuf(_1cb1d27a9_StrBuilder* _self_, jule::Slice<jule::U8> _7736_buf);
inline jule::U8 _1cb1ddc5a_index(_1cb1dd7c6_lazyBuff* _self_, jule::I64 _5524_i);
inline void _1cb1de013_append(_1cb1dd7c6_lazyBuff* _self_, jule::U8 _6225_c);
inline jule::Str _1cb1de299_string(_1cb1dd7c6_lazyBuff* _self_);
inline jule::Exceptional<jule::Slice<jule::Ptr<_20d927670_DirEntry>>> static__1cb1e3138_Read(jule::Str _1520_path);
inline jule::VoidExceptional static__1cb1e3369_Create(jule::Str _4022_path);
inline jule::VoidExceptional static__1cb1e359a_Remove(jule::Str _5322_path);
inline jule::Exceptional<jule::Ptr<_20d929540_File>> static__20d9266a2_Open(jule::Str _2020_path, jule::I64 _2031_flag, jule::I64 _2044_mode);
inline jule::VoidExceptional static__20d9268d3_Remove(jule::Str _3322_path);
inline jule::Exceptional<jule::I64> _20d926c57_Write(_20d929540_File* _self_, jule::Slice<jule::U8> _4824_buf);
inline jule::Exceptional<jule::I64> _20d927098_Read(_20d929540_File* _self_, jule::Slice<jule::U8> _6927_buf);
inline jule::Ptr<_20d929540_File> static__20d92995d_New(jule::Uintptr _4519_handle);
inline jule::Exceptional<jule::Ptr<_20d929540_File>> static__20d929c27_Create(jule::Str _5522_path);
inline jule::Exceptional<jule::Slice<jule::U8>> static__20d929ee1_Read(jule::Str _6720_path);
inline jule::VoidExceptional static__20d92a387_Write(jule::Str _10521_path, jule::Slice<jule::U8> _10532_data, jule::I64 _10546_perm);
inline jule::VoidExceptional _20d92aac4_Close(_20d929540_File* _self_);
inline jule::Exceptional<jule::Ptr<_20d92b630_Status>> static__20d9282b9_Of(jule::Str _1218_path);
inline jule::Bool _20d92ba09_IsDir(_20d92b630_Status* _self_);
inline jule::Bool _20d92bc90_IsReg(_20d92b630_Status* _self_);
inline jule::U64 _20d92c026_Size(_20d92b630_Status* _self_);
inline jule::Bool _1b2737740_set(_1b2740d0e_decimal* _self_, jule::Slice<jule::U8> _23822_s);
inline __jule_tuple_u64__jule_tuple_bool _1b2737a81_floatBits(_1b2740d0e_decimal* _self_, _1b272c427_floatInfo* _33229_flt);
inline void _1b27411b6_assign(_1b2740d0e_decimal* _self_, jule::U64 _15129_v);
inline void _1b274146e_shift(_1b2740d0e_decimal* _self_, jule::I64 _17628_k);
inline void _1b2741727_roundDown(_1b2740d0e_decimal* _self_, jule::I64 _19628_nd);
inline void _1b27419d0_roundUp(_1b2740d0e_decimal* _self_, jule::I64 _20526_nd);
inline void _1b2741c88_round(_1b2740d0e_decimal* _self_, jule::I64 _23224_nd);
inline jule::U64 _1b274201e_roundedInteger(_1b2740d0e_decimal* _self_);
inline jule::Ptr<_1b2753508_Const> static__1b2753948_NewI64(jule::I64 _1622_x);
inline jule::Ptr<_1b2753508_Const> static__1b2753c12_NewU64(jule::U64 _1922_x);
inline jule::Ptr<_1b2753508_Const> static__1b2753ecb_NewBool(jule::Bool _2223_x);
inline jule::Ptr<_1b2753508_Const> static__1b2754295_NewStr(jule::Str _2522_x);
inline jule::Ptr<_1b2753508_Const> static__1b275455e_NewF64(jule::F64 _2822_x);
inline jule::Ptr<_1b2753508_Const> static__1b275476d_NewNil(void);
inline jule::I64 _1b2754dcd_ReadI64(_1b2753508_Const* _self_);
inline jule::U64 _1b2755164_ReadU64(_1b2753508_Const* _self_);
inline jule::Bool _1b27553ea_ReadBool(_1b2753508_Const* _self_);
inline jule::Str _1b2755681_ReadStr(_1b2753508_Const* _self_);
inline jule::F64 _1b2755917_ReadF64(_1b2753508_Const* _self_);
inline jule::I64 _1b2755b9d_AsI64(_1b2753508_Const* _self_);
inline jule::U64 _1b2755e34_AsU64(_1b2753508_Const* _self_);
inline jule::F64 _1b27561ba_AsF64(_1b2753508_Const* _self_);
inline void _1b2756473_SetI64(_1b2753508_Const* _self_, jule::I64 _13825_x);
inline void _1b275672b_SetU64(_1b2753508_Const* _self_, jule::U64 _14125_x);
inline void _1b27569d4_SetBool(_1b2753508_Const* _self_, jule::Bool _14426_x);
inline void _1b2756c8c_SetStr(_1b2753508_Const* _self_, jule::Str _14725_x);
inline void _1b2757045_SetF64(_1b2753508_Const* _self_, jule::F64 _15025_x);
inline jule::Bool _1b27574c9_IsI64(_1b2753508_Const* _self_);
inline jule::Bool _1b2757760_IsU64(_1b2753508_Const* _self_);
inline jule::Bool _1b27579e6_IsBool(_1b2753508_Const* _self_);
inline jule::Bool _1b2757c7c_IsStr(_1b2753508_Const* _self_);
inline jule::Bool _1b2758013_IsF64(_1b2753508_Const* _self_);
inline jule::Bool _1b2758299_IsNil(_1b2753508_Const* _self_);
inline jule::Bool _1b275892b_And(_1b2753508_Const* _self_, _1b2753508_Const _23818_x);
inline jule::Bool _1b2758c6c_Or(_1b2753508_Const* _self_, _1b2753508_Const _24917_x);
inline jule::Bool _1b275a213_Add(_1b2753508_Const* _self_, _1b2753508_Const _37722_x);
inline jule::Bool _1b275a554_Sub(_1b2753508_Const* _self_, _1b2753508_Const _40622_x);
inline jule::Bool _1b275a895_Mul(_1b2753508_Const* _self_, _1b2753508_Const _43022_x);
inline jule::Bool _1b275abd6_Div(_1b2753508_Const* _self_, _1b2753508_Const _45822_x);
inline jule::Bool _1b275b027_Mod(_1b2753508_Const* _self_, _1b2753508_Const _48722_x);
inline jule::Bool _1b275b368_BitwiseAnd(_1b2753508_Const* _self_, _1b2753508_Const _50929_x);
inline jule::Bool _1b275b6a9_BitwiseOr(_1b2753508_Const* _self_, _1b2753508_Const _52328_x);
inline jule::Bool _1b275b9ea_Xor(_1b2753508_Const* _self_, _1b2753508_Const _53722_x);
inline jule::Bool _1b275bd3b_Lshift(_1b2753508_Const* _self_, _1b2753508_Const _55125_x);
inline jule::Bool _1b275c17c_Rshift(_1b2753508_Const* _self_, _1b2753508_Const _57125_x);
inline jule::U8 _1b4ad5a86_Prec(_1b4ad5712_Token* _self_);
inline void _1b4adb3b6_Fill(_1b4adae98_File* _self_, jule::Slice<jule::U8> _1727_data);
inline jule::Str _1b4adb64c_Dir(_1b4adae98_File* _self_);
inline jule::Str _1b4adb8d3_Name(_1b4adae98_File* _self_);
inline jule::Str _1b4adbeaa_GetRow(_1b4adae98_File* _self_, jule::I64 _3821_row);
inline void _1b4ae4666_pushErr(_1b4ae40d3_lex* _self_, jule::Str _44726_fmt, jule::Slice<jule::Any> _44739_args);
inline void _1b4ae4bc7_lex(_1b4ae40d3_lex* _self_);
inline jule::Str _1b4ae5018_id(_1b4ae40d3_lex* _self_, jule::Slice<jule::U8>* _47122_ln);
inline jule::Slice<jule::U8> _1b4ae529e_resume(_1b4ae40d3_lex* _self_);
inline void _1b4ae5557_lexLineComment(_1b4ae40d3_lex* _self_, jule::Ptr<_1b4ad5712_Token>* _52438_token);
inline void _1b4ae5810_lexRangeComment(_1b4ae40d3_lex* _self_, jule::Ptr<_1b4ad5712_Token>* _53939_token);
inline jule::Str _1b4ae5b51_num(_1b4ae40d3_lex* _self_, jule::Slice<jule::U8>* _56723_txt);
inline jule::Str _1b4ae5e92_escapeSeq(_1b4ae40d3_lex* _self_, jule::Slice<jule::U8>* _58929_txt);
inline jule::Str _1b4ae638d_getRune(_1b4ae40d3_lex* _self_, jule::Slice<jule::U8>* _61927_txt, jule::Bool _61940_raw);
inline jule::Str _1b4ae66ce_lexRune(_1b4ae40d3_lex* _self_, jule::Slice<jule::U8>* _62827_txt);
inline jule::Str _1b4ae6965_lexStr(_1b4ae40d3_lex* _self_);
inline void _1b4ae6de9_newLine(_1b4ae40d3_lex* _self_);
inline jule::Bool _1b4ae745a_isOp(_1b4ae40d3_lex* _self_, jule::Slice<jule::U8>* _71024_txt, jule::Str _71037_kind, jule::U64 _71048_id, jule::Ptr<_1b4ad5712_Token>* _71066_t);
inline jule::Bool _1b4ae7856_lexBasicOps(_1b4ae40d3_lex* _self_, jule::Slice<jule::U8> _72030_txt, jule::Ptr<_1b4ad5712_Token>* _72048_tok);
inline jule::Bool _1b4ae7c52_lexId(_1b4ae40d3_lex* _self_, jule::Slice<jule::U8>* _72925_txt, jule::Ptr<_1b4ad5712_Token>* _72943_t);
inline jule::Bool _1b4ae814d_lexNum(_1b4ae40d3_lex* _self_, jule::Slice<jule::U8>* _73926_txt, jule::Ptr<_1b4ad5712_Token>* _73944_t);
inline jule::Ptr<_1b4ad5712_Token> _1b4ae83d4_token(_1b4ae40d3_lex* _self_);
inline jule::Bool _1b4aeca59_IsUnsafe(_1b4aec6e6_PtrTypeDecl* _self_);
inline jule::Bool _1b4aed2eb_AutoSized(_1b4aece88_ArrTypeDecl* _self_);
inline jule::Bool _1b4b0409e_Unhandled(_1b4b03c2a_FnCallExpr* _self_);
inline jule::Bool _1b4b04335_Ignored(_1b4b03c2a_FnCallExpr* _self_);
inline jule::Bool _1b4b1160b_IsSelf(_1b4b11287_ParamDecl* _self_);
inline jule::Bool _1b4b12a4c_IsAnon(_1b4b126d9_FnDecl* _self_);
inline jule::Bool _1b4b14851_IsInf(_1b4b144dd_Iter* _self_);
inline jule::Bool _1b4b1517b_IsWhileNext(_1b4b14d18_WhileKind* _self_);
inline jule::Ptr<_1b4b23a91_FieldIns> _1b4b1dd44_instance(jule::Ptr<_1b4b1d98c_Field> _self_);
inline jule::Ptr<_1b4b24641_StructIns> _1b4b21d25_instance(jule::Ptr<_1b4b218b3_Struct> _self_);
inline jule::Ptr<_1b4b24641_StructIns> _1b4b22133_appendInstance(_1b4b218b3_Struct* _self_, jule::Ptr<_1b4b24641_StructIns>* _13438_ins);
inline jule::Ptr<_1b4b36884_Fn> _1b4b2252e_FindMethod(_1b4b218b3_Struct* _self_, jule::Str _15229_ident, jule::Bool _15241_statically);
inline jule::Ptr<_1b4bddaa1_Var> _1b4b22870_FindStatic(_1b4b218b3_Struct* _self_, jule::Str _16329_ident);
inline jule::Ptr<_1b4b1d98c_Field> _1b4b22bb1_FindField(_1b4b218b3_Struct* _self_, jule::Str _17428_ident);
inline jule::Bool _1b4b23002_IsImplements(_1b4b218b3_Struct* _self_, jule::Ptr<_1b4b49c3d_Trait> _18427_t);
inline jule::Bool _1b4b23343_IsUses(_1b4b218b3_Struct* _self_, jule::Ptr<_1b4b218b3_Struct> _19421_s);
inline jule::Ptr<_1b4b387dc_ParamIns> _1b4b35245_instance(jule::Ptr<_1b4b34db0_Param> _self_);
inline jule::Bool _1b4b354cb_IsSelf(_1b4b34db0_Param* _self_);
inline jule::Bool _1b4b35762_IsRef(_1b4b34db0_Param* _self_);
inline jule::Bool _1b4b36d07_IsVoid(_1b4b36884_Fn* _self_);
inline jule::Bool _1b4b3708d_IsMethod(_1b4b36884_Fn* _self_);
inline jule::Bool _1b4b37324_IsEntryPoint(_1b4b36884_Fn* _self_);
inline jule::Bool _1b4b375aa_IsInit(_1b4b36884_Fn* _self_);
inline jule::Bool _1b4b37841_IsAnon(_1b4b36884_Fn* _self_);
inline jule::Bool _1b4b37ac7_AnyVar(_1b4b36884_Fn* _self_);
inline jule::Ptr<_1b4b39865_FnIns> _1b4b37d5d_instanceForce(jule::Ptr<_1b4b36884_Fn> _self_);
inline jule::Ptr<_1b4b39865_FnIns> _1b4b380e4_instance(jule::Ptr<_1b4b36884_Fn> _self_);
inline jule::Ptr<_1b4b39865_FnIns> _1b4b38402_appendInstance(_1b4b36884_Fn* _self_, jule::Ptr<_1b4b39865_FnIns>* _12938_ins);
inline jule::Str _1b4b38b50_Str(_1b4b387dc_ParamIns* _self_);
inline jule::Str _1b4b39ba6_Str(_1b4b39865_FnIns* _self_);
inline jule::Bool _1b4b39ee7_Equal(jule::Ptr<_1b4b39865_FnIns> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _21921_other);
inline jule::Bool _1b4b3a48c_EqualFn(jule::Ptr<_1b4b39865_FnIns> _self_, jule::Ptr<_1b4b39865_FnIns>* _23024_f);
inline jule::Bool _1b4b3a7cd_equalTrait(jule::Ptr<_1b4b39865_FnIns> _self_, jule::Ptr<_1b4b39865_FnIns>* _28927_other);
inline jule::Slice<jule::Ptr<_1b4c7c90e_TypeKind>> _1b4b3aa64_Types(_1b4b39865_FnIns* _self_);
inline jule::Bool _1b4b3acea_IsBuiltin(_1b4b39865_FnIns* _self_);
inline jule::Bool _1b4b3b081_IsAnon(_1b4b39865_FnIns* _self_);
inline jule::Bool _1b4b3b3c2_Same(_1b4b39865_FnIns* _self_, jule::Ptr<_1b4b39865_FnIns> _33219_f);
inline jule::Str _1b4b3b713_GetKindStr(_1b4b39865_FnIns* _self_, jule::Bool _34925_ident);
inline jule::Ptr<_1b4b3ca44_ReferenceStack> static__1b4b3cd30_new(void);
inline jule::I64 _1b4b3d22b_Len(_1b4b3ca44_ReferenceStack* _self_);
inline jule::Any _1b4b3d56c_At(_1b4b3ca44_ReferenceStack* _self_, jule::I64 _6821_i);
inline void _1b4b3d825_Push(_1b4b3ca44_ReferenceStack* _self_, jule::Any _7327_ref);
inline jule::Bool _1ab5cde39_Exist(_1b4b3ca44_ReferenceStack* _self_, jule::Ptr<_1b4b39865_FnIns> _7823_t);
inline jule::Bool _1ab5e4aa9_Exist(_1b4b3ca44_ReferenceStack* _self_, jule::Ptr<_1b4bddaa1_Var> _7823_t);
inline jule::Bool _1ab6a8bd4_Exist(_1b4b3ca44_ReferenceStack* _self_, jule::Ptr<_1b4b24641_StructIns> _7823_t);
inline jule::Bool _1ab9e8b5b_Exist(_1b4b3ca44_ReferenceStack* _self_, jule::Ptr<_1b4b49c3d_Trait> _7823_t);
inline void _1b4b444a7_pushErr(_1b4b43a06_symbolBuilder* _self_, jule::Ptr<_1b4ad5712_Token>* _33227_token, jule::Str _33242_fmt, jule::Slice<jule::Any> _33255_args);
inline void _1b4b44c38_pushSuggestion(_1b4b43a06_symbolBuilder* _self_, jule::Str _34133_fmt, jule::Slice<jule::Any> _34146_args);
inline jule::Bool _1b4b45134_checkCppUseDeclPath(_1b4b43a06_symbolBuilder* _self_, jule::Ptr<_1b4b18b30_UseDecl>* _34539_decl, jule::Str* _34556_path);
inline jule::Ptr<_1b4b9a893_ImportInfo> _1b4b45442_buildCppHeaderImport(_1b4b43a06_symbolBuilder* _self_, jule::Ptr<_1b4b18b30_UseDecl>* _36544_decl);
inline jule::Ptr<_1b4b9a893_ImportInfo> _1b4b45783_buildStdImport(_1b4b43a06_symbolBuilder* _self_, jule::Ptr<_1b4b18b30_UseDecl>* _39338_decl);
inline jule::Ptr<_1b4b9a893_ImportInfo> _1b4b45ac4_buildIdentImport(jule::Ptr<_1b4b43a06_symbolBuilder> _self_, jule::Ptr<_1b4b18b30_UseDecl>* _43341_decl);
inline jule::Ptr<_1b4b9a893_ImportInfo> _1b4b45e15_buildImport(jule::Ptr<_1b4b43a06_symbolBuilder> _self_, jule::Ptr<_1b4b18b30_UseDecl>* _48736_decl);
inline jule::Bool _1b4b46256_checkDuplicateUseDecl(_1b4b43a06_symbolBuilder* _self_, jule::Ptr<_1b4b9a893_ImportInfo>* _49841_pkg);
inline void _1b4b465b9_implImportSelections(_1b4b43a06_symbolBuilder* _self_, jule::Ptr<_1b4b9a893_ImportInfo>* _51244_imp, jule::Ptr<_1b4b18b30_UseDecl>* _51267_decl);
inline jule::Str _1b4b4690a_getAsLinkPath(jule::Ptr<_1b4b43a06_symbolBuilder> _self_, jule::Str _52737_path);
inline void _1b4b46d28_pushCycleError(jule::Ptr<_1b4b43a06_symbolBuilder> _self_, jule::Ptr<_1b4b43a06_symbolBuilder>* _54135_sb, jule::Str _54155_path, _1cb1d27a9_StrBuilder* _54171_message);
inline void _1b4b47246_pushCrossCycleError(jule::Ptr<_1b4b43a06_symbolBuilder> _self_, jule::Ptr<_1b4b43a06_symbolBuilder>* _55440_target, jule::Ptr<_1b4b9a893_ImportInfo>* _55465_imp, jule::Ptr<_1b4ad5712_Token>* _55484_errorToken);
inline jule::Bool _1b4b47642_checkImportCycles(jule::Ptr<_1b4b43a06_symbolBuilder> _self_, jule::Ptr<_1b4b9a893_ImportInfo> _57737_imp, jule::Ptr<_1b4b18b30_UseDecl>* _57756_decl);
inline void _1b4b47a60_checkPackageAccessibility(_1b4b43a06_symbolBuilder* _self_, jule::Ptr<_1b4b18b30_UseDecl>* _60845_decl, jule::Str* _60862_mod, jule::Str* _60873_path);
inline jule::Bool _1b4b47e5b_importPackage(jule::Ptr<_1b4b43a06_symbolBuilder> _self_, jule::Ptr<_1b4b9a893_ImportInfo>* _61438_imp, jule::Ptr<_1b4b18b30_UseDecl>* _61461_decl);
inline jule::Ptr<_1b4b9a893_ImportInfo> _1b4b4829c_importUseDecl(jule::Ptr<_1b4b43a06_symbolBuilder> _self_, jule::Ptr<_1b4b18b30_UseDecl>* _66138_decl);
inline void _1b4b4849a_importUseDecls(jule::Ptr<_1b4b43a06_symbolBuilder> _self_);
inline void _1b4b48753_appendNode(_1b4b43a06_symbolBuilder* _self_, _1b4ae9bbb_Node* _69234_node);
inline void _1b4b48951_appendNodes(_1b4b43a06_symbolBuilder* _self_);
inline void _1b4b48c09_pushDirectivePass(_1b4b43a06_symbolBuilder* _self_, jule::Ptr<_1b4aea0d9_Directive>* _72841_d);
inline void _1b4b48e07_appendTopDirectives(_1b4b43a06_symbolBuilder* _self_);
inline void _1b4b49105_build(jule::Ptr<_1b4b43a06_symbolBuilder> _self_);
inline jule::Str _1b4b4a106_Str(_1b4b49c3d_Trait* _self_);
inline jule::Bool _1b4b4a447_Equal(jule::Ptr<_1b4b49c3d_Trait> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _2521_other);
inline jule::Ptr<_1b4b36884_Fn> _1b4b4a8dc_FindMethod(_1b4b49c3d_Trait* _self_, jule::Str _3429_ident);
inline jule::Ptr<_1b4b36884_Fn> _1b4b4b06e_findMethodInherit(_1b4b49c3d_Trait* _self_, jule::Str* _5537_ident);
inline jule::Bool _1b4b4bc84_AutoExpr(_1b4b4b8cc_EnumItem* _self_);
inline jule::Str _1b4b4c7bd_Str(_1b4b4c449_Enum* _self_);
inline jule::Bool _1b4b4cb0e_Equal(jule::Ptr<_1b4b4c449_Enum> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _3821_other);
inline jule::Ptr<_1b4b4b8cc_EnumItem> _1b4b4d03d_FindItem(_1b4b4c449_Enum* _self_, jule::Str _4727_ident);
inline jule::Str _1b4b4de95_Str(_1b4b4db54_TypeEnum* _self_);
inline jule::Bool _1b4b4e2d6_Equal(jule::Ptr<_1b4b4db54_TypeEnum> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _8021_other);
inline jule::Ptr<_1b4b4d57c_TypeEnumItem> _1b4b4e715_FindItem(_1b4b4db54_TypeEnum* _self_, jule::Str _8927_ident);
inline jule::Str _1b4b52130_Str(_1b4b51cab_comptimeRange* _self_);
inline jule::Bool _1b4b52471_Equal(jule::Ptr<_1b4b51cab_comptimeRange> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _3621_other);
inline jule::Str _1b4b52b47_Str(_1b4b5277e_comptimeStructField* _self_);
inline jule::Bool _1b4b52e88_Equal(jule::Ptr<_1b4b5277e_comptimeStructField> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _4621_other);
inline jule::Ptr<_1b4c466a8_Data> _1b4b5352c__Name(jule::Ptr<_1b4b5277e_comptimeStructField> _self_, jule::Ptr<_1b4c483d0_Eval>* _5026_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _5041_fc);
inline jule::Ptr<_1b4c466a8_Data> _1b4b53928__Type(jule::Ptr<_1b4b5277e_comptimeStructField> _self_, jule::Ptr<_1b4c483d0_Eval>* _6330_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _6345_fc);
inline jule::Ptr<_1b4c466a8_Data> _1b4b53d24__Public(jule::Ptr<_1b4b5277e_comptimeStructField> _self_, jule::Ptr<_1b4c483d0_Eval>* _7132_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _7147_fc);
inline jule::Ptr<_1b4c466a8_Data> _1b4b54132_subIdent(jule::Ptr<_1b4b5277e_comptimeStructField> _self_, jule::Str* _8429_ident);
inline jule::Str _1b4b547b4_Str(_1b4b54440_comptimeStructFields* _self_);
inline jule::Bool _1b4b54b05_Equal(jule::Ptr<_1b4b54440_comptimeStructFields> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _12021_other);
inline void _1b4b55078_ready(_1b4b54440_comptimeStructFields* _self_, jule::Ptr<_1b4bddaa1_Var>* _12429_keyA, jule::Ptr<_1b4bddaa1_Var>* _12446_keyB);
inline void _1b4b55496_step(_1b4b54440_comptimeStructFields* _self_, jule::I64 _14523_i, jule::Ptr<_1b4bddaa1_Var>* _14536_keyA, jule::Ptr<_1b4bddaa1_Var>* _14553_keyB);
inline jule::I64 _1b4b5572c_len(_1b4b54440_comptimeStructFields* _self_);
inline jule::Str _1b4b55dae_Str(_1b4b55a3a_comptimeStatic* _self_);
inline jule::Bool _1b4b56200_Equal(jule::Ptr<_1b4b55a3a_comptimeStatic> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _16921_other);
inline jule::Ptr<_1b4c466a8_Data> _1b4b5682c__Name(jule::Ptr<_1b4b55a3a_comptimeStatic> _self_, jule::Ptr<_1b4c483d0_Eval>* _17326_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _17341_fc);
inline jule::Ptr<_1b4c466a8_Data> _1b4b56c28__Type(jule::Ptr<_1b4b55a3a_comptimeStatic> _self_, jule::Ptr<_1b4c483d0_Eval>* _18630_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _18645_fc);
inline jule::Ptr<_1b4c466a8_Data> _1b4b57124__Public(jule::Ptr<_1b4b55a3a_comptimeStatic> _self_, jule::Ptr<_1b4c483d0_Eval>* _19432_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _19447_fc);
inline jule::Ptr<_1b4c466a8_Data> _1b4b57465_subIdent(jule::Ptr<_1b4b55a3a_comptimeStatic> _self_, jule::Str* _20729_ident);
inline jule::Str _1b4b57a70_Str(_1b4b576eb_comptimeStatics* _self_);
inline jule::Bool _1b4b57db1_Equal(jule::Ptr<_1b4b576eb_comptimeStatics> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _24321_other);
inline void _1b4b58334_ready(_1b4b576eb_comptimeStatics* _self_, jule::Ptr<_1b4bddaa1_Var>* _24729_keyA, jule::Ptr<_1b4bddaa1_Var>* _24746_keyB);
inline void _1b4b58752_step(_1b4b576eb_comptimeStatics* _self_, jule::I64 _26823_i, jule::Ptr<_1b4bddaa1_Var>* _26836_keyA, jule::Ptr<_1b4bddaa1_Var>* _26853_keyB);
inline jule::I64 _1b4b589d8_len(_1b4b576eb_comptimeStatics* _self_);
inline jule::Str _1b4b5927a_Str(_1b4b58ce6_comptimeEnumField* _self_);
inline jule::Bool _1b4b595bb_Equal(jule::Ptr<_1b4b58ce6_comptimeEnumField> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _29221_other);
inline jule::Ptr<_1b4c466a8_Data> _1b4b59a3e__Name(jule::Ptr<_1b4b58ce6_comptimeEnumField> _self_, jule::Ptr<_1b4c483d0_Eval>* _29626_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _29641_fc);
inline jule::Ptr<_1b4c466a8_Data> _1b4b59d80_subIdent(jule::Ptr<_1b4b58ce6_comptimeEnumField> _self_, jule::Str* _30929_ident);
inline jule::Str _1b4b5a512_Str(_1b4b5a18d_comptimeEnumFields* _self_);
inline jule::Bool _1b4b5a853_Equal(jule::Ptr<_1b4b5a18d_comptimeEnumFields> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _33121_other);
inline void _1b4b5acc6_ready(_1b4b5a18d_comptimeEnumFields* _self_, jule::Ptr<_1b4bddaa1_Var>* _33529_keyA, jule::Ptr<_1b4bddaa1_Var>* _33546_keyB);
inline void _1b4b5b1e4_step(_1b4b5a18d_comptimeEnumFields* _self_, jule::I64 _35623_i, jule::Ptr<_1b4bddaa1_Var>* _35636_keyA, jule::Ptr<_1b4bddaa1_Var>* _35653_keyB);
inline jule::I64 _1b4b5b47a_len(_1b4b5a18d_comptimeEnumFields* _self_);
inline jule::Str _1b4b5bb0c_Str(_1b4b5b788_comptimeParam* _self_);
inline jule::Bool _1b4b5be4d_Equal(jule::Ptr<_1b4b5b788_comptimeParam> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _38021_other);
inline jule::Ptr<_1b4c466a8_Data> _1b4b5c6ac__Name(jule::Ptr<_1b4b5b788_comptimeParam> _self_, jule::Ptr<_1b4c483d0_Eval>* _38426_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _38441_fc);
inline jule::Ptr<_1b4c466a8_Data> _1b4b5caa8__Type(jule::Ptr<_1b4b5b788_comptimeParam> _self_, jule::Ptr<_1b4c483d0_Eval>* _39730_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _39745_fc);
inline jule::Ptr<_1b4c466a8_Data> _1b4b5cea4__Variadic(jule::Ptr<_1b4b5b788_comptimeParam> _self_, jule::Ptr<_1b4c483d0_Eval>* _40534_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _40549_fc);
inline jule::Ptr<_1b4c466a8_Data> _1b4b5d3a0__Reference(jule::Ptr<_1b4b5b788_comptimeParam> _self_, jule::Ptr<_1b4c483d0_Eval>* _41835_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _41850_fc);
inline jule::Ptr<_1b4c466a8_Data> _1b4b5d6e1_subIdent(jule::Ptr<_1b4b5b788_comptimeParam> _self_, jule::Str* _43129_ident);
inline jule::Str _1b4b5dc63_Str(_1b4b5d922_comptimeParams* _self_);
inline jule::Bool _1b4b5e0a4_Equal(jule::Ptr<_1b4b5d922_comptimeParams> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _47421_other);
inline void _1b4b5e527_ready(_1b4b5d922_comptimeParams* _self_, jule::Ptr<_1b4bddaa1_Var>* _47829_keyA, jule::Ptr<_1b4bddaa1_Var>* _47846_keyB);
inline void _1b4b5e945_step(_1b4b5d922_comptimeParams* _self_, jule::I64 _49923_i, jule::Ptr<_1b4bddaa1_Var>* _49936_keyA, jule::Ptr<_1b4bddaa1_Var>* _49953_keyB);
inline jule::I64 _1b4b5ebcb_len(_1b4b5d922_comptimeParams* _self_);
inline jule::Str _1b4b6035d_Str(_1b4b5eed9_comptimeTypeInfos* _self_);
inline jule::Bool _1b4b6069e_Equal(jule::Ptr<_1b4b5eed9_comptimeTypeInfos> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _52321_other);
inline void _1b4b60b22_ready(_1b4b5eed9_comptimeTypeInfos* _self_, jule::Ptr<_1b4bddaa1_Var>* _52729_keyA, jule::Ptr<_1b4bddaa1_Var>* _52746_keyB);
inline void _1b4b61040_step(_1b4b5eed9_comptimeTypeInfos* _self_, jule::I64 _54823_i, jule::Ptr<_1b4bddaa1_Var>* _54836_keyA, jule::Ptr<_1b4bddaa1_Var>* _54853_keyB);
inline jule::I64 _1b4b612c6_len(_1b4b5eed9_comptimeTypeInfos* _self_);
inline jule::Str _1b4b61958_Str(_1b4b615d4_comptimeTypeInfo* _self_);
inline jule::Bool _1b4b61c99_Equal(jule::Ptr<_1b4b615d4_comptimeTypeInfo> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _57221_other);
inline jule::Ptr<_1b4c466a8_Data> _1b4b623e8__Str(jule::Ptr<_1b4b615d4_comptimeTypeInfo> _self_, jule::Ptr<_1b4c483d0_Eval>* _57625_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _57640_fc);
inline jule::Ptr<_1b4c466a8_Data> _1b4b627e4__Kind(jule::Ptr<_1b4b615d4_comptimeTypeInfo> _self_, jule::Ptr<_1b4c483d0_Eval>* _58930_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _58945_fc);
inline jule::Ptr<_1b4c466a8_Data> _1b4b62be0__Bits(jule::Ptr<_1b4b615d4_comptimeTypeInfo> _self_, jule::Ptr<_1b4c483d0_Eval>* _66730_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _66745_fc);
inline jule::Ptr<_1b4c466a8_Data> _1b4b630db__Elem(jule::Ptr<_1b4b615d4_comptimeTypeInfo> _self_, jule::Ptr<_1b4c483d0_Eval>* _69030_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _69045_fc);
inline jule::Ptr<_1b4c466a8_Data> _1b4b634d7__Size(jule::Ptr<_1b4b615d4_comptimeTypeInfo> _self_, jule::Ptr<_1b4c483d0_Eval>* _72330_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _72345_fc);
inline jule::Ptr<_1b4c466a8_Data> _1b4b638d3__Key(jule::Ptr<_1b4b615d4_comptimeTypeInfo> _self_, jule::Ptr<_1b4c483d0_Eval>* _74129_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _74144_fc);
inline jule::Ptr<_1b4c466a8_Data> _1b4b63cce__Value(jule::Ptr<_1b4b615d4_comptimeTypeInfo> _self_, jule::Ptr<_1b4c483d0_Eval>* _75431_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _75446_fc);
inline jule::Ptr<_1b4c466a8_Data> _1b4b641ca__Fields(jule::Ptr<_1b4b615d4_comptimeTypeInfo> _self_, jule::Ptr<_1b4c483d0_Eval>* _76732_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _76747_fc);
inline jule::Ptr<_1b4c466a8_Data> _1b4b645c6__Statics(jule::Ptr<_1b4b615d4_comptimeTypeInfo> _self_, jule::Ptr<_1b4c483d0_Eval>* _79633_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _79648_fc);
inline jule::Ptr<_1b4c466a8_Data> _1b4b649c2__Public(jule::Ptr<_1b4b615d4_comptimeTypeInfo> _self_, jule::Ptr<_1b4c483d0_Eval>* _81532_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _81547_fc);
inline jule::Ptr<_1b4c466a8_Data> _1b4b64dbd__Binded(jule::Ptr<_1b4b615d4_comptimeTypeInfo> _self_, jule::Ptr<_1b4c483d0_Eval>* _84232_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _84247_fc);
inline jule::Ptr<_1b4c466a8_Data> _1b4b652b9__Ordered(jule::Ptr<_1b4b615d4_comptimeTypeInfo> _self_, jule::Ptr<_1b4c483d0_Eval>* _85529_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _85544_fc);
inline jule::Ptr<_1b4c466a8_Data> _1b4b656b5__Comparable(jule::Ptr<_1b4b615d4_comptimeTypeInfo> _self_, jule::Ptr<_1b4c483d0_Eval>* _86832_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _86847_fc);
inline jule::Ptr<_1b4c466a8_Data> _1b4b65ab1__Mutable(jule::Ptr<_1b4b615d4_comptimeTypeInfo> _self_, jule::Ptr<_1b4c483d0_Eval>* _88129_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _88144_fc);
inline jule::Ptr<_1b4c466a8_Data> _1b4b65eac__Types(jule::Ptr<_1b4b615d4_comptimeTypeInfo> _self_, jule::Ptr<_1b4c483d0_Eval>* _89431_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _89446_fc);
inline jule::Ptr<_1b4c466a8_Data> _1b4b663a8__Exceptional(jule::Ptr<_1b4b615d4_comptimeTypeInfo> _self_, jule::Ptr<_1b4c483d0_Eval>* _91737_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _91752_fc);
inline jule::Ptr<_1b4c466a8_Data> _1b4b667a4__CanNil(jule::Ptr<_1b4b615d4_comptimeTypeInfo> _self_, jule::Ptr<_1b4c483d0_Eval>* _93532_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _93547_fc);
inline jule::Ptr<_1b4c466a8_Data> _1b4b66ba0__RC(jule::Ptr<_1b4b615d4_comptimeTypeInfo> _self_, jule::Ptr<_1b4c483d0_Eval>* _94828_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _94843_fc);
inline jule::Ptr<_1b4c466a8_Data> _1b4b6709b__Result(jule::Ptr<_1b4b615d4_comptimeTypeInfo> _self_, jule::Ptr<_1b4c483d0_Eval>* _96132_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _96147_fc);
inline jule::Ptr<_1b4c466a8_Data> _1b4b67497__Params(jule::Ptr<_1b4b615d4_comptimeTypeInfo> _self_, jule::Ptr<_1b4c483d0_Eval>* _97732_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _97747_fc);
inline jule::Ptr<_1b4c466a8_Data> _1b4b677d8_subIdent(jule::Ptr<_1b4b615d4_comptimeTypeInfo> _self_, jule::Str* _99429_ident);
inline jule::Str _1b4b67e6a_Str(_1b4b67ae6_comptimeValue* _self_);
inline jule::Bool _1b4b682ab_Equal(jule::Ptr<_1b4b67ae6_comptimeValue> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _114921_other);
inline jule::Ptr<_1b4c466a8_Data> _1b4b6880b__Unwrap(jule::Ptr<_1b4b67ae6_comptimeValue> _self_, jule::Ptr<_1b4c483d0_Eval>* _115332_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _115347_fc);
inline jule::Ptr<_1b4c466a8_Data> _1b4b68c07__Type(jule::Ptr<_1b4b67ae6_comptimeValue> _self_, jule::Ptr<_1b4c483d0_Eval>* _116130_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _116145_fc);
inline jule::Ptr<_1b4c466a8_Data> _1b4b69103__Lvalue(jule::Ptr<_1b4b67ae6_comptimeValue> _self_, jule::Ptr<_1b4c483d0_Eval>* _116932_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _116947_fc);
inline jule::Ptr<_1b4c466a8_Data> _1b4b694ee__Mutable(jule::Ptr<_1b4b67ae6_comptimeValue> _self_, jule::Ptr<_1b4c483d0_Eval>* _118233_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _118248_fc);
inline jule::Ptr<_1b4c466a8_Data> _1b4b698ea__Const(jule::Ptr<_1b4b67ae6_comptimeValue> _self_, jule::Ptr<_1b4c483d0_Eval>* _119531_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _119546_fc);
inline jule::Ptr<_1b4c466a8_Data> _1b4b69ce6__Field(jule::Ptr<_1b4b67ae6_comptimeValue> _self_, jule::Ptr<_1b4c483d0_Eval>* _120831_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _120846_fc);
inline jule::Ptr<_1b4c466a8_Data> _1b4b6a137_subIdent(jule::Ptr<_1b4b67ae6_comptimeValue> _self_, jule::Str* _124329_ident);
inline jule::Str _1b4b6a7b9_Str(_1b4b6a445_comptimeFiles* _self_);
inline jule::Bool _1b4b6ab0a_Equal(jule::Ptr<_1b4b6a445_comptimeFiles> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _130021_other);
inline void _1b4b6b07d_ready(_1b4b6a445_comptimeFiles* _self_, jule::Ptr<_1b4bddaa1_Var>* _130429_keyA, jule::Ptr<_1b4bddaa1_Var>* _130446_keyB);
inline void _1b4b6b49b_step(_1b4b6a445_comptimeFiles* _self_, jule::I64 _132523_i, jule::Ptr<_1b4bddaa1_Var>* _132536_keyA, jule::Ptr<_1b4bddaa1_Var>* _132553_keyB);
inline jule::I64 _1b4b6b732_len(_1b4b6a445_comptimeFiles* _self_);
inline jule::Str _1b4b6c0e5_Str(_1b4b6ba40_comptimeFile* _self_);
inline jule::Bool _1b4b6c436_Equal(jule::Ptr<_1b4b6ba40_comptimeFile> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _134921_other);
inline jule::Ptr<_1b4c466a8_Data> _1b4b6c843__Path(jule::Ptr<_1b4b6ba40_comptimeFile> _self_, jule::Ptr<_1b4c483d0_Eval>* _135330_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _135345_fc);
inline jule::Ptr<_1b4c466a8_Data> _1b4b6cc3e__Name(jule::Ptr<_1b4b6ba40_comptimeFile> _self_, jule::Ptr<_1b4c483d0_Eval>* _136630_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _136645_fc);
inline jule::Ptr<_1b4c466a8_Data> _1b4b6d13a__Dir(jule::Ptr<_1b4b6ba40_comptimeFile> _self_, jule::Ptr<_1b4c483d0_Eval>* _137929_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _137944_fc);
inline jule::Ptr<_1b4c466a8_Data> _1b4b6d47b_subIdent(jule::Ptr<_1b4b6ba40_comptimeFile> _self_, jule::Str* _139229_ident);
inline jule::Fn<jule::Bool,jule::Ptr<_1b4bbac37_Sema>*,jule::Slice<jule::Ptr<_1b4c7bb1c_TypeAlias>>*> _1b4b7144b_readyFn(jule::Ptr<_1b4b71050_constraintChecker> _self_);
inline jule::Bool _1b4b716d2_readyFi(jule::Ptr<_1b4b71050_constraintChecker> _self_);
inline jule::Bool _1b4b71968_readySi(jule::Ptr<_1b4b71050_constraintChecker> _self_);
inline jule::Bool _1b4b71bee_ready(jule::Ptr<_1b4b71050_constraintChecker> _self_);
inline jule::Bool _1b4b71e85_check(jule::Ptr<_1b4b71050_constraintChecker> _self_);
inline jule::Bool _1b4b7376c_IsTraitImpl(_1b4b733a4_Impl* _self_);
inline jule::Bool _1b4b73a03_IsStructImpl(_1b4b733a4_Impl* _self_);
inline jule::Ptr<_1b4b9a893_ImportInfo> _1b4b8125d_SelectPackage(_1b4b80cb8_scopeChecker* _self_, jule::Fn<jule::Bool,jule::Ptr<_1b4b9a893_ImportInfo>> _46032_selector);
inline jule::Ptr<_1b4bddaa1_Var> _1b4b81659_FindVar(_1b4b80cb8_scopeChecker* _self_, jule::Str _47126_ident, jule::Bool _47138_binded);
inline jule::Ptr<_1b4c7bb1c_TypeAlias> _1b4b81a55_FindTypeAlias(_1b4b80cb8_scopeChecker* _self_, jule::Str _48832_ident, jule::Bool _48844_binded);
inline jule::Ptr<_1b4b218b3_Struct> _1b4b81e51_FindStruct(_1b4b80cb8_scopeChecker* _self_, jule::Str _51329_ident, jule::Bool _51341_binded);
inline jule::Ptr<_1b4b36884_Fn> _1b4b8234c_FindFn(_1b4b80cb8_scopeChecker* _self_, jule::Str _52225_ident, jule::Bool _52237_binded);
inline jule::Ptr<_1b4b49c3d_Trait> _1b4b8268d_FindTrait(_1b4b80cb8_scopeChecker* _self_, jule::Str _53128_ident);
inline jule::Ptr<_1b4b4c449_Enum> _1b4b829ce_FindEnum(_1b4b80cb8_scopeChecker* _self_, jule::Str _54027_ident);
inline jule::Ptr<_1b4b4db54_TypeEnum> _1b4b82d20_FindTypeEnum(_1b4b80cb8_scopeChecker* _self_, jule::Str _54931_ident);
inline jule::Bool _1b4b83172_isUnsafe(jule::Ptr<_1b4b80cb8_scopeChecker> _self_);
inline jule::Bool _1b4b83408_isRoot(_1b4b80cb8_scopeChecker* _self_);
inline void _1b4b83606_stop(_1b4b80cb8_scopeChecker* _self_);
inline jule::Bool _1b4b8388c_stopped(_1b4b80cb8_scopeChecker* _self_);
inline jule::Bool _1b4b83b23_isDeferred(jule::Ptr<_1b4b80cb8_scopeChecker> _self_);
inline void _1b4b83dcb_pushCaptured(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4bddaa1_Var>* _61137_v);
inline jule::Ptr<_1b4b80cb8_scopeChecker> _1b4b84162_getRoot(jule::Ptr<_1b4b80cb8_scopeChecker> _self_);
inline jule::Ptr<_1b4b80cb8_scopeChecker> _1b4b843e8_getHardRoot(jule::Ptr<_1b4b80cb8_scopeChecker> _self_);
inline jule::Ptr<_1b4bddaa1_Var> _1b4b84739_findVar(_1b4b80cb8_scopeChecker* _self_, jule::Str _65426_ident);
inline jule::Ptr<_1b4b7b19d_Label> _1b4b84a7a_findLabel(_1b4b80cb8_scopeChecker* _self_, jule::Str* _67529_ident);
inline jule::Ptr<_1b4b7e745_scopeLabel> _1b4b84dbb_findLabelScope(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Str* _69135_ident);
inline jule::Ptr<_1b4b7e745_scopeLabel> _1b4b8520c_findLabelAll(_1b4b80cb8_scopeChecker* _self_, jule::Str* _70332_ident);
inline jule::Bool _1b4b85608_isDuplicatedIdent(_1b4b80cb8_scopeChecker* _self_, jule::Uintptr _71536_itself, jule::Str* _71554_ident);
inline void _1b4b858b1_checkVarDecl(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4b13894_VarDecl> _73536_decl);
inline void _1b4b85b69_checkTypeAlias(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4c7bb1c_TypeAlias>* _76639_ta);
inline void _1b4b85e22_checkTypeAliasDecl(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4b17546_TypeAliasDecl> _78242_decl);
inline jule::Ptr<_1b4b7880a_Scope> _1b4b861a8_getChild(_1b4b80cb8_scopeChecker* _self_);
inline void _1b4b865c6_checkChildSsc(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4b10a4a_ScopeTree>* _79338_tree, jule::Ptr<_1b4b7880a_Scope>* _79361_s, jule::Ptr<_1b4b80cb8_scopeChecker>* _79377_ssc);
inline jule::Ptr<_1b4b7880a_Scope> _1b4b869c2_checkChildSc(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4b10a4a_ScopeTree>* _79837_tree, jule::Ptr<_1b4b80cb8_scopeChecker>* _79860_ssc);
inline jule::Ptr<_1b4b7880a_Scope> _1b4b86d13_checkChild(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4b10a4a_ScopeTree>* _80435_tree);
inline void _1b4b870bb_checkAnonScope(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4b10a4a_ScopeTree> _80938_tree);
inline void _1b4b8742e_processErrorCall(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4b3231e_BuiltinErrorCallExprModel>* _81441_m, jule::Ptr<_1b4ad5712_Token> _81472_err);
inline void _1b4b876d7_checkExpr(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4b00001_Expr> _82733_expr);
inline jule::Ptr<_1b4b78c28_If> _1b4b87a28_checkIf(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4b16479_If> _85831_i);
inline jule::Ptr<_1b4b79025_Else> _1b4b87d69_checkElse(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4b16853_Else> _87833_e);
inline void _1b4b88122_checkConditional(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4b16d09_Conditional> _88440_conditional);
inline void _1b4b885ea_checkIterScopeSsc(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Uintptr _90037_it, jule::Ptr<_1b4b10a4a_ScopeTree> _90054_tree, jule::Ptr<_1b4b7880a_Scope>* _90077_s, jule::Ptr<_1b4b80cb8_scopeChecker> _90092_ssc);
inline jule::Ptr<_1b4b7880a_Scope> _1b4b88aa1_checkIterScopeSc(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Uintptr _90536_it, jule::Ptr<_1b4b10a4a_ScopeTree> _90553_tree, jule::Ptr<_1b4b80cb8_scopeChecker> _90575_ssc);
inline jule::Ptr<_1b4b7880a_Scope> _1b4b88e9c_checkIterScope(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Uintptr _91134_it, jule::Ptr<_1b4b10a4a_ScopeTree>* _91152_tree);
inline void _1b4b89255_checkInfIter(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4b144dd_Iter>* _91637_it);
inline void _1b4b8950d_checkWhileIter(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4b144dd_Iter>* _92239_it);
inline void _1b4b8992b_checkComptimeRangeIter(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4b144dd_Iter>* _97247_it, jule::Ptr<_1b4b7a642_RangeIter>* _97263_kind, jule::Ptr<_1b4c466a8_Data>* _97286_d);
inline void _1b4b89bd4_checkRangeIter(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4b144dd_Iter>* _102939_it);
inline void _1b4b89e8c_checkIter(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4b144dd_Iter> _108933_it);
inline jule::Bool _1b4b8a2cd_checkValidContLabel(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Uintptr _111339_it);
inline jule::Bool _1b4b8a61e_checkValidBreakLabel(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Uintptr _112940_ptr);
inline jule::Ptr<_1b4b7a9c7_ContSt> _1b4b8a960_checkContValidScope(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4b15ec3_ContSt> _115239_c);
inline void _1b4b8ac18_checkCont(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4b15ec3_ContSt> _117629_c);
inline void _1b4b8aec1_checkLabel(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4b082a1_LabelSt> _122334_l);
inline void _1b4b8b279_pushGoto(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4b0867a_GotoSt> _124232_gt);
inline void _1b4b8b532_checkPostfix(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4b0966a_AssignSt> _125636_a);
inline jule::Bool _1b4b8b873_isNewAssignIdent(_1b4b80cb8_scopeChecker* _self_, jule::Str _128935_ident);
inline void _1b4b8bb2b_removeInteriorMutRisk(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4c466a8_Data>* _130246_d);
inline jule::Bool _1b4b8c0d2_checkStructureAssignOp(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4b24641_StructIns>* _131647_s, jule::Ptr<_1b4b0966a_AssignSt>* _131667_a, jule::Ptr<_1b4c466a8_Data>* _131686_r);
inline void _1b4b8c38a_checkSingleAssign(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4b0966a_AssignSt>* _135542_a);
inline void _1b4b8c91d_processEndPartOfMultiAssign(_1b4b80cb8_scopeChecker* _self_, jule::Ptr<_1b4b7c3ad_MultiAssign>* _143351_st, jule::Ptr<_1b4b0966a_AssignSt>* _143414_a, jule::Ptr<_1b4b090d7_AssignLeft>* _143433_lexpr, jule::Ptr<_1b4c466a8_Data>* _143458_l, jule::Ptr<_1b4c466a8_Data>* _143473_r);
inline void _1b4b8cbc6_checkMultiAssign(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4b0966a_AssignSt>* _150341_a);
inline void _1b4b8ce7e_checkAssignSt(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4b0966a_AssignSt> _155137_a);
inline jule::Ptr<_1b4b7880a_Scope> _1b4b8d37a_checkCaseScope(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4b7d546_Case>* _156235_c, jule::Ptr<_1b4b10a4a_ScopeTree>* _156250_tree);
inline jule::Ptr<_1b4b7d546_Case> _1b4b8d8db_checkCase(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4b7ca1d_Match> _156833_m, jule::I64 _156844_i, jule::Ptr<_1b4b179ec_Case> _156856_c, jule::Ptr<_1b4c466a8_Data> _156875_expr);
inline void _1b4b8dd09_checkCases(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4b18316_MatchCase>* _164335_m, jule::Ptr<_1b4b7ca1d_Match> _164354_rm, jule::Ptr<_1b4c466a8_Data> _164370_expr);
inline jule::Ptr<_1b4b7d546_Case> _1b4b8e205_checkDefault(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4b7ca1d_Match> _166436_m, jule::Ptr<_1b4b16853_Else> _166451_d);
inline void _1b4b8e568_checkComptimePanic(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4ad5712_Token> _167242_callToken, jule::Ptr<_1b4b7880a_Scope>* _167262_s);
inline void _1b4b8e8cb_processConstMatch(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4b7ca1d_Match>* _170442_tm, jule::Ptr<_1b4b18316_MatchCase>* _170459_m);
inline void _1b4b8eb84_checkTypeMatch(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4b18316_MatchCase>* _173339_m);
inline void _1b4b8ee3c_checkCommonMatch(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4b18316_MatchCase>* _177541_m);
inline void _1b4b901e5_checkMatch(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4b18316_MatchCase> _182534_m);
inline void _1b4b9049d_checkFall(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4b08977_FallSt> _183329_f);
inline jule::Ptr<_1b4b7ada1_BreakSt> _1b4b907de_checkBreakWithLabel(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4b15ae9_BreakSt> _185639_b);
inline jule::Ptr<_1b4b7ada1_BreakSt> _1b4b90b30_checkPlainBreak(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4b15ae9_BreakSt> _191435_b);
inline void _1b4b90dd8_checkBreak(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4b15ae9_BreakSt> _193630_b);
inline void _1b4b91191_checkRet(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4b13c6d_RetSt> _194732_r);
inline void _1b4b91449_checkUseExpr(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4b008c5_UseExpr> _197232_ue);
inline void _1b4b91702_checkNode(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Any* _198834_node);
inline void _1b4b91900_checkResult(jule::Ptr<_1b4b80cb8_scopeChecker> _self_);
inline void _1b4b91aed_checkTree(jule::Ptr<_1b4b80cb8_scopeChecker> _self_);
inline void _1b4b91e61_checkGoto(_1b4b80cb8_scopeChecker* _self_, jule::Ptr<_1b4b7ecc8_scopeGoto>* _209033_gt, jule::Ptr<_1b4b7e745_scopeLabel>* _209054_label);
inline void _1b4b9215e_checkGotos(_1b4b80cb8_scopeChecker* _self_);
inline void _1b4b9235c_checkLabels(_1b4b80cb8_scopeChecker* _self_);
inline void _1b4b9255a_checkVars(_1b4b80cb8_scopeChecker* _self_);
inline void _1b4b92758_checkAliases(_1b4b80cb8_scopeChecker* _self_);
inline void _1b4b92abb_check(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4b10a4a_ScopeTree>* _216830_tree, jule::Ptr<_1b4b7880a_Scope>* _216853_s);
inline jule::Ptr<_1b4b80cb8_scopeChecker> _1b4b92d52_newChildChecker(jule::Ptr<_1b4b80cb8_scopeChecker> _self_);
inline void _1b4b94804_checkCdef(_1b4b943e7_directiveChecker* _self_, jule::Ptr<_1b4aea0d9_Directive>* _1629_d);
inline void _1b4b94aac_checkTypedef(_1b4b943e7_directiveChecker* _self_, jule::Ptr<_1b4aea0d9_Directive>* _3232_d);
inline void _1b4b94d65_checkNamespace(_1b4b943e7_directiveChecker* _self_, jule::Ptr<_1b4aea0d9_Directive>* _4838_d);
inline void _1b4b9511d_checkDeprecated(_1b4b943e7_directiveChecker* _self_, jule::Ptr<_1b4aea0d9_Directive>* _9939_d);
inline void _1b4b953c6_checkTest(_1b4b943e7_directiveChecker* _self_, jule::Ptr<_1b4aea0d9_Directive>* _13929_d);
inline void _1b4b9567e_checkDirective(_1b4b943e7_directiveChecker* _self_, jule::Ptr<_1b4aea0d9_Directive>* _16038_d);
inline void _1b4b9587c_check(_1b4b943e7_directiveChecker* _self_);
inline jule::Ptr<_1b4b9a893_ImportInfo> _1b4b9ad7c_SelectPackage(_1b4b9a893_ImportInfo* _self_, jule::Fn<jule::Bool,jule::Ptr<_1b4b9a893_ImportInfo>> );
inline jule::Ptr<_1b4bddaa1_Var> _1b4b9b278_FindVar(_1b4b9a893_ImportInfo* _self_, jule::Str _18926_ident, jule::Bool );
inline jule::Ptr<_1b4c7bb1c_TypeAlias> _1b4b9b674_FindTypeAlias(_1b4b9a893_ImportInfo* _self_, jule::Str _20132_ident, jule::Bool );
inline jule::Ptr<_1b4b218b3_Struct> _1b4b9ba70_FindStruct(_1b4b9a893_ImportInfo* _self_, jule::Str _21329_ident, jule::Bool );
inline jule::Ptr<_1b4b36884_Fn> _1b4b9be6b_FindFn(_1b4b9a893_ImportInfo* _self_, jule::Str _22525_ident, jule::Bool );
inline jule::Ptr<_1b4b49c3d_Trait> _1b4b9c2ac_FindTrait(_1b4b9a893_ImportInfo* _self_, jule::Str _23628_ident);
inline jule::Ptr<_1b4b4c449_Enum> _1b4b9c5ed_FindEnum(_1b4b9a893_ImportInfo* _self_, jule::Str _24727_ident);
inline jule::Ptr<_1b4b4db54_TypeEnum> _1b4b9c93e_FindTypeEnum(_1b4b9a893_ImportInfo* _self_, jule::Str _25831_ident);
inline jule::Bool _1b4b9cdd4_isLookupable(_1b4b9a893_ImportInfo* _self_, jule::Str* _26728_ident);
inline jule::Bool _1b4b9d225_existIdent(_1b4b9a893_ImportInfo* _self_, jule::Str _28725_ident);
inline jule::Bool _1b4b9d4ab_isAccessibleViaSelection(_1b4b9a893_ImportInfo* _self_);
inline jule::Ptr<_1b4b9a893_ImportInfo> _1b4b9dc5e_SelectPackage(_1b4b9d7b9_Package* _self_, jule::Fn<jule::Bool,jule::Ptr<_1b4b9a893_ImportInfo>> );
inline jule::Ptr<_1b4bddaa1_Var> _1b4b9e15a_FindVar(_1b4b9d7b9_Package* _self_, jule::Str _31426_ident, jule::Bool _31438_binded);
inline jule::Ptr<_1b4c7bb1c_TypeAlias> _1b4b9e556_FindTypeAlias(_1b4b9d7b9_Package* _self_, jule::Str _32032_ident, jule::Bool _32044_binded);
inline jule::Ptr<_1b4b218b3_Struct> _1b4b9e952_FindStruct(_1b4b9d7b9_Package* _self_, jule::Str _32629_ident, jule::Bool _32641_binded);
inline jule::Ptr<_1b4b36884_Fn> _1b4b9ed4d_FindFn(_1b4b9d7b9_Package* _self_, jule::Str _33225_ident, jule::Bool _33237_binded);
inline jule::Ptr<_1b4b49c3d_Trait> _1b4ba018e_FindTrait(_1b4b9d7b9_Package* _self_, jule::Str _33828_ident);
inline jule::Ptr<_1b4b4c449_Enum> _1b4ba04d0_FindEnum(_1b4b9d7b9_Package* _self_, jule::Str _34427_ident);
inline jule::Ptr<_1b4b4db54_TypeEnum> _1b4ba0821_FindTypeEnum(_1b4b9d7b9_Package* _self_, jule::Str _35031_ident);
inline jule::Ptr<_1b4b615d4_comptimeTypeInfo> _1b4bba572_pushComptimeTypeInfo(_1b4bba132_commonSemaMeta* _self_, jule::Ptr<_1b4c7c90e_TypeKind>* _21444_t);
inline jule::Ptr<_1b4b9a893_ImportInfo> _1b4bbb1cc_SelectPackage(_1b4bbac37_Sema* _self_, jule::Fn<jule::Bool,jule::Ptr<_1b4b9a893_ImportInfo>> _24332_selector);
inline jule::Ptr<_1b4bddaa1_Var> _1b4bbb5c8_FindVar(_1b4bbac37_Sema* _self_, jule::Str _25326_ident, jule::Bool _25338_binded);
inline jule::Ptr<_1b4c7bb1c_TypeAlias> _1b4bbb9c4_FindTypeAlias(_1b4bbac37_Sema* _self_, jule::Str _28532_ident, jule::Bool _28544_binded);
inline jule::Ptr<_1b4b218b3_Struct> _1b4bbbdc0_FindStruct(_1b4bbac37_Sema* _self_, jule::Str _31729_ident, jule::Bool _31741_binded);
inline jule::Ptr<_1b4b36884_Fn> _1b4bbc2bb_FindFn(_1b4bbac37_Sema* _self_, jule::Str _34825_ident, jule::Bool _34837_binded);
inline jule::Ptr<_1b4b49c3d_Trait> _1b4bbc60c_FindTrait(_1b4bbac37_Sema* _self_, jule::Str _38028_ident);
inline jule::Ptr<_1b4b4c449_Enum> _1b4bbc94d_FindEnum(_1b4bbac37_Sema* _self_, jule::Str _41227_ident);
inline jule::Ptr<_1b4b4db54_TypeEnum> _1b4bbcc8e_FindTypeEnum(_1b4bbac37_Sema* _self_, jule::Str _44431_ident);
inline jule::Bool _1b4bbd19b_isFlag(_1b4bbac37_Sema* _self_, jule::I64 _47321_flags);
inline void _1b4bbd454_setCurrentFile(_1b4bbac37_Sema* _self_, jule::Ptr<_1b4c41340_SymbolTable> _47537_f);
inline void _1b4bbd872_pushErr(_1b4bbac37_Sema* _self_, jule::Ptr<_1b4ad5712_Token> _47726_token, jule::Str _47741_fmt, jule::Slice<jule::Any> _47754_args);
inline void _1b4bbdbd5_pushSuggestion(_1b4bbac37_Sema* _self_, jule::Str _48233_fmt, jule::Slice<jule::Any> _48246_args);
inline jule::Bool _1b4bbe0d1_isAccessibleDefine(_1b4bbac37_Sema* _self_, jule::Bool _48733_public, jule::Ptr<_1b4ad5712_Token> _48747_token);
inline jule::Bool _1b4bbe587_isDuplicatedIdent(_1b4bbac37_Sema* _self_, jule::Uintptr _49432_itself, jule::Str* _49450_ident, jule::Bool _49462_binded);
inline void _1b4bbe8ea_checkDirectives(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Slice<jule::Ptr<_1b4aea0d9_Directive>>* _51140_d, jule::Any _51166_o);
inline jule::Bool _1b4bbeda1_checkGenericQuantity(_1b4bbac37_Sema* _self_, jule::I64 _52039_required, jule::I64 _52054_given, jule::Ptr<_1b4ad5712_Token> _52066_token);
inline jule::Bool _1b4bc029c_isDuplicatedImportSelection(_1b4bbac37_Sema* _self_, jule::Uintptr _53942_itself, jule::Str* _53960_ident);
inline jule::Any _1b4bc0698_getImportDef(_1b4bbac37_Sema* _self_, jule::Str* _55228_ident, jule::Ptr<_1b4b9a893_ImportInfo>* _55245_imp);
inline jule::Bool _1ab1889a0_checkImportSelection(_1b4bbac37_Sema* _self_, jule::Ptr<_1b4ad5712_Token>* _56743_ident, jule::Ptr<_1b4bddaa1_Var>* _56759_s);
inline jule::Bool _1ab18cc6d_checkImportSelection(_1b4bbac37_Sema* _self_, jule::Ptr<_1b4ad5712_Token>* _56743_ident, jule::Ptr<_1b4c7bb1c_TypeAlias>* _56759_s);
inline jule::Bool _1ab191ee7_checkImportSelection(_1b4bbac37_Sema* _self_, jule::Ptr<_1b4ad5712_Token>* _56743_ident, jule::Ptr<_1b4b218b3_Struct>* _56759_s);
inline jule::Bool _1ab196419_checkImportSelection(_1b4bbac37_Sema* _self_, jule::Ptr<_1b4ad5712_Token>* _56743_ident, jule::Ptr<_1b4b49c3d_Trait>* _56759_s);
inline jule::Bool _1ab19a682_checkImportSelection(_1b4bbac37_Sema* _self_, jule::Ptr<_1b4ad5712_Token>* _56743_ident, jule::Ptr<_1b4b4c449_Enum>* _56759_s);
inline jule::Bool _1ab19e90b_checkImportSelection(_1b4bbac37_Sema* _self_, jule::Ptr<_1b4ad5712_Token>* _56743_ident, jule::Ptr<_1b4b4db54_TypeEnum>* _56759_s);
inline jule::Bool _1ab1a3b85_checkImportSelection(_1b4bbac37_Sema* _self_, jule::Ptr<_1b4ad5712_Token>* _56743_ident, jule::Ptr<_1b4b36884_Fn>* _56759_s);
inline jule::Bool _1b4bc0dd5_checkImportSelectedSelections(_1b4bbac37_Sema* _self_, jule::Ptr<_1b4b9a893_ImportInfo>* _58153_imp);
inline jule::Bool _1ab1a844d_checkImportsAllSelectionsFromCollection(_1b4bbac37_Sema* _self_, jule::Slice<jule::Ptr<_1b4bddaa1_Var>>* _63062_s, jule::Ptr<_1b4ad5712_Token>* _63071_et);
inline jule::Bool _1ab1a90db_checkImportsAllSelectionsFromCollection(_1b4bbac37_Sema* _self_, jule::Slice<jule::Ptr<_1b4c7bb1c_TypeAlias>>* _63062_s, jule::Ptr<_1b4ad5712_Token>* _63071_et);
inline jule::Bool _1ab1ac2cb_checkImportsAllSelectionsFromCollection(_1b4bbac37_Sema* _self_, jule::Slice<jule::Ptr<_1b4b218b3_Struct>>* _63062_s, jule::Ptr<_1b4ad5712_Token>* _63071_et);
inline jule::Bool _1ab1ad5da_checkImportsAllSelectionsFromCollection(_1b4bbac37_Sema* _self_, jule::Slice<jule::Ptr<_1b4b36884_Fn>>* _63062_s, jule::Ptr<_1b4ad5712_Token>* _63071_et);
inline jule::Bool _1ab1b0cc4_checkImportsAllSelectionsFromCollection(_1b4bbac37_Sema* _self_, jule::Slice<jule::Ptr<_1b4b49c3d_Trait>>* _63062_s, jule::Ptr<_1b4ad5712_Token>* _63071_et);
inline jule::Bool _1ab1b436b_checkImportsAllSelectionsFromCollection(_1b4bbac37_Sema* _self_, jule::Slice<jule::Ptr<_1b4b4c449_Enum>>* _63062_s, jule::Ptr<_1b4ad5712_Token>* _63071_et);
inline jule::Bool _1ab1b6a11_checkImportsAllSelectionsFromCollection(_1b4bbac37_Sema* _self_, jule::Slice<jule::Ptr<_1b4b4db54_TypeEnum>>* _63062_s, jule::Ptr<_1b4ad5712_Token>* _63071_et);
inline jule::Bool _1b4bc1622_checkImportAllSelections(_1b4bbac37_Sema* _self_, jule::Ptr<_1b4b9a893_ImportInfo>* _64044_imp);
inline jule::Bool _1b4bc1963_checkImportSelections(_1b4bbac37_Sema* _self_, jule::Ptr<_1b4b9a893_ImportInfo>* _65445_imp);
inline jule::Bool _1b4bc1ca4_isUseAliasDuplication(_1b4bbac37_Sema* _self_, jule::Ptr<_1b4b9a893_ImportInfo>* _66341_imp);
inline jule::Bool _1b4bc20e5_checkImport(_1b4bbac37_Sema* _self_, jule::Ptr<_1b4b9a893_ImportInfo>* _67935_imp);
inline void _1b4bc22e3_checkImports(_1b4bbac37_Sema* _self_);
inline void _1b4bc24e1_implFileImpls(jule::Ptr<_1b4bbac37_Sema> _self_);
inline void _1b4bc26de_implImpls(jule::Ptr<_1b4bbac37_Sema> _self_);
inline void _1b4bc28dc_checkEnums(jule::Ptr<_1b4bbac37_Sema> _self_);
inline void _1b4bc2ada_checkFileInherits(jule::Ptr<_1b4bbac37_Sema> _self_);
inline void _1b4bc2cd8_checkInherits(jule::Ptr<_1b4bbac37_Sema> _self_);
inline _1b4c8e7bc_typeChecker _1b4bc328e_typeChecker(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Trait _76835_l, jule::Slice<jule::Ptr<_1b4c7bb1c_TypeAlias>> _76850_generics, jule::Ptr<_1b4c8d7cc_referencer> _76913_referencer);
inline jule::Ptr<_1b4c7c90e_TypeKind> _1b4bc3800_buildTypeWithRefers(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4aeabbc_TypeDecl>* _79544_t, jule::Trait _79567_l, jule::Slice<jule::Ptr<_1b4c7bb1c_TypeAlias>> _79613_generics, jule::Ptr<_1b4c8d7cc_referencer> _79641_referencer);
inline jule::Bool _1b4bc3d61_checkTypeWithRefers(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4c84ad1_TypeSymbol>* _80244_t, jule::Trait _80264_l, jule::Slice<jule::Ptr<_1b4c7bb1c_TypeAlias>> _80313_generics, jule::Ptr<_1b4c8d7cc_referencer> _80341_referencer);
inline jule::Ptr<_1b4b71050_constraintChecker> _1b4bc40e7_constraintChecker(jule::Ptr<_1b4bbac37_Sema> _self_);
inline jule::Bool _1b4bc44e3_checkType(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4c84ad1_TypeSymbol>* _81734_t, jule::Trait _81754_l);
inline jule::Ptr<_1b4c7c90e_TypeKind> _1b4bc4999_buildTypeWithGenerics(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4aeabbc_TypeDecl>* _82346_t, jule::Slice<jule::Ptr<_1b4c7bb1c_TypeAlias>> _82413_generics, jule::Ptr<_1b4b3ca44_ReferenceStack> _82441_refers);
inline jule::Ptr<_1b4c7c90e_TypeKind> _1b4bc512b_selectType(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4aeabbc_TypeDecl>* _84135_t);
inline jule::Ptr<_1b4c483d0_Eval> _1b4bc55d2_evalpd(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Trait _85330_l, jule::Ptr<_1b4c7c90e_TypeKind> _85345_p, jule::Ptr<_1b4bddaa1_Var> _85363_owner);
inline jule::Ptr<_1b4c483d0_Eval> _1b4bc59cd_evalp(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Trait _86829_l, jule::Ptr<_1b4c7c90e_TypeKind> _86844_p);
inline jule::Ptr<_1b4c483d0_Eval> _1b4bc5d1e_eval(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Trait _87328_l);
inline jule::Bool _1b4bc6380_checkAssignType(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Bool _87735_destIsRef, jule::Ptr<_1b4c7c90e_TypeKind>* _87757_dest, jule::Ptr<_1b4c466a8_Data>* _87814_d, jule::Ptr<_1b4ad5712_Token> _87828_errorToken);
inline jule::Bool _1b4bc6836__checkTypeCompatibility(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4c7c90e_TypeKind>* _91948_dest, jule::Ptr<_1b4c7c90e_TypeKind>* _91970_src, jule::Ptr<_1b4ad5712_Token> _92013_errorToken);
inline jule::Bool _1b4bc6cdc_checkTypeCompatibility(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4c7c90e_TypeKind>* _93747_dest, jule::Ptr<_1b4c7c90e_TypeKind>* _93814_src, jule::Ptr<_1b4ad5712_Token>* _93835_errorToken);
inline void _1b4bc720a_pushCompatiblityError(_1b4bbac37_Sema* _self_, jule::Ptr<_1b4c7c90e_TypeKind>* _94645_dest, jule::Ptr<_1b4c466a8_Data>* _94667_src, jule::Ptr<_1b4ad5712_Token>* _94714_errorToken);
inline jule::Bool _1b4bc76b1_checkTypeCompatibility1(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4c7c90e_TypeKind>* _96448_dest, jule::Ptr<_1b4c466a8_Data>* _96470_src, jule::Ptr<_1b4ad5712_Token>* _96514_errorToken);
inline jule::Ptr<_1b4c7c90e_TypeKind> _1b4bc7b67_buildNonGenericTypeKind(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4aeabbc_TypeDecl>* _97948_ast, jule::Slice<jule::Ptr<_1b4b07dc7_GenericDecl>>* _98014_generics, jule::Slice<jule::Ptr<_1b4c7c90e_TypeKind>>* _98050_ignored);
inline jule::Bool _1b4bc8063_buildFnNonGenericTypeKinds(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b39865_FnIns>* _99151_f, jule::Slice<jule::Ptr<_1b4c7c90e_TypeKind>>* _99167_ignored);
inline jule::Ptr<_1b4b39865_FnIns> _1b4bc83a4_getTraitCheckFnKind(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b36884_Fn>* _101344_f);
inline jule::Bool _1b4bc885a_checkConstraintsFn(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b39865_FnIns>* _103643_f, jule::Ptr<_1b4ad5712_Token>* _103659_et, jule::Ptr<_1b4b39865_FnIns> _103675_exist);
inline jule::Bool _1b4bc8d11_checkConstraintsStruct(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b24641_StructIns>* _105047_s, jule::Ptr<_1b4ad5712_Token>* _105067_et, jule::Ptr<_1b4b24641_StructIns> _105083_exist);
inline jule::Bool _1b4bc920c_fnEnvironment(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b39865_FnIns>* _106738_f, jule::Fn<jule::Bool,jule::Ptr<_1b4bbac37_Sema>*,jule::Slice<jule::Ptr<_1b4c7bb1c_TypeAlias>>*> _106749_algo);
inline void _1b4bc94b5_checkFnParamKind(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b387dc_ParamIns>* _109441_p);
inline jule::Bool _1b4bc9806_reloadFnInsTypes(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b39865_FnIns> _110140_f);
inline jule::Bool _1b4bc9cac_checkRefValidityForInitExpr(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Bool _113747_leftMut, jule::Ptr<_1b4c466a8_Data>* _113767_d, jule::Ptr<_1b4ad5712_Token>* _113782_errorToken);
inline jule::Bool _1b4bca0ed_isMutRiskyStruct(_1b4bbac37_Sema* _self_, jule::Ptr<_1b4b24641_StructIns>* _115432_s);
inline jule::Bool _1b4bca719_checkValidityForInitExpr(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Bool _118144_leftMut, jule::Bool _118159_leftRef, jule::Ptr<_1b4c7c90e_TypeKind>* _118210_leftKind, jule::Ptr<_1b4c466a8_Data>* _118236_d, jule::Ptr<_1b4ad5712_Token>* _118251_errorToken);
inline jule::Bool _1b4bcab15_checkTypeAliasDeclKind(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4c7bb1c_TypeAlias>* _120947_ta, jule::Trait _120967_l);
inline void _1b4bcae78_checkTypeAliasDecl(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4c7bb1c_TypeAlias>* _123243_ta, jule::Trait _123263_l);
inline void _1b4bcb231_checkTypeAliasDeclDup(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4c7bb1c_TypeAlias>* _124046_ta);
inline jule::Bool _1b4bcb4b7_checkTypeAliasDecls(jule::Ptr<_1b4bbac37_Sema> _self_);
inline void _1ab269663_checkEnumItemsDup(_1b4bbac37_Sema* _self_, jule::Slice<jule::Ptr<_1b4b4b8cc_EnumItem>> _126439_items);
inline void _1ab27683a_checkEnumItemsDup(_1b4bbac37_Sema* _self_, jule::Slice<jule::Ptr<_1b4b4d57c_TypeEnumItem>> _126439_items);
inline void _1b4bcba28_checkEnumItemsStr(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b4c449_Enum>* _128442_e);
inline void _1ab24a105_checkEnumItemInt(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4c483d0_Eval>* _131046_eval, jule::Ptr<_1b4b4c449_Enum>* _131064_e, jule::Ptr<_1b4c854d8_Prim>* _131075_prim, jule::Ptr<_1b4b4b8cc_EnumItem>* _131093_item, jule::U64* _1310115_n);
inline void _1ab25a159_checkEnumItemInt(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4c483d0_Eval>* _131046_eval, jule::Ptr<_1b4b4c449_Enum>* _131064_e, jule::Ptr<_1b4c854d8_Prim>* _131075_prim, jule::Ptr<_1b4b4b8cc_EnumItem>* _131093_item, jule::I64* _1310115_n);
inline void _1ab2462bb_checkEnumItemsInt1(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4c854d8_Prim>* _134544_prim, jule::Ptr<_1b4b4c449_Enum>* _134562_e);
inline void _1ab25685e_checkEnumItemsInt1(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4c854d8_Prim>* _134544_prim, jule::Ptr<_1b4b4c449_Enum>* _134562_e);
inline void _1b4bcc6c7_checkEnumItemsInt(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b4c449_Enum>* _138042_e);
inline void _1b4bcc980_checkEnumDecl(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b4c449_Enum>* _139038_e);
inline void _1b4bccc38_checkTypeEnumDecl(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b4db54_TypeEnum>* _143142_e);
inline jule::Bool _1b4bccebe_checkEnumDecls(jule::Ptr<_1b4bbac37_Sema> _self_);
inline jule::Bool _1b4bcd255_checkTypeEnumDecls(jule::Ptr<_1b4bbac37_Sema> _self_);
inline jule::Bool _1b4bcd596_checkDeclGenerics(_1b4bbac37_Sema* _self_, jule::Slice<jule::Ptr<_1b4b07dc7_GenericDecl>>* _149437_generics);
inline jule::Bool _1b4bcd8d7_checkFnDeclParamsDup(_1b4bbac37_Sema* _self_, jule::Ptr<_1b4b36884_Fn>* _152140_f);
inline jule::Bool _1b4bcdc28_checkFnDeclResultDup(_1b4bbac37_Sema* _self_, jule::Ptr<_1b4b36884_Fn>* _155840_f);
inline jule::Bool _1b4bce069_checkFnVariadicParam(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b36884_Fn>* _160345_f);
inline void _1b4bce322_checkFnDeclPrototype(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b36884_Fn>* _161645_f);
inline jule::Bool _1b4bce7c8_catchTraitInheritCycle(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b49c3d_Trait> _163842_t1, jule::Ptr<_1b4b49c3d_Trait> _163858_t2, _1cb1d27a9_StrBuilder* _163875_message);
inline jule::Bool _1b4bceb19__checkTraitDeclInherits(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b49c3d_Trait>* _165748_t);
inline void _1b4bcedc2_checkTraitDeclInherits(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b49c3d_Trait>* _169847_t);
inline void _1b4bd017a_checkTraitDeclMethod(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b36884_Fn>* _172345_f);
inline void _1b4bd0433_checkTraitDeclMethods(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b49c3d_Trait>* _173746_t);
inline void _1b4bd06db_checkTraitDecl(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b49c3d_Trait>* _177339_t);
inline jule::Bool _1b4bd0972_checkTraitDecls(jule::Ptr<_1b4bbac37_Sema> _self_);
inline jule::Bool _1b4bd0d6d_checkTraitImplMethods(_1b4bbac37_Sema* _self_, jule::Ptr<_1b4b49c3d_Trait>* _179745_base, jule::Ptr<_1b4b733a4_Impl>* _179760_ipl);
inline jule::Bool _1b4bd1269_implToStruct(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b218b3_Struct>* _180837_dest, jule::Ptr<_1b4b733a4_Impl>* _180857_ipl);
inline void _1b4bd1522_implTrait(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b733a4_Impl>* _185034_decl);
inline void _1b4bd17ca_implStruct(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b733a4_Impl>* _189335_decl);
inline void _1b4bd1a83_implImpl(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b733a4_Impl>* _191733_decl);
inline void _1b4bd1de6_checkVarDecl(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4bddaa1_Var>* _192837_decl, jule::Trait _192853_l);
inline void _1b4bd219e_checkGlobalVarDecl(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4bddaa1_Var>* _196543_decl);
inline jule::Bool _1b4bd2435_checkGlobalDecls(jule::Ptr<_1b4bbac37_Sema> _self_);
inline jule::Bool _1b4bd2831_checkStructTraitImpl(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b218b3_Struct>* _199345_strct, jule::Ptr<_1b4b49c3d_Trait>* _199366_trt);
inline jule::Bool _1b4bd2b72_checkStructImpls(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b218b3_Struct>* _201741_s);
inline jule::Bool _1b4bd2eb3_checkStructFields(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b218b3_Struct>* _202542_st);
inline void _1b4bd326b_checkStructDecl(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b218b3_Struct>* _204240_s);
inline jule::Bool _1b4bd3502_checkStructDecls(jule::Ptr<_1b4bbac37_Sema> _self_);
inline void _1b4bd37aa_checkAnonFuncDecl(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b36884_Fn>* _207242_f);
inline void _1b4bd3a63_checkFuncDecl(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b36884_Fn>* _207738_f);
inline jule::Bool _1b4bd3da4_checkFuncDeclsBy(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Slice<jule::Ptr<_1b4b36884_Fn>>* _209941_funcs);
inline jule::Bool _1b4bd413a_checkFuncDecls(jule::Ptr<_1b4bbac37_Sema> _self_);
inline void _1b4bd4558_pushCycleError(_1b4bbac37_Sema* _self_, jule::Str* _211530_st1, jule::Str* _211541_st2, _1cb1d27a9_StrBuilder* _211556_message);
inline void _1b4bd4c0c_checkPackageDecls(jule::Ptr<_1b4bbac37_Sema> _self_);
inline void _1b4bd5070_checkDataForTypeInference(_1b4bbac37_Sema* _self_, jule::Ptr<_1b4c466a8_Data>* _217545_d, jule::Ptr<_1b4ad5712_Token>* _217556_err_token);
inline void _1b4bd5328_checkVarValue(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4bddaa1_Var>* _218738_v);
inline void _1b4bd568b_evalVarValue(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4bddaa1_Var>* _224037_decl, jule::Trait _224053_l);
inline void _1b4bd59ee_checkVar(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4bddaa1_Var>* _225733_decl, jule::Trait _225749_l);
inline void _1b4bd5bec_checkGlobals(jule::Ptr<_1b4bbac37_Sema> _self_);
inline jule::Ptr<_1b4b39865_FnIns> _1b4bd60e8_readyToCheckFn(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b24641_StructIns>* _228139_s, jule::Ptr<_1b4b36884_Fn>* _228159_f);
inline void _1b4bd645b_checkTypeMethod(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b24641_StructIns>* _229540_s, jule::Ptr<_1b4b36884_Fn>* _229560_f);
inline jule::Ptr<_1b4b39865_FnIns> _1b4bd6912_checkStructInsOp(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b24641_StructIns>* _230841_s, jule::Ptr<_1b4b36884_Fn>* _230861_f, jule::Fn<jule::Bool,jule::Ptr<_1b4b36884_Fn>> _230869_p);
inline jule::Bool _1b4bd6d0d_checkStructEnv(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b24641_StructIns>* _231839_s, jule::Ptr<_1b4ad5712_Token> _231858_errorToken);
inline jule::Bool _1b4bd7209_precheckStructIns(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b24641_StructIns>* _241542_s, jule::Ptr<_1b4ad5712_Token> _241561_errorToken);
inline void _1b4bd74b2_checkStructIns(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b24641_StructIns>* _243039_s);
inline void _1b4bd776a_checkTypeStruct(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b218b3_Struct>* _243640_s);
inline void _1b4bd7968_checkStructTypes(jule::Ptr<_1b4bbac37_Sema> _self_);
inline void _1b4bd7c21_checkStructInsOperators(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b24641_StructIns> _246047_s);
inline void _1b4bd7ec9_precheckStructType(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b218b3_Struct>* _252443_s);
inline void _1b4bd81c7_precheckStructTypes(jule::Ptr<_1b4bbac37_Sema> _self_);
inline void _1b4bd8480_checkRets(_1b4bbac37_Sema* _self_, jule::Ptr<_1b4b39865_FnIns>* _255033_f);
inline void _1b4bd87e3_checkFnInsSc(_1b4bbac37_Sema* _self_, jule::Ptr<_1b4b39865_FnIns>* _256136_f, jule::Ptr<_1b4b80cb8_scopeChecker>* _256152_sc);
inline void _1b4bd8b56_checkFnInsCaller(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b39865_FnIns>* _257441_f, jule::Ptr<_1b4ad5712_Token> _257456_caller);
inline void _1b4bd8e0e_checkFnIns(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b39865_FnIns>* _259635_f);
inline void _1b4bd91b7_checkFunc(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b36884_Fn>* _260034_f);
inline void _1b4bd9470_checkTestFn(_1b4bbac37_Sema* _self_, jule::Ptr<_1b4b39865_FnIns>* _261535_f);
inline void _1b4bd9728_precheckFunc(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b36884_Fn>* _264837_f);
inline void _1b4bd9926_precheckFuncs(jule::Ptr<_1b4bbac37_Sema> _self_);
inline void _1b4bd9b24_checkFuncs(jule::Ptr<_1b4bbac37_Sema> _self_);
inline void _1b4bd9d22_checkPackageTypes(jule::Ptr<_1b4bbac37_Sema> _self_);
inline void _1b4bda020_setFileSemaFields(jule::Ptr<_1b4bbac37_Sema> _self_);
inline void _1b4bda21d_setSemaFields(jule::Ptr<_1b4bbac37_Sema> _self_);
inline void _1b4bda4c6_check(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Slice<jule::Ptr<_1b4c41340_SymbolTable>>* _272630_files);
inline _1b4bda905_missingRetChecker static__1b4bdacbd_new(void);
inline jule::Bool _1b4bdb0cb_checkConditional(_1b4bda905_missingRetChecker* _self_, jule::Ptr<_1b4b79443_Conditional> _277435_c);
inline jule::Bool _1b4bdb41c_checkMatch(_1b4bda905_missingRetChecker* _self_, jule::Ptr<_1b4b7ca1d_Match> _278629_m);
inline jule::Bool _1b4bdb75d_checkInfIter(_1b4bda905_missingRetChecker* _self_, jule::Ptr<_1b4b79740_InfIter> _281231_it);
inline jule::Bool _1b4bdba9e_checkScope(_1b4bda905_missingRetChecker* _self_, jule::Ptr<_1b4b7880a_Scope> _283129_s);
inline jule::Bool _1b4bdbde0_check(_1b4bda905_missingRetChecker* _self_, jule::Ptr<_1b4b7880a_Scope> _287724_s);
inline jule::Bool _1b4bdde7a_IsInitialized(_1b4bddaa1_Var* _self_);
inline jule::Bool _1b4bde211_IsTypeInferred(_1b4bddaa1_Var* _self_);
inline jule::Bool _1b4bde497_untypedConstant(_1b4bddaa1_Var* _self_);
inline jule::Bool static__1b4be0047_Dispose(jule::Ptr<_1b4b36884_Fn> _1023_f);
inline jule::Bool static__1b4be0311_Str(jule::Ptr<_1b4b36884_Fn> _2419_f);
inline jule::Bool static__1b4be0685_logical(jule::Ptr<_1b4b36884_Fn>* _4624_f, jule::Str _4632_ident);
inline jule::Bool static__1b4be094e_Eq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b36884_Fn> _7218_f);
inline jule::Bool static__1b4be0c18_Gt(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b36884_Fn> _7718_f);
inline jule::Bool static__1b4be0ed2_GtEq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b36884_Fn> _8220_f);
inline jule::Bool static__1b4be129b_Lt(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b36884_Fn> _8718_f);
inline jule::Bool static__1b4be1565_LtEq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b36884_Fn> _9220_f);
inline jule::Bool static__1b4be18d9_result(jule::Ptr<_1b4b36884_Fn>* _9623_f, jule::Str _9631_ident);
inline jule::Bool static__1b4be1ba3_Shl(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b36884_Fn> _11819_f);
inline jule::Bool static__1b4be1e6c_Shr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b36884_Fn> _12319_f);
inline jule::Bool static__1b4be2236_Add(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b36884_Fn> _12819_f);
inline jule::Bool static__1b4be2500_Sub(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b36884_Fn> _13319_f);
inline jule::Bool static__1b4be27b9_Div(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b36884_Fn> _13819_f);
inline jule::Bool static__1b4be2a83_Mul(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b36884_Fn> _14319_f);
inline jule::Bool static__1b4be2d4c_Mod(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b36884_Fn> _14819_f);
inline jule::Bool static__1b4be3116_BitAnd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b36884_Fn> _15322_f);
inline jule::Bool static__1b4be33d0_BitOr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b36884_Fn> _15821_f);
inline jule::Bool static__1b4be3699_BitXor(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b36884_Fn> _16322_f);
inline jule::Bool static__1b4be3a1d_unary(jule::Ptr<_1b4b36884_Fn>* _16722_f, jule::Str _16730_ident);
inline jule::Bool static__1b4be3cd7_Neg(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b36884_Fn> _18719_f);
inline jule::Bool static__1b4be40a1_Pos(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b36884_Fn> _19219_f);
inline jule::Bool static__1b4be436a_BitNot(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b36884_Fn> _19722_f);
inline jule::Bool static__1b4be46de_assign(jule::Ptr<_1b4b36884_Fn>* _20123_f, jule::Str _20131_ident);
inline jule::Bool static__1b4be49a8_AddAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b36884_Fn> _22125_f);
inline jule::Bool static__1b4be4c72_SubAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b36884_Fn> _22625_f);
inline jule::Bool static__1b4be503b_DivAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b36884_Fn> _23125_f);
inline jule::Bool static__1b4be5305_MulAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b36884_Fn> _23625_f);
inline jule::Bool static__1b4be55be_ModAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b36884_Fn> _24125_f);
inline jule::Bool static__1b4be5888_ShlAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b36884_Fn> _24625_f);
inline jule::Bool static__1b4be5b52_ShrAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b36884_Fn> _25125_f);
inline jule::Bool static__1b4be5e1b_BitOrAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b36884_Fn> _25627_f);
inline jule::Bool static__1b4be61d5_BitAndAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b36884_Fn> _26128_f);
inline jule::Bool static__1b4be649e_BitXorAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b36884_Fn> _26628_f);
inline void _1b4c2d86b_pushErr(_1b4c2d371_typeCompatibilityChecker* _self_, jule::Str _11926_fmt, jule::Slice<jule::Any> _11939_args);
inline jule::Bool _1b4c2db02_checkTrait(_1b4c2d371_typeCompatibilityChecker* _self_);
inline jule::Bool _1b4c2dd88_checkPtr(_1b4c2d371_typeCompatibilityChecker* _self_);
inline jule::Bool _1b4c2e11e_checkPrim(_1b4c2d371_typeCompatibilityChecker* _self_);
inline jule::Bool _1b4c2e51a_typeEnum(_1b4c2d371_typeCompatibilityChecker* _self_, jule::Ptr<_1b4b4db54_TypeEnum>* _19928_e, jule::Ptr<_1b4c7c90e_TypeKind>* _19947_t2);
inline jule::Bool _1b4c2e7a1_checkTypeEnum(_1b4c2d371_typeCompatibilityChecker* _self_);
inline jule::Bool _1b4c2ea37_check(_1b4c2d371_typeCompatibilityChecker* _self_);
inline void _1b4c305a4_pushErr(_1b4c30120_assignTypeChecker* _self_, jule::Str _25526_fmt, jule::Slice<jule::Any> _25539_args);
inline jule::Bool _1b4c3083a_checkValidity(_1b4c30120_assignTypeChecker* _self_);
inline jule::Bool _1b4c30ac1_checkConst(_1b4c30120_assignTypeChecker* _self_);
inline jule::Bool _1b4c30d57_checkCompatibility(_1b4c30120_assignTypeChecker* _self_);
inline jule::Bool _1b4c310dd_check(_1b4c30120_assignTypeChecker* _self_);
inline jule::Bool _1ab44d193_annotateConstraintElem(_1b4c319e5_dynamicTypeAnnotation* _self_, jule::Ptr<_1b4c7c90e_TypeKind>* _35749_k);
inline jule::Bool _1ab44ca44_annotateConstraintElem(_1b4c319e5_dynamicTypeAnnotation* _self_, jule::Ptr<_1b4c7c90e_TypeKind>* _35749_k);
inline jule::Bool _1ab44eb9a_annotateConstraintElem(_1b4c319e5_dynamicTypeAnnotation* _self_, jule::Ptr<_1b4c7c90e_TypeKind>* _35749_k);
inline jule::Bool _1ab457158_annotateConstraintElem(_1b4c319e5_dynamicTypeAnnotation* _self_, jule::Ptr<_1b4c7c90e_TypeKind>* _35749_k);
inline jule::Bool _1b4c323db_annotateConstraintMap(_1b4c319e5_dynamicTypeAnnotation* _self_, jule::Ptr<_1b4c7c90e_TypeKind>* _37745_k);
inline jule::Bool _1b4c3272c_annotateConstraintTup(_1b4c319e5_dynamicTypeAnnotation* _self_, jule::Ptr<_1b4c7c90e_TypeKind>* _39245_k);
inline jule::Bool _1b4c32a6d_annotateConstraintFn(_1b4c319e5_dynamicTypeAnnotation* _self_, jule::Ptr<_1b4c7c90e_TypeKind>* _40944_k);
inline jule::Bool _1b4c32dae_annotateConstraintIdent(_1b4c319e5_dynamicTypeAnnotation* _self_, jule::Ptr<_1b4c7c90e_TypeKind>* _43047_k);
inline jule::Bool _1b4c33200_annotateConstraint(_1b4c319e5_dynamicTypeAnnotation* _self_, jule::Ptr<_1b4c7c90e_TypeKind>* _45942_k);
inline void _1b4c33563_pushGeneric(_1b4c319e5_dynamicTypeAnnotation* _self_, jule::Ptr<_1b4c7c90e_TypeKind>* _48435_k, jule::I64 _48449_i);
inline jule::Bool _1b4c338a4_annotatePrim(_1b4c319e5_dynamicTypeAnnotation* _self_, jule::Ptr<_1b4c7c90e_TypeKind>* _49943_k);
inline jule::Bool _1b4c33be5_annotateArr(_1b4c319e5_dynamicTypeAnnotation* _self_, jule::Ptr<_1b4c7c90e_TypeKind>* _50342_k);
inline jule::Bool _1b4c34036_annotateSlc(_1b4c319e5_dynamicTypeAnnotation* _self_, jule::Ptr<_1b4c7c90e_TypeKind>* _51342_k);
inline jule::Bool _1b4c34432_checkMapKey(_1b4c319e5_dynamicTypeAnnotation* _self_, jule::Ptr<_1b4c7c90e_TypeKind>* _52341_k, jule::Ptr<_1b4c7c90e_TypeKind>* _52361_ck);
inline jule::Bool _1b4c34773_annotateMap(_1b4c319e5_dynamicTypeAnnotation* _self_, jule::Ptr<_1b4c7c90e_TypeKind>* _53142_k);
inline jule::Bool _1b4c34ab4_annotateFn(_1b4c319e5_dynamicTypeAnnotation* _self_, jule::Ptr<_1b4c7c90e_TypeKind>* _54141_k);
inline jule::Bool _1b4c34e05_annotatePtr(_1b4c319e5_dynamicTypeAnnotation* _self_, jule::Ptr<_1b4c7c90e_TypeKind>* _57042_k);
inline jule::Bool _1b4c35246_annotateSptr(_1b4c319e5_dynamicTypeAnnotation* _self_, jule::Ptr<_1b4c7c90e_TypeKind>* _58043_k);
inline jule::Bool _1b4c35587_annotateStruct(_1b4c319e5_dynamicTypeAnnotation* _self_, jule::Ptr<_1b4c7c90e_TypeKind>* _59045_k);
inline jule::Bool _1b4c358c8_annotateAny(_1b4c319e5_dynamicTypeAnnotation* _self_, jule::Ptr<_1b4c7c90e_TypeKind>* _61242_k);
inline jule::Bool _1b4c35c19_annotateKind(_1b4c319e5_dynamicTypeAnnotation* _self_, jule::Ptr<_1b4c7c90e_TypeKind>* _63343_k);
inline jule::Bool _1b4c35ea0_annotate(_1b4c319e5_dynamicTypeAnnotation* _self_);
inline void _1b4c36db3_pushErrToken(_1b4c36852_fnCallArgChecker* _self_, jule::Ptr<_1b4ad5712_Token> _67831_token, jule::Str _67846_fmt, jule::Slice<jule::Any> _67859_args);
inline void _1b4c37226_pushErr(_1b4c36852_fnCallArgChecker* _self_, jule::Str _68226_fmt, jule::Slice<jule::Any> _68239_args);
inline jule::Slice<jule::Ptr<_1b4b387dc_ParamIns>> _1b4c374ac_getParams(_1b4c36852_fnCallArgChecker* _self_);
inline jule::Bool _1b4c377ed_checkCounts(_1b4c36852_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1b4b387dc_ParamIns>>* _69531_params);
inline jule::Bool _1b4c37ca4_checkArg(_1b4c36852_fnCallArgChecker* _self_, jule::Ptr<_1b4b387dc_ParamIns>* _72732_p, jule::Ptr<_1b4c466a8_Data>* _72751_arg, jule::Ptr<_1b4ad5712_Token>* _72768_errorToken);
inline jule::Bool _1b4c381a0_push(_1b4c36852_fnCallArgChecker* _self_, jule::Ptr<_1b4b387dc_ParamIns>* _75628_p, jule::Ptr<_1b4b00001_Expr> _75646_arg);
inline jule::Bool _1b4c3859b_pushVariadic(_1b4c36852_fnCallArgChecker* _self_, jule::Ptr<_1b4b387dc_ParamIns>* _78036_p, jule::I64 _78054_i);
inline jule::Bool _1b4c388dc_checkArgs(_1b4c36852_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1b4b387dc_ParamIns>>* _86133_params);
inline jule::Bool _1b4c38b73_checkDynamicTypeAnnotation(_1b4c36852_fnCallArgChecker* _self_);
inline jule::Bool _1b4c38e09_check(_1b4c36852_fnCallArgChecker* _self_);
inline void _1b4c39cd9_pushErr(_1b4c39789_structLitChecker* _self_, jule::Ptr<_1b4ad5712_Token> _94126_token, jule::Str _94141_fmt, jule::Slice<jule::Any> _94154_args);
inline void _1b4c3a14c_pushSuggestion(_1b4c39789_structLitChecker* _self_, jule::Str _94633_fmt, jule::Slice<jule::Any> _94646_args);
inline void _1b4c3a56a_pushMatch(_1b4c39789_structLitChecker* _self_, jule::Ptr<_1b4b23a91_FieldIns>* _95033_f, jule::Ptr<_1b4c466a8_Data>* _95052_d, jule::Ptr<_1b4ad5712_Token>* _95067_errorToken);
inline void _1b4c3a8cd_checkPair(_1b4c39789_structLitChecker* _self_, jule::Ptr<_1b4b04720_FieldExprPair>* _96933_pair, jule::Slice<jule::Ptr<_1b4b00001_Expr>>* _96960_exprs);
inline jule::Bool _1b4c3ac1e_readyExprs(_1b4c39789_structLitChecker* _self_, jule::Slice<jule::Ptr<_1b4b00001_Expr>>* _100834_exprs);
inline void _1b4c3aec7_check(_1b4c39789_structLitChecker* _self_, jule::Slice<jule::Ptr<_1b4b00001_Expr>>* _103229_exprs);
inline jule::Ptr<_1b4bddaa1_Var> _1b4c3ba55_buildVar(_1b4c3b56b_rangeChecker* _self_, jule::Ptr<_1b4b13894_VarDecl>* _110828_decl);
inline void _1b4c3bc53_setSizeKey(_1b4c3b56b_rangeChecker* _self_);
inline void _1b4c3c171_checkRangeExprValidity(_1b4c3b56b_rangeChecker* _self_, jule::Ptr<_1b4c466a8_Data>* _112746_d, jule::Ptr<_1b4bddaa1_Var>* _112757_key, jule::Ptr<_1b4c7c90e_TypeKind>* _112773_k);
inline void _1b4c3c36e_checkSlice(_1b4c3b56b_rangeChecker* _self_);
inline void _1b4c3c56c_checkArray(_1b4c3b56b_rangeChecker* _self_);
inline void _1b4c3c76a_checkMapKeyA(_1b4c3b56b_rangeChecker* _self_);
inline void _1b4c3c968_checkMapKeyB(_1b4c3b56b_rangeChecker* _self_);
inline void _1b4c3cb66_checkMap(_1b4c3b56b_rangeChecker* _self_);
inline void _1b4c3cd64_checkStr(_1b4c3b56b_rangeChecker* _self_);
inline void _1b4c3d062_checkComptime(_1b4c3b56b_rangeChecker* _self_);
inline jule::Bool _1b4c3d2e8_checkComptimeRange(_1b4c3b56b_rangeChecker* _self_);
inline jule::Bool _1b4c3d57e_check(_1b4c3b56b_rangeChecker* _self_);
inline void _1b4c3e20b_prepareTypes(_1b4c3dccc_retTypeChecker* _self_);
inline void _1b4c3e4b4_prepareExprs(_1b4c3dccc_retTypeChecker* _self_, jule::Ptr<_1b4b00001_Expr>* _128536_e);
inline void _1b4c3e6b2_checkExprs(_1b4c3dccc_retTypeChecker* _self_);
inline jule::Bool _1b4c3e948_tryFuncMultiRetForward(_1b4c3dccc_retTypeChecker* _self_);
inline jule::Bool _1b4c3ec89_check(_1b4c3dccc_retTypeChecker* _self_, jule::Ptr<_1b4b00001_Expr>* _138429_e);
inline jule::Ptr<_1b4b9a893_ImportInfo> _1b4c41829_SelectPackage(_1b4c41340_SymbolTable* _self_, jule::Fn<jule::Bool,jule::Ptr<_1b4b9a893_ImportInfo>> _2732_selector);
inline jule::Ptr<_1b4bddaa1_Var> _1b4c41c25_FindVar(_1b4c41340_SymbolTable* _self_, jule::Str _4126_ident, jule::Bool _4138_binded);
inline jule::Ptr<_1b4c7bb1c_TypeAlias> _1b4c42121_FindTypeAlias(_1b4c41340_SymbolTable* _self_, jule::Str _4732_ident, jule::Bool _4744_binded);
inline jule::Ptr<_1b4b218b3_Struct> _1b4c4251c_FindStruct(_1b4c41340_SymbolTable* _self_, jule::Str _5329_ident, jule::Bool _5341_binded);
inline jule::Ptr<_1b4b36884_Fn> _1b4c42918_FindFn(_1b4c41340_SymbolTable* _self_, jule::Str _6425_ident, jule::Bool _6437_binded);
inline jule::Ptr<_1b4b49c3d_Trait> _1b4c42c59_FindTrait(_1b4c41340_SymbolTable* _self_, jule::Str _7528_ident);
inline jule::Ptr<_1b4b4c449_Enum> _1b4c4309a_FindEnum(_1b4c41340_SymbolTable* _self_, jule::Str _8627_ident);
inline jule::Ptr<_1b4b4db54_TypeEnum> _1b4c433db_FindTypeEnum(_1b4c41340_SymbolTable* _self_, jule::Str _9731_ident);
inline jule::Ptr<_1b4bddaa1_Var> _1b4c43a07_findVar(_1b4c41340_SymbolTable* _self_, jule::Str* _10827_ident, jule::Bool _10839_binded, jule::Bool _10853_reverse);
inline jule::Ptr<_1b4c7bb1c_TypeAlias> _1b4c43ead_findTypeAlias(_1b4c41340_SymbolTable* _self_, jule::Str* _12733_ident, jule::Bool _12745_binded, jule::Bool _12759_reverse);
inline jule::Any _1b4c443a9_defByIdent(_1b4c41340_SymbolTable* _self_, jule::Str* _14830_ident, jule::Bool _14842_binded);
inline jule::Bool _1b4c44860_isDuplicatedIdent(_1b4c41340_SymbolTable* _self_, jule::Uintptr _20132_itself, jule::Str* _20150_ident, jule::Bool _20162_binded);
inline jule::Bool _1b4c46a93_IsNil(_1b4c466a8_Data* _self_);
inline jule::Bool _1b4c46d29_IsVoid(_1b4c466a8_Data* _self_);
inline jule::Bool _1b4c470b0_IsConst(_1b4c466a8_Data* _self_);
inline jule::Bool _1b4c47401_GoodOperand(_1b4c466a8_Data* _self_, jule::Ptr<_1b4c466a8_Data>* _10531_other);
inline void _1b4c48930_pushErr(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4ad5712_Token> _13626_token, jule::Str _13641_fmt, jule::Slice<jule::Any> _13654_args);
inline void _1b4c48c93_pushSuggestion(_1b4c483d0_Eval* _self_, jule::Str _14133_fmt, jule::Slice<jule::Any> _14146_args);
inline void _1b4c48e91_allowBuiltin(_1b4c483d0_Eval* _self_);
inline void _1b4c4918e_disallowBuiltin(_1b4c483d0_Eval* _self_);
inline jule::Bool _1b4c49425_isUnsafe(_1b4c483d0_Eval* _self_);
inline jule::Bool _1b4c496ab_isGlobal(_1b4c483d0_Eval* _self_);
inline jule::Bool _1b4c499b9_applyNumericPrefix(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4c466a8_Data>* _16842_d);
inline jule::Ptr<_1b4c466a8_Data> _1b4c49d0a_litStr(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4b00e8b_LitExpr>* _20322_l);
inline jule::Ptr<_1b4c466a8_Data> _1b4c4a14b_litRune(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4b00e8b_LitExpr>* _22023_l);
inline jule::Ptr<_1b4c466a8_Data> _1b4c4a48c_litFloat(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4b00e8b_LitExpr>* _23924_l);
inline jule::Ptr<_1b4c466a8_Data> _1b4c4a7cd_litInt(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4b00e8b_LitExpr>* _25126_l);
inline jule::Ptr<_1b4c466a8_Data> _1b4c4ab1e_litNum(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4b00e8b_LitExpr>* _30626_l);
inline jule::Ptr<_1b4c466a8_Data> _1b4c4ae60_evalLit(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4b00e8b_LitExpr> _31526_lit);
inline jule::Any _1b4c4b2a1_findBuiltins(_1b4c483d0_Eval* _self_, jule::Str* _32832_ident);
inline jule::Any _1b4c4b69c_getDef(_1b4c483d0_Eval* _self_, jule::Str* _35526_ident, jule::Bool _35538_binded);
inline jule::Ptr<_1b4b3ca44_ReferenceStack> _1b4c4b933_getOwnerRefers(_1b4c483d0_Eval* _self_);
inline void _1ab5cbae6_pushReference(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4b39865_FnIns>* _41040_ref);
inline void _1ab5e27dd_pushReference(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4bddaa1_Var>* _41040_ref);
inline void _1ab6a68a2_pushReference(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4b24641_StructIns>* _41040_ref);
inline jule::Ptr<_1b4c466a8_Data> _1b4c4c02c__evalEnum(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4b4c449_Enum> _41728_enm);
inline jule::Ptr<_1b4c466a8_Data> _1b4c4c428_evalEnum(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4b4c449_Enum> _42631_enm, jule::Ptr<_1b4ad5712_Token> _42643_errorToken);
inline jule::Ptr<_1b4c466a8_Data> _1b4c4c769__evalTypeEnum(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4b4db54_TypeEnum> _43532_enm);
inline jule::Ptr<_1b4c466a8_Data> _1b4c4cb65_evalTypeEnum(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4b4db54_TypeEnum> _44435_enm, jule::Ptr<_1b4ad5712_Token> _44451_errorToken);
inline jule::Ptr<_1b4c466a8_Data> _1b4c4cea6__evalStruct(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4b24641_StructIns> _45330_s);
inline jule::Ptr<_1b4c466a8_Data> _1b4c4d3a2_evalStruct(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4b24641_StructIns> _46733_s, jule::Ptr<_1b4ad5712_Token> _46748_errorToken);
inline jule::Ptr<_1b4c466a8_Data> _1b4c4d6e3_evalFnIns(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4b39865_FnIns> _47728_f);
inline void _1b4c4da56_checkDeprecated(_1b4c483d0_Eval* _self_, jule::Slice<jule::Ptr<_1b4aea0d9_Directive>>* _48639_directives, jule::Ptr<_1b4ad5712_Token> _48670_tok);
inline jule::Ptr<_1b4c466a8_Data> _1b4c4de52_evalFn(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4b36884_Fn> _50229_f, jule::Ptr<_1b4ad5712_Token> _50237_errorToken);
inline void _1b4c4e370_pushIllegalCycleError(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4bddaa1_Var>* _51641_v1, jule::Ptr<_1b4bddaa1_Var>* _51652_v2, _1cb1d27a9_StrBuilder* _51667_message);
inline jule::Bool _1b4c4e76b_checkCrossCycle(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4bddaa1_Var>* _52635_v, _1cb1d27a9_StrBuilder* _52649_message);
inline jule::Bool _1b4c4eb67_checkIllegalCycles(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4bddaa1_Var>* _54342_v, jule::Ptr<_1b4ad5712_Token> _54351_declToken);
inline jule::Ptr<_1b4c466a8_Data> _1b4c50063_evalVar(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4bddaa1_Var> _57130_v, jule::Ptr<_1b4ad5712_Token> _57139_errorToken);
inline jule::Ptr<_1b4c466a8_Data> _1b4c5045e_evalTypeAlias(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4c7bb1c_TypeAlias> _67036_ta, jule::Ptr<_1b4ad5712_Token> _67052_errorToken);
inline jule::Ptr<_1b4c466a8_Data> _1b4c5085a_evalDef(_1b4c483d0_Eval* _self_, jule::Any* _70631_def, jule::Ptr<_1b4ad5712_Token> _70641_ident);
inline jule::Ptr<_1b4c466a8_Data> _1b4c50b9b_evalIdent(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4b0181b_IdentExpr> _73028_ident);
inline jule::Ptr<_1b4c466a8_Data> _1b4c50edc_evalUnary(jule::Ptr<_1b4c483d0_Eval> _self_, jule::Ptr<_1b4b020ad_UnaryExpr> _73533_u);
inline jule::Ptr<_1b4c466a8_Data> _1b4c5132d_evalVariadic(jule::Ptr<_1b4c483d0_Eval> _self_, jule::Ptr<_1b4b02487_VariadicExpr> _74036_v);
inline jule::Ptr<_1b4c466a8_Data> _1b4c5166e_evalUnsafe(jule::Ptr<_1b4c483d0_Eval> _self_, jule::Ptr<_1b4b01365_UnsafeExpr> _76234_u);
inline jule::Ptr<_1b4c466a8_Data> _1b4c519b0_evalArr(jule::Ptr<_1b4c483d0_Eval> _self_, jule::Ptr<_1b4b06557_SliceExpr> _77031_s);
inline jule::Ptr<_1b4c466a8_Data> _1b4c51e66_evalExpSlc(jule::Ptr<_1b4c483d0_Eval> _self_, jule::Ptr<_1b4b06557_SliceExpr> _84734_s, jule::Ptr<_1b4c7c90e_TypeKind> _84753_t, jule::Any _84771_first);
inline jule::Ptr<_1b4c466a8_Data> _1b4c522a7_evalSliceExpr(jule::Ptr<_1b4c483d0_Eval> _self_, jule::Ptr<_1b4b06557_SliceExpr> _88537_s);
inline void _1b4c5261a_checkIntegerIndexingByData(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4c466a8_Data>* _92050_d, jule::Ptr<_1b4ad5712_Token> _92064_token);
inline void _1b4c52a38_indexingPtr(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4c466a8_Data>* _93235_d, jule::Ptr<_1b4c466a8_Data>* _93250_index, jule::Ptr<_1b4b06eb4_IndexingExpr>* _93269_i);
inline void _1b4c52e56_indexingArr(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4c466a8_Data>* _94835_d, jule::Ptr<_1b4c466a8_Data>* _94850_index, jule::Ptr<_1b4b06eb4_IndexingExpr>* _94869_i);
inline void _1b4c53374_indexingSlc(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4c466a8_Data>* _95835_d, jule::Ptr<_1b4c466a8_Data>* _95850_index, jule::Ptr<_1b4b06eb4_IndexingExpr>* _95869_i);
inline void _1b4c53792_indexingMap(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4c466a8_Data>* _98135_d, jule::Ptr<_1b4c466a8_Data>* _98150_index, jule::Ptr<_1b4b06eb4_IndexingExpr>* _98169_i);
inline void _1b4c53bb0_indexingStr(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4c466a8_Data>* _99735_d, jule::Ptr<_1b4c466a8_Data>* _99750_index, jule::Ptr<_1b4b06eb4_IndexingExpr>* _99769_i);
inline void _1b4c540cd_toIndexing(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4c466a8_Data>* _102634_d, jule::Ptr<_1b4c466a8_Data>* _102649_index, jule::Ptr<_1b4b06eb4_IndexingExpr>* _102668_i);
inline jule::Bool _1b4c54584_pushGenericsFromExprSubIdent(jule::Ptr<_1b4c483d0_Eval> _self_, jule::Ptr<_1b4b03114_SubIdentExpr>* _105153_sexpr, jule::Slice<jule::Ptr<_1b4aeabbc_TypeDecl>>* _105214_generics, jule::Ptr<_1b4b00001_Expr>* _105242_expr);
inline jule::Bool _1b4c54980_pushGenericsFromData(jule::Ptr<_1b4c483d0_Eval> _self_, jule::Slice<jule::Ptr<_1b4aeabbc_TypeDecl>>* _106245_generics, jule::Ptr<_1b4b00001_Expr>* _106273_expr);
inline void _1b4c54ce3_evalIdentDeclFromIndexing(jule::Ptr<_1b4c483d0_Eval> _self_, jule::Ptr<_1b4c466a8_Data>* _113250_d, jule::Ptr<_1b4b06eb4_IndexingExpr>* _113265_i);
inline jule::Bool _1b4c55299_checkGenericFn(jule::Ptr<_1b4c483d0_Eval> _self_, jule::Ptr<_1b4b39865_FnIns>* _117539_f, jule::Ptr<_1b4ad5712_Token>* _117555_et, jule::Any* _117572_model);
inline void _1b4c5560c_evalFnGenericFromIndexing(jule::Ptr<_1b4c483d0_Eval> _self_, jule::Ptr<_1b4c466a8_Data>* _120450_d, jule::Ptr<_1b4b06eb4_IndexingExpr>* _120465_i);
inline jule::Ptr<_1b4c466a8_Data> _1b4c5594d_evalIndexing(jule::Ptr<_1b4c483d0_Eval> _self_, jule::Ptr<_1b4b06eb4_IndexingExpr> _124336_i);
inline __jule_tuple_x_1b4c466a8_Data__jule_tuple_x_1b4c466a8_Data _1b4c55c8e_evalSlicingExprs(jule::Ptr<_1b4c483d0_Eval> _self_, jule::Ptr<_1b4b07624_SlicingExpr>* _129741_s);
inline void _1b4c56047_slicingArr(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4c466a8_Data>* _133330_d);
inline void _1b4c56465_slicingStr(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4c466a8_Data>* _134830_d, jule::Ptr<_1b4c466a8_Data>* _134841_l, jule::Ptr<_1b4c466a8_Data>* _134852_r);
inline void _1b4c5693d_checkSlicing(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4c466a8_Data>* _138636_d, jule::Ptr<_1b4c466a8_Data>* _138647_l, jule::Ptr<_1b4c466a8_Data>* _138658_r, jule::Ptr<_1b4b07624_SlicingExpr>* _138669_s);
inline jule::Ptr<_1b4c466a8_Data> _1b4c56c7e_evalSlicing(jule::Ptr<_1b4c483d0_Eval> _self_, jule::Ptr<_1b4b07624_SlicingExpr> _140535_s);
inline void _1b4c5719c_castPtr(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4c7c90e_TypeKind> _144230_t, jule::Ptr<_1b4c466a8_Data> _144248_d, jule::Ptr<_1b4ad5712_Token> _144258_errorToken);
inline void _1b4c575ba_castStruct(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4c7c90e_TypeKind> _146433_t, jule::Ptr<_1b4c466a8_Data> _146451_d, jule::Ptr<_1b4ad5712_Token> _146461_errorToken);
inline void _1b4c579d8_castRef(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4c7c90e_TypeKind> _148130_t, jule::Ptr<_1b4c466a8_Data> _148148_d, jule::Ptr<_1b4ad5712_Token> _148158_errorToken);
inline void _1b4c57e06_castSlc(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4c7c90e_TypeKind> _150430_t, jule::Ptr<_1b4c466a8_Data> _150448_d, jule::Ptr<_1b4ad5712_Token> _150458_errorToken);
inline void _1b4c58269_castStr(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4c466a8_Data> _155930_d, jule::Ptr<_1b4ad5712_Token> _155940_errorToken);
inline void _1b4c58687_castInt(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4c7c90e_TypeKind> _160630_t, jule::Ptr<_1b4c466a8_Data> _160648_d, jule::Ptr<_1b4ad5712_Token> _160658_errorToken);
inline void _1b4c58aa5_castNum(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4c7c90e_TypeKind> _165230_t, jule::Ptr<_1b4c466a8_Data> _165248_d, jule::Ptr<_1b4ad5712_Token> _165258_errorToken);
inline void _1b4c58ec3_castPrim(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4c7c90e_TypeKind> _168331_t, jule::Ptr<_1b4c466a8_Data> _168349_d, jule::Ptr<_1b4ad5712_Token> _168359_errorToken);
inline void _1b4c59336_castConstant(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4c7c90e_TypeKind>* _170136_t, jule::Ptr<_1b4c466a8_Data>* _170155_d);
inline void _1b4c59754_castTypeEnum(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4c7c90e_TypeKind>* _171036_t, jule::Ptr<_1b4c466a8_Data>* _171055_d, jule::Ptr<_1b4ad5712_Token>* _171070_errorToken);
inline void _1b4c59b72_castTypeEnumT(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4c7c90e_TypeKind>* _172037_t, jule::Ptr<_1b4c466a8_Data>* _172056_d, jule::Ptr<_1b4ad5712_Token>* _172071_errorToken);
inline jule::Ptr<_1b4c466a8_Data> _1b4c5a128_evalCastByTypeNData(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4c7c90e_TypeKind> _173042_t, jule::Ptr<_1b4c466a8_Data> _173060_d, jule::Ptr<_1b4ad5712_Token> _173074_errorToken);
inline jule::Ptr<_1b4c466a8_Data> _1b4c5a5ce_evalCastT(jule::Ptr<_1b4c483d0_Eval> _self_, jule::Ptr<_1b4c7c90e_TypeKind>* _180334_t, jule::Ptr<_1b4b00001_Expr>* _180353_e, jule::Ptr<_1b4ad5712_Token>* _180368_et);
inline jule::Ptr<_1b4c466a8_Data> _1b4c5a920_evalCast(jule::Ptr<_1b4c483d0_Eval> _self_, jule::Ptr<_1b4b02861_CastExpr> _182032_c);
inline jule::Ptr<_1b4c466a8_Data> _1b4c5ac61_evalNsSelection(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4b02c3a_NsSelectionExpr> _182934_s);
inline jule::Ptr<_1b4c466a8_Data> _1b4c5b217_evalStructLitExplicit(jule::Ptr<_1b4c483d0_Eval> _self_, jule::Ptr<_1b4b24641_StructIns> _185545_s, jule::Slice<jule::Ptr<_1b4b00001_Expr>> _185613_exprs, jule::Ptr<_1b4ad5712_Token> _185633_errorToken);
inline jule::Ptr<_1b4c466a8_Data> _1b4c5b558_evalStructLit(jule::Ptr<_1b4c483d0_Eval> _self_, jule::Ptr<_1b4b0504a_StructLit> _189337_lit);
inline _1b4c8e7bc_typeChecker _1b4c5b7de_typeChecker(_1b4c483d0_Eval* _self_);
inline jule::Ptr<_1b4c466a8_Data> _1b4c5bb30_evalType(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4aeabbc_TypeDecl> _192531_t);
inline void _1b4c5be93_callTypeFn(jule::Ptr<_1b4c483d0_Eval> _self_, jule::Ptr<_1b4b03c2a_FnCallExpr>* _193835_fc, jule::Ptr<_1b4c466a8_Data>* _193857_d);
inline void _1b4c5c306_callBuiltinFn(jule::Ptr<_1b4c483d0_Eval> _self_, jule::Ptr<_1b4b03c2a_FnCallExpr>* _196438_fc, jule::Ptr<_1b4c466a8_Data>* _196460_d);
inline void _1b4c5c669_checkFnOfConcurrentCall(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4b39865_FnIns>* _197643_f, jule::Ptr<_1b4ad5712_Token> _197654_errorToken);
inline void _1b4c5ca87_processExceptionalHandler(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4b39865_FnIns>* _199549_f, jule::Ptr<_1b4b03c2a_FnCallExpr>* _199565_fc, jule::Ptr<_1b4c466a8_Data>* _199587_d);
inline void _1b4c5cdea_callFn(jule::Ptr<_1b4c483d0_Eval> _self_, jule::Ptr<_1b4b03c2a_FnCallExpr>* _202231_fc, jule::Ptr<_1b4c466a8_Data>* _202253_d);
inline jule::Ptr<_1b4c466a8_Data> _1b4c5d23b_evalFnCall(jule::Ptr<_1b4c483d0_Eval> _self_, jule::Ptr<_1b4b03c2a_FnCallExpr> _217434_fc);
inline jule::Ptr<_1b4c466a8_Data> _1b4c5d637_evalEnumStatic(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4b4c449_Enum> _220737_enm, jule::Ptr<_1b4ad5712_Token> _220753_ident);
inline jule::Ptr<_1b4c466a8_Data> _1b4c5da33_evalTypeEnumStatic(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4b4db54_TypeEnum> _221541_enm, jule::Ptr<_1b4ad5712_Token> _221557_ident);
inline jule::Ptr<_1b4c466a8_Data> _1b4c5de2e_evalStructStatic(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4b24641_StructIns> _223839_s, jule::Ptr<_1b4ad5712_Token> _223854_ident);
inline jule::Ptr<_1b4c466a8_Data> _1b4c5e3d5_evalTraitSubIdent(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4c466a8_Data> _227340_d, jule::Ptr<_1b4b49c3d_Trait> _227354_trt, jule::Ptr<_1b4ad5712_Token> _227371_ident);
inline jule::Ptr<_1b4c466a8_Data> _1b4c5e946_evalStructSubIdentField(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4c466a8_Data>* _229347_d, jule::Ptr<_1b4b24641_StructIns>* _229362_s, jule::Ptr<_1b4ad5712_Token>* _229382_tok, jule::Ptr<_1b4b23a91_FieldIns>* _2293100_f);
inline jule::Ptr<_1b4c466a8_Data> _1b4c5eea7_evalStructSubIdent(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4c466a8_Data> _231641_d, jule::Ptr<_1b4b24641_StructIns> _231655_s, jule::Ptr<_1b4b03114_SubIdentExpr> _231674_si, jule::Bool _231693_ref);
inline jule::Ptr<_1b4c466a8_Data> _1b4c602e8_evalIntTypeStatic(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4ad5712_Token> _235736_ident);
inline jule::Ptr<_1b4c466a8_Data> _1b4c60639_evalUintTypeStatic(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4ad5712_Token> _238437_ident);
inline jule::Ptr<_1b4c466a8_Data> _1b4c6097a_evalI8TypeStatic(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4ad5712_Token> _240235_ident);
inline jule::Ptr<_1b4c466a8_Data> _1b4c60cbb_evalI16TypeStatic(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4ad5712_Token> _243136_ident);
inline jule::Ptr<_1b4c466a8_Data> _1b4c6110c_evalI32TypeStatic(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4ad5712_Token> _246036_ident);
inline jule::Ptr<_1b4c466a8_Data> _1b4c6144d_evalI64TypeStatic(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4ad5712_Token> _248936_ident);
inline jule::Ptr<_1b4c466a8_Data> _1b4c6178e_evalU8TypeStatic(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4ad5712_Token> _251835_ident);
inline jule::Ptr<_1b4c466a8_Data> _1b4c61ad0_evalU16TypeStatic(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4ad5712_Token> _253736_ident);
inline jule::Ptr<_1b4c466a8_Data> _1b4c61e21_evalU32TypeStatic(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4ad5712_Token> _255636_ident);
inline jule::Ptr<_1b4c466a8_Data> _1b4c62262_evalU64TypeStatic(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4ad5712_Token> _257536_ident);
inline jule::Ptr<_1b4c466a8_Data> _1b4c625a3_evalF32TypeStatic(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4ad5712_Token> _259436_ident);
inline jule::Ptr<_1b4c466a8_Data> _1b4c628e4_evalF64TypeStatic(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4ad5712_Token> _263336_ident);
inline jule::Ptr<_1b4c466a8_Data> _1b4c62ce0_evalPrimStatic(_1b4c483d0_Eval* _self_, jule::Str _267233_kind, jule::Ptr<_1b4ad5712_Token> _267244_ident);
inline jule::Ptr<_1b4c466a8_Data> _1b4c631db_evalTypeStatic(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4c466a8_Data> _270437_d, jule::Ptr<_1b4b03114_SubIdentExpr> _270451_si);
inline jule::Ptr<_1b4c466a8_Data> _1ab7d1b97_comptimeObjSubIdent(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4b615d4_comptimeTypeInfo>* _272057_ct, jule::Ptr<_1b4c466a8_Data>* _272077_d, jule::Ptr<_1b4b03114_SubIdentExpr>* _272088_si);
inline jule::Ptr<_1b4c466a8_Data> _1ab7d62ea_comptimeObjSubIdent(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4b5277e_comptimeStructField>* _272057_ct, jule::Ptr<_1b4c466a8_Data>* _272077_d, jule::Ptr<_1b4b03114_SubIdentExpr>* _272088_si);
inline jule::Ptr<_1b4c466a8_Data> _1ab7da909_comptimeObjSubIdent(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4b58ce6_comptimeEnumField>* _272057_ct, jule::Ptr<_1b4c466a8_Data>* _272077_d, jule::Ptr<_1b4b03114_SubIdentExpr>* _272088_si);
inline jule::Ptr<_1b4c466a8_Data> _1ab7e005c_comptimeObjSubIdent(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4b5b788_comptimeParam>* _272057_ct, jule::Ptr<_1b4c466a8_Data>* _272077_d, jule::Ptr<_1b4b03114_SubIdentExpr>* _272088_si);
inline jule::Ptr<_1b4c466a8_Data> _1ab7e47ae_comptimeObjSubIdent(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4b55a3a_comptimeStatic>* _272057_ct, jule::Ptr<_1b4c466a8_Data>* _272077_d, jule::Ptr<_1b4b03114_SubIdentExpr>* _272088_si);
inline jule::Ptr<_1b4c466a8_Data> _1ab7e8dbd_comptimeObjSubIdent(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4b67ae6_comptimeValue>* _272057_ct, jule::Ptr<_1b4c466a8_Data>* _272077_d, jule::Ptr<_1b4b03114_SubIdentExpr>* _272088_si);
inline jule::Ptr<_1b4c466a8_Data> _1ab7ed4cc_comptimeObjSubIdent(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4b6ba40_comptimeFile>* _272057_ct, jule::Ptr<_1b4c466a8_Data>* _272077_d, jule::Ptr<_1b4b03114_SubIdentExpr>* _272088_si);
inline __jule_tuple_x_1b4c466a8_Data__jule_tuple_bool _1b4c63a8d_tryComptimeObjSubIdent(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4c466a8_Data>* _272846_d, jule::Ptr<_1b4b03114_SubIdentExpr> _272860_si);
inline jule::Ptr<_1b4c466a8_Data> _1b4c63e89_evalObjSubIdent(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4c466a8_Data> _275638_d, jule::Ptr<_1b4b03114_SubIdentExpr> _275652_si);
inline jule::Ptr<_1b4c466a8_Data> _1b4c642ca_evalSubIdent(jule::Ptr<_1b4c483d0_Eval> _self_, jule::Ptr<_1b4b03114_SubIdentExpr> _280036_si);
inline jule::Ptr<_1b4c466a8_Data> _1b4c6461b_evalTuple(jule::Ptr<_1b4c483d0_Eval> _self_, jule::Ptr<_1b4b00ae5_TupleExpr> _281433_tup);
inline jule::Ptr<_1b4c466a8_Data> _1b4c64a17_evalMap(jule::Ptr<_1b4c483d0_Eval> _self_, jule::Ptr<_1b4c8b17b_Map> _284331_m, jule::Ptr<_1b4b05501_BraceLit> _284344_lit);
inline jule::Ptr<_1b4c466a8_Data> _1b4c64d58_evalBraceLit(jule::Ptr<_1b4c483d0_Eval> _self_, jule::Ptr<_1b4b05501_BraceLit> _289236_lit);
inline jule::Ptr<_1b4c466a8_Data> _1b4c65199_evalAnonFunc(jule::Ptr<_1b4c483d0_Eval> _self_, jule::Ptr<_1b4b126d9_FnDecl> _290736_decl);
inline jule::Ptr<_1b4c466a8_Data> _1b4c654da_evalBinary(jule::Ptr<_1b4c483d0_Eval> _self_, jule::Ptr<_1b4b035ba_BinaryExpr> _294534_op);
inline jule::Ptr<_1b4c466a8_Data> _1b4c6582b_evalExprKind(jule::Ptr<_1b4c483d0_Eval> _self_, jule::Any _296036_kind);
inline jule::Ptr<_1b4c466a8_Data> _1b4c65b6c_eval1(jule::Ptr<_1b4c483d0_Eval> _self_, jule::Ptr<_1b4b00001_Expr> _300829_expr);
inline jule::Ptr<_1b4c466a8_Data> _1b4c6ad1a_eval(jule::Ptr<_1b4c483d0_Eval> _self_, jule::Ptr<_1b4b00001_Expr> _303628_expr);
inline jule::Ptr<_1b4c466a8_Data> _1b4c6b15b_evalExpr1(jule::Ptr<_1b4c483d0_Eval> _self_, jule::Ptr<_1b4b00001_Expr> _305133_expr);
inline jule::Ptr<_1b4c466a8_Data> _1b4c6b49c_evalExpr(jule::Ptr<_1b4c483d0_Eval> _self_, jule::Ptr<_1b4b00001_Expr> _306732_expr);
inline _1b4c6b964_unaryEval static__1b4c6bda4_new(jule::Ptr<_1b4c483d0_Eval> _308823_e);
inline void _1b4c6c0a2_minus(_1b4c6b964_unaryEval* _self_);
inline void _1b4c6c2a0_plus(_1b4c6b964_unaryEval* _self_);
inline void _1b4c6c49d_caret(_1b4c6b964_unaryEval* _self_);
inline void _1b4c6c69b_excl(_1b4c6b964_unaryEval* _self_);
inline void _1b4c6c899_star(_1b4c6b964_unaryEval* _self_);
inline void _1b4c6ca97_amper(_1b4c6b964_unaryEval* _self_);
inline void _1b4c6cc95_typeDecl(_1b4c6b964_unaryEval* _self_);
inline void _1b4c6ce93_evalData(_1b4c6b964_unaryEval* _self_);
inline jule::Ptr<_1b4c466a8_Data> _1b4c6d2d4_eval(_1b4c6b964_unaryEval* _self_, jule::Ptr<_1b4b020ad_UnaryExpr> _334827_u);
inline _1b4c6d900_binaryEval static__1b4c6dea5_newPlain(jule::Ptr<_1b4c483d0_Eval> _339628_e);
inline _1b4c6d900_binaryEval static__1b4c6e329_new(jule::Ptr<_1b4c483d0_Eval> _340223_e, jule::Ptr<_1b4ad5712_Token> _340237_op);
inline jule::Bool _1b4c6e5b0_checkTypeCompatibility(_1b4c6d900_binaryEval* _self_);
inline jule::Bool _1b4c6e846_checkStructCommonOperatorCompatibility(_1b4c6d900_binaryEval* _self_);
inline jule::Ptr<_1b4c466a8_Data> _1b4c6eacc_evalComptimeTypeInfo(_1b4c6d900_binaryEval* _self_);
inline jule::Ptr<_1b4c466a8_Data> _1b4c6ed63_evalNil(_1b4c6d900_binaryEval* _self_);
inline jule::Ptr<_1b4c466a8_Data> _1b4c700e9_evalEnum(_1b4c6d900_binaryEval* _self_);
inline jule::Ptr<_1b4c466a8_Data> _1b4c70380_evalTypeEnum(_1b4c6d900_binaryEval* _self_);
inline jule::Ptr<_1b4c466a8_Data> _1b4c70616_evalSptr(_1b4c6d900_binaryEval* _self_);
inline jule::Ptr<_1b4c466a8_Data> _1b4c7089c_evalPtr(_1b4c6d900_binaryEval* _self_);
inline jule::Ptr<_1b4c466a8_Data> _1b4c70b33_evalArr(_1b4c6d900_binaryEval* _self_);
inline jule::Ptr<_1b4c466a8_Data> _1b4c70db9_evalSlc(_1b4c6d900_binaryEval* _self_);
inline jule::Ptr<_1b4c466a8_Data> _1b4c71150_evalStruct(_1b4c6d900_binaryEval* _self_);
inline jule::Ptr<_1b4c466a8_Data> _1b4c713d6_evalTrait(_1b4c6d900_binaryEval* _self_);
inline jule::Ptr<_1b4c466a8_Data> _1b4c7166c_evalAny(_1b4c6d900_binaryEval* _self_);
inline jule::Ptr<_1b4c466a8_Data> _1b4c71903_evalBool(_1b4c6d900_binaryEval* _self_);
inline jule::Ptr<_1b4c466a8_Data> _1b4c71b89_evalStr(_1b4c6d900_binaryEval* _self_);
inline void _1b4c71d87_setTypeToGreater(_1b4c6d900_binaryEval* _self_);
inline void _1b4c72140_checkModData(_1b4c6d900_binaryEval* _self_, jule::Ptr<_1b4c466a8_Data>* _382336_d);
inline void _1b4c7233d_mod(_1b4c6d900_binaryEval* _self_);
inline jule::Bool _1b4c72739_numbersAreCompatibile(_1b4c6d900_binaryEval* _self_, jule::Str* _384537_lk, jule::Str* _384547_rk);
inline jule::Ptr<_1b4c466a8_Data> _1b4c729c0_evalFloat(_1b4c6d900_binaryEval* _self_);
inline jule::Ptr<_1b4c466a8_Data> _1b4c72c56_evalInt(_1b4c6d900_binaryEval* _self_);
inline jule::Ptr<_1b4c466a8_Data> _1b4c72edc_evalPrim(_1b4c6d900_binaryEval* _self_);
inline void _1b4c731da_checkSpecialCases(_1b4c6d900_binaryEval* _self_);
inline jule::Ptr<_1b4c466a8_Data> _1b4c73471_evalOp(_1b4c6d900_binaryEval* _self_);
inline void _1b4c73729_evalConst(_1b4c6d900_binaryEval* _self_, jule::Ptr<_1b4c466a8_Data>* _408333_d);
inline void _1b4c739d2_checkData(_1b4c6d900_binaryEval* _self_, jule::Ptr<_1b4c466a8_Data>* _416133_d);
inline void _1b4c73bd0_checkDatas(_1b4c6d900_binaryEval* _self_);
inline void _1b4c73e88_setModel(_1b4c6d900_binaryEval* _self_, jule::Ptr<_1b4c466a8_Data>* _417332_d);
inline void _1b4c74241_postEval(_1b4c6d900_binaryEval* _self_, jule::Ptr<_1b4c466a8_Data>* _420032_d);
inline jule::Ptr<_1b4c466a8_Data> _1b4c7463c_solveExplicit(_1b4c6d900_binaryEval* _self_, jule::Ptr<_1b4c466a8_Data>* _420537_l, jule::Ptr<_1b4c466a8_Data>* _420552_r);
inline jule::Ptr<_1b4c466a8_Data> _1b4c7497d_eval(_1b4c6d900_binaryEval* _self_, jule::Ptr<_1b4b035ba_BinaryExpr>* _422528_op);
inline jule::Str _1b4c7ccc7_Str(_1b4c7c90e_TypeKind* _self_);
inline jule::Bool _1b4c7d118_Equal(jule::Ptr<_1b4c7c90e_TypeKind> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _9021_other);
inline jule::Bool _1b4c7d756_Binded(_1b4c7c90e_TypeKind* _self_);
inline jule::Bool _1b4c7d9dc_IsNil(_1b4c7c90e_TypeKind* _self_);
inline jule::Bool _1b4c7dc73_Void(_1b4c7c90e_TypeKind* _self_);
inline jule::Bool _1b4c7e009_Comparable(_1b4c7c90e_TypeKind* _self_);
inline jule::Bool _1b4c7e290_Mutable(_1b4c7c90e_TypeKind* _self_);
inline jule::Bool _1b4c7e526_Ordered(_1b4c7c90e_TypeKind* _self_);
inline jule::Bool _1b4c7e7ac_NilCompatible(_1b4c7c90e_TypeKind* _self_);
inline jule::Bool _1b4c7ea43_PerformsRC(_1b4c7c90e_TypeKind* _self_);
inline jule::Bool _1b4c7ecc9_Variadicable(_1b4c7c90e_TypeKind* _self_);
inline jule::Ptr<_1b4c854d8_Prim> _1b4c80060_Prim(_1b4c7c90e_TypeKind* _self_);
inline jule::Ptr<_1b4c89014_Sptr> _1b4c802e6_Sptr(_1b4c7c90e_TypeKind* _self_);
inline jule::Ptr<_1b4c8c7cb_Ptr> _1b4c8057c_Ptr(_1b4c7c90e_TypeKind* _self_);
inline jule::Ptr<_1b4b4c449_Enum> _1b4c80813_Enum(_1b4c7c90e_TypeKind* _self_);
inline jule::Ptr<_1b4b4db54_TypeEnum> _1b4c80a99_TypeEnum(_1b4c7c90e_TypeKind* _self_);
inline jule::Ptr<_1b4c8bd08_Arr> _1b4c80d30_Arr(_1b4c7c90e_TypeKind* _self_);
inline jule::Ptr<_1b4c899d7_Slc> _1b4c810b6_Slc(_1b4c7c90e_TypeKind* _self_);
inline jule::Ptr<_1b4b39865_FnIns> _1b4c8134c_Fn(_1b4c7c90e_TypeKind* _self_);
inline jule::Ptr<_1b4b24641_StructIns> _1b4c815d3_Struct(_1b4c7c90e_TypeKind* _self_);
inline jule::Ptr<_1b4b49c3d_Trait> _1b4c81869_Trait(_1b4c7c90e_TypeKind* _self_);
inline jule::Ptr<_1b4c8b17b_Map> _1b4c81b00_Map(_1b4c7c90e_TypeKind* _self_);
inline jule::Ptr<_1b4c8a5cb_Tuple> _1b4c81d86_Tup(_1b4c7c90e_TypeKind* _self_);
inline jule::Bool _1b4c8211c_comptime(_1b4c7c90e_TypeKind* _self_);
inline jule::Ptr<_1b4b54440_comptimeStructFields> _1b4c823a3_comptimeStructFields(_1b4c7c90e_TypeKind* _self_);
inline jule::Ptr<_1b4b5277e_comptimeStructField> _1b4c82639_comptimeStructField(_1b4c7c90e_TypeKind* _self_);
inline jule::Ptr<_1b4b5a18d_comptimeEnumFields> _1b4c828c0_comptimeEnumFields(_1b4c7c90e_TypeKind* _self_);
inline jule::Ptr<_1b4b58ce6_comptimeEnumField> _1b4c82b56_comptimeEnumField(_1b4c7c90e_TypeKind* _self_);
inline jule::Ptr<_1b4b5d922_comptimeParams> _1b4c82ddc_comptimeParams(_1b4c7c90e_TypeKind* _self_);
inline jule::Ptr<_1b4b5b788_comptimeParam> _1b4c83173_comptimeParam(_1b4c7c90e_TypeKind* _self_);
inline jule::Ptr<_1b4b51cab_comptimeRange> _1b4c83409_comptimeRange(_1b4c7c90e_TypeKind* _self_);
inline jule::Ptr<_1b4b5eed9_comptimeTypeInfos> _1b4c83690_comptimeTypeInfos(_1b4c7c90e_TypeKind* _self_);
inline jule::Ptr<_1b4b615d4_comptimeTypeInfo> _1b4c83926_comptimeTypeInfo(_1b4c7c90e_TypeKind* _self_);
inline jule::Ptr<_1b4b576eb_comptimeStatics> _1b4c83bac_comptimeStatics(_1b4c7c90e_TypeKind* _self_);
inline jule::Ptr<_1b4b55a3a_comptimeStatic> _1b4c83e43_comptimeStatic(_1b4c7c90e_TypeKind* _self_);
inline jule::Ptr<_1b4b67ae6_comptimeValue> _1b4c841c9_comptimeValue(_1b4c7c90e_TypeKind* _self_);
inline jule::Ptr<_1b4b6ba40_comptimeFile> _1b4c84460_comptimeFile(_1b4c7c90e_TypeKind* _self_);
inline jule::Ptr<_1b4b6a445_comptimeFiles> _1b4c846e6_comptimeFiles(_1b4c7c90e_TypeKind* _self_);
inline jule::Bool _1b4c84e55_checked(_1b4c84ad1_TypeSymbol* _self_);
inline jule::Str _1b4c85829_Str(_1b4c854d8_Prim* _self_);
inline jule::Bool _1b4c85b6a_Equal(jule::Ptr<_1b4c854d8_Prim> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _50821_other);
inline jule::Bool _1b4c86110_IsConstraint(_1b4c854d8_Prim* _self_);
inline jule::Bool _1b4c86396_IsI8(_1b4c854d8_Prim* _self_);
inline jule::Bool _1b4c8662c_IsI16(_1b4c854d8_Prim* _self_);
inline jule::Bool _1b4c868b3_IsI32(_1b4c854d8_Prim* _self_);
inline jule::Bool _1b4c86b49_IsI64(_1b4c854d8_Prim* _self_);
inline jule::Bool _1b4c86dd0_IsU8(_1b4c854d8_Prim* _self_);
inline jule::Bool _1b4c87166_IsU16(_1b4c854d8_Prim* _self_);
inline jule::Bool _1b4c873ec_IsU32(_1b4c854d8_Prim* _self_);
inline jule::Bool _1b4c87683_IsU64(_1b4c854d8_Prim* _self_);
inline jule::Bool _1b4c87919_IsF32(_1b4c854d8_Prim* _self_);
inline jule::Bool _1b4c87ba0_IsF64(_1b4c854d8_Prim* _self_);
inline jule::Bool _1b4c87e36_IsInt(_1b4c854d8_Prim* _self_);
inline jule::Bool _1b4c881bc_IsUint(_1b4c854d8_Prim* _self_);
inline jule::Bool _1b4c88453_IsUintptr(_1b4c854d8_Prim* _self_);
inline jule::Bool _1b4c886d9_IsBool(_1b4c854d8_Prim* _self_);
inline jule::Bool _1b4c88970_IsStr(_1b4c854d8_Prim* _self_);
inline jule::Bool _1b4c88c06_IsAny(_1b4c854d8_Prim* _self_);
inline jule::Str _1b4c89388_Str(_1b4c89014_Sptr* _self_);
inline jule::Bool _1b4c896c9_Equal(jule::Ptr<_1b4c89014_Sptr> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _58521_other);
inline jule::Str _1b4c89e6b_Str(_1b4c899d7_Slc* _self_);
inline jule::Bool _1b4c8a2ac_Equal(jule::Ptr<_1b4c899d7_Slc> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _60421_other);
inline jule::Str _1b4c8a950_Str(_1b4c8a5cb_Tuple* _self_);
inline jule::Bool _1b4c8ac91_Equal(jule::Ptr<_1b4c8a5cb_Tuple> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _63321_other);
inline jule::Str _1b4c8b500_Str(_1b4c8b17b_Map* _self_);
inline jule::Bool _1b4c8b841_Equal(jule::Ptr<_1b4c8b17b_Map> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _67021_other);
inline jule::Str _1b4c8c17c_Str(_1b4c8bd08_Arr* _self_);
inline jule::Bool _1b4c8c4bd_Equal(jule::Ptr<_1b4c8bd08_Arr> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _69821_other);
inline jule::Str _1b4c8cb50_Str(_1b4c8c7cb_Ptr* _self_);
inline jule::Bool _1b4c8ce91_Equal(jule::Ptr<_1b4c8c7cb_Ptr> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _72221_other);
inline jule::Bool _1b4c8d315_IsUnsafe(_1b4c8c7cb_Ptr* _self_);
inline void _1b4c90009_pushErr(_1b4c8e7bc_typeChecker* _self_, jule::Ptr<_1b4ad5712_Token> _81226_token, jule::Str _81241_fmt, jule::Slice<jule::Any> _81254_args);
inline void _1b4c90207_allowBuiltin(_1b4c8e7bc_typeChecker* _self_);
inline void _1b4c90405_disallowBuiltin(_1b4c8e7bc_typeChecker* _self_);
inline void _1ab9e452a_pushReference(_1b4c8e7bc_typeChecker* _self_, jule::Ptr<_1b4b24641_StructIns>* _82440_t);
inline void _1ab9e6e23_pushReference(_1b4c8e7bc_typeChecker* _self_, jule::Ptr<_1b4b49c3d_Trait>* _82440_t);
inline void _1b4c90966_pushReferenceByKind(_1b4c8e7bc_typeChecker* _self_, jule::Ptr<_1b4c7c90e_TypeKind>* _83443_k);
inline void _1b4c90d84_pushCycleError(_1b4c8e7bc_typeChecker* _self_, jule::Any _84529_def1, jule::Any _84540_def2, _1cb1d27a9_StrBuilder* _84556_message);
inline jule::Bool _1b4c91280_checkCrossCycle(_1b4c8e7bc_typeChecker* _self_, jule::Any _86730_decl, _1cb1d27a9_StrBuilder* _86746_message);
inline jule::Bool _1b4c9167b_checkIllegalCycles(_1b4c8e7bc_typeChecker* _self_, jule::Ptr<_1b4aeb2c7_IdentTypeDecl>* _90138_ident, jule::Any _90165_decl);
inline jule::Trait _1b4c91a77_fromTypeAlias(_1b4c8e7bc_typeChecker* _self_, jule::Ptr<_1b4aeb2c7_IdentTypeDecl>* _95133_decl, jule::Ptr<_1b4c7bb1c_TypeAlias>* _95160_ta);
inline jule::Ptr<_1b4b4c449_Enum> _1b4c91e73_fromEnum(_1b4c8e7bc_typeChecker* _self_, jule::Ptr<_1b4aeb2c7_IdentTypeDecl>* _102528_decl, jule::Ptr<_1b4b4c449_Enum>* _102555_e);
inline jule::Ptr<_1b4b4db54_TypeEnum> _1b4c9236e_fromTypeEnum(_1b4c8e7bc_typeChecker* _self_, jule::Ptr<_1b4aeb2c7_IdentTypeDecl>* _103732_decl, jule::Ptr<_1b4b4db54_TypeEnum>* _103759_e);
inline jule::Ptr<_1b4b49c3d_Trait> _1b4c9276a_fromTrait(_1b4c8e7bc_typeChecker* _self_, jule::Ptr<_1b4aeb2c7_IdentTypeDecl>* _104929_decl, jule::Ptr<_1b4b49c3d_Trait>* _104956_t);
inline jule::Bool _1b4c92b66_checkStructIns(_1b4c8e7bc_typeChecker* _self_, jule::Ptr<_1b4b24641_StructIns>* _106238_ins, jule::Ptr<_1b4ad5712_Token>* _106260_errorToken);
inline void _1b4c92e1e_appendUsedStructReference(_1b4c8e7bc_typeChecker* _self_, jule::Ptr<_1b4b218b3_Struct>* _108349_s);
inline jule::Ptr<_1b4b24641_StructIns> _1b4c9331a_buildStructInstance(_1b4c8e7bc_typeChecker* _self_, jule::Ptr<_1b4aeb2c7_IdentTypeDecl>* _109643_decl, jule::Ptr<_1b4b218b3_Struct>* _109670_s);
inline jule::Ptr<_1b4b24641_StructIns> _1b4c93716_fromStruct(_1b4c8e7bc_typeChecker* _self_, jule::Ptr<_1b4aeb2c7_IdentTypeDecl>* _114434_decl, jule::Ptr<_1b4b218b3_Struct>* _114461_s);
inline jule::Trait _1b4c93a57_getDef(_1b4c8e7bc_typeChecker* _self_, jule::Ptr<_1b4aeb2c7_IdentTypeDecl>* _120230_decl);
inline jule::Trait _1b4c93d98_buildIdent(_1b4c8e7bc_typeChecker* _self_, jule::Ptr<_1b4aeb2c7_IdentTypeDecl> _126333_decl);
inline jule::Trait _1b4c941d9_buildSubIdent(_1b4c8e7bc_typeChecker* _self_, jule::Ptr<_1b4aeb591_SubIdentTypeDecl> _126736_decl);
inline jule::Ptr<_1b4c89014_Sptr> _1b4c9452a_buildSptrFromType(_1b4c8e7bc_typeChecker* _self_, jule::Ptr<_1b4c7c90e_TypeKind>* _130141_elem);
inline jule::Ptr<_1b4c89014_Sptr> _1b4c9486b_buildSptr(_1b4c8e7bc_typeChecker* _self_, jule::Ptr<_1b4aebc67_SptrTypeDecl> _132132_decl);
inline jule::Ptr<_1b4c8c7cb_Ptr> _1b4c94bac_buildPtrFromType(_1b4c8e7bc_typeChecker* _self_, jule::Ptr<_1b4c7c90e_TypeKind>* _133040_elem);
inline jule::Ptr<_1b4c8c7cb_Ptr> _1b4c94eed_buildPtr(_1b4c8e7bc_typeChecker* _self_, jule::Ptr<_1b4aec6e6_PtrTypeDecl> _134531_decl);
inline jule::Ptr<_1b4c899d7_Slc> _1b4c9533e_buildSlc(_1b4c8e7bc_typeChecker* _self_, jule::Ptr<_1b4aec0ec_SlcTypeDecl> _136231_decl);
inline jule::Ptr<_1b4c8bd08_Arr> _1b4c95680_buildArr(_1b4c8e7bc_typeChecker* _self_, jule::Ptr<_1b4aece88_ArrTypeDecl> _138331_decl);
inline jule::Ptr<_1b4c8b17b_Map> _1b4c959c1_buildMap(_1b4c8e7bc_typeChecker* _self_, jule::Ptr<_1b4aed6d6_MapTypeDecl> _143231_decl);
inline jule::Ptr<_1b4c8a5cb_Tuple> _1b4c95d12_buildTuple(_1b4c8e7bc_typeChecker* _self_, jule::Ptr<_1b4aec3e9_TupleTypeDecl> _145633_decl);
inline jule::Bool _1b4c96153_checkFuncTypes(_1b4c8e7bc_typeChecker* _self_, jule::Ptr<_1b4b39865_FnIns>* _146938_f);
inline jule::Ptr<_1b4b39865_FnIns> _1b4c96494_buildFunc(_1b4c8e7bc_typeChecker* _self_, jule::Ptr<_1b4b126d9_FnDecl> _148732_decl);
inline jule::Trait _1b4c967d5_buildByNamespace(_1b4c8e7bc_typeChecker* _self_, jule::Ptr<_1b4aeb96a_NamespaceTypeDecl> _151739_decl);
inline jule::Ptr<_1b4c7c90e_TypeKind> _1b4c96b26_build(_1b4c8e7bc_typeChecker* _self_, jule::Any* _154129_declKind);
inline jule::Ptr<_1b4c7c90e_TypeKind> _1b4c96e67_checkDecl(_1b4c8e7bc_typeChecker* _self_, jule::Ptr<_1b4aeabbc_TypeDecl>* _162933_decl);
inline jule::Bool static__1b4c978b3_prim(jule::Str* _165621_ident, jule::Ptr<_1b4c854d8_Prim> _165633_t);
inline jule::Bool static__1b4c97c37_exist(jule::Str* _166022_ident, jule::Ptr<_1b4c7c90e_TypeKind>* _166039_k);
inline void _1b577007c_stop(_1b576e90b_scopeParser* _self_);
inline jule::Bool _1b5770313_stopped(_1b576e90b_scopeParser* _self_);
inline jule::Bool _1b5770599_finished(_1b576e90b_scopeParser* _self_);
inline jule::Bool _1b5770830_isLastSt(_1b576e90b_scopeParser* _self_);
inline void _1b5770b93_pushErr(_1b576e90b_scopeParser* _self_, jule::Ptr<_1b4ad5712_Token> _18826_token, jule::Str _18841_fmt);
inline void _1b5771006_pushSuggestion(_1b576e90b_scopeParser* _self_, jule::Str _19333_fmt, jule::Slice<jule::Any> _19346_args);
inline void _1b57712ae_insertAsNext(_1b576e90b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _19736_tokens);
inline jule::Ptr<_1b576e06a_stmt> _1b5771545_next(_1b576e90b_scopeParser* _self_);
inline jule::Ptr<_1b4b10a4a_ScopeTree> _1b5771941_buildScope(_1b576e90b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _20734_tokens, jule::Ptr<_1b4ad5712_Token> _20756_end);
inline jule::Ptr<_1b4b13894_VarDecl> _1b5771c82_buildVarSt(_1b576e90b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _21834_tokens);
inline jule::Ptr<_1b4b13c6d_RetSt> _1b57720c3_buildRetSt(_1b576e90b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _22433_tokens);
inline jule::Ptr<_1b4b144dd_Iter> _1b5772414_buildWhileNextIter(_1b576e90b_scopeParser* _self_, jule::Ptr<_1b576e06a_stmt>* _23542_s);
inline jule::Ptr<_1b4b14d18_WhileKind> _1b5772755_buildWhileIterKind(_1b576e90b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _28042_tokens);
inline jule::Slice<jule::Slice<jule::Ptr<_1b4ad5712_Token>>> _1b5772a96_getRangeKindKeysTokens(_1b576e90b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _28646_toks);
inline jule::Ptr<_1b4b13894_VarDecl> _1b5772dd7_buildRangeKindKey(_1b576e90b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _29241_tokens);
inline jule::Slice<jule::Ptr<_1b4b13894_VarDecl>> _1b5773228_buildRangeKindKeys(_1b576e90b_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1b4ad5712_Token>>>* _31842_parts);
inline void _1b577358b_setupRangeKindKeysPlain(_1b576e90b_scopeParser* _self_, jule::Ptr<_1b4b15720_RangeKind>* _32647_rng, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _32669_tokens);
inline void _1b57738ee_setupRangeKindKeysExplicit(_1b576e90b_scopeParser* _self_, jule::Ptr<_1b4b15720_RangeKind>* _34150_rng, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _34172_tokens);
inline void _1b5773c62_setupRangeKindKeys(_1b576e90b_scopeParser* _self_, jule::Ptr<_1b4b15720_RangeKind>* _35042_rng, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _35064_tokens);
inline jule::Ptr<_1b4b15720_RangeKind> _1b5774218_buildRangeIterKind(_1b576e90b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _35842_var_tokens, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _35914_exprTokens, jule::Ptr<_1b4ad5712_Token>* _35941_inToken);
inline jule::Any _1b5774614_buildCommonIterKind(_1b576e90b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _37443_tokens, jule::Ptr<_1b4ad5712_Token>* _37462_err_tok);
inline jule::Ptr<_1b4b144dd_Iter> _1b5774955_buildCommonIter(_1b576e90b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _40138_tokens);
inline jule::Ptr<_1b4b144dd_Iter> _1b5774c96_buildIterSt(_1b576e90b_scopeParser* _self_, jule::Ptr<_1b576e06a_stmt>* _43135_st);
inline jule::Ptr<_1b4b15ae9_BreakSt> _1b57750d7_buildBreakSt(_1b576e90b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _43836_tokens);
inline jule::Ptr<_1b4b15ec3_ContSt> _1b5775428_buildContSt(_1b576e90b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _45635_tokens);
inline jule::Ptr<_1b4b16479_If> _1b5775769_buildIf(_1b576e90b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _47431_tokens);
inline jule::Ptr<_1b4b16853_Else> _1b5775aaa_buildElse(_1b576e90b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _50733_tokens);
inline jule::Ptr<_1b4b16d09_Conditional> _1b5775deb_buildIfElseChain(_1b576e90b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _53139_tokens);
inline jule::Ptr<_1b4b00001_Expr> _1b577623c_buildCoCallSt(_1b576e90b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _55436_tokens);
inline jule::Ptr<_1b4b0867a_GotoSt> _1b577657d_buildGotoSt(_1b576e90b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _57035_tokens);
inline jule::Ptr<_1b4b08977_FallSt> _1b57768be_buildFallSt(_1b576e90b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _59035_tokens);
inline jule::Ptr<_1b4b17546_TypeAliasDecl> _1b5776c10_buildTypeAliasSt(_1b576e90b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _60040_tokens);
inline void _1b57771d8_pushCaseExpr(_1b576e90b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _60635_tokens, jule::Ptr<_1b4ad5712_Token> _60657_token, jule::Bool _6079_typeMatch, jule::Slice<jule::Ptr<_1b4b00001_Expr>>* _60731_exprs);
inline __jule_tuple_sx_1b4b00001_Expr__jule_tuple_bool _1b577768e_buildCaseExprs(_1b576e90b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _62938_tokens, jule::Ptr<_1b4ad5712_Token>* _62961_colon, jule::Bool _62976_typeMatch);
inline jule::Ptr<_1b4b10a4a_ScopeTree> _1b57779d0_buildCaseScope(_1b576e90b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _67138_tokens);
inline __jule_tuple_x_1b4b179ec_Case__jule_tuple_bool _1b5777dcb_buildCase(_1b576e90b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _69833_tokens, jule::Bool _69851_typeMatch);
inline __jule_tuple_sx_1b4b179ec_Case__jule_tuple_x_1b4b16853_Else _1b57782c7_buildCases(_1b576e90b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _71333_tokens, jule::Bool _71351_typeMatch);
inline jule::Ptr<_1b4b18316_MatchCase> _1b5778618_buildMatchCase(_1b576e90b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _74737_tokens);
inline jule::Ptr<_1b4b10a4a_ScopeTree> _1b5778959_buildScopeSt(_1b576e90b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _78035_tokens);
inline jule::Ptr<_1b4b082a1_LabelSt> _1b5778c9a_buildLabelSt(_1b576e90b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _82336_tokens);
inline __jule_tuple__1b4b101ba_StmtData__jule_tuple_bool _1b57790db_buildIdSt(_1b576e90b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _83833_tokens);
inline jule::Ptr<_1b5789a8b_assignInfo> _1b577942c_buildAssignInfo(_1b576e90b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _85239_tokens);
inline jule::Ptr<_1b4b090d7_AssignLeft> _1b577976d_buildAssignL(_1b576e90b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _89736_tokens);
inline jule::Slice<jule::Ptr<_1b4b090d7_AssignLeft>> _1b5779aae_buildAssignLs(_1b576e90b_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1b4ad5712_Token>>>* _90837_parts);
inline __jule_tuple__1b4b101ba_StmtData__jule_tuple_bool _1b5779e00_buildPlainAssign(_1b576e90b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _91740_tokens);
inline jule::Bool _1b577a2eb_buildDeclAssign1(_1b576e90b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _96740_lefts, jule::Ptr<_1b4b0966a_AssignSt>* _96762_assign);
inline __jule_tuple_x_1b4b0966a_AssignSt__jule_tuple_bool _1b577a63c_buildDeclAssign(_1b576e90b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _101238_tokens);
inline __jule_tuple__1b4b101ba_StmtData__jule_tuple_bool _1b577a97d_buildAssignSt(_1b576e90b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _104637_tokens);
inline jule::Ptr<_1b4b008c5_UseExpr> _1b577acbe_buildUseExpr(_1b576e90b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _105936_tokens);
inline jule::Any _1b577b110_buildConstSt(_1b576e90b_scopeParser* _self_, jule::Ptr<_1b576e06a_stmt>* _107236_st);
inline jule::Any _1b577b451_buildSt(_1b576e90b_scopeParser* _self_, jule::Ptr<_1b576e06a_stmt>* _109731_st);
inline void _1b577b7b4_build(_1b576e90b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _116129_tokens, jule::Ptr<_1b4b10a4a_ScopeTree>* _116152_s);
inline void _1b577cb17_pushErr(_1b577c331_exprBuilder* _self_, jule::Ptr<_1b4ad5712_Token> _4526_token, jule::Str _4541_fmt, jule::Slice<jule::Any> _4554_args);
inline void _1b577ce7a_pushSuggestion(_1b577c331_exprBuilder* _self_, jule::Str _5033_fmt, jule::Slice<jule::Any> _5046_args);
inline jule::Ptr<_1b4b00ae5_TupleExpr> _1b577d2bb_buildTuple(_1b577c331_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_1b4ad5712_Token>>>* _5434_parts);
inline jule::Ptr<_1b4b00e8b_LitExpr> _1b577d60c_buildLit(_1b577c331_exprBuilder* _self_, jule::Ptr<_1b4ad5712_Token> _6427_token);
inline jule::Any _1b577dc8e_buildSingle(_1b577c331_exprBuilder* _self_, jule::Ptr<_1b4ad5712_Token> _7534_token);
inline jule::Ptr<_1b4b0181b_IdentExpr> _1b577e0d0_buildBindIdent(_1b577c331_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _9238_tokens);
inline jule::Ptr<_1b4b020ad_UnaryExpr> _1b577e421_buildUnary(_1b577c331_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _11133_tokens);
inline jule::Ptr<_1b4b03114_SubIdentExpr> _1b577e762_buildObjSubIdent(_1b577c331_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _13239_tokens);
inline jule::Ptr<_1b4b02c3a_NsSelectionExpr> _1b577eaa3_buildNsSubIdent(_1b577c331_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _14739_tokens);
inline jule::Ptr<_1b4aeabbc_TypeDecl> _1b577ede4_buildType(_1b577c331_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _17233_tokens);
inline jule::Any _1b5780235_buildSubIdent(_1b577c331_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _18637_tokens);
inline jule::Ptr<_1b4b02487_VariadicExpr> _1b5780576_buildVariadic(_1b577c331_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _20836_tokens);
inline jule::Ptr<_1b4b002ba_RangeExpr> _1b57808b7_buildBetweenParentheses(_1b577c331_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _21746_tokens);
inline jule::Ptr<_1b4b02861_CastExpr> _1b5780c08_tryBuildCast(_1b577c331_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _22936_tokens);
inline void _1b5781126_pushArg(_1b577c331_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b4b00001_Expr>>* _30331_args, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _30350_tokens, jule::Ptr<_1b4ad5712_Token> _30368_err_token);
inline jule::Slice<jule::Ptr<_1b4b00001_Expr>> _1b5781467_buildArgs(_1b577c331_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _31232_tokens);
inline jule::Ptr<_1b4b03c2a_FnCallExpr> _1b5781c5e_buildFnCall(_1b577c331_exprBuilder* _self_, jule::Ptr<_1b4ad5712_Token>* _37835_token, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _37855_expr, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _37876_args);
inline jule::Any _1b57820a0_buildParenthesesRange(_1b577c331_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _38645_tokens);
inline jule::Ptr<_1b4b01365_UnsafeExpr> _1b57823e1_buildUnsafeExpr(_1b577c331_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _40838_tokens);
inline jule::Ptr<_1b4b126d9_FnDecl> _1b5782732_buildAnonFn(_1b577c331_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _42335_tokens);
inline jule::Any _1b5782a73_buildUnsafe(_1b577c331_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _43235_tokens);
inline void _1b5782e91_pushRangeLitPart(_1b577c331_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _44239_part, jule::Ptr<_1b4ad5712_Token> _4439_errorToken, jule::Slice<jule::Slice<jule::Ptr<_1b4ad5712_Token>>>* _44334_parts);
inline jule::Slice<jule::Slice<jule::Ptr<_1b4ad5712_Token>>> _1b57832d2_getBraceRangeLitExprParts(_1b577c331_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _45348_tokens);
inline jule::Ptr<_1b4b04720_FieldExprPair> _1b5783623_buildFieldExprPair(_1b577c331_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _49541_tokens);
inline jule::Ptr<_1b4b00001_Expr> _1b5783964_buildStructLitExpr(_1b577c331_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _50842_tokens);
inline jule::Slice<jule::Ptr<_1b4b00001_Expr>> _1b5783ca5_buildStructLitExprs(_1b577c331_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _52343_tokens);
inline jule::Ptr<_1b4b0504a_StructLit> _1b57840e6_buildTypedStructLiteral(_1b577c331_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _53646_tokens);
inline jule::Ptr<_1b4b00001_Expr> _1b5784437_buildBraceLitPart(_1b577c331_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _56041_tokens);
inline jule::Ptr<_1b4b05501_BraceLit> _1b5784778_buildBraceLit(_1b577c331_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _57737_tokens);
inline jule::Any _1b5784ab9_buildBraceRange(_1b577c331_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _59639_tokens);
inline jule::Slice<jule::Slice<jule::Ptr<_1b4ad5712_Token>>> _1b5784e0a_getEnumerableParts(_1b577c331_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _64841_tokens);
inline jule::Ptr<_1b4b06557_SliceExpr> _1b578524b_buildSlice(_1b577c331_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _65533_tokens);
inline jule::Ptr<_1b4b06eb4_IndexingExpr> _1b5785702_buildIndexing(_1b577c331_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _67736_exprTokens, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _67813_tokens, jule::Ptr<_1b4ad5712_Token> _67835_errorToken);
inline jule::Ptr<_1b4b07624_SlicingExpr> _1b5785d1d_buildSlicing(_1b577c331_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _70136_exprTokens, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _70163_start, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _70214_to, jule::Ptr<_1b4ad5712_Token>* _70233_errorToken, jule::Ptr<_1b4ad5712_Token> _70257_end);
inline jule::Any _1b578615e_buildBracketRange(_1b577c331_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _71740_tokens);
inline jule::Any _1b57864a0_buildExclRight(_1b577c331_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _74238_tokens);
inline jule::Any _1b57867e1_buildData(_1b577c331_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _76033_tokens);
inline jule::Any _1b5786bdc_buildBinary(_1b577c331_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _82935_tokens, jule::I64 _82953_i);
inline jule::Any _1b578702d_build(_1b577c331_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _85429_tokens);
inline jule::Any _1b578736e_buildKind(_1b577c331_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _86533_tokens);
inline jule::Ptr<_1b4b00001_Expr> _1b57876b0_buildFromTokens(_1b577c331_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _87638_tokens);
inline void _1b578d287_stop(_1b578ce8a_parser* _self_);
inline jule::Bool _1b578d51d_stopped(_1b578ce8a_parser* _self_);
inline void _1b578d93b_pushErr(_1b578ce8a_parser* _self_, jule::Ptr<_1b4ad5712_Token> _20826_token, jule::Str _20841_fmt, jule::Slice<jule::Any> _20854_args);
inline void _1b578dc9e_pushSuggestion(_1b578ce8a_parser* _self_, jule::Str _21333_fmt, jule::Slice<jule::Any> _21346_args);
inline jule::Ptr<_1b4b00001_Expr> _1b578e0e0_buildExpr(jule::Ptr<_1b578ce8a_parser> _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _21734_tokens);
inline jule::Ptr<_1b4aea0d9_Directive> _1b578e431_buildDirective(_1b578ce8a_parser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _22137_tokens);
inline void _1b578e6d9_pushDirective(_1b578ce8a_parser* _self_, jule::Ptr<_1b4aea0d9_Directive> _23636_d);
inline jule::Ptr<_1b4b10a4a_ScopeTree> _1b578ead5_buildScope(jule::Ptr<_1b578ce8a_parser> _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _24935_tokens, jule::Ptr<_1b4ad5712_Token> _24957_end);
inline __jule_tuple_x_1b4aeabbc_TypeDecl__jule_tuple_bool _1b579008b__buildType(jule::Ptr<_1b578ce8a_parser> _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _25942_tokens, jule::I64* _26013_i, jule::Bool _26022_err);
inline __jule_tuple_x_1b4aeabbc_TypeDecl__jule_tuple_bool _1b5790542_buildType(jule::Ptr<_1b578ce8a_parser> _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _27141_tokens, jule::I64* _27213_i, jule::Bool _27222_err);
inline jule::Ptr<_1b4b17546_TypeAliasDecl> _1b5790883_buildTypeAliasDecl(jule::Ptr<_1b578ce8a_parser> _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _28143_tokens);
inline void _1b5790be6_buildVarTypeAndExpr(jule::Ptr<_1b578ce8a_parser> _self_, jule::Ptr<_1b4b13894_VarDecl>* _32144_v, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _32162_tokens);
inline void _1b5791059_buildVarCommon(jule::Ptr<_1b578ce8a_parser> _self_, jule::Ptr<_1b4b13894_VarDecl>* _35439_v, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _35456_tokens);
inline void _1b57913bc_buildVarBegin(_1b578ce8a_parser* _self_, jule::Ptr<_1b4b13894_VarDecl>* _37037_v, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _37055_tokens);
inline jule::Ptr<_1b4b13894_VarDecl> _1b579170d_buildVar(jule::Ptr<_1b578ce8a_parser> _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _39832_tokens);
inline jule::Ptr<_1b4b07dc7_GenericDecl> _1b5791a4e_buildGeneric(jule::Ptr<_1b578ce8a_parser> _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _41737_tokens);
inline jule::Slice<jule::Ptr<_1b4b07dc7_GenericDecl>> _1b5791e4a_buildGenerics(jule::Ptr<_1b578ce8a_parser> _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _45438_tokens, jule::Ptr<_1b4ad5712_Token>* _45457_errorToken);
inline jule::Ptr<_1b4b11287_ParamDecl> _1b579228b_buildSelfParam(_1b578ce8a_parser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _47437_tokens);
inline void _1b57926a9_paramTypeBegin(_1b578ce8a_parser* _self_, jule::Ptr<_1b4b11287_ParamDecl>* _51438_param, jule::I64* _51462_i, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _51471_tokens);
inline void _1b5792a1c_buildParamType(jule::Ptr<_1b578ce8a_parser> _self_, jule::Ptr<_1b4b11287_ParamDecl>* _52939_param, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _52963_tokens);
inline void _1b5792d80_buildParamBody(jule::Ptr<_1b578ce8a_parser> _self_, jule::Ptr<_1b4b11287_ParamDecl>* _54239_param, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _54262_tokens);
inline jule::Ptr<_1b4b11287_ParamDecl> _1b57931c1_buildParam(jule::Ptr<_1b578ce8a_parser> _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _56234_tokens);
inline void _1b5793479_checkParams(_1b578ce8a_parser* _self_, jule::Slice<jule::Ptr<_1b4b11287_ParamDecl>>* _60535_params);
inline jule::Slice<jule::Ptr<_1b4b11287_ParamDecl>> _1b5793875_buildParams(jule::Ptr<_1b578ce8a_parser> _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _62536_tokens, jule::Bool _62554_method);
inline __jule_tuple_x_1b4aedab0_RetTypeDecl__jule_tuple_bool _1b5793c71_buildMultiRetType(jule::Ptr<_1b578ce8a_parser> _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _65542_tokens, jule::I64* _65565_i);
inline __jule_tuple_x_1b4aedab0_RetTypeDecl__jule_tuple_bool _1b579416c_buildRetType(jule::Ptr<_1b578ce8a_parser> _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _72637_tokens, jule::I64* _72660_i);
inline jule::Ptr<_1b4b126d9_FnDecl> _1b5794623_buildFnPrototype(jule::Ptr<_1b578ce8a_parser> _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _76541_tokens, jule::I64* _76564_i, jule::Bool _76572_method);
inline jule::Ptr<_1b4b126d9_FnDecl> _1b5794ac9_buildFn(jule::Ptr<_1b578ce8a_parser> _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _84232_tokens, jule::Bool _84250_method, jule::Bool _84264_prototype);
inline jule::Slice<jule::Ptr<_1b4ad5712_Token>> _1b5794e1a_getUseDeclSelectors(_1b578ce8a_parser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _87642_tokens);
inline void _1b579527d_buildBindUseDecl(_1b578ce8a_parser* _self_, jule::Ptr<_1b4b18b30_UseDecl>* _90140_decl, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _90157_tokens);
inline jule::Str _1b57955be_useDeclTokstoa(_1b578ce8a_parser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _91434_tokens);
inline void _1b5795932_buildStdUseDecl(_1b578ce8a_parser* _self_, jule::Ptr<_1b4b18b30_UseDecl>* _92939_decl, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _92959_tokens);
inline void _1b5795c95_buildIdentUseDecl(_1b578ce8a_parser* _self_, jule::Ptr<_1b4b18b30_UseDecl>* _98741_decl, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _98761_tokens);
inline void _1b5796108_parseUseDecl(_1b578ce8a_parser* _self_, jule::Ptr<_1b4b18b30_UseDecl>* _103536_decl, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _103556_tokens);
inline jule::Ptr<_1b4b18b30_UseDecl> _1b5796504_buildUseDecl(_1b578ce8a_parser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _106935_tokens, jule::Bool _106953_binded);
inline jule::Ptr<_1b4aeabbc_TypeDecl> _1b5796900_buildTypeEnumItemKind(jule::Ptr<_1b578ce8a_parser> _self_, jule::I64* _108346_i, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _108359_tokens);
inline jule::Slice<jule::Ptr<_1b4b1a4c2_TypeEnumItemDecl>> _1b5796c41_buildTypeEnumItems(jule::Ptr<_1b578ce8a_parser> _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _112043_tokens);
inline jule::Ptr<_1b4b1ab32_TypeEnumDecl> _1b5797082_buildTypeEnumDecl(jule::Ptr<_1b578ce8a_parser> _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _114442_tokens);
inline jule::Ptr<_1b4b00001_Expr> _1b579747d_buildEnumItemExpr(jule::Ptr<_1b578ce8a_parser> _self_, jule::I64* _117142_i, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _117155_tokens);
inline jule::Slice<jule::Ptr<_1b4b190d6_EnumItemDecl>> _1b57977be_buildEnumItems(jule::Ptr<_1b578ce8a_parser> _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _120339_tokens);
inline jule::Ptr<_1b4b19b97_EnumDecl> _1b5797b10_buildEnumDecl(jule::Ptr<_1b578ce8a_parser> _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _124038_tokens);
inline jule::Any _1b5797e51_buildNodeEnumDecl(jule::Ptr<_1b578ce8a_parser> _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _128542_tokens);
inline jule::Ptr<_1b4b1adeb_FieldDecl> _1b5798292_buildField(jule::Ptr<_1b578ce8a_parser> _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _129434_tokens);
inline jule::Slice<jule::Ptr<_1b4b1adeb_FieldDecl>> _1b57985d3_buildStructDeclFields(jule::Ptr<_1b578ce8a_parser> _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _134345_tokens);
inline jule::Ptr<_1b4b1b7e2_StructDecl> _1b5798924_buildStructDecl(jule::Ptr<_1b578ce8a_parser> _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _135440_tokens);
inline void _1b5798bcc_checkMethodReceiver(_1b578ce8a_parser* _self_, jule::Ptr<_1b4b126d9_FnDecl>* _140239_f);
inline void _1b5799040_buildTraitBody(jule::Ptr<_1b578ce8a_parser> _self_, jule::Ptr<_1b4b1c02e_TraitDecl>* _142139_t, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _142158_tokens);
inline jule::Ptr<_1b4b1c02e_TraitDecl> _1b5799381_buildTraitDecl(jule::Ptr<_1b578ce8a_parser> _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _145339_tokens);
inline jule::Ptr<_1b4b126d9_FnDecl> _1b57996c2_buildBindFn(jule::Ptr<_1b578ce8a_parser> _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _148335_tokens);
inline jule::Ptr<_1b4b13894_VarDecl> _1b5799a13_buildBindVar(jule::Ptr<_1b578ce8a_parser> _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _149336_tokens);
inline jule::Ptr<_1b4b1b7e2_StructDecl> _1b5799d54_buildBindStruct(jule::Ptr<_1b578ce8a_parser> _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _150639_tokens);
inline jule::Ptr<_1b4b17546_TypeAliasDecl> _1b579a195_buildBindTypeAlias(jule::Ptr<_1b578ce8a_parser> _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _152042_tokens);
inline jule::Ptr<_1b4b18b30_UseDecl> _1b579a4d6_buildBindUse(jule::Ptr<_1b578ce8a_parser> _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _153036_tokens);
inline jule::Any _1b579a827_buildBind(jule::Ptr<_1b578ce8a_parser> _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _154134_tokens);
inline jule::Ptr<_1b4b126d9_FnDecl> _1b579ab68_getMethod(jule::Ptr<_1b578ce8a_parser> _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _156534_tokens);
inline void _1b579aecb_parseImplBody(jule::Ptr<_1b578ce8a_parser> _self_, jule::Ptr<_1b4b1c68e_Impl>* _159438_ipl, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _159455_tokens);
inline jule::Ptr<_1b4b1c68e_Impl> _1b579b31c_buildImpl(jule::Ptr<_1b578ce8a_parser> _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _162733_tokens);
inline jule::Any _1b579b65d_buildNodeData(jule::Ptr<_1b578ce8a_parser> _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _169838_tokens);
inline void _1b579b916_applyFnMeta(_1b578ce8a_parser* _self_, jule::Ptr<_1b4b126d9_FnDecl>* _173135_f);
inline void _1b579bbbe_applyMeta(_1b578ce8a_parser* _self_, _1b4ae9bbb_Node* _173633_node);
inline void _1b579be77_pushUseDecl(jule::Ptr<_1b578ce8a_parser> _self_, jule::Ptr<_1b4b18b30_UseDecl>* _176136_decl);
inline jule::Bool _1b579c2b8_pushMetaNodes(jule::Ptr<_1b578ce8a_parser> _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _176938_tokens);
inline _1b4ae9bbb_Node _1b579c609_parseNode(jule::Ptr<_1b578ce8a_parser> _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _178934_st);
inline void _1b579c8b2_appendNode(jule::Ptr<_1b578ce8a_parser> _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _181335_st);
inline void _1b579cd8a_removeRange(_1b578ce8a_parser* _self_, jule::I64 _182330_i, jule::U64 _182338_id, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _182352_tokens, jule::Slice<jule::I64>* _182375_ranges);
inline void _1b579d2a8_pushWrongOrderCloseErr(_1b578ce8a_parser* _self_, jule::Ptr<_1b4ad5712_Token>* _183542_t, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _183554_tokens, jule::Slice<jule::I64>* _183573_ranges);
inline void _1b579d781_pushRangeClose(_1b578ce8a_parser* _self_, jule::Ptr<_1b4ad5712_Token> _184633_t, jule::U64 _184644_left, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _184660_tokens, jule::Slice<jule::I64>* _184683_ranges);
inline void _1b579da39_checkRanges(_1b578ce8a_parser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _186431_tokens);
inline void _1b579dce2_parse(jule::Ptr<_1b578ce8a_parser> _self_, jule::Ptr<_1b4adae98_File>* _189530_f);
inline void _1b57a0651_pushErr(_1b57a00ac_typeBuilder* _self_, jule::Ptr<_1b4ad5712_Token> _4126_token, jule::Str _4141_fmt);
inline void _1b57a09b4_pushSuggestion(_1b57a00ac_typeBuilder* _self_, jule::Str _4833_fmt, jule::Slice<jule::Any> _4846_args);
inline jule::Ptr<_1b4aeabbc_TypeDecl> _1b57a0c4a_buildNamespace(_1b57a00ac_typeBuilder* _self_);
inline jule::Slice<jule::Ptr<_1b4aeabbc_TypeDecl>> _1b57a0ed1_buildGenerics(_1b57a00ac_typeBuilder* _self_);
inline jule::Slice<jule::Slice<jule::Ptr<_1b4ad5712_Token>>> _1b57a1267_identGenerics(_1b57a00ac_typeBuilder* _self_);
inline jule::Ptr<_1b4aeabbc_TypeDecl> _1b57a14ed_buildIdent(_1b57a00ac_typeBuilder* _self_);
inline jule::Ptr<_1b4aeabbc_TypeDecl> _1b57a1784_buildCppLink(_1b57a00ac_typeBuilder* _self_);
inline jule::Ptr<_1b4aeabbc_TypeDecl> _1b57a1a1a_buildFn(_1b57a00ac_typeBuilder* _self_);
inline jule::Ptr<_1b4aeabbc_TypeDecl> _1b57a1ca1_buildPtr(_1b57a00ac_typeBuilder* _self_);
inline jule::Ptr<_1b4aeabbc_TypeDecl> _1b57a2037_buildSptr(_1b57a00ac_typeBuilder* _self_);
inline jule::Ptr<_1b4aeabbc_TypeDecl> _1b57a22bd_buildSlc(_1b57a00ac_typeBuilder* _self_);
inline jule::Ptr<_1b4aeabbc_TypeDecl> _1b57a2554_buildArr(_1b57a00ac_typeBuilder* _self_);
inline jule::Ptr<_1b4aeabbc_TypeDecl> _1b57a27da_buildMap(_1b57a00ac_typeBuilder* _self_);
inline jule::Ptr<_1b4aeabbc_TypeDecl> _1b57a2a71_buildEnumerable(_1b57a00ac_typeBuilder* _self_);
inline jule::Ptr<_1b4aeabbc_TypeDecl> _1b57a2d07_step(_1b57a00ac_typeBuilder* _self_);
inline __jule_tuple_x_1b4aeabbc_TypeDecl__jule_tuple_bool _1b57a308d_build(_1b57a00ac_typeBuilder* _self_);
inline void _1b4eb35e5_pushErr(_1b4eb3095_directiveEval* _self_, jule::Ptr<_1b4ad5712_Token> _2126_t, jule::Str _2137_fmt, jule::Slice<jule::Any> _2150_args);
inline jule::Slice<jule::Slice<jule::Ptr<_1b4ad5712_Token>>> _1b4eb39e1_splitOperans(_1b4eb3095_directiveEval* _self_, jule::U64 _3331_op, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _3349_tokens);
inline jule::Bool _1b4eb3d32_evalDirectiveIdent(_1b4eb3095_directiveEval* _self_, jule::Str _6433_ident);
inline jule::Bool _1b4eb4173_evalDirectivePart(_1b4eb3095_directiveEval* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _7840_part);
inline jule::Bool _1b4eb4409_eval(_1b4eb3095_directiveEval* _self_);
inline jule::Ptr<_1b57a40a0_JuleImporter> static__1b57a449b_New(_1b4eb1abb_CompileInfo _5819_info);
inline jule::Slice<jule::Ptr<_1b4b9a893_ImportInfo>> _1b57a4732_AllPackages(_1b57a40a0_JuleImporter* _self_);
inline void _1b57a4b72_SetModPath(_1b57a40a0_JuleImporter* _self_, jule::Str _7529_path);
inline jule::Str _1b57a4e08_GetModPath(_1b57a40a0_JuleImporter* _self_);
inline jule::Str _1b57a5249_ModById(_1b57a40a0_JuleImporter* _self_, jule::I64 _8322_id);
inline jule::Ptr<_1b4b9a893_ImportInfo> _1b57a558a_GetImport(_1b57a40a0_JuleImporter* _self_, jule::Str _8728_path);
inline __jule_tuple_sx_1b4ae8ca8_Ast__jule_tuple_s_1cb285120_Log _1b57a5986_ImportPackage(_1b57a40a0_JuleImporter* _self_, jule::Str _9632_path, jule::Bool _9643_update_mod);
inline void _1b57a5c3e_Imported(_1b57a40a0_JuleImporter* _self_, jule::Ptr<_1b4b9a893_ImportInfo> _15331_imp);
inline __jule_tuple_bool__jule_tuple_s_1cb285120_Log _1b57a616d_isPassBuildDirectives(_1b57a40a0_JuleImporter* _self_, jule::Ptr<_1b4ae8ca8_Ast>* _17945_file);
inline void _1b593ac09_optimizeChild(jule::Ptr<_1b593a720_scopeDeadCode> _self_, jule::Ptr<_1b4b7880a_Scope>* _3938_s);
inline void _1b593aeb2_optimizeBodyChildExceptional(jule::Ptr<_1b593a720_scopeDeadCode> _self_, jule::Ptr<_1b4b7880a_Scope>* _5053_s);
inline void _1b593b26a_optimizeBodyChild(jule::Ptr<_1b593a720_scopeDeadCode> _self_, jule::Ptr<_1b4b7880a_Scope>* _6142_s);
inline void _1b593b523_optimizeExprModel(jule::Ptr<_1b593a720_scopeDeadCode> _self_, jule::Any* _7142_model);
inline void _1b593b721_eliminateFollowed(_1b593a720_scopeDeadCode* _self_);
inline void _1b593b9c9_pushGoto(jule::Ptr<_1b593a720_scopeDeadCode> _self_, jule::Ptr<_1b4b7b577_GotoSt> _9232_gt);
inline void _1b593bc82_pushLabel(jule::Ptr<_1b593a720_scopeDeadCode> _self_, jule::Ptr<_1b4b7b19d_Label> _10233_l);
inline void _1b593c03a_optimizeRangeIter(jule::Ptr<_1b593a720_scopeDeadCode> _self_, jule::Ptr<_1b4b7a642_RangeIter> _11541_it);
inline void _1b593c2e3_optimizeWhileIter(jule::Ptr<_1b593a720_scopeDeadCode> _self_, jule::Ptr<_1b4b79be6_WhileIter> _12041_it);
inline void _1b593c59b_optimizeInfIter(jule::Ptr<_1b593a720_scopeDeadCode> _self_, jule::Ptr<_1b4b79740_InfIter> _12839_it);
inline void _1b593c854_optimizeConditional(jule::Ptr<_1b593a720_scopeDeadCode> _self_, jule::Ptr<_1b4b79443_Conditional> _13243_c);
inline void _1b593cb0c_optimizeMatch(jule::Ptr<_1b593a720_scopeDeadCode> _self_, jule::Ptr<_1b4b7ca1d_Match> _15037_m);
inline void _1b593cdb5_optimizeAssign(jule::Ptr<_1b593a720_scopeDeadCode> _self_, jule::Ptr<_1b4b7be07_Assign> _16838_assign);
inline void _1b593d16d_optimizeMultiAssign(jule::Ptr<_1b593a720_scopeDeadCode> _self_, jule::Ptr<_1b4b7c3ad_MultiAssign> _17343_assign);
inline void _1b593d426_optimizeStmt(jule::Ptr<_1b593a720_scopeDeadCode> _self_, jule::Any _18236_st);
inline void _1b593d624_optimizeStmts(jule::Ptr<_1b593a720_scopeDeadCode> _self_);
inline _1b593e9aa_exprDeadCode static__1b59400e8_new(jule::Ptr<_1b593a720_scopeDeadCode>* _4824_s);
inline void _1b59403a1_binary(_1b593e9aa_exprDeadCode* _self_, jule::Ptr<_1b4b28a41_BinaryExprModel> _5425_m);
inline void _1b5940659_unary(_1b593e9aa_exprDeadCode* _self_, jule::Ptr<_1b4b28e1a_UnaryExprModel> _5924_m);
inline void _1b5940912_structureLit(_1b593e9aa_exprDeadCode* _self_, jule::Ptr<_1b4b297de_StructLitExprModel> _6331_m);
inline void _1b5940bba_allocStructure(_1b593e9aa_exprDeadCode* _self_, jule::Ptr<_1b4b29adb_AllocStructLitExprModel> _6933_m);
inline void _1b5940e73_casting(_1b593e9aa_exprDeadCode* _self_, jule::Ptr<_1b4b2a16e_CastingExprModel> _7326_m);
inline void _1b594122b_args(_1b593e9aa_exprDeadCode* _self_, jule::Slice<jule::Any>* _7724_args);
inline void _1b59414d4_funcCall(_1b593e9aa_exprDeadCode* _self_, jule::Ptr<_1b4b2aa21_FnCallExprModel> _8327_m);
inline void _1b594178c_slice(_1b593e9aa_exprDeadCode* _self_, jule::Ptr<_1b4b2adea_SliceExprModel> _9124_m);
inline void _1b5941a45_array(_1b593e9aa_exprDeadCode* _self_, jule::Ptr<_1b4b2de0e_ArrayExprModel> _9524_m);
inline void _1b5941ced_indexing(_1b593e9aa_exprDeadCode* _self_, jule::Ptr<_1b4b2b3a1_IndexingExprModel> _10227_m);
inline void _1b59420a6_anonFunc(_1b593e9aa_exprDeadCode* _self_, jule::Ptr<_1b4b2b857_AnonFnExprModel> _10727_m);
inline void _1b594235e_mapExpr(_1b593e9aa_exprDeadCode* _self_, jule::Ptr<_1b4b2c1d7_MapExprModel> _11126_m);
inline void _1b5942617_slicing(_1b593e9aa_exprDeadCode* _self_, jule::Ptr<_1b4b2c76a_SlicingExprModel> _11826_m);
inline void _1b59428c0_traitSub(_1b593e9aa_exprDeadCode* _self_, jule::Ptr<_1b4b2cced_TraitSubIdentExprModel> _12627_m);
inline void _1b5942b78_structureSub(_1b593e9aa_exprDeadCode* _self_, jule::Ptr<_1b4b2d68e_StructSubIdentExprModel> _13031_m);
inline void _1b5942e31_tuple(_1b593e9aa_exprDeadCode* _self_, jule::Ptr<_1b4b2e20b_TupleExprModel> _13424_m);
inline void _1b59431d9_newCall(_1b593e9aa_exprDeadCode* _self_, jule::Ptr<_1b4b2ed88_BuiltinNewCallExprModel> _14026_m);
inline void _1b5943492_outCall(_1b593e9aa_exprDeadCode* _self_, jule::Ptr<_1b4b2e5d5_BuiltinOutCallExprModel> _14626_m);
inline void _1b594374a_outlnCall(_1b593e9aa_exprDeadCode* _self_, jule::Ptr<_1b4b2e9ae_BuiltinOutlnCallExprModel> _15028_m);
inline void _1b5943a03_panicCall(_1b593e9aa_exprDeadCode* _self_, jule::Ptr<_1b4b30262_BuiltinPanicCallExprModel> _15428_m);
inline void _1b5943cab_assertCall(_1b593e9aa_exprDeadCode* _self_, jule::Ptr<_1b4b30718_BuiltinAssertCallExprModel> _15829_m);
inline void _1b5944064_errorCall(_1b593e9aa_exprDeadCode* _self_, jule::Ptr<_1b4b3231e_BuiltinErrorCallExprModel> _16228_m);
inline void _1b594431c_makeCall(_1b593e9aa_exprDeadCode* _self_, jule::Ptr<_1b4b30bbe_BuiltinMakeCallExprModel> _16627_m);
inline void _1b59445c5_appendCall(_1b593e9aa_exprDeadCode* _self_, jule::Ptr<_1b4b31098_BuiltinAppendCallExprModel> _17529_m);
inline void _1b594487d_lenCall(_1b593e9aa_exprDeadCode* _self_, jule::Ptr<_1b4b31395_BuiltinLenCallExprModel> _18026_m);
inline void _1b5944b36_capCall(_1b593e9aa_exprDeadCode* _self_, jule::Ptr<_1b4b31692_BuiltinCapCallExprModel> _18426_m);
inline void _1b5944dde_deleteCall(_1b593e9aa_exprDeadCode* _self_, jule::Ptr<_1b4b31a6b_BuiltinDeleteCallExprModel> _18829_m);
inline void _1b5945197_sizeof(_1b593e9aa_exprDeadCode* _self_, jule::Ptr<_1b4b329c3_SizeofExprModel> _19525_m);
inline void _1b5945450_alignof(_1b593e9aa_exprDeadCode* _self_, jule::Ptr<_1b4b32bb0_AlignofExprModel> _19926_m);
inline void _1b5945708_integratedToStr(_1b593e9aa_exprDeadCode* _self_, jule::Ptr<_1b4b33254_IntegratedToStrExprModel> _20334_m);
inline void _1b59459b1_free(_1b593e9aa_exprDeadCode* _self_, jule::Ptr<_1b4b3392a_FreeExprModel> _20723_m);
inline void _1b5945c69_backendEmit(_1b593e9aa_exprDeadCode* _self_, jule::Ptr<_1b4b3362d_BackendEmitExprModel> _21130_m);
inline void _1b5946022_optimize(_1b593e9aa_exprDeadCode* _self_, jule::Any* _21528_model);
inline void _1b4d75562_pushVar(_1b4d75100_nils* _self_, jule::Uintptr _2926_var, jule::Bool _2940_safe);
inline jule::Bool _1b4d758a3_removeVar(_1b4d75100_nils* _self_, jule::Uintptr _5228_var);
inline jule::Bool _1b4d75be4_isSafe(_1b4d75100_nils* _self_, jule::Uintptr _6625_var);
inline jule::Ptr<_1b57b5aa6_scopeOptimizer> static__1b57b6128_new(jule::Ptr<_1b4b7880a_Scope> _5123_scope);
inline void _1b57b63d1_setCurrentStmt(jule::Ptr<_1b57b5aa6_scopeOptimizer> _self_, jule::Any _6338_stmt);
inline void _1b57b65ce_removeCurrent(jule::Ptr<_1b57b5aa6_scopeOptimizer> _self_);
inline jule::Bool _1b57b6865_isLastStmt(jule::Ptr<_1b57b5aa6_scopeOptimizer> _self_);
inline jule::Bool _1b57b6aeb_isIter(jule::Ptr<_1b57b5aa6_scopeOptimizer> _self_);
inline void _1b57b6da4_optimizeData(jule::Ptr<_1b57b5aa6_scopeOptimizer> _self_, jule::Ptr<_1b4c466a8_Data> _9536_d);
inline void _1b57b715c_optimizeVar(jule::Ptr<_1b57b5aa6_scopeOptimizer> _self_, jule::Ptr<_1b4bddaa1_Var> _12135_v);
inline void _1b57b7415_optimizeConditional(jule::Ptr<_1b57b5aa6_scopeOptimizer> _self_, jule::Ptr<_1b4b79443_Conditional> _14243_c);
inline void _1b57b7833_buildDefaultConstantTrueCase(jule::Ptr<_1b57b5aa6_scopeOptimizer> _self_, jule::Ptr<_1b4b7d546_Case> _21652_case, jule::I64* _21670_i, jule::Ptr<_1b4b7ca1d_Match>* _21683_m);
inline void _1b57b7adb_optimizeMatch(jule::Ptr<_1b57b5aa6_scopeOptimizer> _self_, jule::Ptr<_1b4b7ca1d_Match> _24237_m);
inline void _1b57b7d94_optimizeRangeIter(jule::Ptr<_1b57b5aa6_scopeOptimizer> _self_, jule::Ptr<_1b4b7a642_RangeIter> _32441_it);
inline void _1b57b814c_optimizeWhileIter(jule::Ptr<_1b57b5aa6_scopeOptimizer> _self_, jule::Ptr<_1b4b79be6_WhileIter> _36941_it);
inline jule::Bool _1b57b848d_substr(jule::Ptr<_1b57b5aa6_scopeOptimizer> _self_, jule::Ptr<_1b4b7be07_Assign> _37530_a);
inline jule::Bool _1b57b87ce_strAssign(jule::Ptr<_1b57b5aa6_scopeOptimizer> _self_, jule::Ptr<_1b4b7be07_Assign> _39533_a);
inline jule::Bool _1b57b8b20_sliceAssign(jule::Ptr<_1b57b5aa6_scopeOptimizer> _self_, jule::Ptr<_1b4b7be07_Assign> _40635_a);
inline void _1b57b8dc8_optimizePostfix(jule::Ptr<_1b57b5aa6_scopeOptimizer> _self_, jule::Ptr<_1b4b7b951_Postfix> _41439_postfix);
inline void _1b57b9181_optimizeAssign(jule::Ptr<_1b57b5aa6_scopeOptimizer> _self_, jule::Ptr<_1b4b7be07_Assign> _42138_assign);
inline jule::Bool _1b57b94c2_tryOptimizeSwap(jule::Ptr<_1b57b5aa6_scopeOptimizer> _self_, jule::Ptr<_1b4b7c3ad_MultiAssign>* _52640_assign);
inline void _1b57b977a_optimizeMultiAssign(jule::Ptr<_1b57b5aa6_scopeOptimizer> _self_, jule::Ptr<_1b4b7c3ad_MultiAssign> _56343_assign);
inline void _1b57b9a33_optimizeRet(jule::Ptr<_1b57b5aa6_scopeOptimizer> _self_, jule::Ptr<_1b4b7e0d5_RetSt> _60935_r);
inline void _1b57b9cdb_optimizeStmt(jule::Ptr<_1b57b5aa6_scopeOptimizer> _self_, jule::Any _63336_stmt);
inline void _1b57ba094_optimizeChild(jule::Ptr<_1b57b5aa6_scopeOptimizer> _self_, jule::Ptr<_1b4b7880a_Scope> _66237_child);
inline void _1b57ba292_optimize(jule::Ptr<_1b57b5aa6_scopeOptimizer> _self_);
inline void static__1b57bc87c_optimize(jule::Any* _5829_model);
inline void static__1b57bcb68_optimizeData(jule::Any* _6233_model, jule::Ptr<_1b57c9c74_data>* _6256_d);
inline jule::Bool _1b57bcea9_selfCmpCond(_1b57bc22d_exprOptimizer* _self_, jule::Ptr<_1b4b28a41_BinaryExprModel>* _7331_m);
inline jule::Bool _1b57bd2ea_boolCond(_1b57bc22d_exprOptimizer* _self_, jule::Ptr<_1b4b28a41_BinaryExprModel>* _9728_m);
inline jule::Bool _1b57bd63b_strCond(_1b57bc22d_exprOptimizer* _self_, jule::Ptr<_1b4b28a41_BinaryExprModel> _15026_m);
inline jule::Bool _1b57bdae2_tryNeutralElement1(_1b57bc22d_exprOptimizer* _self_, jule::Ptr<_1b4b28a41_BinaryExprModel>* _20738_m, jule::Ptr<_1b2753508_Const> _20763_c, jule::Ptr<_1b4b28546_OperandExprModel>* _20775_nc);
inline jule::Bool _1b57bde33_tryNeutralElement(_1b57bc22d_exprOptimizer* _self_, jule::Ptr<_1b4b28a41_BinaryExprModel>* _25137_m);
inline void _1b57be1db_checkBinaryForBoundary(_1b57bc22d_exprOptimizer* _self_, jule::Ptr<_1b4b28a41_BinaryExprModel>* _26642_m);
inline void _1b57be494_checkBinaryForNil(_1b57bc22d_exprOptimizer* _self_, jule::Ptr<_1b4b28a41_BinaryExprModel>* _31837_m);
inline void _1b57be74c_binary(_1b57bc22d_exprOptimizer* _self_, jule::Ptr<_1b4b28a41_BinaryExprModel> _35025_m);
inline void _1b57bea05_unary(_1b57bc22d_exprOptimizer* _self_, jule::Ptr<_1b4b28e1a_UnaryExprModel> _43824_m);
inline void _1b57becad_structureLit(_1b57bc22d_exprOptimizer* _self_, jule::Ptr<_1b4b297de_StructLitExprModel> _48231_m);
inline void _1b57c0066_allocStructure(_1b57bc22d_exprOptimizer* _self_, jule::Ptr<_1b4b29adb_AllocStructLitExprModel> _49933_m);
inline void _1b57c031e_casting(_1b57bc22d_exprOptimizer* _self_, jule::Ptr<_1b4b2a16e_CastingExprModel> _50326_m);
inline void _1b57c0682_args(_1b57bc22d_exprOptimizer* _self_, jule::Slice<jule::Ptr<_1b4b387dc_ParamIns>> _51723_params, jule::Slice<jule::Any>* _51749_args);
inline void _1b57c093a_scope(_1b57bc22d_exprOptimizer* _self_, jule::Ptr<_1b4b7880a_Scope>* _54025_s);
inline void _1b57c0be3_funcCall(_1b57bc22d_exprOptimizer* _self_, jule::Ptr<_1b4b2aa21_FnCallExprModel> _54627_m);
inline void _1b57c0e9b_slice(_1b57bc22d_exprOptimizer* _self_, jule::Ptr<_1b4b2adea_SliceExprModel> _55424_m);
inline void _1b57c1254_array(_1b57bc22d_exprOptimizer* _self_, jule::Ptr<_1b4b2de0e_ArrayExprModel> _55824_m);
inline void _1b57c150c_indexing(_1b57bc22d_exprOptimizer* _self_, jule::Ptr<_1b4b2b3a1_IndexingExprModel> _56727_m);
inline void _1b57c17b5_anonFunc(_1b57bc22d_exprOptimizer* _self_, jule::Ptr<_1b4b2b857_AnonFnExprModel> _59327_m);
inline void _1b57c1a6d_mapExpr(_1b57bc22d_exprOptimizer* _self_, jule::Ptr<_1b4b2c1d7_MapExprModel> _59726_m);
inline void _1b57c1d26_slicing(_1b57bc22d_exprOptimizer* _self_, jule::Ptr<_1b4b2c76a_SlicingExprModel> _60426_m);
inline void _1b57c20ce_traitSub(_1b57bc22d_exprOptimizer* _self_, jule::Ptr<_1b4b2cced_TraitSubIdentExprModel> _61227_m);
inline void _1b57c2387_structureSub(_1b57bc22d_exprOptimizer* _self_, jule::Ptr<_1b4b2d68e_StructSubIdentExprModel> _61631_m);
inline void _1b57c2640_tuple(_1b57bc22d_exprOptimizer* _self_, jule::Ptr<_1b4b2e20b_TupleExprModel> _62024_m);
inline void _1b57c28e8_newCall(_1b57bc22d_exprOptimizer* _self_, jule::Ptr<_1b4b2ed88_BuiltinNewCallExprModel> _62626_m);
inline void _1b57c2ba1_outCall(_1b57bc22d_exprOptimizer* _self_, jule::Ptr<_1b4b2e5d5_BuiltinOutCallExprModel> _63226_m);
inline void _1b57c2e59_outlnCall(_1b57bc22d_exprOptimizer* _self_, jule::Ptr<_1b4b2e9ae_BuiltinOutlnCallExprModel> _63628_m);
inline void _1b57c3212_panicCall(_1b57bc22d_exprOptimizer* _self_, jule::Ptr<_1b4b30262_BuiltinPanicCallExprModel> _64028_m);
inline void _1b57c34ba_assertCall(_1b57bc22d_exprOptimizer* _self_, jule::Ptr<_1b4b30718_BuiltinAssertCallExprModel> _64429_m);
inline void _1b57c3773_errorCall(_1b57bc22d_exprOptimizer* _self_, jule::Ptr<_1b4b3231e_BuiltinErrorCallExprModel> _64828_m);
inline void _1b57c3a2b_makeCall(_1b57bc22d_exprOptimizer* _self_, jule::Ptr<_1b4b30bbe_BuiltinMakeCallExprModel> _65227_m);
inline void _1b57c3cd4_appendCall(_1b57bc22d_exprOptimizer* _self_, jule::Ptr<_1b4b31098_BuiltinAppendCallExprModel> _66129_m);
inline void _1b57c408c_lenCall(_1b57bc22d_exprOptimizer* _self_, jule::Ptr<_1b4b31395_BuiltinLenCallExprModel> _66626_m);
inline void _1b57c4345_capCall(_1b57bc22d_exprOptimizer* _self_, jule::Ptr<_1b4b31692_BuiltinCapCallExprModel> _67026_m);
inline void _1b57c45ed_deleteCall(_1b57bc22d_exprOptimizer* _self_, jule::Ptr<_1b4b31a6b_BuiltinDeleteCallExprModel> _67429_m);
inline void _1b57c48a6_sizeof(_1b57bc22d_exprOptimizer* _self_, jule::Ptr<_1b4b329c3_SizeofExprModel> _68125_m);
inline void _1b57c4b5e_alignof(_1b57bc22d_exprOptimizer* _self_, jule::Ptr<_1b4b32bb0_AlignofExprModel> _68526_m);
inline void _1b57c4e17_integratedToStr(_1b57bc22d_exprOptimizer* _self_, jule::Ptr<_1b4b33254_IntegratedToStrExprModel> _68934_m);
inline void _1b57c51c0_free(_1b57bc22d_exprOptimizer* _self_, jule::Ptr<_1b4b3392a_FreeExprModel> _69323_m);
inline void _1b57c5478_backendEmit(_1b57bc22d_exprOptimizer* _self_, jule::Ptr<_1b4b3362d_BackendEmitExprModel> _69730_m);
inline void _1b57c5676_do(_1b57bc22d_exprOptimizer* _self_);
inline void _1b57c7557_pushVar(jule::Ptr<_1b57c70e5_dynamic> _self_, jule::Uintptr _3227_var, jule::Ptr<_1b4c7c90e_TypeKind> _3245_kind);
inline jule::Bool _1b57c7898_removeVar(_1b57c70e5_dynamic* _self_, jule::Uintptr _5528_var);
inline jule::Bool _1b57c7c94_isFits(_1b57c70e5_dynamic* _self_, jule::Uintptr _6925_var, jule::Ptr<_1b4c7c90e_TypeKind> _6939_kind);
inline _1b57c9779_dataCheckpoint _1b57ca0e8_getCheckpoint(_1b57c9c74_data* _self_);
inline void _1b57ca3a1_loadCheckpoint(_1b57c9c74_data* _self_, _1b57c9779_dataCheckpoint* _3538_c);
inline void _1b57cbacd_pushVar(_1b57cb66b_boundary* _self_, jule::Uintptr _2426_var, jule::Any _2444_maxSize);
inline jule::Bool _1b57cc31a_fitsMaxSize(_1b57cb66b_boundary* _self_, jule::Uintptr _7130_var, jule::Any _7144_expr);
inline jule::Ptr<_1b5946a06_Optimizer> static__1b5946e79_New(jule::Ptr<_1b57a68aa_IR>* _2624_ir);
inline void _1b5947232_optimizeGlobal(_1b5946a06_Optimizer* _self_, jule::Ptr<_1b4bddaa1_Var>* _3238_v);
inline void _1b59474da_optimizeFunction(_1b5946a06_Optimizer* _self_, jule::Ptr<_1b4b36884_Fn>* _3840_func);
inline void _1b5947793_optimizeStruct(_1b5946a06_Optimizer* _self_, jule::Ptr<_1b4b218b3_Struct>* _4838_s);
inline void _1b5947a4b_optimizeGlobals(_1b5946a06_Optimizer* _self_, jule::Ptr<_1b4b9d7b9_Package>* _6439_p);
inline void _1b5947d04_optimizeFunctions(_1b5946a06_Optimizer* _self_, jule::Ptr<_1b4b9d7b9_Package>* _7241_p);
inline void _1b59480ac_optimizeStructs(_1b5946a06_Optimizer* _self_, jule::Ptr<_1b4b9d7b9_Package>* _8039_p);
inline void _1b5948365_optimizePackage(_1b5946a06_Optimizer* _self_, jule::Ptr<_1b4b9d7b9_Package>* _8839_p);
inline void _1b5948563_Optimize(_1b5946a06_Optimizer* _self_);
inline void static__1b5948ba1_Reset(void);
inline void static__1b596d588_Print(jule::Str _1921_escape, jule::Str _1934_text);
inline void static__1b597105d_LogFlat(_1cb285120_Log* _1424_l);
inline void static__1b597128e_LogError(_1cb285120_Log* _1925_l);
inline void static__1b59714c0_Log(_1cb285120_Log* _6520_l);
inline void static__1b5971701_PrintLogs(jule::Slice<_1cb285120_Log>* _7526_logs);
inline _1a901b5b0_Time static__1a901b967_Unix(jule::U64 _9120_sec);
inline _1a901b5b0_Time static__1a901bb76_Now(void);
inline _1a901add9_AbsTime _1a901d35e_Abs(_1a901b5b0_Time* _self_);
inline jule::Ptr<_1b644d496_scopeCoder> static__1b644db06_new(jule::Ptr<_1a9026b3c_ObjectCoder>* _7324_oc);
inline void _1ac4eb938_iterHead(jule::Ptr<_1b644d496_scopeCoder> _self_, jule::Ptr<_1b4b7a642_RangeIter>* _8032_it, jule::Bool* _8044_ref, jule::Str _8055_begin);
inline void _1b644e2cc_rangeIndexIter(jule::Ptr<_1b644d496_scopeCoder> _self_, jule::Ptr<_1b4b7a642_RangeIter>* _12939_it);
inline void _1b644e585_rangeHashmapIter(jule::Ptr<_1b644d496_scopeCoder> _self_, jule::Ptr<_1b4b7a642_RangeIter>* _19641_it);
inline void _1b644e83d_strRuneIter(jule::Ptr<_1b644d496_scopeCoder> _self_, jule::Ptr<_1b4d739d3_StrRuneIter> _24335_it);
inline void _1b644eae6_ifCase(jule::Ptr<_1b644d496_scopeCoder> _self_, jule::Ptr<_1b4b78c28_If> _35130_i);
inline void _1b644ed9e_conditional(jule::Ptr<_1b644d496_scopeCoder> _self_, jule::Ptr<_1b4b79443_Conditional> _36035_c);
inline void _1b6450157_infIter(jule::Ptr<_1b644d496_scopeCoder> _self_, jule::Ptr<_1b4b79740_InfIter> _38031_it);
inline void _1b6450410_whileIter(jule::Ptr<_1b644d496_scopeCoder> _self_, jule::Ptr<_1b4b79be6_WhileIter> _39733_it);
inline void _1b64506b8_rangeIter(jule::Ptr<_1b644d496_scopeCoder> _self_, jule::Ptr<_1b4b7a642_RangeIter> _43633_it);
inline void _1b6450971_cont(jule::Ptr<_1b644d496_scopeCoder> _self_, jule::Ptr<_1b4b7a9c7_ContSt> _44924_c);
inline void _1b6450c29_label(jule::Ptr<_1b644d496_scopeCoder> _self_, jule::Ptr<_1b4b7b19d_Label> _45425_l);
inline void _1b6450ed2_gotoSt(jule::Ptr<_1b644d496_scopeCoder> _self_, jule::Ptr<_1b4b7b577_GotoSt> _45926_gt);
inline void _1b645128a_postfix(jule::Ptr<_1b644d496_scopeCoder> _self_, jule::Ptr<_1b4b7b951_Postfix> _46431_p);
inline void _1b6451543_assign(jule::Ptr<_1b644d496_scopeCoder> _self_, jule::Ptr<_1b4b7be07_Assign> _47130_a);
inline void _1b64517eb_mapLookupAssign(jule::Ptr<_1b644d496_scopeCoder> _self_, jule::Ptr<_1b4b7c3ad_MultiAssign>* _47740_a);
inline void _1b6451aa4_multiAssignTup(jule::Ptr<_1b644d496_scopeCoder> _self_, jule::Ptr<_1b4b7c3ad_MultiAssign>* _50039_a);
inline void _1b6451d5c_multiAssignFn(jule::Ptr<_1b644d496_scopeCoder> _self_, jule::Ptr<_1b4b7c3ad_MultiAssign>* _54938_a);
inline void _1b6452115_multiAssign(jule::Ptr<_1b644d496_scopeCoder> _self_, jule::Ptr<_1b4b7c3ad_MultiAssign> _60935_a);
inline jule::Fn<void> _1b6452456_matchExpr(jule::Ptr<_1b644d496_scopeCoder> _self_, jule::Ptr<_1b4b7ca1d_Match> _63533_m);
inline void _1b64527b9_case(jule::Ptr<_1b644d496_scopeCoder> _self_, jule::Ptr<_1b4b7ca1d_Match> _64528_m, jule::Ptr<_1b4b7d546_Case> _64543_c);
inline void _1b6452a72_matchSt(jule::Ptr<_1b644d496_scopeCoder> _self_, jule::Ptr<_1b4b7ca1d_Match> _71531_m);
inline void _1b6452d2a_fallSt(jule::Ptr<_1b644d496_scopeCoder> _self_, jule::Ptr<_1b4b7dc3e_FallSt> _77026_f);
inline void _1b64530d3_breakSt(jule::Ptr<_1b644d496_scopeCoder> _self_, jule::Ptr<_1b4b7ada1_BreakSt> _77527_b);
inline void _1b645338b_setResult(jule::Ptr<_1b644d496_scopeCoder> _self_, jule::Ptr<_1b4b7e0d5_RetSt> _78433_r);
inline void _1b6453644_retSt(jule::Ptr<_1b644d496_scopeCoder> _self_, jule::Ptr<_1b4b7e0d5_RetSt> _81229_r);
inline void _1b64538ec_var(jule::Ptr<_1b644d496_scopeCoder> _self_, jule::Ptr<_1b4bddaa1_Var> _84827_v);
inline void _1b6453ba5_mutSlicing(jule::Ptr<_1b644d496_scopeCoder> _self_, jule::Ptr<_1b4d726c4_MutSlicingExprModel> _85434_m);
inline void _1b6453e5d_swap(jule::Ptr<_1b644d496_scopeCoder> _self_, jule::Ptr<_1b4d71470_SwapExprModel> _87128_m);
inline void _1b6454216_exceptionalForwarding(jule::Ptr<_1b644d496_scopeCoder> _self_, jule::Ptr<_1b4d710da_ExceptionalForwardingExprModel> _87945_m);
inline void _1b64544be_st(jule::Ptr<_1b644d496_scopeCoder> _self_, jule::Any _88526_st);
inline void _1b6454777_scopeStmts(jule::Ptr<_1b644d496_scopeCoder> _self_, jule::Ptr<_1b4b7880a_Scope>* _94135_s);
inline void _1b6454a30_scope(jule::Ptr<_1b644d496_scopeCoder> _self_, jule::Ptr<_1b4b7880a_Scope> _95029_s);
inline void _1b6454cd8_commonFuncScope(jule::Ptr<_1b644d496_scopeCoder> _self_, jule::Ptr<_1b4b39865_FnIns>* _96540_f);
inline void _1b645514b_anonFuncScope(jule::Ptr<_1b644d496_scopeCoder> _self_, jule::Ptr<_1b4b2b857_AnonFnExprModel> _100537_m, jule::Str _100558_ident);
inline void _1b6455404_funcScope(jule::Ptr<_1b644d496_scopeCoder> _self_, jule::Ptr<_1b4b39865_FnIns> _103733_f);
inline jule::Ptr<_1b6458acd_exprCoder> static__1b6458e96_new(jule::Ptr<_1a9026b3c_ObjectCoder>* _11424_oc);
inline void _1b645924e_string(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b2753508_Const>* _12027_c);
inline void _1b6459507_boolean(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Bool _13527_b);
inline void _1b6459705_nilLit(jule::Ptr<_1b6458acd_exprCoder> _self_);
inline jule::Bool _1b6459a46_ftoaSpecialCases(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::F64* _14737_x);
inline void _1b6459cee_float32(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b2753508_Const>* _16128_c);
inline void _1b645a0a7_float64(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b2753508_Const>* _18028_c);
inline void _1b645a360_constant(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b2753508_Const> _19832_c);
inline void _1b645a77d_divByZeroBinary(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4ad5712_Token>* _22236_op, jule::Ptr<_1b4b28546_OperandExprModel>* _22253_l, jule::Ptr<_1b4b28546_OperandExprModel>* _22280_r);
inline void _1b645aa36_unsafeBinary(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b28a41_BinaryExprModel> _24436_m);
inline void _1b645acde_binary(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b28a41_BinaryExprModel> _27530_m);
inline void _1b645b097_var(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4bddaa1_Var> _28727_m);
inline void _1b645b350_structureIns(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b24641_StructIns> _30336_m);
inline void _1b645b608_unary(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b28e1a_UnaryExprModel> _30729_m);
inline void _1b645b8b1_structureLit(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b297de_StructLitExprModel> _33136_m);
inline void _1b645bb69_allocStructure(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b29adb_AllocStructLitExprModel> _36238_m);
inline void _1b645be22_possibleRefExpr(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Any _37035_expr);
inline void _1b645c340_castTraitFromTrait(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b2a16e_CastingExprModel>* _38443_m, jule::Ptr<_1b4b49c3d_Trait> _38469_t1, jule::Ptr<_1b4b49c3d_Trait> _38485_t2);
inline void _1b645c5e8_casting(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b2a16e_CastingExprModel> _39731_m);
inline void _1b645c8a1_models(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Slice<jule::Any> _51330_args);
inline void _1b645cb59_args(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b2aa21_FnCallExprModel>* _52529_m);
inline void _1b645ce12_modelForCall(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Any _55636_expr);
inline void _1b645d1ba_pushCallInf(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b2aa21_FnCallExprModel>* _57132_m);
inline jule::Bool _1b645d50b_isWrapped(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b2aa21_FnCallExprModel>* _59434_m);
inline jule::Bool _1b645d84c_writeReceiver(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Any _61837_m);
inline void _1b645db05_pureFuncCall(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b2aa21_FnCallExprModel>* _63137_m);
inline void _1b645ddad_coFuncCall(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b2aa21_FnCallExprModel>* _72135_m);
inline void _1b645e221_writeUseExpr(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b39865_FnIns>* _77237_f, jule::Ptr<_1b4c466a8_Data> _77252_d);
inline void _1b645e4c9_funcCall(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b2aa21_FnCallExprModel> _79332_m);
inline void _1b645e782_slice(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b2adea_SliceExprModel> _86629_m);
inline void _1b645ea3a_indexing(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b2b3a1_IndexingExprModel> _87832_m);
inline void _1b645ece3_unsafeIndexing(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4d72d56_UnsafeIndexingExprModel> _91838_m);
inline void _1b646009b_anonFunc(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b2b857_AnonFnExprModel> _93532_m);
inline void _1b6460354_mapExpr(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b2c1d7_MapExprModel> _96631_m);
inline void _1b646060c_slicing(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b2c76a_SlicingExprModel> _98731_m);
inline void _1b64608b5_traitSub(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b2cced_TraitSubIdentExprModel> _100332_m);
inline void _1b6460b6d_structureSub(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b2d68e_StructSubIdentExprModel> _101936_m);
inline void _1b6460e26_array(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b2de0e_ArrayExprModel> _102829_m);
inline void _1b64611ce_funcInsCommon(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b39865_FnIns> _105137_m);
inline void _1b6461487_funcIns(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b39865_FnIns> _105831_m);
inline void _1b6461740_tuple(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b2e20b_TupleExprModel> _106929_m);
inline void _1b64619e8_newCall(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b2ed88_BuiltinNewCallExprModel> _108031_m);
inline void _1b6461ca1_outCall(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b2e5d5_BuiltinOutCallExprModel> _109031_m);
inline void _1b6462059_outlnCall(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b2e9ae_BuiltinOutlnCallExprModel> _109933_m);
inline void _1b6462312_panicCall(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b30262_BuiltinPanicCallExprModel> _110833_m);
inline void _1b64625ba_assertCall(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b30718_BuiltinAssertCallExprModel> _111634_m);
inline void _1b6462873_errorCall(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b3231e_BuiltinErrorCallExprModel> _112933_m);
inline void _1b6462b2b_copyCall(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b31e45_BuiltinCopyCallExprModel> _116132_m);
inline void _1b6462dd4_lenCall(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b31395_BuiltinLenCallExprModel> _116931_m);
inline void _1b646318c_capCall(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b31692_BuiltinCapCallExprModel> _117431_m);
inline void _1b6463445_deleteCall(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b31a6b_BuiltinDeleteCallExprModel> _117934_m);
inline void _1b64636ed_makeCallSlice(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b30bbe_BuiltinMakeCallExprModel>* _119038_m);
inline void _1b64639a6_makeCallStr(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b30bbe_BuiltinMakeCallExprModel>* _120836_m);
inline void _1b6463c5e_makeCall(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b30bbe_BuiltinMakeCallExprModel> _121932_m);
inline void _1b6464017_pushToSlice(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4d73230_PushToSliceExprModel> _122735_m);
inline void _1b64642c0_appendToSlice(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4d73609_AppendToSliceExprModel> _128737_m);
inline void _1b6464578_appendCall(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b31098_BuiltinAppendCallExprModel> _129534_m);
inline void _1b6464831_sizeof(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b329c3_SizeofExprModel> _130330_m);
inline void _1b6464ad9_alignof(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b32bb0_AlignofExprModel> _130931_m);
inline void _1b6464d92_runeLit(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b32e57_RuneExprModel> _131527_m);
inline void _1b646514a_structureStatic(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b2da35_StructStaticIdentExprModel> _132939_m);
inline void _1b6465403_integratedToStr(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b33254_IntegratedToStrExprModel> _133339_m);
inline void _1b64656ab_backendEmit(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b3362d_BackendEmitExprModel> _133935_m);
inline void _1b6465964_free(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b3392a_FreeExprModel> _135528_m);
inline void _1b6465c1c_strComp(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4d72141_StrCompExprModel> _136431_m);
inline void _1b6465ec5_emptyCompare(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4d71849_EmptyCompareExprModel> _138036_m);
inline void _1b646627d_unsafeDeref(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4d73cd0_UnsafeDerefExprModel> _138935_m);
inline void _1b6466536_unsafeCasting(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4d740cc_UnsafeCastingExprModel> _140037_m);
inline void _1b64667de_model(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Any _141729_m);
inline void _1b6466a97_initExpr(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _151832_t);
inline jule::Ptr<_1b64693d5_TestCoder> static__1b6469858_New(jule::Ptr<_1a9026b3c_ObjectCoder>* _2924_oc);
inline jule::Ptr<_1b4b9a893_ImportInfo> _1b6469ade_findTestingPackage(jule::Ptr<_1b64693d5_TestCoder> _self_);
inline void _1b6469d97_appendTest(jule::Ptr<_1b64693d5_TestCoder> _self_, jule::Ptr<_1b4b39865_FnIns> _4434_f);
inline void _1b646a150_appendPackageTests(jule::Ptr<_1b64693d5_TestCoder> _self_, jule::Ptr<_1b4b9d7b9_Package>* _5943_p);
inline jule::Bool _1b646a3d6_readyTestingPackage(jule::Ptr<_1b64693d5_TestCoder> _self_);
inline void _1b646a5d4_callTmReset(jule::Ptr<_1b64693d5_TestCoder> _self_);
inline void _1b646a7d2_callTmFailed(jule::Ptr<_1b64693d5_TestCoder> _self_);
inline void _1b646a9d0_callTmSkipped(jule::Ptr<_1b64693d5_TestCoder> _self_);
inline void _1b646abcd_Serialize(jule::Ptr<_1b64693d5_TestCoder> _self_);
inline void static__1b646c86c_writeIdentTo(_1cb1d27a9_StrBuilder* _3533_buf, jule::Str* _3551_ident);
inline void static__1b646cc13_toOut(_1cb1d27a9_StrBuilder* _6326_buf, jule::Str _6343_ident, jule::Uintptr _6355_addr);
inline void static__1b646d164_toLocal(_1cb1d27a9_StrBuilder* _7828_buf, jule::I64 _7845_row, jule::I64 _7855_col, jule::Str* _7866_ident);
inline void static__1b646d450_func(_1cb1d27a9_StrBuilder* _8625_buf, jule::Ptr<_1b4b36884_Fn>* _8643_f);
inline void static__1b646d73b_funcIns(_1cb1d27a9_StrBuilder* _10228_buf, jule::Ptr<_1b4b39865_FnIns>* _10246_f);
inline void static__1b646da27_traitDecl(_1cb1d27a9_StrBuilder* _11730_buf, jule::Ptr<_1b4b49c3d_Trait> _11747_t);
inline void static__1b646dd13_param(_1cb1d27a9_StrBuilder* _12126_buf, jule::Ptr<_1b4b34db0_Param>* _12144_p);
inline void static__1b646e0ee_structure(_1cb1d27a9_StrBuilder* _13630_buf, jule::Ptr<_1b4b218b3_Struct>* _13648_s);
inline void static__1b646e3da_structureIns(_1cb1d27a9_StrBuilder* _14733_buf, jule::Ptr<_1b4b24641_StructIns>* _14751_s);
inline void static__1b646e6c6_field(_1cb1d27a9_StrBuilder* _15526_buf, jule::Ptr<_1b4b1d98c_Field>* _15544_f);
inline void static__1b646e9b2_var(_1cb1d27a9_StrBuilder* _16524_buf, jule::Ptr<_1b4bddaa1_Var> _16545_v);
inline void static__1b646ec9d_iterBegin(_1cb1d27a9_StrBuilder* _18730_buf, jule::Uintptr _18747_it);
inline void static__1b6470089_iterEnd(_1cb1d27a9_StrBuilder* _19228_buf, jule::Uintptr _19245_it);
inline void static__1b6470375_iterNext(_1cb1d27a9_StrBuilder* _19729_buf, jule::Uintptr _19746_it);
inline void static__1b6470661_label(_1cb1d27a9_StrBuilder* _20226_buf, jule::Uintptr _20243_u);
inline void static__1b647094c_matchEnd(_1cb1d27a9_StrBuilder* _20729_buf, jule::Uintptr _20746_m);
inline void static__1b6470c38_caseBegin(_1cb1d27a9_StrBuilder* _21230_buf, jule::Uintptr _21247_c);
inline jule::Str _1a903618a_Str(_1a9035cc2_customType* _self_);
inline jule::Bool _1a90364cb_Equal(jule::Ptr<_1a9035cc2_customType> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _4421_k);
inline jule::Ptr<_1a903690a_typeCoder> static__1a9036e27_new(jule::Ptr<_1a9026b3c_ObjectCoder>* _6924_oc);
inline void _1a903728a_toType(_1a903690a_typeCoder* _self_, _1cb1d27a9_StrBuilder* _7630_buf, jule::Str _7651_id);
inline void _1a90375ed_prim(_1a903690a_typeCoder* _self_, _1cb1d27a9_StrBuilder* _9028_buf, jule::Ptr<_1b4c854d8_Prim> _9045_p);
inline void _1a9037961_tuple(_1a903690a_typeCoder* _self_, _1cb1d27a9_StrBuilder* _9529_buf, jule::Ptr<_1b4c8a5cb_Tuple> _9550_t);
inline void _1a9037cc4_asSptr(_1a903690a_typeCoder* _self_, _1cb1d27a9_StrBuilder* _10730_buf, jule::Slice<jule::U8> _10747_elem);
inline void _1a9038137_sptr(_1a903690a_typeCoder* _self_, _1cb1d27a9_StrBuilder* _11428_buf, jule::Ptr<_1b4c89014_Sptr> _11449_sptr);
inline void _1a903849a_ptr(_1a903690a_typeCoder* _self_, _1cb1d27a9_StrBuilder* _12127_buf, jule::Ptr<_1b4c8c7cb_Ptr> _12148_p);
inline void _1a903880d_enumDecl(_1a903690a_typeCoder* _self_, _1cb1d27a9_StrBuilder* _13232_buf, jule::Ptr<_1b4b4c449_Enum> _13253_e);
inline void _1a9038b71_typeEnumDecl(_1a903690a_typeCoder* _self_, _1cb1d27a9_StrBuilder* _13736_buf, jule::Ptr<_1b4b4db54_TypeEnum> _13757_e);
inline void _1a9038ed4_asSlice(_1a903690a_typeCoder* _self_, _1cb1d27a9_StrBuilder* _14131_buf, jule::Ptr<_1b4c7c90e_TypeKind> _14152_elem);
inline void _1a9039347_slice(_1a903690a_typeCoder* _self_, _1cb1d27a9_StrBuilder* _14829_buf, jule::Ptr<_1b4c899d7_Slc> _14850_s);
inline void _1a90396aa_mapType(_1a903690a_typeCoder* _self_, _1cb1d27a9_StrBuilder* _15331_buf, jule::Ptr<_1b4c8b17b_Map> _15352_m);
inline void _1a9039d81_structureIns(_1a903690a_typeCoder* _self_, _1cb1d27a9_StrBuilder* _16736_buf, jule::Ptr<_1b4b24641_StructIns> _16757_s);
inline void _1a903a1e4_array(_1a903690a_typeCoder* _self_, _1cb1d27a9_StrBuilder* _19129_buf, jule::Ptr<_1b4c8bd08_Arr> _19150_a);
inline void _1a903a8ba_paramIns(_1a903690a_typeCoder* _self_, _1cb1d27a9_StrBuilder* _21432_buf, jule::Ptr<_1b4b387dc_ParamIns>* _21454_p);
inline void _1a903b091_funcInsResult(_1a903690a_typeCoder* _self_, _1cb1d27a9_StrBuilder* _24637_s, jule::Ptr<_1b4b39865_FnIns>* _24657_f);
inline void _1a903b404_anonFunc(_1a903690a_typeCoder* _self_, _1cb1d27a9_StrBuilder* _26432_buf, jule::Ptr<_1b4b39865_FnIns> _26453_f);
inline void _1a903b767_func(_1a903690a_typeCoder* _self_, _1cb1d27a9_StrBuilder* _28528_buf, jule::Ptr<_1b4b39865_FnIns> _28549_f);
inline void _1a903baca_kind(_1a903690a_typeCoder* _self_, _1cb1d27a9_StrBuilder* _29228_buf, jule::Ptr<_1b4c7c90e_TypeKind> _29249_k);
inline jule::Ptr<_1a903e4e5_resultCoder> static__1a903e9bd_new(jule::Ptr<_1a903690a_typeCoder>* _35924_tc);
inline void _1a903ed31_ptr(_1a903e4e5_resultCoder* _self_, _1cb1d27a9_StrBuilder* _36327_s, jule::Ptr<_1b4c8c7cb_Ptr> _36346_p);
inline void _1a9040194_sptr(_1a903e4e5_resultCoder* _self_, _1cb1d27a9_StrBuilder* _36828_s, jule::Ptr<_1b4c89014_Sptr> _36847_p);
inline void _1a9040507_mapType(_1a903e4e5_resultCoder* _self_, _1cb1d27a9_StrBuilder* _37331_s, jule::Ptr<_1b4c8b17b_Map> _37350_p);
inline void _1a904086a_slice(_1a903e4e5_resultCoder* _self_, _1cb1d27a9_StrBuilder* _37929_s, jule::Ptr<_1b4c899d7_Slc> _37948_slc);
inline void _1a9040bcd_arr(_1a903e4e5_resultCoder* _self_, _1cb1d27a9_StrBuilder* _38427_s, jule::Ptr<_1b4c8bd08_Arr> _38446_arr);
inline void _1a9041041_func(_1a903e4e5_resultCoder* _self_, _1cb1d27a9_StrBuilder* _39028_s, jule::Ptr<_1b4b39865_FnIns> _39047_f);
inline void _1a90413a4_tup(_1a903e4e5_resultCoder* _self_, _1cb1d27a9_StrBuilder* _40327_s, jule::Ptr<_1b4c8a5cb_Tuple> _40346_tup);
inline void _1a9041717_codeMut(_1a903e4e5_resultCoder* _self_, _1cb1d27a9_StrBuilder* _41031_s, jule::Ptr<_1b4c7c90e_TypeKind>* _41051_t);
inline void _1a9041a7a_codeMut1(_1a903e4e5_resultCoder* _self_, _1cb1d27a9_StrBuilder* _44532_s, jule::Ptr<_1b4c7c90e_TypeKind>* _44552_t);
inline jule::Slice<jule::U8> _1a9041d88_code(_1a903e4e5_resultCoder* _self_, jule::Ptr<_1b4c7c90e_TypeKind>* _45428_t);
inline jule::Str _1ac9ee9a7_Name(_1ac9ee589_Flag* _self_);
inline jule::Str _1ac9eeb0b_What(_1ac9ee589_Flag* _self_);
inline void _1ac9eec60_Reset(_1ac9ee589_Flag* _self_);
inline jule::I32 _1ac9eedb4_Short(_1ac9ee589_Flag* _self_);
inline jule::Str _1aca02cb8_Name(_1aca0313c_Flag* _self_);
inline jule::Str _1aca03428_What(_1aca0313c_Flag* _self_);
inline void _1aca0356b_Reset(_1aca0313c_Flag* _self_);
inline jule::I32 _1aca036ae_Short(_1aca0313c_Flag* _self_);
inline jule::Str _1aca0642b_Name(_1aca067a0_Flag* _self_);
inline jule::Str _1aca06a8b_What(_1aca067a0_Flag* _self_);
inline void _1aca06bce_Reset(_1aca067a0_Flag* _self_);
inline jule::I32 _1aca06d22_Short(_1aca067a0_Flag* _self_);
inline jule::Str _1aca09ad3_Name(_1aca09e57_Flag* _self_);
inline jule::Str _1aca0a243_What(_1aca09e57_Flag* _self_);
inline void _1aca0a386_Reset(_1aca09e57_Flag* _self_);
inline jule::I32 _1aca0a4c9_Short(_1aca09e57_Flag* _self_);
inline jule::Str _1aca0d246_Name(_1aca0d5ba_Flag* _self_);
inline jule::Str _1aca0d8a6_What(_1aca0d5ba_Flag* _self_);
inline void _1aca0d9e9_Reset(_1aca0d5ba_Flag* _self_);
inline jule::I32 _1aca0db3c_Short(_1aca0d5ba_Flag* _self_);
inline jule::Ptr<_1a90a9e45_FlagSet> static__1a90aa231_New(void);
inline jule::Trait _1a90aa6d7_FindFlag(_1a90a9e45_FlagSet* _self_, jule::Str _7127_name);
inline jule::Trait _1a90aaa28_FindFlagShort(_1a90a9e45_FlagSet* _self_, jule::I32 _8132_name);
inline jule::Exceptional<jule::Slice<jule::Str>> _1a90ab100_Parse(_1a90a9e45_FlagSet* _self_, jule::Slice<jule::Str> _11524_args);
inline jule::Ptr<_1aca0d5ba_Flag> _1aca76be9_addFlagCommon(_1a90a9e45_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what);
inline jule::Ptr<_1aca09e57_Flag> _1aca7deed_addFlagCommon(_1a90a9e45_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what);
inline void _1aca744bb_AddVar(_1a90a9e45_FlagSet* _self_, jule::Ptr<jule::Str> _16762_var, jule::Str _16771_name, jule::I32 _16782_short, jule::Str _16795_what);
inline void _1aca7b814_AddVar(_1a90a9e45_FlagSet* _self_, jule::Ptr<jule::Bool> _16762_var, jule::Str _16771_name, jule::I32 _16782_short, jule::Str _16795_what);
inline __jule_tuple_i64__jule_tuple_bool _1aca2129d_parseInteger(_1a90ac909_argParser* _self_, jule::Str* _18531_s, jule::Fn<__jule_tuple_i64__jule_tuple_bool,jule::Str,jule::I64> _18539_parser);
inline __jule_tuple_u64__jule_tuple_bool _1aca28c23_parseInteger(_1a90ac909_argParser* _self_, jule::Str* _18531_s, jule::Fn<__jule_tuple_u64__jule_tuple_bool,jule::Str,jule::I64> _18539_parser);
inline jule::Str _1a90ad223_getData(_1a90ac909_argParser* _self_);
inline jule::VoidExceptional _1a90ad498_processFlag(_1a90ac909_argParser* _self_, jule::Trait* _21235_flag);
inline jule::VoidExceptional _1a90ad751_singleDash(_1a90ac909_argParser* _self_, jule::Str* _25230_arg);
inline jule::VoidExceptional _1a90ada09_doubleDash(_1a90ac909_argParser* _self_, jule::Str* _26630_arg);
inline jule::VoidExceptional _1a90adc07_tryArg(_1a90ac909_argParser* _self_);
inline jule::VoidExceptional _1a90ade05_parse(_1a90ac909_argParser* _self_);
inline jule::Ptr<_1a9026b3c_ObjectCoder> static__1a9027038_New(jule::Ptr<_1b57a68aa_IR>* _11524_ir, _1a9024d8d_SerializationInfo _11533_info);
inline void _1a90272e1_write(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, jule::Str _12625_s);
inline void _1a9027599_writeBytes(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, jule::Slice<jule::U8> _13030_b);
inline void _1a9027797_addIndent(jule::Ptr<_1a9026b3c_ObjectCoder> _self_);
inline void _1a9027995_doneIndent(jule::Ptr<_1a9026b3c_ObjectCoder> _self_);
inline void _1a9027b93_indent(jule::Ptr<_1a9026b3c_ObjectCoder> _self_);
inline jule::I64 _1a9027ed4_findAnyType(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, jule::Ptr<_1b4c7c90e_TypeKind>* _14936_t);
inline jule::I64 _1a9028325_pushDealloc(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _15835_t);
inline jule::Str _1a9028666_pushAnonFn(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, jule::Ptr<_1b4b2b857_AnonFnExprModel>* _17435_m);
inline jule::I64 _1a90289a7_pushAnyType(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _21435_t);
inline void _1a9028c60_pushResultIns(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, jule::Ptr<_1b4b39865_FnIns>* _31338_f);
inline void _1a9029018_pushResult(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, jule::Ptr<_1b4b36884_Fn>* _33435_f);
inline void _1a902937b_pushAndWriteMaskMapper(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, jule::Ptr<_1b4b49c3d_Trait> _34746_t1, jule::Ptr<_1b4b49c3d_Trait> _34762_t2);
inline void _1a9029634_locInfo(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, jule::Ptr<_1b4ad5712_Token>* _39828_t);
inline void _1a9029832_head(jule::Ptr<_1a9026b3c_ObjectCoder> _self_);
inline void _1a9029a30_links(jule::Ptr<_1a9026b3c_ObjectCoder> _self_);
inline void _1a9029cd8_prepareStructure(_1a9026b3c_ObjectCoder* _self_, jule::Ptr<_1b4b218b3_Struct>* _47940_s);
inline void _1a9029ed6_prepareStructures(jule::Ptr<_1a9026b3c_ObjectCoder> _self_);
inline void _1a902a28e_structurePlainDecl(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, jule::Ptr<_1b4b218b3_Struct>* _51043_s);
inline void _1a902a48c_structurePlainDecls(jule::Ptr<_1a9026b3c_ObjectCoder> _self_);
inline void _1a902a745_fieldDecl(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, jule::Ptr<_1b4b23a91_FieldIns>* _52634_f);
inline void _1a902a9ed_structureDestructor(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, jule::Ptr<_1b4b24641_StructIns>* _54444_s);
inline void _1a902ad61_structureOperatorEq(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, jule::Slice<jule::U8> _56039_ident, jule::Ptr<_1b4b24641_StructIns>* _56059_s);
inline void _1a902b1c4_structureOperatorNotEq(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, jule::Slice<jule::U8> _61742_ident, jule::Ptr<_1b4b24641_StructIns>* _61762_s);
inline void _1a902b5e2_structureOperator(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, jule::Slice<jule::U8> _63137_ident, jule::Ptr<_1b4b39865_FnIns>* _63157_f, jule::Str _63168_op);
inline void _1a902b89a_structureOperators(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, jule::Ptr<_1b4b24641_StructIns>* _68043_s);
inline void _1a902bb53_structureInsDecl(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, jule::Ptr<_1b4b24641_StructIns>* _72141_s);
inline void _1a902be0b_structureDecl(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, jule::Ptr<_1b4b218b3_Struct>* _75138_s);
inline void _1a902c109_structureDecls(jule::Ptr<_1a9026b3c_ObjectCoder> _self_);
inline void _1a902c307_structureMethodDecls(jule::Ptr<_1a9026b3c_ObjectCoder> _self_);
inline void _1a902c7d0_funcHead(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, _1cb1d27a9_StrBuilder* _78533_buf, jule::Ptr<_1b4b39865_FnIns>* _78555_f, jule::Bool _78566_ptr, jule::Str _78577_ident);
inline void _1a902cb43_funcDeclIns(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, jule::Ptr<_1b4b39865_FnIns>* _80436_f, jule::Bool _80447_ptr);
inline void _1a902cea6_funcDecl(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, jule::Ptr<_1b4b36884_Fn>* _81133_f, jule::Bool _81141_ptr);
inline void _1a902d25e_funcDeclTrait(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, jule::Ptr<_1b4b36884_Fn>* _81738_f);
inline void _1a902d45c_funcDecls(jule::Ptr<_1a9026b3c_ObjectCoder> _self_);
inline void _1a902d715_traitDataTypeMethods(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, jule::Ptr<_1b4b49c3d_Trait>* _83945_t);
inline void _1a902d913_traitDataTypes(jule::Ptr<_1a9026b3c_ObjectCoder> _self_);
inline void _1a902dc76_paramIns(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, _1cb1d27a9_StrBuilder* _87533_buf, jule::Ptr<_1b4b387dc_ParamIns>* _87555_p);
inline void _1a902e0d9_paramsIns(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, _1cb1d27a9_StrBuilder* _88134_buf, jule::Ptr<_1b4b39865_FnIns>* _88156_f);
inline void _1a902e44c_varInitExpr(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, jule::Ptr<_1b4bddaa1_Var>* _90236_v, jule::Fn<void> _90245_init);
inline void _1a902e705_var(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, jule::Ptr<_1b4bddaa1_Var> _92027_v);
inline void _1a902ea68_anonFuncInsDecl(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, jule::Ptr<_1b4b2b857_AnonFnExprModel>* _95140_m, jule::Str _95161_ident);
inline void _1a902edcb_anonFuncIns(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, jule::Ptr<_1b4b2b857_AnonFnExprModel>* _95736_m, jule::Str _95757_ident);
inline void _1a903023e_funcIns(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, jule::Ptr<_1b4b39865_FnIns>* _96732_f, jule::Str _96743_ident);
inline void _1a90304e7_func(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, jule::Ptr<_1b4b36884_Fn>* _97729_f);
inline void _1a903085a_funcTrait(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, jule::Ptr<_1b4b24641_StructIns>* _98330_s, jule::Ptr<_1b4b39865_FnIns>* _98350_f);
inline __jule_tuple_x_1b4b39865_FnIns__jule_tuple_bool _1a9030b9b_findTraitMetMap(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, jule::Ptr<_1b4b36884_Fn>* _99840_m);
inline void _1a903100e_traitWrapper(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, jule::Ptr<_1b4b49c3d_Trait>* _101037_t, jule::Ptr<_1b4b36884_Fn>* _101053_m);
inline void _1a903120c_traitWrappers(jule::Ptr<_1a9026b3c_ObjectCoder> _self_);
inline void _1a9031570_traitDataMethods(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, jule::Ptr<_1b4b49c3d_Trait>* _107641_t, jule::Ptr<_1b4b24641_StructIns> _107652_s);
inline void _1a903198d_traitData(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, jule::Ptr<_1b4b49c3d_Trait>* _109334_t, jule::I64 _109345_i, jule::Ptr<_1b4b24641_StructIns>* _109358_s);
inline void _1a9031b8b_traitDatas(jule::Ptr<_1a9026b3c_ObjectCoder> _self_);
inline void _1a9031d89_globals(jule::Ptr<_1a9026b3c_ObjectCoder> _self_);
inline void _1a9032087_decls(jule::Ptr<_1a9026b3c_ObjectCoder> _self_);
inline void _1a9032340_structureMethods(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, jule::Ptr<_1b4b24641_StructIns>* _115841_s);
inline void _1a90325e8_structureOstream(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, jule::Ptr<_1b4b24641_StructIns>* _116541_s);
inline void _1a90328a1_structureIns(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, jule::Ptr<_1b4b24641_StructIns>* _121637_s);
inline void _1a9032b59_structure(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, jule::Ptr<_1b4b218b3_Struct>* _122234_s);
inline void _1a9032d57_structures(jule::Ptr<_1a9026b3c_ObjectCoder> _self_);
inline void _1a9033055_funcs(jule::Ptr<_1a9026b3c_ObjectCoder> _self_);
inline void _1a903330d_pushInit(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, jule::Ptr<_1b4b9d7b9_Package>* _125433_pkg);
inline void _1a903350b_anonHashes(jule::Ptr<_1a9026b3c_ObjectCoder> _self_);
inline void _1a9033709_initCaller(jule::Ptr<_1a9026b3c_ObjectCoder> _self_);
inline void _1a9033907_end(jule::Ptr<_1a9026b3c_ObjectCoder> _self_);
inline void _1a9033c6a_insertBuf(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, _1cb1d27a9_StrBuilder* _131134_buf, jule::I64 _131151_pos);
inline void _1a9033e68_serializeHead(jule::Ptr<_1a9026b3c_ObjectCoder> _self_);
inline void _1a9034166_Serialize(jule::Ptr<_1a9026b3c_ObjectCoder> _self_);
inline jule::Ptr<_1b5906e28_ObjectDeadCode> static__1b5937046_new(jule::Ptr<_1b57a68aa_IR>* _3524_ir);
inline jule::Bool _1ac17bc4a_isLive(jule::Ptr<_1b5906e28_ObjectDeadCode> _self_, jule::Ptr<_1b4b49c3d_Trait>* _4130_t);
inline jule::Bool _1ac18269b_isLive(jule::Ptr<_1b5906e28_ObjectDeadCode> _self_, jule::Ptr<_1b4b39865_FnIns>* _4130_t);
inline jule::Bool _1ac1884e8_isLive(jule::Ptr<_1b5906e28_ObjectDeadCode> _self_, jule::Ptr<_1b4b24641_StructIns>* _4130_t);
inline jule::Bool _1ac190742_isLive(jule::Ptr<_1b5906e28_ObjectDeadCode> _self_, jule::Ptr<_1b4bddaa1_Var>* _4130_t);
inline void _1ac17c0e1_pushLive(jule::Ptr<_1b5906e28_ObjectDeadCode> _self_, jule::Ptr<_1b4b49c3d_Trait> _6135_t);
inline void _1ac182a42_pushLive(jule::Ptr<_1b5906e28_ObjectDeadCode> _self_, jule::Ptr<_1b4b39865_FnIns> _6135_t);
inline void _1ac188a9d_pushLive(jule::Ptr<_1b5906e28_ObjectDeadCode> _self_, jule::Ptr<_1b4b24641_StructIns> _6135_t);
inline void _1ac190ad8_pushLive(jule::Ptr<_1b5906e28_ObjectDeadCode> _self_, jule::Ptr<_1b4bddaa1_Var> _6135_t);
inline void _1b593783d_setReferencesAsLive(jule::Ptr<_1b5906e28_ObjectDeadCode> _self_, jule::Ptr<_1b4b3ca44_ReferenceStack>* _7444_rs);
inline void _1b5937ae6_inits(jule::Ptr<_1b5906e28_ObjectDeadCode> _self_, jule::Ptr<_1b4b9d7b9_Package>* _15630_pkg);
inline void _1b5937d9e_collectLivePackage(jule::Ptr<_1b5906e28_ObjectDeadCode> _self_, jule::Ptr<_1b4b9d7b9_Package>* _16843_pkg);
inline void _1b593809c_collectLive(jule::Ptr<_1b5906e28_ObjectDeadCode> _self_);
inline void _1b5938355_removeDeadGlobals(jule::Ptr<_1b5906e28_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1b4bddaa1_Var>>* _20142_vars);
inline void _1b593860d_removeDeadFns(jule::Ptr<_1b5906e28_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1b4b36884_Fn>>* _21338_funcs);
inline void _1b59388b6_removeDeadStructs(jule::Ptr<_1b5906e28_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1b4b218b3_Struct>>* _23442_structs);
inline void _1b5938b6e_removeDeadTraits(jule::Ptr<_1b5906e28_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1b4b49c3d_Trait>>* _25641_traits);
inline void _1b5938e27_removeDeadsFile(jule::Ptr<_1b5906e28_ObjectDeadCode> _self_, jule::Ptr<_1b4c41340_SymbolTable>* _27740_file);
inline void _1b59391d0_removeDeadsPackage(jule::Ptr<_1b5906e28_ObjectDeadCode> _self_, jule::Ptr<_1b4b9d7b9_Package>* _28443_pkg);
inline void _1b59393cd_removeDeads(jule::Ptr<_1b5906e28_ObjectDeadCode> _self_);
inline void _1b59395cb_elimanate(jule::Ptr<_1b5906e28_ObjectDeadCode> _self_);
inline __jule_tuple_x_1b57a68aa_IR__jule_tuple_s_1cb285120_Log static__1b57a6d50_Build(jule::Str _2721_path, jule::I64 _2732_flags);
inline void _1b57a7339_appendStructs(_1b57a68aa_IR* _self_, jule::Ptr<_1b4b9d7b9_Package>* _5633_p, jule::Slice<jule::Ptr<_1b4b218b3_Struct>>* _5657_buffer);
inline jule::Slice<jule::Ptr<_1b4b218b3_Struct>> _1b57a75c0_GetAllStructures(_1b57a68aa_IR* _self_);
inline void _1b57a7933_appendGlobals(_1b57a68aa_IR* _self_, jule::Ptr<_1b4b9d7b9_Package>* _7933_p, jule::Slice<jule::Ptr<_1b4bddaa1_Var>>* _7957_buffer);
inline jule::Slice<jule::Ptr<_1b4bddaa1_Var>> _1b57a7bb9_GetAllGlobals(_1b57a68aa_IR* _self_);
inline void _1b57a7db7_Order(_1b57a68aa_IR* _self_);
inline jule::Str _1b4b249b5_Str(_1b4b24641_StructIns* _self_);
inline jule::Bool _1b4b24d06_Equal(jule::Ptr<_1b4b24641_StructIns> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _25521_other);
inline jule::Bool _1b4b252ac_Same(_1b4b24641_StructIns* _self_, jule::Ptr<_1b4b24641_StructIns> _28319_s);
inline jule::Ptr<_1b4b36884_Fn> _1b4b256a8_FindMethod(_1b4b24641_StructIns* _self_, jule::Str _29829_ident, jule::Bool _29841_statically);
inline jule::Ptr<_1b4b23a91_FieldIns> _1b4b259e9_FindField(_1b4b24641_StructIns* _self_, jule::Str _30928_ident);
inline jule::Ptr<_1b4bddaa1_Var> _1b4b25d3a_FindStatic(_1b4b24641_StructIns* _self_, jule::Str _32029_ident);
inline jule::Ptr<_1cb34715a_Cmd> static__1cb347556_New(jule::Str _2619_path);
inline jule::VoidExceptional _1cb347754_Spawn(_1cb34715a_Cmd* _self_);
inline jule::Exceptional<jule::I64> _1cb347bd8_Wait(_1cb34715a_Cmd* _self_);
inline jule::VoidExceptional _1cb39bc09_spawn(_1cb34715a_Cmd* _self_);
inline jule::Exceptional<jule::I64> _1cb39c18d_wait(_1cb34715a_Cmd* _self_);
inline void _20d895e3a_Free(void* _4520_ptr);
inline jule::Str _20d8c672e_BytePtrToStr(jule::U8* _6924_s);
inline jule::Slice<jule::U8> _20d8c69b5_StrToBytes(jule::Str _9315_s);
inline jule::I64 _20d83b793_GetLastErrno(void);
inline jule::I64 _20d8d6299_Fcntl(jule::I64 _5410_handle, jule::I64 _5423_cmd, jule::I64 _5433_arg);
inline jule::I64 _20d8d661d_Stat(jule::U8* _5916_path, struct stat* _5933_stat);
inline jule::I64 _20d8d6a4c_Open(jule::U8* _6416_path, jule::I64 _6429_flag, jule::I64 _6440_mode);
inline jule::U8* _20d8d6dc1_Getcwd(jule::U8* _7018_buff, jule::U64 _7031_bufflen);
inline DIR* _20d8d73bb_Opendir(jule::U8* _7519_path);
inline struct dirent* _20d8d7597_Readdir(DIR* _7823_dir);
inline jule::I64 _20d8d783e_Closedir(DIR* _8124_dir);
inline jule::I64 _20d8d8246_Mkdir(jule::U8* _9017_path, jule::I64 _9030_mode);
inline jule::I64 _20d8d8510_Rmdir(jule::U8* _9517_path);
inline jule::I64 _20d8d87c9_Unlink(jule::U8* _9818_path);
inline jule::I64 _20d8e3c79_Read(jule::I64 _2016_handle, void* _2033_buff, jule::U64 _2048_n);
inline jule::I64 _20d8e4153_Close(jule::I64 _2510_handle);
inline jule::I64 _20d8e450a_Write(jule::I64 _2817_handle, void* _2830_buff, jule::U64 _2845_n);
inline void _20d8e473b_Exit(jule::I64 _339_code);
inline void _20d9251ea_handleRW(jule::Slice<jule::U8>* _1414_b);
inline void _20d9260b9_HandleRW(jule::Slice<jule::U8>* _814_b);
inline jule::Str _20d7319b8_Str(jule::U8* _108_b, jule::I64 _1018_n);
inline jule::Slice<jule::U8> _1a9147587_Slice(jule::U8* _2316_e, jule::I64 _2326_n);
inline jule::Slice<jule::U8> _20d73c760_StrBytes(jule::Str _4113_s);
inline jule::Str _20d73c9e6_BytesStr(jule::Slice<jule::U8> _5013_b);
inline jule::Str _20d73ccb0_StrFromBytes(jule::Slice<jule::U8> _5817_b);
inline jule::I64 _20d7635aa_getLastOsError(void);
inline jule::Slice<jule::Str> _20d767ceb_Args(void);
inline jule::Exceptional<jule::Str> _20d76825d_WorkingDir(void);
inline jule::Exceptional<jule::Str> _20d768b98_getwd(void);
inline jule::Bool _1cade3c7e_IsLetter(jule::I32 _7613_r);
inline jule::Bool _1cae592bc_is16(jule::Slice<_1cae5752e_Range16> _1919_ranges, jule::U16 _19128_r);
inline jule::Bool _1cae59641_is32(jule::Slice<_1cae57a5c_Range32> _2289_ranges, jule::U32 _22828_r);
inline jule::Bool _1cae59e49_isExcludingLatin(jule::Ptr<_1cae57ed0_RangeTable> _27821_rangeTab, jule::I32 _27844_r);
inline jule::Bool _1cae5a18b_IsUpper(jule::I32 _29512_r);
inline __jule_tuple_i32__jule_tuple_int _1cb179a2b_DecodeRune(jule::Slice<jule::U8> _18215_p);
inline __jule_tuple_i32__jule_tuple_int _1cb179d6c_DecodeRuneStr(jule::Str _22918_s);
inline __jule_tuple_i32__jule_tuple_int _1cb17a3bc_DecodeLastRuneStr(jule::Str _31722_s);
inline jule::Slice<jule::U8> _1cb17ae17_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r);
inline jule::Slice<jule::U8> _1cb17b28b_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r);
inline jule::I64 _1cb17b81e_RuneCountStr(jule::Str _47317_s);
inline jule::Bool _1cb17bad8_RuneStart(jule::U8 _51714_b);
inline jule::I64 _1cb1bc95e_findLastByte(jule::U8* _4517_begin, jule::U8* _4535_end, jule::U8 _4547_b);
inline jule::I64 _1cb1bd08b_FindByteStr(jule::Str _6816_s, jule::U8 _6824_b);
inline jule::I64 _1cb1bd410_FindLastByteStr(jule::Str _7920_s, jule::U8 _7928_b);
inline jule::Str _1cb1bd751_Repeat(jule::Str _1111_s, jule::I64 _1123_n);
inline jule::Bool _1cb1bdb19_HasPrefix(jule::Str _2614_s, jule::Str _2622_sub);
inline jule::Bool _1cb1bde8d_HasSuffix(jule::Str _3114_s, jule::Str _3122_sub);
inline jule::I64 _1cb1be444_FindAt(jule::Str _3911_s, jule::Str _3919_sub, jule::I64 _3933_i);
inline jule::I64 _1cb1be785_Find(jule::Str _549_s, jule::Str _5417_sub);
inline jule::I64 _1cb1bebb4_FindLastAt(jule::Str _6215_s, jule::Str _6223_sub, jule::I64 _6233_i);
inline jule::I64 _1cb1c0038_FindLast(jule::Str _8413_s, jule::Str _8421_sub);
inline jule::I64 _1cb1c1820_FindLastByte(jule::Str _14817_s, jule::U8 _14825_b);
inline jule::I64 _1cb1c1b94_FindRune(jule::Str _15513_s, jule::I32 _15521_r);
inline jule::I64 _1cb1c25bd_FindAny(jule::Str _18512_s, jule::Str _18520_runes);
inline jule::Slice<jule::Str> _1cb1c2c61_Split(jule::Str _21510_s, jule::Str _21518_sub, jule::I64 _21532_n);
inline jule::Bool _1cb1c30d5_Contains(jule::Str _24313_s, jule::Str _24321_sub);
inline jule::Bool _1cb1c3b52_ContainsAny(jule::Str _25816_s, jule::Str _25824_runes);
inline jule::I64 _1cb1c3ec6_Count(jule::Str _26410_s, jule::Str _26418_sub);
inline jule::Str _1cb1c44b0_Replace(jule::Str _28412_s, jule::Str _28420_sub, jule::Str _28430_new, jule::I64 _28444_n);
inline jule::Str _1cb1c523b_TrimLeft(jule::Str _34117_s, jule::Str _34125_cutset);
inline jule::Str _1cb1c55b0_TrimRight(jule::Str _35514_s, jule::Str _35522_cutset);
inline jule::Str _1cb1c5934_Trim(jule::Str _3699_s, jule::Str _36917_cutset);
inline jule::Str _1cb1c5ca8_Join(jule::Slice<jule::Str> _3759_parts, jule::Str _37523_sep);
inline jule::Str _1cb1de662_Clean(jule::Str _10914_path);
inline jule::Str _1cb1dec39_FromSlash(jule::Str _21214_path);
inline jule::Str _1cb1e007a_Join(jule::Slice<jule::Str> _2269_elem);
inline jule::Str _1cb1e0311_Ext(jule::Str _2318_path);
inline __jule_tuple_str__jule_tuple_bool _1cb1e05ca_Abs(jule::Str _2468_path);
inline jule::Str _1cb1e0894_Base(jule::Str _25213_path);
inline jule::Str _1cb1e0c6d_Dir(jule::Str _2838_path);
inline jule::Str _1cb1e0eb0_VolumeName(jule::Str _30115_path);
inline jule::Bool _1cb1e1e06_IsPathSep(jule::U8 _4814_c);
inline jule::Bool _1cb1e2214_IsAbs(jule::Str _5310_path);
inline jule::I64 _1cb1e24cd_volumeNameLen(jule::Str _5918_path);
inline __jule_tuple_str__jule_tuple_bool _1cb1e281e_abs(jule::Str _638_path);
inline jule::Str _1cb1e2aa5_join(jule::Slice<jule::Str> _739_elem);
inline jule::I64 _20d91d820_getLastFsError(void);
inline __jule_tuple_int__jule_tuple_bool _1cb38e191_AtoiBp(jule::U8* _722_b, jule::I64 _736_n);
inline jule::Str _1cb3977b5_Itoa(jule::I64 _89_x);
inline jule::Str _1cb397ac3_Utoa(jule::U64 _1613_x);
inline void _1cb397d04_rev(jule::Slice<jule::U8>* _3513_b);
inline jule::Slice<char*> _1cb39b401_strSliceToCstrSlice(jule::Slice<jule::Str>* _3525_s, jule::Slice<jule::Slice<jule::U8>>* _3540_bargs);
inline jule::I64 _1cb39b775_execvp(jule::Str* _4712_file, jule::Slice<jule::Str>* _4724_argv);
inline jule::VoidExceptional _1cb39b9a6_setenv(jule::Slice<jule::Str>* _5612_envv);
inline jule::I64 _1cb39c930_processErrorFromCode(jule::I64 _1125_code);
inline jule::I64 _1cb39cb83_getLastProcessError(void);
inline void _1cb39d49c_Exit(jule::I64 _129_code);
inline jule::Str _1cb39d6ab_Executable(void);
inline jule::Bool _1cb277a08_IsStdHeaderPath(jule::Str _2620_p);
inline jule::Bool _1cb277cd3_IsValidHeaderExt(jule::Str _3121_ext);
inline jule::Bool _1cb27809c_IsValidCppExt(jule::Str _4118_ext);
inline jule::Str _1cb285582_Logf(jule::Str _3239_fmt, jule::Slice<jule::Any> _32322_args);
inline jule::Str _1cb285890_argToStr(jule::Any _32713_arg);
inline jule::I64 _1cb285b59_findNextFmt(jule::Str _34016_fmt);
inline jule::Str _1cb286022_applyFmt(jule::Str _34917_fmt, jule::Slice<jule::Any> _34927_args);
inline jule::Bool _1cb286d7a_IsTopDirective(jule::Str _2219_directive);
inline jule::Bool _1cb288299_IsWindows(jule::Str _3714_os);
inline jule::Bool _1cb2885a7_IsDarwin(jule::Str _4013_os);
inline jule::Bool _1cb288871_IsLinux(jule::Str _4312_os);
inline jule::Bool _1cb288bb2_IsI386(jule::Str _4611_arch);
inline jule::Bool _1cb288e48_IsAmd64(jule::Str _4912_arch);
inline jule::Bool _1cb289212_IsArm64(jule::Str _5212_arch);
inline jule::Bool _1cb2894cb_IsUnix(jule::Str _5511_os);
inline jule::Bool _1cb2898a5_Is32Bit(jule::Str _5812_arch);
inline jule::Bool _1cb289ae7_Is64Bit(jule::Str _6112_arch);
inline void _1cb39e943_init(void);
inline jule::I64 _1b26d71a1_LeadingZeros64(jule::U64 _6119_x);
inline jule::I64 _1b26d80e7_TrailingZeros(jule::U64 _8318_x);
inline jule::I64 _1b26d89cc_TrailingZeros32(jule::U32 _10520_x);
inline jule::I64 _1b26d8c96_TrailingZeros64(jule::U64 _11420_x);
inline jule::I64 _1b26de76e_Len32(jule::U32 _35214_x);
inline jule::I64 _1b26dea38_Len64(jule::U64 _36614_x);
inline __jule_tuple_u64__jule_tuple_u64 _1b26e07c5_Add64(jule::U64 _41510_x, jule::U64 _41518_y, jule::U64 _41526_carry);
inline __jule_tuple_u64__jule_tuple_u64 _1b26e20ce_Mul64(jule::U64 _49910_x, jule::U64 _49918_y);
inline jule::U32 _1b25e3db0_F32Bits(jule::F32 _4112_f);
inline jule::F32 _1b25e41bd_F32FromBits(jule::U32 _4716_b);
inline jule::U64 _1b25e4487_F64Bits(jule::F64 _5212_f);
inline jule::F64 _1b25e47c8_F64FromBits(jule::U64 _5816_b);
inline __jule_tuple_f64__jule_tuple_int _1b25e6d3b_Frexp(jule::F64 _4714_f);
inline jule::F64 _1b26e969c_NaN(void);
inline jule::Bool _1b26e99aa_IsNaN(jule::F64 _5210_f);
inline jule::F64 _1b26e9c74_Inf(jule::I64 _618_sign);
inline jule::Bool _1b26ea13c_IsInf(jule::F64 _7210_f, jule::I64 _7218_sign);
inline __jule_tuple_f64__jule_tuple_int _1b26ea406_normalize(jule::F64 _8214_x);
inline jule::F64 _1b26ebdca_Log(jule::F64 _1118_x);
inline jule::F64 _1b26ec7b0_Abs(jule::F64 _438_x);
inline __jule_tuple_f64__jule_tuple_f64 _1b2704388_Modf(jule::F64 _449_f);
inline jule::F64 _1b2704b91_Log2(jule::F64 _449_x);
inline jule::Str _1b272d637_FmtFloat(jule::F64 _7913_f, jule::U8 _7921_fmt, jule::I64 _7932_prec, jule::I64 _7943_bitSize);
inline jule::Slice<jule::U8> _1b272dc20_genericFtoa(jule::Slice<jule::U8> _8720_dst, jule::F64 _8733_val, jule::U8 _8743_fmt, jule::I64 _8758_prec, jule::I64 _8769_bitSize);
inline jule::Slice<jule::U8> _1b272e429_bigFtoa(jule::Slice<jule::U8> _18716_dst, jule::I64 _18733_prec, jule::U8 _18744_fmt, jule::Bool _18755_neg, jule::U64 _1885_mant, jule::I64 _18816_exp, _1b272c427_floatInfo* _18827_flt);
inline jule::Slice<jule::U8> _1b272eb00_fmtDigits(jule::Slice<jule::U8> _22418_dst, jule::Bool _22431_shortest, jule::Bool _22447_neg, _1b272d0a4_decimalSlice _2255_digs, jule::I64 _22529_prec, jule::U8 _22540_fmt);
inline void _1b273001d_roundShortest(_1b2740d0e_decimal* _26223_d, jule::U64 _26235_mant, jule::I64 _26246_exp, _1b272c427_floatInfo* _26257_flt);
inline jule::Slice<jule::U8> _1b27305b2_fmtE(jule::Slice<jule::U8> _40113_dst, jule::Bool _40126_neg, _1b272d0a4_decimalSlice _40137_d, jule::I64 _40154_prec, jule::U8 _40165_fmt);
inline jule::Slice<jule::U8> _1b2730a9b_fmtF(jule::Slice<jule::U8> _45613_dst, jule::Bool _45626_neg, _1b272d0a4_decimalSlice _45637_d, jule::I64 _45654_prec);
inline jule::Slice<jule::U8> _1b2731250_fmtB(jule::Slice<jule::U8> _48913_dst, jule::Bool _48926_neg, jule::U64 _48937_mant, jule::I64 _48952_exp, _1b272c427_floatInfo* _48963_flt);
inline jule::Slice<jule::U8> _1b27318d2_fmtX(jule::Slice<jule::U8> _51113_dst, jule::I64 _51126_prec, jule::U8 _51137_fmt, jule::Bool _51148_neg, jule::U64 _5129_mant, jule::I64 _51224_exp, _1b272c427_floatInfo* _51235_flt);
inline jule::I64 _1b2731c56_min(jule::I64 _5968_a, jule::I64 _59616_b);
inline jule::I64 _1b27320ca_max(jule::I64 _6038_a, jule::I64 _60316_b);
inline jule::U8 _1b2732c68_lower(jule::U8 _4710_c);
inline __jule_tuple_u64__jule_tuple__1b2176b1e_ConvError _1b27331db_parseUint(jule::Str* _5119_s, jule::I64 _5131_base, jule::I64 _5146_bitSize);
inline jule::Exceptional<jule::U64> _1b273361a_ParseUint(jule::Str _14618_s, jule::I64 _14630_base, jule::I64 _14645_bitSize);
inline jule::Exceptional<jule::I64> _1b2733ac1_ParseInt(jule::Str _17217_s, jule::I64 _17225_base, jule::I64 _17240_bitSize);
inline __jule_tuple_f64__jule_tuple_bool _1b2734781_eiselLemire64(jule::U64 _4122_man, jule::I64 _4132_exp10, jule::Bool _4144_neg);
inline __jule_tuple_f32__jule_tuple_bool _1b2734c04_eiselLemire32(jule::U64 _11022_man, jule::I64 _11032_exp10, jule::Bool _11044_neg);
inline jule::I64 _1b27369d6_commonPrefixLenIgnoreCase(jule::Str _4630_s, jule::Str _4638_prefix);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1b2736ce4_special(jule::Str _6912_s);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1b27370ad_readFloat(jule::Str* _10815_s);
inline __jule_tuple_f64__jule_tuple_bool _1b2738b09_atof64exact(jule::U64 _48616_mantissa, jule::I64 _48635_exp, jule::Bool _48645_neg);
inline __jule_tuple_f32__jule_tuple_bool _1b2739038_atof32exact(jule::U64 _52016_mantissa, jule::I64 _52035_exp, jule::Bool _52049_neg);
inline __jule_tuple_f64__jule_tuple__1b2176b1e_ConvError _1b27395cc_atofHex(_1b272c427_floatInfo* _55613_flt, jule::U64 _55633_mantissa, jule::I64 _55652_exp, jule::Bool _55662_neg, jule::Bool _55673_trunc);
inline __jule_tuple_f32__jule_tuple_int__jule_tuple__1b2176b1e_ConvError _1b27399a6_atof32(jule::Str _62111_s);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1b2176b1e_ConvError _1b2739be8_atof64(jule::Str _67911_s);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1b2176b1e_ConvError _1b273a06c_parseFloatPrefix(jule::Str* _73622_s, jule::I64 _73630_bitSize);
inline jule::Exceptional<jule::F64> _1b273a3e1_ParseFloat(jule::Str _76815_s, jule::I64 _76823_bitSize);
inline void _1b273ac71_ryuFtoaFixed32(_1b272d0a4_decimalSlice* _4924_d, jule::U32 _4945_mant, jule::I64 _4956_exp, jule::I64 _4966_prec);
inline void _1b273b216_ryuFtoaFixed64(_1b272d0a4_decimalSlice* _12124_d, jule::U64 _12145_mant, jule::I64 _12156_exp, jule::I64 _12166_prec);
inline void _1b273ba52_formatDecimal(_1b272d0a4_decimalSlice* _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I64 _20088_prec);
inline void _1b273c02a_ryuFtoaShortest(_1b272d0a4_decimalSlice* _26125_d, jule::U64 _26146_mant, jule::I64 _26157_exp, _1b272c427_floatInfo* _26168_flt);
inline jule::I64 _1b273c2b1_mulByLog2Log10(jule::I64 _37719_x);
inline jule::I64 _1b273c57a_mulByLog10Log2(jule::I64 _38719_x);
inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1b273c9a9_computeBounds(jule::U64 _39518_mant, jule::I64 _39529_exp, _1b272c427_floatInfo* _3966_flt);
inline void _1b273d108_ryuDigits(_1b272d0a4_decimalSlice* _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup);
inline void _1b273d779_ryuDigits32(_1b272d0a4_decimalSlice* _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4559_upper, jule::Bool _45525_c0, jule::Bool _45539_cup, jule::I64 _45554_endindex);
inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1b273dba8_mult64bitPow10(jule::U32 _53419_m, jule::I64 _53431_e2, jule::I64 _53440_q);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1b273e0d7_mult128bitPow10(jule::U64 _56220_m, jule::I64 _56232_e2, jule::I64 _56241_q);
inline jule::Bool _1b273e45b_divisibleByPow5(jule::U64 _58624_m, jule::I64 _58632_k);
inline __jule_tuple_u32__jule_tuple_u32 _1b273e725_divmod1e9(jule::U64 _60214_x);
inline void _1b274265c_trim(_1b2740d0e_decimal* _27414_a);
inline void _1b2742948_rightShift(_1b2740d0e_decimal* _28420_a, jule::U64 _28432_k);
inline jule::Bool _1b2742dee_prefixIsLessThan(jule::Array<jule::U8,800> _33821_b, jule::I64 _33835_end, jule::Str* _33846_s);
inline void _1b27431a7_leftShift(_1b2740d0e_decimal* _35219_a, jule::U64 _35231_k);
inline jule::Bool _1b274352b_shouldRoundUp(_1b2740d0e_decimal* _39919_a, jule::I64 _39931_nd);
inline jule::Str _1b2744cad_FmtUint(jule::U64 _6112_i, jule::I64 _6120_base);
inline jule::Str _1b2745176_FmtInt(jule::I64 _7211_i, jule::I64 _7219_base);
inline jule::Str _1b2745440_Itoa(jule::I64 _819_i);
inline jule::Str _1b2745781_small(jule::I64 _8610_i);
inline jule::Bool _1b2745a17_isPowerOfTwo(jule::I64 _9617_x);
inline __jule_tuple_su8__jule_tuple_str _1b27460ab_fmtBits(jule::Slice<jule::U8> _10516_dst, jule::U64 _10533_u, jule::I64 _10541_base, jule::Bool _10552_neg, jule::Bool _10563_append_);
inline jule::Str _1b27475a7_RealKindOf(jule::Str _4515_kind);
inline jule::I64 _1b2747871_BitsizeOf(jule::Str _5914_k);
inline jule::Str _1b2747bb2_IntFromBits(jule::I64 _8716_bits);
inline jule::Str _1b2747e48_UintFromBits(jule::I64 _10517_bits);
inline jule::Str _1b2748212_FloatFromBits(jule::I64 _12318_bits);
inline jule::Bool _1b2748d17_CheckBitFloat(jule::Str _15118_val, jule::I64 _15128_bit);
inline jule::I64 _1b27490d1_BitsizeOfFloat(jule::F64 _16119_x);
inline jule::I64 _1b274939a_BitsizeOfInt(jule::I64 _17717_x);
inline jule::I64 _1b2749664_BitsizeOfUint(jule::U64 _19718_x);
inline void _1b274980c_UpdateTarget(void);
inline void _1b2749983_init(void);
inline jule::I64 _1b274d5e1_MinI(jule::Str _6113_k);
inline jule::I64 _1b274d8ee_MaxI(jule::Str _7913_k);
inline jule::U64 _1b274dbb8_MaxU(jule::Str _9713_k);
inline jule::F64 _1b274e009_Min(jule::Str _11512_k);
inline jule::F64 _1b274e290_Max(jule::Str _13312_k);
inline jule::Bool _1b274e746_IsI16Greater(jule::Str _621_k);
inline jule::Bool _1b274ea54_IsI32Greater(jule::Str _1121_k);
inline jule::Bool _1b274ed1d_IsI64Greater(jule::Str _1621_k);
inline jule::Bool _1b275015e_IsU16Greater(jule::Str _2321_k);
inline jule::Bool _1b27503e5_IsU32Greater(jule::Str _2821_k);
inline jule::Bool _1b27506ae_IsU64Greater(jule::Str _3421_k);
inline jule::Bool _1b2750978_IsF32Greater(jule::Str _4117_k);
inline jule::Bool _1b2750d52_IsF64Greater(jule::Str _4617_k);
inline jule::Bool _1b275114e_IsGreater(jule::Str _5118_k1, jule::Str _5127_k2);
inline jule::Bool _1b27522b5_IsSigInt(jule::Str _2717_k);
inline jule::Bool _1b27525c3_IsUnsigInt(jule::Str _3619_k);
inline jule::Bool _1b275288c_IsInt(jule::Str _4610_k);
inline jule::Bool _1b2752bcd_IsFloat(jule::Str _5112_k);
inline jule::Bool _1b2752e64_IsNum(jule::Str _5610_k);
inline jule::Bool _1b275322d_IsSigNum(jule::Str _6113_k);
inline void _1b275c523_lshiftUnsig(_1b2753508_Const* _59021_c, _1b2753508_Const* _59032_x);
inline void _1b275c853_rshiftUnsig(_1b2753508_Const* _59621_c, _1b2753508_Const* _59632_x);
inline jule::Bool _1b4ad5e4e_IsUnaryOp(jule::U64 _33414_id);
inline jule::Bool _1b4ad625c_IsBinOp(jule::U64 _34412_id);
inline jule::Bool _1b4ad6867_IsStr(jule::Str _36410_k);
inline jule::Bool _1b4ad6aed_IsRawStr(jule::Str _36713_k);
inline jule::Bool _1b4ad6db7_IsRune(jule::Str _37111_k);
inline jule::Bool _1b4ad779c_IsFloat(jule::Str _38012_k);
inline jule::Bool _1b4ad7a66_IsNum(jule::Str _38810_k);
inline jule::Bool _1b4ad80e9_IsIgnoreIdent(jule::Str _40318_ident);
inline jule::Bool _1b4ad83b3_IsAnonIdent(jule::Str _40616_ident);
inline jule::Bool _1b4ad8946_IsSpace(jule::I32 _41912_r);
inline jule::Bool _1b4ad8e41_IsLetter(jule::I32 _42913_r);
inline jule::Bool _1b4ad93b4_IsDecimal(jule::U8 _44914_b);
inline jule::Bool _1b4ad967d_IsBinary(jule::U8 _45213_b);
inline jule::Bool _1b4ad9947_IsOctal(jule::U8 _45512_b);
inline jule::Bool _1b4ad9c11_IsHex(jule::U8 _45810_b);
inline jule::Bool _1b4ad9eca_IsAssign(jule::U64 _47313_id);
inline jule::Bool _1b4ada294_IsPostfixOp(jule::U64 _48516_id);
inline jule::Bool _1b4ada55d_IsAssignOp(jule::U64 _49515_id);
inline jule::Ptr<_1b4adae98_File> _1b4adc373_NewFileSet(jule::Str _5715_path);
inline _1cb285120_Log _1b4addd9c_makeErr(jule::I64 _10012_row, jule::I64 _10022_col, jule::Ptr<_1b4adae98_File>* _10033_f, jule::Str _10043_fmt, jule::Slice<jule::Any> _10056_args);
inline jule::Bool _1b4ade265_bytesHasPrefix(jule::Slice<jule::U8>* _11020_bytes, jule::Str _11035_prefix);
inline jule::Str _1b4ade5d9_floatFmtE(jule::Slice<jule::U8>* _12215_txt, jule::I64 _12232_i);
inline jule::Str _1b4ade9a2_floatFmtP(jule::Slice<jule::U8>* _15615_txt, jule::I64 _15628_i);
inline jule::Str _1b4aded26_floatFmtDotnp(jule::Slice<jule::U8>* _16019_txt, jule::I64 _16036_i);
inline jule::Str _1b4ae019a_floatFmtDotfp(jule::Slice<jule::U8>* _18119_txt, jule::I64 _18136_i);
inline jule::Str _1b4ae051e_floatFmtDotp(jule::Slice<jule::U8>* _18618_txt, jule::I64 _18635_i);
inline jule::Str _1b4ae09a3_floatNum(jule::Slice<jule::U8>* _19114_txt, jule::I64 _19131_i);
inline jule::Str _1b4ae0be5_commonNum(jule::Slice<jule::U8>* _21615_txt);
inline jule::Str _1b4ae0eae_binaryNum(jule::Slice<jule::U8>* _23915_txt);
inline jule::Bool _1b4ae1333_isFloatFmtE(jule::U8 _26116_b, jule::I64 _26125_i);
inline jule::Bool _1b4ae16a7_isFloatFmtP(jule::U8 _26516_b, jule::I64 _26525_i);
inline jule::Bool _1b4ae1a2b_isFloatFmtDotnp(jule::Slice<jule::U8>* _26921_txt, jule::I64 _26938_i);
inline jule::Bool _1b4ae1da0_isFloatFmtDotp(jule::Slice<jule::U8>* _29020_txt, jule::I64 _29033_i);
inline jule::Bool _1b4ae2224_isFloatFmtDotfp(jule::Slice<jule::U8>* _30321_txt, jule::I64 _30334_i);
inline jule::Str _1b4ae271e_octalNum(jule::Slice<jule::U8>* _31814_txt);
inline jule::Str _1b4ae28ea_hexNum(jule::Slice<jule::U8>* _36012_txt);
inline jule::Str _1b4ae2c4c_hexEscape(jule::Slice<jule::U8>* _39315_txt, jule::I64 _39328_n);
inline jule::Str _1b4ae3016_bigUnicodePointEscape(jule::Slice<jule::U8>* _41127_txt);
inline jule::Str _1b4ae32d0_littleUnicodePointEscape(jule::Slice<jule::U8>* _41630_txt);
inline jule::Str _1b4ae3599_hexByteEscape(jule::Slice<jule::U8>* _42119_txt);
inline jule::Str _1b4ae3863_byteEscape(jule::Slice<jule::U8>* _42616_txt);
inline jule::Slice<_1cb285120_Log> _1b4ae8857_Lex(jule::Ptr<_1b4adae98_File> _80912_f, jule::I64 _80922_mode);
inline jule::Bool _1b4bb6e31_FindModuleFile(jule::Slice<jule::Ptr<_20d927670_DirEntry>>* _1320_dirents);
inline jule::Str _1b4bb71d9_FindModuleFileDeep(jule::Str _2527_path);
inline jule::Slice<_1cb285120_Log> _1b4bb74a3_CheckModuleFile(jule::Str* _4721_path);
inline jule::Bool _1b4bb7d00_IsPub(jule::Str _910_ident);
inline jule::Bool _1b4c10661_IsAscii(jule::I32 _1112_r);
inline jule::I32 _1b4c2a68c_ToRune(jule::Str _2015_lit);
inline jule::Str _1b4c2a89b_ToRawStr(jule::Str _3613_lit);
inline jule::Str _1b4c2abdc_ToStr(jule::Str _4714_lit);
inline __jule_tuple_u8__jule_tuple_bool _1b4c2ae73_tryBtoaCommonEsq(jule::Str _8321_s);
inline jule::I32 _1b4c2b2e7_runeFromEsqSeq(jule::Str _11319_s, jule::I64* _11332_i);
inline void _1b4c2b68d_strEsqSeq(jule::Slice<jule::U8>* _14519_buf, jule::Str _14532_s, jule::I64* _14545_i);
inline jule::I64 _1b4d5a7cd_findFormatPrefix(jule::Slice<jule::U8>* _1122_bytes, jule::I64 _1141_i);
inline jule::Slice<jule::U8> _1b4d5ab0d_getFormatRange(jule::I64* _2724_i, jule::Slice<jule::U8>* _2737_bytes);
inline void _1b4d5ade9_FmtByDefault(_1cb1d27a9_StrBuilder* _4722_buf, jule::Any* _4740_arg);
inline void _1b4d5b317_applyFmtByDefault(_1cb1d27a9_StrBuilder* _8627_buf, jule::I64* _8649_j, jule::Slice<jule::Any> _8657_args);
inline void _1b4d5b735_applyFmt(jule::Slice<jule::U8>* _9418_fmt, _1cb1d27a9_StrBuilder* _9436_buf, jule::I64* _9458_j, jule::Slice<jule::Any> _9466_args);
inline jule::Slice<jule::U8> _1b4d5baa9_Format(jule::Str _11511_fmt, jule::Slice<jule::Any> _11521_args);
inline jule::Str _1b4d5dacd_Format(jule::Str _3111_fmt, jule::Slice<jule::Any> _3121_args);
inline jule::Bool _1b4b3bb42_parameterUsesGenerics(jule::Ptr<_1b4b387dc_ParamIns>* _38531_p, jule::Slice<jule::Ptr<_1b4b07dc7_GenericDecl>>* _38546_generics);
inline jule::Ptr<_1b4c84ad1_TypeSymbol> _1b4b3e3b4_buildType(jule::Ptr<_1b4aeabbc_TypeDecl> _9418_t);
inline jule::Ptr<_1b4c47830_Value> _1b4b3e6c2_buildExpr(jule::Ptr<_1b4b00001_Expr> _10318_expr);
inline jule::Ptr<_1b4c7bb1c_TypeAlias> _1b4b3e98b_buildTypeAlias(jule::Ptr<_1b4b17546_TypeAliasDecl> _11223_decl);
inline jule::Ptr<_1b4b1d98c_Field> _1b4b3eccc_buildField(jule::Ptr<_1b4b1adeb_FieldDecl> _12319_decl);
inline jule::Slice<jule::Ptr<_1b4b1d98c_Field>> _1b4b40063_buildFields(jule::Slice<jule::Ptr<_1b4b1adeb_FieldDecl>>* _13421_decls);
inline jule::Ptr<_1b4b218b3_Struct> _1b4b4032c_buildStruct(jule::Ptr<_1b4b1b7e2_StructDecl> _14220_decl);
inline jule::Ptr<_1b4b34db0_Param> _1b4b405e6_buildParam(jule::Ptr<_1b4b11287_ParamDecl> _15419_decl);
inline jule::Slice<jule::Ptr<_1b4b34db0_Param>> _1b4b409c0_buildParams(jule::Slice<jule::Ptr<_1b4b11287_ParamDecl>>* _16521_decls);
inline jule::Ptr<_1b4b3462e_RetType> _1b4b40c12_buildRetType(jule::Ptr<_1b4aedab0_RetTypeDecl> _17321_decl);
inline jule::Ptr<_1b4b36884_Fn> _1b4b40ecb_buildFunc(jule::Ptr<_1b4b126d9_FnDecl> _18318_decl);
inline jule::Slice<jule::Ptr<_1b4b36884_Fn>> _1b4b41295_buildMethods(jule::Slice<jule::Ptr<_1b4b126d9_FnDecl>>* _20122_decls);
inline jule::Slice<jule::Ptr<_1b4c84ad1_TypeSymbol>> _1b4b4155e_buildTraitInherits(jule::Slice<jule::Ptr<_1b4aeabbc_TypeDecl>>* _20928_inherits);
inline jule::Ptr<_1b4b49c3d_Trait> _1b4b41828_buildTrait(jule::Ptr<_1b4b1c02e_TraitDecl> _21719_decl);
inline jule::Ptr<_1b4b4b8cc_EnumItem> _1b4b41ae2_buildEnumItem(jule::Ptr<_1b4b190d6_EnumItemDecl> _22722_decl);
inline jule::Slice<jule::Ptr<_1b4b4b8cc_EnumItem>> _1b4b41dab_buildEnumItems(jule::Slice<jule::Ptr<_1b4b190d6_EnumItemDecl>>* _23524_decls);
inline jule::Ptr<_1b4b4c449_Enum> _1b4b423a6_buildEnum(jule::Ptr<_1b4b19b97_EnumDecl> _24318_decl);
inline jule::Ptr<_1b4b4d57c_TypeEnumItem> _1b4b42582_buildTypeEnumItem(jule::Ptr<_1b4b1a4c2_TypeEnumItemDecl> _25326_decl);
inline jule::Slice<jule::Ptr<_1b4b4d57c_TypeEnumItem>> _1b4b42829_buildTypeEnumItems(jule::Slice<jule::Ptr<_1b4b1a4c2_TypeEnumItemDecl>>* _26128_decls);
inline jule::Ptr<_1b4b4db54_TypeEnum> _1b4b42ae3_buildTypeEnum(jule::Ptr<_1b4b1ab32_TypeEnumDecl> _26922_decl);
inline jule::Ptr<_1b4bddaa1_Var> _1b4b42dac_buildVar(jule::Ptr<_1b4b13894_VarDecl> _27817_decl);
inline jule::Slice<jule::Ptr<_1b4bddaa1_Var>> _1b4b43176_buildVars(jule::Slice<jule::Ptr<_1b4b13894_VarDecl>> _29518_decls);
inline jule::Ptr<_1b4b733a4_Impl> _1b4b43440_buildImpl(jule::Ptr<_1b4b1c68e_Impl> _30318_decl);
inline jule::Ptr<_1b4c466a8_Data> _1b4b6d800_buildAsComptimeMethodData(jule::Ptr<_1b4b39865_FnIns>* _142135_f);
inline jule::Ptr<_1b4b9a893_ImportInfo> _1b4b6db0d_findComptimePackage(jule::Ptr<_1b4bbac37_Sema>* _142929_s);
inline jule::Ptr<_1b4c466a8_Data> _1b4b6de82_buildComptimeTypeInfoData(jule::Ptr<_1b4bbac37_Sema>* _143535_s, jule::Ptr<_1b4c7c90e_TypeKind>* _143550_t);
inline jule::Ptr<_1b4c466a8_Data> _1b4b6e2c3_buildComptimeValue(jule::Ptr<_1b4c466a8_Data>* _144328_d);
inline jule::Str _1b4b7234d_toStrConstraints(jule::Ptr<_1b4c7b028_InsGeneric> _14321_g);
inline jule::Bool _1b4b72716_matchConstraint(jule::Str* _15421_c, jule::Ptr<_1b4c7c90e_TypeKind>* _15434_g);
inline jule::Bool _1b4b729d0_isBuiltinConstraint(jule::Str* _19325_ident);
inline jule::Ptr<_1b4b80cb8_scopeChecker> _1b4b755d7_newScopeCheckerBase(jule::Ptr<_1b4bbac37_Sema>* _5829_s, jule::Ptr<_1b4b39865_FnIns> _5843_owner);
inline jule::Ptr<_1b4b80cb8_scopeChecker> _1b4b759a0_newScopeChecker(jule::Ptr<_1b4bbac37_Sema>* _6625_s, jule::Ptr<_1b4b39865_FnIns> _6639_owner);
inline jule::Ptr<_1b4b7e745_scopeLabel> _1b4b75d24_findLabelParent(jule::Str* _7621_ident, jule::Ptr<_1b4b80cb8_scopeChecker> _7637_scope);
inline jule::Bool _1b4b761dc_modelIsGotoScope(jule::Any _9021_Model, jule::Ptr<_1b4b7880a_Scope>* _9034_sc);
inline jule::Bool _1b4b76561_stmtIsGotoScope(jule::Any* _10421_stmt, jule::Ptr<_1b4b7880a_Scope>* _10434_sc);
inline jule::I64 _1b4b768d5_countMatchType(jule::Ptr<_1b4b7ca1d_Match>* _14720_m, jule::Ptr<_1b4c7c90e_TypeKind>* _14732_t);
inline jule::Slice<jule::Ptr<_1b4c466a8_Data>> _1b4b76b9e_getDatasFromTupleData(jule::Ptr<_1b4c466a8_Data>* _17131_d);
inline jule::Bool _1b4b774da_checkMut(jule::Ptr<_1b4bbac37_Sema>* _20618_s, jule::Ptr<_1b4c466a8_Data>* _20629_left, jule::Ptr<_1b4c466a8_Data> _20646_right, jule::Ptr<_1b4ad5712_Token> _20660_op);
inline jule::Bool _1b4b779c4_checkAssign(jule::Ptr<_1b4bbac37_Sema>* _22521_s, jule::Ptr<_1b4c466a8_Data>* _22536_left, jule::Ptr<_1b4c466a8_Data> _22553_right, jule::Ptr<_1b4ad5712_Token> _22567_op);
inline jule::Bool _1b4b77c8d_isValidAstStForNextSt(jule::Any* _24731_n);
inline jule::Bool _1b4b78057_isValidStForNextSt(jule::Any* _25824_st);
inline jule::Bool _1b4b78321_stmtIsDef(jule::Any* _27615_st);
inline jule::U64 _1b4b931c6_removeEqFromOp(jule::U64 _220119_op);
inline void _1b4b93407_makeComptimeRange(jule::Ptr<_1b4c466a8_Data>* _223027_d);
inline jule::Bool _1b4b93902_canComptimeMatch(jule::Ptr<_1b4c466a8_Data>* _225126_d);
inline jule::Ptr<_1b4bddaa1_Var> _1b4b97d79_findVarInPackage(jule::Slice<jule::Ptr<_1b4c41340_SymbolTable>>* _4626_files, jule::Str* _4650_ident, jule::Bool _4662_binded);
inline jule::Ptr<_1b4c7bb1c_TypeAlias> _1b4b982ec_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1b4c41340_SymbolTable>>* _5832_files, jule::Str* _5856_ident, jule::Bool _5868_binded);
inline jule::Ptr<_1b4b218b3_Struct> _1b4b9872b_findStructInPackage(jule::Slice<jule::Ptr<_1b4c41340_SymbolTable>>* _7029_files, jule::Str* _7053_ident, jule::Bool _7065_binded);
inline jule::Ptr<_1b4b36884_Fn> _1b4b98bd2_findFnInPackage(jule::Slice<jule::Ptr<_1b4c41340_SymbolTable>>* _8225_files, jule::Str* _8249_ident, jule::Bool _8261_binded);
inline jule::Ptr<_1b4b49c3d_Trait> _1b4b99023_findTraitInPackage(jule::Slice<jule::Ptr<_1b4c41340_SymbolTable>>* _9428_files, jule::Str* _9452_ident);
inline jule::Ptr<_1b4b4c449_Enum> _1b4b99397_findEnumInPackage(jule::Slice<jule::Ptr<_1b4c41340_SymbolTable>>* _10627_files, jule::Str* _10651_ident);
inline jule::Ptr<_1b4b4db54_TypeEnum> _1b4b9971b_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1b4c41340_SymbolTable>>* _11831_files, jule::Str* _11855_ident);
inline jule::Any _1b4b99c5a_defByIdentPackage(jule::Slice<jule::Ptr<_1b4c41340_SymbolTable>>* _12927_files, jule::Str* _12951_ident, jule::Bool _12963_binded);
inline jule::Bool _1b4ba0c94_isStdPackage(jule::Str* _35518_f, jule::Str _35526_p);
inline jule::Bool _1b4bb83c7_isValidModelForRef(jule::Any* _1328_m);
inline _1cb285120_Log _1b4bb887d_compilerErr(jule::Ptr<_1b4ad5712_Token>* _4217_token, jule::Bool _4232_line, jule::Str _4244_fmt, jule::Slice<jule::Any> _4257_args);
inline jule::Bool _1b4bb8c02_impIsLookupable(jule::Ptr<_1b4b9a893_ImportInfo>* _5621_i, jule::Str* _5638_ident);
inline void _1b4bb9032_appendRetVars(jule::Slice<jule::Ptr<_1b4bddaa1_Var>>* _6823_dest, jule::Ptr<_1b4b39865_FnIns>* _6842_f);
inline void _1b4bb931d_appendParamVars(jule::Slice<jule::Ptr<_1b4bddaa1_Var>>* _9825_dest, jule::Ptr<_1b4b39865_FnIns>* _9844_f);
inline void _1b4bb9609_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1b4c7bb1c_TypeAlias>>* _15834_dest, jule::Ptr<_1b4b39865_FnIns>* _15859_f);
inline jule::Ptr<_1b4c41340_SymbolTable> _1b4bb997d_findFile(jule::Slice<jule::Ptr<_1b4c41340_SymbolTable>>* _19618_files, jule::Ptr<_1b4adae98_File>* _19642_handler);
inline void _1b4bb9e34_pushSuggestion(_1cb285120_Log* _20530_log, jule::Str _20541_fmt, jule::Slice<jule::Any> _20554_args);
inline void _1b4bdc286_pushImplemented(jule::Ptr<_1b4b49c3d_Trait> _288224_t, jule::Ptr<_1b4b218b3_Struct>* _288240_d);
inline void _1b4bdc572_pushImplements(jule::Ptr<_1b4b218b3_Struct>* _290024_s, jule::Ptr<_1b4b49c3d_Trait> _290040_t);
inline jule::Bool _1b4c2be1e_traitHasReferenceReceiver(jule::Ptr<_1b4b49c3d_Trait>* _2831_t);
inline jule::Bool _1b4c2c2c6_floatAssignable(jule::Str* _4321_kind, jule::Ptr<_1b4c466a8_Data>* _4333_d);
inline jule::Bool _1b4c2c64a_sigAssignable(jule::Str _4818_kind, jule::Ptr<_1b4c466a8_Data>* _4830_d);
inline jule::Bool _1b4c2ca13_unsigAssignable(jule::Str _7120_kind, jule::Ptr<_1b4c466a8_Data>* _7132_d);
inline jule::Bool _1b4c2cd87_intAssignable(jule::Str _10018_kind, jule::Ptr<_1b4c466a8_Data>* _10030_d);
inline void _1b4c392a0_checkMutRiskOfStructLit(jule::Ptr<_1b4bbac37_Sema>* _92033_s, jule::Ptr<_1b4b297de_StructLitExprModel>* _92044_m);
inline jule::Ptr<_1b4c7c90e_TypeKind> _1b4c400db_lenKind(void);
inline jule::Bool _1b4c4043d_isGoodValueToInfer(jule::Ptr<_1b4c466a8_Data>* _142124_d);
inline jule::Ptr<_1b4aea0d9_Directive> _1b4c74dac_findDirective(jule::Slice<jule::Ptr<_1b4aea0d9_Directive>>* _425923_directives, jule::Str _425954_d);
inline jule::Any _1b4c75275_findBuiltinsImport(jule::Str* _426824_ident, jule::Ptr<_1b4b9a893_ImportInfo> _426836_imp);
inline void _1b4c754a6_fitBitsize(jule::Ptr<_1b4c466a8_Data>* _427720_d);
inline void _1b4c757d6_makeStructLitAlloc(jule::Ptr<_1b4c466a8_Data>* _430628_d, jule::Ptr<_1b4b297de_StructLitExprModel>* _430643_lit);
inline jule::Ptr<_1b4bddaa1_Var> _1b4c75b5a_buildErrorVar(jule::Ptr<_1b4b7880a_Scope>* _431723_s, jule::Ptr<_1b4b03c2a_FnCallExpr>* _431739_fc);
inline jule::Any _1b4c75ece_findBuiltinsSema(jule::Str* _433222_ident, jule::Ptr<_1b4bbac37_Sema> _433238_s);
inline jule::Bool _1b4c76298_isOkForShifting(jule::Ptr<_1b4c466a8_Data>* _435725_d);
inline jule::Bool _1b4c76672_isInstancedStruct(jule::Ptr<_1b4b24641_StructIns> _437422_s);
inline jule::Bool _1b4c7696e_isPtrArithmeticCompatible(jule::Ptr<_1b4c466a8_Data>* _437835_l, jule::Ptr<_1b4c466a8_Data>* _437850_r);
inline void _1b4c76d15_applyCastKindModel(jule::Ptr<_1b4c466a8_Data>* _439328_d, jule::Ptr<_1b4c7c90e_TypeKind>* _439343_t, jule::Ptr<_1b4ad5712_Token>* _439362_token);
inline void _1b4c771ab_applyCastKind(jule::Ptr<_1b4c466a8_Data>* _440223_d, jule::Ptr<_1b4c7c90e_TypeKind>* _440238_t, jule::Ptr<_1b4ad5712_Token>* _440257_token);
inline jule::Ptr<_1b4c466a8_Data> _1b4c773ba_buildVoidData(void);
inline jule::Str _1b4c7773e_checkDataForIntegerIndexing(jule::Ptr<_1b4c466a8_Data>* _441337_d, jule::Ptr<_1b4ad5712_Token>* _441352_token);
inline void _1b4c77ad5_applyCastModelByEnum(jule::Ptr<_1b4c466a8_Data>* _443830_d, jule::Ptr<_1b4b4c449_Enum> _443844_e, jule::Ptr<_1b4ad5712_Token>* _443859_token);
inline void _1b4c77dc1_castConstByType(jule::Str* _444921_t, jule::Ptr<_1b4c466a8_Data>* _444934_d);
inline void _1b4c783dd_updateModelToGenericIns(jule::Any* _448333_m, jule::Ptr<_1b4b39865_FnIns>* _448352_f);
inline jule::Bool _1b4c78652_pushSubIdentFromExpr(jule::Any _449429_expr, jule::Ptr<_1b4aeb591_SubIdentTypeDecl>* _449450_t);
inline jule::Str _1b4c7891b_constoa(jule::Ptr<_1b2753508_Const>* _451713_c);
inline jule::Ptr<_1b4c466a8_Data> _1b4c78d4a_evalEnumStatic(jule::Ptr<_1b4b4c449_Enum>* _452824_enm, jule::Ptr<_1b4b4b8cc_EnumItem>* _452841_item, jule::Ptr<_1b4ad5712_Token>* _452863_token);
inline jule::Ptr<_1b4b297de_StructLitExprModel> _1b4c79114_isLitBased(jule::Any* _454520_m);
inline void _1b4c79400_makeImplicitDeref(jule::Ptr<_1b4c466a8_Data>* _456227_d, jule::Ptr<_1b4ad5712_Token> _456241_baseToken);
inline void _1ab670e10_updateRefer(jule::Ptr<_1b4b3ca44_ReferenceStack> _457323_ref, jule::Ptr<_1b4b39865_FnIns>* _457346_old, jule::Ptr<_1b4b39865_FnIns>* _457359_new);
inline void _1b4c79a82_makeVariadic(jule::Ptr<_1b4c466a8_Data>* _458122_d, jule::Ptr<_1b4c7c90e_TypeKind> _458136_elem);
inline jule::Bool _1b4c79eb1_isVarCaptured(jule::Ptr<_1b4b80cb8_scopeChecker> _459518_r, jule::Ptr<_1b4b80cb8_scopeChecker> _459540_s, jule::Ptr<_1b4bddaa1_Var> _459558_v);
inline jule::Bool _1b4c98166_kindUsesGenerics(jule::Ptr<_1b4c7c90e_TypeKind>* _171626_k, jule::Slice<jule::Ptr<_1b4b07dc7_GenericDecl>>* _171641_generics);
inline jule::Bool _1b4c9852e_hasDirective(jule::Slice<jule::Ptr<_1b4aea0d9_Directive>>* _172622_directives, jule::Str _172653_tag);
inline jule::Bool _1b4c987e8_canGetPtr(jule::Ptr<_1b4c466a8_Data>* _173519_d);
inline jule::Bool _1b4c98b39_isValidForSptrType(jule::Ptr<_1b4c7c90e_TypeKind>* _174728_t);
inline jule::Bool _1b4c98dc0_isValidForRef(jule::Ptr<_1b4c7c90e_TypeKind>* _175623_t);
inline jule::Bool _1b4c99189_isBuiltinStrConvertable(jule::Ptr<_1b4c7c90e_TypeKind>* _175933_t);
inline jule::Str _1b4c99453_buildLinkPathByTokens(jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _176327_tokens);
inline jule::Ptr<_1b4c854d8_Prim> _1b4c9982c_buildPrimType(jule::Str _178218_kind);
inline void _1b4c99e15_applyImplicitCast(jule::Ptr<_1b4c7c90e_TypeKind>* _181027_dest, jule::Ptr<_1b4c466a8_Data>* _181049_d, jule::Ptr<_1b4ad5712_Token>* _181064_token);
inline jule::Bool _1b4c9a1ce_validTypeForXof(jule::Ptr<_1b4c7c90e_TypeKind>* _183825_t);
inline __jule_tuple_x_1b4c41340_SymbolTable__jule_tuple_s_1cb285120_Log _1b4c9d2e2_buildSymbols(jule::Ptr<_1b4ae8ca8_Ast>* _1622_ast, jule::Trait* _1638_importer, jule::Ptr<_1b4b43a06_symbolBuilder> _1662_owner);
inline __jule_tuple_x_1b4b9d7b9_Package__jule_tuple_s_1cb285120_Log _1b4c9d765_analyzePackage(jule::Slice<jule::Ptr<_1b4ae8ca8_Ast>>* _3024_files, jule::Trait* _3044_importer, jule::I64* _3065_flags);
inline __jule_tuple_x_1b4b9d7b9_Package__jule_tuple_s_1cb285120_Log _1b4c9db94_AnalyzePackage(jule::Slice<jule::Ptr<_1b4ae8ca8_Ast>> _7423_files, jule::Trait _7442_importer, jule::I64 _7462_flags);
inline jule::Ptr<_1b4b39865_FnIns> _1b4d5e56d_findBuiltinFunc(jule::Str* _2621_ident);
inline jule::Ptr<_1b4c7bb1c_TypeAlias> _1b4d5e87b_primTypeAlias(jule::Ptr<_1b4c7c90e_TypeKind>* _6623_k);
inline jule::Ptr<_1b4bddaa1_Var> _1b4d63231_findBuiltinVar(jule::Str* _9420_ident);
inline jule::Ptr<_1b4c7bb1c_TypeAlias> _1b4d63572_findBuiltinTypeAlias(jule::Str _14225_ident);
inline jule::Any _1b4d63808_findBuiltinDef(jule::Str* _19720_ident);
inline jule::Any _1b4d63ac2_findBuiltinDefStdDebug(jule::Str* _21328_ident);
inline jule::Any _1b4d63d8b_findBuiltinDefStdMem(jule::Str* _22626_ident);
inline jule::Any _1b4d64265_findBuiltinDefStdComptime(jule::Str* _24231_ident);
inline jule::Any _1b4d644a7_findBuiltinDefStdJuleIntegrated(jule::Str* _26737_ident);
inline jule::Any _1b4d6482b_findPackageBuiltinDef(jule::Str* _28527_linkPath, jule::Str* _28543_ident);
inline jule::Ptr<_1b4c466a8_Data> _1b4d64ba0_builtinCallerError(jule::Ptr<_1b4c483d0_Eval>* _30028_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _30043_fc);
inline jule::Ptr<_1b4c466a8_Data> _1b4d650ce_builtinCallerOut(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _32226_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _32241_fc, jule::Ptr<_1b4c466a8_Data>* );
inline jule::Ptr<_1b4c466a8_Data> _1b4d6550d_builtinCallerOutln(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _34628_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _34643_fc, jule::Ptr<_1b4c466a8_Data>* _34665_d);
inline jule::Ptr<_1b4c466a8_Data> _1b4d6593c_builtinCallerNew(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _35826_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _35841_fc, jule::Ptr<_1b4c466a8_Data>* _35863_d);
inline jule::Ptr<_1b4c466a8_Data> _1b4d65d6b_builtinCallerPanic(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _42028_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _42043_fc, jule::Ptr<_1b4c466a8_Data>* );
inline jule::Ptr<_1b4c466a8_Data> _1b4d664cb_builtinCallerMake(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _44627_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _44642_fc, jule::Ptr<_1b4c466a8_Data>* _44664_d);
inline jule::Ptr<_1b4c466a8_Data> _1b4d667ea_builtinCallerAppend(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _49729_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _49744_fc, jule::Ptr<_1b4c466a8_Data>* _49766_d);
inline jule::Ptr<_1b4c466a8_Data> _1b4d66cd4_callerCopySlice(jule::Ptr<_1b4c466a8_Data>* _60625_dest, jule::Ptr<_1b4c483d0_Eval>* _60643_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _60658_fc, jule::Ptr<_1b4c466a8_Data>* _60680_d);
inline jule::Ptr<_1b4c466a8_Data> _1b4d67213_builtinCallerCopy(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _64027_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _64042_fc, jule::Ptr<_1b4c466a8_Data>* _64064_d);
inline jule::Ptr<_1b4c466a8_Data> _1b4d67587_callerLenSlice(jule::Ptr<_1b4c466a8_Data>* _66524_expr, jule::Ptr<_1b4c466a8_Data>* _66542_d);
inline jule::Ptr<_1b4c466a8_Data> _1b4d6790b_callerLenMap(jule::Ptr<_1b4c466a8_Data>* _67322_expr, jule::Ptr<_1b4c466a8_Data>* _67340_d);
inline jule::Ptr<_1b4c466a8_Data> _1b4d67c80_callerLenArr(jule::Ptr<_1b4c466a8_Data>* _68122_expr, jule::Ptr<_1b4c466a8_Data>* _68140_d);
inline jule::Ptr<_1b4c466a8_Data> _1b4d68104_callerLenStr(jule::Ptr<_1b4c466a8_Data>* _68822_expr, jule::Ptr<_1b4c466a8_Data>* _68840_d);
inline jule::Ptr<_1b4c466a8_Data> _1b4d68478_callerLenComptime(jule::Ptr<_1b4c466a8_Data>* _70127_d, jule::I64 _70137_n);
inline jule::Ptr<_1b4c466a8_Data> _1b4d688a7_builtinCallerLen(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _70826_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _70841_fc, jule::Ptr<_1b4c466a8_Data>* _70863_d);
inline jule::Ptr<_1b4c466a8_Data> _1b4d68c2b_callerCapSlice(jule::Ptr<_1b4c466a8_Data>* _74624_expr, jule::Ptr<_1b4c466a8_Data>* _74642_d);
inline jule::Ptr<_1b4c466a8_Data> _1b4d6915a_builtinCallerCap(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _75426_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _75441_fc, jule::Ptr<_1b4c466a8_Data>* _75463_d);
inline jule::Ptr<_1b4c466a8_Data> _1b4d69644_callerDeleteMap(jule::Ptr<_1b4c483d0_Eval>* _77725_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _77740_fc, jule::Ptr<_1b4c466a8_Data>* _77762_expr, jule::Ptr<_1b4c466a8_Data>* _77780_d);
inline jule::Ptr<_1b4c466a8_Data> _1b4d69a73_builtinCallerDelete(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _80629_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _80644_fc, jule::Ptr<_1b4c466a8_Data>* _80666_d);
inline jule::Ptr<_1b4c466a8_Data> _1b4d69ea2_builtinCallerAssert(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _82929_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _82944_fc, jule::Ptr<_1b4c466a8_Data>* );
inline jule::Ptr<_1b4c466a8_Data> _1b4d6a3d1_builtinCallerStdComptimeTypeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _87340_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _87355_fc, jule::Ptr<_1b4c466a8_Data>* );
inline jule::Ptr<_1b4c466a8_Data> _1b4d6aa52_builtinCallerStdComptimeValueOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _90941_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _90956_fc, jule::Ptr<_1b4c466a8_Data>* );
inline jule::Ptr<_1b4c466a8_Data> _1b4d6ae81_builtinCallerStdComptimeLine(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _92938_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _92953_fc, jule::Ptr<_1b4c466a8_Data>* );
inline jule::Ptr<_1b4c466a8_Data> _1b4d6b3b0_builtinCallerStdComptimeFile(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _94138_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _94153_fc, jule::Ptr<_1b4c466a8_Data>* );
inline jule::Ptr<_1b4c466a8_Data> _1b4d6b7de_builtinCallerStdComptimeFiles(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _95439_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _95454_fc, jule::Ptr<_1b4c466a8_Data>* );
inline jule::Ptr<_1b4c466a8_Data> _1b4d6bc1d_builtinCallerStdComptimeTypeAlias(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _96743_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _96758_fc, jule::Ptr<_1b4c466a8_Data>* );
inline jule::Ptr<_1b4c466a8_Data> _1b4d6c14c_builtinCallerStdMemSizeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _102735_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _102750_fc, jule::Ptr<_1b4c466a8_Data>* );
inline jule::Ptr<_1b4c466a8_Data> _1b4d6c57b_builtinCallerStdMemAlignOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _105236_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _105251_fc, jule::Ptr<_1b4c466a8_Data>* );
inline jule::Ptr<_1b4c466a8_Data> _1b4d6c9aa_builtinCallerStdMemFree(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _107733_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _107748_fc, jule::Ptr<_1b4c466a8_Data>* );
inline jule::Ptr<_1b4c466a8_Data> _1b4d6cdd9_builtinCallerStdJuleIntegratedToStr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _110045_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _110060_fc, jule::Ptr<_1b4c466a8_Data>* );
inline jule::Ptr<_1b4c466a8_Data> _1b4d6d318_builtinCallerStdJuleIntegratedEmit(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _112744_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _112759_fc, jule::Ptr<_1b4c466a8_Data>* _112781_d);
inline jule::Ptr<_1b4c466a8_Data> _1b4d6d747_builtinCallerStdDebugOut(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _117834_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _117849_fc, jule::Ptr<_1b4c466a8_Data>* _117871_d);
inline jule::Ptr<_1b4c466a8_Data> _1b4d6db76_builtinCallerStdDebugOutln(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _118736_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _118751_fc, jule::Ptr<_1b4c466a8_Data>* _118773_d);
inline jule::Ptr<_1b5725bd1_FileInfo> _1b572892b_ParseFile(jule::Ptr<_1b4adae98_File> _2318_f);
inline __jule_tuple_x_1b4ae8ca8_Ast__jule_tuple_s_1cb285120_Log _1b576c354_parseFileset(jule::Ptr<_1b4adae98_File> _5521_f);
inline jule::Ptr<_1b4b10a4a_ScopeTree> _1b576cce4_newScope(void);
inline __jule_tuple_bool__jule_tuple_bool _1b576d179_isSt(jule::Ptr<_1b4ad5712_Token> _499_current, jule::Ptr<_1b4ad5712_Token> _4926_prev);
inline jule::Bool _1b576d4ed_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _5526_tokens, jule::I64* _5545_i);
inline __jule_tuple_int__jule_tuple_bool _1b576d8b6_nextStPos(jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _6815_tokens, jule::I64 _6833_start);
inline __jule_tuple_sx_1b4ad5712_Token__jule_tuple_bool _1b576dc3a_skipSt(jule::I64* _13016_i, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _13028_tokens);
inline jule::Slice<jule::Ptr<_1b576e06a_stmt>> _1b576e422_splitStmts(jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _15120_tokens);
inline jule::Bool _1b5787a78_isTypeOp(jule::U64* _89314_id);
inline jule::Bool _1b5787d86_isTypeRange(jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _90021_tokens);
inline jule::Slice<jule::Ptr<_1b4ad5712_Token>> _1b5788150_getBlockExpr(jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _93322_tokens);
inline __jule_tuple_sx_1b4ad5712_Token__jule_tuple_sx_1b4ad5712_Token _1b5788518_splitDelim(jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _96520_tokens, jule::U64 _96538_delim);
inline jule::I64 _1b57887d2_findLowestPrecOp(jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _100422_tokens);
inline jule::Ptr<_1b4b0181b_IdentExpr> _1b5788a9b_buildIdentExpr(jule::Ptr<_1b4ad5712_Token>* _106924_token);
inline __jule_tuple_sx_1b4ad5712_Token__jule_tuple_int _1b5788d65_getRangeExprTokens(jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _107728_tokens);
inline jule::Bool _1b578923e_isAnonFnHead(jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _110018_tokens);
inline jule::Bool _1b5789e43_checkAssignTokens(jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _1623_tokens);
inline _1cb285120_Log _1b578b10e_makeErr(jule::I64 _5112_row, jule::I64 _5122_col, jule::Ptr<_1b4adae98_File>* _5133_f, jule::Str _5143_fmt, jule::Slice<jule::Any> _5156_args);
inline jule::Slice<jule::Ptr<_1b4ad5712_Token>> _1b578b63c_range(jule::I64* _6915_i, jule::U64 _6923_open, jule::U64 _6938_close, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _6959_tokens);
inline __jule_tuple_sx_1b4ad5712_Token__jule_tuple_sx_1b4ad5712_Token _1b578b906_rangeLast(jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _9919_tokens);
inline __jule_tuple_ssx_1b4ad5712_Token__jule_tuple_s_1cb285120_Log _1b578bdac_parts(jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _13715_tokens, jule::U64 _13733_id, jule::Bool _13746_exprMust);
inline jule::U64 _1b578c143_getCloseOfBrace(jule::U64 _16720_left);
inline _1cb285120_Log _1b578c572_compilerErr(jule::Ptr<_1b4ad5712_Token>* _18017_token, jule::Str* _18033_fmt, jule::Slice<jule::Any> _18046_args);
inline void _1b578c918_pushSuggestion(_1cb285120_Log* _19130_log, jule::Str _19141_fmt, jule::Slice<jule::Any> _19154_args);
inline jule::Ptr<_1b4aeabbc_TypeDecl> _1b579e7e8_buildVoidType(void);
inline __jule_tuple_bool__jule_tuple_bool _1b4e96265_checkOs(jule::Str _912_arg);
inline __jule_tuple_bool__jule_tuple_bool _1b4e963a8_checkArch(jule::Str _2814_arg);
inline jule::Bool _1b4e96551_isPassFileAnnotation(jule::Str _5029_p);
inline void _1b4eb1dda_setOsVars(jule::Slice<jule::Str>* _3619_vars);
inline void _1b4eb2160_setArchVars(jule::Slice<jule::Str>* _4421_vars);
inline void _1b4eb244b_initVars(jule::Slice<jule::Str>* _5518_vars, _1b4eb1abb_CompileInfo* _5532_info);
inline jule::Slice<jule::U8> _1b57a37a8_readBuff(jule::Str _3013_path);
inline _1cb285120_Log _1b57a3ab6_flatCompilerErr(jule::Str _4120_text);
inline void _1b57a825d_pushPasses(jule::Ptr<_1b4b9d7b9_Package>* _11120_p, jule::Slice<jule::Str>* _11144_passes);
inline jule::Slice<jule::Str> _1b57a8626_getAllUniquePasses(jule::Ptr<_1b4b9d7b9_Package>* _12828_pkg, jule::Slice<jule::Ptr<_1b4b9a893_ImportInfo>> _12853_uses);
inline _1b4eb1abb_CompileInfo _1b57a8835_buildCompileInfo(void);
inline void _1b57a9050_IterPackages(jule::Ptr<_1b57a68aa_IR>* _722_ir, jule::Fn<void,jule::Ptr<_1b4b9d7b9_Package>*> _731_f);
inline void _1b57a9380_IterFiles(jule::Ptr<_1b4b9d7b9_Package>* _1619_pkg, jule::Fn<void,jule::Ptr<_1b4c41340_SymbolTable>*> _1634_f);
inline void _1b57a9726_iterTraitInheritMethods(jule::Ptr<_1b4b49c3d_Trait>* _2233_base, jule::Ptr<_1b4b49c3d_Trait>* _2252_t, jule::Fn<void,jule::Ptr<_1b4b36884_Fn>*> _2263_f);
inline void _1b57a9b44_iterTraitInheritMethods1(jule::Ptr<_1b4b49c3d_Trait>* _3134_base, jule::Ptr<_1b4b49c3d_Trait>* _3153_t, jule::Fn<void,jule::Ptr<_1b4b36884_Fn>*> _3164_f);
inline void _1b57a9dec_IterTraitMethods(jule::Ptr<_1b4b49c3d_Trait>* _3926_t, jule::Fn<void,jule::Ptr<_1b4b36884_Fn>*> _3937_f);
inline jule::Bool _1b57b0be4_IsForwarded(jule::Ptr<_1b4b7880a_Scope>* _2317_s);
inline jule::Bool _1b57b1002_IsExprComesFromBind(jule::Ptr<_1b4c466a8_Data>* _3925_d);
inline jule::Bool _1b57b12bb_IsAny(jule::Ptr<_1b4c7c90e_TypeKind>* _5115_t);
inline jule::Bool _1b57b160c_IsClosure(jule::Ptr<_1b4b2b857_AnonFnExprModel>* _6015_m);
inline jule::Bool _1b57b1893_IsOpMethod(jule::Ptr<_1b4b36884_Fn>* _6316_m);
inline jule::Bool _1b57b1c17_IsTraitMethod(jule::Ptr<_1b4b24641_StructIns>* _7923_owner, jule::Ptr<_1b4b39865_FnIns>* _7943_f);
inline jule::Bool _1b57b208b_IsStdPackage(jule::Str* _9218_f, jule::Str _9226_p);
inline jule::Ptr<_1b4aea0d9_Directive> _1b57b29e8_FindDirective(jule::Slice<jule::Ptr<_1b4aea0d9_Directive>>* _923_directives, jule::Str _954_tag);
inline jule::Bool _1b57b2db1_HasDirective(jule::Slice<jule::Ptr<_1b4aea0d9_Directive>>* _1918_directives, jule::Str _1949_tag);
inline jule::Bool _1b57b3235_ContainsTraitMethod(jule::Ptr<_1b4b49c3d_Trait>* _2429_t, jule::Str* _2441_ident);
inline jule::I64 _1b57b38ea_FindTraitTypeOffsetS(jule::Ptr<_1b4b49c3d_Trait> _3725_t, jule::Ptr<_1b4b24641_StructIns> _3740_s);
inline jule::I64 _1b57b3c6e_FindTraitTypeOffset(jule::Ptr<_1b4b49c3d_Trait> _6024_t, jule::Ptr<_1b4c7c90e_TypeKind> _6039_k);
inline jule::Bool _1ac128015_isOrdered(jule::Ptr<_1b4b218b3_Struct>* _1418_t, jule::Slice<jule::Ptr<_1b4b218b3_Struct>> _1425_s);
inline jule::Bool _1ac12e5b0_isOrdered(jule::Ptr<_1b4bddaa1_Var>* _1418_t, jule::Slice<jule::Ptr<_1b4bddaa1_Var>> _1425_s);
inline void _1ac124ce2_order(jule::Slice<jule::Ptr<_1b4b218b3_Struct>>* _3718_s);
inline void _1ac12a446_order(jule::Slice<jule::Ptr<_1b4bddaa1_Var>>* _3718_s);
inline void _1b593990b_EliminateDefines(jule::Ptr<_1b57a68aa_IR>* _30526_ir);
inline void _1b593d954_eliminateDeadCodeOfScope(jule::Ptr<_1b4b7880a_Scope> _24133_s);
inline void _1b593dbc9_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1b4b36884_Fn>>* _25433_funcs);
inline void _1b593de0a_eliminateFunctionsScopePackage(jule::Ptr<_1b4b9d7b9_Package>* _26240_pkg);
inline void _1b593e1b3_eliminateScopePackage(jule::Ptr<_1b4b9d7b9_Package>* _26831_pkg);
inline void _1b593e3b1_EliminateScopes(jule::Ptr<_1b57a68aa_IR>* _27325_ir);
inline jule::Uintptr _1b4d6de1d_typeData(jule::Any* _1714_m);
inline jule::Bool _1b4d6e2a3_equalConst(jule::Ptr<_1b2753508_Const> _2115_l, jule::Ptr<_1b2753508_Const> _2126_r);
inline jule::Bool _1b4d6e627_equalCasting(jule::Ptr<_1b4b2a16e_CastingExprModel> _4017_l, jule::Ptr<_1b4b2a16e_CastingExprModel> _4039_r);
inline jule::Bool _1b4d6e9e0_equalUnary(jule::Ptr<_1b4b28e1a_UnaryExprModel> _4715_l, jule::Ptr<_1b4b28e1a_UnaryExprModel> _4735_r);
inline jule::Bool _1b4d6ed64_equalIndexing(jule::Ptr<_1b4b2b3a1_IndexingExprModel> _5418_l, jule::Ptr<_1b4b2b3a1_IndexingExprModel> _5441_r);
inline jule::Bool _1b4d701d8_equalBinary(jule::Ptr<_1b4b28a41_BinaryExprModel> _5916_l, jule::Ptr<_1b4b28a41_BinaryExprModel> _5937_r);
inline jule::Bool _1b4d7055c_equalModels(jule::Any _7016_l, jule::Any _7030_r);
inline void _1b4d760ce_possibleNilRemove(jule::Ptr<_1b4d75100_nils>* _7827_n, jule::Any _7837_m);
inline jule::Bool _1b4d76497_isGuaranteedNonNilExpr(jule::Ptr<_1b4d75100_nils>* _8432_n, jule::Any _8442_m);
inline jule::Bool _1b4d76761_isNilValidType(jule::Ptr<_1b4c7c90e_TypeKind> _9223_t);
inline jule::Uintptr _1b4d76aa2_getNilVar(jule::Any _9414_m);
inline jule::Bool _1b57ba65a_isConstantValidConditionalCase(jule::Ptr<_1b4b78c28_If>* _67836_i);
inline jule::Bool _1b57ba968_isUnreachableExpr(jule::Any* _68723_expr);
inline jule::Bool _1b57bac32_isConstantValidMatchCase(jule::Ptr<_1b4b7d546_Case>* _70230_case);
inline jule::Bool _1b57bb073_isUnreachableConditionalCase(jule::Ptr<_1b4b78c28_If>* _71134_i);
inline jule::Bool _1b57bb309_isUnreachableMatchCase(jule::Ptr<_1b4b7d546_Case>* _71528_case);
inline __jule_tuple_bool__jule_tuple_u64 _1b57c5ae9_checkForBitShiftOpt(jule::Ptr<_1b4b28546_OperandExprModel>* _77925_l, jule::Ptr<_1b4b28546_OperandExprModel>* _77948_r);
inline jule::Bool _1b57c5eb2_areSameLvalueExprModel(jule::Any* _79628_l, jule::Any* _79643_r);
inline void _1b57c817e_possibleDynamicRemove(jule::Ptr<_1b57c70e5_dynamic>* _8131_d, jule::Any _8144_m);
inline jule::Bool _1b57c848c_isDynamicValidType(jule::Ptr<_1b4c7c90e_TypeKind> _8727_t);
inline jule::Ptr<_1b4c7c90e_TypeKind> _1b57c88bb_isTypeGuaranteedDynamicData(jule::Ptr<_1b57c70e5_dynamic>* _8937_dy, jule::Ptr<_1b4c7c90e_TypeKind> _8955_t, jule::Any _8973_m);
inline jule::Uintptr _1b57c8c0c_getDynamicVar(jule::Any _11418_m);
inline jule::Bool _1b57cc6d3_isValidBoundaryInfo(jule::Any _8424_m);
inline jule::I64 _1b57cca9b_fitsMaxSize(jule::Slice<jule::Any> _8916_max, jule::Any _8934_expr);
inline jule::Bool _1b57cce20_fitsSize(jule::Any _9813_e1, jule::Any _9828_e2);
inline void _1b57cd250_possibleBoundaryRemove(jule::Ptr<_1b57cb66b_boundary>* _12432_b, jule::Any _12446_model);
inline jule::Bool _1b57cd519_isBoundaryRiskyType(jule::Ptr<_1b4c7c90e_TypeKind> _13628_t);
inline jule::Bool _1b57cd7d3_isBoundaryValidType(jule::Ptr<_1b4c7c90e_TypeKind> _14128_t);
inline jule::Uintptr _1b57cda9c_getBoundaryVar(jule::Any _14319_m);
inline void _1b57d1b27_PushOptLevel(jule::I64 _3217_level);
inline void _1b594880a_detectEnabled(void);
inline void _1b59721b3_Throw(jule::Str _910_msg);
inline jule::U64 _1a901d6a0_unix(void);
inline jule::Bool _1b64557bc_isCopyOptimizable(jule::Ptr<_1b4c466a8_Data>* _105023_expr);
inline jule::Bool _1b6455b85_isIterCopyOptimizable(jule::Ptr<_1b4c466a8_Data>* _106127_expr, jule::Ptr<_1b4bddaa1_Var>* _106141_v);
inline jule::Bool _1b64560b4_captureVarHandling(jule::Ptr<_1a9026b3c_ObjectCoder>* _106828_oc, jule::Ptr<_1b4b2b857_AnonFnExprModel>* _106851_m, jule::Ptr<_1b4bddaa1_Var>* _106877_v);
inline jule::Str _1b6466e60_decomposeCommonEsq(jule::U8 _158323_b);
inline jule::Str _1b646726d_sbtoa(jule::U8 _161010_b);
inline void _1b6467559_cstrBytes(_1cb1d27a9_StrBuilder* _163019_s, jule::Str _163034_ctx);
inline void _1b6467889_cstrLit(_1cb1d27a9_StrBuilder* _163617_s, jule::Str _163632_ctx);
inline void _1b6467c30_ftoa(_1cb1d27a9_StrBuilder* _164214_s, jule::F64 _164229_f, jule::I64 _164237_bitsize);
inline void _1b646801b_itoa(_1cb1d27a9_StrBuilder* _166014_s, jule::I64 _166029_x);
inline void _1b6468307_utoa(_1cb1d27a9_StrBuilder* _167714_s, jule::U64 _167729_x);
inline jule::Slice<jule::U8> _1a903452e_concatAllParts(jule::Slice<jule::Ptr<_1b4ad5712_Token>> _135719_parts);
inline jule::Bool _1a903483c_isHeadDecl(jule::Ptr<_1b4b36884_Fn>* _137320_m);
inline jule::Bool _1a90436e7_shouldInitialized(jule::Ptr<_1b4c7c90e_TypeKind>* _46427_t);
inline void _1cb3a2858_printErrorMessage(jule::Str _3022_msg);
inline void _1cb3a2acd_help(jule::Slice<jule::Str>* _3510_args);
inline void _1cb3a2d0e_version(jule::Slice<jule::Str>* _6313_args);
inline void _1cb3a301d_toolDistos(void);
inline void _1cb3a3183_toolDistarch(void);
inline void _1cb3a3381_tool(jule::Slice<jule::Str>* _9410_args);
inline void _1cb3a35b2_julenv(jule::Slice<jule::Str>* _11712_args);
inline void _1cb3a3903_mod(jule::Slice<jule::Str>* _1309_args);
inline jule::Bool _1cb3a3b45_processCommand(jule::Slice<jule::Str>* _15320_args);
inline void _1cb3a3cdd_showInfo(void);
void entry_point(void);
inline void _1a90b06a9_init(void);
inline jule::Ptr<_20d929540_File> _1a90b0973_openOutput(jule::Str* _4316_path);
inline void _1a90b0b1b_clearObjects(void);
inline void _1a90b0e29_compileIr(jule::Str _7214_compiler, jule::Str _7229_compilerCmd);
inline jule::Bool _1a90b11e3_isCppSourceFile(jule::Str _9920_path);
inline void _1a90b1424_pushCompCmdClang(_1cb1d27a9_StrBuilder* _10726_cmd);
inline void _1a90b1655_pushCompCmdGcc(_1cb1d27a9_StrBuilder* _13324_cmd);
inline __jule_tuple_str__jule_tuple_str _1a90b1ad9_genCompileCmd(jule::Str _15918_sourcePath, jule::Ptr<_1b57a68aa_IR>* _15936_ir);
inline jule::Str _1a90b1c71_getCompilePath(void);
inline void _1a90b1ea2_applyTargetIndependentOptimizations(jule::Ptr<_1b57a68aa_IR>* _20545_ir);
inline void _1a90b214a_checkCompilerFlag(void);
inline void _1a90b2359_checkTargetArch(jule::Str _22720_arch);
inline void _1a90b258a_checkTargetOs(jule::Str _23518_os);
inline void _1a90b27bb_checkTargetFlag(jule::Str* _24321_target);
inline void _1a90b29ec_checkOptFlag(jule::Str* _26618_opt);
inline void _1a90b2db5_checkCppStdFlag(void);
inline jule::Slice<jule::Str> _1a90b3080_checkFlags(jule::Slice<jule::Str>* _29216_args);
inline void _1a90b328e_setupSemaFlags(jule::I64* _33724_flags);
inline jule::Ptr<_1b57a68aa_IR> _1a90b3558_buildIr(jule::Slice<jule::Str>* _34313_args);
inline void _1a90b3789_compileCommand(jule::Slice<jule::Str>* _38324_args);


struct _1b4b51a8b_comptimeRangeKindMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	void(*_1b4b51283_ready)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b4bddaa1_Var>* _2429_keyA, jule::Ptr<_1b4bddaa1_Var>* _2446_keyB);
	void(*_1b4b516a1_step)(jule::Ptr<jule::Uintptr> _self_, jule::I64 _2523_i, jule::Ptr<_1b4bddaa1_Var>* _2536_keyA, jule::Ptr<_1b4bddaa1_Var>* _2553_keyB);
	jule::I64(*_1b4b51937_len)(jule::Ptr<jule::Uintptr> _self_);
};

struct _1b4b9797d_ImporterMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	void(*_1b4b9675c_SetModPath)(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_path);
	jule::Str(*_1b4b969e3_GetModPath)(jule::Ptr<jule::Uintptr> _self_);
	jule::Str(*_1b4b96d34_ModById)(jule::Ptr<jule::Uintptr> _self_, jule::I64 _2522_id);
	jule::Ptr<_1b4b9a893_ImportInfo>(*_1b4b97175_GetImport)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3128_path);
	__jule_tuple_sx_1b4ae8ca8_Ast__jule_tuple_s_1cb285120_Log(*_1b4b97571_ImportPackage)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3732_path, jule::Bool _3743_update_mod);
	void(*_1b4b97829_Imported)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b4b9a893_ImportInfo> _4131__0);
};

struct _1b4c7c458_KindMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	jule::Str(*_1b4c7beb3_Str)(jule::Ptr<jule::Uintptr> _self_);
	jule::Bool(*_1b4c7c304_Equal)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _5621_other);
};

struct _1b4c9c500_LookupMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	jule::Ptr<_1b4b9a893_ImportInfo>(*_1b4c9a7d9_SelectPackage)(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1b4b9a893_ImportInfo>> _932_selector);
	jule::Ptr<_1b4bddaa1_Var>(*_1b4c9abd5_FindVar)(jule::Ptr<jule::Uintptr> _self_, jule::Str _1326_ident, jule::Bool _1338_binded);
	jule::Ptr<_1b4c7bb1c_TypeAlias>(*_1b4c9b0d1_FindTypeAlias)(jule::Ptr<jule::Uintptr> _self_, jule::Str _1732_ident, jule::Bool _1744_binded);
	jule::Ptr<_1b4b218b3_Struct>(*_1b4c9b4cc_FindStruct)(jule::Ptr<jule::Uintptr> _self_, jule::Str _2129_ident, jule::Bool _2141_binded);
	jule::Ptr<_1b4b36884_Fn>(*_1b4c9b8c8_FindFn)(jule::Ptr<jule::Uintptr> _self_, jule::Str _2525_ident, jule::Bool _2537_binded);
	jule::Ptr<_1b4b49c3d_Trait>(*_1b4c9bc19_FindTrait)(jule::Ptr<jule::Uintptr> _self_, jule::Str _2928_ident);
	jule::Ptr<_1b4b4c449_Enum>(*_1b4c9c05a_FindEnum)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3327_ident);
	jule::Ptr<_1b4b4db54_TypeEnum>(*_1b4c9c39b_FindTypeEnum)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3731_ident);
};

struct _1a90a8372_CommonFlagMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	jule::Str(*_1a9077231_Name)(jule::Ptr<jule::Uintptr> _self_);
	jule::I32(*_1a9077374_Short)(jule::Ptr<jule::Uintptr> _self_);
	jule::Str(*_1a90774b7_What)(jule::Ptr<jule::Uintptr> _self_);
	void(*_1a90a821d_Reset)(jule::Ptr<jule::Uintptr> _self_);
};



void __jule_type_deallocator0(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b54440_comptimeStructFields>().dealloc(); }
void __jule_type_deallocator1(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b576eb_comptimeStatics>().dealloc(); }
void __jule_type_deallocator2(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b5a18d_comptimeEnumFields>().dealloc(); }
void __jule_type_deallocator3(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b5d922_comptimeParams>().dealloc(); }
void __jule_type_deallocator4(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b5eed9_comptimeTypeInfos>().dealloc(); }
void __jule_type_deallocator5(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b6a445_comptimeFiles>().dealloc(); }
void __jule_type_deallocator6(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b57a40a0_JuleImporter>().dealloc(); }
void __jule_type_deallocator7(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b24641_StructIns>().dealloc(); }
void __jule_type_deallocator8(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b39865_FnIns>().dealloc(); }
void __jule_type_deallocator9(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b49c3d_Trait>().dealloc(); }
void __jule_type_deallocator10(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b4c449_Enum>().dealloc(); }
void __jule_type_deallocator11(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b4db54_TypeEnum>().dealloc(); }
void __jule_type_deallocator12(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b51cab_comptimeRange>().dealloc(); }
void __jule_type_deallocator13(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b5277e_comptimeStructField>().dealloc(); }
void __jule_type_deallocator14(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b55a3a_comptimeStatic>().dealloc(); }
void __jule_type_deallocator15(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b58ce6_comptimeEnumField>().dealloc(); }
void __jule_type_deallocator16(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b5b788_comptimeParam>().dealloc(); }
void __jule_type_deallocator17(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b615d4_comptimeTypeInfo>().dealloc(); }
void __jule_type_deallocator18(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b67ae6_comptimeValue>().dealloc(); }
void __jule_type_deallocator19(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b6ba40_comptimeFile>().dealloc(); }
void __jule_type_deallocator20(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4c7c90e_TypeKind>().dealloc(); }
void __jule_type_deallocator21(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4c854d8_Prim>().dealloc(); }
void __jule_type_deallocator22(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4c89014_Sptr>().dealloc(); }
void __jule_type_deallocator23(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4c899d7_Slc>().dealloc(); }
void __jule_type_deallocator24(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4c8a5cb_Tuple>().dealloc(); }
void __jule_type_deallocator25(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4c8b17b_Map>().dealloc(); }
void __jule_type_deallocator26(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4c8bd08_Arr>().dealloc(); }
void __jule_type_deallocator27(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4c8c7cb_Ptr>().dealloc(); }
void __jule_type_deallocator28(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a9035cc2_customType>().dealloc(); }
void __jule_type_deallocator29(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b80cb8_scopeChecker>().dealloc(); }
void __jule_type_deallocator30(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b9a893_ImportInfo>().dealloc(); }
void __jule_type_deallocator31(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b9d7b9_Package>().dealloc(); }
void __jule_type_deallocator32(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4bbac37_Sema>().dealloc(); }
void __jule_type_deallocator33(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4c41340_SymbolTable>().dealloc(); }
void __jule_type_deallocator34(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac9ee589_Flag>().dealloc(); }
void __jule_type_deallocator35(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aca0313c_Flag>().dealloc(); }
void __jule_type_deallocator36(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aca067a0_Flag>().dealloc(); }
void __jule_type_deallocator37(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aca09e57_Flag>().dealloc(); }
void __jule_type_deallocator38(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aca0d5ba_Flag>().dealloc(); }
void __jule_type_deallocator39(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
void __jule_type_deallocator40(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
void __jule_type_deallocator41(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U64>().dealloc(); }
void __jule_type_deallocator42(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Bool>().dealloc(); }
void __jule_type_deallocator43(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
void __jule_type_deallocator44(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F64>().dealloc(); }
void __jule_type_deallocator45(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
void __jule_type_deallocator46(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4bddaa1_Var>().dealloc(); }
void __jule_type_deallocator47(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b1c68e_Impl>().dealloc(); }
void __jule_type_deallocator48(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b17546_TypeAliasDecl>().dealloc(); }
void __jule_type_deallocator49(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b1b7e2_StructDecl>().dealloc(); }
void __jule_type_deallocator50(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b126d9_FnDecl>().dealloc(); }
void __jule_type_deallocator51(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b1c02e_TraitDecl>().dealloc(); }
void __jule_type_deallocator52(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b13894_VarDecl>().dealloc(); }
void __jule_type_deallocator53(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b19b97_EnumDecl>().dealloc(); }
void __jule_type_deallocator54(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b1ab32_TypeEnumDecl>().dealloc(); }
void __jule_type_deallocator55(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2753508_Const>().dealloc(); }
void __jule_type_deallocator56(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b7b19d_Label>().dealloc(); }
void __jule_type_deallocator57(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b7880a_Scope>().dealloc(); }
void __jule_type_deallocator58(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b3231e_BuiltinErrorCallExprModel>().dealloc(); }
void __jule_type_deallocator59(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4c466a8_Data>().dealloc(); }
void __jule_type_deallocator60(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b3362d_BackendEmitExprModel>().dealloc(); }
void __jule_type_deallocator61(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b31098_BuiltinAppendCallExprModel>().dealloc(); }
void __jule_type_deallocator62(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b2e5d5_BuiltinOutCallExprModel>().dealloc(); }
void __jule_type_deallocator63(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b2e9ae_BuiltinOutlnCallExprModel>().dealloc(); }
void __jule_type_deallocator64(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b30262_BuiltinPanicCallExprModel>().dealloc(); }
void __jule_type_deallocator65(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b30718_BuiltinAssertCallExprModel>().dealloc(); }
void __jule_type_deallocator66(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b31e45_BuiltinCopyCallExprModel>().dealloc(); }
void __jule_type_deallocator67(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b31a6b_BuiltinDeleteCallExprModel>().dealloc(); }
void __jule_type_deallocator68(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b3392a_FreeExprModel>().dealloc(); }
void __jule_type_deallocator69(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b2aa21_FnCallExprModel>().dealloc(); }
void __jule_type_deallocator70(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b79443_Conditional>().dealloc(); }
void __jule_type_deallocator71(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b79740_InfIter>().dealloc(); }
void __jule_type_deallocator72(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b14d18_WhileKind>().dealloc(); }
void __jule_type_deallocator73(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b79be6_WhileIter>().dealloc(); }
void __jule_type_deallocator74(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b15720_RangeKind>().dealloc(); }
void __jule_type_deallocator75(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b7a642_RangeIter>().dealloc(); }
void __jule_type_deallocator76(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b7a9c7_ContSt>().dealloc(); }
void __jule_type_deallocator77(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b7b577_GotoSt>().dealloc(); }
void __jule_type_deallocator78(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b7b951_Postfix>().dealloc(); }
void __jule_type_deallocator79(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b7be07_Assign>().dealloc(); }
void __jule_type_deallocator80(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b2b3a1_IndexingExprModel>().dealloc(); }
void __jule_type_deallocator81(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b7c3ad_MultiAssign>().dealloc(); }
void __jule_type_deallocator82(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b7ca1d_Match>().dealloc(); }
void __jule_type_deallocator83(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b7dc3e_FallSt>().dealloc(); }
void __jule_type_deallocator84(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b7ada1_BreakSt>().dealloc(); }
void __jule_type_deallocator85(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b7e0d5_RetSt>().dealloc(); }
void __jule_type_deallocator86(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b10a4a_ScopeTree>().dealloc(); }
void __jule_type_deallocator87(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b00001_Expr>().dealloc(); }
void __jule_type_deallocator88(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b16d09_Conditional>().dealloc(); }
void __jule_type_deallocator89(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b144dd_Iter>().dealloc(); }
void __jule_type_deallocator90(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b15ec3_ContSt>().dealloc(); }
void __jule_type_deallocator91(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b082a1_LabelSt>().dealloc(); }
void __jule_type_deallocator92(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b0867a_GotoSt>().dealloc(); }
void __jule_type_deallocator93(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b0966a_AssignSt>().dealloc(); }
void __jule_type_deallocator94(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b18316_MatchCase>().dealloc(); }
void __jule_type_deallocator95(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b08977_FallSt>().dealloc(); }
void __jule_type_deallocator96(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b15ae9_BreakSt>().dealloc(); }
void __jule_type_deallocator97(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b13c6d_RetSt>().dealloc(); }
void __jule_type_deallocator98(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b008c5_UseExpr>().dealloc(); }
void __jule_type_deallocator99(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b36884_Fn>().dealloc(); }
void __jule_type_deallocator100(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b218b3_Struct>().dealloc(); }
void __jule_type_deallocator101(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4c7bb1c_TypeAlias>().dealloc(); }
void __jule_type_deallocator102(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4aece88_ArrTypeDecl>().dealloc(); }
void __jule_type_deallocator103(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4aec0ec_SlcTypeDecl>().dealloc(); }
void __jule_type_deallocator104(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4aec6e6_PtrTypeDecl>().dealloc(); }
void __jule_type_deallocator105(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4aebc67_SptrTypeDecl>().dealloc(); }
void __jule_type_deallocator106(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4aed6d6_MapTypeDecl>().dealloc(); }
void __jule_type_deallocator107(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4aec3e9_TupleTypeDecl>().dealloc(); }
void __jule_type_deallocator108(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4aeb2c7_IdentTypeDecl>().dealloc(); }
void __jule_type_deallocator109(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b02487_VariadicExpr>().dealloc(); }
void __jule_type_deallocator110(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b2adea_SliceExprModel>().dealloc(); }
void __jule_type_deallocator111(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b04720_FieldExprPair>().dealloc(); }
void __jule_type_deallocator112(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b05d2b_KeyValPair>().dealloc(); }
void __jule_type_deallocator113(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b0181b_IdentExpr>().dealloc(); }
void __jule_type_deallocator114(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b00ae5_TupleExpr>().dealloc(); }
void __jule_type_deallocator115(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b2e20b_TupleExprModel>().dealloc(); }
void __jule_type_deallocator116(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b03c2a_FnCallExpr>().dealloc(); }
void __jule_type_deallocator117(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b32e57_RuneExprModel>().dealloc(); }
void __jule_type_deallocator118(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b2de0e_ArrayExprModel>().dealloc(); }
void __jule_type_deallocator119(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b03114_SubIdentExpr>().dealloc(); }
void __jule_type_deallocator120(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4aeb591_SubIdentTypeDecl>().dealloc(); }
void __jule_type_deallocator121(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b020ad_UnaryExpr>().dealloc(); }
void __jule_type_deallocator122(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4aeabbc_TypeDecl>().dealloc(); }
void __jule_type_deallocator123(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b02c3a_NsSelectionExpr>().dealloc(); }
void __jule_type_deallocator124(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4aeb96a_NamespaceTypeDecl>().dealloc(); }
void __jule_type_deallocator125(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b2c76a_SlicingExprModel>().dealloc(); }
void __jule_type_deallocator126(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b2a16e_CastingExprModel>().dealloc(); }
void __jule_type_deallocator127(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b06557_SliceExpr>().dealloc(); }
void __jule_type_deallocator128(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b297de_StructLitExprModel>().dealloc(); }
void __jule_type_deallocator129(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b2da35_StructStaticIdentExprModel>().dealloc(); }
void __jule_type_deallocator130(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b2cced_TraitSubIdentExprModel>().dealloc(); }
void __jule_type_deallocator131(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b2d68e_StructSubIdentExprModel>().dealloc(); }
void __jule_type_deallocator132(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b2c1d7_MapExprModel>().dealloc(); }
void __jule_type_deallocator133(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b2b857_AnonFnExprModel>().dealloc(); }
void __jule_type_deallocator134(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b002ba_RangeExpr>().dealloc(); }
void __jule_type_deallocator135(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b00e8b_LitExpr>().dealloc(); }
void __jule_type_deallocator136(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b01365_UnsafeExpr>().dealloc(); }
void __jule_type_deallocator137(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b06eb4_IndexingExpr>().dealloc(); }
void __jule_type_deallocator138(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b07624_SlicingExpr>().dealloc(); }
void __jule_type_deallocator139(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b02861_CastExpr>().dealloc(); }
void __jule_type_deallocator140(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b0504a_StructLit>().dealloc(); }
void __jule_type_deallocator141(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b05501_BraceLit>().dealloc(); }
void __jule_type_deallocator142(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b035ba_BinaryExpr>().dealloc(); }
void __jule_type_deallocator143(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b28e1a_UnaryExprModel>().dealloc(); }
void __jule_type_deallocator144(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b28a41_BinaryExprModel>().dealloc(); }
void __jule_type_deallocator145(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b29adb_AllocStructLitExprModel>().dealloc(); }
void __jule_type_deallocator146(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b2ed88_BuiltinNewCallExprModel>().dealloc(); }
void __jule_type_deallocator147(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b30bbe_BuiltinMakeCallExprModel>().dealloc(); }
void __jule_type_deallocator148(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b31395_BuiltinLenCallExprModel>().dealloc(); }
void __jule_type_deallocator149(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b31692_BuiltinCapCallExprModel>().dealloc(); }
void __jule_type_deallocator150(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b329c3_SizeofExprModel>().dealloc(); }
void __jule_type_deallocator151(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b32bb0_AlignofExprModel>().dealloc(); }
void __jule_type_deallocator152(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b33254_IntegratedToStrExprModel>().dealloc(); }
void __jule_type_deallocator153(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4d710da_ExceptionalForwardingExprModel>().dealloc(); }
void __jule_type_deallocator154(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4d739d3_StrRuneIter>().dealloc(); }
void __jule_type_deallocator155(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4d726c4_MutSlicingExprModel>().dealloc(); }
void __jule_type_deallocator156(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4d73230_PushToSliceExprModel>().dealloc(); }
void __jule_type_deallocator157(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4d73609_AppendToSliceExprModel>().dealloc(); }
void __jule_type_deallocator158(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4d71470_SwapExprModel>().dealloc(); }
void __jule_type_deallocator159(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4d71849_EmptyCompareExprModel>().dealloc(); }
void __jule_type_deallocator160(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4d72141_StrCompExprModel>().dealloc(); }
void __jule_type_deallocator161(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4d729c1_UnsafeBinaryExprModel>().dealloc(); }
void __jule_type_deallocator162(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4d73cd0_UnsafeDerefExprModel>().dealloc(); }
void __jule_type_deallocator163(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4d71bbd_RefExprModel>().dealloc(); }
void __jule_type_deallocator164(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4b29448_StructArgExprModel>().dealloc(); }
void __jule_type_deallocator165(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4d740cc_UnsafeCastingExprModel>().dealloc(); }
void __jule_type_deallocator166(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b4d72d56_UnsafeIndexingExprModel>().dealloc(); }
void __jule_type_deallocator167(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U8>().dealloc(); }
void __jule_type_deallocator168(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F32>().dealloc(); }
void __jule_type_deallocator169(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I8>().dealloc(); }
void __jule_type_deallocator170(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I16>().dealloc(); }
void __jule_type_deallocator171(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U16>().dealloc(); }
void __jule_type_deallocator172(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U32>().dealloc(); }
inline void __jule_trait_method_1aaae917a_1aaa9aaee(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b4bddaa1_Var>* _2429_keyA, jule::Ptr<_1b4bddaa1_Var>* _2446_keyB) {
	_1b4b55078_ready(_self_.as<_1b4b54440_comptimeStructFields>().alloc, _2429_keyA, _2446_keyB);
}
inline void __jule_trait_method_1aaae917a_1aaab86ee(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b4bddaa1_Var>* _2429_keyA, jule::Ptr<_1b4bddaa1_Var>* _2446_keyB) {
	_1b4b58334_ready(_self_.as<_1b4b576eb_comptimeStatics>().alloc, _2429_keyA, _2446_keyB);
}
inline void __jule_trait_method_1aaae917a_1aaaa2045(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b4bddaa1_Var>* _2429_keyA, jule::Ptr<_1b4bddaa1_Var>* _2446_keyB) {
	_1b4b5acc6_ready(_self_.as<_1b4b5a18d_comptimeEnumFields>().alloc, _2429_keyA, _2446_keyB);
}
inline void __jule_trait_method_1aaae917a_1aaaa7358(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b4bddaa1_Var>* _2429_keyA, jule::Ptr<_1b4bddaa1_Var>* _2446_keyB) {
	_1b4b5e527_ready(_self_.as<_1b4b5d922_comptimeParams>().alloc, _2429_keyA, _2446_keyB);
}
inline void __jule_trait_method_1aaae917a_1aaab55b9(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b4bddaa1_Var>* _2429_keyA, jule::Ptr<_1b4bddaa1_Var>* _2446_keyB) {
	_1b4b60b22_ready(_self_.as<_1b4b5eed9_comptimeTypeInfos>().alloc, _2429_keyA, _2446_keyB);
}
inline void __jule_trait_method_1aaae917a_1aaac86a9(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b4bddaa1_Var>* _2429_keyA, jule::Ptr<_1b4bddaa1_Var>* _2446_keyB) {
	_1b4b6b07d_ready(_self_.as<_1b4b6a445_comptimeFiles>().alloc, _2429_keyA, _2446_keyB);
}
inline void __jule_trait_method_1aaae97b8_1aaa9aaee(jule::Ptr<jule::Uintptr> _self_, jule::I64 _2523_i, jule::Ptr<_1b4bddaa1_Var>* _2536_keyA, jule::Ptr<_1b4bddaa1_Var>* _2553_keyB) {
	_1b4b55496_step(_self_.as<_1b4b54440_comptimeStructFields>().alloc, _2523_i, _2536_keyA, _2553_keyB);
}
inline void __jule_trait_method_1aaae97b8_1aaab86ee(jule::Ptr<jule::Uintptr> _self_, jule::I64 _2523_i, jule::Ptr<_1b4bddaa1_Var>* _2536_keyA, jule::Ptr<_1b4bddaa1_Var>* _2553_keyB) {
	_1b4b58752_step(_self_.as<_1b4b576eb_comptimeStatics>().alloc, _2523_i, _2536_keyA, _2553_keyB);
}
inline void __jule_trait_method_1aaae97b8_1aaaa2045(jule::Ptr<jule::Uintptr> _self_, jule::I64 _2523_i, jule::Ptr<_1b4bddaa1_Var>* _2536_keyA, jule::Ptr<_1b4bddaa1_Var>* _2553_keyB) {
	_1b4b5b1e4_step(_self_.as<_1b4b5a18d_comptimeEnumFields>().alloc, _2523_i, _2536_keyA, _2553_keyB);
}
inline void __jule_trait_method_1aaae97b8_1aaaa7358(jule::Ptr<jule::Uintptr> _self_, jule::I64 _2523_i, jule::Ptr<_1b4bddaa1_Var>* _2536_keyA, jule::Ptr<_1b4bddaa1_Var>* _2553_keyB) {
	_1b4b5e945_step(_self_.as<_1b4b5d922_comptimeParams>().alloc, _2523_i, _2536_keyA, _2553_keyB);
}
inline void __jule_trait_method_1aaae97b8_1aaab55b9(jule::Ptr<jule::Uintptr> _self_, jule::I64 _2523_i, jule::Ptr<_1b4bddaa1_Var>* _2536_keyA, jule::Ptr<_1b4bddaa1_Var>* _2553_keyB) {
	_1b4b61040_step(_self_.as<_1b4b5eed9_comptimeTypeInfos>().alloc, _2523_i, _2536_keyA, _2553_keyB);
}
inline void __jule_trait_method_1aaae97b8_1aaac86a9(jule::Ptr<jule::Uintptr> _self_, jule::I64 _2523_i, jule::Ptr<_1b4bddaa1_Var>* _2536_keyA, jule::Ptr<_1b4bddaa1_Var>* _2553_keyB) {
	_1b4b6b49b_step(_self_.as<_1b4b6a445_comptimeFiles>().alloc, _2523_i, _2536_keyA, _2553_keyB);
}
inline jule::I64 __jule_trait_method_1aaaea005_1aaa9aaee(jule::Ptr<jule::Uintptr> _self_) {
	return _1b4b5572c_len(_self_.as<_1b4b54440_comptimeStructFields>().alloc);
}
inline jule::I64 __jule_trait_method_1aaaea005_1aaab86ee(jule::Ptr<jule::Uintptr> _self_) {
	return _1b4b589d8_len(_self_.as<_1b4b576eb_comptimeStatics>().alloc);
}
inline jule::I64 __jule_trait_method_1aaaea005_1aaaa2045(jule::Ptr<jule::Uintptr> _self_) {
	return _1b4b5b47a_len(_self_.as<_1b4b5a18d_comptimeEnumFields>().alloc);
}
inline jule::I64 __jule_trait_method_1aaaea005_1aaaa7358(jule::Ptr<jule::Uintptr> _self_) {
	return _1b4b5ebcb_len(_self_.as<_1b4b5d922_comptimeParams>().alloc);
}
inline jule::I64 __jule_trait_method_1aaaea005_1aaab55b9(jule::Ptr<jule::Uintptr> _self_) {
	return _1b4b612c6_len(_self_.as<_1b4b5eed9_comptimeTypeInfos>().alloc);
}
inline jule::I64 __jule_trait_method_1aaaea005_1aaac86a9(jule::Ptr<jule::Uintptr> _self_) {
	return _1b4b6b732_len(_self_.as<_1b4b6a445_comptimeFiles>().alloc);
}
inline void __jule_trait_method_1aaaea478_1ac0b293e(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_path) {
	_1b57a4b72_SetModPath(_self_.as<_1b57a40a0_JuleImporter>().alloc, _1729_path);
}
inline jule::Str __jule_trait_method_1aaaea92e_1ac0b293e(jule::Ptr<jule::Uintptr> _self_) {
	return _1b57a4e08_GetModPath(_self_.as<_1b57a40a0_JuleImporter>().alloc);
}
inline jule::Str __jule_trait_method_1aaaead91_1ac0b293e(jule::Ptr<jule::Uintptr> _self_, jule::I64 _2522_id) {
	return _1b57a5249_ModById(_self_.as<_1b57a40a0_JuleImporter>().alloc, _2522_id);
}
inline jule::Ptr<_1b4b9a893_ImportInfo> __jule_trait_method_1aaaeb3ad_1ac0b293e(jule::Ptr<jule::Uintptr> _self_, jule::Str _3128_path) {
	return _1b57a558a_GetImport(_self_.as<_1b57a40a0_JuleImporter>().alloc, _3128_path);
}
inline __jule_tuple_sx_1b4ae8ca8_Ast__jule_tuple_s_1cb285120_Log __jule_trait_method_1aaaeb91e_1ac0b293e(jule::Ptr<jule::Uintptr> _self_, jule::Str _3732_path, jule::Bool _3743_update_mod) {
	return _1b57a5986_ImportPackage(_self_.as<_1b57a40a0_JuleImporter>().alloc, _3732_path, _3743_update_mod);
}
inline void __jule_trait_method_1aaaec337_1ac0b293e(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b4b9a893_ImportInfo> _4131__0) {
	_1b57a5c3e_Imported(_self_.as<_1b57a40a0_JuleImporter>().alloc, _4131__0);
}
inline jule::Str __jule_trait_method_1aaaec876_1aa984b09(jule::Ptr<jule::Uintptr> _self_) {
	return _1b4b249b5_Str(_self_.as<_1b4b24641_StructIns>().alloc);
}
inline jule::Str __jule_trait_method_1aaaec876_1aa98409d(jule::Ptr<jule::Uintptr> _self_) {
	return _1b4b39ba6_Str(_self_.as<_1b4b39865_FnIns>().alloc);
}
inline jule::Str __jule_trait_method_1aaaec876_1aa99b846(jule::Ptr<jule::Uintptr> _self_) {
	return _1b4b4a106_Str(_self_.as<_1b4b49c3d_Trait>().alloc);
}
inline jule::Str __jule_trait_method_1aaaec876_1aa976425(jule::Ptr<jule::Uintptr> _self_) {
	return _1b4b4c7bd_Str(_self_.as<_1b4b4c449_Enum>().alloc);
}
inline jule::Str __jule_trait_method_1aaaec876_1aa97d30b(jule::Ptr<jule::Uintptr> _self_) {
	return _1b4b4de95_Str(_self_.as<_1b4b4db54_TypeEnum>().alloc);
}
inline jule::Str __jule_trait_method_1aaaec876_1aaab3e25(jule::Ptr<jule::Uintptr> _self_) {
	return _1b4b52130_Str(_self_.as<_1b4b51cab_comptimeRange>().alloc);
}
inline jule::Str __jule_trait_method_1aaaec876_1aaa9d739(jule::Ptr<jule::Uintptr> _self_) {
	return _1b4b52b47_Str(_self_.as<_1b4b5277e_comptimeStructField>().alloc);
}
inline jule::Str __jule_trait_method_1aaaec876_1aaa9aaee(jule::Ptr<jule::Uintptr> _self_) {
	return _1b4b547b4_Str(_self_.as<_1b4b54440_comptimeStructFields>().alloc);
}
inline jule::Str __jule_trait_method_1aaaec876_1aaabb339(jule::Ptr<jule::Uintptr> _self_) {
	return _1b4b55dae_Str(_self_.as<_1b4b55a3a_comptimeStatic>().alloc);
}
inline jule::Str __jule_trait_method_1aaaec876_1aaab86ee(jule::Ptr<jule::Uintptr> _self_) {
	return _1b4b57a70_Str(_self_.as<_1b4b576eb_comptimeStatics>().alloc);
}
inline jule::Str __jule_trait_method_1aaaec876_1aaaa4b80(jule::Ptr<jule::Uintptr> _self_) {
	return _1b4b5927a_Str(_self_.as<_1b4b58ce6_comptimeEnumField>().alloc);
}
inline jule::Str __jule_trait_method_1aaaec876_1aaaa2045(jule::Ptr<jule::Uintptr> _self_) {
	return _1b4b5a512_Str(_self_.as<_1b4b5a18d_comptimeEnumFields>().alloc);
}
inline jule::Str __jule_trait_method_1aaaec876_1aaaa9e93(jule::Ptr<jule::Uintptr> _self_) {
	return _1b4b5bb0c_Str(_self_.as<_1b4b5b788_comptimeParam>().alloc);
}
inline jule::Str __jule_trait_method_1aaaec876_1aaaa7358(jule::Ptr<jule::Uintptr> _self_) {
	return _1b4b5dc63_Str(_self_.as<_1b4b5d922_comptimeParams>().alloc);
}
inline jule::Str __jule_trait_method_1aaaec876_1aaab55b9(jule::Ptr<jule::Uintptr> _self_) {
	return _1b4b6035d_Str(_self_.as<_1b4b5eed9_comptimeTypeInfos>().alloc);
}
inline jule::Str __jule_trait_method_1aaaec876_1aa9ad5d3(jule::Ptr<jule::Uintptr> _self_) {
	return _1b4b61958_Str(_self_.as<_1b4b615d4_comptimeTypeInfo>().alloc);
}
inline jule::Str __jule_trait_method_1aaaec876_1aaabeb45(jule::Ptr<jule::Uintptr> _self_) {
	return _1b4b67e6a_Str(_self_.as<_1b4b67ae6_comptimeValue>().alloc);
}
inline jule::Str __jule_trait_method_1aaaec876_1aaac86a9(jule::Ptr<jule::Uintptr> _self_) {
	return _1b4b6a7b9_Str(_self_.as<_1b4b6a445_comptimeFiles>().alloc);
}
inline jule::Str __jule_trait_method_1aaaec876_1aaac4d9d(jule::Ptr<jule::Uintptr> _self_) {
	return _1b4b6c0e5_Str(_self_.as<_1b4b6ba40_comptimeFile>().alloc);
}
inline jule::Str __jule_trait_method_1aaaec876_1aa9670c5(jule::Ptr<jule::Uintptr> _self_) {
	return _1b4c7ccc7_Str(_self_.as<_1b4c7c90e_TypeKind>().alloc);
}
inline jule::Str __jule_trait_method_1aaaec876_1aa96b7e4(jule::Ptr<jule::Uintptr> _self_) {
	return _1b4c85829_Str(_self_.as<_1b4c854d8_Prim>().alloc);
}
inline jule::Str __jule_trait_method_1aaaec876_1aa972e7c(jule::Ptr<jule::Uintptr> _self_) {
	return _1b4c89388_Str(_self_.as<_1b4c89014_Sptr>().alloc);
}
inline jule::Str __jule_trait_method_1aaaec876_1aa982772(jule::Ptr<jule::Uintptr> _self_) {
	return _1b4c89e6b_Str(_self_.as<_1b4c899d7_Slc>().alloc);
}
inline jule::Str __jule_trait_method_1aaaec876_1aa9e6ece(jule::Ptr<jule::Uintptr> _self_) {
	return _1b4c8a950_Str(_self_.as<_1b4c8a5cb_Tuple>().alloc);
}
inline jule::Str __jule_trait_method_1aaaec876_1aa9e54b6(jule::Ptr<jule::Uintptr> _self_) {
	return _1b4c8b500_Str(_self_.as<_1b4c8b17b_Map>().alloc);
}
inline jule::Str __jule_trait_method_1aaaec876_1aa980d8b(jule::Ptr<jule::Uintptr> _self_) {
	return _1b4c8c17c_Str(_self_.as<_1b4c8bd08_Arr>().alloc);
}
inline jule::Str __jule_trait_method_1aaaec876_1aa9746ed(jule::Ptr<jule::Uintptr> _self_) {
	return _1b4c8cb50_Str(_self_.as<_1b4c8c7cb_Ptr>().alloc);
}
inline jule::Str __jule_trait_method_1aaaec876_1ac4e3a84(jule::Ptr<jule::Uintptr> _self_) {
	return _1a903618a_Str(_self_.as<_1a9035cc2_customType>().alloc);
}
inline jule::Bool __jule_trait_method_1aaaecd2c_1aa984b09(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _5621_other) {
	return _1b4b24d06_Equal(_self_.as<_1b4b24641_StructIns>(), _5621_other);
}
inline jule::Bool __jule_trait_method_1aaaecd2c_1aa98409d(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _5621_other) {
	return _1b4b39ee7_Equal(_self_.as<_1b4b39865_FnIns>(), _5621_other);
}
inline jule::Bool __jule_trait_method_1aaaecd2c_1aa99b846(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _5621_other) {
	return _1b4b4a447_Equal(_self_.as<_1b4b49c3d_Trait>(), _5621_other);
}
inline jule::Bool __jule_trait_method_1aaaecd2c_1aa976425(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _5621_other) {
	return _1b4b4cb0e_Equal(_self_.as<_1b4b4c449_Enum>(), _5621_other);
}
inline jule::Bool __jule_trait_method_1aaaecd2c_1aa97d30b(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _5621_other) {
	return _1b4b4e2d6_Equal(_self_.as<_1b4b4db54_TypeEnum>(), _5621_other);
}
inline jule::Bool __jule_trait_method_1aaaecd2c_1aaab3e25(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _5621_other) {
	return _1b4b52471_Equal(_self_.as<_1b4b51cab_comptimeRange>(), _5621_other);
}
inline jule::Bool __jule_trait_method_1aaaecd2c_1aaa9d739(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _5621_other) {
	return _1b4b52e88_Equal(_self_.as<_1b4b5277e_comptimeStructField>(), _5621_other);
}
inline jule::Bool __jule_trait_method_1aaaecd2c_1aaa9aaee(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _5621_other) {
	return _1b4b54b05_Equal(_self_.as<_1b4b54440_comptimeStructFields>(), _5621_other);
}
inline jule::Bool __jule_trait_method_1aaaecd2c_1aaabb339(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _5621_other) {
	return _1b4b56200_Equal(_self_.as<_1b4b55a3a_comptimeStatic>(), _5621_other);
}
inline jule::Bool __jule_trait_method_1aaaecd2c_1aaab86ee(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _5621_other) {
	return _1b4b57db1_Equal(_self_.as<_1b4b576eb_comptimeStatics>(), _5621_other);
}
inline jule::Bool __jule_trait_method_1aaaecd2c_1aaaa4b80(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _5621_other) {
	return _1b4b595bb_Equal(_self_.as<_1b4b58ce6_comptimeEnumField>(), _5621_other);
}
inline jule::Bool __jule_trait_method_1aaaecd2c_1aaaa2045(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _5621_other) {
	return _1b4b5a853_Equal(_self_.as<_1b4b5a18d_comptimeEnumFields>(), _5621_other);
}
inline jule::Bool __jule_trait_method_1aaaecd2c_1aaaa9e93(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _5621_other) {
	return _1b4b5be4d_Equal(_self_.as<_1b4b5b788_comptimeParam>(), _5621_other);
}
inline jule::Bool __jule_trait_method_1aaaecd2c_1aaaa7358(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _5621_other) {
	return _1b4b5e0a4_Equal(_self_.as<_1b4b5d922_comptimeParams>(), _5621_other);
}
inline jule::Bool __jule_trait_method_1aaaecd2c_1aaab55b9(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _5621_other) {
	return _1b4b6069e_Equal(_self_.as<_1b4b5eed9_comptimeTypeInfos>(), _5621_other);
}
inline jule::Bool __jule_trait_method_1aaaecd2c_1aa9ad5d3(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _5621_other) {
	return _1b4b61c99_Equal(_self_.as<_1b4b615d4_comptimeTypeInfo>(), _5621_other);
}
inline jule::Bool __jule_trait_method_1aaaecd2c_1aaabeb45(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _5621_other) {
	return _1b4b682ab_Equal(_self_.as<_1b4b67ae6_comptimeValue>(), _5621_other);
}
inline jule::Bool __jule_trait_method_1aaaecd2c_1aaac86a9(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _5621_other) {
	return _1b4b6ab0a_Equal(_self_.as<_1b4b6a445_comptimeFiles>(), _5621_other);
}
inline jule::Bool __jule_trait_method_1aaaecd2c_1aaac4d9d(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _5621_other) {
	return _1b4b6c436_Equal(_self_.as<_1b4b6ba40_comptimeFile>(), _5621_other);
}
inline jule::Bool __jule_trait_method_1aaaecd2c_1aa9670c5(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _5621_other) {
	return _1b4c7d118_Equal(_self_.as<_1b4c7c90e_TypeKind>(), _5621_other);
}
inline jule::Bool __jule_trait_method_1aaaecd2c_1aa96b7e4(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _5621_other) {
	return _1b4c85b6a_Equal(_self_.as<_1b4c854d8_Prim>(), _5621_other);
}
inline jule::Bool __jule_trait_method_1aaaecd2c_1aa972e7c(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _5621_other) {
	return _1b4c896c9_Equal(_self_.as<_1b4c89014_Sptr>(), _5621_other);
}
inline jule::Bool __jule_trait_method_1aaaecd2c_1aa982772(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _5621_other) {
	return _1b4c8a2ac_Equal(_self_.as<_1b4c899d7_Slc>(), _5621_other);
}
inline jule::Bool __jule_trait_method_1aaaecd2c_1aa9e6ece(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _5621_other) {
	return _1b4c8ac91_Equal(_self_.as<_1b4c8a5cb_Tuple>(), _5621_other);
}
inline jule::Bool __jule_trait_method_1aaaecd2c_1aa9e54b6(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _5621_other) {
	return _1b4c8b841_Equal(_self_.as<_1b4c8b17b_Map>(), _5621_other);
}
inline jule::Bool __jule_trait_method_1aaaecd2c_1aa980d8b(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _5621_other) {
	return _1b4c8c4bd_Equal(_self_.as<_1b4c8bd08_Arr>(), _5621_other);
}
inline jule::Bool __jule_trait_method_1aaaecd2c_1aa9746ed(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _5621_other) {
	return _1b4c8ce91_Equal(_self_.as<_1b4c8c7cb_Ptr>(), _5621_other);
}
inline jule::Bool __jule_trait_method_1aaaecd2c_1ac4e3a84(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _5621_other) {
	return _1a90364cb_Equal(_self_.as<_1a9035cc2_customType>(), _5621_other);
}
inline jule::Ptr<_1b4b9a893_ImportInfo> __jule_trait_method_1aaaed3e3_1aaa56428(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1b4b9a893_ImportInfo>> _932_selector) {
	return _1b4b8125d_SelectPackage(_self_.as<_1b4b80cb8_scopeChecker>().alloc, _932_selector);
}
inline jule::Ptr<_1b4b9a893_ImportInfo> __jule_trait_method_1aaaed3e3_1aa98824a(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1b4b9a893_ImportInfo>> _932_selector) {
	return _1b4b9ad7c_SelectPackage(_self_.as<_1b4b9a893_ImportInfo>().alloc, _932_selector);
}
inline jule::Ptr<_1b4b9a893_ImportInfo> __jule_trait_method_1aaaed3e3_1aa98934a(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1b4b9a893_ImportInfo>> _932_selector) {
	return _1b4b9dc5e_SelectPackage(_self_.as<_1b4b9d7b9_Package>().alloc, _932_selector);
}
inline jule::Ptr<_1b4b9a893_ImportInfo> __jule_trait_method_1aaaed3e3_1aa98626a(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1b4b9a893_ImportInfo>> _932_selector) {
	return _1b4bbb1cc_SelectPackage(_self_.as<_1b4bbac37_Sema>().alloc, _932_selector);
}
inline jule::Ptr<_1b4b9a893_ImportInfo> __jule_trait_method_1aaaed3e3_1aa986c0a(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1b4b9a893_ImportInfo>> _932_selector) {
	return _1b4c41829_SelectPackage(_self_.as<_1b4c41340_SymbolTable>().alloc, _932_selector);
}
inline jule::Ptr<_1b4bddaa1_Var> __jule_trait_method_1aaaee27e_1aaa56428(jule::Ptr<jule::Uintptr> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1b4b81659_FindVar(_self_.as<_1b4b80cb8_scopeChecker>().alloc, _1326_ident, _1338_binded);
}
inline jule::Ptr<_1b4bddaa1_Var> __jule_trait_method_1aaaee27e_1aa98824a(jule::Ptr<jule::Uintptr> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1b4b9b278_FindVar(_self_.as<_1b4b9a893_ImportInfo>().alloc, _1326_ident, _1338_binded);
}
inline jule::Ptr<_1b4bddaa1_Var> __jule_trait_method_1aaaee27e_1aa98934a(jule::Ptr<jule::Uintptr> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1b4b9e15a_FindVar(_self_.as<_1b4b9d7b9_Package>().alloc, _1326_ident, _1338_binded);
}
inline jule::Ptr<_1b4bddaa1_Var> __jule_trait_method_1aaaee27e_1aa98626a(jule::Ptr<jule::Uintptr> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1b4bbb5c8_FindVar(_self_.as<_1b4bbac37_Sema>().alloc, _1326_ident, _1338_binded);
}
inline jule::Ptr<_1b4bddaa1_Var> __jule_trait_method_1aaaee27e_1aa986c0a(jule::Ptr<jule::Uintptr> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1b4c41c25_FindVar(_self_.as<_1b4c41340_SymbolTable>().alloc, _1326_ident, _1338_binded);
}
inline jule::Ptr<_1b4c7bb1c_TypeAlias> __jule_trait_method_1aaaee8ab_1aaa56428(jule::Ptr<jule::Uintptr> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1b4b81a55_FindTypeAlias(_self_.as<_1b4b80cb8_scopeChecker>().alloc, _1732_ident, _1744_binded);
}
inline jule::Ptr<_1b4c7bb1c_TypeAlias> __jule_trait_method_1aaaee8ab_1aa98824a(jule::Ptr<jule::Uintptr> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1b4b9b674_FindTypeAlias(_self_.as<_1b4b9a893_ImportInfo>().alloc, _1732_ident, _1744_binded);
}
inline jule::Ptr<_1b4c7bb1c_TypeAlias> __jule_trait_method_1aaaee8ab_1aa98934a(jule::Ptr<jule::Uintptr> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1b4b9e556_FindTypeAlias(_self_.as<_1b4b9d7b9_Package>().alloc, _1732_ident, _1744_binded);
}
inline jule::Ptr<_1b4c7bb1c_TypeAlias> __jule_trait_method_1aaaee8ab_1aa98626a(jule::Ptr<jule::Uintptr> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1b4bbb9c4_FindTypeAlias(_self_.as<_1b4bbac37_Sema>().alloc, _1732_ident, _1744_binded);
}
inline jule::Ptr<_1b4c7bb1c_TypeAlias> __jule_trait_method_1aaaee8ab_1aa986c0a(jule::Ptr<jule::Uintptr> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1b4c42121_FindTypeAlias(_self_.as<_1b4c41340_SymbolTable>().alloc, _1732_ident, _1744_binded);
}
inline jule::Ptr<_1b4b218b3_Struct> __jule_trait_method_1aab0001b_1aaa56428(jule::Ptr<jule::Uintptr> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1b4b81e51_FindStruct(_self_.as<_1b4b80cb8_scopeChecker>().alloc, _2129_ident, _2141_binded);
}
inline jule::Ptr<_1b4b218b3_Struct> __jule_trait_method_1aab0001b_1aa98824a(jule::Ptr<jule::Uintptr> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1b4b9ba70_FindStruct(_self_.as<_1b4b9a893_ImportInfo>().alloc, _2129_ident, _2141_binded);
}
inline jule::Ptr<_1b4b218b3_Struct> __jule_trait_method_1aab0001b_1aa98934a(jule::Ptr<jule::Uintptr> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1b4b9e952_FindStruct(_self_.as<_1b4b9d7b9_Package>().alloc, _2129_ident, _2141_binded);
}
inline jule::Ptr<_1b4b218b3_Struct> __jule_trait_method_1aab0001b_1aa98626a(jule::Ptr<jule::Uintptr> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1b4bbbdc0_FindStruct(_self_.as<_1b4bbac37_Sema>().alloc, _2129_ident, _2141_binded);
}
inline jule::Ptr<_1b4b218b3_Struct> __jule_trait_method_1aab0001b_1aa986c0a(jule::Ptr<jule::Uintptr> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1b4c4251c_FindStruct(_self_.as<_1b4c41340_SymbolTable>().alloc, _2129_ident, _2141_binded);
}
inline jule::Ptr<_1b4b36884_Fn> __jule_trait_method_1aab0067b_1aaa56428(jule::Ptr<jule::Uintptr> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1b4b8234c_FindFn(_self_.as<_1b4b80cb8_scopeChecker>().alloc, _2525_ident, _2537_binded);
}
inline jule::Ptr<_1b4b36884_Fn> __jule_trait_method_1aab0067b_1aa98824a(jule::Ptr<jule::Uintptr> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1b4b9be6b_FindFn(_self_.as<_1b4b9a893_ImportInfo>().alloc, _2525_ident, _2537_binded);
}
inline jule::Ptr<_1b4b36884_Fn> __jule_trait_method_1aab0067b_1aa98934a(jule::Ptr<jule::Uintptr> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1b4b9ed4d_FindFn(_self_.as<_1b4b9d7b9_Package>().alloc, _2525_ident, _2537_binded);
}
inline jule::Ptr<_1b4b36884_Fn> __jule_trait_method_1aab0067b_1aa98626a(jule::Ptr<jule::Uintptr> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1b4bbc2bb_FindFn(_self_.as<_1b4bbac37_Sema>().alloc, _2525_ident, _2537_binded);
}
inline jule::Ptr<_1b4b36884_Fn> __jule_trait_method_1aab0067b_1aa986c0a(jule::Ptr<jule::Uintptr> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1b4c42918_FindFn(_self_.as<_1b4c41340_SymbolTable>().alloc, _2525_ident, _2537_binded);
}
inline jule::Ptr<_1b4b49c3d_Trait> __jule_trait_method_1aab00cdb_1aaa56428(jule::Ptr<jule::Uintptr> _self_, jule::Str _2928_ident) {
	return _1b4b8268d_FindTrait(_self_.as<_1b4b80cb8_scopeChecker>().alloc, _2928_ident);
}
inline jule::Ptr<_1b4b49c3d_Trait> __jule_trait_method_1aab00cdb_1aa98824a(jule::Ptr<jule::Uintptr> _self_, jule::Str _2928_ident) {
	return _1b4b9c2ac_FindTrait(_self_.as<_1b4b9a893_ImportInfo>().alloc, _2928_ident);
}
inline jule::Ptr<_1b4b49c3d_Trait> __jule_trait_method_1aab00cdb_1aa98934a(jule::Ptr<jule::Uintptr> _self_, jule::Str _2928_ident) {
	return _1b4ba018e_FindTrait(_self_.as<_1b4b9d7b9_Package>().alloc, _2928_ident);
}
inline jule::Ptr<_1b4b49c3d_Trait> __jule_trait_method_1aab00cdb_1aa98626a(jule::Ptr<jule::Uintptr> _self_, jule::Str _2928_ident) {
	return _1b4bbc60c_FindTrait(_self_.as<_1b4bbac37_Sema>().alloc, _2928_ident);
}
inline jule::Ptr<_1b4b49c3d_Trait> __jule_trait_method_1aab00cdb_1aa986c0a(jule::Ptr<jule::Uintptr> _self_, jule::Str _2928_ident) {
	return _1b4c42c59_FindTrait(_self_.as<_1b4c41340_SymbolTable>().alloc, _2928_ident);
}
inline jule::Ptr<_1b4b4c449_Enum> __jule_trait_method_1aab01391_1aaa56428(jule::Ptr<jule::Uintptr> _self_, jule::Str _3327_ident) {
	return _1b4b829ce_FindEnum(_self_.as<_1b4b80cb8_scopeChecker>().alloc, _3327_ident);
}
inline jule::Ptr<_1b4b4c449_Enum> __jule_trait_method_1aab01391_1aa98824a(jule::Ptr<jule::Uintptr> _self_, jule::Str _3327_ident) {
	return _1b4b9c5ed_FindEnum(_self_.as<_1b4b9a893_ImportInfo>().alloc, _3327_ident);
}
inline jule::Ptr<_1b4b4c449_Enum> __jule_trait_method_1aab01391_1aa98934a(jule::Ptr<jule::Uintptr> _self_, jule::Str _3327_ident) {
	return _1b4ba04d0_FindEnum(_self_.as<_1b4b9d7b9_Package>().alloc, _3327_ident);
}
inline jule::Ptr<_1b4b4c449_Enum> __jule_trait_method_1aab01391_1aa98626a(jule::Ptr<jule::Uintptr> _self_, jule::Str _3327_ident) {
	return _1b4bbc94d_FindEnum(_self_.as<_1b4bbac37_Sema>().alloc, _3327_ident);
}
inline jule::Ptr<_1b4b4c449_Enum> __jule_trait_method_1aab01391_1aa986c0a(jule::Ptr<jule::Uintptr> _self_, jule::Str _3327_ident) {
	return _1b4c4309a_FindEnum(_self_.as<_1b4c41340_SymbolTable>().alloc, _3327_ident);
}
inline jule::Ptr<_1b4b4db54_TypeEnum> __jule_trait_method_1aab01946_1aaa56428(jule::Ptr<jule::Uintptr> _self_, jule::Str _3731_ident) {
	return _1b4b82d20_FindTypeEnum(_self_.as<_1b4b80cb8_scopeChecker>().alloc, _3731_ident);
}
inline jule::Ptr<_1b4b4db54_TypeEnum> __jule_trait_method_1aab01946_1aa98824a(jule::Ptr<jule::Uintptr> _self_, jule::Str _3731_ident) {
	return _1b4b9c93e_FindTypeEnum(_self_.as<_1b4b9a893_ImportInfo>().alloc, _3731_ident);
}
inline jule::Ptr<_1b4b4db54_TypeEnum> __jule_trait_method_1aab01946_1aa98934a(jule::Ptr<jule::Uintptr> _self_, jule::Str _3731_ident) {
	return _1b4ba0821_FindTypeEnum(_self_.as<_1b4b9d7b9_Package>().alloc, _3731_ident);
}
inline jule::Ptr<_1b4b4db54_TypeEnum> __jule_trait_method_1aab01946_1aa98626a(jule::Ptr<jule::Uintptr> _self_, jule::Str _3731_ident) {
	return _1b4bbcc8e_FindTypeEnum(_self_.as<_1b4bbac37_Sema>().alloc, _3731_ident);
}
inline jule::Ptr<_1b4b4db54_TypeEnum> __jule_trait_method_1aab01946_1aa986c0a(jule::Ptr<jule::Uintptr> _self_, jule::Str _3731_ident) {
	return _1b4c433db_FindTypeEnum(_self_.as<_1b4c41340_SymbolTable>().alloc, _3731_ident);
}
inline jule::Str __jule_trait_method_1aca104ce_1ac9ee589(jule::Ptr<jule::Uintptr> _self_) {
	return _1ac9ee9a7_Name(_self_.as<_1ac9ee589_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1aca104ce_1aca0313c(jule::Ptr<jule::Uintptr> _self_) {
	return _1aca02cb8_Name(_self_.as<_1aca0313c_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1aca104ce_1aca067a0(jule::Ptr<jule::Uintptr> _self_) {
	return _1aca0642b_Name(_self_.as<_1aca067a0_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1aca104ce_1aca09e57(jule::Ptr<jule::Uintptr> _self_) {
	return _1aca09ad3_Name(_self_.as<_1aca09e57_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1aca104ce_1aca0d5ba(jule::Ptr<jule::Uintptr> _self_) {
	return _1aca0d246_Name(_self_.as<_1aca0d5ba_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1aca11c2d_1ac9ee589(jule::Ptr<jule::Uintptr> _self_) {
	return _1ac9eedb4_Short(_self_.as<_1ac9ee589_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1aca11c2d_1aca0313c(jule::Ptr<jule::Uintptr> _self_) {
	return _1aca036ae_Short(_self_.as<_1aca0313c_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1aca11c2d_1aca067a0(jule::Ptr<jule::Uintptr> _self_) {
	return _1aca06d22_Short(_self_.as<_1aca067a0_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1aca11c2d_1aca09e57(jule::Ptr<jule::Uintptr> _self_) {
	return _1aca0a4c9_Short(_self_.as<_1aca09e57_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1aca11c2d_1aca0d5ba(jule::Ptr<jule::Uintptr> _self_) {
	return _1aca0db3c_Short(_self_.as<_1aca0d5ba_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1aca1213a_1ac9ee589(jule::Ptr<jule::Uintptr> _self_) {
	return _1ac9eeb0b_What(_self_.as<_1ac9ee589_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1aca1213a_1aca0313c(jule::Ptr<jule::Uintptr> _self_) {
	return _1aca03428_What(_self_.as<_1aca0313c_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1aca1213a_1aca067a0(jule::Ptr<jule::Uintptr> _self_) {
	return _1aca06a8b_What(_self_.as<_1aca067a0_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1aca1213a_1aca09e57(jule::Ptr<jule::Uintptr> _self_) {
	return _1aca0a243_What(_self_.as<_1aca09e57_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1aca1213a_1aca0d5ba(jule::Ptr<jule::Uintptr> _self_) {
	return _1aca0d8a6_What(_self_.as<_1aca0d5ba_Flag>().alloc);
}
inline void __jule_trait_method_1aca1258b_1ac9ee589(jule::Ptr<jule::Uintptr> _self_) {
	_1ac9eec60_Reset(_self_.as<_1ac9ee589_Flag>().alloc);
}
inline void __jule_trait_method_1aca1258b_1aca0313c(jule::Ptr<jule::Uintptr> _self_) {
	_1aca0356b_Reset(_self_.as<_1aca0313c_Flag>().alloc);
}
inline void __jule_trait_method_1aca1258b_1aca067a0(jule::Ptr<jule::Uintptr> _self_) {
	_1aca06bce_Reset(_self_.as<_1aca067a0_Flag>().alloc);
}
inline void __jule_trait_method_1aca1258b_1aca09e57(jule::Ptr<jule::Uintptr> _self_) {
	_1aca0a386_Reset(_self_.as<_1aca09e57_Flag>().alloc);
}
inline void __jule_trait_method_1aca1258b_1aca0d5ba(jule::Ptr<jule::Uintptr> _self_) {
	_1aca0d9e9_Reset(_self_.as<_1aca0d5ba_Flag>().alloc);
}


static _1b4b51a8b_comptimeRangeKindMptrData _1b4b51a8b_comptimeRangeKind_mptr_data0 {
	.dealloc=__jule_type_deallocator0,
	._1b4b51283_ready=__jule_trait_method_1aaae917a_1aaa9aaee,
	._1b4b516a1_step=__jule_trait_method_1aaae97b8_1aaa9aaee,
	._1b4b51937_len=__jule_trait_method_1aaaea005_1aaa9aaee,
};
static _1b4b51a8b_comptimeRangeKindMptrData _1b4b51a8b_comptimeRangeKind_mptr_data1 {
	.dealloc=__jule_type_deallocator1,
	._1b4b51283_ready=__jule_trait_method_1aaae917a_1aaab86ee,
	._1b4b516a1_step=__jule_trait_method_1aaae97b8_1aaab86ee,
	._1b4b51937_len=__jule_trait_method_1aaaea005_1aaab86ee,
};
static _1b4b51a8b_comptimeRangeKindMptrData _1b4b51a8b_comptimeRangeKind_mptr_data2 {
	.dealloc=__jule_type_deallocator2,
	._1b4b51283_ready=__jule_trait_method_1aaae917a_1aaaa2045,
	._1b4b516a1_step=__jule_trait_method_1aaae97b8_1aaaa2045,
	._1b4b51937_len=__jule_trait_method_1aaaea005_1aaaa2045,
};
static _1b4b51a8b_comptimeRangeKindMptrData _1b4b51a8b_comptimeRangeKind_mptr_data3 {
	.dealloc=__jule_type_deallocator3,
	._1b4b51283_ready=__jule_trait_method_1aaae917a_1aaaa7358,
	._1b4b516a1_step=__jule_trait_method_1aaae97b8_1aaaa7358,
	._1b4b51937_len=__jule_trait_method_1aaaea005_1aaaa7358,
};
static _1b4b51a8b_comptimeRangeKindMptrData _1b4b51a8b_comptimeRangeKind_mptr_data4 {
	.dealloc=__jule_type_deallocator4,
	._1b4b51283_ready=__jule_trait_method_1aaae917a_1aaab55b9,
	._1b4b516a1_step=__jule_trait_method_1aaae97b8_1aaab55b9,
	._1b4b51937_len=__jule_trait_method_1aaaea005_1aaab55b9,
};
static _1b4b51a8b_comptimeRangeKindMptrData _1b4b51a8b_comptimeRangeKind_mptr_data5 {
	.dealloc=__jule_type_deallocator5,
	._1b4b51283_ready=__jule_trait_method_1aaae917a_1aaac86a9,
	._1b4b516a1_step=__jule_trait_method_1aaae97b8_1aaac86a9,
	._1b4b51937_len=__jule_trait_method_1aaaea005_1aaac86a9,
};
static _1b4b9797d_ImporterMptrData _1b4b9797d_Importer_mptr_data0 {
	.dealloc=__jule_type_deallocator6,
	._1b4b9675c_SetModPath=__jule_trait_method_1aaaea478_1ac0b293e,
	._1b4b969e3_GetModPath=__jule_trait_method_1aaaea92e_1ac0b293e,
	._1b4b96d34_ModById=__jule_trait_method_1aaaead91_1ac0b293e,
	._1b4b97175_GetImport=__jule_trait_method_1aaaeb3ad_1ac0b293e,
	._1b4b97571_ImportPackage=__jule_trait_method_1aaaeb91e_1ac0b293e,
	._1b4b97829_Imported=__jule_trait_method_1aaaec337_1ac0b293e,
};
static _1b4c7c458_KindMptrData _1b4c7c458_Kind_mptr_data0 {
	.dealloc=__jule_type_deallocator7,
	._1b4c7beb3_Str=__jule_trait_method_1aaaec876_1aa984b09,
	._1b4c7c304_Equal=__jule_trait_method_1aaaecd2c_1aa984b09,
};
static _1b4c7c458_KindMptrData _1b4c7c458_Kind_mptr_data1 {
	.dealloc=__jule_type_deallocator8,
	._1b4c7beb3_Str=__jule_trait_method_1aaaec876_1aa98409d,
	._1b4c7c304_Equal=__jule_trait_method_1aaaecd2c_1aa98409d,
};
static _1b4c7c458_KindMptrData _1b4c7c458_Kind_mptr_data2 {
	.dealloc=__jule_type_deallocator9,
	._1b4c7beb3_Str=__jule_trait_method_1aaaec876_1aa99b846,
	._1b4c7c304_Equal=__jule_trait_method_1aaaecd2c_1aa99b846,
};
static _1b4c7c458_KindMptrData _1b4c7c458_Kind_mptr_data3 {
	.dealloc=__jule_type_deallocator10,
	._1b4c7beb3_Str=__jule_trait_method_1aaaec876_1aa976425,
	._1b4c7c304_Equal=__jule_trait_method_1aaaecd2c_1aa976425,
};
static _1b4c7c458_KindMptrData _1b4c7c458_Kind_mptr_data4 {
	.dealloc=__jule_type_deallocator11,
	._1b4c7beb3_Str=__jule_trait_method_1aaaec876_1aa97d30b,
	._1b4c7c304_Equal=__jule_trait_method_1aaaecd2c_1aa97d30b,
};
static _1b4c7c458_KindMptrData _1b4c7c458_Kind_mptr_data5 {
	.dealloc=__jule_type_deallocator12,
	._1b4c7beb3_Str=__jule_trait_method_1aaaec876_1aaab3e25,
	._1b4c7c304_Equal=__jule_trait_method_1aaaecd2c_1aaab3e25,
};
static _1b4c7c458_KindMptrData _1b4c7c458_Kind_mptr_data6 {
	.dealloc=__jule_type_deallocator13,
	._1b4c7beb3_Str=__jule_trait_method_1aaaec876_1aaa9d739,
	._1b4c7c304_Equal=__jule_trait_method_1aaaecd2c_1aaa9d739,
};
static _1b4c7c458_KindMptrData _1b4c7c458_Kind_mptr_data7 {
	.dealloc=__jule_type_deallocator0,
	._1b4c7beb3_Str=__jule_trait_method_1aaaec876_1aaa9aaee,
	._1b4c7c304_Equal=__jule_trait_method_1aaaecd2c_1aaa9aaee,
};
static _1b4c7c458_KindMptrData _1b4c7c458_Kind_mptr_data8 {
	.dealloc=__jule_type_deallocator14,
	._1b4c7beb3_Str=__jule_trait_method_1aaaec876_1aaabb339,
	._1b4c7c304_Equal=__jule_trait_method_1aaaecd2c_1aaabb339,
};
static _1b4c7c458_KindMptrData _1b4c7c458_Kind_mptr_data9 {
	.dealloc=__jule_type_deallocator1,
	._1b4c7beb3_Str=__jule_trait_method_1aaaec876_1aaab86ee,
	._1b4c7c304_Equal=__jule_trait_method_1aaaecd2c_1aaab86ee,
};
static _1b4c7c458_KindMptrData _1b4c7c458_Kind_mptr_data10 {
	.dealloc=__jule_type_deallocator15,
	._1b4c7beb3_Str=__jule_trait_method_1aaaec876_1aaaa4b80,
	._1b4c7c304_Equal=__jule_trait_method_1aaaecd2c_1aaaa4b80,
};
static _1b4c7c458_KindMptrData _1b4c7c458_Kind_mptr_data11 {
	.dealloc=__jule_type_deallocator2,
	._1b4c7beb3_Str=__jule_trait_method_1aaaec876_1aaaa2045,
	._1b4c7c304_Equal=__jule_trait_method_1aaaecd2c_1aaaa2045,
};
static _1b4c7c458_KindMptrData _1b4c7c458_Kind_mptr_data12 {
	.dealloc=__jule_type_deallocator16,
	._1b4c7beb3_Str=__jule_trait_method_1aaaec876_1aaaa9e93,
	._1b4c7c304_Equal=__jule_trait_method_1aaaecd2c_1aaaa9e93,
};
static _1b4c7c458_KindMptrData _1b4c7c458_Kind_mptr_data13 {
	.dealloc=__jule_type_deallocator3,
	._1b4c7beb3_Str=__jule_trait_method_1aaaec876_1aaaa7358,
	._1b4c7c304_Equal=__jule_trait_method_1aaaecd2c_1aaaa7358,
};
static _1b4c7c458_KindMptrData _1b4c7c458_Kind_mptr_data14 {
	.dealloc=__jule_type_deallocator4,
	._1b4c7beb3_Str=__jule_trait_method_1aaaec876_1aaab55b9,
	._1b4c7c304_Equal=__jule_trait_method_1aaaecd2c_1aaab55b9,
};
static _1b4c7c458_KindMptrData _1b4c7c458_Kind_mptr_data15 {
	.dealloc=__jule_type_deallocator17,
	._1b4c7beb3_Str=__jule_trait_method_1aaaec876_1aa9ad5d3,
	._1b4c7c304_Equal=__jule_trait_method_1aaaecd2c_1aa9ad5d3,
};
static _1b4c7c458_KindMptrData _1b4c7c458_Kind_mptr_data16 {
	.dealloc=__jule_type_deallocator18,
	._1b4c7beb3_Str=__jule_trait_method_1aaaec876_1aaabeb45,
	._1b4c7c304_Equal=__jule_trait_method_1aaaecd2c_1aaabeb45,
};
static _1b4c7c458_KindMptrData _1b4c7c458_Kind_mptr_data17 {
	.dealloc=__jule_type_deallocator5,
	._1b4c7beb3_Str=__jule_trait_method_1aaaec876_1aaac86a9,
	._1b4c7c304_Equal=__jule_trait_method_1aaaecd2c_1aaac86a9,
};
static _1b4c7c458_KindMptrData _1b4c7c458_Kind_mptr_data18 {
	.dealloc=__jule_type_deallocator19,
	._1b4c7beb3_Str=__jule_trait_method_1aaaec876_1aaac4d9d,
	._1b4c7c304_Equal=__jule_trait_method_1aaaecd2c_1aaac4d9d,
};
static _1b4c7c458_KindMptrData _1b4c7c458_Kind_mptr_data19 {
	.dealloc=__jule_type_deallocator20,
	._1b4c7beb3_Str=__jule_trait_method_1aaaec876_1aa9670c5,
	._1b4c7c304_Equal=__jule_trait_method_1aaaecd2c_1aa9670c5,
};
static _1b4c7c458_KindMptrData _1b4c7c458_Kind_mptr_data20 {
	.dealloc=__jule_type_deallocator21,
	._1b4c7beb3_Str=__jule_trait_method_1aaaec876_1aa96b7e4,
	._1b4c7c304_Equal=__jule_trait_method_1aaaecd2c_1aa96b7e4,
};
static _1b4c7c458_KindMptrData _1b4c7c458_Kind_mptr_data21 {
	.dealloc=__jule_type_deallocator22,
	._1b4c7beb3_Str=__jule_trait_method_1aaaec876_1aa972e7c,
	._1b4c7c304_Equal=__jule_trait_method_1aaaecd2c_1aa972e7c,
};
static _1b4c7c458_KindMptrData _1b4c7c458_Kind_mptr_data22 {
	.dealloc=__jule_type_deallocator23,
	._1b4c7beb3_Str=__jule_trait_method_1aaaec876_1aa982772,
	._1b4c7c304_Equal=__jule_trait_method_1aaaecd2c_1aa982772,
};
static _1b4c7c458_KindMptrData _1b4c7c458_Kind_mptr_data23 {
	.dealloc=__jule_type_deallocator24,
	._1b4c7beb3_Str=__jule_trait_method_1aaaec876_1aa9e6ece,
	._1b4c7c304_Equal=__jule_trait_method_1aaaecd2c_1aa9e6ece,
};
static _1b4c7c458_KindMptrData _1b4c7c458_Kind_mptr_data24 {
	.dealloc=__jule_type_deallocator25,
	._1b4c7beb3_Str=__jule_trait_method_1aaaec876_1aa9e54b6,
	._1b4c7c304_Equal=__jule_trait_method_1aaaecd2c_1aa9e54b6,
};
static _1b4c7c458_KindMptrData _1b4c7c458_Kind_mptr_data25 {
	.dealloc=__jule_type_deallocator26,
	._1b4c7beb3_Str=__jule_trait_method_1aaaec876_1aa980d8b,
	._1b4c7c304_Equal=__jule_trait_method_1aaaecd2c_1aa980d8b,
};
static _1b4c7c458_KindMptrData _1b4c7c458_Kind_mptr_data26 {
	.dealloc=__jule_type_deallocator27,
	._1b4c7beb3_Str=__jule_trait_method_1aaaec876_1aa9746ed,
	._1b4c7c304_Equal=__jule_trait_method_1aaaecd2c_1aa9746ed,
};
static _1b4c7c458_KindMptrData _1b4c7c458_Kind_mptr_data27 {
	.dealloc=__jule_type_deallocator28,
	._1b4c7beb3_Str=__jule_trait_method_1aaaec876_1ac4e3a84,
	._1b4c7c304_Equal=__jule_trait_method_1aaaecd2c_1ac4e3a84,
};
static _1b4c9c500_LookupMptrData _1b4c9c500_Lookup_mptr_data0 {
	.dealloc=__jule_type_deallocator29,
	._1b4c9a7d9_SelectPackage=__jule_trait_method_1aaaed3e3_1aaa56428,
	._1b4c9abd5_FindVar=__jule_trait_method_1aaaee27e_1aaa56428,
	._1b4c9b0d1_FindTypeAlias=__jule_trait_method_1aaaee8ab_1aaa56428,
	._1b4c9b4cc_FindStruct=__jule_trait_method_1aab0001b_1aaa56428,
	._1b4c9b8c8_FindFn=__jule_trait_method_1aab0067b_1aaa56428,
	._1b4c9bc19_FindTrait=__jule_trait_method_1aab00cdb_1aaa56428,
	._1b4c9c05a_FindEnum=__jule_trait_method_1aab01391_1aaa56428,
	._1b4c9c39b_FindTypeEnum=__jule_trait_method_1aab01946_1aaa56428,
};
static _1b4c9c500_LookupMptrData _1b4c9c500_Lookup_mptr_data1 {
	.dealloc=__jule_type_deallocator30,
	._1b4c9a7d9_SelectPackage=__jule_trait_method_1aaaed3e3_1aa98824a,
	._1b4c9abd5_FindVar=__jule_trait_method_1aaaee27e_1aa98824a,
	._1b4c9b0d1_FindTypeAlias=__jule_trait_method_1aaaee8ab_1aa98824a,
	._1b4c9b4cc_FindStruct=__jule_trait_method_1aab0001b_1aa98824a,
	._1b4c9b8c8_FindFn=__jule_trait_method_1aab0067b_1aa98824a,
	._1b4c9bc19_FindTrait=__jule_trait_method_1aab00cdb_1aa98824a,
	._1b4c9c05a_FindEnum=__jule_trait_method_1aab01391_1aa98824a,
	._1b4c9c39b_FindTypeEnum=__jule_trait_method_1aab01946_1aa98824a,
};
static _1b4c9c500_LookupMptrData _1b4c9c500_Lookup_mptr_data2 {
	.dealloc=__jule_type_deallocator31,
	._1b4c9a7d9_SelectPackage=__jule_trait_method_1aaaed3e3_1aa98934a,
	._1b4c9abd5_FindVar=__jule_trait_method_1aaaee27e_1aa98934a,
	._1b4c9b0d1_FindTypeAlias=__jule_trait_method_1aaaee8ab_1aa98934a,
	._1b4c9b4cc_FindStruct=__jule_trait_method_1aab0001b_1aa98934a,
	._1b4c9b8c8_FindFn=__jule_trait_method_1aab0067b_1aa98934a,
	._1b4c9bc19_FindTrait=__jule_trait_method_1aab00cdb_1aa98934a,
	._1b4c9c05a_FindEnum=__jule_trait_method_1aab01391_1aa98934a,
	._1b4c9c39b_FindTypeEnum=__jule_trait_method_1aab01946_1aa98934a,
};
static _1b4c9c500_LookupMptrData _1b4c9c500_Lookup_mptr_data3 {
	.dealloc=__jule_type_deallocator32,
	._1b4c9a7d9_SelectPackage=__jule_trait_method_1aaaed3e3_1aa98626a,
	._1b4c9abd5_FindVar=__jule_trait_method_1aaaee27e_1aa98626a,
	._1b4c9b0d1_FindTypeAlias=__jule_trait_method_1aaaee8ab_1aa98626a,
	._1b4c9b4cc_FindStruct=__jule_trait_method_1aab0001b_1aa98626a,
	._1b4c9b8c8_FindFn=__jule_trait_method_1aab0067b_1aa98626a,
	._1b4c9bc19_FindTrait=__jule_trait_method_1aab00cdb_1aa98626a,
	._1b4c9c05a_FindEnum=__jule_trait_method_1aab01391_1aa98626a,
	._1b4c9c39b_FindTypeEnum=__jule_trait_method_1aab01946_1aa98626a,
};
static _1b4c9c500_LookupMptrData _1b4c9c500_Lookup_mptr_data4 {
	.dealloc=__jule_type_deallocator33,
	._1b4c9a7d9_SelectPackage=__jule_trait_method_1aaaed3e3_1aa986c0a,
	._1b4c9abd5_FindVar=__jule_trait_method_1aaaee27e_1aa986c0a,
	._1b4c9b0d1_FindTypeAlias=__jule_trait_method_1aaaee8ab_1aa986c0a,
	._1b4c9b4cc_FindStruct=__jule_trait_method_1aab0001b_1aa986c0a,
	._1b4c9b8c8_FindFn=__jule_trait_method_1aab0067b_1aa986c0a,
	._1b4c9bc19_FindTrait=__jule_trait_method_1aab00cdb_1aa986c0a,
	._1b4c9c05a_FindEnum=__jule_trait_method_1aab01391_1aa986c0a,
	._1b4c9c39b_FindTypeEnum=__jule_trait_method_1aab01946_1aa986c0a,
};
static _1a90a8372_CommonFlagMptrData _1a90a8372_CommonFlag_mptr_data0 {
	.dealloc=__jule_type_deallocator34,
	._1a9077231_Name=__jule_trait_method_1aca104ce_1ac9ee589,
	._1a9077374_Short=__jule_trait_method_1aca11c2d_1ac9ee589,
	._1a90774b7_What=__jule_trait_method_1aca1213a_1ac9ee589,
	._1a90a821d_Reset=__jule_trait_method_1aca1258b_1ac9ee589,
};
static _1a90a8372_CommonFlagMptrData _1a90a8372_CommonFlag_mptr_data1 {
	.dealloc=__jule_type_deallocator35,
	._1a9077231_Name=__jule_trait_method_1aca104ce_1aca0313c,
	._1a9077374_Short=__jule_trait_method_1aca11c2d_1aca0313c,
	._1a90774b7_What=__jule_trait_method_1aca1213a_1aca0313c,
	._1a90a821d_Reset=__jule_trait_method_1aca1258b_1aca0313c,
};
static _1a90a8372_CommonFlagMptrData _1a90a8372_CommonFlag_mptr_data2 {
	.dealloc=__jule_type_deallocator36,
	._1a9077231_Name=__jule_trait_method_1aca104ce_1aca067a0,
	._1a9077374_Short=__jule_trait_method_1aca11c2d_1aca067a0,
	._1a90774b7_What=__jule_trait_method_1aca1213a_1aca067a0,
	._1a90a821d_Reset=__jule_trait_method_1aca1258b_1aca067a0,
};
static _1a90a8372_CommonFlagMptrData _1a90a8372_CommonFlag_mptr_data3 {
	.dealloc=__jule_type_deallocator37,
	._1a9077231_Name=__jule_trait_method_1aca104ce_1aca09e57,
	._1a9077374_Short=__jule_trait_method_1aca11c2d_1aca09e57,
	._1a90774b7_What=__jule_trait_method_1aca1213a_1aca09e57,
	._1a90a821d_Reset=__jule_trait_method_1aca1258b_1aca09e57,
};
static _1a90a8372_CommonFlagMptrData _1a90a8372_CommonFlag_mptr_data4 {
	.dealloc=__jule_type_deallocator38,
	._1a9077231_Name=__jule_trait_method_1aca104ce_1aca0d5ba,
	._1a9077374_Short=__jule_trait_method_1aca11c2d_1aca0d5ba,
	._1a90774b7_What=__jule_trait_method_1aca1213a_1aca0d5ba,
	._1a90a821d_Reset=__jule_trait_method_1aca1258b_1aca0d5ba,
};


jule::Bool __jule_any_type0_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other); }
jule::Str __jule_any_type0_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type0{.dealloc=__jule_type_deallocator39, .eq=__jule_any_type0_eq, .to_str=__jule_any_type0_to_str};
jule::Bool __jule_any_type0_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type0 && __jule_any_type0_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type1_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other); }
jule::Str __jule_any_type1_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type1{.dealloc=__jule_type_deallocator40, .eq=__jule_any_type1_eq, .to_str=__jule_any_type1_to_str};
jule::Bool __jule_any_type1_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type1 && __jule_any_type1_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type2_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U64*>(alloc) == *reinterpret_cast<jule::U64*>(other); }
jule::Str __jule_any_type2_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U64*>(alloc)); }
struct jule::Any::Type __jule_any_type2{.dealloc=__jule_type_deallocator41, .eq=__jule_any_type2_eq, .to_str=__jule_any_type2_to_str};
jule::Bool __jule_any_type2_compare(const jule::Any &any, const jule::U64 &other) { return any.type == &__jule_any_type2 && __jule_any_type2_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type3_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::Bool*>(alloc) == *reinterpret_cast<jule::Bool*>(other); }
jule::Str __jule_any_type3_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::Bool*>(alloc)); }
struct jule::Any::Type __jule_any_type3{.dealloc=__jule_type_deallocator42, .eq=__jule_any_type3_eq, .to_str=__jule_any_type3_to_str};
jule::Bool __jule_any_type3_compare(const jule::Any &any, const jule::Bool &other) { return any.type == &__jule_any_type3 && __jule_any_type3_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type4_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::Str*>(alloc) == *reinterpret_cast<jule::Str*>(other); }
jule::Str __jule_any_type4_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type4{.dealloc=__jule_type_deallocator43, .eq=__jule_any_type4_eq, .to_str=__jule_any_type4_to_str};
jule::Bool __jule_any_type4_compare(const jule::Any &any, const jule::Str &other) { return any.type == &__jule_any_type4 && __jule_any_type4_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type5_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::F64*>(alloc) == *reinterpret_cast<jule::F64*>(other); }
jule::Str __jule_any_type5_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::F64*>(alloc)); }
struct jule::Any::Type __jule_any_type5{.dealloc=__jule_type_deallocator44, .eq=__jule_any_type5_eq, .to_str=__jule_any_type5_to_str};
jule::Bool __jule_any_type5_compare(const jule::Any &any, const jule::F64 &other) { return any.type == &__jule_any_type5 && __jule_any_type5_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type6_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other); }
jule::Str __jule_any_type6_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type6{.dealloc=__jule_type_deallocator45, .eq=__jule_any_type6_eq, .to_str=__jule_any_type6_to_str};
jule::Bool __jule_any_type6_compare(const jule::Any &any, const jule::I32 &other) { return any.type == &__jule_any_type6 && __jule_any_type6_eq(any.data.alloc, (void*)&other); }
struct jule::Any::Type __jule_any_type7{.dealloc=__jule_type_deallocator8, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type7_compare(const jule::Any &any, const jule::Ptr<_1b4b39865_FnIns> &other) { return any.type == &__jule_any_type7 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type8{.dealloc=__jule_type_deallocator46, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type8_compare(const jule::Any &any, const jule::Ptr<_1b4bddaa1_Var> &other) { return any.type == &__jule_any_type8 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type9{.dealloc=__jule_type_deallocator7, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type9_compare(const jule::Any &any, const jule::Ptr<_1b4b24641_StructIns> &other) { return any.type == &__jule_any_type9 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type10{.dealloc=__jule_type_deallocator9, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type10_compare(const jule::Any &any, const jule::Ptr<_1b4b49c3d_Trait> &other) { return any.type == &__jule_any_type10 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type11{.dealloc=__jule_type_deallocator47, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type11_compare(const jule::Any &any, const jule::Ptr<_1b4b1c68e_Impl> &other) { return any.type == &__jule_any_type11 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type12{.dealloc=__jule_type_deallocator48, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type12_compare(const jule::Any &any, const jule::Ptr<_1b4b17546_TypeAliasDecl> &other) { return any.type == &__jule_any_type12 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type13{.dealloc=__jule_type_deallocator49, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type13_compare(const jule::Any &any, const jule::Ptr<_1b4b1b7e2_StructDecl> &other) { return any.type == &__jule_any_type13 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type14{.dealloc=__jule_type_deallocator50, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type14_compare(const jule::Any &any, const jule::Ptr<_1b4b126d9_FnDecl> &other) { return any.type == &__jule_any_type14 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type15{.dealloc=__jule_type_deallocator51, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type15_compare(const jule::Any &any, const jule::Ptr<_1b4b1c02e_TraitDecl> &other) { return any.type == &__jule_any_type15 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type16{.dealloc=__jule_type_deallocator52, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type16_compare(const jule::Any &any, const jule::Ptr<_1b4b13894_VarDecl> &other) { return any.type == &__jule_any_type16 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type17{.dealloc=__jule_type_deallocator53, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type17_compare(const jule::Any &any, const jule::Ptr<_1b4b19b97_EnumDecl> &other) { return any.type == &__jule_any_type17 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type18{.dealloc=__jule_type_deallocator54, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type18_compare(const jule::Any &any, const jule::Ptr<_1b4b1ab32_TypeEnumDecl> &other) { return any.type == &__jule_any_type18 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type19{.dealloc=__jule_type_deallocator55, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type19_compare(const jule::Any &any, const jule::Ptr<_1b2753508_Const> &other) { return any.type == &__jule_any_type19 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type20{.dealloc=__jule_type_deallocator56, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type20_compare(const jule::Any &any, const jule::Ptr<_1b4b7b19d_Label> &other) { return any.type == &__jule_any_type20 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type21{.dealloc=__jule_type_deallocator57, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type21_compare(const jule::Any &any, const jule::Ptr<_1b4b7880a_Scope> &other) { return any.type == &__jule_any_type21 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type22{.dealloc=__jule_type_deallocator58, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type22_compare(const jule::Any &any, const jule::Ptr<_1b4b3231e_BuiltinErrorCallExprModel> &other) { return any.type == &__jule_any_type22 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type23{.dealloc=__jule_type_deallocator59, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type23_compare(const jule::Any &any, const jule::Ptr<_1b4c466a8_Data> &other) { return any.type == &__jule_any_type23 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type24{.dealloc=__jule_type_deallocator60, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type24_compare(const jule::Any &any, const jule::Ptr<_1b4b3362d_BackendEmitExprModel> &other) { return any.type == &__jule_any_type24 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type25{.dealloc=__jule_type_deallocator61, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type25_compare(const jule::Any &any, const jule::Ptr<_1b4b31098_BuiltinAppendCallExprModel> &other) { return any.type == &__jule_any_type25 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type26{.dealloc=__jule_type_deallocator62, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type26_compare(const jule::Any &any, const jule::Ptr<_1b4b2e5d5_BuiltinOutCallExprModel> &other) { return any.type == &__jule_any_type26 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type27{.dealloc=__jule_type_deallocator63, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type27_compare(const jule::Any &any, const jule::Ptr<_1b4b2e9ae_BuiltinOutlnCallExprModel> &other) { return any.type == &__jule_any_type27 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type28{.dealloc=__jule_type_deallocator64, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type28_compare(const jule::Any &any, const jule::Ptr<_1b4b30262_BuiltinPanicCallExprModel> &other) { return any.type == &__jule_any_type28 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type29{.dealloc=__jule_type_deallocator65, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type29_compare(const jule::Any &any, const jule::Ptr<_1b4b30718_BuiltinAssertCallExprModel> &other) { return any.type == &__jule_any_type29 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type30{.dealloc=__jule_type_deallocator66, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type30_compare(const jule::Any &any, const jule::Ptr<_1b4b31e45_BuiltinCopyCallExprModel> &other) { return any.type == &__jule_any_type30 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type31{.dealloc=__jule_type_deallocator67, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type31_compare(const jule::Any &any, const jule::Ptr<_1b4b31a6b_BuiltinDeleteCallExprModel> &other) { return any.type == &__jule_any_type31 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type32{.dealloc=__jule_type_deallocator68, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type32_compare(const jule::Any &any, const jule::Ptr<_1b4b3392a_FreeExprModel> &other) { return any.type == &__jule_any_type32 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type33{.dealloc=__jule_type_deallocator69, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type33_compare(const jule::Any &any, const jule::Ptr<_1b4b2aa21_FnCallExprModel> &other) { return any.type == &__jule_any_type33 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type34{.dealloc=__jule_type_deallocator70, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type34_compare(const jule::Any &any, const jule::Ptr<_1b4b79443_Conditional> &other) { return any.type == &__jule_any_type34 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type35{.dealloc=__jule_type_deallocator71, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type35_compare(const jule::Any &any, const jule::Ptr<_1b4b79740_InfIter> &other) { return any.type == &__jule_any_type35 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type36{.dealloc=__jule_type_deallocator72, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type36_compare(const jule::Any &any, const jule::Ptr<_1b4b14d18_WhileKind> &other) { return any.type == &__jule_any_type36 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type37{.dealloc=__jule_type_deallocator73, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type37_compare(const jule::Any &any, const jule::Ptr<_1b4b79be6_WhileIter> &other) { return any.type == &__jule_any_type37 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type38{.dealloc=__jule_type_deallocator74, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type38_compare(const jule::Any &any, const jule::Ptr<_1b4b15720_RangeKind> &other) { return any.type == &__jule_any_type38 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type39{.dealloc=__jule_type_deallocator75, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type39_compare(const jule::Any &any, const jule::Ptr<_1b4b7a642_RangeIter> &other) { return any.type == &__jule_any_type39 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type40{.dealloc=__jule_type_deallocator76, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type40_compare(const jule::Any &any, const jule::Ptr<_1b4b7a9c7_ContSt> &other) { return any.type == &__jule_any_type40 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type41{.dealloc=__jule_type_deallocator77, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type41_compare(const jule::Any &any, const jule::Ptr<_1b4b7b577_GotoSt> &other) { return any.type == &__jule_any_type41 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type42{.dealloc=__jule_type_deallocator78, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type42_compare(const jule::Any &any, const jule::Ptr<_1b4b7b951_Postfix> &other) { return any.type == &__jule_any_type42 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type43{.dealloc=__jule_type_deallocator79, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type43_compare(const jule::Any &any, const jule::Ptr<_1b4b7be07_Assign> &other) { return any.type == &__jule_any_type43 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type44{.dealloc=__jule_type_deallocator80, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type44_compare(const jule::Any &any, const jule::Ptr<_1b4b2b3a1_IndexingExprModel> &other) { return any.type == &__jule_any_type44 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type45{.dealloc=__jule_type_deallocator81, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type45_compare(const jule::Any &any, const jule::Ptr<_1b4b7c3ad_MultiAssign> &other) { return any.type == &__jule_any_type45 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type46{.dealloc=__jule_type_deallocator82, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type46_compare(const jule::Any &any, const jule::Ptr<_1b4b7ca1d_Match> &other) { return any.type == &__jule_any_type46 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type47{.dealloc=__jule_type_deallocator83, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type47_compare(const jule::Any &any, const jule::Ptr<_1b4b7dc3e_FallSt> &other) { return any.type == &__jule_any_type47 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type48{.dealloc=__jule_type_deallocator84, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type48_compare(const jule::Any &any, const jule::Ptr<_1b4b7ada1_BreakSt> &other) { return any.type == &__jule_any_type48 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type49{.dealloc=__jule_type_deallocator85, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type49_compare(const jule::Any &any, const jule::Ptr<_1b4b7e0d5_RetSt> &other) { return any.type == &__jule_any_type49 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type50{.dealloc=__jule_type_deallocator86, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type50_compare(const jule::Any &any, const jule::Ptr<_1b4b10a4a_ScopeTree> &other) { return any.type == &__jule_any_type50 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type51{.dealloc=__jule_type_deallocator87, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type51_compare(const jule::Any &any, const jule::Ptr<_1b4b00001_Expr> &other) { return any.type == &__jule_any_type51 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type52{.dealloc=__jule_type_deallocator88, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type52_compare(const jule::Any &any, const jule::Ptr<_1b4b16d09_Conditional> &other) { return any.type == &__jule_any_type52 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type53{.dealloc=__jule_type_deallocator89, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type53_compare(const jule::Any &any, const jule::Ptr<_1b4b144dd_Iter> &other) { return any.type == &__jule_any_type53 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type54{.dealloc=__jule_type_deallocator90, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type54_compare(const jule::Any &any, const jule::Ptr<_1b4b15ec3_ContSt> &other) { return any.type == &__jule_any_type54 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type55{.dealloc=__jule_type_deallocator91, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type55_compare(const jule::Any &any, const jule::Ptr<_1b4b082a1_LabelSt> &other) { return any.type == &__jule_any_type55 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type56{.dealloc=__jule_type_deallocator92, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type56_compare(const jule::Any &any, const jule::Ptr<_1b4b0867a_GotoSt> &other) { return any.type == &__jule_any_type56 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type57{.dealloc=__jule_type_deallocator93, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type57_compare(const jule::Any &any, const jule::Ptr<_1b4b0966a_AssignSt> &other) { return any.type == &__jule_any_type57 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type58{.dealloc=__jule_type_deallocator94, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type58_compare(const jule::Any &any, const jule::Ptr<_1b4b18316_MatchCase> &other) { return any.type == &__jule_any_type58 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type59{.dealloc=__jule_type_deallocator95, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type59_compare(const jule::Any &any, const jule::Ptr<_1b4b08977_FallSt> &other) { return any.type == &__jule_any_type59 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type60{.dealloc=__jule_type_deallocator96, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type60_compare(const jule::Any &any, const jule::Ptr<_1b4b15ae9_BreakSt> &other) { return any.type == &__jule_any_type60 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type61{.dealloc=__jule_type_deallocator97, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type61_compare(const jule::Any &any, const jule::Ptr<_1b4b13c6d_RetSt> &other) { return any.type == &__jule_any_type61 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type62{.dealloc=__jule_type_deallocator98, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type62_compare(const jule::Any &any, const jule::Ptr<_1b4b008c5_UseExpr> &other) { return any.type == &__jule_any_type62 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type63{.dealloc=__jule_type_deallocator99, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type63_compare(const jule::Any &any, const jule::Ptr<_1b4b36884_Fn> &other) { return any.type == &__jule_any_type63 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type64{.dealloc=__jule_type_deallocator100, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type64_compare(const jule::Any &any, const jule::Ptr<_1b4b218b3_Struct> &other) { return any.type == &__jule_any_type64 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type65{.dealloc=__jule_type_deallocator101, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type65_compare(const jule::Any &any, const jule::Ptr<_1b4c7bb1c_TypeAlias> &other) { return any.type == &__jule_any_type65 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type66{.dealloc=__jule_type_deallocator10, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type66_compare(const jule::Any &any, const jule::Ptr<_1b4b4c449_Enum> &other) { return any.type == &__jule_any_type66 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type67{.dealloc=__jule_type_deallocator11, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type67_compare(const jule::Any &any, const jule::Ptr<_1b4b4db54_TypeEnum> &other) { return any.type == &__jule_any_type67 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type68{.dealloc=__jule_type_deallocator102, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type68_compare(const jule::Any &any, const jule::Ptr<_1b4aece88_ArrTypeDecl> &other) { return any.type == &__jule_any_type68 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type69{.dealloc=__jule_type_deallocator103, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type69_compare(const jule::Any &any, const jule::Ptr<_1b4aec0ec_SlcTypeDecl> &other) { return any.type == &__jule_any_type69 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type70{.dealloc=__jule_type_deallocator104, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type70_compare(const jule::Any &any, const jule::Ptr<_1b4aec6e6_PtrTypeDecl> &other) { return any.type == &__jule_any_type70 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type71{.dealloc=__jule_type_deallocator105, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type71_compare(const jule::Any &any, const jule::Ptr<_1b4aebc67_SptrTypeDecl> &other) { return any.type == &__jule_any_type71 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type72{.dealloc=__jule_type_deallocator106, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type72_compare(const jule::Any &any, const jule::Ptr<_1b4aed6d6_MapTypeDecl> &other) { return any.type == &__jule_any_type72 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type73{.dealloc=__jule_type_deallocator107, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type73_compare(const jule::Any &any, const jule::Ptr<_1b4aec3e9_TupleTypeDecl> &other) { return any.type == &__jule_any_type73 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type74{.dealloc=__jule_type_deallocator108, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type74_compare(const jule::Any &any, const jule::Ptr<_1b4aeb2c7_IdentTypeDecl> &other) { return any.type == &__jule_any_type74 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type75{.dealloc=__jule_type_deallocator109, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type75_compare(const jule::Any &any, const jule::Ptr<_1b4b02487_VariadicExpr> &other) { return any.type == &__jule_any_type75 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type76{.dealloc=__jule_type_deallocator110, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type76_compare(const jule::Any &any, const jule::Ptr<_1b4b2adea_SliceExprModel> &other) { return any.type == &__jule_any_type76 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type77{.dealloc=__jule_type_deallocator111, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type77_compare(const jule::Any &any, const jule::Ptr<_1b4b04720_FieldExprPair> &other) { return any.type == &__jule_any_type77 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type78{.dealloc=__jule_type_deallocator112, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type78_compare(const jule::Any &any, const jule::Ptr<_1b4b05d2b_KeyValPair> &other) { return any.type == &__jule_any_type78 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type79{.dealloc=__jule_type_deallocator113, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type79_compare(const jule::Any &any, const jule::Ptr<_1b4b0181b_IdentExpr> &other) { return any.type == &__jule_any_type79 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type80{.dealloc=__jule_type_deallocator114, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type80_compare(const jule::Any &any, const jule::Ptr<_1b4b00ae5_TupleExpr> &other) { return any.type == &__jule_any_type80 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type81{.dealloc=__jule_type_deallocator115, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type81_compare(const jule::Any &any, const jule::Ptr<_1b4b2e20b_TupleExprModel> &other) { return any.type == &__jule_any_type81 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type82{.dealloc=__jule_type_deallocator116, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type82_compare(const jule::Any &any, const jule::Ptr<_1b4b03c2a_FnCallExpr> &other) { return any.type == &__jule_any_type82 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type83{.dealloc=__jule_type_deallocator117, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type83_compare(const jule::Any &any, const jule::Ptr<_1b4b32e57_RuneExprModel> &other) { return any.type == &__jule_any_type83 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type84{.dealloc=__jule_type_deallocator20, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type84_compare(const jule::Any &any, const jule::Ptr<_1b4c7c90e_TypeKind> &other) { return any.type == &__jule_any_type84 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type85{.dealloc=__jule_type_deallocator118, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type85_compare(const jule::Any &any, const jule::Ptr<_1b4b2de0e_ArrayExprModel> &other) { return any.type == &__jule_any_type85 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type86{.dealloc=__jule_type_deallocator119, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type86_compare(const jule::Any &any, const jule::Ptr<_1b4b03114_SubIdentExpr> &other) { return any.type == &__jule_any_type86 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type87{.dealloc=__jule_type_deallocator120, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type87_compare(const jule::Any &any, const jule::Ptr<_1b4aeb591_SubIdentTypeDecl> &other) { return any.type == &__jule_any_type87 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type88{.dealloc=__jule_type_deallocator121, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type88_compare(const jule::Any &any, const jule::Ptr<_1b4b020ad_UnaryExpr> &other) { return any.type == &__jule_any_type88 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type89{.dealloc=__jule_type_deallocator122, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type89_compare(const jule::Any &any, const jule::Ptr<_1b4aeabbc_TypeDecl> &other) { return any.type == &__jule_any_type89 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type90{.dealloc=__jule_type_deallocator123, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type90_compare(const jule::Any &any, const jule::Ptr<_1b4b02c3a_NsSelectionExpr> &other) { return any.type == &__jule_any_type90 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type91{.dealloc=__jule_type_deallocator124, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type91_compare(const jule::Any &any, const jule::Ptr<_1b4aeb96a_NamespaceTypeDecl> &other) { return any.type == &__jule_any_type91 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type92{.dealloc=__jule_type_deallocator125, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type92_compare(const jule::Any &any, const jule::Ptr<_1b4b2c76a_SlicingExprModel> &other) { return any.type == &__jule_any_type92 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type93{.dealloc=__jule_type_deallocator126, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type93_compare(const jule::Any &any, const jule::Ptr<_1b4b2a16e_CastingExprModel> &other) { return any.type == &__jule_any_type93 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type94{.dealloc=__jule_type_deallocator127, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type94_compare(const jule::Any &any, const jule::Ptr<_1b4b06557_SliceExpr> &other) { return any.type == &__jule_any_type94 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type95{.dealloc=__jule_type_deallocator128, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type95_compare(const jule::Any &any, const jule::Ptr<_1b4b297de_StructLitExprModel> &other) { return any.type == &__jule_any_type95 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type96{.dealloc=__jule_type_deallocator129, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type96_compare(const jule::Any &any, const jule::Ptr<_1b4b2da35_StructStaticIdentExprModel> &other) { return any.type == &__jule_any_type96 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type97{.dealloc=__jule_type_deallocator130, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type97_compare(const jule::Any &any, const jule::Ptr<_1b4b2cced_TraitSubIdentExprModel> &other) { return any.type == &__jule_any_type97 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type98{.dealloc=__jule_type_deallocator131, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type98_compare(const jule::Any &any, const jule::Ptr<_1b4b2d68e_StructSubIdentExprModel> &other) { return any.type == &__jule_any_type98 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type99{.dealloc=__jule_type_deallocator132, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type99_compare(const jule::Any &any, const jule::Ptr<_1b4b2c1d7_MapExprModel> &other) { return any.type == &__jule_any_type99 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type100{.dealloc=__jule_type_deallocator133, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type100_compare(const jule::Any &any, const jule::Ptr<_1b4b2b857_AnonFnExprModel> &other) { return any.type == &__jule_any_type100 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type101{.dealloc=__jule_type_deallocator134, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type101_compare(const jule::Any &any, const jule::Ptr<_1b4b002ba_RangeExpr> &other) { return any.type == &__jule_any_type101 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type102{.dealloc=__jule_type_deallocator135, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type102_compare(const jule::Any &any, const jule::Ptr<_1b4b00e8b_LitExpr> &other) { return any.type == &__jule_any_type102 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type103{.dealloc=__jule_type_deallocator136, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type103_compare(const jule::Any &any, const jule::Ptr<_1b4b01365_UnsafeExpr> &other) { return any.type == &__jule_any_type103 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type104{.dealloc=__jule_type_deallocator137, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type104_compare(const jule::Any &any, const jule::Ptr<_1b4b06eb4_IndexingExpr> &other) { return any.type == &__jule_any_type104 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type105{.dealloc=__jule_type_deallocator138, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type105_compare(const jule::Any &any, const jule::Ptr<_1b4b07624_SlicingExpr> &other) { return any.type == &__jule_any_type105 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type106{.dealloc=__jule_type_deallocator139, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type106_compare(const jule::Any &any, const jule::Ptr<_1b4b02861_CastExpr> &other) { return any.type == &__jule_any_type106 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type107{.dealloc=__jule_type_deallocator140, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type107_compare(const jule::Any &any, const jule::Ptr<_1b4b0504a_StructLit> &other) { return any.type == &__jule_any_type107 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type108{.dealloc=__jule_type_deallocator141, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type108_compare(const jule::Any &any, const jule::Ptr<_1b4b05501_BraceLit> &other) { return any.type == &__jule_any_type108 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type109{.dealloc=__jule_type_deallocator142, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type109_compare(const jule::Any &any, const jule::Ptr<_1b4b035ba_BinaryExpr> &other) { return any.type == &__jule_any_type109 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type110{.dealloc=__jule_type_deallocator143, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type110_compare(const jule::Any &any, const jule::Ptr<_1b4b28e1a_UnaryExprModel> &other) { return any.type == &__jule_any_type110 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type111{.dealloc=__jule_type_deallocator144, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type111_compare(const jule::Any &any, const jule::Ptr<_1b4b28a41_BinaryExprModel> &other) { return any.type == &__jule_any_type111 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type112{.dealloc=__jule_type_deallocator145, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type112_compare(const jule::Any &any, const jule::Ptr<_1b4b29adb_AllocStructLitExprModel> &other) { return any.type == &__jule_any_type112 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type113{.dealloc=__jule_type_deallocator146, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type113_compare(const jule::Any &any, const jule::Ptr<_1b4b2ed88_BuiltinNewCallExprModel> &other) { return any.type == &__jule_any_type113 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type114{.dealloc=__jule_type_deallocator147, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type114_compare(const jule::Any &any, const jule::Ptr<_1b4b30bbe_BuiltinMakeCallExprModel> &other) { return any.type == &__jule_any_type114 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type115{.dealloc=__jule_type_deallocator148, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type115_compare(const jule::Any &any, const jule::Ptr<_1b4b31395_BuiltinLenCallExprModel> &other) { return any.type == &__jule_any_type115 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type116{.dealloc=__jule_type_deallocator149, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type116_compare(const jule::Any &any, const jule::Ptr<_1b4b31692_BuiltinCapCallExprModel> &other) { return any.type == &__jule_any_type116 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type117{.dealloc=__jule_type_deallocator150, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type117_compare(const jule::Any &any, const jule::Ptr<_1b4b329c3_SizeofExprModel> &other) { return any.type == &__jule_any_type117 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type118{.dealloc=__jule_type_deallocator151, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type118_compare(const jule::Any &any, const jule::Ptr<_1b4b32bb0_AlignofExprModel> &other) { return any.type == &__jule_any_type118 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type119{.dealloc=__jule_type_deallocator152, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type119_compare(const jule::Any &any, const jule::Ptr<_1b4b33254_IntegratedToStrExprModel> &other) { return any.type == &__jule_any_type119 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type120{.dealloc=__jule_type_deallocator153, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type120_compare(const jule::Any &any, const jule::Ptr<_1b4d710da_ExceptionalForwardingExprModel> &other) { return any.type == &__jule_any_type120 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type121{.dealloc=__jule_type_deallocator154, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type121_compare(const jule::Any &any, const jule::Ptr<_1b4d739d3_StrRuneIter> &other) { return any.type == &__jule_any_type121 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type122{.dealloc=__jule_type_deallocator155, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type122_compare(const jule::Any &any, const jule::Ptr<_1b4d726c4_MutSlicingExprModel> &other) { return any.type == &__jule_any_type122 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type123{.dealloc=__jule_type_deallocator156, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type123_compare(const jule::Any &any, const jule::Ptr<_1b4d73230_PushToSliceExprModel> &other) { return any.type == &__jule_any_type123 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type124{.dealloc=__jule_type_deallocator157, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type124_compare(const jule::Any &any, const jule::Ptr<_1b4d73609_AppendToSliceExprModel> &other) { return any.type == &__jule_any_type124 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type125{.dealloc=__jule_type_deallocator158, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type125_compare(const jule::Any &any, const jule::Ptr<_1b4d71470_SwapExprModel> &other) { return any.type == &__jule_any_type125 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type126{.dealloc=__jule_type_deallocator159, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type126_compare(const jule::Any &any, const jule::Ptr<_1b4d71849_EmptyCompareExprModel> &other) { return any.type == &__jule_any_type126 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type127{.dealloc=__jule_type_deallocator160, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type127_compare(const jule::Any &any, const jule::Ptr<_1b4d72141_StrCompExprModel> &other) { return any.type == &__jule_any_type127 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type128{.dealloc=__jule_type_deallocator161, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type128_compare(const jule::Any &any, const jule::Ptr<_1b4d729c1_UnsafeBinaryExprModel> &other) { return any.type == &__jule_any_type128 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type129{.dealloc=__jule_type_deallocator162, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type129_compare(const jule::Any &any, const jule::Ptr<_1b4d73cd0_UnsafeDerefExprModel> &other) { return any.type == &__jule_any_type129 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type130{.dealloc=__jule_type_deallocator163, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type130_compare(const jule::Any &any, const jule::Ptr<_1b4d71bbd_RefExprModel> &other) { return any.type == &__jule_any_type130 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type131{.dealloc=__jule_type_deallocator164, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type131_compare(const jule::Any &any, const jule::Ptr<_1b4b29448_StructArgExprModel> &other) { return any.type == &__jule_any_type131 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type132{.dealloc=__jule_type_deallocator165, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type132_compare(const jule::Any &any, const jule::Ptr<_1b4d740cc_UnsafeCastingExprModel> &other) { return any.type == &__jule_any_type132 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type133{.dealloc=__jule_type_deallocator166, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type133_compare(const jule::Any &any, const jule::Ptr<_1b4d72d56_UnsafeIndexingExprModel> &other) { return any.type == &__jule_any_type133 && jule::ptr_equal(any.data.alloc, other.alloc); }
jule::Bool __jule_any_type134_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U8*>(alloc) == *reinterpret_cast<jule::U8*>(other); }
jule::Str __jule_any_type134_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U8*>(alloc)); }
struct jule::Any::Type __jule_any_type134{.dealloc=__jule_type_deallocator167, .eq=__jule_any_type134_eq, .to_str=__jule_any_type134_to_str};
jule::Bool __jule_any_type134_compare(const jule::Any &any, const jule::U8 &other) { return any.type == &__jule_any_type134 && __jule_any_type134_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type135_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::F32*>(alloc) == *reinterpret_cast<jule::F32*>(other); }
jule::Str __jule_any_type135_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::F32*>(alloc)); }
struct jule::Any::Type __jule_any_type135{.dealloc=__jule_type_deallocator168, .eq=__jule_any_type135_eq, .to_str=__jule_any_type135_to_str};
jule::Bool __jule_any_type135_compare(const jule::Any &any, const jule::F32 &other) { return any.type == &__jule_any_type135 && __jule_any_type135_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type136_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I8*>(alloc) == *reinterpret_cast<jule::I8*>(other); }
jule::Str __jule_any_type136_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I8*>(alloc)); }
struct jule::Any::Type __jule_any_type136{.dealloc=__jule_type_deallocator169, .eq=__jule_any_type136_eq, .to_str=__jule_any_type136_to_str};
jule::Bool __jule_any_type136_compare(const jule::Any &any, const jule::I8 &other) { return any.type == &__jule_any_type136 && __jule_any_type136_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type137_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I16*>(alloc) == *reinterpret_cast<jule::I16*>(other); }
jule::Str __jule_any_type137_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I16*>(alloc)); }
struct jule::Any::Type __jule_any_type137{.dealloc=__jule_type_deallocator170, .eq=__jule_any_type137_eq, .to_str=__jule_any_type137_to_str};
jule::Bool __jule_any_type137_compare(const jule::Any &any, const jule::I16 &other) { return any.type == &__jule_any_type137 && __jule_any_type137_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type138_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U16*>(alloc) == *reinterpret_cast<jule::U16*>(other); }
jule::Str __jule_any_type138_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U16*>(alloc)); }
struct jule::Any::Type __jule_any_type138{.dealloc=__jule_type_deallocator171, .eq=__jule_any_type138_eq, .to_str=__jule_any_type138_to_str};
jule::Bool __jule_any_type138_compare(const jule::Any &any, const jule::U16 &other) { return any.type == &__jule_any_type138 && __jule_any_type138_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type139_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U32*>(alloc) == *reinterpret_cast<jule::U32*>(other); }
jule::Str __jule_any_type139_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U32*>(alloc)); }
struct jule::Any::Type __jule_any_type139{.dealloc=__jule_type_deallocator172, .eq=__jule_any_type139_eq, .to_str=__jule_any_type139_to_str};
jule::Bool __jule_any_type139_compare(const jule::Any &any, const jule::U32 &other) { return any.type == &__jule_any_type139 && __jule_any_type139_eq(any.data.alloc, (void*)&other); }
inline jule::Bool __jule_anon1aabd62cd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b387dc_ParamIns> _24027_p1, jule::Ptr<_1b4b387dc_ParamIns> _24042_p2);
struct __jule_anon_1aac431a3_ctx{
	jule::Ptr<_1b4b9a893_ImportInfo> *_49841_pkg;
};
static void __jule_anon_1aac431a3_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aac431a3_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1aac431a3(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b9a893_ImportInfo> _50045_spkg);
struct __jule_anon_1aac97339_ctx{
	jule::Ptr<_1b4b5277e_comptimeStructField> _self_;
};
static void __jule_anon_1aac97339_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aac97339_ctx>().dealloc(); }
inline jule::Ptr<_1b4c466a8_Data> __jule_anon_1aac97339(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _8833_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _8848_fc, jule::Ptr<_1b4c466a8_Data>* );
struct __jule_anon_1aac99292_ctx{
	jule::Ptr<_1b4b5277e_comptimeStructField> _self_;
};
static void __jule_anon_1aac99292_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aac99292_ctx>().dealloc(); }
inline jule::Ptr<_1b4c466a8_Data> __jule_anon_1aac99292(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _9533_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _9548_fc, jule::Ptr<_1b4c466a8_Data>* );
struct __jule_anon_1aac9b1ea_ctx{
	jule::Ptr<_1b4b5277e_comptimeStructField> _self_;
};
static void __jule_anon_1aac9b1ea_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aac9b1ea_ctx>().dealloc(); }
inline jule::Ptr<_1b4c466a8_Data> __jule_anon_1aac9b1ea(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _10233_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _10248_fc, jule::Ptr<_1b4c466a8_Data>* );
struct __jule_anon_1aacace54_ctx{
	jule::Ptr<_1b4b55a3a_comptimeStatic> _self_;
};
static void __jule_anon_1aacace54_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aacace54_ctx>().dealloc(); }
inline jule::Ptr<_1b4c466a8_Data> __jule_anon_1aacace54(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _21133_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _21148_fc, jule::Ptr<_1b4c466a8_Data>* );
struct __jule_anon_1aacaedac_ctx{
	jule::Ptr<_1b4b55a3a_comptimeStatic> _self_;
};
static void __jule_anon_1aacaedac_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aacaedac_ctx>().dealloc(); }
inline jule::Ptr<_1b4c466a8_Data> __jule_anon_1aacaedac(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _21833_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _21848_fc, jule::Ptr<_1b4c466a8_Data>* );
struct __jule_anon_1aacb1d15_ctx{
	jule::Ptr<_1b4b55a3a_comptimeStatic> _self_;
};
static void __jule_anon_1aacb1d15_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aacb1d15_ctx>().dealloc(); }
inline jule::Ptr<_1b4c466a8_Data> __jule_anon_1aacb1d15(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _22533_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _22548_fc, jule::Ptr<_1b4c466a8_Data>* );
struct __jule_anon_1aacbdb35_ctx{
	jule::Ptr<_1b4b58ce6_comptimeEnumField> _self_;
};
static void __jule_anon_1aacbdb35_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aacbdb35_ctx>().dealloc(); }
inline jule::Ptr<_1b4c466a8_Data> __jule_anon_1aacbdb35(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _31333_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _31348_fc, jule::Ptr<_1b4c466a8_Data>* );
struct __jule_anon_1aacd36a5_ctx{
	jule::Ptr<_1b4b5b788_comptimeParam> _self_;
};
static void __jule_anon_1aacd36a5_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aacd36a5_ctx>().dealloc(); }
inline jule::Ptr<_1b4c466a8_Data> __jule_anon_1aacd36a5(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _43533_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _43548_fc, jule::Ptr<_1b4c466a8_Data>* );
struct __jule_anon_1aacd560d_ctx{
	jule::Ptr<_1b4b5b788_comptimeParam> _self_;
};
static void __jule_anon_1aacd560d_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aacd560d_ctx>().dealloc(); }
inline jule::Ptr<_1b4c466a8_Data> __jule_anon_1aacd560d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _44233_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _44248_fc, jule::Ptr<_1b4c466a8_Data>* );
struct __jule_anon_1aacd7566_ctx{
	jule::Ptr<_1b4b5b788_comptimeParam> _self_;
};
static void __jule_anon_1aacd7566_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aacd7566_ctx>().dealloc(); }
inline jule::Ptr<_1b4c466a8_Data> __jule_anon_1aacd7566(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _44933_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _44948_fc, jule::Ptr<_1b4c466a8_Data>* );
struct __jule_anon_1aacd94be_ctx{
	jule::Ptr<_1b4b5b788_comptimeParam> _self_;
};
static void __jule_anon_1aacd94be_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aacd94be_ctx>().dealloc(); }
inline jule::Ptr<_1b4c466a8_Data> __jule_anon_1aacd94be(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _45633_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _45648_fc, jule::Ptr<_1b4c466a8_Data>* );
struct __jule_anon_1aad6b793_ctx{
	jule::Ptr<_1b4b615d4_comptimeTypeInfo> _self_;
};
static void __jule_anon_1aad6b793_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aad6b793_ctx>().dealloc(); }
inline jule::Ptr<_1b4c466a8_Data> __jule_anon_1aad6b793(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _99833_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _99848_fc, jule::Ptr<_1b4c466a8_Data>* );
struct __jule_anon_1aad6d6eb_ctx{
	jule::Ptr<_1b4b615d4_comptimeTypeInfo> _self_;
};
static void __jule_anon_1aad6d6eb_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aad6d6eb_ctx>().dealloc(); }
inline jule::Ptr<_1b4c466a8_Data> __jule_anon_1aad6d6eb(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _100533_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _100548_fc, jule::Ptr<_1b4c466a8_Data>* );
struct __jule_anon_1aad70654_ctx{
	jule::Ptr<_1b4b615d4_comptimeTypeInfo> _self_;
};
static void __jule_anon_1aad70654_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aad70654_ctx>().dealloc(); }
inline jule::Ptr<_1b4c466a8_Data> __jule_anon_1aad70654(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _101233_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _101248_fc, jule::Ptr<_1b4c466a8_Data>* );
struct __jule_anon_1aad725ac_ctx{
	jule::Ptr<_1b4b615d4_comptimeTypeInfo> _self_;
};
static void __jule_anon_1aad725ac_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aad725ac_ctx>().dealloc(); }
inline jule::Ptr<_1b4c466a8_Data> __jule_anon_1aad725ac(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _101933_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _101948_fc, jule::Ptr<_1b4c466a8_Data>* );
struct __jule_anon_1aad79372_ctx{
	jule::Ptr<_1b4b615d4_comptimeTypeInfo> _self_;
};
static void __jule_anon_1aad79372_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aad79372_ctx>().dealloc(); }
inline jule::Ptr<_1b4c466a8_Data> __jule_anon_1aad79372(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _102633_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _102648_fc, jule::Ptr<_1b4c466a8_Data>* );
struct __jule_anon_1aad7b2ca_ctx{
	jule::Ptr<_1b4b615d4_comptimeTypeInfo> _self_;
};
static void __jule_anon_1aad7b2ca_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aad7b2ca_ctx>().dealloc(); }
inline jule::Ptr<_1b4c466a8_Data> __jule_anon_1aad7b2ca(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _103333_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _103348_fc, jule::Ptr<_1b4c466a8_Data>* );
struct __jule_anon_1aad7d233_ctx{
	jule::Ptr<_1b4b615d4_comptimeTypeInfo> _self_;
};
static void __jule_anon_1aad7d233_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aad7d233_ctx>().dealloc(); }
inline jule::Ptr<_1b4c466a8_Data> __jule_anon_1aad7d233(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _104033_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _104048_fc, jule::Ptr<_1b4c466a8_Data>* );
struct __jule_anon_1aad8018b_ctx{
	jule::Ptr<_1b4b615d4_comptimeTypeInfo> _self_;
};
static void __jule_anon_1aad8018b_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aad8018b_ctx>().dealloc(); }
inline jule::Ptr<_1b4c466a8_Data> __jule_anon_1aad8018b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _104733_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _104748_fc, jule::Ptr<_1b4c466a8_Data>* );
struct __jule_anon_1aad82237_ctx{
	jule::Ptr<_1b4b615d4_comptimeTypeInfo> _self_;
};
static void __jule_anon_1aad82237_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aad82237_ctx>().dealloc(); }
inline jule::Ptr<_1b4c466a8_Data> __jule_anon_1aad82237(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _105433_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _105448_fc, jule::Ptr<_1b4c466a8_Data>* );
struct __jule_anon_1aad84190_ctx{
	jule::Ptr<_1b4b615d4_comptimeTypeInfo> _self_;
};
static void __jule_anon_1aad84190_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aad84190_ctx>().dealloc(); }
inline jule::Ptr<_1b4c466a8_Data> __jule_anon_1aad84190(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _106133_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _106148_fc, jule::Ptr<_1b4c466a8_Data>* );
struct __jule_anon_1aad860e8_ctx{
	jule::Ptr<_1b4b615d4_comptimeTypeInfo> _self_;
};
static void __jule_anon_1aad860e8_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aad860e8_ctx>().dealloc(); }
inline jule::Ptr<_1b4c466a8_Data> __jule_anon_1aad860e8(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _106833_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _106848_fc, jule::Ptr<_1b4c466a8_Data>* );
struct __jule_anon_1aad88051_ctx{
	jule::Ptr<_1b4b615d4_comptimeTypeInfo> _self_;
};
static void __jule_anon_1aad88051_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aad88051_ctx>().dealloc(); }
inline jule::Ptr<_1b4c466a8_Data> __jule_anon_1aad88051(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _107533_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _107548_fc, jule::Ptr<_1b4c466a8_Data>* );
struct __jule_anon_1aad89ea9_ctx{
	jule::Ptr<_1b4b615d4_comptimeTypeInfo> _self_;
};
static void __jule_anon_1aad89ea9_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aad89ea9_ctx>().dealloc(); }
inline jule::Ptr<_1b4c466a8_Data> __jule_anon_1aad89ea9(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _108233_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _108248_fc, jule::Ptr<_1b4c466a8_Data>* );
struct __jule_anon_1aad8be12_ctx{
	jule::Ptr<_1b4b615d4_comptimeTypeInfo> _self_;
};
static void __jule_anon_1aad8be12_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aad8be12_ctx>().dealloc(); }
inline jule::Ptr<_1b4c466a8_Data> __jule_anon_1aad8be12(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _108933_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _108948_fc, jule::Ptr<_1b4c466a8_Data>* );
struct __jule_anon_1aad8dd6a_ctx{
	jule::Ptr<_1b4b615d4_comptimeTypeInfo> _self_;
};
static void __jule_anon_1aad8dd6a_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aad8dd6a_ctx>().dealloc(); }
inline jule::Ptr<_1b4c466a8_Data> __jule_anon_1aad8dd6a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _109633_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _109648_fc, jule::Ptr<_1b4c466a8_Data>* );
struct __jule_anon_1aad90cc3_ctx{
	jule::Ptr<_1b4b615d4_comptimeTypeInfo> _self_;
};
static void __jule_anon_1aad90cc3_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aad90cc3_ctx>().dealloc(); }
inline jule::Ptr<_1b4c466a8_Data> __jule_anon_1aad90cc3(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _110333_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _110348_fc, jule::Ptr<_1b4c466a8_Data>* );
struct __jule_anon_1aad92c2b_ctx{
	jule::Ptr<_1b4b615d4_comptimeTypeInfo> _self_;
};
static void __jule_anon_1aad92c2b_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aad92c2b_ctx>().dealloc(); }
inline jule::Ptr<_1b4c466a8_Data> __jule_anon_1aad92c2b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _111033_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _111048_fc, jule::Ptr<_1b4c466a8_Data>* );
struct __jule_anon_1aad94b84_ctx{
	jule::Ptr<_1b4b615d4_comptimeTypeInfo> _self_;
};
static void __jule_anon_1aad94b84_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aad94b84_ctx>().dealloc(); }
inline jule::Ptr<_1b4c466a8_Data> __jule_anon_1aad94b84(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _111733_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _111748_fc, jule::Ptr<_1b4c466a8_Data>* );
struct __jule_anon_1aad96adc_ctx{
	jule::Ptr<_1b4b615d4_comptimeTypeInfo> _self_;
};
static void __jule_anon_1aad96adc_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aad96adc_ctx>().dealloc(); }
inline jule::Ptr<_1b4c466a8_Data> __jule_anon_1aad96adc(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _112433_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _112448_fc, jule::Ptr<_1b4c466a8_Data>* );
struct __jule_anon_1aad98a45_ctx{
	jule::Ptr<_1b4b615d4_comptimeTypeInfo> _self_;
};
static void __jule_anon_1aad98a45_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aad98a45_ctx>().dealloc(); }
inline jule::Ptr<_1b4c466a8_Data> __jule_anon_1aad98a45(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _113133_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _113148_fc, jule::Ptr<_1b4c466a8_Data>* );
struct __jule_anon_1aadb3b09_ctx{
	jule::Ptr<_1b4b67ae6_comptimeValue> _self_;
};
static void __jule_anon_1aadb3b09_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aadb3b09_ctx>().dealloc(); }
inline jule::Ptr<_1b4c466a8_Data> __jule_anon_1aadb3b09(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _124733_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _124748_fc, jule::Ptr<_1b4c466a8_Data>* );
struct __jule_anon_1aadb5a62_ctx{
	jule::Ptr<_1b4b67ae6_comptimeValue> _self_;
};
static void __jule_anon_1aadb5a62_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aadb5a62_ctx>().dealloc(); }
inline jule::Ptr<_1b4c466a8_Data> __jule_anon_1aadb5a62(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _125433_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _125448_fc, jule::Ptr<_1b4c466a8_Data>* );
struct __jule_anon_1aadb79ba_ctx{
	jule::Ptr<_1b4b67ae6_comptimeValue> _self_;
};
static void __jule_anon_1aadb79ba_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aadb79ba_ctx>().dealloc(); }
inline jule::Ptr<_1b4c466a8_Data> __jule_anon_1aadb79ba(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _126133_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _126148_fc, jule::Ptr<_1b4c466a8_Data>* );
struct __jule_anon_1aadb9923_ctx{
	jule::Ptr<_1b4b67ae6_comptimeValue> _self_;
};
static void __jule_anon_1aadb9923_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aadb9923_ctx>().dealloc(); }
inline jule::Ptr<_1b4c466a8_Data> __jule_anon_1aadb9923(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _126833_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _126848_fc, jule::Ptr<_1b4c466a8_Data>* );
struct __jule_anon_1aadbb87b_ctx{
	jule::Ptr<_1b4b67ae6_comptimeValue> _self_;
};
static void __jule_anon_1aadbb87b_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aadbb87b_ctx>().dealloc(); }
inline jule::Ptr<_1b4c466a8_Data> __jule_anon_1aadbb87b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _127533_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _127548_fc, jule::Ptr<_1b4c466a8_Data>* );
struct __jule_anon_1aadbd7d4_ctx{
	jule::Ptr<_1b4b67ae6_comptimeValue> _self_;
};
static void __jule_anon_1aadbd7d4_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aadbd7d4_ctx>().dealloc(); }
inline jule::Ptr<_1b4c466a8_Data> __jule_anon_1aadbd7d4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _128233_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _128248_fc, jule::Ptr<_1b4c466a8_Data>* );
struct __jule_anon_1aadd12a8_ctx{
	jule::Ptr<_1b4b6ba40_comptimeFile> _self_;
};
static void __jule_anon_1aadd12a8_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aadd12a8_ctx>().dealloc(); }
inline jule::Ptr<_1b4c466a8_Data> __jule_anon_1aadd12a8(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _139633_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _139648_fc, jule::Ptr<_1b4c466a8_Data>* );
struct __jule_anon_1aadd3211_ctx{
	jule::Ptr<_1b4b6ba40_comptimeFile> _self_;
};
static void __jule_anon_1aadd3211_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aadd3211_ctx>().dealloc(); }
inline jule::Ptr<_1b4c466a8_Data> __jule_anon_1aadd3211(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _140333_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _140348_fc, jule::Ptr<_1b4c466a8_Data>* );
struct __jule_anon_1aadd5169_ctx{
	jule::Ptr<_1b4b6ba40_comptimeFile> _self_;
};
static void __jule_anon_1aadd5169_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aadd5169_ctx>().dealloc(); }
inline jule::Ptr<_1b4c466a8_Data> __jule_anon_1aadd5169(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _141033_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _141048_fc, jule::Ptr<_1b4c466a8_Data>* );
struct __jule_anon_1aade0b9c_ctx{
	jule::Ptr<_1b4b71050_constraintChecker> _self_;
};
static void __jule_anon_1aade0b9c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aade0b9c_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1aade0b9c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4bbac37_Sema>* _6421_sema, jule::Slice<jule::Ptr<_1b4c7bb1c_TypeAlias>>* _6439_generics);
struct __jule_anon_1ab220806_ctx{
	jule::Ptr<_1b4b39865_FnIns> _110140_f;
	jule::Ptr<_1b4bbac37_Sema> _self_;
};
static void __jule_anon_1ab220806_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab220806_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1ab220806(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4bbac37_Sema>* _110543_sema, jule::Slice<jule::Ptr<_1b4c7bb1c_TypeAlias>>* _110561_generics);
struct __jule_anon_1ab71e244_ctx{
	jule::Ptr<_1b4b02c3a_NsSelectionExpr> _182934_s;
	jule::Str _18309_path;
};
static void __jule_anon_1ab71e244_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab71e244_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1ab71e244(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b9a893_ImportInfo> _183149_imp);
inline jule::Str __jule_anon1ab9eae5a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _84725_def);
struct __jule_anon_1aba76b0c_ctx{
	jule::Ptr<_1b4aeb96a_NamespaceTypeDecl> _151739_decl;
	jule::Str _15189_path;
};
static void __jule_anon_1aba76b0c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aba76b0c_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1aba76b0c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b9a893_ImportInfo> _151949_imp);
struct __jule_anon_1ac50c3d8_ctx{
	jule::Ptr<_1b644d496_scopeCoder> _self_;
	jule::Bool _13713_ref;
};
static void __jule_anon_1ac50c3d8_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac50c3d8_ctx>().dealloc(); }
inline void __jule_anon_1ac50c3d8(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1ac510d9d_ctx{
	jule::Ptr<_1b644d496_scopeCoder> _self_;
	jule::Ptr<_1b4b7a642_RangeIter> *_12939_it;
};
static void __jule_anon_1ac510d9d_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac510d9d_ctx>().dealloc(); }
inline void __jule_anon_1ac510d9d(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1ac520374_ctx{
	jule::Ptr<_1b644d496_scopeCoder> _self_;
};
static void __jule_anon_1ac520374_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac520374_ctx>().dealloc(); }
inline void __jule_anon_1ac520374(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1ac5227e9_ctx{
	jule::Ptr<_1b644d496_scopeCoder> _self_;
};
static void __jule_anon_1ac5227e9_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac5227e9_ctx>().dealloc(); }
inline void __jule_anon_1ac5227e9(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1ac53b527_ctx{
	jule::Ptr<_1b644d496_scopeCoder> _self_;
};
static void __jule_anon_1ac53b527_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac53b527_ctx>().dealloc(); }
inline void __jule_anon_1ac53b527(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1ac5aba1a_ctx{
	jule::Ptr<_1b644d496_scopeCoder> _self_;
};
static void __jule_anon_1ac5aba1a_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac5aba1a_ctx>().dealloc(); }
inline void __jule_anon_1ac5aba1a(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1ac5acd29_ctx{
	jule::Ptr<_1b644d496_scopeCoder> _self_;
	jule::Ptr<_1b4b7ca1d_Match> _63533_m;
};
static void __jule_anon_1ac5acd29_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac5acd29_ctx>().dealloc(); }
inline void __jule_anon_1ac5acd29(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1ac62ceba_ctx{
	jule::Ptr<_1b644d496_scopeCoder> _self_;
	jule::Ptr<_1b4b2b857_AnonFnExprModel> _100537_m;
};
static void __jule_anon_1ac62ceba_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac62ceba_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1ac62ceba(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4bddaa1_Var> _101176_v);
inline __jule_tuple_i64__jule_tuple_bool __jule_anon1aca215de(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _22865_s, jule::I64 _22873_base);
inline __jule_tuple_u64__jule_tuple_bool __jule_anon1aca294a4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _23666_s, jule::I64 _23674_base);
struct __jule_anon_1ac91b20e_ctx{
	jule::Ptr<_1a9026b3c_ObjectCoder> _self_;
};
static void __jule_anon_1ac91b20e_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac91b20e_ctx>().dealloc(); }
inline void __jule_anon_1ac91b20e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b9d7b9_Package>* _82744_pkg);
struct __jule_anon_1ac91c70a_ctx{
	jule::Ptr<_1a9026b3c_ObjectCoder> _self_;
};
static void __jule_anon_1ac91c70a_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac91c70a_ctx>().dealloc(); }
inline void __jule_anon_1ac91c70a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b36884_Fn>* _84042_m);
struct __jule_anon_1ac922ce8_ctx{
	jule::Ptr<_1a9026b3c_ObjectCoder> _self_;
};
static void __jule_anon_1ac922ce8_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac922ce8_ctx>().dealloc(); }
inline void __jule_anon_1ac922ce8(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b9d7b9_Package>* _85344_pkg);
struct __jule_anon_1ac933853_ctx{
	jule::Ptr<_1a9026b3c_ObjectCoder> _self_;
	jule::Ptr<_1b4bddaa1_Var> _92027_v;
};
static void __jule_anon_1ac933853_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac933853_ctx>().dealloc(); }
inline void __jule_anon_1ac933853(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1ac935954_ctx{
	jule::Ptr<_1a9026b3c_ObjectCoder> _self_;
	jule::Ptr<_1b4bddaa1_Var> _92027_v;
};
static void __jule_anon_1ac935954_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac935954_ctx>().dealloc(); }
inline void __jule_anon_1ac935954(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1ac938171_ctx{
	jule::Ptr<_1a9026b3c_ObjectCoder> _self_;
};
static void __jule_anon_1ac938171_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac938171_ctx>().dealloc(); }
inline void __jule_anon_1ac938171(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1ac9392e8_ctx{
	jule::Ptr<_1a9026b3c_ObjectCoder> _self_;
	jule::Ptr<_1b4bddaa1_Var> _92027_v;
};
static void __jule_anon_1ac9392e8_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac9392e8_ctx>().dealloc(); }
inline void __jule_anon_1ac9392e8(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1ac957437_ctx{
	jule::Ptr<_1a9026b3c_ObjectCoder> _self_;
};
static void __jule_anon_1ac957437_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac957437_ctx>().dealloc(); }
inline void __jule_anon_1ac957437(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b9d7b9_Package>* _106244_pkg);
struct __jule_anon_1ac9587bd_ctx{
	jule::Ptr<_1a9026b3c_ObjectCoder> _self_;
	jule::Ptr<_1b4b24641_StructIns> _107652_s;
};
static void __jule_anon_1ac9587bd_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac9587bd_ctx>().dealloc(); }
inline void __jule_anon_1ac9587bd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b36884_Fn>* _107742_m);
struct __jule_anon_1ac9660c2_ctx{
	jule::Ptr<_1a9026b3c_ObjectCoder> _self_;
};
static void __jule_anon_1ac9660c2_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac9660c2_ctx>().dealloc(); }
inline void __jule_anon_1ac9660c2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b9d7b9_Package>* _111444_pkg);
struct __jule_anon_1ac984057_ctx{
	jule::Ptr<_1a9026b3c_ObjectCoder> _self_;
};
static void __jule_anon_1ac984057_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac984057_ctx>().dealloc(); }
inline void __jule_anon_1ac984057(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b9d7b9_Package>* _123944_pkg);
struct __jule_anon_1ac985531_ctx{
	jule::Ptr<_1a9026b3c_ObjectCoder> _self_;
};
static void __jule_anon_1ac985531_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac985531_ctx>().dealloc(); }
inline void __jule_anon_1ac985531(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c41340_SymbolTable>* _125537_file);
struct __jule_anon_1ac98d308_ctx{
	jule::Ptr<_1a9026b3c_ObjectCoder> _self_;
};
static void __jule_anon_1ac98d308_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac98d308_ctx>().dealloc(); }
inline void __jule_anon_1ac98d308(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b9d7b9_Package>* _128444_pkg);
inline jule::Bool __jule_anon1aac8a75b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b9a893_ImportInfo> _143028_pkg);
struct __jule_anon_1ac91c111_ctx{
	jule::Ptr<_1a9026b3c_ObjectCoder> _self_;
};
static void __jule_anon_1ac91c111_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac91c111_ctx>().dealloc(); }
inline void __jule_anon_1ac91c111(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c41340_SymbolTable>* _82841_file);
struct __jule_anon_1ac923bea_ctx{
	jule::Ptr<_1a9026b3c_ObjectCoder> _self_;
};
static void __jule_anon_1ac923bea_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac923bea_ctx>().dealloc(); }
inline void __jule_anon_1ac923bea(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c41340_SymbolTable>* _85441_file);
struct __jule_anon_1ac958339_ctx{
	jule::Ptr<_1a9026b3c_ObjectCoder> _self_;
};
static void __jule_anon_1ac958339_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac958339_ctx>().dealloc(); }
inline void __jule_anon_1ac958339(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c41340_SymbolTable>* _106341_file);
struct __jule_anon_1ac966ec4_ctx{
	jule::Ptr<_1a9026b3c_ObjectCoder> _self_;
};
static void __jule_anon_1ac966ec4_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac966ec4_ctx>().dealloc(); }
inline void __jule_anon_1ac966ec4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c41340_SymbolTable>* _111541_file);
struct __jule_anon_1ac984e59_ctx{
	jule::Ptr<_1a9026b3c_ObjectCoder> _self_;
};
static void __jule_anon_1ac984e59_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac984e59_ctx>().dealloc(); }
inline void __jule_anon_1ac984e59(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c41340_SymbolTable>* _124041_file);
struct __jule_anon_1ac95a2d6_ctx{
	jule::Ptr<_1a9026b3c_ObjectCoder> _self_;
	jule::Ptr<_1b4b49c3d_Trait> _106429_t;
};
static void __jule_anon_1ac95a2d6_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac95a2d6_ctx>().dealloc(); }
inline void __jule_anon_1ac95a2d6(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b36884_Fn>* _106854_m);
jule::Array<jule::Array<jule::Str,2>,5> _1cb3a267c_HelpMap = jule::Array<jule::Array<jule::Str,2>,5>({jule::Array<jule::Str,2>({jule::Str::lit("help", 4),jule::Str::lit("Show help", 9)}),jule::Array<jule::Str,2>({jule::Str::lit("version", 7),jule::Str::lit("Show version", 12)}),jule::Array<jule::Str,2>({jule::Str::lit("tool", 4),jule::Str::lit("Tools for effective Jule", 24)}),jule::Array<jule::Str,2>({jule::Str::lit("julenv", 6),jule::Str::lit("Show information about native jule environment", 46)}),jule::Array<jule::Str,2>({jule::Str::lit("mod", 3),jule::Str::lit("Module management", 17)})});
jule::Str _1a90aee6c_OutDir = jule::Str::lit("dist", 4);
jule::Str _1a90b0247_OutName = jule::Str::lit("ir.cpp", 6);
jule::Str _1a90b0500_Out = jule::Str();
jule::Str _20c57dc89_Compiler = jule::Str();
jule::Str _20c57de98_CompilerPath = jule::Str();
jule::Str _20c57e1a7_CppStd = jule::Str::lit("cpp17", 5);
jule::Bool _20c57e3b6_Shadowing = false;
jule::Bool _20c57e5c5_Transpilation = false;
jule::Bool _20c57e85b_Test = false;
jule::Bool _20c57eb14_RC = true;
jule::Bool _20c57eecc_Safety = true;
jule::Bool _20c58021e_Production = false;
jule::Ptr<_1cae57ed0_RangeTable> _1cade5d5d__L = jule::new_ptr<_1cae57ed0_RangeTable>(_1cae57ed0_RangeTable{._field_R16=jule::Slice<_1cae5752e_Range16>::make({_1cae5752e_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=97LLU, ._field_Hi=122LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=170LLU, ._field_Hi=181LLU, ._field_Stride=11LLU},_1cae5752e_Range16{._field_Lo=186LLU, ._field_Hi=192LLU, ._field_Stride=6LLU},_1cae5752e_Range16{._field_Lo=193LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=216LLU, ._field_Hi=246LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=248LLU, ._field_Hi=705LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=710LLU, ._field_Hi=721LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=736LLU, ._field_Hi=740LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=748LLU, ._field_Hi=750LLU, ._field_Stride=2LLU},_1cae5752e_Range16{._field_Lo=880LLU, ._field_Hi=884LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=886LLU, ._field_Hi=887LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=890LLU, ._field_Hi=893LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=895LLU, ._field_Hi=902LLU, ._field_Stride=7LLU},_1cae5752e_Range16{._field_Lo=904LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_1cae5752e_Range16{._field_Lo=911LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=931LLU, ._field_Hi=1013LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=1015LLU, ._field_Hi=1153LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=1162LLU, ._field_Hi=1327LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=1369LLU, ._field_Hi=1376LLU, ._field_Stride=7LLU},_1cae5752e_Range16{._field_Lo=1377LLU, ._field_Hi=1416LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=1488LLU, ._field_Hi=1514LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=1519LLU, ._field_Hi=1522LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=1568LLU, ._field_Hi=1610LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=1646LLU, ._field_Hi=1647LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=1649LLU, ._field_Hi=1747LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=1749LLU, ._field_Hi=1765LLU, ._field_Stride=16LLU},_1cae5752e_Range16{._field_Lo=1766LLU, ._field_Hi=1774LLU, ._field_Stride=8LLU},_1cae5752e_Range16{._field_Lo=1775LLU, ._field_Hi=1786LLU, ._field_Stride=11LLU},_1cae5752e_Range16{._field_Lo=1787LLU, ._field_Hi=1788LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=1791LLU, ._field_Hi=1808LLU, ._field_Stride=17LLU},_1cae5752e_Range16{._field_Lo=1810LLU, ._field_Hi=1839LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=1869LLU, ._field_Hi=1957LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=1969LLU, ._field_Hi=1994LLU, ._field_Stride=25LLU},_1cae5752e_Range16{._field_Lo=1995LLU, ._field_Hi=2026LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=2036LLU, ._field_Hi=2037LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=2042LLU, ._field_Hi=2048LLU, ._field_Stride=6LLU},_1cae5752e_Range16{._field_Lo=2049LLU, ._field_Hi=2069LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=2074LLU, ._field_Hi=2084LLU, ._field_Stride=10LLU},_1cae5752e_Range16{._field_Lo=2088LLU, ._field_Hi=2112LLU, ._field_Stride=24LLU},_1cae5752e_Range16{._field_Lo=2113LLU, ._field_Hi=2136LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=2144LLU, ._field_Hi=2154LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=2160LLU, ._field_Hi=2183LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=2185LLU, ._field_Hi=2190LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=2208LLU, ._field_Hi=2249LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=2308LLU, ._field_Hi=2361LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=2365LLU, ._field_Hi=2384LLU, ._field_Stride=19LLU},_1cae5752e_Range16{._field_Lo=2392LLU, ._field_Hi=2401LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=2417LLU, ._field_Hi=2432LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=2437LLU, ._field_Hi=2444LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=2447LLU, ._field_Hi=2448LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=2451LLU, ._field_Hi=2472LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=2474LLU, ._field_Hi=2480LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=2482LLU, ._field_Hi=2486LLU, ._field_Stride=4LLU},_1cae5752e_Range16{._field_Lo=2487LLU, ._field_Hi=2489LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=2493LLU, ._field_Hi=2510LLU, ._field_Stride=17LLU},_1cae5752e_Range16{._field_Lo=2524LLU, ._field_Hi=2525LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=2527LLU, ._field_Hi=2529LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=2544LLU, ._field_Hi=2545LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=2556LLU, ._field_Hi=2565LLU, ._field_Stride=9LLU},_1cae5752e_Range16{._field_Lo=2566LLU, ._field_Hi=2570LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=2575LLU, ._field_Hi=2576LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=2579LLU, ._field_Hi=2600LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=2602LLU, ._field_Hi=2608LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=2610LLU, ._field_Hi=2611LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=2613LLU, ._field_Hi=2614LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=2616LLU, ._field_Hi=2617LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=2649LLU, ._field_Hi=2652LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=2654LLU, ._field_Hi=2674LLU, ._field_Stride=20LLU},_1cae5752e_Range16{._field_Lo=2675LLU, ._field_Hi=2676LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=2693LLU, ._field_Hi=2701LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=2703LLU, ._field_Hi=2705LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=2707LLU, ._field_Hi=2728LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=2730LLU, ._field_Hi=2736LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=2738LLU, ._field_Hi=2739LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=2741LLU, ._field_Hi=2745LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=2749LLU, ._field_Hi=2768LLU, ._field_Stride=19LLU},_1cae5752e_Range16{._field_Lo=2784LLU, ._field_Hi=2785LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=2809LLU, ._field_Hi=2821LLU, ._field_Stride=12LLU},_1cae5752e_Range16{._field_Lo=2822LLU, ._field_Hi=2828LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=2831LLU, ._field_Hi=2832LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=2835LLU, ._field_Hi=2856LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=2858LLU, ._field_Hi=2864LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=2866LLU, ._field_Hi=2867LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=2869LLU, ._field_Hi=2873LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=2877LLU, ._field_Hi=2908LLU, ._field_Stride=31LLU},_1cae5752e_Range16{._field_Lo=2909LLU, ._field_Hi=2911LLU, ._field_Stride=2LLU},_1cae5752e_Range16{._field_Lo=2912LLU, ._field_Hi=2913LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=2929LLU, ._field_Hi=2947LLU, ._field_Stride=18LLU},_1cae5752e_Range16{._field_Lo=2949LLU, ._field_Hi=2954LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=2958LLU, ._field_Hi=2960LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=2962LLU, ._field_Hi=2965LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=2969LLU, ._field_Hi=2970LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=2972LLU, ._field_Hi=2974LLU, ._field_Stride=2LLU},_1cae5752e_Range16{._field_Lo=2975LLU, ._field_Hi=2979LLU, ._field_Stride=4LLU},_1cae5752e_Range16{._field_Lo=2980LLU, ._field_Hi=2984LLU, ._field_Stride=4LLU},_1cae5752e_Range16{._field_Lo=2985LLU, ._field_Hi=2986LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=2990LLU, ._field_Hi=3001LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=3024LLU, ._field_Hi=3077LLU, ._field_Stride=53LLU},_1cae5752e_Range16{._field_Lo=3078LLU, ._field_Hi=3084LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=3086LLU, ._field_Hi=3088LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=3090LLU, ._field_Hi=3112LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=3114LLU, ._field_Hi=3129LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=3133LLU, ._field_Hi=3160LLU, ._field_Stride=27LLU},_1cae5752e_Range16{._field_Lo=3161LLU, ._field_Hi=3162LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=3165LLU, ._field_Hi=3168LLU, ._field_Stride=3LLU},_1cae5752e_Range16{._field_Lo=3169LLU, ._field_Hi=3200LLU, ._field_Stride=31LLU},_1cae5752e_Range16{._field_Lo=3205LLU, ._field_Hi=3212LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=3214LLU, ._field_Hi=3216LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=3218LLU, ._field_Hi=3240LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=3242LLU, ._field_Hi=3251LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=3253LLU, ._field_Hi=3257LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=3261LLU, ._field_Hi=3293LLU, ._field_Stride=32LLU},_1cae5752e_Range16{._field_Lo=3294LLU, ._field_Hi=3296LLU, ._field_Stride=2LLU},_1cae5752e_Range16{._field_Lo=3297LLU, ._field_Hi=3313LLU, ._field_Stride=16LLU},_1cae5752e_Range16{._field_Lo=3314LLU, ._field_Hi=3332LLU, ._field_Stride=18LLU},_1cae5752e_Range16{._field_Lo=3333LLU, ._field_Hi=3340LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=3342LLU, ._field_Hi=3344LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=3346LLU, ._field_Hi=3386LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=3389LLU, ._field_Hi=3406LLU, ._field_Stride=17LLU},_1cae5752e_Range16{._field_Lo=3412LLU, ._field_Hi=3414LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=3423LLU, ._field_Hi=3425LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=3450LLU, ._field_Hi=3455LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=3461LLU, ._field_Hi=3478LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=3482LLU, ._field_Hi=3505LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=3507LLU, ._field_Hi=3515LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=3517LLU, ._field_Hi=3520LLU, ._field_Stride=3LLU},_1cae5752e_Range16{._field_Lo=3521LLU, ._field_Hi=3526LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=3585LLU, ._field_Hi=3632LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=3634LLU, ._field_Hi=3635LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=3648LLU, ._field_Hi=3654LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=3713LLU, ._field_Hi=3714LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=3716LLU, ._field_Hi=3718LLU, ._field_Stride=2LLU},_1cae5752e_Range16{._field_Lo=3719LLU, ._field_Hi=3722LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=3724LLU, ._field_Hi=3747LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=3749LLU, ._field_Hi=3751LLU, ._field_Stride=2LLU},_1cae5752e_Range16{._field_Lo=3752LLU, ._field_Hi=3760LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=3762LLU, ._field_Hi=3763LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=3773LLU, ._field_Hi=3776LLU, ._field_Stride=3LLU},_1cae5752e_Range16{._field_Lo=3777LLU, ._field_Hi=3780LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=3782LLU, ._field_Hi=3804LLU, ._field_Stride=22LLU},_1cae5752e_Range16{._field_Lo=3805LLU, ._field_Hi=3807LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=3840LLU, ._field_Hi=3904LLU, ._field_Stride=64LLU},_1cae5752e_Range16{._field_Lo=3905LLU, ._field_Hi=3911LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=3913LLU, ._field_Hi=3948LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=3976LLU, ._field_Hi=3980LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=4096LLU, ._field_Hi=4138LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=4159LLU, ._field_Hi=4176LLU, ._field_Stride=17LLU},_1cae5752e_Range16{._field_Lo=4177LLU, ._field_Hi=4181LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=4186LLU, ._field_Hi=4189LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=4193LLU, ._field_Hi=4197LLU, ._field_Stride=4LLU},_1cae5752e_Range16{._field_Lo=4198LLU, ._field_Hi=4206LLU, ._field_Stride=8LLU},_1cae5752e_Range16{._field_Lo=4207LLU, ._field_Hi=4208LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=4213LLU, ._field_Hi=4225LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=4238LLU, ._field_Hi=4256LLU, ._field_Stride=18LLU},_1cae5752e_Range16{._field_Lo=4257LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_1cae5752e_Range16{._field_Lo=4304LLU, ._field_Hi=4346LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=4348LLU, ._field_Hi=4680LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=4682LLU, ._field_Hi=4685LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=4688LLU, ._field_Hi=4694LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=4696LLU, ._field_Hi=4698LLU, ._field_Stride=2LLU},_1cae5752e_Range16{._field_Lo=4699LLU, ._field_Hi=4701LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=4704LLU, ._field_Hi=4744LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=4746LLU, ._field_Hi=4749LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=4752LLU, ._field_Hi=4784LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=4786LLU, ._field_Hi=4789LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=4792LLU, ._field_Hi=4798LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=4800LLU, ._field_Hi=4802LLU, ._field_Stride=2LLU},_1cae5752e_Range16{._field_Lo=4803LLU, ._field_Hi=4805LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=4808LLU, ._field_Hi=4822LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=4824LLU, ._field_Hi=4880LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=4882LLU, ._field_Hi=4885LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=4888LLU, ._field_Hi=4954LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=4992LLU, ._field_Hi=5007LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=5112LLU, ._field_Hi=5117LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=5121LLU, ._field_Hi=5740LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=5743LLU, ._field_Hi=5759LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=5761LLU, ._field_Hi=5786LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=5792LLU, ._field_Hi=5866LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=5873LLU, ._field_Hi=5880LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=5888LLU, ._field_Hi=5905LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=5919LLU, ._field_Hi=5937LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=5952LLU, ._field_Hi=5969LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=5984LLU, ._field_Hi=5996LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=5998LLU, ._field_Hi=6000LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=6016LLU, ._field_Hi=6067LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=6103LLU, ._field_Hi=6108LLU, ._field_Stride=5LLU},_1cae5752e_Range16{._field_Lo=6176LLU, ._field_Hi=6264LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=6272LLU, ._field_Hi=6276LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=6279LLU, ._field_Hi=6312LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=6314LLU, ._field_Hi=6320LLU, ._field_Stride=6LLU},_1cae5752e_Range16{._field_Lo=6321LLU, ._field_Hi=6389LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=6400LLU, ._field_Hi=6430LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=6480LLU, ._field_Hi=6509LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=6512LLU, ._field_Hi=6516LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=6528LLU, ._field_Hi=6571LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=6576LLU, ._field_Hi=6601LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=6656LLU, ._field_Hi=6678LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=6688LLU, ._field_Hi=6740LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=6823LLU, ._field_Hi=6917LLU, ._field_Stride=94LLU},_1cae5752e_Range16{._field_Lo=6918LLU, ._field_Hi=6963LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=6981LLU, ._field_Hi=6988LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=7043LLU, ._field_Hi=7072LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=7086LLU, ._field_Hi=7087LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=7098LLU, ._field_Hi=7141LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=7168LLU, ._field_Hi=7203LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=7245LLU, ._field_Hi=7247LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=7258LLU, ._field_Hi=7293LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=7296LLU, ._field_Hi=7304LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=7401LLU, ._field_Hi=7404LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=7406LLU, ._field_Hi=7411LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=7413LLU, ._field_Hi=7414LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=7418LLU, ._field_Hi=7424LLU, ._field_Stride=6LLU},_1cae5752e_Range16{._field_Lo=7425LLU, ._field_Hi=7615LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=7680LLU, ._field_Hi=7957LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=7968LLU, ._field_Hi=8005LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=8016LLU, ._field_Hi=8023LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_1cae5752e_Range16{._field_Lo=8032LLU, ._field_Hi=8061LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=8064LLU, ._field_Hi=8116LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=8118LLU, ._field_Hi=8124LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=8126LLU, ._field_Hi=8130LLU, ._field_Stride=4LLU},_1cae5752e_Range16{._field_Lo=8131LLU, ._field_Hi=8132LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=8134LLU, ._field_Hi=8140LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=8144LLU, ._field_Hi=8147LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=8150LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=8160LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=8178LLU, ._field_Hi=8180LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=8182LLU, ._field_Hi=8188LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=8305LLU, ._field_Hi=8319LLU, ._field_Stride=14LLU},_1cae5752e_Range16{._field_Lo=8336LLU, ._field_Hi=8348LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_1cae5752e_Range16{._field_Lo=8458LLU, ._field_Hi=8467LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_1cae5752e_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_1cae5752e_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=8495LLU, ._field_Hi=8505LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=8508LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=8517LLU, ._field_Hi=8521LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=8526LLU, ._field_Hi=8579LLU, ._field_Stride=53LLU},_1cae5752e_Range16{._field_Lo=8580LLU, ._field_Hi=11264LLU, ._field_Stride=2684LLU},_1cae5752e_Range16{._field_Lo=11265LLU, ._field_Hi=11492LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=11499LLU, ._field_Hi=11502LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=11506LLU, ._field_Hi=11507LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=11520LLU, ._field_Hi=11557LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=11559LLU, ._field_Hi=11565LLU, ._field_Stride=6LLU},_1cae5752e_Range16{._field_Lo=11568LLU, ._field_Hi=11623LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=11631LLU, ._field_Hi=11648LLU, ._field_Stride=17LLU},_1cae5752e_Range16{._field_Lo=11649LLU, ._field_Hi=11670LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=11680LLU, ._field_Hi=11686LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=11688LLU, ._field_Hi=11694LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=11696LLU, ._field_Hi=11702LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=11704LLU, ._field_Hi=11710LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=11712LLU, ._field_Hi=11718LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=11720LLU, ._field_Hi=11726LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=11728LLU, ._field_Hi=11734LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=11736LLU, ._field_Hi=11742LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=11823LLU, ._field_Hi=12293LLU, ._field_Stride=470LLU},_1cae5752e_Range16{._field_Lo=12294LLU, ._field_Hi=12337LLU, ._field_Stride=43LLU},_1cae5752e_Range16{._field_Lo=12338LLU, ._field_Hi=12341LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=12347LLU, ._field_Hi=12348LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=12353LLU, ._field_Hi=12438LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=12445LLU, ._field_Hi=12447LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=12449LLU, ._field_Hi=12538LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=12540LLU, ._field_Hi=12543LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=12549LLU, ._field_Hi=12591LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=12593LLU, ._field_Hi=12686LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=12704LLU, ._field_Hi=12735LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=12784LLU, ._field_Hi=12799LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=13312LLU, ._field_Hi=19903LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=19968LLU, ._field_Hi=42124LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=42192LLU, ._field_Hi=42237LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=42240LLU, ._field_Hi=42508LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=42512LLU, ._field_Hi=42527LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=42538LLU, ._field_Hi=42539LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=42560LLU, ._field_Hi=42606LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=42623LLU, ._field_Hi=42653LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=42656LLU, ._field_Hi=42725LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=42775LLU, ._field_Hi=42783LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=42786LLU, ._field_Hi=42888LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=42891LLU, ._field_Hi=42954LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=42960LLU, ._field_Hi=42961LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=42963LLU, ._field_Hi=42965LLU, ._field_Stride=2LLU},_1cae5752e_Range16{._field_Lo=42966LLU, ._field_Hi=42969LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=42994LLU, ._field_Hi=43009LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=43011LLU, ._field_Hi=43013LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=43015LLU, ._field_Hi=43018LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=43020LLU, ._field_Hi=43042LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=43072LLU, ._field_Hi=43123LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=43138LLU, ._field_Hi=43187LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=43250LLU, ._field_Hi=43255LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=43259LLU, ._field_Hi=43261LLU, ._field_Stride=2LLU},_1cae5752e_Range16{._field_Lo=43262LLU, ._field_Hi=43274LLU, ._field_Stride=12LLU},_1cae5752e_Range16{._field_Lo=43275LLU, ._field_Hi=43301LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=43312LLU, ._field_Hi=43334LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=43360LLU, ._field_Hi=43388LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=43396LLU, ._field_Hi=43442LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=43471LLU, ._field_Hi=43488LLU, ._field_Stride=17LLU},_1cae5752e_Range16{._field_Lo=43489LLU, ._field_Hi=43492LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=43494LLU, ._field_Hi=43503LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=43514LLU, ._field_Hi=43518LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=43520LLU, ._field_Hi=43560LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=43584LLU, ._field_Hi=43586LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=43588LLU, ._field_Hi=43595LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=43616LLU, ._field_Hi=43638LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=43642LLU, ._field_Hi=43646LLU, ._field_Stride=4LLU},_1cae5752e_Range16{._field_Lo=43647LLU, ._field_Hi=43695LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=43697LLU, ._field_Hi=43701LLU, ._field_Stride=4LLU},_1cae5752e_Range16{._field_Lo=43702LLU, ._field_Hi=43705LLU, ._field_Stride=3LLU},_1cae5752e_Range16{._field_Lo=43706LLU, ._field_Hi=43709LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=43712LLU, ._field_Hi=43714LLU, ._field_Stride=2LLU},_1cae5752e_Range16{._field_Lo=43739LLU, ._field_Hi=43741LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=43744LLU, ._field_Hi=43754LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=43762LLU, ._field_Hi=43764LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=43777LLU, ._field_Hi=43782LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=43785LLU, ._field_Hi=43790LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=43793LLU, ._field_Hi=43798LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=43808LLU, ._field_Hi=43814LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=43816LLU, ._field_Hi=43822LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=43824LLU, ._field_Hi=43866LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=43868LLU, ._field_Hi=43881LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=43888LLU, ._field_Hi=44002LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=44032LLU, ._field_Hi=55203LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=55216LLU, ._field_Hi=55238LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=55243LLU, ._field_Hi=55291LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=63744LLU, ._field_Hi=64109LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=64112LLU, ._field_Hi=64217LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=64256LLU, ._field_Hi=64262LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=64275LLU, ._field_Hi=64279LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=64285LLU, ._field_Hi=64287LLU, ._field_Stride=2LLU},_1cae5752e_Range16{._field_Lo=64288LLU, ._field_Hi=64296LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=64298LLU, ._field_Hi=64310LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=64312LLU, ._field_Hi=64316LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=64318LLU, ._field_Hi=64320LLU, ._field_Stride=2LLU},_1cae5752e_Range16{._field_Lo=64321LLU, ._field_Hi=64323LLU, ._field_Stride=2LLU},_1cae5752e_Range16{._field_Lo=64324LLU, ._field_Hi=64326LLU, ._field_Stride=2LLU},_1cae5752e_Range16{._field_Lo=64327LLU, ._field_Hi=64433LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=64467LLU, ._field_Hi=64829LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=64848LLU, ._field_Hi=64911LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=64914LLU, ._field_Hi=64967LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=65008LLU, ._field_Hi=65019LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=65136LLU, ._field_Hi=65140LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=65142LLU, ._field_Hi=65276LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=65313LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=65345LLU, ._field_Hi=65370LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=65382LLU, ._field_Hi=65470LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=65474LLU, ._field_Hi=65479LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=65482LLU, ._field_Hi=65487LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=65490LLU, ._field_Hi=65495LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=65498LLU, ._field_Hi=65500LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_1cae57a5c_Range32>::make({_1cae57a5c_Range32{._field_Lo=65536LLU, ._field_Hi=65547LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=65549LLU, ._field_Hi=65574LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=65576LLU, ._field_Hi=65594LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=65596LLU, ._field_Hi=65597LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=65599LLU, ._field_Hi=65613LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=65616LLU, ._field_Hi=65629LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=65664LLU, ._field_Hi=65786LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=66176LLU, ._field_Hi=66204LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=66208LLU, ._field_Hi=66256LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=66304LLU, ._field_Hi=66335LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=66349LLU, ._field_Hi=66368LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=66370LLU, ._field_Hi=66377LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=66384LLU, ._field_Hi=66421LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=66432LLU, ._field_Hi=66461LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=66464LLU, ._field_Hi=66499LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=66504LLU, ._field_Hi=66511LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=66560LLU, ._field_Hi=66717LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=66776LLU, ._field_Hi=66811LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=66816LLU, ._field_Hi=66855LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=66864LLU, ._field_Hi=66915LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=66967LLU, ._field_Hi=66977LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=66979LLU, ._field_Hi=66993LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=66995LLU, ._field_Hi=67001LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=67003LLU, ._field_Hi=67004LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=67072LLU, ._field_Hi=67382LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=67392LLU, ._field_Hi=67413LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=67424LLU, ._field_Hi=67431LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=67456LLU, ._field_Hi=67461LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=67463LLU, ._field_Hi=67504LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=67506LLU, ._field_Hi=67514LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=67584LLU, ._field_Hi=67589LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=67592LLU, ._field_Hi=67594LLU, ._field_Stride=2LLU},_1cae57a5c_Range32{._field_Lo=67595LLU, ._field_Hi=67637LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=67639LLU, ._field_Hi=67640LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=67644LLU, ._field_Hi=67647LLU, ._field_Stride=3LLU},_1cae57a5c_Range32{._field_Lo=67648LLU, ._field_Hi=67669LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=67680LLU, ._field_Hi=67702LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=67712LLU, ._field_Hi=67742LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=67808LLU, ._field_Hi=67826LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=67828LLU, ._field_Hi=67829LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=67840LLU, ._field_Hi=67861LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=67872LLU, ._field_Hi=67897LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=67968LLU, ._field_Hi=68023LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=68030LLU, ._field_Hi=68031LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=68096LLU, ._field_Hi=68112LLU, ._field_Stride=16LLU},_1cae57a5c_Range32{._field_Lo=68113LLU, ._field_Hi=68115LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=68117LLU, ._field_Hi=68119LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=68121LLU, ._field_Hi=68149LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=68192LLU, ._field_Hi=68220LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=68224LLU, ._field_Hi=68252LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=68288LLU, ._field_Hi=68295LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=68297LLU, ._field_Hi=68324LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=68352LLU, ._field_Hi=68405LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=68416LLU, ._field_Hi=68437LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=68448LLU, ._field_Hi=68466LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=68480LLU, ._field_Hi=68497LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=68608LLU, ._field_Hi=68680LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=68800LLU, ._field_Hi=68850LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=68864LLU, ._field_Hi=68899LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=69248LLU, ._field_Hi=69289LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=69296LLU, ._field_Hi=69297LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=69376LLU, ._field_Hi=69404LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=69415LLU, ._field_Hi=69424LLU, ._field_Stride=9LLU},_1cae57a5c_Range32{._field_Lo=69425LLU, ._field_Hi=69445LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=69488LLU, ._field_Hi=69505LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=69552LLU, ._field_Hi=69572LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=69600LLU, ._field_Hi=69622LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=69635LLU, ._field_Hi=69687LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=69745LLU, ._field_Hi=69746LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=69749LLU, ._field_Hi=69763LLU, ._field_Stride=14LLU},_1cae57a5c_Range32{._field_Lo=69764LLU, ._field_Hi=69807LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=69840LLU, ._field_Hi=69864LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=69891LLU, ._field_Hi=69926LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=69956LLU, ._field_Hi=69959LLU, ._field_Stride=3LLU},_1cae57a5c_Range32{._field_Lo=69968LLU, ._field_Hi=70002LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=70006LLU, ._field_Hi=70019LLU, ._field_Stride=13LLU},_1cae57a5c_Range32{._field_Lo=70020LLU, ._field_Hi=70066LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=70081LLU, ._field_Hi=70084LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=70106LLU, ._field_Hi=70108LLU, ._field_Stride=2LLU},_1cae57a5c_Range32{._field_Lo=70144LLU, ._field_Hi=70161LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=70163LLU, ._field_Hi=70187LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=70207LLU, ._field_Hi=70208LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=70272LLU, ._field_Hi=70278LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=70280LLU, ._field_Hi=70282LLU, ._field_Stride=2LLU},_1cae57a5c_Range32{._field_Lo=70283LLU, ._field_Hi=70285LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=70287LLU, ._field_Hi=70301LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=70303LLU, ._field_Hi=70312LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=70320LLU, ._field_Hi=70366LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=70405LLU, ._field_Hi=70412LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=70415LLU, ._field_Hi=70416LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=70419LLU, ._field_Hi=70440LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=70442LLU, ._field_Hi=70448LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=70450LLU, ._field_Hi=70451LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=70453LLU, ._field_Hi=70457LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=70461LLU, ._field_Hi=70480LLU, ._field_Stride=19LLU},_1cae57a5c_Range32{._field_Lo=70493LLU, ._field_Hi=70497LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=70656LLU, ._field_Hi=70708LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=70727LLU, ._field_Hi=70730LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=70751LLU, ._field_Hi=70753LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=70784LLU, ._field_Hi=70831LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=70852LLU, ._field_Hi=70853LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=70855LLU, ._field_Hi=71040LLU, ._field_Stride=185LLU},_1cae57a5c_Range32{._field_Lo=71041LLU, ._field_Hi=71086LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=71128LLU, ._field_Hi=71131LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=71168LLU, ._field_Hi=71215LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=71236LLU, ._field_Hi=71296LLU, ._field_Stride=60LLU},_1cae57a5c_Range32{._field_Lo=71297LLU, ._field_Hi=71338LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=71352LLU, ._field_Hi=71424LLU, ._field_Stride=72LLU},_1cae57a5c_Range32{._field_Lo=71425LLU, ._field_Hi=71450LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=71488LLU, ._field_Hi=71494LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=71680LLU, ._field_Hi=71723LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=71840LLU, ._field_Hi=71903LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=71935LLU, ._field_Hi=71942LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=71945LLU, ._field_Hi=71948LLU, ._field_Stride=3LLU},_1cae57a5c_Range32{._field_Lo=71949LLU, ._field_Hi=71955LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=71957LLU, ._field_Hi=71958LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=71960LLU, ._field_Hi=71983LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=71999LLU, ._field_Hi=72001LLU, ._field_Stride=2LLU},_1cae57a5c_Range32{._field_Lo=72096LLU, ._field_Hi=72103LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=72106LLU, ._field_Hi=72144LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=72161LLU, ._field_Hi=72163LLU, ._field_Stride=2LLU},_1cae57a5c_Range32{._field_Lo=72192LLU, ._field_Hi=72203LLU, ._field_Stride=11LLU},_1cae57a5c_Range32{._field_Lo=72204LLU, ._field_Hi=72242LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=72250LLU, ._field_Hi=72272LLU, ._field_Stride=22LLU},_1cae57a5c_Range32{._field_Lo=72284LLU, ._field_Hi=72329LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=72349LLU, ._field_Hi=72368LLU, ._field_Stride=19LLU},_1cae57a5c_Range32{._field_Lo=72369LLU, ._field_Hi=72440LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=72704LLU, ._field_Hi=72712LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=72714LLU, ._field_Hi=72750LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=72768LLU, ._field_Hi=72818LLU, ._field_Stride=50LLU},_1cae57a5c_Range32{._field_Lo=72819LLU, ._field_Hi=72847LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=72960LLU, ._field_Hi=72966LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=72968LLU, ._field_Hi=72969LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=72971LLU, ._field_Hi=73008LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=73030LLU, ._field_Hi=73056LLU, ._field_Stride=26LLU},_1cae57a5c_Range32{._field_Lo=73057LLU, ._field_Hi=73061LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=73063LLU, ._field_Hi=73064LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=73066LLU, ._field_Hi=73097LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=73112LLU, ._field_Hi=73440LLU, ._field_Stride=328LLU},_1cae57a5c_Range32{._field_Lo=73441LLU, ._field_Hi=73458LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=73474LLU, ._field_Hi=73476LLU, ._field_Stride=2LLU},_1cae57a5c_Range32{._field_Lo=73477LLU, ._field_Hi=73488LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=73490LLU, ._field_Hi=73523LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=73648LLU, ._field_Hi=73728LLU, ._field_Stride=80LLU},_1cae57a5c_Range32{._field_Lo=73729LLU, ._field_Hi=74649LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=74880LLU, ._field_Hi=75075LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=77712LLU, ._field_Hi=77808LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=77824LLU, ._field_Hi=78895LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=78913LLU, ._field_Hi=78918LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=82944LLU, ._field_Hi=83526LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=92160LLU, ._field_Hi=92728LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=92736LLU, ._field_Hi=92766LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=92784LLU, ._field_Hi=92862LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=92880LLU, ._field_Hi=92909LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=92928LLU, ._field_Hi=92975LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=92992LLU, ._field_Hi=92995LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=93027LLU, ._field_Hi=93047LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=93053LLU, ._field_Hi=93071LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=93760LLU, ._field_Hi=93823LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=93952LLU, ._field_Hi=94026LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=94032LLU, ._field_Hi=94099LLU, ._field_Stride=67LLU},_1cae57a5c_Range32{._field_Lo=94100LLU, ._field_Hi=94111LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=94176LLU, ._field_Hi=94177LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=94179LLU, ._field_Hi=94208LLU, ._field_Stride=29LLU},_1cae57a5c_Range32{._field_Lo=94209LLU, ._field_Hi=100343LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=100352LLU, ._field_Hi=101589LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=101632LLU, ._field_Hi=101640LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=110576LLU, ._field_Hi=110579LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=110581LLU, ._field_Hi=110587LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=110589LLU, ._field_Hi=110590LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=110592LLU, ._field_Hi=110882LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=110898LLU, ._field_Hi=110928LLU, ._field_Stride=30LLU},_1cae57a5c_Range32{._field_Lo=110929LLU, ._field_Hi=110930LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=110933LLU, ._field_Hi=110948LLU, ._field_Stride=15LLU},_1cae57a5c_Range32{._field_Lo=110949LLU, ._field_Hi=110951LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=110960LLU, ._field_Hi=111355LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=113664LLU, ._field_Hi=113770LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=113776LLU, ._field_Hi=113788LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=113792LLU, ._field_Hi=113800LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=113808LLU, ._field_Hi=113817LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=119808LLU, ._field_Hi=119892LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=119894LLU, ._field_Hi=119964LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=119966LLU, ._field_Hi=119967LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=119970LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_1cae57a5c_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_1cae57a5c_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=119982LLU, ._field_Hi=119993LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=119995LLU, ._field_Hi=119997LLU, ._field_Stride=2LLU},_1cae57a5c_Range32{._field_Lo=119998LLU, ._field_Hi=120003LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=120005LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=120094LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_1cae57a5c_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=120146LLU, ._field_Hi=120485LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=120514LLU, ._field_Hi=120538LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=120540LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=120572LLU, ._field_Hi=120596LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=120598LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=120630LLU, ._field_Hi=120654LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=120656LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=120688LLU, ._field_Hi=120712LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=120714LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=120746LLU, ._field_Hi=120770LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=120772LLU, ._field_Hi=120779LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=122624LLU, ._field_Hi=122654LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=122661LLU, ._field_Hi=122666LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=122928LLU, ._field_Hi=122989LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=123136LLU, ._field_Hi=123180LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=123191LLU, ._field_Hi=123197LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=123214LLU, ._field_Hi=123536LLU, ._field_Stride=322LLU},_1cae57a5c_Range32{._field_Lo=123537LLU, ._field_Hi=123565LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=123584LLU, ._field_Hi=123627LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=124112LLU, ._field_Hi=124139LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=124896LLU, ._field_Hi=124902LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=124904LLU, ._field_Hi=124907LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=124909LLU, ._field_Hi=124910LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=124912LLU, ._field_Hi=124926LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=124928LLU, ._field_Hi=125124LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=125184LLU, ._field_Hi=125251LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=125259LLU, ._field_Hi=126464LLU, ._field_Stride=1205LLU},_1cae57a5c_Range32{._field_Lo=126465LLU, ._field_Hi=126467LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=126469LLU, ._field_Hi=126495LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=126497LLU, ._field_Hi=126498LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=126500LLU, ._field_Hi=126503LLU, ._field_Stride=3LLU},_1cae57a5c_Range32{._field_Lo=126505LLU, ._field_Hi=126514LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=126516LLU, ._field_Hi=126519LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=126521LLU, ._field_Hi=126523LLU, ._field_Stride=2LLU},_1cae57a5c_Range32{._field_Lo=126530LLU, ._field_Hi=126535LLU, ._field_Stride=5LLU},_1cae57a5c_Range32{._field_Lo=126537LLU, ._field_Hi=126541LLU, ._field_Stride=2LLU},_1cae57a5c_Range32{._field_Lo=126542LLU, ._field_Hi=126543LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=126545LLU, ._field_Hi=126546LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=126548LLU, ._field_Hi=126551LLU, ._field_Stride=3LLU},_1cae57a5c_Range32{._field_Lo=126553LLU, ._field_Hi=126561LLU, ._field_Stride=2LLU},_1cae57a5c_Range32{._field_Lo=126562LLU, ._field_Hi=126564LLU, ._field_Stride=2LLU},_1cae57a5c_Range32{._field_Lo=126567LLU, ._field_Hi=126570LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=126572LLU, ._field_Hi=126578LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=126580LLU, ._field_Hi=126583LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=126585LLU, ._field_Hi=126588LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=126590LLU, ._field_Hi=126592LLU, ._field_Stride=2LLU},_1cae57a5c_Range32{._field_Lo=126593LLU, ._field_Hi=126601LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=126603LLU, ._field_Hi=126619LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=126625LLU, ._field_Hi=126627LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=126629LLU, ._field_Hi=126633LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=126635LLU, ._field_Hi=126651LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=131072LLU, ._field_Hi=173791LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=173824LLU, ._field_Hi=177977LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=177984LLU, ._field_Hi=178205LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=178208LLU, ._field_Hi=183969LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=183984LLU, ._field_Hi=191456LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=194560LLU, ._field_Hi=195101LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=196608LLU, ._field_Hi=201546LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=201552LLU, ._field_Hi=205743LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=6LL});
jule::Ptr<_1cae57ed0_RangeTable> _1cade6c71__LU = jule::new_ptr<_1cae57ed0_RangeTable>(_1cae57ed0_RangeTable{._field_R16=jule::Slice<_1cae5752e_Range16>::make({_1cae5752e_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=192LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=216LLU, ._field_Hi=222LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=256LLU, ._field_Hi=310LLU, ._field_Stride=2LLU},_1cae5752e_Range16{._field_Lo=313LLU, ._field_Hi=327LLU, ._field_Stride=2LLU},_1cae5752e_Range16{._field_Lo=330LLU, ._field_Hi=376LLU, ._field_Stride=2LLU},_1cae5752e_Range16{._field_Lo=377LLU, ._field_Hi=381LLU, ._field_Stride=2LLU},_1cae5752e_Range16{._field_Lo=385LLU, ._field_Hi=386LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=388LLU, ._field_Hi=390LLU, ._field_Stride=2LLU},_1cae5752e_Range16{._field_Lo=391LLU, ._field_Hi=393LLU, ._field_Stride=2LLU},_1cae5752e_Range16{._field_Lo=394LLU, ._field_Hi=395LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=398LLU, ._field_Hi=401LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=403LLU, ._field_Hi=404LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=406LLU, ._field_Hi=408LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=412LLU, ._field_Hi=413LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=415LLU, ._field_Hi=416LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=418LLU, ._field_Hi=422LLU, ._field_Stride=2LLU},_1cae5752e_Range16{._field_Lo=423LLU, ._field_Hi=425LLU, ._field_Stride=2LLU},_1cae5752e_Range16{._field_Lo=428LLU, ._field_Hi=430LLU, ._field_Stride=2LLU},_1cae5752e_Range16{._field_Lo=431LLU, ._field_Hi=433LLU, ._field_Stride=2LLU},_1cae5752e_Range16{._field_Lo=434LLU, ._field_Hi=435LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=437LLU, ._field_Hi=439LLU, ._field_Stride=2LLU},_1cae5752e_Range16{._field_Lo=440LLU, ._field_Hi=444LLU, ._field_Stride=4LLU},_1cae5752e_Range16{._field_Lo=452LLU, ._field_Hi=461LLU, ._field_Stride=3LLU},_1cae5752e_Range16{._field_Lo=463LLU, ._field_Hi=475LLU, ._field_Stride=2LLU},_1cae5752e_Range16{._field_Lo=478LLU, ._field_Hi=494LLU, ._field_Stride=2LLU},_1cae5752e_Range16{._field_Lo=497LLU, ._field_Hi=500LLU, ._field_Stride=3LLU},_1cae5752e_Range16{._field_Lo=502LLU, ._field_Hi=504LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=506LLU, ._field_Hi=562LLU, ._field_Stride=2LLU},_1cae5752e_Range16{._field_Lo=570LLU, ._field_Hi=571LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=573LLU, ._field_Hi=574LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=577LLU, ._field_Hi=579LLU, ._field_Stride=2LLU},_1cae5752e_Range16{._field_Lo=580LLU, ._field_Hi=582LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=584LLU, ._field_Hi=590LLU, ._field_Stride=2LLU},_1cae5752e_Range16{._field_Lo=880LLU, ._field_Hi=882LLU, ._field_Stride=2LLU},_1cae5752e_Range16{._field_Lo=886LLU, ._field_Hi=895LLU, ._field_Stride=9LLU},_1cae5752e_Range16{._field_Lo=902LLU, ._field_Hi=904LLU, ._field_Stride=2LLU},_1cae5752e_Range16{._field_Lo=905LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_1cae5752e_Range16{._field_Lo=911LLU, ._field_Hi=913LLU, ._field_Stride=2LLU},_1cae5752e_Range16{._field_Lo=914LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=931LLU, ._field_Hi=939LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=975LLU, ._field_Hi=978LLU, ._field_Stride=3LLU},_1cae5752e_Range16{._field_Lo=979LLU, ._field_Hi=980LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=984LLU, ._field_Hi=1006LLU, ._field_Stride=2LLU},_1cae5752e_Range16{._field_Lo=1012LLU, ._field_Hi=1015LLU, ._field_Stride=3LLU},_1cae5752e_Range16{._field_Lo=1017LLU, ._field_Hi=1018LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=1021LLU, ._field_Hi=1071LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=1120LLU, ._field_Hi=1152LLU, ._field_Stride=2LLU},_1cae5752e_Range16{._field_Lo=1162LLU, ._field_Hi=1216LLU, ._field_Stride=2LLU},_1cae5752e_Range16{._field_Lo=1217LLU, ._field_Hi=1229LLU, ._field_Stride=2LLU},_1cae5752e_Range16{._field_Lo=1232LLU, ._field_Hi=1326LLU, ._field_Stride=2LLU},_1cae5752e_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=4256LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_1cae5752e_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=7680LLU, ._field_Hi=7828LLU, ._field_Stride=2LLU},_1cae5752e_Range16{._field_Lo=7838LLU, ._field_Hi=7934LLU, ._field_Stride=2LLU},_1cae5752e_Range16{._field_Lo=7944LLU, ._field_Hi=7951LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=7976LLU, ._field_Hi=7983LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=7992LLU, ._field_Hi=7999LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_1cae5752e_Range16{._field_Lo=8040LLU, ._field_Hi=8047LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=8120LLU, ._field_Hi=8123LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=8136LLU, ._field_Hi=8139LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=8152LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=8168LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=8184LLU, ._field_Hi=8187LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_1cae5752e_Range16{._field_Lo=8459LLU, ._field_Hi=8461LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=8464LLU, ._field_Hi=8466LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_1cae5752e_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_1cae5752e_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=8496LLU, ._field_Hi=8499LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=8510LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=8517LLU, ._field_Hi=8579LLU, ._field_Stride=62LLU},_1cae5752e_Range16{._field_Lo=11264LLU, ._field_Hi=11311LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=11360LLU, ._field_Hi=11362LLU, ._field_Stride=2LLU},_1cae5752e_Range16{._field_Lo=11363LLU, ._field_Hi=11364LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=11367LLU, ._field_Hi=11373LLU, ._field_Stride=2LLU},_1cae5752e_Range16{._field_Lo=11374LLU, ._field_Hi=11376LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=11378LLU, ._field_Hi=11381LLU, ._field_Stride=3LLU},_1cae5752e_Range16{._field_Lo=11390LLU, ._field_Hi=11392LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=11394LLU, ._field_Hi=11490LLU, ._field_Stride=2LLU},_1cae5752e_Range16{._field_Lo=11499LLU, ._field_Hi=11501LLU, ._field_Stride=2LLU},_1cae5752e_Range16{._field_Lo=11506LLU, ._field_Hi=42560LLU, ._field_Stride=31054LLU},_1cae5752e_Range16{._field_Lo=42562LLU, ._field_Hi=42604LLU, ._field_Stride=2LLU},_1cae5752e_Range16{._field_Lo=42624LLU, ._field_Hi=42650LLU, ._field_Stride=2LLU},_1cae5752e_Range16{._field_Lo=42786LLU, ._field_Hi=42798LLU, ._field_Stride=2LLU},_1cae5752e_Range16{._field_Lo=42802LLU, ._field_Hi=42862LLU, ._field_Stride=2LLU},_1cae5752e_Range16{._field_Lo=42873LLU, ._field_Hi=42877LLU, ._field_Stride=2LLU},_1cae5752e_Range16{._field_Lo=42878LLU, ._field_Hi=42886LLU, ._field_Stride=2LLU},_1cae5752e_Range16{._field_Lo=42891LLU, ._field_Hi=42893LLU, ._field_Stride=2LLU},_1cae5752e_Range16{._field_Lo=42896LLU, ._field_Hi=42898LLU, ._field_Stride=2LLU},_1cae5752e_Range16{._field_Lo=42902LLU, ._field_Hi=42922LLU, ._field_Stride=2LLU},_1cae5752e_Range16{._field_Lo=42923LLU, ._field_Hi=42926LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=42928LLU, ._field_Hi=42932LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=42934LLU, ._field_Hi=42948LLU, ._field_Stride=2LLU},_1cae5752e_Range16{._field_Lo=42949LLU, ._field_Hi=42951LLU, ._field_Stride=1LLU},_1cae5752e_Range16{._field_Lo=42953LLU, ._field_Hi=42960LLU, ._field_Stride=7LLU},_1cae5752e_Range16{._field_Lo=42966LLU, ._field_Hi=42968LLU, ._field_Stride=2LLU},_1cae5752e_Range16{._field_Lo=42997LLU, ._field_Hi=65313LLU, ._field_Stride=22316LLU},_1cae5752e_Range16{._field_Lo=65314LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_1cae57a5c_Range32>::make({_1cae57a5c_Range32{._field_Lo=66560LLU, ._field_Hi=66599LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=71840LLU, ._field_Hi=71871LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=93760LLU, ._field_Hi=93791LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=119808LLU, ._field_Hi=119833LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=119860LLU, ._field_Hi=119885LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=119912LLU, ._field_Hi=119937LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=119964LLU, ._field_Hi=119966LLU, ._field_Stride=2LLU},_1cae57a5c_Range32{._field_Lo=119967LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_1cae57a5c_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_1cae57a5c_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=119982LLU, ._field_Hi=119989LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=120016LLU, ._field_Hi=120041LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=120068LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=120120LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_1cae57a5c_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=120172LLU, ._field_Hi=120197LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=120224LLU, ._field_Hi=120249LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=120276LLU, ._field_Hi=120301LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=120328LLU, ._field_Hi=120353LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=120380LLU, ._field_Hi=120405LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=120432LLU, ._field_Hi=120457LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=120546LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=120604LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=120662LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=120720LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_1cae57a5c_Range32{._field_Lo=120778LLU, ._field_Hi=125184LLU, ._field_Stride=4406LLU},_1cae57a5c_Range32{._field_Lo=125185LLU, ._field_Hi=125217LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=3LL});
jule::Array<jule::U8,256> _1cae51a01__PROPERTIES = jule::Array<jule::U8,256>({1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,144LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,130LLU,130LLU,136LLU,136LLU,136LLU,130LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,130LLU,130LLU,130LLU,136LLU,130LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,130LLU,136LLU,130LLU,136LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,16LLU,130LLU,136LLU,136LLU,136LLU,136LLU,136LLU,130LLU,136LLU,136LLU,224LLU,130LLU,136LLU,0LLU,136LLU,136LLU,136LLU,136LLU,132LLU,132LLU,136LLU,192LLU,130LLU,130LLU,136LLU,132LLU,224LLU,130LLU,132LLU,132LLU,132LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,136LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU});
jule::Array<jule::U8,256> _1cb178794_first = jule::Array<jule::U8,256>({});
jule::Array<_1cb178d49_acceptRange,16> _1cb1791e0_acceptRanges = jule::Array<_1cb178d49_acceptRange,16>({_1cb178d49_acceptRange{._field_lo=128LLU, ._field_hi=191LLU},_1cb178d49_acceptRange{._field_lo=160LLU, ._field_hi=191LLU},_1cb178d49_acceptRange{._field_lo=128LLU, ._field_hi=159LLU},_1cb178d49_acceptRange{._field_lo=144LLU, ._field_hi=191LLU},_1cb178d49_acceptRange{._field_lo=128LLU, ._field_hi=143LLU}});
jule::Array<jule::Str,4> _1cb1e3e3b_CppHeaderExts = jule::Array<jule::Str,4>({jule::Str::lit(".h", 2),jule::Str::lit(".hpp", 4),jule::Str::lit(".hxx", 4),jule::Str::lit(".hh", 3)});
jule::Array<jule::Str,3> _1cb1e52a0_CppExts = jule::Array<jule::Str,3>({jule::Str::lit(".cpp", 4),jule::Str::lit(".cc", 3),jule::Str::lit(".cxx", 4)});
jule::Array<jule::Str,1> _1cb275c8c_ObjectiveCppExts = jule::Array<jule::Str,1>({jule::Str::lit(".mm", 3)});
jule::Str _1cb39d9db_PathStdlib = jule::Str();
jule::Str _1cb39dbea_PathExec = jule::Str();
jule::Str _1cb39de92_PathWd = jule::Str();
jule::Str _1cb39e28e_PathApi = jule::Str();
jule::Str _1cb39e547_Os = jule::Str::lit("linux", 5);
jule::Str _1cb39e800_Arch = jule::Str::lit("arm64", 5);
jule::Array<jule::U8,32> _1b26d77de__DE_BRUIJN32_TAB = jule::Array<jule::U8,32>({0LLU,1LLU,28LLU,2LLU,29LLU,14LLU,24LLU,3LLU,30LLU,22LLU,20LLU,15LLU,25LLU,17LLU,4LLU,8LLU,31LLU,27LLU,13LLU,23LLU,21LLU,19LLU,16LLU,7LLU,26LLU,12LLU,18LLU,6LLU,11LLU,5LLU,10LLU,9LLU});
jule::Array<jule::U8,64> _1b26d7d83__DE_BRUIJN64_TAB = jule::Array<jule::U8,64>({0LLU,1LLU,56LLU,2LLU,57LLU,49LLU,28LLU,3LLU,61LLU,58LLU,42LLU,50LLU,38LLU,29LLU,17LLU,4LLU,62LLU,47LLU,59LLU,36LLU,45LLU,43LLU,51LLU,22LLU,53LLU,39LLU,33LLU,30LLU,24LLU,18LLU,12LLU,5LLU,63LLU,55LLU,48LLU,27LLU,60LLU,41LLU,37LLU,16LLU,46LLU,35LLU,44LLU,21LLU,52LLU,32LLU,23LLU,11LLU,54LLU,26LLU,40LLU,15LLU,34LLU,20LLU,31LLU,10LLU,25LLU,14LLU,19LLU,9LLU,13LLU,8LLU,7LLU,6LLU});
_1b272c427_floatInfo _1b272c823_f32info = _1b272c427_floatInfo{._field_mantbits=23LLU, ._field_expbits=8LLU, ._field_bias=-127LL};
_1b272c427_floatInfo _1b272cb20_f64info = _1b272c427_floatInfo{._field_mantbits=52LLU, ._field_expbits=11LLU, ._field_bias=-1023LL};
jule::Array<jule::Array<jule::U64,2>,696> _1b27355ea_detailedPowsOfTen = jule::Array<jule::Array<jule::U64,2>,696>({jule::Array<jule::U64,2>({1671618768450675795LLU,18054884314459144840LLU}),jule::Array<jule::U64,2>({1044761730281672372LLU,11284302696536965525LLU}),jule::Array<jule::U64,2>({5917638181279478369LLU,14105378370671206906LLU}),jule::Array<jule::U64,2>({16620419763454123769LLU,17631722963339008632LLU}),jule::Array<jule::U64,2>({10387762352158827356LLU,11019826852086880395LLU}),jule::Array<jule::U64,2>({8373016921771146291LLU,13774783565108600494LLU}),jule::Array<jule::U64,2>({1242899115359157055LLU,17218479456385750618LLU}),jule::Array<jule::U64,2>({5388497965526861063LLU,10761549660241094136LLU}),jule::Array<jule::U64,2>({6735622456908576329LLU,13451937075301367670LLU}),jule::Array<jule::U64,2>({17642900107990496220LLU,16814921344126709587LLU}),jule::Array<jule::U64,2>({8720969558280366185LLU,10509325840079193492LLU}),jule::Array<jule::U64,2>({10901211947850457732LLU,13136657300098991865LLU}),jule::Array<jule::U64,2>({18238200953240460069LLU,16420821625123739831LLU}),jule::Array<jule::U64,2>({18316404623416369399LLU,10263013515702337394LLU}),jule::Array<jule::U64,2>({13672133742415685941LLU,12828766894627921743LLU}),jule::Array<jule::U64,2>({12478481159592219522LLU,16035958618284902179LLU}),jule::Array<jule::U64,2>({5493207715531443249LLU,10022474136428063862LLU}),jule::Array<jule::U64,2>({16089881681269079869LLU,12528092670535079827LLU}),jule::Array<jule::U64,2>({15500666083158961933LLU,15660115838168849784LLU}),jule::Array<jule::U64,2>({9687916301974351208LLU,9787572398855531115LLU}),jule::Array<jule::U64,2>({7498209359040551106LLU,12234465498569413894LLU}),jule::Array<jule::U64,2>({149389661945913074LLU,15293081873211767368LLU}),jule::Array<jule::U64,2>({93368538716195671LLU,9558176170757354605LLU}),jule::Array<jule::U64,2>({4728396691822632493LLU,11947720213446693256LLU}),jule::Array<jule::U64,2>({5910495864778290617LLU,14934650266808366570LLU}),jule::Array<jule::U64,2>({8305745933913819539LLU,9334156416755229106LLU}),jule::Array<jule::U64,2>({1158810380537498616LLU,11667695520944036383LLU}),jule::Array<jule::U64,2>({15283571030954036982LLU,14584619401180045478LLU}),jule::Array<jule::U64,2>({9881091751837770420LLU,18230774251475056848LLU}),jule::Array<jule::U64,2>({6175682344898606512LLU,11394233907171910530LLU}),jule::Array<jule::U64,2>({16942974967978033949LLU,14242792383964888162LLU}),jule::Array<jule::U64,2>({11955346673117766628LLU,17803490479956110203LLU}),jule::Array<jule::U64,2>({5166248661484910190LLU,11127181549972568877LLU}),jule::Array<jule::U64,2>({11069496845283525642LLU,13908976937465711096LLU}),jule::Array<jule::U64,2>({13836871056604407053LLU,17386221171832138870LLU}),jule::Array<jule::U64,2>({4036358391950366504LLU,10866388232395086794LLU}),jule::Array<jule::U64,2>({14268820026792733938LLU,13582985290493858492LLU}),jule::Array<jule::U64,2>({17836025033490917422LLU,16978731613117323115LLU}),jule::Array<jule::U64,2>({8841672636718129437LLU,10611707258198326947LLU}),jule::Array<jule::U64,2>({6440404777470273892LLU,13264634072747908684LLU}),jule::Array<jule::U64,2>({8050505971837842365LLU,16580792590934885855LLU}),jule::Array<jule::U64,2>({11949095260039733334LLU,10362995369334303659LLU}),jule::Array<jule::U64,2>({10324683056622278764LLU,12953744211667879574LLU}),jule::Array<jule::U64,2>({3682481783923072647LLU,16192180264584849468LLU}),jule::Array<jule::U64,2>({11524923151806696212LLU,10120112665365530917LLU}),jule::Array<jule::U64,2>({571095884476206553LLU,12650140831706913647LLU}),jule::Array<jule::U64,2>({14548927910877421904LLU,15812676039633642058LLU}),jule::Array<jule::U64,2>({13704765962725776594LLU,9882922524771026286LLU}),jule::Array<jule::U64,2>({7907585416552444934LLU,12353653155963782858LLU}),jule::Array<jule::U64,2>({661109733835780360LLU,15442066444954728573LLU}),jule::Array<jule::U64,2>({2719036592861056677LLU,9651291528096705358LLU}),jule::Array<jule::U64,2>({12622167777931096654LLU,12064114410120881697LLU}),jule::Array<jule::U64,2>({1942651667131707105LLU,15080143012651102122LLU}),jule::Array<jule::U64,2>({5825843310384704845LLU,9425089382906938826LLU}),jule::Array<jule::U64,2>({16505676174835656864LLU,11781361728633673532LLU}),jule::Array<jule::U64,2>({2185351144835019464LLU,14726702160792091916LLU}),jule::Array<jule::U64,2>({2731688931043774330LLU,18408377700990114895LLU}),jule::Array<jule::U64,2>({8624834609543440812LLU,11505236063118821809LLU}),jule::Array<jule::U64,2>({15392729280356688919LLU,14381545078898527261LLU}),jule::Array<jule::U64,2>({5405853545163697437LLU,17976931348623159077LLU}),jule::Array<jule::U64,2>({5684501474941004850LLU,11235582092889474423LLU}),jule::Array<jule::U64,2>({2493940825248868159LLU,14044477616111843029LLU}),jule::Array<jule::U64,2>({7729112049988473103LLU,17555597020139803786LLU}),jule::Array<jule::U64,2>({9442381049670183593LLU,10972248137587377366LLU}),jule::Array<jule::U64,2>({2579604275232953683LLU,13715310171984221708LLU}),jule::Array<jule::U64,2>({3224505344041192104LLU,17144137714980277135LLU}),jule::Array<jule::U64,2>({8932844867666826921LLU,10715086071862673209LLU}),jule::Array<jule::U64,2>({15777742103010921555LLU,13393857589828341511LLU}),jule::Array<jule::U64,2>({15110491610336264040LLU,16742321987285426889LLU}),jule::Array<jule::U64,2>({2526528228819083169LLU,10463951242053391806LLU}),jule::Array<jule::U64,2>({12381532322878629770LLU,13079939052566739757LLU}),jule::Array<jule::U64,2>({1641857348316123500LLU,16349923815708424697LLU}),jule::Array<jule::U64,2>({12555375888766046947LLU,10218702384817765435LLU}),jule::Array<jule::U64,2>({11082533842530170780LLU,12773377981022206794LLU}),jule::Array<jule::U64,2>({4629795266307937667LLU,15966722476277758493LLU}),jule::Array<jule::U64,2>({5199465050656154994LLU,9979201547673599058LLU}),jule::Array<jule::U64,2>({15722703350174969551LLU,12474001934591998822LLU}),jule::Array<jule::U64,2>({10430007150863936130LLU,15592502418239998528LLU}),jule::Array<jule::U64,2>({6518754469289960081LLU,9745314011399999080LLU}),jule::Array<jule::U64,2>({8148443086612450102LLU,12181642514249998850LLU}),jule::Array<jule::U64,2>({962181821410786819LLU,15227053142812498563LLU}),jule::Array<jule::U64,2>({16742264702877599426LLU,9516908214257811601LLU}),jule::Array<jule::U64,2>({7092772823314835570LLU,11896135267822264502LLU}),jule::Array<jule::U64,2>({18089338065998320271LLU,14870169084777830627LLU}),jule::Array<jule::U64,2>({8999993282035256217LLU,9293855677986144142LLU}),jule::Array<jule::U64,2>({2026619565689294464LLU,11617319597482680178LLU}),jule::Array<jule::U64,2>({11756646493966393888LLU,14521649496853350222LLU}),jule::Array<jule::U64,2>({5472436080603216552LLU,18152061871066687778LLU}),jule::Array<jule::U64,2>({8031958568804398249LLU,11345038669416679861LLU}),jule::Array<jule::U64,2>({14651634229432885715LLU,14181298336770849826LLU}),jule::Array<jule::U64,2>({9091170749936331336LLU,17726622920963562283LLU}),jule::Array<jule::U64,2>({3376138709496513133LLU,11079139325602226427LLU}),jule::Array<jule::U64,2>({18055231442152805128LLU,13848924157002783033LLU}),jule::Array<jule::U64,2>({8733981247408842698LLU,17311155196253478792LLU}),jule::Array<jule::U64,2>({5458738279630526686LLU,10819471997658424245LLU}),jule::Array<jule::U64,2>({11435108867965546262LLU,13524339997073030306LLU}),jule::Array<jule::U64,2>({5070514048102157020LLU,16905424996341287883LLU}),jule::Array<jule::U64,2>({863228270850154185LLU,10565890622713304927LLU}),jule::Array<jule::U64,2>({14914093393844856443LLU,13207363278391631158LLU}),jule::Array<jule::U64,2>({9419244705451294746LLU,16509204097989538948LLU}),jule::Array<jule::U64,2>({15110399977761835024LLU,10318252561243461842LLU}),jule::Array<jule::U64,2>({9664627935347517973LLU,12897815701554327303LLU}),jule::Array<jule::U64,2>({7469098900757009562LLU,16122269626942909129LLU}),jule::Array<jule::U64,2>({16197401859041600736LLU,10076418516839318205LLU}),jule::Array<jule::U64,2>({6411694268519837208LLU,12595523146049147757LLU}),jule::Array<jule::U64,2>({12626303854077184414LLU,15744403932561434696LLU}),jule::Array<jule::U64,2>({7891439908798240259LLU,9840252457850896685LLU}),jule::Array<jule::U64,2>({14475985904425188227LLU,12300315572313620856LLU}),jule::Array<jule::U64,2>({18094982380531485284LLU,15375394465392026070LLU}),jule::Array<jule::U64,2>({6697677969404790399LLU,9609621540870016294LLU}),jule::Array<jule::U64,2>({17595469498610763806LLU,12012026926087520367LLU}),jule::Array<jule::U64,2>({17382650854836066854LLU,15015033657609400459LLU}),jule::Array<jule::U64,2>({8558313775058847832LLU,9384396036005875287LLU}),jule::Array<jule::U64,2>({6086206200396171886LLU,11730495045007344109LLU}),jule::Array<jule::U64,2>({12219443768922602761LLU,14663118806259180136LLU}),jule::Array<jule::U64,2>({15274304711153253452LLU,18328898507823975170LLU}),jule::Array<jule::U64,2>({14158126462898171311LLU,11455561567389984481LLU}),jule::Array<jule::U64,2>({3862600023340550427LLU,14319451959237480602LLU}),jule::Array<jule::U64,2>({14051622066030463842LLU,17899314949046850752LLU}),jule::Array<jule::U64,2>({8782263791269039901LLU,11187071843154281720LLU}),jule::Array<jule::U64,2>({10977829739086299876LLU,13983839803942852150LLU}),jule::Array<jule::U64,2>({4498915137003099037LLU,17479799754928565188LLU}),jule::Array<jule::U64,2>({12035193997481712706LLU,10924874846830353242LLU}),jule::Array<jule::U64,2>({5820620459997365075LLU,13656093558537941553LLU}),jule::Array<jule::U64,2>({11887461593424094248LLU,17070116948172426941LLU}),jule::Array<jule::U64,2>({9735506505103752857LLU,10668823092607766838LLU}),jule::Array<jule::U64,2>({2946011094524915263LLU,13336028865759708548LLU}),jule::Array<jule::U64,2>({3682513868156144079LLU,16670036082199635685LLU}),jule::Array<jule::U64,2>({4607414176811284001LLU,10418772551374772303LLU}),jule::Array<jule::U64,2>({1147581702586717097LLU,13023465689218465379LLU}),jule::Array<jule::U64,2>({15269535183515560084LLU,16279332111523081723LLU}),jule::Array<jule::U64,2>({7237616480483531100LLU,10174582569701926077LLU}),jule::Array<jule::U64,2>({13658706619031801779LLU,12718228212127407596LLU}),jule::Array<jule::U64,2>({17073383273789752224LLU,15897785265159259495LLU}),jule::Array<jule::U64,2>({17588393573759676996LLU,9936115790724537184LLU}),jule::Array<jule::U64,2>({3538747893490044629LLU,12420144738405671481LLU}),jule::Array<jule::U64,2>({9035120885289943691LLU,15525180923007089351LLU}),jule::Array<jule::U64,2>({12564479580947296663LLU,9703238076879430844LLU}),jule::Array<jule::U64,2>({15705599476184120828LLU,12129047596099288555LLU}),jule::Array<jule::U64,2>({15020313326802763131LLU,15161309495124110694LLU}),jule::Array<jule::U64,2>({4776009810824339053LLU,9475818434452569184LLU}),jule::Array<jule::U64,2>({5970012263530423816LLU,11844773043065711480LLU}),jule::Array<jule::U64,2>({7462515329413029771LLU,14805966303832139350LLU}),jule::Array<jule::U64,2>({52386062455755702LLU,9253728939895087094LLU}),jule::Array<jule::U64,2>({9288854614924470436LLU,11567161174868858867LLU}),jule::Array<jule::U64,2>({6999382250228200141LLU,14458951468586073584LLU}),jule::Array<jule::U64,2>({8749227812785250177LLU,18073689335732591980LLU}),jule::Array<jule::U64,2>({14691639419845557168LLU,11296055834832869987LLU}),jule::Array<jule::U64,2>({13752863256379558556LLU,14120069793541087484LLU}),jule::Array<jule::U64,2>({17191079070474448196LLU,17650087241926359355LLU}),jule::Array<jule::U64,2>({8438581409832836170LLU,11031304526203974597LLU}),jule::Array<jule::U64,2>({15159912780718433117LLU,13789130657754968246LLU}),jule::Array<jule::U64,2>({9726518939043265588LLU,17236413322193710308LLU}),jule::Array<jule::U64,2>({15302446373756816800LLU,10772758326371068942LLU}),jule::Array<jule::U64,2>({9904685930341245193LLU,13465947907963836178LLU}),jule::Array<jule::U64,2>({3157485376071780683LLU,16832434884954795223LLU}),jule::Array<jule::U64,2>({8890957387685944783LLU,10520271803096747014LLU}),jule::Array<jule::U64,2>({1890324697752655170LLU,13150339753870933768LLU}),jule::Array<jule::U64,2>({2362905872190818963LLU,16437924692338667210LLU}),jule::Array<jule::U64,2>({6088502188546649756LLU,10273702932711667006LLU}),jule::Array<jule::U64,2>({16833999772538088003LLU,12842128665889583757LLU}),jule::Array<jule::U64,2>({7207441660390446292LLU,16052660832361979697LLU}),jule::Array<jule::U64,2>({16033866083812498692LLU,10032913020226237310LLU}),jule::Array<jule::U64,2>({10818960567910847557LLU,12541141275282796638LLU}),jule::Array<jule::U64,2>({4300328673033783639LLU,15676426594103495798LLU}),jule::Array<jule::U64,2>({16522763475928278486LLU,9797766621314684873LLU}),jule::Array<jule::U64,2>({6818396289628184396LLU,12247208276643356092LLU}),jule::Array<jule::U64,2>({8522995362035230495LLU,15309010345804195115LLU}),jule::Array<jule::U64,2>({3021029092058325107LLU,9568131466127621947LLU}),jule::Array<jule::U64,2>({17611344420355070096LLU,11960164332659527433LLU}),jule::Array<jule::U64,2>({8179122470161673908LLU,14950205415824409292LLU}),jule::Array<jule::U64,2>({14335323580705822000LLU,9343878384890255807LLU}),jule::Array<jule::U64,2>({13307468457454889596LLU,11679847981112819759LLU}),jule::Array<jule::U64,2>({12022649553391224092LLU,14599809976391024699LLU}),jule::Array<jule::U64,2>({10416625923311642211LLU,18249762470488780874LLU}),jule::Array<jule::U64,2>({11122077220497164286LLU,11406101544055488046LLU}),jule::Array<jule::U64,2>({4679224488766679549LLU,14257626930069360058LLU}),jule::Array<jule::U64,2>({15072402647813125244LLU,17822033662586700072LLU}),jule::Array<jule::U64,2>({9420251654883203278LLU,11138771039116687545LLU}),jule::Array<jule::U64,2>({16387000587031392001LLU,13923463798895859431LLU}),jule::Array<jule::U64,2>({15872064715361852097LLU,17404329748619824289LLU}),jule::Array<jule::U64,2>({3002511419460075705LLU,10877706092887390181LLU}),jule::Array<jule::U64,2>({8364825292752482535LLU,13597132616109237726LLU}),jule::Array<jule::U64,2>({1232659579085827361LLU,16996415770136547158LLU}),jule::Array<jule::U64,2>({14605470292210805812LLU,10622759856335341973LLU}),jule::Array<jule::U64,2>({4421779809981343554LLU,13278449820419177467LLU}),jule::Array<jule::U64,2>({915538744049291538LLU,16598062275523971834LLU}),jule::Array<jule::U64,2>({5183897733458195115LLU,10373788922202482396LLU}),jule::Array<jule::U64,2>({6479872166822743894LLU,12967236152753102995LLU}),jule::Array<jule::U64,2>({3488154190101041964LLU,16209045190941378744LLU}),jule::Array<jule::U64,2>({2180096368813151227LLU,10130653244338361715LLU}),jule::Array<jule::U64,2>({16560178516298602746LLU,12663316555422952143LLU}),jule::Array<jule::U64,2>({16088537126945865529LLU,15829145694278690179LLU}),jule::Array<jule::U64,2>({7749492695127472003LLU,9893216058924181362LLU}),jule::Array<jule::U64,2>({463493832054564196LLU,12366520073655226703LLU}),jule::Array<jule::U64,2>({14414425345350368957LLU,15458150092069033378LLU}),jule::Array<jule::U64,2>({13620701859271368502LLU,9661343807543145861LLU}),jule::Array<jule::U64,2>({3190819268807046916LLU,12076679759428932327LLU}),jule::Array<jule::U64,2>({17823582141290972357LLU,15095849699286165408LLU}),jule::Array<jule::U64,2>({11139738838306857723LLU,9434906062053853380LLU}),jule::Array<jule::U64,2>({13924673547883572154LLU,11793632577567316725LLU}),jule::Array<jule::U64,2>({3570783879572301480LLU,14742040721959145907LLU}),jule::Array<jule::U64,2>({18298537904747540562LLU,18427550902448932383LLU}),jule::Array<jule::U64,2>({18354115218108294707LLU,11517219314030582739LLU}),jule::Array<jule::U64,2>({18330958004207980480LLU,14396524142538228424LLU}),jule::Array<jule::U64,2>({4466953431550423984LLU,17995655178172785531LLU}),jule::Array<jule::U64,2>({486002885505321038LLU,11247284486357990957LLU}),jule::Array<jule::U64,2>({5219189625309039202LLU,14059105607947488696LLU}),jule::Array<jule::U64,2>({6523987031636299002LLU,17573882009934360870LLU}),jule::Array<jule::U64,2>({17912549950054850588LLU,10983676256208975543LLU}),jule::Array<jule::U64,2>({17779001419141175331LLU,13729595320261219429LLU}),jule::Array<jule::U64,2>({8388693718644305452LLU,17161994150326524287LLU}),jule::Array<jule::U64,2>({12160462601793772764LLU,10726246343954077679LLU}),jule::Array<jule::U64,2>({10588892233814828051LLU,13407807929942597099LLU}),jule::Array<jule::U64,2>({8624429273841147159LLU,16759759912428246374LLU}),jule::Array<jule::U64,2>({778582277723329070LLU,10474849945267653984LLU}),jule::Array<jule::U64,2>({973227847154161338LLU,13093562431584567480LLU}),jule::Array<jule::U64,2>({1216534808942701673LLU,16366953039480709350LLU}),jule::Array<jule::U64,2>({14595392310871352257LLU,10229345649675443343LLU}),jule::Array<jule::U64,2>({13632554370161802418LLU,12786682062094304179LLU}),jule::Array<jule::U64,2>({12429006944274865118LLU,15983352577617880224LLU}),jule::Array<jule::U64,2>({7768129340171790699LLU,9989595361011175140LLU}),jule::Array<jule::U64,2>({9710161675214738374LLU,12486994201263968925LLU}),jule::Array<jule::U64,2>({16749388112445810871LLU,15608742751579961156LLU}),jule::Array<jule::U64,2>({1244995533423855986LLU,9755464219737475723LLU}),jule::Array<jule::U64,2>({15391302472061983695LLU,12194330274671844653LLU}),jule::Array<jule::U64,2>({5404070034795315907LLU,15242912843339805817LLU}),jule::Array<jule::U64,2>({14906758817815542202LLU,9526820527087378635LLU}),jule::Array<jule::U64,2>({14021762503842039848LLU,11908525658859223294LLU}),jule::Array<jule::U64,2>({8303831092947774002LLU,14885657073574029118LLU}),jule::Array<jule::U64,2>({578208414664970847LLU,9303535670983768199LLU}),jule::Array<jule::U64,2>({14557818573613377271LLU,11629419588729710248LLU}),jule::Array<jule::U64,2>({18197273217016721589LLU,14536774485912137810LLU}),jule::Array<jule::U64,2>({13523219484416126178LLU,18170968107390172263LLU}),jule::Array<jule::U64,2>({15369541205401160717LLU,11356855067118857664LLU}),jule::Array<jule::U64,2>({765182433041899281LLU,14196068833898572081LLU}),jule::Array<jule::U64,2>({5568164059729762005LLU,17745086042373215101LLU}),jule::Array<jule::U64,2>({5785945546544795205LLU,11090678776483259438LLU}),jule::Array<jule::U64,2>({16455803970035769814LLU,13863348470604074297LLU}),jule::Array<jule::U64,2>({6734696907262548556LLU,17329185588255092872LLU}),jule::Array<jule::U64,2>({4209185567039092847LLU,10830740992659433045LLU}),jule::Array<jule::U64,2>({9873167977226253963LLU,13538426240824291306LLU}),jule::Array<jule::U64,2>({3118087934678041646LLU,16923032801030364133LLU}),jule::Array<jule::U64,2>({4254647968387469981LLU,10576895500643977583LLU}),jule::Array<jule::U64,2>({706623942056949572LLU,13221119375804971979LLU}),jule::Array<jule::U64,2>({14718337982853350677LLU,16526399219756214973LLU}),jule::Array<jule::U64,2>({11504804248497038125LLU,10328999512347634358LLU}),jule::Array<jule::U64,2>({5157633273766521849LLU,12911249390434542948LLU}),jule::Array<jule::U64,2>({6447041592208152311LLU,16139061738043178685LLU}),jule::Array<jule::U64,2>({6335244004343789146LLU,10086913586276986678LLU}),jule::Array<jule::U64,2>({17142427042284512241LLU,12608641982846233347LLU}),jule::Array<jule::U64,2>({16816347784428252397LLU,15760802478557791684LLU}),jule::Array<jule::U64,2>({1286845328412881940LLU,9850501549098619803LLU}),jule::Array<jule::U64,2>({15443614715798266137LLU,12313126936373274753LLU}),jule::Array<jule::U64,2>({5469460339465668959LLU,15391408670466593442LLU}),jule::Array<jule::U64,2>({8030098730593431003LLU,9619630419041620901LLU}),jule::Array<jule::U64,2>({14649309431669176658LLU,12024538023802026126LLU}),jule::Array<jule::U64,2>({9088264752731695015LLU,15030672529752532658LLU}),jule::Array<jule::U64,2>({10291851488884697288LLU,9394170331095332911LLU}),jule::Array<jule::U64,2>({8253128342678483706LLU,11742712913869166139LLU}),jule::Array<jule::U64,2>({5704724409920716729LLU,14678391142336457674LLU}),jule::Array<jule::U64,2>({16354277549255671720LLU,18347988927920572092LLU}),jule::Array<jule::U64,2>({998051431430019017LLU,11467493079950357558LLU}),jule::Array<jule::U64,2>({10470936326142299579LLU,14334366349937946947LLU}),jule::Array<jule::U64,2>({8476984389250486570LLU,17917957937422433684LLU}),jule::Array<jule::U64,2>({14521487280136329914LLU,11198723710889021052LLU}),jule::Array<jule::U64,2>({18151859100170412392LLU,13998404638611276315LLU}),jule::Array<jule::U64,2>({18078137856785627587LLU,17498005798264095394LLU}),jule::Array<jule::U64,2>({15910522178918405146LLU,10936253623915059621LLU}),jule::Array<jule::U64,2>({6053094668365842720LLU,13670317029893824527LLU}),jule::Array<jule::U64,2>({2954682317029915496LLU,17087896287367280659LLU}),jule::Array<jule::U64,2>({17987577512639554849LLU,10679935179604550411LLU}),jule::Array<jule::U64,2>({17872785872372055657LLU,13349918974505688014LLU}),jule::Array<jule::U64,2>({13117610303610293764LLU,16687398718132110018LLU}),jule::Array<jule::U64,2>({12810192458183821506LLU,10429624198832568761LLU}),jule::Array<jule::U64,2>({2177682517447613171LLU,13037030248540710952LLU}),jule::Array<jule::U64,2>({2722103146809516464LLU,16296287810675888690LLU}),jule::Array<jule::U64,2>({6313000485183335694LLU,10185179881672430431LLU}),jule::Array<jule::U64,2>({3279564588051781713LLU,12731474852090538039LLU}),jule::Array<jule::U64,2>({17934513790346890853LLU,15914343565113172548LLU}),jule::Array<jule::U64,2>({1985699082112030975LLU,9946464728195732843LLU}),jule::Array<jule::U64,2>({16317181907922202431LLU,12433080910244666053LLU}),jule::Array<jule::U64,2>({6561419329620589327LLU,15541351137805832567LLU}),jule::Array<jule::U64,2>({11018416108653950185LLU,9713344461128645354LLU}),jule::Array<jule::U64,2>({4549648098962661924LLU,12141680576410806693LLU}),jule::Array<jule::U64,2>({10298746142130715309LLU,15177100720513508366LLU}),jule::Array<jule::U64,2>({1825030320404309164LLU,9485687950320942729LLU}),jule::Array<jule::U64,2>({6892973918932774359LLU,11857109937901178411LLU}),jule::Array<jule::U64,2>({4004531380238580045LLU,14821387422376473014LLU}),jule::Array<jule::U64,2>({16337890167931276240LLU,9263367138985295633LLU}),jule::Array<jule::U64,2>({6587304654631931588LLU,11579208923731619542LLU}),jule::Array<jule::U64,2>({17457502855144690293LLU,14474011154664524427LLU}),jule::Array<jule::U64,2>({17210192550503474962LLU,18092513943330655534LLU}),jule::Array<jule::U64,2>({6144684325637283947LLU,11307821214581659709LLU}),jule::Array<jule::U64,2>({12292541425473992838LLU,14134776518227074636LLU}),jule::Array<jule::U64,2>({15365676781842491048LLU,17668470647783843295LLU}),jule::Array<jule::U64,2>({16521077016292638761LLU,11042794154864902059LLU}),jule::Array<jule::U64,2>({16039660251938410547LLU,13803492693581127574LLU}),jule::Array<jule::U64,2>({10826203278068237376LLU,17254365866976409468LLU}),jule::Array<jule::U64,2>({15989749085647424168LLU,10783978666860255917LLU}),jule::Array<jule::U64,2>({6152128301777116498LLU,13479973333575319897LLU}),jule::Array<jule::U64,2>({12301846395648783526LLU,16849966666969149871LLU}),jule::Array<jule::U64,2>({14606183024921571560LLU,10531229166855718669LLU}),jule::Array<jule::U64,2>({4422670725869800738LLU,13164036458569648337LLU}),jule::Array<jule::U64,2>({10140024425764638826LLU,16455045573212060421LLU}),jule::Array<jule::U64,2>({8643358275316593218LLU,10284403483257537763LLU}),jule::Array<jule::U64,2>({6192511825718353619LLU,12855504354071922204LLU}),jule::Array<jule::U64,2>({7740639782147942024LLU,16069380442589902755LLU}),jule::Array<jule::U64,2>({2532056854628769813LLU,10043362776618689222LLU}),jule::Array<jule::U64,2>({12388443105140738074LLU,12554203470773361527LLU}),jule::Array<jule::U64,2>({10873867862998534689LLU,15692754338466701909LLU}),jule::Array<jule::U64,2>({9102010423587778132LLU,9807971461541688693LLU}),jule::Array<jule::U64,2>({15989199047912110569LLU,12259964326927110866LLU}),jule::Array<jule::U64,2>({10763126773035362404LLU,15324955408658888583LLU}),jule::Array<jule::U64,2>({13644483260788183358LLU,9578097130411805364LLU}),jule::Array<jule::U64,2>({17055604075985229198LLU,11972621413014756705LLU}),jule::Array<jule::U64,2>({7484447039699372786LLU,14965776766268445882LLU}),jule::Array<jule::U64,2>({9289465418239495895LLU,9353610478917778676LLU}),jule::Array<jule::U64,2>({11611831772799369869LLU,11692013098647223345LLU}),jule::Array<jule::U64,2>({679731660717048624LLU,14615016373309029182LLU}),jule::Array<jule::U64,2>({10073036612751086588LLU,18268770466636286477LLU}),jule::Array<jule::U64,2>({8601490892183123069LLU,11417981541647679048LLU}),jule::Array<jule::U64,2>({10751863615228903837LLU,14272476927059598810LLU}),jule::Array<jule::U64,2>({4216457482181353988LLU,17840596158824498513LLU}),jule::Array<jule::U64,2>({14164500972431816002LLU,11150372599265311570LLU}),jule::Array<jule::U64,2>({8482254178684994195LLU,13937965749081639463LLU}),jule::Array<jule::U64,2>({5991131704928854840LLU,17422457186352049329LLU}),jule::Array<jule::U64,2>({15273672361649004035LLU,10889035741470030830LLU}),jule::Array<jule::U64,2>({9868718415206479236LLU,13611294676837538538LLU}),jule::Array<jule::U64,2>({3112525982153323237LLU,17014118346046923173LLU}),jule::Array<jule::U64,2>({4251171748059520975LLU,10633823966279326983LLU}),jule::Array<jule::U64,2>({702278666647013314LLU,13292279957849158729LLU}),jule::Array<jule::U64,2>({5489534351736154547LLU,16615349947311448411LLU}),jule::Array<jule::U64,2>({1125115960621402640LLU,10384593717069655257LLU}),jule::Array<jule::U64,2>({6018080969204141204LLU,12980742146337069071LLU}),jule::Array<jule::U64,2>({2910915193077788601LLU,16225927682921336339LLU}),jule::Array<jule::U64,2>({17960223060169475539LLU,10141204801825835211LLU}),jule::Array<jule::U64,2>({17838592806784456520LLU,12676506002282294014LLU}),jule::Array<jule::U64,2>({13074868971625794843LLU,15845632502852867518LLU}),jule::Array<jule::U64,2>({3560107088838733872LLU,9903520314283042199LLU}),jule::Array<jule::U64,2>({18285191916330581053LLU,12379400392853802748LLU}),jule::Array<jule::U64,2>({4409745821703674700LLU,15474250491067253436LLU}),jule::Array<jule::U64,2>({11979463175419572495LLU,9671406556917033397LLU}),jule::Array<jule::U64,2>({1139270913992301907LLU,12089258196146291747LLU}),jule::Array<jule::U64,2>({15259146697772541096LLU,15111572745182864683LLU}),jule::Array<jule::U64,2>({7231123676894144233LLU,9444732965739290427LLU}),jule::Array<jule::U64,2>({4427218577690292387LLU,11805916207174113034LLU}),jule::Array<jule::U64,2>({14757395258967641292LLU,14757395258967641292LLU}),jule::Array<jule::U64,2>({0LLU,9223372036854775808LLU}),jule::Array<jule::U64,2>({0LLU,11529215046068469760LLU}),jule::Array<jule::U64,2>({0LLU,14411518807585587200LLU}),jule::Array<jule::U64,2>({0LLU,18014398509481984000LLU}),jule::Array<jule::U64,2>({0LLU,11258999068426240000LLU}),jule::Array<jule::U64,2>({0LLU,14073748835532800000LLU}),jule::Array<jule::U64,2>({0LLU,17592186044416000000LLU}),jule::Array<jule::U64,2>({0LLU,10995116277760000000LLU}),jule::Array<jule::U64,2>({0LLU,13743895347200000000LLU}),jule::Array<jule::U64,2>({0LLU,17179869184000000000LLU}),jule::Array<jule::U64,2>({0LLU,10737418240000000000LLU}),jule::Array<jule::U64,2>({0LLU,13421772800000000000LLU}),jule::Array<jule::U64,2>({0LLU,16777216000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10485760000000000000LLU}),jule::Array<jule::U64,2>({0LLU,13107200000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16384000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10240000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12800000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12500000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,15625000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,9765625000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12207031250000000000LLU}),jule::Array<jule::U64,2>({0LLU,15258789062500000000LLU}),jule::Array<jule::U64,2>({0LLU,9536743164062500000LLU}),jule::Array<jule::U64,2>({0LLU,11920928955078125000LLU}),jule::Array<jule::U64,2>({0LLU,14901161193847656250LLU}),jule::Array<jule::U64,2>({4611686018427387904LLU,9313225746154785156LLU}),jule::Array<jule::U64,2>({5764607523034234880LLU,11641532182693481445LLU}),jule::Array<jule::U64,2>({11817445422220181504LLU,14551915228366851806LLU}),jule::Array<jule::U64,2>({5548434740920451072LLU,18189894035458564758LLU}),jule::Array<jule::U64,2>({17302829768357445632LLU,11368683772161602973LLU}),jule::Array<jule::U64,2>({7793479155164643328LLU,14210854715202003717LLU}),jule::Array<jule::U64,2>({14353534962383192064LLU,17763568394002504646LLU}),jule::Array<jule::U64,2>({4359273333062107136LLU,11102230246251565404LLU}),jule::Array<jule::U64,2>({5449091666327633920LLU,13877787807814456755LLU}),jule::Array<jule::U64,2>({2199678564482154496LLU,17347234759768070944LLU}),jule::Array<jule::U64,2>({1374799102801346560LLU,10842021724855044340LLU}),jule::Array<jule::U64,2>({1718498878501683200LLU,13552527156068805425LLU}),jule::Array<jule::U64,2>({6759809616554491904LLU,16940658945086006781LLU}),jule::Array<jule::U64,2>({6530724019560251392LLU,10587911840678754238LLU}),jule::Array<jule::U64,2>({17386777061305090048LLU,13234889800848442797LLU}),jule::Array<jule::U64,2>({7898413271349198848LLU,16543612251060553497LLU}),jule::Array<jule::U64,2>({16465723340661719040LLU,10339757656912845935LLU}),jule::Array<jule::U64,2>({15970468157399760896LLU,12924697071141057419LLU}),jule::Array<jule::U64,2>({15351399178322313216LLU,16155871338926321774LLU}),jule::Array<jule::U64,2>({4982938468024057856LLU,10097419586828951109LLU}),jule::Array<jule::U64,2>({10840359103457460224LLU,12621774483536188886LLU}),jule::Array<jule::U64,2>({4327076842467049472LLU,15777218104420236108LLU}),jule::Array<jule::U64,2>({11927795063396681728LLU,9860761315262647567LLU}),jule::Array<jule::U64,2>({10298057810818464256LLU,12325951644078309459LLU}),jule::Array<jule::U64,2>({8260886245095692416LLU,15407439555097886824LLU}),jule::Array<jule::U64,2>({5163053903184807760LLU,9629649721936179265LLU}),jule::Array<jule::U64,2>({11065503397408397604LLU,12037062152420224081LLU}),jule::Array<jule::U64,2>({18443565265187884909LLU,15046327690525280101LLU}),jule::Array<jule::U64,2>({13833071299956122020LLU,9403954806578300063LLU}),jule::Array<jule::U64,2>({12679653106517764621LLU,11754943508222875079LLU}),jule::Array<jule::U64,2>({11237880364719817872LLU,14693679385278593849LLU}),jule::Array<jule::U64,2>({212292400617608628LLU,18367099231598242312LLU}),jule::Array<jule::U64,2>({132682750386005392LLU,11479437019748901445LLU}),jule::Array<jule::U64,2>({4777539456409894645LLU,14349296274686126806LLU}),jule::Array<jule::U64,2>({15195296357367144114LLU,17936620343357658507LLU}),jule::Array<jule::U64,2>({7191217214140771119LLU,11210387714598536567LLU}),jule::Array<jule::U64,2>({4377335499248575995LLU,14012984643248170709LLU}),jule::Array<jule::U64,2>({10083355392488107898LLU,17516230804060213386LLU}),jule::Array<jule::U64,2>({10913783138732455340LLU,10947644252537633366LLU}),jule::Array<jule::U64,2>({4418856886560793367LLU,13684555315672041708LLU}),jule::Array<jule::U64,2>({5523571108200991709LLU,17105694144590052135LLU}),jule::Array<jule::U64,2>({10369760970266701674LLU,10691058840368782584LLU}),jule::Array<jule::U64,2>({12962201212833377092LLU,13363823550460978230LLU}),jule::Array<jule::U64,2>({6979379479186945558LLU,16704779438076222788LLU}),jule::Array<jule::U64,2>({13585484211346616781LLU,10440487148797639242LLU}),jule::Array<jule::U64,2>({7758483227328495169LLU,13050608935997049053LLU}),jule::Array<jule::U64,2>({14309790052588006865LLU,16313261169996311316LLU}),jule::Array<jule::U64,2>({18166990819722280098LLU,10195788231247694572LLU}),jule::Array<jule::U64,2>({4261994450943298507LLU,12744735289059618216LLU}),jule::Array<jule::U64,2>({5327493063679123134LLU,15930919111324522770LLU}),jule::Array<jule::U64,2>({7941369183226839863LLU,9956824444577826731LLU}),jule::Array<jule::U64,2>({5315025460606161924LLU,12446030555722283414LLU}),jule::Array<jule::U64,2>({15867153862612478214LLU,15557538194652854267LLU}),jule::Array<jule::U64,2>({7611128154919104931LLU,9723461371658033917LLU}),jule::Array<jule::U64,2>({14125596212076269068LLU,12154326714572542396LLU}),jule::Array<jule::U64,2>({17656995265095336336LLU,15192908393215677995LLU}),jule::Array<jule::U64,2>({8729779031470891258LLU,9495567745759798747LLU}),jule::Array<jule::U64,2>({6300537770911226168LLU,11869459682199748434LLU}),jule::Array<jule::U64,2>({17099044250493808518LLU,14836824602749685542LLU}),jule::Array<jule::U64,2>({6075216638131242420LLU,9273015376718553464LLU}),jule::Array<jule::U64,2>({7594020797664053025LLU,11591269220898191830LLU}),jule::Array<jule::U64,2>({269153960225290473LLU,14489086526122739788LLU}),jule::Array<jule::U64,2>({336442450281613091LLU,18111358157653424735LLU}),jule::Array<jule::U64,2>({7127805559067090038LLU,11319598848533390459LLU}),jule::Array<jule::U64,2>({4298070930406474644LLU,14149498560666738074LLU}),jule::Array<jule::U64,2>({14595960699862869113LLU,17686873200833422592LLU}),jule::Array<jule::U64,2>({9122475437414293195LLU,11054295750520889120LLU}),jule::Array<jule::U64,2>({11403094296767866494LLU,13817869688151111400LLU}),jule::Array<jule::U64,2>({14253867870959833118LLU,17272337110188889250LLU}),jule::Array<jule::U64,2>({13520353437777283602LLU,10795210693868055781LLU}),jule::Array<jule::U64,2>({3065383741939440791LLU,13494013367335069727LLU}),jule::Array<jule::U64,2>({17666787732706464701LLU,16867516709168837158LLU}),jule::Array<jule::U64,2>({6430056314514152534LLU,10542197943230523224LLU}),jule::Array<jule::U64,2>({8037570393142690668LLU,13177747429038154030LLU}),jule::Array<jule::U64,2>({823590954573587527LLU,16472184286297692538LLU}),jule::Array<jule::U64,2>({5126430365035880108LLU,10295115178936057836LLU}),jule::Array<jule::U64,2>({6408037956294850135LLU,12868893973670072295LLU}),jule::Array<jule::U64,2>({3398361426941174765LLU,16086117467087590369LLU}),jule::Array<jule::U64,2>({13653190937906703988LLU,10053823416929743980LLU}),jule::Array<jule::U64,2>({17066488672383379985LLU,12567279271162179975LLU}),jule::Array<jule::U64,2>({16721424822051837077LLU,15709099088952724969LLU}),jule::Array<jule::U64,2>({3533361486141316317LLU,9818186930595453106LLU}),jule::Array<jule::U64,2>({13640073894531421205LLU,12272733663244316382LLU}),jule::Array<jule::U64,2>({7826720331309500698LLU,15340917079055395478LLU}),jule::Array<jule::U64,2>({280014188641050032LLU,9588073174409622174LLU}),jule::Array<jule::U64,2>({9573389772656088348LLU,11985091468012027717LLU}),jule::Array<jule::U64,2>({16578423234247498339LLU,14981364335015034646LLU}),jule::Array<jule::U64,2>({5749828502977298558LLU,9363352709384396654LLU}),jule::Array<jule::U64,2>({16410657665576399005LLU,11704190886730495817LLU}),jule::Array<jule::U64,2>({6678264026688335045LLU,14630238608413119772LLU}),jule::Array<jule::U64,2>({8347830033360418806LLU,18287798260516399715LLU}),jule::Array<jule::U64,2>({2911550761636567802LLU,11429873912822749822LLU}),jule::Array<jule::U64,2>({12862810488900485560LLU,14287342391028437277LLU}),jule::Array<jule::U64,2>({2243455055843443238LLU,17859177988785546597LLU}),jule::Array<jule::U64,2>({3708002419115845976LLU,11161986242990966623LLU}),jule::Array<jule::U64,2>({23317005467419566LLU,13952482803738708279LLU}),jule::Array<jule::U64,2>({13864204312116438170LLU,17440603504673385348LLU}),jule::Array<jule::U64,2>({17888499731927549664LLU,10900377190420865842LLU}),jule::Array<jule::U64,2>({13137252628054661272LLU,13625471488026082303LLU}),jule::Array<jule::U64,2>({11809879766640938686LLU,17031839360032602879LLU}),jule::Array<jule::U64,2>({14298703881791668535LLU,10644899600020376799LLU}),jule::Array<jule::U64,2>({13261693833812197764LLU,13306124500025470999LLU}),jule::Array<jule::U64,2>({11965431273837859301LLU,16632655625031838749LLU}),jule::Array<jule::U64,2>({9784237555362356015LLU,10395409765644899218LLU}),jule::Array<jule::U64,2>({3006924907348169211LLU,12994262207056124023LLU}),jule::Array<jule::U64,2>({17593714189467375226LLU,16242827758820155028LLU}),jule::Array<jule::U64,2>({1772699331562333708LLU,10151767349262596893LLU}),jule::Array<jule::U64,2>({6827560182880305039LLU,12689709186578246116LLU}),jule::Array<jule::U64,2>({8534450228600381299LLU,15862136483222807645LLU}),jule::Array<jule::U64,2>({7639874402088932264LLU,9913835302014254778LLU}),jule::Array<jule::U64,2>({326470965756389522LLU,12392294127517818473LLU}),jule::Array<jule::U64,2>({5019774725622874806LLU,15490367659397273091LLU}),jule::Array<jule::U64,2>({831516194300602802LLU,9681479787123295682LLU}),jule::Array<jule::U64,2>({10262767279730529310LLU,12101849733904119602LLU}),jule::Array<jule::U64,2>({3605087062808385830LLU,15127312167380149503LLU}),jule::Array<jule::U64,2>({9170708441896323000LLU,9454570104612593439LLU}),jule::Array<jule::U64,2>({6851699533943015846LLU,11818212630765741799LLU}),jule::Array<jule::U64,2>({3952938399001381903LLU,14772765788457177249LLU}),jule::Array<jule::U64,2>({13999801545444333449LLU,9232978617785735780LLU}),jule::Array<jule::U64,2>({17499751931805416812LLU,11541223272232169725LLU}),jule::Array<jule::U64,2>({8039631859474607303LLU,14426529090290212157LLU}),jule::Array<jule::U64,2>({14661225842770647033LLU,18033161362862765196LLU}),jule::Array<jule::U64,2>({18386638188586430203LLU,11270725851789228247LLU}),jule::Array<jule::U64,2>({18371611717305649850LLU,14088407314736535309LLU}),jule::Array<jule::U64,2>({9129456591349898601LLU,17610509143420669137LLU}),jule::Array<jule::U64,2>({17235125415662156385LLU,11006568214637918210LLU}),jule::Array<jule::U64,2>({12320534732722919674LLU,13758210268297397763LLU}),jule::Array<jule::U64,2>({10788982397476261688LLU,17197762835371747204LLU}),jule::Array<jule::U64,2>({15966486035277439363LLU,10748601772107342002LLU}),jule::Array<jule::U64,2>({10734735507242023396LLU,13435752215134177503LLU}),jule::Array<jule::U64,2>({8806733365625141341LLU,16794690268917721879LLU}),jule::Array<jule::U64,2>({12421737381156795194LLU,10496681418073576174LLU}),jule::Array<jule::U64,2>({6303799689591218185LLU,13120851772591970218LLU}),jule::Array<jule::U64,2>({17103121648843798539LLU,16401064715739962772LLU}),jule::Array<jule::U64,2>({1466078993672598279LLU,10250665447337476733LLU}),jule::Array<jule::U64,2>({6444284760518135752LLU,12813331809171845916LLU}),jule::Array<jule::U64,2>({8055355950647669691LLU,16016664761464807395LLU}),jule::Array<jule::U64,2>({2728754459941099604LLU,10010415475915504622LLU}),jule::Array<jule::U64,2>({12634315111781150314LLU,12513019344894380777LLU}),jule::Array<jule::U64,2>({1957835834444274180LLU,15641274181117975972LLU}),jule::Array<jule::U64,2>({10447019433382447170LLU,9775796363198734982LLU}),jule::Array<jule::U64,2>({3835402254873283155LLU,12219745453998418728LLU}),jule::Array<jule::U64,2>({4794252818591603944LLU,15274681817498023410LLU}),jule::Array<jule::U64,2>({7608094030047140369LLU,9546676135936264631LLU}),jule::Array<jule::U64,2>({4898431519131537557LLU,11933345169920330789LLU}),jule::Array<jule::U64,2>({10734725417341809851LLU,14916681462400413486LLU}),jule::Array<jule::U64,2>({2097517367411243253LLU,9322925914000258429LLU}),jule::Array<jule::U64,2>({7233582727691441970LLU,11653657392500323036LLU}),jule::Array<jule::U64,2>({9041978409614302462LLU,14567071740625403795LLU}),jule::Array<jule::U64,2>({6690786993590490174LLU,18208839675781754744LLU}),jule::Array<jule::U64,2>({4181741870994056359LLU,11380524797363596715LLU}),jule::Array<jule::U64,2>({615491320315182544LLU,14225655996704495894LLU}),jule::Array<jule::U64,2>({9992736187248753989LLU,17782069995880619867LLU}),jule::Array<jule::U64,2>({3939617107816777291LLU,11113793747425387417LLU}),jule::Array<jule::U64,2>({9536207403198359517LLU,13892242184281734271LLU}),jule::Array<jule::U64,2>({7308573235570561493LLU,17365302730352167839LLU}),jule::Array<jule::U64,2>({11485387299872682789LLU,10853314206470104899LLU}),jule::Array<jule::U64,2>({9745048106413465582LLU,13566642758087631124LLU}),jule::Array<jule::U64,2>({12181310133016831978LLU,16958303447609538905LLU}),jule::Array<jule::U64,2>({695789805494438130LLU,10598939654755961816LLU}),jule::Array<jule::U64,2>({869737256868047663LLU,13248674568444952270LLU}),jule::Array<jule::U64,2>({10310543607939835386LLU,16560843210556190337LLU}),jule::Array<jule::U64,2>({17973304801030866876LLU,10350527006597618960LLU}),jule::Array<jule::U64,2>({4019886927579031980LLU,12938158758247023701LLU}),jule::Array<jule::U64,2>({9636544677901177879LLU,16172698447808779626LLU}),jule::Array<jule::U64,2>({10634526442115624078LLU,10107936529880487266LLU}),jule::Array<jule::U64,2>({4069786015789754290LLU,12634920662350609083LLU}),jule::Array<jule::U64,2>({475546501309804958LLU,15793650827938261354LLU}),jule::Array<jule::U64,2>({4908902581746016003LLU,9871031767461413346LLU}),jule::Array<jule::U64,2>({15359500264037295811LLU,12338789709326766682LLU}),jule::Array<jule::U64,2>({9976003293191843956LLU,15423487136658458353LLU}),jule::Array<jule::U64,2>({17764217104313372233LLU,9639679460411536470LLU}),jule::Array<jule::U64,2>({12981899343536939483LLU,12049599325514420588LLU}),jule::Array<jule::U64,2>({16227374179421174354LLU,15061999156893025735LLU}),jule::Array<jule::U64,2>({17059637889779315827LLU,9413749473058141084LLU}),jule::Array<jule::U64,2>({2877803288514593168LLU,11767186841322676356LLU}),jule::Array<jule::U64,2>({3597254110643241460LLU,14708983551653345445LLU}),jule::Array<jule::U64,2>({9108253656731439729LLU,18386229439566681806LLU}),jule::Array<jule::U64,2>({1080972517029761926LLU,11491393399729176129LLU}),jule::Array<jule::U64,2>({5962901664714590312LLU,14364241749661470161LLU}),jule::Array<jule::U64,2>({12065313099320625794LLU,17955302187076837701LLU}),jule::Array<jule::U64,2>({9846663696289085073LLU,11222063866923023563LLU}),jule::Array<jule::U64,2>({7696643601933968437LLU,14027579833653779454LLU}),jule::Array<jule::U64,2>({397432465562684739LLU,17534474792067224318LLU}),jule::Array<jule::U64,2>({14083453346258841674LLU,10959046745042015198LLU}),jule::Array<jule::U64,2>({8380944645968776284LLU,13698808431302518998LLU}),jule::Array<jule::U64,2>({1252808770606194547LLU,17123510539128148748LLU}),jule::Array<jule::U64,2>({10006377518483647400LLU,10702194086955092967LLU}),jule::Array<jule::U64,2>({7896285879677171346LLU,13377742608693866209LLU}),jule::Array<jule::U64,2>({14482043368023852087LLU,16722178260867332761LLU}),jule::Array<jule::U64,2>({2133748077373825698LLU,10451361413042082976LLU}),jule::Array<jule::U64,2>({2667185096717282123LLU,13064201766302603720LLU}),jule::Array<jule::U64,2>({3333981370896602653LLU,16330252207878254650LLU}),jule::Array<jule::U64,2>({6695424375237764562LLU,10206407629923909156LLU}),jule::Array<jule::U64,2>({8369280469047205703LLU,12758009537404886445LLU}),jule::Array<jule::U64,2>({15073286604736395033LLU,15947511921756108056LLU}),jule::Array<jule::U64,2>({9420804127960246895LLU,9967194951097567535LLU}),jule::Array<jule::U64,2>({7164319141522920715LLU,12458993688871959419LLU}),jule::Array<jule::U64,2>({4343712908476262990LLU,15573742111089949274LLU}),jule::Array<jule::U64,2>({7326506586225052273LLU,9733588819431218296LLU}),jule::Array<jule::U64,2>({9158133232781315341LLU,12166986024289022870LLU}),jule::Array<jule::U64,2>({2224294504121868368LLU,15208732530361278588LLU}),jule::Array<jule::U64,2>({10613556101930943538LLU,9505457831475799117LLU}),jule::Array<jule::U64,2>({17878631145841067327LLU,11881822289344748896LLU}),jule::Array<jule::U64,2>({3901544858591782542LLU,14852277861680936121LLU}),jule::Array<jule::U64,2>({13967680582688333849LLU,9282673663550585075LLU}),jule::Array<jule::U64,2>({12847914709933029407LLU,11603342079438231344LLU}),jule::Array<jule::U64,2>({16059893387416286759LLU,14504177599297789180LLU}),jule::Array<jule::U64,2>({1628122660560806833LLU,18130221999122236476LLU}),jule::Array<jule::U64,2>({10240948699705280078LLU,11331388749451397797LLU}),jule::Array<jule::U64,2>({17412871893058988002LLU,14164235936814247246LLU}),jule::Array<jule::U64,2>({12542717829468959195LLU,17705294921017809058LLU}),jule::Array<jule::U64,2>({12450884661845487401LLU,11065809325636130661LLU}),jule::Array<jule::U64,2>({1728547772024695539LLU,13832261657045163327LLU}),jule::Array<jule::U64,2>({15995742770313033136LLU,17290327071306454158LLU}),jule::Array<jule::U64,2>({5385653213018257806LLU,10806454419566533849LLU}),jule::Array<jule::U64,2>({11343752534700210161LLU,13508068024458167311LLU}),jule::Array<jule::U64,2>({9568004649947874797LLU,16885085030572709139LLU}),jule::Array<jule::U64,2>({3674159897003727796LLU,10553178144107943212LLU}),jule::Array<jule::U64,2>({4592699871254659745LLU,13191472680134929015LLU}),jule::Array<jule::U64,2>({1129188820640936778LLU,16489340850168661269LLU}),jule::Array<jule::U64,2>({3011586022114279438LLU,10305838031355413293LLU}),jule::Array<jule::U64,2>({8376168546070237202LLU,12882297539194266616LLU}),jule::Array<jule::U64,2>({10470210682587796502LLU,16102871923992833270LLU}),jule::Array<jule::U64,2>({1932195658189984910LLU,10064294952495520794LLU}),jule::Array<jule::U64,2>({11638616609592256945LLU,12580368690619400992LLU}),jule::Array<jule::U64,2>({14548270761990321182LLU,15725460863274251240LLU}),jule::Array<jule::U64,2>({9092669226243950738LLU,9828413039546407025LLU}),jule::Array<jule::U64,2>({15977522551232326327LLU,12285516299433008781LLU}),jule::Array<jule::U64,2>({6136845133758244197LLU,15356895374291260977LLU}),jule::Array<jule::U64,2>({15364743254667372383LLU,9598059608932038110LLU}),jule::Array<jule::U64,2>({9982557031479439671LLU,11997574511165047638LLU}),jule::Array<jule::U64,2>({3254824252494523781LLU,14996968138956309548LLU}),jule::Array<jule::U64,2>({11257637194663853171LLU,9373105086847693467LLU}),jule::Array<jule::U64,2>({9460360474902428559LLU,11716381358559616834LLU}),jule::Array<jule::U64,2>({2602078556773259891LLU,14645476698199521043LLU}),jule::Array<jule::U64,2>({17087656251248738576LLU,18306845872749401303LLU}),jule::Array<jule::U64,2>({17597314184671543466LLU,11441778670468375814LLU}),jule::Array<jule::U64,2>({12773270693984653525LLU,14302223338085469768LLU}),jule::Array<jule::U64,2>({15966588367480816906LLU,17877779172606837210LLU}),jule::Array<jule::U64,2>({14590803748102898470LLU,11173611982879273256LLU}),jule::Array<jule::U64,2>({18238504685128623088LLU,13967014978599091570LLU}),jule::Array<jule::U64,2>({13574758819556003052LLU,17458768723248864463LLU}),jule::Array<jule::U64,2>({15401753289863583763LLU,10911730452030540289LLU}),jule::Array<jule::U64,2>({5417133557047315992LLU,13639663065038175362LLU}),jule::Array<jule::U64,2>({15994788983163920798LLU,17049578831297719202LLU}),jule::Array<jule::U64,2>({14608429132904838403LLU,10655986769561074501LLU}),jule::Array<jule::U64,2>({4425478360848884291LLU,13319983461951343127LLU}),jule::Array<jule::U64,2>({920161932633717460LLU,16649979327439178909LLU}),jule::Array<jule::U64,2>({2880944217109767365LLU,10406237079649486818LLU}),jule::Array<jule::U64,2>({12824552308241985014LLU,13007796349561858522LLU}),jule::Array<jule::U64,2>({6807318348447705459LLU,16259745436952323153LLU}),jule::Array<jule::U64,2>({15783789013848285672LLU,10162340898095201970LLU}),jule::Array<jule::U64,2>({10506364230455581282LLU,12702926122619002463LLU}),jule::Array<jule::U64,2>({8521269269642088699LLU,15878657653273753079LLU}),jule::Array<jule::U64,2>({12243322321167387293LLU,9924161033296095674LLU}),jule::Array<jule::U64,2>({6080780864604458308LLU,12405201291620119593LLU}),jule::Array<jule::U64,2>({12212662099182960789LLU,15506501614525149491LLU}),jule::Array<jule::U64,2>({5327070802775656541LLU,9691563509078218432LLU}),jule::Array<jule::U64,2>({6658838503469570676LLU,12114454386347773040LLU}),jule::Array<jule::U64,2>({8323548129336963345LLU,15143067982934716300LLU}),jule::Array<jule::U64,2>({14425589617690377899LLU,9464417489334197687LLU}),jule::Array<jule::U64,2>({13420301003685584469LLU,11830521861667747109LLU}),jule::Array<jule::U64,2>({2940318199324816875LLU,14788152327084683887LLU}),jule::Array<jule::U64,2>({8755227902219092403LLU,9242595204427927429LLU}),jule::Array<jule::U64,2>({15555720896201253407LLU,11553244005534909286LLU}),jule::Array<jule::U64,2>({10221279083396790951LLU,14441555006918636608LLU}),jule::Array<jule::U64,2>({12776598854245988689LLU,18051943758648295760LLU}),jule::Array<jule::U64,2>({7985374283903742931LLU,11282464849155184850LLU}),jule::Array<jule::U64,2>({758345818024902856LLU,14103081061443981063LLU}),jule::Array<jule::U64,2>({14782990327813292282LLU,17628851326804976328LLU}),jule::Array<jule::U64,2>({9239368954883307676LLU,11018032079253110205LLU}),jule::Array<jule::U64,2>({16160897212031522499LLU,13772540099066387756LLU}),jule::Array<jule::U64,2>({1754377441329851508LLU,17215675123832984696LLU}),jule::Array<jule::U64,2>({1096485900831157192LLU,10759796952395615435LLU}),jule::Array<jule::U64,2>({15205665431321110202LLU,13449746190494519293LLU}),jule::Array<jule::U64,2>({5172023733869224041LLU,16812182738118149117LLU}),jule::Array<jule::U64,2>({5538357842881958977LLU,10507614211323843198LLU}),jule::Array<jule::U64,2>({16146319340457224530LLU,13134517764154803997LLU}),jule::Array<jule::U64,2>({6347841120289366950LLU,16418147205193504997LLU}),jule::Array<jule::U64,2>({6273243709394548296LLU,10261342003245940623LLU}),jule::Array<jule::U64,2>({3229868618315797466LLU,12826677504057425779LLU}),jule::Array<jule::U64,2>({17872393828176910545LLU,16033346880071782223LLU}),jule::Array<jule::U64,2>({18087775170251650946LLU,10020841800044863889LLU}),jule::Array<jule::U64,2>({8774660907532399971LLU,12526052250056079862LLU}),jule::Array<jule::U64,2>({1744954097560724156LLU,15657565312570099828LLU}),jule::Array<jule::U64,2>({10313968347830228405LLU,9785978320356312392LLU}),jule::Array<jule::U64,2>({12892460434787785506LLU,12232472900445390490LLU}),jule::Array<jule::U64,2>({6892203506629956075LLU,15290591125556738113LLU}),jule::Array<jule::U64,2>({15836842237712192307LLU,9556619453472961320LLU}),jule::Array<jule::U64,2>({1349308723430688768LLU,11945774316841201651LLU}),jule::Array<jule::U64,2>({15521693959570524672LLU,14932217896051502063LLU}),jule::Array<jule::U64,2>({16618587752372659776LLU,9332636185032188789LLU}),jule::Array<jule::U64,2>({6938176635183661008LLU,11665795231290235987LLU}),jule::Array<jule::U64,2>({4061034775552188356LLU,14582244039112794984LLU}),jule::Array<jule::U64,2>({5076293469440235445LLU,18227805048890993730LLU}),jule::Array<jule::U64,2>({7784369436827535057LLU,11392378155556871081LLU}),jule::Array<jule::U64,2>({14342147814461806725LLU,14240472694446088851LLU}),jule::Array<jule::U64,2>({13315998749649870503LLU,17800590868057611064LLU}),jule::Array<jule::U64,2>({8322499218531169064LLU,11125369292536006915LLU}),jule::Array<jule::U64,2>({5791438004736573426LLU,13906711615670008644LLU}),jule::Array<jule::U64,2>({7239297505920716783LLU,17383389519587510805LLU}),jule::Array<jule::U64,2>({6830403950414141941LLU,10864618449742194253LLU}),jule::Array<jule::U64,2>({13149690956445065330LLU,13580773062177742816LLU}),jule::Array<jule::U64,2>({16437113695556331663LLU,16975966327722178520LLU}),jule::Array<jule::U64,2>({10273196059722707289LLU,10609978954826361575LLU}),jule::Array<jule::U64,2>({8229809056225996208LLU,13262473693532951969LLU}),jule::Array<jule::U64,2>({14898947338709883164LLU,16578092116916189961LLU}),jule::Array<jule::U64,2>({2394313059052595121LLU,10361307573072618726LLU}),jule::Array<jule::U64,2>({12216263360670519709LLU,12951634466340773407LLU}),jule::Array<jule::U64,2>({10658643182410761733LLU,16189543082925966759LLU}),jule::Array<jule::U64,2>({13579181016647807939LLU,10118464426828729224LLU}),jule::Array<jule::U64,2>({16973976270809759924LLU,12648080533535911530LLU}),jule::Array<jule::U64,2>({11994098301657424097LLU,15810100666919889413LLU}),jule::Array<jule::U64,2>({9802154447749584012LLU,9881312916824930883LLU}),jule::Array<jule::U64,2>({7641007041259592112LLU,12351641146031163604LLU}),jule::Array<jule::U64,2>({9551258801574490140LLU,15439551432538954505LLU}),jule::Array<jule::U64,2>({17498751797052526097LLU,9649719645336846565LLU}),jule::Array<jule::U64,2>({8038381691033493909LLU,12062149556671058207LLU}),jule::Array<jule::U64,2>({5436291095364479483LLU,15077686945838822759LLU})});
jule::Slice<jule::I64> _1b2737410_powtab = jule::Slice<jule::I64>::make({1LL,3LL,6LL,9LL,13LL,16LL,19LL,23LL,26LL});
jule::Slice<jule::F64> _1b2737ec1_f64pow10 = jule::Slice<jule::F64>::make({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0});
jule::Slice<jule::F32> _1b2738301_f32pow10 = jule::Slice<jule::F32>::make({1.0f,10.0f,100.0f,1000.0f,10000.0f,100000.0f,1000000.0f,10000000.0f,100000000.0f,1000000000.0f,10000000000.0f});
jule::Array<jule::U64,20> _1b273b557_u64pow10 = jule::Array<jule::U64,20>({1LLU,10LLU,100LLU,1000LLU,10000LLU,100000LLU,1000000LLU,10000000LLU,100000000LLU,1000000000LLU,10000000000LLU,100000000000LLU,1000000000000LLU,10000000000000LLU,100000000000000LLU,1000000000000000LLU,10000000000000000LLU,100000000000000000LLU,1000000000000000000LLU,10000000000000000000LLU});
jule::Slice<_1b27402e7_leftCheat> _1b2740726_leftCheats = jule::Slice<_1b27402e7_leftCheat>::make({_1b27402e7_leftCheat{._field_delta=0LL, ._field_cutoff=jule::Str()},_1b27402e7_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("5", 1)},_1b27402e7_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("25", 2)},_1b27402e7_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("125", 3)},_1b27402e7_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("625", 3)},_1b27402e7_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("3125", 4)},_1b27402e7_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("15625", 5)},_1b27402e7_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("78125", 5)},_1b27402e7_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("390625", 6)},_1b27402e7_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("1953125", 7)},_1b27402e7_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("9765625", 7)},_1b27402e7_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("48828125", 8)},_1b27402e7_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("244140625", 9)},_1b27402e7_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("1220703125", 10)},_1b27402e7_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("6103515625", 10)},_1b27402e7_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("30517578125", 11)},_1b27402e7_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("152587890625", 12)},_1b27402e7_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("762939453125", 12)},_1b27402e7_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("3814697265625", 13)},_1b27402e7_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("19073486328125", 14)},_1b27402e7_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("95367431640625", 14)},_1b27402e7_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("476837158203125", 15)},_1b27402e7_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("2384185791015625", 16)},_1b27402e7_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("11920928955078125", 17)},_1b27402e7_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("59604644775390625", 17)},_1b27402e7_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("298023223876953125", 18)},_1b27402e7_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("1490116119384765625", 19)},_1b27402e7_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("7450580596923828125", 19)},_1b27402e7_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("37252902984619140625", 20)},_1b27402e7_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("186264514923095703125", 21)},_1b27402e7_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("931322574615478515625", 21)},_1b27402e7_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("4656612873077392578125", 22)},_1b27402e7_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("23283064365386962890625", 23)},_1b27402e7_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("116415321826934814453125", 24)},_1b27402e7_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("582076609134674072265625", 24)},_1b27402e7_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("2910383045673370361328125", 25)},_1b27402e7_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("14551915228366851806640625", 26)},_1b27402e7_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("72759576141834259033203125", 26)},_1b27402e7_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("363797880709171295166015625", 27)},_1b27402e7_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("1818989403545856475830078125", 28)},_1b27402e7_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("9094947017729282379150390625", 28)},_1b27402e7_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("45474735088646411895751953125", 29)},_1b27402e7_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("227373675443232059478759765625", 30)},_1b27402e7_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("1136868377216160297393798828125", 31)},_1b27402e7_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("5684341886080801486968994140625", 31)},_1b27402e7_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("28421709430404007434844970703125", 32)},_1b27402e7_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("142108547152020037174224853515625", 33)},_1b27402e7_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("710542735760100185871124267578125", 33)},_1b27402e7_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("3552713678800500929355621337890625", 34)},_1b27402e7_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("17763568394002504646778106689453125", 35)},_1b27402e7_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("88817841970012523233890533447265625", 35)},_1b27402e7_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("444089209850062616169452667236328125", 36)},_1b27402e7_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("2220446049250313080847263336181640625", 37)},_1b27402e7_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("11102230246251565404236316680908203125", 38)},_1b27402e7_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("55511151231257827021181583404541015625", 38)},_1b27402e7_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("277555756156289135105907917022705078125", 39)},_1b27402e7_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("1387778780781445675529539585113525390625", 40)},_1b27402e7_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("6938893903907228377647697925567626953125", 40)},_1b27402e7_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("34694469519536141888238489627838134765625", 41)},_1b27402e7_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("173472347597680709441192448139190673828125", 42)},_1b27402e7_leftCheat{._field_delta=19LL, ._field_cutoff=jule::Str::lit("867361737988403547205962240695953369140625", 42)}});
jule::I64 _1b27467c6_BitSize = 0LL;
jule::Str _1b2746ac3_SysInt = jule::Str();
jule::Str _1b2746d7b_SysUint = jule::Str();
jule::Array<jule::I32,5> _1b4a3b14b_Spaces = jule::Array<jule::I32,5>({' ','\t','\v','\r','\n'});
jule::Array<jule::U64,6> _1b4a3b35a_UnaryOps = jule::Array<jule::U64,6>({static_cast<jule::U64>(61LLU),static_cast<jule::U64>(60LLU),static_cast<jule::U64>(67LLU),static_cast<jule::U64>(68LLU),static_cast<jule::U64>(62LLU),static_cast<jule::U64>(65LLU)});
jule::Array<jule::U64,18> _1b4a3b59c_BinOps = jule::Array<jule::U64,18>({static_cast<jule::U64>(60LLU),static_cast<jule::U64>(61LLU),static_cast<jule::U64>(62LLU),static_cast<jule::U64>(63LLU),static_cast<jule::U64>(64LLU),static_cast<jule::U64>(65LLU),static_cast<jule::U64>(66LLU),static_cast<jule::U64>(67LLU),static_cast<jule::U64>(56LLU),static_cast<jule::U64>(57LLU),static_cast<jule::U64>(69LLU),static_cast<jule::U64>(70LLU),static_cast<jule::U64>(53LLU),static_cast<jule::U64>(52LLU),static_cast<jule::U64>(54LLU),static_cast<jule::U64>(55LLU),static_cast<jule::U64>(50LLU),static_cast<jule::U64>(51LLU)});
jule::Array<jule::U64,2> _1b4acebe5_PostfixOps = jule::Array<jule::U64,2>({static_cast<jule::U64>(58LLU),static_cast<jule::U64>(59LLU)});
jule::Array<jule::U64,11> _1b4aceed1_AssignOps = jule::Array<jule::U64,11>({static_cast<jule::U64>(71LLU),static_cast<jule::U64>(40LLU),static_cast<jule::U64>(41LLU),static_cast<jule::U64>(43LLU),static_cast<jule::U64>(42LLU),static_cast<jule::U64>(44LLU),static_cast<jule::U64>(46LLU),static_cast<jule::U64>(45LLU),static_cast<jule::U64>(49LLU),static_cast<jule::U64>(48LLU),static_cast<jule::U64>(47LLU)});
jule::Array<_1b4add0ee_kindPair,28> _1b4add52d_keywords = jule::Array<_1b4add0ee_kindPair,28>({_1b4add0ee_kindPair{._field_kind=jule::Str::lit("const", 5), ._field_id=static_cast<jule::U64>(6LLU)},_1b4add0ee_kindPair{._field_kind=jule::Str::lit("ret", 3), ._field_id=static_cast<jule::U64>(2LLU)},_1b4add0ee_kindPair{._field_kind=jule::Str::lit("type", 4), ._field_id=static_cast<jule::U64>(7LLU)},_1b4add0ee_kindPair{._field_kind=jule::Str::lit("for", 3), ._field_id=static_cast<jule::U64>(9LLU)},_1b4add0ee_kindPair{._field_kind=jule::Str::lit("break", 5), ._field_id=static_cast<jule::U64>(10LLU)},_1b4add0ee_kindPair{._field_kind=jule::Str::lit("continue", 8), ._field_id=static_cast<jule::U64>(11LLU)},_1b4add0ee_kindPair{._field_kind=jule::Str::lit("in", 2), ._field_id=static_cast<jule::U64>(12LLU)},_1b4add0ee_kindPair{._field_kind=jule::Str::lit("if", 2), ._field_id=static_cast<jule::U64>(13LLU)},_1b4add0ee_kindPair{._field_kind=jule::Str::lit("else", 4), ._field_id=static_cast<jule::U64>(14LLU)},_1b4add0ee_kindPair{._field_kind=jule::Str::lit("use", 3), ._field_id=static_cast<jule::U64>(16LLU)},_1b4add0ee_kindPair{._field_kind=jule::Str::lit("goto", 4), ._field_id=static_cast<jule::U64>(18LLU)},_1b4add0ee_kindPair{._field_kind=jule::Str::lit("enum", 4), ._field_id=static_cast<jule::U64>(20LLU)},_1b4add0ee_kindPair{._field_kind=jule::Str::lit("struct", 6), ._field_id=static_cast<jule::U64>(21LLU)},_1b4add0ee_kindPair{._field_kind=jule::Str::lit("co", 2), ._field_id=static_cast<jule::U64>(22LLU)},_1b4add0ee_kindPair{._field_kind=jule::Str::lit("match", 5), ._field_id=static_cast<jule::U64>(23LLU)},_1b4add0ee_kindPair{._field_kind=jule::Str::lit("self", 4), ._field_id=static_cast<jule::U64>(24LLU)},_1b4add0ee_kindPair{._field_kind=jule::Str::lit("trait", 5), ._field_id=static_cast<jule::U64>(25LLU)},_1b4add0ee_kindPair{._field_kind=jule::Str::lit("impl", 4), ._field_id=static_cast<jule::U64>(26LLU)},_1b4add0ee_kindPair{._field_kind=jule::Str::lit("cpp", 3), ._field_id=static_cast<jule::U64>(27LLU)},_1b4add0ee_kindPair{._field_kind=jule::Str::lit("fall", 4), ._field_id=static_cast<jule::U64>(28LLU)},_1b4add0ee_kindPair{._field_kind=jule::Str::lit("fn", 2), ._field_id=static_cast<jule::U64>(29LLU)},_1b4add0ee_kindPair{._field_kind=jule::Str::lit("let", 3), ._field_id=static_cast<jule::U64>(30LLU)},_1b4add0ee_kindPair{._field_kind=jule::Str::lit("unsafe", 6), ._field_id=static_cast<jule::U64>(31LLU)},_1b4add0ee_kindPair{._field_kind=jule::Str::lit("mut", 3), ._field_id=static_cast<jule::U64>(32LLU)},_1b4add0ee_kindPair{._field_kind=jule::Str::lit("defer", 5), ._field_id=static_cast<jule::U64>(33LLU)},_1b4add0ee_kindPair{._field_kind=jule::Str::lit("static", 6), ._field_id=static_cast<jule::U64>(34LLU)},_1b4add0ee_kindPair{._field_kind=jule::Str::lit("error", 5), ._field_id=static_cast<jule::U64>(36LLU)},_1b4add0ee_kindPair{._field_kind=jule::Str::lit("map", 3), ._field_id=static_cast<jule::U64>(37LLU)}});
jule::Array<_1b4add0ee_kindPair,46> _1b4add85d_basicOps = jule::Array<_1b4add0ee_kindPair,46>({_1b4add0ee_kindPair{._field_kind=jule::Str::lit("::", 2), ._field_id=static_cast<jule::U64>(19LLU)},_1b4add0ee_kindPair{._field_kind=jule::Str::lit(":=", 2), ._field_id=static_cast<jule::U64>(38LLU)},_1b4add0ee_kindPair{._field_kind=jule::Str::lit(":", 1), ._field_id=static_cast<jule::U64>(8LLU)},_1b4add0ee_kindPair{._field_kind=jule::Str::lit(";", 1), ._field_id=static_cast<jule::U64>(3LLU)},_1b4add0ee_kindPair{._field_kind=jule::Str::lit(",", 1), ._field_id=static_cast<jule::U64>(5LLU)},_1b4add0ee_kindPair{._field_kind=jule::Str::lit("...", 3), ._field_id=static_cast<jule::U64>(39LLU)},_1b4add0ee_kindPair{._field_kind=jule::Str::lit(".", 1), ._field_id=static_cast<jule::U64>(17LLU)},_1b4add0ee_kindPair{._field_kind=jule::Str::lit("+=", 2), ._field_id=static_cast<jule::U64>(40LLU)},_1b4add0ee_kindPair{._field_kind=jule::Str::lit("-=", 2), ._field_id=static_cast<jule::U64>(41LLU)},_1b4add0ee_kindPair{._field_kind=jule::Str::lit("*=", 2), ._field_id=static_cast<jule::U64>(42LLU)},_1b4add0ee_kindPair{._field_kind=jule::Str::lit("/=", 2), ._field_id=static_cast<jule::U64>(43LLU)},_1b4add0ee_kindPair{._field_kind=jule::Str::lit("%=", 2), ._field_id=static_cast<jule::U64>(44LLU)},_1b4add0ee_kindPair{._field_kind=jule::Str::lit("<<=", 3), ._field_id=static_cast<jule::U64>(45LLU)},_1b4add0ee_kindPair{._field_kind=jule::Str::lit(">>=", 3), ._field_id=static_cast<jule::U64>(46LLU)},_1b4add0ee_kindPair{._field_kind=jule::Str::lit("^=", 2), ._field_id=static_cast<jule::U64>(47LLU)},_1b4add0ee_kindPair{._field_kind=jule::Str::lit("&=", 2), ._field_id=static_cast<jule::U64>(48LLU)},_1b4add0ee_kindPair{._field_kind=jule::Str::lit("|=", 2), ._field_id=static_cast<jule::U64>(49LLU)},_1b4add0ee_kindPair{._field_kind=jule::Str::lit("==", 2), ._field_id=static_cast<jule::U64>(50LLU)},_1b4add0ee_kindPair{._field_kind=jule::Str::lit("!=", 2), ._field_id=static_cast<jule::U64>(51LLU)},_1b4add0ee_kindPair{._field_kind=jule::Str::lit(">=", 2), ._field_id=static_cast<jule::U64>(52LLU)},_1b4add0ee_kindPair{._field_kind=jule::Str::lit("<=", 2), ._field_id=static_cast<jule::U64>(53LLU)},_1b4add0ee_kindPair{._field_kind=jule::Str::lit("&&", 2), ._field_id=static_cast<jule::U64>(54LLU)},_1b4add0ee_kindPair{._field_kind=jule::Str::lit("||", 2), ._field_id=static_cast<jule::U64>(55LLU)},_1b4add0ee_kindPair{._field_kind=jule::Str::lit("<<", 2), ._field_id=static_cast<jule::U64>(56LLU)},_1b4add0ee_kindPair{._field_kind=jule::Str::lit(">>", 2), ._field_id=static_cast<jule::U64>(57LLU)},_1b4add0ee_kindPair{._field_kind=jule::Str::lit("++", 2), ._field_id=static_cast<jule::U64>(58LLU)},_1b4add0ee_kindPair{._field_kind=jule::Str::lit("--", 2), ._field_id=static_cast<jule::U64>(59LLU)},_1b4add0ee_kindPair{._field_kind=jule::Str::lit("+", 1), ._field_id=static_cast<jule::U64>(60LLU)},_1b4add0ee_kindPair{._field_kind=jule::Str::lit("-", 1), ._field_id=static_cast<jule::U64>(61LLU)},_1b4add0ee_kindPair{._field_kind=jule::Str::lit("*", 1), ._field_id=static_cast<jule::U64>(62LLU)},_1b4add0ee_kindPair{._field_kind=jule::Str::lit("/", 1), ._field_id=static_cast<jule::U64>(63LLU)},_1b4add0ee_kindPair{._field_kind=jule::Str::lit("%", 1), ._field_id=static_cast<jule::U64>(64LLU)},_1b4add0ee_kindPair{._field_kind=jule::Str::lit("&", 1), ._field_id=static_cast<jule::U64>(65LLU)},_1b4add0ee_kindPair{._field_kind=jule::Str::lit("|", 1), ._field_id=static_cast<jule::U64>(66LLU)},_1b4add0ee_kindPair{._field_kind=jule::Str::lit("^", 1), ._field_id=static_cast<jule::U64>(67LLU)},_1b4add0ee_kindPair{._field_kind=jule::Str::lit("!", 1), ._field_id=static_cast<jule::U64>(68LLU)},_1b4add0ee_kindPair{._field_kind=jule::Str::lit("<", 1), ._field_id=static_cast<jule::U64>(69LLU)},_1b4add0ee_kindPair{._field_kind=jule::Str::lit(">", 1), ._field_id=static_cast<jule::U64>(70LLU)},_1b4add0ee_kindPair{._field_kind=jule::Str::lit("=", 1), ._field_id=static_cast<jule::U64>(71LLU)},_1b4add0ee_kindPair{._field_kind=jule::Str::lit("#", 1), ._field_id=static_cast<jule::U64>(35LLU)},_1b4add0ee_kindPair{._field_kind=jule::Str::lit("{", 1), ._field_id=static_cast<jule::U64>(72LLU)},_1b4add0ee_kindPair{._field_kind=jule::Str::lit("}", 1), ._field_id=static_cast<jule::U64>(73LLU)},_1b4add0ee_kindPair{._field_kind=jule::Str::lit("[", 1), ._field_id=static_cast<jule::U64>(76LLU)},_1b4add0ee_kindPair{._field_kind=jule::Str::lit("]", 1), ._field_id=static_cast<jule::U64>(77LLU)},_1b4add0ee_kindPair{._field_kind=jule::Str::lit("(", 1), ._field_id=static_cast<jule::U64>(74LLU)},_1b4add0ee_kindPair{._field_kind=jule::Str::lit(")", 1), ._field_id=static_cast<jule::U64>(75LLU)}});
jule::Slice<jule::Str> _1b4b70714_builtinConstraints = jule::Slice<jule::Str>::make({jule::Str::lit("signed", 6),jule::Str::lit("unsigned", 8),jule::Str::lit("float", 5),jule::Str::lit("numeric", 7),jule::Str::lit("mutable", 7),jule::Str::lit("immutable", 9),jule::Str::lit("ordered", 7),jule::Str::lit("comparable", 10)});
jule::Ptr<_1b4c7c90e_TypeKind> _1b4d5eb89_primNil = jule::new_ptr<_1b4c7c90e_TypeKind>(_1b4c7c90e_TypeKind{._field_Kind=nullptr});
jule::Ptr<_1b4c7c90e_TypeKind> _1b4d5ee86_primVoid = jule::new_ptr<_1b4c7c90e_TypeKind>(_1b4c7c90e_TypeKind{._field_Kind=jule::Trait(_1b4c9982c_buildPrimType(jule::Str::lit("void", 4)), (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data20)});
jule::Ptr<_1b4c7c90e_TypeKind> _1b4d6023e_primAny = jule::new_ptr<_1b4c7c90e_TypeKind>(_1b4c7c90e_TypeKind{._field_Kind=jule::Trait(_1b4c9982c_buildPrimType(jule::Str::lit("any", 3)), (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data20)});
jule::Ptr<_1b4c7c90e_TypeKind> _1b4d6053b_primStr = jule::new_ptr<_1b4c7c90e_TypeKind>(_1b4c7c90e_TypeKind{._field_Kind=jule::Trait(_1b4c9982c_buildPrimType(jule::Str::lit("str", 3)), (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data20)});
jule::Ptr<_1b4c7c90e_TypeKind> _1b4d607e4_primBool = jule::new_ptr<_1b4c7c90e_TypeKind>(_1b4c7c90e_TypeKind{._field_Kind=jule::Trait(_1b4c9982c_buildPrimType(jule::Str::lit("bool", 4)), (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data20)});
jule::Ptr<_1b4c7c90e_TypeKind> _1b4d60a9c_primUintptr = jule::new_ptr<_1b4c7c90e_TypeKind>(_1b4c7c90e_TypeKind{._field_Kind=jule::Trait(_1b4c9982c_buildPrimType(jule::Str::lit("uintptr", 7)), (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data20)});
jule::Ptr<_1b4c7c90e_TypeKind> _1b4d60d55_primUint = jule::new_ptr<_1b4c7c90e_TypeKind>(_1b4c7c90e_TypeKind{._field_Kind=jule::Trait(_1b4c9982c_buildPrimType(jule::Str::lit("uint", 4)), (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data20)});
jule::Ptr<_1b4c7c90e_TypeKind> _1b4d6121d_primInt = jule::new_ptr<_1b4c7c90e_TypeKind>(_1b4c7c90e_TypeKind{._field_Kind=jule::Trait(_1b4c9982c_buildPrimType(jule::Str::lit("int", 3)), (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data20)});
jule::Ptr<_1b4c7c90e_TypeKind> _1b4d61460_primI8 = jule::new_ptr<_1b4c7c90e_TypeKind>(_1b4c7c90e_TypeKind{._field_Kind=jule::Trait(_1b4c9982c_buildPrimType(jule::Str::lit("i8", 2)), (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data20)});
jule::Ptr<_1b4c7c90e_TypeKind> _1b4d61707_primI16 = jule::new_ptr<_1b4c7c90e_TypeKind>(_1b4c7c90e_TypeKind{._field_Kind=jule::Trait(_1b4c9982c_buildPrimType(jule::Str::lit("i16", 3)), (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data20)});
jule::Ptr<_1b4c7c90e_TypeKind> _1b4d619b0_primI32 = jule::new_ptr<_1b4c7c90e_TypeKind>(_1b4c7c90e_TypeKind{._field_Kind=jule::Trait(_1b4c9982c_buildPrimType(jule::Str::lit("i32", 3)), (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data20)});
jule::Ptr<_1b4c7c90e_TypeKind> _1b4d61c68_primI64 = jule::new_ptr<_1b4c7c90e_TypeKind>(_1b4c7c90e_TypeKind{._field_Kind=jule::Trait(_1b4c9982c_buildPrimType(jule::Str::lit("i64", 3)), (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data20)});
jule::Ptr<_1b4c7c90e_TypeKind> _1b4d62021_primU8 = jule::new_ptr<_1b4c7c90e_TypeKind>(_1b4c7c90e_TypeKind{._field_Kind=jule::Trait(_1b4c9982c_buildPrimType(jule::Str::lit("u8", 2)), (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data20)});
jule::Ptr<_1b4c7c90e_TypeKind> _1b4d622c9_primU16 = jule::new_ptr<_1b4c7c90e_TypeKind>(_1b4c7c90e_TypeKind{._field_Kind=jule::Trait(_1b4c9982c_buildPrimType(jule::Str::lit("u16", 3)), (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data20)});
jule::Ptr<_1b4c7c90e_TypeKind> _1b4d62582_primU32 = jule::new_ptr<_1b4c7c90e_TypeKind>(_1b4c7c90e_TypeKind{._field_Kind=jule::Trait(_1b4c9982c_buildPrimType(jule::Str::lit("u32", 3)), (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data20)});
jule::Ptr<_1b4c7c90e_TypeKind> _1b4d62a6b_primU64 = jule::new_ptr<_1b4c7c90e_TypeKind>(_1b4c7c90e_TypeKind{._field_Kind=jule::Trait(_1b4c9982c_buildPrimType(jule::Str::lit("u64", 3)), (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data20)});
jule::Ptr<_1b4c7c90e_TypeKind> _1b4d62cad_primF32 = jule::new_ptr<_1b4c7c90e_TypeKind>(_1b4c7c90e_TypeKind{._field_Kind=jule::Trait(_1b4c9982c_buildPrimType(jule::Str::lit("f32", 3)), (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data20)});
jule::Ptr<_1b4c7c90e_TypeKind> _1b4d62ebc_primF64 = jule::new_ptr<_1b4c7c90e_TypeKind>(_1b4c7c90e_TypeKind{._field_Kind=jule::Trait(_1b4c9982c_buildPrimType(jule::Str::lit("f64", 3)), (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data20)});
jule::Ptr<_1b57c9c74_data> _1b57c937d_emptyData = jule::new_ptr<_1b57c9c74_data>();
jule::Bool _1b57ce30b_Copy = false;
jule::Bool _1b57ce608_Deadcode = false;
jule::Bool _1b57ce8b1_Append = false;
jule::Bool _1b57cebad_Math = false;
jule::Bool _1b57cee66_Access = false;
jule::Bool _1b57d021e_Inline = false;
jule::Bool _1b57d04c7_Ptr = false;
jule::Bool _1b57d0890_Cond = false;
jule::Bool _1b57d0ad2_Str = false;
jule::Bool _1b57d0d79_Slice = false;
jule::Bool _1b57d1132_Assign = false;
jule::Bool _1b57d13da_Exceptional = false;
jule::Bool _1b57d1693_Iter = false;
jule::Bool _1b57d194b_Dynamic = false;
jule::Bool _1b5946583_exprEnabled = false;
jule::Bool _1b5946808_scopeEnabled = false;
jule::Array<jule::U64,12> _1a901a34a_mdays = jule::Array<jule::U64,12>({31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,29LLU});
jule::Str _1b644cc37_assignArgName = jule::Str::lit("__jule_assign_arg", 17);
jule::Ptr<_1b4c7c90e_TypeKind> _1a9024b3a_generalGCPtr = jule::new_ptr<_1b4c7c90e_TypeKind>(_1b4c7c90e_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1b4c89014_Sptr>(_1b4c89014_Sptr{._field_Elem=jule::new_ptr<_1b4c7c90e_TypeKind>(_1b4c7c90e_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1b4c854d8_Prim>(_1b4c854d8_Prim{._field_Kind=jule::Str::lit("uintptr", 7)}), (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data20)})}), (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data21)});
jule::Ptr<_1cae57ed0_RangeTable> _1cae04025_Upper = _1cade6c71__LU;
jule::Ptr<_1cae57ed0_RangeTable> _1cadecc55_Letter = _1cade5d5d__L;



std::ostream &operator<<(std::ostream &_Stream, _1cae5752e_Range16 _Src) {
	_Stream << "Range16{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cae57a5c_Range32 _Src) {
	_Stream << "Range32{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cae57ed0_RangeTable _Src) {
	_Stream << "RangeTable{";
	_Stream << "R16:" << _Src._field_R16 << ", ";
	_Stream << "R32:" << _Src._field_R32 << ", ";
	_Stream << "LatinOffset:" << _Src._field_LatinOffset;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cb178d49_acceptRange _Src) {
	_Stream << "acceptRange{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}



inline _1cb1d27a9_StrBuilder static__1cb1d2a73_New(jule::I64 _1519_cap) {
	if ((_1519_cap < 0LL)) {
		jule::panic(jule::Str::lit("std::strings: StrBuilder.New: cap < 0", 37) + jule::Str("\nlocation: std/internal/strings/builder.jule:17:13"));;
	};
	return _1cb1d27a9_StrBuilder{._field_buf=jule::Slice<jule::U8>::alloc(0LL, _1519_cap, 0)};;
}



inline void _1cb1db131_Write(_1cb1d27a9_StrBuilder* _self_, jule::Slice<jule::U8> _2524_b) {
	((*(_self_))._field_buf).append(_2524_b);;
}



inline void _1cb1db3d9_WriteStr(_1cb1d27a9_StrBuilder* _self_, jule::Str _3027_s) {
	((*(_self_))._field_buf).append(_3027_s);;
}



inline void _1cb1db692_WriteByte(_1cb1d27a9_StrBuilder* _self_, jule::U8 _3528_b) {
	{ jule::Slice<jule::U8> &__jule_push_dest = (*(_self_))._field_buf; __jule_push_dest.push(_3528_b); };
}



inline jule::Str _1cb1dbbd1_Str(_1cb1d27a9_StrBuilder* _self_) {
	jule::Str _5013_s = _20d73ccb0_StrFromBytes((*(_self_))._field_buf);;
	_1cb1dbdce_Clear(_self_);
	return _5013_s;;
}



inline void _1cb1dbdce_Clear(_1cb1d27a9_StrBuilder* _self_) {
	(*(_self_))._field_buf=nullptr;
}



inline jule::I64 _1cb1dc165_Len(_1cb1d27a9_StrBuilder* _self_) {
	return (*(_self_))._field_buf.len();;
}



inline jule::Slice<jule::U8> _1cb1dc682_Buf(_1cb1d27a9_StrBuilder* _self_) {
	return (*(_self_))._field_buf;;
}



inline void _1cb1dc93a_SetBuf(_1cb1d27a9_StrBuilder* _self_, jule::Slice<jule::U8> _7736_buf) {
	(*(_self_))._field_buf=_7736_buf;
}





std::ostream &operator<<(std::ostream &_Stream, _1cb1d27a9_StrBuilder _Src) {
	_Stream << "StrBuilder{";
	_Stream << "buf:" << _Src._field_buf;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _1cb1ddc5a_index(_1cb1dd7c6_lazyBuff* _self_, jule::I64 _5524_i) {
	if (((*(_self_))._field_buff != nullptr)) {
		return (*(_self_))._field_buff[_5524_i];;
	};
	return (*(_self_))._field_path[_5524_i];;
}



inline void _1cb1de013_append(_1cb1dd7c6_lazyBuff* _self_, jule::U8 _6225_c) {
	if (((*(_self_))._field_buff == nullptr)) {
		if ((((*(_self_))._field_w < (*(_self_))._field_path.len()) && ((*(_self_))._field_path[(*(_self_))._field_w] == _6225_c))) {
			((*(_self_))._field_w)++;
			return;;
		};
		(*(_self_))._field_buff=jule::Slice<jule::U8>::alloc((*(_self_))._field_path.len(), (*(_self_))._field_path.len(), 0);
		jule::copy((*(_self_))._field_buff, (*(_self_))._field_path.slice(0LL, (*(_self_))._field_w));
	};
	(*(_self_))._field_buff[(*(_self_))._field_w]=_6225_c;
	((*(_self_))._field_w)++;
}



inline jule::Str _1cb1de299_string(_1cb1dd7c6_lazyBuff* _self_) {
	if (((*(_self_))._field_buff == nullptr)) {
		return (*(_self_))._field_volAndPath.slice(0LL, ((*(_self_))._field_volLen + (*(_self_))._field_w));;
	};
	return ((*(_self_))._field_volAndPath.slice(0LL, (*(_self_))._field_volLen) + _20d73c9e6_BytesStr((*(_self_))._field_buff.slice(0LL, (*(_self_))._field_w)));;
}





std::ostream &operator<<(std::ostream &_Stream, _1cb1dd7c6_lazyBuff _Src) {
	_Stream << "lazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "volAndPath:" << _Src._field_volAndPath << ", ";
	_Stream << "volLen:" << _Src._field_volLen;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _20d927670_DirEntry _Src) {
	_Stream << "DirEntry{";
	_Stream << "Name:" << _Src._field_Name << ", ";
	_Stream << "Stat:" << _Src._field_Stat;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Slice<jule::Ptr<_20d927670_DirEntry>>> static__1cb1e3138_Read(jule::Str _1520_path) {
	jule::Slice<jule::Ptr<_20d927670_DirEntry>> __jule_func_result;
	jule::Slice<jule::U8> _169_s = _20d8c69b5_StrToBytes(_1520_path);;
	DIR* _1713_dir = _20d8d73bb_Opendir((&(_169_s[0LL])));;
	if ((_1713_dir == nullptr)) {
		return jule::Exceptional<jule::Slice<jule::Ptr<_20d927670_DirEntry>>>{.error=jule::Any(_20d91d820_getLastFsError(), &__jule_any_type0)};
	};
	for (;;) {
		{
			struct dirent* _2213_dirent = _20d8d7597_Readdir(_1713_dir);;
			if ((_2213_dirent == nullptr)) {
				goto _iter_end_1aa1890bc;
			};
			jule::Str _2613_name = _20d8c672e_BytePtrToStr(((jule::U8*)((*(_2213_dirent)).d_name)));;
			jule::Ptr<_20d92b630_Status> _2717_stat = ({
				auto except = static__20d9282b9_Of(_1cb1e007a_Join(jule::Slice<jule::Str>::make({_1520_path,_2613_name})));
				(except.ok()) ? (except.result) : ({{

					return jule::Exceptional<jule::Slice<jule::Ptr<_20d927670_DirEntry>>>{.error=except.error};
				} jule::Ptr<_20d92b630_Status>(nullptr);});
			});;
			{ jule::Slice<jule::Ptr<_20d927670_DirEntry>> &__jule_push_dest = __jule_func_result; __jule_push_dest.push(jule::new_ptr<_20d927670_DirEntry>(_20d927670_DirEntry{._field_Name=_2613_name, ._field_Stat=_2717_stat})); };
		}
	_iter_next_1aa1890bc:;
	}
	_iter_end_1aa1890bc:;;
	_20d8d783e_Closedir(_1713_dir);
	return jule::Exceptional<jule::Slice<jule::Ptr<_20d927670_DirEntry>>>{.result=__jule_func_result};;
}



inline jule::VoidExceptional static__1cb1e3369_Create(jule::Str _4022_path) {
	jule::Slice<jule::U8> _449_s = _20d8c69b5_StrToBytes(_4022_path);;
	if ((_20d8d8246_Mkdir((&(_449_s[0LL])), 448LL) != 0LL)) {
		return jule::VoidExceptional{.error=jule::Any(_20d91d820_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional static__1cb1e359a_Remove(jule::Str _5322_path) {
	jule::Slice<jule::U8> _549_s = _20d8c69b5_StrToBytes(_5322_path);;
	if ((_20d8d8510_Rmdir((&(_549_s[0LL]))) != 0LL)) {
		return jule::VoidExceptional{.error=jule::Any(_20d91d820_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}





std::ostream &operator<<(std::ostream &_Stream, _20d927906_Directory _Src) {
	_Stream << "Directory{";
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Ptr<_20d929540_File>> static__20d9266a2_Open(jule::Str _2020_path, jule::I64 _2031_flag, jule::I64 _2044_mode) {
	jule::Slice<jule::U8> _219_s = _20d8c69b5_StrToBytes(_2020_path);;
	jule::I64 _229_handle = _20d8d6a4c_Open((&(_219_s[0LL])), _2031_flag, _2044_mode);;
	if ((_229_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_20d929540_File>>{.error=jule::Any(_20d91d820_getLastFsError(), &__jule_any_type0)};
	};
	return jule::Exceptional<jule::Ptr<_20d929540_File>>{.result=static__20d92995d_New(static_cast<jule::Uintptr>(_229_handle))};;
}



inline jule::VoidExceptional static__20d9268d3_Remove(jule::Str _3322_path) {
	jule::Slice<jule::U8> _349_s = _20d8c69b5_StrToBytes(_3322_path);;
	if ((_20d8d87c9_Unlink((&(_349_s[0LL]))) != 0LL)) {
		return jule::VoidExceptional{.error=jule::Any(_20d91d820_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I64> _20d926c57_Write(_20d929540_File* _self_, jule::Slice<jule::U8> _4824_buf) {
	jule::I64 __jule_func_result = 0;
	if ((_4824_buf.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
	};
	_20d9260b9_HandleRW(&(_4824_buf));
	__jule_func_result=_20d8e450a_Write(static_cast<jule::I64>((*(_self_))._field_handle), (&(_4824_buf[0LL])), static_cast<jule::U64>(_4824_buf.len()));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(_20d91d820_getLastFsError(), &__jule_any_type0)};
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
}



inline jule::Exceptional<jule::I64> _20d927098_Read(_20d929540_File* _self_, jule::Slice<jule::U8> _6927_buf) {
	jule::I64 __jule_func_result = 0;
	if ((_6927_buf.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
	};
	_20d9260b9_HandleRW(&(_6927_buf));
	__jule_func_result=_20d8e3c79_Read(static_cast<jule::I64>((*(_self_))._field_handle), (&(_6927_buf[0LL])), static_cast<jule::U64>(_6927_buf.len()));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(_20d91d820_getLastFsError(), &__jule_any_type0)};
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
}



inline jule::Ptr<_20d929540_File> static__20d92995d_New(jule::Uintptr _4519_handle) {
	return jule::new_ptr<_20d929540_File>(_20d929540_File{._field_handle=_4519_handle});;
}



inline jule::Exceptional<jule::Ptr<_20d929540_File>> static__20d929c27_Create(jule::Str _5522_path) {
	return static__20d9266a2_Open(_5522_path, static_cast<jule::I64>(578LL), 438LL);
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__20d929ee1_Read(jule::Str _6720_path) {
	jule::Ptr<_20d92b630_Status> _689_s = ({
		auto except = static__20d9282b9_Of(_6720_path);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
		} jule::Ptr<_20d92b630_Status>(nullptr);});
	});;
	if ((!(_20d92bc90_IsReg(_689_s.ptr())))) {
		return jule::Exceptional<jule::Slice<jule::U8>>{.error=jule::Any(static_cast<jule::I64>(14LL), &__jule_any_type0)};
	};
	jule::I64 _7313_sz = static_cast<jule::I64>(_20d92c026_Size(_689_s));;
	if ((_7313_sz != static_cast<jule::I64>(_20d92c026_Size(_689_s)))) {
		_7313_sz=0LL;
	};
	if ((_7313_sz < 512LLU)) {
		_7313_sz=512LLU;
	};
	jule::Ptr<_20d929540_File> _8613_f = ({
		auto except = static__20d9266a2_Open(_6720_path, static_cast<jule::I64>(0LL), 0LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
		} jule::Ptr<_20d929540_File>(nullptr);});
	});;
	jule::Slice<jule::U8> _8713_buf = jule::Slice<jule::U8>::alloc(_7313_sz, _7313_sz, 0);;
	jule::I64 _8813_n = 0LL;;
	while ((_8813_n < _7313_sz)) {
		{
			jule::I64 _9013_rn = ({
				auto except = _20d927098_Read(_8613_f.ptr(), _8713_buf.slice(_8813_n));
				(except.ok()) ? (except.result) : ({{

					return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
				} 0;});
			});;
			if ((_9013_rn == 0LL)) {
				goto _iter_end_1aa197c8a;
			};
			_8813_n+=_9013_rn;
		}
	_iter_next_1aa197c8a:;
	}
	_iter_end_1aa197c8a:;;
	({
		auto except = _20d92aac4_Close(_8613_f);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
		}
	});
	return jule::Exceptional<jule::Slice<jule::U8>>{.result=_8713_buf.slice(0LL, _8813_n)};;
}



inline jule::VoidExceptional static__20d92a387_Write(jule::Str _10521_path, jule::Slice<jule::U8> _10532_data, jule::I64 _10546_perm) {
	jule::Ptr<_20d929540_File> _10613_f = ({
		auto except = static__20d9266a2_Open(_10521_path, static_cast<jule::I64>(577LL), _10546_perm);
		(except.ok()) ? (except.result) : ({{

			return jule::VoidExceptional{.error=std::move(except.error)};
		} jule::Ptr<_20d929540_File>(nullptr);});
	});;
	jule::I64 _10713_n = 0LL;;
	while ((_10713_n < _10532_data.len())) {
		{
			_10713_n+=({
				auto except = _20d926c57_Write(_10613_f.ptr(), _10532_data.slice(_10713_n));
				(except.ok()) ? (except.result) : ({{

					return jule::VoidExceptional{.error=std::move(except.error)};
				} 0;});
			});
		}
	_iter_next_1aa19cad6:;
	}
	_iter_end_1aa19cad6:;;
	return _20d92aac4_Close(_10613_f);
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _20d92aac4_Close(_20d929540_File* _self_) {
	if ((_20d8e4153_Close(static_cast<jule::I64>((*(_self_))._field_handle)) == -1LL)) {
		return jule::VoidExceptional{.error=jule::Any(_20d91d820_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}





std::ostream &operator<<(std::ostream &_Stream, _20d929540_File _Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Ptr<_20d92b630_Status>> static__20d9282b9_Of(jule::Str _1218_path) {
	if ((_1218_path).empty()) {
		return jule::Exceptional<jule::Ptr<_20d92b630_Status>>{.error=jule::Any(static_cast<jule::I64>(4LL), &__jule_any_type0)};
	};
	struct stat _1613_handle = (struct stat){};;
	jule::Slice<jule::U8> _179_s = _20d8c69b5_StrToBytes(_1218_path);;
	jule::I64 _189_code = _20d8d661d_Stat((&(_179_s[0LL])), (&(_1613_handle)));;
	if ((_189_code == -1LL)) {
		return jule::Exceptional<jule::Ptr<_20d92b630_Status>>{.error=jule::Any(_20d91d820_getLastFsError(), &__jule_any_type0)};
	};
	jule::Ptr<_20d92b630_Status> _2213_stat = jule::new_ptr<_20d92b630_Status>();;
	(*_2213_stat.alloc)._field_size=_1613_handle.st_size;
	if (((_1613_handle.st_mode & 16384LLU) == 16384LLU)) {
		(*_2213_stat.alloc)._field_mode|=static_cast<jule::I64>(1LL);
	} else if (((_1613_handle.st_mode & 32768LLU) == 32768LLU)) {
		(*_2213_stat.alloc)._field_mode|=static_cast<jule::I64>(2LL);
	};
	return jule::Exceptional<jule::Ptr<_20d92b630_Status>>{.result=_2213_stat};;
}



inline jule::Bool _20d92ba09_IsDir(_20d92b630_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL));;
}



inline jule::Bool _20d92bc90_IsReg(_20d92b630_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I64>(2LL)) == static_cast<jule::I64>(2LL));;
}



inline jule::U64 _20d92c026_Size(_20d92b630_Status* _self_) {
	return (*(_self_))._field_size;;
}





std::ostream &operator<<(std::ostream &_Stream, _20d92b630_Status _Src) {
	_Stream << "Status{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cb39ae8e_cmdAttrs _Src) {
	_Stream << "cmdAttrs{";
	_Stream << "pid:" << _Src._field_pid;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cb285120_Log _Src) {
	_Stream << "Log{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Text:" << _Src._field_Text << ", ";
	_Stream << "Line:" << _Src._field_Line << ", ";
	_Stream << "Suggestion:" << _Src._field_Suggestion;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b272c427_floatInfo _Src) {
	_Stream << "floatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b272d0a4_decimalSlice _Src) {
	_Stream << "decimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b27402e7_leftCheat _Src) {
	_Stream << "leftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b2737740_set(_1b2740d0e_decimal* _self_, jule::Slice<jule::U8> _23822_s) {
	jule::Bool __jule_func_result = false;
	jule::I64 _23913_i = 0LL;;
	(*(_self_))._field_neg=false;
	(*(_self_))._field_trunc=false;
	if ((_23913_i >= _23822_s.len())) {
		return __jule_func_result;;
	};
	{
		
		if ((_23822_s[_23913_i] == '+')) {
			_case_begin_1aa6ed994:;
			{
				(_23913_i)++;
			}
		}
		else if ((_23822_s[_23913_i] == '-')) {
			_case_begin_1aa6edaa4:;
			{
				(*(_self_))._field_neg=true;
				(_23913_i)++;
			}
		}
		_match_end_1aa6ed90b:;
	};
	jule::Bool _25613_sawdot = false;;
	jule::Bool _25713_sawdigits = false;;
	for (; (_23913_i < _23822_s.len()); (_23913_i)++) {
		{
			{
				
				if ((_23822_s[_23913_i] == '_')) {
					_case_begin_1aa7004ce:;
					{
						goto _iter_next_1aa6eed80;
					}
				}
				else if ((_23822_s[_23913_i] == '.')) {
					_case_begin_1aa700578:;
					{
						if (_25613_sawdot) {
							return __jule_func_result;;
						};
						_25613_sawdot=true;
						(*(_self_))._field_dp=(*(_self_))._field_nd;
						goto _iter_next_1aa6eed80;
					}
				}
				else if ((('0' <= _23822_s[_23913_i]) && (_23822_s[_23913_i] <= '9'))) {
					_case_begin_1aa7005de:;
					{
						_25713_sawdigits=true;
						if (((_23822_s[_23913_i] == '0') && ((*(_self_))._field_nd == 0LL))) {
							((*(_self_))._field_dp)--;
							goto _iter_next_1aa6eed80;
						};
						if (((*(_self_))._field_nd < 800LL)) {
							(*(_self_))._field_d[(*(_self_))._field_nd]=_23822_s[_23913_i];
							((*(_self_))._field_nd)++;
						} else if ((_23822_s[_23913_i] != '0')) {
							(*(_self_))._field_trunc=true;
						};
						goto _iter_next_1aa6eed80;
					}
				}
				_match_end_1aa7003ad:;
			};
			goto _iter_end_1aa6eed80;
		}
	_iter_next_1aa6eed80:;
	}
	_iter_end_1aa6eed80:;;
	if ((!(_25713_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_25613_sawdot))) {
		(*(_self_))._field_dp=(*(_self_))._field_nd;
	};
	if (((_23913_i < _23822_s.len()) && (_1b2732c68_lower(_23822_s[_23913_i]) == 'e'))) {
		(_23913_i)++;
		if ((_23913_i >= _23822_s.len())) {
			return __jule_func_result;;
		};
		jule::I64 _30217_esign = 1LL;;
		if ((_23822_s[_23913_i] == '+')) {
			(_23913_i)++;
		} else if ((_23822_s[_23913_i] == '-')) {
			(_23913_i)++;
			_30217_esign=-1LL;
		};
		if ((((_23913_i >= _23822_s.len()) || (_23822_s[_23913_i] < '0')) || (_23822_s[_23913_i] > '9'))) {
			return __jule_func_result;;
		};
		jule::I64 _31217_e = 0LL;;
		for (; ((_23913_i < _23822_s.len()) && ((('0' <= _23822_s[_23913_i]) && (_23822_s[_23913_i] <= '9')) || (_23822_s[_23913_i] == '_'))); (_23913_i)++) {
			{
				if ((_23822_s[_23913_i] == '_')) {
					goto _iter_next_1aa705935;
				};
				if ((_31217_e < 10000LL)) {
					_31217_e=(((_31217_e * 10LL) + static_cast<jule::I64>(_23822_s[_23913_i])) - '0');
				};
			}
		_iter_next_1aa705935:;
		}
		_iter_end_1aa705935:;;
		(*(_self_))._field_dp+=(_31217_e * _30217_esign);
	};
	if ((_23913_i != _23822_s.len())) {
		return __jule_func_result;;
	};
	__jule_func_result=true;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_bool _1b2737a81_floatBits(_1b2740d0e_decimal* _self_, _1b272c427_floatInfo* _33229_flt) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _33313_exp = 0LL;;
	jule::U64 _33413_mant = static_cast<jule::U64>(0LLU);;
	if (((*(_self_))._field_nd == 0LL)) {
		_33413_mant=0LLU;
		_33313_exp=(*(_33229_flt))._field_bias;
		goto _julec_label_1aa71632a;
	};
	if (((*(_self_))._field_dp > 310LL)) {
		goto _julec_label_1aa714e2d;
	};
	if (((*(_self_))._field_dp < -330LL)) {
		_33413_mant=0LLU;
		_33313_exp=(*(_33229_flt))._field_bias;
		goto _julec_label_1aa71632a;
	};
	_33313_exp=0LL;
	while (((*(_self_))._field_dp > 0LL)) {
		{
			jule::I64 _35917_n = 0LL;;
			if (((*(_self_))._field_dp >= _1b2737410_powtab.len())) {
				_35917_n=27LL;
			} else {
				_35917_n=_1b2737410_powtab[(*(_self_))._field_dp];
			};
			_1b274146e_shift(_self_, (-(_35917_n)));
			_33313_exp+=_35917_n;
		}
	_iter_next_1aa70c123:;
	}
	_iter_end_1aa70c123:;;
	while ((((*(_self_))._field_dp < 0LL) || (((*(_self_))._field_dp == 0LL) && ((*(_self_))._field_d[0LL] < '5')))) {
		{
			jule::I64 _36917_n = 0LL;;
			if (((-((*(_self_))._field_dp)) >= _1b2737410_powtab.len())) {
				_36917_n=27LL;
			} else {
				_36917_n=_1b2737410_powtab[(-((*(_self_))._field_dp))];
			};
			_1b274146e_shift(_self_, _36917_n);
			_33313_exp-=_36917_n;
		}
	_iter_next_1aa70ca19:;
	}
	_iter_end_1aa70ca19:;;
	(_33313_exp)--;
	if ((_33313_exp < ((*(_33229_flt))._field_bias + 1LL))) {
		jule::I64 _38613_n = (((*(_33229_flt))._field_bias + 1LL) - _33313_exp);;
		_1b274146e_shift(_self_, (-(_38613_n)));
		_33313_exp+=_38613_n;
	};
	if (((_33313_exp - (*(_33229_flt))._field_bias) >= static_cast<jule::I64>(((1LL << (*(_33229_flt))._field_expbits) - 1LL)))) {
		goto _julec_label_1aa714e2d;
	};
	_1b274146e_shift(_self_, static_cast<jule::I64>((1LL + (*(_33229_flt))._field_mantbits)));
	_33413_mant=_1b274201e_roundedInteger(_self_);
	if ((_33413_mant == (2LLU << (*(_33229_flt))._field_mantbits))) {
		_33413_mant>>=1LLU;
		(_33313_exp)++;
		if (((_33313_exp - (*(_33229_flt))._field_bias) >= static_cast<jule::I64>(((1LL << (*(_33229_flt))._field_expbits) - 1LL)))) {
			goto _julec_label_1aa714e2d;
		};
	};
	if (((_33413_mant & (1LLU << (*(_33229_flt))._field_mantbits)) == 0LLU)) {
		_33313_exp=(*(_33229_flt))._field_bias;
	};
	goto _julec_label_1aa71632a;
	_julec_label_1aa714e2d:;
	_33413_mant=0LLU;
	_33313_exp=static_cast<jule::I64>((((static_cast<jule::U64>(1LLU) << (*(_33229_flt))._field_expbits) - 1LLU) + static_cast<jule::U64>((*(_33229_flt))._field_bias)));
	__jule_func_result.__jule_result_arg1=true;
	_julec_label_1aa71632a:;
	jule::U64 _42213_bits = (_33413_mant & ((1LLU << (*(_33229_flt))._field_mantbits) - 1LLU));;
	_42213_bits|=(static_cast<jule::U64>(((_33313_exp - (*(_33229_flt))._field_bias) & static_cast<jule::I64>(((1LL << (*(_33229_flt))._field_expbits) - 1LL)))) << (*(_33229_flt))._field_mantbits);
	if ((*(_self_))._field_neg) {
		_42213_bits|=((1LLU << (*(_33229_flt))._field_mantbits) << (*(_33229_flt))._field_expbits);
	};
	__jule_func_result.__jule_result_arg0 = _42213_bits;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline void _1b27411b6_assign(_1b2740d0e_decimal* _self_, jule::U64 _15129_v) {
	jule::Array<jule::U8,24> _15217_buf = jule::Array<jule::U8,24>(0);;
	jule::I64 _15513_n = 0LL;;
	while ((_15129_v > 0LLU)) {
		{
			jule::U64 _15713_v1 = (_15129_v / 10LLU);;
			_15129_v-=(10LLU * _15713_v1);
			_15217_buf[_15513_n]=static_cast<jule::U8>((_15129_v + '0'));
			(_15513_n)++;
			_15129_v=_15713_v1;
		}
	_iter_next_1aa719262:;
	}
	_iter_end_1aa719262:;;
	(*(_self_))._field_nd=0LL;
	(_15513_n)--;
	for (; (_15513_n >= 0LL); (_15513_n)--) {
		{
			(*(_self_))._field_d[(*(_self_))._field_nd]=_15217_buf[_15513_n];
			((*(_self_))._field_nd)++;
		}
	_iter_next_1aa719dab:;
	}
	_iter_end_1aa719dab:;;
	(*(_self_))._field_dp=(*(_self_))._field_nd;
	_1b274265c_trim(_self_);
}



inline void _1b274146e_shift(_1b2740d0e_decimal* _self_, jule::I64 _17628_k) {
	{
		
		if (((*(_self_))._field_nd == 0LL)) {
			_case_begin_1aa71bd25:;
		}
		else if ((_17628_k > 0LL)) {
			_case_begin_1aa71bdbe:;
			{
				while ((_17628_k > 60LL)) {
					{
						_1b27431a7_leftShift(_self_, 60LLU);
						_17628_k-=60LL;
					}
				_iter_next_1aa71c991:;
				}
				_iter_end_1aa71c991:;;
				_1b27431a7_leftShift(_self_, static_cast<jule::U64>(_17628_k));
			}
		}
		else if ((_17628_k < 0LL)) {
			_case_begin_1aa71be35:;
			{
				while ((_17628_k < -60LL)) {
					{
						_1b2742948_rightShift(_self_, 60LLU);
						_17628_k+=60LL;
					}
				_iter_next_1aa71c8b4:;
				}
				_iter_end_1aa71c8b4:;;
				_1b2742948_rightShift(_self_, static_cast<jule::U64>((-(_17628_k))));
			}
		}
		_match_end_1aa71bbc1:;
	};
}



inline void _1b2741727_roundDown(_1b2740d0e_decimal* _self_, jule::I64 _19628_nd) {
	if (((_19628_nd < 0LL) || (_19628_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	(*(_self_))._field_nd=_19628_nd;
	_1b274265c_trim(_self_);
}



inline void _1b27419d0_roundUp(_1b2740d0e_decimal* _self_, jule::I64 _20526_nd) {
	if (((_20526_nd < 0LL) || (_20526_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	jule::I64 _21113_i = (_20526_nd - 1LL);;
	for (; (_21113_i >= 0LL); (_21113_i)--) {
		{
			jule::U8 _21313_c = (*(_self_))._field_d[_21113_i];;
			if ((_21313_c < '9')) {
				((*(_self_))._field_d[_21113_i])++;
				(*(_self_))._field_nd=(_21113_i + 1LL);
				return;;
			};
		}
	_iter_next_1aa720e06:;
	}
	_iter_end_1aa720e06:;;
	(*(_self_))._field_d[0LL]='1';
	(*(_self_))._field_nd=1LL;
	((*(_self_))._field_dp)++;
}



inline void _1b2741c88_round(_1b2740d0e_decimal* _self_, jule::I64 _23224_nd) {
	if (((_23224_nd < 0LL) || (_23224_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	if (_1b274352b_shouldRoundUp(_self_, _23224_nd)) {
		_1b27419d0_roundUp(_self_, _23224_nd);
	} else {
		_1b2741727_roundDown(_self_, _23224_nd);
	};
}



inline jule::U64 _1b274201e_roundedInteger(_1b2740d0e_decimal* _self_) {
	if (((*(_self_))._field_dp > 20LL)) {
		return jule::MAX_U64;;
	};
	jule::I64 _24913_i = 0LL;;
	jule::U64 _25013_n = static_cast<jule::U64>(0LLU);;
	for (; ((_24913_i < (*(_self_))._field_dp) && (_24913_i < (*(_self_))._field_nd)); (_24913_i)++) {
		{
			_25013_n=((_25013_n * 10LLU) + static_cast<jule::U64>(((*(_self_))._field_d[_24913_i] - '0')));
		}
	_iter_next_1aa723cb6:;
	}
	_iter_end_1aa723cb6:;;
	for (; (_24913_i < (*(_self_))._field_dp); (_24913_i)++) {
		{
			_25013_n*=10LLU;
		}
	_iter_next_1aa7250d6:;
	}
	_iter_end_1aa7250d6:;;
	if (_1b274352b_shouldRoundUp(_self_, (*(_self_))._field_dp)) {
		(_25013_n)++;
	};
	return _25013_n;;
}





std::ostream &operator<<(std::ostream &_Stream, _1b2740d0e_decimal _Src) {
	_Stream << "decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b2753508_Const> static__1b2753948_NewI64(jule::I64 _1622_x) {
	return jule::new_ptr<_1b2753508_Const>(_1b2753508_Const{._field_data=jule::Any(_1622_x, &__jule_any_type1)});;
}



inline jule::Ptr<_1b2753508_Const> static__1b2753c12_NewU64(jule::U64 _1922_x) {
	return jule::new_ptr<_1b2753508_Const>(_1b2753508_Const{._field_data=jule::Any(_1922_x, &__jule_any_type2)});;
}



inline jule::Ptr<_1b2753508_Const> static__1b2753ecb_NewBool(jule::Bool _2223_x) {
	return jule::new_ptr<_1b2753508_Const>(_1b2753508_Const{._field_data=jule::Any(_2223_x, &__jule_any_type3)});;
}



inline jule::Ptr<_1b2753508_Const> static__1b2754295_NewStr(jule::Str _2522_x) {
	return jule::new_ptr<_1b2753508_Const>(_1b2753508_Const{._field_data=jule::Any(_2522_x, &__jule_any_type4)});;
}



inline jule::Ptr<_1b2753508_Const> static__1b275455e_NewF64(jule::F64 _2822_x) {
	return jule::new_ptr<_1b2753508_Const>(_1b2753508_Const{._field_data=jule::Any(_2822_x, &__jule_any_type5)});;
}



inline jule::Ptr<_1b2753508_Const> static__1b275476d_NewNil(void) {
	return jule::new_ptr<_1b2753508_Const>(_1b2753508_Const{._field_data=nullptr});;
}



inline jule::I64 _1b2754dcd_ReadI64(_1b2753508_Const* _self_) {
	if ((!(_1b27574c9_IsI64(_self_)))) {
		return 0LL;;
	};
	return (*(_self_))._field_data.cast<jule::I64>(&__jule_any_type1);;
}



inline jule::U64 _1b2755164_ReadU64(_1b2753508_Const* _self_) {
	if ((!(_1b2757760_IsU64(_self_)))) {
		return 0LLU;;
	};
	return (*(_self_))._field_data.cast<jule::U64>(&__jule_any_type2);;
}



inline jule::Bool _1b27553ea_ReadBool(_1b2753508_Const* _self_) {
	if ((!(_1b27579e6_IsBool(_self_)))) {
		return false;;
	};
	return (*(_self_))._field_data.cast<jule::Bool>(&__jule_any_type3);;
}



inline jule::Str _1b2755681_ReadStr(_1b2753508_Const* _self_) {
	if ((!(_1b2757c7c_IsStr(_self_)))) {
		return jule::Str();;
	};
	return (*(_self_))._field_data.cast<jule::Str>(&__jule_any_type4);;
}



inline jule::F64 _1b2755917_ReadF64(_1b2753508_Const* _self_) {
	if ((!(_1b2758013_IsF64(_self_)))) {
		return 0LL;;
	};
	return (*(_self_))._field_data.cast<jule::F64>(&__jule_any_type5);;
}



inline jule::I64 _1b2755b9d_AsI64(_1b2753508_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1aa78c02c:;
			{
				return (*(_self_))._field_data.unsafe_cast<jule::I64>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1aa78bceb:;
			{
				return static_cast<jule::I64>((*(_self_))._field_data.unsafe_cast<jule::U64>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1aa78bd62:;
			{
				return static_cast<jule::I64>((*(_self_))._field_data.unsafe_cast<jule::F64>());;
			}
		}
		else {
			_case_begin_1aa78b89a:;
			{
				return 0LL;;
			}
		}
		_match_end_1aa78b702:;
	};
}



inline jule::U64 _1b2755e34_AsU64(_1b2753508_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1aa78c7be:;
			{
				return (*(_self_))._field_data.unsafe_cast<jule::U64>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1aa78d5e4:;
			{
				return static_cast<jule::U64>((*(_self_))._field_data.unsafe_cast<jule::I64>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1aa78d65a:;
			{
				return static_cast<jule::U64>((*(_self_))._field_data.unsafe_cast<jule::F64>());;
			}
		}
		else {
			_case_begin_1aa78ba76:;
			{
				return 0LLU;;
			}
		}
		_match_end_1aa78ba21:;
	};
}



inline jule::F64 _1b27561ba_AsF64(_1b2753508_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1aa79011d:;
			{
				return (*(_self_))._field_data.unsafe_cast<jule::F64>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1aa78e0b7:;
			{
				return static_cast<jule::F64>((*(_self_))._field_data.unsafe_cast<jule::I64>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1aa78eddc:;
			{
				return static_cast<jule::F64>((*(_self_))._field_data.unsafe_cast<jule::U64>());;
			}
		}
		else {
			_case_begin_1aa78d43a:;
			{
				return 0LL;;
			}
		}
		_match_end_1aa78d3d5:;
	};
}



inline void _1b2756473_SetI64(_1b2753508_Const* _self_, jule::I64 _13825_x) {
	(*(_self_))._field_data=jule::Any(_13825_x, &__jule_any_type1);
}



inline void _1b275672b_SetU64(_1b2753508_Const* _self_, jule::U64 _14125_x) {
	(*(_self_))._field_data=jule::Any(_14125_x, &__jule_any_type2);
}



inline void _1b27569d4_SetBool(_1b2753508_Const* _self_, jule::Bool _14426_x) {
	(*(_self_))._field_data=jule::Any(_14426_x, &__jule_any_type3);
}



inline void _1b2756c8c_SetStr(_1b2753508_Const* _self_, jule::Str _14725_x) {
	(*(_self_))._field_data=jule::Any(_14725_x, &__jule_any_type4);
}



inline void _1b2757045_SetF64(_1b2753508_Const* _self_, jule::F64 _15025_x) {
	(*(_self_))._field_data=jule::Any(_15025_x, &__jule_any_type5);
}



inline jule::Bool _1b27574c9_IsI64(_1b2753508_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1aa793990:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1aa793c04:;
			{
				return false;;
			}
		}
		_match_end_1aa793b9e:;
	};
}



inline jule::Bool _1b2757760_IsU64(_1b2753508_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1aa794650:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1aa793e57:;
			{
				return false;;
			}
		}
		_match_end_1aa793e02:;
	};
}



inline jule::Bool _1b27579e6_IsBool(_1b2753508_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1aa79509b:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1aa794919:;
			{
				return false;;
			}
		}
		_match_end_1aa7948b4:;
	};
}



inline jule::Bool _1b2757c7c_IsStr(_1b2753508_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1aa7959e7:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1aa795365:;
			{
				return false;;
			}
		}
		_match_end_1aa795310:;
	};
}



inline jule::Bool _1b2758013_IsF64(_1b2753508_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1aa796443:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1aa795cb1:;
			{
				return false;;
			}
		}
		_match_end_1aa795c5b:;
	};
}



inline jule::Bool _1b2758299_IsNil(_1b2753508_Const* _self_) {
	return ((*(_self_))._field_data == nullptr);;
}



inline jule::Bool _1b275892b_And(_1b2753508_Const* _self_, _1b2753508_Const _23818_x) {
	{
		
		if ((_1b27579e6_IsBool(_self_) && _1b27579e6_IsBool(&_23818_x))) {
			_case_begin_1aa79a6ab:;
			{
				return (_1b27553ea_ReadBool(_self_) && _1b27553ea_ReadBool(&_23818_x));;
			}
		}
		else {
			_case_begin_1aa79a645:;
			{
				return false;;
			}
		}
		_match_end_1aa79a25a:;
	};
}



inline jule::Bool _1b2758c6c_Or(_1b2753508_Const* _self_, _1b2753508_Const _24917_x) {
	{
		
		if ((_1b27579e6_IsBool(_self_) && _1b27579e6_IsBool(&_24917_x))) {
			_case_begin_1aa79b976:;
			{
				return (_1b27553ea_ReadBool(_self_) || _1b27553ea_ReadBool(&_24917_x));;
			}
		}
		else {
			_case_begin_1aa79b15c:;
			{
				return false;;
			}
		}
		_match_end_1aa79b080:;
	};
}



inline jule::Bool _1b27590ad_Eq(_1b2753508_Const* _self_, _1b2753508_Const _26017_x) {
	{
		
		if (_1b2758299_IsNil(_self_)) {
			_case_begin_1aa79cca7:;
			{
				return _1b2758299_IsNil(&_26017_x);;
			}
		}
		else if (_1b27579e6_IsBool(_self_)) {
			_case_begin_1aa79cd1d:;
			{
				return (_1b27579e6_IsBool(&_26017_x) && (_1b27553ea_ReadBool(_self_) == _1b27553ea_ReadBool(&_26017_x)));;
			}
		}
		else if (_1b2757c7c_IsStr(_self_)) {
			_case_begin_1aa79cd84:;
			{
				return (_1b2757c7c_IsStr(&_26017_x) && (_1b2755681_ReadStr(_self_) == _1b2755681_ReadStr(&_26017_x)));;
			}
		}
		else if (_1b27574c9_IsI64(_self_)) {
			_case_begin_1aa79ce0b:;
			{
				return (_1b2754dcd_ReadI64(_self_) == _1b2755b9d_AsI64(&_26017_x));;
			}
		}
		else if (_1b2757760_IsU64(_self_)) {
			_case_begin_1aa79ce83:;
			{
				return (_1b2755164_ReadU64(_self_) == _1b2755e34_AsU64(&_26017_x));;
			}
		}
		else if (_1b2758013_IsF64(_self_)) {
			_case_begin_1aa79d109:;
			{
				return (_1b2755917_ReadF64(_self_) == _1b27561ba_AsF64(&_26017_x));;
			}
		}
		else {
			_case_begin_1aa79c416:;
			{
				return false;;
			}
		}
		_match_end_1aa79c339:;
	};
}



inline jule::Bool _1b27593ee_Lt(_1b2753508_Const* _self_, _1b2753508_Const _28717_x) {
	{
		
		if (_1b2757c7c_IsStr(_self_)) {
			_case_begin_1aa7a1948:;
			{
				return (_1b2757c7c_IsStr(&_28717_x) && (_1b2755681_ReadStr(_self_) < _1b2755681_ReadStr(&_28717_x)));;
			}
		}
		else if (_1b27574c9_IsI64(_self_)) {
			_case_begin_1aa7a19ae:;
			{
				return (_1b2754dcd_ReadI64(_self_) < _1b2755b9d_AsI64(&_28717_x));;
			}
		}
		else if (_1b2757760_IsU64(_self_)) {
			_case_begin_1aa7a1a25:;
			{
				return (_1b2755164_ReadU64(_self_) < _1b2755e34_AsU64(&_28717_x));;
			}
		}
		else if (_1b2758013_IsF64(_self_)) {
			_case_begin_1aa7a1a9c:;
			{
				return (_1b2755917_ReadF64(_self_) < _1b27561ba_AsF64(&_28717_x));;
			}
		}
		else {
			_case_begin_1aa79d736:;
			{
				return false;;
			}
		}
		_match_end_1aa79d66a:;
	};
}



inline jule::Bool _1b2759740_LtEq(_1b2753508_Const* _self_, _1b2753508_Const _31019_x) {
	{
		
		if (_1b2757c7c_IsStr(_self_)) {
			_case_begin_1aa7a45d8:;
			{
				return (_1b2757c7c_IsStr(&_31019_x) && (_1b2755681_ReadStr(_self_) <= _1b2755681_ReadStr(&_31019_x)));;
			}
		}
		else if (_1b27574c9_IsI64(_self_)) {
			_case_begin_1aa7a464e:;
			{
				return (_1b2754dcd_ReadI64(_self_) <= _1b2755b9d_AsI64(&_31019_x));;
			}
		}
		else if (_1b2757760_IsU64(_self_)) {
			_case_begin_1aa7a46b5:;
			{
				return (_1b2755164_ReadU64(_self_) <= _1b2755e34_AsU64(&_31019_x));;
			}
		}
		else if (_1b2758013_IsF64(_self_)) {
			_case_begin_1aa7a473c:;
			{
				return (_1b2755917_ReadF64(_self_) <= _1b27561ba_AsF64(&_31019_x));;
			}
		}
		else {
			_case_begin_1aa7a22c8:;
			{
				return false;;
			}
		}
		_match_end_1aa7a220c:;
	};
}



inline jule::Bool _1b2759a81_Gt(_1b2753508_Const* _self_, _1b2753508_Const _33317_x) {
	{
		
		if (_1b2757c7c_IsStr(_self_)) {
			_case_begin_1aa7a7278:;
			{
				return (_1b2757c7c_IsStr(&_33317_x) && (_1b2755681_ReadStr(_self_) > _1b2755681_ReadStr(&_33317_x)));;
			}
		}
		else if (_1b27574c9_IsI64(_self_)) {
			_case_begin_1aa7a72de:;
			{
				return (_1b2754dcd_ReadI64(_self_) > _1b2755b9d_AsI64(&_33317_x));;
			}
		}
		else if (_1b2757760_IsU64(_self_)) {
			_case_begin_1aa7a7355:;
			{
				return (_1b2755164_ReadU64(_self_) > _1b2755e34_AsU64(&_33317_x));;
			}
		}
		else if (_1b2758013_IsF64(_self_)) {
			_case_begin_1aa7a73cc:;
			{
				return (_1b2755917_ReadF64(_self_) > _1b27561ba_AsF64(&_33317_x));;
			}
		}
		else {
			_case_begin_1aa7a4e68:;
			{
				return false;;
			}
		}
		_match_end_1aa7a4d9c:;
	};
}



inline jule::Bool _1b2759dc2_GtEq(_1b2753508_Const* _self_, _1b2753508_Const _35619_x) {
	{
		
		if (_1b2757c7c_IsStr(_self_)) {
			_case_begin_1aa7a9e18:;
			{
				return (_1b2757c7c_IsStr(&_35619_x) && (_1b2755681_ReadStr(_self_) >= _1b2755681_ReadStr(&_35619_x)));;
			}
		}
		else if (_1b27574c9_IsI64(_self_)) {
			_case_begin_1aa7a9e7e:;
			{
				return (_1b2754dcd_ReadI64(_self_) >= _1b2755b9d_AsI64(&_35619_x));;
			}
		}
		else if (_1b2757760_IsU64(_self_)) {
			_case_begin_1aa7a9ee5:;
			{
				return (_1b2755164_ReadU64(_self_) >= _1b2755e34_AsU64(&_35619_x));;
			}
		}
		else if (_1b2758013_IsF64(_self_)) {
			_case_begin_1aa7aa06c:;
			{
				return (_1b2755917_ReadF64(_self_) >= _1b27561ba_AsF64(&_35619_x));;
			}
		}
		else {
			_case_begin_1aa7a7b08:;
			{
				return false;;
			}
		}
		_match_end_1aa7a7a3c:;
	};
}



inline jule::Bool _1b275a213_Add(_1b2753508_Const* _self_, _1b2753508_Const _37722_x) {
	{
		
		if (_1b2757c7c_IsStr(_self_)) {
			_case_begin_1aa7acaa8:;
			{
				if ((!(_1b2757c7c_IsStr(&_37722_x)))) {
					return false;;
				};
				_1b2756c8c_SetStr(_self_, (_1b2755681_ReadStr(_self_) + _1b2755681_ReadStr(&_37722_x)));
			}
		}
		else if (_1b2758013_IsF64(_self_)) {
			_case_begin_1aa7acb1e:;
			{
				_1b2757045_SetF64(_self_, (_1b2755917_ReadF64(_self_) + _1b27561ba_AsF64(&_37722_x)));
			}
		}
		else if (_1b27574c9_IsI64(_self_)) {
			_case_begin_1aa7acb85:;
			{
				if (_1b2758013_IsF64(&_37722_x)) {
					_1b2757045_SetF64(_self_, (_1b27561ba_AsF64(_self_) + _1b2755917_ReadF64(&_37722_x)));
				} else {
					_1b2756473_SetI64(_self_, (_1b2754dcd_ReadI64(_self_) + _1b2755b9d_AsI64(&_37722_x)));
				};
			}
		}
		else if (_1b2757760_IsU64(_self_)) {
			_case_begin_1aa7acc0c:;
			{
				if (_1b2758013_IsF64(&_37722_x)) {
					_1b2757045_SetF64(_self_, (_1b27561ba_AsF64(_self_) + _1b2755917_ReadF64(&_37722_x)));
				} else {
					_1b275672b_SetU64(_self_, (_1b2755164_ReadU64(_self_) + _1b2755e34_AsU64(&_37722_x)));
				};
			}
		}
		else {
			_case_begin_1aa7aa798:;
			{
				return false;;
			}
		}
		_match_end_1aa7aa6cc:;
	};
	return true;;
}



inline jule::Bool _1b275a554_Sub(_1b2753508_Const* _self_, _1b2753508_Const _40622_x) {
	{
		
		if (_1b2758013_IsF64(_self_)) {
			_case_begin_1aa7b27c2:;
			{
				_1b2757045_SetF64(_self_, (_1b2755917_ReadF64(_self_) - _1b27561ba_AsF64(&_40622_x)));
			}
		}
		else if (_1b27574c9_IsI64(_self_)) {
			_case_begin_1aa7b286b:;
			{
				if (_1b2758013_IsF64(&_40622_x)) {
					_1b2757045_SetF64(_self_, (_1b27561ba_AsF64(_self_) - _1b2755917_ReadF64(&_40622_x)));
				} else {
					_1b2756473_SetI64(_self_, (_1b2754dcd_ReadI64(_self_) - _1b2755b9d_AsI64(&_40622_x)));
				};
			}
		}
		else if (_1b2757760_IsU64(_self_)) {
			_case_begin_1aa7b28e3:;
			{
				if (_1b2758013_IsF64(&_40622_x)) {
					_1b2757045_SetF64(_self_, (_1b27561ba_AsF64(_self_) - _1b2755917_ReadF64(&_40622_x)));
				} else {
					_1b275672b_SetU64(_self_, (_1b2755164_ReadU64(_self_) - _1b2755e34_AsU64(&_40622_x)));
				};
			}
		}
		else {
			_case_begin_1aa7b201e:;
			{
				return false;;
			}
		}
		_match_end_1aa7b1e31:;
	};
	return true;;
}



inline jule::Bool _1b275a895_Mul(_1b2753508_Const* _self_, _1b2753508_Const _43022_x) {
	{
		
		if (_1b2758013_IsF64(_self_)) {
			_case_begin_1aa7b662d:;
			{
				_1b2757045_SetF64(_self_, (_1b2755917_ReadF64(_self_) * _1b27561ba_AsF64(&_43022_x)));
			}
		}
		else if (_1b27574c9_IsI64(_self_)) {
			_case_begin_1aa7b66c7:;
			{
				if (_1b2758013_IsF64(&_43022_x)) {
					_1b2757045_SetF64(_self_, (_1b27561ba_AsF64(_self_) * _1b2755917_ReadF64(&_43022_x)));
				} else {
					_1b2756473_SetI64(_self_, (_1b2754dcd_ReadI64(_self_) * _1b2755b9d_AsI64(&_43022_x)));
				};
			}
		}
		else if (_1b2757760_IsU64(_self_)) {
			_case_begin_1aa7b674e:;
			{
				if (_1b2758013_IsF64(&_43022_x)) {
					_1b2757045_SetF64(_self_, (_1b27561ba_AsF64(_self_) * _1b2755917_ReadF64(&_43022_x)));
				} else {
					_1b275672b_SetU64(_self_, (_1b2755164_ReadU64(_self_) * _1b2755e34_AsU64(&_43022_x)));
				};
			}
		}
		else {
			_case_begin_1aa7b5c37:;
			{
				return false;;
			}
		}
		_match_end_1aa7b5b49:;
	};
	return true;;
}



inline jule::Bool _1b275abd6_Div(_1b2753508_Const* _self_, _1b2753508_Const _45822_x) {
	{
		
		if (_1b2758013_IsF64(_self_)) {
			_case_begin_1aa7ba489:;
			{
				jule::F64 _46113_l = _1b27561ba_AsF64(&_45822_x);;
				if ((_46113_l == 0LL)) {
					return false;;
				};
				_1b2757045_SetF64(_self_, jule::div(_1b2755917_ReadF64(_self_),_46113_l));
			}
		}
		else if (_1b27574c9_IsI64(_self_)) {
			_case_begin_1aa7ba533:;
			{
				jule::F64 _46713_l = _1b27561ba_AsF64(&_45822_x);;
				if ((_46713_l == 0LL)) {
					return false;;
				};
				_1b2757045_SetF64(_self_, jule::div(_1b27561ba_AsF64(_self_),_46713_l));
			}
		}
		else if (_1b2757760_IsU64(_self_)) {
			_case_begin_1aa7ba5aa:;
			{
				jule::F64 _47313_l = _1b27561ba_AsF64(&_45822_x);;
				if ((_47313_l == 0LL)) {
					return false;;
				};
				_1b2757045_SetF64(_self_, jule::div(_1b27561ba_AsF64(_self_),_47313_l));
			}
		}
		else {
			_case_begin_1aa7b9a93:;
			{
				return false;;
			}
		}
		_match_end_1aa7b99a5:;
	};
	return true;;
}



inline jule::Bool _1b275b027_Mod(_1b2753508_Const* _self_, _1b2753508_Const _48722_x) {
	{
		
		if (_1b27574c9_IsI64(_self_)) {
			_case_begin_1aa7be46b:;
			{
				jule::I64 _49013_l = _1b2755b9d_AsI64(&_48722_x);;
				if ((_49013_l == 0LL)) {
					return false;;
				};
				_1b2756473_SetI64(_self_, jule::mod(_1b2754dcd_ReadI64(_self_),_49013_l));
			}
		}
		else if (_1b2757760_IsU64(_self_)) {
			_case_begin_1aa7be867:;
			{
				jule::U64 _49613_l = _1b2755e34_AsU64(&_48722_x);;
				if ((_49613_l == 0LLU)) {
					return false;;
				};
				_1b275672b_SetU64(_self_, jule::mod(_1b2755164_ReadU64(_self_),_49613_l));
			}
		}
		else {
			_case_begin_1aa7be3e4:;
			{
				return false;;
			}
		}
		_match_end_1aa7be2e5:;
	};
	return true;;
}



inline jule::Bool _1b275b368_BitwiseAnd(_1b2753508_Const* _self_, _1b2753508_Const _50929_x) {
	{
		
		if (_1b27574c9_IsI64(_self_)) {
			_case_begin_1aa7c2271:;
			{
				_1b2756473_SetI64(_self_, (_1b2754dcd_ReadI64(_self_) & _1b2755b9d_AsI64(&_50929_x)));
			}
		}
		else if (_1b2757760_IsU64(_self_)) {
			_case_begin_1aa7c266c:;
			{
				_1b275672b_SetU64(_self_, (_1b2755164_ReadU64(_self_) & _1b2755e34_AsU64(&_50929_x)));
			}
		}
		else {
			_case_begin_1aa7c21e9:;
			{
				return false;;
			}
		}
		_match_end_1aa7c20ea:;
	};
	return true;;
}



inline jule::Bool _1b275b6a9_BitwiseOr(_1b2753508_Const* _self_, _1b2753508_Const _52328_x) {
	{
		
		if (_1b27574c9_IsI64(_self_)) {
			_case_begin_1aa7c3eed:;
			{
				_1b2756473_SetI64(_self_, (_1b2754dcd_ReadI64(_self_) | _1b2755b9d_AsI64(&_52328_x)));
			}
		}
		else if (_1b2757760_IsU64(_self_)) {
			_case_begin_1aa7c43e9:;
			{
				_1b275672b_SetU64(_self_, (_1b2755164_ReadU64(_self_) | _1b2755e34_AsU64(&_52328_x)));
			}
		}
		else {
			_case_begin_1aa7c3e76:;
			{
				return false;;
			}
		}
		_match_end_1aa7c3d77:;
	};
	return true;;
}



inline jule::Bool _1b275b9ea_Xor(_1b2753508_Const* _self_, _1b2753508_Const _53722_x) {
	{
		
		if (_1b27574c9_IsI64(_self_)) {
			_case_begin_1aa7c5c7a:;
			{
				_1b2756473_SetI64(_self_, (_1b2754dcd_ReadI64(_self_) ^ _1b2755b9d_AsI64(&_53722_x)));
			}
		}
		else if (_1b2757760_IsU64(_self_)) {
			_case_begin_1aa7c6176:;
			{
				_1b275672b_SetU64(_self_, (_1b2755164_ReadU64(_self_) ^ _1b2755e34_AsU64(&_53722_x)));
			}
		}
		else {
			_case_begin_1aa7c5c03:;
			{
				return false;;
			}
		}
		_match_end_1aa7c5b04:;
	};
	return true;;
}



inline jule::Bool _1b275bd3b_Lshift(_1b2753508_Const* _self_, _1b2753508_Const _55125_x) {
	{
		
		if (_1b27574c9_IsI64(_self_)) {
			_case_begin_1aa7c7a07:;
			{
				jule::I64 _55413_l = _1b2755b9d_AsI64(_self_);;
				if ((_55413_l < 0LL)) {
					jule::U64 _55617_r = _1b2755e34_AsU64(&_55125_x);;
					_1b2756473_SetI64(_self_, (_55413_l << _55617_r));
				} else {
					_1b275c523_lshiftUnsig(_self_, &(_55125_x));
				};
			}
		}
		else if (_1b2757760_IsU64(_self_)) {
			_case_begin_1aa7c7e03:;
			{
				_1b275c523_lshiftUnsig(_self_, &(_55125_x));
			}
		}
		else {
			_case_begin_1aa7c7980:;
			{
				return false;;
			}
		}
		_match_end_1aa7c7881:;
	};
	return true;;
}



inline jule::Bool _1b275c17c_Rshift(_1b2753508_Const* _self_, _1b2753508_Const _57125_x) {
	{
		
		if (_1b27574c9_IsI64(_self_)) {
			_case_begin_1aa7ca026:;
			{
				jule::I64 _57413_l = _1b2755b9d_AsI64(_self_);;
				if ((_57413_l < 0LL)) {
					jule::U64 _57617_r = _1b2755e34_AsU64(&_57125_x);;
					_1b2756473_SetI64(_self_, (_57413_l >> _57617_r));
				} else {
					_1b275c853_rshiftUnsig(_self_, &(_57125_x));
				};
			}
		}
		else if (_1b2757760_IsU64(_self_)) {
			_case_begin_1aa7ca422:;
			{
				_1b275c853_rshiftUnsig(_self_, &(_57125_x));
			}
		}
		else {
			_case_begin_1aa7c9e9e:;
			{
				return false;;
			}
		}
		_match_end_1aa7c9da0:;
	};
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _1b2753508_Const _Src) {
	_Stream << "Const{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _1b4ad5a86_Prec(_1b4ad5712_Token* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(64LLU) || _match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(57LLU) || _match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1aa83b032:;
			{
				return 5LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1aa83aa59:;
			{
				return 4LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(71LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(53LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1aa83aac0:;
			{
				return 3LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1aa83b098:;
			{
				return 2LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1aa83b120:;
			{
				return 1LLU;;
			}
		}
		else {
			_case_begin_1aa83a570:;
			{
				return 0LLU;;
			}
		}
		_match_end_1aa83a97c:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1b4ad5712_Token _Src) {
	_Stream << "Token{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Id:" << _Src._field_Id;
	_Stream << "}";
	return _Stream;
}



inline void _1b4adb3b6_Fill(_1b4adae98_File* _self_, jule::Slice<jule::U8> _1727_data) {
	(*(_self_))._field_Data=_1727_data;
}



inline jule::Str _1b4adb64c_Dir(_1b4adae98_File* _self_) {
	return _1cb1e0c6d_Dir((*(_self_))._field_Path);;
}



inline jule::Str _1b4adb8d3_Name(_1b4adae98_File* _self_) {
	return _1cb1e0894_Base((*(_self_))._field_Path);;
}



inline jule::Str _1b4adbeaa_GetRow(_1b4adae98_File* _self_, jule::I64 _3821_row) {
	jule::I64 _3913_n = 0LL;;
	jule::I64 _4013_lineStart = 0LL;;
	jule::I64 _4113_i = 0LL;;
	for (; (_4113_i < (*(_self_))._field_Data.len()); (_4113_i)++) {
		{
			if (((*(_self_))._field_Data[_4113_i] != '\n')) {
				goto _iter_next_1aa841796;
			};
			(_3913_n)++;
			if ((_3913_n == _3821_row)) {
				return static_cast<jule::Str>((*(_self_))._field_Data.slice(_4013_lineStart, _4113_i));;
			};
			_4013_lineStart=(_4113_i + 1LL);
		}
	_iter_next_1aa841796:;
	}
	_iter_end_1aa841796:;;
	return jule::Str();;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4adae98_File _Src) {
	_Stream << "File{";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Data:" << _Src._field_Data << ", ";
	_Stream << "Tokens:" << _Src._field_Tokens;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4add0ee_kindPair _Src) {
	_Stream << "kindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline void _1b4ae4666_pushErr(_1b4ae40d3_lex* _self_, jule::Str _44726_fmt, jule::Slice<jule::Any> _44739_args) {
	{ jule::Slice<_1cb285120_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1b4addd9c_makeErr((*(_self_))._field_row, (*(_self_))._field_column, &((*(_self_))._field_file), _44726_fmt, _44739_args)); };
}



inline void _1b4ae4bc7_lex(_1b4ae40d3_lex* _self_) {
	(*(_self_))._field_errors=nullptr;
	_1b4ae6de9_newLine(_self_);
	while (((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len())) {
		{
			jule::Ptr<_1b4ad5712_Token> _46217_token = _1b4ae83d4_token(_self_);;
			if (((*(_46217_token))._field_Id != static_cast<jule::U64>(0LLU))) {
				{ jule::Slice<jule::Ptr<_1b4ad5712_Token>> &__jule_push_dest = (*(_self_))._field_tokens; __jule_push_dest.push(_46217_token); };
			};
		}
	_iter_next_1aa8708a2:;
	}
	_iter_end_1aa8708a2:;;
}



inline jule::Str _1b4ae5018_id(_1b4ae40d3_lex* _self_, jule::Slice<jule::U8>* _47122_ln) {
	if (((*(_47122_ln)).len() == 0LL)) {
		return jule::Str();;
	};
	jule::I32 _4759_r;
	jule::I64 _47516_i;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1cb179a2b_DecodeRune((*(_47122_ln)));
		_4759_r = __jule_assign_result.__jule_result_arg0;
		_47516_i = __jule_assign_result.__jule_result_arg1;
	});
	if (((_4759_r != '_') && (!(_1b4ad8e41_IsLetter(_4759_r))))) {
		return jule::Str();;
	};
	while ((_47516_i < (*(_47122_ln)).len())) {
		{
			jule::I32 _48113_pr;
			jule::I64 _48117_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1cb179a2b_DecodeRune((*(_47122_ln)).slice(_47516_i));
				_48113_pr = __jule_assign_result.__jule_result_arg0;
				_48117_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((((_48113_pr != '_') && (!(_1b4ad93b4_IsDecimal(static_cast<jule::U8>(_48113_pr))))) && (!(_1b4ad8e41_IsLetter(_48113_pr))))) {
				(*(_self_))._field_pos+=_47516_i;
				return static_cast<jule::Str>((*(_47122_ln)).slice(0LL, _47516_i));;
			};
			_47516_i+=_48117_n;
		}
	_iter_next_1aa873cb2:;
	}
	_iter_end_1aa873cb2:;;
	(*(_self_))._field_pos+=(*(_47122_ln)).len();
	return static_cast<jule::Str>((*(_47122_ln)));;
}



inline jule::Slice<jule::U8> _1b4ae529e_resume(_1b4ae40d3_lex* _self_) {
	jule::I64 _49613_i = (*(_self_))._field_pos;;
	for (; (_49613_i < (*((*(_self_))._field_file))._field_Data.len()); (_49613_i)++) {
		{
			jule::I32 _49813_r = static_cast<jule::I32>((*(*(_self_))._field_file.alloc)._field_Data[_49613_i]);;
			if (_1b4ad8946_IsSpace(_49813_r)) {
				;
				((*(_self_))._field_pos)++;
				{
					auto &_match_expr{ _49813_r };
					
					if (_match_expr == '\n') {
						_case_begin_1aa8784ae:;
						{
							_1b4ae6de9_newLine(_self_);
						}
					}
					else if (_match_expr == '\t') {
						_case_begin_1aa87813a:;
						{
							(*(_self_))._field_column+=8LL;
						}
					}
					else {
						_case_begin_1aa877cd8:;
						{
							((*(_self_))._field_column)++;
						}
					}
					_match_end_1aa87802a:;
				};
				goto _iter_next_1aa876710;
			};
			jule::I64 _51317_j = _49613_i;;
			for (; (_51317_j < (*(*(_self_))._field_file.alloc)._field_Data.len()); (_51317_j)++) {
				{
					if (((*(*(_self_))._field_file.alloc)._field_Data[_51317_j] == '\n')) {
						goto _iter_end_1aa876ce8;
					};
				}
			_iter_next_1aa876ce8:;
			}
			_iter_end_1aa876ce8:;;
			return (*(*(_self_))._field_file.alloc)._field_Data.slice(_49613_i, _51317_j);;
		}
	_iter_next_1aa876710:;
	}
	_iter_end_1aa876710:;;
	return nullptr;;
}



inline void _1b4ae5557_lexLineComment(_1b4ae40d3_lex* _self_, jule::Ptr<_1b4ad5712_Token>* _52438_token) {
	jule::I64 _5259_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _52813_r = (*(*(_self_))._field_file.alloc)._field_Data[(*(_self_))._field_pos];;
			if (((_52813_r == '\n') || (_52813_r == '\r'))) {
				goto _iter_end_1aa87b050;
			};
		}
	_iter_next_1aa87b050:;
	}
	_iter_end_1aa87b050:;;
	if ((((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
		(*((*(_52438_token))))._field_Id=static_cast<jule::U64>(15LLU);
		(*((*(_52438_token))))._field_Kind=static_cast<jule::Str>((*(*(_self_))._field_file.alloc)._field_Data.slice(_5259_start, (*(_self_))._field_pos));
	};
}



inline void _1b4ae5810_lexRangeComment(_1b4ae40d3_lex* _self_, jule::Ptr<_1b4ad5712_Token>* _53939_token) {
	jule::I64 _5409_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _54313_r = (*(*(_self_))._field_file.alloc)._field_Data[(*(_self_))._field_pos];;
			if ((_54313_r == '\r')) {
				goto _iter_next_1aa87e6b3;
			};
			if ((_54313_r == '\n')) {
				_1b4ae6de9_newLine(_self_);
				goto _iter_next_1aa87e6b3;
			};
			(*(_self_))._field_column+=1LL;
			if ((((((*(_self_))._field_pos + 1LL) < (*(*(_self_))._field_file.alloc)._field_Data.len()) && (_54313_r == '*')) && ((*(*(_self_))._field_file.alloc)._field_Data[((*(_self_))._field_pos + 1LL)] == '/'))) {
				(*(_self_))._field_column+=2LL;
				(*(_self_))._field_pos+=2LL;
				if ((((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
					(*((*(_53939_token))))._field_Id=static_cast<jule::U64>(15LLU);
					(*((*(_53939_token))))._field_Kind=static_cast<jule::Str>((*(*(_self_))._field_file.alloc)._field_Data.slice(_5409_start, (*(_self_))._field_pos));
				};
				return;;
			};
		}
	_iter_next_1aa87e6b3:;
	}
	_iter_end_1aa87e6b3:;;
	_1b4ae4666_pushErr(_self_, jule::Str::lit("missing block comment close", 27), jule::Slice<jule::Any>());
}



inline jule::Str _1b4ae5b51_num(_1b4ae40d3_lex* _self_, jule::Slice<jule::U8>* _56723_txt) {
	jule::Str __jule_func_result;
	if (((*(_56723_txt))[0LL] == '_')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result=_1b4ae28ea_hexNum(_56723_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1aa8870e4;
	};
	__jule_func_result=_1b4ae271e_octalNum(_56723_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1aa8870e4;
	};
	__jule_func_result=_1b4ae0eae_binaryNum(_56723_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1aa8870e4;
	};
	__jule_func_result=_1b4ae0be5_commonNum(_56723_txt);
	_julec_label_1aa8870e4:;
	(*(_self_))._field_pos+=__jule_func_result.len();
	return __jule_func_result;;
}



inline jule::Str _1b4ae5e92_escapeSeq(_1b4ae40d3_lex* _self_, jule::Slice<jule::U8>* _58929_txt) {
	jule::Str _59013_seq = jule::Str();;
	if (((*(_58929_txt)).len() < 2LL)) {
		goto _julec_label_1aa88ad51;
	};
	{
		auto &_match_expr{ (*(_58929_txt))[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_1aa888e81:;
			{
				(*(_self_))._field_pos+=2LL;
				return static_cast<jule::Str>((*(_58929_txt)).slice(0LL, 2LL));;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1aa8890e6:;
			{
				_59013_seq=_1b4ae3016_bigUnicodePointEscape(_58929_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_1aa888bb7:;
			{
				_59013_seq=_1b4ae32d0_littleUnicodePointEscape(_58929_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1aa888c2d:;
			{
				_59013_seq=_1b4ae3599_hexByteEscape(_58929_txt);
			}
		}
		else {
			_case_begin_1aa888612:;
			{
				_59013_seq=_1b4ae3863_byteEscape(_58929_txt);
			}
		}
		_match_end_1aa888a52:;
	};
	_julec_label_1aa88ad51:;
	if ((_59013_seq).empty()) {
		((*(_self_))._field_pos)++;
		_1b4ae4666_pushErr(_self_, jule::Str::lit("invalid escape sequence", 23), jule::Slice<jule::Any>());
		return jule::Str();;
	};
	(*(_self_))._field_pos+=_59013_seq.len();
	return _59013_seq;;
}



inline jule::Str _1b4ae638d_getRune(_1b4ae40d3_lex* _self_, jule::Slice<jule::U8>* _61927_txt, jule::Bool _61940_raw) {
	if (((!(_61940_raw)) && ((*(_61927_txt))[0LL] == '\\'))) {
		return _1b4ae5e92_escapeSeq(_self_, _61927_txt);;
	};
	jule::I32 _6239_r;
	jule::I64 _62312_n;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1cb179a2b_DecodeRune((*(_61927_txt)));
		_6239_r = __jule_assign_result.__jule_result_arg0;
		_62312_n = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_pos+=_62312_n;
	return jule::Str::from_rune(_6239_r);;
}



inline jule::Str _1b4ae66ce_lexRune(_1b4ae40d3_lex* _self_, jule::Slice<jule::U8>* _62827_txt) {
	_1cb1d27a9_StrBuilder _62913_run = static__1cb1d2a73_New(8LL);;
	_1cb1db692_WriteByte(&_62913_run, '\'');
	((*(_self_))._field_column)++;
	jule::I64 _63213_n = 0LL;;
	jule::I64 _63313_i = 1LL;;
	for (; (_63313_i < (*(_62827_txt)).len()); (_63313_i)++) {
		{
			if (((*(_62827_txt))[_63313_i] == '\r')) {
				goto _iter_next_1aa89022e;
			};
			if (((*(_62827_txt))[_63313_i] == '\n')) {
				_1b4ae4666_pushErr(_self_, jule::Str::lit("rune is not finished", 20), jule::Slice<jule::Any>());
				((*(_self_))._field_pos)++;
				_1b4ae6de9_newLine(_self_);
				return jule::Str();;
			};
			jule::Slice<jule::U8> _64513_part = (*(_62827_txt)).slice(_63313_i);;
			jule::Str _64613_r = _1b4ae638d_getRune(_self_, &(_64513_part), false);;
			_1cb1db3d9_WriteStr(&_62913_run, _64613_r);
			(*(_self_))._field_column+=_1cb17b81e_RuneCountStr(_64613_r);
			if (_64613_r.equal("'", 1)) {
				((*(_self_))._field_pos)++;
				goto _iter_end_1aa89022e;
			};
			if ((_64613_r.len() > 1LL)) {
				_63313_i+=(_64613_r.len() - 1LL);
			};
			(_63213_n)++;
		}
	_iter_next_1aa89022e:;
	}
	_iter_end_1aa89022e:;;
	if ((_63213_n == 0LL)) {
		_1b4ae4666_pushErr(_self_, jule::Str::lit("rune is cannot empty", 20), jule::Slice<jule::Any>());
	} else if ((_63213_n > 1LL)) {
		_1b4ae4666_pushErr(_self_, jule::Str::lit("rune is should be single", 24), jule::Slice<jule::Any>());
	};
	return _1cb1dbbd1_Str(&_62913_run);;
}



inline jule::Str _1b4ae6965_lexStr(_1b4ae40d3_lex* _self_) {
	_1cb1d27a9_StrBuilder _66913_s = static__1cb1d2a73_New(16LL);;
	jule::U8 _6709_mark = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
	((*(_self_))._field_pos)++;
	jule::Bool _6729_raw = (_6709_mark == '`');;
	_1cb1db692_WriteByte(&_66913_s, _6709_mark);
	((*(_self_))._field_column)++;
	while (((*(_self_))._field_pos < (*(*(_self_))._field_file.alloc)._field_Data.len())) {
		{
			jule::U8 _67713_ch = (*(*(_self_))._field_file.alloc)._field_Data[(*(_self_))._field_pos];;
			if ((_67713_ch == '\r')) {
				goto _iter_next_1aa895564;
			};
			if ((_67713_ch == '\n')) {
				_1b4ae6de9_newLine(_self_);
				if ((!(_6729_raw))) {
					_1b4ae4666_pushErr(_self_, jule::Str::lit("string is not finished", 22), jule::Slice<jule::Any>());
					((*(_self_))._field_pos)++;
					return jule::Str();;
				};
			};
			jule::Slice<jule::U8> _68917_part = (*(*(_self_))._field_file.alloc)._field_Data.slice((*(_self_))._field_pos);;
			jule::Str _69013_r = _1b4ae638d_getRune(_self_, &(_68917_part), _6729_raw);;
			_1cb1db3d9_WriteStr(&_66913_s, _69013_r);
			(*(_self_))._field_column+=_1cb17b81e_RuneCountStr(_69013_r);
			if ((_67713_ch == _6709_mark)) {
				goto _iter_end_1aa895564;
			};
		}
	_iter_next_1aa895564:;
	}
	_iter_end_1aa895564:;;
	return _1cb1dbbd1_Str(&_66913_s);;
}



inline void _1b4ae6de9_newLine(_1b4ae40d3_lex* _self_) {
	((*(_self_))._field_row)++;
	(*(_self_))._field_column=1LL;
}



inline jule::Bool _1b4ae745a_isOp(_1b4ae40d3_lex* _self_, jule::Slice<jule::U8>* _71024_txt, jule::Str _71037_kind, jule::U64 _71048_id, jule::Ptr<_1b4ad5712_Token>* _71066_t) {
	if ((!(_1b4ade265_bytesHasPrefix(_71024_txt, _71037_kind)))) {
		return false;;
	};
	(*((*(_71066_t))))._field_Kind=_71037_kind;
	(*((*(_71066_t))))._field_Id=_71048_id;
	(*(_self_))._field_pos+=_71037_kind.len();
	return true;;
}



inline jule::Bool _1b4ae7856_lexBasicOps(_1b4ae40d3_lex* _self_, jule::Slice<jule::U8> _72030_txt, jule::Ptr<_1b4ad5712_Token>* _72048_tok) {
	{
		auto expr = &(_1b4add85d_basicOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa89c34b:;
		if (it != expr_end) {
			_1b4add0ee_kindPair *_72116_pair = it;
			{
				if (_1b4ae745a_isOp(_self_, &(_72030_txt), (*(_72116_pair))._field_kind, (*(_72116_pair))._field_id, _72048_tok)) {
					return true;;
				};
			}
			_iter_next_1aa89c34b:;
			++it;
			goto _iter_begin_1aa89c34b;
		}
		_iter_end_1aa89c34b:;
	};
	return false;;
}



inline jule::Bool _1b4ae7c52_lexId(_1b4ae40d3_lex* _self_, jule::Slice<jule::U8>* _72925_txt, jule::Ptr<_1b4ad5712_Token>* _72943_t) {
	jule::Str _7309_lex = _1b4ae5018_id(_self_, _72925_txt);;
	if ((_7309_lex).empty()) {
		return false;;
	};
	(*((*(_72943_t))))._field_Kind=_7309_lex;
	(*((*(_72943_t))))._field_Id=static_cast<jule::U64>(1LLU);
	return true;;
}



inline jule::Bool _1b4ae814d_lexNum(_1b4ae40d3_lex* _self_, jule::Slice<jule::U8>* _73926_txt, jule::Ptr<_1b4ad5712_Token>* _73944_t) {
	jule::Str _7409_lex = _1b4ae5b51_num(_self_, _73926_txt);;
	if ((_7409_lex).empty()) {
		return false;;
	};
	(*((*(_73944_t))))._field_Kind=_7409_lex;
	(*((*(_73944_t))))._field_Id=static_cast<jule::U64>(4LLU);
	return true;;
}



inline jule::Ptr<_1b4ad5712_Token> _1b4ae83d4_token(_1b4ae40d3_lex* _self_) {
	jule::Ptr<_1b4ad5712_Token> _75113_t = jule::new_ptr<_1b4ad5712_Token>(_1b4ad5712_Token{._field_File=(*(_self_))._field_file, ._field_Id=static_cast<jule::U64>(0LLU)});;
	jule::Slice<jule::U8> _7569_txt = _1b4ae529e_resume(_self_);;
	if ((_7569_txt == nullptr)) {
		return _75113_t;;
	};
	(*(_75113_t))._field_Column=(*(_self_))._field_column;
	(*_75113_t.alloc)._field_Row=(*(_self_))._field_row;
	{
		
		if (_1b4ae814d_lexNum(_self_, &(_7569_txt), &(_75113_t))) {
			_case_begin_1aa8a4496:;
			{
				goto _match_end_1aa8a2362;
			}
		}
		else if ((_7569_txt[0LL] == '\'')) {
			_case_begin_1aa8a450c:;
			{
				(*_75113_t.alloc)._field_Kind=_1b4ae66ce_lexRune(_self_, &(_7569_txt));
				(*_75113_t.alloc)._field_Id=static_cast<jule::U64>(4LLU);
				return _75113_t;;
			}
		}
		else if (((_7569_txt[0LL] == '\"') || (_7569_txt[0LL] == '`'))) {
			_case_begin_1aa8a4573:;
			{
				(*_75113_t.alloc)._field_Kind=_1b4ae6965_lexStr(_self_);
				(*_75113_t.alloc)._field_Id=static_cast<jule::U64>(4LLU);
				return _75113_t;;
			}
		}
		else if (_1b4ade265_bytesHasPrefix(&(_7569_txt), jule::Str::lit("//", 2))) {
			_case_begin_1aa8a2ebc:;
			{
				_1b4ae5557_lexLineComment(_self_, &(_75113_t));
				return _75113_t;;
			}
		}
		else if (_1b4ade265_bytesHasPrefix(&(_7569_txt), jule::Str::lit("/*", 2))) {
			_case_begin_1aa8a3033:;
			{
				_1b4ae5810_lexRangeComment(_self_, &(_75113_t));
				return _75113_t;;
			}
		}
		else if (_1b4ae7856_lexBasicOps(_self_, _7569_txt, &(_75113_t))) {
			_case_begin_1aa8a3099:;
			{
				goto _match_end_1aa8a2362;
			}
		}
		else if (_1b4ae7c52_lexId(_self_, &(_7569_txt), &(_75113_t))) {
			_case_begin_1aa8a3110:;
			{
				{
					auto expr = &(_1b4add52d_keywords);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aa8a6058:;
					if (it != expr_end) {
						_1b4add0ee_kindPair *_78820_pair = it;
						{
							if (((*(_78820_pair))._field_kind == (*_75113_t.alloc)._field_Kind)) {
								(*_75113_t.alloc)._field_Id=(*(_78820_pair))._field_id;
								goto _iter_end_1aa8a6058;
							};
						}
						_iter_next_1aa8a6058:;
						++it;
						goto _iter_begin_1aa8a6058;
					}
					_iter_end_1aa8a6058:;
				};
			}
		}
		else {
			_case_begin_1aa8a2e56:;
			{
				jule::I32 _79513_r;
				jule::I64 _79516_sz;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1cb179a2b_DecodeRune(_7569_txt);
					_79513_r = __jule_assign_result.__jule_result_arg0;
					_79516_sz = __jule_assign_result.__jule_result_arg1;
				});
				_1b4ae4666_pushErr(_self_, jule::Str::lit("undefined token: @", 18), jule::Slice<jule::Any>::make({jule::Any(_79513_r, &__jule_any_type6)}));
				((*(_self_))._field_column)++;
				(*(_self_))._field_pos+=_79516_sz;
				return _75113_t;;
			}
		}
		_match_end_1aa8a2362:;
	};
	(*(_self_))._field_column+=_1cb17b81e_RuneCountStr((*_75113_t.alloc)._field_Kind);
	return _75113_t;;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4ae40d3_lex _Src) {
	_Stream << "lex{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4ae8ca8_Ast _Src) {
	_Stream << "Ast{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "TopDirectives:" << _Src._field_TopDirectives << ", ";
	_Stream << "UseDecls:" << _Src._field_UseDecls << ", ";
	_Stream << "Nodes:" << _Src._field_Nodes;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4ae9bbb_Node _Src) {
	_Stream << "Node{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4aea0d9_Directive _Src) {
	_Stream << "Directive{";
	_Stream << "Tag:" << _Src._field_Tag << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4aeabbc_TypeDecl _Src) {
	_Stream << "TypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4aeb2c7_IdentTypeDecl _Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4aeb591_SubIdentTypeDecl _Src) {
	_Stream << "SubIdentTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4aeb96a_NamespaceTypeDecl _Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4aebc67_SptrTypeDecl _Src) {
	_Stream << "SptrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4aec0ec_SlcTypeDecl _Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4aec3e9_TupleTypeDecl _Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "Types:" << _Src._field_Types;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b4aeca59_IsUnsafe(_1b4aec6e6_PtrTypeDecl* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4aec6e6_PtrTypeDecl _Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b4aed2eb_AutoSized(_1b4aece88_ArrTypeDecl* _self_) {
	return ((*(_self_))._field_Size == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4aece88_ArrTypeDecl _Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem << ", ";
	_Stream << "Size:" << _Src._field_Size;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4aed6d6_MapTypeDecl _Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4aedab0_RetTypeDecl _Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b00001_Expr _Src) {
	_Stream << "Expr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b002ba_RangeExpr _Src) {
	_Stream << "RangeExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b008c5_UseExpr _Src) {
	_Stream << "UseExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b00ae5_TupleExpr _Src) {
	_Stream << "TupleExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b00e8b_LitExpr _Src) {
	_Stream << "LitExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b01365_UnsafeExpr _Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b0181b_IdentExpr _Src) {
	_Stream << "IdentExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b020ad_UnaryExpr _Src) {
	_Stream << "UnaryExpr{";
	_Stream << "Op:" << _Src._field_Op << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b02487_VariadicExpr _Src) {
	_Stream << "VariadicExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b02861_CastExpr _Src) {
	_Stream << "CastExpr{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b02c3a_NsSelectionExpr _Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "Ns:" << _Src._field_Ns << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b03114_SubIdentExpr _Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b035ba_BinaryExpr _Src) {
	_Stream << "BinaryExpr{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b4b0409e_Unhandled(_1b4b03c2a_FnCallExpr* _self_) {
	return ((*(_self_))._field_Exception == nullptr);;
}



inline jule::Bool _1b4b04335_Ignored(_1b4b03c2a_FnCallExpr* _self_) {
	return (((*(_self_))._field_Exception != nullptr) && (*(*(_self_))._field_Exception.alloc)._field_Deferred);;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b03c2a_FnCallExpr _Src) {
	_Stream << "FnCallExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Exception:" << _Src._field_Exception << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b04720_FieldExprPair _Src) {
	_Stream << "FieldExprPair{";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b0504a_StructLit _Src) {
	_Stream << "StructLit{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b05501_BraceLit _Src) {
	_Stream << "BraceLit{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b05d2b_KeyValPair _Src) {
	_Stream << "KeyValPair{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val << ", ";
	_Stream << "Colon:" << _Src._field_Colon;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b06557_SliceExpr _Src) {
	_Stream << "SliceExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b06eb4_IndexingExpr _Src) {
	_Stream << "IndexingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b07624_SlicingExpr _Src) {
	_Stream << "SlicingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Start:" << _Src._field_Start << ", ";
	_Stream << "To:" << _Src._field_To;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b07921_Constraint _Src) {
	_Stream << "Constraint{";
	_Stream << "Mask:" << _Src._field_Mask;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b07dc7_GenericDecl _Src) {
	_Stream << "GenericDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b082a1_LabelSt _Src) {
	_Stream << "LabelSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b0867a_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b08977_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "Token:" << _Src._field_Token;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b090d7_AssignLeft _Src) {
	_Stream << "AssignLeft{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b0966a_AssignSt _Src) {
	_Stream << "AssignSt{";
	_Stream << "Declarative:" << _Src._field_Declarative << ", ";
	_Stream << "Setter:" << _Src._field_Setter << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b103da_Stmt _Src) {
	_Stream << "Stmt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b10a4a_ScopeTree _Src) {
	_Stream << "ScopeTree{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b4b1160b_IsSelf(_1b4b11287_ParamDecl* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b11287_ParamDecl _Src) {
	_Stream << "ParamDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b4b12a4c_IsAnon(_1b4b126d9_FnDecl* _self_) {
	return (*(_self_))._field_Ident.equal("<anonymous>", 11);;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b126d9_FnDecl _Src) {
	_Stream << "FnDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b13894_VarDecl _Src) {
	_Stream << "VarDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Setter:" << _Src._field_Setter << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b13c6d_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b4b14851_IsInf(_1b4b144dd_Iter* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b144dd_Iter _Src) {
	_Stream << "Iter{";
	_Stream << "Comptime:" << _Src._field_Comptime << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b4b1517b_IsWhileNext(_1b4b14d18_WhileKind* _self_) {
	return ((*(_self_))._field_Next != nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b14d18_WhileKind _Src) {
	_Stream << "WhileKind{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "NextToken:" << _Src._field_NextToken;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b15720_RangeKind _Src) {
	_Stream << "RangeKind{";
	_Stream << "InToken:" << _Src._field_InToken << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b15ae9_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b15ec3_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b16479_If _Src) {
	_Stream << "If{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b16853_Else _Src) {
	_Stream << "Else{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b16d09_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Head:" << _Src._field_Head << ", ";
	_Stream << "Tail:" << _Src._field_Tail << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b17546_TypeAliasDecl _Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b179ec_Case _Src) {
	_Stream << "Case{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b18316_MatchCase _Src) {
	_Stream << "MatchCase{";
	_Stream << "Comptime:" << _Src._field_Comptime << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b18b30_UseDecl _Src) {
	_Stream << "UseDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Full:" << _Src._field_Full << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Std:" << _Src._field_Std;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b190d6_EnumItemDecl _Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b19b97_EnumDecl _Src) {
	_Stream << "EnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b1a4c2_TypeEnumItemDecl _Src) {
	_Stream << "TypeEnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b1ab32_TypeEnumDecl _Src) {
	_Stream << "TypeEnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b1adeb_FieldDecl _Src) {
	_Stream << "FieldDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b1b7e2_StructDecl _Src) {
	_Stream << "StructDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b1c02e_TraitDecl _Src) {
	_Stream << "TraitDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Inherits:" << _Src._field_Inherits << ", ";
	_Stream << "Methods:" << _Src._field_Methods;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b1c68e_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b4b23a91_FieldIns> _1b4b1dd44_instance(jule::Ptr<_1b4b1d98c_Field> _self_) {
	return jule::new_ptr<_1b4b23a91_FieldIns>(_1b4b23a91_FieldIns{._field_Decl=_self_, });;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b1d98c_Field _Src) {
	_Stream << "Field{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b209a0_Operators _Src) {
	_Stream << "Operators{";
	_Stream << "Eq:" << _Src._field_Eq << ", ";
	_Stream << "Gt:" << _Src._field_Gt << ", ";
	_Stream << "GtEq:" << _Src._field_GtEq << ", ";
	_Stream << "Lt:" << _Src._field_Lt << ", ";
	_Stream << "LtEq:" << _Src._field_LtEq << ", ";
	_Stream << "Shl:" << _Src._field_Shl << ", ";
	_Stream << "Shr:" << _Src._field_Shr << ", ";
	_Stream << "Add:" << _Src._field_Add << ", ";
	_Stream << "Sub:" << _Src._field_Sub << ", ";
	_Stream << "Div:" << _Src._field_Div << ", ";
	_Stream << "Mul:" << _Src._field_Mul << ", ";
	_Stream << "Mod:" << _Src._field_Mod << ", ";
	_Stream << "BitAnd:" << _Src._field_BitAnd << ", ";
	_Stream << "BitOr:" << _Src._field_BitOr << ", ";
	_Stream << "BitXor:" << _Src._field_BitXor << ", ";
	_Stream << "Neg:" << _Src._field_Neg << ", ";
	_Stream << "Pos:" << _Src._field_Pos << ", ";
	_Stream << "BitNot:" << _Src._field_BitNot << ", ";
	_Stream << "AddAssign:" << _Src._field_AddAssign << ", ";
	_Stream << "SubAssign:" << _Src._field_SubAssign << ", ";
	_Stream << "DivAssign:" << _Src._field_DivAssign << ", ";
	_Stream << "MulAssign:" << _Src._field_MulAssign << ", ";
	_Stream << "ModAssign:" << _Src._field_ModAssign << ", ";
	_Stream << "ShlAssign:" << _Src._field_ShlAssign << ", ";
	_Stream << "ShrAssign:" << _Src._field_ShrAssign << ", ";
	_Stream << "BitOrAssign:" << _Src._field_BitOrAssign << ", ";
	_Stream << "BitAndAssign:" << _Src._field_BitAndAssign << ", ";
	_Stream << "BitXorAssign:" << _Src._field_BitXorAssign;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b4b24641_StructIns> _1b4b21d25_instance(jule::Ptr<_1b4b218b3_Struct> _self_) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*_self_.alloc)._field_Instances.len() == 1LL))) {
		return (*_self_.alloc)._field_Instances[0LL];;
	};
	jule::Ptr<_1b4b24641_StructIns> _10013_ins = jule::new_ptr<_1b4b24641_StructIns>(_1b4b24641_StructIns{._field_Decl=_self_, ._field_Fields=jule::Slice<jule::Ptr<_1b4b23a91_FieldIns>>::alloc(0LL, (*_self_.alloc)._field_Fields.len()), ._field_Statics=jule::Slice<jule::Ptr<_1b4bddaa1_Var>>::alloc(0LL, (*_self_.alloc)._field_Statics.len()), ._field_Refers=static__1b4b3cd30_new(), });;
	{
		auto expr = &((*_self_.alloc)._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aaba174e:;
		if (it != expr_end) {
			jule::Ptr<_1b4bddaa1_Var> _10721_s = *it;
			{
				(*(_10013_ins))._field_Statics=jule::append((*_10013_ins.alloc)._field_Statics,jule::Slice<jule::Ptr<_1b4bddaa1_Var>>::make({jule::new_ptr<_1b4bddaa1_Var>((*(_10721_s)))}));
			}
			_iter_next_1aaba174e:;
			++it;
			goto _iter_begin_1aaba174e;
		}
		_iter_end_1aaba174e:;
	};
	{
		auto expr = &((*_self_.alloc)._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aaba1a18:;
		if (it != expr_end) {
			jule::Ptr<_1b4b1d98c_Field> _11121_f = *it;
			{
				(*_10013_ins.alloc)._field_Fields=jule::append((*_10013_ins.alloc)._field_Fields,jule::Slice<jule::Ptr<_1b4b23a91_FieldIns>>::make({_1b4b1dd44_instance(_11121_f)}));
				if ((((!((*_11121_f.alloc)._field_Mutable)) && ((*((*_11121_f.alloc)._field_Kind))._field_Kind != nullptr)) && _1b4c7e290_Mutable((*(*_11121_f.alloc)._field_Kind.alloc)._field_Kind))) {
					(*_10013_ins.alloc)._field_Mutable=true;
				};
			}
			_iter_next_1aaba1a18:;
			++it;
			goto _iter_begin_1aaba1a18;
		}
		_iter_end_1aaba1a18:;
	};
	if (((*_self_.alloc)._field_Generics.len() == 0LL)) {
		(*_10013_ins.alloc)._field_Methods=(*_self_.alloc)._field_Methods;
	} else {
		(*_10013_ins.alloc)._field_Methods=jule::Slice<jule::Ptr<_1b4b36884_Fn>>::alloc(0LL, (*_self_.alloc)._field_Methods.len());
		{
			auto expr = &((*_self_.alloc)._field_Methods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aaba627b:;
			if (it != expr_end) {
				jule::Ptr<_1b4b36884_Fn> _12225_f = *it;
				{
					jule::Ptr<_1b4b36884_Fn> _12321_fins = jule::new_ptr<_1b4b36884_Fn>((*(_12225_f)));;
					(*_12321_fins.alloc)._field_Instances=nullptr;
					(*_10013_ins.alloc)._field_Methods=jule::append((*_10013_ins.alloc)._field_Methods,jule::Slice<jule::Ptr<_1b4b36884_Fn>>::make({_12321_fins}));
				}
				_iter_next_1aaba627b:;
				++it;
				goto _iter_begin_1aaba627b;
			}
			_iter_end_1aaba627b:;
		};
	};
	return _10013_ins;;
}



inline jule::Ptr<_1b4b24641_StructIns> _1b4b22133_appendInstance(_1b4b218b3_Struct* _self_, jule::Ptr<_1b4b24641_StructIns>* _13438_ins) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*(_self_))._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aaba65de:;
		if (it != expr_end) {
			jule::Ptr<_1b4b24641_StructIns> _14021_ains = *it;
			{
				if (_1b4b252ac_Same(_14021_ains.ptr(), (*(_13438_ins)))) {
					return _14021_ains;;
				};
			}
			_iter_next_1aaba65de:;
			++it;
			goto _iter_begin_1aaba65de;
		}
		_iter_end_1aaba65de:;
	};
	{ jule::Slice<jule::Ptr<_1b4b24641_StructIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_13438_ins))); };
	return nullptr;;
}



inline jule::Ptr<_1b4b36884_Fn> _1b4b2252e_FindMethod(_1b4b218b3_Struct* _self_, jule::Str _15229_ident, jule::Bool _15241_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aaba8b0d:;
		if (it != expr_end) {
			jule::Ptr<_1b4b36884_Fn> _15321_f = *it;
			{
				if ((((*(_15321_f))._field_Statically == _15241_statically) && ((*_15321_f.alloc)._field_Ident == _15229_ident))) {
					return _15321_f;;
				};
			}
			_iter_next_1aaba8b0d:;
			++it;
			goto _iter_begin_1aaba8b0d;
		}
		_iter_end_1aaba8b0d:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b4bddaa1_Var> _1b4b22870_FindStatic(_1b4b218b3_Struct* _self_, jule::Str _16329_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aabaa1a3:;
		if (it != expr_end) {
			jule::Ptr<_1b4bddaa1_Var> _16421_v = *it;
			{
				if (((*(_16421_v))._field_Ident == _16329_ident)) {
					return _16421_v;;
				};
			}
			_iter_next_1aabaa1a3:;
			++it;
			goto _iter_begin_1aabaa1a3;
		}
		_iter_end_1aabaa1a3:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b4b1d98c_Field> _1b4b22bb1_FindField(_1b4b218b3_Struct* _self_, jule::Str _17428_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aababdec:;
		if (it != expr_end) {
			jule::Ptr<_1b4b1d98c_Field> _17521_f = *it;
			{
				if (((*(_17521_f))._field_Ident == _17428_ident)) {
					return _17521_f;;
				};
			}
			_iter_next_1aababdec:;
			++it;
			goto _iter_begin_1aababdec;
		}
		_iter_end_1aababdec:;
	};
	return nullptr;;
}



inline jule::Bool _1b4b23002_IsImplements(_1b4b218b3_Struct* _self_, jule::Ptr<_1b4b49c3d_Trait> _18427_t) {
	{
		auto expr = &((*(_self_))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aabacdba:;
		if (it != expr_end) {
			jule::Ptr<_1b4b49c3d_Trait> *_18516_it = it;
			{
				if ((_18427_t == (*(_18516_it)))) {
					return true;;
				};
			}
			_iter_next_1aabacdba:;
			++it;
			goto _iter_begin_1aabacdba;
		}
		_iter_end_1aabacdba:;
	};
	return false;;
}



inline jule::Bool _1b4b23343_IsUses(_1b4b218b3_Struct* _self_, jule::Ptr<_1b4b218b3_Struct> _19421_s) {
	{
		auto expr = &((*(_self_))._field_Uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aabad85a:;
		if (it != expr_end) {
			jule::Ptr<_1b4b218b3_Struct> *_19516_u = it;
			{
				while ((_19421_s == (*(_19516_u)))) {
					{
						return true;;
					}
				_iter_next_1aabae361:;
				}
				_iter_end_1aabae361:;;
			}
			_iter_next_1aabad85a:;
			++it;
			goto _iter_begin_1aabad85a;
		}
		_iter_end_1aabad85a:;
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b218b3_Struct _Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Depends:" << _Src._field_Depends << ", ";
	_Stream << "Uses:" << _Src._field_Uses << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Implements:" << _Src._field_Implements << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b23a91_FieldIns _Src) {
	_Stream << "FieldIns{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b28546_OperandExprModel _Src) {
	_Stream << "OperandExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Model:" << _Src._field_Model;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b28a41_BinaryExprModel _Src) {
	_Stream << "BinaryExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b28e1a_UnaryExprModel _Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b29448_StructArgExprModel _Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b297de_StructLitExprModel _Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "Strct:" << _Src._field_Strct << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b29adb_AllocStructLitExprModel _Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "Lit:" << _Src._field_Lit;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b2a16e_CastingExprModel _Src) {
	_Stream << "CastingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "ExprKind:" << _Src._field_ExprKind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b2aa21_FnCallExprModel _Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Except:" << _Src._field_Except << ", ";
	_Stream << "Assigned:" << _Src._field_Assigned;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b2adea_SliceExprModel _Src) {
	_Stream << "SliceExprModel{";
	_Stream << "ElemKind:" << _Src._field_ElemKind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b2b3a1_IndexingExprModel _Src) {
	_Stream << "IndexingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b2b857_AnonFnExprModel _Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "Captured:" << _Src._field_Captured << ", ";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Global:" << _Src._field_Global;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b2bc31_KeyValPairExprModel _Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b2c1d7_MapExprModel _Src) {
	_Stream << "MapExprModel{";
	_Stream << "KeyKind:" << _Src._field_KeyKind << ", ";
	_Stream << "ValKind:" << _Src._field_ValKind << ", ";
	_Stream << "Entries:" << _Src._field_Entries;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b2c76a_SlicingExprModel _Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b2cced_TraitSubIdentExprModel _Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Trt:" << _Src._field_Trt;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b2d68e_StructSubIdentExprModel _Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Owner:" << _Src._field_Owner;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b2da35_StructStaticIdentExprModel _Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "Structure:" << _Src._field_Structure << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b2de0e_ArrayExprModel _Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b2e20b_TupleExprModel _Src) {
	_Stream << "TupleExprModel{";
	_Stream << "Datas:" << _Src._field_Datas;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b2e5d5_BuiltinOutCallExprModel _Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b2e9ae_BuiltinOutlnCallExprModel _Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b2ed88_BuiltinNewCallExprModel _Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Init:" << _Src._field_Init;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b30262_BuiltinPanicCallExprModel _Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b30718_BuiltinAssertCallExprModel _Src) {
	_Stream << "BuiltinAssertCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Log:" << _Src._field_Log;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b30bbe_BuiltinMakeCallExprModel _Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Len:" << _Src._field_Len << ", ";
	_Stream << "Cap:" << _Src._field_Cap;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b31098_BuiltinAppendCallExprModel _Src) {
	_Stream << "BuiltinAppendCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elements:" << _Src._field_Elements;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b31395_BuiltinLenCallExprModel _Src) {
	_Stream << "BuiltinLenCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b31692_BuiltinCapCallExprModel _Src) {
	_Stream << "BuiltinCapCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b31a6b_BuiltinDeleteCallExprModel _Src) {
	_Stream << "BuiltinDeleteCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Key:" << _Src._field_Key;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b31e45_BuiltinCopyCallExprModel _Src) {
	_Stream << "BuiltinCopyCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Src:" << _Src._field_Src;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b3231e_BuiltinErrorCallExprModel _Src) {
	_Stream << "BuiltinErrorCallExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Err:" << _Src._field_Err;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b329c3_SizeofExprModel _Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b32bb0_AlignofExprModel _Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b32e57_RuneExprModel _Src) {
	_Stream << "RuneExprModel{";
	_Stream << "Code:" << _Src._field_Code;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b33254_IntegratedToStrExprModel _Src) {
	_Stream << "IntegratedToStrExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b3362d_BackendEmitExprModel _Src) {
	_Stream << "BackendEmitExprModel{";
	_Stream << "Code:" << _Src._field_Code << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b3392a_FreeExprModel _Src) {
	_Stream << "FreeExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b3462e_RetType _Src) {
	_Stream << "RetType{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b4b387dc_ParamIns> _1b4b35245_instance(jule::Ptr<_1b4b34db0_Param> _self_) {
	return jule::new_ptr<_1b4b387dc_ParamIns>(_1b4b387dc_ParamIns{._field_Decl=_self_, });;
}



inline jule::Bool _1b4b354cb_IsSelf(_1b4b34db0_Param* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}



inline jule::Bool _1b4b35762_IsRef(_1b4b34db0_Param* _self_) {
	return (!((*(_self_))._field_Ident).empty() && ((*(_self_))._field_Ident[0LL] == '&'));;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b34db0_Param _Src) {
	_Stream << "Param{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b4b36d07_IsVoid(_1b4b36884_Fn* _self_) {
	return ((*(_self_))._field_Result == nullptr);;
}



inline jule::Bool _1b4b3708d_IsMethod(_1b4b36884_Fn* _self_) {
	return ((*(_self_))._field_Owner != nullptr);;
}



inline jule::Bool _1b4b37324_IsEntryPoint(_1b4b36884_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("main", 4);;
}



inline jule::Bool _1b4b375aa_IsInit(_1b4b36884_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("init", 4);;
}



inline jule::Bool _1b4b37841_IsAnon(_1b4b36884_Fn* _self_) {
	return _1b4ad83b3_IsAnonIdent((*(_self_))._field_Ident);;
}



inline jule::Bool _1b4b37ac7_AnyVar(_1b4b36884_Fn* _self_) {
	return (((*(_self_))._field_Result != nullptr) && ((*(*(_self_))._field_Result.alloc)._field_Idents.len() > 0LL));;
}



inline jule::Ptr<_1b4b39865_FnIns> _1b4b37d5d_instanceForce(jule::Ptr<_1b4b36884_Fn> _self_) {
	jule::Ptr<_1b4b39865_FnIns> _10113_ins = jule::new_ptr<_1b4b39865_FnIns>(_1b4b39865_FnIns{._field_Decl=_self_, ._field_Scope=jule::new_ptr<_1b4b7880a_Scope>(), ._field_Refers=static__1b4b3cd30_new(), });;
	(*(_10113_ins))._field_Params=jule::Slice<jule::Ptr<_1b4b387dc_ParamIns>>::alloc(0LL, (*(_self_))._field_Params.len());
	{
		auto expr = &((*_self_.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aabc5d28:;
		if (it != expr_end) {
			jule::Ptr<_1b4b34db0_Param> _10821_p = *it;
			{
				(*_10113_ins.alloc)._field_Params=jule::append((*_10113_ins.alloc)._field_Params,jule::Slice<jule::Ptr<_1b4b387dc_ParamIns>>::make({_1b4b35245_instance(_10821_p)}));
			}
			_iter_next_1aabc5d28:;
			++it;
			goto _iter_begin_1aabc5d28;
		}
		_iter_end_1aabc5d28:;
	};
	if (((*((*_10113_ins.alloc)._field_Decl))._field_Result != nullptr)) {
		(*_10113_ins.alloc)._field_Result=(*((*(*(*_10113_ins.alloc)._field_Decl.alloc)._field_Result.alloc)._field_Kind))._field_Kind;
	};
	return _10113_ins;;
}



inline jule::Ptr<_1b4b39865_FnIns> _1b4b380e4_instance(jule::Ptr<_1b4b36884_Fn> _self_) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*_self_.alloc)._field_Instances.len() == 1LL))) {
		return (*_self_.alloc)._field_Instances[0LL];;
	};
	return _1b4b37d5d_instanceForce(_self_);;
}



inline jule::Ptr<_1b4b39865_FnIns> _1b4b38402_appendInstance(_1b4b36884_Fn* _self_, jule::Ptr<_1b4b39865_FnIns>* _12938_ins) {
	if (((*(_self_))._field_Generics.len() == 0LL)) {
		if (((*(_self_))._field_Instances.len() == 1LL)) {
			return (*(_self_))._field_Instances[0LL];;
		};
		{ jule::Slice<jule::Ptr<_1b4b39865_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12938_ins))); };
		return nullptr;;
	};
	if (((*(_self_))._field_Instances.len() == 0LL)) {
		{ jule::Slice<jule::Ptr<_1b4b39865_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12938_ins))); };
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aabcb548:;
		if (it != expr_end) {
			jule::Ptr<_1b4b39865_FnIns> _14521_ains = *it;
			{
				if (_1b4b3b3c2_Same(_14521_ains.ptr(), (*(_12938_ins)))) {
					return _14521_ains;;
				};
			}
			_iter_next_1aabcb548:;
			++it;
			goto _iter_begin_1aabcb548;
		}
		_iter_end_1aabcb548:;
	};
	{ jule::Slice<jule::Ptr<_1b4b39865_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12938_ins))); };
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b36884_Fn _Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params << ", ";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1b4b38b50_Str(_1b4b387dc_ParamIns* _self_) {
	_1cb1d27a9_StrBuilder _16713_s = static__1cb1d2a73_New(32LL);;
	if ((*((*(_self_))._field_Decl))._field_Mutable) {
		_1cb1db3d9_WriteStr(&_16713_s, jule::Str::lit("mut ", 4));
	};
	if ((*(*(_self_))._field_Decl.alloc)._field_Reference) {
		_1cb1db3d9_WriteStr(&_16713_s, jule::Str::lit("&_:", 3));
	};
	if (_1b4b354cb_IsSelf((*(_self_))._field_Decl)) {
		if (_1b4b35762_IsRef((*(_self_))._field_Decl)) {
			_1cb1db692_WriteByte(&_16713_s, '&');
		};
		_1cb1db3d9_WriteStr(&_16713_s, jule::Str::lit("self", 4));
		return _1cb1dbbd1_Str(&_16713_s);;
	};
	if ((*(*(_self_))._field_Decl.alloc)._field_Variadic) {
		_1cb1db3d9_WriteStr(&_16713_s, jule::Str::lit("...", 3));
	};
	if (((*(_self_))._field_Kind != nullptr)) {
		_1cb1db3d9_WriteStr(&_16713_s, _1b4c7ccc7_Str((*(_self_))._field_Kind));
	};
	return _1cb1dbbd1_Str(&_16713_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b387dc_ParamIns _Src) {
	_Stream << _1b4b38b50_Str(&_Src);
	return _Stream;
}



inline jule::Str _1b4b39ba6_Str(_1b4b39865_FnIns* _self_) {
	;
	return _1b4b3b713_GetKindStr(_self_, false);;
}



inline jule::Bool _1b4b39ee7_Equal(jule::Ptr<_1b4b39865_FnIns> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _21921_other) {
	jule::Ptr<_1b4b39865_FnIns> _2209_f = _1b4c8134c_Fn(_21921_other.ptr());;
	if ((_2209_f == nullptr)) {
		return false;;
	};
	return _1b4b3a48c_EqualFn(_self_, &(_2209_f));;
}



inline jule::Bool _1b4b3a48c_EqualFn(jule::Ptr<_1b4b39865_FnIns> _self_, jule::Ptr<_1b4b39865_FnIns>* _23024_f) {
	if (((*((*(_self_))._field_Decl))._field_Exceptional != (*(*((*(_23024_f))))._field_Decl.alloc)._field_Exceptional)) {
		return false;;
	};
	if (((*(*_self_.alloc)._field_Decl.alloc)._field_Unsafety != (*(*((*(_23024_f))))._field_Decl.alloc)._field_Unsafety)) {
		return false;;
	};
	if ((_1b4b36d07_IsVoid((*_self_.alloc)._field_Decl) != _1b4b36d07_IsVoid((*((*(_23024_f))))._field_Decl))) {
		return false;;
	};
	jule::Fn<jule::Bool,jule::Ptr<_1b4b387dc_ParamIns>,jule::Ptr<_1b4b387dc_ParamIns>> _2409_checkParams = jule::__new_closure<jule::Bool,jule::Ptr<_1b4b387dc_ParamIns>,jule::Ptr<_1b4b387dc_ParamIns>>((void*)__jule_anon1aabd62cd, nullptr, nullptr);;
	if (((*((*(_23024_f))))._field_Params.len() != (*_self_.alloc)._field_Params.len())) {
		return false;;
	};
	jule::I64 _27213_i = 0LL;;
	for (; (_27213_i < (*_self_.alloc)._field_Params.len()); (_27213_i)++) {
		{
			if ((!(_2409_checkParams((*_self_.alloc)._field_Params[_27213_i], (*((*(_23024_f))))._field_Params[_27213_i])))) {
				return false;;
			};
		}
	_iter_next_1aabdb976:;
	}
	_iter_end_1aabdb976:;;
	if ((!(_1b4b36d07_IsVoid((*_self_.alloc)._field_Decl)))) {
		if ((!(_1b4c7d118_Equal((*_self_.alloc)._field_Result, (*((*(_23024_f))))._field_Result)))) {
			return false;;
		};
	};
	return true;;
}



inline jule::Bool _1b4b3a7cd_equalTrait(jule::Ptr<_1b4b39865_FnIns> _self_, jule::Ptr<_1b4b39865_FnIns>* _28927_other) {
	if (((*((*(_self_))._field_Decl))._field_Public != (*(*((*(_28927_other))))._field_Decl.alloc)._field_Public)) {
		return false;;
	};
	if (((*(*_self_.alloc)._field_Decl.alloc)._field_Ident != (*(*((*(_28927_other))))._field_Decl.alloc)._field_Ident)) {
		return false;;
	};
	if ((!(_1b4b3a48c_EqualFn(_self_, _28927_other)))) {
		return false;;
	};
	if (((*(*_self_.alloc)._field_Decl.alloc)._field_Generics.len() != (*(*((*(_28927_other))))._field_Decl.alloc)._field_Generics.len())) {
		return false;;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1b4c7c90e_TypeKind>> _1b4b3aa64_Types(_1b4b39865_FnIns* _self_) {
	{
		
		if (((*(_self_))._field_Result == nullptr)) {
			_case_begin_1aabe2b9c:;
			{
				return nullptr;;
			}
		}
		else if ((_1b4c81d86_Tup((*(_self_))._field_Result.ptr()) == nullptr)) {
			_case_begin_1aabe2c13:;
			{
				return jule::Slice<jule::Ptr<_1b4c7c90e_TypeKind>>::make({(*(_self_))._field_Result});;
			}
		}
		else {
			_case_begin_1aabe273a:;
			{
				return (*(_1b4c81d86_Tup((*(_self_))._field_Result.ptr())))._field_Types;;
			}
		}
		_match_end_1aabe263b:;
	};
}



inline jule::Bool _1b4b3acea_IsBuiltin(_1b4b39865_FnIns* _self_) {
	return ((*(_self_))._field_caller != nullptr);;
}



inline jule::Bool _1b4b3b081_IsAnon(_1b4b39865_FnIns* _self_) {
	return ((*(_self_))._field_Anon || (((*(_self_))._field_Decl != nullptr) && _1b4b37841_IsAnon((*(_self_))._field_Decl)));;
}



inline jule::Bool _1b4b3b3c2_Same(_1b4b39865_FnIns* _self_, jule::Ptr<_1b4b39865_FnIns> _33219_f) {
	if ((((*(_self_))._field_Decl != (*(_33219_f))._field_Decl) || ((*_33219_f.alloc)._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aabe6101:;
		if (it != expr_end) {
			jule::I64 _33713_i = it - expr->begin();
			jule::Ptr<_1b4c7b028_InsGeneric> *_33716_g = it;
			{
				jule::Ptr<_1b4c7b028_InsGeneric> _33813_g2 = (*_33219_f.alloc)._field_Generics[_33713_i];;
				if ((((*((*((*(_33716_g))))._field_Kind))._field_BindIdent != (*(*(_33813_g2))._field_Kind.alloc)._field_BindIdent) || (!(_1b4c7d118_Equal((*(*(_33716_g)).alloc)._field_Kind, (*_33813_g2.alloc)._field_Kind))))) {
					return false;;
				};
			}
			_iter_next_1aabe6101:;
			++it;
			_33713_i++;
			goto _iter_begin_1aabe6101;
		}
		_iter_end_1aabe6101:;
	};
	return true;;
}



inline jule::Str _1b4b3b713_GetKindStr(_1b4b39865_FnIns* _self_, jule::Bool _34925_ident) {
	_1cb1d27a9_StrBuilder _35013_s = static__1cb1d2a73_New(32LL);;
	if ((*((*(_self_))._field_Decl))._field_Unsafety) {
		_1cb1db3d9_WriteStr(&_35013_s, jule::Str::lit("unsafe ", 7));
	};
	_1cb1db3d9_WriteStr(&_35013_s, jule::Str::lit("fn", 2));
	if ((_34925_ident && ((*(_self_))._field_Decl != nullptr))) {
		_1cb1db692_WriteByte(&_35013_s, ' ');
		_1cb1db3d9_WriteStr(&_35013_s, (*(*(_self_))._field_Decl.alloc)._field_Ident);
	};
	_1cb1db692_WriteByte(&_35013_s, '(');
	jule::I64 _3649_n = (*(_self_))._field_Params.len();;
	if ((_3649_n > 0LL)) {
		{
			auto expr = &((*(_self_))._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aabeb425:;
			if (it != expr_end) {
				jule::I64 _36617_i = it - expr->begin();
				jule::Ptr<_1b4b387dc_ParamIns> *_36620_p = it;
				{
					_1cb1db3d9_WriteStr(&_35013_s, _1b4b38b50_Str((*(_36620_p)).ptr()));
					if ((_36617_i < ((*(_self_))._field_Params.len() - 1LL))) {
						_1cb1db692_WriteByte(&_35013_s, ',');
					};
				}
				_iter_next_1aabeb425:;
				++it;
				_36617_i++;
				goto _iter_begin_1aabeb425;
			}
			_iter_end_1aabeb425:;
		};
	};
	_1cb1db692_WriteByte(&_35013_s, ')');
	if ((*(*(_self_))._field_Decl.alloc)._field_Exceptional) {
		_1cb1db692_WriteByte(&_35013_s, '!');
	};
	if ((!(_1b4b36d07_IsVoid((*(_self_))._field_Decl)))) {
		_1cb1db692_WriteByte(&_35013_s, ':');
		_1cb1db3d9_WriteStr(&_35013_s, _1b4c7ccc7_Str((*(_self_))._field_Result.ptr()));
	};
	return _1cb1dbbd1_Str(&_35013_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b39865_FnIns _Src) {
	_Stream << _1b4b39ba6_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1b4b3ca44_ReferenceStack> static__1b4b3cd30_new(void) {
	return jule::new_ptr<_1b4b3ca44_ReferenceStack>(_1b4b3ca44_ReferenceStack{._field_buffer=jule::Slice<jule::Any>::alloc(0LL, 10LL)});;
}



inline jule::I64 _1b4b3d22b_Len(_1b4b3ca44_ReferenceStack* _self_) {
	return (*(_self_))._field_buffer.len();;
}



inline jule::Any _1b4b3d56c_At(_1b4b3ca44_ReferenceStack* _self_, jule::I64 _6821_i) {
	return (*(_self_))._field_buffer[_6821_i];;
}



inline void _1b4b3d825_Push(_1b4b3ca44_ReferenceStack* _self_, jule::Any _7327_ref) {
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_buffer; __jule_push_dest.push(_7327_ref); };
}



inline jule::Bool _1ab5cde39_Exist(_1b4b3ca44_ReferenceStack* _self_, jule::Ptr<_1b4b39865_FnIns> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab5d02ae:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type7_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1ab5d02ae:;
			++it;
			goto _iter_begin_1ab5d02ae;
		}
		_iter_end_1ab5d02ae:;
	};
	return false;;
}

inline jule::Bool _1ab5e4aa9_Exist(_1b4b3ca44_ReferenceStack* _self_, jule::Ptr<_1b4bddaa1_Var> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab5e5dda:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type8_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1ab5e5dda:;
			++it;
			goto _iter_begin_1ab5e5dda;
		}
		_iter_end_1ab5e5dda:;
	};
	return false;;
}

inline jule::Bool _1ab6a8bd4_Exist(_1b4b3ca44_ReferenceStack* _self_, jule::Ptr<_1b4b24641_StructIns> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab6aa059:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type9_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1ab6aa059:;
			++it;
			goto _iter_begin_1ab6aa059;
		}
		_iter_end_1ab6aa059:;
	};
	return false;;
}

inline jule::Bool _1ab9e8b5b_Exist(_1b4b3ca44_ReferenceStack* _self_, jule::Ptr<_1b4b49c3d_Trait> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab9e9e59:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type10_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1ab9e9e59:;
			++it;
			goto _iter_begin_1ab9e9e59;
		}
		_iter_end_1ab9e9e59:;
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b3ca44_ReferenceStack _Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b3e051_Pass _Src) {
	_Stream << "Pass{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Text:" << _Src._field_Text;
	_Stream << "}";
	return _Stream;
}



inline void _1b4b444a7_pushErr(_1b4b43a06_symbolBuilder* _self_, jule::Ptr<_1b4ad5712_Token>* _33227_token, jule::Str _33242_fmt, jule::Slice<jule::Any> _33255_args) {
	{ jule::Slice<_1cb285120_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1b4bb887d_compilerErr(_33227_token, true, _33242_fmt, _33255_args)); };
}



inline void _1b4b44c38_pushSuggestion(_1b4b43a06_symbolBuilder* _self_, jule::Str _34133_fmt, jule::Slice<jule::Any> _34146_args) {
	{
		_1b4bb9e34_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _34133_fmt, _34146_args);
	};
}



inline jule::Bool _1b4b45134_checkCppUseDeclPath(_1b4b43a06_symbolBuilder* _self_, jule::Ptr<_1b4b18b30_UseDecl>* _34539_decl, jule::Str* _34556_path) {
	jule::Bool __jule_func_result = false;
	jule::Str _3469_ext = _1cb1e0311_Ext((*(_34556_path)));;
	if (((!(_1cb277cd3_IsValidHeaderExt(_3469_ext))) && (!(_1cb27809c_IsValidCppExt(_3469_ext))))) {
		_1b4b444a7_pushErr(_self_, &((*((*(_34539_decl))))._field_Token), jule::Str::lit("invalid C++ extension: @", 24), jule::Slice<jule::Any>::make({jule::Any(_3469_ext, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_20d92b630_Status> _3539_info = ({
		auto except = static__20d9282b9_Of((*(_34556_path)));
		(except.ok()) ? (except.result) : ({{
			_1b4b444a7_pushErr(_self_, &((*((*(_34539_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_34539_decl))))._field_LinkPath, &__jule_any_type4)}));
			__jule_func_result = false;
			return __jule_func_result;;
		} jule::Ptr<_20d92b630_Status>(nullptr);});
	});;
	if (_20d92ba09_IsDir(_3539_info.ptr())) {
		_1b4b444a7_pushErr(_self_, &((*((*(_34539_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_34539_decl))))._field_LinkPath, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1b4b9a893_ImportInfo> _1b4b45442_buildCppHeaderImport(_1b4b43a06_symbolBuilder* _self_, jule::Ptr<_1b4b18b30_UseDecl>* _36544_decl) {
	jule::Str _36613_path = (*((*(_36544_decl))))._field_LinkPath;;
	if ((!(_1cb277a08_IsStdHeaderPath((*((*(_36544_decl))))._field_LinkPath)))) {
		_36613_path=_1cb1e007a_Join(jule::Slice<jule::Str>::make({_1b4adb64c_Dir((*((*((*(_36544_decl))))._field_Token))._field_File.ptr()),(*((*(_36544_decl))))._field_LinkPath}));
		jule::Bool _37017_ok = _1b4b45134_checkCppUseDeclPath(_self_, _36544_decl, &(_36613_path));;
		if ((!(_37017_ok))) {
			return nullptr;;
		};
		({
			__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1cb1e05ca_Abs(_36613_path);
			_36613_path = __jule_assign_result.__jule_result_arg0;
			_37017_ok = __jule_assign_result.__jule_result_arg1;
		});
		if ((!(_37017_ok))) {
			_1b4b444a7_pushErr(_self_, &((*((*(_36544_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_36544_decl))))._field_LinkPath, &__jule_any_type4)}));
		};
	};
	return jule::new_ptr<_1b4b9a893_ImportInfo>(_1b4b9a893_ImportInfo{._field_Token=(*((*(_36544_decl))))._field_Token, ._field_Path=_36613_path, ._field_LinkPath=(*((*(_36544_decl))))._field_LinkPath, ._field_Ident=jule::Str(), ._field_Binded=true, ._field_Std=false, ._field_Package=nullptr, });;
}



inline jule::Ptr<_1b4b9a893_ImportInfo> _1b4b45783_buildStdImport(_1b4b43a06_symbolBuilder* _self_, jule::Ptr<_1b4b18b30_UseDecl>* _39338_decl) {
	jule::Str _39513_path = (*((*(_39338_decl))))._field_LinkPath.slice(5LL);;
	_39513_path=_1cb1c44b0_Replace(_39513_path, jule::Str::lit("::", 2), jule::Str::lit("/", 1), -1LL);
	_39513_path=_1cb1e007a_Join(jule::Slice<jule::Str>::make({_1cb39d9db_PathStdlib,_39513_path}));
	jule::Bool _39815_ok;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1cb1e05ca_Abs(_39513_path);
		_39513_path = __jule_assign_result.__jule_result_arg0;
		_39815_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_39815_ok))) {
		_1b4b444a7_pushErr(_self_, &((*((*(_39338_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_39338_decl))))._field_LinkPath, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_20d92b630_Status> _4059_info = ({
		auto except = static__20d9282b9_Of(_39513_path);
		(except.ok()) ? (except.result) : ({{
			_1b4b444a7_pushErr(_self_, &((*((*(_39338_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_39338_decl))))._field_LinkPath, &__jule_any_type4)}));
			return nullptr;;
		} jule::Ptr<_20d92b630_Status>(nullptr);});
	});;
	if ((!(_20d92ba09_IsDir(_4059_info.ptr())))) {
		_1b4b444a7_pushErr(_self_, &((*((*(_39338_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_39338_decl))))._field_LinkPath, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::I64 _4159_i = (_1cb1c0038_FindLast((*((*(_39338_decl))))._field_LinkPath, jule::Str::lit("::", 2)) + 1LL);;
	jule::Str _4169_ident = (*((*(_39338_decl))))._field_LinkPath.slice(_4159_i);;
	return jule::new_ptr<_1b4b9a893_ImportInfo>(_1b4b9a893_ImportInfo{._field_Token=(*((*(_39338_decl))))._field_Token, ._field_Path=_39513_path, ._field_LinkPath=(*((*(_39338_decl))))._field_LinkPath, ._field_Ident=_4169_ident, ._field_Alias=(*((*(_39338_decl))))._field_Alias, ._field_Binded=false, ._field_Std=true, ._field_ImportAll=(*((*(_39338_decl))))._field_Full, ._field_Package=jule::new_ptr<_1b4b9d7b9_Package>(_1b4b9d7b9_Package{._field_Files=nullptr}), });;
}



inline jule::Ptr<_1b4b9a893_ImportInfo> _1b4b45ac4_buildIdentImport(jule::Ptr<_1b4b43a06_symbolBuilder> _self_, jule::Ptr<_1b4b18b30_UseDecl>* _43341_decl) {
	if ((((*((*(_43341_decl))))._field_LinkPath.equal("_", 1) || (_1cb1be785_Find((*((*(_43341_decl))))._field_LinkPath, jule::Str::lit("::_::", 5)) != -1LL)) || _1cb1bde8d_HasSuffix((*((*(_43341_decl))))._field_LinkPath, jule::Str::lit("::_", 3)))) {
		_1b4b444a7_pushErr(_self_.ptr(), &((*((*(_43341_decl))))._field_Token), jule::Str::lit("use declaration paths cannot contain blank identifier", 53), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Str _4419_modPath = ((_1b4b9797d_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1b4b969e3_GetModPath((*_self_.alloc)._field_importer.data);;
	if ((_4419_modPath.len() == 0LL)) {
		_1b4b444a7_pushErr(_self_, &((*((*(_43341_decl))))._field_Token), jule::Str::lit("no module file found in current directory or any parent directory", 65), jule::Slice<jule::Any>());
		_1b4b44c38_pushSuggestion(_self_, jule::Str::lit("use \"julec mod init\" command to initialize module", 49), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Str _44813_path = (*((*(_43341_decl))))._field_LinkPath;;
	_44813_path=_1cb1c44b0_Replace(_44813_path, jule::Str::lit("::", 2), jule::Str::lit("/", 1), -1LL);
	_44813_path=_1cb1e007a_Join(jule::Slice<jule::Str>::make({_4419_modPath,_44813_path}));
	jule::Bool _45215_ok;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1cb1e05ca_Abs(_44813_path);
		_44813_path = __jule_assign_result.__jule_result_arg0;
		_45215_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_45215_ok))) {
		_1b4b444a7_pushErr(_self_, &((*((*(_43341_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_43341_decl))))._field_LinkPath, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_20d92b630_Status> _4599_info = ({
		auto except = static__20d9282b9_Of(_44813_path);
		(except.ok()) ? (except.result) : ({{
			_1b4b444a7_pushErr(_self_, &((*((*(_43341_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_43341_decl))))._field_LinkPath, &__jule_any_type4)}));
			return nullptr;;
		} jule::Ptr<_20d92b630_Status>(nullptr);});
	});;
	if ((!(_20d92ba09_IsDir(_4599_info.ptr())))) {
		_1b4b444a7_pushErr(_self_, &((*((*(_43341_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_43341_decl))))._field_LinkPath, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::I64 _4699_i = (_1cb1c0038_FindLast((*((*(_43341_decl))))._field_LinkPath, jule::Str::lit("::", 2)) + 1LL);;
	jule::Str _4709_ident = (*((*(_43341_decl))))._field_LinkPath.slice(_4699_i);;
	return jule::new_ptr<_1b4b9a893_ImportInfo>(_1b4b9a893_ImportInfo{._field_Token=(*((*(_43341_decl))))._field_Token, ._field_Path=_44813_path, ._field_LinkPath=(*((*(_43341_decl))))._field_LinkPath, ._field_Ident=_4709_ident, ._field_Alias=(*((*(_43341_decl))))._field_Alias, ._field_Binded=false, ._field_Std=false, ._field_ImportAll=(*((*(_43341_decl))))._field_Full, ._field_Package=jule::new_ptr<_1b4b9d7b9_Package>(_1b4b9d7b9_Package{._field_Files=nullptr}), });;
}



inline jule::Ptr<_1b4b9a893_ImportInfo> _1b4b45e15_buildImport(jule::Ptr<_1b4b43a06_symbolBuilder> _self_, jule::Ptr<_1b4b18b30_UseDecl>* _48736_decl) {
	{
		
		if ((*((*(_48736_decl))))._field_Binded) {
			_case_begin_1aac40ada:;
			{
				return _1b4b45442_buildCppHeaderImport(_self_.ptr(), _48736_decl);;
			}
		}
		else if ((*((*(_48736_decl))))._field_Std) {
			_case_begin_1aac40ed6:;
			{
				return _1b4b45783_buildStdImport(_self_.ptr(), _48736_decl);;
			}
		}
		else {
			_case_begin_1aac40a74:;
			{
				return _1b4b45ac4_buildIdentImport(_self_, _48736_decl);;
			}
		}
		_match_end_1aac40975:;
	};
}



inline jule::Bool _1b4b46256_checkDuplicateUseDecl(_1b4b43a06_symbolBuilder* _self_, jule::Ptr<_1b4b9a893_ImportInfo>* _49841_pkg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1b4b9a893_ImportInfo> _5009_lpkg = _1b4c41829_SelectPackage((*(_self_))._field_table.ptr(), jule::__new_closure<jule::Bool,jule::Ptr<_1b4b9a893_ImportInfo>>((void*)__jule_anon_1aac431a3, jule::Ptr<__jule_anon_1aac431a3_ctx>::make(__jule_anon_1aac431a3_ctx{._49841_pkg=_49841_pkg}).as<jule::Uintptr>(), __jule_anon_1aac431a3_ctx_handler));;
	if ((_5009_lpkg == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	_1b4b444a7_pushErr(_self_, &((*((*(_49841_pkg))))._field_Token), jule::Str::lit("use declaration duplication: @ is already used above", 52), jule::Slice<jule::Any>::make({jule::Any((*((*(_49841_pkg))))._field_LinkPath, &__jule_any_type4)}));
	_1b4b44c38_pushSuggestion(_self_, jule::Str::lit("remove this use declaration, already used, it is safe", 53), jule::Slice<jule::Any>());
	__jule_func_result = false;
	return __jule_func_result;;
}



inline void _1b4b465b9_implImportSelections(_1b4b43a06_symbolBuilder* _self_, jule::Ptr<_1b4b9a893_ImportInfo>* _51244_imp, jule::Ptr<_1b4b18b30_UseDecl>* _51267_decl) {
	(*((*(_51244_imp))))._field_Selected=(*((*(_51267_decl))))._field_Selected;
	{
		auto expr = &((*((*(_51244_imp))))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aac45b67:;
		if (it != expr_end) {
			jule::Ptr<_1b4ad5712_Token> _51416_item = *it;
			{
				{
					auto expr = &((*((*(_51244_imp))))._field_Selected);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aac4655d:;
					if (it != expr_end) {
						jule::Ptr<_1b4ad5712_Token> _51520_citem = *it;
						{
							if ((_51416_item == _51520_citem)) {
								goto _iter_end_1aac4655d;
							} else if (((*(_51416_item))._field_Kind == (*(_51520_citem))._field_Kind)) {
								_1b4b444a7_pushErr(_self_, &(_51416_item), jule::Str::lit("duplicated selection: @ is already selected", 43), jule::Slice<jule::Any>::make({jule::Any((*_51416_item.alloc)._field_Kind, &__jule_any_type4)}));
								_1b4b44c38_pushSuggestion(_self_, jule::Str::lit("remove this use selection, already selected, it is safe", 55), jule::Slice<jule::Any>());
								goto _iter_end_1aac4655d;
							};
						}
						_iter_next_1aac4655d:;
						++it;
						goto _iter_begin_1aac4655d;
					}
					_iter_end_1aac4655d:;
				};
			}
			_iter_next_1aac45b67:;
			++it;
			goto _iter_begin_1aac45b67;
		}
		_iter_end_1aac45b67:;
	};
}



inline jule::Str _1b4b4690a_getAsLinkPath(jule::Ptr<_1b4b43a06_symbolBuilder> _self_, jule::Str _52737_path) {
	if (_1cb1bdb19_HasPrefix(_52737_path, _1cb39d9db_PathStdlib)) {
		(_52737_path).mut_slice(_1cb39d9db_PathStdlib.len());;
		return (jule::Str::lit("std", 3) + _1cb1c44b0_Replace(_52737_path, jule::Str::lit("/", 1), jule::Str::lit("::", 2), -1LL));;
	};
	jule::Str _5339_root;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1cb1e05ca_Abs(((_1b4b9797d_ImporterMptrData*)(*(_self_))._field_importer.safe_type())->_1b4b969e3_GetModPath((*(_self_))._field_importer.data));
		_5339_root = __jule_assign_result.__jule_result_arg0;
	});
	(_52737_path).mut_slice(_5339_root.len());;
	if ((_52737_path[0LL] == 47LLU)) {
		(_52737_path).mut_slice(1LL);;
	};
	return _1cb1c44b0_Replace(_52737_path, jule::Str::lit("/", 1), jule::Str::lit("::", 2), -1LL);;
}



inline void _1b4b46d28_pushCycleError(jule::Ptr<_1b4b43a06_symbolBuilder> _self_, jule::Ptr<_1b4b43a06_symbolBuilder>* _54135_sb, jule::Str _54155_path, _1cb1d27a9_StrBuilder* _54171_message) {
	;
	jule::Str _5439_refersTo = _1cb285582_Logf(jule::Str::lit("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any(_1b4b4690a_getAsLinkPath(_self_, _1b4adb64c_Dir((*((*((*(_54135_sb))))._field_table))._field_File.ptr())), &__jule_any_type4),jule::Any(_1b4b4690a_getAsLinkPath(_self_, _54155_path), &__jule_any_type4)}));;
	jule::Str _5479_m = _1cb1dbbd1_Str(_54171_message);;
	_1cb1db3d9_WriteStr(_54171_message, _1cb1bd751_Repeat(jule::Str::lit(" ", 1), 7LL));
	_1cb1db3d9_WriteStr(_54171_message, _5439_refersTo);
	_1cb1db692_WriteByte(_54171_message, '\n');
	_1cb1db3d9_WriteStr(_54171_message, _5479_m);
}



inline void _1b4b47246_pushCrossCycleError(jule::Ptr<_1b4b43a06_symbolBuilder> _self_, jule::Ptr<_1b4b43a06_symbolBuilder>* _55440_target, jule::Ptr<_1b4b9a893_ImportInfo>* _55465_imp, jule::Ptr<_1b4ad5712_Token>* _55484_errorToken) {
	_1cb1d27a9_StrBuilder _55513_message = static__1cb1d2a73_New(32LL);;
	_1b4b46d28_pushCycleError(_self_, &(_self_), (*((*(_55465_imp))))._field_Path, &(_55513_message));
	jule::Ptr<_1b4b43a06_symbolBuilder> _55913_owner = (*_self_.alloc)._field_owner;;
	jule::Ptr<_1b4b43a06_symbolBuilder> _56013_old = _self_;;
	while (((*(_55913_owner))._field_owner != nullptr)) {
		{
			_1b4b46d28_pushCycleError(_self_, &((*_56013_old.alloc)._field_owner), _1b4adb64c_Dir((*((*_56013_old.alloc)._field_table))._field_File.ptr()), &(_55513_message));
			if (((*_55913_owner.alloc)._field_owner == (*(_55440_target)))) {
				_1b4b46d28_pushCycleError(_self_, _55440_target, _1b4adb64c_Dir((*(*_55913_owner.alloc)._field_table.alloc)._field_File), &(_55513_message));
				goto _iter_end_1aac501b0;
			};
			_56013_old=_55913_owner;
			_55913_owner=(*_55913_owner.alloc)._field_owner;
		}
	_iter_next_1aac501b0:;
	}
	_iter_end_1aac501b0:;;
	_1b4b444a7_pushErr(_self_, _55484_errorToken, jule::Str::lit("illegal cross cycle in use declarations;\n@", 42), jule::Slice<jule::Any>::make({jule::Any(_1cb1dbbd1_Str(&_55513_message), &__jule_any_type4)}));
}



inline jule::Bool _1b4b47642_checkImportCycles(jule::Ptr<_1b4b43a06_symbolBuilder> _self_, jule::Ptr<_1b4b9a893_ImportInfo> _57737_imp, jule::Ptr<_1b4b18b30_UseDecl>* _57756_decl) {
	if (((*(_57737_imp))._field_Path == _1b4adb64c_Dir((*((*(_self_))._field_table))._field_File.ptr()))) {
		_1b4b444a7_pushErr(_self_, &((*((*(_57756_decl))))._field_Token), jule::Str::lit("illegal cycle in use declaration, package @ refers to itself", 60), jule::Slice<jule::Any>::make({jule::Any(_1b4b4690a_getAsLinkPath(_self_, (*_57737_imp.alloc)._field_Path), &__jule_any_type4)}));
		return false;;
	};
	if (((*_self_.alloc)._field_owner == nullptr)) {
		return true;;
	};
	jule::Ptr<_1b4b43a06_symbolBuilder> _58713_owner = (*_self_.alloc)._field_owner;;
	_julec_label_1aac55aab:;
	if ((_1b4adb64c_Dir((*(*(_58713_owner))._field_table.alloc)._field_File) == (*_57737_imp.alloc)._field_Path)) {
		_1b4b47246_pushCrossCycleError(_self_, &(_58713_owner), &(_57737_imp), &((*((*(_57756_decl))))._field_Token));
		return false;;
	};
	if (((*_58713_owner.alloc)._field_owner != nullptr)) {
		_58713_owner=(*_58713_owner.alloc)._field_owner;
		goto _julec_label_1aac55aab;
	};
	return true;;
}



inline void _1b4b47a60_checkPackageAccessibility(_1b4b43a06_symbolBuilder* _self_, jule::Ptr<_1b4b18b30_UseDecl>* _60845_decl, jule::Str* _60862_mod, jule::Str* _60873_path) {
	if (((((_1b4b9797d_ImporterMptrData*)(*(_self_))._field_importer.safe_type())->_1b4b969e3_GetModPath((*(_self_))._field_importer.data) != (*(_60862_mod))) && _1cb1c30d5_Contains((*(_60873_path)), jule::Str::lit("internal", 8)))) {
		_1b4b444a7_pushErr(_self_, &((*((*(_60845_decl))))._field_Token), jule::Str::lit("you cannot access to internal packages", 38), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1b4b47e5b_importPackage(jule::Ptr<_1b4b43a06_symbolBuilder> _self_, jule::Ptr<_1b4b9a893_ImportInfo>* _61438_imp, jule::Ptr<_1b4b18b30_UseDecl>* _61461_decl) {
	jule::Bool __jule_func_result = false;
	if ((*((*(_61438_imp))))._field_Binded) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1b4b9a893_ImportInfo> _61913_port = ((_1b4b9797d_ImporterMptrData*)(*(_self_))._field_importer.safe_type())->_1b4b97175_GetImport((*(_self_))._field_importer.data, (*((*(_61438_imp))))._field_Path);;
	if ((_61913_port != nullptr)) {
		(*((*(_61438_imp))))._field_Package=(*_61913_port.alloc)._field_Package;
		(*((*(_61438_imp))))._field_Duplicate=true;
		jule::Str _62413_oldMod = ((_1b4b9797d_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1b4b969e3_GetModPath((*_self_.alloc)._field_importer.data);;
		((_1b4b9797d_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1b4b9675c_SetModPath((*_self_.alloc)._field_importer.data, ((_1b4b9797d_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1b4b96d34_ModById((*_self_.alloc)._field_importer.data, (*((*(_61438_imp))))._field_ModId));
		_1b4b47a60_checkPackageAccessibility(_self_, _61461_decl, &(_62413_oldMod), &((*_61913_port.alloc)._field_Path));
		((_1b4b9797d_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1b4b9675c_SetModPath((*_self_.alloc)._field_importer.data, _62413_oldMod);
	} else {
		if ((!(_1b4b47642_checkImportCycles(_self_, (*(_61438_imp)), _61461_decl)))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
		jule::Str _63313_oldMod = ((_1b4b9797d_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1b4b969e3_GetModPath((*_self_.alloc)._field_importer.data);;
		__JULE_DEFER({
			((_1b4b9797d_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1b4b9675c_SetModPath((*_self_.alloc)._field_importer.data, _63313_oldMod);
		});;
		if ((*((*(_61438_imp))))._field_Std) {
			((_1b4b9797d_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1b4b9675c_SetModPath((*_self_.alloc)._field_importer.data, _1cb39d9db_PathStdlib);
		};
		jule::Slice<jule::Ptr<_1b4ae8ca8_Ast>> _63817_asts;
		jule::Slice<_1cb285120_Log> _63827_errors;
		({
			__jule_tuple_sx_1b4ae8ca8_Ast__jule_tuple_s_1cb285120_Log __jule_assign_result = ((_1b4b9797d_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1b4b97571_ImportPackage((*_self_.alloc)._field_importer.data, (*((*(_61438_imp))))._field_Path, (!((*((*(_61438_imp))))._field_Std)));
			_63817_asts = __jule_assign_result.__jule_result_arg0;
			_63827_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_63827_errors.len() > 0LL)) {
			(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_63827_errors);
			__jule_func_result = false;
			return __jule_func_result;;
		};
		_1b4b47a60_checkPackageAccessibility(_self_, _61461_decl, &(_63313_oldMod), &((*((*(_61438_imp))))._field_Path));
		{
			auto expr = &(_63817_asts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aac621d3:;
			if (it != expr_end) {
				jule::Ptr<_1b4ae8ca8_Ast> _64625_ast = *it;
				{
					jule::Ptr<_1b4c41340_SymbolTable> _64725_table = nullptr;;
					({
						__jule_tuple_x_1b4c41340_SymbolTable__jule_tuple_s_1cb285120_Log __jule_assign_result = _1b4c9d2e2_buildSymbols(&(_64625_ast), &((*_self_.alloc)._field_importer), _self_);
						_64725_table = __jule_assign_result.__jule_result_arg0;
						_63827_errors = __jule_assign_result.__jule_result_arg1;
					});
					if ((_63827_errors.len() > 0LL)) {
						(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_63827_errors);
						__jule_func_result = false;
						return __jule_func_result;;
					};
					(*((*((*(_61438_imp))))._field_Package))._field_Files=jule::append((*(*((*(_61438_imp))))._field_Package.alloc)._field_Files,jule::Slice<jule::Ptr<_1b4c41340_SymbolTable>>::make({_64725_table}));
				}
				_iter_next_1aac621d3:;
				++it;
				goto _iter_begin_1aac621d3;
			}
			_iter_end_1aac621d3:;
		};
	};
	_1b4b465b9_implImportSelections(_self_, _61438_imp, _61461_decl);
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1b4b9a893_ImportInfo> _1b4b4829c_importUseDecl(jule::Ptr<_1b4b43a06_symbolBuilder> _self_, jule::Ptr<_1b4b18b30_UseDecl>* _66138_decl) {
	jule::Ptr<_1b4b9a893_ImportInfo> _66213_imp = _1b4b45e15_buildImport(_self_, _66138_decl);;
	if ((_66213_imp == nullptr)) {
		return nullptr;;
	};
	jule::Bool _66813_ok = _1b4b46256_checkDuplicateUseDecl(_self_, &(_66213_imp));;
	if ((!(_66813_ok))) {
		return nullptr;;
	};
	_66813_ok=_1b4b47e5b_importPackage(_self_, &(_66213_imp), _66138_decl);
	(*((*_self_.alloc)._field_table))._field_Imports=jule::append((*(*_self_.alloc)._field_table.alloc)._field_Imports,jule::Slice<jule::Ptr<_1b4b9a893_ImportInfo>>::make({_66213_imp}));
	if (_66813_ok) {
		((_1b4b9797d_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1b4b97829_Imported((*_self_.alloc)._field_importer.data, _66213_imp);
		return _66213_imp;;
	};
	return nullptr;;
}



inline void _1b4b4849a_importUseDecls(jule::Ptr<_1b4b43a06_symbolBuilder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ast))._field_UseDecls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aac67b67:;
		if (it != expr_end) {
			jule::Ptr<_1b4b18b30_UseDecl> _68321_decl = *it;
			{
				_1b4b4829c_importUseDecl(_self_, &(_68321_decl));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					goto _iter_end_1aac67b67;
				};
			}
			_iter_next_1aac67b67:;
			++it;
			goto _iter_begin_1aac67b67;
		}
		_iter_end_1aac67b67:;
	};
}



inline void _1b4b48753_appendNode(_1b4b43a06_symbolBuilder* _self_, _1b4ae9bbb_Node* _69234_node) {
	{
		auto &_match_expr{ (*(_69234_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type11) {
			_case_begin_1aac681b7:;
			{
				(*((*(_self_))._field_table))._field_Impls=jule::append((*(*(_self_))._field_table.alloc)._field_Impls,jule::Slice<jule::Ptr<_1b4b733a4_Impl>>::make({_1b4b43440_buildImpl((*(_69234_node))._field_Data.unsafe_cast_ptr<_1b4b1c68e_Impl>())}));
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1aac691c9:;
			{
				jule::Ptr<_1b4c7bb1c_TypeAlias> _69717_ta = _1b4b3e98b_buildTypeAlias((*(_69234_node))._field_Data.unsafe_cast_ptr<_1b4b17546_TypeAliasDecl>());;
				(*((*(_self_))._field_table))._field_TypeAliases=jule::append((*(*(_self_))._field_table.alloc)._field_TypeAliases,jule::Slice<jule::Ptr<_1b4c7bb1c_TypeAlias>>::make({_69717_ta}));
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1aac69240:;
			{
				jule::Ptr<_1b4b218b3_Struct> _70017_srct = _1b4b4032c_buildStruct((*(_69234_node))._field_Data.unsafe_cast_ptr<_1b4b1b7e2_StructDecl>());;
				(*((*(_self_))._field_table))._field_Structs=jule::append((*(*(_self_))._field_table.alloc)._field_Structs,jule::Slice<jule::Ptr<_1b4b218b3_Struct>>::make({_70017_srct}));
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1aac692a6:;
			{
				jule::Ptr<_1b4b36884_Fn> _70317_f = _1b4b40ecb_buildFunc((*(_69234_node))._field_Data.unsafe_cast_ptr<_1b4b126d9_FnDecl>());;
				(*((*(_self_))._field_table))._field_Funcs=jule::append((*(*(_self_))._field_table.alloc)._field_Funcs,jule::Slice<jule::Ptr<_1b4b36884_Fn>>::make({_70317_f}));
			}
		}
		else if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1aac6931c:;
			{
				jule::Ptr<_1b4b49c3d_Trait> _70617_t = _1b4b41828_buildTrait((*(_69234_node))._field_Data.unsafe_cast_ptr<_1b4b1c02e_TraitDecl>());;
				(*((*(_self_))._field_table))._field_Traits=jule::append((*(*(_self_))._field_table.alloc)._field_Traits,jule::Slice<jule::Ptr<_1b4b49c3d_Trait>>::make({_70617_t}));
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1aac69383:;
			{
				jule::Ptr<_1b4bddaa1_Var> _70917_v = _1b4b42dac_buildVar((*(_69234_node))._field_Data.unsafe_cast_ptr<_1b4b13894_VarDecl>());;
				(*((*(_self_))._field_table))._field_Vars=jule::append((*(*(_self_))._field_table.alloc)._field_Vars,jule::Slice<jule::Ptr<_1b4bddaa1_Var>>::make({_70917_v}));
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1aac699c1:;
			{
				jule::Ptr<_1b4b4c449_Enum> _71217_e = _1b4b423a6_buildEnum((*(_69234_node))._field_Data.unsafe_cast_ptr<_1b4b19b97_EnumDecl>());;
				(*((*(_self_))._field_table))._field_Enums=jule::append((*(*(_self_))._field_table.alloc)._field_Enums,jule::Slice<jule::Ptr<_1b4b4c449_Enum>>::make({_71217_e}));
			}
		}
		else if (_match_expr.type == &__jule_any_type18) {
			_case_begin_1aac69a37:;
			{
				jule::Ptr<_1b4b4db54_TypeEnum> _71517_e = _1b4b42ae3_buildTypeEnum((*(_69234_node))._field_Data.unsafe_cast_ptr<_1b4b1ab32_TypeEnumDecl>());;
				(*((*(_self_))._field_table))._field_TypeEnums=jule::append((*(*(_self_))._field_table.alloc)._field_TypeEnums,jule::Slice<jule::Ptr<_1b4b4db54_TypeEnum>>::make({_71517_e}));
			}
		}
		else {
			_case_begin_1aac690b9:;
			{
				_1b4b444a7_pushErr(_self_, &((*(_69234_node))._field_Token), jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1aac69064:;
	};
}



inline void _1b4b48951_appendNodes(_1b4b43a06_symbolBuilder* _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_Nodes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aac73cb6:;
		if (it != expr_end) {
			_1b4ae9bbb_Node _72321_node = *it;
			{
				_1b4b48753_appendNode(_self_, &(_72321_node));
			}
			_iter_next_1aac73cb6:;
			++it;
			goto _iter_begin_1aac73cb6;
		}
		_iter_end_1aac73cb6:;
	};
}



inline void _1b4b48c09_pushDirectivePass(_1b4b43a06_symbolBuilder* _self_, jule::Ptr<_1b4aea0d9_Directive>* _72841_d) {
	if (((*((*(_72841_d))))._field_Args.len() == 0LL)) {
		_1b4b444a7_pushErr(_self_, &((*((*(_72841_d))))._field_Tag), jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	} else if (((*((*(_72841_d))))._field_Args.len() > 1LL)) {
		jule::Ptr<_1b4ad5712_Token> _73313_arg = (*((*(_72841_d))))._field_Args[1LL];;
		_1b4b444a7_pushErr(_self_, &(_73313_arg), jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_72841_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
	};
	jule::Ptr<_1b4ad5712_Token> _7379_arg = (*((*(_72841_d))))._field_Args[0LL];;
	if (((*(_7379_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_1b4b444a7_pushErr(_self_, &(_7379_arg), jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if (((*_7379_arg.alloc)._field_Kind[0LL] != '\"')) {
		_1b4b444a7_pushErr(_self_, &(_7379_arg), jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_self_))._field_table))._field_Passes=jule::append((*(*(_self_))._field_table.alloc)._field_Passes,jule::Slice<_1b4b3e051_Pass>::make({_1b4b3e051_Pass{._field_Token=(*((*(_72841_d))))._field_Tag, ._field_Text=(*_7379_arg.alloc)._field_Kind.slice(1LL, ((*_7379_arg.alloc)._field_Kind.len() - 1LL))}}));
}



inline void _1b4b48e07_appendTopDirectives(_1b4b43a06_symbolBuilder* _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aac7942b:;
		if (it != expr_end) {
			jule::Ptr<_1b4aea0d9_Directive> _75521_d = *it;
			{
				{
					auto &_match_expr{ (*((*(_75521_d))._field_Tag))._field_Kind };
					
					if (_match_expr == jule::Str::lit("pass", 4)) {
						_case_begin_1aac7adcd:;
						{
							_1b4b48c09_pushDirectivePass(_self_, &(_75521_d));
						}
					}
					_match_end_1aac7ad12:;
				};
			}
			_iter_next_1aac7942b:;
			++it;
			goto _iter_begin_1aac7942b;
		}
		_iter_end_1aac7942b:;
	};
}



inline void _1b4b49105_build(jule::Ptr<_1b4b43a06_symbolBuilder> _self_) {
	(*(_self_))._field_table=jule::new_ptr<_1b4c41340_SymbolTable>(_1b4c41340_SymbolTable{._field_File=(*((*_self_.alloc)._field_ast))._field_File, });
	_1b4b48e07_appendTopDirectives(_self_);
	_1b4b4849a_importUseDecls(_self_);
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
	_1b4b48951_appendNodes(_self_);
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b43a06_symbolBuilder _Src) {
	_Stream << "symbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1b4b4a106_Str(_1b4b49c3d_Trait* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1b4b4a447_Equal(jule::Ptr<_1b4b49c3d_Trait> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _2521_other) {
	jule::Ptr<_1b4b49c3d_Trait> _269_trt = _1b4c81869_Trait(_2521_other.ptr());;
	return (_self_ == _269_trt);;
}



inline jule::Ptr<_1b4b36884_Fn> _1b4b4a8dc_FindMethod(_1b4b49c3d_Trait* _self_, jule::Str _3429_ident) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aac7e7a5:;
		if (it != expr_end) {
			jule::Ptr<_1b4b36884_Fn> _3521_f = *it;
			{
				if (((*(_3521_f))._field_Ident == _3429_ident)) {
					return _3521_f;;
				};
			}
			_iter_next_1aac7e7a5:;
			++it;
			goto _iter_begin_1aac7e7a5;
		}
		_iter_end_1aac7e7a5:;
	};
	return _1b4b4b06e_findMethodInherit(_self_, &(_3429_ident));;
}



inline jule::Ptr<_1b4b36884_Fn> _1b4b4b06e_findMethodInherit(_1b4b49c3d_Trait* _self_, jule::Str* _5537_ident) {
	{
		auto expr = &((*(_self_))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aac819c7:;
		if (it != expr_end) {
			jule::Ptr<_1b4c84ad1_TypeSymbol> _5621_i = *it;
			{
				if (((*(_5621_i))._field_Kind == nullptr)) {
					goto _iter_next_1aac819c7;
				};
				jule::Ptr<_1b4b49c3d_Trait> _6017_t = _1b4c81869_Trait((*_5621_i.alloc)._field_Kind.ptr());;
				if ((_6017_t != nullptr)) {
					jule::Ptr<_1b4b36884_Fn> _6221_f2 = _1b4b4a8dc_FindMethod(_6017_t, (*(_5537_ident)));;
					if ((_6221_f2 != nullptr)) {
						return _6221_f2;;
					};
				};
			}
			_iter_next_1aac819c7:;
			++it;
			goto _iter_begin_1aac819c7;
		}
		_iter_end_1aac819c7:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b49c3d_Trait _Src) {
	_Stream << _1b4b4a106_Str(&_Src);
	return _Stream;
}



inline jule::Bool _1b4b4bc84_AutoExpr(_1b4b4b8cc_EnumItem* _self_) {
	return ((*(_self_))._field_Value == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b4b8cc_EnumItem _Src) {
	_Stream << "EnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1b4b4c7bd_Str(_1b4b4c449_Enum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1b4b4cb0e_Equal(jule::Ptr<_1b4b4c449_Enum> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _3821_other) {
	jule::Ptr<_1b4b4c449_Enum> _399_enm = _1b4c80813_Enum(_3821_other.ptr());;
	return (_self_ == _399_enm);;
}



inline jule::Ptr<_1b4b4b8cc_EnumItem> _1b4b4d03d_FindItem(_1b4b4c449_Enum* _self_, jule::Str _4727_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aac861d5:;
		if (it != expr_end) {
			jule::Ptr<_1b4b4b8cc_EnumItem> _4821_item = *it;
			{
				if (((*(_4821_item))._field_Ident == _4727_ident)) {
					return _4821_item;;
				};
			}
			_iter_next_1aac861d5:;
			++it;
			goto _iter_begin_1aac861d5;
		}
		_iter_end_1aac861d5:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b4c449_Enum _Src) {
	_Stream << _1b4b4c7bd_Str(&_Src);
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b4d57c_TypeEnumItem _Src) {
	_Stream << "TypeEnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1b4b4de95_Str(_1b4b4db54_TypeEnum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1b4b4e2d6_Equal(jule::Ptr<_1b4b4db54_TypeEnum> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _8021_other) {
	jule::Ptr<_1b4b4db54_TypeEnum> _819_tenm = _1b4c80a99_TypeEnum(_8021_other.ptr());;
	return (_self_ == _819_tenm);;
}



inline jule::Ptr<_1b4b4d57c_TypeEnumItem> _1b4b4e715_FindItem(_1b4b4db54_TypeEnum* _self_, jule::Str _8927_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aac8845c:;
		if (it != expr_end) {
			jule::Ptr<_1b4b4d57c_TypeEnumItem> _9021_item = *it;
			{
				if (((*(_9021_item))._field_Ident == _8927_ident)) {
					return _9021_item;;
				};
			}
			_iter_next_1aac8845c:;
			++it;
			goto _iter_begin_1aac8845c;
		}
		_iter_end_1aac8845c:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b4db54_TypeEnum _Src) {
	_Stream << _1b4b4de95_Str(&_Src);
	return _Stream;
}



inline jule::Str _1b4b52130_Str(_1b4b51cab_comptimeRange* _self_) {
	return jule::Str::lit("comptimeRange", 13);;
}



inline jule::Bool _1b4b52471_Equal(jule::Ptr<_1b4b51cab_comptimeRange> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _3621_other) {
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b51cab_comptimeRange _Src) {
	_Stream << _1b4b52130_Str(&_Src);
	return _Stream;
}



inline jule::Str _1b4b52b47_Str(_1b4b5277e_comptimeStructField* _self_) {
	return jule::Str::lit("comptimeStructField", 19);;
}



inline jule::Bool _1b4b52e88_Equal(jule::Ptr<_1b4b5277e_comptimeStructField> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _4621_other) {
	return false;;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4b5352c__Name(jule::Ptr<_1b4b5277e_comptimeStructField> _self_, jule::Ptr<_1b4c483d0_Eval>* _5026_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _5041_fc) {
	if (((*((*(_5041_fc))))._field_Args.len() > 0LL)) {
		_1b4c48930_pushErr((*(_5026_e)).ptr(), (*((*((*(_5041_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b2753508_Const> _5513_constant = static__1b2754295_NewStr((*((*((*(_self_))._field_field))._field_Decl))._field_Ident);;
	return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=_1b4d6053b_primStr, ._field_Model=jule::Any(_5513_constant, &__jule_any_type19), ._field_Constant=_5513_constant});;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4b53928__Type(jule::Ptr<_1b4b5277e_comptimeStructField> _self_, jule::Ptr<_1b4c483d0_Eval>* _6330_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _6345_fc) {
	if (((*((*(_6345_fc))))._field_Args.len() > 0LL)) {
		_1b4c48930_pushErr((*(_6330_e)).ptr(), (*((*((*(_6345_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1b4b6de82_buildComptimeTypeInfoData(&((*((*(_6330_e))))._field_s), &((*((*(_self_))._field_field))._field_Kind));;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4b53d24__Public(jule::Ptr<_1b4b5277e_comptimeStructField> _self_, jule::Ptr<_1b4c483d0_Eval>* _7132_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _7147_fc) {
	if (((*((*(_7147_fc))))._field_Args.len() > 0LL)) {
		_1b4c48930_pushErr((*(_7132_e)).ptr(), (*((*((*(_7147_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b2753508_Const> _7613_constant = static__1b2753ecb_NewBool((*((*((*(_self_))._field_field))._field_Decl))._field_Public);;
	return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=_1b4d607e4_primBool, ._field_Model=jule::Any(_7613_constant, &__jule_any_type19), ._field_Constant=_7613_constant});;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4b54132_subIdent(jule::Ptr<_1b4b5277e_comptimeStructField> _self_, jule::Str* _8429_ident) {
	{
		auto &_match_expr{ (*(_8429_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1aac9604c:;
			{
				jule::Ptr<_1b4b39865_FnIns> _8717_method = jule::new_ptr<_1b4b39865_FnIns>(_1b4b39865_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1b4c466a8_Data>,jule::Ptr<_1b4c483d0_Eval>*,jule::Ptr<_1b4b03c2a_FnCallExpr>*,jule::Ptr<_1b4c466a8_Data>*>((void*)__jule_anon_1aac97339, jule::Ptr<__jule_anon_1aac97339_ctx>::make(__jule_anon_1aac97339_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aac97339_ctx_handler), });;
				return _1b4b6d800_buildAsComptimeMethodData(&(_8717_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Public", 6)) {
			_case_begin_1aac960e6:;
			{
				jule::Ptr<_1b4b39865_FnIns> _9417_method = jule::new_ptr<_1b4b39865_FnIns>(_1b4b39865_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1b4c466a8_Data>,jule::Ptr<_1b4c483d0_Eval>*,jule::Ptr<_1b4b03c2a_FnCallExpr>*,jule::Ptr<_1b4c466a8_Data>*>((void*)__jule_anon_1aac99292, jule::Ptr<__jule_anon_1aac99292_ctx>::make(__jule_anon_1aac99292_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aac99292_ctx_handler), });;
				return _1b4b6d800_buildAsComptimeMethodData(&(_9417_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1aac9616d:;
			{
				jule::Ptr<_1b4b39865_FnIns> _10117_method = jule::new_ptr<_1b4b39865_FnIns>(_1b4b39865_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1b4c466a8_Data>,jule::Ptr<_1b4c483d0_Eval>*,jule::Ptr<_1b4b03c2a_FnCallExpr>*,jule::Ptr<_1b4c466a8_Data>*>((void*)__jule_anon_1aac9b1ea, jule::Ptr<__jule_anon_1aac9b1ea_ctx>::make(__jule_anon_1aac9b1ea_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aac9b1ea_ctx_handler), });;
				return _1b4b6d800_buildAsComptimeMethodData(&(_10117_method));;
			}
		}
		else {
			_case_begin_1aac95c61:;
			{
				return nullptr;;
			}
		}
		_match_end_1aac95dd7:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b5277e_comptimeStructField _Src) {
	_Stream << _1b4b52b47_Str(&_Src);
	return _Stream;
}



inline jule::Str _1b4b547b4_Str(_1b4b54440_comptimeStructFields* _self_) {
	return jule::Str::lit("comptimeStructFields", 20);;
}



inline jule::Bool _1b4b54b05_Equal(jule::Ptr<_1b4b54440_comptimeStructFields> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _12021_other) {
	return false;;
}



inline void _1b4b55078_ready(_1b4b54440_comptimeStructFields* _self_, jule::Ptr<_1b4bddaa1_Var>* _12429_keyA, jule::Ptr<_1b4bddaa1_Var>* _12446_keyB) {
	if (((*(_12429_keyA)) != nullptr)) {
		(*((*(_12429_keyA))))._field_Constant=true;
		(*((*(_12429_keyA))))._field_Value=jule::new_ptr<_1b4c47830_Value>(_1b4c47830_Value{._field_Data=jule::new_ptr<_1b4c466a8_Data>()});
		(*((*(_12429_keyA))))._field_Kind=(*(_1b4d63572_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_12446_keyB)) != nullptr)) {
		(*((*(_12446_keyB))))._field_Constant=true;
		(*((*(_12446_keyB))))._field_Value=jule::new_ptr<_1b4c47830_Value>(_1b4c47830_Value{._field_Data=jule::new_ptr<_1b4c466a8_Data>()});
		(*((*(_12446_keyB))))._field_Kind=jule::new_ptr<_1b4c84ad1_TypeSymbol>(_1b4c84ad1_TypeSymbol{._field_Kind=jule::new_ptr<_1b4c7c90e_TypeKind>(_1b4c7c90e_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1b4b5277e_comptimeStructField>(), (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data6)})});
	};
}



inline void _1b4b55496_step(_1b4b54440_comptimeStructFields* _self_, jule::I64 _14523_i, jule::Ptr<_1b4bddaa1_Var>* _14536_keyA, jule::Ptr<_1b4bddaa1_Var>* _14553_keyB) {
	if (((*(_14536_keyA)) != nullptr)) {
		(*((*((*((*(_14536_keyA))))._field_Value))._field_Data))._field_Constant=static__1b2753948_NewI64(static_cast<jule::I64>(_14523_i));
		(*(*(*((*(_14536_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Model=jule::Any((*(*(*((*(_14536_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Constant, &__jule_any_type19);
	};
	if (((*(_14553_keyB)) != nullptr)) {
		(*(_1b4c82639_comptimeStructField((*((*((*(_14553_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_14523_i];
	};
}



inline jule::I64 _1b4b5572c_len(_1b4b54440_comptimeStructFields* _self_) {
	return (*(_self_))._field_fields.len();;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b54440_comptimeStructFields _Src) {
	_Stream << _1b4b547b4_Str(&_Src);
	return _Stream;
}



inline jule::Str _1b4b55dae_Str(_1b4b55a3a_comptimeStatic* _self_) {
	return jule::Str::lit("comptimeStatic", 14);;
}



inline jule::Bool _1b4b56200_Equal(jule::Ptr<_1b4b55a3a_comptimeStatic> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _16921_other) {
	return false;;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4b5682c__Name(jule::Ptr<_1b4b55a3a_comptimeStatic> _self_, jule::Ptr<_1b4c483d0_Eval>* _17326_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _17341_fc) {
	if (((*((*(_17341_fc))))._field_Args.len() > 0LL)) {
		_1b4c48930_pushErr((*(_17326_e)).ptr(), (*((*((*(_17341_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b2753508_Const> _17813_constant = static__1b2754295_NewStr((*((*(_self_))._field_field))._field_Ident);;
	return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=_1b4d6053b_primStr, ._field_Model=jule::Any(_17813_constant, &__jule_any_type19), ._field_Constant=_17813_constant});;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4b56c28__Type(jule::Ptr<_1b4b55a3a_comptimeStatic> _self_, jule::Ptr<_1b4c483d0_Eval>* _18630_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _18645_fc) {
	if (((*((*(_18645_fc))))._field_Args.len() > 0LL)) {
		_1b4c48930_pushErr((*(_18630_e)).ptr(), (*((*((*(_18645_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1b4b6de82_buildComptimeTypeInfoData(&((*((*(_18630_e))))._field_s), &((*((*((*(_self_))._field_field))._field_Kind))._field_Kind));;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4b57124__Public(jule::Ptr<_1b4b55a3a_comptimeStatic> _self_, jule::Ptr<_1b4c483d0_Eval>* _19432_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _19447_fc) {
	if (((*((*(_19447_fc))))._field_Args.len() > 0LL)) {
		_1b4c48930_pushErr((*(_19432_e)).ptr(), (*((*((*(_19447_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b2753508_Const> _19913_constant = static__1b2753ecb_NewBool((*((*(_self_))._field_field))._field_Public);;
	return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=_1b4d607e4_primBool, ._field_Model=jule::Any(_19913_constant, &__jule_any_type19), ._field_Constant=_19913_constant});;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4b57465_subIdent(jule::Ptr<_1b4b55a3a_comptimeStatic> _self_, jule::Str* _20729_ident) {
	{
		auto &_match_expr{ (*(_20729_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1aacabb67:;
			{
				jule::Ptr<_1b4b39865_FnIns> _21017_method = jule::new_ptr<_1b4b39865_FnIns>(_1b4b39865_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1b4c466a8_Data>,jule::Ptr<_1b4c483d0_Eval>*,jule::Ptr<_1b4b03c2a_FnCallExpr>*,jule::Ptr<_1b4c466a8_Data>*>((void*)__jule_anon_1aacace54, jule::Ptr<__jule_anon_1aacace54_ctx>::make(__jule_anon_1aacace54_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aacace54_ctx_handler), });;
				return _1b4b6d800_buildAsComptimeMethodData(&(_21017_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Public", 6)) {
			_case_begin_1aacabc11:;
			{
				jule::Ptr<_1b4b39865_FnIns> _21717_method = jule::new_ptr<_1b4b39865_FnIns>(_1b4b39865_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1b4c466a8_Data>,jule::Ptr<_1b4c483d0_Eval>*,jule::Ptr<_1b4b03c2a_FnCallExpr>*,jule::Ptr<_1b4c466a8_Data>*>((void*)__jule_anon_1aacaedac, jule::Ptr<__jule_anon_1aacaedac_ctx>::make(__jule_anon_1aacaedac_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aacaedac_ctx_handler), });;
				return _1b4b6d800_buildAsComptimeMethodData(&(_21717_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1aacabc88:;
			{
				jule::Ptr<_1b4b39865_FnIns> _22417_method = jule::new_ptr<_1b4b39865_FnIns>(_1b4b39865_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1b4c466a8_Data>,jule::Ptr<_1b4c483d0_Eval>*,jule::Ptr<_1b4b03c2a_FnCallExpr>*,jule::Ptr<_1b4c466a8_Data>*>((void*)__jule_anon_1aacb1d15, jule::Ptr<__jule_anon_1aacb1d15_ctx>::make(__jule_anon_1aacb1d15_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aacb1d15_ctx_handler), });;
				return _1b4b6d800_buildAsComptimeMethodData(&(_22417_method));;
			}
		}
		else {
			_case_begin_1aacab87b:;
			{
				return nullptr;;
			}
		}
		_match_end_1aacaba02:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b55a3a_comptimeStatic _Src) {
	_Stream << _1b4b55dae_Str(&_Src);
	return _Stream;
}



inline jule::Str _1b4b57a70_Str(_1b4b576eb_comptimeStatics* _self_) {
	return jule::Str::lit("comptimeStatics", 15);;
}



inline jule::Bool _1b4b57db1_Equal(jule::Ptr<_1b4b576eb_comptimeStatics> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _24321_other) {
	return false;;
}



inline void _1b4b58334_ready(_1b4b576eb_comptimeStatics* _self_, jule::Ptr<_1b4bddaa1_Var>* _24729_keyA, jule::Ptr<_1b4bddaa1_Var>* _24746_keyB) {
	if (((*(_24729_keyA)) != nullptr)) {
		(*((*(_24729_keyA))))._field_Constant=true;
		(*((*(_24729_keyA))))._field_Value=jule::new_ptr<_1b4c47830_Value>(_1b4c47830_Value{._field_Data=jule::new_ptr<_1b4c466a8_Data>()});
		(*((*(_24729_keyA))))._field_Kind=(*(_1b4d63572_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_24746_keyB)) != nullptr)) {
		(*((*(_24746_keyB))))._field_Constant=true;
		(*((*(_24746_keyB))))._field_Value=jule::new_ptr<_1b4c47830_Value>(_1b4c47830_Value{._field_Data=jule::new_ptr<_1b4c466a8_Data>()});
		(*((*(_24746_keyB))))._field_Kind=jule::new_ptr<_1b4c84ad1_TypeSymbol>(_1b4c84ad1_TypeSymbol{._field_Kind=jule::new_ptr<_1b4c7c90e_TypeKind>(_1b4c7c90e_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1b4b55a3a_comptimeStatic>(), (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data8)})});
	};
}



inline void _1b4b58752_step(_1b4b576eb_comptimeStatics* _self_, jule::I64 _26823_i, jule::Ptr<_1b4bddaa1_Var>* _26836_keyA, jule::Ptr<_1b4bddaa1_Var>* _26853_keyB) {
	if (((*(_26836_keyA)) != nullptr)) {
		(*((*((*((*(_26836_keyA))))._field_Value))._field_Data))._field_Constant=static__1b2753948_NewI64(static_cast<jule::I64>(_26823_i));
		(*(*(*((*(_26836_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Model=jule::Any((*(*(*((*(_26836_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Constant, &__jule_any_type19);
	};
	if (((*(_26853_keyB)) != nullptr)) {
		(*(_1b4c83e43_comptimeStatic((*((*((*(_26853_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_26823_i];
	};
}



inline jule::I64 _1b4b589d8_len(_1b4b576eb_comptimeStatics* _self_) {
	return (*(_self_))._field_fields.len();;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b576eb_comptimeStatics _Src) {
	_Stream << _1b4b57a70_Str(&_Src);
	return _Stream;
}



inline jule::Str _1b4b5927a_Str(_1b4b58ce6_comptimeEnumField* _self_) {
	return jule::Str::lit("comptimeEnumField", 17);;
}



inline jule::Bool _1b4b595bb_Equal(jule::Ptr<_1b4b58ce6_comptimeEnumField> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _29221_other) {
	return false;;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4b59a3e__Name(jule::Ptr<_1b4b58ce6_comptimeEnumField> _self_, jule::Ptr<_1b4c483d0_Eval>* _29626_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _29641_fc) {
	if (((*((*(_29641_fc))))._field_Args.len() > 0LL)) {
		_1b4c48930_pushErr((*(_29626_e)).ptr(), (*((*((*(_29641_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b2753508_Const> _30113_constant = static__1b2754295_NewStr((*((*(_self_))._field_field))._field_Ident);;
	return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=_1b4d6053b_primStr, ._field_Model=jule::Any(_30113_constant, &__jule_any_type19), ._field_Constant=_30113_constant});;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4b59d80_subIdent(jule::Ptr<_1b4b58ce6_comptimeEnumField> _self_, jule::Str* _30929_ident) {
	{
		auto &_match_expr{ (*(_30929_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1aacbc958:;
			{
				jule::Ptr<_1b4b39865_FnIns> _31217_method = jule::new_ptr<_1b4b39865_FnIns>(_1b4b39865_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1b4c466a8_Data>,jule::Ptr<_1b4c483d0_Eval>*,jule::Ptr<_1b4b03c2a_FnCallExpr>*,jule::Ptr<_1b4c466a8_Data>*>((void*)__jule_anon_1aacbdb35, jule::Ptr<__jule_anon_1aacbdb35_ctx>::make(__jule_anon_1aacbdb35_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aacbdb35_ctx_handler), });;
				return _1b4b6d800_buildAsComptimeMethodData(&(_31217_method));;
			}
		}
		else {
			_case_begin_1aacbc67d:;
			{
				return nullptr;;
			}
		}
		_match_end_1aacbc804:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b58ce6_comptimeEnumField _Src) {
	_Stream << _1b4b5927a_Str(&_Src);
	return _Stream;
}



inline jule::Str _1b4b5a512_Str(_1b4b5a18d_comptimeEnumFields* _self_) {
	return jule::Str::lit("comptimeEnumFields", 18);;
}



inline jule::Bool _1b4b5a853_Equal(jule::Ptr<_1b4b5a18d_comptimeEnumFields> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _33121_other) {
	return false;;
}



inline void _1b4b5acc6_ready(_1b4b5a18d_comptimeEnumFields* _self_, jule::Ptr<_1b4bddaa1_Var>* _33529_keyA, jule::Ptr<_1b4bddaa1_Var>* _33546_keyB) {
	if (((*(_33529_keyA)) != nullptr)) {
		(*((*(_33529_keyA))))._field_Constant=true;
		(*((*(_33529_keyA))))._field_Value=jule::new_ptr<_1b4c47830_Value>(_1b4c47830_Value{._field_Data=jule::new_ptr<_1b4c466a8_Data>()});
		(*((*(_33529_keyA))))._field_Kind=(*(_1b4d63572_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_33546_keyB)) != nullptr)) {
		(*((*(_33546_keyB))))._field_Constant=true;
		(*((*(_33546_keyB))))._field_Value=jule::new_ptr<_1b4c47830_Value>(_1b4c47830_Value{._field_Data=jule::new_ptr<_1b4c466a8_Data>()});
		(*((*(_33546_keyB))))._field_Kind=jule::new_ptr<_1b4c84ad1_TypeSymbol>(_1b4c84ad1_TypeSymbol{._field_Kind=jule::new_ptr<_1b4c7c90e_TypeKind>(_1b4c7c90e_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1b4b58ce6_comptimeEnumField>(), (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data10)})});
	};
}



inline void _1b4b5b1e4_step(_1b4b5a18d_comptimeEnumFields* _self_, jule::I64 _35623_i, jule::Ptr<_1b4bddaa1_Var>* _35636_keyA, jule::Ptr<_1b4bddaa1_Var>* _35653_keyB) {
	if (((*(_35636_keyA)) != nullptr)) {
		(*((*((*((*(_35636_keyA))))._field_Value))._field_Data))._field_Constant=static__1b2753948_NewI64(static_cast<jule::I64>(_35623_i));
		(*(*(*((*(_35636_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Model=jule::Any((*(*(*((*(_35636_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Constant, &__jule_any_type19);
	};
	if (((*(_35653_keyB)) != nullptr)) {
		(*(_1b4c82b56_comptimeEnumField((*((*((*(_35653_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_35623_i];
	};
}



inline jule::I64 _1b4b5b47a_len(_1b4b5a18d_comptimeEnumFields* _self_) {
	return (*(_self_))._field_fields.len();;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b5a18d_comptimeEnumFields _Src) {
	_Stream << _1b4b5a512_Str(&_Src);
	return _Stream;
}



inline jule::Str _1b4b5bb0c_Str(_1b4b5b788_comptimeParam* _self_) {
	return jule::Str::lit("comptimeParam", 13);;
}



inline jule::Bool _1b4b5be4d_Equal(jule::Ptr<_1b4b5b788_comptimeParam> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _38021_other) {
	return false;;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4b5c6ac__Name(jule::Ptr<_1b4b5b788_comptimeParam> _self_, jule::Ptr<_1b4c483d0_Eval>* _38426_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _38441_fc) {
	if (((*((*(_38441_fc))))._field_Args.len() > 0LL)) {
		_1b4c48930_pushErr((*(_38426_e)).ptr(), (*((*((*(_38441_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b2753508_Const> _38913_constant = static__1b2754295_NewStr((*((*((*(_self_))._field_param))._field_Decl))._field_Ident);;
	return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=_1b4d6053b_primStr, ._field_Model=jule::Any(_38913_constant, &__jule_any_type19), ._field_Constant=_38913_constant});;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4b5caa8__Type(jule::Ptr<_1b4b5b788_comptimeParam> _self_, jule::Ptr<_1b4c483d0_Eval>* _39730_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _39745_fc) {
	if (((*((*(_39745_fc))))._field_Args.len() > 0LL)) {
		_1b4c48930_pushErr((*(_39730_e)).ptr(), (*((*((*(_39745_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1b4b6de82_buildComptimeTypeInfoData(&((*((*(_39730_e))))._field_s), &((*((*(_self_))._field_param))._field_Kind));;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4b5cea4__Variadic(jule::Ptr<_1b4b5b788_comptimeParam> _self_, jule::Ptr<_1b4c483d0_Eval>* _40534_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _40549_fc) {
	if (((*((*(_40549_fc))))._field_Args.len() > 0LL)) {
		_1b4c48930_pushErr((*(_40534_e)).ptr(), (*((*((*(_40549_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Variadic", 8), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b2753508_Const> _41013_constant = static__1b2753ecb_NewBool((*((*((*(_self_))._field_param))._field_Decl))._field_Variadic);;
	return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=_1b4d607e4_primBool, ._field_Model=jule::Any(_41013_constant, &__jule_any_type19), ._field_Constant=_41013_constant});;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4b5d3a0__Reference(jule::Ptr<_1b4b5b788_comptimeParam> _self_, jule::Ptr<_1b4c483d0_Eval>* _41835_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _41850_fc) {
	if (((*((*(_41850_fc))))._field_Args.len() > 0LL)) {
		_1b4c48930_pushErr((*(_41835_e)).ptr(), (*((*((*(_41850_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Reference", 9), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b2753508_Const> _42313_constant = static__1b2753ecb_NewBool((*((*((*(_self_))._field_param))._field_Decl))._field_Reference);;
	return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=_1b4d607e4_primBool, ._field_Model=jule::Any(_42313_constant, &__jule_any_type19), ._field_Constant=_42313_constant});;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4b5d6e1_subIdent(jule::Ptr<_1b4b5b788_comptimeParam> _self_, jule::Str* _43129_ident) {
	{
		auto &_match_expr{ (*(_43129_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1aacd2374:;
			{
				jule::Ptr<_1b4b39865_FnIns> _43417_method = jule::new_ptr<_1b4b39865_FnIns>(_1b4b39865_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1b4c466a8_Data>,jule::Ptr<_1b4c483d0_Eval>*,jule::Ptr<_1b4b03c2a_FnCallExpr>*,jule::Ptr<_1b4c466a8_Data>*>((void*)__jule_anon_1aacd36a5, jule::Ptr<__jule_anon_1aacd36a5_ctx>::make(__jule_anon_1aacd36a5_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aacd36a5_ctx_handler), });;
				return _1b4b6d800_buildAsComptimeMethodData(&(_43417_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Variadic", 8)) {
			_case_begin_1aacd23da:;
			{
				jule::Ptr<_1b4b39865_FnIns> _44117_method = jule::new_ptr<_1b4b39865_FnIns>(_1b4b39865_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1b4c466a8_Data>,jule::Ptr<_1b4c483d0_Eval>*,jule::Ptr<_1b4b03c2a_FnCallExpr>*,jule::Ptr<_1b4c466a8_Data>*>((void*)__jule_anon_1aacd560d, jule::Ptr<__jule_anon_1aacd560d_ctx>::make(__jule_anon_1aacd560d_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aacd560d_ctx_handler), });;
				return _1b4b6d800_buildAsComptimeMethodData(&(_44117_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Reference", 9)) {
			_case_begin_1aacd2462:;
			{
				jule::Ptr<_1b4b39865_FnIns> _44817_method = jule::new_ptr<_1b4b39865_FnIns>(_1b4b39865_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1b4c466a8_Data>,jule::Ptr<_1b4c483d0_Eval>*,jule::Ptr<_1b4b03c2a_FnCallExpr>*,jule::Ptr<_1b4c466a8_Data>*>((void*)__jule_anon_1aacd7566, jule::Ptr<__jule_anon_1aacd7566_ctx>::make(__jule_anon_1aacd7566_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aacd7566_ctx_handler), });;
				return _1b4b6d800_buildAsComptimeMethodData(&(_44817_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1aacd24d9:;
			{
				jule::Ptr<_1b4b39865_FnIns> _45517_method = jule::new_ptr<_1b4b39865_FnIns>(_1b4b39865_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1b4c466a8_Data>,jule::Ptr<_1b4c483d0_Eval>*,jule::Ptr<_1b4b03c2a_FnCallExpr>*,jule::Ptr<_1b4c466a8_Data>*>((void*)__jule_anon_1aacd94be, jule::Ptr<__jule_anon_1aacd94be_ctx>::make(__jule_anon_1aacd94be_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aacd94be_ctx_handler), });;
				return _1b4b6d800_buildAsComptimeMethodData(&(_45517_method));;
			}
		}
		else {
			_case_begin_1aacd2044:;
			{
				return nullptr;;
			}
		}
		_match_end_1aacd21ba:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b5b788_comptimeParam _Src) {
	_Stream << _1b4b5bb0c_Str(&_Src);
	return _Stream;
}



inline jule::Str _1b4b5dc63_Str(_1b4b5d922_comptimeParams* _self_) {
	return jule::Str::lit("comptimeParams", 14);;
}



inline jule::Bool _1b4b5e0a4_Equal(jule::Ptr<_1b4b5d922_comptimeParams> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _47421_other) {
	return false;;
}



inline void _1b4b5e527_ready(_1b4b5d922_comptimeParams* _self_, jule::Ptr<_1b4bddaa1_Var>* _47829_keyA, jule::Ptr<_1b4bddaa1_Var>* _47846_keyB) {
	if (((*(_47829_keyA)) != nullptr)) {
		(*((*(_47829_keyA))))._field_Constant=true;
		(*((*(_47829_keyA))))._field_Value=jule::new_ptr<_1b4c47830_Value>(_1b4c47830_Value{._field_Data=jule::new_ptr<_1b4c466a8_Data>()});
		(*((*(_47829_keyA))))._field_Kind=(*(_1b4d63572_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_47846_keyB)) != nullptr)) {
		(*((*(_47846_keyB))))._field_Constant=true;
		(*((*(_47846_keyB))))._field_Value=jule::new_ptr<_1b4c47830_Value>(_1b4c47830_Value{._field_Data=jule::new_ptr<_1b4c466a8_Data>()});
		(*((*(_47846_keyB))))._field_Kind=jule::new_ptr<_1b4c84ad1_TypeSymbol>(_1b4c84ad1_TypeSymbol{._field_Kind=jule::new_ptr<_1b4c7c90e_TypeKind>(_1b4c7c90e_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1b4b5b788_comptimeParam>(), (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data12)})});
	};
}



inline void _1b4b5e945_step(_1b4b5d922_comptimeParams* _self_, jule::I64 _49923_i, jule::Ptr<_1b4bddaa1_Var>* _49936_keyA, jule::Ptr<_1b4bddaa1_Var>* _49953_keyB) {
	if (((*(_49936_keyA)) != nullptr)) {
		(*((*((*((*(_49936_keyA))))._field_Value))._field_Data))._field_Constant=static__1b2753948_NewI64(static_cast<jule::I64>(_49923_i));
		(*(*(*((*(_49936_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Model=jule::Any((*(*(*((*(_49936_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Constant, &__jule_any_type19);
	};
	if (((*(_49953_keyB)) != nullptr)) {
		(*(_1b4c83173_comptimeParam((*((*((*(_49953_keyB))))._field_Kind))._field_Kind.ptr())))._field_param=(*(_self_))._field_params[_49923_i];
	};
}



inline jule::I64 _1b4b5ebcb_len(_1b4b5d922_comptimeParams* _self_) {
	return (*(_self_))._field_params.len();;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b5d922_comptimeParams _Src) {
	_Stream << _1b4b5dc63_Str(&_Src);
	return _Stream;
}



inline jule::Str _1b4b6035d_Str(_1b4b5eed9_comptimeTypeInfos* _self_) {
	return jule::Str::lit("comptimeTypeInfos", 17);;
}



inline jule::Bool _1b4b6069e_Equal(jule::Ptr<_1b4b5eed9_comptimeTypeInfos> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _52321_other) {
	return false;;
}



inline void _1b4b60b22_ready(_1b4b5eed9_comptimeTypeInfos* _self_, jule::Ptr<_1b4bddaa1_Var>* _52729_keyA, jule::Ptr<_1b4bddaa1_Var>* _52746_keyB) {
	if (((*(_52729_keyA)) != nullptr)) {
		(*((*(_52729_keyA))))._field_Constant=true;
		(*((*(_52729_keyA))))._field_Value=jule::new_ptr<_1b4c47830_Value>(_1b4c47830_Value{._field_Data=jule::new_ptr<_1b4c466a8_Data>()});
		(*((*(_52729_keyA))))._field_Kind=(*(_1b4d63572_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_52746_keyB)) != nullptr)) {
		(*((*(_52746_keyB))))._field_Constant=true;
		(*((*(_52746_keyB))))._field_Value=jule::new_ptr<_1b4c47830_Value>(_1b4c47830_Value{._field_Data=jule::new_ptr<_1b4c466a8_Data>()});
		(*((*(_52746_keyB))))._field_Kind=jule::new_ptr<_1b4c84ad1_TypeSymbol>(_1b4c84ad1_TypeSymbol{._field_Kind=jule::new_ptr<_1b4c7c90e_TypeKind>(_1b4c7c90e_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1b4b615d4_comptimeTypeInfo>(), (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data15)})});
	};
}



inline void _1b4b61040_step(_1b4b5eed9_comptimeTypeInfos* _self_, jule::I64 _54823_i, jule::Ptr<_1b4bddaa1_Var>* _54836_keyA, jule::Ptr<_1b4bddaa1_Var>* _54853_keyB) {
	if (((*(_54836_keyA)) != nullptr)) {
		(*((*((*((*(_54836_keyA))))._field_Value))._field_Data))._field_Constant=static__1b2753948_NewI64(static_cast<jule::I64>(_54823_i));
		(*(*(*((*(_54836_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Model=jule::Any((*(*(*((*(_54836_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Constant, &__jule_any_type19);
	};
	if (((*(_54853_keyB)) != nullptr)) {
		(*((*((*((*(_54853_keyB))))._field_Kind))._field_Kind))._field_Kind=jule::Trait((*(_self_))._field_types[_54823_i], (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data15);
	};
}



inline jule::I64 _1b4b612c6_len(_1b4b5eed9_comptimeTypeInfos* _self_) {
	return (*(_self_))._field_types.len();;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b5eed9_comptimeTypeInfos _Src) {
	_Stream << _1b4b6035d_Str(&_Src);
	return _Stream;
}



inline jule::Str _1b4b61958_Str(_1b4b615d4_comptimeTypeInfo* _self_) {
	return ((jule::Str::lit("comptimeTypeInfo[", 17) + _1b4c7ccc7_Str((*(_self_))._field_base.ptr())) + jule::Str::lit("]", 1));;
}



inline jule::Bool _1b4b61c99_Equal(jule::Ptr<_1b4b615d4_comptimeTypeInfo> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _57221_other) {
	return false;;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4b623e8__Str(jule::Ptr<_1b4b615d4_comptimeTypeInfo> _self_, jule::Ptr<_1b4c483d0_Eval>* _57625_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _57640_fc) {
	if (((*((*(_57640_fc))))._field_Args.len() > 0LL)) {
		_1b4c48930_pushErr((*(_57625_e)).ptr(), (*((*((*(_57640_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Str", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b2753508_Const> _58113_constant = static__1b2754295_NewStr(_1b4c7ccc7_Str((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=_1b4d6053b_primStr, ._field_Model=jule::Any(_58113_constant, &__jule_any_type19), ._field_Constant=_58113_constant});;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4b627e4__Kind(jule::Ptr<_1b4b615d4_comptimeTypeInfo> _self_, jule::Ptr<_1b4c483d0_Eval>* _58930_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _58945_fc) {
	if (((*((*(_58945_fc))))._field_Args.len() > 0LL)) {
		_1b4c48930_pushErr((*(_58930_e)).ptr(), (*((*((*(_58945_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Kind", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b4b4c449_Enum> _59413_enm = _1b4b9c5ed_FindEnum(_1b4b6db0d_findComptimePackage(&((*((*(_58930_e))))._field_s)).ptr(), jule::Str::lit("Kind", 4));;
	jule::Ptr<_1b4b4b8cc_EnumItem> _59517_item = nullptr;;
	{
		
		if (_1b4c7dc73_Void((*(_self_))._field_base.ptr())) {
			_case_begin_1aaceec76:;
			{
				_59517_item=_1b4b4d03d_FindItem(_59413_enm.ptr(), jule::Str::lit("Void", 4));
			}
		}
		else if ((_1b4c815d3_Struct((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1aaceeb88:;
			{
				_59517_item=_1b4b4d03d_FindItem(_59413_enm.ptr(), jule::Str::lit("Struct", 6));
			}
		}
		else if ((_1b4c81869_Trait((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1aacee847:;
			{
				_59517_item=_1b4b4d03d_FindItem(_59413_enm.ptr(), jule::Str::lit("Trait", 5));
			}
		}
		else if ((_1b4c8057c_Ptr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1aacee8ad:;
			{
				if (_1b4c8d315_IsUnsafe(_1b4c8057c_Ptr((*_self_.alloc)._field_base).ptr())) {
					_59517_item=_1b4b4d03d_FindItem(_59413_enm.ptr(), jule::Str::lit("UnsafePtr", 9));
				} else {
					_59517_item=_1b4b4d03d_FindItem(_59413_enm.ptr(), jule::Str::lit("Ptr", 3));
				};
			}
		}
		else if ((_1b4c802e6_Sptr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1aacee924:;
			{
				_59517_item=_1b4b4d03d_FindItem(_59413_enm.ptr(), jule::Str::lit("SmartPtr", 8));
			}
		}
		else if ((_1b4c80813_Enum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1aacee98a:;
			{
				_59517_item=_1b4b4d03d_FindItem(_59413_enm.ptr(), jule::Str::lit("Enum", 4));
			}
		}
		else if ((_1b4c81b00_Map((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1aad004d5:;
			{
				_59517_item=_1b4b4d03d_FindItem(_59413_enm.ptr(), jule::Str::lit("Map", 3));
			}
		}
		else if ((_1b4c810b6_Slc((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1aad0054b:;
			{
				_59517_item=_1b4b4d03d_FindItem(_59413_enm.ptr(), jule::Str::lit("Slice", 5));
			}
		}
		else if ((_1b4c80d30_Arr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1aad005b2:;
			{
				_59517_item=_1b4b4d03d_FindItem(_59413_enm.ptr(), jule::Str::lit("Array", 5));
			}
		}
		else if ((_1b4c8134c_Fn((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1aad00628:;
			{
				_59517_item=_1b4b4d03d_FindItem(_59413_enm.ptr(), jule::Str::lit("Func", 4));
			}
		}
		else if ((_1b4c81d86_Tup((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1aad0068e:;
			{
				_59517_item=_1b4b4d03d_FindItem(_59413_enm.ptr(), jule::Str::lit("Tuple", 5));
			}
		}
		else if ((_1b4c80060_Prim((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1aad00716:;
			{
				jule::Ptr<_1b4c854d8_Prim> _62413_prim = _1b4c80060_Prim((*_self_.alloc)._field_base);;
				{
					
					if (_1b4c88c06_IsAny(_62413_prim.ptr())) {
						_case_begin_1aad0b645:;
						{
							_59517_item=_1b4b4d03d_FindItem(_59413_enm.ptr(), jule::Str::lit("Any", 3));
						}
					}
					else if (_1b4c886d9_IsBool(_62413_prim.ptr())) {
						_case_begin_1aad0b557:;
						{
							_59517_item=_1b4b4d03d_FindItem(_59413_enm.ptr(), jule::Str::lit("Bool", 4));
						}
					}
					else if (_1b4c88970_IsStr(_62413_prim.ptr())) {
						_case_begin_1aad0b348:;
						{
							_59517_item=_1b4b4d03d_FindItem(_59413_enm.ptr(), jule::Str::lit("Str", 3));
						}
					}
					else if (_1b4c87919_IsF32(_62413_prim.ptr())) {
						_case_begin_1aad0b3ae:;
						{
							_59517_item=_1b4b4d03d_FindItem(_59413_enm.ptr(), jule::Str::lit("F32", 3));
						}
					}
					else if (_1b4c87ba0_IsF64(_62413_prim.ptr())) {
						_case_begin_1aad0b425:;
						{
							_59517_item=_1b4b4d03d_FindItem(_59413_enm.ptr(), jule::Str::lit("F64", 3));
						}
					}
					else if (_1b4c86396_IsI8(_62413_prim.ptr())) {
						_case_begin_1aad0b48b:;
						{
							_59517_item=_1b4b4d03d_FindItem(_59413_enm.ptr(), jule::Str::lit("I8", 2));
						}
					}
					else if (_1b4c8662c_IsI16(_62413_prim.ptr())) {
						_case_begin_1aad0bda4:;
						{
							_59517_item=_1b4b4d03d_FindItem(_59413_enm.ptr(), jule::Str::lit("I16", 3));
						}
					}
					else if (_1b4c868b3_IsI32(_62413_prim.ptr())) {
						_case_begin_1aad0be2b:;
						{
							_59517_item=_1b4b4d03d_FindItem(_59413_enm.ptr(), jule::Str::lit("I32", 3));
						}
					}
					else if (_1b4c86b49_IsI64(_62413_prim.ptr())) {
						_case_begin_1aad0bea3:;
						{
							_59517_item=_1b4b4d03d_FindItem(_59413_enm.ptr(), jule::Str::lit("I64", 3));
						}
					}
					else if (_1b4c86dd0_IsU8(_62413_prim.ptr())) {
						_case_begin_1aad0c02a:;
						{
							_59517_item=_1b4b4d03d_FindItem(_59413_enm.ptr(), jule::Str::lit("U8", 2));
						}
					}
					else if (_1b4c87166_IsU16(_62413_prim.ptr())) {
						_case_begin_1aad0c0a2:;
						{
							_59517_item=_1b4b4d03d_FindItem(_59413_enm.ptr(), jule::Str::lit("U16", 3));
						}
					}
					else if (_1b4c873ec_IsU32(_62413_prim.ptr())) {
						_case_begin_1aad0c129:;
						{
							_59517_item=_1b4b4d03d_FindItem(_59413_enm.ptr(), jule::Str::lit("U32", 3));
						}
					}
					else if (_1b4c87683_IsU64(_62413_prim.ptr())) {
						_case_begin_1aad0c1a1:;
						{
							_59517_item=_1b4b4d03d_FindItem(_59413_enm.ptr(), jule::Str::lit("U64", 3));
						}
					}
					else if (_1b4c87e36_IsInt(_62413_prim.ptr())) {
						_case_begin_1aad0c228:;
						{
							_59517_item=_1b4b4d03d_FindItem(_59413_enm.ptr(), jule::Str::lit("Int", 3));
						}
					}
					else if (_1b4c881bc_IsUint(_62413_prim.ptr())) {
						_case_begin_1aad0c2a0:;
						{
							_59517_item=_1b4b4d03d_FindItem(_59413_enm.ptr(), jule::Str::lit("Uint", 4));
						}
					}
					else if (_1b4c88453_IsUintptr(_62413_prim.ptr())) {
						_case_begin_1aad0c327:;
						{
							_59517_item=_1b4b4d03d_FindItem(_59413_enm.ptr(), jule::Str::lit("Uintptr", 7));
						}
					}
					else {
						_case_begin_1aad0b1a0:;
						{
							jule::panic((jule::Str::lit("Kind(): unimplemented type for std::comptime: ", 46) + _1b4c7ccc7_Str((*_self_.alloc)._field_base)) + jule::Str("\nlocation: std/jule/sema/comptime.jule:659:17"));;
						}
					}
					_match_end_1aad0b139:;
				};
			}
		}
		else {
			_case_begin_1aacee7d1:;
			{
				jule::panic((jule::Str::lit("Kind(): unimplemented type for std::comptime: ", 46) + _1b4c7ccc7_Str((*(_self_))._field_base.ptr())) + jule::Str("\nlocation: std/jule/sema/comptime.jule:662:13"));;
			}
		}
		_match_end_1aacee737:;
	};
	return _1b4c78d4a_evalEnumStatic(&(_59413_enm), &(_59517_item), &((*((*(_58945_fc))))._field_Token));;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4b62be0__Bits(jule::Ptr<_1b4b615d4_comptimeTypeInfo> _self_, jule::Ptr<_1b4c483d0_Eval>* _66730_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _66745_fc) {
	if (((*((*(_66745_fc))))._field_Args.len() > 0LL)) {
		_1b4c48930_pushErr((*(_66730_e)).ptr(), (*((*((*(_66745_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b4c854d8_Prim> _6729_prim = _1b4c80060_Prim((*(_self_))._field_base.ptr());;
	if ((_6729_prim == nullptr)) {
		_1b4c48930_pushErr((*(_66730_e)).ptr(), (*((*(_66745_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1b4c7ccc7_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::I64 _6779_n = _1b2747871_BitsizeOf((*(_6729_prim))._field_Kind);;
	if ((_6779_n == -1LL)) {
		_1b4c48930_pushErr((*(_66730_e)).ptr(), (*((*(_66745_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1b4c7ccc7_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b2753508_Const> _68213_constant = static__1b2753948_NewI64(static_cast<jule::I64>(_6779_n));;
	return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=_1b4d6053b_primStr, ._field_Model=jule::Any(_68213_constant, &__jule_any_type19), ._field_Constant=_68213_constant});;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4b630db__Elem(jule::Ptr<_1b4b615d4_comptimeTypeInfo> _self_, jule::Ptr<_1b4c483d0_Eval>* _69030_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _69045_fc) {
	if (((*((*(_69045_fc))))._field_Args.len() > 0LL)) {
		_1b4c48930_pushErr((*(_69030_e)).ptr(), (*((*((*(_69045_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b4c8c7cb_Ptr> _69513_ptr = _1b4c8057c_Ptr((*(_self_))._field_base.ptr());;
	if ((_69513_ptr != nullptr)) {
		if (_1b4c8d315_IsUnsafe(_69513_ptr)) {
			_1b4c48930_pushErr((*(_69030_e)).ptr(), (*((*(_69045_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1b4c7ccc7_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type4)}));
			return nullptr;;
		};
		return _1b4b6de82_buildComptimeTypeInfoData(&((*((*(_69030_e))))._field_s), &((*_69513_ptr.alloc)._field_Elem));;
	};
	jule::Ptr<_1b4c89014_Sptr> _70313_sptr = _1b4c802e6_Sptr((*_self_.alloc)._field_base);;
	if ((_70313_sptr != nullptr)) {
		return _1b4b6de82_buildComptimeTypeInfoData(&((*((*(_69030_e))))._field_s), &((*_70313_sptr.alloc)._field_Elem));;
	};
	jule::Ptr<_1b4c899d7_Slc> _70713_slice = _1b4c810b6_Slc((*_self_.alloc)._field_base);;
	if ((_70713_slice != nullptr)) {
		return _1b4b6de82_buildComptimeTypeInfoData(&((*((*(_69030_e))))._field_s), &((*_70713_slice.alloc)._field_Elem));;
	};
	jule::Ptr<_1b4c8bd08_Arr> _71113_array = _1b4c80d30_Arr((*_self_.alloc)._field_base);;
	if ((_71113_array != nullptr)) {
		return _1b4b6de82_buildComptimeTypeInfoData(&((*((*(_69030_e))))._field_s), &((*_71113_array.alloc)._field_Elem));;
	};
	jule::Ptr<_1b4b4c449_Enum> _71513_enm = _1b4c80813_Enum((*_self_.alloc)._field_base);;
	if ((_71513_enm != nullptr)) {
		return _1b4b6de82_buildComptimeTypeInfoData(&((*((*(_69030_e))))._field_s), &((*((*_71513_enm.alloc)._field_Kind))._field_Kind));;
	};
	_1b4c48930_pushErr((*(_69030_e)).ptr(), (*((*(_69045_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1b4c7ccc7_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4b634d7__Size(jule::Ptr<_1b4b615d4_comptimeTypeInfo> _self_, jule::Ptr<_1b4c483d0_Eval>* _72330_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _72345_fc) {
	if (((*((*(_72345_fc))))._field_Args.len() > 0LL)) {
		_1b4c48930_pushErr((*(_72330_e)).ptr(), (*((*((*(_72345_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Size", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b4c8bd08_Arr> _72813_arr = _1b4c80d30_Arr((*(_self_))._field_base.ptr());;
	if ((_72813_arr == nullptr)) {
		_1b4c48930_pushErr((*(_72330_e)).ptr(), (*((*(_72345_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1b4c7ccc7_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Size", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b2753508_Const> _73313_constant = static__1b2753948_NewI64(static_cast<jule::I64>((*(_72813_arr))._field_N));;
	return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=_1b4d6121d_primInt, ._field_Model=jule::Any(_73313_constant, &__jule_any_type19), ._field_Constant=_73313_constant});;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4b638d3__Key(jule::Ptr<_1b4b615d4_comptimeTypeInfo> _self_, jule::Ptr<_1b4c483d0_Eval>* _74129_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _74144_fc) {
	if (((*((*(_74144_fc))))._field_Args.len() > 0LL)) {
		_1b4c48930_pushErr((*(_74129_e)).ptr(), (*((*((*(_74144_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Key", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b4c8b17b_Map> _74613_m = _1b4c81b00_Map((*(_self_))._field_base.ptr());;
	if ((_74613_m == nullptr)) {
		_1b4c48930_pushErr((*(_74129_e)).ptr(), (*((*(_74144_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1b4c7ccc7_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Key", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1b4b6de82_buildComptimeTypeInfoData(&((*((*(_74129_e))))._field_s), &((*(_74613_m))._field_Key));;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4b63cce__Value(jule::Ptr<_1b4b615d4_comptimeTypeInfo> _self_, jule::Ptr<_1b4c483d0_Eval>* _75431_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _75446_fc) {
	if (((*((*(_75446_fc))))._field_Args.len() > 0LL)) {
		_1b4c48930_pushErr((*(_75431_e)).ptr(), (*((*((*(_75446_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Value", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b4c8b17b_Map> _75913_m = _1b4c81b00_Map((*(_self_))._field_base.ptr());;
	if ((_75913_m == nullptr)) {
		_1b4c48930_pushErr((*(_75431_e)).ptr(), (*((*(_75446_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1b4c7ccc7_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Value", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1b4b6de82_buildComptimeTypeInfoData(&((*((*(_75431_e))))._field_s), &((*(_75913_m))._field_Val));;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4b641ca__Fields(jule::Ptr<_1b4b615d4_comptimeTypeInfo> _self_, jule::Ptr<_1b4c483d0_Eval>* _76732_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _76747_fc) {
	if (((*((*(_76747_fc))))._field_Args.len() > 0LL)) {
		_1b4c48930_pushErr((*(_76732_e)).ptr(), (*((*((*(_76747_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b4b24641_StructIns> _77213_s = _1b4c815d3_Struct((*(_self_))._field_base.ptr());;
	if ((_77213_s != nullptr)) {
		return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=jule::new_ptr<_1b4c7c90e_TypeKind>(_1b4c7c90e_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1b4b54440_comptimeStructFields>(_1b4b54440_comptimeStructFields{._field_fields=(*_77213_s.alloc)._field_Fields}), (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data7)}), });;
	};
	jule::Ptr<_1b4b4c449_Enum> _78213_enm = _1b4c80813_Enum((*_self_.alloc)._field_base);;
	if ((_78213_enm != nullptr)) {
		return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=jule::new_ptr<_1b4c7c90e_TypeKind>(_1b4c7c90e_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1b4b5a18d_comptimeEnumFields>(_1b4b5a18d_comptimeEnumFields{._field_fields=(*_78213_enm.alloc)._field_Items}), (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data11)}), });;
	};
	_1b4c48930_pushErr((*(_76732_e)).ptr(), (*((*(_76747_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1b4c7ccc7_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4b645c6__Statics(jule::Ptr<_1b4b615d4_comptimeTypeInfo> _self_, jule::Ptr<_1b4c483d0_Eval>* _79633_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _79648_fc) {
	if (((*((*(_79648_fc))))._field_Args.len() > 0LL)) {
		_1b4c48930_pushErr((*(_79633_e)).ptr(), (*((*((*(_79648_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Statics", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b4b24641_StructIns> _80113_s = _1b4c815d3_Struct((*(_self_))._field_base.ptr());;
	if ((_80113_s == nullptr)) {
		_1b4c48930_pushErr((*(_79633_e)).ptr(), (*((*(_79648_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1b4c7ccc7_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=jule::new_ptr<_1b4c7c90e_TypeKind>(_1b4c7c90e_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1b4b576eb_comptimeStatics>(_1b4b576eb_comptimeStatics{._field_fields=(*(_80113_s))._field_Statics}), (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data9)}), });;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4b649c2__Public(jule::Ptr<_1b4b615d4_comptimeTypeInfo> _self_, jule::Ptr<_1b4c483d0_Eval>* _81532_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _81547_fc) {
	if (((*((*(_81547_fc))))._field_Args.len() > 0LL)) {
		_1b4c48930_pushErr((*(_81532_e)).ptr(), (*((*((*(_81547_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Bool _82013_public = false;;
	{
		
		if ((_1b4c815d3_Struct((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1aad3e6cd:;
			{
				_82013_public=(*((*(_1b4c815d3_Struct((*_self_.alloc)._field_base)))._field_Decl))._field_Public;
			}
		}
		else if ((_1b4c81869_Trait((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1aad407bc:;
			{
				_82013_public=(*(_1b4c81869_Trait((*_self_.alloc)._field_base)))._field_Public;
			}
		}
		else if ((_1b4c80813_Enum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1aad40833:;
			{
				_82013_public=(*(_1b4c80813_Enum((*_self_.alloc)._field_base)))._field_Public;
			}
		}
		else if ((_1b4c80a99_TypeEnum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1aad3e414:;
			{
				_82013_public=(*(_1b4c80a99_TypeEnum((*_self_.alloc)._field_base)))._field_Public;
			}
		}
		else {
			_case_begin_1aad3e39d:;
			{
				_1b4c48930_pushErr((*(_81532_e)).ptr(), (*((*(_81547_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1b4c7ccc7_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1aad3e26b:;
	};
	jule::Ptr<_1b2753508_Const> _83413_constant = static__1b2753ecb_NewBool(_82013_public);;
	return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=_1b4d607e4_primBool, ._field_Model=jule::Any(_83413_constant, &__jule_any_type19), ._field_Constant=_83413_constant});;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4b64dbd__Binded(jule::Ptr<_1b4b615d4_comptimeTypeInfo> _self_, jule::Ptr<_1b4c483d0_Eval>* _84232_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _84247_fc) {
	if (((*((*(_84247_fc))))._field_Args.len() > 0LL)) {
		_1b4c48930_pushErr((*(_84232_e)).ptr(), (*((*((*(_84247_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Binded", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b2753508_Const> _84713_constant = static__1b2753ecb_NewBool(_1b4c7d756_Binded((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=_1b4d607e4_primBool, ._field_Model=jule::Any(_84713_constant, &__jule_any_type19), ._field_Constant=_84713_constant});;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4b652b9__Ordered(jule::Ptr<_1b4b615d4_comptimeTypeInfo> _self_, jule::Ptr<_1b4c483d0_Eval>* _85529_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _85544_fc) {
	if (((*((*(_85544_fc))))._field_Args.len() > 0LL)) {
		_1b4c48930_pushErr((*(_85529_e)).ptr(), (*((*((*(_85544_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Ordered", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b2753508_Const> _86013_constant = static__1b2753ecb_NewBool(_1b4c7e526_Ordered((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=_1b4d6053b_primStr, ._field_Model=jule::Any(_86013_constant, &__jule_any_type19), ._field_Constant=_86013_constant});;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4b656b5__Comparable(jule::Ptr<_1b4b615d4_comptimeTypeInfo> _self_, jule::Ptr<_1b4c483d0_Eval>* _86832_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _86847_fc) {
	if (((*((*(_86847_fc))))._field_Args.len() > 0LL)) {
		_1b4c48930_pushErr((*(_86832_e)).ptr(), (*((*((*(_86847_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Comparable", 10), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b2753508_Const> _87313_constant = static__1b2753ecb_NewBool(_1b4c7e009_Comparable((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=_1b4d6053b_primStr, ._field_Model=jule::Any(_87313_constant, &__jule_any_type19), ._field_Constant=_87313_constant});;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4b65ab1__Mutable(jule::Ptr<_1b4b615d4_comptimeTypeInfo> _self_, jule::Ptr<_1b4c483d0_Eval>* _88129_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _88144_fc) {
	if (((*((*(_88144_fc))))._field_Args.len() > 0LL)) {
		_1b4c48930_pushErr((*(_88129_e)).ptr(), (*((*((*(_88144_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b2753508_Const> _88613_constant = static__1b2753ecb_NewBool(_1b4c7e290_Mutable((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=_1b4d607e4_primBool, ._field_Model=jule::Any(_88613_constant, &__jule_any_type19), ._field_Constant=_88613_constant});;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4b65eac__Types(jule::Ptr<_1b4b615d4_comptimeTypeInfo> _self_, jule::Ptr<_1b4c483d0_Eval>* _89431_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _89446_fc) {
	if (((*((*(_89446_fc))))._field_Args.len() > 0LL)) {
		_1b4c48930_pushErr((*(_89431_e)).ptr(), (*((*((*(_89446_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Types", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b4c8a5cb_Tuple> _89913_tup = _1b4c81d86_Tup((*(_self_))._field_base.ptr());;
	if ((_89913_tup == nullptr)) {
		_1b4c48930_pushErr((*(_89431_e)).ptr(), (*((*(_89446_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1b4c7ccc7_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Types", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b4b5eed9_comptimeTypeInfos> _90413_infos = jule::new_ptr<_1b4b5eed9_comptimeTypeInfos>(_1b4b5eed9_comptimeTypeInfos{._field_types=jule::Slice<jule::Ptr<_1b4b615d4_comptimeTypeInfo>>::alloc(0LL, (*(_89913_tup))._field_Types.len())});;
	{
		auto expr = &((*(_89913_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aad54c76:;
		if (it != expr_end) {
			jule::Ptr<_1b4c7c90e_TypeKind> _90721_t = *it;
			{
				(*(_90413_infos))._field_types=jule::append((*_90413_infos.alloc)._field_types,jule::Slice<jule::Ptr<_1b4b615d4_comptimeTypeInfo>>::make({_1b4bba572_pushComptimeTypeInfo((*((*((*(_89431_e))))._field_s))._field_meta.ptr(), &(_90721_t))}));
			}
			_iter_next_1aad54c76:;
			++it;
			goto _iter_begin_1aad54c76;
		}
		_iter_end_1aad54c76:;
	};
	return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=jule::new_ptr<_1b4c7c90e_TypeKind>(_1b4c7c90e_TypeKind{._field_Kind=jule::Trait(_90413_infos, (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data14)}), });;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4b663a8__Exceptional(jule::Ptr<_1b4b615d4_comptimeTypeInfo> _self_, jule::Ptr<_1b4c483d0_Eval>* _91737_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _91752_fc) {
	if (((*((*(_91752_fc))))._field_Args.len() > 0LL)) {
		_1b4c48930_pushErr((*(_91737_e)).ptr(), (*((*((*(_91752_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Exceptional", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b4b39865_FnIns> _92213_f = _1b4c8134c_Fn((*(_self_))._field_base.ptr());;
	if ((_92213_f == nullptr)) {
		_1b4c48930_pushErr((*(_91737_e)).ptr(), (*((*(_91752_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1b4c7ccc7_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Exceptional", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b2753508_Const> _92713_constant = static__1b2753ecb_NewBool((((*(_92213_f))._field_Decl != nullptr) && (*(*(_92213_f))._field_Decl.alloc)._field_Exceptional));;
	return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=_1b4d607e4_primBool, ._field_Model=jule::Any(_92713_constant, &__jule_any_type19), ._field_Constant=_92713_constant});;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4b667a4__CanNil(jule::Ptr<_1b4b615d4_comptimeTypeInfo> _self_, jule::Ptr<_1b4c483d0_Eval>* _93532_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _93547_fc) {
	if (((*((*(_93547_fc))))._field_Args.len() > 0LL)) {
		_1b4c48930_pushErr((*(_93532_e)).ptr(), (*((*((*(_93547_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("CanNil", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b2753508_Const> _94013_constant = static__1b2753ecb_NewBool(_1b4c7e7ac_NilCompatible((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=_1b4d607e4_primBool, ._field_Model=jule::Any(_94013_constant, &__jule_any_type19), ._field_Constant=_94013_constant});;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4b66ba0__RC(jule::Ptr<_1b4b615d4_comptimeTypeInfo> _self_, jule::Ptr<_1b4c483d0_Eval>* _94828_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _94843_fc) {
	if (((*((*(_94843_fc))))._field_Args.len() > 0LL)) {
		_1b4c48930_pushErr((*(_94828_e)).ptr(), (*((*((*(_94843_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("RC", 2), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b2753508_Const> _95313_constant = static__1b2753ecb_NewBool(_1b4c7ea43_PerformsRC((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=_1b4d607e4_primBool, ._field_Model=jule::Any(_95313_constant, &__jule_any_type19), ._field_Constant=_95313_constant});;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4b6709b__Result(jule::Ptr<_1b4b615d4_comptimeTypeInfo> _self_, jule::Ptr<_1b4c483d0_Eval>* _96132_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _96147_fc) {
	if (((*((*(_96147_fc))))._field_Args.len() > 0LL)) {
		_1b4c48930_pushErr((*(_96132_e)).ptr(), (*((*((*(_96147_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Result", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b4b39865_FnIns> _96613_f = _1b4c8134c_Fn((*(_self_))._field_base.ptr());;
	if ((_96613_f == nullptr)) {
		_1b4c48930_pushErr((*(_96132_e)).ptr(), (*((*(_96147_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1b4c7ccc7_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Result", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*(_96613_f))._field_Result == nullptr)) {
		return _1b4b6de82_buildComptimeTypeInfoData(&((*((*(_96132_e))))._field_s), &(_1b4d5ee86_primVoid));;
	};
	return _1b4b6de82_buildComptimeTypeInfoData(&((*((*(_96132_e))))._field_s), &((*(_96613_f))._field_Result));;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4b67497__Params(jule::Ptr<_1b4b615d4_comptimeTypeInfo> _self_, jule::Ptr<_1b4c483d0_Eval>* _97732_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _97747_fc) {
	if (((*((*(_97747_fc))))._field_Args.len() > 0LL)) {
		_1b4c48930_pushErr((*(_97732_e)).ptr(), (*((*((*(_97747_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Params", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b4b39865_FnIns> _98213_f = _1b4c8134c_Fn((*(_self_))._field_base.ptr());;
	if ((_98213_f == nullptr)) {
		_1b4c48930_pushErr((*(_97732_e)).ptr(), (*((*(_97747_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1b4c7ccc7_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Params", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=jule::new_ptr<_1b4c7c90e_TypeKind>(_1b4c7c90e_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1b4b5d922_comptimeParams>(_1b4b5d922_comptimeParams{._field_params=(*(_98213_f))._field_Params}), (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data13)}), });;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4b677d8_subIdent(jule::Ptr<_1b4b615d4_comptimeTypeInfo> _self_, jule::Str* _99429_ident) {
	{
		auto &_match_expr{ (*(_99429_ident)) };
		
		if (_match_expr == jule::Str::lit("Str", 3)) {
			_case_begin_1aad69dce:;
			{
				jule::Ptr<_1b4b39865_FnIns> _99717_method = jule::new_ptr<_1b4b39865_FnIns>(_1b4b39865_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1b4c466a8_Data>,jule::Ptr<_1b4c483d0_Eval>*,jule::Ptr<_1b4b03c2a_FnCallExpr>*,jule::Ptr<_1b4c466a8_Data>*>((void*)__jule_anon_1aad6b793, jule::Ptr<__jule_anon_1aad6b793_ctx>::make(__jule_anon_1aad6b793_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aad6b793_ctx_handler), });;
				return _1b4b6d800_buildAsComptimeMethodData(&(_99717_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Bits", 4)) {
			_case_begin_1aad69b8c:;
			{
				jule::Ptr<_1b4b39865_FnIns> _100417_method = jule::new_ptr<_1b4b39865_FnIns>(_1b4b39865_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1b4c466a8_Data>,jule::Ptr<_1b4c483d0_Eval>*,jule::Ptr<_1b4b03c2a_FnCallExpr>*,jule::Ptr<_1b4c466a8_Data>*>((void*)__jule_anon_1aad6d6eb, jule::Ptr<__jule_anon_1aad6d6eb_ctx>::make(__jule_anon_1aad6d6eb_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aad6d6eb_ctx_handler), });;
				return _1b4b6d800_buildAsComptimeMethodData(&(_100417_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Elem", 4)) {
			_case_begin_1aad69c03:;
			{
				jule::Ptr<_1b4b39865_FnIns> _101117_method = jule::new_ptr<_1b4b39865_FnIns>(_1b4b39865_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1b4c466a8_Data>,jule::Ptr<_1b4c483d0_Eval>*,jule::Ptr<_1b4b03c2a_FnCallExpr>*,jule::Ptr<_1b4c466a8_Data>*>((void*)__jule_anon_1aad70654, jule::Ptr<__jule_anon_1aad70654_ctx>::make(__jule_anon_1aad70654_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aad70654_ctx_handler), });;
				return _1b4b6d800_buildAsComptimeMethodData(&(_101117_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Size", 4)) {
			_case_begin_1aad69e45:;
			{
				jule::Ptr<_1b4b39865_FnIns> _101817_method = jule::new_ptr<_1b4b39865_FnIns>(_1b4b39865_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1b4c466a8_Data>,jule::Ptr<_1b4c483d0_Eval>*,jule::Ptr<_1b4b03c2a_FnCallExpr>*,jule::Ptr<_1b4c466a8_Data>*>((void*)__jule_anon_1aad725ac, jule::Ptr<__jule_anon_1aad725ac_ctx>::make(__jule_anon_1aad725ac_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aad725ac_ctx_handler), });;
				return _1b4b6d800_buildAsComptimeMethodData(&(_101817_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Key", 3)) {
			_case_begin_1aad69eab:;
			{
				jule::Ptr<_1b4b39865_FnIns> _102517_method = jule::new_ptr<_1b4b39865_FnIns>(_1b4b39865_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1b4c466a8_Data>,jule::Ptr<_1b4c483d0_Eval>*,jule::Ptr<_1b4b03c2a_FnCallExpr>*,jule::Ptr<_1b4c466a8_Data>*>((void*)__jule_anon_1aad79372, jule::Ptr<__jule_anon_1aad79372_ctx>::make(__jule_anon_1aad79372_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aad79372_ctx_handler), });;
				return _1b4b6d800_buildAsComptimeMethodData(&(_102517_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Value", 5)) {
			_case_begin_1aad6a022:;
			{
				jule::Ptr<_1b4b39865_FnIns> _103217_method = jule::new_ptr<_1b4b39865_FnIns>(_1b4b39865_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1b4c466a8_Data>,jule::Ptr<_1b4c483d0_Eval>*,jule::Ptr<_1b4b03c2a_FnCallExpr>*,jule::Ptr<_1b4c466a8_Data>*>((void*)__jule_anon_1aad7b2ca, jule::Ptr<__jule_anon_1aad7b2ca_ctx>::make(__jule_anon_1aad7b2ca_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aad7b2ca_ctx_handler), });;
				return _1b4b6d800_buildAsComptimeMethodData(&(_103217_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Fields", 6)) {
			_case_begin_1aad6a088:;
			{
				jule::Ptr<_1b4b39865_FnIns> _103917_method = jule::new_ptr<_1b4b39865_FnIns>(_1b4b39865_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1b4c466a8_Data>,jule::Ptr<_1b4c483d0_Eval>*,jule::Ptr<_1b4b03c2a_FnCallExpr>*,jule::Ptr<_1b4c466a8_Data>*>((void*)__jule_anon_1aad7d233, jule::Ptr<__jule_anon_1aad7d233_ctx>::make(__jule_anon_1aad7d233_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aad7d233_ctx_handler), });;
				return _1b4b6d800_buildAsComptimeMethodData(&(_103917_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Statics", 7)) {
			_case_begin_1aad6a165:;
			{
				jule::Ptr<_1b4b39865_FnIns> _104617_method = jule::new_ptr<_1b4b39865_FnIns>(_1b4b39865_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1b4c466a8_Data>,jule::Ptr<_1b4c483d0_Eval>*,jule::Ptr<_1b4b03c2a_FnCallExpr>*,jule::Ptr<_1b4c466a8_Data>*>((void*)__jule_anon_1aad8018b, jule::Ptr<__jule_anon_1aad8018b_ctx>::make(__jule_anon_1aad8018b_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aad8018b_ctx_handler), });;
				return _1b4b6d800_buildAsComptimeMethodData(&(_104617_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Params", 6)) {
			_case_begin_1aad6a1cb:;
			{
				jule::Ptr<_1b4b39865_FnIns> _105317_method = jule::new_ptr<_1b4b39865_FnIns>(_1b4b39865_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1b4c466a8_Data>,jule::Ptr<_1b4c483d0_Eval>*,jule::Ptr<_1b4b03c2a_FnCallExpr>*,jule::Ptr<_1b4c466a8_Data>*>((void*)__jule_anon_1aad82237, jule::Ptr<__jule_anon_1aad82237_ctx>::make(__jule_anon_1aad82237_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aad82237_ctx_handler), });;
				return _1b4b6d800_buildAsComptimeMethodData(&(_105317_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Types", 5)) {
			_case_begin_1aad6a242:;
			{
				jule::Ptr<_1b4b39865_FnIns> _106017_method = jule::new_ptr<_1b4b39865_FnIns>(_1b4b39865_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1b4c466a8_Data>,jule::Ptr<_1b4c483d0_Eval>*,jule::Ptr<_1b4b03c2a_FnCallExpr>*,jule::Ptr<_1b4c466a8_Data>*>((void*)__jule_anon_1aad84190, jule::Ptr<__jule_anon_1aad84190_ctx>::make(__jule_anon_1aad84190_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aad84190_ctx_handler), });;
				return _1b4b6d800_buildAsComptimeMethodData(&(_106017_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Public", 6)) {
			_case_begin_1aad6a2b9:;
			{
				jule::Ptr<_1b4b39865_FnIns> _106717_method = jule::new_ptr<_1b4b39865_FnIns>(_1b4b39865_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1b4c466a8_Data>,jule::Ptr<_1b4c483d0_Eval>*,jule::Ptr<_1b4b03c2a_FnCallExpr>*,jule::Ptr<_1b4c466a8_Data>*>((void*)__jule_anon_1aad860e8, jule::Ptr<__jule_anon_1aad860e8_ctx>::make(__jule_anon_1aad860e8_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aad860e8_ctx_handler), });;
				return _1b4b6d800_buildAsComptimeMethodData(&(_106717_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Binded", 6)) {
			_case_begin_1aad6a341:;
			{
				jule::Ptr<_1b4b39865_FnIns> _107417_method = jule::new_ptr<_1b4b39865_FnIns>(_1b4b39865_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1b4c466a8_Data>,jule::Ptr<_1b4c483d0_Eval>*,jule::Ptr<_1b4b03c2a_FnCallExpr>*,jule::Ptr<_1b4c466a8_Data>*>((void*)__jule_anon_1aad88051, jule::Ptr<__jule_anon_1aad88051_ctx>::make(__jule_anon_1aad88051_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aad88051_ctx_handler), });;
				return _1b4b6d800_buildAsComptimeMethodData(&(_107417_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Ordered", 7)) {
			_case_begin_1aad6a3b8:;
			{
				jule::Ptr<_1b4b39865_FnIns> _108117_method = jule::new_ptr<_1b4b39865_FnIns>(_1b4b39865_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1b4c466a8_Data>,jule::Ptr<_1b4c483d0_Eval>*,jule::Ptr<_1b4b03c2a_FnCallExpr>*,jule::Ptr<_1b4c466a8_Data>*>((void*)__jule_anon_1aad89ea9, jule::Ptr<__jule_anon_1aad89ea9_ctx>::make(__jule_anon_1aad89ea9_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aad89ea9_ctx_handler), });;
				return _1b4b6d800_buildAsComptimeMethodData(&(_108117_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Comparable", 10)) {
			_case_begin_1aad6a440:;
			{
				jule::Ptr<_1b4b39865_FnIns> _108817_method = jule::new_ptr<_1b4b39865_FnIns>(_1b4b39865_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1b4c466a8_Data>,jule::Ptr<_1b4c483d0_Eval>*,jule::Ptr<_1b4b03c2a_FnCallExpr>*,jule::Ptr<_1b4c466a8_Data>*>((void*)__jule_anon_1aad8be12, jule::Ptr<__jule_anon_1aad8be12_ctx>::make(__jule_anon_1aad8be12_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aad8be12_ctx_handler), });;
				return _1b4b6d800_buildAsComptimeMethodData(&(_108817_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_1aad6a4b7:;
			{
				jule::Ptr<_1b4b39865_FnIns> _109517_method = jule::new_ptr<_1b4b39865_FnIns>(_1b4b39865_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1b4c466a8_Data>,jule::Ptr<_1b4c483d0_Eval>*,jule::Ptr<_1b4b03c2a_FnCallExpr>*,jule::Ptr<_1b4c466a8_Data>*>((void*)__jule_anon_1aad8dd6a, jule::Ptr<__jule_anon_1aad8dd6a_ctx>::make(__jule_anon_1aad8dd6a_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aad8dd6a_ctx_handler), });;
				return _1b4b6d800_buildAsComptimeMethodData(&(_109517_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Exceptional", 11)) {
			_case_begin_1aad6a53e:;
			{
				jule::Ptr<_1b4b39865_FnIns> _110217_method = jule::new_ptr<_1b4b39865_FnIns>(_1b4b39865_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1b4c466a8_Data>,jule::Ptr<_1b4c483d0_Eval>*,jule::Ptr<_1b4b03c2a_FnCallExpr>*,jule::Ptr<_1b4c466a8_Data>*>((void*)__jule_anon_1aad90cc3, jule::Ptr<__jule_anon_1aad90cc3_ctx>::make(__jule_anon_1aad90cc3_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aad90cc3_ctx_handler), });;
				return _1b4b6d800_buildAsComptimeMethodData(&(_110217_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("CanNil", 6)) {
			_case_begin_1aad6a5b6:;
			{
				jule::Ptr<_1b4b39865_FnIns> _110917_method = jule::new_ptr<_1b4b39865_FnIns>(_1b4b39865_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1b4c466a8_Data>,jule::Ptr<_1b4c483d0_Eval>*,jule::Ptr<_1b4b03c2a_FnCallExpr>*,jule::Ptr<_1b4c466a8_Data>*>((void*)__jule_anon_1aad92c2b, jule::Ptr<__jule_anon_1aad92c2b_ctx>::make(__jule_anon_1aad92c2b_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aad92c2b_ctx_handler), });;
				return _1b4b6d800_buildAsComptimeMethodData(&(_110917_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("RC", 2)) {
			_case_begin_1aad6a63d:;
			{
				jule::Ptr<_1b4b39865_FnIns> _111617_method = jule::new_ptr<_1b4b39865_FnIns>(_1b4b39865_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1b4c466a8_Data>,jule::Ptr<_1b4c483d0_Eval>*,jule::Ptr<_1b4b03c2a_FnCallExpr>*,jule::Ptr<_1b4c466a8_Data>*>((void*)__jule_anon_1aad94b84, jule::Ptr<__jule_anon_1aad94b84_ctx>::make(__jule_anon_1aad94b84_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aad94b84_ctx_handler), });;
				return _1b4b6d800_buildAsComptimeMethodData(&(_111617_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Result", 6)) {
			_case_begin_1aad6a6b5:;
			{
				jule::Ptr<_1b4b39865_FnIns> _112317_method = jule::new_ptr<_1b4b39865_FnIns>(_1b4b39865_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1b4c466a8_Data>,jule::Ptr<_1b4c483d0_Eval>*,jule::Ptr<_1b4b03c2a_FnCallExpr>*,jule::Ptr<_1b4c466a8_Data>*>((void*)__jule_anon_1aad96adc, jule::Ptr<__jule_anon_1aad96adc_ctx>::make(__jule_anon_1aad96adc_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aad96adc_ctx_handler), });;
				return _1b4b6d800_buildAsComptimeMethodData(&(_112317_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Kind", 4)) {
			_case_begin_1aad6a73c:;
			{
				jule::Ptr<_1b4b39865_FnIns> _113017_method = jule::new_ptr<_1b4b39865_FnIns>(_1b4b39865_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1b4c466a8_Data>,jule::Ptr<_1b4c483d0_Eval>*,jule::Ptr<_1b4b03c2a_FnCallExpr>*,jule::Ptr<_1b4c466a8_Data>*>((void*)__jule_anon_1aad98a45, jule::Ptr<__jule_anon_1aad98a45_ctx>::make(__jule_anon_1aad98a45_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aad98a45_ctx_handler), });;
				return _1b4b6d800_buildAsComptimeMethodData(&(_113017_method));;
			}
		}
		else {
			_case_begin_1aad6796a:;
			{
				return nullptr;;
			}
		}
		_match_end_1aad6996c:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b615d4_comptimeTypeInfo _Src) {
	_Stream << _1b4b61958_Str(&_Src);
	return _Stream;
}



inline jule::Str _1b4b67e6a_Str(_1b4b67ae6_comptimeValue* _self_) {
	return jule::Str::lit("comptimeValue", 13);;
}



inline jule::Bool _1b4b682ab_Equal(jule::Ptr<_1b4b67ae6_comptimeValue> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _114921_other) {
	return false;;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4b6880b__Unwrap(jule::Ptr<_1b4b67ae6_comptimeValue> _self_, jule::Ptr<_1b4c483d0_Eval>* _115332_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _115347_fc) {
	if (((*((*(_115347_fc))))._field_Args.len() > 0LL)) {
		_1b4c48930_pushErr((*(_115332_e)).ptr(), (*((*((*(_115347_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Unwrap", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	return (*(_self_))._field_data;;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4b68c07__Type(jule::Ptr<_1b4b67ae6_comptimeValue> _self_, jule::Ptr<_1b4c483d0_Eval>* _116130_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _116145_fc) {
	if (((*((*(_116145_fc))))._field_Args.len() > 0LL)) {
		_1b4c48930_pushErr((*(_116130_e)).ptr(), (*((*((*(_116145_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1b4b6de82_buildComptimeTypeInfoData(&((*((*(_116130_e))))._field_s), &((*((*(_self_))._field_data))._field_Kind));;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4b69103__Lvalue(jule::Ptr<_1b4b67ae6_comptimeValue> _self_, jule::Ptr<_1b4c483d0_Eval>* _116932_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _116947_fc) {
	if (((*((*(_116947_fc))))._field_Args.len() > 0LL)) {
		_1b4c48930_pushErr((*(_116932_e)).ptr(), (*((*((*(_116947_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Lvalue", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b2753508_Const> _117413_constant = static__1b2753ecb_NewBool((*((*(_self_))._field_data))._field_Lvalue);;
	return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=_1b4d607e4_primBool, ._field_Model=jule::Any(_117413_constant, &__jule_any_type19), ._field_Constant=_117413_constant});;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4b694ee__Mutable(jule::Ptr<_1b4b67ae6_comptimeValue> _self_, jule::Ptr<_1b4c483d0_Eval>* _118233_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _118248_fc) {
	if (((*((*(_118248_fc))))._field_Args.len() > 0LL)) {
		_1b4c48930_pushErr((*(_118233_e)).ptr(), (*((*((*(_118248_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b2753508_Const> _118713_constant = static__1b2753ecb_NewBool((*((*(_self_))._field_data))._field_Mutable);;
	return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=_1b4d607e4_primBool, ._field_Model=jule::Any(_118713_constant, &__jule_any_type19), ._field_Constant=_118713_constant});;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4b698ea__Const(jule::Ptr<_1b4b67ae6_comptimeValue> _self_, jule::Ptr<_1b4c483d0_Eval>* _119531_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _119546_fc) {
	if (((*((*(_119546_fc))))._field_Args.len() > 0LL)) {
		_1b4c48930_pushErr((*(_119531_e)).ptr(), (*((*((*(_119546_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Const", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b2753508_Const> _120013_constant = static__1b2753ecb_NewBool(_1b4c470b0_IsConst((*(_self_))._field_data.ptr()));;
	return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=_1b4d607e4_primBool, ._field_Model=jule::Any(_120013_constant, &__jule_any_type19), ._field_Constant=_120013_constant});;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4b69ce6__Field(jule::Ptr<_1b4b67ae6_comptimeValue> _self_, jule::Ptr<_1b4c483d0_Eval>* _120831_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _120846_fc) {
	if (((*((*(_120846_fc))))._field_Args.len() > 1LL)) {
		_1b4c48930_pushErr((*(_120831_e)).ptr(), (*((*((*(_120846_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Field", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b4b24641_StructIns> _121313_s = _1b4c815d3_Struct((*((*(_self_))._field_data))._field_Kind.ptr());;
	if ((_121313_s == nullptr)) {
		_1b4c48930_pushErr((*(_120831_e)).ptr(), (*((*(_120846_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1b4c7ccc7_Str((*(*_self_.alloc)._field_data.alloc)._field_Kind), &__jule_any_type4),jule::Any(jule::Str::lit("Field", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b4b00001_Expr> _121813_arg = (*((*(_120846_fc))))._field_Args[0LL];;
	jule::Ptr<_1b4c466a8_Data> _121913_d = _1b4c6b49c_evalExpr((*(_120831_e)), _121813_arg);;
	if ((_121913_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1b4c470b0_IsConst(_121913_d.ptr())))) {
		_1b4c48930_pushErr((*(_120831_e)).ptr(), (*(_121813_arg))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b4c854d8_Prim> _12279_prim = _1b4c80060_Prim((*(_121913_d))._field_Kind);;
	if (((_12279_prim == nullptr) || (!(_1b4c88970_IsStr(_12279_prim.ptr()))))) {
		_1b4c48930_pushErr((*(_120831_e)).ptr(), (*_121813_arg.alloc)._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1b4c7ccc7_Str((*(_121913_d))._field_Kind), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Str _12329_ident = _1b2755681_ReadStr((*(_121913_d))._field_Constant.ptr());;
	jule::Ptr<_1b4b23a91_FieldIns> _123313_f = _1b4b259e9_FindField(_121313_s.ptr(), _12329_ident);;
	if ((_123313_f == nullptr)) {
		_1b4c48930_pushErr((*(_120831_e)).ptr(), (*_121813_arg.alloc)._field_Token, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*((*(_121313_s))._field_Decl))._field_Ident, &__jule_any_type4),jule::Any(_12329_ident, &__jule_any_type4)}));
		return nullptr;;
	};
	_121913_d=jule::new_ptr<_1b4c466a8_Data>((*(*_self_.alloc)._field_data.alloc));
	_121913_d=_1b4c5e946_evalStructSubIdentField((*(_120831_e)).ptr(), &(_121913_d), &(_121313_s), &((*_121813_arg.alloc)._field_Token), &(_123313_f));
	return _1b4b6e2c3_buildComptimeValue(&(_121913_d));;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4b6a137_subIdent(jule::Ptr<_1b4b67ae6_comptimeValue> _self_, jule::Str* _124329_ident) {
	{
		auto &_match_expr{ (*(_124329_ident)) };
		
		if (_match_expr == jule::Str::lit("Unwrap", 6)) {
			_case_begin_1aadb26eb:;
			{
				jule::Ptr<_1b4b39865_FnIns> _124617_method = jule::new_ptr<_1b4b39865_FnIns>(_1b4b39865_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1b4c466a8_Data>,jule::Ptr<_1b4c483d0_Eval>*,jule::Ptr<_1b4b03c2a_FnCallExpr>*,jule::Ptr<_1b4c466a8_Data>*>((void*)__jule_anon_1aadb3b09, jule::Ptr<__jule_anon_1aadb3b09_ctx>::make(__jule_anon_1aadb3b09_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aadb3b09_ctx_handler), });;
				return _1b4b6d800_buildAsComptimeMethodData(&(_124617_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1aadb2762:;
			{
				jule::Ptr<_1b4b39865_FnIns> _125317_method = jule::new_ptr<_1b4b39865_FnIns>(_1b4b39865_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1b4c466a8_Data>,jule::Ptr<_1b4c483d0_Eval>*,jule::Ptr<_1b4b03c2a_FnCallExpr>*,jule::Ptr<_1b4c466a8_Data>*>((void*)__jule_anon_1aadb5a62, jule::Ptr<__jule_anon_1aadb5a62_ctx>::make(__jule_anon_1aadb5a62_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aadb5a62_ctx_handler), });;
				return _1b4b6d800_buildAsComptimeMethodData(&(_125317_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Lvalue", 6)) {
			_case_begin_1aadb27c8:;
			{
				jule::Ptr<_1b4b39865_FnIns> _126017_method = jule::new_ptr<_1b4b39865_FnIns>(_1b4b39865_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1b4c466a8_Data>,jule::Ptr<_1b4c483d0_Eval>*,jule::Ptr<_1b4b03c2a_FnCallExpr>*,jule::Ptr<_1b4c466a8_Data>*>((void*)__jule_anon_1aadb79ba, jule::Ptr<__jule_anon_1aadb79ba_ctx>::make(__jule_anon_1aadb79ba_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aadb79ba_ctx_handler), });;
				return _1b4b6d800_buildAsComptimeMethodData(&(_126017_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_1aadb2850:;
			{
				jule::Ptr<_1b4b39865_FnIns> _126717_method = jule::new_ptr<_1b4b39865_FnIns>(_1b4b39865_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1b4c466a8_Data>,jule::Ptr<_1b4c483d0_Eval>*,jule::Ptr<_1b4b03c2a_FnCallExpr>*,jule::Ptr<_1b4c466a8_Data>*>((void*)__jule_anon_1aadb9923, jule::Ptr<__jule_anon_1aadb9923_ctx>::make(__jule_anon_1aadb9923_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aadb9923_ctx_handler), });;
				return _1b4b6d800_buildAsComptimeMethodData(&(_126717_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Const", 5)) {
			_case_begin_1aadb28c7:;
			{
				jule::Ptr<_1b4b39865_FnIns> _127417_method = jule::new_ptr<_1b4b39865_FnIns>(_1b4b39865_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1b4c466a8_Data>,jule::Ptr<_1b4c483d0_Eval>*,jule::Ptr<_1b4b03c2a_FnCallExpr>*,jule::Ptr<_1b4c466a8_Data>*>((void*)__jule_anon_1aadbb87b, jule::Ptr<__jule_anon_1aadbb87b_ctx>::make(__jule_anon_1aadbb87b_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aadbb87b_ctx_handler), });;
				return _1b4b6d800_buildAsComptimeMethodData(&(_127417_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Field", 5)) {
			_case_begin_1aadb2a4d:;
			{
				jule::Ptr<_1b4b39865_FnIns> _128117_method = jule::new_ptr<_1b4b39865_FnIns>(_1b4b39865_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1b4c466a8_Data>,jule::Ptr<_1b4c483d0_Eval>*,jule::Ptr<_1b4b03c2a_FnCallExpr>*,jule::Ptr<_1b4c466a8_Data>*>((void*)__jule_anon_1aadbd7d4, jule::Ptr<__jule_anon_1aadbd7d4_ctx>::make(__jule_anon_1aadbd7d4_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aadbd7d4_ctx_handler), });;
				return _1b4b6d800_buildAsComptimeMethodData(&(_128117_method));;
			}
		}
		else {
			_case_begin_1aadb2498:;
			{
				return nullptr;;
			}
		}
		_match_end_1aadb25ca:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b67ae6_comptimeValue _Src) {
	_Stream << _1b4b67e6a_Str(&_Src);
	return _Stream;
}



inline jule::Str _1b4b6a7b9_Str(_1b4b6a445_comptimeFiles* _self_) {
	return jule::Str::lit("comptimeFiles", 13);;
}



inline jule::Bool _1b4b6ab0a_Equal(jule::Ptr<_1b4b6a445_comptimeFiles> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _130021_other) {
	return false;;
}



inline void _1b4b6b07d_ready(_1b4b6a445_comptimeFiles* _self_, jule::Ptr<_1b4bddaa1_Var>* _130429_keyA, jule::Ptr<_1b4bddaa1_Var>* _130446_keyB) {
	if (((*(_130429_keyA)) != nullptr)) {
		(*((*(_130429_keyA))))._field_Constant=true;
		(*((*(_130429_keyA))))._field_Value=jule::new_ptr<_1b4c47830_Value>(_1b4c47830_Value{._field_Data=jule::new_ptr<_1b4c466a8_Data>()});
		(*((*(_130429_keyA))))._field_Kind=(*(_1b4d63572_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_130446_keyB)) != nullptr)) {
		(*((*(_130446_keyB))))._field_Constant=true;
		(*((*(_130446_keyB))))._field_Value=jule::new_ptr<_1b4c47830_Value>(_1b4c47830_Value{._field_Data=jule::new_ptr<_1b4c466a8_Data>()});
		(*((*(_130446_keyB))))._field_Kind=jule::new_ptr<_1b4c84ad1_TypeSymbol>(_1b4c84ad1_TypeSymbol{._field_Kind=jule::new_ptr<_1b4c7c90e_TypeKind>(_1b4c7c90e_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1b4b6ba40_comptimeFile>(), (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data18)})});
	};
}



inline void _1b4b6b49b_step(_1b4b6a445_comptimeFiles* _self_, jule::I64 _132523_i, jule::Ptr<_1b4bddaa1_Var>* _132536_keyA, jule::Ptr<_1b4bddaa1_Var>* _132553_keyB) {
	if (((*(_132536_keyA)) != nullptr)) {
		(*((*((*((*(_132536_keyA))))._field_Value))._field_Data))._field_Constant=static__1b2753948_NewI64(static_cast<jule::I64>(_132523_i));
		(*(*(*((*(_132536_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Model=jule::Any((*(*(*((*(_132536_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Constant, &__jule_any_type19);
	};
	if (((*(_132553_keyB)) != nullptr)) {
		(*((*((*((*((*(_132553_keyB))))._field_Kind))._field_Kind))._field_Kind.cast_ptr<_1b4b6ba40_comptimeFile>((jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data18)))._field_file=(*(_self_))._field_files[_132523_i];
	};
}



inline jule::I64 _1b4b6b732_len(_1b4b6a445_comptimeFiles* _self_) {
	return (*(_self_))._field_files.len();;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b6a445_comptimeFiles _Src) {
	_Stream << _1b4b6a7b9_Str(&_Src);
	return _Stream;
}



inline jule::Str _1b4b6c0e5_Str(_1b4b6ba40_comptimeFile* _self_) {
	return jule::Str::lit("comptimeFile", 12);;
}



inline jule::Bool _1b4b6c436_Equal(jule::Ptr<_1b4b6ba40_comptimeFile> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _134921_other) {
	return false;;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4b6c843__Path(jule::Ptr<_1b4b6ba40_comptimeFile> _self_, jule::Ptr<_1b4c483d0_Eval>* _135330_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _135345_fc) {
	if (((*((*(_135345_fc))))._field_Args.len() > 0LL)) {
		_1b4c48930_pushErr((*(_135330_e)).ptr(), (*((*((*(_135345_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Path", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b2753508_Const> _135813_constant = static__1b2754295_NewStr((*((*((*(_self_))._field_file))._field_File))._field_Path);;
	return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=_1b4d6053b_primStr, ._field_Model=jule::Any(_135813_constant, &__jule_any_type19), ._field_Constant=_135813_constant});;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4b6cc3e__Name(jule::Ptr<_1b4b6ba40_comptimeFile> _self_, jule::Ptr<_1b4c483d0_Eval>* _136630_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _136645_fc) {
	if (((*((*(_136645_fc))))._field_Args.len() > 0LL)) {
		_1b4c48930_pushErr((*(_136630_e)).ptr(), (*((*((*(_136645_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b2753508_Const> _137113_constant = static__1b2754295_NewStr(_1b4adb8d3_Name((*((*(_self_))._field_file))._field_File.ptr()));;
	return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=_1b4d6053b_primStr, ._field_Model=jule::Any(_137113_constant, &__jule_any_type19), ._field_Constant=_137113_constant});;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4b6d13a__Dir(jule::Ptr<_1b4b6ba40_comptimeFile> _self_, jule::Ptr<_1b4c483d0_Eval>* _137929_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _137944_fc) {
	if (((*((*(_137944_fc))))._field_Args.len() > 0LL)) {
		_1b4c48930_pushErr((*(_137929_e)).ptr(), (*((*((*(_137944_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Dir", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b2753508_Const> _138413_constant = static__1b2754295_NewStr(_1b4adb64c_Dir((*((*(_self_))._field_file))._field_File.ptr()));;
	return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=_1b4d6053b_primStr, ._field_Model=jule::Any(_138413_constant, &__jule_any_type19), ._field_Constant=_138413_constant});;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4b6d47b_subIdent(jule::Ptr<_1b4b6ba40_comptimeFile> _self_, jule::Str* _139229_ident) {
	{
		auto &_match_expr{ (*(_139229_ident)) };
		
		if (_match_expr == jule::Str::lit("Path", 4)) {
			_case_begin_1aadceebb:;
			{
				jule::Ptr<_1b4b39865_FnIns> _139517_method = jule::new_ptr<_1b4b39865_FnIns>(_1b4b39865_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1b4c466a8_Data>,jule::Ptr<_1b4c483d0_Eval>*,jule::Ptr<_1b4b03c2a_FnCallExpr>*,jule::Ptr<_1b4c466a8_Data>*>((void*)__jule_anon_1aadd12a8, jule::Ptr<__jule_anon_1aadd12a8_ctx>::make(__jule_anon_1aadd12a8_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aadd12a8_ctx_handler), });;
				return _1b4b6d800_buildAsComptimeMethodData(&(_139517_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1aadd0065:;
			{
				jule::Ptr<_1b4b39865_FnIns> _140217_method = jule::new_ptr<_1b4b39865_FnIns>(_1b4b39865_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1b4c466a8_Data>,jule::Ptr<_1b4c483d0_Eval>*,jule::Ptr<_1b4b03c2a_FnCallExpr>*,jule::Ptr<_1b4c466a8_Data>*>((void*)__jule_anon_1aadd3211, jule::Ptr<__jule_anon_1aadd3211_ctx>::make(__jule_anon_1aadd3211_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aadd3211_ctx_handler), });;
				return _1b4b6d800_buildAsComptimeMethodData(&(_140217_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Dir", 3)) {
			_case_begin_1aadd00dc:;
			{
				jule::Ptr<_1b4b39865_FnIns> _140917_method = jule::new_ptr<_1b4b39865_FnIns>(_1b4b39865_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1b4c466a8_Data>,jule::Ptr<_1b4c483d0_Eval>*,jule::Ptr<_1b4b03c2a_FnCallExpr>*,jule::Ptr<_1b4c466a8_Data>*>((void*)__jule_anon_1aadd5169, jule::Ptr<__jule_anon_1aadd5169_ctx>::make(__jule_anon_1aadd5169_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aadd5169_ctx_handler), });;
				return _1b4b6d800_buildAsComptimeMethodData(&(_140917_method));;
			}
		}
		else {
			_case_begin_1aadcebd0:;
			{
				return nullptr;;
			}
		}
		_match_end_1aadced56:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b6ba40_comptimeFile _Src) {
	_Stream << _1b4b6c0e5_Str(&_Src);
	return _Stream;
}



inline jule::Fn<jule::Bool,jule::Ptr<_1b4bbac37_Sema>*,jule::Slice<jule::Ptr<_1b4c7bb1c_TypeAlias>>*> _1b4b7144b_readyFn(jule::Ptr<_1b4b71050_constraintChecker> _self_) {
	return jule::__new_closure<jule::Bool,jule::Ptr<_1b4bbac37_Sema>*,jule::Slice<jule::Ptr<_1b4c7bb1c_TypeAlias>>*>((void*)__jule_anon_1aade0b9c, jule::Ptr<__jule_anon_1aade0b9c_ctx>::make(__jule_anon_1aade0b9c_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aade0b9c_ctx_handler);;
}



inline jule::Bool _1b4b716d2_readyFi(jule::Ptr<_1b4b71050_constraintChecker> _self_) {
	(*(_self_))._field_genericsD=(*((*((*_self_.alloc)._field_fi))._field_Decl))._field_Generics;
	(*_self_.alloc)._field_generics=(*(*_self_.alloc)._field_fi.alloc)._field_Generics;
	return ((!((*_self_.alloc)._field_uniq)) || _1b4bc920c_fnEnvironment((*_self_.alloc)._field_s, &((*_self_.alloc)._field_fi), _1b4b7144b_readyFn(_self_)));;
}



inline jule::Bool _1b4b71968_readySi(jule::Ptr<_1b4b71050_constraintChecker> _self_) {
	(*(_self_))._field_genericsD=(*((*((*_self_.alloc)._field_si))._field_Decl))._field_Generics;
	(*_self_.alloc)._field_generics=(*(*_self_.alloc)._field_si.alloc)._field_Generics;
	return ((!((*_self_.alloc)._field_uniq)) || _1b4b7144b_readyFn(_self_)(&((*_self_.alloc)._field_s), &((*_self_.alloc)._field_genericsA)));;
}



inline jule::Bool _1b4b71bee_ready(jule::Ptr<_1b4b71050_constraintChecker> _self_) {
	if (((*(_self_))._field_fi != nullptr)) {
		return _1b4b716d2_readyFi(_self_);;
	};
	return _1b4b71968_readySi(_self_);;
}



inline jule::Bool _1b4b71e85_check(jule::Ptr<_1b4b71050_constraintChecker> _self_) {
	if ((!(_1b4b71bee_ready(_self_)))) {
		return false;;
	};
	_julec_label_1aae0030a:;
	{
		auto expr = &((*_self_.alloc)._field_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aae00bce:;
		if (it != expr_end) {
			jule::I64 _12014_i = it - expr->begin();
			jule::Ptr<_1b4c7b028_InsGeneric> _12021_g = *it;
			{
				if (((*(_12021_g))._field_Constraint == nullptr)) {
					goto _iter_next_1aae00bce;
				};
				{
					auto expr = &((*_12021_g.alloc)._field_Constraint);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aae01dab:;
					if (it != expr_end) {
						jule::Ptr<_1b4c7c90e_TypeKind> _12425_c2 = *it;
						{
							jule::Ptr<_1b4c854d8_Prim> _12521_prim = _1b4c80060_Prim(_12425_c2.ptr());;
							if (((_12521_prim != nullptr) && _1b4c86110_IsConstraint(_12521_prim))) {
								if (_1b4b72716_matchConstraint(&((*_12521_prim.alloc)._field_Kind), &((*_12021_g.alloc)._field_Kind))) {
									goto _iter_next_1aae00bce;
								};
								goto _iter_next_1aae01dab;
							};
							if (_1b4c7d118_Equal(_12425_c2, (*_12021_g.alloc)._field_Kind)) {
								goto _iter_next_1aae00bce;
							};
						}
						_iter_next_1aae01dab:;
						++it;
						goto _iter_begin_1aae01dab;
					}
					_iter_end_1aae01dab:;
				};
				_1b4bbd872_pushErr((*_self_.alloc)._field_s.ptr(), (*_self_.alloc)._field_et, jule::Str::lit("type @ is not matched with @'s constraint\n       constraint: @", 62), jule::Slice<jule::Any>::make({jule::Any(_1b4c7ccc7_Str((*_12021_g.alloc)._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*_self_.alloc)._field_genericsD[_12014_i]))._field_Ident, &__jule_any_type4),jule::Any(_1b4b7234d_toStrConstraints(_12021_g), &__jule_any_type4)}));
				return false;;
			}
			_iter_next_1aae00bce:;
			++it;
			_12014_i++;
			goto _iter_begin_1aae00bce;
		}
		_iter_end_1aae00bce:;
	};
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b71050_constraintChecker _Src) {
	_Stream << "constraintChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "genericsD:" << _Src._field_genericsD << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "genericsA:" << _Src._field_genericsA << ", ";
	_Stream << "fi:" << _Src._field_fi << ", ";
	_Stream << "si:" << _Src._field_si << ", ";
	_Stream << "et:" << _Src._field_et << ", ";
	_Stream << "uniq:" << _Src._field_uniq;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b4b7376c_IsTraitImpl(_1b4b733a4_Impl* _self_) {
	return ((*(_self_))._field_Base != nullptr);;
}



inline jule::Bool _1b4b73a03_IsStructImpl(_1b4b733a4_Impl* _self_) {
	return ((*(_self_))._field_Base == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b733a4_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b7880a_Scope _Src) {
	_Stream << "Scope{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b78c28_If _Src) {
	_Stream << "If{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b79025_Else _Src) {
	_Stream << "Else{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b79443_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Elifs:" << _Src._field_Elifs << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b79740_InfIter _Src) {
	_Stream << "InfIter{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b79be6_WhileIter _Src) {
	_Stream << "WhileIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b7a642_RangeIter _Src) {
	_Stream << "RangeIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b7a9c7_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "It:" << _Src._field_It;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b7ada1_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "It:" << _Src._field_It << ", ";
	_Stream << "Mtch:" << _Src._field_Mtch;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b7b19d_Label _Src) {
	_Stream << "Label{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b7b577_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b7b951_Postfix _Src) {
	_Stream << "Postfix{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b7be07_Assign _Src) {
	_Stream << "Assign{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b7c3ad_MultiAssign _Src) {
	_Stream << "MultiAssign{";
	_Stream << "Decls:" << _Src._field_Decls << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b7ca1d_Match _Src) {
	_Stream << "Match{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Comptime:" << _Src._field_Comptime << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b7d546_Case _Src) {
	_Stream << "Case{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs << ", ";
	_Stream << "Next:" << _Src._field_Next;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b7dc3e_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "DestCase:" << _Src._field_DestCase;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b7e0d5_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b7e745_scopeLabel _Src) {
	_Stream << "scopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b7ecc8_scopeGoto _Src) {
	_Stream << "scopeGoto{";
	_Stream << "st:" << _Src._field_st << ", ";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b4b9a893_ImportInfo> _1b4b8125d_SelectPackage(_1b4b80cb8_scopeChecker* _self_, jule::Fn<jule::Bool,jule::Ptr<_1b4b9a893_ImportInfo>> _46032_selector) {
	return _1b4bbb1cc_SelectPackage((*(_self_))._field_s.ptr(), _46032_selector);;
}



inline jule::Ptr<_1b4bddaa1_Var> _1b4b81659_FindVar(_1b4b80cb8_scopeChecker* _self_, jule::Str _47126_ident, jule::Bool _47138_binded) {
	if ((!(_47138_binded))) {
		jule::Ptr<_1b4bddaa1_Var> _47317_v = _1b4b84739_findVar(_self_, _47126_ident);;
		if ((_47317_v != nullptr)) {
			return _47317_v;;
		};
	};
	return _1b4bbb5c8_FindVar((*(_self_))._field_s.ptr(), _47126_ident, _47138_binded);;
}



inline jule::Ptr<_1b4c7bb1c_TypeAlias> _1b4b81a55_FindTypeAlias(_1b4b80cb8_scopeChecker* _self_, jule::Str _48832_ident, jule::Bool _48844_binded) {
	;
	jule::Ptr<_1b4c7bb1c_TypeAlias> _49113_ta = _1b4c43ead_findTypeAlias((*(_self_))._field_table.ptr(), &(_48832_ident), _48844_binded, true);;
	if ((_49113_ta != nullptr)) {
		return _49113_ta;;
	};
	jule::Ptr<_1b4b80cb8_scopeChecker> _49613_parent = (*(_self_))._field_parent;;
	while ((_49613_parent != nullptr)) {
		{
			_49113_ta=_1b4c43ead_findTypeAlias((*_49613_parent.alloc)._field_table, &(_48832_ident), _48844_binded, true);
			if ((_49113_ta != nullptr)) {
				return _49113_ta;;
			};
			_49613_parent=(*_49613_parent.alloc)._field_parent;
		}
	_iter_next_1aae40b97:;
	}
	_iter_end_1aae40b97:;;
	return _1b4bbb9c4_FindTypeAlias((*(_self_))._field_s.ptr(), _48832_ident, _48844_binded);;
}



inline jule::Ptr<_1b4b218b3_Struct> _1b4b81e51_FindStruct(_1b4b80cb8_scopeChecker* _self_, jule::Str _51329_ident, jule::Bool _51341_binded) {
	return _1b4bbbdc0_FindStruct((*(_self_))._field_s.ptr(), _51329_ident, _51341_binded);;
}



inline jule::Ptr<_1b4b36884_Fn> _1b4b8234c_FindFn(_1b4b80cb8_scopeChecker* _self_, jule::Str _52225_ident, jule::Bool _52237_binded) {
	return _1b4bbc2bb_FindFn((*(_self_))._field_s.ptr(), _52225_ident, _52237_binded);;
}



inline jule::Ptr<_1b4b49c3d_Trait> _1b4b8268d_FindTrait(_1b4b80cb8_scopeChecker* _self_, jule::Str _53128_ident) {
	return _1b4bbc60c_FindTrait((*(_self_))._field_s.ptr(), _53128_ident);;
}



inline jule::Ptr<_1b4b4c449_Enum> _1b4b829ce_FindEnum(_1b4b80cb8_scopeChecker* _self_, jule::Str _54027_ident) {
	return _1b4bbc94d_FindEnum((*(_self_))._field_s.ptr(), _54027_ident);;
}



inline jule::Ptr<_1b4b4db54_TypeEnum> _1b4b82d20_FindTypeEnum(_1b4b80cb8_scopeChecker* _self_, jule::Str _54931_ident) {
	return _1b4bbcc8e_FindTypeEnum((*(_self_))._field_s.ptr(), _54931_ident);;
}



inline jule::Bool _1b4b83172_isUnsafe(jule::Ptr<_1b4b80cb8_scopeChecker> _self_) {
	jule::Ptr<_1b4b80cb8_scopeChecker> _55713_scope = _self_;;
	_julec_label_1aae4588e:;
	if ((*((*(_55713_scope))._field_scope))._field_Unsafety) {
		return true;;
	};
	if (((*_55713_scope.alloc)._field_parent != nullptr)) {
		_55713_scope=(*_55713_scope.alloc)._field_parent;
		goto _julec_label_1aae4588e;
	};
	return false;;
}



inline jule::Bool _1b4b83408_isRoot(_1b4b80cb8_scopeChecker* _self_) {
	return (((*(_self_))._field_parent == nullptr) || ((*(_self_))._field_owner != nullptr));;
}



inline void _1b4b83606_stop(_1b4b80cb8_scopeChecker* _self_) {
	(*(_self_))._field_i=-1LL;
}



inline jule::Bool _1b4b8388c_stopped(_1b4b80cb8_scopeChecker* _self_) {
	return ((*(_self_))._field_i == -1LL);;
}



inline jule::Bool _1b4b83b23_isDeferred(jule::Ptr<_1b4b80cb8_scopeChecker> _self_) {
	jule::Ptr<_1b4b80cb8_scopeChecker> _59013_scope = _self_;;
	_julec_label_1aae48bd3:;
	if ((*((*(_59013_scope))._field_scope))._field_Deferred) {
		return true;;
	};
	if (((*_59013_scope.alloc)._field_parent != nullptr)) {
		_59013_scope=(*_59013_scope.alloc)._field_parent;
		goto _julec_label_1aae48bd3;
	};
	return false;;
}



inline void _1b4b83dcb_pushCaptured(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4bddaa1_Var>* _61137_v) {
	jule::Ptr<_1b4b80cb8_scopeChecker> _61213_sc = _self_;;
	for (;;) {
		{
			if (((*(_61213_sc))._field_captured != nullptr)) {
				{
					auto expr = &((*(*_61213_sc.alloc)._field_captured.alloc));
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aae4bae8:;
					if (it != expr_end) {
						jule::Ptr<_1b4bddaa1_Var> _61524_cv = *it;
						{
							if ((_61524_cv == (*(_61137_v)))) {
								goto _julec_label_1aae4c8a7;
							};
						}
						_iter_next_1aae4bae8:;
						++it;
						goto _iter_begin_1aae4bae8;
					}
					_iter_end_1aae4bae8:;
				};
				(*(*_61213_sc.alloc)._field_captured.alloc)=jule::append((*(*_61213_sc.alloc)._field_captured.alloc),jule::Slice<jule::Ptr<_1b4bddaa1_Var>>::make({(*(_61137_v))}));
				_julec_label_1aae4c8a7:;
			};
			if (((*_61213_sc.alloc)._field_parent == nullptr)) {
				goto _iter_end_1aae499a3;
			};
			_61213_sc=(*_61213_sc.alloc)._field_parent;
			if ((!(_1b4c79eb1_isVarCaptured(_61213_sc, _61213_sc, (*(_61137_v)))))) {
				goto _iter_end_1aae499a3;
			};
		}
	_iter_next_1aae499a3:;
	}
	_iter_end_1aae499a3:;;
}



inline jule::Ptr<_1b4b80cb8_scopeChecker> _1b4b84162_getRoot(jule::Ptr<_1b4b80cb8_scopeChecker> _self_) {
	jule::Ptr<_1b4b80cb8_scopeChecker> _63613_root = _self_;;
	while ((((*(_63613_root))._field_parent != nullptr) && ((*_63613_root.alloc)._field_owner == nullptr))) {
		{
			_63613_root=(*_63613_root.alloc)._field_parent;
		}
	_iter_next_1aae4ecd8:;
	}
	_iter_end_1aae4ecd8:;;
	return _63613_root;;
}



inline jule::Ptr<_1b4b80cb8_scopeChecker> _1b4b843e8_getHardRoot(jule::Ptr<_1b4b80cb8_scopeChecker> _self_) {
	jule::Ptr<_1b4b80cb8_scopeChecker> _64613_root = _self_;;
	while (((*(_64613_root))._field_parent != nullptr)) {
		{
			_64613_root=(*_64613_root.alloc)._field_parent;
		}
	_iter_next_1aae51119:;
	}
	_iter_end_1aae51119:;;
	return _64613_root;;
}



inline jule::Ptr<_1b4bddaa1_Var> _1b4b84739_findVar(_1b4b80cb8_scopeChecker* _self_, jule::Str _65426_ident) {
	;
	;
	jule::Ptr<_1b4bddaa1_Var> _65713_v = _1b4c43a07_findVar((*(_self_))._field_table.ptr(), &(_65426_ident), false, true);;
	if ((_65713_v != nullptr)) {
		return _65713_v;;
	};
	jule::Ptr<_1b4b80cb8_scopeChecker> _66113_parent = (*(_self_))._field_parent;;
	while ((_66113_parent != nullptr)) {
		{
			_65713_v=_1b4c43a07_findVar((*_66113_parent.alloc)._field_table, &(_65426_ident), false, true);
			if ((_65713_v != nullptr)) {
				return _65713_v;;
			};
			_66113_parent=(*_66113_parent.alloc)._field_parent;
		}
	_iter_next_1aae530c7:;
	}
	_iter_end_1aae530c7:;;
	return nullptr;;
}



inline jule::Ptr<_1b4b7b19d_Label> _1b4b84a7a_findLabel(_1b4b80cb8_scopeChecker* _self_, jule::Str* _67529_ident) {
	{
		auto expr = &((*((*(_self_))._field_scope))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aae5510c:;
		if (it != expr_end) {
			jule::Any _67621_st = *it;
			{
				{
					auto &_match_expr{ _67621_st };
					
					if (_match_expr.type == &__jule_any_type20) {
						_case_begin_1aae558d2:;
						{
							jule::Ptr<_1b4b7b19d_Label> _67921_label = _67621_st.unsafe_cast_ptr<_1b4b7b19d_Label>();;
							if (((*(_67921_label))._field_Ident == (*(_67529_ident)))) {
								return _67921_label;;
							};
						}
					}
					_match_end_1aae5587c:;
				};
			}
			_iter_next_1aae5510c:;
			++it;
			goto _iter_begin_1aae5510c;
		}
		_iter_end_1aae5510c:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b4b7e745_scopeLabel> _1b4b84dbb_findLabelScope(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Str* _69135_ident) {
	jule::Ptr<_1b4b7e745_scopeLabel> _69213_label = _1b4b8520c_findLabelAll(_self_.ptr(), _69135_ident);;
	if (((_69213_label != nullptr) && ((*_69213_label.alloc)._field_scope == _self_))) {
		return _69213_label;;
	};
	return nullptr;;
}



inline jule::Ptr<_1b4b7e745_scopeLabel> _1b4b8520c_findLabelAll(_1b4b80cb8_scopeChecker* _self_, jule::Str* _70332_ident) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aae57e9a:;
		if (it != expr_end) {
			jule::Ptr<_1b4b7e745_scopeLabel> _70421_lbl = *it;
			{
				if (((*((*(_70421_lbl))._field_label))._field_Ident == (*(_70332_ident)))) {
					return _70421_lbl;;
				};
			}
			_iter_next_1aae57e9a:;
			++it;
			goto _iter_begin_1aae57e9a;
		}
		_iter_end_1aae57e9a:;
	};
	return nullptr;;
}



inline jule::Bool _1b4b85608_isDuplicatedIdent(_1b4b80cb8_scopeChecker* _self_, jule::Uintptr _71536_itself, jule::Str* _71554_ident) {
	jule::Ptr<_1b4bddaa1_Var> _7169_v = _1b4b81659_FindVar(_self_, (*(_71554_ident)), false);;
	if (((_7169_v != nullptr) && (static_cast<jule::Uintptr>(_7169_v) != _71536_itself))) {
		if (((*_7169_v.alloc)._field_Scope == nullptr)) {
			return false;;
		};
		return (((*_7169_v.alloc)._field_Scope == (*(_self_))._field_scope) || (!(_1b4bbd19b_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))));;
	};
	jule::Ptr<_1b4c7bb1c_TypeAlias> _7249_ta = _1b4b81a55_FindTypeAlias(_self_, (*(_71554_ident)), false);;
	if (((_7249_ta != nullptr) && (static_cast<jule::Uintptr>(_7249_ta) != _71536_itself))) {
		if (((*_7249_ta.alloc)._field_Scope == nullptr)) {
			return false;;
		};
		return (((*_7249_ta.alloc)._field_Scope == (*(_self_))._field_tree) || (!(_1b4bbd19b_isFlag((*(_self_))._field_s, static_cast<jule::I64>(1LL)))));;
	};
	return false;;
}



inline void _1b4b858b1_checkVarDecl(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4b13894_VarDecl> _73536_decl) {
	jule::Ptr<_1b4bddaa1_Var> _73613_v = _1b4b42dac_buildVar(_73536_decl);;
	(*(_73613_v))._field_Scope=(*(_self_))._field_scope;
	__JULE_DEFER({
		(*((*_self_.alloc)._field_table))._field_Vars=jule::append((*(*_self_.alloc)._field_table.alloc)._field_Vars,jule::Slice<jule::Ptr<_1b4bddaa1_Var>>::make({_73613_v}));
		(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_73613_v, &__jule_any_type8)}));
	});;
	if (_1b4b85608_isDuplicatedIdent(_self_, static_cast<jule::Uintptr>(_73613_v), &((*_73613_v.alloc)._field_Ident))) {
		_1b4bbd872_pushErr((*_self_.alloc)._field_s.ptr(), (*_73613_v.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*_73613_v.alloc)._field_Ident, &__jule_any_type4)}));
		_1b4bbdbd5_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_1b4b83606_stop(_self_);
		return;;
	};
	_1b4bd1de6_checkVarDecl((*_self_.alloc)._field_s, &(_73613_v), jule::Trait(_self_, (jule::Trait::Type*)&_1b4c9c500_Lookup_mptr_data0));
	if (((!(_1b4bde211_IsTypeInferred(_73613_v))) && (((*_73613_v.alloc)._field_Kind == nullptr) || ((*((*_73613_v.alloc)._field_Kind))._field_Kind == nullptr)))) {
		return;;
	};
	_1b4bd568b_evalVarValue((*_self_.alloc)._field_s, &(_73613_v), jule::Trait(_self_, (jule::Trait::Type*)&_1b4c9c500_Lookup_mptr_data0));
	if (((!(_1b4bdde7a_IsInitialized(_73613_v))) || ((*((*_73613_v.alloc)._field_Value))._field_Data == nullptr))) {
		return;;
	};
	_1b4b8bb2b_removeInteriorMutRisk(_self_, &((*(*_73613_v.alloc)._field_Value.alloc)._field_Data));
	_1b4bd5328_checkVarValue((*_self_.alloc)._field_s, &(_73613_v));
}



inline void _1b4b85b69_checkTypeAlias(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4c7bb1c_TypeAlias>* _76639_ta) {
	if (_1b4b85608_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_76639_ta))), &((*((*(_76639_ta))))._field_Ident))) {
		_1b4bbd872_pushErr((*_self_.alloc)._field_s.ptr(), (*((*(_76639_ta))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_76639_ta))))._field_Ident, &__jule_any_type4)}));
		_1b4bbdbd5_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_1b4b83606_stop(_self_);
		return;;
	};
	_1b4bcae78_checkTypeAliasDecl((*_self_.alloc)._field_s, _76639_ta, jule::Trait(_self_, (jule::Trait::Type*)&_1b4c9c500_Lookup_mptr_data0));
	(*((*_self_.alloc)._field_table))._field_TypeAliases=jule::append((*(*_self_.alloc)._field_table.alloc)._field_TypeAliases,jule::Slice<jule::Ptr<_1b4c7bb1c_TypeAlias>>::make({(*(_76639_ta))}));
	if (((*((*((*(_76639_ta))))._field_Kind))._field_Kind == nullptr)) {
		_1b4b83606_stop(_self_);
	};
}



inline void _1b4b85e22_checkTypeAliasDecl(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4b17546_TypeAliasDecl> _78242_decl) {
	jule::Ptr<_1b4c7bb1c_TypeAlias> _78313_ta = _1b4b3e98b_buildTypeAlias(_78242_decl);;
	_1b4b85b69_checkTypeAlias(_self_, &(_78313_ta));
}



inline jule::Ptr<_1b4b7880a_Scope> _1b4b861a8_getChild(_1b4b80cb8_scopeChecker* _self_) {
	return jule::new_ptr<_1b4b7880a_Scope>(_1b4b7880a_Scope{._field_Parent=(*(_self_))._field_scope, });;
}



inline void _1b4b865c6_checkChildSsc(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4b10a4a_ScopeTree>* _79338_tree, jule::Ptr<_1b4b7880a_Scope>* _79361_s, jule::Ptr<_1b4b80cb8_scopeChecker>* _79377_ssc) {
	(*((*(_79377_ssc))))._field_parent=_self_;
	_1b4b92abb_check((*(_79377_ssc)), _79338_tree, _79361_s);
}



inline jule::Ptr<_1b4b7880a_Scope> _1b4b869c2_checkChildSc(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4b10a4a_ScopeTree>* _79837_tree, jule::Ptr<_1b4b80cb8_scopeChecker>* _79860_ssc) {
	jule::Ptr<_1b4b7880a_Scope> _79913_s = _1b4b861a8_getChild(_self_.ptr());;
	_1b4b865c6_checkChildSsc(_self_, _79837_tree, &(_79913_s), _79860_ssc);
	return _79913_s;;
}



inline jule::Ptr<_1b4b7880a_Scope> _1b4b86d13_checkChild(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4b10a4a_ScopeTree>* _80435_tree) {
	jule::Ptr<_1b4b80cb8_scopeChecker> _80513_ssc = _1b4b92d52_newChildChecker(_self_);;
	return _1b4b869c2_checkChildSc(_self_, _80435_tree, &(_80513_ssc));;
}



inline void _1b4b870bb_checkAnonScope(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4b10a4a_ScopeTree> _80938_tree) {
	jule::Ptr<_1b4b7880a_Scope> _81013_s = _1b4b86d13_checkChild(_self_, &(_80938_tree));;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_81013_s, &__jule_any_type21)}));
}



inline void _1b4b8742e_processErrorCall(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4b3231e_BuiltinErrorCallExprModel>* _81441_m, jule::Ptr<_1b4ad5712_Token> _81472_err) {
	if (_1b4b83b23_isDeferred(_self_)) {
		_1b4bbd872_pushErr((*_self_.alloc)._field_s.ptr(), _81472_err, jule::Str::lit("deferred scopes are not supports error calls", 44), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1b4b80cb8_scopeChecker> _81913_root = _1b4b84162_getRoot(_self_);;
	if ((!((*((*((*(_81913_root))._field_owner))._field_Decl))._field_Exceptional))) {
		_1b4bbd872_pushErr((*_self_.alloc)._field_s, _81472_err, jule::Str::lit("error call can only useable for exceptional functions", 53), jule::Slice<jule::Any>());
		_1b4bbdbd5_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("you can declare an exceptional function with \"!\" operator", 57), jule::Slice<jule::Any>());
	};
	(*((*(_81441_m))))._field_Func=(*_81913_root.alloc)._field_owner;
}



inline void _1b4b876d7_checkExpr(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4b00001_Expr> _82733_expr) {
	jule::Ptr<_1b4c483d0_Eval> _82813_eval = _1b4bc5d1e_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1b4c9c500_Lookup_mptr_data0));;
	(*(_82813_eval))._field_ignored=true;
	jule::Ptr<_1b4c466a8_Data> _83013_d = _1b4c6b49c_evalExpr(_82813_eval, _82733_expr);;
	if (((_83013_d == nullptr) || ((*(_83013_d))._field_Model == nullptr))) {
		return;;
	};
	{
		auto &_match_expr{ (*(_83013_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1aae756c1:;
			{
				jule::Ptr<_1b4b3231e_BuiltinErrorCallExprModel> _83917_m = (*(_83013_d))._field_Model.unsafe_cast_ptr<_1b4b3231e_BuiltinErrorCallExprModel>();;
				_1b4b8742e_processErrorCall(_self_, &(_83917_m), (*(_82733_expr))._field_Token);
				(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_83013_d, &__jule_any_type23)}));
			}
		}
		else if (_match_expr.type == &__jule_any_type24 || _match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type28 || _match_expr.type == &__jule_any_type29 || _match_expr.type == &__jule_any_type30 || _match_expr.type == &__jule_any_type31 || _match_expr.type == &__jule_any_type32 || _match_expr.type == &__jule_any_type33) {
			_case_begin_1aae75ced:;
			{
				(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_83013_d, &__jule_any_type23)}));
			}
		}
		else {
			_case_begin_1aae75c87:;
			{
				_1b4bbd872_pushErr((*_self_.alloc)._field_s, (*(_82733_expr))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1aae75c32:;
	};
}



inline jule::Ptr<_1b4b78c28_If> _1b4b87a28_checkIf(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4b16479_If> _85831_i) {
	jule::Ptr<_1b4b7880a_Scope> _85913_s = _1b4b86d13_checkChild(_self_, &((*(_85831_i))._field_Scope));;
	jule::Ptr<_1b4c466a8_Data> _86113_d = _1b4c6b49c_evalExpr(_1b4bc5d1e_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1b4c9c500_Lookup_mptr_data0)), (*_85831_i.alloc)._field_Expr);;
	if ((_86113_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1b4c854d8_Prim> _86613_prim = _1b4c80060_Prim((*(_86113_d))._field_Kind.ptr());;
	if (((_86613_prim == nullptr) || (!(_1b4c886d9_IsBool(_86613_prim.ptr()))))) {
		_1b4bbd872_pushErr((*_self_.alloc)._field_s, (*((*_85831_i.alloc)._field_Expr))._field_Token, jule::Str::lit("if conditions must be have boolean expression", 45), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1b4b78c28_If>(_1b4b78c28_If{._field_Expr=(*(_86113_d))._field_Model, ._field_Scope=_85913_s});;
}



inline jule::Ptr<_1b4b79025_Else> _1b4b87d69_checkElse(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4b16853_Else> _87833_e) {
	return jule::new_ptr<_1b4b79025_Else>(_1b4b79025_Else{._field_Scope=_1b4b86d13_checkChild(_self_, &((*(_87833_e))._field_Scope))});;
}



inline void _1b4b88122_checkConditional(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4b16d09_Conditional> _88440_conditional) {
	jule::Ptr<_1b4b79443_Conditional> _88513_c = jule::new_ptr<_1b4b79443_Conditional>();;
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_88513_c, &__jule_any_type34)}));
	(*_88513_c.alloc)._field_Elifs=jule::Slice<jule::Ptr<_1b4b78c28_If>>::alloc(0LL, ((*(_88440_conditional))._field_Tail.len() + 1LL));
	(*_88513_c.alloc)._field_Elifs=jule::append((*_88513_c.alloc)._field_Elifs,jule::Slice<jule::Ptr<_1b4b78c28_If>>::make({_1b4b87a28_checkIf(_self_, (*_88440_conditional.alloc)._field_Head)}));
	{
		auto expr = &((*_88440_conditional.alloc)._field_Tail);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aae82535:;
		if (it != expr_end) {
			jule::Ptr<_1b4b16479_If> _89121_elif = *it;
			{
				(*_88513_c.alloc)._field_Elifs=jule::append((*_88513_c.alloc)._field_Elifs,jule::Slice<jule::Ptr<_1b4b78c28_If>>::make({_1b4b87a28_checkIf(_self_, _89121_elif)}));
			}
			_iter_next_1aae82535:;
			++it;
			goto _iter_begin_1aae82535;
		}
		_iter_end_1aae82535:;
	};
	if (((*_88440_conditional.alloc)._field_Default != nullptr)) {
		(*_88513_c.alloc)._field_Default=_1b4b87d69_checkElse(_self_, (*_88440_conditional.alloc)._field_Default);
	};
}



inline void _1b4b885ea_checkIterScopeSsc(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Uintptr _90037_it, jule::Ptr<_1b4b10a4a_ScopeTree> _90054_tree, jule::Ptr<_1b4b7880a_Scope>* _90077_s, jule::Ptr<_1b4b80cb8_scopeChecker> _90092_ssc) {
	(*(_90092_ssc))._field_it=_90037_it;
	_1b4b865c6_checkChildSsc(_self_, &(_90054_tree), _90077_s, &(_90092_ssc));
}



inline jule::Ptr<_1b4b7880a_Scope> _1b4b88aa1_checkIterScopeSc(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Uintptr _90536_it, jule::Ptr<_1b4b10a4a_ScopeTree> _90553_tree, jule::Ptr<_1b4b80cb8_scopeChecker> _90575_ssc) {
	jule::Ptr<_1b4b7880a_Scope> _90613_scope = _1b4b861a8_getChild(_self_.ptr());;
	_1b4b885ea_checkIterScopeSsc(_self_, _90536_it, _90553_tree, &(_90613_scope), _90575_ssc);
	return _90613_scope;;
}



inline jule::Ptr<_1b4b7880a_Scope> _1b4b88e9c_checkIterScope(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Uintptr _91134_it, jule::Ptr<_1b4b10a4a_ScopeTree>* _91152_tree) {
	jule::Ptr<_1b4b80cb8_scopeChecker> _91213_ssc = _1b4b92d52_newChildChecker(_self_);;
	return _1b4b88aa1_checkIterScopeSc(_self_, _91134_it, (*(_91152_tree)), _91213_ssc);;
}



inline void _1b4b89255_checkInfIter(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4b144dd_Iter>* _91637_it) {
	jule::Ptr<_1b4b79740_InfIter> _91713_kind = jule::new_ptr<_1b4b79740_InfIter>();;
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_91713_kind, &__jule_any_type35)}));
	(*_91713_kind.alloc)._field_Scope=_1b4b88e9c_checkIterScope(_self_, static_cast<jule::Uintptr>(_91713_kind), &((*((*(_91637_it))))._field_Scope));
}



inline void _1b4b8950d_checkWhileIter(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4b144dd_Iter>* _92239_it) {
	jule::Ptr<_1b4b14d18_WhileKind> _92313_wh = (*((*(_92239_it))))._field_Kind.cast_ptr<_1b4b14d18_WhileKind>(&__jule_any_type36);;
	if ((((*(_92313_wh))._field_Expr == nullptr) && ((*_92313_wh.alloc)._field_Next == nullptr))) {
		_1b4b89255_checkInfIter(_self_, _92239_it);
		return;;
	};
	jule::Ptr<_1b4b79be6_WhileIter> _92913_kind = jule::new_ptr<_1b4b79be6_WhileIter>();;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_92913_kind, &__jule_any_type37)}));
	(*_92913_kind.alloc)._field_Scope=_1b4b88e9c_checkIterScope(_self_, static_cast<jule::Uintptr>(_92913_kind), &((*((*(_92239_it))))._field_Scope));
	if (((*_92313_wh.alloc)._field_Expr != nullptr)) {
		jule::Ptr<_1b4c466a8_Data> _93417_d = _1b4c6b49c_evalExpr(_1b4bc5d1e_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1b4c9c500_Lookup_mptr_data0)), (*_92313_wh.alloc)._field_Expr);;
		if ((_93417_d == nullptr)) {
			return;;
		};
		jule::Ptr<_1b4c854d8_Prim> _93913_prim = _1b4c80060_Prim((*(_93417_d))._field_Kind.ptr());;
		if ((_93913_prim == nullptr)) {
			_1b4bbd872_pushErr((*_self_.alloc)._field_s, (*((*(_92239_it))))._field_Token, jule::Str::lit("while iterations must be have boolean expression", 48), jule::Slice<jule::Any>());
			return;;
		};
		if ((!(_1b4c886d9_IsBool(_93913_prim.ptr())))) {
			_1b4bbd872_pushErr((*_self_.alloc)._field_s, (*((*(_92239_it))))._field_Token, jule::Str::lit("while iterations must be have boolean expression", 48), jule::Slice<jule::Any>());
			return;;
		};
		(*_92913_kind.alloc)._field_Expr=(*(_93417_d))._field_Model;
	};
	if (_1b4b1517b_IsWhileNext(_92313_wh)) {
		if ((!(_1b4b77c8d_isValidAstStForNextSt(&((*_92313_wh.alloc)._field_Next))))) {
			_1b4bbd872_pushErr((*_self_.alloc)._field_s, (*_92313_wh.alloc)._field_NextToken, jule::Str::lit("invalid statement for while-next", 32), jule::Slice<jule::Any>());
			return;;
		};
		jule::I64 _95913_n = (*(*_self_.alloc)._field_scope.alloc)._field_Stmts.len();;
		_1b4b91702_checkNode(_self_, &((*_92313_wh.alloc)._field_Next));
		if ((_95913_n < (*(*_self_.alloc)._field_scope.alloc)._field_Stmts.len())) {
			jule::Any _96221_st = (*(*_self_.alloc)._field_scope.alloc)._field_Stmts[_95913_n];;
			((*((*(_self_))._field_scope))._field_Stmts).mut_slice(0LL, _95913_n);;
			if ((!(_1b4b78057_isValidStForNextSt(&(_96221_st))))) {
				_1b4bbd872_pushErr((*_self_.alloc)._field_s, (*_92313_wh.alloc)._field_NextToken, jule::Str::lit("invalid statement for while-next", 32), jule::Slice<jule::Any>());
			};
			(*_92913_kind.alloc)._field_Next=_96221_st;
		};
	};
}



inline void _1b4b8992b_checkComptimeRangeIter(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4b144dd_Iter>* _97247_it, jule::Ptr<_1b4b7a642_RangeIter>* _97263_kind, jule::Ptr<_1b4c466a8_Data>* _97286_d) {
	if (((*((*(_97263_kind))))._field_KeyA != nullptr)) {
		if (((!(_1b4bbd19b_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1b4b85608_isDuplicatedIdent(_self_, 0LLU, &((*(*((*(_97263_kind))))._field_KeyA.alloc)._field_Ident)))) {
			_1b4bbd872_pushErr((*_self_.alloc)._field_s, (*(*((*(_97263_kind))))._field_KeyA.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*((*(_97263_kind))))._field_KeyA.alloc)._field_Ident, &__jule_any_type4)}));
			_1b4bbdbd5_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
	};
	if (((*((*(_97263_kind))))._field_KeyB != nullptr)) {
		if (((!(_1b4bbd19b_isFlag((*_self_.alloc)._field_s, static_cast<jule::I64>(1LL)))) && _1b4b85608_isDuplicatedIdent(_self_, 0LLU, &((*(*((*(_97263_kind))))._field_KeyB.alloc)._field_Ident)))) {
			_1b4bbd872_pushErr((*_self_.alloc)._field_s, (*(*((*(_97263_kind))))._field_KeyB.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*((*(_97263_kind))))._field_KeyB.alloc)._field_Ident, &__jule_any_type4)}));
			_1b4bbdbd5_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
	};
	jule::Ptr<_1b4b15720_RangeKind> _98613_rang = (*((*(_97247_it))))._field_Kind.cast_ptr<_1b4b15720_RangeKind>(&__jule_any_type38);;
	_1b4b93407_makeComptimeRange(_97286_d);
	if ((*((*(_97286_d))))._field_Decl) {
		_1b4bbd872_pushErr((*_self_.alloc)._field_s, (*((*(_98613_rang))._field_Expr))._field_Token, jule::Str::lit("type @ is not supports comptime iterations", 42), jule::Slice<jule::Any>::make({jule::Any(_1b4c7ccc7_Str((*((*(_97286_d))))._field_Kind.ptr()), &__jule_any_type4)}));
		return;;
	};
	_1b4c3b56b_rangeChecker _99313_rc = _1b4c3b56b_rangeChecker{._field_sc=_self_, ._field_rang=_98613_rang, ._field_Kind=(*(_97263_kind)), ._field_d=(*(_97286_d))};;
	jule::Bool _9999_ok = _1b4c3d57e_check(&_99313_rc);;
	if ((!(_9999_ok))) {
		return;;
	};
	jule::Ptr<_1b4b51cab_comptimeRange> _100413_comptime = _1b4c83409_comptimeRange((*((*(_97286_d))))._field_Kind);;
	((_1b4b51a8b_comptimeRangeKindMptrData*)(*(_100413_comptime))._field_kind.safe_type())->_1b4b51283_ready((*(_100413_comptime))._field_kind.data, &((*((*(_97263_kind))))._field_KeyA), &((*((*(_97263_kind))))._field_KeyB));
	jule::I64 _100613_i = 0LL;;
	jule::I64 _10079_errors = (*(*_self_.alloc)._field_s.alloc)._field_errors.len();;
	for (; (_100613_i < ((_1b4b51a8b_comptimeRangeKindMptrData*)(*_100413_comptime.alloc)._field_kind.safe_type())->_1b4b51937_len((*_100413_comptime.alloc)._field_kind.data)); (_100613_i)++) {
		{
			jule::Ptr<_1b4b80cb8_scopeChecker> _100917_ssc = _1b4b92d52_newChildChecker(_self_);;
			jule::Ptr<_1b4b7880a_Scope> _101017_scope = _1b4b861a8_getChild(_self_);;
			if (((*((*(_97263_kind))))._field_KeyA != nullptr)) {
				(*(*((*(_97263_kind))))._field_KeyA.alloc)._field_Scope=_101017_scope;
				(*((*(_100917_ssc))._field_table))._field_Vars=jule::append((*(*_100917_ssc.alloc)._field_table.alloc)._field_Vars,jule::Slice<jule::Ptr<_1b4bddaa1_Var>>::make({(*((*(_97263_kind))))._field_KeyA}));
			};
			if (((*((*(_97263_kind))))._field_KeyB != nullptr)) {
				(*(*((*(_97263_kind))))._field_KeyB.alloc)._field_Scope=_101017_scope;
				(*(*_100917_ssc.alloc)._field_table.alloc)._field_Vars=jule::append((*(*_100917_ssc.alloc)._field_table.alloc)._field_Vars,jule::Slice<jule::Ptr<_1b4bddaa1_Var>>::make({(*((*(_97263_kind))))._field_KeyB}));
			};
			((_1b4b51a8b_comptimeRangeKindMptrData*)(*_100413_comptime.alloc)._field_kind.safe_type())->_1b4b516a1_step((*_100413_comptime.alloc)._field_kind.data, _100613_i, &((*((*(_97263_kind))))._field_KeyA), &((*((*(_97263_kind))))._field_KeyB));
			_1b4b865c6_checkChildSsc(_self_, &((*((*(_97247_it))))._field_Scope), &(_101017_scope), &(_100917_ssc));
			if ((_10079_errors != (*(*_self_.alloc)._field_s.alloc)._field_errors.len())) {
				goto _iter_end_1aaea2b2c;
			};
			(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_101017_scope, &__jule_any_type21)}));
		}
	_iter_next_1aaea2b2c:;
	}
	_iter_end_1aaea2b2c:;;
}



inline void _1b4b89bd4_checkRangeIter(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4b144dd_Iter>* _102939_it) {
	jule::Ptr<_1b4b15720_RangeKind> _103013_rang = (*((*(_102939_it))))._field_Kind.cast_ptr<_1b4b15720_RangeKind>(&__jule_any_type38);;
	jule::Ptr<_1b4c466a8_Data> _103213_d = _1b4c6b15b_evalExpr1(_1b4bc5d1e_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1b4c9c500_Lookup_mptr_data0)), (*(_103013_rang))._field_Expr);;
	if ((_103213_d == nullptr)) {
		return;;
	};
	jule::Ptr<_1b4b7a642_RangeIter> _103713_kind = jule::new_ptr<_1b4b7a642_RangeIter>(_1b4b7a642_RangeIter{._field_Expr=_103213_d, });;
	if ((*((*(_102939_it))))._field_Comptime) {
		_1b4b8992b_checkComptimeRangeIter(_self_, _102939_it, &(_103713_kind), &(_103213_d));
		return;;
	};
	if (_1b4c8211c_comptime((*(_103213_d))._field_Kind.ptr())) {
		_1b4bbd872_pushErr((*_self_.alloc)._field_s, (*((*_103013_rang.alloc)._field_Expr))._field_Token, jule::Str::lit("comptime expressions cannot be iterated at runtime", 50), jule::Slice<jule::Any>());
		_1b4bbdbd5_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("declarate comptime iteration like: const for ...", 48), jule::Slice<jule::Any>());
		return;;
	};
	_1b4c3b56b_rangeChecker _105113_rc = _1b4c3b56b_rangeChecker{._field_sc=_self_, ._field_rang=_103013_rang, ._field_Kind=_103713_kind, ._field_d=_103213_d};;
	jule::Bool _10579_ok = _1b4c3d57e_check(&_105113_rc);;
	if ((!(_10579_ok))) {
		return;;
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_103713_kind, &__jule_any_type39)}));
	jule::Ptr<_1b4b80cb8_scopeChecker> _106413_ssc = _1b4b92d52_newChildChecker(_self_);;
	jule::Ptr<_1b4b7880a_Scope> _106513_scope = _1b4b861a8_getChild(_self_);;
	if (((*(_103713_kind))._field_KeyA != nullptr)) {
		if (((!(_1b4bbd19b_isFlag((*_self_.alloc)._field_s, static_cast<jule::I64>(1LL)))) && _1b4b85608_isDuplicatedIdent(_self_, 0LLU, &((*(*_103713_kind.alloc)._field_KeyA.alloc)._field_Ident)))) {
			_1b4bbd872_pushErr((*_self_.alloc)._field_s, (*(*_103713_kind.alloc)._field_KeyA.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*_103713_kind.alloc)._field_KeyA.alloc)._field_Ident, &__jule_any_type4)}));
			_1b4bbdbd5_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
		(*(*_103713_kind.alloc)._field_KeyA.alloc)._field_Scope=_106513_scope;
		(*((*(_106413_ssc))._field_table))._field_Vars=jule::append((*(*_106413_ssc.alloc)._field_table.alloc)._field_Vars,jule::Slice<jule::Ptr<_1b4bddaa1_Var>>::make({(*_103713_kind.alloc)._field_KeyA}));
	};
	if (((*_103713_kind.alloc)._field_KeyB != nullptr)) {
		if (((!(_1b4bbd19b_isFlag((*_self_.alloc)._field_s, static_cast<jule::I64>(1LL)))) && _1b4b85608_isDuplicatedIdent(_self_, 0LLU, &((*(*_103713_kind.alloc)._field_KeyB.alloc)._field_Ident)))) {
			_1b4bbd872_pushErr((*_self_.alloc)._field_s, (*(*_103713_kind.alloc)._field_KeyB.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*_103713_kind.alloc)._field_KeyB.alloc)._field_Ident, &__jule_any_type4)}));
			_1b4bbdbd5_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
		(*(*_103713_kind.alloc)._field_KeyB.alloc)._field_Scope=_106513_scope;
		(*(*_106413_ssc.alloc)._field_table.alloc)._field_Vars=jule::append((*(*_106413_ssc.alloc)._field_table.alloc)._field_Vars,jule::Slice<jule::Ptr<_1b4bddaa1_Var>>::make({(*_103713_kind.alloc)._field_KeyB}));
	};
	_1b4b885ea_checkIterScopeSsc(_self_, static_cast<jule::Uintptr>(_103713_kind), (*((*(_102939_it))))._field_Scope, &(_106513_scope), _106413_ssc);
	(*_103713_kind.alloc)._field_Scope=_106513_scope;
}



inline void _1b4b89e8c_checkIter(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4b144dd_Iter> _108933_it) {
	if (_1b4b14851_IsInf(_108933_it.ptr())) {
		if ((*_108933_it.alloc)._field_Comptime) {
			_1b4bbd872_pushErr((*(_self_))._field_s.ptr(), (*_108933_it.alloc)._field_Token, jule::Str::lit("comptime iterations can only be range iteration", 47), jule::Slice<jule::Any>());
			return;;
		};
		_1b4b89255_checkInfIter(_self_, &(_108933_it));
		return;;
	};
	{
		auto &_match_expr{ (*(_108933_it))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1aaeba727:;
			{
				if ((*_108933_it.alloc)._field_Comptime) {
					_1b4bbd872_pushErr((*_self_.alloc)._field_s, (*_108933_it.alloc)._field_Token, jule::Str::lit("comptime iterations can only be range iteration", 47), jule::Slice<jule::Any>());
					return;;
				};
				_1b4b8950d_checkWhileIter(_self_, &(_108933_it));
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1aaebbea9:;
			{
				_1b4b89bd4_checkRangeIter(_self_, &(_108933_it));
			}
		}
		else {
			_case_begin_1aaebb9ae:;
			{
				jule::outln(jule::Str::lit("error <unimplemented iteration kind>", 36));
			}
		}
		_match_end_1aaebb959:;
	};
}



inline jule::Bool _1b4b8a2cd_checkValidContLabel(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Uintptr _111339_it) {
	jule::Ptr<_1b4b80cb8_scopeChecker> _111413_scope = _self_;;
	_julec_label_1aaebde9a:;
	if (((*(_111413_scope))._field_it == _111339_it)) {
		return true;;
	};
	if (((*_111413_scope.alloc)._field_parent != nullptr)) {
		_111413_scope=(*_111413_scope.alloc)._field_parent;
		goto _julec_label_1aaebde9a;
	};
	return false;;
}



inline jule::Bool _1b4b8a61e_checkValidBreakLabel(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Uintptr _112940_ptr) {
	jule::Ptr<_1b4b80cb8_scopeChecker> _113013_scope = _self_;;
	_julec_label_1aaec1046:;
	if (((*(_113013_scope))._field_it == _112940_ptr)) {
		return true;;
	};
	if (((*_113013_scope.alloc)._field_cse != 0LLU)) {
		jule::Uintptr _113813_mtch = static_cast<jule::Uintptr>((*(((_1b4b7d546_Case*)((*_113013_scope.alloc)._field_cse))))._field_Owner);;
		if ((_113813_mtch == _112940_ptr)) {
			return true;;
		};
	};
	if (((*_113013_scope.alloc)._field_parent != nullptr)) {
		_113013_scope=(*_113013_scope.alloc)._field_parent;
		goto _julec_label_1aaec1046;
	};
	return false;;
}



inline jule::Ptr<_1b4b7a9c7_ContSt> _1b4b8a960_checkContValidScope(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4b15ec3_ContSt> _115239_c) {
	if (_1b4b83b23_isDeferred(_self_)) {
		_1b4bbd872_pushErr((*_self_.alloc)._field_s.ptr(), (*(_115239_c))._field_Token, jule::Str::lit("continue keyword is cannot used at out of iteration", 51), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*_115239_c.alloc)._field_Label != nullptr)) {
		return jule::new_ptr<_1b4b7a9c7_ContSt>();;
	};
	jule::Ptr<_1b4b80cb8_scopeChecker> _116213_scope = _self_;;
	_julec_label_1aaec3e7d:;
	{
		
		if (((((*_116213_scope.alloc)._field_it == 0LLU) && ((*_116213_scope.alloc)._field_parent != nullptr)) && ((*_116213_scope.alloc)._field_owner == nullptr))) {
			_case_begin_1aaec5c71:;
			{
				_116213_scope=(*_116213_scope.alloc)._field_parent;
				goto _julec_label_1aaec3e7d;
			}
		}
		else if (((*_116213_scope.alloc)._field_it != 0LLU)) {
			_case_begin_1aaec5d09:;
			{
				return jule::new_ptr<_1b4b7a9c7_ContSt>(_1b4b7a9c7_ContSt{._field_It=(*_116213_scope.alloc)._field_it});;
			}
		}
		_match_end_1aaec5bd8:;
	};
	_1b4bbd872_pushErr((*_self_.alloc)._field_s, (*_115239_c.alloc)._field_Token, jule::Str::lit("continue keyword is cannot used at out of iteration", 51), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1b4b8ac18_checkCont(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4b15ec3_ContSt> _117629_c) {
	jule::Ptr<_1b4b7a9c7_ContSt> _117713_cont = _1b4b8a960_checkContValidScope(_self_, _117629_c);;
	if ((_117713_cont == nullptr)) {
		return;;
	};
	if (((*(_117629_c))._field_Label != nullptr)) {
		jule::Ptr<_1b4b7e745_scopeLabel> _118317_label = _1b4b75d24_findLabelParent(&((*(*_117629_c.alloc)._field_Label.alloc)._field_Kind), (*_self_.alloc)._field_parent);;
		if ((_118317_label == nullptr)) {
			_1b4bbd872_pushErr((*_self_.alloc)._field_s.ptr(), (*_117629_c.alloc)._field_Label, jule::Str::lit("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any((*(*_117629_c.alloc)._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
			return;;
		};
		(*(_118317_label))._field_used=true;
		if ((((*(_118317_label))._field_pos + 1LL) >= (*((*((*(_118317_label))._field_scope))._field_scope))._field_Stmts.len())) {
			_1b4bbd872_pushErr((*_self_.alloc)._field_s, (*_117629_c.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(*_117629_c.alloc)._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
			return;;
		};
		jule::I64 _119613_i = ((*(_118317_label))._field_pos + 1LL);;
		if ((_119613_i >= (*(*(*(_118317_label))._field_scope.alloc)._field_scope.alloc)._field_Stmts.len())) {
			_1b4bbd872_pushErr((*_self_.alloc)._field_s, (*_117629_c.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>());
		} else {
			jule::Any _120021_st = (*(*(*(_118317_label))._field_scope.alloc)._field_scope.alloc)._field_Stmts[_119613_i];;
			{
				auto &_match_expr{ _120021_st };
				
				if (_match_expr.type == &__jule_any_type35) {
					_case_begin_1aaed63d0:;
					{
						(*(_117713_cont))._field_It=static_cast<jule::Uintptr>(_120021_st.unsafe_cast_ptr<_1b4b79740_InfIter>());
					}
				}
				else if (_match_expr.type == &__jule_any_type39) {
					_case_begin_1aaed65ab:;
					{
						(*(_117713_cont))._field_It=static_cast<jule::Uintptr>(_120021_st.unsafe_cast_ptr<_1b4b7a642_RangeIter>());
					}
				}
				else if (_match_expr.type == &__jule_any_type37) {
					_case_begin_1aaed6622:;
					{
						(*(_117713_cont))._field_It=static_cast<jule::Uintptr>(_120021_st.unsafe_cast_ptr<_1b4b79be6_WhileIter>());
					}
				}
				else {
					_case_begin_1aaed6545:;
					{
						_1b4bbd872_pushErr((*_self_.alloc)._field_s, (*_117629_c.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(*_117629_c.alloc)._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
					}
				}
				_match_end_1aaed64e0:;
			};
		};
	};
	if (((*(_117713_cont))._field_It != 0LLU)) {
		if ((!(_1b4b8a2cd_checkValidContLabel(_self_, (*(_117713_cont))._field_It)))) {
			_1b4bbd872_pushErr((*_self_.alloc)._field_s, (*_117629_c.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(*_117629_c.alloc)._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
		};
	};
	(*(*_self_.alloc)._field_scope.alloc)._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_117713_cont, &__jule_any_type40)}));
}



inline void _1b4b8aec1_checkLabel(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4b082a1_LabelSt> _122334_l) {
	if ((_1b4b84a7a_findLabel(_self_.ptr(), &((*(_122334_l))._field_Ident)) != nullptr)) {
		_1b4bbd872_pushErr((*_self_.alloc)._field_s.ptr(), (*_122334_l.alloc)._field_Token, jule::Str::lit("label is already exist in this identifier: @", 44), jule::Slice<jule::Any>::make({jule::Any((*_122334_l.alloc)._field_Ident, &__jule_any_type4)}));
		return;;
	};
	jule::Ptr<_1b4b7b19d_Label> _122913_label = jule::new_ptr<_1b4b7b19d_Label>(_1b4b7b19d_Label{._field_Ident=(*_122334_l.alloc)._field_Ident});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_122913_label, &__jule_any_type20)}));
	(*((*_self_.alloc)._field_labels))=jule::append((*(*_self_.alloc)._field_labels.alloc),jule::Slice<jule::Ptr<_1b4b7e745_scopeLabel>>::make({jule::new_ptr<_1b4b7e745_scopeLabel>(_1b4b7e745_scopeLabel{._field_token=(*_122334_l.alloc)._field_Token, ._field_label=_122913_label, ._field_pos=((*(*_self_.alloc)._field_scope.alloc)._field_Stmts.len() - 1LL), ._field_scope=_self_, })}));
}



inline void _1b4b8b279_pushGoto(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4b0867a_GotoSt> _124232_gt) {
	jule::Ptr<_1b4b7b577_GotoSt> _124313_st = jule::new_ptr<_1b4b7b577_GotoSt>(_1b4b7b577_GotoSt{._field_Ident=(*((*(_124232_gt))._field_Label))._field_Kind, });;
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_124313_st, &__jule_any_type41)}));
	(*((*_self_.alloc)._field_gotos))=jule::append((*(*_self_.alloc)._field_gotos.alloc),jule::Slice<jule::Ptr<_1b4b7ecc8_scopeGoto>>::make({jule::new_ptr<_1b4b7ecc8_scopeGoto>(_1b4b7ecc8_scopeGoto{._field_st=_124313_st, ._field_gt=_124232_gt, ._field_scope=_self_, ._field_pos=((*(*_self_.alloc)._field_scope.alloc)._field_Stmts.len() - 1LL)})}));
}



inline void _1b4b8b532_checkPostfix(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4b0966a_AssignSt> _125636_a) {
	if (((*(_125636_a))._field_Left.len() > 1LL)) {
		_1b4bbd872_pushErr((*(_self_))._field_s.ptr(), (*_125636_a.alloc)._field_Setter, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1b4b00001_Expr> _126213_expr = (*((*_125636_a.alloc)._field_Left[0LL]))._field_Expr;;
	jule::Ptr<_1b4c466a8_Data> _126313_d = _1b4c6b49c_evalExpr(_1b4bc5d1e_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1b4c9c500_Lookup_mptr_data0)), _126213_expr);;
	if ((_126313_d == nullptr)) {
		return;;
	};
	_1b4b779c4_checkAssign(&((*_self_.alloc)._field_s), &(_126313_d), nullptr, (*_125636_a.alloc)._field_Setter);
	if ((_1b4c8057c_Ptr((*(_126313_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1b4c8c7cb_Ptr> _127117_ptr = _1b4c8057c_Ptr((*(_126313_d))._field_Kind);;
		if (_1b4c8d315_IsUnsafe(_127117_ptr.ptr())) {
			_1b4bbd872_pushErr((*_self_.alloc)._field_s, (*_125636_a.alloc)._field_Setter, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*_125636_a.alloc)._field_Setter))._field_Kind, &__jule_any_type4),jule::Any(_1b4c7ccc7_Str((*(_126313_d))._field_Kind), &__jule_any_type4)}));
			return;;
		};
	} else {
		if (((_1b4c80060_Prim((*(_126313_d))._field_Kind.ptr()) == nullptr) || (!(_1b2752e64_IsNum((*(_1b4c80060_Prim((*(_126313_d))._field_Kind)))._field_Kind))))) {
			_1b4bbd872_pushErr((*_self_.alloc)._field_s, (*_125636_a.alloc)._field_Setter, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*_125636_a.alloc)._field_Setter))._field_Kind, &__jule_any_type4),jule::Any(_1b4c7ccc7_Str((*(_126313_d))._field_Kind), &__jule_any_type4)}));
			return;;
		};
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(jule::new_ptr<_1b4b7b951_Postfix>(_1b4b7b951_Postfix{._field_Expr=(*(_126313_d))._field_Model, ._field_Op=(*((*_125636_a.alloc)._field_Setter))._field_Kind}), &__jule_any_type42)}));
}



inline jule::Bool _1b4b8b873_isNewAssignIdent(_1b4b80cb8_scopeChecker* _self_, jule::Str _128935_ident) {
	if ((_1b4ad80e9_IsIgnoreIdent(_128935_ident) || (_128935_ident).empty())) {
		return false;;
	};
	return (_1b4c443a9_defByIdent((*(_self_))._field_table.ptr(), &(_128935_ident), false) == nullptr);;
}



inline void _1b4b8bb2b_removeInteriorMutRisk(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4c466a8_Data>* _130246_d) {
	jule::Ptr<_1b4b24641_StructIns> _13039_s = _1b4c815d3_Struct((*((*(_130246_d))))._field_Kind.ptr());;
	if ((_13039_s == nullptr)) {
		return;;
	};
	jule::Ptr<_1b4b80cb8_scopeChecker> _13079_root = _1b4b843e8_getHardRoot(_self_);;
	if (((*((*(_13079_root))._field_owner))._field_Owner != _13039_s)) {
		return;;
	};
	(*((*(_130246_d))))._field_Mutable=true;
}



inline jule::Bool _1b4b8c0d2_checkStructureAssignOp(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4b24641_StructIns>* _131647_s, jule::Ptr<_1b4b0966a_AssignSt>* _131667_a, jule::Ptr<_1b4c466a8_Data>* _131686_r) {
	jule::Ptr<_1b4b39865_FnIns> _131917_overload = nullptr;;
	{
		auto &_match_expr{ (*((*((*(_131667_a))))._field_Setter))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1ab0028a2:;
			{
				_131917_overload=(*((*(_131647_s))))._field_Operators._field_AddAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(41LLU)) {
			_case_begin_1ab002561:;
			{
				_131917_overload=(*((*(_131647_s))))._field_Operators._field_SubAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1ab0025c7:;
			{
				_131917_overload=(*((*(_131647_s))))._field_Operators._field_DivAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(42LLU)) {
			_case_begin_1ab00263d:;
			{
				_131917_overload=(*((*(_131647_s))))._field_Operators._field_MulAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1ab0026a4:;
			{
				_131917_overload=(*((*(_131647_s))))._field_Operators._field_ModAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(45LLU)) {
			_case_begin_1ab00271a:;
			{
				_131917_overload=(*((*(_131647_s))))._field_Operators._field_ShlAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(46LLU)) {
			_case_begin_1ab002781:;
			{
				_131917_overload=(*((*(_131647_s))))._field_Operators._field_ShrAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(49LLU)) {
			_case_begin_1ab003e03:;
			{
				_131917_overload=(*((*(_131647_s))))._field_Operators._field_BitOrAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(48LLU)) {
			_case_begin_1ab003e69:;
			{
				_131917_overload=(*((*(_131647_s))))._field_Operators._field_BitAndAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(47LLU)) {
			_case_begin_1ab003ed0:;
			{
				_131917_overload=(*((*(_131647_s))))._field_Operators._field_BitXorAssign;
			}
		}
		else {
			_case_begin_1ab001d35:;
			{
				_1b4bbd872_pushErr((*(_self_))._field_s.ptr(), (*((*(_131667_a))))._field_Setter, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_131667_a))))._field_Setter))._field_Kind, &__jule_any_type4),jule::Any(_1b4b249b5_Str((*(_131647_s)).ptr()), &__jule_any_type4)}));
				return false;;
			}
		}
		_match_end_1ab0024ea:;
	};
	if ((_131917_overload == nullptr)) {
		_1b4bbd872_pushErr((*(_self_))._field_s.ptr(), (*((*(_131667_a))))._field_Setter, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_131667_a))))._field_Setter))._field_Kind, &__jule_any_type4),jule::Any(_1b4b249b5_Str((*(_131647_s)).ptr()), &__jule_any_type4)}));
		return false;;
	};
	jule::Ptr<_1b4b387dc_ParamIns> _135113_p = (*(_131917_overload))._field_Params[1LL];;
	return _1b4bc6380_checkAssignType((*_self_.alloc)._field_s, (*((*(_135113_p))._field_Decl))._field_Reference, &((*_135113_p.alloc)._field_Kind), _131686_r, (*((*(_131667_a))))._field_Setter);;
}



inline void _1b4b8c38a_checkSingleAssign(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4b0966a_AssignSt>* _135542_a) {
	jule::Ptr<_1b4c466a8_Data> _135617_l = nullptr;;
	if ((!(_1b4ad80e9_IsIgnoreIdent((*((*((*(_135542_a))))._field_Left[0LL]))._field_Ident)))) {
		jule::Ptr<_1b4b00001_Expr> _135917_expr = (*((*((*(_135542_a))))._field_Left[0LL]))._field_Expr;;
		_135617_l=_1b4c6b49c_evalExpr(_1b4bc5d1e_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1b4c9c500_Lookup_mptr_data0)), _135917_expr);
		if ((_135617_l == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1b4c483d0_Eval> _136617_eval = nullptr;;
	if ((_135617_l != nullptr)) {
		_136617_eval=_1b4bc59cd_evalp((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1b4c9c500_Lookup_mptr_data0), (*(_135617_l))._field_Kind);
	} else {
		_136617_eval=_1b4bc5d1e_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1b4c9c500_Lookup_mptr_data0));
	};
	(*(_136617_eval))._field_unsafety=_1b4b83172_isUnsafe(_self_);
	jule::Ptr<_1b4c466a8_Data> _137313_r = _1b4c6b49c_evalExpr(_136617_eval, (*((*(_135542_a))))._field_Right);;
	if ((_137313_r == nullptr)) {
		return;;
	};
	_1b4b8bb2b_removeInteriorMutRisk(_self_, &(_137313_r));
	if ((_135617_l == nullptr)) {
		if (_1b4c7dc73_Void((*(_137313_r))._field_Kind.ptr())) {
			_1b4bbd872_pushErr((*_self_.alloc)._field_s, (*((*((*(_135542_a))))._field_Right))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		};
		(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_137313_r, &__jule_any_type23)}));
		return;;
	};
	if ((!(_1b4b779c4_checkAssign(&((*_self_.alloc)._field_s), &(_135617_l), _137313_r, (*((*(_135542_a))))._field_Setter)))) {
		return;;
	};
	if ((_1b4c81d86_Tup((*(_137313_r))._field_Kind) != nullptr)) {
		_1b4bbd872_pushErr((*_self_.alloc)._field_s, (*((*(_135542_a))))._field_Setter, jule::Str::lit("missing identifier(s) for multiple assignment", 45), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1b4b28546_OperandExprModel> _139713_lm = jule::new_ptr<_1b4b28546_OperandExprModel>(_1b4b28546_OperandExprModel{._field_Kind=(*(_135617_l))._field_Kind, ._field_Model=(*(_135617_l))._field_Model});;
	jule::Ptr<_1b4b28546_OperandExprModel> _140113_rm = jule::new_ptr<_1b4b28546_OperandExprModel>(_1b4b28546_OperandExprModel{._field_Kind=(*(_137313_r))._field_Kind, ._field_Model=(*(_137313_r))._field_Model});;
	(*(*_self_.alloc)._field_scope.alloc)._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(jule::new_ptr<_1b4b7be07_Assign>(_1b4b7be07_Assign{._field_Left=_139713_lm, ._field_Right=_140113_rm, ._field_Op=(*((*(_135542_a))))._field_Setter}), &__jule_any_type43)}));
	if (((*((*((*(_135542_a))))._field_Setter))._field_Id == static_cast<jule::U64>(71LLU))) {
		_1b4c30120_assignTypeChecker _140817_checker = _1b4c30120_assignTypeChecker{._field_s=(*_self_.alloc)._field_s, ._field_dest=(*(_135617_l))._field_Kind, ._field_d=_137313_r, ._field_errorToken=(*((*(_135542_a))))._field_Setter};;
		if (_1b4c310dd_check(&_140817_checker)) {
			(*(_140113_rm))._field_Model=(*(_137313_r))._field_Model;
			(*(_139713_lm))._field_Model=(*(_135617_l))._field_Model;
		};
		return;;
	};
	jule::Ptr<_1b4b24641_StructIns> _142013_strct = _1b4c815d3_Struct((*(_135617_l))._field_Kind);;
	if ((_142013_strct != nullptr)) {
		_1b4b8c0d2_checkStructureAssignOp(_self_, &(_142013_strct), _135542_a, &(_137313_r));
		return;;
	};
	jule::U64 _14259_id = (*(*((*(_135542_a))))._field_Setter.alloc)._field_Id;;
	(*(*((*(_135542_a))))._field_Setter.alloc)._field_Id=_1b4b931c6_removeEqFromOp((*(*((*(_135542_a))))._field_Setter.alloc)._field_Id);
	_1b4c6d900_binaryEval _142713_solver = static__1b4c6e329_new(_136617_eval, (*((*(_135542_a))))._field_Setter);;
	({
		jule::Ptr<_1b4c466a8_Data> ___jule_assign_arg = _135617_l;
		jule::Ptr<_1b4c466a8_Data> _1___jule_assign_arg = _137313_r;
		_142713_solver._field_l = ___jule_assign_arg;
		_142713_solver._field_r = _1___jule_assign_arg;
	});
	_1b4c73471_evalOp(&_142713_solver);
	(*(*((*(_135542_a))))._field_Setter.alloc)._field_Id=_14259_id;
}



inline void _1b4b8c91d_processEndPartOfMultiAssign(_1b4b80cb8_scopeChecker* _self_, jule::Ptr<_1b4b7c3ad_MultiAssign>* _143351_st, jule::Ptr<_1b4b0966a_AssignSt>* _143414_a, jule::Ptr<_1b4b090d7_AssignLeft>* _143433_lexpr, jule::Ptr<_1b4c466a8_Data>* _143458_l, jule::Ptr<_1b4c466a8_Data>* _143473_r) {
	if (((!((*((*(_143433_lexpr))))._field_Reference)) && _1b4ad80e9_IsIgnoreIdent((*((*(_143433_lexpr))))._field_Ident))) {
		if (_1b4c7dc73_Void((*((*(_143473_r))))._field_Kind.ptr())) {
			_1b4bbd872_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_143414_a))))._field_Right))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		};
		{ jule::Slice<jule::Ptr<_1b4c466a8_Data>> &__jule_push_dest = (*((*(_143351_st))))._field_Left; __jule_push_dest.push(nullptr); };
		return;;
	};
	if (((*((*(_143414_a))))._field_Declarative && ((*((*(_143433_lexpr))))._field_Reference || _1b4b8b873_isNewAssignIdent(_self_, (*((*(_143433_lexpr))))._field_Ident)))) {
		if (_1b4b85608_isDuplicatedIdent(_self_, 0LLU, &((*((*(_143433_lexpr))))._field_Ident))) {
			_1b4bbd872_pushErr((*(_self_))._field_s, (*((*(_143433_lexpr))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_143433_lexpr))))._field_Ident, &__jule_any_type4)}));
			_1b4bbdbd5_pushSuggestion((*(_self_))._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
			_1b4b83606_stop(_self_);
			return;;
		};
		if (_1b4ad80e9_IsIgnoreIdent((*((*(_143433_lexpr))))._field_Ident)) {
			_1b4bbd872_pushErr((*(_self_))._field_s, (*((*(_143433_lexpr))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1b4bddaa1_Var> _145517_v = jule::new_ptr<_1b4bddaa1_Var>(_1b4bddaa1_Var{._field_Scope=(*(_self_))._field_scope, ._field_Token=(*((*(_143433_lexpr))))._field_Token, ._field_Ident=(*((*(_143433_lexpr))))._field_Ident, ._field_Mutable=(*((*(_143433_lexpr))))._field_Mutable, ._field_Reference=(*((*(_143433_lexpr))))._field_Reference, ._field_Value=jule::new_ptr<_1b4c47830_Value>(_1b4c47830_Value{._field_Expr=(*((*(_143414_a))))._field_Right, ._field_Data=(*(_143473_r))}), });;
		_1b4bd5328_checkVarValue((*(_self_))._field_s, &(_145517_v));
		{ jule::Slice<jule::Ptr<_1b4c466a8_Data>> &__jule_push_dest = (*((*(_143351_st))))._field_Left; __jule_push_dest.push(jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=(*((*_145517_v.alloc)._field_Kind))._field_Kind, ._field_Mutable=(*_145517_v.alloc)._field_Mutable, ._field_Reference=(*_145517_v.alloc)._field_Reference, ._field_Lvalue=(!((*(_145517_v))._field_Constant)), ._field_Model=jule::Any(_145517_v, &__jule_any_type8), })); };
		{ jule::Slice<jule::Ptr<_1b4bddaa1_Var>> &__jule_push_dest = (*((*(_143351_st))))._field_Decls; __jule_push_dest.push(_145517_v); };
		(*((*(_self_))._field_table))._field_Vars=jule::append((*(*(_self_))._field_table.alloc)._field_Vars,jule::Slice<jule::Ptr<_1b4bddaa1_Var>>::make({_145517_v}));
		return;;
	};
	if (((*((*(_143433_lexpr))))._field_Mutable || (*((*(_143433_lexpr))))._field_Reference)) {
		_1b4bbd872_pushErr((*(_self_))._field_s, (*((*(_143433_lexpr))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_143433_lexpr))))._field_Ident, &__jule_any_type4)}));
		_1b4bbdbd5_pushSuggestion((*(_self_))._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if ((!(_1b4b779c4_checkAssign(&((*(_self_))._field_s), _143458_l, (*(_143473_r)), (*((*(_143433_lexpr))))._field_Token)))) {
		return;;
	};
	;
	_1b4bca719_checkValidityForInitExpr((*(_self_))._field_s, (*((*(_143458_l))))._field_Mutable, false, &((*((*(_143458_l))))._field_Kind), _143473_r, &((*((*(_143414_a))))._field_Setter));
	_1b4c30120_assignTypeChecker _149313_checker = _1b4c30120_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*((*(_143458_l))))._field_Kind, ._field_d=(*(_143473_r)), ._field_errorToken=(*((*(_143414_a))))._field_Setter};;
	_1b4c310dd_check(&_149313_checker);
	{ jule::Slice<jule::Ptr<_1b4c466a8_Data>> &__jule_push_dest = (*((*(_143351_st))))._field_Left; __jule_push_dest.push((*(_143458_l))); };
}



inline void _1b4b8cbc6_checkMultiAssign(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4b0966a_AssignSt>* _150341_a) {
	jule::Ptr<_1b4c466a8_Data> _150413_rd = _1b4c6b49c_evalExpr(_1b4bc5d1e_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1b4c9c500_Lookup_mptr_data0)), (*((*(_150341_a))))._field_Right);;
	if ((_150413_rd == nullptr)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1b4c466a8_Data>> _150813_right = _1b4b76b9e_getDatasFromTupleData(&(_150413_rd));;
	if ((_150813_right.len() == 1LL)) {
		{
			auto &_match_expr{ (*(_150813_right[0LL]))._field_Model };
			
			if (_match_expr.type == &__jule_any_type44) {
				_case_begin_1ab03058e:;
				{
					jule::Ptr<_1b4b2b3a1_IndexingExprModel> _151221_iem = (*(_150813_right[0LL]))._field_Model.unsafe_cast_ptr<_1b4b2b3a1_IndexingExprModel>();;
					if ((_1b4c81b00_Map((*((*(_151221_iem))._field_Expr))._field_Kind.ptr()) != nullptr)) {
						_150813_right=jule::Slice<jule::Ptr<_1b4c466a8_Data>>::make({jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=(*(_1b4c81b00_Map((*(*_151221_iem.alloc)._field_Expr.alloc)._field_Kind)))._field_Val, }),jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=_1b4d607e4_primBool, })});
					};
				}
			}
			_match_end_1ab0304e5:;
		};
	};
	{
		
		if (((*((*(_150341_a))))._field_Left.len() > _150813_right.len())) {
			_case_begin_1ab02eed9:;
			{
				_1b4bbd872_pushErr((*_self_.alloc)._field_s, (*((*(_150341_a))))._field_Setter, jule::Str::lit("overflow multi assignment identifers", 36), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (((*((*(_150341_a))))._field_Left.len() < _150813_right.len())) {
			_case_begin_1ab0308be:;
			{
				_1b4bbd872_pushErr((*_self_.alloc)._field_s, (*((*(_150341_a))))._field_Setter, jule::Str::lit("missing identifier(s) for multiple assignment", 45), jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1ab030649:;
	};
	jule::Ptr<_1b4b7c3ad_MultiAssign> _153113_st = jule::new_ptr<_1b4b7c3ad_MultiAssign>(_1b4b7c3ad_MultiAssign{._field_Right=(*(_150413_rd))._field_Model});;
	{
		auto expr = &((*((*(_150341_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab035572:;
		if (it != expr_end) {
			jule::I64 _153413_i = it - expr->begin();
			{
				jule::Ptr<_1b4b090d7_AssignLeft> _153517_lexpr = (*((*(_150341_a))))._field_Left[_153413_i];;
				jule::Ptr<_1b4c466a8_Data> _153621_l = nullptr;;
				if (((!(_1b4ad80e9_IsIgnoreIdent((*(_153517_lexpr))._field_Ident))) && ((!((*((*(_150341_a))))._field_Declarative)) || (!(_1b4b8b873_isNewAssignIdent(_self_, (*_153517_lexpr.alloc)._field_Ident)))))) {
					_153621_l=_1b4c6b49c_evalExpr(_1b4bc5d1e_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1b4c9c500_Lookup_mptr_data0)), (*_153517_lexpr.alloc)._field_Expr);
					if ((_153621_l == nullptr)) {
						goto _iter_next_1ab035572;
					};
				};
				jule::Ptr<_1b4c466a8_Data> _154417_r = _150813_right[_153413_i];;
				_1b4b8bb2b_removeInteriorMutRisk(_self_, &(_154417_r));
				_1b4b8c91d_processEndPartOfMultiAssign(_self_, &(_153113_st), _150341_a, &(_153517_lexpr), &(_153621_l), &(_154417_r));
			}
			_iter_next_1ab035572:;
			++it;
			_153413_i++;
			goto _iter_begin_1ab035572;
		}
		_iter_end_1ab035572:;
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_153113_st, &__jule_any_type45)}));
}



inline void _1b4b8ce7e_checkAssignSt(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4b0966a_AssignSt> _155137_a) {
	{
		
		if (_1b4ada294_IsPostfixOp((*((*(_155137_a))._field_Setter))._field_Id)) {
			_case_begin_1ab03a7db:;
			{
				_1b4b8b532_checkPostfix(_self_, _155137_a);
			}
		}
		else if (((*(_155137_a))._field_Left.len() == 1LL)) {
			_case_begin_1ab03a49a:;
			{
				_1b4b8c38a_checkSingleAssign(_self_, &(_155137_a));
			}
		}
		else {
			_case_begin_1ab03a434:;
			{
				_1b4b8cbc6_checkMultiAssign(_self_, &(_155137_a));
			}
		}
		_match_end_1ab03a335:;
	};
}



inline jule::Ptr<_1b4b7880a_Scope> _1b4b8d37a_checkCaseScope(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4b7d546_Case>* _156235_c, jule::Ptr<_1b4b10a4a_ScopeTree>* _156250_tree) {
	jule::Ptr<_1b4b80cb8_scopeChecker> _156313_ssc = _1b4b92d52_newChildChecker(_self_);;
	(*(_156313_ssc))._field_cse=static_cast<jule::Uintptr>((*(_156235_c)));
	return _1b4b869c2_checkChildSc(_self_, _156250_tree, &(_156313_ssc));;
}



inline jule::Ptr<_1b4b7d546_Case> _1b4b8d8db_checkCase(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4b7ca1d_Match> _156833_m, jule::I64 _156844_i, jule::Ptr<_1b4b179ec_Case> _156856_c, jule::Ptr<_1b4c466a8_Data> _156875_expr) {
	jule::Ptr<_1b4b7d546_Case> _156913_case = (*(_156833_m))._field_Cases[_156844_i];;
	(*(_156913_case))._field_Exprs=jule::Slice<jule::Ptr<_1b4c466a8_Data>>::alloc(0LL, (*(_156856_c))._field_Exprs.len());
	jule::Bool _157113_constMatched = false;;
	jule::Ptr<_1b4c483d0_Eval> _157213_eval = _1b4bc5d1e_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1b4c9c500_Lookup_mptr_data0));;
	{
		auto expr = &((*_156856_c.alloc)._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab041061:;
		if (it != expr_end) {
			jule::Ptr<_1b4b00001_Expr> _157321_e = *it;
			{
				jule::Ptr<_1b4c466a8_Data> _157417_d = _1b4c6582b_evalExprKind(_157213_eval, (*(_157321_e))._field_Kind);;
				if ((_157417_d == nullptr)) {
					goto _iter_next_1ab041061;
				};
				if ((*_156833_m.alloc)._field_TypeMatch) {
					(*_156913_case.alloc)._field_Exprs=jule::append((*_156913_case.alloc)._field_Exprs,jule::Slice<jule::Ptr<_1b4c466a8_Data>>::make({_157417_d}));
					if ((_1b4b768d5_countMatchType(&(_156833_m), &((*(_157417_d))._field_Kind)) > 1LL)) {
						_1b4bbd872_pushErr((*_self_.alloc)._field_s, (*_157321_e.alloc)._field_Token, jule::Str::lit("duplicated pattern: type @ is already matched", 45), jule::Slice<jule::Any>::make({jule::Any(_1b4c7ccc7_Str((*(_157417_d))._field_Kind.ptr()), &__jule_any_type4)}));
					};
					if ((*_156833_m.alloc)._field_Comptime) {
						_157113_constMatched=(_157113_constMatched || _1b4c7d118_Equal((*(_156875_expr))._field_Kind, (*(_157417_d))._field_Kind));
					} else {
						if ((_1b4c80a99_TypeEnum((*(_156875_expr))._field_Kind) != nullptr)) {
							_1b4bc6cdc_checkTypeCompatibility((*_self_.alloc)._field_s, &((*_156875_expr.alloc)._field_Kind), &((*(_157417_d))._field_Kind), &((*_157321_e.alloc)._field_Token));
						} else {
							jule::Ptr<_1b4b49c3d_Trait> _159325_trt = _1b4c81869_Trait((*(_156875_expr))._field_Kind);;
							if ((_159325_trt != nullptr)) {
								_1b4bc6cdc_checkTypeCompatibility((*_self_.alloc)._field_s, &((*_156875_expr.alloc)._field_Kind), &((*(_157417_d))._field_Kind), &((*_157321_e.alloc)._field_Token));
							};
						};
					};
					goto _iter_next_1ab041061;
				};
				if ((*(_157417_d))._field_Decl) {
					_1b4bbd872_pushErr((*_self_.alloc)._field_s, (*_157321_e.alloc)._field_Token, jule::Str::lit("expecting expression, found type declaration", 44), jule::Slice<jule::Any>());
					_1b4bbdbd5_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("you can use type-match if you want to match types", 49), jule::Slice<jule::Any>());
					goto _iter_next_1ab041061;
				};
				if ((*_156833_m.alloc)._field_Comptime) {
					if (((!(_1b4c470b0_IsConst(_157417_d.ptr()))) && (_1b4c83926_comptimeTypeInfo((*(_157417_d))._field_Kind) == nullptr))) {
						_1b4bbd872_pushErr((*_self_.alloc)._field_s, (*_157321_e.alloc)._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
						_1b4bbdbd5_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("comptime-matching requires constant expression", 46), jule::Slice<jule::Any>());
						goto _iter_next_1ab041061;
					};
					if ((!(_157113_constMatched))) {
						if (_1b4c470b0_IsConst(_157417_d.ptr())) {
							_157113_constMatched=(_1b4c470b0_IsConst(_156875_expr.ptr()) && _1b27590ad_Eq((*(_157417_d))._field_Constant.ptr(), (*(*_156875_expr.alloc)._field_Constant.alloc)));
						} else {
							jule::Ptr<_1b4b615d4_comptimeTypeInfo> _161825_exprCti = _1b4c83926_comptimeTypeInfo((*(_156875_expr))._field_Kind);;
							_157113_constMatched=((_161825_exprCti != nullptr) && _1b4c7d118_Equal((*(_1b4c83926_comptimeTypeInfo((*(_157417_d))._field_Kind)))._field_base, (*_161825_exprCti.alloc)._field_base));
						};
					};
				};
				(*_156913_case.alloc)._field_Exprs=jule::append((*_156913_case.alloc)._field_Exprs,jule::Slice<jule::Ptr<_1b4c466a8_Data>>::make({_157417_d}));
				if ((((!((*_156833_m.alloc)._field_Comptime)) || (_1b4c83926_comptimeTypeInfo((*(_156875_expr))._field_Kind) == nullptr)) || (_1b4c83926_comptimeTypeInfo((*(_157417_d))._field_Kind) == nullptr))) {
					_1b4c30120_assignTypeChecker _162821_checker = _1b4c30120_assignTypeChecker{._field_s=(*_self_.alloc)._field_s, ._field_dest=(*_156875_expr.alloc)._field_Kind, ._field_d=_157417_d, ._field_errorToken=(*_157321_e.alloc)._field_Token};;
					_1b4c310dd_check(&_162821_checker);
				};
			}
			_iter_next_1ab041061:;
			++it;
			goto _iter_begin_1ab041061;
		}
		_iter_end_1ab041061:;
	};
	if (((!((*_156833_m.alloc)._field_Comptime)) || _157113_constMatched)) {
		(*_156913_case.alloc)._field_Scope=_1b4b8d37a_checkCaseScope(_self_, &(_156913_case), &((*_156856_c.alloc)._field_Scope));
	};
	return _156913_case;;
}



inline void _1b4b8dd09_checkCases(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4b18316_MatchCase>* _164335_m, jule::Ptr<_1b4b7ca1d_Match> _164354_rm, jule::Ptr<_1b4c466a8_Data> _164370_expr) {
	(*(_164354_rm))._field_Cases=jule::Slice<jule::Ptr<_1b4b7d546_Case>>::alloc(0LL, (*((*(_164335_m))))._field_Cases.len());
	{
		auto expr = &((*((*(_164335_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab05366c:;
		if (it != expr_end) {
			jule::I64 _164513_i = it - expr->begin();
			{
				jule::Ptr<_1b4b7d546_Case> _164617_case = jule::new_ptr<_1b4b7d546_Case>(_1b4b7d546_Case{._field_Owner=_164354_rm, });;
				if ((_164513_i > 0LL)) {
					(*((*_164354_rm.alloc)._field_Cases[(_164513_i - 1LL)]))._field_Next=_164617_case;
				};
				(*_164354_rm.alloc)._field_Cases=jule::append((*_164354_rm.alloc)._field_Cases,jule::Slice<jule::Ptr<_1b4b7d546_Case>>::make({_164617_case}));
			}
			_iter_next_1ab05366c:;
			++it;
			_164513_i++;
			goto _iter_begin_1ab05366c;
		}
		_iter_end_1ab05366c:;
	};
	if ((((*_164354_rm.alloc)._field_Default != nullptr) && ((*((*(_164335_m))))._field_Cases.len() > 0LL))) {
		(*((*_164354_rm.alloc)._field_Cases[((*_164354_rm.alloc)._field_Cases.len() - 1LL)]))._field_Next=(*_164354_rm.alloc)._field_Default;
	};
	{
		auto expr = &((*((*(_164335_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab056c47:;
		if (it != expr_end) {
			jule::I64 _165914_i = it - expr->begin();
			jule::Ptr<_1b4b179ec_Case> _165921_c = *it;
			{
				_1b4b8d8db_checkCase(_self_, _164354_rm, _165914_i, _165921_c, _164370_expr);
			}
			_iter_next_1ab056c47:;
			++it;
			_165914_i++;
			goto _iter_begin_1ab056c47;
		}
		_iter_end_1ab056c47:;
	};
}



inline jule::Ptr<_1b4b7d546_Case> _1b4b8e205_checkDefault(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4b7ca1d_Match> _166436_m, jule::Ptr<_1b4b16853_Else> _166451_d) {
	jule::Ptr<_1b4b7d546_Case> _166513_def = jule::new_ptr<_1b4b7d546_Case>(_1b4b7d546_Case{._field_Owner=_166436_m, });;
	(*(_166513_def))._field_Scope=_1b4b8d37a_checkCaseScope(_self_, &(_166513_def), &((*(_166451_d))._field_Scope));
	return _166513_def;;
}



inline void _1b4b8e568_checkComptimePanic(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4ad5712_Token> _167242_callToken, jule::Ptr<_1b4b7880a_Scope>* _167262_s) {
	if (((*((*(_167262_s))))._field_Stmts.len() != 1LL)) {
		return;;
	};
	jule::Any _16769_stmt = (*((*(_167262_s))))._field_Stmts[0LL];;
	{
		auto &_match_expr{ _16769_stmt };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1ab05a454:;
			{
				jule::Ptr<_1b4c466a8_Data> _167913_d = _16769_stmt.unsafe_cast_ptr<_1b4c466a8_Data>();;
				{
					auto &_match_expr{ (*(_167913_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type28) {
						_case_begin_1ab05b3cd:;
						{
							jule::Ptr<_1b4b30262_BuiltinPanicCallExprModel> _168221_m = (*(_167913_d))._field_Model.unsafe_cast_ptr<_1b4b30262_BuiltinPanicCallExprModel>();;
							{
								auto &_match_expr{ (*(_168221_m))._field_Expr };
								
								if (_match_expr.type == &__jule_any_type19) {
									_case_begin_1ab05c577:;
									{
										jule::Ptr<_1b2753508_Const> _168521_c = (*(_168221_m))._field_Expr.unsafe_cast_ptr<_1b2753508_Const>();;
										if ((!(_1b2757c7c_IsStr(_168521_c.ptr())))) {
											goto _match_end_1ab05c511;
										};
										if ((_167242_callToken == nullptr)) {
											jule::Ptr<_1b4b80cb8_scopeChecker> _169029_root = _1b4b843e8_getHardRoot(_self_);;
											if (((*(_169029_root))._field_calledFrom == nullptr)) {
												_167242_callToken=(*(_168221_m))._field_Token;
											} else {
												_167242_callToken=(*(_169029_root))._field_calledFrom;
											};
										};
										_1b4bbd872_pushErr((*_self_.alloc)._field_s.ptr(), _167242_callToken, jule::Str::lit("compile-time panic: @", 21), jule::Slice<jule::Any>::make({jule::Any(_1b2755681_ReadStr(_168521_c), &__jule_any_type4)}));
										_1b4b83606_stop(_self_);
									}
								}
								_match_end_1ab05c511:;
							};
						}
					}
					_match_end_1ab05b367:;
				};
			}
		}
		_match_end_1ab05a3ee:;
	};
}



inline void _1b4b8e8cb_processConstMatch(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4b7ca1d_Match>* _170442_tm, jule::Ptr<_1b4b18316_MatchCase>* _170459_m) {
	{
		auto expr = &((*((*(_170442_tm))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab05c8a7:;
		if (it != expr_end) {
			jule::I64 _170514_i = it - expr->begin();
			jule::Ptr<_1b4b7d546_Case> _170521_c = *it;
			{
				if (((*(_170521_c))._field_Scope != nullptr)) {
					jule::Ptr<_1b4ad5712_Token> _170725_token = nullptr;;
					if (((!((*((*(_170442_tm))))._field_TypeMatch)) && ((*(*_170521_c.alloc)._field_Scope.alloc)._field_Stmts.len() > 0LL))) {
						_170725_token=(*((*((*((*(_170459_m))))._field_Cases[_170514_i]))._field_Scope))._field_Stmts[0LL]._field_Token;
					};
					_1b4b8e568_checkComptimePanic(_self_, _170725_token, &((*_170521_c.alloc)._field_Scope));
					(*((*(_170442_tm))))._field_Default=_170521_c;
					(*((*(_170442_tm))))._field_Cases=nullptr;
					return;;
				};
			}
			_iter_next_1ab05c8a7:;
			++it;
			_170514_i++;
			goto _iter_begin_1ab05c8a7;
		}
		_iter_end_1ab05c8a7:;
	};
	if (((*((*(_170459_m))))._field_Default != nullptr)) {
		(*((*(_170442_tm))))._field_Cases=nullptr;
		(*((*(_170442_tm))))._field_Default=_1b4b8e205_checkDefault(_self_, (*(_170442_tm)), (*((*(_170459_m))))._field_Default);
		if (((*((*(_170442_tm))))._field_Default != nullptr)) {
			jule::Ptr<_1b4ad5712_Token> _172125_token = nullptr;;
			if ((!((*((*(_170442_tm))))._field_TypeMatch))) {
				_172125_token=(*((*(*((*(_170459_m))))._field_Default.alloc)._field_Scope))._field_Stmts[0LL]._field_Token;
			};
			_1b4b8e568_checkComptimePanic(_self_, _172125_token, &((*(*((*(_170442_tm))))._field_Default.alloc)._field_Scope));
		};
	} else {
		(*((*(_170442_tm))))._field_Cases=nullptr;
	};
}



inline void _1b4b8eb84_checkTypeMatch(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4b18316_MatchCase>* _173339_m) {
	jule::Ptr<_1b4c466a8_Data> _173413_d = _1b4c65b6c_eval1(_1b4bc5d1e_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1b4c9c500_Lookup_mptr_data0)), (*((*(_173339_m))))._field_Expr);;
	if ((_173413_d == nullptr)) {
		return;;
	};
	if ((*((*(_173339_m))))._field_Comptime) {
		jule::Ptr<_1b4b615d4_comptimeTypeInfo> _174017_cti = _1b4c83926_comptimeTypeInfo((*(_173413_d))._field_Kind.ptr());;
		if ((_174017_cti == nullptr)) {
			if ((!((*(_173413_d))._field_Decl))) {
				_1b4bbd872_pushErr((*_self_.alloc)._field_s, (*((*((*(_173339_m))))._field_Expr))._field_Token, jule::Str::lit("comptime type-match expressions can take only type declarations", 63), jule::Slice<jule::Any>());
				return;;
			};
		} else {
			(*(_173413_d))._field_Kind=(*(_174017_cti))._field_base;
		};
	} else if (((*(_173413_d))._field_Decl || (!(((((_1b4c80060_Prim((*(_173413_d))._field_Kind.ptr()) != nullptr) && _1b4c88c06_IsAny(_1b4c80060_Prim((*(_173413_d))._field_Kind).ptr())) || (_1b4c81869_Trait((*(_173413_d))._field_Kind) != nullptr)) || (_1b4c80a99_TypeEnum((*(_173413_d))._field_Kind) != nullptr)))))) {
		_1b4bbd872_pushErr((*_self_.alloc)._field_s, (*((*((*(_173339_m))))._field_Expr))._field_Token, jule::Str::lit("type-match must be have <any>, <type enum>, <trait> or <generic> typed expression", 81), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1b4b7ca1d_Match> _175413_tm = jule::new_ptr<_1b4b7ca1d_Match>(_1b4b7ca1d_Match{._field_Expr=_173413_d, ._field_TypeMatch=true, ._field_Comptime=(*((*(_173339_m))))._field_Comptime, });;
	if (((!((*(_175413_tm))._field_Comptime)) && ((*((*(_173339_m))))._field_Default != nullptr))) {
		(*_175413_tm.alloc)._field_Default=_1b4b8e205_checkDefault(_self_, _175413_tm, (*((*(_173339_m))))._field_Default);
	};
	_1b4b8dd09_checkCases(_self_, _173339_m, _175413_tm, _173413_d);
	if ((*_175413_tm.alloc)._field_Comptime) {
		_1b4b8e8cb_processConstMatch(_self_, &(_175413_tm), _173339_m);
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_175413_tm, &__jule_any_type46)}));
}



inline void _1b4b8ee3c_checkCommonMatch(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4b18316_MatchCase>* _177541_m) {
	jule::Ptr<_1b4c466a8_Data> _177617_d = nullptr;;
	if (((*((*(_177541_m))))._field_Expr == nullptr)) {
		_177617_d=jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=_1b4d607e4_primBool, ._field_Constant=static__1b2753ecb_NewBool(true)});
		(*(_177617_d))._field_Model=jule::Any((*_177617_d.alloc)._field_Constant, &__jule_any_type19);
	} else {
		_177617_d=_1b4c6b15b_evalExpr1(_1b4bc5d1e_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1b4c9c500_Lookup_mptr_data0)), (*((*(_177541_m))))._field_Expr);
		if ((_177617_d == nullptr)) {
			return;;
		};
	};
	if ((*((*(_177541_m))))._field_Comptime) {
		if ((!(_1b4b93902_canComptimeMatch(&(_177617_d))))) {
			_1b4bbd872_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_177541_m))))._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
			_1b4bbdbd5_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("comptime-matching requires constant expression", 46), jule::Slice<jule::Any>());
			return;;
		};
	} else if (_1b4c8211c_comptime((*(_177617_d))._field_Kind.ptr())) {
		_1b4bbd872_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_177541_m))))._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		_1b4bbdbd5_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("comptime-matching requires constant expression", 46), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1b4b7ca1d_Match> _180213_mc = jule::new_ptr<_1b4b7ca1d_Match>(_1b4b7ca1d_Match{._field_Expr=_177617_d, ._field_Comptime=(*((*(_177541_m))))._field_Comptime, });;
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_180213_mc, &__jule_any_type46)}));
	if (((!((*(_180213_mc))._field_Comptime)) && ((*((*(_177541_m))))._field_Default != nullptr))) {
		(*_180213_mc.alloc)._field_Default=_1b4b8e205_checkDefault(_self_, _180213_mc, (*((*(_177541_m))))._field_Default);
	};
	_1b4b8dd09_checkCases(_self_, _177541_m, _180213_mc, _177617_d);
	if ((*_180213_mc.alloc)._field_Comptime) {
		_1b4b8e8cb_processConstMatch(_self_, &(_180213_mc), _177541_m);
	};
}



inline void _1b4b901e5_checkMatch(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4b18316_MatchCase> _182534_m) {
	if ((*(_182534_m))._field_TypeMatch) {
		_1b4b8eb84_checkTypeMatch(_self_, &(_182534_m));
		return;;
	};
	_1b4b8ee3c_checkCommonMatch(_self_, &(_182534_m));
}



inline void _1b4b9049d_checkFall(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4b08977_FallSt> _183329_f) {
	if (((((*(_self_))._field_cse == 0LLU) || (((*((*_self_.alloc)._field_scope))._field_Stmts.len() + 1LL) < (*(*_self_.alloc)._field_scope.alloc)._field_Stmts.len())) || _1b4b83b23_isDeferred(_self_))) {
		_1b4bbd872_pushErr((*_self_.alloc)._field_s.ptr(), (*(_183329_f))._field_Token, jule::Str::lit("fall keyword can only useable at end of the case scopes", 55), jule::Slice<jule::Any>());
		return;;
	};
	_1b4b7d546_Case* _184113_case = ((_1b4b7d546_Case*)((*_self_.alloc)._field_cse));;
	if ((*((*(_184113_case))._field_Owner))._field_Comptime) {
		_1b4bbd872_pushErr((*_self_.alloc)._field_s, (*_183329_f.alloc)._field_Token, jule::Str::lit("the fall statement is not allowed for comptime-matching", 55), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_184113_case))._field_Next == nullptr)) {
		_1b4bbd872_pushErr((*_self_.alloc)._field_s, (*_183329_f.alloc)._field_Token, jule::Str::lit("fall cannot useable at final case", 33), jule::Slice<jule::Any>());
		_1b4bbdbd5_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("remove \"fall\" keyword", 21), jule::Slice<jule::Any>());
		return;;
	};
	(*(*_self_.alloc)._field_scope.alloc)._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(jule::new_ptr<_1b4b7dc3e_FallSt>(_1b4b7dc3e_FallSt{._field_DestCase=static_cast<jule::Uintptr>((*(_184113_case))._field_Next)}), &__jule_any_type47)}));
}



inline jule::Ptr<_1b4b7ada1_BreakSt> _1b4b907de_checkBreakWithLabel(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4b15ae9_BreakSt> _185639_b) {
	jule::Ptr<_1b4b7ada1_BreakSt> _185713_brk = _1b4b90b30_checkPlainBreak(_self_, _185639_b);;
	if ((_185713_brk == nullptr)) {
		return nullptr;;
	};
	(*(_185713_brk))._field_It=0LLU;
	(*(_185713_brk))._field_Mtch=0LLU;
	jule::Ptr<_1b4b7e745_scopeLabel> _186713_label = _1b4b75d24_findLabelParent(&((*((*(_185639_b))._field_Label))._field_Kind), (*_self_.alloc)._field_parent);;
	if ((_186713_label == nullptr)) {
		_1b4bbd872_pushErr((*_self_.alloc)._field_s.ptr(), (*_185639_b.alloc)._field_Label, jule::Str::lit("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any((*(*_185639_b.alloc)._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	(*(_186713_label))._field_used=true;
	if ((((*(_186713_label))._field_pos + 1LL) >= (*((*((*(_186713_label))._field_scope))._field_scope))._field_Stmts.len())) {
		_1b4bbd872_pushErr((*_self_.alloc)._field_s, (*_185639_b.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(*_185639_b.alloc)._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::I64 _18809_i = ((*(_186713_label))._field_pos + 1LL);;
	if ((_18809_i >= (*(*(*(_186713_label))._field_scope.alloc)._field_scope.alloc)._field_Stmts.len())) {
		_1b4bbd872_pushErr((*_self_.alloc)._field_s, (*_185639_b.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(*_185639_b.alloc)._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
	} else {
		jule::Any _188417_st = (*(*(*(_186713_label))._field_scope.alloc)._field_scope.alloc)._field_Stmts[_18809_i];;
		{
			auto &_match_expr{ _188417_st };
			
			if (_match_expr.type == &__jule_any_type35) {
				_case_begin_1ab08b73d:;
				{
					(*(_185713_brk))._field_It=static_cast<jule::Uintptr>(_188417_st.unsafe_cast_ptr<_1b4b79740_InfIter>());
				}
			}
			else if (_match_expr.type == &__jule_any_type39) {
				_case_begin_1ab08b919:;
				{
					(*(_185713_brk))._field_It=static_cast<jule::Uintptr>(_188417_st.unsafe_cast_ptr<_1b4b7a642_RangeIter>());
				}
			}
			else if (_match_expr.type == &__jule_any_type37) {
				_case_begin_1ab08b980:;
				{
					(*(_185713_brk))._field_It=static_cast<jule::Uintptr>(_188417_st.unsafe_cast_ptr<_1b4b79be6_WhileIter>());
				}
			}
			else if (_match_expr.type == &__jule_any_type46) {
				_case_begin_1ab08b9e6:;
				{
					(*(_185713_brk))._field_Mtch=static_cast<jule::Uintptr>(_188417_st.unsafe_cast_ptr<_1b4b7ca1d_Match>());
				}
			}
			else {
				_case_begin_1ab08b8a3:;
				{
					_1b4bbd872_pushErr((*_self_.alloc)._field_s, (*_185639_b.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(*_185639_b.alloc)._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
				}
			}
			_match_end_1ab08b84d:;
		};
	};
	if (((*(_185713_brk))._field_It != 0LLU)) {
		if ((!(_1b4b8a61e_checkValidBreakLabel(_self_, (*(_185713_brk))._field_It)))) {
			_1b4bbd872_pushErr((*_self_.alloc)._field_s, (*_185639_b.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(*_185639_b.alloc)._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
		};
	};
	if (((*(_185713_brk))._field_Mtch != 0LLU)) {
		if ((!(_1b4b8a61e_checkValidBreakLabel(_self_, (*(_185713_brk))._field_Mtch)))) {
			_1b4bbd872_pushErr((*_self_.alloc)._field_s, (*_185639_b.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(*_185639_b.alloc)._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
		};
	};
	return _185713_brk;;
}



inline jule::Ptr<_1b4b7ada1_BreakSt> _1b4b90b30_checkPlainBreak(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4b15ae9_BreakSt> _191435_b) {
	if (_1b4b83b23_isDeferred(_self_)) {
		_1b4bbd872_pushErr((*_self_.alloc)._field_s.ptr(), (*(_191435_b))._field_Token, jule::Str::lit("break keyword is cannot used at out of iteration and match cases", 64), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b4b80cb8_scopeChecker> _192013_scope = _self_;;
	_julec_label_1ab093b63:;
	{
		
		if ((((((*_192013_scope.alloc)._field_it == 0LLU) && ((*_192013_scope.alloc)._field_cse == 0LLU)) && ((*_192013_scope.alloc)._field_parent != nullptr)) && ((*_192013_scope.alloc)._field_owner == nullptr))) {
			_case_begin_1ab094b75:;
			{
				_192013_scope=(*_192013_scope.alloc)._field_parent;
				goto _julec_label_1ab093b63;
			}
		}
		else if (((*_192013_scope.alloc)._field_it != 0LLU)) {
			_case_begin_1ab094c0d:;
			{
				return jule::new_ptr<_1b4b7ada1_BreakSt>(_1b4b7ada1_BreakSt{._field_It=(*_192013_scope.alloc)._field_it, });;
			}
		}
		else if (((*_192013_scope.alloc)._field_cse != 0LLU)) {
			_case_begin_1ab094c74:;
			{
				return jule::new_ptr<_1b4b7ada1_BreakSt>(_1b4b7ada1_BreakSt{._field_Mtch=static_cast<jule::Uintptr>((*(((_1b4b7d546_Case*)((*_192013_scope.alloc)._field_cse))))._field_Owner)});;
			}
		}
		_match_end_1ab094a98:;
	};
	_1b4bbd872_pushErr((*_self_.alloc)._field_s, (*_191435_b.alloc)._field_Token, jule::Str::lit("break keyword is cannot used at out of iteration and match cases", 64), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1b4b90dd8_checkBreak(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4b15ae9_BreakSt> _193630_b) {
	if (((*(_193630_b))._field_Label != nullptr)) {
		jule::Ptr<_1b4b7ada1_BreakSt> _193817_brk = _1b4b907de_checkBreakWithLabel(_self_, _193630_b);;
		(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_193817_brk, &__jule_any_type48)}));
		return;;
	};
	jule::Ptr<_1b4b7ada1_BreakSt> _194313_brk = _1b4b90b30_checkPlainBreak(_self_, _193630_b);;
	(*(*_self_.alloc)._field_scope.alloc)._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_194313_brk, &__jule_any_type48)}));
}



inline void _1b4b91191_checkRet(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4b13c6d_RetSt> _194732_r) {
	if (_1b4b83b23_isDeferred(_self_)) {
		_1b4bbd872_pushErr((*_self_.alloc)._field_s.ptr(), (*(_194732_r))._field_Token, jule::Str::lit("deferred scopes are not supports return statements", 50), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1b4b7e0d5_RetSt> _195213_rt = jule::new_ptr<_1b4b7e0d5_RetSt>(_1b4b7e0d5_RetSt{._field_Func=(*(_1b4b84162_getRoot(_self_)))._field_owner, });;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_195213_rt, &__jule_any_type49)}));
	jule::Ptr<_1b4c3dccc_retTypeChecker> _195713_rtc = jule::new_ptr<_1b4c3dccc_retTypeChecker>(_1b4c3dccc_retTypeChecker{._field_sc=_self_, ._field_f=(*(_195213_rt))._field_Func, ._field_errorToken=(*_194732_r.alloc)._field_Token, });;
	jule::Bool _19629_ok = _1b4c3ec89_check(_195713_rtc.ptr(), &((*_194732_r.alloc)._field_Expr));;
	if ((!(_19629_ok))) {
		return;;
	};
	if (((*_194732_r.alloc)._field_Expr != nullptr)) {
		(*_195213_rt.alloc)._field_Expr=(*_195713_rtc.alloc)._field_model;
	};
}



inline void _1b4b91449_checkUseExpr(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4b008c5_UseExpr> _197232_ue) {
	if (((*(_self_))._field_result == nullptr)) {
		_1b4bbd872_pushErr((*_self_.alloc)._field_s.ptr(), (*(_197232_ue))._field_Token, jule::Str::lit("use expressions cannot useable out of exceptional handler scopes", 64), jule::Slice<jule::Any>());
		return;;
	};
	if (_1b4b83b23_isDeferred(_self_)) {
		_1b4bbd872_pushErr((*_self_.alloc)._field_s, (*_197232_ue.alloc)._field_Token, jule::Str::lit("use expressions cannot useable in deferred scopes", 49), jule::Slice<jule::Any>());
	};
	if ((((*_self_.alloc)._field_i + 1LL) < (*((*_self_.alloc)._field_tree))._field_Stmts.len())) {
		_1b4bbd872_pushErr((*_self_.alloc)._field_s, (*_197232_ue.alloc)._field_Token, jule::Str::lit("use expressions must be last statement of scope", 47), jule::Slice<jule::Any>());
	};
}



inline void _1b4b91702_checkNode(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Any* _198834_node) {
	{
		auto &_match_expr{ (*(_198834_node)) };
		
		if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1ab0a5812:;
			{
				_1b4b870bb_checkAnonScope(_self_, (*(_198834_node)).cast_ptr<_1b4b10a4a_ScopeTree>(&__jule_any_type50));
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1ab0a5180:;
			{
				_1b4b858b1_checkVarDecl(_self_, (*(_198834_node)).cast_ptr<_1b4b13894_VarDecl>(&__jule_any_type16));
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1ab0a54d2:;
			{
				_1b4b85e22_checkTypeAliasDecl(_self_, (*(_198834_node)).cast_ptr<_1b4b17546_TypeAliasDecl>(&__jule_any_type12));
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1ab0a5548:;
			{
				_1b4b876d7_checkExpr(_self_, (*(_198834_node)).cast_ptr<_1b4b00001_Expr>(&__jule_any_type51));
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1ab0a55ae:;
			{
				_1b4b88122_checkConditional(_self_, (*(_198834_node)).cast_ptr<_1b4b16d09_Conditional>(&__jule_any_type52));
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1ab0a5922:;
			{
				_1b4b89e8c_checkIter(_self_, (*(_198834_node)).cast_ptr<_1b4b144dd_Iter>(&__jule_any_type53));
			}
		}
		else if (_match_expr.type == &__jule_any_type54) {
			_case_begin_1ab0a5988:;
			{
				_1b4b8ac18_checkCont(_self_, (*(_198834_node)).cast_ptr<_1b4b15ec3_ContSt>(&__jule_any_type54));
			}
		}
		else if (_match_expr.type == &__jule_any_type55) {
			_case_begin_1ab0a59ee:;
			{
				_1b4b8aec1_checkLabel(_self_, (*(_198834_node)).cast_ptr<_1b4b082a1_LabelSt>(&__jule_any_type55));
			}
		}
		else if (_match_expr.type == &__jule_any_type56) {
			_case_begin_1ab0a5a65:;
			{
				_1b4b8b279_pushGoto(_self_, (*(_198834_node)).cast_ptr<_1b4b0867a_GotoSt>(&__jule_any_type56));
			}
		}
		else if (_match_expr.type == &__jule_any_type57) {
			_case_begin_1ab0a5acb:;
			{
				_1b4b8ce7e_checkAssignSt(_self_, (*(_198834_node)).cast_ptr<_1b4b0966a_AssignSt>(&__jule_any_type57));
			}
		}
		else if (_match_expr.type == &__jule_any_type58) {
			_case_begin_1ab0a5b42:;
			{
				_1b4b901e5_checkMatch(_self_, (*(_198834_node)).cast_ptr<_1b4b18316_MatchCase>(&__jule_any_type58));
			}
		}
		else if (_match_expr.type == &__jule_any_type59) {
			_case_begin_1ab0a5ba8:;
			{
				_1b4b9049d_checkFall(_self_, (*(_198834_node)).cast_ptr<_1b4b08977_FallSt>(&__jule_any_type59));
			}
		}
		else if (_match_expr.type == &__jule_any_type60) {
			_case_begin_1ab0a5c1e:;
			{
				_1b4b90dd8_checkBreak(_self_, (*(_198834_node)).cast_ptr<_1b4b15ae9_BreakSt>(&__jule_any_type60));
			}
		}
		else if (_match_expr.type == &__jule_any_type61) {
			_case_begin_1ab0a5c96:;
			{
				_1b4b91191_checkRet(_self_, (*(_198834_node)).cast_ptr<_1b4b13c6d_RetSt>(&__jule_any_type61));
			}
		}
		else if (_match_expr.type == &__jule_any_type62) {
			_case_begin_1ab0a5d1d:;
			{
				_1b4b91449_checkUseExpr(_self_, (*(_198834_node)).cast_ptr<_1b4b008c5_UseExpr>(&__jule_any_type62));
			}
		}
		else {
			_case_begin_1ab0a534a:;
			{
				jule::outln(jule::Str::lit("error <unimplemented scope node>", 32));
			}
		}
		_match_end_1ab0a52e5:;
	};
}



inline void _1b4b91900_checkResult(jule::Ptr<_1b4b80cb8_scopeChecker> _self_) {
	_1b4b103da_Stmt _202613_stmt = (*((*(_self_))._field_tree))._field_Stmts[((*(*_self_.alloc)._field_tree.alloc)._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _202613_stmt._field_Data };
		
		if (_match_expr.type == &__jule_any_type62) {
			_case_begin_1ab0ae7c7:;
			{
				jule::Ptr<_1b4b008c5_UseExpr> _202917_ue = _202613_stmt._field_Data.unsafe_cast_ptr<_1b4b008c5_UseExpr>();;
				jule::Ptr<_1b4c466a8_Data> _203017_d = _1b4c6b49c_evalExpr(_1b4bc5d1e_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1b4c9c500_Lookup_mptr_data0)), (*(_202917_ue))._field_Expr);;
				if ((_203017_d == nullptr)) {
					return;;
				};
				(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_203017_d, &__jule_any_type23)}));
				jule::Ptr<_1b4c3dccc_retTypeChecker> _203517_rtc = jule::new_ptr<_1b4c3dccc_retTypeChecker>(_1b4c3dccc_retTypeChecker{._field_sc=_self_, ._field_types=_1b4b3aa64_Types((*_self_.alloc)._field_result.ptr()), ._field_errorToken=(*((*_202917_ue.alloc)._field_Expr))._field_Token, });;
				_1b4c3ec89_check(_203517_rtc.ptr(), &((*_202917_ue.alloc)._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1ab0b0399:;
			{
				jule::Ptr<_1b4b00001_Expr> _204217_expr = _202613_stmt._field_Data.unsafe_cast_ptr<_1b4b00001_Expr>();;
				jule::Ptr<_1b4c466a8_Data> _204317_d = _1b4c6b49c_evalExpr(_1b4bc5d1e_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1b4c9c500_Lookup_mptr_data0)), _204217_expr);;
				if ((_204317_d == nullptr)) {
					return;;
				};
				{
					auto &_match_expr{ (*(_204317_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type22) {
						_case_begin_1ab0b5965:;
						{
							jule::Ptr<_1b4b3231e_BuiltinErrorCallExprModel> _204921_m = (*(_204317_d))._field_Model.unsafe_cast_ptr<_1b4b3231e_BuiltinErrorCallExprModel>();;
							_1b4b8742e_processErrorCall(_self_, &(_204921_m), (*(_204217_expr))._field_Token);
							(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_204317_d, &__jule_any_type23)}));
						}
					}
					else {
						_case_begin_1ab0b5e71:;
						{
							return;;
						}
					}
					_match_end_1ab0b5e1b:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type56 || _match_expr.type == &__jule_any_type60 || _match_expr.type == &__jule_any_type54 || _match_expr.type == &__jule_any_type61) {
			_case_begin_1ab0aea5d:;
			{
				_1b4b91702_checkNode(_self_, &(_202613_stmt._field_Data));
			}
		}
		else {
			_case_begin_1ab0ae9e7:;
			{
				_1b4b91702_checkNode(_self_, &(_202613_stmt._field_Data));
				return;;
			}
		}
		_match_end_1ab0ae992:;
	};
	(*_self_.alloc)._field_result=nullptr;
}



inline void _1b4b91aed_checkTree(jule::Ptr<_1b4b80cb8_scopeChecker> _self_) {
	(*(_self_))._field_i=0LL;
	jule::I64 _207113_n = (*((*_self_.alloc)._field_tree))._field_Stmts.len();;
	if (((*_self_.alloc)._field_result != nullptr)) {
		(_207113_n)--;
	};
	for (; ((*_self_.alloc)._field_i < _207113_n); ((*_self_.alloc)._field_i)++) {
		{
			_1b4b103da_Stmt _207917_stmt = (*(*_self_.alloc)._field_tree.alloc)._field_Stmts[(*_self_.alloc)._field_i];;
			_1b4b91702_checkNode(_self_, &(_207917_stmt._field_Data));
			if (_1b4b8388c_stopped(_self_)) {
				return;;
			};
		}
	_iter_next_1ab0b9e31:;
	}
	_iter_end_1ab0b9e31:;;
	if ((((*_self_.alloc)._field_result != nullptr) && ((*(*_self_.alloc)._field_tree.alloc)._field_Stmts.len() != 0LL))) {
		_1b4b91900_checkResult(_self_);
	};
}



inline void _1b4b91e61_checkGoto(_1b4b80cb8_scopeChecker* _self_, jule::Ptr<_1b4b7ecc8_scopeGoto>* _209033_gt, jule::Ptr<_1b4b7e745_scopeLabel>* _209054_label) {
	jule::Ptr<_1b4b80cb8_scopeChecker> _209113_gtsc = (*((*(_209033_gt))))._field_scope;;
	while ((((*(_209113_gtsc))._field_childIndex - 1LL) > (*((*((*(_209054_label))))._field_scope))._field_childIndex)) {
		{
			_209113_gtsc=(*_209113_gtsc.alloc)._field_parent;
		}
	_iter_next_1ab0bd62c:;
	}
	_iter_end_1ab0bd62c:;;
	jule::I64 _209613_n = 0LL;;
	if (((*_209113_gtsc.alloc)._field_scope == (*(*((*(_209054_label))))._field_scope.alloc)._field_scope)) {
		if (((*((*(_209033_gt))))._field_pos > (*((*(_209054_label))))._field_pos)) {
			return;;
		};
		_209613_n=(*((*(_209033_gt))))._field_pos;
	};
	jule::I64 _210913_i = ((*((*(_209054_label))))._field_pos - 1LL);;
	if ((_209613_n == 0LL)) {
		{
			auto expr = &((*((*(*((*(_209054_label))))._field_scope.alloc)._field_scope))._field_Stmts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ab0c1c4b:;
			if (it != expr_end) {
				jule::I64 _211217_j = it - expr->begin();
				jule::Any _211220_stmt = *it;
				{
					if (_1b4b76561_stmtIsGotoScope(&(_211220_stmt), &((*_209113_gtsc.alloc)._field_scope))) {
						_209613_n=_211217_j;
						goto _iter_end_1ab0c1c4b;
					};
				}
				_iter_next_1ab0c1c4b:;
				++it;
				_211217_j++;
				goto _iter_begin_1ab0c1c4b;
			}
			_iter_end_1ab0c1c4b:;
		};
	};
	for (; (_210913_i >= _209613_n); (_210913_i)--) {
		{
			jule::Any _212217_stmt = (*(*(*((*(_209054_label))))._field_scope.alloc)._field_scope.alloc)._field_Stmts[_210913_i];;
			if (_1b4b78321_stmtIsDef(&(_212217_stmt))) {
				_1b4bbd872_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_209033_gt))))._field_gt))._field_Token, jule::Str::lit("goto @ jumps over declaration(s)", 32), jule::Slice<jule::Any>::make({jule::Any((*((*(*((*(_209033_gt))))._field_gt.alloc)._field_Label))._field_Kind, &__jule_any_type4)}));
				return;;
			};
		}
	_iter_next_1ab0c1289:;
	}
	_iter_end_1ab0c1289:;;
}



inline void _1b4b9215e_checkGotos(_1b4b80cb8_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_gotos)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab0c24bb:;
		if (it != expr_end) {
			jule::Ptr<_1b4b7ecc8_scopeGoto> _213121_gt = *it;
			{
				jule::Ptr<_1b4b7e745_scopeLabel> _213217_label = _1b4b8520c_findLabelAll(_self_, &((*((*((*(_213121_gt))._field_gt))._field_Label))._field_Kind));;
				if ((_213217_label == nullptr)) {
					_1b4bbd872_pushErr((*(_self_))._field_s.ptr(), (*(*_213121_gt.alloc)._field_gt.alloc)._field_Token, jule::Str::lit("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any((*(*(*_213121_gt.alloc)._field_gt.alloc)._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
					goto _iter_next_1ab0c24bb;
				};
				(*((*_213121_gt.alloc)._field_st))._field_Label=(*(_213217_label))._field_label;
				(*(_213217_label))._field_used=true;
				_1b4b91e61_checkGoto(_self_, &(_213121_gt), &(_213217_label));
			}
			_iter_next_1ab0c24bb:;
			++it;
			goto _iter_begin_1ab0c24bb;
		}
		_iter_end_1ab0c24bb:;
	};
}



inline void _1b4b9235c_checkLabels(_1b4b80cb8_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab0c8659:;
		if (it != expr_end) {
			jule::Ptr<_1b4b7e745_scopeLabel> _214416_l = *it;
			{
				if ((!((*(_214416_l))._field_used))) {
					_1b4bbd872_pushErr((*(_self_))._field_s.ptr(), (*_214416_l.alloc)._field_token, jule::Str::lit("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any((*((*_214416_l.alloc)._field_label))._field_Ident, &__jule_any_type4)}));
				};
			}
			_iter_next_1ab0c8659:;
			++it;
			goto _iter_begin_1ab0c8659;
		}
		_iter_end_1ab0c8659:;
	};
}



inline void _1b4b9255a_checkVars(_1b4b80cb8_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_table))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab0ca2a4:;
		if (it != expr_end) {
			jule::Ptr<_1b4bddaa1_Var> _215216_v = *it;
			{
				if (((((!((*(_215216_v))._field_Used)) && (!((*_215216_v.alloc)._field_Constant))) && (!(_1b4ad80e9_IsIgnoreIdent((*_215216_v.alloc)._field_Ident)))) && (!(_1b4ad83b3_IsAnonIdent((*_215216_v.alloc)._field_Ident))))) {
					_1b4bbd872_pushErr((*(_self_))._field_s.ptr(), (*_215216_v.alloc)._field_Token, jule::Str::lit("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any((*_215216_v.alloc)._field_Ident, &__jule_any_type4)}));
				};
			}
			_iter_next_1ab0ca2a4:;
			++it;
			goto _iter_begin_1ab0ca2a4;
		}
		_iter_end_1ab0ca2a4:;
	};
}



inline void _1b4b92758_checkAliases(_1b4b80cb8_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_table))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab0cc95a:;
		if (it != expr_end) {
			jule::Ptr<_1b4c7bb1c_TypeAlias> _216016_a = *it;
			{
				if ((((!((*(_216016_a))._field_Used)) && (!(_1b4ad80e9_IsIgnoreIdent((*_216016_a.alloc)._field_Ident)))) && (!(_1b4ad83b3_IsAnonIdent((*_216016_a.alloc)._field_Ident))))) {
					_1b4bbd872_pushErr((*(_self_))._field_s.ptr(), (*_216016_a.alloc)._field_Token, jule::Str::lit("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any((*_216016_a.alloc)._field_Ident, &__jule_any_type4)}));
				};
			}
			_iter_next_1ab0cc95a:;
			++it;
			goto _iter_begin_1ab0cc95a;
		}
		_iter_end_1ab0cc95a:;
	};
}



inline void _1b4b92abb_check(jule::Ptr<_1b4b80cb8_scopeChecker> _self_, jule::Ptr<_1b4b10a4a_ScopeTree>* _216830_tree, jule::Ptr<_1b4b7880a_Scope>* _216853_s) {
	(*((*(_216853_s))))._field_Deferred=(*((*(_216830_tree))))._field_Deferred;
	(*((*(_216853_s))))._field_Unsafety=(*((*(_216830_tree))))._field_Unsafety;
	jule::I64 _21729_errors = (*((*(_self_))._field_s))._field_errors.len();;
	(*_self_.alloc)._field_tree=(*(_216830_tree));
	(*_self_.alloc)._field_scope=(*(_216853_s));
	_1b4b91aed_checkTree(_self_);
	if ((_21729_errors == (*(*_self_.alloc)._field_s.alloc)._field_errors.len())) {
		_1b4b9255a_checkVars(_self_);
		_1b4b92758_checkAliases(_self_);
		if (_1b4b83408_isRoot(_self_)) {
			_1b4b9215e_checkGotos(_self_);
			_1b4b9235c_checkLabels(_self_);
		};
	};
}



inline jule::Ptr<_1b4b80cb8_scopeChecker> _1b4b92d52_newChildChecker(jule::Ptr<_1b4b80cb8_scopeChecker> _self_) {
	jule::Ptr<_1b4b80cb8_scopeChecker> _219213_base = _1b4b755d7_newScopeCheckerBase(&((*(_self_))._field_s), nullptr);;
	(*(_219213_base))._field_parent=_self_;
	(*_219213_base.alloc)._field_labels=(*_self_.alloc)._field_labels;
	(*_219213_base.alloc)._field_gotos=(*_self_.alloc)._field_gotos;
	(*_219213_base.alloc)._field_childIndex=((*_self_.alloc)._field_childIndex + 1LL);
	return _219213_base;;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b80cb8_scopeChecker _Src) {
	_Stream << "scopeChecker{";
	_Stream << "calledFrom:" << _Src._field_calledFrom << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "childIndex:" << _Src._field_childIndex << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "captured:" << _Src._field_captured << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _1b4b94804_checkCdef(_1b4b943e7_directiveChecker* _self_, jule::Ptr<_1b4aea0d9_Directive>* _1629_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1ab0d56dd:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1b4b36884_Fn>()))._field_Binded) {
					goto _match_end_1ab0d591e;
				};
				goto _case_begin_1ab0d5974;
			}
		}
		else {
			_case_begin_1ab0d5974:;
			{
				_1b4bbd872_pushErr((*(_self_))._field_s.ptr(), (*((*(_1629_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_1629_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1ab0d591e:;
	};
	if (((*((*(_1629_d))))._field_Args.len() > 0LL)) {
		_1b4bbd872_pushErr((*(_self_))._field_s.ptr(), (*((*(_1629_d))))._field_Args[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1b4b94aac_checkTypedef(_1b4b943e7_directiveChecker* _self_, jule::Ptr<_1b4aea0d9_Directive>* _3232_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1ab0d8625:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1b4b218b3_Struct>()))._field_Binded) {
					goto _match_end_1ab0d8856;
				};
				goto _case_begin_1ab0d88ab;
			}
		}
		else {
			_case_begin_1ab0d88ab:;
			{
				_1b4bbd872_pushErr((*(_self_))._field_s.ptr(), (*((*(_3232_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_3232_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1ab0d8856:;
	};
	if (((*((*(_3232_d))))._field_Args.len() > 0LL)) {
		_1b4bbd872_pushErr((*(_self_))._field_s.ptr(), (*((*(_3232_d))))._field_Args[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1b4b94d65_checkNamespace(_1b4b943e7_directiveChecker* _self_, jule::Ptr<_1b4aea0d9_Directive>* _4838_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1ab0db55c:;
			{
				if ((!((*((*(_self_))._field_o.unsafe_cast_ptr<_1b4b218b3_Struct>()))._field_Binded))) {
					_1b4bbd872_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1ab0db859:;
			{
				if ((!((*((*(_self_))._field_o.unsafe_cast_ptr<_1b4b36884_Fn>()))._field_Binded))) {
					_1b4bbd872_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ab0db8c0:;
			{
				if ((!((*((*(_self_))._field_o.unsafe_cast_ptr<_1b4bddaa1_Var>()))._field_Binded))) {
					_1b4bbd872_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else {
			_case_begin_1ab0db7e3:;
			{
				_1b4bbd872_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1ab0db78d:;
	};
	if (((*((*(_4838_d))))._field_Args.len() == 0LL)) {
		_1b4bbd872_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Tag, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	} else if (((*((*(_4838_d))))._field_Args.len() > 1LL)) {
		_1b4bbd872_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Args[1LL], jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
	};
	jule::Ptr<_1b4ad5712_Token> _739_arg = (*((*(_4838_d))))._field_Args[0LL];;
	if (((*(_739_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_1b4bbd872_pushErr((*(_self_))._field_s.ptr(), _739_arg, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if (((*_739_arg.alloc)._field_Kind[0LL] != '\"')) {
		_1b4bbd872_pushErr((*(_self_))._field_s, _739_arg, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_4838_d))))._field_Args[0LL]))._field_Kind=(*_739_arg.alloc)._field_Kind.slice(1LL, ((*_739_arg.alloc)._field_Kind.len() - 1LL));
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1ab0e7337:;
			{
				if ((_1b4c74dac_findDirective(&((*((*(_self_))._field_d))), jule::Str::lit("typedef", 7)) == nullptr)) {
					jule::Ptr<_1b4aea0d9_Directive> _9021_typedef = jule::new_ptr<_1b4aea0d9_Directive>(_1b4aea0d9_Directive{._field_Tag=(*((*(_4838_d))))._field_Tag, });;
					(*((*(_9021_typedef))._field_Tag))._field_Kind=jule::Str::lit("typedef", 7);
					(*(*(_self_))._field_d.alloc)=jule::append((*(*(_self_))._field_d.alloc),jule::Slice<jule::Ptr<_1b4aea0d9_Directive>>::make({_9021_typedef}));
				};
			}
		}
		_match_end_1ab0e72c1:;
	};
}



inline void _1b4b9511d_checkDeprecated(_1b4b943e7_directiveChecker* _self_, jule::Ptr<_1b4aea0d9_Directive>* _9939_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1ab0e94b0:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1b4b218b3_Struct>()))._field_Binded) {
					_1b4bbd872_pushErr((*(_self_))._field_s.ptr(), (*((*(_9939_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9939_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1ab0e9746:;
			{
				jule::Ptr<_1b4b36884_Fn> _10617_f = (*(_self_))._field_o.unsafe_cast_ptr<_1b4b36884_Fn>();;
				if ((((*(_10617_f))._field_Binded || _1b4b37324_IsEntryPoint(_10617_f)) || _1b4b375aa_IsInit(_10617_f))) {
					_1b4bbd872_pushErr((*(_self_))._field_s.ptr(), (*((*(_9939_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9939_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ab0e97ac:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1b4bddaa1_Var>()))._field_Binded) {
					_1b4bbd872_pushErr((*(_self_))._field_s.ptr(), (*((*(_9939_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9939_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else {
			_case_begin_1ab0e96d0:;
			{
				_1b4bbd872_pushErr((*(_self_))._field_s.ptr(), (*((*(_9939_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9939_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1ab0e967a:;
	};
	if (((*((*(_9939_d))))._field_Args.len() == 0LL)) {
		return;;
	};
	if (((*((*(_9939_d))))._field_Args.len() > 1LL)) {
		_1b4bbd872_pushErr((*(_self_))._field_s.ptr(), (*((*(_9939_d))))._field_Args[1LL], jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9939_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
	};
	jule::Ptr<_1b4ad5712_Token> _1259_arg = (*((*(_9939_d))))._field_Args[0LL];;
	if (((*(_1259_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_1b4bbd872_pushErr((*(_self_))._field_s, _1259_arg, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if (((*_1259_arg.alloc)._field_Kind[0LL] != '\"')) {
		_1b4bbd872_pushErr((*(_self_))._field_s, _1259_arg, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_9939_d))))._field_Args[0LL]))._field_Kind=(*_1259_arg.alloc)._field_Kind.slice(1LL, ((*_1259_arg.alloc)._field_Kind.len() - 1LL));
}



inline void _1b4b953c6_checkTest(_1b4b943e7_directiveChecker* _self_, jule::Ptr<_1b4aea0d9_Directive>* _13929_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1ab100d35:;
			{
				jule::Ptr<_1b4b36884_Fn> _14213_f = (*(_self_))._field_o.unsafe_cast_ptr<_1b4b36884_Fn>();;
				if ((((!((*(_14213_f))._field_Binded)) && (!(_1b4b375aa_IsInit(_14213_f)))) && (!(_1b4b37324_IsEntryPoint(_14213_f))))) {
					goto _match_end_1ab10581d;
				};
				if (_1b4b3708d_IsMethod(_14213_f)) {
					_1b4bbd872_pushErr((*(_self_))._field_s.ptr(), (*_14213_f.alloc)._field_Token, jule::Str::lit("you cannot declare test methods", 31), jule::Slice<jule::Any>());
					goto _match_end_1ab10581d;
				};
				goto _case_begin_1ab105873;
			}
		}
		else {
			_case_begin_1ab105873:;
			{
				_1b4bbd872_pushErr((*(_self_))._field_s.ptr(), (*((*(_13929_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_13929_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1ab10581d:;
	};
	if (((*((*(_13929_d))))._field_Args.len() > 0LL)) {
		_1b4bbd872_pushErr((*(_self_))._field_s.ptr(), (*((*(_13929_d))))._field_Args[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1b4b9567e_checkDirective(_1b4b943e7_directiveChecker* _self_, jule::Ptr<_1b4aea0d9_Directive>* _16038_d) {
	{
		auto &_match_expr{ (*((*((*(_16038_d))))._field_Tag))._field_Kind };
		
		if (_match_expr == jule::Str::lit("cdef", 4)) {
			_case_begin_1ab10a4e3:;
			{
				_1b4b94804_checkCdef(_self_, _16038_d);
			}
		}
		else if (_match_expr == jule::Str::lit("typedef", 7)) {
			_case_begin_1ab10a559:;
			{
				_1b4b94aac_checkTypedef(_self_, _16038_d);
			}
		}
		else if (_match_expr == jule::Str::lit("namespace", 9)) {
			_case_begin_1ab10a5c0:;
			{
				_1b4b94d65_checkNamespace(_self_, _16038_d);
			}
		}
		else if (_match_expr == jule::Str::lit("deprecated", 10)) {
			_case_begin_1ab10a636:;
			{
				_1b4b9511d_checkDeprecated(_self_, _16038_d);
			}
		}
		else if (_match_expr == jule::Str::lit("test", 4)) {
			_case_begin_1ab10a69c:;
			{
				_1b4b953c6_checkTest(_self_, _16038_d);
			}
		}
		else if (_match_expr == jule::Str::lit("build", 5) || _match_expr == jule::Str::lit("pass", 4)) {
			_case_begin_1ab10a713:;
			{
				_1b4bbd872_pushErr((*(_self_))._field_s.ptr(), (*((*(_16038_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_16038_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		else {
			_case_begin_1ab109e2c:;
			{
				_1b4bbd872_pushErr((*(_self_))._field_s.ptr(), (*((*(_16038_d))))._field_Tag, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_16038_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1ab10a427:;
	};
}



inline void _1b4b9587c_check(_1b4b943e7_directiveChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_d)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab10e4b4:;
		if (it != expr_end) {
			jule::Ptr<_1b4aea0d9_Directive> _18121_d = *it;
			{
				_1b4b9567e_checkDirective(_self_, &(_18121_d));
			}
			_iter_next_1ab10e4b4:;
			++it;
			goto _iter_begin_1ab10e4b4;
		}
		_iter_end_1ab10e4b4:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b943e7_directiveChecker _Src) {
	_Stream << "directiveChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "o:" << _Src._field_o;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b4b9a893_ImportInfo> _1b4b9ad7c_SelectPackage(_1b4b9a893_ImportInfo* _self_, jule::Fn<jule::Bool,jule::Ptr<_1b4b9a893_ImportInfo>> ) {
	return nullptr;;
}



inline jule::Ptr<_1b4bddaa1_Var> _1b4b9b278_FindVar(_1b4b9a893_ImportInfo* _self_, jule::Str _18926_ident, jule::Bool ) {
	if ((!(_1b4b9cdd4_isLookupable(_self_, &(_18926_ident))))) {
		return nullptr;;
	};
	return _1b4b97d79_findVarInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_18926_ident), false);;
}



inline jule::Ptr<_1b4c7bb1c_TypeAlias> _1b4b9b674_FindTypeAlias(_1b4b9a893_ImportInfo* _self_, jule::Str _20132_ident, jule::Bool ) {
	if ((!(_1b4b9cdd4_isLookupable(_self_, &(_20132_ident))))) {
		return nullptr;;
	};
	return _1b4b982ec_findTypeAliasInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_20132_ident), false);;
}



inline jule::Ptr<_1b4b218b3_Struct> _1b4b9ba70_FindStruct(_1b4b9a893_ImportInfo* _self_, jule::Str _21329_ident, jule::Bool ) {
	if ((!(_1b4b9cdd4_isLookupable(_self_, &(_21329_ident))))) {
		return nullptr;;
	};
	return _1b4b9872b_findStructInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_21329_ident), false);;
}



inline jule::Ptr<_1b4b36884_Fn> _1b4b9be6b_FindFn(_1b4b9a893_ImportInfo* _self_, jule::Str _22525_ident, jule::Bool ) {
	if ((!(_1b4b9cdd4_isLookupable(_self_, &(_22525_ident))))) {
		return nullptr;;
	};
	return _1b4b98bd2_findFnInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_22525_ident), false);;
}



inline jule::Ptr<_1b4b49c3d_Trait> _1b4b9c2ac_FindTrait(_1b4b9a893_ImportInfo* _self_, jule::Str _23628_ident) {
	if ((!(_1b4b9cdd4_isLookupable(_self_, &(_23628_ident))))) {
		return nullptr;;
	};
	return _1b4b99023_findTraitInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_23628_ident));;
}



inline jule::Ptr<_1b4b4c449_Enum> _1b4b9c5ed_FindEnum(_1b4b9a893_ImportInfo* _self_, jule::Str _24727_ident) {
	if ((!(_1b4b9cdd4_isLookupable(_self_, &(_24727_ident))))) {
		return nullptr;;
	};
	return _1b4b99397_findEnumInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_24727_ident));;
}



inline jule::Ptr<_1b4b4db54_TypeEnum> _1b4b9c93e_FindTypeEnum(_1b4b9a893_ImportInfo* _self_, jule::Str _25831_ident) {
	if ((!(_1b4b9cdd4_isLookupable(_self_, &(_25831_ident))))) {
		return nullptr;;
	};
	return _1b4b9971b_findTypeEnumInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_25831_ident));;
}



inline jule::Bool _1b4b9cdd4_isLookupable(_1b4b9a893_ImportInfo* _self_, jule::Str* _26728_ident) {
	if ((*(_self_))._field_Binded) {
		return false;;
	};
	if ((!((*(_self_))._field_ImportAll))) {
		if ((((*(_self_))._field_Alias.len() != 0LL) || _1b4b9d225_existIdent(_self_, jule::Str::lit("self", 4)))) {
			return true;;
		};
		if (((*(_self_))._field_Selected.len() > 0LL)) {
			if ((!(_1b4b9d225_existIdent(_self_, (*(_26728_ident)))))) {
				return false;;
			};
		};
	};
	return true;;
}



inline jule::Bool _1b4b9d225_existIdent(_1b4b9a893_ImportInfo* _self_, jule::Str _28725_ident) {
	{
		auto expr = &((*(_self_))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab1244c9:;
		if (it != expr_end) {
			jule::Ptr<_1b4ad5712_Token> *_28816_sident = it;
			{
				if (((*((*(_28816_sident))))._field_Kind == _28725_ident)) {
					return true;;
				};
			}
			_iter_next_1ab1244c9:;
			++it;
			goto _iter_begin_1ab1244c9;
		}
		_iter_end_1ab1244c9:;
	};
	return false;;
}



inline jule::Bool _1b4b9d4ab_isAccessibleViaSelection(_1b4b9a893_ImportInfo* _self_) {
	return (((*(_self_))._field_ImportAll || ((*(_self_))._field_Selected.len() == 0LL)) || _1b4b9d225_existIdent(_self_, jule::Str::lit("self", 4)));;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b9a893_ImportInfo _Src) {
	_Stream << "ImportInfo{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Duplicate:" << _Src._field_Duplicate << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Std:" << _Src._field_Std << ", ";
	_Stream << "ImportAll:" << _Src._field_ImportAll << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Package:" << _Src._field_Package << ", ";
	_Stream << "ModId:" << _Src._field_ModId;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b4b9a893_ImportInfo> _1b4b9dc5e_SelectPackage(_1b4b9d7b9_Package* _self_, jule::Fn<jule::Bool,jule::Ptr<_1b4b9a893_ImportInfo>> ) {
	return nullptr;;
}



inline jule::Ptr<_1b4bddaa1_Var> _1b4b9e15a_FindVar(_1b4b9d7b9_Package* _self_, jule::Str _31426_ident, jule::Bool _31438_binded) {
	return _1b4b97d79_findVarInPackage(&((*(_self_))._field_Files), &(_31426_ident), _31438_binded);;
}



inline jule::Ptr<_1b4c7bb1c_TypeAlias> _1b4b9e556_FindTypeAlias(_1b4b9d7b9_Package* _self_, jule::Str _32032_ident, jule::Bool _32044_binded) {
	return _1b4b982ec_findTypeAliasInPackage(&((*(_self_))._field_Files), &(_32032_ident), _32044_binded);;
}



inline jule::Ptr<_1b4b218b3_Struct> _1b4b9e952_FindStruct(_1b4b9d7b9_Package* _self_, jule::Str _32629_ident, jule::Bool _32641_binded) {
	return _1b4b9872b_findStructInPackage(&((*(_self_))._field_Files), &(_32629_ident), _32641_binded);;
}



inline jule::Ptr<_1b4b36884_Fn> _1b4b9ed4d_FindFn(_1b4b9d7b9_Package* _self_, jule::Str _33225_ident, jule::Bool _33237_binded) {
	return _1b4b98bd2_findFnInPackage(&((*(_self_))._field_Files), &(_33225_ident), _33237_binded);;
}



inline jule::Ptr<_1b4b49c3d_Trait> _1b4ba018e_FindTrait(_1b4b9d7b9_Package* _self_, jule::Str _33828_ident) {
	return _1b4b99023_findTraitInPackage(&((*(_self_))._field_Files), &(_33828_ident));;
}



inline jule::Ptr<_1b4b4c449_Enum> _1b4ba04d0_FindEnum(_1b4b9d7b9_Package* _self_, jule::Str _34427_ident) {
	return _1b4b99397_findEnumInPackage(&((*(_self_))._field_Files), &(_34427_ident));;
}



inline jule::Ptr<_1b4b4db54_TypeEnum> _1b4ba0821_FindTypeEnum(_1b4b9d7b9_Package* _self_, jule::Str _35031_ident) {
	return _1b4b9971b_findTypeEnumInPackage(&((*(_self_))._field_Files), &(_35031_ident));;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b9d7b9_Package _Src) {
	_Stream << "Package{";
	_Stream << "Files:" << _Src._field_Files;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b4b615d4_comptimeTypeInfo> _1b4bba572_pushComptimeTypeInfo(_1b4bba132_commonSemaMeta* _self_, jule::Ptr<_1b4c7c90e_TypeKind>* _21444_t) {
	{
		auto expr = &((*(_self_))._field_comptimeTypeInfos);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab15abb4:;
		if (it != expr_end) {
			jule::Ptr<_1b4b615d4_comptimeTypeInfo> _21521_t2 = *it;
			{
				if ((((*((*(_21521_t2))._field_base))._field_BindIdent == (*((*(_21444_t))))._field_BindIdent) && _1b4c7d118_Equal((*_21521_t2.alloc)._field_base, (*(_21444_t))))) {
					return _21521_t2;;
				};
			}
			_iter_next_1ab15abb4:;
			++it;
			goto _iter_begin_1ab15abb4;
		}
		_iter_end_1ab15abb4:;
	};
	jule::Ptr<_1b4b615d4_comptimeTypeInfo> _22013_t1 = jule::new_ptr<_1b4b615d4_comptimeTypeInfo>(_1b4b615d4_comptimeTypeInfo{._field_base=(*(_21444_t))});;
	{ jule::Slice<jule::Ptr<_1b4b615d4_comptimeTypeInfo>> &__jule_push_dest = (*(_self_))._field_comptimeTypeInfos; __jule_push_dest.push(_22013_t1); };
	return _22013_t1;;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4bba132_commonSemaMeta _Src) {
	_Stream << "commonSemaMeta{";
	_Stream << "comptimeTypeInfos:" << _Src._field_comptimeTypeInfos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b4b9a893_ImportInfo> _1b4bbb1cc_SelectPackage(_1b4bbac37_Sema* _self_, jule::Fn<jule::Bool,jule::Ptr<_1b4b9a893_ImportInfo>> _24332_selector) {
	return _1b4c41829_SelectPackage((*(_self_))._field_file.ptr(), _24332_selector);;
}



inline jule::Ptr<_1b4bddaa1_Var> _1b4bbb5c8_FindVar(_1b4bbac37_Sema* _self_, jule::Str _25326_ident, jule::Bool _25338_binded) {
	jule::Ptr<_1b4bddaa1_Var> _25513_v = _1b4b97d79_findVarInPackage(&((*(_self_))._field_files), &(_25326_ident), _25338_binded);;
	if ((_25513_v != nullptr)) {
		return _25513_v;;
	};
	if ((!(_1b4bb7d00_IsPub(_25326_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab15eb52:;
		if (it != expr_end) {
			jule::Ptr<_1b4b9a893_ImportInfo> _26621_imp = *it;
			{
				if ((!(_1b4bb8c02_impIsLookupable(&(_26621_imp), &(_25326_ident))))) {
					goto _iter_next_1ab15eb52;
				};
				_25513_v=_1b4b9b278_FindVar(_26621_imp.ptr(), _25326_ident, _25338_binded);
				if (((_25513_v != nullptr) && _1b4bbe0d1_isAccessibleDefine(_self_, (*_25513_v.alloc)._field_Public, (*_25513_v.alloc)._field_Token))) {
					return _25513_v;;
				};
			}
			_iter_next_1ab15eb52:;
			++it;
			goto _iter_begin_1ab15eb52;
		}
		_iter_end_1ab15eb52:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b4c7bb1c_TypeAlias> _1b4bbb9c4_FindTypeAlias(_1b4bbac37_Sema* _self_, jule::Str _28532_ident, jule::Bool _28544_binded) {
	jule::Ptr<_1b4c7bb1c_TypeAlias> _28713_ta = _1b4b982ec_findTypeAliasInPackage(&((*(_self_))._field_files), &(_28532_ident), _28544_binded);;
	if ((_28713_ta != nullptr)) {
		return _28713_ta;;
	};
	if ((!(_1b4bb7d00_IsPub(_28532_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab162a56:;
		if (it != expr_end) {
			jule::Ptr<_1b4b9a893_ImportInfo> _29821_imp = *it;
			{
				if ((!(_1b4bb8c02_impIsLookupable(&(_29821_imp), &(_28532_ident))))) {
					goto _iter_next_1ab162a56;
				};
				_28713_ta=_1b4b9b674_FindTypeAlias(_29821_imp.ptr(), _28532_ident, _28544_binded);
				if (((_28713_ta != nullptr) && _1b4bbe0d1_isAccessibleDefine(_self_, (*_28713_ta.alloc)._field_Public, (*_28713_ta.alloc)._field_Token))) {
					return _28713_ta;;
				};
			}
			_iter_next_1ab162a56:;
			++it;
			goto _iter_begin_1ab162a56;
		}
		_iter_end_1ab162a56:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b4b218b3_Struct> _1b4bbbdc0_FindStruct(_1b4bbac37_Sema* _self_, jule::Str _31729_ident, jule::Bool _31741_binded) {
	jule::Ptr<_1b4b218b3_Struct> _31913_s = _1b4b9872b_findStructInPackage(&((*(_self_))._field_files), &(_31729_ident), _31741_binded);;
	if ((_31913_s != nullptr)) {
		return _31913_s;;
	};
	if ((!(_1b4bb7d00_IsPub(_31729_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab16595a:;
		if (it != expr_end) {
			jule::Ptr<_1b4b9a893_ImportInfo> _33021_imp = *it;
			{
				if ((!(_1b4bb8c02_impIsLookupable(&(_33021_imp), &(_31729_ident))))) {
					goto _iter_next_1ab16595a;
				};
				_31913_s=_1b4b9ba70_FindStruct(_33021_imp.ptr(), _31729_ident, _31741_binded);
				if (((_31913_s != nullptr) && _1b4bbe0d1_isAccessibleDefine(_self_, (*_31913_s.alloc)._field_Public, (*_31913_s.alloc)._field_Token))) {
					return _31913_s;;
				};
			}
			_iter_next_1ab16595a:;
			++it;
			goto _iter_begin_1ab16595a;
		}
		_iter_end_1ab16595a:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b4b36884_Fn> _1b4bbc2bb_FindFn(_1b4bbac37_Sema* _self_, jule::Str _34825_ident, jule::Bool _34837_binded) {
	jule::Ptr<_1b4b36884_Fn> _35013_f = _1b4b98bd2_findFnInPackage(&((*(_self_))._field_files), &(_34825_ident), _34837_binded);;
	if ((_35013_f != nullptr)) {
		return _35013_f;;
	};
	if ((!(_1b4bb7d00_IsPub(_34825_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab16885e:;
		if (it != expr_end) {
			jule::Ptr<_1b4b9a893_ImportInfo> _36121_imp = *it;
			{
				if ((!(_1b4bb8c02_impIsLookupable(&(_36121_imp), &(_34825_ident))))) {
					goto _iter_next_1ab16885e;
				};
				_35013_f=_1b4b9be6b_FindFn(_36121_imp.ptr(), _34825_ident, _34837_binded);
				if (((_35013_f != nullptr) && _1b4bbe0d1_isAccessibleDefine(_self_, (*_35013_f.alloc)._field_Public, (*_35013_f.alloc)._field_Token))) {
					return _35013_f;;
				};
			}
			_iter_next_1ab16885e:;
			++it;
			goto _iter_begin_1ab16885e;
		}
		_iter_end_1ab16885e:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b4b49c3d_Trait> _1b4bbc60c_FindTrait(_1b4bbac37_Sema* _self_, jule::Str _38028_ident) {
	jule::Ptr<_1b4b49c3d_Trait> _38213_t = _1b4b99023_findTraitInPackage(&((*(_self_))._field_files), &(_38028_ident));;
	if ((_38213_t != nullptr)) {
		return _38213_t;;
	};
	if ((!(_1b4bb7d00_IsPub(_38028_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab16b521:;
		if (it != expr_end) {
			jule::Ptr<_1b4b9a893_ImportInfo> _39321_imp = *it;
			{
				if ((!(_1b4bb8c02_impIsLookupable(&(_39321_imp), &(_38028_ident))))) {
					goto _iter_next_1ab16b521;
				};
				_38213_t=_1b4b9c2ac_FindTrait(_39321_imp.ptr(), _38028_ident);
				if (((_38213_t != nullptr) && _1b4bbe0d1_isAccessibleDefine(_self_, (*_38213_t.alloc)._field_Public, (*_38213_t.alloc)._field_Token))) {
					return _38213_t;;
				};
			}
			_iter_next_1ab16b521:;
			++it;
			goto _iter_begin_1ab16b521;
		}
		_iter_end_1ab16b521:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b4b4c449_Enum> _1b4bbc94d_FindEnum(_1b4bbac37_Sema* _self_, jule::Str _41227_ident) {
	jule::Ptr<_1b4b4c449_Enum> _41413_e = _1b4b99397_findEnumInPackage(&((*(_self_))._field_files), &(_41227_ident));;
	if ((_41413_e != nullptr)) {
		return _41413_e;;
	};
	if ((!(_1b4bb7d00_IsPub(_41227_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab16e1d3:;
		if (it != expr_end) {
			jule::Ptr<_1b4b9a893_ImportInfo> _42521_imp = *it;
			{
				if ((!(_1b4bb8c02_impIsLookupable(&(_42521_imp), &(_41227_ident))))) {
					goto _iter_next_1ab16e1d3;
				};
				_41413_e=_1b4b9c5ed_FindEnum(_42521_imp.ptr(), _41227_ident);
				if (((_41413_e != nullptr) && _1b4bbe0d1_isAccessibleDefine(_self_, (*_41413_e.alloc)._field_Public, (*_41413_e.alloc)._field_Token))) {
					return _41413_e;;
				};
			}
			_iter_next_1ab16e1d3:;
			++it;
			goto _iter_begin_1ab16e1d3;
		}
		_iter_end_1ab16e1d3:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b4b4db54_TypeEnum> _1b4bbcc8e_FindTypeEnum(_1b4bbac37_Sema* _self_, jule::Str _44431_ident) {
	jule::Ptr<_1b4b4db54_TypeEnum> _44613_e = _1b4b9971b_findTypeEnumInPackage(&((*(_self_))._field_files), &(_44431_ident));;
	if ((_44613_e != nullptr)) {
		return _44613_e;;
	};
	if ((!(_1b4bb7d00_IsPub(_44431_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab171d95:;
		if (it != expr_end) {
			jule::Ptr<_1b4b9a893_ImportInfo> _45721_imp = *it;
			{
				if ((!(_1b4bb8c02_impIsLookupable(&(_45721_imp), &(_44431_ident))))) {
					goto _iter_next_1ab171d95;
				};
				_44613_e=_1b4b9c93e_FindTypeEnum(_45721_imp.ptr(), _44431_ident);
				if (((_44613_e != nullptr) && _1b4bbe0d1_isAccessibleDefine(_self_, (*_44613_e.alloc)._field_Public, (*_44613_e.alloc)._field_Token))) {
					return _44613_e;;
				};
			}
			_iter_next_1ab171d95:;
			++it;
			goto _iter_begin_1ab171d95;
		}
		_iter_end_1ab171d95:;
	};
	return nullptr;;
}



inline jule::Bool _1b4bbd19b_isFlag(_1b4bbac37_Sema* _self_, jule::I64 _47321_flags) {
	return (((*(_self_))._field_flags & _47321_flags) == _47321_flags);;
}



inline void _1b4bbd454_setCurrentFile(_1b4bbac37_Sema* _self_, jule::Ptr<_1b4c41340_SymbolTable> _47537_f) {
	(*(_self_))._field_file=_47537_f;
}



inline void _1b4bbd872_pushErr(_1b4bbac37_Sema* _self_, jule::Ptr<_1b4ad5712_Token> _47726_token, jule::Str _47741_fmt, jule::Slice<jule::Any> _47754_args) {
	{ jule::Slice<_1cb285120_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1b4bb887d_compilerErr(&(_47726_token), true, _47741_fmt, _47754_args)); };
}



inline void _1b4bbdbd5_pushSuggestion(_1b4bbac37_Sema* _self_, jule::Str _48233_fmt, jule::Slice<jule::Any> _48246_args) {
	{
		_1b4bb9e34_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _48233_fmt, _48246_args);
	};
}



inline jule::Bool _1b4bbe0d1_isAccessibleDefine(_1b4bbac37_Sema* _self_, jule::Bool _48733_public, jule::Ptr<_1b4ad5712_Token> _48747_token) {
	return ((_48733_public || ((*(_48747_token))._field_File == nullptr)) || (_1b4adb64c_Dir((*((*(_self_))._field_file))._field_File.ptr()) == _1b4adb64c_Dir((*_48747_token.alloc)._field_File.ptr())));;
}



inline jule::Bool _1b4bbe587_isDuplicatedIdent(_1b4bbac37_Sema* _self_, jule::Uintptr _49432_itself, jule::Str* _49450_ident, jule::Bool _49462_binded) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab178594:;
		if (it != expr_end) {
			jule::Ptr<_1b4c41340_SymbolTable> *_49516_f = it;
			{
				if (_1b4c44860_isDuplicatedIdent((*(_49516_f)).ptr(), _49432_itself, _49450_ident, _49462_binded)) {
					return true;;
				};
				{
					auto expr = &((*(*(_49516_f)).alloc)._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab179595:;
					if (it != expr_end) {
						jule::Ptr<_1b4b9a893_ImportInfo> *_50020_imp = it;
						{
							{
								auto expr = &((*((*(_50020_imp))))._field_Selected);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1ab179e8b:;
								if (it != expr_end) {
									jule::Ptr<_1b4ad5712_Token> *_50124_selected = it;
									{
										if (((*((*(_50124_selected))))._field_Kind == (*(_49450_ident)))) {
											return true;;
										};
									}
									_iter_next_1ab179e8b:;
									++it;
									goto _iter_begin_1ab179e8b;
								}
								_iter_end_1ab179e8b:;
							};
						}
						_iter_next_1ab179595:;
						++it;
						goto _iter_begin_1ab179595;
					}
					_iter_end_1ab179595:;
				};
			}
			_iter_next_1ab178594:;
			++it;
			goto _iter_begin_1ab178594;
		}
		_iter_end_1ab178594:;
	};
	return false;;
}



inline void _1b4bbe8ea_checkDirectives(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Slice<jule::Ptr<_1b4aea0d9_Directive>>* _51140_d, jule::Any _51166_o) {
	_1b4b943e7_directiveChecker _51213_dc = _1b4b943e7_directiveChecker{._field_s=_self_, ._field_d=((jule::Ptr<jule::Slice<jule::Ptr<_1b4aea0d9_Directive>>>)(_51140_d)), ._field_o=_51166_o};;
	_1b4b9587c_check(&_51213_dc);
}



inline jule::Bool _1b4bbeda1_checkGenericQuantity(_1b4bbac37_Sema* _self_, jule::I64 _52039_required, jule::I64 _52054_given, jule::Ptr<_1b4ad5712_Token> _52066_token) {
	jule::Bool __jule_func_result = false;
	{
		
		if (((_52039_required == 0LL) && (_52054_given > 0LL))) {
			_case_begin_1ab17c477:;
			{
				_1b4bbd872_pushErr(_self_, _52066_token, jule::Str::lit("type have not generics but instantiate like generics", 52), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if (((_52039_required > 0LL) && (_52054_given == 0LL))) {
			_case_begin_1ab17c4ee:;
			{
				_1b4bbd872_pushErr(_self_, _52066_token, jule::Str::lit("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_52039_required < _52054_given)) {
			_case_begin_1ab17c576:;
			{
				_1b4bbd872_pushErr(_self_, _52066_token, jule::Str::lit("overflow generics", 17), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_52039_required > _52054_given)) {
			_case_begin_1ab17c5ed:;
			{
				_1b4bbd872_pushErr(_self_, _52066_token, jule::Str::lit("missing generics", 16), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1ab17c3ab:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1ab17c2e0:;
	};
}



inline jule::Bool _1b4bc029c_isDuplicatedImportSelection(_1b4bbac37_Sema* _self_, jule::Uintptr _53942_itself, jule::Str* _53960_ident) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab1802e3:;
		if (it != expr_end) {
			jule::Ptr<_1b4b9a893_ImportInfo> *_54016_imp = it;
			{
				if ((static_cast<jule::Uintptr>((*(_54016_imp))) == _53942_itself)) {
					goto _iter_end_1ab1802e3;
				};
				if (_1b4b9d225_existIdent((*(_54016_imp)).ptr(), (*(_53960_ident)))) {
					return true;;
				};
			}
			_iter_next_1ab1802e3:;
			++it;
			goto _iter_begin_1ab1802e3;
		}
		_iter_end_1ab1802e3:;
	};
	return false;;
}



inline jule::Any _1b4bc0698_getImportDef(_1b4bbac37_Sema* _self_, jule::Str* _55228_ident, jule::Ptr<_1b4b9a893_ImportInfo>* _55245_imp) {
	if ((_1b4d6482b_findPackageBuiltinDef(&((*((*(_55245_imp))))._field_LinkPath), _55228_ident) != nullptr)) {
		return jule::Any(true, &__jule_any_type3);;
	};
	{
		auto expr = &((*((*((*(_55245_imp))))._field_Package))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab182449:;
		if (it != expr_end) {
			jule::Ptr<_1b4c41340_SymbolTable> _55621_f = *it;
			{
				;
				jule::Any _55917_def = _1b4c443a9_defByIdent(_55621_f.ptr(), _55228_ident, false);;
				if ((_55917_def != nullptr)) {
					return _55917_def;;
				};
			}
			_iter_next_1ab182449:;
			++it;
			goto _iter_begin_1ab182449;
		}
		_iter_end_1ab182449:;
	};
	return nullptr;;
}



inline jule::Bool _1ab1889a0_checkImportSelection(_1b4bbac37_Sema* _self_, jule::Ptr<_1b4ad5712_Token>* _56743_ident, jule::Ptr<_1b4bddaa1_Var>* _56759_s) {
	if ((!(_1b4bbe0d1_isAccessibleDefine(_self_, (*((*(_56759_s))))._field_Public, (*((*(_56759_s))))._field_Token)))) {
		_1b4bbd872_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_56743_ident))))._field_Kind, &__jule_any_type4)}));
		_1b4bbdbd5_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1b4b99c5a_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_56759_s))))._field_Ident), false) != nullptr)) {
		_1b4bbd872_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_56759_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1ab18cc6d_checkImportSelection(_1b4bbac37_Sema* _self_, jule::Ptr<_1b4ad5712_Token>* _56743_ident, jule::Ptr<_1b4c7bb1c_TypeAlias>* _56759_s) {
	if ((!(_1b4bbe0d1_isAccessibleDefine(_self_, (*((*(_56759_s))))._field_Public, (*((*(_56759_s))))._field_Token)))) {
		_1b4bbd872_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_56743_ident))))._field_Kind, &__jule_any_type4)}));
		_1b4bbdbd5_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1b4b99c5a_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_56759_s))))._field_Ident), false) != nullptr)) {
		_1b4bbd872_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_56759_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1ab191ee7_checkImportSelection(_1b4bbac37_Sema* _self_, jule::Ptr<_1b4ad5712_Token>* _56743_ident, jule::Ptr<_1b4b218b3_Struct>* _56759_s) {
	if ((!(_1b4bbe0d1_isAccessibleDefine(_self_, (*((*(_56759_s))))._field_Public, (*((*(_56759_s))))._field_Token)))) {
		_1b4bbd872_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_56743_ident))))._field_Kind, &__jule_any_type4)}));
		_1b4bbdbd5_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1b4b99c5a_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_56759_s))))._field_Ident), false) != nullptr)) {
		_1b4bbd872_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_56759_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1ab196419_checkImportSelection(_1b4bbac37_Sema* _self_, jule::Ptr<_1b4ad5712_Token>* _56743_ident, jule::Ptr<_1b4b49c3d_Trait>* _56759_s) {
	if ((!(_1b4bbe0d1_isAccessibleDefine(_self_, (*((*(_56759_s))))._field_Public, (*((*(_56759_s))))._field_Token)))) {
		_1b4bbd872_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_56743_ident))))._field_Kind, &__jule_any_type4)}));
		_1b4bbdbd5_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1b4b99c5a_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_56759_s))))._field_Ident), false) != nullptr)) {
		_1b4bbd872_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_56759_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1ab19a682_checkImportSelection(_1b4bbac37_Sema* _self_, jule::Ptr<_1b4ad5712_Token>* _56743_ident, jule::Ptr<_1b4b4c449_Enum>* _56759_s) {
	if ((!(_1b4bbe0d1_isAccessibleDefine(_self_, (*((*(_56759_s))))._field_Public, (*((*(_56759_s))))._field_Token)))) {
		_1b4bbd872_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_56743_ident))))._field_Kind, &__jule_any_type4)}));
		_1b4bbdbd5_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1b4b99c5a_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_56759_s))))._field_Ident), false) != nullptr)) {
		_1b4bbd872_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_56759_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1ab19e90b_checkImportSelection(_1b4bbac37_Sema* _self_, jule::Ptr<_1b4ad5712_Token>* _56743_ident, jule::Ptr<_1b4b4db54_TypeEnum>* _56759_s) {
	if ((!(_1b4bbe0d1_isAccessibleDefine(_self_, (*((*(_56759_s))))._field_Public, (*((*(_56759_s))))._field_Token)))) {
		_1b4bbd872_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_56743_ident))))._field_Kind, &__jule_any_type4)}));
		_1b4bbdbd5_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1b4b99c5a_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_56759_s))))._field_Ident), false) != nullptr)) {
		_1b4bbd872_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_56759_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1ab1a3b85_checkImportSelection(_1b4bbac37_Sema* _self_, jule::Ptr<_1b4ad5712_Token>* _56743_ident, jule::Ptr<_1b4b36884_Fn>* _56759_s) {
	if ((!(_1b4bbe0d1_isAccessibleDefine(_self_, (*((*(_56759_s))))._field_Public, (*((*(_56759_s))))._field_Token)))) {
		_1b4bbd872_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_56743_ident))))._field_Kind, &__jule_any_type4)}));
		_1b4bbdbd5_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1b4b99c5a_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_56759_s))))._field_Ident), false) != nullptr)) {
		_1b4bbd872_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_56759_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}



inline jule::Bool _1b4bc0dd5_checkImportSelectedSelections(_1b4bbac37_Sema* _self_, jule::Ptr<_1b4b9a893_ImportInfo>* _58153_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_58153_imp))))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab184083:;
		if (it != expr_end) {
			jule::Ptr<_1b4ad5712_Token> _58316_ident = *it;
			{
				if ((*(_58316_ident))._field_Kind.equal("self", 4)) {
					goto _iter_next_1ab184083;
				};
				if (_1b4bc029c_isDuplicatedImportSelection(_self_, static_cast<jule::Uintptr>((*(_58153_imp))), &((*_58316_ident.alloc)._field_Kind))) {
					_1b4bbd872_pushErr(_self_, _58316_ident, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*_58316_ident.alloc)._field_Kind, &__jule_any_type4)}));
					_1b4bbdbd5_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1ab184083;
				};
				jule::Any _59517_def = _1b4bc0698_getImportDef(_self_, &((*_58316_ident.alloc)._field_Kind), _58153_imp);;
				{
					auto &_match_expr{ _59517_def };
					
					if (_match_expr.type == &__jule_any_type3) {
						_case_begin_1ab185150:;
						{
							goto _iter_next_1ab184083;
						}
					}
					else if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1ab186a69:;
						{
							jule::Ptr<_1b4bddaa1_Var> _60121_v = _59517_def.unsafe_cast_ptr<_1b4bddaa1_Var>();;
							__jule_func_result=(_1ab1889a0_checkImportSelection(_self_, &(_58316_ident), &(_60121_v)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type65) {
						_case_begin_1ab186ad0:;
						{
							jule::Ptr<_1b4c7bb1c_TypeAlias> _60421_ta = _59517_def.unsafe_cast_ptr<_1b4c7bb1c_TypeAlias>();;
							__jule_func_result=(_1ab18cc6d_checkImportSelection(_self_, &(_58316_ident), &(_60421_ta)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type64) {
						_case_begin_1ab186b46:;
						{
							jule::Ptr<_1b4b218b3_Struct> _60721_s = _59517_def.unsafe_cast_ptr<_1b4b218b3_Struct>();;
							__jule_func_result=(_1ab191ee7_checkImportSelection(_self_, &(_58316_ident), &(_60721_s)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type10) {
						_case_begin_1ab186bac:;
						{
							jule::Ptr<_1b4b49c3d_Trait> _61021_t = _59517_def.unsafe_cast_ptr<_1b4b49c3d_Trait>();;
							__jule_func_result=(_1ab196419_checkImportSelection(_self_, &(_58316_ident), &(_61021_t)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type66) {
						_case_begin_1ab186c23:;
						{
							jule::Ptr<_1b4b4c449_Enum> _61321_e = _59517_def.unsafe_cast_ptr<_1b4b4c449_Enum>();;
							__jule_func_result=(_1ab19a682_checkImportSelection(_self_, &(_58316_ident), &(_61321_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type67) {
						_case_begin_1ab187839:;
						{
							jule::Ptr<_1b4b4db54_TypeEnum> _61621_e = _59517_def.unsafe_cast_ptr<_1b4b4db54_TypeEnum>();;
							__jule_func_result=(_1ab19e90b_checkImportSelection(_self_, &(_58316_ident), &(_61621_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type63) {
						_case_begin_1ab1878a0:;
						{
							jule::Ptr<_1b4b36884_Fn> _61921_f = _59517_def.unsafe_cast_ptr<_1b4b36884_Fn>();;
							__jule_func_result=(_1ab1a3b85_checkImportSelection(_self_, &(_58316_ident), &(_61921_f)) && __jule_func_result);
						}
					}
					else {
						_case_begin_1ab186959:;
						{
							_1b4bbd872_pushErr(_self_, _58316_ident, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*_58316_ident.alloc)._field_Kind, &__jule_any_type4)}));
							__jule_func_result=false;
							goto _iter_next_1ab184083;
						}
					}
					_match_end_1ab1865c4:;
				};
			}
			_iter_next_1ab184083:;
			++it;
			goto _iter_begin_1ab184083;
		}
		_iter_end_1ab184083:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1ab1a844d_checkImportsAllSelectionsFromCollection(_1b4bbac37_Sema* _self_, jule::Slice<jule::Ptr<_1b4bddaa1_Var>>* _63062_s, jule::Ptr<_1b4ad5712_Token>* _63071_et) {
	jule::Bool _63113_ok = true;;
	{
		auto expr = _63062_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab1aa1a8:;
		if (it != expr_end) {
			jule::Ptr<_1b4bddaa1_Var> *_63216_d = it;
			{
				if ((*((*(_63216_d))))._field_Public) {
					_63113_ok=(_1ab1889a0_checkImportSelection(_self_, _63071_et, _63216_d) && _63113_ok);
				};
			}
			_iter_next_1ab1aa1a8:;
			++it;
			goto _iter_begin_1ab1aa1a8;
		}
		_iter_end_1ab1aa1a8:;
	};
	return _63113_ok;;
}

inline jule::Bool _1ab1a90db_checkImportsAllSelectionsFromCollection(_1b4bbac37_Sema* _self_, jule::Slice<jule::Ptr<_1b4c7bb1c_TypeAlias>>* _63062_s, jule::Ptr<_1b4ad5712_Token>* _63071_et) {
	jule::Bool _63113_ok = true;;
	{
		auto expr = _63062_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab1ac8a3:;
		if (it != expr_end) {
			jule::Ptr<_1b4c7bb1c_TypeAlias> *_63216_d = it;
			{
				if ((*((*(_63216_d))))._field_Public) {
					_63113_ok=(_1ab18cc6d_checkImportSelection(_self_, _63071_et, _63216_d) && _63113_ok);
				};
			}
			_iter_next_1ab1ac8a3:;
			++it;
			goto _iter_begin_1ab1ac8a3;
		}
		_iter_end_1ab1ac8a3:;
	};
	return _63113_ok;;
}

inline jule::Bool _1ab1ac2cb_checkImportsAllSelectionsFromCollection(_1b4bbac37_Sema* _self_, jule::Slice<jule::Ptr<_1b4b218b3_Struct>>* _63062_s, jule::Ptr<_1b4ad5712_Token>* _63071_et) {
	jule::Bool _63113_ok = true;;
	{
		auto expr = _63062_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab1b008c:;
		if (it != expr_end) {
			jule::Ptr<_1b4b218b3_Struct> *_63216_d = it;
			{
				if ((*((*(_63216_d))))._field_Public) {
					_63113_ok=(_1ab191ee7_checkImportSelection(_self_, _63071_et, _63216_d) && _63113_ok);
				};
			}
			_iter_next_1ab1b008c:;
			++it;
			goto _iter_begin_1ab1b008c;
		}
		_iter_end_1ab1b008c:;
	};
	return _63113_ok;;
}

inline jule::Bool _1ab1ad5da_checkImportsAllSelectionsFromCollection(_1b4bbac37_Sema* _self_, jule::Slice<jule::Ptr<_1b4b36884_Fn>>* _63062_s, jule::Ptr<_1b4ad5712_Token>* _63071_et) {
	jule::Bool _63113_ok = true;;
	{
		auto expr = _63062_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab1b2798:;
		if (it != expr_end) {
			jule::Ptr<_1b4b36884_Fn> *_63216_d = it;
			{
				if ((*((*(_63216_d))))._field_Public) {
					_63113_ok=(_1ab1a3b85_checkImportSelection(_self_, _63071_et, _63216_d) && _63113_ok);
				};
			}
			_iter_next_1ab1b2798:;
			++it;
			goto _iter_begin_1ab1b2798;
		}
		_iter_end_1ab1b2798:;
	};
	return _63113_ok;;
}

inline jule::Bool _1ab1b0cc4_checkImportsAllSelectionsFromCollection(_1b4bbac37_Sema* _self_, jule::Slice<jule::Ptr<_1b4b49c3d_Trait>>* _63062_s, jule::Ptr<_1b4ad5712_Token>* _63071_et) {
	jule::Bool _63113_ok = true;;
	{
		auto expr = _63062_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab1b4e3d:;
		if (it != expr_end) {
			jule::Ptr<_1b4b49c3d_Trait> *_63216_d = it;
			{
				if ((*((*(_63216_d))))._field_Public) {
					_63113_ok=(_1ab196419_checkImportSelection(_self_, _63071_et, _63216_d) && _63113_ok);
				};
			}
			_iter_next_1ab1b4e3d:;
			++it;
			goto _iter_begin_1ab1b4e3d;
		}
		_iter_end_1ab1b4e3d:;
	};
	return _63113_ok;;
}

inline jule::Bool _1ab1b436b_checkImportsAllSelectionsFromCollection(_1b4bbac37_Sema* _self_, jule::Slice<jule::Ptr<_1b4b4c449_Enum>>* _63062_s, jule::Ptr<_1b4ad5712_Token>* _63071_et) {
	jule::Bool _63113_ok = true;;
	{
		auto expr = _63062_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab1b75d3:;
		if (it != expr_end) {
			jule::Ptr<_1b4b4c449_Enum> *_63216_d = it;
			{
				if ((*((*(_63216_d))))._field_Public) {
					_63113_ok=(_1ab19a682_checkImportSelection(_self_, _63071_et, _63216_d) && _63113_ok);
				};
			}
			_iter_next_1ab1b75d3:;
			++it;
			goto _iter_begin_1ab1b75d3;
		}
		_iter_end_1ab1b75d3:;
	};
	return _63113_ok;;
}

inline jule::Bool _1ab1b6a11_checkImportsAllSelectionsFromCollection(_1b4bbac37_Sema* _self_, jule::Slice<jule::Ptr<_1b4b4db54_TypeEnum>>* _63062_s, jule::Ptr<_1b4ad5712_Token>* _63071_et) {
	jule::Bool _63113_ok = true;;
	{
		auto expr = _63062_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab1b9d11:;
		if (it != expr_end) {
			jule::Ptr<_1b4b4db54_TypeEnum> *_63216_d = it;
			{
				if ((*((*(_63216_d))))._field_Public) {
					_63113_ok=(_1ab19e90b_checkImportSelection(_self_, _63071_et, _63216_d) && _63113_ok);
				};
			}
			_iter_next_1ab1b9d11:;
			++it;
			goto _iter_begin_1ab1b9d11;
		}
		_iter_end_1ab1b9d11:;
	};
	return _63113_ok;;
}



inline jule::Bool _1b4bc1622_checkImportAllSelections(_1b4bbac37_Sema* _self_, jule::Ptr<_1b4b9a893_ImportInfo>* _64044_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*((*(_64044_imp))))._field_Package))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab184418:;
		if (it != expr_end) {
			jule::Ptr<_1b4c41340_SymbolTable> *_64216_file = it;
			{
				__jule_func_result=(_1ab1a844d_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64216_file))))._field_Vars), &((*((*(_64044_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1ab1a90db_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_64216_file)).alloc)._field_TypeAliases), &((*((*(_64044_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1ab1ac2cb_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_64216_file)).alloc)._field_Structs), &((*((*(_64044_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1ab1ad5da_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_64216_file)).alloc)._field_Funcs), &((*((*(_64044_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1ab1b0cc4_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_64216_file)).alloc)._field_Traits), &((*((*(_64044_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1ab1b436b_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_64216_file)).alloc)._field_Enums), &((*((*(_64044_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1ab1b6a11_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_64216_file)).alloc)._field_TypeEnums), &((*((*(_64044_imp))))._field_Token)) && __jule_func_result);
			}
			_iter_next_1ab184418:;
			++it;
			goto _iter_begin_1ab184418;
		}
		_iter_end_1ab184418:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1b4bc1963_checkImportSelections(_1b4bbac37_Sema* _self_, jule::Ptr<_1b4b9a893_ImportInfo>* _65445_imp) {
	jule::Bool __jule_func_result = false;
	if (((*((*(_65445_imp))))._field_Selected.len() > 0LL)) {
		__jule_func_result = _1b4bc0dd5_checkImportSelectedSelections(_self_, _65445_imp);
		return __jule_func_result;;
	} else if ((*((*(_65445_imp))))._field_ImportAll) {
		__jule_func_result = _1b4bc1622_checkImportAllSelections(_self_, _65445_imp);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1b4bc1ca4_isUseAliasDuplication(_1b4bbac37_Sema* _self_, jule::Ptr<_1b4b9a893_ImportInfo>* _66341_imp) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab1bbd9b:;
		if (it != expr_end) {
			jule::Ptr<_1b4b9a893_ImportInfo> _66421_imp2 = *it;
			{
				if ((_66421_imp2 == (*(_66341_imp)))) {
					goto _iter_end_1ab1bbd9b;
				};
				if (((*(_66421_imp2))._field_Alias == (*((*(_66341_imp))))._field_Alias)) {
					return true;;
				};
				if ((((*_66421_imp2.alloc)._field_Ident == (*_66421_imp2.alloc)._field_LinkPath) && ((*_66421_imp2.alloc)._field_Ident == (*((*(_66341_imp))))._field_Alias))) {
					return true;;
				};
			}
			_iter_next_1ab1bbd9b:;
			++it;
			goto _iter_begin_1ab1bbd9b;
		}
		_iter_end_1ab1bbd9b:;
	};
	return false;;
}



inline jule::Bool _1b4bc20e5_checkImport(_1b4bbac37_Sema* _self_, jule::Ptr<_1b4b9a893_ImportInfo>* _67935_imp) {
	if (((*((*(_67935_imp))))._field_Binded || ((*((*((*(_67935_imp))))._field_Package))._field_Files.len() == 0LL))) {
		return true;;
	};
	if ((*((*(_67935_imp))))._field_LinkPath.equal("std::unsafe", 11)) {
		if ((((*((*(_67935_imp))))._field_ImportAll || !((*((*(_67935_imp))))._field_Alias).empty()) || ((*((*(_67935_imp))))._field_Selected.len() > 0LL))) {
			_1b4bbd872_pushErr(_self_, (*((*(_67935_imp))))._field_Token, jule::Str::lit("expected plain use declaration for this package like: @", 55), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("use std::unsafe", 15), &__jule_any_type4)}));
			return false;;
		};
	};
	if (((*((*(_67935_imp))))._field_Alias.len() != 0LL)) {
		if (_1b4ad80e9_IsIgnoreIdent((*((*(_67935_imp))))._field_Alias)) {
			_1b4bbd872_pushErr(_self_, (*((*(_67935_imp))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
		} else if (_1b4bc1ca4_isUseAliasDuplication(_self_, _67935_imp)) {
			_1b4bbd872_pushErr(_self_, (*((*(_67935_imp))))._field_Token, jule::Str::lit("identifier duplication: @ is already used for another use declaration above", 75), jule::Slice<jule::Any>::make({jule::Any((*((*(_67935_imp))))._field_Alias, &__jule_any_type4)}));
			_1b4bbdbd5_pushSuggestion(_self_, jule::Str::lit("rename alias for this use declaration to avoid duplication", 58), jule::Slice<jule::Any>());
		};
	};
	if ((!((*((*(_67935_imp))))._field_Duplicate))) {
		jule::Ptr<_1b4bbac37_Sema> _70217_sema = jule::new_ptr<_1b4bbac37_Sema>(_1b4bbac37_Sema{._field_flags=(*(_self_))._field_flags, ._field_meta=(*(_self_))._field_meta});;
		_1b4bda4c6_check(_70217_sema, &((*(*((*(_67935_imp))))._field_Package.alloc)._field_Files));
		if (((*_70217_sema.alloc)._field_errors.len() != 0LL)) {
			((*(_self_))._field_errors).append((*_70217_sema.alloc)._field_errors);;
			(*_70217_sema.alloc)._field_errors=nullptr;
			return false;;
		};
	};
	return _1b4bc1963_checkImportSelections(_self_, _67935_imp);;
}



inline void _1b4bc22e3_checkImports(_1b4bbac37_Sema* _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab1c63a0:;
		if (it != expr_end) {
			jule::Ptr<_1b4c41340_SymbolTable> _71721_file = *it;
			{
				_1b4bbd454_setCurrentFile(_self_, _71721_file);
				{
					auto expr = &((*(_71721_file))._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab1c7060:;
					if (it != expr_end) {
						jule::Ptr<_1b4b9a893_ImportInfo> _71925_imp = *it;
						{
							jule::Bool _72017_ok = _1b4bc20e5_checkImport(_self_, &(_71925_imp));;
							if ((!(_72017_ok))) {
								return;;
							};
						}
						_iter_next_1ab1c7060:;
						++it;
						goto _iter_begin_1ab1c7060;
					}
					_iter_end_1ab1c7060:;
				};
			}
			_iter_next_1ab1c63a0:;
			++it;
			goto _iter_begin_1ab1c63a0;
		}
		_iter_end_1ab1c63a0:;
	};
}



inline void _1b4bc24e1_implFileImpls(jule::Ptr<_1b4bbac37_Sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Impls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab1c74c2:;
		if (it != expr_end) {
			jule::Ptr<_1b4b733a4_Impl> _73021_imp = *it;
			{
				_1b4bd1a83_implImpl(_self_, &(_73021_imp));
			}
			_iter_next_1ab1c74c2:;
			++it;
			goto _iter_begin_1ab1c74c2;
		}
		_iter_end_1ab1c74c2:;
	};
}



inline void _1b4bc26de_implImpls(jule::Ptr<_1b4bbac37_Sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab1c8d97:;
		if (it != expr_end) {
			jule::Ptr<_1b4c41340_SymbolTable> _73621_file = *it;
			{
				_1b4bbd454_setCurrentFile(_self_.ptr(), _73621_file);
				_1b4bc24e1_implFileImpls(_self_);
			}
			_iter_next_1ab1c8d97:;
			++it;
			goto _iter_begin_1ab1c8d97;
		}
		_iter_end_1ab1c8d97:;
	};
}



inline void _1b4bc28dc_checkEnums(jule::Ptr<_1b4bbac37_Sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab1c9e42:;
		if (it != expr_end) {
			jule::Ptr<_1b4c41340_SymbolTable> _74321_file = *it;
			{
				_1b4bbd454_setCurrentFile(_self_.ptr(), _74321_file);
				{
					
					if ((!(_1b4bccebe_checkEnumDecls(_self_)))) {
						_case_begin_1ab1ca580:;
					}
					else if ((!(_1b4bcd255_checkTypeEnumDecls(_self_)))) {
						_case_begin_1ab1cab46:;
					}
					_match_end_1ab1caa7a:;
				};
			}
			_iter_next_1ab1c9e42:;
			++it;
			goto _iter_begin_1ab1c9e42;
		}
		_iter_end_1ab1c9e42:;
	};
}



inline void _1b4bc2ada_checkFileInherits(jule::Ptr<_1b4bbac37_Sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab1cb99e:;
		if (it != expr_end) {
			jule::Ptr<_1b4b49c3d_Trait> _75321_t = *it;
			{
				jule::Bool _75413_ok = _1b4bceb19__checkTraitDeclInherits(_self_, &(_75321_t));;
				if ((!(_75413_ok))) {
					return;;
				};
			}
			_iter_next_1ab1cb99e:;
			++it;
			goto _iter_begin_1ab1cb99e;
		}
		_iter_end_1ab1cb99e:;
	};
}



inline void _1b4bc2cd8_checkInherits(jule::Ptr<_1b4bbac37_Sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab1ccce1:;
		if (it != expr_end) {
			jule::Ptr<_1b4c41340_SymbolTable> _76221_file = *it;
			{
				_1b4bbd454_setCurrentFile(_self_.ptr(), _76221_file);
				_1b4bc2ada_checkFileInherits(_self_);
			}
			_iter_next_1ab1ccce1:;
			++it;
			goto _iter_begin_1ab1ccce1;
		}
		_iter_end_1ab1ccce1:;
	};
}



inline _1b4c8e7bc_typeChecker _1b4bc328e_typeChecker(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Trait _76835_l, jule::Slice<jule::Ptr<_1b4c7bb1c_TypeAlias>> _76850_generics, jule::Ptr<_1b4c8d7cc_referencer> _76913_referencer) {
	_1b4c8e7bc_typeChecker _77013_tc = _1b4c8e7bc_typeChecker{._field_s=_self_, ._field_rootLookup=_76835_l, ._field_lookup=_76835_l, ._field_referencer=_76913_referencer, ._field_useGenerics=_76850_generics, };;
	{
		auto &_match_expr{ _76835_l };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b4c9c500_Lookup_mptr_data0)) {
			_case_begin_1ab1ceb5b:;
			{
				jule::Ptr<_1b4b80cb8_scopeChecker> _77917_hard = _1b4b843e8_getHardRoot(_76835_l.cast_ptr<_1b4b80cb8_scopeChecker>((jule::Trait::Type*)&_1b4c9c500_Lookup_mptr_data0));;
				_77013_tc._field_refers=(*((*(_77917_hard))._field_owner))._field_Refers;
			}
		}
		_match_end_1ab1ce5ea:;
	};
	if (((_76913_referencer != nullptr) && ((*_76913_referencer.alloc)._field_refs != nullptr))) {
		{
			auto &_match_expr{ (*(_76913_referencer))._field_owner };
			
			if (_match_expr.type == &__jule_any_type65) {
				_case_begin_1ab1d14cb:;
				{
					_77013_tc._field_ownerAlias=(*(_76913_referencer))._field_owner.unsafe_cast_ptr<_1b4c7bb1c_TypeAlias>();
				}
			}
			_match_end_1ab1d1476:;
		};
	};
	return _77013_tc;;
}



inline jule::Ptr<_1b4c7c90e_TypeKind> _1b4bc3800_buildTypeWithRefers(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4aeabbc_TypeDecl>* _79544_t, jule::Trait _79567_l, jule::Slice<jule::Ptr<_1b4c7bb1c_TypeAlias>> _79613_generics, jule::Ptr<_1b4c8d7cc_referencer> _79641_referencer) {
	return ({ auto _wrap_copy = _1b4bc328e_typeChecker(_self_, _79567_l, _79613_generics, _79641_referencer); _1b4c96e67_checkDecl(&_wrap_copy, _79544_t); });;
}



inline jule::Bool _1b4bc3d61_checkTypeWithRefers(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4c84ad1_TypeSymbol>* _80244_t, jule::Trait _80264_l, jule::Slice<jule::Ptr<_1b4c7bb1c_TypeAlias>> _80313_generics, jule::Ptr<_1b4c8d7cc_referencer> _80341_referencer) {
	jule::Bool __jule_func_result = false;
	if (_1b4c84e55_checked((*(_80244_t)).ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*((*(_80244_t))))._field_Kind=_1b4bc3800_buildTypeWithRefers(_self_, &((*((*(_80244_t))))._field_Decl), _80264_l, _80313_generics, _80341_referencer);
	__jule_func_result = _1b4c84e55_checked((*(_80244_t)).ptr());
	return __jule_func_result;;
}



inline jule::Ptr<_1b4b71050_constraintChecker> _1b4bc40e7_constraintChecker(jule::Ptr<_1b4bbac37_Sema> _self_) {
	return jule::new_ptr<_1b4b71050_constraintChecker>(_1b4b71050_constraintChecker{._field_s=_self_, });;
}



inline jule::Bool _1b4bc44e3_checkType(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4c84ad1_TypeSymbol>* _81734_t, jule::Trait _81754_l) {
	return _1b4bc3d61_checkTypeWithRefers(_self_, _81734_t, _81754_l, nullptr, nullptr);;
}



inline jule::Ptr<_1b4c7c90e_TypeKind> _1b4bc4999_buildTypeWithGenerics(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4aeabbc_TypeDecl>* _82346_t, jule::Slice<jule::Ptr<_1b4c7bb1c_TypeAlias>> _82413_generics, jule::Ptr<_1b4b3ca44_ReferenceStack> _82441_refers) {
	jule::Ptr<_1b4c8e7bc_typeChecker> _82513_tc = jule::new_ptr<_1b4c8e7bc_typeChecker>(_1b4c8e7bc_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1b4c9c500_Lookup_mptr_data3), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1b4c9c500_Lookup_mptr_data3), ._field_refers=_82441_refers, ._field_useGenerics=_82413_generics, });;
	return _1b4c96e67_checkDecl(_82513_tc.ptr(), _82346_t);;
}



inline jule::Ptr<_1b4c7c90e_TypeKind> _1b4bc512b_selectType(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4aeabbc_TypeDecl>* _84135_t) {
	jule::Ptr<_1b4c8e7bc_typeChecker> _84213_tc = jule::new_ptr<_1b4c8e7bc_typeChecker>(_1b4c8e7bc_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1b4c9c500_Lookup_mptr_data3), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1b4c9c500_Lookup_mptr_data3), ._field_selection=true, });;
	return _1b4c96e67_checkDecl(_84213_tc.ptr(), _84135_t);;
}



inline jule::Ptr<_1b4c483d0_Eval> _1b4bc55d2_evalpd(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Trait _85330_l, jule::Ptr<_1b4c7c90e_TypeKind> _85345_p, jule::Ptr<_1b4bddaa1_Var> _85363_owner) {
	jule::Ptr<_1b4c483d0_Eval> _85413_e = jule::new_ptr<_1b4c483d0_Eval>(_1b4c483d0_Eval{._field_s=_self_, ._field_lookup=_85330_l, ._field_owner=_85363_owner, });;
	{
		auto &_match_expr{ _85330_l };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b4c9c500_Lookup_mptr_data0)) {
			_case_begin_1ab1da79e:;
			{
				(*(_85413_e))._field_unsafety=_1b4b83172_isUnsafe(_85330_l.cast_ptr<_1b4b80cb8_scopeChecker>((jule::Trait::Type*)&_1b4c9c500_Lookup_mptr_data0));
			}
		}
		_match_end_1ab1da55c:;
	};
	(*_85413_e.alloc)._field_prefix=_85345_p;
	return _85413_e;;
}



inline jule::Ptr<_1b4c483d0_Eval> _1b4bc59cd_evalp(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Trait _86829_l, jule::Ptr<_1b4c7c90e_TypeKind> _86844_p) {
	return _1b4bc55d2_evalpd(_self_, _86829_l, _86844_p, nullptr);;
}



inline jule::Ptr<_1b4c483d0_Eval> _1b4bc5d1e_eval(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Trait _87328_l) {
	return _1b4bc59cd_evalp(_self_, _87328_l, nullptr);;
}



inline jule::Bool _1b4bc6380_checkAssignType(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Bool _87735_destIsRef, jule::Ptr<_1b4c7c90e_TypeKind>* _87757_dest, jule::Ptr<_1b4c466a8_Data>* _87814_d, jule::Ptr<_1b4ad5712_Token> _87828_errorToken) {
	if ((*((*(_87814_d))))._field_Decl) {
		_1b4bbd872_pushErr(_self_.ptr(), _87828_errorToken, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return false;;
	};
	if (_87735_destIsRef) {
		if ((!(_1b4c7d118_Equal((*(_87757_dest)), (*((*(_87814_d))))._field_Kind)))) {
			_1b4bbd872_pushErr(_self_, _87828_errorToken, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1b4c7ccc7_Str((*(_87757_dest)).ptr()), &__jule_any_type4),jule::Any(_1b4c7ccc7_Str((*((*(_87814_d))))._field_Kind.ptr()), &__jule_any_type4)}));
			return false;;
		};
	} else {
		jule::Ptr<_1b4c30120_assignTypeChecker> _88917_atc = jule::new_ptr<_1b4c30120_assignTypeChecker>(_1b4c30120_assignTypeChecker{._field_s=_self_, ._field_dest=(*(_87757_dest)), ._field_d=(*(_87814_d)), ._field_errorToken=_87828_errorToken});;
		jule::Bool _89513_ok = _1b4c310dd_check(_88917_atc.ptr());;
		if ((!(_89513_ok))) {
			return false;;
		};
	};
	if (((!(_1b4c470b0_IsConst((*(_87814_d)).ptr()))) || (_1b4c80060_Prim((*(_87757_dest)).ptr()) == nullptr))) {
		return true;;
	};
	jule::Str _90513_kind = (*(_1b4c80060_Prim((*(_87757_dest)).ptr())))._field_Kind;;
	{
		
		if (_1b27522b5_IsSigInt(_90513_kind)) {
			_case_begin_1ab1e30d1:;
			{
				_1b2756473_SetI64((*((*(_87814_d))))._field_Constant.ptr(), _1b2755b9d_AsI64((*((*(_87814_d))))._field_Constant));
			}
		}
		else if (_1b27525c3_IsUnsigInt(_90513_kind)) {
			_case_begin_1ab1e317a:;
			{
				_1b275672b_SetU64((*((*(_87814_d))))._field_Constant.ptr(), _1b2755e34_AsU64((*((*(_87814_d))))._field_Constant));
			}
		}
		else if (_1b2752bcd_IsFloat(_90513_kind)) {
			_case_begin_1ab1e31e1:;
			{
				_1b2757045_SetF64((*((*(_87814_d))))._field_Constant.ptr(), _1b27561ba_AsF64((*((*(_87814_d))))._field_Constant));
			}
		}
		_match_end_1ab1e3015:;
	};
	return true;;
}



inline jule::Bool _1b4bc6836__checkTypeCompatibility(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4c7c90e_TypeKind>* _91948_dest, jule::Ptr<_1b4c7c90e_TypeKind>* _91970_src, jule::Ptr<_1b4ad5712_Token> _92013_errorToken) {
	if (((*(_91970_src)) == nullptr)) {
		return false;;
	};
	if ((_1b4c81d86_Tup((*(_91970_src)).ptr()) != nullptr)) {
		return false;;
	};
	_1b4c2d371_typeCompatibilityChecker _92813_tcc = _1b4c2d371_typeCompatibilityChecker{._field_s=_self_, ._field_dest=(*(_91948_dest)), ._field_src=(*(_91970_src)), ._field_errorToken=_92013_errorToken};;
	return _1b4c2ea37_check(&_92813_tcc);;
}



inline jule::Bool _1b4bc6cdc_checkTypeCompatibility(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4c7c90e_TypeKind>* _93747_dest, jule::Ptr<_1b4c7c90e_TypeKind>* _93814_src, jule::Ptr<_1b4ad5712_Token>* _93835_errorToken) {
	if (_1b4bc6836__checkTypeCompatibility(_self_, _93747_dest, _93814_src, (*(_93835_errorToken)))) {
		return true;;
	};
	_1b4bbd872_pushErr(_self_, (*(_93835_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1b4c7ccc7_Str((*(_93747_dest)).ptr()), &__jule_any_type4),jule::Any(_1b4c7ccc7_Str((*(_93814_src)).ptr()), &__jule_any_type4)}));
	return false;;
}



inline void _1b4bc720a_pushCompatiblityError(_1b4bbac37_Sema* _self_, jule::Ptr<_1b4c7c90e_TypeKind>* _94645_dest, jule::Ptr<_1b4c466a8_Data>* _94667_src, jule::Ptr<_1b4ad5712_Token>* _94714_errorToken) {
	if ((*((*(_94667_src))))._field_untyped) {
		{
			
			if (_1b27574c9_IsI64((*((*(_94667_src))))._field_Constant.ptr())) {
				_case_begin_1ab1ea4e5:;
				{
					_1b4bbd872_pushErr(_self_, (*(_94714_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1b4c7ccc7_Str((*(_94645_dest)).ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("untyped integer", 15), &__jule_any_type4)}));
					return;;
				}
			}
			else if (_1b2757760_IsU64((*((*(_94667_src))))._field_Constant.ptr())) {
				_case_begin_1ab1ea58e:;
				{
					_1b4bbd872_pushErr(_self_, (*(_94714_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1b4c7ccc7_Str((*(_94645_dest)).ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("untyped unsigned integer", 24), &__jule_any_type4)}));
					return;;
				}
			}
			else if (_1b2758013_IsF64((*((*(_94667_src))))._field_Constant.ptr())) {
				_case_begin_1ab1ea605:;
				{
					_1b4bbd872_pushErr(_self_, (*(_94714_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1b4c7ccc7_Str((*(_94645_dest)).ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("untyped float", 13), &__jule_any_type4)}));
					return;;
				}
			}
			_match_end_1ab1ea3c4:;
		};
	};
	_1b4bbd872_pushErr(_self_, (*(_94714_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1b4c7ccc7_Str((*(_94645_dest)).ptr()), &__jule_any_type4),jule::Any(_1b4c7ccc7_Str((*((*(_94667_src))))._field_Kind.ptr()), &__jule_any_type4)}));
}



inline jule::Bool _1b4bc76b1_checkTypeCompatibility1(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4c7c90e_TypeKind>* _96448_dest, jule::Ptr<_1b4c466a8_Data>* _96470_src, jule::Ptr<_1b4ad5712_Token>* _96514_errorToken) {
	if (_1b4bc6836__checkTypeCompatibility(_self_, _96448_dest, &((*((*(_96470_src))))._field_Kind), (*(_96514_errorToken)))) {
		return true;;
	};
	_1b4bc720a_pushCompatiblityError(_self_, _96448_dest, _96470_src, _96514_errorToken);
	return false;;
}



inline jule::Ptr<_1b4c7c90e_TypeKind> _1b4bc7b67_buildNonGenericTypeKind(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4aeabbc_TypeDecl>* _97948_ast, jule::Slice<jule::Ptr<_1b4b07dc7_GenericDecl>>* _98014_generics, jule::Slice<jule::Ptr<_1b4c7c90e_TypeKind>>* _98050_ignored) {
	jule::Ptr<_1b4c8e7bc_typeChecker> _98113_tc = jule::new_ptr<_1b4c8e7bc_typeChecker>(_1b4c8e7bc_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1b4c9c500_Lookup_mptr_data3), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1b4c9c500_Lookup_mptr_data3), ._field_ignoreGenerics=(*(_98014_generics)), ._field_ignoredGenerics=_98050_ignored, });;
	return _1b4c96e67_checkDecl(_98113_tc.ptr(), _97948_ast);;
}



inline jule::Bool _1b4bc8063_buildFnNonGenericTypeKinds(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b39865_FnIns>* _99151_f, jule::Slice<jule::Ptr<_1b4c7c90e_TypeKind>>* _99167_ignored) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Slice<jule::Ptr<_1b4b07dc7_GenericDecl>> _99317_generics = nullptr;;
	if (_1b4b3708d_IsMethod((*((*(_99151_f))))._field_Decl.ptr())) {
		_99317_generics=jule::append((*(*((*(_99151_f))))._field_Decl.alloc)._field_Generics,(*((*(*((*(_99151_f))))._field_Decl.alloc)._field_Owner))._field_Generics);
	} else {
		_99317_generics=(*((*((*(_99151_f))))._field_Decl))._field_Generics;
	};
	{
		auto expr = &((*((*(_99151_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab204851:;
		if (it != expr_end) {
			jule::Ptr<_1b4b387dc_ParamIns> _100021_p = *it;
			{
				if ((!(_1b4b354cb_IsSelf((*(_100021_p))._field_Decl.ptr())))) {
					(*_100021_p.alloc)._field_Kind=_1b4bc7b67_buildNonGenericTypeKind(_self_, &((*((*(*_100021_p.alloc)._field_Decl.alloc)._field_Kind))._field_Decl), &(_99317_generics), _99167_ignored);
					__jule_func_result=(__jule_func_result && ((*_100021_p.alloc)._field_Kind != nullptr));
				};
			}
			_iter_next_1ab204851:;
			++it;
			goto _iter_begin_1ab204851;
		}
		_iter_end_1ab204851:;
	};
	if ((!(_1b4b36d07_IsVoid((*((*(_99151_f))))._field_Decl.ptr())))) {
		(*((*(_99151_f))))._field_Result=_1b4bc7b67_buildNonGenericTypeKind(_self_, &((*((*((*(*((*(_99151_f))))._field_Decl.alloc)._field_Result))._field_Kind))._field_Decl), &(_99317_generics), _99167_ignored);
		__jule_func_result=(__jule_func_result && ((*((*(_99151_f))))._field_Result != nullptr));
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1b4b39865_FnIns> _1b4bc83a4_getTraitCheckFnKind(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b36884_Fn>* _101344_f) {
	if (((*((*(_101344_f))))._field_Instances.len() == 1LL)) {
		return (*((*(_101344_f))))._field_Instances[0LL];;
	};
	jule::Ptr<_1b4b39865_FnIns> _101713_ins = _1b4b37d5d_instanceForce((*(_101344_f)));;
	jule::Ptr<_1b4c8e7bc_typeChecker> _101913_tc = jule::new_ptr<_1b4c8e7bc_typeChecker>(_1b4c8e7bc_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1b4c9c500_Lookup_mptr_data3), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1b4c9c500_Lookup_mptr_data3), });;
	{
		auto expr = &((*(_101713_ins))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab20a978:;
		if (it != expr_end) {
			jule::Ptr<_1b4b387dc_ParamIns> _102421_p = *it;
			{
				if ((!(_1b4b354cb_IsSelf((*(_102421_p))._field_Decl.ptr())))) {
					(*_102421_p.alloc)._field_Kind=_1b4c96e67_checkDecl(_101913_tc.ptr(), &((*((*(*_102421_p.alloc)._field_Decl.alloc)._field_Kind))._field_Decl));
				};
			}
			_iter_next_1ab20a978:;
			++it;
			goto _iter_begin_1ab20a978;
		}
		_iter_end_1ab20a978:;
	};
	if ((!(_1b4b36d07_IsVoid((*(_101344_f)).ptr())))) {
		(*_101713_ins.alloc)._field_Result=_1b4c96e67_checkDecl(_101913_tc, &((*((*((*((*(_101344_f))))._field_Result))._field_Kind))._field_Decl));
	};
	return _101713_ins;;
}



inline jule::Bool _1b4bc885a_checkConstraintsFn(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b39865_FnIns>* _103643_f, jule::Ptr<_1b4ad5712_Token>* _103659_et, jule::Ptr<_1b4b39865_FnIns> _103675_exist) {
	jule::Ptr<_1b4b71050_constraintChecker> _103713_cc = _1b4bc40e7_constraintChecker(_self_);;
	(*(_103713_cc))._field_et=(*(_103659_et));
	(*_103713_cc.alloc)._field_fi=(*(_103643_f));
	if ((_103675_exist != nullptr)) {
		{
			auto expr = &((*_103675_exist.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ab20ee88:;
			if (it != expr_end) {
				jule::I64 _104118_i = it - expr->begin();
				jule::Ptr<_1b4c7b028_InsGeneric> _104125_g = *it;
				{
					(*((*((*(_103643_f))))._field_Generics[_104118_i]))._field_Constraint=(*(_104125_g))._field_Constraint;
				}
				_iter_next_1ab20ee88:;
				++it;
				_104118_i++;
				goto _iter_begin_1ab20ee88;
			}
			_iter_end_1ab20ee88:;
		};
	} else {
		(*_103713_cc.alloc)._field_uniq=true;
	};
	return _1b4b71e85_check(_103713_cc);;
}



inline jule::Bool _1b4bc8d11_checkConstraintsStruct(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b24641_StructIns>* _105047_s, jule::Ptr<_1b4ad5712_Token>* _105067_et, jule::Ptr<_1b4b24641_StructIns> _105083_exist) {
	jule::Ptr<_1b4b71050_constraintChecker> _105113_cc = _1b4bc40e7_constraintChecker(_self_);;
	(*(_105113_cc))._field_et=(*(_105067_et));
	(*_105113_cc.alloc)._field_si=(*(_105047_s));
	if ((_105083_exist != nullptr)) {
		{
			auto expr = &((*_105083_exist.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ab213123:;
			if (it != expr_end) {
				jule::I64 _105518_i = it - expr->begin();
				jule::Ptr<_1b4c7b028_InsGeneric> _105525_g = *it;
				{
					(*((*((*(_105047_s))))._field_Generics[_105518_i]))._field_Constraint=(*(_105525_g))._field_Constraint;
				}
				_iter_next_1ab213123:;
				++it;
				_105518_i++;
				goto _iter_begin_1ab213123;
			}
			_iter_end_1ab213123:;
		};
	} else {
		(*_105113_cc.alloc)._field_uniq=true;
	};
	return _1b4b71e85_check(_105113_cc);;
}



inline jule::Bool _1b4bc920c_fnEnvironment(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b39865_FnIns>* _106738_f, jule::Fn<jule::Bool,jule::Ptr<_1b4bbac37_Sema>*,jule::Slice<jule::Ptr<_1b4c7bb1c_TypeAlias>>*> _106749_algo) {
	jule::Ptr<_1b4bbac37_Sema> _106813_sema = (*((*((*(_106738_f))))._field_Decl))._field_sema;;
	jule::Ptr<_1b4c41340_SymbolTable> _106913_old = (*((*(*((*(_106738_f))))._field_Decl.alloc)._field_sema))._field_file;;
	__JULE_DEFER({
		_1b4bbd454_setCurrentFile((*(*((*(_106738_f))))._field_Decl.alloc)._field_sema, _106913_old);
	});;
	jule::Ptr<_1b4c41340_SymbolTable> _107113_file = _1b4bb997d_findFile(&((*(*(*((*(_106738_f))))._field_Decl.alloc)._field_sema.alloc)._field_files), &((*((*(*((*(_106738_f))))._field_Decl.alloc)._field_Token))._field_File));;
	if ((_107113_file != nullptr)) {
		_1b4bbd454_setCurrentFile((*(*((*(_106738_f))))._field_Decl.alloc)._field_sema, _107113_file);
	};
	jule::I64 _107613_size = (*((*(_106738_f))))._field_Generics.len();;
	if ((((*((*(_106738_f))))._field_Decl != nullptr) && ((*(*((*(_106738_f))))._field_Decl.alloc)._field_Owner != nullptr))) {
		_107613_size+=(*(*(*((*(_106738_f))))._field_Decl.alloc)._field_Owner.alloc)._field_Generics.len();
	};
	jule::Slice<jule::Ptr<_1b4c7bb1c_TypeAlias>> _108113_generics = jule::Slice<jule::Ptr<_1b4c7bb1c_TypeAlias>>::alloc(0LL, _107613_size);;
	_1b4bb9609_appendGenericTypeAliases(&(_108113_generics), _106738_f);
	jule::Bool _10849_ok = _106749_algo(&(_106813_sema), &(_108113_generics));;
	if ((_106813_sema != _self_)) {
		(*(_self_))._field_errors=jule::append((*_self_.alloc)._field_errors,(*(_106813_sema))._field_errors);
		(*_106813_sema.alloc)._field_errors=nullptr;
	};
	return _10849_ok;;
}



inline void _1b4bc94b5_checkFnParamKind(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b387dc_ParamIns>* _109441_p) {
	(*((*((*(_109441_p))))._field_Kind))._field_Variadic=(*((*((*(_109441_p))))._field_Decl))._field_Variadic;
	if (((*(*((*(_109441_p))))._field_Decl.alloc)._field_Reference && (!(_1b4c98dc0_isValidForRef(&((*((*(_109441_p))))._field_Kind)))))) {
		_1b4bbd872_pushErr(_self_.ptr(), (*(*((*(_109441_p))))._field_Decl.alloc)._field_Token, jule::Str::lit("references cannot points to type @", 34), jule::Slice<jule::Any>::make({jule::Any(_1b4c7ccc7_Str((*((*(_109441_p))))._field_Kind), &__jule_any_type4)}));
	};
}



inline jule::Bool _1b4bc9806_reloadFnInsTypes(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b39865_FnIns> _110140_f) {
	if ((_1b4b3acea_IsBuiltin(_110140_f.ptr()) || _1b4b3b081_IsAnon(_110140_f))) {
		return true;;
	};
	return _1b4bc920c_fnEnvironment(_self_, &(_110140_f), jule::__new_closure<jule::Bool,jule::Ptr<_1b4bbac37_Sema>*,jule::Slice<jule::Ptr<_1b4c7bb1c_TypeAlias>>*>((void*)__jule_anon_1ab220806, jule::Ptr<__jule_anon_1ab220806_ctx>::make(__jule_anon_1ab220806_ctx{._110140_f=_110140_f,._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab220806_ctx_handler));;
}



inline jule::Bool _1b4bc9cac_checkRefValidityForInitExpr(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Bool _113747_leftMut, jule::Ptr<_1b4c466a8_Data>* _113767_d, jule::Ptr<_1b4ad5712_Token>* _113782_errorToken) {
	if ((!(_1b4bb83c7_isValidModelForRef(&((*((*(_113767_d))))._field_Model))))) {
		_1b4bbd872_pushErr(_self_.ptr(), (*(_113782_errorToken)), jule::Str::lit("references requires variable based expression for assignment", 60), jule::Slice<jule::Any>());
		return false;;
	};
	if ((_113747_leftMut && (!((*((*(_113767_d))))._field_Mutable)))) {
		_1b4bbd872_pushErr(_self_, (*(_113782_errorToken)), jule::Str::lit("mutable reference cannot point to immutable data", 48), jule::Slice<jule::Any>());
		return false;;
	};
	return true;;
}



inline jule::Bool _1b4bca0ed_isMutRiskyStruct(_1b4bbac37_Sema* _self_, jule::Ptr<_1b4b24641_StructIns>* _115432_s) {
	{
		auto expr = &((*((*(_115432_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab22a0d5:;
		if (it != expr_end) {
			jule::Ptr<_1b4b23a91_FieldIns> *_115516_f = it;
			{
				if ((((*((*((*(_115516_f))))._field_Decl))._field_Mutable && _1b4c7e290_Mutable((*(*(_115516_f)).alloc)._field_Kind.ptr())) && _1b4bbe0d1_isAccessibleDefine(_self_, (*(*(*(_115516_f)).alloc)._field_Decl.alloc)._field_Public, (*(*(*(_115516_f)).alloc)._field_Decl.alloc)._field_Token))) {
					return true;;
				};
			}
			_iter_next_1ab22a0d5:;
			++it;
			goto _iter_begin_1ab22a0d5;
		}
		_iter_end_1ab22a0d5:;
	};
	return false;;
}



inline jule::Bool _1b4bca719_checkValidityForInitExpr(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Bool _118144_leftMut, jule::Bool _118159_leftRef, jule::Ptr<_1b4c7c90e_TypeKind>* _118210_leftKind, jule::Ptr<_1b4c466a8_Data>* _118236_d, jule::Ptr<_1b4ad5712_Token>* _118251_errorToken) {
	if ((_118144_leftMut && (!((*((*(_118236_d))))._field_Mutable)))) {
		if (_1b4c7e290_Mutable((*((*(_118236_d))))._field_Kind.ptr())) {
			_1b4bbd872_pushErr(_self_.ptr(), (*(_118251_errorToken)), jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_1b4c7ccc7_Str((*((*(_118236_d))))._field_Kind), &__jule_any_type4)}));
			return false;;
		};
		jule::Ptr<_1b4b24641_StructIns> _119013_s = _1b4c815d3_Struct((*((*(_118236_d))))._field_Kind);;
		if (((_119013_s != nullptr) && _1b4bca0ed_isMutRiskyStruct(_self_, &(_119013_s)))) {
			_1b4bbd872_pushErr(_self_, (*(_118251_errorToken)), jule::Str::lit("struct @ cannot copied due to field which is stores mutable data", 64), jule::Slice<jule::Any>::make({jule::Any(_1b4c7ccc7_Str((*((*(_118236_d))))._field_Kind), &__jule_any_type4)}));
			return false;;
		};
	};
	if (_118159_leftRef) {
		if ((!(_1b4bc9cac_checkRefValidityForInitExpr(_self_, _118144_leftMut, _118236_d, _118251_errorToken)))) {
			return false;;
		};
	};
	jule::Ptr<_1b4c30120_assignTypeChecker> _120113_atc = jule::new_ptr<_1b4c30120_assignTypeChecker>(_1b4c30120_assignTypeChecker{._field_s=_self_, ._field_d=(*(_118236_d)), ._field_errorToken=(*(_118251_errorToken))});;
	return _1b4c3083a_checkValidity(_120113_atc.ptr());;
}



inline jule::Bool _1b4bcab15_checkTypeAliasDeclKind(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4c7bb1c_TypeAlias>* _120947_ta, jule::Trait _120967_l) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1b4c41340_SymbolTable> _121013_old = (*(_self_))._field_file;;
	__JULE_DEFER({
		_1b4bbd454_setCurrentFile(_self_, _121013_old);
	});;
	if (((*((*(_120947_ta))))._field_Token != nullptr)) {
		jule::Ptr<_1b4c41340_SymbolTable> _121517_file = _1b4bb997d_findFile(&((*_self_.alloc)._field_files), &((*(*((*(_120947_ta))))._field_Token.alloc)._field_File));;
		if ((_121517_file != nullptr)) {
			_1b4bbd454_setCurrentFile(_self_, _121517_file);
		};
	};
	__jule_func_result=_1b4bc3d61_checkTypeWithRefers(_self_, &((*((*(_120947_ta))))._field_Kind), _120967_l, nullptr, jule::new_ptr<_1b4c8d7cc_referencer>(_1b4c8d7cc_referencer{._field_ident=(*((*(_120947_ta))))._field_Ident, ._field_owner=jule::Any((*(_120947_ta)), &__jule_any_type65), ._field_refs=(&((*((*(_120947_ta))))._field_Refers))}));
	if (((__jule_func_result && (_1b4c80d30_Arr((*((*((*(_120947_ta))))._field_Kind))._field_Kind.ptr()) != nullptr)) && (*(_1b4c80d30_Arr((*(*((*(_120947_ta))))._field_Kind.alloc)._field_Kind)))._field_Auto)) {
		_1b4bbd872_pushErr(_self_, (*((*(*((*(_120947_ta))))._field_Kind.alloc)._field_Decl))._field_Token, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
		__jule_func_result=false;
	};
	return __jule_func_result;;
}



inline void _1b4bcae78_checkTypeAliasDecl(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4c7bb1c_TypeAlias>* _123243_ta, jule::Trait _123263_l) {
	if (_1b4ad80e9_IsIgnoreIdent((*((*(_123243_ta))))._field_Ident)) {
		_1b4bbd872_pushErr(_self_.ptr(), (*((*(_123243_ta))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	_1b4bcab15_checkTypeAliasDeclKind(_self_, _123243_ta, _123263_l);
}



inline void _1b4bcb231_checkTypeAliasDeclDup(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4c7bb1c_TypeAlias>* _124046_ta) {
	if (_1b4ad80e9_IsIgnoreIdent((*((*(_124046_ta))))._field_Ident)) {
		_1b4bbd872_pushErr(_self_.ptr(), (*((*(_124046_ta))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	if (_1b4bbe587_isDuplicatedIdent(_self_, static_cast<jule::Uintptr>((*(_124046_ta))), &((*((*(_124046_ta))))._field_Ident), (*((*(_124046_ta))))._field_Binded)) {
		_1b4bbd872_pushErr(_self_, (*((*(_124046_ta))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_124046_ta))))._field_Ident, &__jule_any_type4)}));
		_1b4bbdbd5_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1b4bcab15_checkTypeAliasDeclKind(_self_, _124046_ta, jule::Trait(_self_, (jule::Trait::Type*)&_1b4c9c500_Lookup_mptr_data3));
}



inline jule::Bool _1b4bcb4b7_checkTypeAliasDecls(jule::Ptr<_1b4bbac37_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab23cb42:;
		if (it != expr_end) {
			jule::Ptr<_1b4c7bb1c_TypeAlias> _125321_ta = *it;
			{
				_1b4bcb231_checkTypeAliasDeclDup(_self_, &(_125321_ta));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1ab23cb42:;
			++it;
			goto _iter_begin_1ab23cb42;
		}
		_iter_end_1ab23cb42:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1ab269663_checkEnumItemsDup(_1b4bbac37_Sema* _self_, jule::Slice<jule::Ptr<_1b4b4b8cc_EnumItem>> _126439_items) {
	{
		auto expr = &(_126439_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab26aa71:;
		if (it != expr_end) {
			jule::Ptr<_1b4b4b8cc_EnumItem> *_126516_item = it;
			{
				if (((*((*(_126516_item))))._field_Ident).empty()) {
					goto _iter_next_1ab26aa71;
				} else if (_1b4ad80e9_IsIgnoreIdent((*((*(_126516_item))))._field_Ident)) {
					_1b4bbd872_pushErr(_self_, (*(*(_126516_item)).alloc)._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_126439_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ab26c567:;
						if (it != expr_end) {
							jule::Ptr<_1b4b4b8cc_EnumItem> *_127124_citem = it;
							{
								if (((*(_126516_item)) == (*(_127124_citem)))) {
									goto _iter_end_1ab26c567;
								} else if (((*((*(_126516_item))))._field_Ident == (*((*(_127124_citem))))._field_Ident)) {
									_1b4bbd872_pushErr(_self_, (*(*(_126516_item)).alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*(_126516_item)).alloc)._field_Ident, &__jule_any_type4)}));
									_1b4bbdbd5_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
									goto _iter_end_1ab26c567;
								};
							}
							_iter_next_1ab26c567:;
							++it;
							goto _iter_begin_1ab26c567;
						}
						_iter_end_1ab26c567:;
					};
				};
			}
			_iter_next_1ab26aa71:;
			++it;
			goto _iter_begin_1ab26aa71;
		}
		_iter_end_1ab26aa71:;
	};
}

inline void _1ab27683a_checkEnumItemsDup(_1b4bbac37_Sema* _self_, jule::Slice<jule::Ptr<_1b4b4d57c_TypeEnumItem>> _126439_items) {
	{
		auto expr = &(_126439_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab277c04:;
		if (it != expr_end) {
			jule::Ptr<_1b4b4d57c_TypeEnumItem> *_126516_item = it;
			{
				if (((*((*(_126516_item))))._field_Ident).empty()) {
					goto _iter_next_1ab277c04;
				} else if (_1b4ad80e9_IsIgnoreIdent((*((*(_126516_item))))._field_Ident)) {
					_1b4bbd872_pushErr(_self_, (*(*(_126516_item)).alloc)._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_126439_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ab2796ea:;
						if (it != expr_end) {
							jule::Ptr<_1b4b4d57c_TypeEnumItem> *_127124_citem = it;
							{
								if (((*(_126516_item)) == (*(_127124_citem)))) {
									goto _iter_end_1ab2796ea;
								} else if (((*((*(_126516_item))))._field_Ident == (*((*(_127124_citem))))._field_Ident)) {
									_1b4bbd872_pushErr(_self_, (*(*(_126516_item)).alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*(_126516_item)).alloc)._field_Ident, &__jule_any_type4)}));
									_1b4bbdbd5_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
									goto _iter_end_1ab2796ea;
								};
							}
							_iter_next_1ab2796ea:;
							++it;
							goto _iter_begin_1ab2796ea;
						}
						_iter_end_1ab2796ea:;
					};
				};
			}
			_iter_next_1ab277c04:;
			++it;
			goto _iter_begin_1ab277c04;
		}
		_iter_end_1ab277c04:;
	};
}



inline void _1b4bcba28_checkEnumItemsStr(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b4c449_Enum>* _128442_e) {
	jule::Ptr<_1b4c483d0_Eval> _128513_eval = _1b4bc5d1e_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1b4c9c500_Lookup_mptr_data3));;
	{
		auto expr = &((*((*(_128442_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab23e8ad:;
		if (it != expr_end) {
			jule::Ptr<_1b4b4b8cc_EnumItem> _128621_item = *it;
			{
				if (_1b4b4bc84_AutoExpr(_128621_item.ptr())) {
					(*_128621_item.alloc)._field_Value=jule::new_ptr<_1b4c47830_Value>(_1b4c47830_Value{._field_Data=jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Constant=static__1b2754295_NewStr((*_128621_item.alloc)._field_Ident)})});
					(*((*((*_128621_item.alloc)._field_Value))._field_Data))._field_Model=jule::Any((*(*(*_128621_item.alloc)._field_Value.alloc)._field_Data.alloc)._field_Constant, &__jule_any_type19);
				} else {
					jule::Ptr<_1b4c466a8_Data> _129521_d = _1b4c6b49c_evalExpr(_128513_eval, (*((*(_128621_item))._field_Value))._field_Expr);;
					if ((_129521_d == nullptr)) {
						goto _iter_next_1ab23e8ad;
					};
					if ((!(_1b4c470b0_IsConst(_129521_d.ptr())))) {
						_1b4bbd872_pushErr(_self_, (*((*(*_128621_item.alloc)._field_Value.alloc)._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
					};
					_1b4bc6380_checkAssignType(_self_, false, &((*((*((*(_128442_e))))._field_Kind))._field_Kind), &(_129521_d), (*_128621_item.alloc)._field_Token);
					(*(*_128621_item.alloc)._field_Value.alloc)._field_Data=_129521_d;
				};
			}
			_iter_next_1ab23e8ad:;
			++it;
			goto _iter_begin_1ab23e8ad;
		}
		_iter_end_1ab23e8ad:;
	};
}



inline void _1ab24a105_checkEnumItemInt(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4c483d0_Eval>* _131046_eval, jule::Ptr<_1b4b4c449_Enum>* _131064_e, jule::Ptr<_1b4c854d8_Prim>* _131075_prim, jule::Ptr<_1b4b4b8cc_EnumItem>* _131093_item, jule::U64* _1310115_n) {
	if (_1b4b4bc84_AutoExpr((*(_131093_item)).ptr())) {
		(*((*(_131093_item))))._field_Value=jule::new_ptr<_1b4c47830_Value>(_1b4c47830_Value{._field_Data=jule::new_ptr<_1b4c466a8_Data>()});
		{
			
{
				_case_begin_1ab24c4ae:;
				{
					(*((*((*((*(_131093_item))))._field_Value))._field_Data))._field_Constant=static__1b2753c12_NewU64((*(_1310115_n)));
				}
			}
			_match_end_1ab24c822:;
		};
		(*((*((*((*(_131093_item))))._field_Value))._field_Data))._field_Model=jule::Any((*(*(*((*(_131093_item))))._field_Value.alloc)._field_Data.alloc)._field_Constant, &__jule_any_type19);
	} else {
		jule::Ptr<_1b4c466a8_Data> _132517_d = _1b4c6b49c_evalExpr((*(_131046_eval)), (*((*((*(_131093_item))))._field_Value))._field_Expr);;
		if ((_132517_d == nullptr)) {
			return;;
		};
		if ((!(_1b4c470b0_IsConst(_132517_d.ptr())))) {
			_1b4bbd872_pushErr(_self_.ptr(), (*((*(*((*(_131093_item))))._field_Value.alloc)._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		_1b4bc6380_checkAssignType(_self_, false, &((*((*((*(_131064_e))))._field_Kind))._field_Kind), &(_132517_d), (*((*(_131093_item))))._field_Token);
		(*(*((*(_131093_item))))._field_Value.alloc)._field_Data=_132517_d;
		{
			
{
				_case_begin_1ab25069e:;
				{
					(*(_1310115_n))=_1b2755164_ReadU64((*((*(*((*(_131093_item))))._field_Value.alloc)._field_Data))._field_Constant.ptr());
				}
			}
			_match_end_1ab252b79:;
		};
	};
}

inline void _1ab25a159_checkEnumItemInt(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4c483d0_Eval>* _131046_eval, jule::Ptr<_1b4b4c449_Enum>* _131064_e, jule::Ptr<_1b4c854d8_Prim>* _131075_prim, jule::Ptr<_1b4b4b8cc_EnumItem>* _131093_item, jule::I64* _1310115_n) {
	if (_1b4b4bc84_AutoExpr((*(_131093_item)).ptr())) {
		(*((*(_131093_item))))._field_Value=jule::new_ptr<_1b4c47830_Value>(_1b4c47830_Value{._field_Data=jule::new_ptr<_1b4c466a8_Data>()});
		{
			
{
				_case_begin_1ab25cd93:;
				{
					(*((*((*((*(_131093_item))))._field_Value))._field_Data))._field_Constant=static__1b2753948_NewI64((*(_1310115_n)));
				}
			}
			_match_end_1ab25c832:;
		};
		(*((*((*((*(_131093_item))))._field_Value))._field_Data))._field_Model=jule::Any((*(*(*((*(_131093_item))))._field_Value.alloc)._field_Data.alloc)._field_Constant, &__jule_any_type19);
	} else {
		jule::Ptr<_1b4c466a8_Data> _132517_d = _1b4c6b49c_evalExpr((*(_131046_eval)), (*((*((*(_131093_item))))._field_Value))._field_Expr);;
		if ((_132517_d == nullptr)) {
			return;;
		};
		if ((!(_1b4c470b0_IsConst(_132517_d.ptr())))) {
			_1b4bbd872_pushErr(_self_.ptr(), (*((*(*((*(_131093_item))))._field_Value.alloc)._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		_1b4bc6380_checkAssignType(_self_, false, &((*((*((*(_131064_e))))._field_Kind))._field_Kind), &(_132517_d), (*((*(_131093_item))))._field_Token);
		(*(*((*(_131093_item))))._field_Value.alloc)._field_Data=_132517_d;
		{
			
{
				_case_begin_1ab262d87:;
				{
					(*(_1310115_n))=_1b2754dcd_ReadI64((*((*(*((*(_131093_item))))._field_Value.alloc)._field_Data))._field_Constant.ptr());
				}
			}
			_match_end_1ab262d21:;
		};
	};
}



inline void _1ab2462bb_checkEnumItemsInt1(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4c854d8_Prim>* _134544_prim, jule::Ptr<_1b4b4c449_Enum>* _134562_e) {
	jule::U64 _134613_max = static_cast<jule::U64>(0LLU);;
	{
		
{
			_case_begin_1ab247eb0:;
			{
				_134613_max=_1b274dbb8_MaxU(_1b4c85829_Str((*(_134544_prim)).ptr()));
			}
		}
		_match_end_1ab247cd4:;
	};
	jule::Ptr<_1b4c483d0_Eval> _135613_eval = _1b4bc5d1e_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1b4c9c500_Lookup_mptr_data3));;
	jule::U64 _135713_n = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_1b4b4b8cc_EnumItem> _135813_first = (*((*(_134562_e))))._field_Items[0LL];;
	_1ab24a105_checkEnumItemInt(_self_, &(_135613_eval), _134562_e, _134544_prim, &(_135813_first), &(_135713_n));
	if (((*((*(_135813_first))._field_Value))._field_Data != nullptr)) {
		{
			
{
				_case_begin_1ab2477d9:;
				{
					_135713_n=_1b2755e34_AsU64((*(*(*_135813_first.alloc)._field_Value.alloc)._field_Data.alloc)._field_Constant.ptr());
				}
			}
			_match_end_1ab253cac:;
		};
	};
	{
		auto expr = (*((*(_134562_e))))._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1ab24e967:;
		if (it != expr_end) {
			jule::Ptr<_1b4b4b8cc_EnumItem> _137021_item = *it;
			{
				if (((_1b4b4bc84_AutoExpr(_137021_item.ptr()) && (_135713_n > 0LLU)) && ((_134613_max - _135713_n) <= 0LLU))) {
					_1b4bbd872_pushErr(_self_, (*_137021_item.alloc)._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					goto _iter_end_1ab24e967;
				};
				(_135713_n)++;
				_1ab24a105_checkEnumItemInt(_self_, &(_135613_eval), _134562_e, _134544_prim, &(_137021_item), &(_135713_n));
			}
			_iter_next_1ab24e967:;
			++it;
			goto _iter_begin_1ab24e967;
		}
		_iter_end_1ab24e967:;
	};
}

inline void _1ab25685e_checkEnumItemsInt1(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4c854d8_Prim>* _134544_prim, jule::Ptr<_1b4b4c449_Enum>* _134562_e) {
	jule::I64 _134613_max = static_cast<jule::I64>(0LL);;
	{
		
{
			_case_begin_1ab258003:;
			{
				_134613_max=_1b274d8ee_MaxI(_1b4c85829_Str((*(_134544_prim)).ptr()));
			}
		}
		_match_end_1ab257ba1:;
	};
	jule::Ptr<_1b4c483d0_Eval> _135613_eval = _1b4bc5d1e_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1b4c9c500_Lookup_mptr_data3));;
	jule::I64 _135713_n = static_cast<jule::I64>(0LL);;
	jule::Ptr<_1b4b4b8cc_EnumItem> _135813_first = (*((*(_134562_e))))._field_Items[0LL];;
	_1ab25a159_checkEnumItemInt(_self_, &(_135613_eval), _134562_e, _134544_prim, &(_135813_first), &(_135713_n));
	if (((*((*(_135813_first))._field_Value))._field_Data != nullptr)) {
		{
			
{
				_case_begin_1ab259048:;
				{
					_135713_n=_1b2755b9d_AsI64((*(*(*_135813_first.alloc)._field_Value.alloc)._field_Data.alloc)._field_Constant.ptr());
				}
			}
			_match_end_1ab26341a:;
		};
	};
	{
		auto expr = (*((*(_134562_e))))._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1ab264938:;
		if (it != expr_end) {
			jule::Ptr<_1b4b4b8cc_EnumItem> _137021_item = *it;
			{
				if (((_1b4b4bc84_AutoExpr(_137021_item.ptr()) && (_135713_n > 0LL)) && ((_134613_max - _135713_n) <= 0LL))) {
					_1b4bbd872_pushErr(_self_, (*_137021_item.alloc)._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					goto _iter_end_1ab264938;
				};
				(_135713_n)++;
				_1ab25a159_checkEnumItemInt(_self_, &(_135613_eval), _134562_e, _134544_prim, &(_137021_item), &(_135713_n));
			}
			_iter_next_1ab264938:;
			++it;
			goto _iter_begin_1ab264938;
		}
		_iter_end_1ab264938:;
	};
}



inline void _1b4bcc6c7_checkEnumItemsInt(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b4c449_Enum>* _138042_e) {
	jule::Ptr<_1b4c854d8_Prim> _13819_prim = _1b4c80060_Prim((*((*((*(_138042_e))))._field_Kind))._field_Kind.ptr());;
	{
		
		if (_1b27522b5_IsSigInt((*(_13819_prim))._field_Kind)) {
			_case_begin_1ab2550bb:;
			{
				_1ab25685e_checkEnumItemsInt1(_self_, &(_13819_prim), _138042_e);
			}
		}
		else {
			_case_begin_1ab245a4b:;
			{
				_1ab2462bb_checkEnumItemsInt1(_self_, &(_13819_prim), _138042_e);
			}
		}
		_match_end_1ab2459d5:;
	};
}



inline void _1b4bcc980_checkEnumDecl(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b4c449_Enum>* _139038_e) {
	if (_1b4ad80e9_IsIgnoreIdent((*((*(_139038_e))))._field_Ident)) {
		_1b4bbd872_pushErr(_self_.ptr(), (*((*(_139038_e))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1b4bbe587_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_139038_e))), &((*((*(_139038_e))))._field_Ident), false)) {
		_1b4bbd872_pushErr(_self_, (*((*(_139038_e))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_139038_e))))._field_Ident, &__jule_any_type4)}));
		_1b4bbdbd5_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*((*(_139038_e))))._field_Items.len() == 0LL)) {
		_1b4bbd872_pushErr(_self_.ptr(), (*((*(_139038_e))))._field_Token, jule::Str::lit("enum @ have no field", 20), jule::Slice<jule::Any>::make({jule::Any((*((*(_139038_e))))._field_Ident, &__jule_any_type4)}));
		return;;
	};
	_1ab269663_checkEnumItemsDup(_self_, (*((*(_139038_e))))._field_Items);
	if (((*((*(_139038_e))))._field_Kind != nullptr)) {
		if ((!(_1b4bc44e3_checkType(_self_, &((*((*(_139038_e))))._field_Kind), jule::Trait(_self_, (jule::Trait::Type*)&_1b4c9c500_Lookup_mptr_data3))))) {
			return;;
		};
	} else {
		(*((*(_139038_e))))._field_Kind=(*(_1b4d63572_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	jule::Ptr<_1b4c854d8_Prim> _141413_t = _1b4c80060_Prim((*((*((*(_139038_e))))._field_Kind))._field_Kind.ptr());;
	if ((_141413_t == nullptr)) {
		_1b4bbd872_pushErr(_self_, (*((*(_139038_e))))._field_Token, jule::Str::lit("invalid type source", 19), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if (_1b4c88970_IsStr(_141413_t.ptr())) {
			_case_begin_1ab2712c4:;
			{
				_1b4bcba28_checkEnumItemsStr(_self_, _139038_e);
			}
		}
		else if (_1b275288c_IsInt(_1b4c85829_Str(_141413_t.ptr()))) {
			_case_begin_1ab270614:;
			{
				_1b4bcc6c7_checkEnumItemsInt(_self_, _139038_e);
			}
		}
		else {
			_case_begin_1ab27059d:;
			{
				_1b4bbd872_pushErr(_self_, (*((*(_139038_e))))._field_Token, jule::Str::lit("invalid type source", 19), jule::Slice<jule::Any>());
			}
		}
		_match_end_1ab2710b5:;
	};
}



inline void _1b4bccc38_checkTypeEnumDecl(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b4db54_TypeEnum>* _143142_e) {
	if (_1b4ad80e9_IsIgnoreIdent((*((*(_143142_e))))._field_Ident)) {
		_1b4bbd872_pushErr(_self_.ptr(), (*((*(_143142_e))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1b4bbe587_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_143142_e))), &((*((*(_143142_e))))._field_Ident), false)) {
		_1b4bbd872_pushErr(_self_, (*((*(_143142_e))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_143142_e))))._field_Ident, &__jule_any_type4)}));
		_1b4bbdbd5_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*((*(_143142_e))))._field_Items.len() == 0LL)) {
		_1b4bbd872_pushErr(_self_.ptr(), (*((*(_143142_e))))._field_Token, jule::Str::lit("enum @ have no field", 20), jule::Slice<jule::Any>::make({jule::Any((*((*(_143142_e))))._field_Ident, &__jule_any_type4)}));
		return;;
	};
	_1ab27683a_checkEnumItemsDup(_self_, (*((*(_143142_e))))._field_Items);
	{
		auto expr = &((*((*(_143142_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab2777a3:;
		if (it != expr_end) {
			jule::Ptr<_1b4b4d57c_TypeEnumItem> _144521_item = *it;
			{
				if (((*(_144521_item))._field_Kind == nullptr)) {
					_1b4bbd872_pushErr(_self_, (*_144521_item.alloc)._field_Token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
					goto _iter_next_1ab2777a3;
				};
				jule::Bool _145013_ok = _1b4bc44e3_checkType(_self_, &((*_144521_item.alloc)._field_Kind), jule::Trait(_self_, (jule::Trait::Type*)&_1b4c9c500_Lookup_mptr_data3));;
				if ((!(_145013_ok))) {
					goto _iter_next_1ab2777a3;
				};
				jule::Ptr<_1b4c854d8_Prim> _145413_p = _1b4c80060_Prim((*((*_144521_item.alloc)._field_Kind))._field_Kind.ptr());;
				if (((_145413_p != nullptr) && _1b4c88c06_IsAny(_145413_p))) {
					_1b4bbd872_pushErr(_self_, (*_144521_item.alloc)._field_Token, jule::Str::lit("the <any> type is not allowed for type-enum declarations", 56), jule::Slice<jule::Any>());
				};
			}
			_iter_next_1ab2777a3:;
			++it;
			goto _iter_begin_1ab2777a3;
		}
		_iter_end_1ab2777a3:;
	};
	if (((*((*(_143142_e))))._field_Items.len() == 1LL)) {
		jule::Ptr<_1b4b4d57c_TypeEnumItem> _146017_item = (*((*(_143142_e))))._field_Items[0LL];;
		_1b4c7c90e_TypeKind _146113_tk = _1b4c7c90e_TypeKind{._field_Kind=jule::Trait((*(_143142_e)), (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data4)};;
		if ((((*((*(_146017_item))._field_Kind))._field_Kind != nullptr) && _1b4c7d118_Equal((*((*_146017_item.alloc)._field_Kind))._field_Kind, ((jule::Ptr<_1b4c7c90e_TypeKind>)((&(_146113_tk))))))) {
			_1b4bbd872_pushErr(_self_, (*_146017_item.alloc)._field_Token, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any(_1b4b4de95_Str((*(_143142_e)).ptr()), &__jule_any_type4)}));
		};
	};
}



inline jule::Bool _1b4bccebe_checkEnumDecls(jule::Ptr<_1b4bbac37_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab282978:;
		if (it != expr_end) {
			jule::Ptr<_1b4b4c449_Enum> _147221_e = *it;
			{
				_1b4bcc980_checkEnumDecl(_self_, &(_147221_e));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1ab282978:;
			++it;
			goto _iter_begin_1ab282978;
		}
		_iter_end_1ab282978:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1b4bcd255_checkTypeEnumDecls(jule::Ptr<_1b4bbac37_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab28412d:;
		if (it != expr_end) {
			jule::Ptr<_1b4b4db54_TypeEnum> _148421_e = *it;
			{
				_1b4bccc38_checkTypeEnumDecl(_self_, &(_148421_e));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1ab28412d:;
			++it;
			goto _iter_begin_1ab28412d;
		}
		_iter_end_1ab28412d:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1b4bcd596_checkDeclGenerics(_1b4bbac37_Sema* _self_, jule::Slice<jule::Ptr<_1b4b07dc7_GenericDecl>>* _149437_generics) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = _149437_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab2855d5:;
		if (it != expr_end) {
			jule::I64 _149613_i = it - expr->begin();
			jule::Ptr<_1b4b07dc7_GenericDecl> *_149616_g = it;
			{
				if (_1b4ad80e9_IsIgnoreIdent((*((*(_149616_g))))._field_Ident)) {
					_1b4bbd872_pushErr(_self_, (*(*(_149616_g)).alloc)._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1ab2855d5;
				};
				_julec_label_1ab28697c:;
				{
					auto expr = _149437_generics;
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab28641b:;
					if (it != expr_end) {
						jule::I64 _150517_j = it - expr->begin();
						jule::Ptr<_1b4b07dc7_GenericDecl> *_150520_ct = it;
						{
							{
								
								if ((_150517_j >= _149613_i)) {
									_case_begin_1ab287a5a:;
									{
										goto _iter_end_1ab28641b;
									}
								}
								else if (((*(*(_149616_g)).alloc)._field_Ident == (*((*(_150520_ct))))._field_Ident)) {
									_case_begin_1ab287ae3:;
									{
										_1b4bbd872_pushErr(_self_, (*(*(_149616_g)).alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*(_149616_g)).alloc)._field_Ident, &__jule_any_type4)}));
										_1b4bbdbd5_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										__jule_func_result=false;
										goto _iter_end_1ab28641b;
									}
								}
								_match_end_1ab28795b:;
							};
						}
						_iter_next_1ab28641b:;
						++it;
						_150517_j++;
						goto _iter_begin_1ab28641b;
					}
					_iter_end_1ab28641b:;
				};
			}
			_iter_next_1ab2855d5:;
			++it;
			_149613_i++;
			goto _iter_begin_1ab2855d5;
		}
		_iter_end_1ab2855d5:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1b4bcd8d7_checkFnDeclParamsDup(_1b4bbac37_Sema* _self_, jule::Ptr<_1b4b36884_Fn>* _152140_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	_julec_label_1ab289d59:;
	{
		auto expr = &((*((*(_152140_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab28a145:;
		if (it != expr_end) {
			jule::I64 _152413_i = it - expr->begin();
			jule::Ptr<_1b4b34db0_Param> *_152416_p = it;
			{
				{
					auto expr = &((*((*(_152140_f))))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab28ad27:;
					if (it != expr_end) {
						jule::Ptr<_1b4b07dc7_GenericDecl> *_152620_g = it;
						{
							if (((*((*(_152416_p))))._field_Ident == (*((*(_152620_g))))._field_Ident)) {
								__jule_func_result=false;
								_1b4bbd872_pushErr(_self_, (*(*(_152416_p)).alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*(_152416_p)).alloc)._field_Ident, &__jule_any_type4)}));
								_1b4bbdbd5_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
								goto _iter_next_1ab28a145;
							};
						}
						_iter_next_1ab28ad27:;
						++it;
						goto _iter_begin_1ab28ad27;
					}
					_iter_end_1ab28ad27:;
				};
				_julec_label_1ab28c664:;
				{
					auto expr = &((*((*(_152140_f))))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab28b300:;
					if (it != expr_end) {
						jule::I64 _153617_j = it - expr->begin();
						jule::Ptr<_1b4b34db0_Param> *_153620_jp = it;
						{
							{
								
								if ((_153617_j >= _152413_i)) {
									_case_begin_1ab28d632:;
									{
										goto _iter_end_1ab28b300;
									}
								}
								else if (_1b4ad80e9_IsIgnoreIdent((*(*(_152416_p)).alloc)._field_Ident) || _1b4ad80e9_IsIgnoreIdent((*((*(_153620_jp))))._field_Ident) || _1b4ad83b3_IsAnonIdent((*(*(_152416_p)).alloc)._field_Ident) || _1b4ad83b3_IsAnonIdent((*(*(_153620_jp)).alloc)._field_Ident)) {
									_case_begin_1ab28d6ba:;
									{
										goto _iter_end_1ab28b300;
									}
								}
								else if (((*(*(_152416_p)).alloc)._field_Ident == (*((*(_153620_jp))))._field_Ident)) {
									_case_begin_1ab28d731:;
									{
										__jule_func_result=false;
										_1b4bbd872_pushErr(_self_, (*(*(_152416_p)).alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*(_152416_p)).alloc)._field_Ident, &__jule_any_type4)}));
										_1b4bbdbd5_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										goto _iter_next_1ab28a145;
									}
								}
								_match_end_1ab28d4de:;
							};
						}
						_iter_next_1ab28b300:;
						++it;
						_153617_j++;
						goto _iter_begin_1ab28b300;
					}
					_iter_end_1ab28b300:;
				};
			}
			_iter_next_1ab28a145:;
			++it;
			_152413_i++;
			goto _iter_begin_1ab28a145;
		}
		_iter_end_1ab28a145:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1b4bcdc28_checkFnDeclResultDup(_1b4bbac37_Sema* _self_, jule::Ptr<_1b4b36884_Fn>* _155840_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	if (_1b4b36d07_IsVoid((*(_155840_f)).ptr())) {
		return __jule_func_result;;
	};
	{
		auto expr = &((*(*((*(_155840_f))))._field_Result.alloc)._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab292218:;
		if (it != expr_end) {
			jule::I64 _156513_i = it - expr->begin();
			jule::Ptr<_1b4ad5712_Token> *_156516_v = it;
			{
				if ((_1b4ad80e9_IsIgnoreIdent((*((*(_156516_v))))._field_Kind) || _1b4ad83b3_IsAnonIdent((*(*(_156516_v)).alloc)._field_Kind))) {
					goto _iter_next_1ab292218;
				};
				{
					auto expr = &((*((*(_155840_f))))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab2937ad:;
					if (it != expr_end) {
						jule::Ptr<_1b4b07dc7_GenericDecl> *_157020_g = it;
						{
							if (((*(*(_156516_v)).alloc)._field_Kind == (*((*(_157020_g))))._field_Ident)) {
								goto _julec_label_1ab29c476;
							};
						}
						_iter_next_1ab2937ad:;
						++it;
						goto _iter_begin_1ab2937ad;
					}
					_iter_end_1ab2937ad:;
				};
				{
					auto expr = &((*((*(_155840_f))))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab294c21:;
					if (it != expr_end) {
						jule::Ptr<_1b4b34db0_Param> *_157620_p = it;
						{
							if (((*(*(_156516_v)).alloc)._field_Kind == (*((*(_157620_p))))._field_Ident)) {
								goto _julec_label_1ab29c476;
							};
						}
						_iter_next_1ab294c21:;
						++it;
						goto _iter_begin_1ab294c21;
					}
					_iter_end_1ab294c21:;
				};
				_julec_label_1ab2959ad:;
				{
					auto expr = &((*((*((*(_155840_f))))._field_Result))._field_Idents);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab29b2cc:;
					if (it != expr_end) {
						jule::I64 _158417_j = it - expr->begin();
						jule::Ptr<_1b4ad5712_Token> *_158420_jv = it;
						{
							{
								
								if ((_158417_j >= _156513_i)) {
									_case_begin_1ab29bd49:;
									{
										goto _iter_end_1ab29b2cc;
									}
								}
								else if (((*((*(_158420_jv))))._field_Kind == (*(*(_156516_v)).alloc)._field_Kind)) {
									_case_begin_1ab29bdd2:;
									{
										goto _julec_label_1ab29c476;
									}
								}
								_match_end_1ab29bc4a:;
							};
						}
						_iter_next_1ab29b2cc:;
						++it;
						_158417_j++;
						goto _iter_begin_1ab29b2cc;
					}
					_iter_end_1ab29b2cc:;
				};
				goto _iter_next_1ab292218;
				_julec_label_1ab29c476:;
				_1b4bbd872_pushErr(_self_, (*(_156516_v)), jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*(_156516_v)).alloc)._field_Kind, &__jule_any_type4)}));
				_1b4bbdbd5_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
				__jule_func_result=false;
			}
			_iter_next_1ab292218:;
			++it;
			_156513_i++;
			goto _iter_begin_1ab292218;
		}
		_iter_end_1ab292218:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1b4bce069_checkFnVariadicParam(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b36884_Fn>* _160345_f) {
	if (((*((*(_160345_f))))._field_Params.len() == 0LL)) {
		return false;;
	};
	jule::Ptr<_1b4b34db0_Param> _160713_param = (*((*(_160345_f))))._field_Params[((*((*(_160345_f))))._field_Params.len() - 1LL)];;
	if (((*(_160713_param))._field_Variadic && (*_160713_param.alloc)._field_Reference)) {
		_1b4bbd872_pushErr(_self_.ptr(), (*_160713_param.alloc)._field_Token, jule::Str::lit("variadic storage cannot be reference", 36), jule::Slice<jule::Any>());
	};
	return true;;
}



inline void _1b4bce322_checkFnDeclPrototype(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b36884_Fn>* _161645_f) {
	if (((*((*(_161645_f))))._field_Exceptional && (*((*(_161645_f))))._field_Binded)) {
		_1b4bbd872_pushErr(_self_.ptr(), (*((*(_161645_f))))._field_Token, jule::Str::lit("binded defines cannot be exceptional", 36), jule::Slice<jule::Any>());
		return;;
	};
	if ((*((*(_161645_f))))._field_Exceptional) {
		if (_1b4b37324_IsEntryPoint((*(_161645_f)).ptr())) {
			_1b4bbd872_pushErr(_self_, (*((*(_161645_f))))._field_Token, jule::Str::lit("entry point cannot be exceptional", 33), jule::Slice<jule::Any>());
		} else if (_1b4b375aa_IsInit((*(_161645_f)).ptr())) {
			_1b4bbd872_pushErr(_self_, (*((*(_161645_f))))._field_Token, jule::Str::lit("initializer function cannot be exceptional", 42), jule::Slice<jule::Any>());
		};
	};
	{
		
		if ((!(_1b4bcd596_checkDeclGenerics(_self_, &((*((*(_161645_f))))._field_Generics))))) {
			_case_begin_1ab2a4406:;
		}
		else if ((!(_1b4bcd8d7_checkFnDeclParamsDup(_self_, _161645_f)))) {
			_case_begin_1ab2a446c:;
		}
		else if ((!(_1b4bcdc28_checkFnDeclResultDup(_self_, _161645_f)))) {
			_case_begin_1ab2a44d3:;
		}
		else if ((!(_1b4bce069_checkFnVariadicParam(_self_, _161645_f)))) {
			_case_begin_1ab2a4549:;
		}
		_match_end_1ab2a29dc:;
	};
}



inline jule::Bool _1b4bce7c8_catchTraitInheritCycle(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b49c3d_Trait> _163842_t1, jule::Ptr<_1b4b49c3d_Trait> _163858_t2, _1cb1d27a9_StrBuilder* _163875_message) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*_163858_t2.alloc)._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab2a6a8a:;
		if (it != expr_end) {
			jule::Ptr<_1b4c84ad1_TypeSymbol> _164021_i = *it;
			{
				if (((*(_164021_i))._field_Kind == nullptr)) {
					goto _iter_next_1ab2a6a8a;
				};
				jule::Ptr<_1b4b49c3d_Trait> _164417_t3 = _1b4c81869_Trait((*_164021_i.alloc)._field_Kind.ptr());;
				if ((_163842_t1 == _164417_t3)) {
					_1b4bd4558_pushCycleError(_self_.ptr(), &((*(_163858_t2))._field_Ident), &((*(_164417_t3))._field_Ident), _163875_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if ((!(_1b4bce7c8_catchTraitInheritCycle(_self_, _163842_t1, _164417_t3, _163875_message)))) {
					_1b4bd4558_pushCycleError(_self_, &((*_163858_t2.alloc)._field_Ident), &((*_164417_t3.alloc)._field_Ident), _163875_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1ab2a6a8a:;
			++it;
			goto _iter_begin_1ab2a6a8a;
		}
		_iter_end_1ab2a6a8a:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1b4bceb19__checkTraitDeclInherits(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b49c3d_Trait>* _165748_t) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_165748_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab2aa30d:;
		if (it != expr_end) {
			jule::I64 _165914_i = it - expr->begin();
			jule::Ptr<_1b4c84ad1_TypeSymbol> _165921_it = *it;
			{
				if ((!(_1b4bc44e3_checkType(_self_, &(_165921_it), jule::Trait(_self_, (jule::Trait::Type*)&_1b4c9c500_Lookup_mptr_data3))))) {
					__jule_func_result=false;
					goto _iter_next_1ab2aa30d;
				};
				jule::Ptr<_1b4b49c3d_Trait> _166417_t2 = _1b4c81869_Trait((*(_165921_it))._field_Kind.ptr());;
				if ((_166417_t2 == nullptr)) {
					_1b4bbd872_pushErr(_self_, (*((*_165921_it.alloc)._field_Decl))._field_Token, jule::Str::lit("trait @ cannot implement @, type should be trait", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_165748_t))))._field_Ident, &__jule_any_type4),jule::Any(_1b4c7ccc7_Str((*_165921_it.alloc)._field_Kind), &__jule_any_type4)}));
					__jule_func_result=false;
					goto _iter_next_1ab2aa30d;
				};
				{
					auto expr = &((*((*(_165748_t))))._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab2ad762:;
					if (it != expr_end) {
						jule::I64 _167017_j = it - expr->begin();
						jule::Ptr<_1b4c84ad1_TypeSymbol> _167020_it2 = *it;
						{
							if ((_167017_j >= _165914_i)) {
								goto _iter_end_1ab2ad762;
							};
							if ((((*(_167020_it2))._field_Kind != nullptr) && _1b4c7d118_Equal((*_165921_it.alloc)._field_Kind, (*_167020_it2.alloc)._field_Kind))) {
								_1b4bbd872_pushErr(_self_, (*(*_165921_it.alloc)._field_Decl.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_166417_t2))._field_Ident, &__jule_any_type4)}));
								__jule_func_result=false;
								goto _iter_end_1ab2ad762;
							};
						}
						_iter_next_1ab2ad762:;
						++it;
						_167017_j++;
						goto _iter_begin_1ab2ad762;
					}
					_iter_end_1ab2ad762:;
				};
				if (((*(_165748_t)) == _166417_t2)) {
					_1b4bbd872_pushErr(_self_, (*(*_165921_it.alloc)._field_Decl.alloc)._field_Token, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_165748_t))))._field_Ident, &__jule_any_type4)}));
					__jule_func_result=false;
				} else {
					_1cb1d27a9_StrBuilder _168421_message = static__1cb1d2a73_New(64LL);;
					__jule_func_result=(__jule_func_result && _1b4bce7c8_catchTraitInheritCycle(_self_, (*(_165748_t)), _166417_t2, &(_168421_message)));
					if ((_1cb1dc165_Len(&_168421_message) > 0LL)) {
						jule::Str _168725_errMsg = _1cb1dbbd1_Str(&_168421_message);;
						_1cb1dbdce_Clear(&_168421_message);
						_1b4bd4558_pushCycleError(_self_, &((*((*(_165748_t))))._field_Ident), &((*(_166417_t2))._field_Ident), &(_168421_message));
						_168725_errMsg+=_1cb1dbbd1_Str(&_168421_message);
						_1b4bbd872_pushErr(_self_, (*(*_165921_it.alloc)._field_Decl.alloc)._field_Token, jule::Str::lit("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_168725_errMsg, &__jule_any_type4)}));
					};
				};
			}
			_iter_next_1ab2aa30d:;
			++it;
			_165914_i++;
			goto _iter_begin_1ab2aa30d;
		}
		_iter_end_1ab2aa30d:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1b4bcedc2_checkTraitDeclInherits(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b49c3d_Trait>* _169847_t) {
	{
		auto expr = &((*((*(_169847_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab2b513c:;
		if (it != expr_end) {
			jule::I64 _169914_i = it - expr->begin();
			jule::Ptr<_1b4c84ad1_TypeSymbol> _169921_it = *it;
			{
				jule::Ptr<_1b4b49c3d_Trait> _170017_t1 = _1b4c81869_Trait((*(_169921_it))._field_Kind.ptr());;
				{
					auto expr = &((*((*(_169847_t))))._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab2b6649:;
					if (it != expr_end) {
						jule::I64 _170118_j = it - expr->begin();
						jule::Ptr<_1b4c84ad1_TypeSymbol> _170125_it2 = *it;
						{
							if ((_170118_j == _169914_i)) {
								goto _iter_next_1ab2b6649;
							};
							jule::Ptr<_1b4b49c3d_Trait> _170521_t2 = _1b4c81869_Trait((*(_170125_it2))._field_Kind);;
							{
								auto expr = &((*(_170017_t1))._field_Methods);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1ab2b7dba:;
								if (it != expr_end) {
									jule::Ptr<_1b4b36884_Fn> _170629_t1m = *it;
									{
										jule::Ptr<_1b4b36884_Fn> _170725_t2m = _1b4b4a8dc_FindMethod(_170521_t2.ptr(), (*(_170629_t1m))._field_Ident);;
										if ((_170725_t2m == nullptr)) {
											goto _iter_next_1ab2b7dba;
										};
										jule::Ptr<_1b4b39865_FnIns> _171121_t1f = _1b4bc83a4_getTraitCheckFnKind(_self_, &(_170629_t1m));;
										jule::Ptr<_1b4b39865_FnIns> _171221_t2f = _1b4bc83a4_getTraitCheckFnKind(_self_, &(_170725_t2m));;
										if ((!(_1b4b3a7cd_equalTrait(_171121_t1f, &(_171221_t2f))))) {
											_1b4bbd872_pushErr(_self_, (*((*_169921_it.alloc)._field_Decl))._field_Token, jule::Str::lit("trait @ inherits trait @, but same identifiers implemented different;\n       @\n       @", 87), jule::Slice<jule::Any>::make({jule::Any((*((*(_169847_t))))._field_Ident, &__jule_any_type4),jule::Any((*_170521_t2.alloc)._field_Ident, &__jule_any_type4),jule::Any(_1b4b3b713_GetKindStr(_171121_t1f, true), &__jule_any_type4),jule::Any(_1b4b3b713_GetKindStr(_171221_t2f.ptr(), true), &__jule_any_type4)}));
											return;;
										};
									}
									_iter_next_1ab2b7dba:;
									++it;
									goto _iter_begin_1ab2b7dba;
								}
								_iter_end_1ab2b7dba:;
							};
						}
						_iter_next_1ab2b6649:;
						++it;
						_170118_j++;
						goto _iter_begin_1ab2b6649;
					}
					_iter_end_1ab2b6649:;
				};
			}
			_iter_next_1ab2b513c:;
			++it;
			_169914_i++;
			goto _iter_begin_1ab2b513c;
		}
		_iter_end_1ab2b513c:;
	};
}



inline void _1b4bd017a_checkTraitDeclMethod(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b36884_Fn>* _172345_f) {
	if (_1b4ad80e9_IsIgnoreIdent((*((*(_172345_f))))._field_Ident)) {
		_1b4bbd872_pushErr(_self_.ptr(), (*((*(_172345_f))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1b4ad83b3_IsAnonIdent((*((*(_172345_f))))._field_Ident)) {
		_1b4bbd872_pushErr(_self_.ptr(), (*((*(_172345_f))))._field_Token, jule::Str::lit("anonymous functions are not allowed in this scope", 49), jule::Slice<jule::Any>());
	};
	(*((*(_172345_f))))._field_sema=_self_;
	_1b4bce322_checkFnDeclPrototype(_self_, _172345_f);
	jule::Ptr<_1b4b39865_FnIns> _173113_ins = _1b4b380e4_instance((*(_172345_f)));;
	_1b4bc9806_reloadFnInsTypes(_self_, _173113_ins);
	(*(_173113_ins))._field_reloaded=true;
	_1b4b38402_appendInstance((*(_172345_f)).ptr(), &(_173113_ins));
}



inline void _1b4bd0433_checkTraitDeclMethods(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b49c3d_Trait>* _173746_t) {
	{
		auto expr = &((*((*(_173746_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab2beee3:;
		if (it != expr_end) {
			jule::I64 _173814_i = it - expr->begin();
			jule::Ptr<_1b4b36884_Fn> _173821_f = *it;
			{
				_1b4bd017a_checkTraitDeclMethod(_self_, &(_173821_f));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					return;;
				};
				if ((_1b4b4b06e_findMethodInherit((*(_173746_t)).ptr(), &((*(_173821_f))._field_Ident)) != nullptr)) {
					_1b4bbd872_pushErr(_self_, (*_173821_f.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*_173821_f.alloc)._field_Ident, &__jule_any_type4)}));
					_1b4bbdbd5_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
					goto _iter_next_1ab2beee3;
				};
				_julec_label_1ab2c190c:;
				{
					auto expr = &((*((*(_173746_t))))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab2c2ee6:;
					if (it != expr_end) {
						jule::I64 _175417_j = it - expr->begin();
						jule::Ptr<_1b4b36884_Fn> _175420_jf = *it;
						{
							{
								
								if ((_175417_j >= _173814_i)) {
									_case_begin_1ab2c3a63:;
									{
										goto _iter_end_1ab2c2ee6;
									}
								}
								else if (((*_173821_f.alloc)._field_Ident == (*(_175420_jf))._field_Ident)) {
									_case_begin_1ab2c3aeb:;
									{
										_1b4bbd872_pushErr(_self_, (*_173821_f.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*_173821_f.alloc)._field_Ident, &__jule_any_type4)}));
										_1b4bbdbd5_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										goto _iter_end_1ab2c2ee6;
									}
								}
								_match_end_1ab2c3964:;
							};
						}
						_iter_next_1ab2c2ee6:;
						++it;
						_175417_j++;
						goto _iter_begin_1ab2c2ee6;
					}
					_iter_end_1ab2c2ee6:;
				};
			}
			_iter_next_1ab2beee3:;
			++it;
			_173814_i++;
			goto _iter_begin_1ab2beee3;
		}
		_iter_end_1ab2beee3:;
	};
}



inline void _1b4bd06db_checkTraitDecl(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b49c3d_Trait>* _177339_t) {
	if (_1b4ad80e9_IsIgnoreIdent((*((*(_177339_t))))._field_Ident)) {
		_1b4bbd872_pushErr(_self_.ptr(), (*((*(_177339_t))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1b4bbe587_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_177339_t))), &((*((*(_177339_t))))._field_Ident), false)) {
		_1b4bbd872_pushErr(_self_, (*((*(_177339_t))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_177339_t))))._field_Ident, &__jule_any_type4)}));
		_1b4bbdbd5_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1b4bcedc2_checkTraitDeclInherits(_self_, _177339_t);
	_1b4bd0433_checkTraitDeclMethods(_self_, _177339_t);
}



inline jule::Bool _1b4bd0972_checkTraitDecls(jule::Ptr<_1b4bbac37_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab2c8e53:;
		if (it != expr_end) {
			jule::Ptr<_1b4b49c3d_Trait> _178721_t = *it;
			{
				_1b4bd06db_checkTraitDecl(_self_, &(_178721_t));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1ab2c8e53:;
			++it;
			goto _iter_begin_1ab2c8e53;
		}
		_iter_end_1ab2c8e53:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1b4bd0d6d_checkTraitImplMethods(_1b4bbac37_Sema* _self_, jule::Ptr<_1b4b49c3d_Trait>* _179745_base, jule::Ptr<_1b4b733a4_Impl>* _179760_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_179760_ipl))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab2ca916:;
		if (it != expr_end) {
			jule::Ptr<_1b4b36884_Fn> *_179916_f = it;
			{
				if ((_1b4b4a8dc_FindMethod((*(_179745_base)).ptr(), (*((*(_179916_f))))._field_Ident) == nullptr)) {
					_1b4bbd872_pushErr(_self_, (*(*(_179916_f)).alloc)._field_Token, jule::Str::lit("undefined identifier: trait @ has no define @", 45), jule::Slice<jule::Any>::make({jule::Any((*((*(_179745_base))))._field_Ident, &__jule_any_type4),jule::Any((*(*(_179916_f)).alloc)._field_Ident, &__jule_any_type4)}));
					__jule_func_result=false;
				};
			}
			_iter_next_1ab2ca916:;
			++it;
			goto _iter_begin_1ab2ca916;
		}
		_iter_end_1ab2ca916:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1b4bd1269_implToStruct(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b218b3_Struct>* _180837_dest, jule::Ptr<_1b4b733a4_Impl>* _180857_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_180857_ipl))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab2cd133:;
		if (it != expr_end) {
			jule::Ptr<_1b4b36884_Fn> _181221_f = *it;
			{
				if (((_1b4b2252e_FindMethod((*(_180837_dest)).ptr(), (*(_181221_f))._field_Ident, (*_181221_f.alloc)._field_Statically) != nullptr) || (_1b4b22bb1_FindField((*(_180837_dest)).ptr(), (*_181221_f.alloc)._field_Ident) != nullptr))) {
					_1b4bbd872_pushErr(_self_.ptr(), (*_181221_f.alloc)._field_Token, jule::Str::lit("identifier duplication: struct @ already have define @", 54), jule::Slice<jule::Any>::make({jule::Any((*((*(_180837_dest))))._field_Ident, &__jule_any_type4),jule::Any((*_181221_f.alloc)._field_Ident, &__jule_any_type4)}));
					__jule_func_result=false;
					goto _iter_next_1ab2cd133;
				};
				if ((((*((*(_180837_dest))))._field_Generics.len() > 0LL) && ((*_181221_f.alloc)._field_Generics.len() > 0LL))) {
					{
						auto expr = &((*_181221_f.alloc)._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ab2d1026:;
						if (it != expr_end) {
							jule::Ptr<_1b4b07dc7_GenericDecl> _182024_fg = *it;
							{
								{
									auto expr = &((*((*(_180837_dest))))._field_Generics);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1ab2d1972:;
									if (it != expr_end) {
										jule::Ptr<_1b4b07dc7_GenericDecl> _182128_dg = *it;
										{
											if (((*(_182024_fg))._field_Ident == (*(_182128_dg))._field_Ident)) {
												_1b4bbd872_pushErr(_self_, (*_182024_fg.alloc)._field_Token, jule::Str::lit("methods cannot have same generic identifier with owner same time", 64), jule::Slice<jule::Any>());
												__jule_func_result=false;
											};
										}
										_iter_next_1ab2d1972:;
										++it;
										goto _iter_begin_1ab2d1972;
									}
									_iter_end_1ab2d1972:;
								};
							}
							_iter_next_1ab2d1026:;
							++it;
							goto _iter_begin_1ab2d1026;
						}
						_iter_end_1ab2d1026:;
					};
				};
				_1b4bbe8ea_checkDirectives(_self_, &((*_181221_f.alloc)._field_Directives), jule::Any(_181221_f, &__jule_any_type63));
				(*_181221_f.alloc)._field_sema=_self_;
				(*_181221_f.alloc)._field_Owner=(*(_180837_dest));
				{ jule::Slice<jule::Ptr<_1b4b36884_Fn>> &__jule_push_dest = (*((*(_180837_dest))))._field_Methods; __jule_push_dest.push(_181221_f); };
			}
			_iter_next_1ab2cd133:;
			++it;
			goto _iter_begin_1ab2cd133;
		}
		_iter_end_1ab2cd133:;
	};
	{
		auto expr = &((*((*(_180857_ipl))))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab2cd50c:;
		if (it != expr_end) {
			jule::Ptr<_1b4bddaa1_Var> _183721_v = *it;
			{
				;
				if (((_1b4b2252e_FindMethod((*(_180837_dest)).ptr(), (*(_183721_v))._field_Ident, true) != nullptr) || (_1b4b22870_FindStatic((*(_180837_dest)).ptr(), (*_183721_v.alloc)._field_Ident) != nullptr))) {
					_1b4bbd872_pushErr(_self_, (*_183721_v.alloc)._field_Token, jule::Str::lit("identifier duplication: struct @ already have define @", 54), jule::Slice<jule::Any>::make({jule::Any((*((*(_180837_dest))))._field_Ident, &__jule_any_type4),jule::Any((*_183721_v.alloc)._field_Ident, &__jule_any_type4)}));
					__jule_func_result=false;
					goto _iter_next_1ab2cd50c;
				};
				{ jule::Slice<jule::Ptr<_1b4bddaa1_Var>> &__jule_push_dest = (*((*(_180837_dest))))._field_Statics; __jule_push_dest.push(_183721_v); };
			}
			_iter_next_1ab2cd50c:;
			++it;
			goto _iter_begin_1ab2cd50c;
		}
		_iter_end_1ab2cd50c:;
	};
	return __jule_func_result;;
}



inline void _1b4bd1522_implTrait(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b733a4_Impl>* _185034_decl) {
	jule::Ptr<_1b4c7c90e_TypeKind> _185113_base_t = _1b4bc512b_selectType(_self_, &((*((*(_185034_decl))))._field_Base));;
	if ((_185113_base_t == nullptr)) {
		return;;
	};
	jule::Ptr<_1b4b49c3d_Trait> _185513_base = _1b4c81869_Trait(_185113_base_t.ptr());;
	if ((_185513_base == nullptr)) {
		_1b4bbd872_pushErr(_self_, (*((*((*(_185034_decl))))._field_Base))._field_Token, jule::Str::lit("invalid base type for impl: @", 29), jule::Slice<jule::Any>::make({jule::Any(_1b4c7ccc7_Str(_185113_base_t.ptr()), &__jule_any_type4)}));
		_1b4bbdbd5_pushSuggestion(_self_, jule::Str::lit("expected trait, use a trait", 27), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1b4c7c90e_TypeKind> _186213_destT = _1b4bc512b_selectType(_self_, &((*((*(_185034_decl))))._field_Dest));;
	if ((_186213_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1b4b24641_StructIns> _186613_destS = _1b4c815d3_Struct(_186213_destT.ptr());;
	if ((_186613_destS == nullptr)) {
		_1b4bbd872_pushErr(_self_, (*((*((*(_185034_decl))))._field_Dest))._field_Token, jule::Str::lit("invalid destination type for impl: @", 36), jule::Slice<jule::Any>::make({jule::Any(_1b4c7ccc7_Str(_186213_destT.ptr()), &__jule_any_type4)}));
		_1b4bbdbd5_pushSuggestion(_self_, jule::Str::lit("expected structure, use a structure", 35), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1b4b218b3_Struct> _187313_dest = (*(_186613_destS))._field_Decl;;
	if ((_1b4adb64c_Dir((*((*(_187313_dest))._field_Token))._field_File.ptr()) != _1b4adb64c_Dir((*((*_self_.alloc)._field_file))._field_File.ptr()))) {
		_1b4bbd872_pushErr(_self_, (*(*((*(_185034_decl))))._field_Dest.alloc)._field_Token, jule::Str::lit("illegal implementation via definition from out of package", 57), jule::Slice<jule::Any>());
		return;;
	};
	_1b4bdc286_pushImplemented(_185513_base, &(_187313_dest));
	_1b4bdc572_pushImplements(&(_187313_dest), _185513_base);
	if (((*((*(_185034_decl))))._field_Statics.len() > 0LL)) {
		_1b4bbd872_pushErr(_self_, (*((*((*(_185034_decl))))._field_Statics[0LL]))._field_Token, jule::Str::lit("trait implementations cannot implement static field", 51), jule::Slice<jule::Any>());
	};
	{
		
		if ((!(_1b4bd0d6d_checkTraitImplMethods(_self_, &(_185513_base), _185034_decl)))) {
			_case_begin_1ab2e0b18:;
		}
		else if ((!(_1b4bd1269_implToStruct(_self_, &(_187313_dest), _185034_decl)))) {
			_case_begin_1ab2e0ba1:;
		}
		_match_end_1ab2de881:;
	};
}



inline void _1b4bd17ca_implStruct(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b733a4_Impl>* _189335_decl) {
	jule::Ptr<_1b4c7c90e_TypeKind> _189413_destT = _1b4bc512b_selectType(_self_, &((*((*(_189335_decl))))._field_Dest));;
	if ((_189413_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1b4b24641_StructIns> _189813_destS = _1b4c815d3_Struct(_189413_destT.ptr());;
	if ((_189813_destS == nullptr)) {
		_1b4bbd872_pushErr(_self_, (*((*((*(_189335_decl))))._field_Dest))._field_Token, jule::Str::lit("invalid destination type for impl: @", 36), jule::Slice<jule::Any>::make({jule::Any(_1b4c7ccc7_Str(_189413_destT.ptr()), &__jule_any_type4)}));
		_1b4bbdbd5_pushSuggestion(_self_, jule::Str::lit("expected structure, use a structure", 35), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1b4b218b3_Struct> _190513_dest = (*(_189813_destS))._field_Decl;;
	if ((_1b4adb64c_Dir((*((*(_190513_dest))._field_Token))._field_File.ptr()) != _1b4adb64c_Dir((*((*_self_.alloc)._field_file))._field_File.ptr()))) {
		_1b4bbd872_pushErr(_self_, (*(*((*(_189335_decl))))._field_Dest.alloc)._field_Token, jule::Str::lit("illegal implementation via definition from out of package", 57), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if ((!(_1b4bd1269_implToStruct(_self_, &(_190513_dest), _189335_decl)))) {
			_case_begin_1ab2e66e0:;
		}
		_match_end_1ab2e6503:;
	};
}



inline void _1b4bd1a83_implImpl(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b733a4_Impl>* _191733_decl) {
	{
		
		if (_1b4b7376c_IsTraitImpl((*(_191733_decl)).ptr())) {
			_case_begin_1ab2e725c:;
			{
				_1b4bd1522_implTrait(_self_, _191733_decl);
			}
		}
		else if (_1b4b73a03_IsStructImpl((*(_191733_decl)).ptr())) {
			_case_begin_1ab2e7306:;
			{
				_1b4bd17ca_implStruct(_self_, _191733_decl);
			}
		}
		_match_end_1ab2e714c:;
	};
}



inline void _1b4bd1de6_checkVarDecl(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4bddaa1_Var>* _192837_decl, jule::Trait _192853_l) {
	if (_1b4ad80e9_IsIgnoreIdent((*((*(_192837_decl))))._field_Ident)) {
		_1b4bbd872_pushErr(_self_.ptr(), (*((*(_192837_decl))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	if (_1b4bde211_IsTypeInferred((*(_192837_decl)).ptr())) {
		if ((!(_1b4bdde7a_IsInitialized((*(_192837_decl)).ptr())))) {
			_1b4bbd872_pushErr(_self_, (*((*(_192837_decl))))._field_Token, jule::Str::lit("type inferred declarations should have a initializer expression", 63), jule::Slice<jule::Any>());
		};
	} else {
		_1b4bc44e3_checkType(_self_, &((*((*(_192837_decl))))._field_Kind), _192853_l);
	};
	if ((*((*(_192837_decl))))._field_Reference) {
		if ((*((*(_192837_decl))))._field_Constant) {
			_1b4bbd872_pushErr(_self_, (*((*(_192837_decl))))._field_Token, jule::Str::lit("references cannot be constant", 29), jule::Slice<jule::Any>());
		};
		if ((*((*(_192837_decl))))._field_Statically) {
			_1b4bbd872_pushErr(_self_, (*((*(_192837_decl))))._field_Token, jule::Str::lit("static variables cannot be reference", 36), jule::Slice<jule::Any>());
		};
	};
	if ((!(_1b4bdde7a_IsInitialized((*(_192837_decl)).ptr())))) {
		if ((*((*(_192837_decl))))._field_Constant) {
			_1b4bbd872_pushErr(_self_, (*((*(_192837_decl))))._field_Token, jule::Str::lit("missing expression for constant variable initialization", 55), jule::Slice<jule::Any>());
		};
		if ((*((*(_192837_decl))))._field_Statically) {
			_1b4bbd872_pushErr(_self_, (*((*(_192837_decl))))._field_Token, jule::Str::lit("static variables must be have initialize expression", 51), jule::Slice<jule::Any>());
		};
		if ((*((*(_192837_decl))))._field_Reference) {
			_1b4bbd872_pushErr(_self_, (*((*(_192837_decl))))._field_Token, jule::Str::lit("reference variables must be have lvalue initialize expression", 61), jule::Slice<jule::Any>());
		};
	};
}



inline void _1b4bd219e_checkGlobalVarDecl(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4bddaa1_Var>* _196543_decl) {
	if (_1b4bbe587_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_196543_decl))), &((*((*(_196543_decl))))._field_Ident), (*((*(_196543_decl))))._field_Binded)) {
		_1b4bbd872_pushErr(_self_, (*((*(_196543_decl))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_196543_decl))))._field_Ident, &__jule_any_type4)}));
		_1b4bbdbd5_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*((*(_196543_decl))))._field_Binded && (*((*(_196543_decl))))._field_Constant)) {
		_1b4bbd872_pushErr(_self_, (*((*(_196543_decl))))._field_Token, jule::Str::lit("binded variables cannot be constant", 35), jule::Slice<jule::Any>());
	};
	if ((((!((*((*(_196543_decl))))._field_Binded)) && (!((*((*(_196543_decl))))._field_Constant))) && (!((*((*(_196543_decl))))._field_Statically)))) {
		_1b4bbd872_pushErr(_self_, (*((*(_196543_decl))))._field_Token, jule::Str::lit("global variables must be static", 31), jule::Slice<jule::Any>());
		_1b4bbdbd5_pushSuggestion(_self_, jule::Str::lit("use \"static\" keyword to define", 30), jule::Slice<jule::Any>());
	};
	_1b4bbe8ea_checkDirectives(_self_, &((*((*(_196543_decl))))._field_Directives), jule::Any((*(_196543_decl)), &__jule_any_type8));
	_1b4bd1de6_checkVarDecl(_self_, _196543_decl, jule::Trait(_self_, (jule::Trait::Type*)&_1b4c9c500_Lookup_mptr_data3));
}



inline jule::Bool _1b4bd2435_checkGlobalDecls(jule::Ptr<_1b4bbac37_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab3053d0:;
		if (it != expr_end) {
			jule::Ptr<_1b4bddaa1_Var> _198321_decl = *it;
			{
				_1b4bd219e_checkGlobalVarDecl(_self_, &(_198321_decl));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1ab3053d0:;
			++it;
			goto _iter_begin_1ab3053d0;
		}
		_iter_end_1ab3053d0:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1b4bd2831_checkStructTraitImpl(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b218b3_Struct>* _199345_strct, jule::Ptr<_1b4b49c3d_Trait>* _199366_trt) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_199366_trt))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab306c94:;
		if (it != expr_end) {
			jule::Ptr<_1b4b36884_Fn> _199421_tf = *it;
			{
				jule::Bool _199517_exist = false;;
				jule::Ptr<_1b4b36884_Fn> _199617_sf = _1b4b2252e_FindMethod((*(_199345_strct)).ptr(), (*(_199421_tf))._field_Ident, (*_199421_tf.alloc)._field_Statically);;
				jule::Ptr<_1b4b39865_FnIns> _199713_tfK = _1b4bc83a4_getTraitCheckFnKind(_self_, &(_199421_tf));;
				if ((_199617_sf != nullptr)) {
					jule::Ptr<_1b4b39865_FnIns> _199921_sfK = _1b4bc83a4_getTraitCheckFnKind(_self_, &(_199617_sf));;
					_199517_exist=_1b4b3a7cd_equalTrait(_199713_tfK, &(_199921_sfK));
				};
				if (_199517_exist) {
					jule::Ptr<_1b4aea0d9_Directive> _200317_d = _1b4c74dac_findDirective(&((*_199617_sf.alloc)._field_Directives), jule::Str::lit("deprecated", 10));;
					if ((_200317_d != nullptr)) {
						_1b4bbd872_pushErr(_self_, (*_200317_d.alloc)._field_Tag, jule::Str::lit("trait implementations cannot have deprecated code", 49), jule::Slice<jule::Any>());
					};
					__jule_func_result=false;
				} else {
					;
					_1b4bbd872_pushErr(_self_, (*((*(_199345_strct))))._field_Token, jule::Str::lit("trait @ derived but not implemented define @", 44), jule::Slice<jule::Any>::make({jule::Any((*((*(_199366_trt))))._field_Ident, &__jule_any_type4),jule::Any(_1b4b3b713_GetKindStr(_199713_tfK, true), &__jule_any_type4)}));
					__jule_func_result=false;
				};
			}
			_iter_next_1ab306c94:;
			++it;
			goto _iter_begin_1ab306c94;
		}
		_iter_end_1ab306c94:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1b4bd2b72_checkStructImpls(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b218b3_Struct>* _201741_s) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_201741_s))))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab30c9d1:;
		if (it != expr_end) {
			jule::Ptr<_1b4b49c3d_Trait> _201921_trt = *it;
			{
				__jule_func_result=(_1b4bd2831_checkStructTraitImpl(_self_, _201741_s, &(_201921_trt)) && __jule_func_result);
			}
			_iter_next_1ab30c9d1:;
			++it;
			goto _iter_begin_1ab30c9d1;
		}
		_iter_end_1ab30c9d1:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1b4bd2eb3_checkStructFields(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b218b3_Struct>* _202542_st) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_202542_st))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab30de66:;
		if (it != expr_end) {
			jule::Ptr<_1b4b1d98c_Field> _202721_f = *it;
			{
				(*(_202721_f))._field_Owner=(*(_202542_st));
				{
					auto expr = &((*((*(_202542_st))))._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab30eb7b:;
					if (it != expr_end) {
						jule::Ptr<_1b4b1d98c_Field> _202920_cf = *it;
						{
							if ((_202721_f == _202920_cf)) {
								goto _iter_end_1ab30eb7b;
							} else if (((*_202721_f.alloc)._field_Ident == (*(_202920_cf))._field_Ident)) {
								_1b4bbd872_pushErr(_self_.ptr(), (*_202721_f.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*_202721_f.alloc)._field_Ident, &__jule_any_type4)}));
								_1b4bbdbd5_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
								__jule_func_result=false;
							};
						}
						_iter_next_1ab30eb7b:;
						++it;
						goto _iter_begin_1ab30eb7b;
					}
					_iter_end_1ab30eb7b:;
				};
			}
			_iter_next_1ab30de66:;
			++it;
			goto _iter_begin_1ab30de66;
		}
		_iter_end_1ab30de66:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1b4bd326b_checkStructDecl(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b218b3_Struct>* _204240_s) {
	if (_1b4ad80e9_IsIgnoreIdent((*((*(_204240_s))))._field_Ident)) {
		_1b4bbd872_pushErr(_self_.ptr(), (*((*(_204240_s))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1b4bbe587_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_204240_s))), &((*((*(_204240_s))))._field_Ident), (*((*(_204240_s))))._field_Binded)) {
		_1b4bbd872_pushErr(_self_, (*((*(_204240_s))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_204240_s))))._field_Ident, &__jule_any_type4)}));
		_1b4bbdbd5_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1b4bbe8ea_checkDirectives(_self_, &((*((*(_204240_s))))._field_Directives), jule::Any((*(_204240_s)), &__jule_any_type64));
	{
		
		if ((!(_1b4bcd596_checkDeclGenerics(_self_, &((*((*(_204240_s))))._field_Generics))))) {
			_case_begin_1ab3148d9:;
		}
		else if ((!(_1b4bd2eb3_checkStructFields(_self_, _204240_s)))) {
			_case_begin_1ab314950:;
		}
		else if ((!(_1b4bd2b72_checkStructImpls(_self_, _204240_s)))) {
			_case_begin_1ab3149b6:;
		}
		else if ((!(_1b4bd3da4_checkFuncDeclsBy(_self_, &((*((*(_204240_s))))._field_Methods))))) {
			_case_begin_1ab314a2c:;
		}
		_match_end_1ab3147a7:;
	};
}



inline jule::Bool _1b4bd3502_checkStructDecls(jule::Ptr<_1b4bbac37_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab316be9:;
		if (it != expr_end) {
			jule::Ptr<_1b4b218b3_Struct> _206221_s = *it;
			{
				_1b4bd326b_checkStructDecl(_self_, &(_206221_s));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1ab316be9:;
			++it;
			goto _iter_begin_1ab316be9;
		}
		_iter_end_1ab316be9:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1b4bd37aa_checkAnonFuncDecl(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b36884_Fn>* _207242_f) {
	(*((*(_207242_f))))._field_sema=_self_;
	_1b4bce322_checkFnDeclPrototype(_self_, _207242_f);
}



inline void _1b4bd3a63_checkFuncDecl(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b36884_Fn>* _207738_f) {
	if (_1b4ad80e9_IsIgnoreIdent((*((*(_207738_f))))._field_Ident)) {
		_1b4bbd872_pushErr(_self_.ptr(), (*((*(_207738_f))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1b4b37841_IsAnon((*(_207738_f)).ptr())) {
		_1b4bbd872_pushErr(_self_.ptr(), (*((*(_207738_f))))._field_Token, jule::Str::lit("anonymous functions are not allowed in this scope", 49), jule::Slice<jule::Any>());
	};
	_1b4bbe8ea_checkDirectives(_self_, &((*((*(_207738_f))))._field_Directives), jule::Any((*(_207738_f)), &__jule_any_type63));
	_1b4bd37aa_checkAnonFuncDecl(_self_, _207738_f);
	if ((((*((*(_207738_f))))._field_Owner == nullptr) && _1b4bbe587_isDuplicatedIdent(_self_, static_cast<jule::Uintptr>((*(_207738_f))), &((*((*(_207738_f))))._field_Ident), (*((*(_207738_f))))._field_Binded))) {
		if ((*((*(_207738_f))))._field_Ident.equal("init", 4)) {
			jule::Ptr<_1b4b36884_Fn> _208917_init = _1b4bbc2bb_FindFn(_self_, jule::Str::lit("init", 4), false);;
			if ((_208917_init != nullptr)) {
				return;;
			};
		};
		_1b4bbd872_pushErr(_self_, (*((*(_207738_f))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_207738_f))))._field_Ident, &__jule_any_type4)}));
		_1b4bbdbd5_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1b4bd3da4_checkFuncDeclsBy(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Slice<jule::Ptr<_1b4b36884_Fn>>* _209941_funcs) {
	{
		auto expr = _209941_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab31de65:;
		if (it != expr_end) {
			jule::Ptr<_1b4b36884_Fn> _210021_f = *it;
			{
				_1b4bd3a63_checkFuncDecl(_self_, &(_210021_f));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					return false;;
				};
			}
			_iter_next_1ab31de65:;
			++it;
			goto _iter_begin_1ab31de65;
		}
		_iter_end_1ab31de65:;
	};
	return true;;
}



inline jule::Bool _1b4bd413a_checkFuncDecls(jule::Ptr<_1b4bbac37_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1b4bd3da4_checkFuncDeclsBy(_self_, &((*((*_self_.alloc)._field_file))._field_Funcs));
	return __jule_func_result;;
}



inline void _1b4bd4558_pushCycleError(_1b4bbac37_Sema* _self_, jule::Str* _211530_st1, jule::Str* _211541_st2, _1cb1d27a9_StrBuilder* _211556_message) {
	;
	jule::Str _21179_refersTo = _1cb285582_Logf(jule::Str::lit("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any((*(_211530_st1)), &__jule_any_type4),jule::Any((*(_211541_st2)), &__jule_any_type4)}));;
	jule::Str _21189_m = _1cb1dbbd1_Str(_211556_message);;
	_1cb1db3d9_WriteStr(_211556_message, _1cb1bd751_Repeat(jule::Str::lit(" ", 1), 7LL));
	_1cb1db3d9_WriteStr(_211556_message, _21179_refersTo);
	_1cb1db692_WriteByte(_211556_message, '\n');
	_1cb1db3d9_WriteStr(_211556_message, _21189_m);
}



inline void _1b4bd4c0c_checkPackageDecls(jule::Ptr<_1b4bbac37_Sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab325ab5:;
		if (it != expr_end) {
			jule::Ptr<_1b4c41340_SymbolTable> _214221_f = *it;
			{
				_1b4bbd454_setCurrentFile(_self_.ptr(), _214221_f);
				if ((!(_1b4bcb4b7_checkTypeAliasDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1ab325ab5:;
			++it;
			goto _iter_begin_1ab325ab5;
		}
		_iter_end_1ab325ab5:;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab32605a:;
		if (it != expr_end) {
			jule::Ptr<_1b4c41340_SymbolTable> _214921_f = *it;
			{
				_1b4bbd454_setCurrentFile(_self_, _214921_f);
				if ((!(_1b4bd0972_checkTraitDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1ab32605a:;
			++it;
			goto _iter_begin_1ab32605a;
		}
		_iter_end_1ab32605a:;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab327039:;
		if (it != expr_end) {
			jule::Ptr<_1b4c41340_SymbolTable> _215621_f = *it;
			{
				_1b4bbd454_setCurrentFile(_self_, _215621_f);
				if ((!(_1b4bd2435_checkGlobalDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1ab327039:;
			++it;
			goto _iter_begin_1ab327039;
		}
		_iter_end_1ab327039:;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab32806d:;
		if (it != expr_end) {
			jule::Ptr<_1b4c41340_SymbolTable> _216321_f = *it;
			{
				_1b4bbd454_setCurrentFile(_self_, _216321_f);
				{
					
					if ((!(_1b4bd413a_checkFuncDecls(_self_)))) {
						_case_begin_1ab329679:;
					}
					else if ((!(_1b4bd3502_checkStructDecls(_self_)))) {
						_case_begin_1ab329723:;
					}
					else {
						_case_begin_1ab3290d5:;
						{
							goto _iter_next_1ab32806d;
						}
					}
					_match_end_1ab3295e1:;
				};
				return;;
			}
			_iter_next_1ab32806d:;
			++it;
			goto _iter_begin_1ab32806d;
		}
		_iter_end_1ab32806d:;
	};
}



inline void _1b4bd5070_checkDataForTypeInference(_1b4bbac37_Sema* _self_, jule::Ptr<_1b4c466a8_Data>* _217545_d, jule::Ptr<_1b4ad5712_Token>* _217556_err_token) {
	{
		
		if (_1b4c46a93_IsNil((*(_217545_d)).ptr())) {
			_case_begin_1ab32a7ce:;
			{
				_1b4bbd872_pushErr(_self_, (*(_217556_err_token)), jule::Str::lit("nil is cannot use with type inferred definitions", 48), jule::Slice<jule::Any>());
			}
		}
		else if (_1b4c46d29_IsVoid((*(_217545_d)).ptr())) {
			_case_begin_1ab32a878:;
			{
				_1b4bbd872_pushErr(_self_, (*(_217556_err_token)), jule::Str::lit("void data is cannot use for type inferred definitions", 53), jule::Slice<jule::Any>());
			}
		}
		else if ((*((*((*(_217545_d))))._field_Kind))._field_Variadic) {
			_case_begin_1ab32a8de:;
			{
				_1b4bbd872_pushErr(_self_, (*(_217556_err_token)), jule::Str::lit("invalid expression for type inference", 37), jule::Slice<jule::Any>());
			}
		}
		_match_end_1ab32a6ad:;
	};
}



inline void _1b4bd5328_checkVarValue(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4bddaa1_Var>* _218738_v) {
	if (_1b4bde211_IsTypeInferred((*(_218738_v)).ptr())) {
		(*((*(_218738_v))))._field_Kind=jule::new_ptr<_1b4c84ad1_TypeSymbol>(_1b4c84ad1_TypeSymbol{._field_Kind=(*((*((*((*(_218738_v))))._field_Value))._field_Data))._field_Kind});
		_1b4bd5070_checkDataForTypeInference(_self_.ptr(), &((*(*((*(_218738_v))))._field_Value.alloc)._field_Data), &((*((*(*((*(_218738_v))))._field_Value.alloc)._field_Expr))._field_Token));
		_1b4bca719_checkValidityForInitExpr(_self_, (*((*(_218738_v))))._field_Mutable, (*((*(_218738_v))))._field_Reference, &((*((*((*(_218738_v))))._field_Kind))._field_Kind), &((*(*((*(_218738_v))))._field_Value.alloc)._field_Data), &((*(*(*((*(_218738_v))))._field_Value.alloc)._field_Expr.alloc)._field_Token));
	} else {
		jule::Ptr<_1b4c8bd08_Arr> _220017_arr = _1b4c80d30_Arr((*((*((*(_218738_v))))._field_Kind))._field_Kind.ptr());;
		if ((_220017_arr != nullptr)) {
			if ((*_220017_arr.alloc)._field_Auto) {
				jule::Ptr<_1b4c8bd08_Arr> _220321_dataArr = _1b4c80d30_Arr((*((*((*((*(_218738_v))))._field_Value))._field_Data))._field_Kind.ptr());;
				if ((_220321_dataArr != nullptr)) {
					(*_220017_arr.alloc)._field_N=(*_220321_dataArr.alloc)._field_N;
				};
			};
		};
		if (_1b4bc6380_checkAssignType(_self_, (*((*(_218738_v))))._field_Reference, &((*(*((*(_218738_v))))._field_Kind.alloc)._field_Kind), &((*(*((*(_218738_v))))._field_Value.alloc)._field_Data), (*((*(*((*(_218738_v))))._field_Value.alloc)._field_Expr))._field_Token)) {
			_1b4bca719_checkValidityForInitExpr(_self_, (*((*(_218738_v))))._field_Mutable, (*((*(_218738_v))))._field_Reference, &((*(*((*(_218738_v))))._field_Kind.alloc)._field_Kind), &((*(*((*(_218738_v))))._field_Value.alloc)._field_Data), &((*(*(*((*(_218738_v))))._field_Value.alloc)._field_Expr.alloc)._field_Token));
		};
	};
	if (((*((*(_218738_v))))._field_Reference && (!(_1b4c98dc0_isValidForRef(&((*((*((*(_218738_v))))._field_Kind))._field_Kind)))))) {
		_1b4bbd872_pushErr(_self_.ptr(), (*((*(_218738_v))))._field_Token, jule::Str::lit("references cannot points to type @", 34), jule::Slice<jule::Any>::make({jule::Any(_1b4c7ccc7_Str((*(*((*(_218738_v))))._field_Kind.alloc)._field_Kind.ptr()), &__jule_any_type4)}));
	};
	if ((*((*(_218738_v))))._field_Constant) {
		if (((!(_1b4c470b0_IsConst((*((*((*(_218738_v))))._field_Value))._field_Data.ptr()))) && (!(_1b4c8211c_comptime((*(*(*((*(_218738_v))))._field_Value.alloc)._field_Data.alloc)._field_Kind.ptr()))))) {
			_1b4bbd872_pushErr(_self_, (*((*(*((*(_218738_v))))._field_Value.alloc)._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
	} else {
		(*((*((*((*(_218738_v))))._field_Value))._field_Data))._field_Constant=nullptr;
		(*(*(*((*(_218738_v))))._field_Value.alloc)._field_Data.alloc)._field_untyped=false;
	};
	if ((_1b4c81d86_Tup((*(*((*(_218738_v))))._field_Kind.alloc)._field_Kind) != nullptr)) {
		(*(*((*(_218738_v))))._field_Kind.alloc)._field_Kind=nullptr;
	};
}



inline void _1b4bd568b_evalVarValue(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4bddaa1_Var>* _224037_decl, jule::Trait _224053_l) {
	if ((!(_1b4bdde7a_IsInitialized((*(_224037_decl)).ptr())))) {
		return;;
	};
	jule::Ptr<_1b4c483d0_Eval> _224517_eval = nullptr;;
	if (((*((*(_224037_decl))))._field_Kind != nullptr)) {
		_224517_eval=_1b4bc55d2_evalpd(_self_, _224053_l, (*(*((*(_224037_decl))))._field_Kind.alloc)._field_Kind, (*(_224037_decl)));
	} else {
		_224517_eval=_1b4bc55d2_evalpd(_self_, _224053_l, nullptr, (*(_224037_decl)));
	};
	(*(_224517_eval))._field_immutable=(!((*((*(_224037_decl))))._field_Mutable));
	(*((*((*(_224037_decl))))._field_Value))._field_Data=_1b4c6b49c_evalExpr(_224517_eval, (*(*((*(_224037_decl))))._field_Value.alloc)._field_Expr);
}



inline void _1b4bd59ee_checkVar(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4bddaa1_Var>* _225733_decl, jule::Trait _225749_l) {
	_1b4bd568b_evalVarValue(_self_, _225733_decl, _225749_l);
	if (((*((*((*(_225733_decl))))._field_Value))._field_Data == nullptr)) {
		return;;
	};
	_1b4bd5328_checkVarValue(_self_, _225733_decl);
}



inline void _1b4bd5bec_checkGlobals(jule::Ptr<_1b4bbac37_Sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab342230:;
		if (it != expr_end) {
			jule::Ptr<_1b4bddaa1_Var> _226721_decl = *it;
			{
				if ((*(_226721_decl))._field_Binded) {
					goto _iter_next_1ab342230;
				};
				if (((_1b4bdde7a_IsInitialized(_226721_decl) && ((*((*_226721_decl.alloc)._field_Value))._field_Data == nullptr)) || (_1b4bde211_IsTypeInferred(_226721_decl) && ((*((*_226721_decl.alloc)._field_Kind))._field_Kind == nullptr)))) {
					_1b4bd59ee_checkVar(_self_, &(_226721_decl), jule::Trait(_self_, (jule::Trait::Type*)&_1b4c9c500_Lookup_mptr_data3));
				};
			}
			_iter_next_1ab342230:;
			++it;
			goto _iter_begin_1ab342230;
		}
		_iter_end_1ab342230:;
	};
}



inline jule::Ptr<_1b4b39865_FnIns> _1b4bd60e8_readyToCheckFn(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b24641_StructIns>* _228139_s, jule::Ptr<_1b4b36884_Fn>* _228159_f) {
	jule::Ptr<_1b4b39865_FnIns> _228213_ins = _1b4b380e4_instance((*(_228159_f)));;
	if (((*((*(_228159_f))))._field_Instances.len() != 0LL)) {
		return _228213_ins;;
	};
	(*(_228213_ins))._field_Owner=(*(_228139_s));
	_1b4b38402_appendInstance((*(_228159_f)).ptr(), &(_228213_ins));
	(*_228213_ins.alloc)._field_reloaded=true;
	if (_1b4bc9806_reloadFnInsTypes(_self_, _228213_ins)) {
		return _228213_ins;;
	};
	return nullptr;;
}



inline void _1b4bd645b_checkTypeMethod(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b24641_StructIns>* _229540_s, jule::Ptr<_1b4b36884_Fn>* _229560_f) {
	if (((*((*(_229560_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	jule::Ptr<_1b4b39865_FnIns> _230013_ins = (*((*(_229560_f))))._field_Instances[0LL];;
	if (((*((*(_230013_ins))._field_Scope))._field_Stmts.len() > 0LL)) {
		return;;
	};
	_1b4bd8e0e_checkFnIns(_self_, &(_230013_ins));
}



inline jule::Ptr<_1b4b39865_FnIns> _1b4bd6912_checkStructInsOp(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b24641_StructIns>* _230841_s, jule::Ptr<_1b4b36884_Fn>* _230861_f, jule::Fn<jule::Bool,jule::Ptr<_1b4b36884_Fn>> _230869_p) {
	if (((((*(_230861_f)) == nullptr) || ((*((*(_230861_f))))._field_Generics.len() > 0LL)) || (!(_230869_p((*(_230861_f))))))) {
		return nullptr;;
	};
	return (*((*(_230861_f))))._field_Instances[0LL];;
}



inline jule::Bool _1b4bd6d0d_checkStructEnv(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b24641_StructIns>* _231839_s, jule::Ptr<_1b4ad5712_Token> _231858_errorToken) {
	jule::Bool __jule_func_result = false;
	_1b4c8e7bc_typeChecker _231913_tc = _1b4c8e7bc_typeChecker{._field_s=(*((*((*(_231839_s))))._field_Decl))._field_sema, ._field_rootLookup=jule::Trait((*(*((*(_231839_s))))._field_Decl.alloc)._field_sema, (jule::Trait::Type*)&_1b4c9c500_Lookup_mptr_data3), ._field_lookup=jule::Trait((*(*((*(_231839_s))))._field_Decl.alloc)._field_sema, (jule::Trait::Type*)&_1b4c9c500_Lookup_mptr_data3), ._field_referencer=jule::new_ptr<_1b4c8d7cc_referencer>(_1b4c8d7cc_referencer{._field_ident=(*(*((*(_231839_s))))._field_Decl.alloc)._field_Ident, ._field_owner=jule::Any((*((*(_231839_s))))._field_Decl, &__jule_any_type64), }), ._field_refers=(*((*(_231839_s))))._field_Refers, };;
	if (((*((*(_231839_s))))._field_Generics.len() > 0LL)) {
		_231913_tc._field_useGenerics=jule::Slice<jule::Ptr<_1b4c7bb1c_TypeAlias>>::alloc(0LL, (*((*(_231839_s))))._field_Generics.len());
		{
			auto expr = &((*((*(_231839_s))))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ab34d79c:;
			if (it != expr_end) {
				jule::I64 _233218_i = it - expr->begin();
				jule::Ptr<_1b4c7b028_InsGeneric> _233225_g = *it;
				{
					jule::Ptr<_1b4b07dc7_GenericDecl> _233321_decl = (*(*((*(_231839_s))))._field_Decl.alloc)._field_Generics[_233218_i];;
					{ jule::Slice<jule::Ptr<_1b4c7bb1c_TypeAlias>> &__jule_push_dest = _231913_tc._field_useGenerics; __jule_push_dest.push(jule::new_ptr<_1b4c7bb1c_TypeAlias>(_1b4c7bb1c_TypeAlias{._field_Token=(*_233321_decl.alloc)._field_Token, ._field_Ident=(*(_233321_decl))._field_Ident, ._field_Kind=jule::new_ptr<_1b4c84ad1_TypeSymbol>(_1b4c84ad1_TypeSymbol{._field_Kind=(*(_233225_g))._field_Kind}), })); };
				}
				_iter_next_1ab34d79c:;
				++it;
				_233218_i++;
				goto _iter_begin_1ab34d79c;
			}
			_iter_end_1ab34d79c:;
		};
	};
	jule::Ptr<_1b4c41340_SymbolTable> _234213_oldFile = (*(_self_))._field_file;;
	__JULE_DEFER({
		_1b4bbd454_setCurrentFile(_self_, _234213_oldFile);
	});;
	if (((*((*_self_.alloc)._field_file))._field_File != (*((*(*((*(_231839_s))))._field_Decl.alloc)._field_Token))._field_File)) {
		jule::Ptr<_1b4c41340_SymbolTable> _234617_file = _1b4bb997d_findFile(&((*_self_.alloc)._field_files), &((*(*(*((*(_231839_s))))._field_Decl.alloc)._field_Token.alloc)._field_File));;
		if ((_234617_file != nullptr)) {
			_1b4bbd454_setCurrentFile(_self_, _234617_file);
		};
	};
	if (((*((*(_231839_s))))._field_Generics.len() > 0LL)) {
		jule::Ptr<_1b4b71050_constraintChecker> _235317_cc = _1b4bc40e7_constraintChecker(_self_);;
		(*(_235317_cc))._field_et=_231858_errorToken;
		(*_235317_cc.alloc)._field_si=(*(_231839_s));
		(*_235317_cc.alloc)._field_genericsA=_231913_tc._field_useGenerics;
		(*_235317_cc.alloc)._field_uniq=true;
		if ((!(_1b4b71e85_check(_235317_cc)))) {
			return __jule_func_result;;
		};
	};
	__jule_func_result=true;
	if (((*((*(_231839_s))))._field_Statics.len() > 0LL)) {
		jule::I64 _236617_n = (*_self_.alloc)._field_errors.len();;
		(*((*_self_.alloc)._field_files[0LL]))._field_TypeAliases=jule::append(_231913_tc._field_useGenerics,(*((*_self_.alloc)._field_files[0LL]))._field_TypeAliases);
		{
			auto expr = &((*((*(_231839_s))))._field_Statics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ab3570ad:;
			if (it != expr_end) {
				jule::Ptr<_1b4bddaa1_Var> _236825_v = *it;
				{
					_1b4bd1de6_checkVarDecl(_self_, &(_236825_v), jule::Trait(_self_, (jule::Trait::Type*)&_1b4c9c500_Lookup_mptr_data3));
					_1b4bd59ee_checkVar(_self_, &(_236825_v), jule::Trait(_self_, (jule::Trait::Type*)&_1b4c9c500_Lookup_mptr_data3));
					__jule_func_result=((((*_self_.alloc)._field_errors.len() - _236617_n) == 0LL) && __jule_func_result);
				}
				_iter_next_1ab3570ad:;
				++it;
				goto _iter_begin_1ab3570ad;
			}
			_iter_end_1ab3570ad:;
		};
		((*((*(_self_))._field_files[0LL]))._field_TypeAliases).mut_slice(_231913_tc._field_useGenerics.len());;
		if ((!(__jule_func_result))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	jule::Ptr<_1b4c483d0_Eval> _237913_eval = _1b4bc5d1e_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1b4c9c500_Lookup_mptr_data3));;
	(*((*(_231839_s))))._field_Comparable=(!((*(*((*(_231839_s))))._field_Decl.alloc)._field_Binded));
	{
		auto expr = &((*((*(_231839_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab35abc7:;
		if (it != expr_end) {
			jule::Ptr<_1b4b23a91_FieldIns> _238121_f = *it;
			{
				jule::Ptr<_1b4c7c90e_TypeKind> _238217_kind = _1b4c96e67_checkDecl(&_231913_tc, &((*((*((*(_238121_f))._field_Decl))._field_Kind))._field_Decl));;
				__jule_func_result=((_238217_kind != nullptr) && __jule_func_result);
				if ((_238217_kind == nullptr)) {
					if (((_self_ != (*(*((*(_231839_s))))._field_Decl.alloc)._field_sema) && ((*((*(*((*(_231839_s))))._field_Decl.alloc)._field_sema))._field_errors.len() > 0LL))) {
						(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,(*(*(*((*(_231839_s))))._field_Decl.alloc)._field_sema.alloc)._field_errors);
						(*(*(*((*(_231839_s))))._field_Decl.alloc)._field_sema.alloc)._field_errors=nullptr;
					};
					goto _iter_next_1ab35abc7;
				};
				(*_238121_f.alloc)._field_Kind=_238217_kind;
				(*((*(_231839_s))))._field_Mutable=((*((*(_231839_s))))._field_Mutable || ((!((*(*_238121_f.alloc)._field_Decl.alloc)._field_Mutable)) && _1b4c7e290_Mutable((*_238121_f.alloc)._field_Kind)));
				(*((*(_231839_s))))._field_Comparable=((*((*(_231839_s))))._field_Comparable && _1b4c7e009_Comparable((*_238121_f.alloc)._field_Kind));
				if (((*(*_238121_f.alloc)._field_Decl.alloc)._field_Default == nullptr)) {
					goto _iter_next_1ab35abc7;
				};
				(*(_237913_eval))._field_prefix=(*_238121_f.alloc)._field_Kind;
				(*_237913_eval.alloc)._field_field=_238121_f;
				(*_238121_f.alloc)._field_Default=_1b4c6b49c_evalExpr(_237913_eval, (*(*_238121_f.alloc)._field_Decl.alloc)._field_Default);
				if (((*_238121_f.alloc)._field_Default == nullptr)) {
					goto _iter_next_1ab35abc7;
				};
				;
				_1b4bc6380_checkAssignType(_self_, false, &((*_238121_f.alloc)._field_Kind), &((*_238121_f.alloc)._field_Default), (*((*(*_238121_f.alloc)._field_Decl.alloc)._field_Default))._field_Token);
			}
			_iter_next_1ab35abc7:;
			++it;
			goto _iter_begin_1ab35abc7;
		}
		_iter_end_1ab35abc7:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1b4bd7209_precheckStructIns(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b24641_StructIns>* _241542_s, jule::Ptr<_1b4ad5712_Token> _241561_errorToken) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=_1b4bd6d0d_checkStructEnv(_self_, _241542_s, _241561_errorToken);
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &((*((*(_241542_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab3657c5:;
		if (it != expr_end) {
			jule::Ptr<_1b4b36884_Fn> _242021_f = *it;
			{
				if (((*(_242021_f))._field_Generics.len() == 0LL)) {
					if ((_1b4bd60e8_readyToCheckFn(_self_, _241542_s, &(_242021_f)) == nullptr)) {
						__jule_func_result = false;
						return __jule_func_result;;
					};
				};
			}
			_iter_next_1ab3657c5:;
			++it;
			goto _iter_begin_1ab3657c5;
		}
		_iter_end_1ab3657c5:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1b4bd74b2_checkStructIns(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b24641_StructIns>* _243039_s) {
	{
		auto expr = &((*((*(_243039_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab3671de:;
		if (it != expr_end) {
			jule::Ptr<_1b4b36884_Fn> _243121_f = *it;
			{
				_1b4bd645b_checkTypeMethod(_self_, _243039_s, &(_243121_f));
			}
			_iter_next_1ab3671de:;
			++it;
			goto _iter_begin_1ab3671de;
		}
		_iter_end_1ab3671de:;
	};
}



inline void _1b4bd776a_checkTypeStruct(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b218b3_Struct>* _243640_s) {
	if ((*((*(_243640_s))))._field_Binded) {
		return;;
	};
	if (((*((*(_243640_s))))._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_243640_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab368ba2:;
		if (it != expr_end) {
			jule::Ptr<_1b4b24641_StructIns> _244921_ins = *it;
			{
				_1b4bd74b2_checkStructIns(_self_, &(_244921_ins));
			}
			_iter_next_1ab368ba2:;
			++it;
			goto _iter_begin_1ab368ba2;
		}
		_iter_end_1ab368ba2:;
	};
}



inline void _1b4bd7968_checkStructTypes(jule::Ptr<_1b4bbac37_Sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab369b4d:;
		if (it != expr_end) {
			jule::Ptr<_1b4b218b3_Struct> _245521_s = *it;
			{
				_1b4bd776a_checkTypeStruct(_self_, &(_245521_s));
			}
			_iter_next_1ab369b4d:;
			++it;
			goto _iter_begin_1ab369b4d;
		}
		_iter_end_1ab369b4d:;
	};
}



inline void _1b4bd7c21_checkStructInsOperators(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b24641_StructIns> _246047_s) {
	{
		auto expr = &((*(_246047_s))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab36aac7:;
		if (it != expr_end) {
			jule::Ptr<_1b4b36884_Fn> _246121_m = *it;
			{
				{
					auto &_match_expr{ (*(_246121_m))._field_Ident };
					
					if (_match_expr == jule::Str::lit("Eq", 2)) {
						_case_begin_1ab36b248:;
						{
							(*(_246047_s))._field_Operators._field_Eq=_1b4bd6912_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1b4be094e_Eq);
							(*_246047_s.alloc)._field_Comparable=((*_246047_s.alloc)._field_Operators._field_Eq != nullptr);
						}
					}
					else if (_match_expr == jule::Str::lit("Gt", 2)) {
						_case_begin_1ab36b831:;
						{
							(*(_246047_s))._field_Operators._field_Gt=_1b4bd6912_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1b4be0c18_Gt);
						}
					}
					else if (_match_expr == jule::Str::lit("GtEq", 4)) {
						_case_begin_1ab36b897:;
						{
							(*(_246047_s))._field_Operators._field_GtEq=_1b4bd6912_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1b4be0ed2_GtEq);
						}
					}
					else if (_match_expr == jule::Str::lit("Lt", 2)) {
						_case_begin_1ab36b90d:;
						{
							(*(_246047_s))._field_Operators._field_Lt=_1b4bd6912_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1b4be129b_Lt);
						}
					}
					else if (_match_expr == jule::Str::lit("LtEq", 4)) {
						_case_begin_1ab36b974:;
						{
							(*(_246047_s))._field_Operators._field_LtEq=_1b4bd6912_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1b4be1565_LtEq);
						}
					}
					else if (_match_expr == jule::Str::lit("Shl", 3)) {
						_case_begin_1ab36b9eb:;
						{
							(*(_246047_s))._field_Operators._field_Shl=_1b4bd6912_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1b4be1ba3_Shl);
						}
					}
					else if (_match_expr == jule::Str::lit("Shr", 3)) {
						_case_begin_1ab36ba73:;
						{
							(*(_246047_s))._field_Operators._field_Shr=_1b4bd6912_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1b4be1e6c_Shr);
						}
					}
					else if (_match_expr == jule::Str::lit("Add", 3)) {
						_case_begin_1ab36baea:;
						{
							(*(_246047_s))._field_Operators._field_Add=_1b4bd6912_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1b4be2236_Add);
						}
					}
					else if (_match_expr == jule::Str::lit("Sub", 3)) {
						_case_begin_1ab36bb72:;
						{
							(*(_246047_s))._field_Operators._field_Sub=_1b4bd6912_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1b4be2500_Sub);
						}
					}
					else if (_match_expr == jule::Str::lit("Div", 3)) {
						_case_begin_1ab36bbe9:;
						{
							(*(_246047_s))._field_Operators._field_Div=_1b4bd6912_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1b4be27b9_Div);
						}
					}
					else if (_match_expr == jule::Str::lit("Mul", 3)) {
						_case_begin_1ab36bc71:;
						{
							(*(_246047_s))._field_Operators._field_Mul=_1b4bd6912_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1b4be2a83_Mul);
						}
					}
					else if (_match_expr == jule::Str::lit("Mod", 3)) {
						_case_begin_1ab36bce8:;
						{
							(*(_246047_s))._field_Operators._field_Mod=_1b4bd6912_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1b4be2d4c_Mod);
						}
					}
					else if (_match_expr == jule::Str::lit("BitAnd", 6)) {
						_case_begin_1ab36bd70:;
						{
							(*(_246047_s))._field_Operators._field_BitAnd=_1b4bd6912_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1b4be3116_BitAnd);
						}
					}
					else if (_match_expr == jule::Str::lit("BitOr", 5)) {
						_case_begin_1ab36bde7:;
						{
							(*(_246047_s))._field_Operators._field_BitOr=_1b4bd6912_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1b4be33d0_BitOr);
						}
					}
					else if (_match_expr == jule::Str::lit("BitXor", 6)) {
						_case_begin_1ab36be6e:;
						{
							(*(_246047_s))._field_Operators._field_BitXor=_1b4bd6912_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1b4be3699_BitXor);
						}
					}
					else if (_match_expr == jule::Str::lit("Neg", 3)) {
						_case_begin_1ab36bee6:;
						{
							(*(_246047_s))._field_Operators._field_Neg=_1b4bd6912_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1b4be3cd7_Neg);
						}
					}
					else if (_match_expr == jule::Str::lit("Pos", 3)) {
						_case_begin_1ab36c06d:;
						{
							(*(_246047_s))._field_Operators._field_Pos=_1b4bd6912_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1b4be40a1_Pos);
						}
					}
					else if (_match_expr == jule::Str::lit("BitNot", 6)) {
						_case_begin_1ab36c0e5:;
						{
							(*(_246047_s))._field_Operators._field_BitNot=_1b4bd6912_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1b4be436a_BitNot);
						}
					}
					else if (_match_expr == jule::Str::lit("AddAssign", 9)) {
						_case_begin_1ab36c16c:;
						{
							(*(_246047_s))._field_Operators._field_AddAssign=_1b4bd6912_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1b4be49a8_AddAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("SubAssign", 9)) {
						_case_begin_1ab36c1e4:;
						{
							(*(_246047_s))._field_Operators._field_SubAssign=_1b4bd6912_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1b4be4c72_SubAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("DivAssign", 9)) {
						_case_begin_1ab36c26b:;
						{
							(*(_246047_s))._field_Operators._field_DivAssign=_1b4bd6912_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1b4be503b_DivAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("MulAssign", 9)) {
						_case_begin_1ab36c2e3:;
						{
							(*(_246047_s))._field_Operators._field_MulAssign=_1b4bd6912_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1b4be5305_MulAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ModAssign", 9)) {
						_case_begin_1ab36c36a:;
						{
							(*(_246047_s))._field_Operators._field_ModAssign=_1b4bd6912_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1b4be55be_ModAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ShlAssign", 9)) {
						_case_begin_1ab36c3e2:;
						{
							(*(_246047_s))._field_Operators._field_ShlAssign=_1b4bd6912_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1b4be5888_ShlAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ShrAssign", 9)) {
						_case_begin_1ab36c469:;
						{
							(*(_246047_s))._field_Operators._field_ShrAssign=_1b4bd6912_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1b4be5b52_ShrAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitOrAssign", 11)) {
						_case_begin_1ab36c4e1:;
						{
							(*(_246047_s))._field_Operators._field_BitOrAssign=_1b4bd6912_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1b4be5e1b_BitOrAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitAndAssign", 12)) {
						_case_begin_1ab36c568:;
						{
							(*(_246047_s))._field_Operators._field_BitAndAssign=_1b4bd6912_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1b4be61d5_BitAndAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitXorAssign", 12)) {
						_case_begin_1ab36c5e0:;
						{
							(*(_246047_s))._field_Operators._field_BitXorAssign=_1b4bd6912_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1b4be649e_BitXorAssign);
						}
					}
					_match_end_1ab36b523:;
				};
			}
			_iter_next_1ab36aac7:;
			++it;
			goto _iter_begin_1ab36aac7;
		}
		_iter_end_1ab36aac7:;
	};
}



inline void _1b4bd7ec9_precheckStructType(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b218b3_Struct>* _252443_s) {
	if ((*((*(_252443_s))))._field_Binded) {
		return;;
	};
	if (((*((*(_252443_s))))._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*((*(_252443_s))))._field_Instances.len() == 0LL)) {
		jule::Ptr<_1b4b24641_StructIns> _253517_ins = _1b4b21d25_instance((*(_252443_s)));;
		(*(_253517_ins))._field_Checked=true;
		_1b4b22133_appendInstance((*(_252443_s)).ptr(), &(_253517_ins));
		_1b4bd7209_precheckStructIns(_self_, &(_253517_ins), nullptr);
	};
	_1b4bd7c21_checkStructInsOperators(_self_, (*((*(_252443_s))))._field_Instances[0LL]);
}



inline void _1b4bd81c7_precheckStructTypes(jule::Ptr<_1b4bbac37_Sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab3834e6:;
		if (it != expr_end) {
			jule::Ptr<_1b4b218b3_Struct> _254521_s = *it;
			{
				_1b4bd7ec9_precheckStructType(_self_, &(_254521_s));
			}
			_iter_next_1ab3834e6:;
			++it;
			goto _iter_begin_1ab3834e6;
		}
		_iter_end_1ab3834e6:;
	};
}



inline void _1b4bd8480_checkRets(_1b4bbac37_Sema* _self_, jule::Ptr<_1b4b39865_FnIns>* _255033_f) {
	if (_1b4b36d07_IsVoid((*((*(_255033_f))))._field_Decl.ptr())) {
		return;;
	};
	_1b4bda905_missingRetChecker _25549_mrc = static__1b4bdacbd_new();;
	jule::Bool _25559_ok = _1b4bdbde0_check(&_25549_mrc, (*((*(_255033_f))))._field_Scope);;
	if ((!(_25559_ok))) {
		_1b4bbd872_pushErr(_self_, (*(*((*(_255033_f))))._field_Decl.alloc)._field_Token, jule::Str::lit("missing return at end of function", 33), jule::Slice<jule::Any>());
	};
}



inline void _1b4bd87e3_checkFnInsSc(_1b4bbac37_Sema* _self_, jule::Ptr<_1b4b39865_FnIns>* _256136_f, jule::Ptr<_1b4b80cb8_scopeChecker>* _256152_sc) {
	_1b4bb9032_appendRetVars(&((*((*((*(_256152_sc))))._field_table))._field_Vars), _256136_f);
	_1b4bb931d_appendParamVars(&((*(*((*(_256152_sc))))._field_table.alloc)._field_Vars), _256136_f);
	_1b4bb9609_appendGenericTypeAliases(&((*(*((*(_256152_sc))))._field_table.alloc)._field_TypeAliases), _256136_f);
	_1b4b92abb_check((*(_256152_sc)), &((*((*((*(_256136_f))))._field_Decl))._field_Scope), &((*((*(_256136_f))))._field_Scope));
	if ((!(_1b4b8388c_stopped((*(_256152_sc)).ptr())))) {
		_1b4bd8480_checkRets(_self_, _256136_f);
	};
}



inline void _1b4bd8b56_checkFnInsCaller(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b39865_FnIns>* _257441_f, jule::Ptr<_1b4ad5712_Token> _257456_caller) {
	if ((*((*((*(_257441_f))))._field_Decl))._field_Binded) {
		return;;
	};
	jule::Ptr<_1b4c41340_SymbolTable> _257913_old = (*((*(*((*(_257441_f))))._field_Decl.alloc)._field_sema))._field_file;;
	__JULE_DEFER({
		_1b4bbd454_setCurrentFile((*(*((*(_257441_f))))._field_Decl.alloc)._field_sema, _257913_old);
	});;
	jule::Ptr<_1b4c41340_SymbolTable> _258113_file = _1b4bb997d_findFile(&((*(*(*((*(_257441_f))))._field_Decl.alloc)._field_sema.alloc)._field_files), &((*((*(*((*(_257441_f))))._field_Decl.alloc)._field_Token))._field_File));;
	if ((_258113_file != nullptr)) {
		_1b4bbd454_setCurrentFile((*(*((*(_257441_f))))._field_Decl.alloc)._field_sema, _258113_file);
	};
	jule::Ptr<_1b4b80cb8_scopeChecker> _258613_sc = _1b4b759a0_newScopeChecker(&((*(*((*(_257441_f))))._field_Decl.alloc)._field_sema), (*(_257441_f)));;
	(*(_258613_sc))._field_calledFrom=_257456_caller;
	_1b4bd87e3_checkFnInsSc(_self_.ptr(), _257441_f, &(_258613_sc));
	if (((*(*((*(_257441_f))))._field_Decl.alloc)._field_sema != _self_)) {
		(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,(*(*(*((*(_257441_f))))._field_Decl.alloc)._field_sema.alloc)._field_errors);
		(*(*(*((*(_257441_f))))._field_Decl.alloc)._field_sema.alloc)._field_errors=nullptr;
	};
}



inline void _1b4bd8e0e_checkFnIns(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b39865_FnIns>* _259635_f) {
	_1b4bd8b56_checkFnInsCaller(_self_, _259635_f, nullptr);
}



inline void _1b4bd91b7_checkFunc(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b36884_Fn>* _260034_f) {
	if ((*((*(_260034_f))))._field_Binded) {
		return;;
	};
	if (((*((*(_260034_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_260034_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab391933:;
		if (it != expr_end) {
			jule::Ptr<_1b4b39865_FnIns> _261021_ins = *it;
			{
				_1b4bd8e0e_checkFnIns(_self_, &(_261021_ins));
			}
			_iter_next_1ab391933:;
			++it;
			goto _iter_begin_1ab391933;
		}
		_iter_end_1ab391933:;
	};
}



inline void _1b4bd9470_checkTestFn(_1b4bbac37_Sema* _self_, jule::Ptr<_1b4b39865_FnIns>* _261535_f) {
	if ((*((*((*(_261535_f))))._field_Decl))._field_Public) {
		_1b4bbd872_pushErr(_self_, (*(*((*(_261535_f))))._field_Decl.alloc)._field_Token, jule::Str::lit("test function cannot be public", 30), jule::Slice<jule::Any>());
		_1b4bbdbd5_pushSuggestion(_self_, jule::Str::lit("dont use identifier which is starts with capital letter to avoid define as public", 81), jule::Slice<jule::Any>());
		return;;
	};
	if (((((((*(*((*(_261535_f))))._field_Decl.alloc)._field_Unsafety || (!(_1b4b36d07_IsVoid((*((*(_261535_f))))._field_Decl)))) || ((*(*((*(_261535_f))))._field_Decl.alloc)._field_Generics.len() != 0LL)) || ((*((*(_261535_f))))._field_Params.len() != 1LL)) || (*((*(*((*(_261535_f))))._field_Decl.alloc)._field_Params[0LL]))._field_Mutable) || (*((*(*((*(_261535_f))))._field_Decl.alloc)._field_Params[0LL]))._field_Reference)) {
		_1b4bbd872_pushErr(_self_, (*(*((*(_261535_f))))._field_Decl.alloc)._field_Token, jule::Str::lit("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1b4bbdbd5_pushSuggestion(_self_, jule::Str::lit("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1b4c89014_Sptr> _263313_sptr = _1b4c802e6_Sptr((*((*((*(_261535_f))))._field_Params[0LL]))._field_Kind.ptr());;
	if ((_263313_sptr == nullptr)) {
		_1b4bbd872_pushErr(_self_, (*(*((*(_261535_f))))._field_Decl.alloc)._field_Token, jule::Str::lit("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1b4bbdbd5_pushSuggestion(_self_, jule::Str::lit("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1b4b24641_StructIns> _26409_s = _1b4c815d3_Struct((*(_263313_sptr))._field_Elem.ptr());;
	if (((_26409_s == nullptr) || (!(_1b4ba0c94_isStdPackage(&((*((*((*((*(_26409_s))._field_Decl))._field_Token))._field_File))._field_Path), jule::Str::lit("testing", 7)))))) {
		_1b4bbd872_pushErr(_self_, (*(*((*(_261535_f))))._field_Decl.alloc)._field_Token, jule::Str::lit("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1b4bbdbd5_pushSuggestion(_self_, jule::Str::lit("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1b4bd9728_precheckFunc(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Ptr<_1b4b36884_Fn>* _264837_f) {
	if ((*((*(_264837_f))))._field_Binded) {
		return;;
	};
	if (((*((*(_264837_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*((*(_264837_f))))._field_Instances.len() == 0LL)) {
		jule::Ptr<_1b4b39865_FnIns> _265917_ins = _1b4b37d5d_instanceForce((*(_264837_f)));;
		{ jule::Slice<jule::Ptr<_1b4b39865_FnIns>> &__jule_push_dest = (*((*(_264837_f))))._field_Instances; __jule_push_dest.push(_265917_ins); };
		jule::Bool _266113_ok = _1b4bc9806_reloadFnInsTypes(_self_, _265917_ins);;
		(*(_265917_ins))._field_reloaded=true;
		if ((_266113_ok && _1b4c9852e_hasDirective(&((*((*(_264837_f))))._field_Directives), jule::Str::lit("test", 4)))) {
			_1b4bd9470_checkTestFn(_self_, &(_265917_ins));
		};
	};
}



inline void _1b4bd9926_precheckFuncs(jule::Ptr<_1b4bbac37_Sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab39ea0c:;
		if (it != expr_end) {
			jule::Ptr<_1b4b49c3d_Trait> _267221_decl = *it;
			{
				{
					auto expr = &((*(_267221_decl))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab3a0458:;
					if (it != expr_end) {
						jule::Ptr<_1b4b36884_Fn> _267325_m = *it;
						{
							_1b4bd9728_precheckFunc(_self_, &(_267325_m));
						}
						_iter_next_1ab3a0458:;
						++it;
						goto _iter_begin_1ab3a0458;
					}
					_iter_end_1ab3a0458:;
				};
			}
			_iter_next_1ab39ea0c:;
			++it;
			goto _iter_begin_1ab39ea0c;
		}
		_iter_end_1ab39ea0c:;
	};
	{
		auto expr = &((*(*_self_.alloc)._field_file.alloc)._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab3a07cc:;
		if (it != expr_end) {
			jule::Ptr<_1b4b36884_Fn> _267721_decl = *it;
			{
				_1b4bd9728_precheckFunc(_self_, &(_267721_decl));
			}
			_iter_next_1ab3a07cc:;
			++it;
			goto _iter_begin_1ab3a07cc;
		}
		_iter_end_1ab3a07cc:;
	};
}



inline void _1b4bd9b24_checkFuncs(jule::Ptr<_1b4bbac37_Sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab3a1c1d:;
		if (it != expr_end) {
			jule::Ptr<_1b4b36884_Fn> _268421_decl = *it;
			{
				_1b4bd91b7_checkFunc(_self_, &(_268421_decl));
			}
			_iter_next_1ab3a1c1d:;
			++it;
			goto _iter_begin_1ab3a1c1d;
		}
		_iter_end_1ab3a1c1d:;
	};
}



inline void _1b4bd9d22_checkPackageTypes(jule::Ptr<_1b4bbac37_Sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab3a29ee:;
		if (it != expr_end) {
			jule::Ptr<_1b4c41340_SymbolTable> _269221_f = *it;
			{
				_1b4bbd454_setCurrentFile(_self_.ptr(), _269221_f);
				_1b4bd5bec_checkGlobals(_self_);
				_1b4bd9926_precheckFuncs(_self_);
				_1b4bd81c7_precheckStructTypes(_self_);
			}
			_iter_next_1ab3a29ee:;
			++it;
			goto _iter_begin_1ab3a29ee;
		}
		_iter_end_1ab3a29ee:;
	};
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab3a454a:;
		if (it != expr_end) {
			jule::Ptr<_1b4c41340_SymbolTable> _270321_f = *it;
			{
				_1b4bbd454_setCurrentFile(_self_, _270321_f);
				_1b4bd9b24_checkFuncs(_self_);
				_1b4bd7968_checkStructTypes(_self_);
			}
			_iter_next_1ab3a454a:;
			++it;
			goto _iter_begin_1ab3a454a;
		}
		_iter_end_1ab3a454a:;
	};
}



inline void _1b4bda020_setFileSemaFields(jule::Ptr<_1b4bbac37_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab3a5b23:;
		if (it != expr_end) {
			jule::Ptr<_1b4b36884_Fn> _271121_f = *it;
			{
				(*(_271121_f))._field_sema=_self_;
			}
			_iter_next_1ab3a5b23:;
			++it;
			goto _iter_begin_1ab3a5b23;
		}
		_iter_end_1ab3a5b23:;
	};
	{
		auto expr = &((*(*_self_.alloc)._field_file.alloc)._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab3a677d:;
		if (it != expr_end) {
			jule::Ptr<_1b4b218b3_Struct> _271421_st = *it;
			{
				(*(_271421_st))._field_sema=_self_;
			}
			_iter_next_1ab3a677d:;
			++it;
			goto _iter_begin_1ab3a677d;
		}
		_iter_end_1ab3a677d:;
	};
}



inline void _1b4bda21d_setSemaFields(jule::Ptr<_1b4bbac37_Sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab3a743d:;
		if (it != expr_end) {
			jule::Ptr<_1b4c41340_SymbolTable> _272021_file = *it;
			{
				_1b4bbd454_setCurrentFile(_self_.ptr(), _272021_file);
				_1b4bda020_setFileSemaFields(_self_);
			}
			_iter_next_1ab3a743d:;
			++it;
			goto _iter_begin_1ab3a743d;
		}
		_iter_end_1ab3a743d:;
	};
}



inline void _1b4bda4c6_check(jule::Ptr<_1b4bbac37_Sema> _self_, jule::Slice<jule::Ptr<_1b4c41340_SymbolTable>>* _272630_files) {
	(*(_self_))._field_files=(*(_272630_files));
	_1b4bc22e3_checkImports(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1b4bda21d_setSemaFields(_self_);
	_1b4bc2cd8_checkInherits(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1b4bc26de_implImpls(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1b4bc28dc_checkEnums(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1b4bd4c0c_checkPackageDecls(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1b4bd9d22_checkPackageTypes(_self_);
}





std::ostream &operator<<(std::ostream &_Stream, _1b4bbac37_Sema _Src) {
	_Stream << "Sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "flags:" << _Src._field_flags << ", ";
	_Stream << "meta:" << _Src._field_meta;
	_Stream << "}";
	return _Stream;
}



inline _1b4bda905_missingRetChecker static__1b4bdacbd_new(void) {
	return _1b4bda905_missingRetChecker{._field_breaked=jule::Slice<jule::Uintptr>::alloc(16LLU, 16LLU, 0), };;
}



inline jule::Bool _1b4bdb0cb_checkConditional(_1b4bda905_missingRetChecker* _self_, jule::Ptr<_1b4b79443_Conditional> _277435_c) {
	{
		auto expr = &((*(_277435_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab3aca5e:;
		if (it != expr_end) {
			jule::Ptr<_1b4b78c28_If> _277521_elif = *it;
			{
				if ((_277521_elif == nullptr)) {
					return false;;
				};
				if ((!(_1b4bdba9e_checkScope(_self_, (*(_277521_elif))._field_Scope)))) {
					return false;;
				};
			}
			_iter_next_1ab3aca5e:;
			++it;
			goto _iter_begin_1ab3aca5e;
		}
		_iter_end_1ab3aca5e:;
	};
	return (((*_277435_c.alloc)._field_Default != nullptr) && _1b4bdba9e_checkScope(_self_, (*(*_277435_c.alloc)._field_Default.alloc)._field_Scope));;
}



inline jule::Bool _1b4bdb41c_checkMatch(_1b4bda905_missingRetChecker* _self_, jule::Ptr<_1b4b7ca1d_Match> _278629_m) {
	{
		auto expr = &((*(_278629_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab3aeae9:;
		if (it != expr_end) {
			jule::Ptr<_1b4b7d546_Case> _278721_c = *it;
			{
				if ((_278721_c == nullptr)) {
					return false;;
				};
				jule::I64 _279113_n = (*(_self_))._field_breaked.len();;
				jule::Bool _279213_ok = _1b4bdba9e_checkScope(_self_, (*(_278721_c))._field_Scope);;
				{
					
					if ((_279113_n != (*(_self_))._field_breaked.len())) {
						_case_begin_1ab3b1579:;
						{
							return false;;
						}
					}
					else if ((!(_279213_ok))) {
						_case_begin_1ab3b1623:;
						{
							if ((!((*(_self_))._field_falled))) {
								return false;;
							};
							goto _case_begin_1ab3b1689;
						}
					}
					else if ((*(_self_))._field_falled) {
						_case_begin_1ab3b1689:;
						{
							(*(_self_))._field_falled=false;
							if (((*(_278721_c))._field_Next == nullptr)) {
								return false;;
							};
							goto _iter_next_1ab3aeae9;
						}
					}
					_match_end_1ab3b14d0:;
				};
			}
			_iter_next_1ab3aeae9:;
			++it;
			goto _iter_begin_1ab3aeae9;
		}
		_iter_end_1ab3aeae9:;
	};
	return (((*_278629_m.alloc)._field_Default != nullptr) && _1b4bdba9e_checkScope(_self_, (*(*_278629_m.alloc)._field_Default.alloc)._field_Scope));;
}



inline jule::Bool _1b4bdb75d_checkInfIter(_1b4bda905_missingRetChecker* _self_, jule::Ptr<_1b4b79740_InfIter> _281231_it) {
	jule::I64 _28139_n = (*(_self_))._field_breaked.len();;
	if (_1b4bdba9e_checkScope(_self_, (*(_281231_it))._field_Scope)) {
		((*(_self_))._field_breaked).mut_slice(0LL, _28139_n);;
		return true;;
	};
	if ((_28139_n != (*(_self_))._field_breaked.len())) {
		jule::Uintptr _281913_itaddr = static_cast<jule::Uintptr>(_281231_it);;
		{
			auto expr = (*(_self_))._field_breaked.slice(_28139_n);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1ab3b543a:;
			if (it != expr_end) {
				jule::Uintptr _282020_addr = *it;
				{
					if ((_281913_itaddr == _282020_addr)) {
						((*(_self_))._field_breaked).mut_slice(0LL, _28139_n);;
						return false;;
					};
				}
				_iter_next_1ab3b543a:;
				++it;
				goto _iter_begin_1ab3b543a;
			}
			_iter_end_1ab3b543a:;
		};
		((*(_self_))._field_breaked).mut_slice(0LL, _28139_n);;
	};
	return true;;
}



inline jule::Bool _1b4bdba9e_checkScope(_1b4bda905_missingRetChecker* _self_, jule::Ptr<_1b4b7880a_Scope> _283129_s) {
	if ((_283129_s == nullptr)) {
		return false;;
	};
	{
		auto expr = &((*(_283129_s))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab3b6a35:;
		if (it != expr_end) {
			jule::Any _283521_st = *it;
			{
				{
					auto &_match_expr{ _283521_st };
					
					if (_match_expr.type == &__jule_any_type47) {
						_case_begin_1ab3b7706:;
						{
							(*(_self_))._field_falled=true;
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type48) {
						_case_begin_1ab3b74d6:;
						{
							jule::Uintptr _284117_addr = (*(_283521_st.unsafe_cast_ptr<_1b4b7ada1_BreakSt>()))._field_It;;
							if ((_284117_addr != 0LLU)) {
								{ jule::Slice<jule::Uintptr> &__jule_push_dest = (*(_self_))._field_breaked; __jule_push_dest.push(_284117_addr); };
							};
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type40) {
						_case_begin_1ab3b777d:;
						{
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type35) {
						_case_begin_1ab3b7805:;
						{
							if (_1b4bdb75d_checkInfIter(_self_, _283521_st.unsafe_cast_ptr<_1b4b79740_InfIter>())) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type49) {
						_case_begin_1ab3b787c:;
						{
							return true;;
						}
					}
					else if (_match_expr.type == &__jule_any_type21) {
						_case_begin_1ab3b7904:;
						{
							if (_1b4bdba9e_checkScope(_self_, _283521_st.unsafe_cast_ptr<_1b4b7880a_Scope>())) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type23) {
						_case_begin_1ab3b797b:;
						{
							{
								auto &_match_expr{ (*(_283521_st.cast_ptr<_1b4c466a8_Data>(&__jule_any_type23)))._field_Model };
								
								if (_match_expr.type == &__jule_any_type28 || _match_expr.type == &__jule_any_type22) {
									_case_begin_1ab3bb63e:;
									{
										return true;;
									}
								}
								_match_end_1ab3bb5c8:;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type34) {
						_case_begin_1ab3b7a03:;
						{
							if (_1b4bdb0cb_checkConditional(_self_, _283521_st.unsafe_cast_ptr<_1b4b79443_Conditional>())) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type46) {
						_case_begin_1ab3b7a7a:;
						{
							if (_1b4bdb41c_checkMatch(_self_, _283521_st.unsafe_cast_ptr<_1b4b7ca1d_Match>())) {
								return true;;
							};
						}
					}
					_match_end_1ab3b75e6:;
				};
			}
			_iter_next_1ab3b6a35:;
			++it;
			goto _iter_begin_1ab3b6a35;
		}
		_iter_end_1ab3b6a35:;
	};
	return false;;
}



inline jule::Bool _1b4bdbde0_check(_1b4bda905_missingRetChecker* _self_, jule::Ptr<_1b4b7880a_Scope> _287724_s) {
	return _1b4bdba9e_checkScope(_self_, _287724_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4bda905_missingRetChecker _Src) {
	_Stream << "missingRetChecker{";
	_Stream << "breaked:" << _Src._field_breaked << ", ";
	_Stream << "falled:" << _Src._field_falled;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b4bdde7a_IsInitialized(_1b4bddaa1_Var* _self_) {
	return ((*(_self_))._field_Value != nullptr);;
}



inline jule::Bool _1b4bde211_IsTypeInferred(_1b4bddaa1_Var* _self_) {
	return (((*(_self_))._field_Kind == nullptr) || ((*((*(_self_))._field_Kind))._field_Decl == nullptr));;
}



inline jule::Bool _1b4bde497_untypedConstant(_1b4bddaa1_Var* _self_) {
	return (_1b4bde211_IsTypeInferred(_self_) && (*((*((*(_self_))._field_Value))._field_Data))._field_untyped);;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4bddaa1_Var _Src) {
	_Stream << "Var{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Value:" << _Src._field_Value << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "RetOrder:" << _Src._field_RetOrder << ", ";
	_Stream << "Depends:" << _Src._field_Depends;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1b4be0047_Dispose(jule::Ptr<_1b4b36884_Fn> _1023_f) {
	return ((((((((((_1023_f != nullptr) && ((*_1023_f.alloc)._field_Owner != nullptr)) && (*_1023_f.alloc)._field_Ident.equal("Dispose", 7)) && (!((*_1023_f.alloc)._field_Statically))) && (!((*_1023_f.alloc)._field_Unsafety))) && _1b4b36d07_IsVoid(_1023_f)) && ((*_1023_f.alloc)._field_Generics.len() == 0LL)) && ((*_1023_f.alloc)._field_Params.len() == 1LL)) && (*((*_1023_f.alloc)._field_Params[0LL]))._field_Mutable) && (!(_1b4b35762_IsRef((*_1023_f.alloc)._field_Params[0LL].ptr()))));;
}



inline jule::Bool static__1b4be0311_Str(jule::Ptr<_1b4b36884_Fn> _2419_f) {
	if (((((((((((_2419_f == nullptr) || ((*(_2419_f))._field_Owner == nullptr)) || (!(*(_2419_f))._field_Ident.equal("Str", 3))) || (*(_2419_f))._field_Statically) || (*(_2419_f))._field_Unsafety) || _1b4b36d07_IsVoid(_2419_f.ptr())) || ((*(_2419_f))._field_Generics.len() != 0LL)) || ((*(_2419_f))._field_Params.len() != 1LL)) || (*((*(_2419_f))._field_Params[0LL]))._field_Mutable) || _1b4b35762_IsRef((*(_2419_f))._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1b4b39865_FnIns> _3813_ins = (*(_2419_f))._field_Instances[0LL];;
	jule::Ptr<_1b4c854d8_Prim> _399_prim = _1b4c80060_Prim((*(_3813_ins))._field_Result.ptr());;
	if ((_399_prim == nullptr)) {
		return false;;
	};
	return _1b4c88970_IsStr(_399_prim.ptr());;
}



inline jule::Bool static__1b4be0685_logical(jule::Ptr<_1b4b36884_Fn>* _4624_f, jule::Str _4632_ident) {
	if (((((((((((((((*(_4624_f)) == nullptr) || ((*((*(_4624_f))))._field_Ident != _4632_ident)) || ((*((*(_4624_f))))._field_Owner == nullptr)) || ((*((*(_4624_f))))._field_Instances.len() == 0LL)) || (*((*(_4624_f))))._field_Statically) || (*((*(_4624_f))))._field_Unsafety) || _1b4b36d07_IsVoid((*(_4624_f)).ptr())) || ((*((*(_4624_f))))._field_Generics.len() != 0LL)) || ((*((*(_4624_f))))._field_Params.len() != 2LL)) || (*((*((*(_4624_f))))._field_Params[0LL]))._field_Mutable) || _1b4b35762_IsRef((*((*(_4624_f))))._field_Params[0LL].ptr())) || (*((*((*(_4624_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_4624_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1b4b39865_FnIns> _6313_ins = (*((*(_4624_f))))._field_Instances[0LL];;
	jule::Ptr<_1b4c854d8_Prim> _649_prim = _1b4c80060_Prim((*(_6313_ins))._field_Result.ptr());;
	if (((_649_prim == nullptr) || (!(_1b4c886d9_IsBool(_649_prim.ptr()))))) {
		return false;;
	};
	return ((*_6313_ins.alloc)._field_Owner == _1b4c815d3_Struct((*((*_6313_ins.alloc)._field_Params[1LL]))._field_Kind.ptr()));;
}



inline jule::Bool static__1b4be094e_Eq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b36884_Fn> _7218_f) {
	return static__1b4be0685_logical(&(_7218_f), jule::Str::lit("Eq", 2));;
}



inline jule::Bool static__1b4be0c18_Gt(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b36884_Fn> _7718_f) {
	return static__1b4be0685_logical(&(_7718_f), jule::Str::lit("Gt", 2));;
}



inline jule::Bool static__1b4be0ed2_GtEq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b36884_Fn> _8220_f) {
	return static__1b4be0685_logical(&(_8220_f), jule::Str::lit("GtEq", 4));;
}



inline jule::Bool static__1b4be129b_Lt(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b36884_Fn> _8718_f) {
	return static__1b4be0685_logical(&(_8718_f), jule::Str::lit("Lt", 2));;
}



inline jule::Bool static__1b4be1565_LtEq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b36884_Fn> _9220_f) {
	return static__1b4be0685_logical(&(_9220_f), jule::Str::lit("LtEq", 4));;
}



inline jule::Bool static__1b4be18d9_result(jule::Ptr<_1b4b36884_Fn>* _9623_f, jule::Str _9631_ident) {
	if (((((((((((((((*(_9623_f)) == nullptr) || ((*((*(_9623_f))))._field_Ident != _9631_ident)) || ((*((*(_9623_f))))._field_Owner == nullptr)) || ((*((*(_9623_f))))._field_Instances.len() == 0LL)) || (*((*(_9623_f))))._field_Statically) || (*((*(_9623_f))))._field_Unsafety) || _1b4b36d07_IsVoid((*(_9623_f)).ptr())) || ((*((*(_9623_f))))._field_Generics.len() != 0LL)) || ((*((*(_9623_f))))._field_Params.len() != 2LL)) || (*((*((*(_9623_f))))._field_Params[0LL]))._field_Mutable) || _1b4b35762_IsRef((*((*(_9623_f))))._field_Params[0LL].ptr())) || (*((*((*(_9623_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_9623_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1b4b39865_FnIns> _11313_ins = (*((*(_9623_f))))._field_Instances[0LL];;
	return (_1b4c815d3_Struct((*(_11313_ins))._field_Result.ptr()) == (*_11313_ins.alloc)._field_Owner);;
}



inline jule::Bool static__1b4be1ba3_Shl(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b36884_Fn> _11819_f) {
	return static__1b4be18d9_result(&(_11819_f), jule::Str::lit("Shl", 3));;
}



inline jule::Bool static__1b4be1e6c_Shr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b36884_Fn> _12319_f) {
	return static__1b4be18d9_result(&(_12319_f), jule::Str::lit("Shr", 3));;
}



inline jule::Bool static__1b4be2236_Add(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b36884_Fn> _12819_f) {
	return static__1b4be18d9_result(&(_12819_f), jule::Str::lit("Add", 3));;
}



inline jule::Bool static__1b4be2500_Sub(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b36884_Fn> _13319_f) {
	return static__1b4be18d9_result(&(_13319_f), jule::Str::lit("Sub", 3));;
}



inline jule::Bool static__1b4be27b9_Div(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b36884_Fn> _13819_f) {
	return static__1b4be18d9_result(&(_13819_f), jule::Str::lit("Div", 3));;
}



inline jule::Bool static__1b4be2a83_Mul(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b36884_Fn> _14319_f) {
	return static__1b4be18d9_result(&(_14319_f), jule::Str::lit("Mul", 3));;
}



inline jule::Bool static__1b4be2d4c_Mod(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b36884_Fn> _14819_f) {
	return static__1b4be18d9_result(&(_14819_f), jule::Str::lit("Mod", 3));;
}



inline jule::Bool static__1b4be3116_BitAnd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b36884_Fn> _15322_f) {
	return static__1b4be18d9_result(&(_15322_f), jule::Str::lit("BitAnd", 6));;
}



inline jule::Bool static__1b4be33d0_BitOr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b36884_Fn> _15821_f) {
	return static__1b4be18d9_result(&(_15821_f), jule::Str::lit("BitOr", 5));;
}



inline jule::Bool static__1b4be3699_BitXor(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b36884_Fn> _16322_f) {
	return static__1b4be18d9_result(&(_16322_f), jule::Str::lit("BitXor", 6));;
}



inline jule::Bool static__1b4be3a1d_unary(jule::Ptr<_1b4b36884_Fn>* _16722_f, jule::Str _16730_ident) {
	if (((((((((((((*(_16722_f)) == nullptr) || ((*((*(_16722_f))))._field_Ident != _16730_ident)) || ((*((*(_16722_f))))._field_Owner == nullptr)) || ((*((*(_16722_f))))._field_Instances.len() == 0LL)) || (*((*(_16722_f))))._field_Statically) || (*((*(_16722_f))))._field_Unsafety) || _1b4b36d07_IsVoid((*(_16722_f)).ptr())) || ((*((*(_16722_f))))._field_Generics.len() != 0LL)) || ((*((*(_16722_f))))._field_Params.len() != 1LL)) || (*((*((*(_16722_f))))._field_Params[0LL]))._field_Mutable) || _1b4b35762_IsRef((*((*(_16722_f))))._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1b4b39865_FnIns> _18213_ins = (*((*(_16722_f))))._field_Instances[0LL];;
	return (_1b4c815d3_Struct((*(_18213_ins))._field_Result.ptr()) == (*_18213_ins.alloc)._field_Owner);;
}



inline jule::Bool static__1b4be3cd7_Neg(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b36884_Fn> _18719_f) {
	return static__1b4be3a1d_unary(&(_18719_f), jule::Str::lit("Neg", 3));;
}



inline jule::Bool static__1b4be40a1_Pos(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b36884_Fn> _19219_f) {
	return static__1b4be3a1d_unary(&(_19219_f), jule::Str::lit("Pos", 3));;
}



inline jule::Bool static__1b4be436a_BitNot(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b36884_Fn> _19722_f) {
	return static__1b4be3a1d_unary(&(_19722_f), jule::Str::lit("BitNot", 6));;
}



inline jule::Bool static__1b4be46de_assign(jule::Ptr<_1b4b36884_Fn>* _20123_f, jule::Str _20131_ident) {
	if (((((((((((((((*(_20123_f)) == nullptr) || ((*((*(_20123_f))))._field_Ident != _20131_ident)) || ((*((*(_20123_f))))._field_Owner == nullptr)) || ((*((*(_20123_f))))._field_Instances.len() == 0LL)) || (*((*(_20123_f))))._field_Statically) || (*((*(_20123_f))))._field_Unsafety) || (!(_1b4b36d07_IsVoid((*(_20123_f)).ptr())))) || ((*((*(_20123_f))))._field_Generics.len() != 0LL)) || ((*((*(_20123_f))))._field_Params.len() != 2LL)) || (!((*((*((*(_20123_f))))._field_Params[0LL]))._field_Mutable))) || _1b4b35762_IsRef((*((*(_20123_f))))._field_Params[0LL].ptr())) || (*((*((*(_20123_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_20123_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	return true;;
}



inline jule::Bool static__1b4be49a8_AddAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b36884_Fn> _22125_f) {
	return static__1b4be46de_assign(&(_22125_f), jule::Str::lit("AddAssign", 9));;
}



inline jule::Bool static__1b4be4c72_SubAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b36884_Fn> _22625_f) {
	return static__1b4be46de_assign(&(_22625_f), jule::Str::lit("SubAssign", 9));;
}



inline jule::Bool static__1b4be503b_DivAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b36884_Fn> _23125_f) {
	return static__1b4be46de_assign(&(_23125_f), jule::Str::lit("DivAssign", 9));;
}



inline jule::Bool static__1b4be5305_MulAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b36884_Fn> _23625_f) {
	return static__1b4be46de_assign(&(_23625_f), jule::Str::lit("MulAssign", 9));;
}



inline jule::Bool static__1b4be55be_ModAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b36884_Fn> _24125_f) {
	return static__1b4be46de_assign(&(_24125_f), jule::Str::lit("ModAssign", 9));;
}



inline jule::Bool static__1b4be5888_ShlAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b36884_Fn> _24625_f) {
	return static__1b4be46de_assign(&(_24625_f), jule::Str::lit("ShlAssign", 9));;
}



inline jule::Bool static__1b4be5b52_ShrAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b36884_Fn> _25125_f) {
	return static__1b4be46de_assign(&(_25125_f), jule::Str::lit("ShrAssign", 9));;
}



inline jule::Bool static__1b4be5e1b_BitOrAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b36884_Fn> _25627_f) {
	return static__1b4be46de_assign(&(_25627_f), jule::Str::lit("BitOrAssign", 11));;
}



inline jule::Bool static__1b4be61d5_BitAndAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b36884_Fn> _26128_f) {
	return static__1b4be46de_assign(&(_26128_f), jule::Str::lit("BitAndAssign", 12));;
}



inline jule::Bool static__1b4be649e_BitXorAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b36884_Fn> _26628_f) {
	return static__1b4be46de_assign(&(_26628_f), jule::Str::lit("BitXorAssign", 12));;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4bde92b_FuncPattern _Src) {
	_Stream << "FuncPattern{";
	_Stream << "}";
	return _Stream;
}



inline void _1b4c2d86b_pushErr(_1b4c2d371_typeCompatibilityChecker* _self_, jule::Str _11926_fmt, jule::Slice<jule::Any> _11939_args) {
	_1b4bbd872_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _11926_fmt, _11939_args);
}



inline jule::Bool _1b4c2db02_checkTrait(_1b4c2d371_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1b4c7d9dc_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1b4b49c3d_Trait> _12713_trt = _1b4c81869_Trait((*(_self_))._field_dest.ptr());;
	jule::Bool _12813_ref = false;;
	{
		
		if ((_1b4c802e6_Sptr((*(_self_))._field_src) != nullptr)) {
			_case_begin_1ab412c7e:;
			{
				_12813_ref=true;
				(*(_self_))._field_src=(*(_1b4c802e6_Sptr((*(_self_))._field_src)))._field_Elem;
				if ((_1b4c815d3_Struct((*(_self_))._field_src) == nullptr)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				goto _case_begin_1ab412d28;
			}
		}
		else if ((_1b4c815d3_Struct((*(_self_))._field_src) != nullptr)) {
			_case_begin_1ab412d28:;
			{
				jule::Ptr<_1b4b24641_StructIns> _13813_s = _1b4c815d3_Struct((*(_self_))._field_src);;
				if ((!(_1b4b23002_IsImplements((*(_13813_s))._field_Decl.ptr(), _12713_trt)))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if (((!(_12813_ref)) && _1b4c2be1e_traitHasReferenceReceiver(&(_12713_trt)))) {
					_1b4c2d86b_pushErr(_self_, jule::Str::lit("trait has reference receiver parameter used method, cannot assign non-reference instance", 88), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1b4c81869_Trait((*(_self_))._field_src) != nullptr)) {
			_case_begin_1ab412da0:;
			{
				jule::Ptr<_1b4b49c3d_Trait> _14817_base = _1b4c81869_Trait((*(_self_))._field_src);;
				if ((_12713_trt == _14817_base)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_julec_label_1ab417e71:;
				{
					auto expr = &((*(_14817_base))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab41804d:;
					if (it != expr_end) {
						jule::Ptr<_1b4b218b3_Struct> _15320_s1 = *it;
						{
							{
								auto expr = &((*(_12713_trt))._field_Implemented);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1ab418911:;
								if (it != expr_end) {
									jule::Ptr<_1b4b218b3_Struct> _15424_s2 = *it;
									{
										if ((_15320_s1 == _15424_s2)) {
											goto _iter_next_1ab41804d;
										};
									}
									_iter_next_1ab418911:;
									++it;
									goto _iter_begin_1ab418911;
								}
								_iter_end_1ab418911:;
							};
							__jule_func_result = false;
							return __jule_func_result;;
						}
						_iter_next_1ab41804d:;
						++it;
						goto _iter_begin_1ab41804d;
					}
					_iter_end_1ab41804d:;
				};
				{
					auto expr = &((*_12713_trt.alloc)._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab418d2e:;
					if (it != expr_end) {
						jule::Ptr<_1b4b36884_Fn> _16125_m1 = *it;
						{
							jule::Ptr<_1b4b36884_Fn> _16221_m2 = _1b4b4a8dc_FindMethod(_14817_base, (*(_16125_m1))._field_Ident);;
							if ((_16221_m2 == nullptr)) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
							jule::Ptr<_1b4b39865_FnIns> _16617_m1k = _1b4bc83a4_getTraitCheckFnKind((*(_self_))._field_s, &(_16125_m1));;
							jule::Ptr<_1b4b39865_FnIns> _16717_m2k = _1b4bc83a4_getTraitCheckFnKind((*(_self_))._field_s, &(_16221_m2));;
							if ((!(_1b4b3a7cd_equalTrait(_16617_m1k, &(_16717_m2k))))) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
						}
						_iter_next_1ab418d2e:;
						++it;
						goto _iter_begin_1ab418d2e;
					}
					_iter_end_1ab418d2e:;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1ab412c07:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1ab412b6e:;
	};
}



inline jule::Bool _1b4c2dd88_checkPtr(_1b4c2d371_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1b4c7d9dc_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1b4c8c7cb_Ptr> _18213_dest = _1b4c8057c_Ptr((*(_self_))._field_dest.ptr());;
	if (_1b4c8d315_IsUnsafe(_18213_dest.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	__jule_func_result = _1b4c7d118_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1b4c2e11e_checkPrim(_1b4c2d371_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((!((*((*(_self_))._field_dest))._field_Variadic))) {
		jule::Ptr<_1b4c854d8_Prim> _19113_prim = _1b4c80060_Prim((*(_self_))._field_dest);;
		if (((_19113_prim != nullptr) && _1b4c88c06_IsAny(_19113_prim))) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	__jule_func_result = _1b4c7d118_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1b4c2e51a_typeEnum(_1b4c2d371_typeCompatibilityChecker* _self_, jule::Ptr<_1b4b4db54_TypeEnum>* _19928_e, jule::Ptr<_1b4c7c90e_TypeKind>* _19947_t2) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_19928_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab420bc1:;
		if (it != expr_end) {
			jule::Ptr<_1b4b4d57c_TypeEnumItem> _20021_item = *it;
			{
				if (_1b4c7d118_Equal((*((*(_20021_item))._field_Kind))._field_Kind, (*(_19947_t2)))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				jule::Ptr<_1b4b4db54_TypeEnum> _20417_ke = _1b4c80a99_TypeEnum((*(*_20021_item.alloc)._field_Kind.alloc)._field_Kind);;
				if ((_20417_ke == nullptr)) {
					goto _iter_next_1ab420bc1;
				};
				if (_1b4c2e51a_typeEnum(_self_, &(_20417_ke), _19947_t2)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1ab420bc1:;
			++it;
			goto _iter_begin_1ab420bc1;
		}
		_iter_end_1ab420bc1:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1b4c2e7a1_checkTypeEnum(_1b4c2d371_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1b4c7d118_Equal((*(_self_))._field_dest, (*(_self_))._field_src)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1b4b4db54_TypeEnum> _21913_e = _1b4c80a99_TypeEnum((*(_self_))._field_dest);;
	__jule_func_result = _1b4c2e51a_typeEnum(_self_, &(_21913_e), &((*(_self_))._field_src));
	return __jule_func_result;;
}



inline jule::Bool _1b4c2ea37_check(_1b4c2d371_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((_1b4c8057c_Ptr((*(_self_))._field_dest.ptr()) != nullptr)) {
		__jule_func_result = _1b4c2dd88_checkPtr(_self_);
		return __jule_func_result;;
	};
	if (_1b4c7e7ac_NilCompatible((*(_self_))._field_dest)) {
		if (_1b4c7d9dc_IsNil((*(_self_))._field_src.ptr())) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	{
		
		if ((_1b4c80060_Prim((*(_self_))._field_dest) != nullptr)) {
			_case_begin_1ab426424:;
			{
				__jule_func_result = _1b4c2e11e_checkPrim(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1b4c80a99_TypeEnum((*(_self_))._field_dest) != nullptr)) {
			_case_begin_1ab4264ac:;
			{
				__jule_func_result = _1b4c2e7a1_checkTypeEnum(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1b4c81869_Trait((*(_self_))._field_dest) != nullptr)) {
			_case_begin_1ab425dd5:;
			{
				__jule_func_result = _1b4c2db02_checkTrait(_self_);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1ab4259ea:;
			{
				__jule_func_result = _1b4c7d118_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
				return __jule_func_result;;
			}
		}
		_match_end_1ab4258da:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1b4c2d371_typeCompatibilityChecker _Src) {
	_Stream << "typeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline void _1b4c305a4_pushErr(_1b4c30120_assignTypeChecker* _self_, jule::Str _25526_fmt, jule::Slice<jule::Any> _25539_args) {
	_1b4bbd872_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _25526_fmt, _25539_args);
}



inline jule::Bool _1b4c3083a_checkValidity(_1b4c30120_assignTypeChecker* _self_) {
	jule::Bool _26013_valid = true;;
	{
		
		if ((_1b4c8134c_Fn((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab4290a3:;
			{
				jule::Ptr<_1b4b39865_FnIns> _26313_f = _1b4c8134c_Fn((*(*(_self_))._field_d.alloc)._field_Kind);;
				{
					
					if (_1b4b3acea_IsBuiltin(_26313_f.ptr())) {
						_case_begin_1ab42a901:;
						{
							_1b4c305a4_pushErr(_self_, jule::Str::lit("builtin define cannot use as anonymous function", 47), jule::Slice<jule::Any>());
							_26013_valid=false;
						}
					}
					else if ((*((*(_26313_f))._field_Decl))._field_Binded) {
						_case_begin_1ab42a99a:;
						{
							_1b4c305a4_pushErr(_self_, jule::Str::lit("binded functions cannot use as anonymous function", 49), jule::Slice<jule::Any>());
							_26013_valid=false;
						}
					}
					else if (((!((*((*(_26313_f))._field_Decl))._field_Statically)) && _1b4b3708d_IsMethod((*_26313_f.alloc)._field_Decl))) {
						_case_begin_1ab42aa11:;
						{
							_1b4c305a4_pushErr(_self_, jule::Str::lit("non-static methods cannot use as anonymous function", 51), jule::Slice<jule::Any>());
							_26013_valid=false;
						}
					}
					else if ((((*((*(_26313_f))._field_Decl))._field_Generics.len() > 0LL) && ((*_26313_f.alloc)._field_Generics.len() == 0LL))) {
						_case_begin_1ab42aa77:;
						{
							_1b4c305a4_pushErr(_self_, jule::Str::lit("genericed functions cannot use as anonymous function", 52), jule::Slice<jule::Any>());
							_1b4bbdbd5_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("instantiate generic function to use as anonymous function", 57), jule::Slice<jule::Any>());
							_26013_valid=false;
						}
					}
					_match_end_1ab42a824:;
				};
			}
		}
		else if ((_1b4c81d86_Tup((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab42914c:;
			{
				_1b4c305a4_pushErr(_self_, jule::Str::lit("tuples cannot assign to single define in same time", 50), jule::Slice<jule::Any>());
				_26013_valid=false;
			}
		}
		_match_end_1ab42902b:;
	};
	return _26013_valid;;
}



inline jule::Bool _1b4c30ac1_checkConst(_1b4c30120_assignTypeChecker* _self_) {
	if (((!((*((*(_self_))._field_d))._field_untyped)) || (_1b4c80060_Prim((*(_self_))._field_dest.ptr()) == nullptr))) {
		return false;;
	};
	jule::Str _2929_kind = (*(_1b4c80060_Prim((*(_self_))._field_dest)))._field_Kind;;
	{
		
		if (_1b2752bcd_IsFloat(_2929_kind)) {
			_case_begin_1ab431a06:;
			{
				if ((!(_1b4c2c2c6_floatAssignable(&(_2929_kind), &((*(_self_))._field_d))))) {
					return false;;
				};
				(*((*(*(_self_))._field_d.alloc)._field_Constant))._field_Kind=_2929_kind;
			}
		}
		else if (_1b275288c_IsInt(_2929_kind)) {
			_case_begin_1ab431a8e:;
			{
				if ((!(_1b4c2cd87_intAssignable(_2929_kind, &((*(_self_))._field_d))))) {
					return false;;
				};
				(*((*(*(_self_))._field_d.alloc)._field_Constant))._field_Kind=_2929_kind;
			}
		}
		else {
			_case_begin_1ab431990:;
			{
				return false;;
			}
		}
		_match_end_1ab43185d:;
	};
	return true;;
}



inline jule::Bool _1b4c30d57_checkCompatibility(_1b4c30120_assignTypeChecker* _self_) {
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1ab433cc2:;
			{
				return false;;
			}
		}
		else if ((!(_1b4c3083a_checkValidity(_self_)))) {
			_case_begin_1ab433d38:;
			{
				return false;;
			}
		}
		else if (_1b4c30ac1_checkConst(_self_)) {
			_case_begin_1ab433d9e:;
			{
				return true;;
			}
		}
		else if ((_1b4c80813_Enum((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab433e15:;
			{
				jule::Ptr<_1b4c7c90e_TypeKind> _32117_dkind = (*(_self_))._field_dest;;
				if ((_1b4c80813_Enum((*(_self_))._field_dest.ptr()) != nullptr)) {
					_32117_dkind=(*((*(_1b4c80813_Enum((*(_self_))._field_dest)))._field_Kind))._field_Kind;
				};
				jule::Ptr<_1b4c854d8_Prim> _32513_prim = _1b4c80060_Prim((*(_self_))._field_dest);;
				if (((_32513_prim == nullptr) || _1b4c88c06_IsAny(_32513_prim.ptr()))) {
					goto _match_end_1ab4330e0;
				};
				jule::Ptr<_1b4c7c90e_TypeKind> _33017_dest = (*(*(_1b4c80813_Enum((*(*(_self_))._field_d.alloc)._field_Kind)))._field_Kind.alloc)._field_Kind;;
				return _1b4bc6cdc_checkTypeCompatibility((*(_self_))._field_s, &(_33017_dest), &(_32117_dkind), &((*(_self_))._field_errorToken));;
			}
		}
		_match_end_1ab4330e0:;
	};
	return _1b4bc76b1_checkTypeCompatibility1((*(_self_))._field_s, &((*(_self_))._field_dest), &((*(_self_))._field_d), &((*(_self_))._field_errorToken));;
}



inline jule::Bool _1b4c310dd_check(_1b4c30120_assignTypeChecker* _self_) {
	jule::Bool _3379_ok = _1b4c30d57_checkCompatibility(_self_);;
	if ((_3379_ok && (!((*((*((*(_self_))._field_d))._field_Kind))._field_Variadic)))) {
		_1b4c99e15_applyImplicitCast(&((*(_self_))._field_dest), &((*(_self_))._field_d), &((*(_self_))._field_errorToken));
	};
	return _3379_ok;;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4c30120_assignTypeChecker _Src) {
	_Stream << "assignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ab44d193_annotateConstraintElem(_1b4c319e5_dynamicTypeAnnotation* _self_, jule::Ptr<_1b4c7c90e_TypeKind>* _35749_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1ab44e86a:;
			{
				jule::Ptr<_1b4c7c90e_TypeKind> _36021_elem = nullptr;;
				{
					
{
						_case_begin_1ab45067e:;
						{
							_36021_elem=(*(_1b4c80d30_Arr((*(_35749_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1ab4505c4:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1b4aece88_ArrTypeDecl>()))._field_Elem;
				return _1b4c33200_annotateConstraint(_self_, &(_36021_elem));;
			}
		}
		_match_end_1ab44e804:;
	};
	return false;;
}

inline jule::Bool _1ab44ca44_annotateConstraintElem(_1b4c319e5_dynamicTypeAnnotation* _self_, jule::Ptr<_1b4c7c90e_TypeKind>* _35749_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type69) {
			_case_begin_1ab4532db:;
			{
				jule::Ptr<_1b4c7c90e_TypeKind> _36021_elem = nullptr;;
				{
					
{
						_case_begin_1ab453e68:;
						{
							_36021_elem=(*(_1b4c810b6_Slc((*(_35749_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1ab454045:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1b4aec0ec_SlcTypeDecl>()))._field_Elem;
				return _1b4c33200_annotateConstraint(_self_, &(_36021_elem));;
			}
		}
		_match_end_1ab453275:;
	};
	return false;;
}

inline jule::Bool _1ab44eb9a_annotateConstraintElem(_1b4c319e5_dynamicTypeAnnotation* _self_, jule::Ptr<_1b4c7c90e_TypeKind>* _35749_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1ab456c5c:;
			{
				jule::Ptr<_1b4c7c90e_TypeKind> _36021_elem = nullptr;;
				{
					
{
						_case_begin_1ab457b09:;
						{
							_36021_elem=(*(_1b4c8057c_Ptr((*(_35749_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1ab4579b6:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1b4aec6e6_PtrTypeDecl>()))._field_Elem;
				return _1b4c33200_annotateConstraint(_self_, &(_36021_elem));;
			}
		}
		_match_end_1ab456be6:;
	};
	return false;;
}

inline jule::Bool _1ab457158_annotateConstraintElem(_1b4c319e5_dynamicTypeAnnotation* _self_, jule::Ptr<_1b4c7c90e_TypeKind>* _35749_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1ab45a3ae:;
			{
				jule::Ptr<_1b4c7c90e_TypeKind> _36021_elem = nullptr;;
				{
					
{
						_case_begin_1ab45b2d3:;
						{
							_36021_elem=(*(_1b4c802e6_Sptr((*(_35749_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1ab45b118:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1b4aebc67_SptrTypeDecl>()))._field_Elem;
				return _1b4c33200_annotateConstraint(_self_, &(_36021_elem));;
			}
		}
		_match_end_1ab45a348:;
	};
	return false;;
}



inline jule::Bool _1b4c323db_annotateConstraintMap(_1b4c319e5_dynamicTypeAnnotation* _self_, jule::Ptr<_1b4c7c90e_TypeKind>* _37745_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1ab43b1b4:;
			{
				jule::Ptr<_1b4c8b17b_Map> _38017_m = _1b4c81b00_Map((*(_37745_k)).ptr());;
				jule::Ptr<_1b4aed6d6_MapTypeDecl> _38117_m2 = (*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1b4aed6d6_MapTypeDecl>();;
				(*(_self_))._field_c=(*(_38117_m2))._field_Key;
				if ((!(_1b4c33200_annotateConstraint(_self_, &((*(_38017_m))._field_Key))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				(*(_self_))._field_c=(*_38117_m2.alloc)._field_Val;
				__jule_func_result = _1b4c33200_annotateConstraint(_self_, &((*_38017_m.alloc)._field_Val));
				return __jule_func_result;;
			}
		}
		_match_end_1ab43b14d:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1b4c3272c_annotateConstraintTup(_1b4c319e5_dynamicTypeAnnotation* _self_, jule::Ptr<_1b4c7c90e_TypeKind>* _39245_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1ab43e0a7:;
			{
				jule::Ptr<_1b4aec3e9_TupleTypeDecl> _39517_tup = (*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1b4aec3e9_TupleTypeDecl>();;
				jule::Ptr<_1b4c8a5cb_Tuple> _39617_tup2 = _1b4c81d86_Tup((*(_39245_k)).ptr());;
				{
					auto expr = &((*(_39617_tup2))._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab4408a0:;
					if (it != expr_end) {
						jule::Ptr<_1b4c7c90e_TypeKind> _39725_t2 = *it;
						{
							{
								auto expr = &((*(_39517_tup))._field_Types);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1ab44130c:;
								if (it != expr_end) {
									jule::Ptr<_1b4aeabbc_TypeDecl> _39829_t = *it;
									{
										(*(_self_))._field_c=_39829_t;
										if (_1b4c33200_annotateConstraint(_self_, &(_39725_t2))) {
											__jule_func_result = true;
											return __jule_func_result;;
										};
									}
									_iter_next_1ab44130c:;
									++it;
									goto _iter_begin_1ab44130c;
								}
								_iter_end_1ab44130c:;
							};
						}
						_iter_next_1ab4408a0:;
						++it;
						goto _iter_begin_1ab4408a0;
					}
					_iter_end_1ab4408a0:;
				};
			}
		}
		_match_end_1ab43e041:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1b4c32a6d_annotateConstraintFn(_1b4c319e5_dynamicTypeAnnotation* _self_, jule::Ptr<_1b4c7c90e_TypeKind>* _40944_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1ab441807:;
			{
				jule::Ptr<_1b4b126d9_FnDecl> _41217_pf = (*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1b4b126d9_FnDecl>();;
				jule::Ptr<_1b4b39865_FnIns> _41317_f = _1b4c8134c_Fn((*(_40944_k)).ptr());;
				{
					auto expr = &((*(_41317_f))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab4437a4:;
					if (it != expr_end) {
						jule::I64 _41418_i = it - expr->begin();
						jule::Ptr<_1b4b387dc_ParamIns> _41425_fp = *it;
						{
							(*(_self_))._field_c=(*((*(_41217_pf))._field_Params[_41418_i]))._field_Kind;
							if (_1b4c33200_annotateConstraint(_self_, &((*(_41425_fp))._field_Kind))) {
								__jule_func_result = true;
								return __jule_func_result;;
							};
						}
						_iter_next_1ab4437a4:;
						++it;
						_41418_i++;
						goto _iter_begin_1ab4437a4;
					}
					_iter_end_1ab4437a4:;
				};
				if (((*_41217_pf.alloc)._field_Result != nullptr)) {
					(*(_self_))._field_c=(*(*_41217_pf.alloc)._field_Result.alloc)._field_Kind;
					if (_1b4c33200_annotateConstraint(_self_, &((*_41317_f.alloc)._field_Result))) {
						__jule_func_result = true;
						return __jule_func_result;;
					};
				};
			}
		}
		_match_end_1ab441791:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1b4c32dae_annotateConstraintIdent(_1b4c319e5_dynamicTypeAnnotation* _self_, jule::Ptr<_1b4c7c90e_TypeKind>* _43047_k) {
	jule::Ptr<_1b4aeb2c7_IdentTypeDecl> _43113_ident = (*((*(_self_))._field_c))._field_Kind.cast_ptr<_1b4aeb2c7_IdentTypeDecl>(&__jule_any_type74);;
	jule::Ptr<_1b4b24641_StructIns> _43213_s = _1b4c815d3_Struct((*(_43047_k)).ptr());;
	{
		auto expr = &((*((*(*(_self_))._field_f.alloc)._field_Decl))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab447203:;
		if (it != expr_end) {
			jule::I64 _43313_i = it - expr->begin();
			jule::Ptr<_1b4b07dc7_GenericDecl> _43316_g = *it;
			{
				if (((*(_43316_g))._field_Ident == (*(_43113_ident))._field_Ident)) {
					jule::Ptr<_1b4c7b028_InsGeneric> _43521_fg = (*((*(_self_))._field_f))._field_Generics[_43313_i];;
					if ((_43521_fg != nullptr)) {
						return false;;
					};
					_1b4c33563_pushGeneric(_self_, _43047_k, _43313_i);
					return true;;
				};
				if ((_43213_s == nullptr)) {
					goto _iter_next_1ab447203;
				};
				jule::Ptr<_1b4aeabbc_TypeDecl> _44517_c = (*(_self_))._field_c;;
				{
					auto expr = &((*_43113_ident.alloc)._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab449c83:;
					if (it != expr_end) {
						jule::Ptr<_1b4aeabbc_TypeDecl> _44625_ig = *it;
						{
							(*(_self_))._field_c=_44625_ig;
							{
								auto expr = &((*(_43213_s))._field_Generics);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1ab44a855:;
								if (it != expr_end) {
									jule::Ptr<_1b4c7b028_InsGeneric> _44829_sg = *it;
									{
										if (_1b4c33200_annotateConstraint(_self_, &((*(_44829_sg))._field_Kind))) {
											return true;;
										};
									}
									_iter_next_1ab44a855:;
									++it;
									goto _iter_begin_1ab44a855;
								}
								_iter_end_1ab44a855:;
							};
						}
						_iter_next_1ab449c83:;
						++it;
						goto _iter_begin_1ab449c83;
					}
					_iter_end_1ab449c83:;
				};
				(*(_self_))._field_c=_44517_c;
			}
			_iter_next_1ab447203:;
			++it;
			_43313_i++;
			goto _iter_begin_1ab447203;
		}
		_iter_end_1ab447203:;
	};
	return false;;
}



inline jule::Bool _1b4c33200_annotateConstraint(_1b4c319e5_dynamicTypeAnnotation* _self_, jule::Ptr<_1b4c7c90e_TypeKind>* _45942_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1ab44ad0b:;
			{
				return _1b4c32dae_annotateConstraintIdent(_self_, _45942_k);;
			}
		}
		_match_end_1ab44ac95:;
	};
	{
		
		if ((_1b4c80d30_Arr((*(_45942_k)).ptr()) != nullptr)) {
			_case_begin_1ab44b999:;
			{
				return _1ab44d193_annotateConstraintElem(_self_, _45942_k);;
			}
		}
		else if ((_1b4c810b6_Slc((*(_45942_k)).ptr()) != nullptr)) {
			_case_begin_1ab44ba10:;
			{
				return _1ab44ca44_annotateConstraintElem(_self_, _45942_k);;
			}
		}
		else if ((_1b4c8057c_Ptr((*(_45942_k)).ptr()) != nullptr)) {
			_case_begin_1ab44ba76:;
			{
				return _1ab44eb9a_annotateConstraintElem(_self_, _45942_k);;
			}
		}
		else if ((_1b4c802e6_Sptr((*(_45942_k)).ptr()) != nullptr)) {
			_case_begin_1ab44badc:;
			{
				return _1ab457158_annotateConstraintElem(_self_, _45942_k);;
			}
		}
		else if ((_1b4c81b00_Map((*(_45942_k)).ptr()) != nullptr)) {
			_case_begin_1ab44bb53:;
			{
				return _1b4c323db_annotateConstraintMap(_self_, _45942_k);;
			}
		}
		else if ((_1b4c8134c_Fn((*(_45942_k)).ptr()) != nullptr)) {
			_case_begin_1ab44c23b:;
			{
				return _1b4c32a6d_annotateConstraintFn(_self_, _45942_k);;
			}
		}
		else if ((_1b4c81d86_Tup((*(_45942_k)).ptr()) != nullptr)) {
			_case_begin_1ab44c2a2:;
			{
				return _1b4c3272c_annotateConstraintTup(_self_, _45942_k);;
			}
		}
		else {
			_case_begin_1ab44bcda:;
			{
				return false;;
			}
		}
		_match_end_1ab44bc85:;
	};
}



inline void _1b4c33563_pushGeneric(_1b4c319e5_dynamicTypeAnnotation* _self_, jule::Ptr<_1b4c7c90e_TypeKind>* _48435_k, jule::I64 _48449_i) {
	(*((*(_self_))._field_f))._field_Generics[_48449_i]=jule::new_ptr<_1b4c7b028_InsGeneric>(_1b4c7b028_InsGeneric{._field_Kind=(*(_48435_k)), });
	jule::Ptr<_1b4b07dc7_GenericDecl> _48613_gd = (*((*(*(_self_))._field_f.alloc)._field_Decl))._field_Generics[_48449_i];;
	{
		auto expr = &((*(_self_))._field_ignored);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab45e3e6:;
		if (it != expr_end) {
			jule::Ptr<_1b4c7c90e_TypeKind> _48721_ignored = *it;
			{
				if (((*(_48613_gd))._field_Ident == _1b4c7ccc7_Str(_48721_ignored.ptr()))) {
					(*_48721_ignored.alloc)._field_Kind=(*((*(_48435_k))))._field_Kind;
				};
			}
			_iter_next_1ab45e3e6:;
			++it;
			goto _iter_begin_1ab45e3e6;
		}
		_iter_end_1ab45e3e6:;
	};
	if ((((*_48613_gd.alloc)._field_Constraint == nullptr) || ((*((*_48613_gd.alloc)._field_Constraint))._field_Mask.len() != 1LL))) {
		return;;
	};
	(*(_self_))._field_c=(*((*_48613_gd.alloc)._field_Constraint))._field_Mask[0LL];
	_1b4c33200_annotateConstraint(_self_, _48435_k);
}



inline jule::Bool _1b4c338a4_annotatePrim(_1b4c319e5_dynamicTypeAnnotation* _self_, jule::Ptr<_1b4c7c90e_TypeKind>* _49943_k) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1b4c358c8_annotateAny(_self_, _49943_k);
	return __jule_func_result;;
}



inline jule::Bool _1b4c33be5_annotateArr(_1b4c319e5_dynamicTypeAnnotation* _self_, jule::Ptr<_1b4c7c90e_TypeKind>* _50342_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1b4c8bd08_Arr> _50413_parr = _1b4c80d30_Arr((*((*(_self_))._field_k)).ptr());;
	if ((_50413_parr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1b4c8bd08_Arr> _50813_arr = _1b4c80d30_Arr((*(_50342_k)).ptr());;
	(*(_self_))._field_k=(&((*(_50413_parr))._field_Elem));
	__jule_func_result = _1b4c35c19_annotateKind(_self_, &((*(_50813_arr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1b4c34036_annotateSlc(_1b4c319e5_dynamicTypeAnnotation* _self_, jule::Ptr<_1b4c7c90e_TypeKind>* _51342_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1b4c899d7_Slc> _51413_pslc = _1b4c810b6_Slc((*((*(_self_))._field_k)).ptr());;
	if ((_51413_pslc == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1b4c899d7_Slc> _51813_slc = _1b4c810b6_Slc((*(_51342_k)).ptr());;
	(*(_self_))._field_k=(&((*(_51413_pslc))._field_Elem));
	__jule_func_result = _1b4c35c19_annotateKind(_self_, &((*(_51813_slc))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1b4c34432_checkMapKey(_1b4c319e5_dynamicTypeAnnotation* _self_, jule::Ptr<_1b4c7c90e_TypeKind>* _52341_k, jule::Ptr<_1b4c7c90e_TypeKind>* _52361_ck) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1b4c7c90e_TypeKind>* _52413_old = (*(_self_))._field_k;;
	(*(_self_))._field_k=_52341_k;
	__jule_func_result=_1b4c35c19_annotateKind(_self_, _52361_ck);
	(*(_self_))._field_k=_52413_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1b4c34773_annotateMap(_1b4c319e5_dynamicTypeAnnotation* _self_, jule::Ptr<_1b4c7c90e_TypeKind>* _53142_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1b4c8b17b_Map> _53213_pmap = _1b4c81b00_Map((*((*(_self_))._field_k)).ptr());;
	if ((_53213_pmap == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1b4c8b17b_Map> _53613_m = _1b4c81b00_Map((*(_53142_k)).ptr());;
	__jule_func_result = (_1b4c34432_checkMapKey(_self_, (&((*(_53213_pmap))._field_Key)), &((*(_53613_m))._field_Key)) && _1b4c34432_checkMapKey(_self_, (&((*(_53213_pmap))._field_Val)), &((*_53613_m.alloc)._field_Val)));
	return __jule_func_result;;
}



inline jule::Bool _1b4c34ab4_annotateFn(_1b4c319e5_dynamicTypeAnnotation* _self_, jule::Ptr<_1b4c7c90e_TypeKind>* _54141_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1b4b39865_FnIns> _54213_pf = _1b4c8134c_Fn((*((*(_self_))._field_k)).ptr());;
	if ((_54213_pf == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1b4b39865_FnIns> _54613_f = _1b4c8134c_Fn((*(_54141_k)).ptr());;
	{
		
		if (((*(_54213_pf))._field_Params.len() != (*(_54613_f))._field_Params.len())) {
			_case_begin_1ab46ba96:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_1b4b36d07_IsVoid((*(_54213_pf))._field_Decl.ptr()) != _1b4b36d07_IsVoid((*(_54613_f))._field_Decl))) {
			_case_begin_1ab46bb2e:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1ab46ba0d:;
	};
	__jule_func_result=true;
	jule::Ptr<_1b4c7c90e_TypeKind>* _55513_old = (*(_self_))._field_k;;
	{
		auto expr = &((*(_54613_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab46d999:;
		if (it != expr_end) {
			jule::I64 _55614_i = it - expr->begin();
			jule::Ptr<_1b4b387dc_ParamIns> _55621_fp = *it;
			{
				(*(_self_))._field_k=(&((*((*(_54213_pf))._field_Params[_55614_i]))._field_Kind));
				__jule_func_result=(_1b4c35c19_annotateKind(_self_, &((*(_55621_fp))._field_Kind)) && __jule_func_result);
			}
			_iter_next_1ab46d999:;
			++it;
			_55614_i++;
			goto _iter_begin_1ab46d999;
		}
		_iter_end_1ab46d999:;
	};
	if ((!(_1b4b36d07_IsVoid((*(_54213_pf))._field_Decl.ptr())))) {
		(*(_self_))._field_k=(&((*(_54213_pf))._field_Result));
		__jule_func_result=(_1b4c35c19_annotateKind(_self_, &((*_54613_f.alloc)._field_Result)) && __jule_func_result);
	};
	(*(_self_))._field_k=_55513_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1b4c34e05_annotatePtr(_1b4c319e5_dynamicTypeAnnotation* _self_, jule::Ptr<_1b4c7c90e_TypeKind>* _57042_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1b4c8c7cb_Ptr> _57113_pptr = _1b4c8057c_Ptr((*((*(_self_))._field_k)).ptr());;
	if ((_57113_pptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1b4c8c7cb_Ptr> _57513_ptr = _1b4c8057c_Ptr((*(_57042_k)).ptr());;
	(*(_self_))._field_k=(&((*(_57113_pptr))._field_Elem));
	__jule_func_result = _1b4c35c19_annotateKind(_self_, &((*(_57513_ptr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1b4c35246_annotateSptr(_1b4c319e5_dynamicTypeAnnotation* _self_, jule::Ptr<_1b4c7c90e_TypeKind>* _58043_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1b4c89014_Sptr> _58113_ssptr = _1b4c802e6_Sptr((*((*(_self_))._field_k)).ptr());;
	if ((_58113_ssptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1b4c89014_Sptr> _58513_sptr = _1b4c802e6_Sptr((*(_58043_k)).ptr());;
	(*(_self_))._field_k=(&((*(_58113_ssptr))._field_Elem));
	__jule_func_result = _1b4c35c19_annotateKind(_self_, &((*(_58513_sptr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1b4c35587_annotateStruct(_1b4c319e5_dynamicTypeAnnotation* _self_, jule::Ptr<_1b4c7c90e_TypeKind>* _59045_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1b4b24641_StructIns> _59113_s = _1b4c815d3_Struct((*((*(_self_))._field_k)).ptr());;
	if ((_59113_s == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1b4b24641_StructIns> _59513_s2 = _1b4c815d3_Struct((*(_59045_k)).ptr());;
	if (((*(_59113_s))._field_Generics.len() != (*(_59513_s2))._field_Generics.len())) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &((*(_59113_s))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab4778e8:;
		if (it != expr_end) {
			jule::I64 _59914_i = it - expr->begin();
			jule::Ptr<_1b4c7b028_InsGeneric> _59921_g = *it;
			{
				jule::Ptr<_1b4c7b028_InsGeneric> _60017_g2 = (*_59513_s2.alloc)._field_Generics[_59914_i];;
				if (_1b4c7d118_Equal((*(_59921_g))._field_Kind, (*(_60017_g2))._field_Kind)) {
					goto _iter_next_1ab4778e8;
				};
				(*(_self_))._field_k=(&((*_59921_g.alloc)._field_Kind));
				if ((!(_1b4c35c19_annotateKind(_self_, &((*_60017_g2.alloc)._field_Kind))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1ab4778e8:;
			++it;
			_59914_i++;
			goto _iter_begin_1ab4778e8;
		}
		_iter_end_1ab4778e8:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1b4c358c8_annotateAny(_1b4c319e5_dynamicTypeAnnotation* _self_, jule::Ptr<_1b4c7c90e_TypeKind>* _61242_k) {
	jule::Bool __jule_func_result = false;
	jule::Str _6139_kind = _1b4c7ccc7_Str((*((*(_self_))._field_k)).ptr());;
	{
		auto expr = &((*((*(*(_self_))._field_f.alloc)._field_Decl))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab47ae90:;
		if (it != expr_end) {
			jule::I64 _61413_i = it - expr->begin();
			jule::Ptr<_1b4b07dc7_GenericDecl> _61416_g = *it;
			{
				if ((_6139_kind != (*(_61416_g))._field_Ident)) {
					goto _iter_next_1ab47ae90;
				};
				jule::Ptr<_1b4c7b028_InsGeneric> _61813_t = (*((*(_self_))._field_f))._field_Generics[_61413_i];;
				{
					
					if ((_61813_t == nullptr) || ((*(_61813_t))._field_Kind == nullptr)) {
						_case_begin_1ab47c7bb:;
						{
							_1b4c33563_pushGeneric(_self_, _61242_k, _61413_i);
						}
					}
					else if ((!(_1b4c7d118_Equal((*(_61813_t))._field_Kind, (*(_61242_k)))))) {
						_case_begin_1ab47c854:;
						{
							__jule_func_result = false;
							return __jule_func_result;;
						}
					}
					_match_end_1ab47c6ab:;
				};
				(*((*((*(_self_))._field_k))))._field_Kind=(*((*(_61242_k))))._field_Kind;
				__jule_func_result = true;
				return __jule_func_result;;
			}
			_iter_next_1ab47ae90:;
			++it;
			_61413_i++;
			goto _iter_begin_1ab47ae90;
		}
		_iter_end_1ab47ae90:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1b4c35c19_annotateKind(_1b4c319e5_dynamicTypeAnnotation* _self_, jule::Ptr<_1b4c7c90e_TypeKind>* _63343_k) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_k == nullptr) || ((*((*(_self_))._field_k)) == nullptr))) {
		return __jule_func_result;;
	};
	{
		
		if (_1b4c358c8_annotateAny(_self_, _63343_k)) {
			_case_begin_1ab47ed84:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1b4c80060_Prim((*(_63343_k)).ptr()) != nullptr)) {
			_case_begin_1ab47edea:;
			{
				__jule_func_result = _1b4c338a4_annotatePrim(_self_, _63343_k);
				return __jule_func_result;;
			}
		}
		else if ((_1b4c80d30_Arr((*(_63343_k)).ptr()) != nullptr)) {
			_case_begin_1ab47ee61:;
			{
				__jule_func_result = _1b4c33be5_annotateArr(_self_, _63343_k);
				return __jule_func_result;;
			}
		}
		else if ((_1b4c810b6_Slc((*(_63343_k)).ptr()) != nullptr)) {
			_case_begin_1ab47eed8:;
			{
				__jule_func_result = _1b4c34036_annotateSlc(_self_, _63343_k);
				return __jule_func_result;;
			}
		}
		else if ((_1b4c81b00_Map((*(_63343_k)).ptr()) != nullptr)) {
			_case_begin_1ab4801a3:;
			{
				__jule_func_result = _1b4c34773_annotateMap(_self_, _63343_k);
				return __jule_func_result;;
			}
		}
		else if ((_1b4c8134c_Fn((*(_63343_k)).ptr()) != nullptr)) {
			_case_begin_1ab480219:;
			{
				__jule_func_result = _1b4c34ab4_annotateFn(_self_, _63343_k);
				return __jule_func_result;;
			}
		}
		else if ((_1b4c8057c_Ptr((*(_63343_k)).ptr()) != nullptr)) {
			_case_begin_1ab480280:;
			{
				__jule_func_result = _1b4c34e05_annotatePtr(_self_, _63343_k);
				return __jule_func_result;;
			}
		}
		else if ((_1b4c802e6_Sptr((*(_63343_k)).ptr()) != nullptr)) {
			_case_begin_1ab4802e6:;
			{
				__jule_func_result = _1b4c35246_annotateSptr(_self_, _63343_k);
				return __jule_func_result;;
			}
		}
		else if ((_1b4c815d3_Struct((*(_63343_k)).ptr()) != nullptr)) {
			_case_begin_1ab48036d:;
			{
				__jule_func_result = _1b4c35587_annotateStruct(_self_, _63343_k);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1ab47ec63:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1ab47e801:;
	};
}



inline jule::Bool _1b4c35ea0_annotate(_1b4c319e5_dynamicTypeAnnotation* _self_) {
	jule::Bool __jule_func_result = false;
	(*(_self_))._field_k=(&((*((*(_self_))._field_p))._field_Kind));
	__jule_func_result = _1b4c35c19_annotateKind(_self_, &((*((*(_self_))._field_a))._field_Kind));
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4c319e5_dynamicTypeAnnotation _Src) {
	_Stream << "dynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "k:" << _Src._field_k << ", ";
	_Stream << "c:" << _Src._field_c << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _1b4c36db3_pushErrToken(_1b4c36852_fnCallArgChecker* _self_, jule::Ptr<_1b4ad5712_Token> _67831_token, jule::Str _67846_fmt, jule::Slice<jule::Any> _67859_args) {
	_1b4bbd872_pushErr((*((*(_self_))._field_e))._field_s.ptr(), _67831_token, _67846_fmt, _67859_args);
}



inline void _1b4c37226_pushErr(_1b4c36852_fnCallArgChecker* _self_, jule::Str _68226_fmt, jule::Slice<jule::Any> _68239_args) {
	_1b4c36db3_pushErrToken(_self_, (*(_self_))._field_errorToken, _68226_fmt, _68239_args);
}



inline jule::Slice<jule::Ptr<_1b4b387dc_ParamIns>> _1b4c374ac_getParams(_1b4c36852_fnCallArgChecker* _self_) {
	if (((((*((*(_self_))._field_f))._field_Params.len() > 0LL) && ((*((*(*(_self_))._field_f.alloc)._field_Params[0LL]))._field_Decl != nullptr)) && _1b4b354cb_IsSelf((*((*(*(_self_))._field_f.alloc)._field_Params[0LL]))._field_Decl))) {
		return (*(*(_self_))._field_f.alloc)._field_Params.slice(1LL);;
	};
	return (*(*(_self_))._field_f.alloc)._field_Params;;
}



inline jule::Bool _1b4c377ed_checkCounts(_1b4c36852_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1b4b387dc_ParamIns>>* _69531_params) {
	jule::Bool __jule_func_result = false;
	jule::I64 _69613_n = (*(_69531_params)).len();;
	if (((_69613_n > 0LL) && _1b4b354cb_IsSelf((*((*(_69531_params))[0LL]))._field_Decl.ptr()))) {
		(_69613_n)--;
	};
	jule::I64 _70113_diff = (_69613_n - (*(_self_))._field_args.len());;
	jule::Str _70213_log = jule::Str();;
	{
		
		if ((_70113_diff == 0LL)) {
			_case_begin_1ab48bc09:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_69613_n > 0LL) && (*(*((*(_69531_params))[(_69613_n - 1LL)]))._field_Decl.alloc)._field_Variadic)) {
			_case_begin_1ab48bb2c:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_70113_diff < 0LL) || (_70113_diff > (*(_69531_params)).len()))) {
			_case_begin_1ab48b7db:;
			{
				_70213_log=jule::Str::lit("argument overflow: passed more argument than expected to call @", 63);
			}
		}
		else {
			_case_begin_1ab48b775:;
			{
				_70213_log=jule::Str::lit("missing arguments to call @", 27);
			}
		}
		_match_end_1ab48b70e:;
	};
	_1cb1d27a9_StrBuilder _71313_err = static__1cb1d2a73_New(32LL);;
	_1cb1db3d9_WriteStr(&_71313_err, (*((*((*(_self_))._field_f))._field_Decl))._field_Ident);
	_1cb1db3d9_WriteStr(&_71313_err, jule::Str::lit("\n       want (", 14));
	{
		auto expr = _69531_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab48e4e2:;
		if (it != expr_end) {
			jule::I64 _71613_i = it - expr->begin();
			jule::Ptr<_1b4b387dc_ParamIns> *_71616_p = it;
			{
				_1cb1db3d9_WriteStr(&_71313_err, _1b4c7ccc7_Str((*((*(_71616_p))))._field_Kind.ptr()));
				if ((((*(_69531_params)).len() - _71613_i) > 1LL)) {
					_1cb1db3d9_WriteStr(&_71313_err, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1ab48e4e2:;
			++it;
			_71613_i++;
			goto _iter_begin_1ab48e4e2;
		}
		_iter_end_1ab48e4e2:;
	};
	_1cb1db692_WriteByte(&_71313_err, ')');
	_1b4c37226_pushErr(_self_, _70213_log, jule::Slice<jule::Any>::make({jule::Any(_1cb1dbbd1_Str(&_71313_err), &__jule_any_type4)}));
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1b4c37ca4_checkArg(_1b4c36852_fnCallArgChecker* _self_, jule::Ptr<_1b4b387dc_ParamIns>* _72732_p, jule::Ptr<_1b4c466a8_Data>* _72751_arg, jule::Ptr<_1b4ad5712_Token>* _72768_errorToken) {
	jule::Bool __jule_func_result = false;
	if (((*(_self_))._field_dynamicAnnotation && _1b4b3bb42_parameterUsesGenerics(_72732_p, &((*((*((*(_self_))._field_f))._field_Decl))._field_Generics)))) {
		__jule_func_result=((!((*((*((*(_72732_p))))._field_Decl))._field_Variadic)) && _1b4c4043d_isGoodValueToInfer(_72751_arg));
		if (__jule_func_result) {
			_1b4c319e5_dynamicTypeAnnotation _73221_dta = _1b4c319e5_dynamicTypeAnnotation{._field_e=(*(_self_))._field_e, ._field_f=(*(_self_))._field_f, ._field_p=(*(_72732_p)), ._field_a=(*(_72751_arg)), ._field_errorToken=(*(_72768_errorToken)), ._field_ignored=(*(_self_))._field_ignored};;
			__jule_func_result=_1b4c35ea0_annotate(&_73221_dta);
		};
		if ((!(__jule_func_result))) {
			_1b4c36db3_pushErrToken(_self_, (*(_72768_errorToken)), jule::Str::lit("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	if (_1b4bca719_checkValidityForInitExpr((*((*(_self_))._field_e))._field_s, (*(*((*(_72732_p))))._field_Decl.alloc)._field_Mutable, (*(*((*(_72732_p))))._field_Decl.alloc)._field_Reference, &((*((*(_72732_p))))._field_Kind), _72751_arg, _72768_errorToken)) {
		__jule_func_result = _1b4bc6380_checkAssignType((*(*(_self_))._field_e.alloc)._field_s, (*(*((*(_72732_p))))._field_Decl.alloc)._field_Reference, &((*((*(_72732_p))))._field_Kind), _72751_arg, (*(_72768_errorToken)));
		return __jule_func_result;;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1b4c381a0_push(_1b4c36852_fnCallArgChecker* _self_, jule::Ptr<_1b4b387dc_ParamIns>* _75628_p, jule::Ptr<_1b4b00001_Expr> _75646_arg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1b4c7c90e_TypeKind> _75713_old = (*((*(_self_))._field_e))._field_prefix;;
	jule::Bool _7589_oldImmut = (*(*(_self_))._field_e.alloc)._field_immutable;;
	(*(*(_self_))._field_e.alloc)._field_immutable=(!((*((*((*(_75628_p))))._field_Decl))._field_Mutable));
	if (((!((*(_self_))._field_dynamicAnnotation)) && (!((*(*((*(_75628_p))))._field_Decl.alloc)._field_Variadic)))) {
		(*(*(_self_))._field_e.alloc)._field_prefix=(*((*(_75628_p))))._field_Kind;
	} else {
		(*(*(_self_))._field_e.alloc)._field_prefix=nullptr;
	};
	jule::Ptr<_1b4c466a8_Data> _76613_d = _1b4c6b49c_evalExpr((*(_self_))._field_e, _75646_arg);;
	(*(*(_self_))._field_e.alloc)._field_prefix=_75713_old;
	(*(*(_self_))._field_e.alloc)._field_immutable=_7589_oldImmut;
	if ((_76613_d == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1b4c37ca4_checkArg(_self_, _75628_p, &(_76613_d), &((*(_75646_arg))._field_Token));
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push((*(_76613_d))._field_Model); };
	return __jule_func_result;;
}



inline jule::Bool _1b4c3859b_pushVariadic(_1b4c36852_fnCallArgChecker* _self_, jule::Ptr<_1b4b387dc_ParamIns>* _78036_p, jule::I64 _78054_i) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Bool _78213_variadiced = false;;
	jule::Bool _7839_more = ((_78054_i + 1LL) < (*(_self_))._field_args.len());;
	jule::Ptr<_1b4b2adea_SliceExprModel> _78413_model = jule::new_ptr<_1b4b2adea_SliceExprModel>(_1b4b2adea_SliceExprModel{._field_ElemKind=(*((*(_78036_p))))._field_Kind, });;
	jule::Ptr<_1b4c7c90e_TypeKind> _78813_old = (*((*(_self_))._field_e))._field_prefix;;
	jule::Ptr<_1b4c7c90e_TypeKind> _79513_oldKind = (*((*(_78036_p))))._field_Kind;;
	(*((*(_78036_p))))._field_Kind=jule::new_ptr<_1b4c7c90e_TypeKind>((*(*((*(_78036_p))))._field_Kind.alloc));
	(*(*((*(_78036_p))))._field_Kind.alloc)._field_Variadic=false;
	__JULE_DEFER({
		(*(*((*(_78036_p))))._field_Kind.alloc)._field_Variadic=false;
		(*((*(_78036_p))))._field_Kind=_79513_oldKind;
	});;
	for (; (_78054_i < (*(_self_))._field_args.len()); (_78054_i)++) {
		{
			jule::Ptr<_1b4b00001_Expr> _80417_arg = (*(_self_))._field_args[_78054_i];;
			{
				auto &_match_expr{ (*(_80417_arg))._field_Kind };
				
				if (_match_expr.type == &__jule_any_type75) {
					_case_begin_1ab4a15c0:;
					{
						(*(*(_self_))._field_e.alloc)._field_prefix=jule::new_ptr<_1b4c7c90e_TypeKind>(_1b4c7c90e_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1b4c899d7_Slc>(_1b4c899d7_Slc{._field_Elem=(*((*(_78036_p))))._field_Kind}), (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data22)});
					}
				}
				else {
					_case_begin_1ab4a18bc:;
					{
						(*(*(_self_))._field_e.alloc)._field_prefix=(*((*(_78036_p))))._field_Kind;
					}
				}
				_match_end_1ab4a1867:;
			};
			jule::Ptr<_1b4c466a8_Data> _81717_d = _1b4c6ad1a_eval((*(_self_))._field_e, _80417_arg);;
			if ((_81717_d == nullptr)) {
				__jule_func_result=false;
				goto _iter_next_1ab4a0a75;
			};
			if ((*((*(_81717_d))._field_Kind))._field_Variadic) {
				_78213_variadiced=true;
				(*(*((*(_78036_p))))._field_Kind.alloc)._field_Variadic=true;
				__jule_func_result=(__jule_func_result && _1b4c37ca4_checkArg(_self_, _78036_p, &(_81717_d), &((*(_80417_arg))._field_Token)));
				(*(*((*(_78036_p))))._field_Kind.alloc)._field_Variadic=false;
				{
					auto &_match_expr{ (*(_81717_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type76) {
						_case_begin_1ab4a400c:;
						{
							_78413_model=(*(_81717_d))._field_Model.unsafe_cast_ptr<_1b4b2adea_SliceExprModel>();
							(*(_78413_model))._field_ElemKind=(*((*(_78036_p))))._field_Kind;
						}
					}
					else {
						_case_begin_1ab4a5629:;
						{
							_78413_model=nullptr;
							{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push((*(_81717_d))._field_Model); };
						}
					}
					_match_end_1ab4a55c4:;
				};
				(_78054_i)++;
				goto _iter_end_1ab4a0a75;
			};
			__jule_func_result=(__jule_func_result && _1b4c37ca4_checkArg(_self_, _78036_p, &(_81717_d), &((*_80417_arg.alloc)._field_Token)));
			(*(_78413_model))._field_Elems=jule::append((*_78413_model.alloc)._field_Elems,jule::Slice<jule::Any>::make({(*(_81717_d))._field_Model}));
		}
	_iter_next_1ab4a0a75:;
	}
	_iter_end_1ab4a0a75:;;
	(*(*(_self_))._field_e.alloc)._field_prefix=_78813_old;
	if ((_78213_variadiced && _7839_more)) {
		_1b4c36db3_pushErrToken(_self_, (*((*(_self_))._field_args[_78054_i]))._field_Token, jule::Str::lit("variadic argument can't use with more argument", 46), jule::Slice<jule::Any>());
	};
	if ((_78413_model != nullptr)) {
		{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push(jule::Any(_78413_model, &__jule_any_type76)); };
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1b4c388dc_checkArgs(_1b4c36852_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1b4b387dc_ParamIns>>* _86133_params) {
	jule::Bool __jule_func_result = false;
	jule::Bool _8629_arg = (*((*(_self_))._field_e))._field_arg;;
	(*(*(_self_))._field_e.alloc)._field_arg=true;
	__jule_func_result=true;
	jule::I64 _86613_i = 0LL;;
	if ((((*(_86133_params)).len() > 0LL) && _1b4b354cb_IsSelf((*((*(_86133_params))[0LL]))._field_Decl.ptr()))) {
		(_86613_i)++;
	};
	_julec_label_1ab4aa981:;
	while ((_86613_i < (*(_86133_params)).len())) {
		{
			jule::Ptr<_1b4b387dc_ParamIns> _87317_p = (*(_86133_params))[_86613_i];;
			{
				
				if ((*(*(_87317_p))._field_Decl.alloc)._field_Variadic) {
					_case_begin_1ab4ac5dc:;
					{
						__jule_func_result=(_1b4c3859b_pushVariadic(_self_, &(_87317_p), _86613_i) && __jule_func_result);
						goto _iter_end_1ab4aad16;
					}
				}
				else if (((*(_self_))._field_args.len() <= _86613_i)) {
					_case_begin_1ab4ac6ca:;
					{
						__jule_func_result=false;
						goto _iter_end_1ab4aad16;
					}
				}
				else {
					_case_begin_1ab4ac235:;
					{
						__jule_func_result=(_1b4c381a0_push(_self_, &(_87317_p), (*(_self_))._field_args[_86613_i]) && __jule_func_result);
					}
				}
				_match_end_1ab4ac1be:;
			};
			(_86613_i)++;
		}
	_iter_next_1ab4aad16:;
	}
	_iter_end_1ab4aad16:;;
	(*(*(_self_))._field_e.alloc)._field_arg=_8629_arg;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1b4c38b73_checkDynamicTypeAnnotation(_1b4c36852_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_f))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab4ae897:;
		if (it != expr_end) {
			jule::Ptr<_1b4c7b028_InsGeneric> _89316_g = *it;
			{
				if ((_89316_g == nullptr)) {
					_1b4c37226_pushErr(_self_, jule::Str::lit("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1ab4ae897:;
			++it;
			goto _iter_begin_1ab4ae897;
		}
		_iter_end_1ab4ae897:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1b4c38e09_check(_1b4c36852_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	jule::Slice<jule::Ptr<_1b4b387dc_ParamIns>> _90313_params = _1b4c374ac_getParams(_self_);;
	__jule_func_result=_1b4c377ed_checkCounts(_self_, &(_90313_params));
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1b4c388dc_checkArgs(_self_, &(_90313_params));
	if ((__jule_func_result && (*(_self_))._field_dynamicAnnotation)) {
		__jule_func_result=_1b4c38b73_checkDynamicTypeAnnotation(_self_);
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4c36852_fnCallArgChecker _Src) {
	_Stream << "fnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamicAnnotation:" << _Src._field_dynamicAnnotation << ", ";
	_Stream << "argModels:" << _Src._field_argModels << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _1b4c39cd9_pushErr(_1b4c39789_structLitChecker* _self_, jule::Ptr<_1b4ad5712_Token> _94126_token, jule::Str _94141_fmt, jule::Slice<jule::Any> _94154_args) {
	_1b4c48930_pushErr((*(_self_))._field_e.ptr(), _94126_token, _94141_fmt, _94154_args);
}



inline void _1b4c3a14c_pushSuggestion(_1b4c39789_structLitChecker* _self_, jule::Str _94633_fmt, jule::Slice<jule::Any> _94646_args) {
	_1b4c48c93_pushSuggestion((*(_self_))._field_e.ptr(), _94633_fmt, _94646_args);
}



inline void _1b4c3a56a_pushMatch(_1b4c39789_structLitChecker* _self_, jule::Ptr<_1b4b23a91_FieldIns>* _95033_f, jule::Ptr<_1b4c466a8_Data>* _95052_d, jule::Ptr<_1b4ad5712_Token>* _95067_errorToken) {
	;
	jule::Bool _9569_mutable = ((!((*((*(_self_))._field_e))._field_immutable)) || ((*((*((*(_95033_f))))._field_Decl))._field_Mutable && ((*((*(_self_))._field_s))._field_Methods.len() > 0LL)));;
	if (_1b4bca719_checkValidityForInitExpr((*(*(_self_))._field_e.alloc)._field_s, _9569_mutable, false, &((*((*(_95033_f))))._field_Kind), _95052_d, _95067_errorToken)) {
		_1b4bc6380_checkAssignType((*(*(_self_))._field_e.alloc)._field_s, false, &((*((*(_95033_f))))._field_Kind), _95052_d, (*(_95067_errorToken)));
	};
	{ jule::Slice<jule::Ptr<_1b4b29448_StructArgExprModel>> &__jule_push_dest = (*(_self_))._field_args; __jule_push_dest.push(jule::new_ptr<_1b4b29448_StructArgExprModel>(_1b4b29448_StructArgExprModel{._field_Token=(*(_95067_errorToken)), ._field_Field=(*(_95033_f)), ._field_Expr=(*(_95052_d))})); };
}



inline void _1b4c3a8cd_checkPair(_1b4c39789_structLitChecker* _self_, jule::Ptr<_1b4b04720_FieldExprPair>* _96933_pair, jule::Slice<jule::Ptr<_1b4b00001_Expr>>* _96960_exprs) {
	jule::Ptr<_1b4b23a91_FieldIns> _97113_f = _1b4b259e9_FindField((*(_self_))._field_s.ptr(), (*((*((*(_96933_pair))))._field_Field))._field_Kind);;
	if ((_97113_f == nullptr)) {
		_1b4c39cd9_pushErr(_self_, (*((*(_96933_pair))))._field_Field, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(*((*(_96933_pair))))._field_Field.alloc)._field_Kind, &__jule_any_type4)}));
		return;;
	};
	if ((!(_1b4bbe0d1_isAccessibleDefine((*((*(_self_))._field_e))._field_s.ptr(), (*((*(_97113_f))._field_Decl))._field_Public, (*(*(_97113_f))._field_Decl.alloc)._field_Token)))) {
		_1b4c39cd9_pushErr(_self_, (*((*(_96933_pair))))._field_Field, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(*((*(_96933_pair))))._field_Field.alloc)._field_Kind, &__jule_any_type4)}));
		_1b4c3a14c_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
	};
	_julec_label_1ab4baa3a:;
	{
		auto expr = _96960_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab4b883a:;
		if (it != expr_end) {
			jule::Ptr<_1b4b00001_Expr> _98321_expr = *it;
			{
				{
					auto &_match_expr{ (*(_98321_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type77) {
						_case_begin_1ab4bbe15:;
						{
							jule::Ptr<_1b4b04720_FieldExprPair> _98621_dpair = (*(_98321_expr))._field_Kind.unsafe_cast_ptr<_1b4b04720_FieldExprPair>();;
							{
								
								if (((*(_96933_pair)) == _98621_dpair)) {
									_case_begin_1ab4bcdd3:;
									{
										goto _iter_end_1ab4b883a;
									}
								}
								else if (((*(*((*(_96933_pair))))._field_Field.alloc)._field_Kind == (*(*(_98621_dpair))._field_Field.alloc)._field_Kind)) {
									_case_begin_1ab4bce7c:;
									{
										_1b4c39cd9_pushErr(_self_, (*((*(_96933_pair))))._field_Field, jule::Str::lit("@ already has expression", 24), jule::Slice<jule::Any>::make({jule::Any((*(*((*(_96933_pair))))._field_Field.alloc)._field_Kind, &__jule_any_type4)}));
										goto _iter_end_1ab4b883a;
									}
								}
								_match_end_1ab4bcd5b:;
							};
						}
					}
					_match_end_1ab4bbd9e:;
				};
			}
			_iter_next_1ab4b883a:;
			++it;
			goto _iter_begin_1ab4b883a;
		}
		_iter_end_1ab4b883a:;
	};
	jule::Ptr<_1b4c7c90e_TypeKind> _99713_prefix = (*(*(_self_))._field_e.alloc)._field_prefix;;
	__JULE_DEFER({
		(*(*(_self_))._field_e.alloc)._field_prefix=_99713_prefix;
	});;
	(*(*(_self_))._field_e.alloc)._field_prefix=(*(_97113_f))._field_Kind;
	jule::Ptr<_1b4c466a8_Data> _100113_d = _1b4c6b49c_evalExpr((*(_self_))._field_e, (*((*(_96933_pair))))._field_Expr);;
	if ((_100113_d == nullptr)) {
		return;;
	};
	_1b4c3a56a_pushMatch(_self_, &(_97113_f), &(_100113_d), &((*((*(_96933_pair))))._field_Field));
}



inline jule::Bool _1b4c3ac1e_readyExprs(_1b4c39789_structLitChecker* _self_, jule::Slice<jule::Ptr<_1b4b00001_Expr>>* _100834_exprs) {
	jule::Bool _100913_ok = true;;
	{
		auto expr = _100834_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab4c2349:;
		if (it != expr_end) {
			jule::I64 _101014_i = it - expr->begin();
			jule::Ptr<_1b4b00001_Expr> _101021_expr = *it;
			{
				{
					auto &_match_expr{ (*(_101021_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type78) {
						_case_begin_1ab4c302b:;
						{
							jule::Ptr<_1b4b05d2b_KeyValPair> _101321_pair = (*(_101021_expr))._field_Kind.unsafe_cast_ptr<_1b4b05d2b_KeyValPair>();;
							{
								auto &_match_expr{ (*((*(_101321_pair))._field_Key))._field_Kind };
								
								if (_match_expr.type == &__jule_any_type79) {
									_case_begin_1ab4c3d84:;
									{
										goto _match_end_1ab4c434b;
									}
								}
								else {
									_case_begin_1ab4c43a1:;
									{
										_1b4c39cd9_pushErr(_self_, (*(_101321_pair))._field_Colon, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
										_100913_ok=false;
										goto _iter_next_1ab4c2349;
									}
								}
								_match_end_1ab4c434b:;
							};
							(*((*(_100834_exprs))[_101014_i]))._field_Kind=jule::Any(jule::new_ptr<_1b4b04720_FieldExprPair>(_1b4b04720_FieldExprPair{._field_Field=(*((*(_101321_pair))._field_Key))._field_Token, ._field_Expr=(*_101321_pair.alloc)._field_Val}), &__jule_any_type77);
						}
					}
					_match_end_1ab4c2eb5:;
				};
			}
			_iter_next_1ab4c2349:;
			++it;
			_101014_i++;
			goto _iter_begin_1ab4c2349;
		}
		_iter_end_1ab4c2349:;
	};
	return _100913_ok;;
}



inline void _1b4c3aec7_check(_1b4c39789_structLitChecker* _self_, jule::Slice<jule::Ptr<_1b4b00001_Expr>>* _103229_exprs) {
	if (((*(_103229_exprs)).len() == 0LL)) {
		return;;
	};
	if ((!(_1b4c3ac1e_readyExprs(_self_, _103229_exprs)))) {
		return;;
	};
	jule::Bool _103913_paired = false;;
	{
		auto expr = _103229_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab4c68c0:;
		if (it != expr_end) {
			jule::I64 _104014_i = it - expr->begin();
			jule::Ptr<_1b4b00001_Expr> _104021_expr = *it;
			{
				{
					auto &_match_expr{ (*(_104021_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type77) {
						_case_begin_1ab4cd069:;
						{
							jule::Ptr<_1b4b04720_FieldExprPair> _104321_pair = (*(_104021_expr))._field_Kind.unsafe_cast_ptr<_1b4b04720_FieldExprPair>();;
							if (((_104014_i > 0LL) && (!(_103913_paired)))) {
								_1b4c39cd9_pushErr(_self_, (*(_104321_pair))._field_Field, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							};
							_103913_paired=true;
							_1b4c3a8cd_checkPair(_self_, &(_104321_pair), _103229_exprs);
						}
					}
					else {
						_case_begin_1ab4c77c2:;
						{
							if (_103913_paired) {
								_1b4c39cd9_pushErr(_self_, (*(_104021_expr))._field_Token, jule::Str::lit("argument must target to field", 29), jule::Slice<jule::Any>());
							};
							if ((_104014_i >= (*((*(_self_))._field_s))._field_Fields.len())) {
								_1b4c39cd9_pushErr(_self_, (*_104021_expr.alloc)._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>());
								goto _iter_next_1ab4c68c0;
							};
							jule::Ptr<_1b4b23a91_FieldIns> _105821_field = (*(*(_self_))._field_s.alloc)._field_Fields[_104014_i];;
							if ((!(_1b4bbe0d1_isAccessibleDefine((*((*(_self_))._field_e))._field_s.ptr(), (*((*(_105821_field))._field_Decl))._field_Public, (*(*_105821_field.alloc)._field_Decl.alloc)._field_Token)))) {
								_1b4c39cd9_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("structure cannot instantiating because it has non-public fields", 63), jule::Slice<jule::Any>());
								_1b4c3a14c_pushSuggestion(_self_, jule::Str::lit("use field:expression pairs to instantiate", 41), jule::Slice<jule::Any>());
								return;;
							};
							jule::Ptr<_1b4c7c90e_TypeKind> _106621_prefix = (*(*(_self_))._field_e.alloc)._field_prefix;;
							__JULE_DEFER({
								(*(*(_self_))._field_e.alloc)._field_prefix=_106621_prefix;
							});;
							(*(*(_self_))._field_e.alloc)._field_prefix=(*_105821_field.alloc)._field_Kind;
							jule::Ptr<_1b4c466a8_Data> _107021_d = _1b4c6b49c_evalExpr((*(_self_))._field_e, _104021_expr);;
							if ((_107021_d == nullptr)) {
								goto _iter_next_1ab4c68c0;
							};
							_1b4c3a56a_pushMatch(_self_, &(_105821_field), &(_107021_d), &((*_104021_expr.alloc)._field_Token));
						}
					}
					_match_end_1ab4c776c:;
				};
			}
			_iter_next_1ab4c68c0:;
			++it;
			_104014_i++;
			goto _iter_begin_1ab4c68c0;
		}
		_iter_end_1ab4c68c0:;
	};
	if ((!(_103913_paired))) {
		jule::I64 _108113_n = (*((*(_self_))._field_s))._field_Fields.len();;
		jule::I64 _108217_diff = (_108113_n - (*(_103229_exprs)).len());;
		{
			
			if ((_108217_diff <= 0LL)) {
				_case_begin_1ab4d08eb:;
				{
					return;;
				}
			}
			_match_end_1ab4d07db:;
		};
		_1cb1d27a9_StrBuilder _108817_idents = static__1cb1d2a73_New(32LL);;
		for (; (_108217_diff > 0LL); (_108217_diff)--) {
			{
				_1cb1db3d9_WriteStr(&_108817_idents, jule::Str::lit(", ", 2));
				_1cb1db3d9_WriteStr(&_108817_idents, (*((*((*(*(_self_))._field_s.alloc)._field_Fields[(_108113_n - _108217_diff)]))._field_Decl))._field_Ident);
			}
		_iter_next_1ab4d1248:;
		}
		_iter_end_1ab4d1248:;;
		_1b4c39cd9_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(static_cast<jule::Str>(_1cb1dc682_Buf(&_108817_idents).slice(2LL)), &__jule_any_type4)}));
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1b4c39789_structLitChecker _Src) {
	_Stream << "structLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b4bddaa1_Var> _1b4c3ba55_buildVar(_1b4c3b56b_rangeChecker* _self_, jule::Ptr<_1b4b13894_VarDecl>* _110828_decl) {
	jule::Ptr<_1b4bddaa1_Var> _110913_v = _1b4b42dac_buildVar((*(_110828_decl)));;
	return _110913_v;;
}



inline void _1b4c3bc53_setSizeKey(_1b4c3b56b_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyA == nullptr) || _1b4ad80e9_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyA))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyA=_1b4c3ba55_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyA));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyA))._field_Kind=(*(_1b4d63572_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
}



inline void _1b4c3c171_checkRangeExprValidity(_1b4c3b56b_rangeChecker* _self_, jule::Ptr<_1b4c466a8_Data>* _112746_d, jule::Ptr<_1b4bddaa1_Var>* _112757_key, jule::Ptr<_1b4c7c90e_TypeKind>* _112773_k) {
	jule::Bool _112813__mut = (*((*(_112757_key))))._field_Mutable;;
	if ((_112813__mut && (!(_1b4c7e290_Mutable((*(_112773_k)).ptr()))))) {
		_112813__mut=false;
	};
	_1b4bca719_checkValidityForInitExpr((*((*(_self_))._field_sc))._field_s, _112813__mut, (*((*(_112757_key))))._field_Reference, &((*((*((*(_112757_key))))._field_Kind))._field_Kind), _112746_d, &((*((*(_self_))._field_rang))._field_InToken));
}



inline void _1b4c3c36e_checkSlice(_1b4c3b56b_rangeChecker* _self_) {
	_1b4c3bc53_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1b4ad80e9_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1b4c899d7_Slc> _114613_slc = _1b4c810b6_Slc((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1b4c3ba55_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_Kind=jule::new_ptr<_1b4c84ad1_TypeSymbol>(_1b4c84ad1_TypeSymbol{._field_Kind=(*(_114613_slc))._field_Elem});
	_1b4c3c171_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyB), &((*_114613_slc.alloc)._field_Elem));
}



inline void _1b4c3c56c_checkArray(_1b4c3b56b_rangeChecker* _self_) {
	_1b4c3bc53_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1b4ad80e9_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1b4c8bd08_Arr> _115913_arr = _1b4c80d30_Arr((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1b4c3ba55_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_Kind=jule::new_ptr<_1b4c84ad1_TypeSymbol>(_1b4c84ad1_TypeSymbol{._field_Kind=(*(_115913_arr))._field_Elem});
	_1b4c3c171_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyB), &((*_115913_arr.alloc)._field_Elem));
}



inline void _1b4c3c76a_checkMapKeyA(_1b4c3b56b_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyA == nullptr) || _1b4ad80e9_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyA))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1b4c8b17b_Map> _117113_m = _1b4c81b00_Map((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyA=_1b4c3ba55_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyA));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyA))._field_Kind=jule::new_ptr<_1b4c84ad1_TypeSymbol>(_1b4c84ad1_TypeSymbol{._field_Kind=(*(_117113_m))._field_Key});
	jule::Ptr<_1b4c466a8_Data> _117513_d = jule::new_ptr<_1b4c466a8_Data>((*(*(_self_))._field_d.alloc));;
	(*_117513_d.alloc)._field_Kind=(*_117113_m.alloc)._field_Key;
	_1b4c3c171_checkRangeExprValidity(_self_, &(_117513_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyA), &((*_117113_m.alloc)._field_Key));
}



inline void _1b4c3c968_checkMapKeyB(_1b4c3b56b_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1b4ad80e9_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1b4c8b17b_Map> _118613_m = _1b4c81b00_Map((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1b4c3ba55_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_Kind=jule::new_ptr<_1b4c84ad1_TypeSymbol>(_1b4c84ad1_TypeSymbol{._field_Kind=(*(_118613_m))._field_Val});
	jule::Ptr<_1b4c466a8_Data> _119013_d = jule::new_ptr<_1b4c466a8_Data>((*(*(_self_))._field_d.alloc));;
	(*_119013_d.alloc)._field_Kind=(*_118613_m.alloc)._field_Val;
	_1b4c3c171_checkRangeExprValidity(_self_, &(_119013_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyB), &((*_118613_m.alloc)._field_Val));
}



inline void _1b4c3cb66_checkMap(_1b4c3b56b_rangeChecker* _self_) {
	_1b4c3c76a_checkMapKeyA(_self_);
	_1b4c3c968_checkMapKeyB(_self_);
}



inline void _1b4c3cd64_checkStr(_1b4c3b56b_rangeChecker* _self_) {
	_1b4c3bc53_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1b4ad80e9_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyB=_1b4c3ba55_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_Kind=(*(_1b4d63572_findBuiltinTypeAlias(jule::Str::lit("u8", 2))))._field_Kind;
}



inline void _1b4c3d062_checkComptime(_1b4c3b56b_rangeChecker* _self_) {
	_1b4c3bc53_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyA != nullptr) && (*(*(*(_self_))._field_rang.alloc)._field_KeyA.alloc)._field_Mutable)) {
		_1b4bbd872_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(*(*(_self_))._field_rang.alloc)._field_KeyA.alloc)._field_Token, jule::Str::lit("define @ cannot be mutable", 26), jule::Slice<jule::Any>::make({jule::Any((*(*(*(_self_))._field_rang.alloc)._field_KeyA.alloc)._field_Ident, &__jule_any_type4)}));
	};
	if ((((*(*(_self_))._field_rang.alloc)._field_KeyB != nullptr) && (*(*(*(_self_))._field_rang.alloc)._field_KeyB.alloc)._field_Mutable)) {
		_1b4bbd872_pushErr((*(*(_self_))._field_sc.alloc)._field_s, (*(*(*(_self_))._field_rang.alloc)._field_KeyB.alloc)._field_Token, jule::Str::lit("define @ cannot be mutable", 26), jule::Slice<jule::Any>::make({jule::Any((*(*(*(_self_))._field_rang.alloc)._field_KeyB.alloc)._field_Ident, &__jule_any_type4)}));
	};
	if ((((*(*(_self_))._field_rang.alloc)._field_KeyB == nullptr) || _1b4ad80e9_IsIgnoreIdent((*(*(*(_self_))._field_rang.alloc)._field_KeyB.alloc)._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyB=_1b4c3ba55_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
}



inline jule::Bool _1b4c3d2e8_checkComptimeRange(_1b4c3b56b_rangeChecker* _self_) {
	jule::Ptr<_1b4b51cab_comptimeRange> _122513_range = _1b4c83409_comptimeRange((*((*(_self_))._field_d))._field_Kind.ptr());;
	{
		auto &_match_expr{ (*(_122513_range))._field_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b4b51a8b_comptimeRangeKind_mptr_data0) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1b4b51a8b_comptimeRangeKind_mptr_data2) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1b4b51a8b_comptimeRangeKind_mptr_data3) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1b4b51a8b_comptimeRangeKind_mptr_data4) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1b4b51a8b_comptimeRangeKind_mptr_data1) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1b4b51a8b_comptimeRangeKind_mptr_data5)) {
			_case_begin_1ab503545:;
			{
				_1b4c3d062_checkComptime(_self_);
				return true;;
			}
		}
		else {
			_case_begin_1ab502588:;
			{
				_1b4bbd872_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*(_self_))._field_rang))._field_InToken, jule::Str::lit("range iterations must be have enumerable expression", 51), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1ab502533:;
	};
}



inline jule::Bool _1b4c3d57e_check(_1b4c3b56b_rangeChecker* _self_) {
	{
		
		if ((*((*((*(_self_))._field_d))._field_Kind))._field_Variadic) {
			_case_begin_1ab5055be:;
		}
		else if ((_1b4c810b6_Slc((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab503eb3:;
			{
				_1b4c3c36e_checkSlice(_self_);
				return true;;
			}
		}
		else if ((_1b4c80d30_Arr((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab504029:;
			{
				_1b4c3c56c_checkArray(_self_);
				return true;;
			}
		}
		else if ((_1b4c81b00_Map((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab50458a:;
			{
				_1b4c3cb66_checkMap(_self_);
				return true;;
			}
		}
		else if ((_1b4c83409_comptimeRange((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab504601:;
			{
				return _1b4c3d2e8_checkComptimeRange(_self_);;
			}
		}
		else {
			_case_begin_1ab503e2a:;
			{
				jule::Ptr<_1b4c854d8_Prim> _125713_prim = _1b4c80060_Prim((*((*(_self_))._field_d))._field_Kind.ptr());;
				if (((_125713_prim != nullptr) && _1b4c88970_IsStr(_125713_prim))) {
					_1b4c3cd64_checkStr(_self_);
					return true;;
				};
			}
		}
		_match_end_1ab503d2b:;
	};
	_1b4bbd872_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*(_self_))._field_rang))._field_InToken, jule::Str::lit("range iterations must be have enumerable expression", 51), jule::Slice<jule::Any>());
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4c3b56b_rangeChecker _Src) {
	_Stream << "rangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline void _1b4c3e20b_prepareTypes(_1b4c3dccc_retTypeChecker* _self_) {
	if (((*(_self_))._field_f != nullptr)) {
		(*(_self_))._field_types=_1b4b3aa64_Types((*(_self_))._field_f);
	};
}



inline void _1b4c3e4b4_prepareExprs(_1b4c3dccc_retTypeChecker* _self_, jule::Ptr<_1b4b00001_Expr>* _128536_e) {
	if (((*(_128536_e)) == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_128536_e))))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1ab50aedc:;
			{
				(*(_self_))._field_exprs=(*((*((*(_128536_e))))._field_Kind.unsafe_cast_ptr<_1b4b00ae5_TupleExpr>()))._field_Expr;
			}
		}
		else {
			_case_begin_1ab50b1a7:;
			{
				{ jule::Slice<jule::Ptr<_1b4b00001_Expr>> &__jule_push_dest = (*(_self_))._field_exprs; __jule_push_dest.push((*(_128536_e))); };
			}
		}
		_match_end_1ab50b152:;
	};
}



inline void _1b4c3e6b2_checkExprs(_1b4c3dccc_retTypeChecker* _self_) {
	if (((*(_self_))._field_exprs.len() == 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1b4c466a8_Data>> _130113_datas = jule::Slice<jule::Ptr<_1b4c466a8_Data>>::alloc(0LL, (*(_self_))._field_exprs.len());;
	jule::Ptr<_1b4c483d0_Eval> _130213_eval = _1b4bc5d1e_eval((*((*(_self_))._field_sc))._field_s, jule::Trait((*(_self_))._field_sc, (jule::Trait::Type*)&_1b4c9c500_Lookup_mptr_data0));;
	{
		auto expr = &((*(_self_))._field_exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab50b31c:;
		if (it != expr_end) {
			jule::I64 _130314_i = it - expr->begin();
			jule::Ptr<_1b4b00001_Expr> _130321_expr = *it;
			{
				if ((_130314_i >= (*(_self_))._field_types.len())) {
					goto _iter_end_1ab50b31c;
				};
				jule::Ptr<_1b4c7c90e_TypeKind> _130817_t = (*(_self_))._field_types[_130314_i];;
				(*(_130213_eval))._field_prefix=_130817_t;
				jule::Ptr<_1b4c466a8_Data> _131117_d = _1b4c6b49c_evalExpr(_130213_eval, _130321_expr);;
				if ((_131117_d == nullptr)) {
					goto _iter_next_1ab50b31c;
				};
				{ jule::Slice<jule::Ptr<_1b4c466a8_Data>> &__jule_push_dest = _130113_datas; __jule_push_dest.push(_131117_d); };
				if (((!((*(_131117_d))._field_Mutable)) && _1b4c7e290_Mutable((*(_131117_d))._field_Kind.ptr()))) {
					_1b4bbd872_pushErr((*(*(_self_))._field_sc.alloc)._field_s, (*(_self_))._field_errorToken, jule::Str::lit("mutable typed return expressions should be mutable", 50), jule::Slice<jule::Any>());
					return;;
				};
				_1b4c30120_assignTypeChecker _132317_ac = _1b4c30120_assignTypeChecker{._field_s=(*(*(_self_))._field_sc.alloc)._field_s, ._field_dest=_130817_t, ._field_d=_131117_d, ._field_errorToken=(*(_self_))._field_errorToken};;
				_1b4c310dd_check(&_132317_ac);
			}
			_iter_next_1ab50b31c:;
			++it;
			_130314_i++;
			goto _iter_begin_1ab50b31c;
		}
		_iter_end_1ab50b31c:;
	};
	if ((_130113_datas.len() > 1LL)) {
		(*(_self_))._field_model=jule::Any(jule::new_ptr<_1b4b2e20b_TupleExprModel>(_1b4b2e20b_TupleExprModel{._field_Datas=_130113_datas}), &__jule_any_type81);
	} else if ((_130113_datas.len() == 1LL)) {
		(*(_self_))._field_model=(*(_130113_datas[0LL]))._field_Model;
	};
}



inline jule::Bool _1b4c3e948_tryFuncMultiRetForward(_1b4c3dccc_retTypeChecker* _self_) {
	jule::Ptr<_1b4c483d0_Eval> _134413_eval = _1b4bc5d1e_eval((*((*(_self_))._field_sc))._field_s, jule::Trait((*(_self_))._field_sc, (jule::Trait::Type*)&_1b4c9c500_Lookup_mptr_data0));;
	jule::Ptr<_1b4c466a8_Data> _134513_d = _1b4c6b49c_evalExpr(_134413_eval, (*(_self_))._field_exprs[0LL]);;
	if ((_134513_d == nullptr)) {
		return true;;
	};
	jule::Ptr<_1b4c8a5cb_Tuple> _135113_tup = _1b4c81d86_Tup((*(_134513_d))._field_Kind.ptr());;
	if ((_135113_tup == nullptr)) {
		return false;;
	};
	if (((*(_135113_tup))._field_Types.len() != (*(_self_))._field_types.len())) {
		goto _julec_label_1ab518868;
	};
	(*(_self_))._field_model=(*(_134513_d))._field_Model;
	{
		auto expr = &((*(_self_))._field_types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab515ada:;
		if (it != expr_end) {
			jule::I64 _135913_i = it - expr->begin();
			{
				if ((!(_1b4bc6836__checkTypeCompatibility((*(*(_self_))._field_sc.alloc)._field_s, &((*(_self_))._field_types[_135913_i]), &((*(_135113_tup))._field_Types[_135913_i]), (*(_self_))._field_errorToken)))) {
					goto _julec_label_1ab518868;
				};
			}
			_iter_next_1ab515ada:;
			++it;
			_135913_i++;
			goto _iter_begin_1ab515ada;
		}
		_iter_end_1ab515ada:;
	};
	return true;;
	_julec_label_1ab518868:;
	_1cb1d27a9_StrBuilder _136613_wanted = static__1cb1d2a73_New(32LL);;
	{
		auto expr = &((*(_self_))._field_types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab519e0d:;
		if (it != expr_end) {
			jule::I64 _136713_i = it - expr->begin();
			jule::Ptr<_1b4c7c90e_TypeKind> _136716_t = *it;
			{
				_1cb1db3d9_WriteStr(&_136613_wanted, _1b4c7ccc7_Str(_136716_t.ptr()));
				if ((((*(_self_))._field_types.len() - _136713_i) > 1LL)) {
					_1cb1db3d9_WriteStr(&_136613_wanted, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1ab519e0d:;
			++it;
			_136713_i++;
			goto _iter_begin_1ab519e0d;
		}
		_iter_end_1ab519e0d:;
	};
	_1cb1d27a9_StrBuilder _137313_given = static__1cb1d2a73_New(32LL);;
	{
		auto expr = &((*(_135113_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab51bb24:;
		if (it != expr_end) {
			jule::I64 _137413_i = it - expr->begin();
			jule::Ptr<_1b4c7c90e_TypeKind> _137416_t = *it;
			{
				_1cb1db3d9_WriteStr(&_137313_given, _1b4c7ccc7_Str(_137416_t.ptr()));
				if ((((*(_self_))._field_types.len() - _137413_i) > 1LL)) {
					_1cb1db3d9_WriteStr(&_137313_given, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1ab51bb24:;
			++it;
			_137413_i++;
			goto _iter_begin_1ab51bb24;
		}
		_iter_end_1ab51bb24:;
	};
	_1b4bbd872_pushErr((*(*(_self_))._field_sc.alloc)._field_s, (*(_self_))._field_errorToken, jule::Str::lit("function return forwaring is wrong\n       want (@)\n       have (@)", 66), jule::Slice<jule::Any>::make({jule::Any(_1cb1dbbd1_Str(&_136613_wanted), &__jule_any_type4),jule::Any(_1cb1dbbd1_Str(&_137313_given), &__jule_any_type4)}));
	return false;;
}



inline jule::Bool _1b4c3ec89_check(_1b4c3dccc_retTypeChecker* _self_, jule::Ptr<_1b4b00001_Expr>* _138429_e) {
	_1b4c3e20b_prepareTypes(_self_);
	_1b4c3e4b4_prepareExprs(_self_, _138429_e);
	{
		
		if ((((*(_self_))._field_exprs.len() == 0LL) && ((*(_self_))._field_types.len() > 0LL))) {
			_case_begin_1ab520100:;
			{
				if ((!(_1b4b37ac7_AnyVar((*((*(_self_))._field_f))._field_Decl.ptr())))) {
					_1b4bbd872_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("return statements of non-void functions should have return expression", 69), jule::Slice<jule::Any>());
					return false;;
				};
				return true;;
			}
		}
		else if (((((*(_self_))._field_exprs.len() > 0LL) && ((*(_self_))._field_f != nullptr)) && _1b4b36d07_IsVoid((*(*(_self_))._field_f.alloc)._field_Decl.ptr()))) {
			_case_begin_1ab520166:;
			{
				_1b4bbd872_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("void functions is cannot returns any value", 42), jule::Slice<jule::Any>());
				return false;;
			}
		}
		else if ((((*(_self_))._field_exprs.len() == 1LL) && ((*(_self_))._field_types.len() > 1LL))) {
			_case_begin_1ab5201cc:;
			{
				{
					auto &_match_expr{ (*((*(_self_))._field_exprs[0LL]))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type82) {
						_case_begin_1ab524885:;
						{
							if (_1b4c3e948_tryFuncMultiRetForward(_self_)) {
								return true;;
							};
						}
					}
					_match_end_1ab5247db:;
				};
				_1b4bbd872_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("missing return expressions for multi-return", 43), jule::Slice<jule::Any>());
				return false;;
			}
		}
		else if (((*(_self_))._field_exprs.len() < (*(_self_))._field_types.len())) {
			_case_begin_1ab520243:;
			{
				_1b4bbd872_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("missing return expressions for multi-return", 43), jule::Slice<jule::Any>());
			}
		}
		else if (((*(_self_))._field_exprs.len() > (*(_self_))._field_types.len())) {
			_case_begin_1ab5202a9:;
			{
				_1b4bbd872_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("overflow return expressions", 27), jule::Slice<jule::Any>());
			}
		}
		_match_end_1ab51ee9b:;
	};
	_1b4c3e6b2_checkExprs(_self_);
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4c3dccc_retTypeChecker _Src) {
	_Stream << "retTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b4b9a893_ImportInfo> _1b4c41829_SelectPackage(_1b4c41340_SymbolTable* _self_, jule::Fn<jule::Bool,jule::Ptr<_1b4b9a893_ImportInfo>> _2732_selector) {
	if ((_2732_selector == nullptr)) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab527ed7:;
		if (it != expr_end) {
			jule::Ptr<_1b4b9a893_ImportInfo> _3121_pkg = *it;
			{
				if (_2732_selector(_3121_pkg)) {
					return _3121_pkg;;
				};
			}
			_iter_next_1ab527ed7:;
			++it;
			goto _iter_begin_1ab527ed7;
		}
		_iter_end_1ab527ed7:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b4bddaa1_Var> _1b4c41c25_FindVar(_1b4c41340_SymbolTable* _self_, jule::Str _4126_ident, jule::Bool _4138_binded) {
	return _1b4c43a07_findVar(_self_, &(_4126_ident), _4138_binded, false);;
}



inline jule::Ptr<_1b4c7bb1c_TypeAlias> _1b4c42121_FindTypeAlias(_1b4c41340_SymbolTable* _self_, jule::Str _4732_ident, jule::Bool _4744_binded) {
	return _1b4c43ead_findTypeAlias(_self_, &(_4732_ident), _4744_binded, false);;
}



inline jule::Ptr<_1b4b218b3_Struct> _1b4c4251c_FindStruct(_1b4c41340_SymbolTable* _self_, jule::Str _5329_ident, jule::Bool _5341_binded) {
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab52a380:;
		if (it != expr_end) {
			jule::Ptr<_1b4b218b3_Struct> _5421_s = *it;
			{
				if ((((*(_5421_s))._field_Ident == _5329_ident) && ((*_5421_s.alloc)._field_Binded == _5341_binded))) {
					return _5421_s;;
				};
			}
			_iter_next_1ab52a380:;
			++it;
			goto _iter_begin_1ab52a380;
		}
		_iter_end_1ab52a380:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b4b36884_Fn> _1b4c42918_FindFn(_1b4c41340_SymbolTable* _self_, jule::Str _6425_ident, jule::Bool _6437_binded) {
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab52b8c0:;
		if (it != expr_end) {
			jule::Ptr<_1b4b36884_Fn> _6521_f = *it;
			{
				if ((((*(_6521_f))._field_Ident == _6425_ident) && ((*_6521_f.alloc)._field_Binded == _6437_binded))) {
					return _6521_f;;
				};
			}
			_iter_next_1ab52b8c0:;
			++it;
			goto _iter_begin_1ab52b8c0;
		}
		_iter_end_1ab52b8c0:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b4b49c3d_Trait> _1b4c42c59_FindTrait(_1b4c41340_SymbolTable* _self_, jule::Str _7528_ident) {
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab52cbe0:;
		if (it != expr_end) {
			jule::Ptr<_1b4b49c3d_Trait> _7621_t = *it;
			{
				if (((*(_7621_t))._field_Ident == _7528_ident)) {
					return _7621_t;;
				};
			}
			_iter_next_1ab52cbe0:;
			++it;
			goto _iter_begin_1ab52cbe0;
		}
		_iter_end_1ab52cbe0:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b4b4c449_Enum> _1b4c4309a_FindEnum(_1b4c41340_SymbolTable* _self_, jule::Str _8627_ident) {
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab52db8b:;
		if (it != expr_end) {
			jule::Ptr<_1b4b4c449_Enum> _8721_e = *it;
			{
				if (((*(_8721_e))._field_Ident == _8627_ident)) {
					return _8721_e;;
				};
			}
			_iter_next_1ab52db8b:;
			++it;
			goto _iter_begin_1ab52db8b;
		}
		_iter_end_1ab52db8b:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b4b4db54_TypeEnum> _1b4c433db_FindTypeEnum(_1b4c41340_SymbolTable* _self_, jule::Str _9731_ident) {
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab52eb59:;
		if (it != expr_end) {
			jule::Ptr<_1b4b4db54_TypeEnum> _9821_e = *it;
			{
				if (((*(_9821_e))._field_Ident == _9731_ident)) {
					return _9821_e;;
				};
			}
			_iter_next_1ab52eb59:;
			++it;
			goto _iter_begin_1ab52eb59;
		}
		_iter_end_1ab52eb59:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b4bddaa1_Var> _1b4c43a07_findVar(_1b4c41340_SymbolTable* _self_, jule::Str* _10827_ident, jule::Bool _10839_binded, jule::Bool _10853_reverse) {
	if (_10853_reverse) {
		jule::I64 _11017_i = ((*(_self_))._field_Vars.len() - 1LL);;
		for (; (_11017_i >= 0LL); (_11017_i)--) {
			{
				jule::Ptr<_1b4bddaa1_Var> _11221_v = (*(_self_))._field_Vars[_11017_i];;
				if ((((*(_11221_v))._field_Ident == (*(_10827_ident))) && ((*_11221_v.alloc)._field_Binded == _10839_binded))) {
					return _11221_v;;
				};
			}
		_iter_next_1ab5319d5:;
		}
		_iter_end_1ab5319d5:;;
	} else {
		{
			auto expr = &((*(_self_))._field_Vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ab53294d:;
			if (it != expr_end) {
				jule::Ptr<_1b4bddaa1_Var> _11825_v = *it;
				{
					if ((((*(_11825_v))._field_Ident == (*(_10827_ident))) && ((*_11825_v.alloc)._field_Binded == _10839_binded))) {
						return _11825_v;;
					};
				}
				_iter_next_1ab53294d:;
				++it;
				goto _iter_begin_1ab53294d;
			}
			_iter_end_1ab53294d:;
		};
	};
	return nullptr;;
}



inline jule::Ptr<_1b4c7bb1c_TypeAlias> _1b4c43ead_findTypeAlias(_1b4c41340_SymbolTable* _self_, jule::Str* _12733_ident, jule::Bool _12745_binded, jule::Bool _12759_reverse) {
	if (_12759_reverse) {
		jule::I64 _12917_i = ((*(_self_))._field_TypeAliases.len() - 1LL);;
		for (; (_12917_i >= 0LL); (_12917_i)--) {
			{
				jule::Ptr<_1b4c7bb1c_TypeAlias> _13121_ta = (*(_self_))._field_TypeAliases[_12917_i];;
				if ((((*(_13121_ta))._field_Ident == (*(_12733_ident))) && ((*_13121_ta.alloc)._field_Binded == _12745_binded))) {
					return _13121_ta;;
				};
			}
		_iter_next_1ab534d29:;
		}
		_iter_end_1ab534d29:;;
	} else {
		{
			auto expr = &((*(_self_))._field_TypeAliases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ab535c92:;
			if (it != expr_end) {
				jule::Ptr<_1b4c7bb1c_TypeAlias> _13725_ta = *it;
				{
					if ((((*(_13725_ta))._field_Ident == (*(_12733_ident))) && ((*_13725_ta.alloc)._field_Binded == _12745_binded))) {
						return _13725_ta;;
					};
				}
				_iter_next_1ab535c92:;
				++it;
				goto _iter_begin_1ab535c92;
			}
			_iter_end_1ab535c92:;
		};
	};
	return nullptr;;
}



inline jule::Any _1b4c443a9_defByIdent(_1b4c41340_SymbolTable* _self_, jule::Str* _14830_ident, jule::Bool _14842_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab537502:;
		if (it != expr_end) {
			jule::Ptr<_1b4bddaa1_Var> _14921_v = *it;
			{
				if ((((*(_14921_v))._field_Ident == (*(_14830_ident))) && ((*_14921_v.alloc)._field_Binded == _14842_binded))) {
					return jule::Any(_14921_v, &__jule_any_type8);;
				};
			}
			_iter_next_1ab537502:;
			++it;
			goto _iter_begin_1ab537502;
		}
		_iter_end_1ab537502:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab537854:;
		if (it != expr_end) {
			jule::Ptr<_1b4c7bb1c_TypeAlias> _15521_ta = *it;
			{
				if ((((*(_15521_ta))._field_Ident == (*(_14830_ident))) && ((*_15521_ta.alloc)._field_Binded == _14842_binded))) {
					return jule::Any(_15521_ta, &__jule_any_type65);;
				};
			}
			_iter_next_1ab537854:;
			++it;
			goto _iter_begin_1ab537854;
		}
		_iter_end_1ab537854:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab5387bc:;
		if (it != expr_end) {
			jule::Ptr<_1b4b218b3_Struct> _16121_s = *it;
			{
				if ((((*(_16121_s))._field_Ident == (*(_14830_ident))) && ((*_16121_s.alloc)._field_Binded == _14842_binded))) {
					return jule::Any(_16121_s, &__jule_any_type64);;
				};
			}
			_iter_next_1ab5387bc:;
			++it;
			goto _iter_begin_1ab5387bc;
		}
		_iter_end_1ab5387bc:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab53978a:;
		if (it != expr_end) {
			jule::Ptr<_1b4b36884_Fn> _16721_f = *it;
			{
				if ((((*(_16721_f))._field_Ident == (*(_14830_ident))) && ((*_16721_f.alloc)._field_Binded == _14842_binded))) {
					return jule::Any(_16721_f, &__jule_any_type63);;
				};
			}
			_iter_next_1ab53978a:;
			++it;
			goto _iter_begin_1ab53978a;
		}
		_iter_end_1ab53978a:;
	};
	if (_14842_binded) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab53a604:;
		if (it != expr_end) {
			jule::Ptr<_1b4b49c3d_Trait> _17721_t = *it;
			{
				if (((*(_17721_t))._field_Ident == (*(_14830_ident)))) {
					return jule::Any(_17721_t, &__jule_any_type10);;
				};
			}
			_iter_next_1ab53a604:;
			++it;
			goto _iter_begin_1ab53a604;
		}
		_iter_end_1ab53a604:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab53bd42:;
		if (it != expr_end) {
			jule::Ptr<_1b4b4c449_Enum> _18321_e = *it;
			{
				if (((*(_18321_e))._field_Ident == (*(_14830_ident)))) {
					return jule::Any(_18321_e, &__jule_any_type66);;
				};
			}
			_iter_next_1ab53bd42:;
			++it;
			goto _iter_begin_1ab53bd42;
		}
		_iter_end_1ab53bd42:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab53c9be:;
		if (it != expr_end) {
			jule::Ptr<_1b4b4db54_TypeEnum> _18921_te = *it;
			{
				if (((*(_18921_te))._field_Ident == (*(_14830_ident)))) {
					return jule::Any(_18921_te, &__jule_any_type67);;
				};
			}
			_iter_next_1ab53c9be:;
			++it;
			goto _iter_begin_1ab53c9be;
		}
		_iter_end_1ab53c9be:;
	};
	return nullptr;;
}



inline jule::Bool _1b4c44860_isDuplicatedIdent(_1b4c41340_SymbolTable* _self_, jule::Uintptr _20132_itself, jule::Str* _20150_ident, jule::Bool _20162_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab53deed:;
		if (it != expr_end) {
			jule::Ptr<_1b4bddaa1_Var> *_20216_v = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_20216_v))) != _20132_itself) && ((*((*(_20216_v))))._field_Ident == (*(_20150_ident)))) && ((*(*(_20216_v)).alloc)._field_Binded == _20162_binded))) {
					return true;;
				};
			}
			_iter_next_1ab53deed:;
			++it;
			goto _iter_begin_1ab53deed;
		}
		_iter_end_1ab53deed:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab53e350:;
		if (it != expr_end) {
			jule::Ptr<_1b4c7bb1c_TypeAlias> *_20816_ta = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_20816_ta))) != _20132_itself) && ((*((*(_20816_ta))))._field_Ident == (*(_20150_ident)))) && ((*(*(_20816_ta)).alloc)._field_Binded == _20162_binded))) {
					return true;;
				};
			}
			_iter_next_1ab53e350:;
			++it;
			goto _iter_begin_1ab53e350;
		}
		_iter_end_1ab53e350:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab54053d:;
		if (it != expr_end) {
			jule::Ptr<_1b4b218b3_Struct> *_21416_s = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_21416_s))) != _20132_itself) && ((*((*(_21416_s))))._field_Ident == (*(_20150_ident)))) && ((*(*(_21416_s)).alloc)._field_Binded == _20162_binded))) {
					return true;;
				};
			}
			_iter_next_1ab54053d:;
			++it;
			goto _iter_begin_1ab54053d;
		}
		_iter_end_1ab54053d:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab541781:;
		if (it != expr_end) {
			jule::Ptr<_1b4b36884_Fn> *_22016_f = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_22016_f))) != _20132_itself) && ((*((*(_22016_f))))._field_Ident == (*(_20150_ident)))) && ((*(*(_22016_f)).alloc)._field_Binded == _20162_binded))) {
					return true;;
				};
			}
			_iter_next_1ab541781:;
			++it;
			goto _iter_begin_1ab541781;
		}
		_iter_end_1ab541781:;
	};
	if (_20162_binded) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab542870:;
		if (it != expr_end) {
			jule::Ptr<_1b4b49c3d_Trait> *_23016_t = it;
			{
				if (((static_cast<jule::Uintptr>((*(_23016_t))) != _20132_itself) && ((*((*(_23016_t))))._field_Ident == (*(_20150_ident))))) {
					return true;;
				};
			}
			_iter_next_1ab542870:;
			++it;
			goto _iter_begin_1ab542870;
		}
		_iter_end_1ab542870:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab543cc2:;
		if (it != expr_end) {
			jule::Ptr<_1b4b4c449_Enum> *_23616_e = it;
			{
				if (((static_cast<jule::Uintptr>((*(_23616_e))) != _20132_itself) && ((*((*(_23616_e))))._field_Ident == (*(_20150_ident))))) {
					return true;;
				};
			}
			_iter_next_1ab543cc2:;
			++it;
			goto _iter_begin_1ab543cc2;
		}
		_iter_end_1ab543cc2:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab544c18:;
		if (it != expr_end) {
			jule::Ptr<_1b4b4db54_TypeEnum> *_24216_te = it;
			{
				if (((static_cast<jule::Uintptr>((*(_24216_te))) != _20132_itself) && ((*((*(_24216_te))))._field_Ident == (*(_20150_ident))))) {
					return true;;
				};
			}
			_iter_next_1ab544c18:;
			++it;
			goto _iter_begin_1ab544c18;
		}
		_iter_end_1ab544c18:;
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4c41340_SymbolTable _Src) {
	_Stream << "SymbolTable{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Imports:" << _Src._field_Imports << ", ";
	_Stream << "Vars:" << _Src._field_Vars << ", ";
	_Stream << "TypeAliases:" << _Src._field_TypeAliases << ", ";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Funcs:" << _Src._field_Funcs << ", ";
	_Stream << "Traits:" << _Src._field_Traits << ", ";
	_Stream << "Enums:" << _Src._field_Enums << ", ";
	_Stream << "TypeEnums:" << _Src._field_TypeEnums << ", ";
	_Stream << "Impls:" << _Src._field_Impls;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b4c46a93_IsNil(_1b4c466a8_Data* _self_) {
	return _1b4c7d9dc_IsNil((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _1b4c46d29_IsVoid(_1b4c466a8_Data* _self_) {
	return _1b4c7dc73_Void((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _1b4c470b0_IsConst(_1b4c466a8_Data* _self_) {
	return ((*(_self_))._field_Constant != nullptr);;
}



inline jule::Bool _1b4c47401_GoodOperand(_1b4c466a8_Data* _self_, jule::Ptr<_1b4c466a8_Data>* _10531_other) {
	if ((_1b4c80a99_TypeEnum((*((*(_10531_other))))._field_Kind.ptr()) != nullptr)) {
		return false;;
	};
	return ((((_1b4c80060_Prim((*((*(_10531_other))))._field_Kind) == nullptr) || (!(_1b4c88c06_IsAny(_1b4c80060_Prim((*((*(_10531_other))))._field_Kind).ptr())))) && (_1b4c81869_Trait((*((*(_10531_other))))._field_Kind) == nullptr)) && (!(_1b4c7d9dc_IsNil((*(_self_))._field_Kind))));;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4c466a8_Data _Src) {
	_Stream << "Data{";
	_Stream << "untyped:" << _Src._field_untyped << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Lvalue:" << _Src._field_Lvalue << ", ";
	_Stream << "IsRune:" << _Src._field_IsRune << ", ";
	_Stream << "Model:" << _Src._field_Model << ", ";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Constant:" << _Src._field_Constant;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4c47830_Value _Src) {
	_Stream << "Value{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}



inline void _1b4c48930_pushErr(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4ad5712_Token> _13626_token, jule::Str _13641_fmt, jule::Slice<jule::Any> _13654_args) {
	_1b4bbd872_pushErr((*(_self_))._field_s.ptr(), _13626_token, _13641_fmt, _13654_args);
}



inline void _1b4c48c93_pushSuggestion(_1b4c483d0_Eval* _self_, jule::Str _14133_fmt, jule::Slice<jule::Any> _14146_args) {
	_1b4bbdbd5_pushSuggestion((*(_self_))._field_s.ptr(), _14133_fmt, _14146_args);
}



inline void _1b4c48e91_allowBuiltin(_1b4c483d0_Eval* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1b4c4918e_disallowBuiltin(_1b4c483d0_Eval* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline jule::Bool _1b4c49425_isUnsafe(_1b4c483d0_Eval* _self_) {
	return (*(_self_))._field_unsafety;;
}



inline jule::Bool _1b4c496ab_isGlobal(_1b4c483d0_Eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b4c9c500_Lookup_mptr_data3)) {
			_case_begin_1ab59352a:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ab593926:;
			{
				return false;;
			}
		}
		_match_end_1ab5938c1:;
	};
}



inline jule::Bool _1b4c499b9_applyNumericPrefix(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4c466a8_Data>* _16842_d) {
	if ((((((*(_16842_d)) == nullptr) || (!(_1b4c470b0_IsConst((*(_16842_d)).ptr())))) || (_1b4c80060_Prim((*((*(_16842_d))))._field_Kind.ptr()) == nullptr)) || ((*(_self_))._field_prefix == nullptr))) {
		return false;;
	};
	jule::Ptr<_1b4c854d8_Prim> _1759_prim = _1b4c80060_Prim((*(_self_))._field_prefix.ptr());;
	if ((_1759_prim == nullptr)) {
		return false;;
	};
	{
		
		if (_1b2752bcd_IsFloat(_1b4c85829_Str(_1759_prim.ptr()))) {
			_case_begin_1ab596044:;
			{
				(*((*(_16842_d))))._field_Kind=jule::new_ptr<_1b4c7c90e_TypeKind>((*((*(_self_))._field_prefix)));
				_1b2757045_SetF64((*((*(_16842_d))))._field_Constant.ptr(), _1b27561ba_AsF64((*((*(_16842_d))))._field_Constant));
				(*(*((*(_16842_d))))._field_Constant.alloc)._field_Kind=(*(_1759_prim))._field_Kind;
			}
		}
		else if (_1b27522b5_IsSigInt(_1b4c85829_Str(_1759_prim.ptr()))) {
			_case_begin_1ab5960cc:;
			{
				if ((!(_1b4c2c64a_sigAssignable(_1b4c85829_Str(_1759_prim.ptr()), _16842_d)))) {
					return false;;
				};
				(*((*(_16842_d))))._field_Kind=jule::new_ptr<_1b4c7c90e_TypeKind>((*((*(_self_))._field_prefix)));
				_1b2756473_SetI64((*((*(_16842_d))))._field_Constant.ptr(), _1b2755b9d_AsI64((*((*(_16842_d))))._field_Constant));
				(*(*((*(_16842_d))))._field_Constant.alloc)._field_Kind=(*(_1759_prim))._field_Kind;
			}
		}
		else if (_1b27525c3_IsUnsigInt(_1b4c85829_Str(_1759_prim.ptr()))) {
			_case_begin_1ab596143:;
			{
				if ((!(_1b4c2ca13_unsigAssignable(_1b4c85829_Str(_1759_prim.ptr()), _16842_d)))) {
					return false;;
				};
				(*((*(_16842_d))))._field_Kind=jule::new_ptr<_1b4c7c90e_TypeKind>((*((*(_self_))._field_prefix)));
				_1b275672b_SetU64((*((*(_16842_d))))._field_Constant.ptr(), _1b2755e34_AsU64((*((*(_16842_d))))._field_Constant));
				(*(*((*(_16842_d))))._field_Constant.alloc)._field_Kind=(*(_1759_prim))._field_Kind;
			}
		}
		_match_end_1ab595e67:;
	};
	return true;;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c49d0a_litStr(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4b00e8b_LitExpr>* _20322_l) {
	jule::Str _20413_s = jule::Str();;
	if (_1b4ad6aed_IsRawStr((*((*(_20322_l))))._field_Value)) {
		_20413_s=_1b4c2a89b_ToRawStr((*((*(_20322_l))))._field_Value);
	} else {
		_20413_s=_1b4c2abdc_ToStr((*((*(_20322_l))))._field_Value);
	};
	jule::Ptr<_1b2753508_Const> _21013_constant = static__1b2754295_NewStr(_20413_s);;
	return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=_1b4d6053b_primStr, ._field_Mutable=true, ._field_Model=jule::Any(_21013_constant, &__jule_any_type19), ._field_Constant=_21013_constant});;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c4a14b_litRune(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4b00e8b_LitExpr>* _22023_l) {
	jule::I32 _2219_r = _1b4c2a68c_ToRune((*((*(_22023_l))))._field_Value);;
	jule::Ptr<_1b4c466a8_Data> _22213_data = jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Constant=static__1b2753948_NewI64(static_cast<jule::I64>(_2219_r))});;
	if ((_2219_r <= 255LL)) {
		(*(_22213_data))._field_Kind=_1b4d62021_primU8;
	} else {
		(*(_22213_data))._field_Kind=_1b4d619b0_primI32;
	};
	(*(_22213_data))._field_Model=jule::Any(jule::new_ptr<_1b4b32e57_RuneExprModel>(_1b4b32e57_RuneExprModel{._field_Code=_2219_r}), &__jule_any_type83);
	(*_22213_data.alloc)._field_Mutable=true;
	(*_22213_data.alloc)._field_IsRune=true;
	(*_22213_data.alloc)._field_untyped=true;
	return _22213_data;;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c4a48c_litFloat(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4b00e8b_LitExpr>* _23924_l) {
	jule::F64 _2409_f = ({
		auto except = _1b273a3e1_ParseFloat((*((*(_23924_l))))._field_Value, 64LL);
		(except.ok()) ? (except.result) : ({

			jule::MAX_F64;
		});
	});;
	jule::Ptr<_1b2753508_Const> _24113_constant = static__1b275455e_NewF64(_2409_f);;
	return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_untyped=true, ._field_Kind=_1b4d62ebc_primF64, ._field_Mutable=true, ._field_Model=jule::Any(_24113_constant, &__jule_any_type19), ._field_Constant=_24113_constant});;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c4a7cd_litInt(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4b00e8b_LitExpr>* _25126_l) {
	;
	jule::Str _25413_lit = (*((*(_25126_l))))._field_Value;;
	jule::I64 _25513_base = 0LL;;
	{
		
		if (_1cb1bdb19_HasPrefix(_25413_lit, jule::Str::lit("0x", 2))) {
			_case_begin_1ab5a595a:;
			{
				(_25413_lit).mut_slice(2LL);;
				_25513_base=16LLU;
			}
		}
		else if (_1cb1bdb19_HasPrefix(_25413_lit, jule::Str::lit("0b", 2))) {
			_case_begin_1ab5a5a48:;
			{
				(_25413_lit).mut_slice(2LL);;
				_25513_base=2LLU;
			}
		}
		else if (_1cb1bdb19_HasPrefix(_25413_lit, jule::Str::lit("0o", 2))) {
			_case_begin_1ab5a562a:;
			{
				(_25413_lit).mut_slice(2LL);;
				_25513_base=8LLU;
			}
		}
		else if (((_25413_lit[0LL] == '0') && (_25413_lit.len() > 1LL))) {
			_case_begin_1ab5a5691:;
			{
				(_25413_lit).mut_slice(1LL);;
				_25513_base=8LLU;
			}
		}
		else {
			_case_begin_1ab5a55b4:;
			{
				_25513_base=10LLU;
			}
		}
		_match_end_1ab5a552b:;
	};
	jule::Ptr<_1b4c466a8_Data> _27513_d = jule::new_ptr<_1b4c466a8_Data>();;
	jule::Bool _27713_ok = true;;
	jule::I64 _2789_sig = ({
		auto except = _1b2733ac1_ParseInt(_25413_lit, _25513_base, 64LL);
		(except.ok()) ? (except.result) : ({
			_27713_ok=false;

			0LL;
		});
	});;
	if (_27713_ok) {
		(*_27513_d.alloc)._field_Constant=static__1b2753948_NewI64(_2789_sig);
		(*_27513_d.alloc)._field_Kind=_1b4d6121d_primInt;
	} else {
		jule::U64 _28613_unsig = ({
			auto except = _1b273361a_ParseUint(_25413_lit, _25513_base, 64LL);
			(except.ok()) ? (except.result) : ({
				_1b4c48930_pushErr(_self_, (*((*(_25126_l))))._field_Token, jule::Str::lit("arithmetic value overflow: this value too big", 45), jule::Slice<jule::Any>());
				_1b4c48c93_pushSuggestion(_self_, jule::Str::lit("floating-point literals may solve your problem", 46), jule::Slice<jule::Any>());

				jule::MAX_U64;
			});
		});;
		(*_27513_d.alloc)._field_Constant=static__1b2753c12_NewU64(_28613_unsig);
		(*_27513_d.alloc)._field_Kind=_1b4d60d55_primUint;
	};
	(*_27513_d.alloc)._field_Model=jule::Any((*_27513_d.alloc)._field_Constant, &__jule_any_type19);
	(*_27513_d.alloc)._field_untyped=true;
	if ((!(_1b4c499b9_applyNumericPrefix(_self_, &(_27513_d))))) {
		_1b4c754a6_fitBitsize(&(_27513_d));
	};
	return _27513_d;;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c4ab1e_litNum(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4b00e8b_LitExpr>* _30626_l) {
	{
		
		if (_1b4ad779c_IsFloat((*((*(_30626_l))))._field_Value)) {
			_case_begin_1ab5ac7a8:;
			{
				return _1b4c4a48c_litFloat(_self_, _30626_l);;
			}
		}
		else {
			_case_begin_1ab5ac742:;
			{
				return _1b4c4a7cd_litInt(_self_, _30626_l);;
			}
		}
		_match_end_1ab5ac643:;
	};
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c4ae60_evalLit(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4b00e8b_LitExpr> _31526_lit) {
	{
		
		if (_1b4ad6867_IsStr((*(_31526_lit))._field_Value)) {
			_case_begin_1ab5ad91e:;
			{
				return _1b4c49d0a_litStr(_self_, &(_31526_lit));;
			}
		}
		else if (_1b4ad6db7_IsRune((*(_31526_lit))._field_Value)) {
			_case_begin_1ab5ad9b8:;
			{
				return _1b4c4a14b_litRune(_self_, &(_31526_lit));;
			}
		}
		else if (_1b4ad7a66_IsNum((*(_31526_lit))._field_Value)) {
			_case_begin_1ab5ada40:;
			{
				return _1b4c4ab1e_litNum(_self_, &(_31526_lit));;
			}
		}
		else {
			_case_begin_1ab5ad3d0:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab5ad2e2:;
	};
}



inline jule::Any _1b4c4b2a1_findBuiltins(_1b4c483d0_Eval* _self_, jule::Str* _32832_ident) {
	if (_1b4bb7d00_IsPub((*(_32832_ident)))) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b4c9c500_Lookup_mptr_data1)) {
				_case_begin_1ab5b0c62:;
				{
					jule::Any _33221_def = _1b4c75275_findBuiltinsImport(_32832_ident, (*(_self_))._field_lookup.cast_ptr<_1b4b9a893_ImportInfo>((jule::Trait::Type*)&_1b4c9c500_Lookup_mptr_data1));;
					if ((_33221_def != nullptr)) {
						return _33221_def;;
					};
				}
			}
			else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b4c9c500_Lookup_mptr_data3)) {
				_case_begin_1ab5b09dc:;
				{
					jule::Any _33721_def = _1b4c75ece_findBuiltinsSema(_32832_ident, (*(_self_))._field_lookup.cast_ptr<_1b4bbac37_Sema>((jule::Trait::Type*)&_1b4c9c500_Lookup_mptr_data3));;
					if ((_33721_def != nullptr)) {
						return _33721_def;;
					};
				}
			}
			else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b4c9c500_Lookup_mptr_data0)) {
				_case_begin_1ab5b0cc8:;
				{
					jule::Any _34221_def = _1b4c75ece_findBuiltinsSema(_32832_ident, (*((*(_self_))._field_lookup.cast_ptr<_1b4b80cb8_scopeChecker>((jule::Trait::Type*)&_1b4c9c500_Lookup_mptr_data0)))._field_s);;
					if ((_34221_def != nullptr)) {
						return _34221_def;;
					};
				}
			}
			_match_end_1ab5b0bb8:;
		};
		return nullptr;;
	};
	if ((*(_self_))._field_disBuiltin) {
		return nullptr;;
	};
	return _1b4d63808_findBuiltinDef(_32832_ident);;
}



inline jule::Any _1b4c4b69c_getDef(_1b4c483d0_Eval* _self_, jule::Str* _35526_ident, jule::Bool _35538_binded) {
	jule::Ptr<_1b4bddaa1_Var> _36013_v = ((_1b4c9c500_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1b4c9abd5_FindVar((*(_self_))._field_lookup.data, (*(_35526_ident)), _35538_binded);;
	if ((_36013_v != nullptr)) {
		return jule::Any(_36013_v, &__jule_any_type8);;
	};
	jule::Ptr<_1b4c7bb1c_TypeAlias> _36513_ta = ((_1b4c9c500_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1b4c9b0d1_FindTypeAlias((*(_self_))._field_lookup.data, (*(_35526_ident)), _35538_binded);;
	if ((_36513_ta != nullptr)) {
		return jule::Any(_36513_ta, &__jule_any_type65);;
	};
	if ((!(_35538_binded))) {
		jule::Ptr<_1b4b4c449_Enum> _37117_enm = ((_1b4c9c500_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1b4c9c05a_FindEnum((*(_self_))._field_lookup.data, (*(_35526_ident)));;
		if ((_37117_enm != nullptr)) {
			return jule::Any(_37117_enm, &__jule_any_type66);;
		};
		jule::Ptr<_1b4b4db54_TypeEnum> _37617_tenm = ((_1b4c9c500_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1b4c9c39b_FindTypeEnum((*(_self_))._field_lookup.data, (*(_35526_ident)));;
		if ((_37617_tenm != nullptr)) {
			return jule::Any(_37617_tenm, &__jule_any_type67);;
		};
	};
	jule::Ptr<_1b4b36884_Fn> _38213_f = ((_1b4c9c500_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1b4c9b8c8_FindFn((*(_self_))._field_lookup.data, (*(_35526_ident)), _35538_binded);;
	if ((_38213_f != nullptr)) {
		return jule::Any(_38213_f, &__jule_any_type63);;
	};
	jule::Ptr<_1b4b218b3_Struct> _38713_s = ((_1b4c9c500_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1b4c9b4cc_FindStruct((*(_self_))._field_lookup.data, (*(_35526_ident)), _35538_binded);;
	if ((_38713_s != nullptr)) {
		return jule::Any(_38713_s, &__jule_any_type64);;
	};
	return _1b4c4b2a1_findBuiltins(_self_, _35526_ident);;
}



inline jule::Ptr<_1b4b3ca44_ReferenceStack> _1b4c4b933_getOwnerRefers(_1b4c483d0_Eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b4c9c500_Lookup_mptr_data0)) {
			_case_begin_1ab5b94b8:;
			{
				jule::Ptr<_1b4b80cb8_scopeChecker> _39817_sc = _1b4b843e8_getHardRoot((*(_self_))._field_lookup.cast_ptr<_1b4b80cb8_scopeChecker>((jule::Trait::Type*)&_1b4c9c500_Lookup_mptr_data0));;
				return (*((*(_39817_sc))._field_owner))._field_Refers;;
			}
		}
		else {
			_case_begin_1ab5b8a06:;
			{
				if ((((*(_self_))._field_owner != nullptr) && ((*(*(_self_))._field_owner.alloc)._field_Scope == nullptr))) {
					return (*(*(_self_))._field_owner.alloc)._field_Refers;;
				};
			}
		}
		_match_end_1ab5b89a1:;
	};
	return nullptr;;
}



inline void _1ab5cbae6_pushReference(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4b39865_FnIns>* _41040_ref) {
	jule::Ptr<_1b4b3ca44_ReferenceStack> _41113_refers = _1b4c4b933_getOwnerRefers(_self_);;
	if (((_41113_refers != nullptr) && (!(_1ab5cde39_Exist(_41113_refers, (*(_41040_ref))))))) {
		_1b4b3d825_Push(_41113_refers, jule::Any((*(_41040_ref)), &__jule_any_type7));
	};
}

inline void _1ab5e27dd_pushReference(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4bddaa1_Var>* _41040_ref) {
	jule::Ptr<_1b4b3ca44_ReferenceStack> _41113_refers = _1b4c4b933_getOwnerRefers(_self_);;
	if (((_41113_refers != nullptr) && (!(_1ab5e4aa9_Exist(_41113_refers, (*(_41040_ref))))))) {
		_1b4b3d825_Push(_41113_refers, jule::Any((*(_41040_ref)), &__jule_any_type8));
	};
}

inline void _1ab6a68a2_pushReference(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4b24641_StructIns>* _41040_ref) {
	jule::Ptr<_1b4b3ca44_ReferenceStack> _41113_refers = _1b4c4b933_getOwnerRefers(_self_);;
	if (((_41113_refers != nullptr) && (!(_1ab6a8bd4_Exist(_41113_refers, (*(_41040_ref))))))) {
		_1b4b3d825_Push(_41113_refers, jule::Any((*(_41040_ref)), &__jule_any_type9));
	};
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c4c02c__evalEnum(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4b4c449_Enum> _41728_enm) {
	return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=jule::new_ptr<_1b4c7c90e_TypeKind>(_1b4c7c90e_TypeKind{._field_Kind=jule::Trait(_41728_enm, (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data3)}), ._field_Decl=true, });;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c4c428_evalEnum(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4b4c449_Enum> _42631_enm, jule::Ptr<_1b4ad5712_Token> _42643_errorToken) {
	if ((!(_1b4bbe0d1_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_42631_enm))._field_Public, (*_42631_enm.alloc)._field_Token)))) {
		_1b4c48930_pushErr(_self_, _42643_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*_42631_enm.alloc)._field_Ident, &__jule_any_type4)}));
		_1b4c48c93_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1b4c4c02c__evalEnum(_self_, _42631_enm);;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c4c769__evalTypeEnum(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4b4db54_TypeEnum> _43532_enm) {
	return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=jule::new_ptr<_1b4c7c90e_TypeKind>(_1b4c7c90e_TypeKind{._field_Kind=jule::Trait(_43532_enm, (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data4)}), ._field_Decl=true, });;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c4cb65_evalTypeEnum(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4b4db54_TypeEnum> _44435_enm, jule::Ptr<_1b4ad5712_Token> _44451_errorToken) {
	if ((!(_1b4bbe0d1_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_44435_enm))._field_Public, (*_44435_enm.alloc)._field_Token)))) {
		_1b4c48930_pushErr(_self_, _44451_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*_44435_enm.alloc)._field_Ident, &__jule_any_type4)}));
		_1b4c48c93_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1b4c4c769__evalTypeEnum(_self_, _44435_enm);;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c4cea6__evalStruct(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4b24641_StructIns> _45330_s) {
	jule::Ptr<_1b4c466a8_Data> _45413_d = jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=jule::new_ptr<_1b4c7c90e_TypeKind>(_1b4c7c90e_TypeKind{._field_Kind=jule::Trait(_45330_s, (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data0)}), ._field_Model=jule::Any(_45330_s, &__jule_any_type9), ._field_Decl=true, });;
	if ((((*(_45330_s))._field_Decl != nullptr) && (*(*_45330_s.alloc)._field_Decl.alloc)._field_Binded)) {
		(*((*(_45413_d))._field_Kind))._field_BindIdent=(*(*_45330_s.alloc)._field_Decl.alloc)._field_Ident;
	};
	return _45413_d;;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c4d3a2_evalStruct(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4b24641_StructIns> _46733_s, jule::Ptr<_1b4ad5712_Token> _46748_errorToken) {
	if ((!(_1b4bbe0d1_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_46733_s))._field_Decl))._field_Public, (*(*_46733_s.alloc)._field_Decl.alloc)._field_Token)))) {
		_1b4c48930_pushErr(_self_, _46748_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(*_46733_s.alloc)._field_Decl.alloc)._field_Ident, &__jule_any_type4)}));
		_1b4c48c93_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1b4c4da56_checkDeprecated(_self_, &((*(*_46733_s.alloc)._field_Decl.alloc)._field_Directives), _46748_errorToken);
	return _1b4c4cea6__evalStruct(_self_, _46733_s);;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c4d6e3_evalFnIns(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4b39865_FnIns> _47728_f) {
	return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=jule::new_ptr<_1b4c7c90e_TypeKind>(_1b4c7c90e_TypeKind{._field_Kind=jule::Trait(_47728_f, (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data1)}), ._field_Model=jule::Any(_47728_f, &__jule_any_type7), });;
}



inline void _1b4c4da56_checkDeprecated(_1b4c483d0_Eval* _self_, jule::Slice<jule::Ptr<_1b4aea0d9_Directive>>* _48639_directives, jule::Ptr<_1b4ad5712_Token> _48670_tok) {
	if (_1b4c49425_isUnsafe(_self_)) {
		return;;
	};
	jule::Ptr<_1b4aea0d9_Directive> _4919_d = _1b4c74dac_findDirective(_48639_directives, jule::Str::lit("deprecated", 10));;
	if ((_4919_d != nullptr)) {
		if (((*_4919_d.alloc)._field_Args.len() == 0LL)) {
			_1b4c48930_pushErr(_self_, _48670_tok, jule::Str::lit("deprecated usage: @", 19), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("this code is deprecated", 23), &__jule_any_type4)}));
		} else {
			_1b4c48930_pushErr(_self_, _48670_tok, jule::Str::lit("deprecated usage: @", 19), jule::Slice<jule::Any>::make({jule::Any((*((*_4919_d.alloc)._field_Args[0LL]))._field_Kind, &__jule_any_type4)}));
		};
		_1b4c48c93_pushSuggestion(_self_, jule::Str::lit("use Unsafe Jule for deprecated codes or replace to successor", 60), jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c4de52_evalFn(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4b36884_Fn> _50229_f, jule::Ptr<_1b4ad5712_Token> _50237_errorToken) {
	if ((!(_1b4bbe0d1_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_50229_f))._field_Public, (*_50229_f.alloc)._field_Token)))) {
		_1b4c48930_pushErr(_self_, _50237_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*_50229_f.alloc)._field_Ident, &__jule_any_type4)}));
		_1b4c48c93_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1b4c4da56_checkDeprecated(_self_, &((*_50229_f.alloc)._field_Directives), _50237_errorToken);
	jule::Ptr<_1b4b39865_FnIns> _51113_ins = _1b4b380e4_instance(_50229_f);;
	_1ab5cbae6_pushReference(_self_, &(_51113_ins));
	return _1b4c4d6e3_evalFnIns(_self_, _51113_ins);;
}



inline void _1b4c4e370_pushIllegalCycleError(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4bddaa1_Var>* _51641_v1, jule::Ptr<_1b4bddaa1_Var>* _51652_v2, _1cb1d27a9_StrBuilder* _51667_message) {
	;
	jule::Str _5189_refers_to = _1cb285582_Logf(jule::Str::lit("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any((*((*(_51641_v1))))._field_Ident, &__jule_any_type4),jule::Any((*((*(_51652_v2))))._field_Ident, &__jule_any_type4)}));;
	jule::Slice<jule::U8> _5199_buf = _1cb1dc682_Buf(_51667_message);;
	_1cb1db3d9_WriteStr(_51667_message, _1cb1bd751_Repeat(jule::Str::lit(" ", 1), 7LL));
	_1cb1db3d9_WriteStr(_51667_message, _5189_refers_to);
	_1cb1db692_WriteByte(_51667_message, '\n');
	_1cb1db131_Write(_51667_message, _5199_buf);
}



inline jule::Bool _1b4c4e76b_checkCrossCycle(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4bddaa1_Var>* _52635_v, _1cb1d27a9_StrBuilder* _52649_message) {
	{
		auto expr = &((*((*(_52635_v))))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab5d326d:;
		if (it != expr_end) {
			jule::Ptr<_1b4bddaa1_Var> *_52716_d = it;
			{
				if (((*(_52716_d)) == (*(_self_))._field_owner)) {
					_1b4c4e370_pushIllegalCycleError(_self_, _52635_v, _52716_d, _52649_message);
					return false;;
				};
				if ((!(_1b4c4e76b_checkCrossCycle(_self_, _52716_d, _52649_message)))) {
					_1b4c4e370_pushIllegalCycleError(_self_, _52635_v, _52716_d, _52649_message);
					return false;;
				};
			}
			_iter_next_1ab5d326d:;
			++it;
			goto _iter_begin_1ab5d326d;
		}
		_iter_end_1ab5d326d:;
	};
	return true;;
}



inline jule::Bool _1b4c4eb67_checkIllegalCycles(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4bddaa1_Var>* _54342_v, jule::Ptr<_1b4ad5712_Token> _54351_declToken) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_owner == nullptr) || ((*((*(_self_))._field_owner))._field_Scope != nullptr))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if (((*(_self_))._field_owner == (*(_54342_v)))) {
		_1b4c48930_pushErr(_self_, (*((*(_self_))._field_owner))._field_Token, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_owner))._field_Ident, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_1cb1d27a9_StrBuilder _55613_message = static__1cb1d2a73_New(32LL);;
	if ((!(_1b4c4e76b_checkCrossCycle(_self_, _54342_v, &(_55613_message))))) {
		jule::Str _55917_errMsg = _1cb1dbbd1_Str(&_55613_message);;
		_1cb1dbdce_Clear(&_55613_message);
		_1b4c4e370_pushIllegalCycleError(_self_, &((*(_self_))._field_owner), _54342_v, &(_55613_message));
		_55917_errMsg+=_1cb1dbbd1_Str(&_55613_message);
		_1b4c48930_pushErr(_self_, _54351_declToken, jule::Str::lit("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_55917_errMsg, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{ jule::Slice<jule::Ptr<_1b4bddaa1_Var>> &__jule_push_dest = (*((*(_self_))._field_owner))._field_Depends; __jule_push_dest.push((*(_54342_v))); };
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c50063_evalVar(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4bddaa1_Var> _57130_v, jule::Ptr<_1b4ad5712_Token> _57139_errorToken) {
	if ((!(_1b4bbe0d1_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_57130_v))._field_Public, (*_57130_v.alloc)._field_Token)))) {
		_1b4c48930_pushErr(_self_, _57139_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*_57130_v.alloc)._field_Ident, &__jule_any_type4)}));
		_1b4c48c93_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1b4c4da56_checkDeprecated(_self_, &((*_57130_v.alloc)._field_Directives), _57139_errorToken);
	if (((*_57130_v.alloc)._field_Token == nullptr)) {
		goto _julec_label_1ab5e9a7b;
	};
	(*_57130_v.alloc)._field_Used=true;
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b4c9c500_Lookup_mptr_data3)) {
			_case_begin_1ab5dbc8d:;
			{
				jule::Bool _59013_ok = _1b4c4eb67_checkIllegalCycles(_self_, &(_57130_v), _57139_errorToken);;
				if ((!(_59013_ok))) {
					return nullptr;;
				};
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b4c9c500_Lookup_mptr_data0)) {
			_case_begin_1ab5db3a8:;
			{
				jule::Ptr<_1b4b80cb8_scopeChecker> _59517_s = (*(_self_))._field_lookup.cast_ptr<_1b4b80cb8_scopeChecker>((jule::Trait::Type*)&_1b4c9c500_Lookup_mptr_data0);;
				jule::Ptr<_1b4b80cb8_scopeChecker> _59617_root = _1b4b84162_getRoot(_59517_s);;
				if ((((*(_59617_root))._field_captured != nullptr) && _1b4c79eb1_isVarCaptured(_59617_root, _59517_s, _57130_v))) {
					_1b4b83dcb_pushCaptured(_59617_root, &(_57130_v));
				};
				if (((!((*_57130_v.alloc)._field_Reference)) || _1b4c49425_isUnsafe(_self_))) {
					goto _match_end_1ab5dbc16;
				};
				while ((((*_59517_s.alloc)._field_owner == nullptr) && ((*_59517_s.alloc)._field_parent != nullptr))) {
					{
						_59517_s=(*_59517_s.alloc)._field_parent;
					}
				_iter_next_1ab5e0016:;
				}
				_iter_end_1ab5e0016:;;
				if (((((*_59517_s.alloc)._field_owner != nullptr) && (*((*_59517_s.alloc)._field_owner))._field_Anon) && ((*_57130_v.alloc)._field_Scope != (*((*_59517_s.alloc)._field_owner))._field_Scope))) {
					_1b4c48930_pushErr(_self_, _57139_errorToken, jule::Str::lit("anonymous functions cannot access to reference definition @ of parent scope", 75), jule::Slice<jule::Any>::make({jule::Any((*_57130_v.alloc)._field_Ident, &__jule_any_type4)}));
				};
			}
		}
		_match_end_1ab5dbc16:;
	};
	if (((*_57130_v.alloc)._field_Scope == nullptr)) {
		_1ab5e27dd_pushReference(_self_, &(_57130_v));
	};
	if (((!((*_57130_v.alloc)._field_Binded)) && (((*_57130_v.alloc)._field_Value == nullptr) || ((*((*_57130_v.alloc)._field_Value))._field_Data == nullptr)))) {
		if ((*_57130_v.alloc)._field_Constant) {
			_1b4bd59ee_checkVar((*(_self_))._field_s, &(_57130_v), jule::Trait((*(_self_))._field_s, (jule::Trait::Type*)&_1b4c9c500_Lookup_mptr_data3));
			if ((((*_57130_v.alloc)._field_Value == nullptr) || ((*((*_57130_v.alloc)._field_Value))._field_Data == nullptr))) {
				return nullptr;;
			};
		};
	};
	if ((((*_57130_v.alloc)._field_Kind == nullptr) || ((*((*_57130_v.alloc)._field_Kind))._field_Kind == nullptr))) {
		if (((*_57130_v.alloc)._field_Scope != nullptr)) {
			return nullptr;;
		};
		_1b4bd59ee_checkVar((*(_self_))._field_s, &(_57130_v), (*(_self_))._field_lookup);
		if ((((*_57130_v.alloc)._field_Kind == nullptr) || ((*((*_57130_v.alloc)._field_Kind))._field_Kind == nullptr))) {
			return nullptr;;
		};
	};
	_julec_label_1ab5e9a7b:;
	jule::Ptr<_1b4c466a8_Data> _64613_d = jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=(*((*_57130_v.alloc)._field_Kind))._field_Kind, ._field_Mutable=(*_57130_v.alloc)._field_Mutable, ._field_Reference=(*_57130_v.alloc)._field_Reference, ._field_Lvalue=(!((*_57130_v.alloc)._field_Constant)), ._field_Model=jule::Any(_57130_v, &__jule_any_type8), });;
	if ((((!((*_57130_v.alloc)._field_Binded)) && _1b4bdde7a_IsInitialized(_57130_v)) && ((*((*_57130_v.alloc)._field_Value))._field_Data != nullptr))) {
		(*(_64613_d))._field_IsRune=(*((*((*_57130_v.alloc)._field_Value))._field_Data))._field_IsRune;
	};
	if (((*_57130_v.alloc)._field_Constant && ((*((*((*_57130_v.alloc)._field_Value))._field_Data))._field_Constant != nullptr))) {
		(*_64613_d.alloc)._field_Constant=jule::new_ptr<_1b2753508_Const>((*(*((*((*_57130_v.alloc)._field_Value))._field_Data))._field_Constant.alloc));
		(*_64613_d.alloc)._field_Model=jule::Any((*_64613_d.alloc)._field_Constant, &__jule_any_type19);
		if (_1b4bde497_untypedConstant(_57130_v)) {
			_1b4c499b9_applyNumericPrefix(_self_, &(_64613_d));
			(*_64613_d.alloc)._field_untyped=true;
		};
	};
	return _64613_d;;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c5045e_evalTypeAlias(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4c7bb1c_TypeAlias> _67036_ta, jule::Ptr<_1b4ad5712_Token> _67052_errorToken) {
	if ((!(_1b4bbe0d1_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_67036_ta))._field_Public, (*_67036_ta.alloc)._field_Token)))) {
		_1b4c48930_pushErr(_self_, _67052_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*_67036_ta.alloc)._field_Ident, &__jule_any_type4)}));
		_1b4c48c93_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_67036_ta.alloc)._field_Used=true;
	jule::Trait _67913_kind = (*((*((*_67036_ta.alloc)._field_Kind))._field_Kind))._field_Kind;;
	jule::Ptr<_1b4c466a8_Data> _68017_d = nullptr;;
	{
		auto &_match_expr{ _67913_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data0)) {
			_case_begin_1ab60524b:;
			{
				_68017_d=_1b4c4cea6__evalStruct(_self_, _67913_kind.cast_ptr<_1b4b24641_StructIns>((jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data0));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data3)) {
			_case_begin_1ab603c3e:;
			{
				_68017_d=_1b4c4c02c__evalEnum(_self_, _67913_kind.cast_ptr<_1b4b4c449_Enum>((jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data3));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data4)) {
			_case_begin_1ab603ca5:;
			{
				_68017_d=_1b4c4c769__evalTypeEnum(_self_, _67913_kind.cast_ptr<_1b4b4db54_TypeEnum>((jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data4));
			}
		}
		else {
			_case_begin_1ab603bc8:;
			{
				_68017_d=jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=jule::new_ptr<_1b4c7c90e_TypeKind>(_1b4c7c90e_TypeKind{._field_Kind=(*(*(*_67036_ta.alloc)._field_Kind.alloc)._field_Kind.alloc)._field_Kind}), ._field_Decl=true, });
				if ((*_67036_ta.alloc)._field_Binded) {
					(*((*(_68017_d))._field_Kind))._field_BindIdent=(*_67036_ta.alloc)._field_Ident;
				} else {
					(*((*(_68017_d))._field_Kind))._field_BindIdent=(*(*(*_67036_ta.alloc)._field_Kind.alloc)._field_Kind.alloc)._field_BindIdent;
				};
				(*(_68017_d))._field_Model=jule::Any((*_68017_d.alloc)._field_Kind, &__jule_any_type84);
			}
		}
		_match_end_1ab603aa7:;
	};
	(*((*(_68017_d))._field_Kind))._field_Generic=(*_67036_ta.alloc)._field_Generic;
	return _68017_d;;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c5085a_evalDef(_1b4c483d0_Eval* _self_, jule::Any* _70631_def, jule::Ptr<_1b4ad5712_Token> _70641_ident) {
	{
		auto &_match_expr{ (*(_70631_def)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ab60922d:;
			{
				return _1b4c50063_evalVar(_self_, (*(_70631_def)).cast_ptr<_1b4bddaa1_Var>(&__jule_any_type8), _70641_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1ab60900d:;
			{
				return _1b4c4c428_evalEnum(_self_, (*(_70631_def)).cast_ptr<_1b4b4c449_Enum>(&__jule_any_type66), _70641_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1ab609294:;
			{
				return _1b4c4cb65_evalTypeEnum(_self_, (*(_70631_def)).cast_ptr<_1b4b4db54_TypeEnum>(&__jule_any_type67), _70641_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1ab60930a:;
			{
				return _1b4c4d3a2_evalStruct(_self_, _1b4b21d25_instance((*(_70631_def)).cast_ptr<_1b4b218b3_Struct>(&__jule_any_type64)), _70641_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1ab609371:;
			{
				jule::Ptr<_1b4b36884_Fn> _71717_f = (*(_70631_def)).cast_ptr<_1b4b36884_Fn>(&__jule_any_type63);;
				if ((!(*(_71717_f))._field_Ident.equal("init", 4))) {
					return _1b4c4de52_evalFn(_self_, _71717_f, _70641_ident);;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1ab6093e8:;
			{
				return _1b4c4d6e3_evalFnIns(_self_, (*(_70631_def)).cast_ptr<_1b4b39865_FnIns>(&__jule_any_type7));;
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1ab609470:;
			{
				return _1b4c5045e_evalTypeAlias(_self_, (*(_70631_def)).cast_ptr<_1b4c7bb1c_TypeAlias>(&__jule_any_type65), _70641_ident);;
			}
		}
		_match_end_1ab609140:;
	};
	_1b4c48930_pushErr(_self_, _70641_ident, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_70641_ident))._field_Kind, &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c50b9b_evalIdent(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4b0181b_IdentExpr> _73028_ident) {
	jule::Any _73113_def = _1b4c4b69c_getDef(_self_, &((*(_73028_ident))._field_Ident), (*_73028_ident.alloc)._field_Binded);;
	return _1b4c5085a_evalDef(_self_, &(_73113_def), (*_73028_ident.alloc)._field_Token);;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c50edc_evalUnary(jule::Ptr<_1b4c483d0_Eval> _self_, jule::Ptr<_1b4b020ad_UnaryExpr> _73533_u) {
	_1b4c6b964_unaryEval _73613_unary = static__1b4c6bda4_new(_self_);;
	return _1b4c6d2d4_eval(&_73613_unary, _73533_u);;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c5132d_evalVariadic(jule::Ptr<_1b4c483d0_Eval> _self_, jule::Ptr<_1b4b02487_VariadicExpr> _74036_v) {
	if (((*(_74036_v))._field_Expr == nullptr)) {
		_1b4c48930_pushErr(_self_.ptr(), (*_74036_v.alloc)._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b4c7c90e_TypeKind> _74613_prefix = (*_self_.alloc)._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_74613_prefix;
	});;
	jule::Ptr<_1b4c466a8_Data> _75013_d = _1b4c6b49c_evalExpr(_self_, (*_74036_v.alloc)._field_Expr);;
	if ((_75013_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1b4c7ecc9_Variadicable((*(_75013_d))._field_Kind.ptr())))) {
		_1b4c48930_pushErr(_self_, (*_74036_v.alloc)._field_Token, jule::Str::lit("type @ is not variadicable", 26), jule::Slice<jule::Any>::make({jule::Any(_1b4c7ccc7_Str((*(_75013_d))._field_Kind), &__jule_any_type4)}));
		return nullptr;;
	};
	_1b4c79a82_makeVariadic(&(_75013_d), (*(_1b4c810b6_Slc((*(_75013_d))._field_Kind)))._field_Elem);
	return _75013_d;;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c5166e_evalUnsafe(jule::Ptr<_1b4c483d0_Eval> _self_, jule::Ptr<_1b4b01365_UnsafeExpr> _76234_u) {
	jule::Bool _7639_unsafety = (*(_self_))._field_unsafety;;
	(*_self_.alloc)._field_unsafety=true;
	jule::Ptr<_1b4c466a8_Data> _76513_d = _1b4c6b49c_evalExpr(_self_, (*(_76234_u))._field_Expr);;
	(*_self_.alloc)._field_unsafety=_7639_unsafety;
	return _76513_d;;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c519b0_evalArr(jule::Ptr<_1b4c483d0_Eval> _self_, jule::Ptr<_1b4b06557_SliceExpr> _77031_s) {
	jule::Ptr<_1b4c8bd08_Arr> _77213_pt = _1b4c80d30_Arr((*(_self_))._field_prefix.ptr());;
	jule::Ptr<_1b4c8bd08_Arr> _77413_arr = jule::new_ptr<_1b4c8bd08_Arr>(_1b4c8bd08_Arr{._field_Auto=false, ._field_N=0LL, ._field_Elem=(*(_77213_pt))._field_Elem});;
	jule::Bool _78013_filled = false;;
	if (((*(_77031_s))._field_Exprs.len() == 2LL)) {
		{
			auto &_match_expr{ (*((*(_77031_s))._field_Exprs[1LL]))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type75) {
				_case_begin_1ab61965b:;
				{
					if (((*((*((*(_77031_s))._field_Exprs[1LL]))._field_Kind.unsafe_cast_ptr<_1b4b02487_VariadicExpr>()))._field_Expr != nullptr)) {
						goto _match_end_1ab6195b2;
					};
					if ((*_77213_pt.alloc)._field_Auto) {
						_1b4c48930_pushErr(_self_, (*_77031_s.alloc)._field_Token, jule::Str::lit("auto-sized arrays cannot filled", 31), jule::Slice<jule::Any>());
						return nullptr;;
					};
					_78013_filled=true;
					((*(_77031_s))._field_Exprs).mut_slice(0LL, 1LL);;
				}
			}
			_match_end_1ab6195b2:;
		};
	};
	(*(_77413_arr))._field_N=(*_77031_s.alloc)._field_Exprs.len();
	if ((!((*_77213_pt.alloc)._field_Auto))) {
		if (((*_77413_arr.alloc)._field_N > (*_77213_pt.alloc)._field_N)) {
			_1b4c48930_pushErr(_self_, (*_77031_s.alloc)._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
		} else if (((*_77413_arr.alloc)._field_N < (*_77213_pt.alloc)._field_N)) {
			(*_77413_arr.alloc)._field_N=(*_77213_pt.alloc)._field_N;
		};
	};
	jule::Ptr<_1b4b2de0e_ArrayExprModel> _80913_model = jule::new_ptr<_1b4b2de0e_ArrayExprModel>(_1b4b2de0e_ArrayExprModel{._field_Kind=_77413_arr, });;
	if (_78013_filled) {
		(*(_80913_model))._field_Elems=jule::Slice<jule::Any>::alloc(0LL, 2LL, jule::Any(nullptr));
	} else {
		(*(_80913_model))._field_Elems=jule::Slice<jule::Any>::alloc(0LL, (*_77031_s.alloc)._field_Exprs.len(), jule::Any(nullptr));
	};
	jule::Ptr<_1b4c7c90e_TypeKind> _81813_prefix = (*_self_.alloc)._field_prefix;;
	(*_self_.alloc)._field_prefix=(*_77413_arr.alloc)._field_Elem;
	{
		auto expr = &((*_77031_s.alloc)._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab621388:;
		if (it != expr_end) {
			jule::Ptr<_1b4b00001_Expr> _82021_elem = *it;
			{
				jule::Ptr<_1b4c466a8_Data> _82117_d = _1b4c6b49c_evalExpr(_self_, _82021_elem);;
				if ((_82117_d == nullptr)) {
					goto _iter_next_1ab621388;
				};
				;
				if (_1b4bca719_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*_77413_arr.alloc)._field_Elem), &(_82117_d), &((*(_82021_elem))._field_Token))) {
					_1b4bc6380_checkAssignType((*_self_.alloc)._field_s, false, &((*_77413_arr.alloc)._field_Elem), &(_82117_d), (*_82021_elem.alloc)._field_Token);
				};
				(*(_80913_model))._field_Elems=jule::append((*_80913_model.alloc)._field_Elems,jule::Slice<jule::Any>::make({(*(_82117_d))._field_Model}));
			}
			_iter_next_1ab621388:;
			++it;
			goto _iter_begin_1ab621388;
		}
		_iter_end_1ab621388:;
	};
	(*_self_.alloc)._field_prefix=_81813_prefix;
	if (_78013_filled) {
		(*_80913_model.alloc)._field_Elems=jule::append((*_80913_model.alloc)._field_Elems,jule::Slice<jule::Any>::make({nullptr}));
	};
	return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=jule::new_ptr<_1b4c7c90e_TypeKind>(_1b4c7c90e_TypeKind{._field_Kind=jule::Trait(_77413_arr, (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data25)}), ._field_Mutable=true, ._field_Model=jule::Any(_80913_model, &__jule_any_type85), });;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c51e66_evalExpSlc(jule::Ptr<_1b4c483d0_Eval> _self_, jule::Ptr<_1b4b06557_SliceExpr> _84734_s, jule::Ptr<_1b4c7c90e_TypeKind> _84753_t, jule::Any _84771_first) {
	jule::Ptr<_1b4c899d7_Slc> _84813_slc = jule::new_ptr<_1b4c899d7_Slc>(_1b4c899d7_Slc{._field_Elem=_84753_t});;
	jule::I64 _85213_i = 0LL;;
	jule::Ptr<_1b4b2adea_SliceExprModel> _85313_model = jule::new_ptr<_1b4b2adea_SliceExprModel>(_1b4b2adea_SliceExprModel{._field_ElemKind=_84753_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, (*(_84734_s))._field_Exprs.len(), jule::Any(nullptr))});;
	if ((_84771_first != nullptr)) {
		(*(_85313_model))._field_Elems=jule::append((*_85313_model.alloc)._field_Elems,jule::Slice<jule::Any>::make({_84771_first}));
		_85213_i=1LL;
	};
	jule::Ptr<_1b4c7c90e_TypeKind> _86213_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=(*(_84813_slc))._field_Elem;
	{
		auto expr = (*_84734_s.alloc)._field_Exprs.slice(_85213_i);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1ab62936e:;
		if (it != expr_end) {
			jule::Ptr<_1b4b00001_Expr> _86421_elem = *it;
			{
				jule::Ptr<_1b4c466a8_Data> _86517_d = _1b4c6b49c_evalExpr(_self_, _86421_elem);;
				if ((_86517_d != nullptr)) {
					;
					if (_1b4bca719_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*_84813_slc.alloc)._field_Elem), &(_86517_d), &((*(_86421_elem))._field_Token))) {
						_1b4bc6380_checkAssignType((*_self_.alloc)._field_s, false, &((*_84813_slc.alloc)._field_Elem), &(_86517_d), (*_86421_elem.alloc)._field_Token);
					};
					(*_85313_model.alloc)._field_Elems=jule::append((*_85313_model.alloc)._field_Elems,jule::Slice<jule::Any>::make({(*_86517_d.alloc)._field_Model}));
				};
			}
			_iter_next_1ab62936e:;
			++it;
			goto _iter_begin_1ab62936e;
		}
		_iter_end_1ab62936e:;
	};
	(*_self_.alloc)._field_prefix=_86213_prefix;
	return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=jule::new_ptr<_1b4c7c90e_TypeKind>(_1b4c7c90e_TypeKind{._field_Kind=jule::Trait(_84813_slc, (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data22)}), ._field_Mutable=true, ._field_Model=jule::Any(_85313_model, &__jule_any_type76), });;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c522a7_evalSliceExpr(jule::Ptr<_1b4c483d0_Eval> _self_, jule::Ptr<_1b4b06557_SliceExpr> _88537_s) {
	if (((*(_self_))._field_prefix != nullptr)) {
		{
			
			if ((_1b4c80d30_Arr((*_self_.alloc)._field_prefix) != nullptr)) {
				_case_begin_1ab62dc8b:;
				{
					return _1b4c519b0_evalArr(_self_, _88537_s);;
				}
			}
			else if ((_1b4c810b6_Slc((*_self_.alloc)._field_prefix) != nullptr)) {
				_case_begin_1ab62dd35:;
				{
					jule::Ptr<_1b4c899d7_Slc> _89121_pt = _1b4c810b6_Slc((*_self_.alloc)._field_prefix);;
					return _1b4c51e66_evalExpSlc(_self_, _88537_s, (*(_89121_pt))._field_Elem, nullptr);;
				}
			}
			_match_end_1ab62dbae:;
		};
	};
	jule::Ptr<_1b4c7c90e_TypeKind> _89613_prefix = (*_self_.alloc)._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	if (((*(_88537_s))._field_Exprs.len() == 0LL)) {
		_1b4c48930_pushErr(_self_, (*_88537_s.alloc)._field_Token, jule::Str::lit("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b4c466a8_Data> _90413_firstElem = _1b4c6b49c_evalExpr(_self_, (*_88537_s.alloc)._field_Exprs[0LL]);;
	if ((_90413_firstElem == nullptr)) {
		return nullptr;;
	};
	;
	_1b4bca719_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*(_90413_firstElem))._field_Kind), &(_90413_firstElem), &((*((*_88537_s.alloc)._field_Exprs[0LL]))._field_Token));
	jule::Ptr<_1b4c466a8_Data> _91413_d = _1b4c51e66_evalExpSlc(_self_, _88537_s, (*(_90413_firstElem))._field_Kind, (*(_90413_firstElem))._field_Model);;
	(*_self_.alloc)._field_prefix=_89613_prefix;
	return _91413_d;;
}



inline void _1b4c5261a_checkIntegerIndexingByData(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4c466a8_Data>* _92050_d, jule::Ptr<_1b4ad5712_Token> _92064_token) {
	jule::Str _9219_errKey = _1b4c7773e_checkDataForIntegerIndexing(_92050_d, &(_92064_token));;
	{
		auto &_match_expr{ _9219_errKey };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1ab6369ca:;
			{
				return;;
			}
		}
		else if (_match_expr == jule::Str::lit("type @ is invalid for indexing", 30)) {
			_case_begin_1ab63669a:;
			{
				_1b4c48930_pushErr(_self_, _92064_token, _9219_errKey, jule::Slice<jule::Any>::make({jule::Any(_1b4c7ccc7_Str((*((*(_92050_d))))._field_Kind.ptr()), &__jule_any_type4)}));
			}
		}
		else {
			_case_begin_1ab636315:;
			{
				_1b4c48930_pushErr(_self_, _92064_token, _9219_errKey, jule::Slice<jule::Any>());
			}
		}
		_match_end_1ab6365ac:;
	};
}



inline void _1b4c52a38_indexingPtr(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4c466a8_Data>* _93235_d, jule::Ptr<_1b4c466a8_Data>* _93250_index, jule::Ptr<_1b4b06eb4_IndexingExpr>* _93269_i) {
	_1b4c5261a_checkIntegerIndexingByData(_self_, _93250_index, (*((*(_93269_i))))._field_Token);
	(*((*(_93235_d))))._field_Lvalue=true;
	jule::Ptr<_1b4c8c7cb_Ptr> _93613_ptr = _1b4c8057c_Ptr((*((*(_93235_d))))._field_Kind.ptr());;
	{
		
		if (_1b4c8d315_IsUnsafe(_93613_ptr.ptr())) {
			_case_begin_1ab63958d:;
			{
				_1b4c48930_pushErr(_self_, (*((*(_93269_i))))._field_Token, jule::Str::lit("unsafe pointers are not supports indexing", 41), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((!(_1b4c49425_isUnsafe(_self_)))) {
			_case_begin_1ab639626:;
			{
				_1b4c48930_pushErr(_self_, (*((*(_93269_i))))._field_Token, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
			}
		}
		_match_end_1ab639505:;
	};
	(*((*(_93235_d))))._field_Kind=(*(_93613_ptr))._field_Elem;
}



inline void _1b4c52e56_indexingArr(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4c466a8_Data>* _94835_d, jule::Ptr<_1b4c466a8_Data>* _94850_index, jule::Ptr<_1b4b06eb4_IndexingExpr>* _94869_i) {
	jule::Ptr<_1b4c8bd08_Arr> _94913_arr = _1b4c80d30_Arr((*((*(_94835_d))))._field_Kind.ptr());;
	(*((*(_94835_d))))._field_Kind=(*(_94913_arr))._field_Elem;
	_1b4c5261a_checkIntegerIndexingByData(_self_, _94850_index, (*((*(_94869_i))))._field_Token);
	(*((*(_94835_d))))._field_Lvalue=true;
	if ((_1b4c470b0_IsConst((*(_94850_index)).ptr()) && (_1b27561ba_AsF64((*((*(_94850_index))))._field_Constant.ptr()) >= static_cast<jule::F64>((*_94913_arr.alloc)._field_N)))) {
		_1b4c48930_pushErr(_self_, (*((*(_94869_i))))._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
	};
}



inline void _1b4c53374_indexingSlc(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4c466a8_Data>* _95835_d, jule::Ptr<_1b4c466a8_Data>* _95850_index, jule::Ptr<_1b4b06eb4_IndexingExpr>* _95869_i) {
	jule::Ptr<_1b4c899d7_Slc> _95913_slc = _1b4c810b6_Slc((*((*(_95835_d))))._field_Kind.ptr());;
	(*((*(_95835_d))))._field_Kind=(*(_95913_slc))._field_Elem;
	_1b4c5261a_checkIntegerIndexingByData(_self_, _95850_index, (*((*(_95869_i))))._field_Token);
	(*((*(_95835_d))))._field_Lvalue=true;
	if ((!(_1b4c470b0_IsConst((*(_95850_index)).ptr())))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_95835_d))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1ab6418b4:;
			{
				jule::Ptr<_1b4b2adea_SliceExprModel> _97017_m = (*((*(_95835_d))))._field_Model.unsafe_cast_ptr<_1b4b2adea_SliceExprModel>();;
				jule::F64 _97113_indx = _1b27561ba_AsF64((*((*(_95850_index))))._field_Constant.ptr());;
				if ((_97113_indx >= static_cast<jule::F64>((*(_97017_m))._field_Elems.len()))) {
					_1b4c48930_pushErr(_self_, (*((*(_95869_i))))._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
				} else {
					(*((*(_95835_d))))._field_Model=(*(_97017_m))._field_Elems[static_cast<jule::I64>(static_cast<jule::U64>(_97113_indx))];
					(*((*(_95835_d))))._field_Decl=true;
				};
			}
		}
		_match_end_1ab64184d:;
	};
}



inline void _1b4c53792_indexingMap(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4c466a8_Data>* _98135_d, jule::Ptr<_1b4c466a8_Data>* _98150_index, jule::Ptr<_1b4b06eb4_IndexingExpr>* _98169_i) {
	(*((*(_98135_d))))._field_Lvalue=true;
	if (((*(_98150_index)) == nullptr)) {
		return;;
	};
	jule::Ptr<_1b4c8b17b_Map> _98613_m = _1b4c81b00_Map((*((*(_98135_d))))._field_Kind.ptr());;
	_1b4c30120_assignTypeChecker _98713_atc = _1b4c30120_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*(_98613_m))._field_Key, ._field_d=(*(_98150_index)), ._field_errorToken=(*((*(_98169_i))))._field_Token};;
	_1b4c310dd_check(&_98713_atc);
	(*((*(_98135_d))))._field_Kind=(*_98613_m.alloc)._field_Val;
}



inline void _1b4c53bb0_indexingStr(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4c466a8_Data>* _99735_d, jule::Ptr<_1b4c466a8_Data>* _99750_index, jule::Ptr<_1b4b06eb4_IndexingExpr>* _99769_i) {
	(*((*(_99735_d))))._field_Kind=_1b4d62021_primU8;
	(*((*(_99735_d))))._field_Mutable=false;
	(*((*(_99735_d))))._field_Lvalue=true;
	if (((*(_99750_index)) == nullptr)) {
		return;;
	};
	_1b4c5261a_checkIntegerIndexingByData(_self_, _99750_index, (*((*(_99769_i))))._field_Token);
	if ((!(_1b4c470b0_IsConst((*(_99750_index)).ptr())))) {
		(*((*(_99735_d))))._field_Constant=nullptr;
		(*((*(_99735_d))))._field_untyped=false;
		return;;
	};
	if (_1b4c470b0_IsConst((*(_99735_d)).ptr())) {
		jule::Ptr<_1b4ad5712_Token> _101513_errorToken = (*((*(_99769_i))))._field_Token;;
		jule::I64 _101613_j = _1b2755b9d_AsI64((*((*(_99750_index))))._field_Constant.ptr());;
		jule::Str _101713_s = _1b2755681_ReadStr((*((*(_99735_d))))._field_Constant);;
		if ((static_cast<jule::I64>(_101613_j) >= _101713_s.len())) {
			_1b4c48930_pushErr(_self_, _101513_errorToken, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
		} else {
			_1b275672b_SetU64((*((*(_99735_d))))._field_Constant, static_cast<jule::U64>(_101713_s[_101613_j]));
		};
	};
}



inline void _1b4c540cd_toIndexing(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4c466a8_Data>* _102634_d, jule::Ptr<_1b4c466a8_Data>* _102649_index, jule::Ptr<_1b4b06eb4_IndexingExpr>* _102668_i) {
	{
		
		if ((_1b4c8057c_Ptr((*((*(_102634_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab64d052:;
			{
				_1b4c52a38_indexingPtr(_self_, _102634_d, _102649_index, _102668_i);
				return;;
			}
		}
		else if ((_1b4c80d30_Arr((*((*(_102634_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab64d0eb:;
			{
				_1b4c52e56_indexingArr(_self_, _102634_d, _102649_index, _102668_i);
				return;;
			}
		}
		else if ((_1b4c810b6_Slc((*((*(_102634_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab64d162:;
			{
				_1b4c53374_indexingSlc(_self_, _102634_d, _102649_index, _102668_i);
				return;;
			}
		}
		else if ((_1b4c81b00_Map((*((*(_102634_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab64d1c8:;
			{
				_1b4c53792_indexingMap(_self_, _102634_d, _102649_index, _102668_i);
				return;;
			}
		}
		else if ((_1b4c80060_Prim((*((*(_102634_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab64d23e:;
			{
				jule::Ptr<_1b4c854d8_Prim> _104113_prim = _1b4c80060_Prim((*((*(_102634_d))))._field_Kind);;
				{
					
					if (_1b4c88970_IsStr(_104113_prim.ptr())) {
						_case_begin_1ab652463:;
						{
							_1b4c53bb0_indexingStr(_self_, _102634_d, _102649_index, _102668_i);
							return;;
						}
					}
					_match_end_1ab6523b9:;
				};
			}
		}
		_match_end_1ab64ce0e:;
	};
	_1b4c48930_pushErr(_self_, (*((*(_102668_i))))._field_Token, jule::Str::lit("type @ is not support indexing", 30), jule::Slice<jule::Any>::make({jule::Any(_1b4c7ccc7_Str((*((*(_102634_d))))._field_Kind.ptr()), &__jule_any_type4)}));
}



inline jule::Bool _1b4c54584_pushGenericsFromExprSubIdent(jule::Ptr<_1b4c483d0_Eval> _self_, jule::Ptr<_1b4b03114_SubIdentExpr>* _105153_sexpr, jule::Slice<jule::Ptr<_1b4aeabbc_TypeDecl>>* _105214_generics, jule::Ptr<_1b4b00001_Expr>* _105242_expr) {
	jule::Ptr<_1b4aeb591_SubIdentTypeDecl> _105313_t = jule::new_ptr<_1b4aeb591_SubIdentTypeDecl>();;
	if ((!(_1b4c78652_pushSubIdentFromExpr(jule::Any((*(_105153_sexpr)), &__jule_any_type86), &(_105313_t))))) {
		_1b4c48930_pushErr(_self_.ptr(), (*((*(_105242_expr))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return false;;
	};
	{ jule::Slice<jule::Ptr<_1b4aeabbc_TypeDecl>> &__jule_push_dest = (*(_105214_generics)); __jule_push_dest.push(jule::new_ptr<_1b4aeabbc_TypeDecl>(_1b4aeabbc_TypeDecl{._field_Kind=jule::Any(_105313_t, &__jule_any_type87)})); };
	return true;;
}



inline jule::Bool _1b4c54980_pushGenericsFromData(jule::Ptr<_1b4c483d0_Eval> _self_, jule::Slice<jule::Ptr<_1b4aeabbc_TypeDecl>>* _106245_generics, jule::Ptr<_1b4b00001_Expr>* _106273_expr) {
	{
		auto &_match_expr{ (*((*(_106273_expr))))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1ab656a72:;
			{
				jule::Ptr<_1b4b020ad_UnaryExpr> _106517_u = (*((*(_106273_expr))))._field_Kind.unsafe_cast_ptr<_1b4b020ad_UnaryExpr>();;
				{
					auto &_match_expr{ (*((*(_106517_u))._field_Op))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(62LLU)) {
						_case_begin_1ab658997:;
						{
							jule::Ptr<_1b4aec6e6_PtrTypeDecl> _106821_kind = jule::new_ptr<_1b4aec6e6_PtrTypeDecl>();;
							jule::Slice<jule::Ptr<_1b4aeabbc_TypeDecl>> _106921__generics = jule::Slice<jule::Ptr<_1b4aeabbc_TypeDecl>>::alloc(0LL, 1LL);;
							_1b4c54980_pushGenericsFromData(_self_, &(_106921__generics), &((*(_106517_u))._field_Expr));
							(*_106821_kind.alloc)._field_Elem=_106921__generics[0LL];
							{ jule::Slice<jule::Ptr<_1b4aeabbc_TypeDecl>> &__jule_push_dest = (*(_106245_generics)); __jule_push_dest.push(jule::new_ptr<_1b4aeabbc_TypeDecl>(_1b4aeabbc_TypeDecl{._field_Token=(*((*(_106273_expr))))._field_Token, ._field_Kind=jule::Any(_106821_kind, &__jule_any_type70)})); };
						}
					}
					else if (_match_expr == static_cast<jule::U64>(65LLU)) {
						_case_begin_1ab658a0d:;
						{
							jule::Ptr<_1b4aebc67_SptrTypeDecl> _107721_kind = jule::new_ptr<_1b4aebc67_SptrTypeDecl>();;
							jule::Slice<jule::Ptr<_1b4aeabbc_TypeDecl>> _107821__generics = jule::Slice<jule::Ptr<_1b4aeabbc_TypeDecl>>::alloc(0LL, 1LL);;
							_1b4c54980_pushGenericsFromData(_self_, &(_107821__generics), &((*(_106517_u))._field_Expr));
							(*_107721_kind.alloc)._field_Elem=_107821__generics[0LL];
							{ jule::Slice<jule::Ptr<_1b4aeabbc_TypeDecl>> &__jule_push_dest = (*(_106245_generics)); __jule_push_dest.push(jule::new_ptr<_1b4aeabbc_TypeDecl>(_1b4aeabbc_TypeDecl{._field_Token=(*((*(_106273_expr))))._field_Token, ._field_Kind=jule::Any(_107721_kind, &__jule_any_type71)})); };
						}
					}
					else {
						_case_begin_1ab657853:;
						{
							_1b4c48930_pushErr(_self_.ptr(), (*(_106517_u))._field_Op, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
							return false;;
						}
					}
					_match_end_1ab657ce8:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1ab656ad8:;
			{
				{ jule::Slice<jule::Ptr<_1b4aeabbc_TypeDecl>> &__jule_push_dest = (*(_106245_generics)); __jule_push_dest.push((*((*(_106273_expr))))._field_Kind.unsafe_cast_ptr<_1b4aeabbc_TypeDecl>()); };
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1ab655e17:;
			{
				jule::Ptr<_1b4b03114_SubIdentExpr> _109217_sexpr = (*((*(_106273_expr))))._field_Kind.unsafe_cast_ptr<_1b4b03114_SubIdentExpr>();;
				return _1b4c54584_pushGenericsFromExprSubIdent(_self_, &(_109217_sexpr), _106245_generics, _106273_expr);;
			}
		}
		else if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1ab655e7d:;
			{
				jule::Ptr<_1b4b0181b_IdentExpr> _109517_ident = (*((*(_106273_expr))))._field_Kind.unsafe_cast_ptr<_1b4b0181b_IdentExpr>();;
				{ jule::Slice<jule::Ptr<_1b4aeabbc_TypeDecl>> &__jule_push_dest = (*(_106245_generics)); __jule_push_dest.push(jule::new_ptr<_1b4aeabbc_TypeDecl>(_1b4aeabbc_TypeDecl{._field_Kind=jule::Any(jule::new_ptr<_1b4aeb2c7_IdentTypeDecl>(_1b4aeb2c7_IdentTypeDecl{._field_Token=(*_109517_ident.alloc)._field_Token, ._field_Ident=(*_109517_ident.alloc)._field_Ident, ._field_Binded=(*(_109517_ident))._field_Binded, }), &__jule_any_type74)})); };
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1ab655ee4:;
			{
				{
					auto expr = &((*((*((*(_106273_expr))))._field_Kind.unsafe_cast_ptr<_1b4b00ae5_TupleExpr>()))._field_Expr);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab65eeed:;
					if (it != expr_end) {
						jule::Ptr<_1b4b00001_Expr> _110425_texpr = *it;
						{
							if ((!(_1b4c54980_pushGenericsFromData(_self_, _106245_generics, &(_110425_texpr))))) {
								return false;;
							};
						}
						_iter_next_1ab65eeed:;
						++it;
						goto _iter_begin_1ab65eeed;
					}
					_iter_end_1ab65eeed:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1ab65605a:;
			{
				jule::Ptr<_1b4b02c3a_NsSelectionExpr> _111017_ns = (*((*(_106273_expr))))._field_Kind.unsafe_cast_ptr<_1b4b02c3a_NsSelectionExpr>();;
				jule::Ptr<_1b4aeb2c7_IdentTypeDecl> _111117_decl = jule::new_ptr<_1b4aeb2c7_IdentTypeDecl>(_1b4aeb2c7_IdentTypeDecl{._field_Token=(*(_111017_ns))._field_Ident, ._field_Ident=(*((*_111017_ns.alloc)._field_Ident))._field_Kind, });;
				{ jule::Slice<jule::Ptr<_1b4aeabbc_TypeDecl>> &__jule_push_dest = (*(_106245_generics)); __jule_push_dest.push(jule::new_ptr<_1b4aeabbc_TypeDecl>(_1b4aeabbc_TypeDecl{._field_Token=(*(_111117_decl))._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1b4aeb96a_NamespaceTypeDecl>(_1b4aeb96a_NamespaceTypeDecl{._field_Idents=(*_111017_ns.alloc)._field_Ns, ._field_Kind=jule::new_ptr<_1b4aeabbc_TypeDecl>(_1b4aeabbc_TypeDecl{._field_Token=(*_111117_decl.alloc)._field_Token, ._field_Kind=jule::Any(_111117_decl, &__jule_any_type74)})}), &__jule_any_type91)})); };
			}
		}
		else {
			_case_begin_1ab655da1:;
			{
				_1b4c48930_pushErr(_self_.ptr(), (*((*(_106273_expr))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1ab655d4b:;
	};
	return true;;
}



inline void _1b4c54ce3_evalIdentDeclFromIndexing(jule::Ptr<_1b4c483d0_Eval> _self_, jule::Ptr<_1b4c466a8_Data>* _113250_d, jule::Ptr<_1b4b06eb4_IndexingExpr>* _113265_i) {
	jule::Ptr<_1b4b24641_StructIns> _113313_s = _1b4c815d3_Struct((*((*(_113250_d))))._field_Kind.ptr());;
	if ((_113313_s == nullptr)) {
		_1b4c48930_pushErr(_self_.ptr(), (*((*((*(_113265_i))))._field_Expr))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any(_1b4c7ccc7_Str((*((*(_113250_d))))._field_Kind), &__jule_any_type4)}));
		(*(_113250_d))=nullptr;
		return;;
	};
	jule::Ptr<_1b4aeb2c7_IdentTypeDecl> _114017_decl = nullptr;;
	{
		auto &_match_expr{ (*((*((*(_113265_i))))._field_Expr))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1ab666c91:;
			{
				jule::Ptr<_1b4b0181b_IdentExpr> _114317_expr = (*((*((*(_113265_i))))._field_Expr))._field_Kind.unsafe_cast_ptr<_1b4b0181b_IdentExpr>();;
				_114017_decl=jule::new_ptr<_1b4aeb2c7_IdentTypeDecl>(_1b4aeb2c7_IdentTypeDecl{._field_Token=(*_114317_expr.alloc)._field_Token, ._field_Ident=(*_114317_expr.alloc)._field_Ident, ._field_Binded=(*(_114317_expr))._field_Binded, });
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1ab66817c:;
			{
				jule::Ptr<_1b4b02c3a_NsSelectionExpr> _115017_expr = (*((*((*(_113265_i))))._field_Expr))._field_Kind.unsafe_cast_ptr<_1b4b02c3a_NsSelectionExpr>();;
				_114017_decl=jule::new_ptr<_1b4aeb2c7_IdentTypeDecl>(_1b4aeb2c7_IdentTypeDecl{._field_Token=(*(_115017_expr))._field_Ident, ._field_Ident=(*((*_115017_expr.alloc)._field_Ident))._field_Kind, });
			}
		}
		else {
			_case_begin_1ab667313:;
			{
				_1b4c48930_pushErr(_self_, (*((*(_113265_i))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				(*(_113250_d))=nullptr;
				return;;
			}
		}
		_match_end_1ab6672ad:;
	};
	if ((!(_1b4c54980_pushGenericsFromData(_self_, &((*(_114017_decl))._field_Generics), &((*((*(_113265_i))))._field_Index))))) {
		(*(_113250_d))=nullptr;
		return;;
	};
	_113313_s=({ auto _wrap_copy = _1b4c5b7de_typeChecker(_self_); _1b4c93716_fromStruct(&_wrap_copy, &(_114017_decl), &((*(_113313_s))._field_Decl)); });
	if ((_113313_s == nullptr)) {
		(*(_113250_d))=nullptr;
		return;;
	};
	(*(*((*(_113250_d))))._field_Kind.alloc)._field_Kind=jule::Trait(_113313_s, (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data0);
}



inline jule::Bool _1b4c55299_checkGenericFn(jule::Ptr<_1b4c483d0_Eval> _self_, jule::Ptr<_1b4b39865_FnIns>* _117539_f, jule::Ptr<_1b4ad5712_Token>* _117555_et, jule::Any* _117572_model) {
	jule::Bool _11769_ok = _1b4bc9806_reloadFnInsTypes((*(_self_))._field_s, (*(_117539_f)));;
	(*((*(_117539_f))))._field_reloaded=true;
	if ((!(_11769_ok))) {
		return false;;
	};
	jule::Ptr<_1b4b39865_FnIns> _118113_existInstance = _1b4b38402_appendInstance((*((*(_117539_f))))._field_Decl.ptr(), _117539_f);;
	if ((!(_1b4bc885a_checkConstraintsFn((*_self_.alloc)._field_s, _117539_f, _117555_et, _118113_existInstance)))) {
		return false;;
	};
	if ((_118113_existInstance != nullptr)) {
		_1b4c783dd_updateModelToGenericIns(_117572_model, &(_118113_existInstance));
		_1ab670e10_updateRefer(_1b4c4b933_getOwnerRefers(_self_), _117539_f, &(_118113_existInstance));
		(*(_117539_f))=_118113_existInstance;
	} else {
		_1b4bd8b56_checkFnInsCaller((*_self_.alloc)._field_s, _117539_f, (*(_117555_et)));
	};
	return true;;
}



inline void _1b4c5560c_evalFnGenericFromIndexing(jule::Ptr<_1b4c483d0_Eval> _self_, jule::Ptr<_1b4c466a8_Data>* _120450_d, jule::Ptr<_1b4b06eb4_IndexingExpr>* _120465_i) {
	jule::Slice<jule::Ptr<_1b4aeabbc_TypeDecl>> _120513_generics = jule::Slice<jule::Ptr<_1b4aeabbc_TypeDecl>>::alloc(0LL, 8LLU);;
	if ((!(_1b4c54980_pushGenericsFromData(_self_, &(_120513_generics), &((*((*(_120465_i))))._field_Index))))) {
		(*(_120450_d))=nullptr;
		return;;
	};
	jule::Ptr<_1b4b39865_FnIns> _121113_f = _1b4c8134c_Fn((*((*(_120450_d))))._field_Kind.ptr());;
	jule::I64 _121213_genericsLen = 0LL;;
	if (((*(_121113_f))._field_Decl != nullptr)) {
		_121213_genericsLen=(*(*_121113_f.alloc)._field_Decl.alloc)._field_Generics.len();
	};
	if ((!(_1b4bbeda1_checkGenericQuantity((*_self_.alloc)._field_s.ptr(), _121213_genericsLen, _120513_generics.len(), (*((*((*(_120465_i))))._field_Expr))._field_Token)))) {
		(*(_120450_d))=nullptr;
		return;;
	};
	(*_121113_f.alloc)._field_Generics=jule::Slice<jule::Ptr<_1b4c7b028_InsGeneric>>::alloc(0LL, (*(*_121113_f.alloc)._field_Decl.alloc)._field_Generics.len());
	{
		auto expr = &(_120513_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab6779b6:;
		if (it != expr_end) {
			jule::Ptr<_1b4aeabbc_TypeDecl> _122321_g = *it;
			{
				jule::Ptr<_1b4c466a8_Data> _122417_k = _1b4c5bb30_evalType(_self_, _122321_g);;
				if ((_122417_k == nullptr)) {
					(*(_120450_d))=nullptr;
					return;;
				};
				(*_121113_f.alloc)._field_Generics=jule::append((*_121113_f.alloc)._field_Generics,jule::Slice<jule::Ptr<_1b4c7b028_InsGeneric>>::make({jule::new_ptr<_1b4c7b028_InsGeneric>(_1b4c7b028_InsGeneric{._field_Kind=(*(_122417_k))._field_Kind, })}));
			}
			_iter_next_1ab6779b6:;
			++it;
			goto _iter_begin_1ab6779b6;
		}
		_iter_end_1ab6779b6:;
	};
	if (_1b4b3acea_IsBuiltin(_121113_f)) {
		return;;
	};
	if (_1b4c55299_checkGenericFn(_self_, &(_121113_f), &((*(*((*(_120465_i))))._field_Expr.alloc)._field_Token), &((*((*(_120450_d))))._field_Model))) {
		(*(*((*(_120450_d))))._field_Kind.alloc)._field_Kind=jule::Trait(_121113_f, (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data1);
	} else {
		(*(_120450_d))=nullptr;
	};
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c5594d_evalIndexing(jule::Ptr<_1b4c483d0_Eval> _self_, jule::Ptr<_1b4b06eb4_IndexingExpr> _124336_i) {
	jule::Ptr<_1b4c7c90e_TypeKind> _124413_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_124413_prefix;
	});;
	jule::Ptr<_1b4c466a8_Data> _124813_d = _1b4c6582b_evalExprKind(_self_, (*((*(_124336_i))._field_Expr))._field_Kind);;
	if ((_124813_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_124813_d))._field_Decl) {
		_1b4c54ce3_evalIdentDeclFromIndexing(_self_, &(_124813_d), &(_124336_i));
		return _124813_d;;
	};
	if ((_1b4c8134c_Fn((*(_124813_d))._field_Kind.ptr()) != nullptr)) {
		_1b4c5560c_evalFnGenericFromIndexing(_self_, &(_124813_d), &(_124336_i));
		return _124813_d;;
	};
	_1b4c466a8_Data _126413_oldData = (*(_124813_d));;
	jule::Ptr<_1b4c466a8_Data> _126613_index = _1b4c6b49c_evalExpr(_self_, (*_124336_i.alloc)._field_Index);;
	if ((_126613_index == nullptr)) {
		return nullptr;;
	};
	(*(_124813_d))._field_Decl=false;
	_1b4c540cd_toIndexing(_self_, &(_124813_d), &(_126613_index), &(_124336_i));
	if (_1b4c470b0_IsConst(_124813_d.ptr())) {
		(*(_124813_d))._field_Decl=false;
		(*(_124813_d))._field_Model=jule::Any((*(_124813_d))._field_Constant, &__jule_any_type19);
	} else if ((*(_124813_d))._field_Decl) {
		(*(_124813_d))._field_Decl=false;
	} else {
		(*(_124813_d))._field_Model=jule::Any(jule::new_ptr<_1b4b2b3a1_IndexingExprModel>(_1b4b2b3a1_IndexingExprModel{._field_Token=(*_124336_i.alloc)._field_Token, ._field_Expr=jule::new_ptr<_1b4c466a8_Data>(_126413_oldData), ._field_Index=_126613_index}), &__jule_any_type44);
	};
	return _124813_d;;
}



inline __jule_tuple_x_1b4c466a8_Data__jule_tuple_x_1b4c466a8_Data _1b4c55c8e_evalSlicingExprs(jule::Ptr<_1b4c483d0_Eval> _self_, jule::Ptr<_1b4b07624_SlicingExpr>* _129741_s) {
	__jule_tuple_x_1b4c466a8_Data__jule_tuple_x_1b4c466a8_Data __jule_func_result;
	jule::Ptr<_1b4c7c90e_TypeKind> _129813_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_129813_prefix;
	});;
	jule::Ptr<_1b4c466a8_Data> _130217_l = nullptr;;
	jule::Ptr<_1b4c466a8_Data> _130317_r = nullptr;;
	if (((*((*(_129741_s))))._field_Start != nullptr)) {
		_130217_l=_1b4c6b49c_evalExpr(_self_, (*((*(_129741_s))))._field_Start);
		if ((_130217_l != nullptr)) {
			_1b4c5261a_checkIntegerIndexingByData(_self_, &(_130217_l), (*((*(_129741_s))))._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	} else {
		_130217_l=jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=_1b4d6121d_primInt, ._field_Constant=static__1b2753948_NewI64(0LL)});
		(*((*(_130217_l))._field_Constant))._field_Kind=jule::Str::lit("int", 3);
		(*_130217_l.alloc)._field_Model=jule::Any((*_130217_l.alloc)._field_Constant, &__jule_any_type19);
	};
	if (((*((*(_129741_s))))._field_To != nullptr)) {
		_130317_r=_1b4c6b49c_evalExpr(_self_, (*((*(_129741_s))))._field_To);
		if ((_130317_r != nullptr)) {
			_1b4c5261a_checkIntegerIndexingByData(_self_, &(_130317_r), (*((*(_129741_s))))._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	};
	__jule_func_result.__jule_result_arg0 = _130217_l;
	__jule_func_result.__jule_result_arg1 = _130317_r;
	return __jule_func_result;;
}



inline void _1b4c56047_slicingArr(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4c466a8_Data>* _133330_d) {
	jule::Ptr<_1b4c7c90e_TypeKind> _133413_elemType = (*(_1b4c80d30_Arr((*((*(_133330_d))))._field_Kind.ptr())))._field_Elem;;
	(*((*(_133330_d))))._field_Kind=jule::new_ptr<_1b4c7c90e_TypeKind>(_1b4c7c90e_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1b4c899d7_Slc>(_1b4c899d7_Slc{._field_Elem=_133413_elemType}), (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data22)});
	(*((*(_133330_d))))._field_Lvalue=false;
	(*((*(_133330_d))))._field_Mutable=((*((*(_133330_d))))._field_Mutable || (!(_1b4c7e290_Mutable(_133413_elemType.ptr()))));
}



inline void _1b4c56465_slicingStr(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4c466a8_Data>* _134830_d, jule::Ptr<_1b4c466a8_Data>* _134841_l, jule::Ptr<_1b4c466a8_Data>* _134852_r) {
	(*((*(_134830_d))))._field_Lvalue=false;
	(*((*(_134830_d))))._field_Mutable=true;
	if ((!(_1b4c470b0_IsConst((*(_134830_d)).ptr())))) {
		return;;
	};
	if ((((*(_134841_l)) == nullptr) || ((*(_134852_r)) == nullptr))) {
		(*((*(_134830_d))))._field_Constant=nullptr;
		(*((*(_134830_d))))._field_untyped=false;
		return;;
	};
	if ((_1b4c470b0_IsConst((*(_134841_l)).ptr()) && _1b4c470b0_IsConst((*(_134852_r)).ptr()))) {
		jule::I64 _136213_left = _1b2755b9d_AsI64((*((*(_134841_l))))._field_Constant.ptr());;
		if ((_136213_left < 0LL)) {
			return;;
		};
		jule::Str _136713_s = _1b2755681_ReadStr((*((*(_134830_d))))._field_Constant);;
		jule::I64 _136817_right = static_cast<jule::I64>(0LL);;
		if (((*(_134852_r)) == nullptr)) {
			_136817_right=static_cast<jule::I64>(_136713_s.len());
		} else {
			_136817_right=_1b2755b9d_AsI64((*((*(_134852_r))))._field_Constant);
		};
		if ((_136213_left > _136817_right)) {
			return;;
		};
		_1b2756c8c_SetStr((*((*(_134830_d))))._field_Constant, _136713_s.slice(_136213_left, _136817_right));
		(*((*(_134830_d))))._field_Decl=true;
	} else {
		(*((*(_134830_d))))._field_Constant=nullptr;
		(*((*(_134830_d))))._field_untyped=false;
	};
}



inline void _1b4c5693d_checkSlicing(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4c466a8_Data>* _138636_d, jule::Ptr<_1b4c466a8_Data>* _138647_l, jule::Ptr<_1b4c466a8_Data>* _138658_r, jule::Ptr<_1b4b07624_SlicingExpr>* _138669_s) {
	{
		
		if ((_1b4c80d30_Arr((*((*(_138636_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab69321d:;
			{
				_1b4c56047_slicingArr(_self_, _138636_d);
				return;;
			}
		}
		else if ((_1b4c810b6_Slc((*((*(_138636_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab6932b7:;
			{
				return;;
			}
		}
		else if ((_1b4c80060_Prim((*((*(_138636_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab69332d:;
			{
				jule::Ptr<_1b4c854d8_Prim> _139413_prim = _1b4c80060_Prim((*((*(_138636_d))))._field_Kind);;
				{
					
					if (_1b4c88970_IsStr(_139413_prim.ptr())) {
						_case_begin_1ab695ab1:;
						{
							_1b4c56465_slicingStr(_self_, _138636_d, _138647_l, _138658_r);
							return;;
						}
					}
					_match_end_1ab695a17:;
				};
			}
		}
		_match_end_1ab6930ec:;
	};
	_1b4c48930_pushErr(_self_, (*((*(_138669_s))))._field_Token, jule::Str::lit("type @ is not support slicing", 29), jule::Slice<jule::Any>::make({jule::Any(_1b4c7ccc7_Str((*((*(_138636_d))))._field_Kind.ptr()), &__jule_any_type4)}));
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c56c7e_evalSlicing(jule::Ptr<_1b4c483d0_Eval> _self_, jule::Ptr<_1b4b07624_SlicingExpr> _140535_s) {
	jule::Ptr<_1b4c466a8_Data> _140613_d = _1b4c6b49c_evalExpr(_self_, (*(_140535_s))._field_Expr);;
	if ((_140613_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1b4c466a8_Data> _141113_l;
	jule::Ptr<_1b4c466a8_Data> _141120_r;
	({
		__jule_tuple_x_1b4c466a8_Data__jule_tuple_x_1b4c466a8_Data __jule_assign_result = _1b4c55c8e_evalSlicingExprs(_self_, &(_140535_s));
		_141113_l = __jule_assign_result.__jule_result_arg0;
		_141120_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_141113_l == nullptr)) {
		return _140613_d;;
	};
	(*(_140613_d))._field_Decl=false;
	_1b4c5693d_checkSlicing(_self_, &(_140613_d), &(_141113_l), &(_141120_r), &(_140535_s));
	if (_1b4c470b0_IsConst(_140613_d.ptr())) {
		(*(_140613_d))._field_Decl=false;
		(*(_140613_d))._field_Model=jule::Any((*(_140613_d))._field_Constant, &__jule_any_type19);
	} else if ((*(_140613_d))._field_Decl) {
		(*(_140613_d))._field_Decl=false;
	} else {
		jule::Ptr<_1b4b2c76a_SlicingExprModel> _142917_model = jule::new_ptr<_1b4b2c76a_SlicingExprModel>(_1b4b2c76a_SlicingExprModel{._field_Token=(*_140535_s.alloc)._field_Token, ._field_Expr=(*(_140613_d))._field_Model, ._field_Left=(*(_141113_l))._field_Model, });;
		if ((_141120_r != nullptr)) {
			(*(_142917_model))._field_Right=(*_141120_r.alloc)._field_Model;
		};
		(*(_140613_d))._field_Model=jule::Any(_142917_model, &__jule_any_type92);
	};
	return _140613_d;;
}



inline void _1b4c5719c_castPtr(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4c7c90e_TypeKind> _144230_t, jule::Ptr<_1b4c466a8_Data> _144248_d, jule::Ptr<_1b4ad5712_Token> _144258_errorToken) {
	(*(_144248_d))._field_Constant=nullptr;
	(*_144248_d.alloc)._field_untyped=false;
	jule::Ptr<_1b4c89014_Sptr> _14459_sptr = _1b4c802e6_Sptr((*_144248_d.alloc)._field_Kind.ptr());;
	if ((_14459_sptr != nullptr)) {
		if ((!(_1b4c7d118_Equal((*(_1b4c8057c_Ptr(_144230_t.ptr())))._field_Elem, (*_14459_sptr.alloc)._field_Elem)))) {
			_1b4c48930_pushErr(_self_, _144258_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1b4c7ccc7_Str((*_144248_d.alloc)._field_Kind), &__jule_any_type4),jule::Any(_1b4c7ccc7_Str(_144230_t), &__jule_any_type4)}));
		};
		return;;
	};
	if ((!(_1b4c49425_isUnsafe(_self_)))) {
		_1b4c48930_pushErr(_self_, _144258_errorToken, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1b4c854d8_Prim> _14589_prim = _1b4c80060_Prim((*_144248_d.alloc)._field_Kind);;
	if (((_1b4c8057c_Ptr((*_144248_d.alloc)._field_Kind) == nullptr) && ((_14589_prim == nullptr) || (!(_1b275288c_IsInt(_1b4c85829_Str(_14589_prim.ptr()))))))) {
		_1b4c48930_pushErr(_self_, _144258_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1b4c7ccc7_Str((*_144248_d.alloc)._field_Kind), &__jule_any_type4),jule::Any(_1b4c7ccc7_Str(_144230_t), &__jule_any_type4)}));
	};
}



inline void _1b4c575ba_castStruct(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4c7c90e_TypeKind> _146433_t, jule::Ptr<_1b4c466a8_Data> _146451_d, jule::Ptr<_1b4ad5712_Token> _146461_errorToken) {
	(*(_146451_d))._field_Constant=nullptr;
	(*_146451_d.alloc)._field_untyped=false;
	jule::Ptr<_1b4b49c3d_Trait> _146713_tr = _1b4c81869_Trait((*_146451_d.alloc)._field_Kind.ptr());;
	if ((_146713_tr == nullptr)) {
		_1b4c48930_pushErr(_self_, _146461_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1b4c7ccc7_Str((*_146451_d.alloc)._field_Kind), &__jule_any_type4),jule::Any(_1b4c7ccc7_Str(_146433_t.ptr()), &__jule_any_type4)}));
		return;;
	};
	jule::Ptr<_1b4b24641_StructIns> _147313_s = _1b4c815d3_Struct(_146433_t);;
	_1ab6a68a2_pushReference(_self_, &(_147313_s));
	if ((!(_1b4b23002_IsImplements((*(_147313_s))._field_Decl.ptr(), _146713_tr)))) {
		_1b4c48930_pushErr(_self_, _146461_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1b4c7ccc7_Str((*_146451_d.alloc)._field_Kind), &__jule_any_type4),jule::Any(_1b4c7ccc7_Str(_146433_t), &__jule_any_type4)}));
	};
}



inline void _1b4c579d8_castRef(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4c7c90e_TypeKind> _148130_t, jule::Ptr<_1b4c466a8_Data> _148148_d, jule::Ptr<_1b4ad5712_Token> _148158_errorToken) {
	(*(_148148_d))._field_Constant=nullptr;
	(*_148148_d.alloc)._field_untyped=false;
	jule::Ptr<_1b4c89014_Sptr> _148413_sptr = _1b4c802e6_Sptr(_148130_t.ptr());;
	jule::Ptr<_1b4c8c7cb_Ptr> _148613_ptr = _1b4c8057c_Ptr((*_148148_d.alloc)._field_Kind.ptr());;
	if (((_148613_ptr != nullptr) && _1b4c7d118_Equal((*(_148413_sptr))._field_Elem, (*_148613_ptr.alloc)._field_Elem))) {
		if ((!(_1b4c49425_isUnsafe(_self_)))) {
			_1b4c48930_pushErr(_self_, _148158_errorToken, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_1b4c815d3_Struct((*_148413_sptr.alloc)._field_Elem) != nullptr)) {
		_1b4c575ba_castStruct(_self_, (*_148413_sptr.alloc)._field_Elem, _148148_d, _148158_errorToken);
		return;;
	};
	_1b4c48930_pushErr(_self_, _148158_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1b4c7ccc7_Str((*_148148_d.alloc)._field_Kind), &__jule_any_type4),jule::Any(_1b4c7ccc7_Str(_148130_t), &__jule_any_type4)}));
}



inline void _1b4c57e06_castSlc(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4c7c90e_TypeKind> _150430_t, jule::Ptr<_1b4c466a8_Data> _150448_d, jule::Ptr<_1b4ad5712_Token> _150458_errorToken) {
	jule::Ptr<_1b2753508_Const> _15059_c = (*(_150448_d))._field_Constant;;
	(*_150448_d.alloc)._field_Constant=nullptr;
	(*_150448_d.alloc)._field_untyped=false;
	if ((_1b4c80813_Enum((*_150448_d.alloc)._field_Kind.ptr()) != nullptr)) {
		if (((_1b4c80060_Prim((*((*(_1b4c80813_Enum((*_150448_d.alloc)._field_Kind)))._field_Kind))._field_Kind.ptr()) == nullptr) || (!(_1b4c88970_IsStr(_1b4c80060_Prim((*(*(_1b4c80813_Enum((*_150448_d.alloc)._field_Kind)))._field_Kind.alloc)._field_Kind).ptr()))))) {
			_1b4c48930_pushErr(_self_, _150458_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1b4c7ccc7_Str((*_150448_d.alloc)._field_Kind), &__jule_any_type4),jule::Any(_1b4c7ccc7_Str(_150430_t.ptr()), &__jule_any_type4)}));
			return;;
		};
	} else if (((_1b4c80060_Prim((*_150448_d.alloc)._field_Kind.ptr()) == nullptr) || (!(_1b4c88970_IsStr(_1b4c80060_Prim((*_150448_d.alloc)._field_Kind).ptr()))))) {
		_1b4c48930_pushErr(_self_, _150458_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1b4c7ccc7_Str((*_150448_d.alloc)._field_Kind), &__jule_any_type4),jule::Any(_1b4c7ccc7_Str(_150430_t.ptr()), &__jule_any_type4)}));
		return;;
	};
	_150430_t=(*(_1b4c810b6_Slc(_150430_t.ptr())))._field_Elem;
	jule::Ptr<_1b4c854d8_Prim> _15209_prim = _1b4c80060_Prim(_150430_t);;
	if (((_15209_prim == nullptr) || ((!(_1b4c86dd0_IsU8(_15209_prim.ptr()))) && (!(_1b4c868b3_IsI32(_15209_prim.ptr())))))) {
		_1b4c48930_pushErr(_self_, _150458_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1b4c7ccc7_Str((*_150448_d.alloc)._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1b4c7ccc7_Str(_150430_t), &__jule_any_type4)}));
		return;;
	};
	if ((_15059_c != nullptr)) {
		{
			
			if (_1b4c86dd0_IsU8(_15209_prim.ptr())) {
				_case_begin_1ab6c025b:;
				{
					jule::Str _153017_s = _1b2755681_ReadStr(_15059_c);;
					jule::Ptr<_1b4b2adea_SliceExprModel> _153121_model = jule::new_ptr<_1b4b2adea_SliceExprModel>(_1b4b2adea_SliceExprModel{._field_ElemKind=_150430_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _153017_s.len(), jule::Any(nullptr))});;
					{
						auto expr = &(_153017_s);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ab6c1c41:;
						if (it != expr_end) {
							jule::U8 *_153524_b = it;
							{
								jule::Ptr<_1b2753508_Const> _153625_bc = static__1b2753c12_NewU64(static_cast<jule::U64>((*(_153524_b))));;
								(*(_153625_bc))._field_Kind=(*(_15209_prim))._field_Kind;
								(*(_153121_model))._field_Elems=jule::append((*_153121_model.alloc)._field_Elems,jule::Slice<jule::Any>::make({jule::Any(_153625_bc, &__jule_any_type19)}));
							}
							_iter_next_1ab6c1c41:;
							++it;
							goto _iter_begin_1ab6c1c41;
						}
						_iter_end_1ab6c1c41:;
					};
					(*_150448_d.alloc)._field_Model=jule::Any(_153121_model, &__jule_any_type76);
					(*_150448_d.alloc)._field_Decl=true;
				}
			}
			else if (_1b4c868b3_IsI32(_15209_prim.ptr())) {
				_case_begin_1ab6c0305:;
				{
					jule::Slice<jule::I32> _154317_runes = static_cast<jule::Slice<jule::I32>>(_1b2755681_ReadStr(_15059_c));;
					jule::Ptr<_1b4b2adea_SliceExprModel> _154421_model = jule::new_ptr<_1b4b2adea_SliceExprModel>(_1b4b2adea_SliceExprModel{._field_ElemKind=_150430_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _154317_runes.len(), jule::Any(nullptr))});;
					{
						auto expr = &(_154317_runes);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ab6c5151:;
						if (it != expr_end) {
							jule::I32 *_154824_r = it;
							{
								jule::Ptr<_1b2753508_Const> _154925_rc = static__1b2753948_NewI64(static_cast<jule::I64>((*(_154824_r))));;
								(*(_154925_rc))._field_Kind=(*(_15209_prim))._field_Kind;
								(*(_154421_model))._field_Elems=jule::append((*_154421_model.alloc)._field_Elems,jule::Slice<jule::Any>::make({jule::Any(_154925_rc, &__jule_any_type19)}));
							}
							_iter_next_1ab6c5151:;
							++it;
							goto _iter_begin_1ab6c5151;
						}
						_iter_end_1ab6c5151:;
					};
					(*_150448_d.alloc)._field_Model=jule::Any(_154421_model, &__jule_any_type76);
					(*_150448_d.alloc)._field_Decl=true;
				}
			}
			_match_end_1ab6c017e:;
		};
	};
}



inline void _1b4c58269_castStr(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4c466a8_Data> _155930_d, jule::Ptr<_1b4ad5712_Token> _155940_errorToken) {
	if ((_1b4c80813_Enum((*(_155930_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1b4b4c449_Enum> _156117_e = _1b4c80813_Enum((*_155930_d.alloc)._field_Kind);;
		if (((_1b4c80060_Prim((*((*(_156117_e))._field_Kind))._field_Kind.ptr()) != nullptr) && _1b4c88970_IsStr(_1b4c80060_Prim((*(*_156117_e.alloc)._field_Kind.alloc)._field_Kind).ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1b2753508_Const> _15679_c = (*_155930_d.alloc)._field_Constant;;
	(*_155930_d.alloc)._field_Constant=nullptr;
	(*_155930_d.alloc)._field_untyped=false;
	if ((_1b4c80060_Prim((*_155930_d.alloc)._field_Kind) != nullptr)) {
		jule::Ptr<_1b4c854d8_Prim> _157113_prim = _1b4c80060_Prim((*_155930_d.alloc)._field_Kind);;
		if (((!(_1b4c86dd0_IsU8(_157113_prim.ptr()))) && (!(_1b4c868b3_IsI32(_157113_prim))))) {
			_1b4c48930_pushErr(_self_, _155940_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1b4c7ccc7_Str((*_155930_d.alloc)._field_Kind), &__jule_any_type4)}));
			return;;
		};
		if ((_15679_c != nullptr)) {
			{
				
				if (_1b4c86dd0_IsU8(_157113_prim)) {
					_case_begin_1ab6cc9c7:;
					{
						(*_155930_d.alloc)._field_Constant=static__1b2754295_NewStr(jule::Str::from_byte(static_cast<jule::U8>(_1b2755e34_AsU64(_15679_c))));
						(*_155930_d.alloc)._field_Model=jule::Any((*_155930_d.alloc)._field_Constant, &__jule_any_type19);
						(*_155930_d.alloc)._field_Decl=true;
					}
				}
				else if (_1b4c868b3_IsI32(_157113_prim)) {
					_case_begin_1ab6cca71:;
					{
						(*_155930_d.alloc)._field_Constant=static__1b2754295_NewStr(jule::Str::from_rune(static_cast<jule::I32>(_1b2755b9d_AsI64(_15679_c))));
						(*_155930_d.alloc)._field_Model=jule::Any((*_155930_d.alloc)._field_Constant, &__jule_any_type19);
						(*_155930_d.alloc)._field_Decl=true;
					}
				}
				_match_end_1ab6cc8b7:;
			};
		};
		return;;
	};
	jule::Ptr<_1b4c899d7_Slc> _159213_s = _1b4c810b6_Slc((*_155930_d.alloc)._field_Kind);;
	if ((_159213_s == nullptr)) {
		_1b4c48930_pushErr(_self_, _155940_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1b4c7ccc7_Str((*_155930_d.alloc)._field_Kind), &__jule_any_type4)}));
		return;;
	};
	jule::Ptr<_1b4c7c90e_TypeKind> _159813_t = (*(_159213_s))._field_Elem;;
	jule::Ptr<_1b4c854d8_Prim> _15999_prim = _1b4c80060_Prim(_159813_t.ptr());;
	if (((_15999_prim == nullptr) || ((!(_1b4c86dd0_IsU8(_15999_prim.ptr()))) && (!(_1b4c868b3_IsI32(_15999_prim.ptr())))))) {
		_1b4c48930_pushErr(_self_, _155940_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1b4c7ccc7_Str((*_155930_d.alloc)._field_Kind), &__jule_any_type4)}));
		return;;
	};
}



inline void _1b4c58687_castInt(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4c7c90e_TypeKind> _160630_t, jule::Ptr<_1b4c466a8_Data> _160648_d, jule::Ptr<_1b4ad5712_Token> _160658_errorToken) {
	if (_1b4c470b0_IsConst(_160648_d.ptr())) {
		jule::Ptr<_1b4c854d8_Prim> _160813_prim = _1b4c80060_Prim(_160630_t.ptr());;
		{
			
			if (_1b27522b5_IsSigInt((*(_160813_prim))._field_Kind)) {
				_case_begin_1ab6d5e20:;
				{
					_1b2756473_SetI64((*_160648_d.alloc)._field_Constant.ptr(), _1b2755b9d_AsI64((*_160648_d.alloc)._field_Constant));
				}
			}
			else if (_1b27525c3_IsUnsigInt((*(_160813_prim))._field_Kind)) {
				_case_begin_1ab6d5eb9:;
				{
					_1b275672b_SetU64((*_160648_d.alloc)._field_Constant.ptr(), _1b2755e34_AsU64((*_160648_d.alloc)._field_Constant));
				}
			}
			_match_end_1ab6d5d98:;
		};
	} else {
		(*(_160648_d))._field_Constant=nullptr;
		(*_160648_d.alloc)._field_untyped=false;
	};
	if ((_1b4c80813_Enum((*(_160648_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1b4b4c449_Enum> _162113_e = _1b4c80813_Enum((*_160648_d.alloc)._field_Kind);;
		if (_1b2752e64_IsNum(_1b4c7ccc7_Str((*((*(_162113_e))._field_Kind))._field_Kind.ptr()))) {
			return;;
		};
	};
	if ((_1b4c802e6_Sptr((*_160648_d.alloc)._field_Kind) != nullptr)) {
		jule::Ptr<_1b4c854d8_Prim> _162813_prim = _1b4c80060_Prim(_160630_t.ptr());;
		if ((!(_1b4c88453_IsUintptr(_162813_prim.ptr())))) {
			_1b4c48930_pushErr(_self_, _160658_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1b4c7ccc7_Str((*_160648_d.alloc)._field_Kind), &__jule_any_type4),jule::Any(_1b4c7ccc7_Str(_160630_t), &__jule_any_type4)}));
		};
		return;;
	};
	if ((_1b4c8057c_Ptr((*_160648_d.alloc)._field_Kind) != nullptr)) {
		jule::Ptr<_1b4c854d8_Prim> _163513_prim = _1b4c80060_Prim(_160630_t);;
		if (_1b4c88453_IsUintptr(_163513_prim.ptr())) {
		} else if ((!(_1b4c49425_isUnsafe(_self_)))) {
			_1b4c48930_pushErr(_self_, _160658_errorToken, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		};
		return;;
	};
	jule::Ptr<_1b4c854d8_Prim> _16449_prim = _1b4c80060_Prim((*_160648_d.alloc)._field_Kind);;
	if (((_16449_prim != nullptr) && _1b2752e64_IsNum(_1b4c85829_Str(_16449_prim)))) {
		return;;
	};
	_1b4c48930_pushErr(_self_, _160658_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1b4c7ccc7_Str((*_160648_d.alloc)._field_Kind), &__jule_any_type4),jule::Any(_1b4c7ccc7_Str(_160630_t), &__jule_any_type4)}));
}



inline void _1b4c58aa5_castNum(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4c7c90e_TypeKind> _165230_t, jule::Ptr<_1b4c466a8_Data> _165248_d, jule::Ptr<_1b4ad5712_Token> _165258_errorToken) {
	if (_1b4c470b0_IsConst(_165248_d.ptr())) {
		jule::Ptr<_1b4c854d8_Prim> _165413_prim = _1b4c80060_Prim(_165230_t.ptr());;
		{
			
			if (_1b2752bcd_IsFloat((*(_165413_prim))._field_Kind)) {
				_case_begin_1ab6e2107:;
				{
					_1b2757045_SetF64((*_165248_d.alloc)._field_Constant.ptr(), _1b27561ba_AsF64((*_165248_d.alloc)._field_Constant));
				}
			}
			else if (_1b27522b5_IsSigInt((*(_165413_prim))._field_Kind)) {
				_case_begin_1ab6e21a1:;
				{
					_1b2756473_SetI64((*_165248_d.alloc)._field_Constant.ptr(), _1b2755b9d_AsI64((*_165248_d.alloc)._field_Constant));
				}
			}
			else if (_1b27525c3_IsUnsigInt((*(_165413_prim))._field_Kind)) {
				_case_begin_1ab6e2217:;
				{
					_1b275672b_SetU64((*_165248_d.alloc)._field_Constant.ptr(), _1b2755e34_AsU64((*_165248_d.alloc)._field_Constant));
				}
			}
			_match_end_1ab6e203b:;
		};
	} else {
		(*(_165248_d))._field_Constant=nullptr;
		(*_165248_d.alloc)._field_untyped=false;
	};
	if ((_1b4c80813_Enum((*(_165248_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1b4b4c449_Enum> _166913_e = _1b4c80813_Enum((*_165248_d.alloc)._field_Kind);;
		if (_1b2752e64_IsNum(_1b4c7ccc7_Str((*((*(_166913_e))._field_Kind))._field_Kind.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1b4c854d8_Prim> _16759_prim = _1b4c80060_Prim((*_165248_d.alloc)._field_Kind);;
	if (((_16759_prim != nullptr) && _1b2752e64_IsNum(_1b4c85829_Str(_16759_prim)))) {
		return;;
	};
	_1b4c48930_pushErr(_self_, _165258_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1b4c7ccc7_Str((*_165248_d.alloc)._field_Kind), &__jule_any_type4),jule::Any(_1b4c7ccc7_Str(_165230_t.ptr()), &__jule_any_type4)}));
}



inline void _1b4c58ec3_castPrim(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4c7c90e_TypeKind> _168331_t, jule::Ptr<_1b4c466a8_Data> _168349_d, jule::Ptr<_1b4ad5712_Token> _168359_errorToken) {
	jule::Ptr<_1b4c854d8_Prim> _16849_prim = _1b4c80060_Prim(_168331_t.ptr());;
	{
		
		if (_1b4c88c06_IsAny(_16849_prim.ptr())) {
			_case_begin_1ab6ea484:;
			{
				(*(_168349_d))._field_Constant=nullptr;
				(*_168349_d.alloc)._field_untyped=false;
			}
		}
		else if (_1b4c88970_IsStr(_16849_prim.ptr())) {
			_case_begin_1ab6ea143:;
			{
				_1b4c58269_castStr(_self_, _168349_d, _168359_errorToken);
			}
		}
		else if (_1b275288c_IsInt(_1b4c85829_Str(_16849_prim.ptr()))) {
			_case_begin_1ab6ea1a9:;
			{
				_1b4c58687_castInt(_self_, _168331_t, _168349_d, _168359_errorToken);
			}
		}
		else if (_1b2752e64_IsNum(_1b4c85829_Str(_16849_prim.ptr()))) {
			_case_begin_1ab6ea220:;
			{
				_1b4c58aa5_castNum(_self_, _168331_t, _168349_d, _168359_errorToken);
			}
		}
		else {
			_case_begin_1ab6ea0cc:;
			{
				_1b4c48930_pushErr(_self_, _168359_errorToken, jule::Str::lit("type @ not supports casting", 27), jule::Slice<jule::Any>::make({jule::Any(_1b4c7ccc7_Str(_168331_t), &__jule_any_type4)}));
			}
		}
		_match_end_1ab6ea066:;
	};
}



inline void _1b4c59336_castConstant(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4c7c90e_TypeKind>* _170136_t, jule::Ptr<_1b4c466a8_Data>* _170155_d) {
	if ((((*(_170155_d)) == nullptr) || (!(_1b4c470b0_IsConst((*(_170155_d)).ptr()))))) {
		return;;
	};
	jule::Ptr<_1b4c854d8_Prim> _17059_prim = _1b4c80060_Prim((*(_170136_t)).ptr());;
	_1b4c77dc1_castConstByType(&((*(_17059_prim))._field_Kind), _170155_d);
	(*((*(_170155_d))))._field_Model=jule::Any((*((*(_170155_d))))._field_Constant, &__jule_any_type19);
}



inline void _1b4c59754_castTypeEnum(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4c7c90e_TypeKind>* _171036_t, jule::Ptr<_1b4c466a8_Data>* _171055_d, jule::Ptr<_1b4ad5712_Token>* _171070_errorToken) {
	jule::I64 _17119_n = (*((*(_self_))._field_s))._field_errors.len();;
	if ((!(_1b4bc6cdc_checkTypeCompatibility((*(_self_))._field_s, &((*((*(_171055_d))))._field_Kind), _171036_t, _171070_errorToken)))) {
		((*((*(_self_))._field_s))._field_errors).mut_slice(0LL, _17119_n);;
		_1b4c48930_pushErr(_self_, (*(_171070_errorToken)), jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1b4c7ccc7_Str((*((*(_171055_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1b4c7ccc7_Str((*(_171036_t)).ptr()), &__jule_any_type4)}));
	};
	(*((*(_171055_d))))._field_Constant=nullptr;
	(*((*(_171055_d))))._field_untyped=false;
}



inline void _1b4c59b72_castTypeEnumT(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4c7c90e_TypeKind>* _172037_t, jule::Ptr<_1b4c466a8_Data>* _172056_d, jule::Ptr<_1b4ad5712_Token>* _172071_errorToken) {
	jule::I64 _17219_n = (*((*(_self_))._field_s))._field_errors.len();;
	if ((!(_1b4bc6cdc_checkTypeCompatibility((*(_self_))._field_s, _172037_t, &((*((*(_172056_d))))._field_Kind), _172071_errorToken)))) {
		((*((*(_self_))._field_s))._field_errors).mut_slice(0LL, _17219_n);;
		_1b4c48930_pushErr(_self_, (*(_172071_errorToken)), jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1b4c7ccc7_Str((*((*(_172056_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1b4c7ccc7_Str((*(_172037_t)).ptr()), &__jule_any_type4)}));
	};
	(*((*(_172056_d))))._field_Constant=nullptr;
	(*((*(_172056_d))))._field_untyped=false;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c5a128_evalCastByTypeNData(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4c7c90e_TypeKind> _173042_t, jule::Ptr<_1b4c466a8_Data> _173060_d, jule::Ptr<_1b4ad5712_Token> _173074_errorToken) {
	if (((_173060_d != nullptr) && (*_173060_d.alloc)._field_Decl)) {
		_1b4c48930_pushErr(_self_, _173074_errorToken, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		
		if (_1b4c46a93_IsNil(_173060_d)) {
			_case_begin_1ab707e20:;
			{
				if ((!(_1b4c7e7ac_NilCompatible(_173042_t.ptr())))) {
					_1b4c48930_pushErr(_self_, _173074_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("<nil>", 5), &__jule_any_type4),jule::Any(_1b4c7ccc7_Str(_173042_t), &__jule_any_type4)}));
				};
				(*_173060_d.alloc)._field_Constant=nullptr;
				(*_173060_d.alloc)._field_untyped=false;
			}
		}
		else if (((_1b4c80060_Prim((*_173060_d.alloc)._field_Kind.ptr()) != nullptr) && _1b4c88c06_IsAny(_1b4c80060_Prim((*_173060_d.alloc)._field_Kind).ptr()))) {
			_case_begin_1ab707bab:;
			{
				if ((_1b4c80813_Enum(_173042_t.ptr()) != nullptr)) {
					_1b4c48930_pushErr(_self_, _173074_errorToken, jule::Str::lit("enum cannot casted from any type", 32), jule::Slice<jule::Any>());
					_1b4c48c93_pushSuggestion(_self_, jule::Str::lit("try cast to type of enum fields instead of enum", 47), jule::Slice<jule::Any>());
				} else if ((_1b4c80a99_TypeEnum(_173042_t.ptr()) != nullptr)) {
					_1b4c48930_pushErr(_self_, _173074_errorToken, jule::Str::lit("enum cannot casted from any type", 32), jule::Slice<jule::Any>());
				};
				(*_173060_d.alloc)._field_Constant=nullptr;
				(*_173060_d.alloc)._field_untyped=false;
			}
		}
		else if ((_1b4c80a99_TypeEnum((*_173060_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab707c22:;
			{
				_1b4c59754_castTypeEnum(_self_, &(_173042_t), &(_173060_d), &(_173074_errorToken));
			}
		}
		else if ((_1b4c80a99_TypeEnum(_173042_t.ptr()) != nullptr)) {
			_case_begin_1ab707c88:;
			{
				_1b4c59b72_castTypeEnumT(_self_, &(_173042_t), &(_173060_d), &(_173074_errorToken));
			}
		}
		else if ((_1b4c8057c_Ptr(_173042_t.ptr()) != nullptr)) {
			_case_begin_1ab707cee:;
			{
				_1b4c5719c_castPtr(_self_, _173042_t, _173060_d, _173074_errorToken);
			}
		}
		else if ((_1b4c802e6_Sptr(_173042_t.ptr()) != nullptr)) {
			_case_begin_1ab7089ae:;
			{
				_1b4c579d8_castRef(_self_, _173042_t, _173060_d, _173074_errorToken);
			}
		}
		else if ((_1b4c810b6_Slc(_173042_t.ptr()) != nullptr)) {
			_case_begin_1ab708a25:;
			{
				_1b4c57e06_castSlc(_self_, _173042_t, _173060_d, _173074_errorToken);
			}
		}
		else if ((_1b4c815d3_Struct(_173042_t.ptr()) != nullptr)) {
			_case_begin_1ab708a8b:;
			{
				_1b4c575ba_castStruct(_self_, _173042_t, _173060_d, _173074_errorToken);
			}
		}
		else if ((_1b4c80060_Prim(_173042_t.ptr()) != nullptr)) {
			_case_begin_1ab708b02:;
			{
				_1b4c58ec3_castPrim(_self_, _173042_t, _173060_d, _173074_errorToken);
				_1b4c59336_castConstant(_self_, &(_173042_t), &(_173060_d));
			}
		}
		else {
			_case_begin_1ab707a8a:;
			{
				_1b4c48930_pushErr(_self_, _173074_errorToken, jule::Str::lit("type @ not supports casting", 27), jule::Slice<jule::Any>::make({jule::Any(_1b4c7ccc7_Str(_173042_t.ptr()), &__jule_any_type4)}));
				_173060_d=nullptr;
			}
		}
		_match_end_1ab7079e1:;
	};
	if ((_173060_d == nullptr)) {
		return nullptr;;
	};
	(*_173060_d.alloc)._field_Mutable=((*_173060_d.alloc)._field_Mutable || (!(_1b4c7e290_Mutable((*_173060_d.alloc)._field_Kind.ptr()))));
	if (((!((*_173060_d.alloc)._field_Decl)) && ((_1b4c80813_Enum((*_173060_d.alloc)._field_Kind) == nullptr) || (!(_1b4c7d118_Equal((*((*(_1b4c80813_Enum((*_173060_d.alloc)._field_Kind)))._field_Kind))._field_Kind, _173042_t)))))) {
		_1b4c771ab_applyCastKind(&(_173060_d), &(_173042_t), &(_173074_errorToken));
		(*((*_173060_d.alloc)._field_Model.cast_ptr<_1b4b2a16e_CastingExprModel>(&__jule_any_type93)))._field_Token=_173074_errorToken;
	} else {
		(*_173060_d.alloc)._field_Kind=_173042_t;
	};
	(*_173060_d.alloc)._field_Decl=false;
	(*_173060_d.alloc)._field_Lvalue=false;
	(*_173060_d.alloc)._field_untyped=false;
	if (_1b4c470b0_IsConst(_173060_d)) {
		(*((*_173060_d.alloc)._field_Constant))._field_Kind=(*(_1b4c80060_Prim(_173042_t.ptr())))._field_Kind;
	};
	return _173060_d;;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c5a5ce_evalCastT(jule::Ptr<_1b4c483d0_Eval> _self_, jule::Ptr<_1b4c7c90e_TypeKind>* _180334_t, jule::Ptr<_1b4b00001_Expr>* _180353_e, jule::Ptr<_1b4ad5712_Token>* _180368_et) {
	jule::Ptr<_1b4c7c90e_TypeKind> _180413_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_180413_prefix;
	});;
	if ((_1b4c810b6_Slc((*(_180334_t)).ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*((*(_180353_e))))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type94) {
				_case_begin_1ab718b23:;
				{
					(*_self_.alloc)._field_prefix=(*(_180334_t));
				}
			}
			_match_end_1ab718aac:;
		};
	};
	jule::Ptr<_1b4c466a8_Data> _181313_d = _1b4c6b49c_evalExpr(_self_, (*(_180353_e)));;
	if (((_181313_d == nullptr) || ((*_self_.alloc)._field_prefix != nullptr))) {
		return _181313_d;;
	};
	return _1b4c5a128_evalCastByTypeNData(_self_, (*(_180334_t)), _181313_d, (*(_180368_et)));;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c5a920_evalCast(jule::Ptr<_1b4c483d0_Eval> _self_, jule::Ptr<_1b4b02861_CastExpr> _182032_c) {
	jule::Ptr<_1b4c84ad1_TypeSymbol> _182113_t = _1b4b3e3b4_buildType((*(_182032_c))._field_Kind);;
	jule::Bool _18229_ok = _1b4bc44e3_checkType((*(_self_))._field_s, &(_182113_t), (*_self_.alloc)._field_lookup);;
	if ((!(_18229_ok))) {
		return nullptr;;
	};
	return _1b4c5a5ce_evalCastT(_self_, &((*(_182113_t))._field_Kind), &((*_182032_c.alloc)._field_Expr), &((*((*_182032_c.alloc)._field_Kind))._field_Token));;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c5ac61_evalNsSelection(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4b02c3a_NsSelectionExpr> _182934_s) {
	jule::Str _18309_path = _1b4c99453_buildLinkPathByTokens(&((*(_182934_s))._field_Ns));;
	jule::Ptr<_1b4b9a893_ImportInfo> _183113_imp = ((_1b4c9c500_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1b4c9a7d9_SelectPackage((*(_self_))._field_lookup.data, jule::__new_closure<jule::Bool,jule::Ptr<_1b4b9a893_ImportInfo>>((void*)__jule_anon_1ab71e244, jule::Ptr<__jule_anon_1ab71e244_ctx>::make(__jule_anon_1ab71e244_ctx{._182934_s=_182934_s,._18309_path=_18309_path}).as<jule::Uintptr>(), __jule_anon_1ab71e244_ctx_handler));;
	if ((_183113_imp == nullptr)) {
		_1b4c48930_pushErr(_self_, (*_182934_s.alloc)._field_Ns[0LL], jule::Str::lit("undefined namespace: @", 22), jule::Slice<jule::Any>::make({jule::Any(_18309_path, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Trait _184313_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait(_183113_imp, (jule::Trait::Type*)&_1b4c9c500_Lookup_mptr_data1);
	;
	_1b4c4918e_disallowBuiltin(_self_);
	jule::Any _184813_def = _1b4c4b69c_getDef(_self_, &((*((*_182934_s.alloc)._field_Ident))._field_Kind), false);;
	_1b4c48e91_allowBuiltin(_self_);
	(*(_self_))._field_lookup=_184313_lookup;
	jule::Ptr<_1b4c466a8_Data> _185113_d = _1b4c5085a_evalDef(_self_, &(_184813_def), (*_182934_s.alloc)._field_Ident);;
	return _185113_d;;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c5b217_evalStructLitExplicit(jule::Ptr<_1b4c483d0_Eval> _self_, jule::Ptr<_1b4b24641_StructIns> _185545_s, jule::Slice<jule::Ptr<_1b4b00001_Expr>> _185613_exprs, jule::Ptr<_1b4ad5712_Token> _185633_errorToken) {
	jule::Bool _18579_ok = _1b4bbeda1_checkGenericQuantity((*(_self_))._field_s.ptr(), (*((*(_185545_s))._field_Decl))._field_Generics.len(), (*_185545_s.alloc)._field_Generics.len(), _185633_errorToken);;
	if ((!(_18579_ok))) {
		return nullptr;;
	};
	if ((((*_self_.alloc)._field_field != nullptr) && ((*((*(*_self_.alloc)._field_field.alloc)._field_Decl))._field_Owner == (*_185545_s.alloc)._field_Decl))) {
		_1b4c48930_pushErr(_self_, _185633_errorToken, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*(*_185545_s.alloc)._field_Decl.alloc)._field_Ident, &__jule_any_type4)}));
	};
	_1ab6a68a2_pushReference(_self_, &(_185545_s));
	_1b4c4da56_checkDeprecated(_self_, &((*(*_185545_s.alloc)._field_Decl.alloc)._field_Directives), _185633_errorToken);
	_1b4c39789_structLitChecker _187013_slc = _1b4c39789_structLitChecker{._field_e=_self_, ._field_errorToken=_185633_errorToken, ._field_s=_185545_s, };;
	_1b4c3aec7_check(&_187013_slc, &(_185613_exprs));
	jule::Ptr<_1b4c466a8_Data> _187713_d = jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=jule::new_ptr<_1b4c7c90e_TypeKind>(_1b4c7c90e_TypeKind{._field_Kind=jule::Trait(_185545_s, (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data0)}), ._field_Mutable=(!((*_self_.alloc)._field_immutable)), ._field_Model=jule::Any(jule::new_ptr<_1b4b297de_StructLitExprModel>(_1b4b297de_StructLitExprModel{._field_Strct=_185545_s, ._field_Args=_187013_slc._field_args}), &__jule_any_type95), });;
	if ((*(*_185545_s.alloc)._field_Decl.alloc)._field_Binded) {
		(*((*(_187713_d))._field_Kind))._field_BindIdent=(*(*_185545_s.alloc)._field_Decl.alloc)._field_Ident;
	};
	return _187713_d;;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c5b558_evalStructLit(jule::Ptr<_1b4c483d0_Eval> _self_, jule::Ptr<_1b4b0504a_StructLit> _189337_lit) {
	jule::Ptr<_1b4c84ad1_TypeSymbol> _189413_t = _1b4b3e3b4_buildType((*(_189337_lit))._field_Kind);;
	jule::Bool _18959_ok = _1b4bc44e3_checkType((*(_self_))._field_s, &(_189413_t), (*_self_.alloc)._field_lookup);;
	if ((!(_18959_ok))) {
		return nullptr;;
	};
	jule::Ptr<_1b4b24641_StructIns> _190013_s = _1b4c815d3_Struct((*(_189413_t))._field_Kind.ptr());;
	if ((_190013_s == nullptr)) {
		if ((_1b4c802e6_Sptr((*_189413_t.alloc)._field_Kind) != nullptr)) {
			_190013_s=_1b4c815d3_Struct((*(_1b4c802e6_Sptr((*_189413_t.alloc)._field_Kind)))._field_Elem.ptr());
			if ((_190013_s != nullptr)) {
				goto _julec_label_1ab72ee14;
			};
		};
		_1b4c48930_pushErr(_self_, (*((*_189337_lit.alloc)._field_Kind))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_1ab72ee14:;
	jule::Ptr<_1b4c466a8_Data> _191313_d = _1b4c5b217_evalStructLitExplicit(_self_, _190013_s, (*_189337_lit.alloc)._field_Exprs, (*(*_189337_lit.alloc)._field_Kind.alloc)._field_Token);;
	if ((_1b4c802e6_Sptr((*_189413_t.alloc)._field_Kind) != nullptr)) {
		jule::Ptr<_1b4b297de_StructLitExprModel> _191517_model = (*(_191313_d))._field_Model.cast_ptr<_1b4b297de_StructLitExprModel>(&__jule_any_type95);;
		_1b4c757d6_makeStructLitAlloc(&(_191313_d), &(_191517_model));
	};
	return _191313_d;;
}



inline _1b4c8e7bc_typeChecker _1b4c5b7de_typeChecker(_1b4c483d0_Eval* _self_) {
	return _1b4bc328e_typeChecker((*(_self_))._field_s, (*(_self_))._field_lookup, nullptr, nullptr);;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c5bb30_evalType(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4aeabbc_TypeDecl> _192531_t) {
	jule::Ptr<_1b4c84ad1_TypeSymbol> _192613_tk = _1b4b3e3b4_buildType(_192531_t);;
	jule::Bool _19279_ok = _1b4bc44e3_checkType((*(_self_))._field_s, &(_192613_tk), (*(_self_))._field_lookup);;
	if ((!(_19279_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=(*(_192613_tk))._field_Kind, ._field_Model=jule::Any((*_192613_tk.alloc)._field_Kind, &__jule_any_type84), ._field_Decl=true, });;
}



inline void _1b4c5be93_callTypeFn(jule::Ptr<_1b4c483d0_Eval> _self_, jule::Ptr<_1b4b03c2a_FnCallExpr>* _193835_fc, jule::Ptr<_1b4c466a8_Data>* _193857_d) {
	if (((*((*(_193835_fc))))._field_Args.len() < 1LL)) {
		_1b4c48930_pushErr(_self_.ptr(), (*((*(_193835_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("v", 1), &__jule_any_type4)}));
	} else if (((*((*(_193835_fc))))._field_Args.len() > 1LL)) {
		_1b4c48930_pushErr(_self_.ptr(), (*((*((*(_193835_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(_1b4c7ccc7_Str((*((*(_193857_d))))._field_Kind.ptr()), &__jule_any_type4)}));
	} else if ((*((*(_193835_fc))))._field_IsCo) {
		_1b4c48930_pushErr(_self_.ptr(), (*((*(_193835_fc))))._field_Token, jule::Str::lit("concurrent calls are not allowed for type-cast calls", 52), jule::Slice<jule::Any>());
		(*(_193857_d))=nullptr;
		return;;
	} else if (((*((*(_193835_fc))))._field_Exception != nullptr)) {
		_1b4c48930_pushErr(_self_.ptr(), (*((*(_193835_fc))))._field_Token, jule::Str::lit("exceptionals are not supported for type-cast call", 49), jule::Slice<jule::Any>());
		(*(_193857_d))=nullptr;
		return;;
	};
	if (((*((*(_193835_fc))))._field_Args.len() > 0LL)) {
		jule::Ptr<_1b4b00001_Expr> _195417_arg = (*((*(_193835_fc))))._field_Args[0LL];;
		(*(_193857_d))=_1b4c5a5ce_evalCastT(_self_, &((*((*(_193857_d))))._field_Kind), &(_195417_arg), &((*(_195417_arg))._field_Token));
		return;;
	};
	if (((*(_193857_d)) != nullptr)) {
		(*((*(_193857_d))))._field_Decl=false;
	};
}



inline void _1b4c5c306_callBuiltinFn(jule::Ptr<_1b4c483d0_Eval> _self_, jule::Ptr<_1b4b03c2a_FnCallExpr>* _196438_fc, jule::Ptr<_1b4c466a8_Data>* _196460_d) {
	if ((!(_1b4b0409e_Unhandled((*(_196438_fc)).ptr())))) {
		_1b4c48930_pushErr(_self_.ptr(), (*((*(_196438_fc))))._field_Token, jule::Str::lit("non-exceptionals cannot handled like exceptionals", 49), jule::Slice<jule::Any>());
	};
	(*(_196460_d))=(*(_1b4c8134c_Fn((*((*(_196460_d))))._field_Kind.ptr())))._field_caller(&(_self_), _196438_fc, _196460_d);
	if (((*(_196460_d)) == nullptr)) {
		return;;
	};
	(*((*(_196460_d))))._field_Mutable=true;
}



inline void _1b4c5c669_checkFnOfConcurrentCall(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4b39865_FnIns>* _197643_f, jule::Ptr<_1b4ad5712_Token> _197654_errorToken) {
	if (_1b4c49425_isUnsafe(_self_)) {
		return;;
	};
	{
		auto expr = &((*((*(_197643_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab73ec9d:;
		if (it != expr_end) {
			jule::Ptr<_1b4b387dc_ParamIns> *_198016_p = it;
			{
				if (_1b4b354cb_IsSelf((*((*(_198016_p))))._field_Decl.ptr())) {
					if ((!(_1b4b35762_IsRef((*(*(_198016_p)).alloc)._field_Decl)))) {
						_1b4c48930_pushErr(_self_, _197654_errorToken, jule::Str::lit("Safe Jule not allows to make concurrent calls with methods which is has \"self\" receiver parameter", 97), jule::Slice<jule::Any>());
						_1b4c48c93_pushSuggestion(_self_, jule::Str::lit("use \"&self\" receiver parameter instead, or Unsafe Jule with unsafe {} scope to make concurrent call", 99), jule::Slice<jule::Any>());
					};
				};
				if ((*(*(*(_198016_p)).alloc)._field_Decl.alloc)._field_Reference) {
					_1b4c48930_pushErr(_self_, _197654_errorToken, jule::Str::lit("Safe Jule not allows to make concurrent calls with functions which is has reference parameter(s)", 96), jule::Slice<jule::Any>());
					_1b4c48c93_pushSuggestion(_self_, jule::Str::lit("use Unsafe Jule with unsafe {} scope to make concurrent call", 60), jule::Slice<jule::Any>());
					return;;
				};
			}
			_iter_next_1ab73ec9d:;
			++it;
			goto _iter_begin_1ab73ec9d;
		}
		_iter_end_1ab73ec9d:;
	};
}



inline void _1b4c5ca87_processExceptionalHandler(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4b39865_FnIns>* _199549_f, jule::Ptr<_1b4b03c2a_FnCallExpr>* _199565_fc, jule::Ptr<_1b4c466a8_Data>* _199587_d) {
	jule::Bool _19969_resultNeeded = ((!(_1b4b36d07_IsVoid((*((*(_199549_f))))._field_Decl.ptr()))) && ((*(_self_))._field_arg || (!((*(_self_))._field_ignored))));;
	jule::Ptr<_1b4b80cb8_scopeChecker> _199717_csc = nullptr;;
	jule::Ptr<_1b4b7880a_Scope> _199817_ch = nullptr;;
	jule::Ptr<_1b4b2aa21_FnCallExprModel> _200013_model = (*((*(_199587_d))))._field_Model.cast_ptr<_1b4b2aa21_FnCallExprModel>(&__jule_any_type33);;
	jule::Ptr<_1b4b80cb8_scopeChecker> _200413_sc = (*(_self_))._field_lookup.cast_ptr<_1b4b80cb8_scopeChecker>((jule::Trait::Type*)&_1b4c9c500_Lookup_mptr_data0);;
	_199717_csc=_1b4b92d52_newChildChecker(_200413_sc);
	if (_19969_resultNeeded) {
		(*(_199717_csc))._field_result=(*(_199549_f));
	};
	_199817_ch=_1b4b861a8_getChild(_200413_sc);
	(*((*((*(_199565_fc))))._field_Exception))._field_Parent=(*_200413_sc.alloc)._field_tree;
	(*((*_199717_csc.alloc)._field_table))._field_Vars=jule::append((*(*_199717_csc.alloc)._field_table.alloc)._field_Vars,jule::Slice<jule::Ptr<_1b4bddaa1_Var>>::make({_1b4c75b5a_buildErrorVar(&(_199817_ch), _199565_fc)}));
	_1b4b865c6_checkChildSsc(_200413_sc, &((*((*(_199565_fc))))._field_Exception), &(_199817_ch), &(_199717_csc));
	(*(_200013_model))._field_Assigned=_19969_resultNeeded;
	(*_200013_model.alloc)._field_Except=_199817_ch;
	if ((_19969_resultNeeded && ((*_199717_csc.alloc)._field_result != nullptr))) {
		_1b4c48930_pushErr(_self_, (*((*(_199565_fc))))._field_Token, jule::Str::lit("exceptional returns an expression, therefore else block should return expression", 80), jule::Slice<jule::Any>());
	};
}



inline void _1b4c5cdea_callFn(jule::Ptr<_1b4c483d0_Eval> _self_, jule::Ptr<_1b4b03c2a_FnCallExpr>* _202231_fc, jule::Ptr<_1b4c466a8_Data>* _202253_d) {
	jule::Ptr<_1b4b39865_FnIns> _202313_f = _1b4c8134c_Fn((*((*(_202253_d))))._field_Kind.ptr());;
	if (_1b4b3acea_IsBuiltin(_202313_f.ptr())) {
		_1b4c5c306_callBuiltinFn(_self_, _202231_fc, _202253_d);
		return;;
	};
	if ((_1b4c496ab_isGlobal(_self_) && (*((*_202313_f.alloc)._field_Decl))._field_Exceptional)) {
		_1b4c48930_pushErr(_self_, (*((*(_202231_fc))))._field_Token, jule::Str::lit("exceptionals are not allowed in global scope", 44), jule::Slice<jule::Any>());
		_1b4c48c93_pushSuggestion(_self_, jule::Str::lit("wrap exceptional with a non-exceptional function", 48), jule::Slice<jule::Any>());
		(*(_202253_d))=nullptr;
		return;;
	};
	if (((!(_1b4b3708d_IsMethod((*_202313_f.alloc)._field_Decl))) && _1b4c9852e_hasDirective(&((*(*_202313_f.alloc)._field_Decl.alloc)._field_Directives), jule::Str::lit("test", 4)))) {
		_1b4c48930_pushErr(_self_, (*((*(_202231_fc))))._field_Token, jule::Str::lit("you cannot call test functions", 30), jule::Slice<jule::Any>());
		(*(_202253_d))=nullptr;
		return;;
	};
	if (((((!((*((*(_202253_d))))._field_Mutable)) && _1b4b3708d_IsMethod((*_202313_f.alloc)._field_Decl)) && (!((*(*_202313_f.alloc)._field_Decl.alloc)._field_Statically))) && (*((*(*_202313_f.alloc)._field_Decl.alloc)._field_Params[0LL]))._field_Mutable)) {
		if ((!((*_self_.alloc)._field_immutable))) {
			_1b4c48930_pushErr(_self_, (*((*(_202231_fc))))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
		} else {
			jule::Ptr<_1b4b297de_StructLitExprModel> _204917_lit = _1b4c79114_isLitBased(&((*((*(_202253_d))))._field_Model));;
			if ((_204917_lit == nullptr)) {
				_1b4c48930_pushErr(_self_, (*((*(_202231_fc))))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
			} else {
				_1b4c392a0_checkMutRiskOfStructLit(&((*_self_.alloc)._field_s), &(_204917_lit));
			};
		};
	} else if (((!(_1b4c49425_isUnsafe(_self_))) && (*(*_202313_f.alloc)._field_Decl.alloc)._field_Unsafety)) {
		_1b4c48930_pushErr(_self_, (*((*(_202231_fc))))._field_Token, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
	};
	jule::Bool _206113_dynamicAnnotation = ((((*(*_202313_f.alloc)._field_Decl.alloc)._field_Generics.len() > 0LL) && ((*_202313_f.alloc)._field_Generics.len() == 0LL)) && ((*_202313_f.alloc)._field_Params.len() > 0LL));;
	if (_206113_dynamicAnnotation) {
		(*_202313_f.alloc)._field_Generics=jule::Slice<jule::Ptr<_1b4c7b028_InsGeneric>>::alloc((*(*_202313_f.alloc)._field_Decl.alloc)._field_Generics.len(), (*(*_202313_f.alloc)._field_Decl.alloc)._field_Generics.len());
	} else if (((*_202313_f.alloc)._field_Generics.len() != (*(*_202313_f.alloc)._field_Decl.alloc)._field_Generics.len())) {
		_1b4bbeda1_checkGenericQuantity((*_self_.alloc)._field_s.ptr(), (*(*_202313_f.alloc)._field_Decl.alloc)._field_Generics.len(), (*_202313_f.alloc)._field_Generics.len(), (*((*(_202231_fc))))._field_Token);
		(*(_202253_d))=nullptr;
		return;;
	};
	jule::Ptr<_1b4bbac37_Sema> _207013_old = (*_self_.alloc)._field_s;;
	if (((*(*_202313_f.alloc)._field_Decl.alloc)._field_Owner != nullptr)) {
		(*_self_.alloc)._field_s=(*(*(*_202313_f.alloc)._field_Decl.alloc)._field_Owner.alloc)._field_sema;
	};
	__JULE_DEFER({
		if ((_207013_old != (*_self_.alloc)._field_s)) {
			(*(_207013_old))._field_errors=jule::append((*_207013_old.alloc)._field_errors,(*((*_self_.alloc)._field_s))._field_errors);
			(*(*_self_.alloc)._field_s.alloc)._field_errors=nullptr;
		};
		(*_self_.alloc)._field_s=_207013_old;
	});;
	_1b4c36852_fnCallArgChecker _208313_fcac = _1b4c36852_fnCallArgChecker{._field_e=_self_, ._field_args=(*((*(_202231_fc))))._field_Args, ._field_errorToken=(*((*(_202231_fc))))._field_Token, ._field_dynamicAnnotation=_206113_dynamicAnnotation, };;
	if ((!(_206113_dynamicAnnotation))) {
		if ((!((*_202313_f.alloc)._field_reloaded))) {
			jule::Bool _209217_ok = _1b4bc9806_reloadFnInsTypes((*_self_.alloc)._field_s, _202313_f);;
			(*_202313_f.alloc)._field_reloaded=true;
			if ((!(_209217_ok))) {
				(*(_202253_d))=nullptr;
				return;;
			};
		};
		jule::Ptr<_1b4b39865_FnIns> _209917_existInstance = _1b4b38402_appendInstance((*_202313_f.alloc)._field_Decl, &(_202313_f));;
		if ((_209917_existInstance != nullptr)) {
			_202313_f=_209917_existInstance;
		};
	} else if ((!(_1b4bc8063_buildFnNonGenericTypeKinds((*_self_.alloc)._field_s, &(_202313_f), &(_208313_fcac._field_ignored))))) {
		(*(_202253_d))=nullptr;
		return;;
	};
	_208313_fcac._field_f=_202313_f;
	jule::Bool _211013_ok = false;;
	if (((*(*_202313_f.alloc)._field_Decl.alloc)._field_Owner != nullptr)) {
		std::swap(_207013_old, (*_self_.alloc)._field_s);
		_211013_ok=_1b4c38e09_check(&_208313_fcac);
		std::swap(_207013_old, (*_self_.alloc)._field_s);
	} else {
		_211013_ok=_1b4c38e09_check(&_208313_fcac);
	};
	if (_206113_dynamicAnnotation) {
		if ((!(_211013_ok))) {
			(*(_202253_d))=nullptr;
			return;;
		};
		if ((!(_1b4c55299_checkGenericFn(_self_, &(_202313_f), &((*((*(_202231_fc))))._field_Token), &((*((*(_202253_d))))._field_Model))))) {
			(*(_202253_d))=nullptr;
			return;;
		};
	};
	jule::Any _213013_callModel = (*((*(_202253_d))))._field_Model;;
	if (_1b4b36d07_IsVoid((*_202313_f.alloc)._field_Decl)) {
		(*(_202253_d))=_1b4c773ba_buildVoidData();
	} else {
		(*((*(_202253_d))))._field_Kind=(*_202313_f.alloc)._field_Result;
		(*((*(_202253_d))))._field_Lvalue=false;
	};
	jule::Ptr<_1b4b2aa21_FnCallExprModel> _213913_model = jule::new_ptr<_1b4b2aa21_FnCallExprModel>(_1b4b2aa21_FnCallExprModel{._field_Token=(*((*(_202231_fc))))._field_Token, ._field_Func=_202313_f, ._field_IsCo=(*((*(_202231_fc))))._field_IsCo, ._field_Expr=_213013_callModel, ._field_Args=_208313_fcac._field_argModels, });;
	(*((*(_202253_d))))._field_Model=jule::Any(_213913_model, &__jule_any_type33);
	(*((*(_202253_d))))._field_Mutable=true;
	if ((*(*_202313_f.alloc)._field_Decl.alloc)._field_Exceptional) {
		if ((*((*(_202231_fc))))._field_IsCo) {
			_1b4bbd872_pushErr((*_self_.alloc)._field_s, (*((*(_202231_fc))))._field_Token, jule::Str::lit("concurrent calls not supports exceptionals", 42), jule::Slice<jule::Any>());
			_1b4bbdbd5_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("handle exceptional in a separate function or anonymous function", 63), jule::Slice<jule::Any>());
		};
		{
			
			if (_1b4b0409e_Unhandled((*(_202231_fc)).ptr())) {
				_case_begin_1ab76593e:;
				{
					_1b4c48930_pushErr(_self_, (*((*(_202231_fc))))._field_Token, jule::Str::lit("exceptionals must be handled", 28), jule::Slice<jule::Any>());
					_1b4c48c93_pushSuggestion(_self_, jule::Str::lit("use \"!\" operator after exceptional to handle it", 47), jule::Slice<jule::Any>());
				}
			}
			else if (_1b4b04335_Ignored((*(_202231_fc)).ptr())) {
				_case_begin_1ab765631:;
				{
					goto _match_end_1ab7643cc;
				}
			}
			else {
				_case_begin_1ab764465:;
				{
					_1b4c5ca87_processExceptionalHandler(_self_, &(_202313_f), _202231_fc, _202253_d);
				}
			}
			_match_end_1ab7643cc:;
		};
	} else if ((!(_1b4b0409e_Unhandled((*(_202231_fc)).ptr())))) {
		_1b4c48930_pushErr(_self_, (*((*(_202231_fc))))._field_Token, jule::Str::lit("non-exceptionals cannot handled like exceptionals", 49), jule::Slice<jule::Any>());
	};
	if ((*((*(_202231_fc))))._field_IsCo) {
		_1b4c5c669_checkFnOfConcurrentCall(_self_, &((*(_213913_model))._field_Func), (*((*(_202231_fc))))._field_Token);
	};
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c5d23b_evalFnCall(jule::Ptr<_1b4c483d0_Eval> _self_, jule::Ptr<_1b4b03c2a_FnCallExpr> _217434_fc) {
	jule::Ptr<_1b4c7c90e_TypeKind> _217513_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_217513_prefix;
	});;
	{
		auto &_match_expr{ (*((*(_217434_fc))._field_Expr))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1ab769ea4:;
			{
				if ((*((*((*(_217434_fc))._field_Expr))._field_Token))._field_Kind.equal("error", 5)) {
					return _1b4d64ba0_builtinCallerError(&(_self_), &(_217434_fc));;
				};
			}
		}
		_match_end_1ab769e3d:;
	};
	jule::Ptr<_1b4c466a8_Data> _218813_d = _1b4c6582b_evalExprKind(_self_, (*(*_217434_fc.alloc)._field_Expr.alloc)._field_Kind);;
	if ((_218813_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_218813_d))._field_Decl) {
		_1b4c5be93_callTypeFn(_self_, &(_217434_fc), &(_218813_d));
		return _218813_d;;
	};
	if ((_1b4c8134c_Fn((*(_218813_d))._field_Kind.ptr()) == nullptr)) {
		_1b4c48930_pushErr(_self_, (*_217434_fc.alloc)._field_Token, jule::Str::lit("attempting to call a non-function", 33), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1b4c5cdea_callFn(_self_, &(_217434_fc), &(_218813_d));
	return _218813_d;;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c5d637_evalEnumStatic(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4b4c449_Enum> _220737_enm, jule::Ptr<_1b4ad5712_Token> _220753_ident) {
	jule::Ptr<_1b4b4b8cc_EnumItem> _220813_item = _1b4b4d03d_FindItem(_220737_enm.ptr(), (*(_220753_ident))._field_Kind);;
	if ((_220813_item == nullptr)) {
		_1b4c48930_pushErr(_self_, _220753_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*_220737_enm.alloc)._field_Ident, &__jule_any_type4),jule::Any((*_220753_ident.alloc)._field_Kind, &__jule_any_type4)}));
	};
	return _1b4c78d4a_evalEnumStatic(&(_220737_enm), &(_220813_item), &(_220753_ident));;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c5da33_evalTypeEnumStatic(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4b4db54_TypeEnum> _221541_enm, jule::Ptr<_1b4ad5712_Token> _221557_ident) {
	jule::Ptr<_1b4b4d57c_TypeEnumItem> _221613_item = _1b4b4e715_FindItem(_221541_enm.ptr(), (*(_221557_ident))._field_Kind);;
	if ((_221613_item == nullptr)) {
		_1b4c48930_pushErr(_self_, _221557_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*_221541_enm.alloc)._field_Ident, &__jule_any_type4),jule::Any((*_221557_ident.alloc)._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	{
		
		if ((_1b4c80813_Enum((*((*(_221613_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab773551:;
			{
				return _1b4c4c02c__evalEnum(_self_, _1b4c80813_Enum((*(*(_221613_item))._field_Kind.alloc)._field_Kind));;
			}
		}
		else if ((_1b4c80a99_TypeEnum((*((*(_221613_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab7717d5:;
			{
				return _1b4c4c769__evalTypeEnum(_self_, _1b4c80a99_TypeEnum((*(*(_221613_item))._field_Kind.alloc)._field_Kind));;
			}
		}
		else if ((_1b4c815d3_Struct((*((*(_221613_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab77184b:;
			{
				return _1b4c4cea6__evalStruct(_self_, _1b4c815d3_Struct((*(*(_221613_item))._field_Kind.alloc)._field_Kind));;
			}
		}
		else {
			_case_begin_1ab77176e:;
			{
				jule::Ptr<_1b4c466a8_Data> _222917_d = jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=(*((*(_221613_item))._field_Kind))._field_Kind, ._field_Decl=true, });;
				(*(_222917_d))._field_Model=jule::Any((*_222917_d.alloc)._field_Kind, &__jule_any_type84);
				return _222917_d;;
			}
		}
		_match_end_1ab771939:;
	};
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c5de2e_evalStructStatic(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4b24641_StructIns> _223839_s, jule::Ptr<_1b4ad5712_Token> _223854_ident) {
	jule::Ptr<_1b4c466a8_Data> _223913_d = jule::new_ptr<_1b4c466a8_Data>();;
	;
	jule::Ptr<_1b4b36884_Fn> _224313_method = _1b4b256a8_FindMethod(_223839_s.ptr(), (*(_223854_ident))._field_Kind, true);;
	if ((_224313_method != nullptr)) {
		if ((!(_1b4bbe0d1_isAccessibleDefine((*(_self_))._field_s.ptr(), (*_224313_method.alloc)._field_Public, (*_224313_method.alloc)._field_Token)))) {
			_1b4c48930_pushErr(_self_, _223854_ident, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*_223854_ident.alloc)._field_Kind, &__jule_any_type4)}));
			_1b4c48c93_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1b4b39865_FnIns> _225017_ins = _1b4b380e4_instance(_224313_method);;
		(*(_225017_ins))._field_Owner=_223839_s;
		_1ab5cbae6_pushReference(_self_, &(_225017_ins));
		(*_223913_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1b4b2da35_StructStaticIdentExprModel>(_1b4b2da35_StructStaticIdentExprModel{._field_Structure=_223839_s, ._field_Expr=(*_223913_d.alloc)._field_Model, ._field_Method=_225017_ins}), &__jule_any_type96);
		(*_223913_d.alloc)._field_Kind=jule::new_ptr<_1b4c7c90e_TypeKind>(_1b4c7c90e_TypeKind{._field_Kind=jule::Trait(_225017_ins, (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data1)});
		return _223913_d;;
	};
	jule::Ptr<_1b4bddaa1_Var> _226413_sttc = _1b4b25d3a_FindStatic(_223839_s, (*_223854_ident.alloc)._field_Kind);;
	if ((_226413_sttc != nullptr)) {
		return _1b4c50063_evalVar(_self_, _226413_sttc, _223854_ident);;
	};
	_1b4c48930_pushErr(_self_, _223854_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*((*_223839_s.alloc)._field_Decl))._field_Ident, &__jule_any_type4),jule::Any((*_223854_ident.alloc)._field_Kind, &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c5e3d5_evalTraitSubIdent(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4c466a8_Data> _227340_d, jule::Ptr<_1b4b49c3d_Trait> _227354_trt, jule::Ptr<_1b4ad5712_Token> _227371_ident) {
	jule::Ptr<_1b4b36884_Fn> _227413_f = _1b4b4a8dc_FindMethod(_227354_trt.ptr(), (*(_227371_ident))._field_Kind);;
	if ((_227413_f == nullptr)) {
		_1b4c48930_pushErr(_self_, _227371_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*_227354_trt.alloc)._field_Ident, &__jule_any_type4),jule::Any((*_227371_ident.alloc)._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=jule::new_ptr<_1b4c7c90e_TypeKind>(_1b4c7c90e_TypeKind{._field_Kind=jule::Trait(_1b4b380e4_instance(_227413_f), (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data1)}), ._field_Model=jule::Any(jule::new_ptr<_1b4b2cced_TraitSubIdentExprModel>(_1b4b2cced_TraitSubIdentExprModel{._field_Token=_227371_ident, ._field_Expr=(*(_227340_d))._field_Model, ._field_Method=_227413_f, ._field_Trt=_227354_trt}), &__jule_any_type97), });;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c5e946_evalStructSubIdentField(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4c466a8_Data>* _229347_d, jule::Ptr<_1b4b24641_StructIns>* _229362_s, jule::Ptr<_1b4ad5712_Token>* _229382_tok, jule::Ptr<_1b4b23a91_FieldIns>* _2293100_f) {
	jule::Ptr<_1b4b2d68e_StructSubIdentExprModel> _229413_model = jule::new_ptr<_1b4b2d68e_StructSubIdentExprModel>(_1b4b2d68e_StructSubIdentExprModel{._field_Token=(*(_229382_tok)), ._field_Expr=jule::new_ptr<_1b4c466a8_Data>((*((*(_229347_d))))), ._field_Field=(*(_2293100_f)), ._field_Owner=(*(_229362_s))});;
	(*((*(_229347_d))))._field_Model=jule::Any(_229413_model, &__jule_any_type98);
	(*((*(_229347_d))))._field_Kind=(*((*(_2293100_f))))._field_Kind;
	(*((*(_229347_d))))._field_Lvalue=true;
	if (((*((*((*(_2293100_f))))._field_Decl))._field_Mutable && (!((*((*(_229347_d))))._field_Mutable)))) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b4c9c500_Lookup_mptr_data0)) {
				_case_begin_1ab784980:;
				{
					jule::Ptr<_1b4b80cb8_scopeChecker> _230817_scope = _1b4b84162_getRoot((*(_self_))._field_lookup.cast_ptr<_1b4b80cb8_scopeChecker>((jule::Trait::Type*)&_1b4c9c500_Lookup_mptr_data0));;
					(*((*(_229347_d))))._field_Mutable=(((*(_230817_scope))._field_owner != nullptr) && ((*(*_230817_scope.alloc)._field_owner.alloc)._field_Owner == (*(_229362_s))));
				}
			}
			_match_end_1ab78492a:;
		};
	};
	return (*(_229347_d));;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c5eea7_evalStructSubIdent(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4c466a8_Data> _231641_d, jule::Ptr<_1b4b24641_StructIns> _231655_s, jule::Ptr<_1b4b03114_SubIdentExpr> _231674_si, jule::Bool _231693_ref) {
	jule::Ptr<_1b4b23a91_FieldIns> _231713_f = _1b4b259e9_FindField(_231655_s.ptr(), (*((*(_231674_si))._field_Ident))._field_Kind);;
	if ((_231713_f != nullptr)) {
		if ((!(_1b4bbe0d1_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*_231713_f.alloc)._field_Decl))._field_Public, (*(*_231713_f.alloc)._field_Decl.alloc)._field_Token)))) {
			_1b4c48930_pushErr(_self_, (*_231674_si.alloc)._field_Ident, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(*_231713_f.alloc)._field_Decl.alloc)._field_Ident, &__jule_any_type4)}));
			_1b4c48c93_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		};
		return _1b4c5e946_evalStructSubIdentField(_self_, &(_231641_d), &(_231655_s), &((*_231674_si.alloc)._field_Ident), &(_231713_f));;
	};
	;
	jule::Ptr<_1b4b36884_Fn> _232713_m = _1b4b256a8_FindMethod(_231655_s, (*(*_231674_si.alloc)._field_Ident.alloc)._field_Kind, false);;
	if ((_232713_m == nullptr)) {
		_1b4c48930_pushErr(_self_, (*_231674_si.alloc)._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*((*_231655_s.alloc)._field_Decl))._field_Ident, &__jule_any_type4),jule::Any((*(*_231674_si.alloc)._field_Ident.alloc)._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	if ((!(_1b4bbe0d1_isAccessibleDefine((*(_self_))._field_s, (*(_232713_m))._field_Public, (*(_232713_m))._field_Token)))) {
		_1b4c48930_pushErr(_self_, (*_231674_si.alloc)._field_Ident, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_232713_m))._field_Ident, &__jule_any_type4)}));
		_1b4c48c93_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
	};
	if ((_1b4b35762_IsRef((*(_232713_m))._field_Params[0LL].ptr()) && (!(_231693_ref)))) {
		_1b4c48930_pushErr(_self_, (*_231674_si.alloc)._field_Ident, jule::Str::lit("reference method cannot use with non-reference instance", 55), jule::Slice<jule::Any>());
	};
	_1b4c4da56_checkDeprecated(_self_, &((*(_232713_m))._field_Directives), (*_231674_si.alloc)._field_Ident);
	jule::Ptr<_1b4b39865_FnIns> _234313_ins = _1b4b380e4_instance(_232713_m);;
	(*(_234313_ins))._field_Owner=_231655_s;
	_1ab5cbae6_pushReference(_self_, &(_234313_ins));
	jule::Ptr<_1b4c466a8_Data> _234613_model = jule::new_ptr<_1b4c466a8_Data>((*(_231641_d)));;
	(*_231641_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1b4b2d68e_StructSubIdentExprModel>(_1b4b2d68e_StructSubIdentExprModel{._field_Token=(*_231674_si.alloc)._field_Ident, ._field_Expr=_234613_model, ._field_Method=_234313_ins, ._field_Owner=_231655_s}), &__jule_any_type98);
	(*_231641_d.alloc)._field_Kind=jule::new_ptr<_1b4c7c90e_TypeKind>(_1b4c7c90e_TypeKind{._field_Kind=jule::Trait(_234313_ins, (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data1)});
	return _231641_d;;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c602e8_evalIntTypeStatic(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4ad5712_Token> _235736_ident) {
	;
	{
		auto &_match_expr{ (*(_235736_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1ab7939d3:;
			{
				jule::Ptr<_1b2753508_Const> _236117_c = static__1b2753948_NewI64(_1b274d8ee_MaxI(jule::Str::lit("int", 3)));;
				(*(_236117_c))._field_Kind=jule::Str::lit("int", 3);
				return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_untyped=true, ._field_Kind=_1b4d6121d_primInt, ._field_Model=jule::Any(_236117_c, &__jule_any_type19), ._field_Constant=_236117_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1ab7944d9:;
			{
				jule::Ptr<_1b2753508_Const> _237017_c = static__1b2753948_NewI64(static_cast<jule::I64>(_1b274e009_Min(jule::Str::lit("int", 3))));;
				(*(_237017_c))._field_Kind=jule::Str::lit("int", 3);
				return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_untyped=true, ._field_Kind=_1b4d6121d_primInt, ._field_Model=jule::Any(_237017_c, &__jule_any_type19), ._field_Constant=_237017_c});;
			}
		}
		else {
			_case_begin_1ab793186:;
			{
				_1b4c48930_pushErr(_self_, _235736_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("int", 3), &__jule_any_type4),jule::Any((*(_235736_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ab79362b:;
	};
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c60639_evalUintTypeStatic(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4ad5712_Token> _238437_ident) {
	;
	{
		auto &_match_expr{ (*(_238437_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1ab7977b7:;
			{
				jule::Ptr<_1b2753508_Const> _238817_c = static__1b2753c12_NewU64(_1b274dbb8_MaxU(jule::Str::lit("uint", 4)));;
				(*(_238817_c))._field_Kind=jule::Str::lit("uint", 4);
				return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_untyped=true, ._field_Kind=_1b4d60d55_primUint, ._field_Model=jule::Any(_238817_c, &__jule_any_type19), ._field_Constant=_238817_c});;
			}
		}
		else {
			_case_begin_1ab7971ac:;
			{
				_1b4c48930_pushErr(_self_, _238437_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("uint", 4), &__jule_any_type4),jule::Any((*(_238437_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ab797410:;
	};
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c6097a_evalI8TypeStatic(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4ad5712_Token> _240235_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_240235_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1ab79a9c9:;
			{
				jule::Ptr<_1b2753508_Const> _240817_c = static__1b2753948_NewI64(127LL);;
				(*(_240817_c))._field_Kind=jule::Str::lit("i8", 2);
				return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_untyped=true, ._field_Kind=_1b4d61460_primI8, ._field_Model=jule::Any(_240817_c, &__jule_any_type19), ._field_Constant=_240817_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1ab79b4d0:;
			{
				jule::Ptr<_1b2753508_Const> _241717_c = static__1b2753948_NewI64(-128LL);;
				(*(_241717_c))._field_Kind=jule::Str::lit("i8", 2);
				return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_untyped=true, ._field_Kind=_1b4d61460_primI8, ._field_Model=jule::Any(_241717_c, &__jule_any_type19), ._field_Constant=_241717_c});;
			}
		}
		else {
			_case_begin_1ab79a226:;
			{
				_1b4c48930_pushErr(_self_, _240235_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("i8", 2), &__jule_any_type4),jule::Any((*(_240235_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ab79a644:;
	};
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c60cbb_evalI16TypeStatic(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4ad5712_Token> _243136_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_243136_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1ab79ec97:;
			{
				jule::Ptr<_1b2753508_Const> _243717_c = static__1b2753948_NewI64(32767LL);;
				(*(_243717_c))._field_Kind=jule::Str::lit("i16", 3);
				return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_untyped=true, ._field_Kind=_1b4d61707_primI16, ._field_Model=jule::Any(_243717_c, &__jule_any_type19), ._field_Constant=_243717_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1ab7a079d:;
			{
				jule::Ptr<_1b2753508_Const> _244617_c = static__1b2753948_NewI64(-32768LL);;
				(*(_244617_c))._field_Kind=jule::Str::lit("i16", 3);
				return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_untyped=true, ._field_Kind=_1b4d61707_primI16, ._field_Model=jule::Any(_244617_c, &__jule_any_type19), ._field_Constant=_244617_c});;
			}
		}
		else {
			_case_begin_1ab79e4e4:;
			{
				_1b4c48930_pushErr(_self_, _243136_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("i16", 3), &__jule_any_type4),jule::Any((*(_243136_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ab79e912:;
	};
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c6110c_evalI32TypeStatic(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4ad5712_Token> _246036_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_246036_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1ab7a4065:;
			{
				jule::Ptr<_1b2753508_Const> _246617_c = static__1b2753948_NewI64(2147483647LL);;
				(*(_246617_c))._field_Kind=jule::Str::lit("i32", 3);
				return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_untyped=true, ._field_Kind=_1b4d619b0_primI32, ._field_Model=jule::Any(_246617_c, &__jule_any_type19), ._field_Constant=_246617_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1ab7a4a6b:;
			{
				jule::Ptr<_1b2753508_Const> _247517_c = static__1b2753948_NewI64(-2147483648LL);;
				(*(_247517_c))._field_Kind=jule::Str::lit("i32", 3);
				return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_untyped=true, ._field_Kind=_1b4d619b0_primI32, ._field_Model=jule::Any(_247517_c, &__jule_any_type19), ._field_Constant=_247517_c});;
			}
		}
		else {
			_case_begin_1ab7a37b2:;
			{
				_1b4c48930_pushErr(_self_, _246036_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("i32", 3), &__jule_any_type4),jule::Any((*(_246036_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ab7a3bd0:;
	};
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c6144d_evalI64TypeStatic(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4ad5712_Token> _248936_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_248936_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1ab7a8333:;
			{
				jule::Ptr<_1b2753508_Const> _249517_c = static__1b2753948_NewI64(jule::MAX_I64);;
				(*(_249517_c))._field_Kind=jule::Str::lit("i64", 3);
				return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_untyped=true, ._field_Kind=_1b4d61c68_primI64, ._field_Model=jule::Any(_249517_c, &__jule_any_type19), ._field_Constant=_249517_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1ab7a8d39:;
			{
				jule::Ptr<_1b2753508_Const> _250417_c = static__1b2753948_NewI64(jule::MIN_I64);;
				(*(_250417_c))._field_Kind=jule::Str::lit("i64", 3);
				return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_untyped=true, ._field_Kind=_1b4d61c68_primI64, ._field_Model=jule::Any(_250417_c, &__jule_any_type19), ._field_Constant=_250417_c});;
			}
		}
		else {
			_case_begin_1ab7a7a80:;
			{
				_1b4c48930_pushErr(_self_, _248936_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("i64", 3), &__jule_any_type4),jule::Any((*(_248936_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ab7a7e9d:;
	};
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c6178e_evalU8TypeStatic(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4ad5712_Token> _251835_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_251835_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1ab7ac227:;
			{
				jule::Ptr<_1b2753508_Const> _252317_c = static__1b2753c12_NewU64(255LLU);;
				(*(_252317_c))._field_Kind=jule::Str::lit("u8", 2);
				return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_untyped=true, ._field_Kind=_1b4d62021_primU8, ._field_Model=jule::Any(_252317_c, &__jule_any_type19), ._field_Constant=_252317_c});;
			}
		}
		else {
			_case_begin_1ab7ab930:;
			{
				_1b4c48930_pushErr(_self_, _251835_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("u8", 2), &__jule_any_type4),jule::Any((*(_251835_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ab7abd2b:;
	};
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c61ad0_evalU16TypeStatic(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4ad5712_Token> _253736_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_253736_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1ab7aeea5:;
			{
				jule::Ptr<_1b2753508_Const> _254217_c = static__1b2753c12_NewU64(65535LLU);;
				(*(_254217_c))._field_Kind=jule::Str::lit("u16", 3);
				return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_untyped=true, ._field_Kind=_1b4d622c9_primU16, ._field_Model=jule::Any(_254217_c, &__jule_any_type19), ._field_Constant=_254217_c});;
			}
		}
		else {
			_case_begin_1ab7ae6ad:;
			{
				_1b4c48930_pushErr(_self_, _253736_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("u16", 3), &__jule_any_type4),jule::Any((*(_253736_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ab7aeaa9:;
	};
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c61e21_evalU32TypeStatic(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4ad5712_Token> _255636_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_255636_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1ab7b2c33:;
			{
				jule::Ptr<_1b2753508_Const> _256117_c = static__1b2753c12_NewU64(4294967295LLU);;
				(*(_256117_c))._field_Kind=jule::Str::lit("u32", 3);
				return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_untyped=true, ._field_Kind=_1b4d62582_primU32, ._field_Model=jule::Any(_256117_c, &__jule_any_type19), ._field_Constant=_256117_c});;
			}
		}
		else {
			_case_begin_1ab7b243b:;
			{
				_1b4c48930_pushErr(_self_, _255636_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("u32", 3), &__jule_any_type4),jule::Any((*(_255636_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ab7b2837:;
	};
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c62262_evalU64TypeStatic(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4ad5712_Token> _257536_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_257536_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1ab7b59b1:;
			{
				jule::Ptr<_1b2753508_Const> _258017_c = static__1b2753c12_NewU64(jule::MAX_U64);;
				(*(_258017_c))._field_Kind=jule::Str::lit("u64", 3);
				return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_untyped=true, ._field_Kind=_1b4d62a6b_primU64, ._field_Model=jule::Any(_258017_c, &__jule_any_type19), ._field_Constant=_258017_c});;
			}
		}
		else {
			_case_begin_1ab7b51b9:;
			{
				_1b4c48930_pushErr(_self_, _257536_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("u64", 3), &__jule_any_type4),jule::Any((*(_257536_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ab7b55b5:;
	};
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c625a3_evalF32TypeStatic(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4ad5712_Token> _259436_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ (*(_259436_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1ab7b8e59:;
			{
				jule::Ptr<_1b2753508_Const> _260117_c = static__1b275455e_NewF64(340282346638528860000000000000000000000.0);;
				(*(_260117_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_untyped=true, ._field_Kind=_1b4d62cad_primF32, ._field_Model=jule::Any(_260117_c, &__jule_any_type19), ._field_Constant=_260117_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1ab7b9960:;
			{
				jule::Ptr<_1b2753508_Const> _261017_c = static__1b275455e_NewF64(-340282346638528860000000000000000000000.0);;
				(*(_261017_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_untyped=true, ._field_Kind=_1b4d62cad_primF32, ._field_Model=jule::Any(_261017_c, &__jule_any_type19), ._field_Constant=_261017_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("SmallestNonZero", 15)) {
			_case_begin_1ab7b99c6:;
			{
				jule::Ptr<_1b2753508_Const> _261917_c = static__1b275455e_NewF64(0.000000000000000000000000000000000000000000001401298464324817);;
				(*(_261917_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_untyped=true, ._field_Kind=_1b4d62cad_primF32, ._field_Model=jule::Any(_261917_c, &__jule_any_type19), ._field_Constant=_261917_c});;
			}
		}
		else {
			_case_begin_1ab7b872d:;
			{
				_1b4c48930_pushErr(_self_, _259436_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("f32", 3), &__jule_any_type4),jule::Any((*(_259436_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ab7b8aa2:;
	};
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c628e4_evalF64TypeStatic(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4ad5712_Token> _263336_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ (*(_263336_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1ab7be701:;
			{
				jule::Ptr<_1b2753508_Const> _264017_c = static__1b275455e_NewF64(jule::MAX_F64);;
				(*(_264017_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_untyped=true, ._field_Kind=_1b4d62ebc_primF64, ._field_Model=jule::Any(_264017_c, &__jule_any_type19), ._field_Constant=_264017_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1ab7c0207:;
			{
				jule::Ptr<_1b2753508_Const> _264917_c = static__1b275455e_NewF64(jule::MIN_F64);;
				(*(_264917_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_untyped=true, ._field_Kind=_1b4d62ebc_primF64, ._field_Model=jule::Any(_264917_c, &__jule_any_type19), ._field_Constant=_264917_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("SmallestNonZero", 15)) {
			_case_begin_1ab7c026d:;
			{
				jule::Ptr<_1b2753508_Const> _265817_c = static__1b275455e_NewF64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);;
				(*(_265817_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_untyped=true, ._field_Kind=_1b4d62ebc_primF64, ._field_Model=jule::Any(_265817_c, &__jule_any_type19), ._field_Constant=_265817_c});;
			}
		}
		else {
			_case_begin_1ab7bdec5:;
			{
				_1b4c48930_pushErr(_self_, _263336_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("f64", 3), &__jule_any_type4),jule::Any((*(_263336_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ab7be349:;
	};
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c62ce0_evalPrimStatic(_1b4c483d0_Eval* _self_, jule::Str _267233_kind, jule::Ptr<_1b4ad5712_Token> _267244_ident) {
	{
		auto &_match_expr{ _267233_kind };
		
		if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1ab7c3ddc:;
			{
				return _1b4c602e8_evalIntTypeStatic(_self_, _267244_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4)) {
			_case_begin_1ab7c488d:;
			{
				return _1b4c60639_evalUintTypeStatic(_self_, _267244_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1ab7c4904:;
			{
				return _1b4c6097a_evalI8TypeStatic(_self_, _267244_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1ab7c3abd:;
			{
				return _1b4c60cbb_evalI16TypeStatic(_self_, _267244_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1ab7c3b34:;
			{
				return _1b4c6110c_evalI32TypeStatic(_self_, _267244_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1ab7c3b9a:;
			{
				return _1b4c6144d_evalI64TypeStatic(_self_, _267244_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1ab7c3c11:;
			{
				return _1b4c6178e_evalU8TypeStatic(_self_, _267244_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1ab7c49e2:;
			{
				return _1b4c61ad0_evalU16TypeStatic(_self_, _267244_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1ab7c4a58:;
			{
				return _1b4c61e21_evalU32TypeStatic(_self_, _267244_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1ab7c4abe:;
			{
				return _1b4c62262_evalU64TypeStatic(_self_, _267244_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1ab7c4b35:;
			{
				return _1b4c625a3_evalF32TypeStatic(_self_, _267244_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1ab7c4b9b:;
			{
				return _1b4c628e4_evalF64TypeStatic(_self_, _267244_ident);;
			}
		}
		else {
			_case_begin_1ab7c0449:;
			{
				_1b4c48930_pushErr(_self_, _267244_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_267233_kind, &__jule_any_type4),jule::Any((*(_267244_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ab7c04c1:;
	};
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c631db_evalTypeStatic(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4c466a8_Data> _270437_d, jule::Ptr<_1b4b03114_SubIdentExpr> _270451_si) {
	{
		
		if ((_1b4c80060_Prim((*(_270437_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab7c908a:;
			{
				return _1b4c62ce0_evalPrimStatic(_self_, _1b4c85829_Str(_1b4c80060_Prim((*_270437_d.alloc)._field_Kind).ptr()), (*(_270451_si))._field_Ident);;
			}
		}
		else if ((_1b4c80813_Enum((*(_270437_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab7c9d8d:;
			{
				return _1b4c5d637_evalEnumStatic(_self_, _1b4c80813_Enum((*_270437_d.alloc)._field_Kind), (*(_270451_si))._field_Ident);;
			}
		}
		else if ((_1b4c80a99_TypeEnum((*(_270437_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab7c9e04:;
			{
				return _1b4c5da33_evalTypeEnumStatic(_self_, _1b4c80a99_TypeEnum((*_270437_d.alloc)._field_Kind), (*(_270451_si))._field_Ident);;
			}
		}
		else if ((_1b4c815d3_Struct((*(_270437_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab7c8c38:;
			{
				return _1b4c5de2e_evalStructStatic(_self_, _1b4c815d3_Struct((*_270437_d.alloc)._field_Kind), (*(_270451_si))._field_Ident);;
			}
		}
		else {
			_case_begin_1ab7c8bc2:;
			{
				_1b4c48930_pushErr(_self_, (*(_270451_si))._field_Ident, jule::Str::lit("type @ is not supports sub-defines", 34), jule::Slice<jule::Any>::make({jule::Any(_1b4c7ccc7_Str((*(_270437_d))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ab7c8b17:;
	};
}



inline jule::Ptr<_1b4c466a8_Data> _1ab7d1b97_comptimeObjSubIdent(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4b615d4_comptimeTypeInfo>* _272057_ct, jule::Ptr<_1b4c466a8_Data>* _272077_d, jule::Ptr<_1b4b03114_SubIdentExpr>* _272088_si) {
	jule::Ptr<_1b4c466a8_Data> _272113_cd = _1b4b677d8_subIdent((*(_272057_ct)), &((*((*((*(_272088_si))))._field_Ident))._field_Kind));;
	if ((_272113_cd == nullptr)) {
		_1b4c48930_pushErr(_self_, (*((*(_272088_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1b4c7ccc7_Str((*((*(_272077_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*(*((*(_272088_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4)}));
	};
	return _272113_cd;;
}

inline jule::Ptr<_1b4c466a8_Data> _1ab7d62ea_comptimeObjSubIdent(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4b5277e_comptimeStructField>* _272057_ct, jule::Ptr<_1b4c466a8_Data>* _272077_d, jule::Ptr<_1b4b03114_SubIdentExpr>* _272088_si) {
	jule::Ptr<_1b4c466a8_Data> _272113_cd = _1b4b54132_subIdent((*(_272057_ct)), &((*((*((*(_272088_si))))._field_Ident))._field_Kind));;
	if ((_272113_cd == nullptr)) {
		_1b4c48930_pushErr(_self_, (*((*(_272088_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1b4c7ccc7_Str((*((*(_272077_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*(*((*(_272088_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4)}));
	};
	return _272113_cd;;
}

inline jule::Ptr<_1b4c466a8_Data> _1ab7da909_comptimeObjSubIdent(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4b58ce6_comptimeEnumField>* _272057_ct, jule::Ptr<_1b4c466a8_Data>* _272077_d, jule::Ptr<_1b4b03114_SubIdentExpr>* _272088_si) {
	jule::Ptr<_1b4c466a8_Data> _272113_cd = _1b4b59d80_subIdent((*(_272057_ct)), &((*((*((*(_272088_si))))._field_Ident))._field_Kind));;
	if ((_272113_cd == nullptr)) {
		_1b4c48930_pushErr(_self_, (*((*(_272088_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1b4c7ccc7_Str((*((*(_272077_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*(*((*(_272088_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4)}));
	};
	return _272113_cd;;
}

inline jule::Ptr<_1b4c466a8_Data> _1ab7e005c_comptimeObjSubIdent(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4b5b788_comptimeParam>* _272057_ct, jule::Ptr<_1b4c466a8_Data>* _272077_d, jule::Ptr<_1b4b03114_SubIdentExpr>* _272088_si) {
	jule::Ptr<_1b4c466a8_Data> _272113_cd = _1b4b5d6e1_subIdent((*(_272057_ct)), &((*((*((*(_272088_si))))._field_Ident))._field_Kind));;
	if ((_272113_cd == nullptr)) {
		_1b4c48930_pushErr(_self_, (*((*(_272088_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1b4c7ccc7_Str((*((*(_272077_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*(*((*(_272088_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4)}));
	};
	return _272113_cd;;
}

inline jule::Ptr<_1b4c466a8_Data> _1ab7e47ae_comptimeObjSubIdent(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4b55a3a_comptimeStatic>* _272057_ct, jule::Ptr<_1b4c466a8_Data>* _272077_d, jule::Ptr<_1b4b03114_SubIdentExpr>* _272088_si) {
	jule::Ptr<_1b4c466a8_Data> _272113_cd = _1b4b57465_subIdent((*(_272057_ct)), &((*((*((*(_272088_si))))._field_Ident))._field_Kind));;
	if ((_272113_cd == nullptr)) {
		_1b4c48930_pushErr(_self_, (*((*(_272088_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1b4c7ccc7_Str((*((*(_272077_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*(*((*(_272088_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4)}));
	};
	return _272113_cd;;
}

inline jule::Ptr<_1b4c466a8_Data> _1ab7e8dbd_comptimeObjSubIdent(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4b67ae6_comptimeValue>* _272057_ct, jule::Ptr<_1b4c466a8_Data>* _272077_d, jule::Ptr<_1b4b03114_SubIdentExpr>* _272088_si) {
	jule::Ptr<_1b4c466a8_Data> _272113_cd = _1b4b6a137_subIdent((*(_272057_ct)), &((*((*((*(_272088_si))))._field_Ident))._field_Kind));;
	if ((_272113_cd == nullptr)) {
		_1b4c48930_pushErr(_self_, (*((*(_272088_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1b4c7ccc7_Str((*((*(_272077_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*(*((*(_272088_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4)}));
	};
	return _272113_cd;;
}

inline jule::Ptr<_1b4c466a8_Data> _1ab7ed4cc_comptimeObjSubIdent(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4b6ba40_comptimeFile>* _272057_ct, jule::Ptr<_1b4c466a8_Data>* _272077_d, jule::Ptr<_1b4b03114_SubIdentExpr>* _272088_si) {
	jule::Ptr<_1b4c466a8_Data> _272113_cd = _1b4b6d47b_subIdent((*(_272057_ct)), &((*((*((*(_272088_si))))._field_Ident))._field_Kind));;
	if ((_272113_cd == nullptr)) {
		_1b4c48930_pushErr(_self_, (*((*(_272088_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1b4c7ccc7_Str((*((*(_272077_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*(*((*(_272088_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4)}));
	};
	return _272113_cd;;
}



inline __jule_tuple_x_1b4c466a8_Data__jule_tuple_bool _1b4c63a8d_tryComptimeObjSubIdent(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4c466a8_Data>* _272846_d, jule::Ptr<_1b4b03114_SubIdentExpr> _272860_si) {
	__jule_tuple_x_1b4c466a8_Data__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if ((_1b4c83926_comptimeTypeInfo((*((*(_272846_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab7d00b3:;
			{
				jule::Ptr<_1b4b615d4_comptimeTypeInfo> _273117_ct = _1b4c83926_comptimeTypeInfo((*((*(_272846_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1ab7d1b97_comptimeObjSubIdent(_self_, &(_273117_ct), _272846_d, &(_272860_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1b4c82639_comptimeStructField((*((*(_272846_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab7ceba6:;
			{
				jule::Ptr<_1b4b5277e_comptimeStructField> _273417_ct = _1b4c82639_comptimeStructField((*((*(_272846_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1ab7d62ea_comptimeObjSubIdent(_self_, &(_273417_ct), _272846_d, &(_272860_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1b4c82b56_comptimeEnumField((*((*(_272846_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab7cec2d:;
			{
				jule::Ptr<_1b4b58ce6_comptimeEnumField> _273717_ct = _1b4c82b56_comptimeEnumField((*((*(_272846_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1ab7da909_comptimeObjSubIdent(_self_, &(_273717_ct), _272846_d, &(_272860_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1b4c83173_comptimeParam((*((*(_272846_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab7ceca5:;
			{
				jule::Ptr<_1b4b5b788_comptimeParam> _274017_ct = _1b4c83173_comptimeParam((*((*(_272846_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1ab7e005c_comptimeObjSubIdent(_self_, &(_274017_ct), _272846_d, &(_272860_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1b4c83e43_comptimeStatic((*((*(_272846_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab7ced2c:;
			{
				jule::Ptr<_1b4b55a3a_comptimeStatic> _274317_ct = _1b4c83e43_comptimeStatic((*((*(_272846_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1ab7e47ae_comptimeObjSubIdent(_self_, &(_274317_ct), _272846_d, &(_272860_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1b4c841c9_comptimeValue((*((*(_272846_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab7ceda4:;
			{
				jule::Ptr<_1b4b67ae6_comptimeValue> _274617_ct = _1b4c841c9_comptimeValue((*((*(_272846_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1ab7e8dbd_comptimeObjSubIdent(_self_, &(_274617_ct), _272846_d, &(_272860_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1b4c84460_comptimeFile((*((*(_272846_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab7cee2b:;
			{
				jule::Ptr<_1b4b6ba40_comptimeFile> _274917_ct = _1b4c84460_comptimeFile((*((*(_272846_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1ab7ed4cc_comptimeObjSubIdent(_self_, &(_274917_ct), _272846_d, &(_272860_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1ab7ceb40:;
			{
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		_match_end_1ab7cea96:;
	};
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c63e89_evalObjSubIdent(_1b4c483d0_Eval* _self_, jule::Ptr<_1b4c466a8_Data> _275638_d, jule::Ptr<_1b4b03114_SubIdentExpr> _275652_si) {
	if (_1b4ad80e9_IsIgnoreIdent((*((*(_275652_si))._field_Ident))._field_Kind)) {
		_1b4c48930_pushErr(_self_, (*_275652_si.alloc)._field_Ident, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		jule::Ptr<_1b4c466a8_Data> _276317_compData;
		jule::Bool _276327_ok;
		({
			__jule_tuple_x_1b4c466a8_Data__jule_tuple_bool __jule_assign_result = _1b4c63a8d_tryComptimeObjSubIdent(_self_, &(_275638_d), _275652_si);
			_276317_compData = __jule_assign_result.__jule_result_arg0;
			_276327_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_276327_ok) {
			return _276317_compData;;
		};
	};
	jule::Ptr<_1b4c7c90e_TypeKind> _276913_kind = (*(_275638_d))._field_Kind;;
	{
		
		if ((_1b4c8057c_Ptr((*_275638_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab803636:;
			{
				jule::Ptr<_1b4c8c7cb_Ptr> _277213_ptr = _1b4c8057c_Ptr((*_275638_d.alloc)._field_Kind);;
				if (_1b4c8d315_IsUnsafe(_277213_ptr.ptr())) {
					goto _match_end_1ab80358c;
				};
				if ((!(_1b4c49425_isUnsafe(_self_)))) {
					_1b4c48930_pushErr(_self_, (*_275652_si.alloc)._field_Ident, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
				};
				_276913_kind=(*(_1b4c8057c_Ptr((*_275638_d.alloc)._field_Kind)))._field_Elem;
				_1b4c79400_makeImplicitDeref(&(_275638_d), (*_275652_si.alloc)._field_Ident);
			}
		}
		else if ((_1b4c802e6_Sptr((*_275638_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab8036d0:;
			{
				_276913_kind=(*(_1b4c802e6_Sptr((*_275638_d.alloc)._field_Kind)))._field_Elem;
				_1b4c79400_makeImplicitDeref(&(_275638_d), (*_275652_si.alloc)._field_Ident);
			}
		}
		_match_end_1ab80358c:;
	};
	{
		
		if ((_1b4c81869_Trait((*_275638_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab803b42:;
			{
				return _1b4c5e3d5_evalTraitSubIdent(_self_, _275638_d, _1b4c81869_Trait((*_275638_d.alloc)._field_Kind), (*_275652_si.alloc)._field_Ident);;
			}
		}
		else if ((_1b4c815d3_Struct(_276913_kind.ptr()) != nullptr)) {
			_case_begin_1ab806ccc:;
			{
				jule::Ptr<_1b4b24641_StructIns> _279013_s = _1b4c815d3_Struct(_276913_kind);;
				if (_1b4c76672_isInstancedStruct(_279013_s)) {
					jule::Bool _279221_usedReferenceElem = (_1b4c802e6_Sptr((*_275638_d.alloc)._field_Kind.ptr()) != nullptr);;
					return _1b4c5eea7_evalStructSubIdent(_self_, _275638_d, _1b4c815d3_Struct(_276913_kind), _275652_si, _279221_usedReferenceElem);;
				};
			}
		}
		_match_end_1ab8071a6:;
	};
	_1b4c48930_pushErr(_self_, (*_275652_si.alloc)._field_Ident, jule::Str::lit("object @ is not supports sub-defines", 36), jule::Slice<jule::Any>::make({jule::Any(_1b4c7ccc7_Str((*_275638_d.alloc)._field_Kind.ptr()), &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c642ca_evalSubIdent(jule::Ptr<_1b4c483d0_Eval> _self_, jule::Ptr<_1b4b03114_SubIdentExpr> _280036_si) {
	jule::Ptr<_1b4c7c90e_TypeKind> _280113_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_280113_prefix;
	});;
	jule::Ptr<_1b4c466a8_Data> _280413_d = _1b4c6582b_evalExprKind(_self_, (*((*(_280036_si))._field_Expr))._field_Kind);;
	if ((_280413_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_280413_d))._field_Decl) {
		return _1b4c631db_evalTypeStatic(_self_, _280413_d, _280036_si);;
	};
	return _1b4c63e89_evalObjSubIdent(_self_, _280413_d, _280036_si);;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c6461b_evalTuple(jule::Ptr<_1b4c483d0_Eval> _self_, jule::Ptr<_1b4b00ae5_TupleExpr> _281433_tup) {
	jule::Ptr<_1b4c8a5cb_Tuple> _281513_tupT = jule::new_ptr<_1b4c8a5cb_Tuple>();;
	(*_281513_tupT.alloc)._field_Types=jule::Slice<jule::Ptr<_1b4c7c90e_TypeKind>>::alloc(0LL, (*(_281433_tup))._field_Expr.len());
	jule::Ptr<_1b4b2e20b_TupleExprModel> _281813_model = jule::new_ptr<_1b4b2e20b_TupleExprModel>(_1b4b2e20b_TupleExprModel{._field_Datas=jule::Slice<jule::Ptr<_1b4c466a8_Data>>::alloc(0LL, (*_281433_tup.alloc)._field_Expr.len())});;
	jule::Bool _282213_ok = true;;
	{
		auto expr = &((*_281433_tup.alloc)._field_Expr);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab8119eb:;
		if (it != expr_end) {
			jule::Ptr<_1b4b00001_Expr> _282321_expr = *it;
			{
				jule::Ptr<_1b4c466a8_Data> _282417_d = _1b4c6b49c_evalExpr(_self_, _282321_expr);;
				if ((_282417_d == nullptr)) {
					_282213_ok=false;
					goto _iter_next_1ab8119eb;
				};
				(*_281513_tupT.alloc)._field_Types=jule::append((*_281513_tupT.alloc)._field_Types,jule::Slice<jule::Ptr<_1b4c7c90e_TypeKind>>::make({(*(_282417_d))._field_Kind}));
				(*(_281813_model))._field_Datas=jule::append((*_281813_model.alloc)._field_Datas,jule::Slice<jule::Ptr<_1b4c466a8_Data>>::make({_282417_d}));
			}
			_iter_next_1ab8119eb:;
			++it;
			goto _iter_begin_1ab8119eb;
		}
		_iter_end_1ab8119eb:;
	};
	if ((!(_282213_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=jule::new_ptr<_1b4c7c90e_TypeKind>(_1b4c7c90e_TypeKind{._field_Kind=jule::Trait(_281513_tupT, (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data23)}), ._field_Model=jule::Any(_281813_model, &__jule_any_type81), });;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c64a17_evalMap(jule::Ptr<_1b4c483d0_Eval> _self_, jule::Ptr<_1b4c8b17b_Map> _284331_m, jule::Ptr<_1b4b05501_BraceLit> _284344_lit) {
	jule::Ptr<_1b4b2c1d7_MapExprModel> _284413_model = jule::new_ptr<_1b4b2c1d7_MapExprModel>(_1b4b2c1d7_MapExprModel{._field_KeyKind=(*(_284331_m))._field_Key, ._field_ValKind=(*_284331_m.alloc)._field_Val, });;
	{
		auto expr = &((*(_284344_lit))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab81578b:;
		if (it != expr_end) {
			jule::Ptr<_1b4b00001_Expr> _284921_expr = *it;
			{
				{
					auto &_match_expr{ (*(_284921_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type78) {
						_case_begin_1ab816d31:;
						{
							goto _match_end_1ab816182;
						}
					}
					else {
						_case_begin_1ab8161d7:;
						{
							_1b4c48930_pushErr(_self_.ptr(), (*(_284344_lit))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							return nullptr;;
						}
					}
					_match_end_1ab816182:;
				};
				jule::Ptr<_1b4b05d2b_KeyValPair> _285917_pair = (*(_284921_expr))._field_Kind.cast_ptr<_1b4b05d2b_KeyValPair>(&__jule_any_type78);;
				jule::Ptr<_1b4c466a8_Data> _286117_key = _1b4c6b49c_evalExpr(_self_, (*(_285917_pair))._field_Key);;
				if ((_286117_key == nullptr)) {
					return nullptr;;
				};
				jule::Ptr<_1b4c466a8_Data> _286617_val = _1b4c6b49c_evalExpr(_self_, (*_285917_pair.alloc)._field_Val);;
				if ((_286617_val == nullptr)) {
					return nullptr;;
				};
				;
				if (_1b4bca719_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*_284331_m.alloc)._field_Key), &(_286117_key), &((*((*_285917_pair.alloc)._field_Key))._field_Token))) {
					_1b4bc6380_checkAssignType((*_self_.alloc)._field_s, false, &((*_284331_m.alloc)._field_Key), &(_286117_key), (*(*_285917_pair.alloc)._field_Key.alloc)._field_Token);
				};
				if (_1b4bca719_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*_284331_m.alloc)._field_Val), &(_286617_val), &((*((*_285917_pair.alloc)._field_Val))._field_Token))) {
					_1b4bc6380_checkAssignType((*_self_.alloc)._field_s, false, &((*_284331_m.alloc)._field_Val), &(_286617_val), (*(*_285917_pair.alloc)._field_Val.alloc)._field_Token);
				};
				(*(_284413_model))._field_Entries=jule::append((*_284413_model.alloc)._field_Entries,jule::Slice<jule::Ptr<_1b4b2bc31_KeyValPairExprModel>>::make({jule::new_ptr<_1b4b2bc31_KeyValPairExprModel>(_1b4b2bc31_KeyValPairExprModel{._field_Key=(*(_286117_key))._field_Model, ._field_Val=(*(_286617_val))._field_Model})}));
			}
			_iter_next_1ab81578b:;
			++it;
			goto _iter_begin_1ab81578b;
		}
		_iter_end_1ab81578b:;
	};
	return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=jule::new_ptr<_1b4c7c90e_TypeKind>(_1b4c7c90e_TypeKind{._field_Kind=jule::Trait(_284331_m, (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data24)}), ._field_Mutable=true, ._field_Model=jule::Any(_284413_model, &__jule_any_type99), });;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c64d58_evalBraceLit(jule::Ptr<_1b4c483d0_Eval> _self_, jule::Ptr<_1b4b05501_BraceLit> _289236_lit) {
	{
		
		if (((*(_self_))._field_prefix == nullptr)) {
			_case_begin_1ab820400:;
			{
				_1b4c48930_pushErr(_self_, (*(_289236_lit))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1b4c81b00_Map((*(_self_))._field_prefix.ptr()) != nullptr)) {
			_case_begin_1ab820466:;
			{
				return _1b4c64a17_evalMap(_self_, _1b4c81b00_Map((*_self_.alloc)._field_prefix), _289236_lit);;
			}
		}
		else if ((_1b4c815d3_Struct((*(_self_))._field_prefix.ptr()) != nullptr)) {
			_case_begin_1ab8204cc:;
			{
				return _1b4c5b217_evalStructLitExplicit(_self_, _1b4c815d3_Struct((*_self_.alloc)._field_prefix), (*(_289236_lit))._field_Exprs, (*_289236_lit.alloc)._field_Token);;
			}
		}
		else {
			_case_begin_1ab81e762:;
			{
				_1b4c48930_pushErr(_self_.ptr(), (*(_289236_lit))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ab81da4c:;
	};
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c65199_evalAnonFunc(jule::Ptr<_1b4c483d0_Eval> _self_, jule::Ptr<_1b4b126d9_FnDecl> _290736_decl) {
	_1b4c8e7bc_typeChecker _290813_tc = _1b4c8e7bc_typeChecker{._field_s=(*(_self_))._field_s, ._field_rootLookup=(*_self_.alloc)._field_lookup, ._field_lookup=(*_self_.alloc)._field_lookup, };;
	jule::Ptr<_1b4b39865_FnIns> _291313_ins = _1b4c96494_buildFunc(&_290813_tc, _290736_decl);;
	if ((_291313_ins == nullptr)) {
		return nullptr;;
	};
	(*(_291313_ins))._field_AsAnon=true;
	jule::Slice<jule::Ptr<_1b4bddaa1_Var>> _291813_captured = jule::Slice<jule::Ptr<_1b4bddaa1_Var>>::alloc(0LL, 0LL);;
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b4c9c500_Lookup_mptr_data0)) {
			_case_begin_1ab829a7a:;
			{
				jule::Ptr<_1b4b80cb8_scopeChecker> _292117_sc = (*_self_.alloc)._field_lookup.cast_ptr<_1b4b80cb8_scopeChecker>((jule::Trait::Type*)&_1b4c9c500_Lookup_mptr_data0);;
				jule::Ptr<_1b4b80cb8_scopeChecker> _292217_scc = _1b4b92d52_newChildChecker(_292117_sc);;
				(*(_292217_scc))._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1b4b7e745_scopeLabel>>>(nullptr);
				(*_292217_scc.alloc)._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1b4b7ecc8_scopeGoto>>>(nullptr);
				(*_292217_scc.alloc)._field_owner=_291313_ins;
				(*_292217_scc.alloc)._field_childIndex=0LL;
				(*_292217_scc.alloc)._field_it=0LLU;
				(*_292217_scc.alloc)._field_cse=0LLU;
				(*_292217_scc.alloc)._field_captured=((jule::Ptr<jule::Slice<jule::Ptr<_1b4bddaa1_Var>>>)((&(_291813_captured))));
				_1b4bd87e3_checkFnInsSc((*_self_.alloc)._field_s.ptr(), &(_291313_ins), &(_292217_scc));
			}
		}
		else {
			_case_begin_1ab82aa37:;
			{
				_1b4bd8e0e_checkFnIns((*_self_.alloc)._field_s, &(_291313_ins));
			}
		}
		_match_end_1ab82a9d2:;
	};
	return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=jule::new_ptr<_1b4c7c90e_TypeKind>(_1b4c7c90e_TypeKind{._field_Kind=jule::Trait(_291313_ins, (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data1)}), ._field_Model=jule::Any(jule::new_ptr<_1b4b2b857_AnonFnExprModel>(_1b4b2b857_AnonFnExprModel{._field_Captured=_291813_captured, ._field_Func=_291313_ins, ._field_Global=_1b4c496ab_isGlobal(_self_)}), &__jule_any_type100), });;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c654da_evalBinary(jule::Ptr<_1b4c483d0_Eval> _self_, jule::Ptr<_1b4b035ba_BinaryExpr> _294534_op) {
	_1b4c6d900_binaryEval _294613_bs = static__1b4c6dea5_newPlain(_self_);;
	if (((*(_self_))._field_prefix != nullptr)) {
		jule::Ptr<_1b4c854d8_Prim> _294913_prim = _1b4c80060_Prim((*_self_.alloc)._field_prefix);;
		if (((_294913_prim == nullptr) || (!(_1b2752e64_IsNum(_1b4c85829_Str(_294913_prim.ptr())))))) {
			jule::Ptr<_1b4c7c90e_TypeKind> _295121_prefix = (*_self_.alloc)._field_prefix;;
			(*_self_.alloc)._field_prefix=nullptr;
			__JULE_DEFER({
				(*_self_.alloc)._field_prefix=_295121_prefix;
			});;
			return _1b4c7497d_eval(&_294613_bs, &(_294534_op));;
		};
	};
	return _1b4c7497d_eval(&_294613_bs, &(_294534_op));;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c6582b_evalExprKind(jule::Ptr<_1b4c483d0_Eval> _self_, jule::Any _296036_kind) {
	{
		auto &_match_expr{ _296036_kind };
		
		if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1ab834227:;
			{
				jule::Ptr<_1b4b002ba_RangeExpr> _296317_e = _296036_kind.unsafe_cast_ptr<_1b4b002ba_RangeExpr>();;
				return _1b4c6582b_evalExprKind(_self_, (*((*(_296317_e))._field_Expr))._field_Kind);;
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1ab834458:;
			{
				return _1b4c4ae60_evalLit(_self_.ptr(), _296036_kind.unsafe_cast_ptr<_1b4b00e8b_LitExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1ab8344be:;
			{
				return _1b4c50b9b_evalIdent(_self_.ptr(), _296036_kind.unsafe_cast_ptr<_1b4b0181b_IdentExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1ab834535:;
			{
				return _1b4c50edc_evalUnary(_self_, _296036_kind.unsafe_cast_ptr<_1b4b020ad_UnaryExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1ab83459b:;
			{
				return _1b4c5132d_evalVariadic(_self_, _296036_kind.unsafe_cast_ptr<_1b4b02487_VariadicExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1ab834612:;
			{
				return _1b4c5166e_evalUnsafe(_self_, _296036_kind.unsafe_cast_ptr<_1b4b01365_UnsafeExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1ab834678:;
			{
				return _1b4c522a7_evalSliceExpr(_self_, _296036_kind.unsafe_cast_ptr<_1b4b06557_SliceExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type104) {
			_case_begin_1ab834a30:;
			{
				return _1b4c5594d_evalIndexing(_self_, _296036_kind.unsafe_cast_ptr<_1b4b06eb4_IndexingExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type105) {
			_case_begin_1ab834a96:;
			{
				return _1b4c56c7e_evalSlicing(_self_, _296036_kind.unsafe_cast_ptr<_1b4b07624_SlicingExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type106) {
			_case_begin_1ab834b0c:;
			{
				return _1b4c5a920_evalCast(_self_, _296036_kind.unsafe_cast_ptr<_1b4b02861_CastExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1ab834b73:;
			{
				return _1b4c5ac61_evalNsSelection(_self_.ptr(), _296036_kind.unsafe_cast_ptr<_1b4b02c3a_NsSelectionExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type107) {
			_case_begin_1ab834bea:;
			{
				return _1b4c5b558_evalStructLit(_self_, _296036_kind.unsafe_cast_ptr<_1b4b0504a_StructLit>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1ab834c72:;
			{
				return _1b4c5bb30_evalType(_self_.ptr(), _296036_kind.unsafe_cast_ptr<_1b4aeabbc_TypeDecl>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1ab834ce9:;
			{
				return _1b4c5d23b_evalFnCall(_self_, _296036_kind.unsafe_cast_ptr<_1b4b03c2a_FnCallExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1ab834d71:;
			{
				return _1b4c642ca_evalSubIdent(_self_, _296036_kind.unsafe_cast_ptr<_1b4b03114_SubIdentExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1ab834de8:;
			{
				return _1b4c6461b_evalTuple(_self_, _296036_kind.unsafe_cast_ptr<_1b4b00ae5_TupleExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type108) {
			_case_begin_1ab834e70:;
			{
				return _1b4c64d58_evalBraceLit(_self_, _296036_kind.unsafe_cast_ptr<_1b4b05501_BraceLit>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1ab834ee7:;
			{
				return _1b4c65199_evalAnonFunc(_self_, _296036_kind.unsafe_cast_ptr<_1b4b126d9_FnDecl>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type109) {
			_case_begin_1ab83506e:;
			{
				return _1b4c654da_evalBinary(_self_, _296036_kind.unsafe_cast_ptr<_1b4b035ba_BinaryExpr>());;
			}
		}
		else {
			_case_begin_1ab8343e2:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab83438c:;
	};
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c65b6c_eval1(jule::Ptr<_1b4c483d0_Eval> _self_, jule::Ptr<_1b4b00001_Expr> _300829_expr) {
	jule::Ptr<_1b4c466a8_Data> _300913_d = _1b4c6582b_evalExprKind(_self_, (*(_300829_expr))._field_Kind);;
	if (((_300913_d == nullptr) || ((*(_300913_d))._field_Kind == nullptr))) {
		return nullptr;;
	};
	{
		
		if ((_1b4c8134c_Fn((*(_300913_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab8414ba:;
			{
				jule::Ptr<_1b4b39865_FnIns> _301617_f = _1b4c8134c_Fn((*(_300913_d))._field_Kind.ptr());;
				if (_1b4b3acea_IsBuiltin(_301617_f.ptr())) {
					_1b4bbd872_pushErr((*_self_.alloc)._field_s.ptr(), (*_300829_expr.alloc)._field_Token, jule::Str::lit("built-in functions should be invoked", 36), jule::Slice<jule::Any>());
					goto _match_end_1ab840ab3;
				};
				if (((*_301617_f.alloc)._field_Generics.len() != (*((*_301617_f.alloc)._field_Decl))._field_Generics.len())) {
					_1b4bbd872_pushErr((*_self_.alloc)._field_s, (*_300829_expr.alloc)._field_Token, jule::Str::lit("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
				} else if (((!((*((*_301617_f.alloc)._field_Decl))._field_Statically)) && _1b4b3708d_IsMethod((*_301617_f.alloc)._field_Decl))) {
					_1b4bbd872_pushErr((*_self_.alloc)._field_s, (*_300829_expr.alloc)._field_Token, jule::Str::lit("methods should be invoked", 25), jule::Slice<jule::Any>());
				} else {
					(*_301617_f.alloc)._field_AsAnon=true;
				};
			}
		}
		_match_end_1ab840ab3:;
	};
	return _300913_d;;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c6ad1a_eval(jule::Ptr<_1b4c483d0_Eval> _self_, jule::Ptr<_1b4b00001_Expr> _303628_expr) {
	jule::Ptr<_1b4c466a8_Data> _303713_d = _1b4c65b6c_eval1(_self_, _303628_expr);;
	if ((_303713_d == nullptr)) {
		return nullptr;;
	};
	if (((((*_self_.alloc)._field_owner == nullptr) || (!((*((*_self_.alloc)._field_owner))._field_Constant))) && _1b4c8211c_comptime((*(_303713_d))._field_Kind.ptr()))) {
		_1b4bbd872_pushErr((*_self_.alloc)._field_s.ptr(), (*(_303628_expr))._field_Token, jule::Str::lit("compile-time evaluations cannot used as expression", 50), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _303713_d;;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c6b15b_evalExpr1(jule::Ptr<_1b4c483d0_Eval> _self_, jule::Ptr<_1b4b00001_Expr> _305133_expr) {
	jule::Ptr<_1b4c466a8_Data> _305213_d = _1b4c65b6c_eval1(_self_, _305133_expr);;
	{
		
		if ((_305213_d == nullptr)) {
			_case_begin_1ab8496d2:;
			{
				return nullptr;;
			}
		}
		else if ((*(_305213_d))._field_Decl) {
			_case_begin_1ab84977b:;
			{
				_1b4c48930_pushErr(_self_, (*(_305133_expr))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1ab84965a:;
			{
				return _305213_d;;
			}
		}
		_match_end_1ab8495e4:;
	};
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c6b49c_evalExpr(jule::Ptr<_1b4c483d0_Eval> _self_, jule::Ptr<_1b4b00001_Expr> _306732_expr) {
	jule::Ptr<_1b4c466a8_Data> _306813_d = _1b4c6ad1a_eval(_self_, _306732_expr);;
	{
		
		if ((_306813_d == nullptr)) {
			_case_begin_1ab84b5c4:;
			{
				return nullptr;;
			}
		}
		else if ((*(_306813_d))._field_Decl) {
			_case_begin_1ab84b66d:;
			{
				_1b4c48930_pushErr(_self_, (*(_306732_expr))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1ab84b54c:;
			{
				return _306813_d;;
			}
		}
		_match_end_1ab84b4d6:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1b4c483d0_Eval _Src) {
	_Stream << "Eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "immutable:" << _Src._field_immutable << ", ";
	_Stream << "ignored:" << _Src._field_ignored << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "arg:" << _Src._field_arg;
	_Stream << "}";
	return _Stream;
}



inline _1b4c6b964_unaryEval static__1b4c6bda4_new(jule::Ptr<_1b4c483d0_Eval> _308823_e) {
	return _1b4c6b964_unaryEval{._field_e=_308823_e, };;
}



inline void _1b4c6c0a2_minus(_1b4c6b964_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_1ab84d2c9:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1b4c80060_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab84d6b4:;
			{
				if ((!(_1b2752e64_IsNum(_1b4c7ccc7_Str((*(*(_self_))._field_d.alloc)._field_Kind))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1b4c815d3_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab84ce88:;
			{
				if (((*(_1b4c815d3_Struct((*(*(_self_))._field_d.alloc)._field_Kind)))._field_Operators._field_Neg == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1ab84ce22:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1ab84cd67:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1b4c470b0_IsConst((*(_self_))._field_d)) {
		{
			
			if (_1b2758013_IsF64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1ab8529c6:;
				{
					_1b2757045_SetF64((*(*(_self_))._field_d.alloc)._field_Constant, (-(_1b2755917_ReadF64((*(*(_self_))._field_d.alloc)._field_Constant))));
				}
			}
			else if (_1b27574c9_IsI64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1ab852ab4:;
				{
					_1b2756473_SetI64((*(*(_self_))._field_d.alloc)._field_Constant, (-(_1b2754dcd_ReadI64((*(*(_self_))._field_d.alloc)._field_Constant))));
				}
			}
			else if (_1b2757760_IsU64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1ab852685:;
				{
					_1b2756473_SetI64((*(*(_self_))._field_d.alloc)._field_Constant, (-(_1b2755b9d_AsI64((*(*(_self_))._field_d.alloc)._field_Constant))));
				}
			}
			else {
				_case_begin_1ab85260d:;
				{
					jule::panic(jule::Str::lit("unimplemented constant type for unary.minus, this panic call should be unreachable", 82) + jule::Str("\nlocation: std/jule/sema/eval.jule:3126:17"));;
				}
			}
			_match_end_1ab852564:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1b4b28e1a_UnaryExprModel>(_1b4b28e1a_UnaryExprModel{._field_Expr=jule::new_ptr<_1b4c466a8_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
}



inline void _1b4c6c2a0_plus(_1b4c6b964_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_1ab857ed7:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1b4c80060_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab8583c2:;
			{
				if ((!(_1b2752e64_IsNum(_1b4c7ccc7_Str((*(*(_self_))._field_d.alloc)._field_Kind))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1b4c815d3_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab857b96:;
			{
				if (((*(_1b4c815d3_Struct((*(*(_self_))._field_d.alloc)._field_Kind)))._field_Operators._field_Pos == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1ab857b30:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1ab857a31:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1b4c470b0_IsConst((*(_self_))._field_d)) {
		{
			
			if (_1b2758013_IsF64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1ab85c6d4:;
				{
					_1b2757045_SetF64((*(*(_self_))._field_d.alloc)._field_Constant, (+(_1b2755917_ReadF64((*(*(_self_))._field_d.alloc)._field_Constant))));
				}
			}
			else if (_1b27574c9_IsI64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1ab85c7c2:;
				{
					_1b2756473_SetI64((*(*(_self_))._field_d.alloc)._field_Constant, (+(_1b2754dcd_ReadI64((*(*(_self_))._field_d.alloc)._field_Constant))));
				}
			}
			else if (_1b2757760_IsU64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1ab85c393:;
				{
					_1b2756473_SetI64((*(*(_self_))._field_d.alloc)._field_Constant, (+(_1b2755b9d_AsI64((*(*(_self_))._field_d.alloc)._field_Constant))));
				}
			}
			else {
				_case_begin_1ab85c31b:;
				{
					jule::panic(jule::Str::lit("unimplemented constant type for unary.plus, this panic call should be unreachable", 81) + jule::Str("\nlocation: std/jule/sema/eval.jule:3171:17"));;
				}
			}
			_match_end_1ab85c272:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1b4b28e1a_UnaryExprModel>(_1b4b28e1a_UnaryExprModel{._field_Expr=jule::new_ptr<_1b4c466a8_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
}



inline void _1b4c6c49d_caret(_1b4c6b964_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_1ab862be5:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1b4c80060_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab8630d0:;
			{
				if ((!(_1b275288c_IsInt(_1b4c7ccc7_Str((*(*(_self_))._field_d.alloc)._field_Kind))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1b4c815d3_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab8628a4:;
			{
				if (((*(_1b4c815d3_Struct((*(*(_self_))._field_d.alloc)._field_Kind)))._field_Operators._field_BitNot == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1ab86283d:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1ab86273e:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1b4c470b0_IsConst((*(_self_))._field_d)) {
		{
			
			if (_1b27574c9_IsI64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1ab8673d1:;
				{
					_1b2756473_SetI64((*(*(_self_))._field_d.alloc)._field_Constant, (~(_1b2754dcd_ReadI64((*(*(_self_))._field_d.alloc)._field_Constant))));
				}
			}
			else if (_1b2757760_IsU64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1ab8674be:;
				{
					_1b275672b_SetU64((*(*(_self_))._field_d.alloc)._field_Constant, (~(_1b2755164_ReadU64((*(*(_self_))._field_d.alloc)._field_Constant))));
				}
			}
			else {
				_case_begin_1ab867029:;
				{
					jule::panic(jule::Str::lit("unimplemented constant type for unary.caret, this panic call should be unreachable", 82) + jule::Str("\nlocation: std/jule/sema/eval.jule:3214:17"));;
				}
			}
			_match_end_1ab866e80:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1b4b28e1a_UnaryExprModel>(_1b4b28e1a_UnaryExprModel{._field_Expr=jule::new_ptr<_1b4c466a8_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
}



inline void _1b4c6c69b_excl(_1b4c6b964_unaryEval* _self_) {
	jule::Ptr<_1b4c854d8_Prim> _32289_t = _1b4c80060_Prim((*((*(_self_))._field_d))._field_Kind.ptr());;
	if (((_32289_t == nullptr) || (!(_1b4c886d9_IsBool(_32289_t.ptr()))))) {
		(*(_self_))._field_d=nullptr;
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1b4c470b0_IsConst((*(_self_))._field_d)) {
		{
			
			if (_1b27579e6_IsBool((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1ab86d519:;
				{
					_1b27569d4_SetBool((*(*(_self_))._field_d.alloc)._field_Constant, (!(_1b27553ea_ReadBool((*(*(_self_))._field_d.alloc)._field_Constant))));
				}
			}
			else {
				_case_begin_1ab86d162:;
				{
					jule::panic(jule::Str::lit("unimplemented constant type for unary.excl, this panic call should be unreachable", 81) + jule::Str("\nlocation: std/jule/sema/eval.jule:3242:17"));;
				}
			}
			_match_end_1ab86d0a7:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1b4b28e1a_UnaryExprModel>(_1b4b28e1a_UnaryExprModel{._field_Expr=jule::new_ptr<_1b4c466a8_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
}



inline void _1b4c6c899_star(_1b4c6b964_unaryEval* _self_) {
	(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_1b4b28e1a_UnaryExprModel>(_1b4b28e1a_UnaryExprModel{._field_Expr=jule::new_ptr<_1b4c466a8_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
	{
		
		if ((_1b4c8057c_Ptr((*(*(_self_))._field_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab871d69:;
			{
				if ((!(_1b4c49425_isUnsafe((*(_self_))._field_e.ptr())))) {
					_1b4c48930_pushErr((*(_self_))._field_e, (*(*(_self_))._field_u.alloc)._field_Op, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1b4c8c7cb_Ptr> _326717_t = _1b4c8057c_Ptr((*(*(_self_))._field_d.alloc)._field_Kind);;
				if (_1b4c8d315_IsUnsafe(_326717_t.ptr())) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
				(*(*(_self_))._field_d.alloc)._field_Kind=(*_326717_t.alloc)._field_Elem;
				(*(*(_self_))._field_d.alloc)._field_Mutable=true;
			}
		}
		else if ((_1b4c802e6_Sptr((*(*(_self_))._field_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab872254:;
			{
				(*(*(_self_))._field_d.alloc)._field_Kind=(*(_1b4c802e6_Sptr((*(*(_self_))._field_d.alloc)._field_Kind)))._field_Elem;
			}
		}
		else {
			_case_begin_1ab8719b2:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1ab8709d3:;
	};
	(*(*(_self_))._field_d.alloc)._field_Constant=nullptr;
	(*(*(_self_))._field_d.alloc)._field_untyped=false;
	(*(*(_self_))._field_d.alloc)._field_Lvalue=true;
}



inline void _1b4c6ca97_amper(_1b4c6b964_unaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1ab87a416:;
			{
				jule::Ptr<_1b4b297de_StructLitExprModel> _328917_lit = (*((*(_self_))._field_d))._field_Model.unsafe_cast_ptr<_1b4b297de_StructLitExprModel>();;
				_1b4c757d6_makeStructLitAlloc(&((*(_self_))._field_d), &(_328917_lit));
			}
		}
		else {
			_case_begin_1ab8778b9:;
			{
				{
					
					if (_1b4c987e8_canGetPtr(&((*(_self_))._field_d))) {
						_case_begin_1ab87827c:;
						{
							(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_1b4c7c90e_TypeKind>(_1b4c7c90e_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1b4c8c7cb_Ptr>(_1b4c8c7cb_Ptr{._field_Elem=(*(*(_self_))._field_d.alloc)._field_Kind}), (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data26)});
							(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1b4b28e1a_UnaryExprModel>(_1b4b28e1a_UnaryExprModel{._field_Expr=jule::new_ptr<_1b4c466a8_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
						}
					}
					else {
						_case_begin_1ab8774bd:;
						{
							(*(_self_))._field_d=nullptr;
							return;;
						}
					}
					_match_end_1ab877d4d:;
				};
			}
		}
		_match_end_1ab877864:;
	};
	(*((*(_self_))._field_d))._field_Constant=nullptr;
	(*(*(_self_))._field_d.alloc)._field_untyped=false;
	(*(*(_self_))._field_d.alloc)._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
}



inline void _1b4c6cc95_typeDecl(_1b4c6b964_unaryEval* _self_) {
	_1b4c8e7bc_typeChecker _331413_tc = _1b4c8e7bc_typeChecker{._field_s=(*((*(_self_))._field_e))._field_s, ._field_rootLookup=(*(*(_self_))._field_e.alloc)._field_lookup, ._field_lookup=(*(*(_self_))._field_e.alloc)._field_lookup, ._field_errorToken=(*((*(_self_))._field_u))._field_Op, };;
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1ab87de20:;
			{
				(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_1b4c7c90e_TypeKind>(_1b4c7c90e_TypeKind{._field_Kind=jule::Trait(_1b4c94bac_buildPtrFromType(&_331413_tc, &((*(*(_self_))._field_d.alloc)._field_Kind)), (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data26)});
				(*(*(_self_))._field_d.alloc)._field_Model=jule::Any((*(*(_self_))._field_d.alloc)._field_Kind, &__jule_any_type84);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1ab880938:;
			{
				(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_1b4c7c90e_TypeKind>(_1b4c7c90e_TypeKind{._field_Kind=jule::Trait(_1b4c9452a_buildSptrFromType(&_331413_tc, &((*(*(_self_))._field_d.alloc)._field_Kind)), (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data21)});
				(*(*(_self_))._field_d.alloc)._field_Model=jule::Any((*(*(_self_))._field_d.alloc)._field_Kind, &__jule_any_type84);
			}
		}
		else {
			_case_begin_1ab87d53a:;
			{
				_1b4c48930_pushErr((*(_self_))._field_e, (*(*(_self_))._field_u.alloc)._field_Op, jule::Str::lit("unary operator @ is not defined for type @", 42), jule::Slice<jule::Any>::make({jule::Any((*((*(*(_self_))._field_u.alloc)._field_Op))._field_Kind, &__jule_any_type4),jule::Any(_1b4c7ccc7_Str((*((*(_self_))._field_d))._field_Kind.ptr()), &__jule_any_type4)}));
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1ab87da79:;
	};
	(*((*(_self_))._field_d))._field_Decl=true;
}



inline void _1b4c6ce93_evalData(_1b4c6b964_unaryEval* _self_) {
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1ab8845a7:;
			{
				jule::Ptr<_1b4c7c90e_TypeKind> _333917_prefix = (*((*(_self_))._field_e))._field_prefix;;
				(*(*(_self_))._field_e.alloc)._field_prefix=nullptr;
				(*(_self_))._field_d=_1b4c6ad1a_eval((*(_self_))._field_e, (*((*(_self_))._field_u))._field_Expr);
				(*(*(_self_))._field_e.alloc)._field_prefix=_333917_prefix;
			}
		}
		else {
			_case_begin_1ab87dae0:;
			{
				(*(_self_))._field_d=_1b4c6ad1a_eval((*(_self_))._field_e, (*((*(_self_))._field_u))._field_Expr);
			}
		}
		_match_end_1ab8841ab:;
	};
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c6d2d4_eval(_1b4c6b964_unaryEval* _self_, jule::Ptr<_1b4b020ad_UnaryExpr> _334827_u) {
	(*(_self_))._field_u=_334827_u;
	_1b4c6ce93_evalData(_self_);
	if (((*(_self_))._field_d == nullptr)) {
		return nullptr;;
	};
	if ((*((*(_self_))._field_d))._field_Decl) {
		_1b4c6cc95_typeDecl(_self_);
		return (*(_self_))._field_d;;
	};
	jule::Ptr<_1b4c7c90e_TypeKind> _33599_kind = (*((*(_self_))._field_d))._field_Kind;;
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1ab888c2c:;
			{
				_1b4c6c0a2_minus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1ab888c93:;
			{
				_1b4c6c2a0_plus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1ab888d09:;
			{
				_1b4c6c49d_caret(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(68LLU)) {
			_case_begin_1ab888d70:;
			{
				_1b4c6c69b_excl(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1ab888dd6:;
			{
				_1b4c6c899_star(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1ab888e4c:;
			{
				_1b4c6ca97_amper(_self_);
			}
		}
		else {
			_case_begin_1ab8886dd:;
			{
				(*(_self_))._field_d=nullptr;
			}
		}
		_match_end_1ab888bb6:;
	};
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1ab889447:;
			{
				_1b4c48930_pushErr((*(_self_))._field_e.ptr(), (*((*(_self_))._field_u))._field_Op, jule::Str::lit("unary operator @ is not defined for type @", 42), jule::Slice<jule::Any>::make({jule::Any((*((*(*(_self_))._field_u.alloc)._field_Op))._field_Kind, &__jule_any_type4),jule::Any(_1b4c7ccc7_Str(_33599_kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		else if (_1b4c470b0_IsConst((*(_self_))._field_d.ptr())) {
			_case_begin_1ab8873e0:;
			{
				(*((*(_self_))._field_d))._field_Model=jule::Any((*((*(_self_))._field_d))._field_Constant, &__jule_any_type19);
			}
		}
		_match_end_1ab88ae60:;
	};
	return (*(_self_))._field_d;;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4c6b964_unaryEval _Src) {
	_Stream << "unaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "u:" << _Src._field_u;
	_Stream << "}";
	return _Stream;
}



inline _1b4c6d900_binaryEval static__1b4c6dea5_newPlain(jule::Ptr<_1b4c483d0_Eval> _339628_e) {
	return _1b4c6d900_binaryEval{._field_e=_339628_e, };;
}



inline _1b4c6d900_binaryEval static__1b4c6e329_new(jule::Ptr<_1b4c483d0_Eval> _340223_e, jule::Ptr<_1b4ad5712_Token> _340237_op) {
	return _1b4c6d900_binaryEval{._field_e=_340223_e, ._field_op=_340237_op};;
}



inline jule::Bool _1b4c6e5b0_checkTypeCompatibility(_1b4c6d900_binaryEval* _self_) {
	return _1b4bc76b1_checkTypeCompatibility1((*((*(_self_))._field_e))._field_s, &((*((*(_self_))._field_l))._field_Kind), &((*(_self_))._field_r), &((*(_self_))._field_op));;
}



inline jule::Bool _1b4c6e846_checkStructCommonOperatorCompatibility(_1b4c6d900_binaryEval* _self_) {
	jule::Ptr<_1b4b39865_FnIns> _341617_overload = nullptr;;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_1ab89154d:;
			{
				_341617_overload=(*(_1b4c815d3_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Shl;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1ab89120c:;
			{
				_341617_overload=(*(_1b4c815d3_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Shr;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1ab891273:;
			{
				_341617_overload=(*(_1b4c815d3_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Add;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1ab8912d9:;
			{
				_341617_overload=(*(_1b4c815d3_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Sub;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1ab891350:;
			{
				_341617_overload=(*(_1b4c815d3_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Div;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1ab8913b6:;
			{
				_341617_overload=(*(_1b4c815d3_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Mul;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1ab89142c:;
			{
				_341617_overload=(*(_1b4c815d3_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Mod;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1ab892a38:;
			{
				_341617_overload=(*(_1b4c815d3_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitAnd;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU)) {
			_case_begin_1ab892a9e:;
			{
				_341617_overload=(*(_1b4c815d3_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitOr;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1ab892b15:;
			{
				_341617_overload=(*(_1b4c815d3_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitXor;
			}
		}
		else {
			_case_begin_1ab890b8a:;
			{
				_1b4c48930_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1b4c7ccc7_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return false;;
			}
		}
		_match_end_1ab891196:;
	};
	if ((_341617_overload == nullptr)) {
		_1b4c48930_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1b4c7ccc7_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
		return false;;
	};
	jule::Ptr<_1b4b387dc_ParamIns> _344813_p = (*(_341617_overload))._field_Params[1LL];;
	return _1b4bc6380_checkAssignType((*(*(_self_))._field_e.alloc)._field_s, (*((*(_344813_p))._field_Decl))._field_Reference, &((*_344813_p.alloc)._field_Kind), &((*(_self_))._field_r), (*(_self_))._field_op);;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c6eacc_evalComptimeTypeInfo(_1b4c6d900_binaryEval* _self_) {
	jule::Ptr<_1b4b615d4_comptimeTypeInfo> _345313_r = _1b4c83926_comptimeTypeInfo((*((*(_self_))._field_r))._field_Kind.ptr());;
	if ((_345313_r == nullptr)) {
		_1b4c48930_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("comptimeTypeInfo", 16), &__jule_any_type4),jule::Any(_1b4c7ccc7_Str((*(*(_self_))._field_r.alloc)._field_Kind), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b4b615d4_comptimeTypeInfo> _345813_l = _1b4c83926_comptimeTypeInfo((*((*(_self_))._field_l))._field_Kind);;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1ab8a16c3:;
			{
				jule::Ptr<_1b2753508_Const> _346117_constant = static__1b2753ecb_NewBool(_1b4c7d118_Equal((*(_345813_l))._field_base, (*(_345313_r))._field_base));;
				return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=_1b4d607e4_primBool, ._field_Model=jule::Any(_346117_constant, &__jule_any_type19), ._field_Constant=_346117_constant});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1ab8a2a59:;
			{
				jule::Ptr<_1b2753508_Const> _346817_constant = static__1b2753ecb_NewBool((!(_1b4c7d118_Equal((*(_345813_l))._field_base, (*(_345313_r))._field_base))));;
				return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=_1b4d607e4_primBool, ._field_Model=jule::Any(_346817_constant, &__jule_any_type19), ._field_Constant=_346817_constant});;
			}
		}
		else {
			_case_begin_1ab8a1030:;
			{
				_1b4c48930_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1b4c7ccc7_Str((*(*(_self_))._field_l.alloc)._field_Kind), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ab8a131b:;
	};
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c6ed63_evalNil(_1b4c6d900_binaryEval* _self_) {
	if ((!(_1b4c7e7ac_NilCompatible((*((*(_self_))._field_r))._field_Kind.ptr())))) {
		_1b4c48930_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("nil", 3), &__jule_any_type4),jule::Any(_1b4c7ccc7_Str((*(*(_self_))._field_r.alloc)._field_Kind), &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1ab8a7311:;
			{
				return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=_1b4d607e4_primBool, });;
			}
		}
		else {
			_case_begin_1ab8a5177:;
			{
				_1b4c48930_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(jule::Str::lit("nil", 3), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ab8a6e59:;
	};
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c700e9_evalEnum(_1b4c6d900_binaryEval* _self_) {
	jule::Ptr<_1b4b4c449_Enum> _349913_enm = _1b4c80813_Enum((*((*(_self_))._field_l))._field_Kind.ptr());;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1ab8a95dd:;
			{
				jule::Ptr<_1b4c7c90e_TypeKind> _350317_rkind = (*((*(_self_))._field_r))._field_Kind;;
				if ((_1b4c80813_Enum((*(*(_self_))._field_r.alloc)._field_Kind) != nullptr)) {
					_350317_rkind=(*((*(_1b4c80813_Enum((*(*(_self_))._field_r.alloc)._field_Kind)))._field_Kind))._field_Kind;
				};
				if ((!(_1b4bc6cdc_checkTypeCompatibility((*((*(_self_))._field_e))._field_s, &((*(*(_349913_enm))._field_Kind.alloc)._field_Kind), &(_350317_rkind), &((*(_self_))._field_op))))) {
					return nullptr;;
				};
				return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=_1b4d607e4_primBool, });;
			}
		}
		_match_end_1ab8a9577:;
	};
	if (((_1b4c80813_Enum((*(*(_self_))._field_r.alloc)._field_Kind) == nullptr) || (_349913_enm != _1b4c80813_Enum((*(*(_self_))._field_r.alloc)._field_Kind)))) {
		_1b4c48930_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any((*_349913_enm.alloc)._field_Ident, &__jule_any_type4),jule::Any(_1b4c7ccc7_Str((*(*(_self_))._field_r.alloc)._field_Kind), &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1ab8b0094:;
			{
				if ((!(_1b2752e64_IsNum(_1b4c7ccc7_Str((*(*_349913_enm.alloc)._field_Kind.alloc)._field_Kind.ptr()))))) {
					_1b4c48930_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any((*_349913_enm.alloc)._field_Ident, &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=_1b4d607e4_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1ab8b10c8:;
			{
				jule::Ptr<_1b4b4b8cc_EnumItem> _353313_first = (*_349913_enm.alloc)._field_Items[0LL];;
				{
					
					if (_1b27574c9_IsI64((*((*((*(_353313_first))._field_Value))._field_Data))._field_Constant.ptr())) {
						_case_begin_1ab8b46b4:;
						{
							if ((_1b2754dcd_ReadI64((*(*(*_353313_first.alloc)._field_Value.alloc)._field_Data.alloc)._field_Constant) == 0LL)) {
								goto _julec_label_1ab8b9598;
							};
							goto _julec_label_1ab8b58d5;
						}
					}
					else if (_1b2757760_IsU64((*((*((*(_353313_first))._field_Value))._field_Data))._field_Constant.ptr())) {
						_case_begin_1ab8b47a2:;
						{
							if ((_1b2755164_ReadU64((*(*(*_353313_first.alloc)._field_Value.alloc)._field_Data.alloc)._field_Constant) == 0LLU)) {
								goto _julec_label_1ab8b9598;
							};
							goto _julec_label_1ab8b58d5;
						}
					}
					else {
						_case_begin_1ab8b430c:;
						{
							jule::panic(jule::Str::lit("unimplemented enum type, this panic call should be unreachable", 62) + jule::Str("\nlocation: std/jule/sema/eval.jule:3546:17"));;
						}
					}
					_match_end_1ab8b4296:;
				};
				_julec_label_1ab8b58d5:;
				_1b4c48930_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("the @ enum type is not supports @ operator", 42), jule::Slice<jule::Any>::make({jule::Any((*_349913_enm.alloc)._field_Ident, &__jule_any_type4),jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4)}));
				_1b4c48c93_pushSuggestion((*(_self_))._field_e, jule::Str::lit("define default enum field (the first one is default) with zero value to use & operator", 86), jule::Slice<jule::Any>());
				_julec_label_1ab8b9598:;
				goto _case_begin_1ab8b113e;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1ab8b113e:;
			{
				if (((_1b4c80060_Prim((*(*_349913_enm.alloc)._field_Kind.alloc)._field_Kind.ptr()) == nullptr) || (!(_1b275288c_IsInt(_1b4c85829_Str(_1b4c80060_Prim((*(*_349913_enm.alloc)._field_Kind.alloc)._field_Kind).ptr())))))) {
					_1b4c48930_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any((*_349913_enm.alloc)._field_Ident, &__jule_any_type4)}));
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1ab8abb1d:;
			{
				_1b4c48930_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any((*_349913_enm.alloc)._field_Ident, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ab8aebdc:;
	};
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c70380_evalTypeEnum(_1b4c6d900_binaryEval* _self_) {
	jule::Ptr<_1b4b4db54_TypeEnum> _356613_enm = _1b4c80a99_TypeEnum((*((*(_self_))._field_l))._field_Kind.ptr());;
	if ((!(_1b4c6e5b0_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1ab8be306:;
			{
				return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=_1b4d607e4_primBool, });;
			}
		}
		else {
			_case_begin_1ab8bd68a:;
			{
				_1b4c48930_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1b4b4de95_Str(_356613_enm.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ab8bde0a:;
	};
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c70616_evalSptr(_1b4c6d900_binaryEval* _self_) {
	if ((!(_1b4c6e5b0_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1ab8c16e3:;
			{
				return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=_1b4d607e4_primBool, });;
			}
		}
		else {
			_case_begin_1ab8c0659:;
			{
				_1b4c48930_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1b4c7ccc7_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ab8c133b:;
	};
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c7089c_evalPtr(_1b4c6d900_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(53LLU) || _match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1ab8c3926:;
			{
				if ((!(_1b4c6e5b0_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=_1b4d607e4_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1ab8c4cac:;
			{
				if ((_1b4c8057c_Ptr((*((*(_self_))._field_l))._field_Kind.ptr()) == nullptr)) {
					std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				};
				if (_1b4c8d315_IsUnsafe(_1b4c8057c_Ptr((*(*(_self_))._field_l.alloc)._field_Kind).ptr())) {
					_1b4c48930_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1b4c7ccc7_Str((*(*(_self_))._field_l.alloc)._field_Kind), &__jule_any_type4)}));
				};
				if ((!(_1b4c7696e_isPtrArithmeticCompatible(&((*(_self_))._field_l), &((*(_self_))._field_r))))) {
					_1b4c48930_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("type @ is incompatible to use for pointer arithmetic", 52), jule::Slice<jule::Any>::make({jule::Any(_1b4c7ccc7_Str((*((*(_self_))._field_r))._field_Kind), &__jule_any_type4)}));
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1ab8c3140:;
			{
				_1b4c48930_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1b4c7ccc7_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ab8c2e97:;
	};
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c70b33_evalArr(_1b4c6d900_binaryEval* _self_) {
	if ((!(_1b4c6e5b0_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1ab8cb4bc:;
			{
				return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=_1b4d607e4_primBool, });;
			}
		}
		else {
			_case_begin_1ab8c66b5:;
			{
				_1b4c48930_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1b4c7ccc7_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ab8cb115:;
	};
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c70db9_evalSlc(_1b4c6d900_binaryEval* _self_) {
	if ((!(_1b4c6e5b0_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1ab8cdb51:;
			{
				return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=_1b4d607e4_primBool, });;
			}
		}
		else {
			_case_begin_1ab8ccab7:;
			{
				_1b4c48930_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1b4c7ccc7_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ab8cd799:;
	};
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c71150_evalStruct(_1b4c6d900_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_1ab8d04c1:;
			{
				if (((*(_1b4c815d3_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Gt == nullptr)) {
					_1b4c48930_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1b4c7ccc7_Str((*(*(_self_))._field_l.alloc)._field_Kind), &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=_1b4d607e4_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1ab8d0adc:;
			{
				if (((*(_1b4c815d3_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_GtEq == nullptr)) {
					_1b4c48930_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1b4c7ccc7_Str((*(*(_self_))._field_l.alloc)._field_Kind), &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=_1b4d607e4_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(69LLU)) {
			_case_begin_1ab8d0b53:;
			{
				if (((*(_1b4c815d3_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Lt == nullptr)) {
					_1b4c48930_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1b4c7ccc7_Str((*(*(_self_))._field_l.alloc)._field_Kind), &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=_1b4d607e4_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1ab8d0bb9:;
			{
				if (((*(_1b4c815d3_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_LtEq == nullptr)) {
					_1b4c48930_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1b4c7ccc7_Str((*(*(_self_))._field_l.alloc)._field_Kind), &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=_1b4d607e4_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1ab8d0c30:;
			{
				if ((!(_1b4c6e5b0_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=_1b4d607e4_primBool, });;
			}
		}
		_match_end_1ab8d0405:;
	};
	if ((!(_1b4c6e846_checkStructCommonOperatorCompatibility(_self_)))) {
		return nullptr;;
	};
	return (*(_self_))._field_l;;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c713d6_evalTrait(_1b4c6d900_binaryEval* _self_) {
	if ((!(_1b4c6e5b0_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1ab8dba82:;
			{
				return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=_1b4d607e4_primBool, });;
			}
		}
		else {
			_case_begin_1ab8dae49:;
			{
				_1b4c48930_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1b4c7ccc7_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ab8db6ca:;
	};
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c7166c_evalAny(_1b4c6d900_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1ab8ddcb5:;
			{
				return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=_1b4d607e4_primBool, });;
			}
		}
		else {
			_case_begin_1ab8dd4ce:;
			{
				_1b4c48930_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(jule::Str::lit("any", 3), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ab8dd336:;
	};
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c71903_evalBool(_1b4c6d900_binaryEval* _self_) {
	if ((!(_1b4c6e5b0_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(54LLU) || _match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1ab8e0eb5:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1ab8dee2b:;
			{
				_1b4c48930_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1b4c7ccc7_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ab8e0b0d:;
	};
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c71b89_evalStr(_1b4c6d900_binaryEval* _self_) {
	jule::Str _376513_rk = _1b4c7ccc7_Str((*((*(_self_))._field_r))._field_Kind.ptr());;
	if ((!_376513_rk.equal("str", 3))) {
		_1b4c48930_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_376513_rk, &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1ab8e4c88:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1ab8e5b24:;
			{
				return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=_1b4d607e4_primBool, });;
			}
		}
		else {
			_case_begin_1ab8e3a89:;
			{
				_1b4c48930_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(jule::Str::lit("str", 3), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ab8e488c:;
	};
}



inline void _1b4c71d87_setTypeToGreater(_1b4c6d900_binaryEval* _self_) {
	jule::Ptr<_1b4c854d8_Prim> _37909_lp = _1b4c80060_Prim((*((*(_self_))._field_l))._field_Kind.ptr());;
	jule::Ptr<_1b4c854d8_Prim> _37919_rp = _1b4c80060_Prim((*((*(_self_))._field_r))._field_Kind);;
	if (_1b4c470b0_IsConst((*(_self_))._field_l)) {
		if ((!(_1b4c470b0_IsConst((*(_self_))._field_r)))) {
			(*(*(_self_))._field_l.alloc)._field_Kind=(*(*(_self_))._field_r.alloc)._field_Kind;
			(*((*(*(_self_))._field_l.alloc)._field_Constant))._field_Kind=(*(_37919_rp))._field_Kind;
			return;;
		};
		goto _julec_label_1ab8ea5a7;
	};
	if (_1b4c470b0_IsConst((*(_self_))._field_r)) {
		(*(*(*(_self_))._field_r.alloc)._field_Constant.alloc)._field_Kind=(*(_37909_lp))._field_Kind;
		return;;
	};
	_julec_label_1ab8ea5a7:;
	if (((*(*(_self_))._field_l.alloc)._field_untyped && (!((*(*(_self_))._field_r.alloc)._field_untyped)))) {
		(*(*(_self_))._field_l.alloc)._field_Kind=(*(*(_self_))._field_r.alloc)._field_Kind;
		if (_1b4c470b0_IsConst((*(_self_))._field_l)) {
			(*(*(*(_self_))._field_l.alloc)._field_Constant.alloc)._field_Kind=(*_37919_rp.alloc)._field_Kind;
		};
		(*(*(_self_))._field_l.alloc)._field_untyped=false;
		return;;
	} else if (((!((*(*(_self_))._field_l.alloc)._field_untyped)) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
		return;;
	};
	if (_1b275114e_IsGreater((*_37919_rp.alloc)._field_Kind, (*_37909_lp.alloc)._field_Kind)) {
		(*(*(_self_))._field_l.alloc)._field_Kind=(*(*(_self_))._field_r.alloc)._field_Kind;
		if (_1b4c470b0_IsConst((*(_self_))._field_l)) {
			(*(*(*(_self_))._field_l.alloc)._field_Constant.alloc)._field_Kind=(*_37919_rp.alloc)._field_Kind;
		};
	};
}



inline void _1b4c72140_checkModData(_1b4c6d900_binaryEval* _self_, jule::Ptr<_1b4c466a8_Data>* _382336_d) {
	if ((!(_1b4c470b0_IsConst((*(_382336_d)).ptr())))) {
		if (((_1b4c80060_Prim((*((*(_382336_d))))._field_Kind.ptr()) == nullptr) || (!(_1b275288c_IsInt((*(_1b4c80060_Prim((*((*(_382336_d))))._field_Kind)))._field_Kind))))) {
			_1b4c48930_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("module operator must be used with integer type", 46), jule::Slice<jule::Any>());
		};
		return;;
	};
	{
		
		if (_1b4c2c64a_sigAssignable(jule::Str::lit("i64", 3), _382336_d)) {
			_case_begin_1ab9033c3:;
			{
				_1b2756473_SetI64((*((*(_382336_d))))._field_Constant.ptr(), _1b2755b9d_AsI64((*((*(_382336_d))))._field_Constant));
			}
		}
		else if (_1b4c2ca13_unsigAssignable(jule::Str::lit("u64", 3), _382336_d)) {
			_case_begin_1ab9030a4:;
			{
				_1b275672b_SetU64((*((*(_382336_d))))._field_Constant.ptr(), _1b2755e34_AsU64((*((*(_382336_d))))._field_Constant));
			}
		}
		else {
			_case_begin_1ab90303d:;
			{
				_1b4c48930_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("module operator must be used with integer type", 46), jule::Slice<jule::Any>());
			}
		}
		_match_end_1ab902ec7:;
	};
}



inline void _1b4c7233d_mod(_1b4c6d900_binaryEval* _self_) {
	_1b4c72140_checkModData(_self_, &((*(_self_))._field_l));
	_1b4c72140_checkModData(_self_, &((*(_self_))._field_r));
}



inline jule::Bool _1b4c72739_numbersAreCompatibile(_1b4c6d900_binaryEval* _self_, jule::Str* _384537_lk, jule::Str* _384547_rk) {
	if ((!(_1b2752e64_IsNum((*(_384547_rk)))))) {
		return false;;
	};
	if ((_1b4c470b0_IsConst((*(_self_))._field_l.ptr()) && (*(*(_self_))._field_l.alloc)._field_untyped)) {
		return true;;
	};
	if ((*(_384537_lk)).equal("f32", 3)) {
		if ((_1b4c470b0_IsConst((*(_self_))._field_r.ptr()) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
			return _1b4c2c2c6_floatAssignable(_384537_lk, &((*(_self_))._field_r));;
		};
		return (*(_384547_rk)).equal("f32", 3);;
	};
	if ((*(_384537_lk)).equal("f64", 3)) {
		if ((_1b4c470b0_IsConst((*(_self_))._field_r) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
			return _1b4c2c2c6_floatAssignable(_384537_lk, &((*(_self_))._field_r));;
		};
		return (*(_384547_rk)).equal("f64", 3);;
	};
	if ((_1b4c470b0_IsConst((*(_self_))._field_r) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
		return _1b4c2cd87_intAssignable((*(_384537_lk)), &((*(_self_))._field_r));;
	};
	return ((*(_384537_lk)) == (*(_384547_rk)));;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c729c0_evalFloat(_1b4c6d900_binaryEval* _self_) {
	jule::Str _38719_lk = (*(_1b4c80060_Prim((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Kind;;
	jule::Str _38729_rk = (*(_1b4c80060_Prim((*((*(_self_))._field_r))._field_Kind)))._field_Kind;;
	if ((!(_1b4c72739_numbersAreCompatibile(_self_, &(_38719_lk), &(_38729_rk))))) {
		_1b4bc720a_pushCompatiblityError((*((*(_self_))._field_e))._field_s.ptr(), &((*(*(_self_))._field_l.alloc)._field_Kind), &((*(_self_))._field_r), &((*(_self_))._field_op));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1ab90d19c:;
			{
				if (((!(_1b4c470b0_IsConst((*(_self_))._field_l))) || (!(_1b4c2cd87_intAssignable(jule::Str::lit("i64", 3), &((*(_self_))._field_l)))))) {
					_1b4c48930_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_38719_lk, &__jule_any_type4),jule::Any(_38729_rk, &__jule_any_type4)}));
					return nullptr;;
				};
				if (((!(_1b4c470b0_IsConst((*(_self_))._field_r))) || (!(_1b4c2cd87_intAssignable(jule::Str::lit("u64", 3), &((*(_self_))._field_r)))))) {
					_1b4c48930_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_38719_lk, &__jule_any_type4),jule::Any(_38729_rk, &__jule_any_type4)}));
					return nullptr;;
				};
				_1b2756473_SetI64((*(*(_self_))._field_l.alloc)._field_Constant.ptr(), _1b2755b9d_AsI64((*(*(_self_))._field_l.alloc)._field_Constant));
				_1b275672b_SetU64((*(*(_self_))._field_r.alloc)._field_Constant, _1b2755e34_AsU64((*(*(_self_))._field_r.alloc)._field_Constant));
				if ((!(_1b4c76298_isOkForShifting(&((*(_self_))._field_r))))) {
					_1b4c48930_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("bit shifting value is must be unsigned", 38), jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		_match_end_1ab90d136:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1ab90d224:;
			{
				_1b4c71d87_setTypeToGreater(_self_);
				return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=_1b4d607e4_primBool, });;
			}
		}
		_match_end_1ab9102c0:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1ab91543a:;
			{
				_1b4c71d87_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1ab91613e:;
			{
				if ((!(_1b275288c_IsInt(_38729_rk)))) {
					_1b4c48930_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_38719_lk, &__jule_any_type4),jule::Any(_38729_rk, &__jule_any_type4)}));
					return nullptr;;
				};
				_1b4c7233d_mod(_self_);
				_1b4c71d87_setTypeToGreater(_self_);
				return (*(_self_))._field_r;;
			}
		}
		else {
			_case_begin_1ab90d8ea:;
			{
				_1b4c48930_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for floating-point type(s)", 52), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ab91488a:;
	};
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c72c56_evalInt(_1b4c6d900_binaryEval* _self_) {
	jule::Str _39359_lk = (*(_1b4c80060_Prim((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Kind;;
	jule::Str _39369_rk = (*(_1b4c80060_Prim((*((*(_self_))._field_r))._field_Kind)))._field_Kind;;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1ab919b6a:;
			{
				if (((!(_1b275288c_IsInt(_39359_lk))) || (!(_1b275288c_IsInt(_39369_rk))))) {
					_1b4c48930_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_39359_lk, &__jule_any_type4),jule::Any(_39369_rk, &__jule_any_type4)}));
					return nullptr;;
				};
				if ((!(_1b4c76298_isOkForShifting(&((*(_self_))._field_r))))) {
					_1b4c48930_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("bit shifting value is must be unsigned", 38), jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		_match_end_1ab919e56:;
	};
	if ((!(_1b4c72739_numbersAreCompatibile(_self_, &(_39359_lk), &(_39369_rk))))) {
		_1b4bc720a_pushCompatiblityError((*(*(_self_))._field_e.alloc)._field_s.ptr(), &((*(*(_self_))._field_l.alloc)._field_Kind), &((*(_self_))._field_r), &((*(_self_))._field_op));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1ab91d784:;
			{
				return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=_1b4d607e4_primBool, });;
			}
		}
		_match_end_1ab91d71d:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(65LLU) || _match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1ab920049:;
			{
				_1b4c71d87_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1ab920c4d:;
			{
				_1b4c7233d_mod(_self_);
				_1b4c71d87_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1ab91d872:;
			{
				_1b4c48930_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for integer type(s)", 45), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ab91eb4d:;
	};
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c72edc_evalPrim(_1b4c6d900_binaryEval* _self_) {
	jule::Ptr<_1b4c854d8_Prim> _39929_prim = _1b4c80060_Prim((*((*(_self_))._field_l))._field_Kind.ptr());;
	{
		
		if (_1b4c886d9_IsBool(_39929_prim.ptr())) {
			_case_begin_1ab923426:;
			{
				return _1b4c71903_evalBool(_self_);;
			}
		}
		else if (_1b4c88970_IsStr(_39929_prim.ptr())) {
			_case_begin_1ab9234c0:;
			{
				return _1b4c71b89_evalStr(_self_);;
			}
		}
		_match_end_1ab92339e:;
	};
	if ((_1b4c80060_Prim((*((*(_self_))._field_r))._field_Kind) == nullptr)) {
		_1b4c48930_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1b4c85829_Str(_39929_prim.ptr()), &__jule_any_type4),jule::Any(_1b4c7ccc7_Str((*(*(_self_))._field_r.alloc)._field_Kind), &__jule_any_type4)}));
		return nullptr;;
	};
	{
		
		if (_1b2752bcd_IsFloat((*_39929_prim.alloc)._field_Kind)) {
			_case_begin_1ab925e40:;
			{
				return _1b4c729c0_evalFloat(_self_);;
			}
		}
		else if (_1b275288c_IsInt((*_39929_prim.alloc)._field_Kind)) {
			_case_begin_1ab925ec8:;
			{
				return _1b4c72c56_evalInt(_self_);;
			}
		}
		else {
			_case_begin_1ab925dc9:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab924603:;
	};
}



inline void _1b4c731da_checkSpecialCases(_1b4c6d900_binaryEval* _self_) {
	if (((!(_1b4c7e009_Comparable((*((*(_self_))._field_l))._field_Kind.ptr()))) && (!(_1b4c7d9dc_IsNil((*((*(_self_))._field_r))._field_Kind))))) {
		_1b4c48930_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("type @ is not comparable", 24), jule::Slice<jule::Any>::make({jule::Any(_1b4c7ccc7_Str((*(*(_self_))._field_l.alloc)._field_Kind), &__jule_any_type4)}));
	} else if (((!(_1b4c7e009_Comparable((*((*(_self_))._field_r))._field_Kind.ptr()))) && (!(_1b4c7d9dc_IsNil((*((*(_self_))._field_l))._field_Kind))))) {
		_1b4c48930_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("type @ is not comparable", 24), jule::Slice<jule::Any>::make({jule::Any(_1b4c7ccc7_Str((*(*(_self_))._field_r.alloc)._field_Kind), &__jule_any_type4)}));
	};
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c73471_evalOp(_1b4c6d900_binaryEval* _self_) {
	_1b4c731da_checkSpecialCases(_self_);
	{
		
		if (_1b4c7dc73_Void((*((*(_self_))._field_l))._field_Kind.ptr())) {
			_case_begin_1ab92b6d7:;
			{
				_1b4c48930_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(jule::Str::lit("void", 4), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		else if ((_1b4c83926_comptimeTypeInfo((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab92ca6d:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1ab92cad4;
			}
		}
		else if ((_1b4c83926_comptimeTypeInfo((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab92cad4:;
			{
				return _1b4c6eacc_evalComptimeTypeInfo(_self_);;
			}
		}
		else if (((_1b4c80060_Prim((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr) && _1b4c88c06_IsAny(_1b4c80060_Prim((*(*(_self_))._field_r.alloc)._field_Kind).ptr()))) {
			_case_begin_1ab92b53e:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1ab92b5a5;
			}
		}
		else if (_1b4c7d9dc_IsNil((*((*(_self_))._field_r))._field_Kind.ptr())) {
			_case_begin_1ab92b5a5:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1ab92cbc2;
			}
		}
		else if (_1b4c7d9dc_IsNil((*((*(_self_))._field_l))._field_Kind.ptr())) {
			_case_begin_1ab92cbc2:;
			{
				return _1b4c6ed63_evalNil(_self_);;
			}
		}
		else if (((_1b4c80060_Prim((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr) && _1b4c88c06_IsAny(_1b4c80060_Prim((*(*(_self_))._field_l.alloc)._field_Kind).ptr()))) {
			_case_begin_1ab92cc38:;
			{
				return _1b4c7166c_evalAny(_self_);;
			}
		}
		else if ((_1b4c80a99_TypeEnum((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab92cc9e:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1ab92cd15;
			}
		}
		else if ((_1b4c80a99_TypeEnum((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab92cd15:;
			{
				return _1b4c70380_evalTypeEnum(_self_);;
			}
		}
		else if ((_1b4c80813_Enum((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab92cd7b:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1ab92cde2;
			}
		}
		else if ((_1b4c80813_Enum((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab92cde2:;
			{
				return _1b4c700e9_evalEnum(_self_);;
			}
		}
		else if ((_1b4c802e6_Sptr((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab92ce58:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1ab92cebe;
			}
		}
		else if ((_1b4c802e6_Sptr((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab92cebe:;
			{
				return _1b4c70616_evalSptr(_self_);;
			}
		}
		else if ((_1b4c8057c_Ptr((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab92d035:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1ab92d09b;
			}
		}
		else if ((_1b4c8057c_Ptr((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab92d09b:;
			{
				return _1b4c7089c_evalPtr(_self_);;
			}
		}
		else if ((_1b4c80d30_Arr((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab92d112:;
			{
				return _1b4c70b33_evalArr(_self_);;
			}
		}
		else if ((_1b4c810b6_Slc((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab92d178:;
			{
				return _1b4c70db9_evalSlc(_self_);;
			}
		}
		else if ((_1b4c81869_Trait((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab92d1de:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1ab92d255;
			}
		}
		else if ((_1b4c81869_Trait((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab92d255:;
			{
				return _1b4c713d6_evalTrait(_self_);;
			}
		}
		else if ((_1b4c815d3_Struct((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab92d2bb:;
			{
				return _1b4c71150_evalStruct(_self_);;
			}
		}
		else if ((_1b4c80060_Prim((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab92d332:;
			{
				return _1b4c72edc_evalPrim(_self_);;
			}
		}
		else {
			_case_begin_1ab92ae45:;
			{
				_1b4c48930_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1b4c7ccc7_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ab92b31e:;
	};
}



inline void _1b4c73729_evalConst(_1b4c6d900_binaryEval* _self_, jule::Ptr<_1b4c466a8_Data>* _408333_d) {
	{
		
		if (((*(_408333_d)) == nullptr) || ((*((*(_self_))._field_l))._field_Model == nullptr) || ((*((*(_self_))._field_r))._field_Model == nullptr)) {
			_case_begin_1ab94106a:;
			{
				return;;
			}
		}
		else if ((!(_1b4c470b0_IsConst((*(_self_))._field_l.ptr()))) || (!(_1b4c470b0_IsConst((*(_self_))._field_r.ptr())))) {
			_case_begin_1ab94160e:;
			{
				(*((*(_408333_d))))._field_Constant=nullptr;
				(*((*(_408333_d))))._field_untyped=false;
				return;;
			}
		}
		_match_end_1ab940e6b:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1ab9416db:;
			{
				(*((*(_408333_d))))._field_Constant=static__1b2753ecb_NewBool(_1b27590ad_Eq((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1ab943b1c:;
			{
				(*((*(_408333_d))))._field_Constant=static__1b2753ecb_NewBool((!(_1b27590ad_Eq((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1ab943b83:;
			{
				(*((*(_408333_d))))._field_Constant=static__1b2753ecb_NewBool(_1b2758c6c_Or((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1ab943be9:;
			{
				(*((*(_408333_d))))._field_Constant=static__1b2753ecb_NewBool(_1b275892b_And((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_1ab943c60:;
			{
				(*((*(_408333_d))))._field_Constant=static__1b2753ecb_NewBool(_1b2759a81_Gt((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(69LLU)) {
			_case_begin_1ab943cc6:;
			{
				(*((*(_408333_d))))._field_Constant=static__1b2753ecb_NewBool(_1b27593ee_Lt((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1ab943d4d:;
			{
				(*((*(_408333_d))))._field_Constant=static__1b2753ecb_NewBool(_1b2759dc2_GtEq((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1ab943dc5:;
			{
				(*((*(_408333_d))))._field_Constant=static__1b2753ecb_NewBool(_1b2759740_LtEq((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1ab943e4c:;
			{
				_1b275a213_Add((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_408333_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1ab943ec4:;
			{
				_1b275a554_Sub((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_408333_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1ab94404b:;
			{
				_1b275a895_Mul((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_408333_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1ab9440c3:;
			{
				jule::Bool _412313_ok = _1b275abd6_Div((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc));;
				if (((!(_412313_ok)) && (_1b27561ba_AsF64((*(*(_self_))._field_r.alloc)._field_Constant) == 0LL))) {
					_1b4c48930_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("divide by zero", 14), jule::Slice<jule::Any>());
				};
				(*((*(_408333_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
				jule::Ptr<_1b4c854d8_Prim> _412817_prim = _1b4c80060_Prim((*((*(_408333_d))))._field_Kind.ptr());;
				{
					
					if (_1b27522b5_IsSigInt((*(_412817_prim))._field_Kind)) {
						_case_begin_1ab955018:;
						{
							_1b2756473_SetI64((*((*(_408333_d))))._field_Constant, _1b2755b9d_AsI64((*((*(_408333_d))))._field_Constant));
						}
					}
					else if (_1b27525c3_IsUnsigInt((*(_412817_prim))._field_Kind)) {
						_case_begin_1ab9550b2:;
						{
							_1b275672b_SetU64((*((*(_408333_d))))._field_Constant, _1b2755e34_AsU64((*((*(_408333_d))))._field_Constant));
						}
					}
					_match_end_1ab954ea2:;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1ab94414a:;
			{
				jule::Bool _413613_ok = _1b275b027_Mod((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc));;
				if (((!(_413613_ok)) && (_1b27561ba_AsF64((*(*(_self_))._field_r.alloc)._field_Constant) == 0LL))) {
					_1b4c48930_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("divide by zero", 14), jule::Slice<jule::Any>());
				};
				(*((*(_408333_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU)) {
			_case_begin_1ab9441c2:;
			{
				_1b275b6a9_BitwiseOr((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_408333_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1ab944249:;
			{
				_1b275b368_BitwiseAnd((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_408333_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1ab9442c1:;
			{
				_1b275b9ea_Xor((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_408333_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_1ab944348:;
			{
				_1b275bd3b_Lshift((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_408333_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1ab9443c0:;
			{
				_1b275c17c_Rshift((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_408333_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		_match_end_1ab942e18:;
	};
	(*((*(_408333_d))))._field_Model=jule::Any((*((*(_408333_d))))._field_Constant, &__jule_any_type19);
	_1b4c77ad5_applyCastModelByEnum(_408333_d, _1b4c80813_Enum((*((*(_408333_d))))._field_Kind.ptr()), &((*(_self_))._field_op));
}



inline void _1b4c739d2_checkData(_1b4c6d900_binaryEval* _self_, jule::Ptr<_1b4c466a8_Data>* _416133_d) {
	jule::Ptr<_1b4b39865_FnIns> _41629_f = _1b4c8134c_Fn((*((*(_416133_d))))._field_Kind.ptr());;
	if ((((_41629_f != nullptr) && ((*_41629_f.alloc)._field_Decl != nullptr)) && _1b4b3708d_IsMethod((*_41629_f.alloc)._field_Decl))) {
		_1b4c48930_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("invalid expression used for binary operation", 44), jule::Slice<jule::Any>());
	};
}



inline void _1b4c73bd0_checkDatas(_1b4c6d900_binaryEval* _self_) {
	_1b4c739d2_checkData(_self_, &((*(_self_))._field_l));
	_1b4c739d2_checkData(_self_, &((*(_self_))._field_r));
}



inline void _1b4c73e88_setModel(_1b4c6d900_binaryEval* _self_, jule::Ptr<_1b4c466a8_Data>* _417332_d) {
	if (_1b4c470b0_IsConst((*(_417332_d)).ptr())) {
		if (((_1b4c470b0_IsConst((*(_self_))._field_l.ptr()) && _1b4c470b0_IsConst((*(_self_))._field_r.ptr())) || (((*(*(_self_))._field_l.alloc)._field_Model == nullptr) && ((*(*(_self_))._field_r.alloc)._field_Model == nullptr)))) {
			return;;
		};
	};
	jule::Ptr<_1b4c466a8_Data> _418213_l;
	jule::Ptr<_1b4c466a8_Data> _418220_r;
	({
		jule::Ptr<_1b4c466a8_Data> ___jule_assign_arg = (*(_self_))._field_l;
		jule::Ptr<_1b4c466a8_Data> _1___jule_assign_arg = (*(_self_))._field_r;
		_418213_l = ___jule_assign_arg;
		_418220_r = _1___jule_assign_arg;
	});
	if ((!(_1b4c47401_GoodOperand(_418213_l, &(_418220_r))))) {
		std::swap(_418213_l, _418220_r);
	};
	(*((*(_417332_d))))._field_Model=jule::Any(jule::new_ptr<_1b4b28a41_BinaryExprModel>(_1b4b28a41_BinaryExprModel{._field_Left=jule::new_ptr<_1b4b28546_OperandExprModel>(_1b4b28546_OperandExprModel{._field_Kind=(*_418213_l.alloc)._field_Kind, ._field_Model=(*_418213_l.alloc)._field_Model}), ._field_Right=jule::new_ptr<_1b4b28546_OperandExprModel>(_1b4b28546_OperandExprModel{._field_Kind=(*_418220_r.alloc)._field_Kind, ._field_Model=(*_418220_r.alloc)._field_Model}), ._field_Op=(*(_self_))._field_op}), &__jule_any_type111);
}



inline void _1b4c74241_postEval(_1b4c6d900_binaryEval* _self_, jule::Ptr<_1b4c466a8_Data>* _420032_d) {
	(*((*(_420032_d))))._field_Lvalue=false;
	_1b4c73e88_setModel(_self_, _420032_d);
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c7463c_solveExplicit(_1b4c6d900_binaryEval* _self_, jule::Ptr<_1b4c466a8_Data>* _420537_l, jule::Ptr<_1b4c466a8_Data>* _420552_r) {
	({
		jule::Ptr<_1b4c466a8_Data> ___jule_assign_arg = (*(_420537_l));
		jule::Ptr<_1b4c466a8_Data> _1___jule_assign_arg = (*(_420552_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1b4c73bd0_checkDatas(_self_);
	jule::Ptr<_1b4c466a8_Data> _421013_d = _1b4c73471_evalOp(_self_);;
	({
		jule::Ptr<_1b4c466a8_Data> ___jule_assign_arg = (*(_420537_l));
		jule::Ptr<_1b4c466a8_Data> _1___jule_assign_arg = (*(_420552_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1b4c73729_evalConst(_self_, &(_421013_d));
	if ((_421013_d != nullptr)) {
		(*_421013_d.alloc)._field_Mutable=true;
		_1b4c74241_postEval(_self_, &(_421013_d));
	};
	return _421013_d;;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c7497d_eval(_1b4c6d900_binaryEval* _self_, jule::Ptr<_1b4b035ba_BinaryExpr>* _422528_op) {
	if (((*((*((*(_422528_op))))._field_Op))._field_Id == static_cast<jule::U64>(71LLU))) {
		_1b4c48930_pushErr((*(_self_))._field_e.ptr(), (*((*(_422528_op))))._field_Op, jule::Str::lit("assignments not available for expressions", 41), jule::Slice<jule::Any>());
		_1b4c48c93_pushSuggestion((*(_self_))._field_e, jule::Str::lit("use clear imperative approach, comes relevant assignment statement before the expression", 88), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b4c466a8_Data> _423213_l = _1b4c6b15b_evalExpr1((*(_self_))._field_e, (*((*(_422528_op))))._field_Left);;
	if (((_423213_l == nullptr) || ((*(_423213_l))._field_Kind == nullptr))) {
		return nullptr;;
	};
	jule::Ptr<_1b4c7c90e_TypeKind> _423713_prefix = (*(*(_self_))._field_e.alloc)._field_prefix;;
	(*(*(_self_))._field_e.alloc)._field_prefix=(*(_423213_l))._field_Kind;
	__JULE_DEFER({
		(*(*(_self_))._field_e.alloc)._field_prefix=_423713_prefix;
	});;
	jule::Ptr<_1b4c466a8_Data> _424013_r = _1b4c6b15b_evalExpr1((*(_self_))._field_e, (*((*(_422528_op))))._field_Right);;
	if (((_424013_r == nullptr) || ((*(_424013_r))._field_Kind == nullptr))) {
		return nullptr;;
	};
	(*(_self_))._field_op=(*((*(_422528_op))))._field_Op;
	jule::Ptr<_1b4c466a8_Data> _424713_d = _1b4c7463c_solveExplicit(_self_, &(_423213_l), &(_424013_r));;
	if ((((_424713_d != nullptr) && (*(_423213_l))._field_IsRune) && (*(_424013_r))._field_IsRune)) {
		(*_424713_d.alloc)._field_IsRune=true;
	};
	return _424713_d;;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4c6d900_binaryEval _Src) {
	_Stream << "binaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4c7b028_InsGeneric _Src) {
	_Stream << "InsGeneric{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4c7bb1c_TypeAlias _Src) {
	_Stream << "TypeAlias{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Generic:" << _Src._field_Generic << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1b4c7ccc7_Str(_1b4c7c90e_TypeKind* _self_) {
	if (_1b4c7d9dc_IsNil(_self_)) {
		return jule::Str::lit("nil", 3);;
	};
	_1cb1d27a9_StrBuilder _7413_kind = static__1cb1d2a73_New(16LL);;
	if ((*(_self_))._field_Variadic) {
		_1cb1db3d9_WriteStr(&_7413_kind, jule::Str::lit("...", 3));
	};
	if (_1b4c7d756_Binded(_self_)) {
		_1cb1db3d9_WriteStr(&_7413_kind, jule::Str::lit("cpp.", 4));
		_1cb1db3d9_WriteStr(&_7413_kind, (*(_self_))._field_BindIdent);
	} else {
		_1cb1db3d9_WriteStr(&_7413_kind, ((_1b4c7c458_KindMptrData*)(*(_self_))._field_Kind.safe_type())->_1b4c7beb3_Str((*(_self_))._field_Kind.data));
	};
	return _1cb1dbbd1_Str(&_7413_kind);;
}



inline jule::Bool _1b4c7d118_Equal(jule::Ptr<_1b4c7c90e_TypeKind> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _9021_other) {
	if (_1b4c7d9dc_IsNil(_self_.ptr())) {
		return _1b4c7d9dc_IsNil(_9021_other.ptr());;
	};
	if (_1b4c7d756_Binded(_self_)) {
		return (_1b4c7d756_Binded(_9021_other) && ((*_self_.alloc)._field_BindIdent == (*_9021_other.alloc)._field_BindIdent));;
	};
	return ((_1b4c7c458_KindMptrData*)(*_self_.alloc)._field_Kind.safe_type())->_1b4c7c304_Equal((*_self_.alloc)._field_Kind.data, _9021_other);;
}



inline jule::Bool _1b4c7d756_Binded(_1b4c7c90e_TypeKind* _self_) {
	return ((*(_self_))._field_BindIdent.len() != 0LL);;
}



inline jule::Bool _1b4c7d9dc_IsNil(_1b4c7c90e_TypeKind* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}



inline jule::Bool _1b4c7dc73_Void(_1b4c7c90e_TypeKind* _self_) {
	jule::Ptr<_1b4c854d8_Prim> _1109_prim = _1b4c80060_Prim(&(*(_self_)));;
	return ((_1109_prim != nullptr) && (*_1109_prim.alloc)._field_Kind.equal("void", 4));;
}



inline jule::Bool _1b4c7e009_Comparable(_1b4c7c90e_TypeKind* _self_) {
	{
		_1b4c7c90e_TypeKind* _11717__self = _self_;;
		if ((_1b4c815d3_Struct(_11717__self) != nullptr)) {
			return (*(_1b4c815d3_Struct(_11717__self)))._field_Comparable;;
		};
		return (((_1b4c81b00_Map(_11717__self) == nullptr) && (_1b4c810b6_Slc(_11717__self) == nullptr)) && (_1b4c8134c_Fn(_11717__self) == nullptr));;
	};
}



inline jule::Bool _1b4c7e290_Mutable(_1b4c7c90e_TypeKind* _self_) {
	{
		_1b4c7c90e_TypeKind* _12817__self = _self_;;
		if ((_1b4c815d3_Struct(_12817__self) != nullptr)) {
			return (*(_1b4c815d3_Struct(_12817__self)))._field_Mutable;;
		};
		if ((_1b4c81869_Trait(_12817__self) != nullptr)) {
			return true;;
		};
		if ((_1b4c80060_Prim(_12817__self) != nullptr)) {
			jule::Ptr<_1b4c854d8_Prim> _13617_p = _1b4c80060_Prim(_12817__self);;
			return _1b4c88c06_IsAny(_13617_p.ptr());;
		};
		if ((_1b4c80d30_Arr(_12817__self) != nullptr)) {
			return _1b4c7e290_Mutable((*(_1b4c80d30_Arr(_12817__self)))._field_Elem.ptr());;
		};
		return (((_1b4c810b6_Slc(_12817__self) != nullptr) || (_1b4c8057c_Ptr(_12817__self) != nullptr)) || (_1b4c802e6_Sptr(_12817__self) != nullptr));;
	};
}



inline jule::Bool _1b4c7e526_Ordered(_1b4c7c90e_TypeKind* _self_) {
	{
		_1b4c7c90e_TypeKind* _15117__self = _self_;;
		jule::Ptr<_1b4c854d8_Prim> _15213_prim = _1b4c80060_Prim(_15117__self);;
		if ((_15213_prim != nullptr)) {
			return (_1b2752e64_IsNum((*_15213_prim.alloc)._field_Kind) || _1b4c88970_IsStr(_15213_prim));;
		};
		if ((_1b4c8057c_Ptr(_15117__self) != nullptr)) {
			return true;;
		};
		jule::Ptr<_1b4b24641_StructIns> _15913_s = _1b4c815d3_Struct(_15117__self);;
		if ((_15913_s != nullptr)) {
			return (((((*_15913_s.alloc)._field_Operators._field_Gt != nullptr) && ((*_15913_s.alloc)._field_Operators._field_GtEq != nullptr)) && ((*_15913_s.alloc)._field_Operators._field_Lt != nullptr)) && ((*_15913_s.alloc)._field_Operators._field_LtEq != nullptr));;
		};
		jule::Ptr<_1b4b4c449_Enum> _16613_enm = _1b4c80813_Enum(_15117__self);;
		if ((_16613_enm != nullptr)) {
			return _1b2752e64_IsNum(_1b4c7ccc7_Str((*((*_16613_enm.alloc)._field_Kind))._field_Kind.ptr()));;
		};
		return false;;
	};
}



inline jule::Bool _1b4c7e7ac_NilCompatible(_1b4c7c90e_TypeKind* _self_) {
	{
		_1b4c7c90e_TypeKind* _17717__self = _self_;;
		jule::Ptr<_1b4c854d8_Prim> _17913_prim = _1b4c80060_Prim(_17717__self);;
		if (((_17913_prim != nullptr) && _1b4c88c06_IsAny(_17913_prim))) {
			return true;;
		};
		return (((((((_1b4c7d9dc_IsNil(_17717__self) || (_1b4c8134c_Fn(_17717__self) != nullptr)) || (_1b4c802e6_Sptr(_17717__self) != nullptr)) || (_1b4c8057c_Ptr(_17717__self) != nullptr)) || (_1b4c81869_Trait(_17717__self) != nullptr)) || (_1b4c810b6_Slc(_17717__self) != nullptr)) || (_1b4c81b00_Map(_17717__self) != nullptr)) || (_1b4c80a99_TypeEnum(_17717__self) != nullptr));;
	};
}



inline jule::Bool _1b4c7ea43_PerformsRC(_1b4c7c90e_TypeKind* _self_) {
	{
		_1b4c7c90e_TypeKind* _19817__self = _self_;;
		jule::Ptr<_1b4c854d8_Prim> _19913_prim = _1b4c80060_Prim(_19817__self);;
		if ((_19913_prim != nullptr)) {
			return (_1b4c88c06_IsAny(_19913_prim) || _1b4c88970_IsStr(_19913_prim));;
		};
		return (((_1b4c802e6_Sptr(_19817__self) != nullptr) || (_1b4c810b6_Slc(_19817__self) != nullptr)) || (_1b4c81869_Trait(_19817__self) != nullptr));;
	};
}



inline jule::Bool _1b4c7ecc9_Variadicable(_1b4c7c90e_TypeKind* _self_) {
	{
		_1b4c7c90e_TypeKind* _21017__self = _self_;;
		return (_1b4c810b6_Slc(_21017__self) != nullptr);;
	};
}



inline jule::Ptr<_1b4c854d8_Prim> _1b4c80060_Prim(_1b4c7c90e_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data20)) {
			_case_begin_1ab994299:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b4c854d8_Prim>((jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data20);;
			}
		}
		else {
			_case_begin_1ab9a7422:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab9a73bc:;
	};
}



inline jule::Ptr<_1b4c89014_Sptr> _1b4c802e6_Sptr(_1b4c7c90e_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data21)) {
			_case_begin_1ab9a805a:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b4c89014_Sptr>((jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data21);;
			}
		}
		else {
			_case_begin_1ab9a828b:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab9a8236:;
	};
}



inline jule::Ptr<_1b4c8c7cb_Ptr> _1b4c8057c_Ptr(_1b4c7c90e_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data26)) {
			_case_begin_1ab9a8c81:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b4c8c7cb_Ptr>((jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data26);;
			}
		}
		else {
			_case_begin_1ab9a8eb2:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab9a8e5c:;
	};
}



inline jule::Ptr<_1b4b4c449_Enum> _1b4c80813_Enum(_1b4c7c90e_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data3)) {
			_case_begin_1ab9a99a7:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b4b4c449_Enum>((jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data3);;
			}
		}
		else {
			_case_begin_1ab9a9bd8:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab9a9b83:;
	};
}



inline jule::Ptr<_1b4b4db54_TypeEnum> _1b4c80a99_TypeEnum(_1b4c7c90e_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data4)) {
			_case_begin_1ab9aa6cd:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b4b4db54_TypeEnum>((jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data4);;
			}
		}
		else {
			_case_begin_1ab9aa90e:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab9aa8a9:;
	};
}



inline jule::Ptr<_1b4c8bd08_Arr> _1b4c80d30_Arr(_1b4c7c90e_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data25)) {
			_case_begin_1ab9ab404:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b4c8bd08_Arr>((jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data25);;
			}
		}
		else {
			_case_begin_1ab9ab635:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab9ab5d0:;
	};
}



inline jule::Ptr<_1b4c899d7_Slc> _1b4c810b6_Slc(_1b4c7c90e_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data22)) {
			_case_begin_1ab9ac12a:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b4c899d7_Slc>((jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data22);;
			}
		}
		else {
			_case_begin_1ab9ac35b:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab9ac306:;
	};
}



inline jule::Ptr<_1b4b39865_FnIns> _1b4c8134c_Fn(_1b4c7c90e_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data1)) {
			_case_begin_1ab9acd51:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b4b39865_FnIns>((jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data1);;
			}
		}
		else {
			_case_begin_1ab9ad082:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab9ad02c:;
	};
}



inline jule::Ptr<_1b4b24641_StructIns> _1b4c815d3_Struct(_1b4c7c90e_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data0)) {
			_case_begin_1ab9ada77:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b4b24641_StructIns>((jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data0);;
			}
		}
		else {
			_case_begin_1ab9adca8:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab9adc53:;
	};
}



inline jule::Ptr<_1b4b49c3d_Trait> _1b4c81869_Trait(_1b4c7c90e_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data2)) {
			_case_begin_1ab9ae79d:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b4b49c3d_Trait>((jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data2);;
			}
		}
		else {
			_case_begin_1ab9ae9ce:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab9ae979:;
	};
}



inline jule::Ptr<_1b4c8b17b_Map> _1b4c81b00_Map(_1b4c7c90e_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data24)) {
			_case_begin_1ab9b04c4:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b4c8b17b_Map>((jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data24);;
			}
		}
		else {
			_case_begin_1ab9b0705:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab9b06a0:;
	};
}



inline jule::Ptr<_1b4c8a5cb_Tuple> _1b4c81d86_Tup(_1b4c7c90e_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data23)) {
			_case_begin_1ab9b11ea:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b4c8a5cb_Tuple>((jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data23);;
			}
		}
		else {
			_case_begin_1ab9b142b:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab9b13c6:;
	};
}



inline jule::Bool _1b4c8211c_comptime(_1b4c7c90e_TypeKind* _self_) {
	return (((((((((((((_1b4c83690_comptimeTypeInfos(_self_) != nullptr) || (_1b4c83926_comptimeTypeInfo(_self_) != nullptr)) || (_1b4c823a3_comptimeStructFields(_self_) != nullptr)) || (_1b4c82639_comptimeStructField(_self_) != nullptr)) || (_1b4c828c0_comptimeEnumFields(_self_) != nullptr)) || (_1b4c82b56_comptimeEnumField(_self_) != nullptr)) || (_1b4c83bac_comptimeStatics(_self_) != nullptr)) || (_1b4c83e43_comptimeStatic(_self_) != nullptr)) || (_1b4c82ddc_comptimeParams(_self_) != nullptr)) || (_1b4c83173_comptimeParam(_self_) != nullptr)) || (_1b4c841c9_comptimeValue(_self_) != nullptr)) || (_1b4c846e6_comptimeFiles(_self_) != nullptr)) || (_1b4c84460_comptimeFile(_self_) != nullptr));;
}



inline jule::Ptr<_1b4b54440_comptimeStructFields> _1b4c823a3_comptimeStructFields(_1b4c7c90e_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data7)) {
			_case_begin_1ab9b20b9:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b4b54440_comptimeStructFields>((jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data7);;
			}
		}
		else {
			_case_begin_1ab9b5991:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab9b593b:;
	};
}



inline jule::Ptr<_1b4b5277e_comptimeStructField> _1b4c82639_comptimeStructField(_1b4c7c90e_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data6)) {
			_case_begin_1ab9b6134:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b4b5277e_comptimeStructField>((jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data6);;
			}
		}
		else {
			_case_begin_1ab9b6321:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab9b62bb:;
	};
}



inline jule::Ptr<_1b4b5a18d_comptimeEnumFields> _1b4c828c0_comptimeEnumFields(_1b4c7c90e_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data11)) {
			_case_begin_1ab9b6d5a:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b4b5a18d_comptimeEnumFields>((jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data11);;
			}
		}
		else {
			_case_begin_1ab9b7047:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab9b6ee2:;
	};
}



inline jule::Ptr<_1b4b58ce6_comptimeEnumField> _1b4c82b56_comptimeEnumField(_1b4c7c90e_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data10)) {
			_case_begin_1ab9b7a81:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b4b58ce6_comptimeEnumField>((jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data10);;
			}
		}
		else {
			_case_begin_1ab9b7c6d:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab9b7c18:;
	};
}



inline jule::Ptr<_1b4b5d922_comptimeParams> _1b4c82ddc_comptimeParams(_1b4c7c90e_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data13)) {
			_case_begin_1ab9b87a7:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b4b5d922_comptimeParams>((jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data13);;
			}
		}
		else {
			_case_begin_1ab9b8994:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab9b893e:;
	};
}



inline jule::Ptr<_1b4b5b788_comptimeParam> _1b4c83173_comptimeParam(_1b4c7c90e_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data12)) {
			_case_begin_1ab9b9478:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b4b5b788_comptimeParam>((jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data12);;
			}
		}
		else {
			_case_begin_1ab9b96a9:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab9b9654:;
	};
}



inline jule::Ptr<_1b4b51cab_comptimeRange> _1b4c83409_comptimeRange(_1b4c7c90e_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data5)) {
			_case_begin_1ab9ba19e:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b4b51cab_comptimeRange>((jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data5);;
			}
		}
		else {
			_case_begin_1ab9ba3d0:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab9ba37a:;
	};
}



inline jule::Ptr<_1b4b5eed9_comptimeTypeInfos> _1b4c83690_comptimeTypeInfos(_1b4c7c90e_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data14)) {
			_case_begin_1ab9badc5:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b4b5eed9_comptimeTypeInfos>((jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data14);;
			}
		}
		else {
			_case_begin_1ab9bb106:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab9bb0a1:;
	};
}



inline jule::Ptr<_1b4b615d4_comptimeTypeInfo> _1b4c83926_comptimeTypeInfo(_1b4c7c90e_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data15)) {
			_case_begin_1ab9bbb51:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b4b615d4_comptimeTypeInfo>((jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data15);;
			}
		}
		else {
			_case_begin_1ab9bbd3d:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab9bbcd8:;
	};
}



inline jule::Ptr<_1b4b576eb_comptimeStatics> _1b4c83bac_comptimeStatics(_1b4c7c90e_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data9)) {
			_case_begin_1ab9bc877:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b4b576eb_comptimeStatics>((jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data9);;
			}
		}
		else {
			_case_begin_1ab9bca64:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab9bca0e:;
	};
}



inline jule::Ptr<_1b4b55a3a_comptimeStatic> _1b4c83e43_comptimeStatic(_1b4c7c90e_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data8)) {
			_case_begin_1ab9bd548:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b4b55a3a_comptimeStatic>((jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data8);;
			}
		}
		else {
			_case_begin_1ab9bd779:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab9bd724:;
	};
}



inline jule::Ptr<_1b4b67ae6_comptimeValue> _1b4c841c9_comptimeValue(_1b4c7c90e_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data16)) {
			_case_begin_1ab9be26e:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b4b67ae6_comptimeValue>((jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data16);;
			}
		}
		else {
			_case_begin_1ab9be4a0:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab9be44a:;
	};
}



inline jule::Ptr<_1b4b6ba40_comptimeFile> _1b4c84460_comptimeFile(_1b4c7c90e_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data18)) {
			_case_begin_1ab9bee95:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b4b6ba40_comptimeFile>((jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data18);;
			}
		}
		else {
			_case_begin_1ab9c01c6:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab9c0171:;
	};
}



inline jule::Ptr<_1b4b6a445_comptimeFiles> _1b4c846e6_comptimeFiles(_1b4c7c90e_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data17)) {
			_case_begin_1ab9c0bbb:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b4b6a445_comptimeFiles>((jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data17);;
			}
		}
		else {
			_case_begin_1ab9c0dec:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab9c0d97:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1b4c7c90e_TypeKind _Src) {
	_Stream << _1b4c7ccc7_Str(&_Src);
	return _Stream;
}



inline jule::Bool _1b4c84e55_checked(_1b4c84ad1_TypeSymbol* _self_) {
	return ((*(_self_))._field_Kind != nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4c84ad1_TypeSymbol _Src) {
	_Stream << "TypeSymbol{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1b4c85829_Str(_1b4c854d8_Prim* _self_) {
	return (*(_self_))._field_Kind;;
}



inline jule::Bool _1b4c85b6a_Equal(jule::Ptr<_1b4c854d8_Prim> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _50821_other) {
	jule::Ptr<_1b4c854d8_Prim> _5099_prim = _1b4c80060_Prim(_50821_other.ptr());;
	if ((_5099_prim == nullptr)) {
		return false;;
	};
	return ((*(_self_))._field_Kind == (*(_5099_prim))._field_Kind);;
}



inline jule::Bool _1b4c86110_IsConstraint(_1b4c854d8_Prim* _self_) {
	return ((((!(_1b4c88970_IsStr(_self_))) && (!(_1b4c88c06_IsAny(_self_)))) && (!(_1b4c886d9_IsBool(_self_)))) && (!(_1b2752e64_IsNum((*(_self_))._field_Kind))));;
}



inline jule::Bool _1b4c86396_IsI8(_1b4c854d8_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i8", 2);;
}



inline jule::Bool _1b4c8662c_IsI16(_1b4c854d8_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i16", 3);;
}



inline jule::Bool _1b4c868b3_IsI32(_1b4c854d8_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i32", 3);;
}



inline jule::Bool _1b4c86b49_IsI64(_1b4c854d8_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i64", 3);;
}



inline jule::Bool _1b4c86dd0_IsU8(_1b4c854d8_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u8", 2);;
}



inline jule::Bool _1b4c87166_IsU16(_1b4c854d8_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u16", 3);;
}



inline jule::Bool _1b4c873ec_IsU32(_1b4c854d8_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u32", 3);;
}



inline jule::Bool _1b4c87683_IsU64(_1b4c854d8_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u64", 3);;
}



inline jule::Bool _1b4c87919_IsF32(_1b4c854d8_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("f32", 3);;
}



inline jule::Bool _1b4c87ba0_IsF64(_1b4c854d8_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("f64", 3);;
}



inline jule::Bool _1b4c87e36_IsInt(_1b4c854d8_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("int", 3);;
}



inline jule::Bool _1b4c881bc_IsUint(_1b4c854d8_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("uint", 4);;
}



inline jule::Bool _1b4c88453_IsUintptr(_1b4c854d8_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("uintptr", 7);;
}



inline jule::Bool _1b4c886d9_IsBool(_1b4c854d8_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("bool", 4);;
}



inline jule::Bool _1b4c88970_IsStr(_1b4c854d8_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("str", 3);;
}



inline jule::Bool _1b4c88c06_IsAny(_1b4c854d8_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("any", 3);;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4c854d8_Prim _Src) {
	_Stream << _1b4c85829_Str(&_Src);
	return _Stream;
}



inline jule::Str _1b4c89388_Str(_1b4c89014_Sptr* _self_) {
	return (jule::Str::lit("&", 1) + _1b4c7ccc7_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1b4c896c9_Equal(jule::Ptr<_1b4c89014_Sptr> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _58521_other) {
	jule::Ptr<_1b4c89014_Sptr> _5869_sptr = _1b4c802e6_Sptr(_58521_other.ptr());;
	if ((_5869_sptr == nullptr)) {
		return false;;
	};
	return _1b4c7d118_Equal((*(_self_))._field_Elem, (*(_5869_sptr))._field_Elem);;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4c89014_Sptr _Src) {
	_Stream << _1b4c89388_Str(&_Src);
	return _Stream;
}



inline jule::Str _1b4c89e6b_Str(_1b4c899d7_Slc* _self_) {
	return (jule::Str::lit("[]", 2) + _1b4c7ccc7_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1b4c8a2ac_Equal(jule::Ptr<_1b4c899d7_Slc> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _60421_other) {
	jule::Ptr<_1b4c899d7_Slc> _6059_slc = _1b4c810b6_Slc(_60421_other.ptr());;
	if ((_6059_slc == nullptr)) {
		return false;;
	};
	return _1b4c7d118_Equal((*(_self_))._field_Elem, (*(_6059_slc))._field_Elem);;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4c899d7_Slc _Src) {
	_Stream << _1b4c89e6b_Str(&_Src);
	return _Stream;
}



inline jule::Str _1b4c8a950_Str(_1b4c8a5cb_Tuple* _self_) {
	_1cb1d27a9_StrBuilder _62113_s = static__1cb1d2a73_New(16LL);;
	_1cb1db692_WriteByte(&_62113_s, '(');
	_1cb1db3d9_WriteStr(&_62113_s, _1b4c7ccc7_Str((*(_self_))._field_Types[0LL].ptr()));
	{
		auto expr = (*(_self_))._field_Types.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1ab9d13e6:;
		if (it != expr_end) {
			jule::Ptr<_1b4c7c90e_TypeKind> *_62416_t = it;
			{
				_1cb1db692_WriteByte(&_62113_s, ',');
				_1cb1db3d9_WriteStr(&_62113_s, _1b4c7ccc7_Str((*(_62416_t)).ptr()));
			}
			_iter_next_1ab9d13e6:;
			++it;
			goto _iter_begin_1ab9d13e6;
		}
		_iter_end_1ab9d13e6:;
	};
	_1cb1db692_WriteByte(&_62113_s, ')');
	return _1cb1dbbd1_Str(&_62113_s);;
}



inline jule::Bool _1b4c8ac91_Equal(jule::Ptr<_1b4c8a5cb_Tuple> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _63321_other) {
	jule::Ptr<_1b4c8a5cb_Tuple> _6349_tup = _1b4c81d86_Tup(_63321_other.ptr());;
	if ((_6349_tup == nullptr)) {
		return false;;
	};
	if (((*(_self_))._field_Types.len() != (*(_6349_tup))._field_Types.len())) {
		return false;;
	};
	jule::I64 _64113_i = 0LL;;
	for (; (_64113_i < (*_self_.alloc)._field_Types.len()); (_64113_i)++) {
		{
			if ((!(_1b4c7d118_Equal((*_self_.alloc)._field_Types[_64113_i], (*(_6349_tup))._field_Types[_64113_i])))) {
				return false;;
			};
		}
	_iter_next_1ab9d3739:;
	}
	_iter_end_1ab9d3739:;;
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4c8a5cb_Tuple _Src) {
	_Stream << _1b4c8a950_Str(&_Src);
	return _Stream;
}



inline jule::Str _1b4c8b500_Str(_1b4c8b17b_Map* _self_) {
	_1cb1d27a9_StrBuilder _66113_s = static__1cb1d2a73_New(16LL);;
	_1cb1db3d9_WriteStr(&_66113_s, jule::Str::lit("map[", 4));
	_1cb1db3d9_WriteStr(&_66113_s, _1b4c7ccc7_Str((*(_self_))._field_Key.ptr()));
	_1cb1db692_WriteByte(&_66113_s, ']');
	_1cb1db3d9_WriteStr(&_66113_s, _1b4c7ccc7_Str((*(_self_))._field_Val.ptr()));
	return _1cb1dbbd1_Str(&_66113_s);;
}



inline jule::Bool _1b4c8b841_Equal(jule::Ptr<_1b4c8b17b_Map> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _67021_other) {
	jule::Ptr<_1b4c8b17b_Map> _6719_m = _1b4c81b00_Map(_67021_other.ptr());;
	if ((_6719_m == nullptr)) {
		return false;;
	};
	return (_1b4c7d118_Equal((*(_self_))._field_Key, (*(_6719_m))._field_Key) && _1b4c7d118_Equal((*_self_.alloc)._field_Val, (*(_6719_m))._field_Val));;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4c8b17b_Map _Src) {
	_Stream << _1b4c8b500_Str(&_Src);
	return _Stream;
}



inline jule::Str _1b4c8c17c_Str(_1b4c8bd08_Arr* _self_) {
	_1cb1d27a9_StrBuilder _68913_s = static__1cb1d2a73_New(16LL);;
	_1cb1db692_WriteByte(&_68913_s, '[');
	_1cb1db3d9_WriteStr(&_68913_s, _1b2745440_Itoa((*(_self_))._field_N));
	_1cb1db692_WriteByte(&_68913_s, ']');
	_1cb1db3d9_WriteStr(&_68913_s, _1b4c7ccc7_Str((*(_self_))._field_Elem.ptr()));
	return _1cb1dbbd1_Str(&_68913_s);;
}



inline jule::Bool _1b4c8c4bd_Equal(jule::Ptr<_1b4c8bd08_Arr> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _69821_other) {
	jule::Ptr<_1b4c8bd08_Arr> _6999_arr = _1b4c80d30_Arr(_69821_other.ptr());;
	if ((_6999_arr == nullptr)) {
		return false;;
	};
	return (((*(_self_))._field_N == (*(_6999_arr))._field_N) && _1b4c7d118_Equal((*_self_.alloc)._field_Elem, (*(_6999_arr))._field_Elem));;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4c8bd08_Arr _Src) {
	_Stream << _1b4c8c17c_Str(&_Src);
	return _Stream;
}



inline jule::Str _1b4c8cb50_Str(_1b4c8c7cb_Ptr* _self_) {
	if (_1b4c8d315_IsUnsafe(_self_)) {
		return jule::Str::lit("*unsafe", 7);;
	};
	return (jule::Str::lit("*", 1) + _1b4c7ccc7_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1b4c8ce91_Equal(jule::Ptr<_1b4c8c7cb_Ptr> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _72221_other) {
	jule::Ptr<_1b4c8c7cb_Ptr> _7239_ptr = _1b4c8057c_Ptr(_72221_other.ptr());;
	{
		
		if ((_7239_ptr == nullptr)) {
			_case_begin_1ab9e03d3:;
			{
				return false;;
			}
		}
		else if (_1b4c8d315_IsUnsafe(_7239_ptr.ptr())) {
			_case_begin_1ab9dec84:;
			{
				return _1b4c8d315_IsUnsafe(_self_.ptr());;
			}
		}
		else {
			_case_begin_1ab9de822:;
			{
				return _1b4c7d118_Equal((*(_self_))._field_Elem, (*(_7239_ptr))._field_Elem);;
			}
		}
		_match_end_1ab9de7ab:;
	};
}



inline jule::Bool _1b4c8d315_IsUnsafe(_1b4c8c7cb_Ptr* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4c8c7cb_Ptr _Src) {
	_Stream << _1b4c8cb50_Str(&_Src);
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4c8d7cc_referencer _Src) {
	_Stream << "referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}



inline void _1b4c90009_pushErr(_1b4c8e7bc_typeChecker* _self_, jule::Ptr<_1b4ad5712_Token> _81226_token, jule::Str _81241_fmt, jule::Slice<jule::Any> _81254_args) {
	_1b4bbd872_pushErr((*(_self_))._field_s.ptr(), _81226_token, _81241_fmt, _81254_args);
}



inline void _1b4c90207_allowBuiltin(_1b4c8e7bc_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1b4c90405_disallowBuiltin(_1b4c8e7bc_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline void _1ab9e452a_pushReference(_1b4c8e7bc_typeChecker* _self_, jule::Ptr<_1b4b24641_StructIns>* _82440_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1ab6a8bd4_Exist((*(_self_))._field_refers.ptr(), (*(_82440_t)))) {
		return;;
	};
	_1b4b3d825_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_82440_t)), &__jule_any_type9));
}

inline void _1ab9e6e23_pushReference(_1b4c8e7bc_typeChecker* _self_, jule::Ptr<_1b4b49c3d_Trait>* _82440_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1ab9e8b5b_Exist((*(_self_))._field_refers.ptr(), (*(_82440_t)))) {
		return;;
	};
	_1b4b3d825_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_82440_t)), &__jule_any_type10));
}



inline void _1b4c90966_pushReferenceByKind(_1b4c8e7bc_typeChecker* _self_, jule::Ptr<_1b4c7c90e_TypeKind>* _83443_k) {
	{
		
		if ((_1b4c815d3_Struct((*(_83443_k)).ptr()) != nullptr)) {
			_case_begin_1ab9e3161:;
			{
				jule::Ptr<_1b4b24641_StructIns> _83717_t = _1b4c815d3_Struct((*(_83443_k)).ptr());;
				_1ab9e452a_pushReference(_self_, &(_83717_t));
			}
		}
		else if ((_1b4c81869_Trait((*(_83443_k)).ptr()) != nullptr)) {
			_case_begin_1ab9e320a:;
			{
				jule::Ptr<_1b4b49c3d_Trait> _84017_t = _1b4c81869_Trait((*(_83443_k)).ptr());;
				_1ab9e6e23_pushReference(_self_, &(_84017_t));
			}
		}
		_match_end_1ab9e3051:;
	};
}



inline void _1b4c90d84_pushCycleError(_1b4c8e7bc_typeChecker* _self_, jule::Any _84529_def1, jule::Any _84540_def2, _1cb1d27a9_StrBuilder* _84556_message) {
	;
	jule::Fn<jule::Str,jule::Any*> _8479_getIdent = jule::__new_closure<jule::Str,jule::Any*>((void*)__jule_anon1ab9eae5a, nullptr, nullptr);;
	jule::Str _8579_m = _1cb1dbbd1_Str(_84556_message);;
	jule::Str _8589_def1Ident = _8479_getIdent(&(_84529_def1));;
	jule::Str _8599_def2Ident = _8479_getIdent(&(_84540_def2));;
	jule::Str _8609_refersTo = _1cb285582_Logf(jule::Str::lit("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any(_8589_def1Ident, &__jule_any_type4),jule::Any(_8599_def2Ident, &__jule_any_type4)}));;
	_1cb1db3d9_WriteStr(_84556_message, _1cb1bd751_Repeat(jule::Str::lit(" ", 1), 7LL));
	_1cb1db3d9_WriteStr(_84556_message, _8609_refersTo);
	_1cb1db692_WriteByte(_84556_message, '\n');
	_1cb1db3d9_WriteStr(_84556_message, _8579_m);
}



inline jule::Bool _1b4c91280_checkCrossCycle(_1b4c8e7bc_typeChecker* _self_, jule::Any _86730_decl, _1cb1d27a9_StrBuilder* _86746_message) {
	{
		auto &_match_expr{ _86730_decl };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1aba000d5:;
			{
				jule::Ptr<_1b4c7bb1c_TypeAlias> _87013_ta = _86730_decl.unsafe_cast_ptr<_1b4c7bb1c_TypeAlias>();;
				{
					auto expr = &((*(_87013_ta))._field_Refers);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aba01081:;
					if (it != expr_end) {
						jule::Any *_87120_d = it;
						{
							{
								
								if (((*(_87120_d)) == (*((*(_self_))._field_referencer))._field_owner)) {
									_case_begin_1aba01878:;
									{
										_1b4c90d84_pushCycleError(_self_, jule::Any(_87013_ta, &__jule_any_type65), (*(_87120_d)), _86746_message);
										return false;;
									}
								}
								else if ((!(_1b4c91280_checkCrossCycle(_self_, (*(_87120_d)), _86746_message)))) {
									_case_begin_1aba01911:;
									{
										_1b4c90d84_pushCycleError(_self_, jule::Any(_87013_ta, &__jule_any_type65), (*(_87120_d)), _86746_message);
										return false;;
									}
								}
								_match_end_1aba01779:;
							};
						}
						_iter_next_1aba01081:;
						++it;
						goto _iter_begin_1aba01081;
					}
					_iter_end_1aba01081:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1ab9eee4d:;
			{
				jule::Ptr<_1b4b218b3_Struct> _88213_s = _86730_decl.unsafe_cast_ptr<_1b4b218b3_Struct>();;
				{
					auto expr = &((*(_88213_s))._field_Depends);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aba033c4:;
					if (it != expr_end) {
						jule::Ptr<_1b4b218b3_Struct> *_88320_d = it;
						{
							{
								
								if ((__jule_any_type64_compare((*((*(_self_))._field_referencer))._field_owner, (*(_88320_d))))) {
									_case_begin_1aba03bbb:;
									{
										_1b4c90d84_pushCycleError(_self_, jule::Any(_88213_s, &__jule_any_type64), jule::Any((*(_88320_d)), &__jule_any_type64), _86746_message);
										return false;;
									}
								}
								else if ((!(_1b4c91280_checkCrossCycle(_self_, jule::Any((*(_88320_d)), &__jule_any_type64), _86746_message)))) {
									_case_begin_1aba03c54:;
									{
										_1b4c90d84_pushCycleError(_self_, jule::Any(_88213_s, &__jule_any_type64), jule::Any((*(_88320_d)), &__jule_any_type64), _86746_message);
										return false;;
									}
								}
								_match_end_1aba03abc:;
							};
						}
						_iter_next_1aba033c4:;
						++it;
						goto _iter_begin_1aba033c4;
					}
					_iter_end_1aba033c4:;
				};
			}
		}
		_match_end_1aba00080:;
	};
	return true;;
}



inline jule::Bool _1b4c9167b_checkIllegalCycles(_1b4c8e7bc_typeChecker* _self_, jule::Ptr<_1b4aeb2c7_IdentTypeDecl>* _90138_ident, jule::Any _90165_decl) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_referencer == nullptr) || (!((*(_self_))._field_cycleRisk)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _90165_decl };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1aba05c89:;
			{
				if ((*(_90165_decl.unsafe_cast_ptr<_1b4b218b3_Struct>()))._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1aba036e3:;
			{
				if ((*(_90165_decl.unsafe_cast_ptr<_1b4c7bb1c_TypeAlias>()))._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1aba0376a:;
	};
	if ((_90165_decl == (*((*(_self_))._field_referencer))._field_owner)) {
		_1b4c90009_pushErr(_self_, (*((*(_90138_ident))))._field_Token, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_referencer))._field_ident, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_1cb1d27a9_StrBuilder _92413_message = static__1cb1d2a73_New(32LL);;
	if ((!(_1b4c91280_checkCrossCycle(_self_, _90165_decl, &(_92413_message))))) {
		jule::Str _92717_errMsg = _1cb1dbbd1_Str(&_92413_message);;
		_1cb1dbdce_Clear(&_92413_message);
		_1b4c90d84_pushCycleError(_self_, (*((*(_self_))._field_referencer))._field_owner, _90165_decl, &(_92413_message));
		_92717_errMsg+=_1cb1dbbd1_Str(&_92413_message);
		_1b4c90009_pushErr(_self_, (*((*(_90138_ident))))._field_Token, jule::Str::lit("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_92717_errMsg, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_referencer))._field_owner };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1aba0a6b7:;
			{
				{
					{ jule::Slice<jule::Any> *__jule_push_dest = (*((*(_self_))._field_referencer))._field_refs; __jule_push_dest->push(_90165_decl); };
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1aba09c16:;
			{
				{
					auto &_match_expr{ _90165_decl };
					
					if (_match_expr.type == &__jule_any_type64) {
						_case_begin_1aba0b069:;
						{
							jule::Ptr<_1b4b218b3_Struct> _94321_s = (*((*(_self_))._field_referencer))._field_owner.unsafe_cast_ptr<_1b4b218b3_Struct>();;
							(*(_94321_s))._field_Depends=jule::append((*_94321_s.alloc)._field_Depends,jule::Slice<jule::Ptr<_1b4b218b3_Struct>>::make({_90165_decl.unsafe_cast_ptr<_1b4b218b3_Struct>()}));
						}
					}
					_match_end_1aba0b003:;
				};
			}
		}
		_match_end_1aba0a662:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Trait _1b4c91a77_fromTypeAlias(_1b4c8e7bc_typeChecker* _self_, jule::Ptr<_1b4aeb2c7_IdentTypeDecl>* _95133_decl, jule::Ptr<_1b4c7bb1c_TypeAlias>* _95160_ta) {
	if ((!(_1b4bbe0d1_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_95160_ta))))._field_Public, (*((*(_95160_ta))))._field_Token)))) {
		_1b4c90009_pushErr(_self_, (*((*(_95133_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_95133_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	(*((*(_95160_ta))))._field_Used=true;
	if (((*((*(_95133_decl))))._field_Generics.len() > 0LL)) {
		_1b4c90009_pushErr(_self_, (*((*(_95133_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_95133_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if (((!((*(_self_))._field_inscatch)) && ((*(_self_))._field_bannedGenerics != nullptr))) {
		(*(_self_))._field_inscatch=true;
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aba112b1:;
			if (it != expr_end) {
				jule::Ptr<_1b4c7bb1c_TypeAlias> _96820_bg = *it;
				{
					if (((_96820_bg == (*(_95160_ta))) || (((*((*((*(_95160_ta))))._field_Kind))._field_Kind != nullptr) && _1b4c7d118_Equal((*(*((*(_95160_ta))))._field_Kind.alloc)._field_Kind, (*(*(_96820_bg))._field_Kind.alloc)._field_Kind)))) {
						(*(_self_))._field_inscatch=false;
						goto _iter_end_1aba112b1;
					};
				}
				_iter_next_1aba112b1:;
				++it;
				goto _iter_begin_1aba112b1;
			}
			_iter_end_1aba112b1:;
		};
	};
	if ((*(_self_))._field_inscatch) {
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aba1358d:;
			if (it != expr_end) {
				jule::Ptr<_1b4c7bb1c_TypeAlias> _97920_bg = *it;
				{
					if ((_97920_bg == (*(_95160_ta)))) {
						_1b4c90009_pushErr(_self_, (*((*(_95133_decl))))._field_Token, jule::Str::lit("type declaration causes initiation cycle", 40), jule::Slice<jule::Any>::make({jule::Any((*((*(_95133_decl))))._field_Ident, &__jule_any_type4)}));
						return nullptr;;
					};
					{
						auto expr = &((*((*(_95160_ta))))._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1aba13e73:;
						if (it != expr_end) {
							jule::Ptr<_1b4c7bb1c_TypeAlias> _98424_dg = *it;
							{
								if ((_97920_bg == _98424_dg)) {
									_1b4c90009_pushErr(_self_, (*((*(_95133_decl))))._field_Token, jule::Str::lit("type declaration causes initiation cycle", 40), jule::Slice<jule::Any>::make({jule::Any((*((*(_95133_decl))))._field_Ident, &__jule_any_type4)}));
									return nullptr;;
								};
							}
							_iter_next_1aba13e73:;
							++it;
							goto _iter_begin_1aba13e73;
						}
						_iter_end_1aba13e73:;
					};
				}
				_iter_next_1aba1358d:;
				++it;
				goto _iter_begin_1aba1358d;
			}
			_iter_end_1aba1358d:;
		};
	};
	jule::Bool _99313_ok = _1b4c9167b_checkIllegalCycles(_self_, _95133_decl, jule::Any((*(_95160_ta)), &__jule_any_type65));;
	if ((!(_99313_ok))) {
		return nullptr;;
	};
	if (((*(*((*(_95160_ta))))._field_Kind.alloc)._field_Kind == nullptr)) {
		_99313_ok=_1b4bcab15_checkTypeAliasDeclKind((*(_self_))._field_s, _95160_ta, (*(_self_))._field_lookup);
		if ((!(_99313_ok))) {
			return nullptr;;
		};
	};
	if (((*((*(_95160_ta))))._field_Generic && ((*(_self_))._field_ownerAlias != nullptr))) {
		(*(*(_self_))._field_ownerAlias.alloc)._field_Generics=jule::append((*(*(_self_))._field_ownerAlias.alloc)._field_Generics,jule::Slice<jule::Ptr<_1b4c7bb1c_TypeAlias>>::make({(*(_95160_ta))}));
	};
	jule::Ptr<_1b4c7c90e_TypeKind> _101213_tk = jule::new_ptr<_1b4c7c90e_TypeKind>(_1b4c7c90e_TypeKind{._field_Generic=(*((*(_95160_ta))))._field_Generic, ._field_Kind=(*(*(*((*(_95160_ta))))._field_Kind.alloc)._field_Kind.alloc)._field_Kind});;
	_1b4c90966_pushReferenceByKind(_self_, &(_101213_tk));
	if ((*((*(_95160_ta))))._field_Binded) {
		(*(_101213_tk))._field_BindIdent=(*((*(_95160_ta))))._field_Ident;
	} else {
		(*(_101213_tk))._field_BindIdent=(*(*(*((*(_95160_ta))))._field_Kind.alloc)._field_Kind.alloc)._field_BindIdent;
	};
	return jule::Trait(_101213_tk, (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data19);;
}



inline jule::Ptr<_1b4b4c449_Enum> _1b4c91e73_fromEnum(_1b4c8e7bc_typeChecker* _self_, jule::Ptr<_1b4aeb2c7_IdentTypeDecl>* _102528_decl, jule::Ptr<_1b4b4c449_Enum>* _102555_e) {
	if ((!(_1b4bbe0d1_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_102555_e))))._field_Public, (*((*(_102555_e))))._field_Token)))) {
		_1b4c90009_pushErr(_self_, (*((*(_102528_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_102528_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_102528_decl))))._field_Generics.len() > 0LL)) {
		_1b4c90009_pushErr(_self_, (*((*(_102528_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_102528_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	return (*(_102555_e));;
}



inline jule::Ptr<_1b4b4db54_TypeEnum> _1b4c9236e_fromTypeEnum(_1b4c8e7bc_typeChecker* _self_, jule::Ptr<_1b4aeb2c7_IdentTypeDecl>* _103732_decl, jule::Ptr<_1b4b4db54_TypeEnum>* _103759_e) {
	if ((!(_1b4bbe0d1_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_103759_e))))._field_Public, (*((*(_103759_e))))._field_Token)))) {
		_1b4c90009_pushErr(_self_, (*((*(_103732_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_103732_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_103732_decl))))._field_Generics.len() > 0LL)) {
		_1b4c90009_pushErr(_self_, (*((*(_103732_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_103732_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	return (*(_103759_e));;
}



inline jule::Ptr<_1b4b49c3d_Trait> _1b4c9276a_fromTrait(_1b4c8e7bc_typeChecker* _self_, jule::Ptr<_1b4aeb2c7_IdentTypeDecl>* _104929_decl, jule::Ptr<_1b4b49c3d_Trait>* _104956_t) {
	if ((!(_1b4bbe0d1_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_104956_t))))._field_Public, (*((*(_104956_t))))._field_Token)))) {
		_1b4c90009_pushErr(_self_, (*((*(_104929_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_104929_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_104929_decl))))._field_Generics.len() > 0LL)) {
		_1b4c90009_pushErr(_self_, (*((*(_104929_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_104929_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	_1ab9e6e23_pushReference(_self_, _104956_t);
	return (*(_104956_t));;
}



inline jule::Bool _1b4c92b66_checkStructIns(_1b4c8e7bc_typeChecker* _self_, jule::Ptr<_1b4b24641_StructIns>* _106238_ins, jule::Ptr<_1b4ad5712_Token>* _106260_errorToken) {
	jule::Bool __jule_func_result = false;
	if ((*((*(_106238_ins))))._field_Checked) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*((*(_106238_ins))))._field_Checked=true;
	if ((((*(_self_))._field_referencer != nullptr) && (__jule_any_type64_compare((*(*(_self_))._field_referencer.alloc)._field_owner, (*((*(_106238_ins))))._field_Decl)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((!(_1b4bd7209_precheckStructIns((*(_self_))._field_s, _106238_ins, (*(_106260_errorToken)))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if (((*((*(_106238_ins))))._field_Generics.len() > 0LL)) {
		_1b4bd7c21_checkStructInsOperators((*(_self_))._field_s, (*(_106238_ins)));
		_1b4bd74b2_checkStructIns((*(_self_))._field_s, _106238_ins);
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1b4c92e1e_appendUsedStructReference(_1b4c8e7bc_typeChecker* _self_, jule::Ptr<_1b4b218b3_Struct>* _108349_s) {
	if (((*(_self_))._field_referencer == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_referencer))._field_owner };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1aba27b24:;
			{
				jule::Ptr<_1b4b218b3_Struct> _108917_refS = (*((*(_self_))._field_referencer))._field_owner.unsafe_cast_ptr<_1b4b218b3_Struct>();;
				if ((!(_1b4b23343_IsUses(_108917_refS.ptr(), (*(_108349_s)))))) {
					(*_108917_refS.alloc)._field_Uses=jule::append((*_108917_refS.alloc)._field_Uses,jule::Slice<jule::Ptr<_1b4b218b3_Struct>>::make({(*(_108349_s))}));
				};
			}
		}
		_match_end_1aba27abe:;
	};
}



inline jule::Ptr<_1b4b24641_StructIns> _1b4c9331a_buildStructInstance(_1b4c8e7bc_typeChecker* _self_, jule::Ptr<_1b4aeb2c7_IdentTypeDecl>* _109643_decl, jule::Ptr<_1b4b218b3_Struct>* _109670_s) {
	jule::Ptr<_1b4c8d7cc_referencer> _109813_referencer = (*(_self_))._field_referencer;;
	(*(_self_))._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_1b4c7bb1c_TypeAlias>> _110013_bannedGenerics = (*(_self_))._field_bannedGenerics;;
	if (((*(_self_))._field_bannedGenerics == nullptr)) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b4c9c500_Lookup_mptr_data0)) {
				_case_begin_1aba2aad3:;
				{
					jule::Ptr<_1b4b80cb8_scopeChecker> _110721_sc = (*(_self_))._field_lookup.cast_ptr<_1b4b80cb8_scopeChecker>((jule::Trait::Type*)&_1b4c9c500_Lookup_mptr_data0);;
					jule::Ptr<_1b4b80cb8_scopeChecker> _110821_hard = _1b4b843e8_getHardRoot(_110721_sc);;
					if ((((*((*(_110821_hard))._field_owner))._field_Owner == nullptr) || ((*((*(*_110821_hard.alloc)._field_owner.alloc)._field_Owner))._field_Decl != (*(_109670_s))))) {
						goto _match_end_1aba2aa7d;
					};
					jule::I64 _111217_n = ((*(*_110821_hard.alloc)._field_owner.alloc)._field_Generics.len() + (*((*(*_110821_hard.alloc)._field_owner.alloc)._field_Owner))._field_Generics.len());;
					(*(_self_))._field_bannedGenerics=(*((*_110821_hard.alloc)._field_table))._field_TypeAliases.slice(0LL, _111217_n);
				}
			}
			_match_end_1aba2aa7d:;
		};
	} else {
		(*(_self_))._field_inscatch=true;
	};
	jule::Trait _112213_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=(*(_self_))._field_rootLookup;
	jule::Ptr<_1b4b24641_StructIns> _112613_ins = _1b4b21d25_instance((*(_109670_s)));;
	(*(_112613_ins))._field_Generics=jule::Slice<jule::Ptr<_1b4c7b028_InsGeneric>>::alloc(0LL, (*((*(_109643_decl))))._field_Generics.len());
	{
		auto expr = &((*((*(_109643_decl))))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba30db3:;
		if (it != expr_end) {
			jule::Ptr<_1b4aeabbc_TypeDecl> _112821_g = *it;
			{
				jule::Ptr<_1b4c7c90e_TypeKind> _112917_kind = _1b4c96b26_build(_self_, &((*(_112821_g))._field_Kind));;
				if ((_112917_kind == nullptr)) {
					return nullptr;;
				};
				(*_112613_ins.alloc)._field_Generics=jule::append((*_112613_ins.alloc)._field_Generics,jule::Slice<jule::Ptr<_1b4c7b028_InsGeneric>>::make({jule::new_ptr<_1b4c7b028_InsGeneric>(_1b4c7b028_InsGeneric{._field_Kind=_112917_kind, })}));
			}
			_iter_next_1aba30db3:;
			++it;
			goto _iter_begin_1aba30db3;
		}
		_iter_end_1aba30db3:;
	};
	(*(_self_))._field_lookup=_112213_lookup;
	(*(_self_))._field_bannedGenerics=_110013_bannedGenerics;
	(*(_self_))._field_referencer=_109813_referencer;
	return _112613_ins;;
}



inline jule::Ptr<_1b4b24641_StructIns> _1b4c93716_fromStruct(_1b4c8e7bc_typeChecker* _self_, jule::Ptr<_1b4aeb2c7_IdentTypeDecl>* _114434_decl, jule::Ptr<_1b4b218b3_Struct>* _114461_s) {
	if ((!(_1b4bbe0d1_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_114461_s))))._field_Public, (*((*(_114461_s))))._field_Token)))) {
		_1b4c90009_pushErr(_self_, (*((*(_114434_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_114434_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if ((*(_self_))._field_selection) {
		if (((*((*(_114434_decl))))._field_Generics.len() > 0LL)) {
			_1b4c90009_pushErr(_self_, (*((*(_114434_decl))))._field_Token, jule::Str::lit("generics are not allowed in this scope", 38), jule::Slice<jule::Any>());
			return nullptr;;
		};
		return jule::new_ptr<_1b4b24641_StructIns>(_1b4b24641_StructIns{._field_Decl=(*(_114461_s)), });;
	};
	jule::Bool _116213_ok = _1b4c9167b_checkIllegalCycles(_self_, _114434_decl, jule::Any((*(_114461_s)), &__jule_any_type64));;
	if ((!(_116213_ok))) {
		return nullptr;;
	};
	_1b4c92e1e_appendUsedStructReference(_self_, _114461_s);
	jule::Ptr<_1b4b24641_StructIns> _116813_ins = _1b4c9331a_buildStructInstance(_self_, _114434_decl, _114461_s);;
	if ((_116813_ins == nullptr)) {
		return nullptr;;
	};
	_116213_ok=_1b4bbeda1_checkGenericQuantity((*(_self_))._field_s, (*((*(_116813_ins))._field_Decl))._field_Generics.len(), (*(_116813_ins))._field_Generics.len(), (*((*(_114434_decl))))._field_Token);
	if ((!(_116213_ok))) {
		return nullptr;;
	};
	jule::Ptr<_1b4b24641_StructIns> _117813_existInstance = _1b4b22133_appendInstance((*(_114461_s)).ptr(), &(_116813_ins));;
	if ((_117813_existInstance != nullptr)) {
		if ((!(_1b4bc8d11_checkConstraintsStruct((*(_self_))._field_s, &(_116813_ins), &((*((*(_114434_decl))))._field_Token), _117813_existInstance)))) {
			return nullptr;;
		};
		_1ab9e452a_pushReference(_self_, &(_117813_existInstance));
		return _117813_existInstance;;
	};
	if ((!(_1b4c92b66_checkStructIns(_self_, &(_116813_ins), &((*((*(_114434_decl))))._field_Token))))) {
		return nullptr;;
	};
	_1ab9e452a_pushReference(_self_, &(_116813_ins));
	return _116813_ins;;
}



inline jule::Trait _1b4c93a57_getDef(_1b4c8e7bc_typeChecker* _self_, jule::Ptr<_1b4aeb2c7_IdentTypeDecl>* _120230_decl) {
	{
		auto expr = &((*(_self_))._field_ignoreGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba3a64d:;
		if (it != expr_end) {
			jule::Ptr<_1b4b07dc7_GenericDecl> _120316_g = *it;
			{
				if (((*(_120316_g))._field_Ident == (*((*(_120230_decl))))._field_Ident)) {
					return jule::Trait(_1b4c9982c_buildPrimType((*_120316_g.alloc)._field_Ident), (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data20);;
				};
			}
			_iter_next_1aba3a64d:;
			++it;
			goto _iter_begin_1aba3a64d;
		}
		_iter_end_1aba3a64d:;
	};
	{
		auto expr = &((*(_self_))._field_useGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba3a98e:;
		if (it != expr_end) {
			jule::Ptr<_1b4c7bb1c_TypeAlias> _120921_g = *it;
			{
				if (((*(_120921_g))._field_Ident == (*((*(_120230_decl))))._field_Ident)) {
					if (((*((*(_120230_decl))))._field_Generics.len() > 0LL)) {
						_1b4c90009_pushErr(_self_, (*((*(_120230_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_120230_decl))))._field_Ident, &__jule_any_type4)}));
						return nullptr;;
					};
					jule::Ptr<_1b4b24641_StructIns> _121521_st = _1b4c815d3_Struct((*((*_120921_g.alloc)._field_Kind))._field_Kind.ptr());;
					if ((_121521_st != nullptr)) {
						jule::Bool _121721_ok = _1b4c9167b_checkIllegalCycles(_self_, _120230_decl, jule::Any((*_121521_st.alloc)._field_Decl, &__jule_any_type64));;
						if ((!(_121721_ok))) {
							return nullptr;;
						};
					};
					return (*(*(*_120921_g.alloc)._field_Kind.alloc)._field_Kind.alloc)._field_Kind;;
				};
			}
			_iter_next_1aba3a98e:;
			++it;
			goto _iter_begin_1aba3a98e;
		}
		_iter_end_1aba3a98e:;
	};
	if ((!((*((*(_120230_decl))))._field_Binded))) {
		jule::Ptr<_1b4b4c449_Enum> _122717_e = ((_1b4c9c500_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1b4c9c05a_FindEnum((*(_self_))._field_lookup.data, (*((*(_120230_decl))))._field_Ident);;
		if ((_122717_e != nullptr)) {
			return jule::Trait(_1b4c91e73_fromEnum(_self_, _120230_decl, &(_122717_e)), (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data3);;
		};
		jule::Ptr<_1b4b4db54_TypeEnum> _123217_te = ((_1b4c9c500_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1b4c9c39b_FindTypeEnum((*(_self_))._field_lookup.data, (*((*(_120230_decl))))._field_Ident);;
		if ((_123217_te != nullptr)) {
			return jule::Trait(_1b4c9236e_fromTypeEnum(_self_, _120230_decl, &(_123217_te)), (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data4);;
		};
		jule::Ptr<_1b4b49c3d_Trait> _123717_t = ((_1b4c9c500_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1b4c9bc19_FindTrait((*(_self_))._field_lookup.data, (*((*(_120230_decl))))._field_Ident);;
		if ((_123717_t != nullptr)) {
			return jule::Trait(_1b4c9276a_fromTrait(_self_, _120230_decl, &(_123717_t)), (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data2);;
		};
	} else if ((*(_self_))._field_selection) {
		_1b4c90009_pushErr(_self_, (*((*(_120230_decl))))._field_Token, jule::Str::lit("binded definitions are not allowed in this scope", 48), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b4b218b3_Struct> _124613_s = ((_1b4c9c500_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1b4c9b4cc_FindStruct((*(_self_))._field_lookup.data, (*((*(_120230_decl))))._field_Ident, (*((*(_120230_decl))))._field_Binded);;
	if ((_124613_s != nullptr)) {
		return jule::Trait(_1b4c93716_fromStruct(_self_, _120230_decl, &(_124613_s)), (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data0);;
	};
	jule::Ptr<_1b4c7bb1c_TypeAlias> _125113_ta = ((_1b4c9c500_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1b4c9b0d1_FindTypeAlias((*(_self_))._field_lookup.data, (*((*(_120230_decl))))._field_Ident, (*((*(_120230_decl))))._field_Binded);;
	if (((_125113_ta == nullptr) && (!((*(_self_))._field_disBuiltin)))) {
		_125113_ta=_1b4d63572_findBuiltinTypeAlias((*((*(_120230_decl))))._field_Ident);
	};
	if ((_125113_ta != nullptr)) {
		return _1b4c91a77_fromTypeAlias(_self_, _120230_decl, &(_125113_ta));;
	};
	_1b4c90009_pushErr(_self_, (*((*(_120230_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_120230_decl))))._field_Ident, &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Trait _1b4c93d98_buildIdent(_1b4c8e7bc_typeChecker* _self_, jule::Ptr<_1b4aeb2c7_IdentTypeDecl> _126333_decl) {
	return _1b4c93a57_getDef(_self_, &(_126333_decl));;
}



inline jule::Trait _1b4c941d9_buildSubIdent(_1b4c8e7bc_typeChecker* _self_, jule::Ptr<_1b4aeb591_SubIdentTypeDecl> _126736_decl) {
	jule::Trait _126813_ident = _1b4c93d98_buildIdent(_self_, (*(_126736_decl))._field_Idents[0LL]);;
	if ((_126813_ident == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _126813_ident };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data4)) {
			_case_begin_1aba4846e:;
			{
				goto _match_end_1aba48529;
			}
		}
		else {
			_case_begin_1aba4857e:;
			{
				_1b4c90009_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1aba48529:;
	};
	jule::Ptr<_1b4b4db54_TypeEnum> _127913_t = _126813_ident.cast_ptr<_1b4b4db54_TypeEnum>((jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data4);;
	jule::Slice<jule::Ptr<_1b4aeb2c7_IdentTypeDecl>> _128013_idents = (*_126736_decl.alloc)._field_Idents.slice(1LL);;
	{
		auto expr = &(_128013_idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba4a097:;
		if (it != expr_end) {
			jule::I64 _128113_i = it - expr->begin();
			jule::Ptr<_1b4aeb2c7_IdentTypeDecl> _128116_id = *it;
			{
				jule::Ptr<_1b4b4d57c_TypeEnumItem> _128217_item = _1b4b4e715_FindItem(_127913_t.ptr(), (*(_128116_id))._field_Ident);;
				if ((_128217_item == nullptr)) {
					_1b4c90009_pushErr(_self_, (*_128116_id.alloc)._field_Token, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*_127913_t.alloc)._field_Ident, &__jule_any_type4),jule::Any((*_128116_id.alloc)._field_Ident, &__jule_any_type4)}));
					return nullptr;;
				};
				if (((_128013_idents.len() - _128113_i) == 1LL)) {
					_1b4c90966_pushReferenceByKind(_self_, &((*((*(_128217_item))._field_Kind))._field_Kind));
					return jule::Trait((*(*(_128217_item))._field_Kind.alloc)._field_Kind, (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data19);;
				};
				_127913_t=_1b4c80a99_TypeEnum((*(*(_128217_item))._field_Kind.alloc)._field_Kind.ptr());
				if ((_127913_t == nullptr)) {
					_1b4c90009_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
			_iter_next_1aba4a097:;
			++it;
			_128113_i++;
			goto _iter_begin_1aba4a097;
		}
		_iter_end_1aba4a097:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b4c89014_Sptr> _1b4c9452a_buildSptrFromType(_1b4c8e7bc_typeChecker* _self_, jule::Ptr<_1b4c7c90e_TypeKind>* _130141_elem) {
	{
		
		if (((*(_130141_elem)) == nullptr)) {
			_case_begin_1aba4e7a5:;
			{
				return nullptr;;
			}
		}
		else if ((_1b4c815d3_Struct((*(_130141_elem)).ptr()) != nullptr)) {
			_case_begin_1aba4e84e:;
			{
				jule::Ptr<_1b4b24641_StructIns> _130713_s = _1b4c815d3_Struct((*(_130141_elem)).ptr());;
				if ((((*(_130713_s))._field_Decl != nullptr) && (*(*_130713_s.alloc)._field_Decl.alloc)._field_Binded)) {
					_1b4c90009_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("binded structures cannot supports reference counting", 52), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
		}
		else if (((_1b4c80d30_Arr((*(_130141_elem)).ptr()) != nullptr) && (*(_1b4c80d30_Arr((*(_130141_elem)).ptr())))._field_Auto)) {
			_case_begin_1aba4e8b5:;
			{
				_1b4c90009_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1aba4de8b:;
	};
	return jule::new_ptr<_1b4c89014_Sptr>(_1b4c89014_Sptr{._field_Elem=(*(_130141_elem))});;
}



inline jule::Ptr<_1b4c89014_Sptr> _1b4c9486b_buildSptr(_1b4c8e7bc_typeChecker* _self_, jule::Ptr<_1b4aebc67_SptrTypeDecl> _132132_decl) {
	jule::Bool _13229_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13229_cycleRisk;
	});;
	jule::Ptr<_1b4c7c90e_TypeKind> _132613_elem = _1b4c96e67_checkDecl(_self_, &((*(_132132_decl))._field_Elem));;
	return _1b4c9452a_buildSptrFromType(_self_, &(_132613_elem));;
}



inline jule::Ptr<_1b4c8c7cb_Ptr> _1b4c94bac_buildPtrFromType(_1b4c8e7bc_typeChecker* _self_, jule::Ptr<_1b4c7c90e_TypeKind>* _133040_elem) {
	{
		
		if (((*(_133040_elem)) == nullptr)) {
			_case_begin_1aba54887:;
			{
				return nullptr;;
			}
		}
		else if (((_1b4c80d30_Arr((*(_133040_elem)).ptr()) != nullptr) && (*(_1b4c80d30_Arr((*(_133040_elem)).ptr())))._field_Auto)) {
			_case_begin_1aba54931:;
			{
				_1b4c90009_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
				return jule::new_ptr<_1b4c8c7cb_Ptr>();;
			}
		}
		_match_end_1aba54777:;
	};
	return jule::new_ptr<_1b4c8c7cb_Ptr>(_1b4c8c7cb_Ptr{._field_Elem=(*(_133040_elem))});;
}



inline jule::Ptr<_1b4c8c7cb_Ptr> _1b4c94eed_buildPtr(_1b4c8e7bc_typeChecker* _self_, jule::Ptr<_1b4aec6e6_PtrTypeDecl> _134531_decl) {
	jule::Bool _13469_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13469_cycleRisk;
	});;
	jule::Ptr<_1b4c7c90e_TypeKind> _135017_elem = nullptr;;
	if ((!(_1b4aeca59_IsUnsafe(_134531_decl.ptr())))) {
		_135017_elem=_1b4c96e67_checkDecl(_self_, &((*_134531_decl.alloc)._field_Elem));
		return _1b4c94bac_buildPtrFromType(_self_, &(_135017_elem));;
	};
	return jule::new_ptr<_1b4c8c7cb_Ptr>(_1b4c8c7cb_Ptr{._field_Elem=_135017_elem});;
}



inline jule::Ptr<_1b4c899d7_Slc> _1b4c9533e_buildSlc(_1b4c8e7bc_typeChecker* _self_, jule::Ptr<_1b4aec0ec_SlcTypeDecl> _136231_decl) {
	jule::Bool _13639_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13639_cycleRisk;
	});;
	jule::Ptr<_1b4c7c90e_TypeKind> _136713_elem = _1b4c96e67_checkDecl(_self_, &((*(_136231_decl))._field_Elem));;
	{
		
		if ((_136713_elem == nullptr)) {
			_case_begin_1aba59969:;
			{
				return nullptr;;
			}
		}
		else if (((_1b4c80d30_Arr(_136713_elem.ptr()) != nullptr) && (*(_1b4c80d30_Arr(_136713_elem)))._field_Auto)) {
			_case_begin_1aba59a13:;
			{
				_1b4c90009_pushErr(_self_, (*((*_136231_decl.alloc)._field_Elem))._field_Token, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1aba59914:;
	};
	return jule::new_ptr<_1b4c899d7_Slc>(_1b4c899d7_Slc{._field_Elem=_136713_elem});;
}



inline jule::Ptr<_1b4c8bd08_Arr> _1b4c95680_buildArr(_1b4c8e7bc_typeChecker* _self_, jule::Ptr<_1b4aece88_ArrTypeDecl> _138331_decl) {
	jule::I64 _138413_n = 0LL;;
	if ((!(_1b4aed2eb_AutoSized(_138331_decl.ptr())))) {
		jule::Ptr<_1b4c466a8_Data> _138717_size = _1b4c6b49c_evalExpr(_1b4bc5d1e_eval((*(_self_))._field_s, (*(_self_))._field_lookup), (*_138331_decl.alloc)._field_Size);;
		if ((_138717_size == nullptr)) {
			return nullptr;;
		};
		if ((!(_1b4c470b0_IsConst(_138717_size.ptr())))) {
			_1b4c90009_pushErr(_self_, (*((*_138331_decl.alloc)._field_Size))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
			return nullptr;;
		} else if (((_1b4c80060_Prim((*(_138717_size))._field_Kind.ptr()) == nullptr) || (!(_1b275288c_IsInt((*(_1b4c80060_Prim((*(_138717_size))._field_Kind)))._field_Kind))))) {
			_1b4c90009_pushErr(_self_, (*((*_138331_decl.alloc)._field_Size))._field_Token, jule::Str::lit("array size must be integer", 26), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_138413_n=static_cast<jule::I64>(_1b2755b9d_AsI64((*(_138717_size))._field_Constant.ptr()));
		if ((_138413_n < 0LL)) {
			_1b4c90009_pushErr(_self_, (*((*_138331_decl.alloc)._field_Elem))._field_Token, jule::Str::lit("array size must be positive integer", 35), jule::Slice<jule::Any>());
			return nullptr;;
		} else {
			jule::I64 _140517_max = _1b274d8ee_MaxI(jule::Str::lit("int", 3));;
			if (((_1b27467c6_BitSize != 64LL) && (static_cast<jule::I64>(_138413_n) > _140517_max))) {
				_1b4c90009_pushErr(_self_, (*((*_138331_decl.alloc)._field_Size))._field_Token, jule::Str::lit("array with size @ overflows limit (@) of the system", 51), jule::Slice<jule::Any>::make({jule::Any(_1b4c7891b_constoa(&((*(_138717_size))._field_Constant)), &__jule_any_type4),jule::Any(_1b2745176_FmtInt(_140517_max, 10LL), &__jule_any_type4)}));
				return nullptr;;
			};
		};
	};
	jule::Ptr<_1b4c7c90e_TypeKind> _141413_elem = _1b4c96e67_checkDecl(_self_, &((*_138331_decl.alloc)._field_Elem));;
	{
		
		if ((_141413_elem == nullptr)) {
			_case_begin_1aba64479:;
			{
				return nullptr;;
			}
		}
		else if (((_1b4c80d30_Arr(_141413_elem.ptr()) != nullptr) && (*(_1b4c80d30_Arr(_141413_elem)))._field_Auto)) {
			_case_begin_1aba64501:;
			{
				_1b4c90009_pushErr(_self_, (*((*_138331_decl.alloc)._field_Elem))._field_Token, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1aba629c7:;
	};
	return jule::new_ptr<_1b4c8bd08_Arr>(_1b4c8bd08_Arr{._field_Auto=_1b4aed2eb_AutoSized(_138331_decl), ._field_N=_138413_n, ._field_Elem=_141413_elem});;
}



inline jule::Ptr<_1b4c8b17b_Map> _1b4c959c1_buildMap(_1b4c8e7bc_typeChecker* _self_, jule::Ptr<_1b4aed6d6_MapTypeDecl> _143231_decl) {
	jule::Bool _14339_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_14339_cycleRisk;
	});;
	jule::Ptr<_1b4c7c90e_TypeKind> _143713_key = _1b4c96e67_checkDecl(_self_, &((*(_143231_decl))._field_Key));;
	if ((_143713_key == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1b4c7c90e_TypeKind> _144213_val = _1b4c96e67_checkDecl(_self_, &((*_143231_decl.alloc)._field_Val));;
	if ((_144213_val == nullptr)) {
		return nullptr;;
	};
	if ((_1b4c80813_Enum(_144213_val.ptr()) != nullptr)) {
		_1b4c90009_pushErr(_self_, (*((*_143231_decl.alloc)._field_Val))._field_Token, jule::Str::lit("maps do not support enums as map key type", 41), jule::Slice<jule::Any>());
	};
	return jule::new_ptr<_1b4c8b17b_Map>(_1b4c8b17b_Map{._field_Key=_143713_key, ._field_Val=_144213_val});;
}



inline jule::Ptr<_1b4c8a5cb_Tuple> _1b4c95d12_buildTuple(_1b4c8e7bc_typeChecker* _self_, jule::Ptr<_1b4aec3e9_TupleTypeDecl> _145633_decl) {
	jule::Slice<jule::Ptr<_1b4c7c90e_TypeKind>> _145713_types = jule::Slice<jule::Ptr<_1b4c7c90e_TypeKind>>::alloc(0LL, (*(_145633_decl))._field_Types.len());;
	{
		auto expr = &((*_145633_decl.alloc)._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba6a947:;
		if (it != expr_end) {
			jule::Ptr<_1b4aeabbc_TypeDecl> _145821_t = *it;
			{
				jule::Ptr<_1b4c7c90e_TypeKind> _145917_kind = _1b4c96e67_checkDecl(_self_, &(_145821_t));;
				if ((_145917_kind == nullptr)) {
					return nullptr;;
				};
				{ jule::Slice<jule::Ptr<_1b4c7c90e_TypeKind>> &__jule_push_dest = _145713_types; __jule_push_dest.push(_145917_kind); };
			}
			_iter_next_1aba6a947:;
			++it;
			goto _iter_begin_1aba6a947;
		}
		_iter_end_1aba6a947:;
	};
	return jule::new_ptr<_1b4c8a5cb_Tuple>(_1b4c8a5cb_Tuple{._field_Types=_145713_types});;
}



inline jule::Bool _1b4c96153_checkFuncTypes(_1b4c8e7bc_typeChecker* _self_, jule::Ptr<_1b4b39865_FnIns>* _146938_f) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_146938_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba6c460:;
		if (it != expr_end) {
			jule::Ptr<_1b4b387dc_ParamIns> _147021_p = *it;
			{
				(*(_147021_p))._field_Kind=_1b4c96b26_build(_self_, &((*((*((*((*_147021_p.alloc)._field_Decl))._field_Kind))._field_Decl))._field_Kind));
				__jule_func_result=((*_147021_p.alloc)._field_Kind != nullptr);
				if ((!(__jule_func_result))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				_1b4bc94b5_checkFnParamKind((*(_self_))._field_s, &(_147021_p));
			}
			_iter_next_1aba6c460:;
			++it;
			goto _iter_begin_1aba6c460;
		}
		_iter_end_1aba6c460:;
	};
	if ((!(_1b4b36d07_IsVoid((*((*(_146938_f))))._field_Decl.ptr())))) {
		(*((*(_146938_f))))._field_Result=_1b4c96b26_build(_self_, &((*(*((*((*(*((*(_146938_f))))._field_Decl.alloc)._field_Result))._field_Kind))._field_Decl.alloc)._field_Kind));
		__jule_func_result = ((*((*(_146938_f))))._field_Result != nullptr);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1b4b39865_FnIns> _1b4c96494_buildFunc(_1b4c8e7bc_typeChecker* _self_, jule::Ptr<_1b4b126d9_FnDecl> _148732_decl) {
	jule::Bool _14889_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_14889_cycleRisk;
	});;
	if (((*(_148732_decl))._field_Generics.len() > 0LL)) {
		_1b4c90009_pushErr(_self_, (*_148732_decl.alloc)._field_Token, jule::Str::lit("genericed functions cannot use as anonymous function", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b4b36884_Fn> _149713_f = _1b4b40ecb_buildFunc(_148732_decl);;
	jule::I64 _14999_n = (*((*(_self_))._field_s))._field_errors.len();;
	_1b4bd37aa_checkAnonFuncDecl((*(_self_))._field_s, &(_149713_f));
	if ((_14999_n != (*(*(_self_))._field_s.alloc)._field_errors.len())) {
		return nullptr;;
	};
	jule::Ptr<_1b4b39865_FnIns> _150513_ins = _1b4b37d5d_instanceForce(_149713_f);;
	(*(_150513_ins))._field_Anon=true;
	(*_150513_ins.alloc)._field_AsAnon=true;
	jule::Bool _15099_ok = _1b4c96153_checkFuncTypes(_self_, &(_150513_ins));;
	if ((!(_15099_ok))) {
		return nullptr;;
	};
	return _150513_ins;;
}



inline jule::Trait _1b4c967d5_buildByNamespace(_1b4c8e7bc_typeChecker* _self_, jule::Ptr<_1b4aeb96a_NamespaceTypeDecl> _151739_decl) {
	jule::Str _15189_path = _1b4c99453_buildLinkPathByTokens(&((*(_151739_decl))._field_Idents));;
	jule::Ptr<_1b4b9a893_ImportInfo> _151913_imp = ((_1b4c9c500_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1b4c9a7d9_SelectPackage((*(_self_))._field_lookup.data, jule::__new_closure<jule::Bool,jule::Ptr<_1b4b9a893_ImportInfo>>((void*)__jule_anon_1aba76b0c, jule::Ptr<__jule_anon_1aba76b0c_ctx>::make(__jule_anon_1aba76b0c_ctx{._151739_decl=_151739_decl,._15189_path=_15189_path}).as<jule::Uintptr>(), __jule_anon_1aba76b0c_ctx_handler));;
	jule::Str _15269_selfIdent = jule::Str::lit("self", 4);;
	if (((_151913_imp == nullptr) || (!(_1b4b9cdd4_isLookupable(_151913_imp.ptr(), &(_15269_selfIdent)))))) {
		_1b4c90009_pushErr(_self_, (*_151739_decl.alloc)._field_Idents[0LL], jule::Str::lit("undefined namespace: @", 22), jule::Slice<jule::Any>::make({jule::Any(_15189_path, &__jule_any_type4)}));
		return nullptr;;
	};
	_1b4c90405_disallowBuiltin(_self_);
	jule::Trait _153313_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait(_151913_imp, (jule::Trait::Type*)&_1b4c9c500_Lookup_mptr_data1);
	jule::Ptr<_1b4c7c90e_TypeKind> _153513_kind = _1b4c96e67_checkDecl(_self_, &((*_151739_decl.alloc)._field_Kind));;
	(*(_self_))._field_lookup=_153313_lookup;
	_1b4c90207_allowBuiltin(_self_);
	return jule::Trait(_153513_kind, (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data19);;
}



inline jule::Ptr<_1b4c7c90e_TypeKind> _1b4c96b26_build(_1b4c8e7bc_typeChecker* _self_, jule::Any* _154129_declKind) {
	jule::Trait _154217_kind = nullptr;;
	{
		auto &_match_expr{ (*(_154129_declKind)) };
		
		if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1aba7c5c4:;
			{
				jule::Trait _154517_t = _1b4c93d98_buildIdent(_self_, (*(_154129_declKind)).cast_ptr<_1b4aeb2c7_IdentTypeDecl>(&__jule_any_type74));;
				if ((_154517_t != nullptr)) {
					_154217_kind=_154517_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1aba7b9e1:;
			{
				jule::Trait _155017_t = _1b4c941d9_buildSubIdent(_self_, (*(_154129_declKind)).cast_ptr<_1b4aeb591_SubIdentTypeDecl>(&__jule_any_type87));;
				if ((_155017_t != nullptr)) {
					_154217_kind=_155017_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1aba7bb89:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1b4c89014_Sptr> _155617_t = _1b4c9486b_buildSptr(_self_, (*(_154129_declKind)).cast_ptr<_1b4aebc67_SptrTypeDecl>(&__jule_any_type71));;
				if ((_155617_t != nullptr)) {
					_154217_kind=jule::Trait(_155617_t, (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data21);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1aba7bc00:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1b4c8c7cb_Ptr> _156217_t = _1b4c94eed_buildPtr(_self_, (*(_154129_declKind)).cast_ptr<_1b4aec6e6_PtrTypeDecl>(&__jule_any_type70));;
				if ((_156217_t != nullptr)) {
					_154217_kind=jule::Trait(_156217_t, (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data26);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type69) {
			_case_begin_1aba7bc66:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1b4c899d7_Slc> _156817_t = _1b4c9533e_buildSlc(_self_, (*(_154129_declKind)).cast_ptr<_1b4aec0ec_SlcTypeDecl>(&__jule_any_type69));;
				if ((_156817_t != nullptr)) {
					_154217_kind=jule::Trait(_156817_t, (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data22);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1aba7bccc:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1b4c8bd08_Arr> _157417_t = _1b4c95680_buildArr(_self_, (*(_154129_declKind)).cast_ptr<_1b4aece88_ArrTypeDecl>(&__jule_any_type68));;
				if ((_157417_t != nullptr)) {
					_154217_kind=jule::Trait(_157417_t, (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data25);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1aba7bd43:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1b4c8b17b_Map> _158017_t = _1b4c959c1_buildMap(_self_, (*(_154129_declKind)).cast_ptr<_1b4aed6d6_MapTypeDecl>(&__jule_any_type72));;
				if ((_158017_t != nullptr)) {
					_154217_kind=jule::Trait(_158017_t, (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data24);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1aba7bda9:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1b4c8a5cb_Tuple> _158617_t = _1b4c95d12_buildTuple(_self_, (*(_154129_declKind)).cast_ptr<_1b4aec3e9_TupleTypeDecl>(&__jule_any_type73));;
				if ((_158617_t != nullptr)) {
					_154217_kind=jule::Trait(_158617_t, (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data23);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1aba7c690:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1b4b39865_FnIns> _159217_t = _1b4c96494_buildFunc(_self_, (*(_154129_declKind)).cast_ptr<_1b4b126d9_FnDecl>(&__jule_any_type14));;
				if ((_159217_t != nullptr)) {
					_154217_kind=jule::Trait(_159217_t, (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data1);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1aba7c706:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Trait _159817_t = _1b4c967d5_buildByNamespace(_self_, (*(_154129_declKind)).cast_ptr<_1b4aeb96a_NamespaceTypeDecl>(&__jule_any_type91));;
				if ((_159817_t != nullptr)) {
					_154217_kind=_159817_t;
				};
			}
		}
		else {
			_case_begin_1aba7bb23:;
			{
				_1b4c90009_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1aba7babd:;
	};
	if ((_154217_kind == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _154217_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data19)) {
			_case_begin_1aba8a868:;
			{
				return _154217_kind.cast_ptr<_1b4c7c90e_TypeKind>((jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data19);;
			}
		}
		else {
			_case_begin_1aba7cad0:;
			{
				jule::Ptr<_1b4c7c90e_TypeKind> _161317_tk = jule::new_ptr<_1b4c7c90e_TypeKind>(_1b4c7c90e_TypeKind{._field_Kind=_154217_kind});;
				{
					auto &_match_expr{ _154217_kind };
					
					if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data20)) {
						_case_begin_1aba88c95:;
						{
							if (((*(_self_))._field_ignoredGenerics != nullptr)) {
								{
									{ jule::Slice<jule::Ptr<_1b4c7c90e_TypeKind>> *__jule_push_dest = (*(_self_))._field_ignoredGenerics; __jule_push_dest->push(_161317_tk); };
								};
							};
						}
					}
					else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data0)) {
						_case_begin_1aba88b30:;
						{
							jule::Ptr<_1b4b24641_StructIns> _162017_s = _154217_kind.cast_ptr<_1b4b24641_StructIns>((jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data0);;
							if ((((*(_162017_s))._field_Decl != nullptr) && (*(*_162017_s.alloc)._field_Decl.alloc)._field_Binded)) {
								(*(_161317_tk))._field_BindIdent=(*(*_162017_s.alloc)._field_Decl.alloc)._field_Ident;
							};
						}
					}
					_match_end_1aba88c40:;
				};
				return _161317_tk;;
			}
		}
		_match_end_1aba7ca47:;
	};
}



inline jule::Ptr<_1b4c7c90e_TypeKind> _1b4c96e67_checkDecl(_1b4c8e7bc_typeChecker* _self_, jule::Ptr<_1b4aeabbc_TypeDecl>* _162933_decl) {
	jule::Ptr<_1b4ad5712_Token> _163113_errorToken = (*(_self_))._field_errorToken;;
	(*(_self_))._field_errorToken=(*((*(_162933_decl))))._field_Token;
	jule::Ptr<_1b4c7c90e_TypeKind> _163413_kind = _1b4c96b26_build(_self_, &((*((*(_162933_decl))))._field_Kind));;
	(*(_self_))._field_errorToken=_163113_errorToken;
	return _163413_kind;;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4c8e7bc_typeChecker _Src) {
	_Stream << "typeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "rootLookup:" << _Src._field_rootLookup << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "ignoreGenerics:" << _Src._field_ignoreGenerics << ", ";
	_Stream << "ignoredGenerics:" << _Src._field_ignoredGenerics << ", ";
	_Stream << "useGenerics:" << _Src._field_useGenerics << ", ";
	_Stream << "cycleRisk:" << _Src._field_cycleRisk << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "selection:" << _Src._field_selection << ", ";
	_Stream << "ownerAlias:" << _Src._field_ownerAlias << ", ";
	_Stream << "bannedGenerics:" << _Src._field_bannedGenerics << ", ";
	_Stream << "inscatch:" << _Src._field_inscatch;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1b4c978b3_prim(jule::Str* _165621_ident, jule::Ptr<_1b4c854d8_Prim> _165633_t) {
	return ((*(_165633_t))._field_Kind == (*(_165621_ident)));;
}



inline jule::Bool static__1b4c97c37_exist(jule::Str* _166022_ident, jule::Ptr<_1b4c7c90e_TypeKind>* _166039_k) {
	{
		
		if ((_1b4c80060_Prim((*(_166039_k)).ptr()) != nullptr)) {
			_case_begin_1aba90692:;
			{
				return static__1b4c978b3_prim(_166022_ident, _1b4c80060_Prim((*(_166039_k)).ptr()));;
			}
		}
		else if ((_1b4c802e6_Sptr((*(_166039_k)).ptr()) != nullptr)) {
			_case_begin_1aba90719:;
			{
				jule::Ptr<_1b4c89014_Sptr> _166517_sptr = _1b4c802e6_Sptr((*(_166039_k)).ptr());;
				return static__1b4c97c37_exist(_166022_ident, &((*(_166517_sptr))._field_Elem));;
			}
		}
		else if ((_1b4c8057c_Ptr((*(_166039_k)).ptr()) != nullptr)) {
			_case_begin_1aba90791:;
			{
				jule::Ptr<_1b4c8c7cb_Ptr> _166817_ptr = _1b4c8057c_Ptr((*(_166039_k)).ptr());;
				return static__1b4c97c37_exist(_166022_ident, &((*(_166817_ptr))._field_Elem));;
			}
		}
		else if ((_1b4c810b6_Slc((*(_166039_k)).ptr()) != nullptr)) {
			_case_begin_1aba90818:;
			{
				jule::Ptr<_1b4c899d7_Slc> _167117_slc = _1b4c810b6_Slc((*(_166039_k)).ptr());;
				return static__1b4c97c37_exist(_166022_ident, &((*(_167117_slc))._field_Elem));;
			}
		}
		else if ((_1b4c80d30_Arr((*(_166039_k)).ptr()) != nullptr)) {
			_case_begin_1aba909d3:;
			{
				jule::Ptr<_1b4c8bd08_Arr> _167417_arr = _1b4c80d30_Arr((*(_166039_k)).ptr());;
				return static__1b4c97c37_exist(_166022_ident, &((*(_167417_arr))._field_Elem));;
			}
		}
		else if ((_1b4c81b00_Map((*(_166039_k)).ptr()) != nullptr)) {
			_case_begin_1aba90a49:;
			{
				jule::Ptr<_1b4c8b17b_Map> _167717_m = _1b4c81b00_Map((*(_166039_k)).ptr());;
				return (static__1b4c97c37_exist(_166022_ident, &((*(_167717_m))._field_Key)) || static__1b4c97c37_exist(_166022_ident, &((*_167717_m.alloc)._field_Val)));;
			}
		}
		else if ((_1b4c815d3_Struct((*(_166039_k)).ptr()) != nullptr)) {
			_case_begin_1aba90ab0:;
			{
				jule::Ptr<_1b4b24641_StructIns> _168117_s = _1b4c815d3_Struct((*(_166039_k)).ptr());;
				{
					auto expr = &((*(_168117_s))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aba97b83:;
					if (it != expr_end) {
						jule::Ptr<_1b4c7b028_InsGeneric> _168225_g = *it;
						{
							if (static__1b4c97c37_exist(_166022_ident, &((*(_168225_g))._field_Kind))) {
								return true;;
							};
						}
						_iter_next_1aba97b83:;
						++it;
						goto _iter_begin_1aba97b83;
					}
					_iter_end_1aba97b83:;
				};
				return false;;
			}
		}
		else if ((_1b4c8134c_Fn((*(_166039_k)).ptr()) != nullptr)) {
			_case_begin_1aba90b26:;
			{
				jule::Ptr<_1b4b39865_FnIns> _168917_f = _1b4c8134c_Fn((*(_166039_k)).ptr());;
				{
					auto expr = &((*(_168917_f))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aba99679:;
					if (it != expr_end) {
						jule::Ptr<_1b4b387dc_ParamIns> _169025_p = *it;
						{
							if (_1b4b354cb_IsSelf((*(_169025_p))._field_Decl.ptr())) {
								goto _iter_next_1aba99679;
							};
							if (static__1b4c97c37_exist(_166022_ident, &((*_169025_p.alloc)._field_Kind))) {
								return true;;
							};
						}
						_iter_next_1aba99679:;
						++it;
						goto _iter_begin_1aba99679;
					}
					_iter_end_1aba99679:;
				};
				if (((*_168917_f.alloc)._field_Result != nullptr)) {
					return static__1b4c97c37_exist(_166022_ident, &((*_168917_f.alloc)._field_Result));;
				};
				return false;;
			}
		}
		else if ((_1b4c81d86_Tup((*(_166039_k)).ptr()) != nullptr)) {
			_case_begin_1aba90b9d:;
			{
				jule::Ptr<_1b4c8a5cb_Tuple> _170317_tup = _1b4c81d86_Tup((*(_166039_k)).ptr());;
				{
					auto expr = &((*(_170317_tup))._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aba9be95:;
					if (it != expr_end) {
						jule::Ptr<_1b4c7c90e_TypeKind> _170425_t = *it;
						{
							if (static__1b4c97c37_exist(_166022_ident, &(_170425_t))) {
								return true;;
							};
						}
						_iter_next_1aba9be95:;
						++it;
						goto _iter_begin_1aba9be95;
					}
					_iter_end_1aba9be95:;
				};
				return false;;
			}
		}
		else {
			_case_begin_1aba90571:;
			{
				return false;;
			}
		}
		_match_end_1aba90472:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1b4c97473_identTypeLookup _Src) {
	_Stream << "identTypeLookup{";
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b5725bd1_FileInfo _Src) {
	_Stream << "FileInfo{";
	_Stream << "Ast:" << _Src._field_Ast << ", ";
	_Stream << "Errors:" << _Src._field_Errors;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b576e06a_stmt _Src) {
	_Stream << "stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



inline void _1b577007c_stop(_1b576e90b_scopeParser* _self_) {
	(*(_self_))._field_pos=-1LL;
}



inline jule::Bool _1b5770313_stopped(_1b576e90b_scopeParser* _self_) {
	return ((*(_self_))._field_pos == -1LL);;
}



inline jule::Bool _1b5770599_finished(_1b576e90b_scopeParser* _self_) {
	return ((*(_self_))._field_pos >= (*(_self_))._field_stmts.len());;
}



inline jule::Bool _1b5770830_isLastSt(_1b576e90b_scopeParser* _self_) {
	return (((*(_self_))._field_pos + 1LL) >= (*(_self_))._field_stmts.len());;
}



inline void _1b5770b93_pushErr(_1b576e90b_scopeParser* _self_, jule::Ptr<_1b4ad5712_Token> _18826_token, jule::Str _18841_fmt) {
	_1b578d93b_pushErr((*(_self_))._field_p.ptr(), _18826_token, _18841_fmt, jule::Slice<jule::Any>());
}



inline void _1b5771006_pushSuggestion(_1b576e90b_scopeParser* _self_, jule::Str _19333_fmt, jule::Slice<jule::Any> _19346_args) {
	_1b578dc9e_pushSuggestion((*(_self_))._field_p.ptr(), _19333_fmt, _19346_args);
}



inline void _1b57712ae_insertAsNext(_1b576e90b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _19736_tokens) {
	(*(_self_))._field_stmts=jule::append((*(_self_))._field_stmts.slice(0LL, ((*(_self_))._field_pos + 1LL)),(*(_self_))._field_stmts.slice((*(_self_))._field_pos));
	(*(_self_))._field_stmts[((*(_self_))._field_pos + 1LL)]=jule::new_ptr<_1b576e06a_stmt>(_1b576e06a_stmt{._field_tokens=(*(_19736_tokens)), });
}



inline jule::Ptr<_1b576e06a_stmt> _1b5771545_next(_1b576e90b_scopeParser* _self_) {
	((*(_self_))._field_pos)++;
	return (*(_self_))._field_stmts[(*(_self_))._field_pos];;
}



inline jule::Ptr<_1b4b10a4a_ScopeTree> _1b5771941_buildScope(_1b576e90b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _20734_tokens, jule::Ptr<_1b4ad5712_Token> _20756_end) {
	jule::Ptr<_1b4b10a4a_ScopeTree> _20813_s = _1b576cce4_newScope();;
	(*(_20813_s))._field_Parent=(*(_self_))._field_s;
	(*_20813_s.alloc)._field_End=_20756_end;
	_1b576e90b_scopeParser _21113_ssp = _1b576e90b_scopeParser{._field_p=(*(_self_))._field_p, };;
	_1b577b7b4_build(&_21113_ssp, _20734_tokens, &(_20813_s));
	return _20813_s;;
}



inline jule::Ptr<_1b4b13894_VarDecl> _1b5771c82_buildVarSt(_1b576e90b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _21834_tokens) {
	jule::Ptr<_1b4b13894_VarDecl> _21913_v = _1b579170d_buildVar((*(_self_))._field_p, (*(_21834_tokens)));;
	(*(_21913_v))._field_Scope=(*(_self_))._field_s;
	return _21913_v;;
}



inline jule::Ptr<_1b4b13c6d_RetSt> _1b57720c3_buildRetSt(_1b576e90b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _22433_tokens) {
	jule::Ptr<_1b4b13c6d_RetSt> _22513_st = jule::new_ptr<_1b4b13c6d_RetSt>(_1b4b13c6d_RetSt{._field_Token=_22433_tokens[0LL], });;
	if ((_22433_tokens.len() > 1LL)) {
		(_22433_tokens).mut_slice(1LL);;
		(*(_22513_st))._field_Expr=_1b578e0e0_buildExpr((*(_self_))._field_p, &(_22433_tokens));
	};
	return _22513_st;;
}



inline jule::Ptr<_1b4b144dd_Iter> _1b5772414_buildWhileNextIter(_1b576e90b_scopeParser* _self_, jule::Ptr<_1b576e06a_stmt>* _23542_s) {
	jule::Ptr<_1b4b144dd_Iter> _23613_it = jule::new_ptr<_1b4b144dd_Iter>(_1b4b144dd_Iter{._field_Token=(*((*(_23542_s))))._field_tokens[0LL], });;
	jule::Slice<jule::Ptr<_1b4ad5712_Token>> _23913_tokens = (*((*(_23542_s))))._field_tokens.slice(1LL);;
	jule::Ptr<_1b4b14d18_WhileKind> _24013_kind = jule::new_ptr<_1b4b14d18_WhileKind>();;
	if ((_23913_tokens.len() > 0LL)) {
		(*_24013_kind.alloc)._field_Expr=_1b578e0e0_buildExpr((*(_self_))._field_p, &(_23913_tokens));
	};
	if (_1b5770830_isLastSt(_self_)) {
		_1b5770b93_pushErr(_self_, (*(_23613_it))._field_Token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	_23913_tokens=(*(_1b5771545_next(_self_)))._field_tokens;
	jule::Slice<jule::Ptr<_1b4ad5712_Token>> _25213_stTokens = _1b5788150_getBlockExpr(&(_23913_tokens));;
	if ((_25213_stTokens.len() > 0LL)) {
		jule::Ptr<_1b576e06a_stmt> _25417_stmt = jule::new_ptr<_1b576e06a_stmt>(_1b576e06a_stmt{._field_tokens=_25213_stTokens, ._field_terminated=(*((*(_23542_s))))._field_terminated});;
		(*_24013_kind.alloc)._field_NextToken=_25213_stTokens[0LL];
		(*_24013_kind.alloc)._field_Next=_1b577b451_buildSt(_self_, &(_25417_stmt));
	};
	jule::I64 _26213_i = _25213_stTokens.len();;
	jule::Slice<jule::Ptr<_1b4ad5712_Token>> _26313_blockTokens = _1b578b63c_range(&(_26213_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_23913_tokens));;
	if ((_26313_blockTokens == nullptr)) {
		_1b577007c_stop(_self_);
		_1b5770b93_pushErr(_self_, (*_23613_it.alloc)._field_Token, jule::Str::lit("body is not exist", 17));
		_1b5771006_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_26213_i < _23913_tokens.len())) {
		_1b5770b93_pushErr(_self_, _23913_tokens[_26213_i], jule::Str::lit("invalid syntax", 14));
	};
	(*_23613_it.alloc)._field_Scope=_1b5771941_buildScope(_self_, &(_26313_blockTokens), _23913_tokens[(_26213_i - 1LL)]);
	(*_23613_it.alloc)._field_Kind=jule::Any(_24013_kind, &__jule_any_type36);
	return _23613_it;;
}



inline jule::Ptr<_1b4b14d18_WhileKind> _1b5772755_buildWhileIterKind(_1b576e90b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _28042_tokens) {
	return jule::new_ptr<_1b4b14d18_WhileKind>(_1b4b14d18_WhileKind{._field_Expr=_1b578e0e0_buildExpr((*(_self_))._field_p, _28042_tokens), });;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1b4ad5712_Token>>> _1b5772a96_getRangeKindKeysTokens(_1b576e90b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _28646_toks) {
	jule::Slice<jule::Slice<jule::Ptr<_1b4ad5712_Token>>> _28713_vars;
	jule::Slice<_1cb285120_Log> _28719_errs;
	({
		__jule_tuple_ssx_1b4ad5712_Token__jule_tuple_s_1cb285120_Log __jule_assign_result = _1b578bdac_parts(_28646_toks, static_cast<jule::U64>(5LLU), true);
		_28713_vars = __jule_assign_result.__jule_result_arg0;
		_28719_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_28719_errs);
	return _28713_vars;;
}



inline jule::Ptr<_1b4b13894_VarDecl> _1b5772dd7_buildRangeKindKey(_1b576e90b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _29241_tokens) {
	if (((*(_29241_tokens)).len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1b4b13894_VarDecl> _29613_key = jule::new_ptr<_1b4b13894_VarDecl>(_1b4b13894_VarDecl{._field_Token=(*(_29241_tokens))[0LL], ._field_Setter=(*(_29241_tokens))[0LL], });;
	if (((*((*(_29613_key))._field_Token))._field_Id == static_cast<jule::U64>(32LLU))) {
		(*_29613_key.alloc)._field_Mutable=true;
		if (((*(_29241_tokens)).len() == 1LL)) {
			_1b5770b93_pushErr(_self_, (*_29613_key.alloc)._field_Token, jule::Str::lit("invalid syntax", 14));
		};
		(*_29613_key.alloc)._field_Token=(*(_29241_tokens))[1LL];
	} else if (((*(_29241_tokens)).len() > 1LL)) {
		_1b5770b93_pushErr(_self_, (*(_29241_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
	};
	if (((*((*(_29613_key))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1b5770b93_pushErr(_self_, (*_29613_key.alloc)._field_Token, jule::Str::lit("invalid syntax", 14));
		_1b5771006_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_29613_key.alloc)._field_Ident=(*(*_29613_key.alloc)._field_Token.alloc)._field_Kind;
	return _29613_key;;
}



inline jule::Slice<jule::Ptr<_1b4b13894_VarDecl>> _1b5773228_buildRangeKindKeys(_1b576e90b_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1b4ad5712_Token>>>* _31842_parts) {
	jule::Slice<jule::Ptr<_1b4b13894_VarDecl>> _31917_keys = nullptr;;
	{
		auto expr = _31842_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abc77637:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1b4ad5712_Token>> _32021_tokens = *it;
			{
				{ jule::Slice<jule::Ptr<_1b4b13894_VarDecl>> &__jule_push_dest = _31917_keys; __jule_push_dest.push(_1b5772dd7_buildRangeKindKey(_self_, &(_32021_tokens))); };
			}
			_iter_next_1abc77637:;
			++it;
			goto _iter_begin_1abc77637;
		}
		_iter_end_1abc77637:;
	};
	return _31917_keys;;
}



inline void _1b577358b_setupRangeKindKeysPlain(_1b576e90b_scopeParser* _self_, jule::Ptr<_1b4b15720_RangeKind>* _32647_rng, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _32669_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1b4ad5712_Token>>> _32713_keyTokens = _1b5772a96_getRangeKindKeysTokens(_self_, _32669_tokens);;
	if ((_32713_keyTokens.len() == 0LL)) {
		return;;
	};
	if ((_32713_keyTokens.len() > 2LL)) {
		_1b5770b93_pushErr(_self_, (*((*(_32647_rng))))._field_InToken, jule::Str::lit("range variables can be maximum two", 34));
	};
	jule::Slice<jule::Ptr<_1b4b13894_VarDecl>> _33413_keys = _1b5773228_buildRangeKindKeys(_self_, &(_32713_keyTokens));;
	(*((*(_32647_rng))))._field_KeyA=_33413_keys[0LL];
	if ((_33413_keys.len() > 1LL)) {
		(*((*(_32647_rng))))._field_KeyB=_33413_keys[1LL];
	};
}



inline void _1b57738ee_setupRangeKindKeysExplicit(_1b576e90b_scopeParser* _self_, jule::Ptr<_1b4b15720_RangeKind>* _34150_rng, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _34172_tokens) {
	jule::I64 _34213_i = 0LL;;
	jule::Slice<jule::Ptr<_1b4ad5712_Token>> _34313_rang = _1b578b63c_range(&(_34213_i), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _34172_tokens);;
	if ((_34213_i < (*(_34172_tokens)).len())) {
		_1b5770b93_pushErr(_self_, (*((*(_34150_rng))))._field_InToken, jule::Str::lit("invalid syntax", 14));
	};
	_1b577358b_setupRangeKindKeysPlain(_self_, _34150_rng, &(_34313_rang));
}



inline void _1b5773c62_setupRangeKindKeys(_1b576e90b_scopeParser* _self_, jule::Ptr<_1b4b15720_RangeKind>* _35042_rng, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _35064_tokens) {
	if (((*((*(_35064_tokens))[0LL]))._field_Id == static_cast<jule::U64>(74LLU))) {
		_1b57738ee_setupRangeKindKeysExplicit(_self_, _35042_rng, _35064_tokens);
		return;;
	};
	_1b577358b_setupRangeKindKeysPlain(_self_, _35042_rng, _35064_tokens);
}



inline jule::Ptr<_1b4b15720_RangeKind> _1b5774218_buildRangeIterKind(_1b576e90b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _35842_var_tokens, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _35914_exprTokens, jule::Ptr<_1b4ad5712_Token>* _35941_inToken) {
	jule::Ptr<_1b4b15720_RangeKind> _36013_rng = jule::new_ptr<_1b4b15720_RangeKind>(_1b4b15720_RangeKind{._field_InToken=(*(_35941_inToken)), });;
	if (((*(_35914_exprTokens)).len() == 0LL)) {
		_1b5770b93_pushErr(_self_, (*(_36013_rng))._field_InToken, jule::Str::lit("expression missing", 18));
		return _36013_rng;;
	};
	(*_36013_rng.alloc)._field_Expr=_1b578e0e0_buildExpr((*(_self_))._field_p, _35914_exprTokens);
	if (((*(_35842_var_tokens)).len() > 0LL)) {
		_1b5773c62_setupRangeKindKeys(_self_, &(_36013_rng), _35842_var_tokens);
	};
	return _36013_rng;;
}



inline jule::Any _1b5774614_buildCommonIterKind(_1b576e90b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _37443_tokens, jule::Ptr<_1b4ad5712_Token>* _37462_err_tok) {
	jule::I64 _37513_braceN = 0LL;;
	{
		auto expr = _37443_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abc82004:;
		if (it != expr_end) {
			jule::I64 _37614_i = it - expr->begin();
			jule::Ptr<_1b4ad5712_Token> _37621_tok = *it;
			{
				{
					auto &_match_expr{ (*(_37621_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1abc829a5:;
						{
							(_37513_braceN)++;
							goto _iter_next_1abc82004;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1abc82d7e:;
						{
							(_37513_braceN)--;
						}
					}
					_match_end_1abc82c91:;
				};
				if ((_37513_braceN != 0LL)) {
					goto _iter_next_1abc82004;
				};
				{
					auto &_match_expr{ (*(_37621_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(12LLU)) {
						_case_begin_1abc8407d:;
						{
							jule::Slice<jule::Ptr<_1b4ad5712_Token>> _39321_declTokens = (*(_37443_tokens)).slice(0LL, _37614_i);;
							jule::Slice<jule::Ptr<_1b4ad5712_Token>> _39421_exprTokens = (*(_37443_tokens)).slice((_37614_i + 1LL));;
							return jule::Any(_1b5774218_buildRangeIterKind(_self_, &(_39321_declTokens), &(_39421_exprTokens), &(_37621_tok)), &__jule_any_type38);;
						}
					}
					_match_end_1abc84567:;
				};
			}
			_iter_next_1abc82004:;
			++it;
			_37614_i++;
			goto _iter_begin_1abc82004;
		}
		_iter_end_1abc82004:;
	};
	return jule::Any(_1b5772755_buildWhileIterKind(_self_, _37443_tokens), &__jule_any_type36);;
}



inline jule::Ptr<_1b4b144dd_Iter> _1b5774955_buildCommonIter(_1b576e90b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _40138_tokens) {
	jule::Ptr<_1b4b144dd_Iter> _40213_it = jule::new_ptr<_1b4b144dd_Iter>(_1b4b144dd_Iter{._field_Token=_40138_tokens[0LL], });;
	(_40138_tokens).mut_slice(1LL);;
	if ((_40138_tokens.len() == 0LL)) {
		_1b577007c_stop(_self_);
		_1b5770b93_pushErr(_self_, (*(_40213_it))._field_Token, jule::Str::lit("body is not exist", 17));
		_1b5771006_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1b4ad5712_Token>> _41213_exprTokens = _1b5788150_getBlockExpr(&(_40138_tokens));;
	if ((_41213_exprTokens.len() > 0LL)) {
		(*_40213_it.alloc)._field_Kind=_1b5774614_buildCommonIterKind(_self_, &(_41213_exprTokens), &((*_40213_it.alloc)._field_Token));
	};
	jule::I64 _41613_i = _41213_exprTokens.len();;
	jule::Slice<jule::Ptr<_1b4ad5712_Token>> _41713_scopeTokens = _1b578b63c_range(&(_41613_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_40138_tokens));;
	if ((_41713_scopeTokens == nullptr)) {
		_1b577007c_stop(_self_);
		_1b5770b93_pushErr(_self_, (*_40213_it.alloc)._field_Token, jule::Str::lit("body is not exist", 17));
		_1b5771006_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_41613_i < _40138_tokens.len())) {
		_1b5770b93_pushErr(_self_, _40138_tokens[_41613_i], jule::Str::lit("invalid syntax", 14));
	};
	(*_40213_it.alloc)._field_Scope=_1b5771941_buildScope(_self_, &(_41713_scopeTokens), _40138_tokens[(_41613_i - 1LL)]);
	return _40213_it;;
}



inline jule::Ptr<_1b4b144dd_Iter> _1b5774c96_buildIterSt(_1b576e90b_scopeParser* _self_, jule::Ptr<_1b576e06a_stmt>* _43135_st) {
	if ((*((*(_43135_st))))._field_terminated) {
		return _1b5772414_buildWhileNextIter(_self_, _43135_st);;
	};
	return _1b5774955_buildCommonIter(_self_, (*((*(_43135_st))))._field_tokens);;
}



inline jule::Ptr<_1b4b15ae9_BreakSt> _1b57750d7_buildBreakSt(_1b576e90b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _43836_tokens) {
	jule::Ptr<_1b4b15ae9_BreakSt> _43913_brk = jule::new_ptr<_1b4b15ae9_BreakSt>(_1b4b15ae9_BreakSt{._field_Token=(*(_43836_tokens))[0LL], });;
	if (((*(_43836_tokens)).len() > 1LL)) {
		if (((*((*(_43836_tokens))[1LL]))._field_Id != static_cast<jule::U64>(1LLU))) {
			_1b5770b93_pushErr(_self_, (*(_43836_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
			_1b5771006_pushSuggestion(_self_, jule::Str::lit("write a label identifier because label expected", 47), jule::Slice<jule::Any>());
		} else {
			(*(_43913_brk))._field_Label=(*(_43836_tokens))[1LL];
			if (((*(_43836_tokens)).len() > 2LL)) {
				_1b5770b93_pushErr(_self_, (*(_43836_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
			};
		};
	};
	return _43913_brk;;
}



inline jule::Ptr<_1b4b15ec3_ContSt> _1b5775428_buildContSt(_1b576e90b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _45635_tokens) {
	jule::Ptr<_1b4b15ec3_ContSt> _45713_cont = jule::new_ptr<_1b4b15ec3_ContSt>(_1b4b15ec3_ContSt{._field_Token=(*(_45635_tokens))[0LL], });;
	if (((*(_45635_tokens)).len() > 1LL)) {
		if (((*((*(_45635_tokens))[1LL]))._field_Id != static_cast<jule::U64>(1LLU))) {
			_1b5770b93_pushErr(_self_, (*(_45635_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
			_1b5771006_pushSuggestion(_self_, jule::Str::lit("write a label identifier because label expected", 47), jule::Slice<jule::Any>());
		} else {
			(*(_45713_cont))._field_Label=(*(_45635_tokens))[1LL];
			if (((*(_45635_tokens)).len() > 2LL)) {
				_1b5770b93_pushErr(_self_, (*(_45635_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
			};
		};
	};
	return _45713_cont;;
}



inline jule::Ptr<_1b4b16479_If> _1b5775769_buildIf(_1b576e90b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _47431_tokens) {
	jule::Ptr<_1b4b16479_If> _47513_model = jule::new_ptr<_1b4b16479_If>(_1b4b16479_If{._field_Token=(*(_47431_tokens))[0LL], });;
	((*(_47431_tokens))).mut_slice(1LL);;
	jule::Slice<jule::Ptr<_1b4ad5712_Token>> _47913_exprTokens = _1b5788150_getBlockExpr(_47431_tokens);;
	jule::I64 _48013_i = 0LL;;
	if ((_47913_exprTokens.len() == 0LL)) {
		_1b5770b93_pushErr(_self_, (*(_47513_model))._field_Token, jule::Str::lit("expression missing", 18));
	} else {
		_48013_i=_47913_exprTokens.len();
	};
	jule::Slice<jule::Ptr<_1b4ad5712_Token>> _48613_scopeTokens = _1b578b63c_range(&(_48013_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _47431_tokens);;
	if ((_48613_scopeTokens == nullptr)) {
		_1b577007c_stop(_self_);
		_1b5770b93_pushErr(_self_, (*(_47513_model))._field_Token, jule::Str::lit("body is not exist", 17));
		_1b5771006_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b4ad5712_Token> _49313_end = (*(_47431_tokens))[(_48013_i - 1LL)];;
	if ((_48013_i < (*(_47431_tokens)).len())) {
		if (((*((*(_47431_tokens))[_48013_i]))._field_Id == static_cast<jule::U64>(14LLU))) {
			((*(_47431_tokens))).mut_slice(_48013_i);;
		} else {
			_1b5770b93_pushErr(_self_, (*(_47431_tokens))[_48013_i], jule::Str::lit("invalid syntax", 14));
			(*(_47431_tokens))=nullptr;
		};
	};
	(*_47513_model.alloc)._field_Expr=_1b578e0e0_buildExpr((*(_self_))._field_p, &(_47913_exprTokens));
	(*_47513_model.alloc)._field_Scope=_1b5771941_buildScope(_self_, &(_48613_scopeTokens), _49313_end);
	return _47513_model;;
}



inline jule::Ptr<_1b4b16853_Else> _1b5775aaa_buildElse(_1b576e90b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _50733_tokens) {
	jule::Ptr<_1b4b16853_Else> _50813_els = jule::new_ptr<_1b4b16853_Else>(_1b4b16853_Else{._field_Token=(*(_50733_tokens))[0LL], });;
	((*(_50733_tokens))).mut_slice(1LL);;
	jule::I64 _51213_i = 0LL;;
	jule::Slice<jule::Ptr<_1b4ad5712_Token>> _51313_scopeTokens = _1b578b63c_range(&(_51213_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _50733_tokens);;
	if ((_51313_scopeTokens == nullptr)) {
		if ((_51213_i < (*(_50733_tokens)).len())) {
			_1b5770b93_pushErr(_self_, (*(_50813_els))._field_Token, jule::Str::lit("else's cannot have any expression", 33));
		} else {
			_1b577007c_stop(_self_);
			_1b5770b93_pushErr(_self_, (*(_50813_els))._field_Token, jule::Str::lit("body is not exist", 17));
			_1b5771006_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	if ((_51213_i < (*(_50733_tokens)).len())) {
		_1b5770b93_pushErr(_self_, (*(_50733_tokens))[_51213_i], jule::Str::lit("invalid syntax", 14));
	};
	(*(_50813_els))._field_Scope=_1b5771941_buildScope(_self_, &(_51313_scopeTokens), (*(_50733_tokens))[(_51213_i - 1LL)]);
	return _50813_els;;
}



inline jule::Ptr<_1b4b16d09_Conditional> _1b5775deb_buildIfElseChain(_1b576e90b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _53139_tokens) {
	jule::Ptr<_1b4b16d09_Conditional> _53213_chain = jule::new_ptr<_1b4b16d09_Conditional>(_1b4b16d09_Conditional{._field_Head=_1b5775769_buildIf(_self_, &(_53139_tokens)), });;
	if (((*(_53213_chain))._field_Head == nullptr)) {
		return nullptr;;
	};
	while ((_53139_tokens.len() != 0LL)) {
		{
			if (((*(_53139_tokens[0LL]))._field_Id != static_cast<jule::U64>(14LLU))) {
				goto _iter_end_1abc9e461;
			};
			if (((_53139_tokens.len() > 1LL) && ((*(_53139_tokens[1LL]))._field_Id == static_cast<jule::U64>(13LLU)))) {
				(_53139_tokens).mut_slice(1LL);;
				jule::Ptr<_1b4b16479_If> _54421_elif = _1b5775769_buildIf(_self_, &(_53139_tokens));;
				(*_53213_chain.alloc)._field_Tail=jule::append((*_53213_chain.alloc)._field_Tail,jule::Slice<jule::Ptr<_1b4b16479_If>>::make({_54421_elif}));
				goto _iter_next_1abc9e461;
			};
			(*_53213_chain.alloc)._field_Default=_1b5775aaa_buildElse(_self_, &(_53139_tokens));
			goto _iter_end_1abc9e461;
		}
	_iter_next_1abc9e461:;
	}
	_iter_end_1abc9e461:;;
	return _53213_chain;;
}



inline jule::Ptr<_1b4b00001_Expr> _1b577623c_buildCoCallSt(_1b576e90b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _55436_tokens) {
	jule::Ptr<_1b4ad5712_Token> _5559_token = _55436_tokens[0LL];;
	(_55436_tokens).mut_slice(1LL);;
	jule::Ptr<_1b4b00001_Expr> _55713_e = _1b578e0e0_buildExpr((*(_self_))._field_p, &(_55436_tokens));;
	if ((_55713_e == nullptr)) {
		return _55713_e;;
	};
	{
		auto &_match_expr{ (*(_55713_e))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1abca35a8:;
			{
				(*((*(_55713_e))._field_Kind.unsafe_cast_ptr<_1b4b03c2a_FnCallExpr>()))._field_IsCo=true;
			}
		}
		else {
			_case_begin_1abca3ad6:;
			{
				_1b5770b93_pushErr(_self_, _5559_token, jule::Str::lit("statement must have function call expression", 44));
			}
		}
		_match_end_1abca3a81:;
	};
	return _55713_e;;
}



inline jule::Ptr<_1b4b0867a_GotoSt> _1b577657d_buildGotoSt(_1b576e90b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _57035_tokens) {
	jule::Ptr<_1b4b0867a_GotoSt> _57113_gt = jule::new_ptr<_1b4b0867a_GotoSt>(_1b4b0867a_GotoSt{._field_Token=(*(_57035_tokens))[0LL], });;
	if (((*(_57035_tokens)).len() == 1LL)) {
		_1b5770b93_pushErr(_self_, (*(_57113_gt))._field_Token, jule::Str::lit("missing label identifier for goto statement", 43));
		return nullptr;;
	} else if (((*(_57035_tokens)).len() > 2LL)) {
		_1b5770b93_pushErr(_self_, (*(_57035_tokens))[2LL], jule::Str::lit("invalid syntax", 14));
	};
	jule::Ptr<_1b4ad5712_Token> _58013_identToken = (*(_57035_tokens))[1LL];;
	if (((*(_58013_identToken))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1b5770b93_pushErr(_self_, _58013_identToken, jule::Str::lit("invalid syntax", 14));
		_1b5771006_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return _57113_gt;;
	};
	(*(_57113_gt))._field_Label=_58013_identToken;
	return _57113_gt;;
}



inline jule::Ptr<_1b4b08977_FallSt> _1b57768be_buildFallSt(_1b576e90b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _59035_tokens) {
	jule::Ptr<_1b4b08977_FallSt> _59113_fll = jule::new_ptr<_1b4b08977_FallSt>(_1b4b08977_FallSt{._field_Token=(*(_59035_tokens))[0LL]});;
	if (((*(_59035_tokens)).len() > 1LL)) {
		_1b5770b93_pushErr(_self_, (*(_59035_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
	};
	return _59113_fll;;
}



inline jule::Ptr<_1b4b17546_TypeAliasDecl> _1b5776c10_buildTypeAliasSt(_1b576e90b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _60040_tokens) {
	jule::Ptr<_1b4b17546_TypeAliasDecl> _60113_tad = _1b5790883_buildTypeAliasDecl((*(_self_))._field_p, _60040_tokens);;
	(*(_60113_tad))._field_Scope=(*(_self_))._field_s;
	return _60113_tad;;
}



inline void _1b57771d8_pushCaseExpr(_1b576e90b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _60635_tokens, jule::Ptr<_1b4ad5712_Token> _60657_token, jule::Bool _6079_typeMatch, jule::Slice<jule::Ptr<_1b4b00001_Expr>>* _60731_exprs) {
	if ((_60635_tokens.len() == 0LL)) {
		return;;
	};
	if (_6079_typeMatch) {
		jule::I64 _61217_i = 0LL;;
		jule::Ptr<_1b4aeabbc_TypeDecl> _61317_t;
		jule::Bool _61320_ok;
		({
			__jule_tuple_x_1b4aeabbc_TypeDecl__jule_tuple_bool __jule_assign_result = _1b5790542_buildType((*(_self_))._field_p, &(_60635_tokens), (&(_61217_i)), true);
			_61317_t = __jule_assign_result.__jule_result_arg0;
			_61320_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_61320_ok) {
			{ jule::Slice<jule::Ptr<_1b4b00001_Expr>> &__jule_push_dest = (*(_60731_exprs)); __jule_push_dest.push(jule::new_ptr<_1b4b00001_Expr>(_1b4b00001_Expr{._field_Token=_60635_tokens[0LL], ._field_End=_60635_tokens[(_60635_tokens.len() - 1LL)], ._field_Kind=jule::Any(_61317_t, &__jule_any_type89)})); };
			if ((_61217_i < _60635_tokens.len())) {
				_1b5770b93_pushErr(_self_, _60635_tokens[_61217_i], jule::Str::lit("invalid syntax", 14));
			};
		};
		return;;
	};
	{ jule::Slice<jule::Ptr<_1b4b00001_Expr>> &__jule_push_dest = (*(_60731_exprs)); __jule_push_dest.push(_1b578e0e0_buildExpr((*(_self_))._field_p, &(_60635_tokens))); };
}



inline __jule_tuple_sx_1b4b00001_Expr__jule_tuple_bool _1b577768e_buildCaseExprs(_1b576e90b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _62938_tokens, jule::Ptr<_1b4ad5712_Token>* _62961_colon, jule::Bool _62976_typeMatch) {
	__jule_tuple_sx_1b4b00001_Expr__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Slice<jule::Ptr<_1b4b00001_Expr>> _63013_exprs = jule::Slice<jule::Ptr<_1b4b00001_Expr>>::alloc(0LL, 1LL);;
	jule::I64 _63113_braceN = 0LL;;
	jule::I64 _63213_j = 0LL;;
	{
		auto expr = _62938_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abcaeeee:;
		if (it != expr_end) {
			jule::I64 _63314_i = it - expr->begin();
			jule::Ptr<_1b4ad5712_Token> _63321_tok = *it;
			{
				{
					auto &_match_expr{ (*(_63321_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1abcb1352:;
						{
							(_63113_braceN)++;
							goto _iter_next_1abcaeeee;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(75LLU) || _match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_1abcb172b:;
						{
							(_63113_braceN)--;
							goto _iter_next_1abcaeeee;
						}
					}
					_match_end_1abcb163d:;
				};
				if ((_63113_braceN != 0LL)) {
					goto _iter_next_1abcaeeee;
				};
				{
					
					if (((*(_63321_tok))._field_Id == static_cast<jule::U64>(66LLU))) {
						_case_begin_1abcb2d9d:;
						{
							jule::Slice<jule::Ptr<_1b4ad5712_Token>> _65217_exprTokens = (*(_62938_tokens)).slice(_63213_j, _63314_i);;
							if ((_65217_exprTokens.len() == 0LL)) {
								_1b5770b93_pushErr(_self_, _63321_tok, jule::Str::lit("expression missing", 18));
							} else {
								_1b57771d8_pushCaseExpr(_self_, (*(_62938_tokens)).slice(_63213_j, _63314_i), _63321_tok, _62976_typeMatch, &(_63013_exprs));
							};
							_63213_j=(_63314_i + 1LL);
						}
					}
					else if (((*(_63321_tok))._field_Id == static_cast<jule::U64>(8LLU))) {
						_case_begin_1abcb2e14:;
						{
							(*(_62961_colon))=_63321_tok;
							_1b57771d8_pushCaseExpr(_self_, (*(_62938_tokens)).slice(_63213_j, _63314_i), _63321_tok, _62976_typeMatch, &(_63013_exprs));
							((*(_62938_tokens))).mut_slice((_63314_i + 1LL));;
							__jule_func_result.__jule_result_arg0 = _63013_exprs;
							__jule_func_result.__jule_result_arg1 = (((_63314_i - _63213_j) == 0LL) || (_63013_exprs.len() != 0LL));
							return __jule_func_result;;
						}
					}
					_match_end_1abcb2c8d:;
				};
			}
			_iter_next_1abcaeeee:;
			++it;
			_63314_i++;
			goto _iter_begin_1abcaeeee;
		}
		_iter_end_1abcaeeee:;
	};
	_1b5770b93_pushErr(_self_, (*(_62938_tokens))[0LL], jule::Str::lit("invalid syntax", 14));
	(*(_62938_tokens))=nullptr;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline jule::Ptr<_1b4b10a4a_ScopeTree> _1b57779d0_buildCaseScope(_1b576e90b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _67138_tokens) {
	jule::I64 _67213_n = 0LL;;
	for (;;) {
		{
			jule::I64 _67417_i = 0LL;;
			jule::Slice<jule::Ptr<_1b4ad5712_Token>> _67517_next;
			({
				__jule_tuple_sx_1b4ad5712_Token__jule_tuple_bool __jule_assign_result = _1b576dc3a_skipSt(&(_67417_i), (*(_67138_tokens)).slice(_67213_n));
				_67517_next = __jule_assign_result.__jule_result_arg0;
			});
			if ((_67517_next.len() == 0LL)) {
				goto _iter_end_1abcb69b7;
			};
			jule::Ptr<_1b4ad5712_Token> _67913_tok = _67517_next[0LL];;
			if (((*(_67913_tok))._field_Id != static_cast<jule::U64>(66LLU))) {
				_67213_n+=_67417_i;
				goto _iter_next_1abcb69b7;
			};
			jule::Slice<jule::Ptr<_1b4ad5712_Token>> _68417_scopeTokens = (*(_67138_tokens)).slice(0LL, _67213_n);;
			jule::Ptr<_1b4b10a4a_ScopeTree> _68517_scope = _1b5771941_buildScope(_self_, &(_68417_scopeTokens), (*(_67138_tokens))[_67213_n]);;
			((*(_67138_tokens))).mut_slice(_67213_n);;
			return _68517_scope;;
		}
	_iter_next_1abcb69b7:;
	}
	_iter_end_1abcb69b7:;;
	jule::Ptr<_1b4ad5712_Token> _68917_end;;
	if (((*(_67138_tokens)).len() > 0LL)) {
		_68917_end=(*(_67138_tokens))[((*(_67138_tokens)).len() - 1LL)];
	};
	jule::Ptr<_1b4b10a4a_ScopeTree> _69313_scope = _1b5771941_buildScope(_self_, _67138_tokens, _68917_end);;
	(*(_67138_tokens))=nullptr;
	return _69313_scope;;
}



inline __jule_tuple_x_1b4b179ec_Case__jule_tuple_bool _1b5777dcb_buildCase(_1b576e90b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _69833_tokens, jule::Bool _69851_typeMatch) {
	__jule_tuple_x_1b4b179ec_Case__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1b4b179ec_Case> _69913_c = jule::new_ptr<_1b4b179ec_Case>(_1b4b179ec_Case{._field_Token=(*(_69833_tokens))[0LL], });;
	((*(_69833_tokens))).mut_slice(1LL);;
	jule::Ptr<_1b4ad5712_Token> _70317_colon = nullptr;;
	jule::Bool _70418_ok;
	({
		__jule_tuple_sx_1b4b00001_Expr__jule_tuple_bool __jule_assign_result = _1b577768e_buildCaseExprs(_self_, _69833_tokens, &(_70317_colon), _69851_typeMatch);
		(*(_69913_c))._field_Exprs = __jule_assign_result.__jule_result_arg0;
		_70418_ok = __jule_assign_result.__jule_result_arg1;
	});
	(*_69913_c.alloc)._field_Scope=_1b57779d0_buildCaseScope(_self_, _69833_tokens);
	if (((*((*_69913_c.alloc)._field_Scope))._field_End == nullptr)) {
		(*(*_69913_c.alloc)._field_Scope.alloc)._field_End=_70317_colon;
	};
	jule::Bool _7099_isDefault = (_70418_ok && ((*_69913_c.alloc)._field_Exprs.len() == 0LL));;
	__jule_func_result.__jule_result_arg0 = _69913_c;
	__jule_func_result.__jule_result_arg1 = _7099_isDefault;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1b4b179ec_Case__jule_tuple_x_1b4b16853_Else _1b57782c7_buildCases(_1b576e90b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _71333_tokens, jule::Bool _71351_typeMatch) {
	__jule_tuple_sx_1b4b179ec_Case__jule_tuple_x_1b4b16853_Else __jule_func_result;
	jule::Slice<jule::Ptr<_1b4b179ec_Case>> _71417_cases = nullptr;;
	jule::Ptr<_1b4b16853_Else> _71517_def = nullptr;;
	jule::Bool _71613_defNotLast = false;;
	while ((_71333_tokens.len() > 0LL)) {
		{
			jule::Ptr<_1b4ad5712_Token> _71817_tok = _71333_tokens[0LL];;
			if (((*(_71817_tok))._field_Id != static_cast<jule::U64>(66LLU))) {
				_1b5770b93_pushErr(_self_, _71817_tok, jule::Str::lit("invalid syntax", 14));
				goto _iter_end_1abcc0031;
			};
			jule::Ptr<_1b4b179ec_Case> _72317_c;
			jule::Bool _72320_isDefault;
			({
				__jule_tuple_x_1b4b179ec_Case__jule_tuple_bool __jule_assign_result = _1b5777dcb_buildCase(_self_, &(_71333_tokens), _71351_typeMatch);
				_72317_c = __jule_assign_result.__jule_result_arg0;
				_72320_isDefault = __jule_assign_result.__jule_result_arg1;
			});
			if (_72320_isDefault) {
				(*(_72317_c))._field_Token=_71817_tok;
				if ((_71517_def == nullptr)) {
					_71517_def=jule::new_ptr<_1b4b16853_Else>(_1b4b16853_Else{._field_Token=(*_72317_c.alloc)._field_Token, ._field_Scope=(*_72317_c.alloc)._field_Scope});
				} else {
					_1b5770b93_pushErr(_self_, _71817_tok, jule::Str::lit("invalid syntax", 14));
				};
			} else {
				_71613_defNotLast=(_71613_defNotLast || (_71517_def != nullptr));
				{ jule::Slice<jule::Ptr<_1b4b179ec_Case>> &__jule_push_dest = _71417_cases; __jule_push_dest.push(_72317_c); };
			};
		}
	_iter_next_1abcc0031:;
	}
	_iter_end_1abcc0031:;;
	if (_71613_defNotLast) {
		_1b5770b93_pushErr(_self_, (*(_71517_def))._field_Token, jule::Str::lit("default case should be last case", 32));
	};
	__jule_func_result.__jule_result_arg0 = _71417_cases;
	__jule_func_result.__jule_result_arg1 = _71517_def;
	return __jule_func_result;;
}



inline jule::Ptr<_1b4b18316_MatchCase> _1b5778618_buildMatchCase(_1b576e90b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _74737_tokens) {
	jule::Ptr<_1b4b18316_MatchCase> _74813_m = jule::new_ptr<_1b4b18316_MatchCase>(_1b4b18316_MatchCase{._field_Token=_74737_tokens[0LL], });;
	(_74737_tokens).mut_slice(1LL);;
	if (((_74737_tokens.len() > 0LL) && ((*(_74737_tokens[0LL]))._field_Id == static_cast<jule::U64>(7LLU)))) {
		(*(_74813_m))._field_TypeMatch=true;
		(_74737_tokens).mut_slice(1LL);;
	};
	jule::Slice<jule::Ptr<_1b4ad5712_Token>> _75813_exprTokens = _1b5788150_getBlockExpr(&(_74737_tokens));;
	if ((_75813_exprTokens.len() > 0LL)) {
		(*_74813_m.alloc)._field_Expr=_1b578e0e0_buildExpr((*(_self_))._field_p, &(_75813_exprTokens));
	} else if ((*_74813_m.alloc)._field_TypeMatch) {
		_1b5770b93_pushErr(_self_, (*_74813_m.alloc)._field_Token, jule::Str::lit("expression missing", 18));
	};
	jule::I64 _76513_i = _75813_exprTokens.len();;
	jule::Slice<jule::Ptr<_1b4ad5712_Token>> _76613_blockToks = _1b578b63c_range(&(_76513_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_74737_tokens));;
	if ((_76613_blockToks == nullptr)) {
		_1b577007c_stop(_self_);
		_1b5770b93_pushErr(_self_, (*_74813_m.alloc)._field_Token, jule::Str::lit("body is not exist", 17));
		_1b5771006_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_76513_i < _74737_tokens.len())) {
		_1b5770b93_pushErr(_self_, _74737_tokens[_76513_i], jule::Str::lit("invalid syntax", 14));
	};
	(*_74813_m.alloc)._field_End=_74737_tokens[(_76513_i - 1LL)];
	({
		__jule_tuple_sx_1b4b179ec_Case__jule_tuple_x_1b4b16853_Else __jule_assign_result = _1b57782c7_buildCases(_self_, _76613_blockToks, (*_74813_m.alloc)._field_TypeMatch);
		(*_74813_m.alloc)._field_Cases = __jule_assign_result.__jule_result_arg0;
		(*_74813_m.alloc)._field_Default = __jule_assign_result.__jule_result_arg1;
	});
	return _74813_m;;
}



inline jule::Ptr<_1b4b10a4a_ScopeTree> _1b5778959_buildScopeSt(_1b576e90b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _78035_tokens) {
	jule::Bool _78113_isUnsafe = false;;
	jule::Bool _78213_isDeferred = false;;
	jule::Ptr<_1b4ad5712_Token> _78313_token = _78035_tokens[0LL];;
	if (((*(_78313_token))._field_Id == static_cast<jule::U64>(31LLU))) {
		_78113_isUnsafe=true;
		(_78035_tokens).mut_slice(1LL);;
		if ((_78035_tokens.len() == 0LL)) {
			_1b5770b93_pushErr(_self_, _78313_token, jule::Str::lit("invalid syntax", 14));
			return nullptr;;
		};
		_78313_token=_78035_tokens[0LL];
		if (((*_78313_token.alloc)._field_Id == static_cast<jule::U64>(33LLU))) {
			_78213_isDeferred=true;
			(_78035_tokens).mut_slice(1LL);;
			if ((_78035_tokens.len() == 0LL)) {
				_1b5770b93_pushErr(_self_, _78313_token, jule::Str::lit("invalid syntax", 14));
				return nullptr;;
			};
		};
	} else if (((*(_78313_token))._field_Id == static_cast<jule::U64>(33LLU))) {
		_78213_isDeferred=true;
		(_78035_tokens).mut_slice(1LL);;
		if ((_78035_tokens.len() == 0LL)) {
			_1b5770b93_pushErr(_self_, _78313_token, jule::Str::lit("invalid syntax", 14));
			return nullptr;;
		};
	};
	jule::I64 _80913_i = 0LL;;
	jule::Slice<jule::Ptr<_1b4ad5712_Token>> _81013_scopeTokens = _1b578b63c_range(&(_80913_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_78035_tokens));;
	if ((_81013_scopeTokens == nullptr)) {
		_1b5770b93_pushErr(_self_, _78313_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	} else if ((_80913_i < _78035_tokens.len())) {
		_1b5770b93_pushErr(_self_, _78035_tokens[_80913_i], jule::Str::lit("invalid syntax", 14));
	};
	jule::Ptr<_1b4b10a4a_ScopeTree> _81713_scope = _1b5771941_buildScope(_self_, &(_81013_scopeTokens), _78035_tokens[(_80913_i - 1LL)]);;
	(*(_81713_scope))._field_Unsafety=_78113_isUnsafe;
	(*_81713_scope.alloc)._field_Deferred=_78213_isDeferred;
	return _81713_scope;;
}



inline jule::Ptr<_1b4b082a1_LabelSt> _1b5778c9a_buildLabelSt(_1b576e90b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _82336_tokens) {
	jule::Ptr<_1b4b082a1_LabelSt> _82413_lbl = jule::new_ptr<_1b4b082a1_LabelSt>(_1b4b082a1_LabelSt{._field_Token=(*(_82336_tokens))[0LL], ._field_Ident=(*((*(_82336_tokens))[0LL]))._field_Kind});;
	if (((*(_82336_tokens)).len() > 2LL)) {
		((*(_82336_tokens))).mut_slice(2LL);;
		_1b57712ae_insertAsNext(_self_, _82336_tokens);
	};
	return _82413_lbl;;
}



inline __jule_tuple__1b4b101ba_StmtData__jule_tuple_bool _1b57790db_buildIdSt(_1b576e90b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _83833_tokens) {
	__jule_tuple__1b4b101ba_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if (((*(_83833_tokens)).len() == 1LL)) {
		return __jule_func_result;;
	};
	jule::Ptr<_1b4ad5712_Token> _84313_token = (*(_83833_tokens))[1LL];;
	{
		auto &_match_expr{ (*(_84313_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(8LLU)) {
			_case_begin_1abcd584e:;
			{
				__jule_func_result.__jule_result_arg0 = jule::Any(_1b5778c9a_buildLabelSt(_self_, _83833_tokens), &__jule_any_type55);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1abcd64a9:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1b5789a8b_assignInfo> _1b577942c_buildAssignInfo(_1b576e90b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _85239_tokens) {
	jule::Ptr<_1b5789a8b_assignInfo> _85313_info = jule::new_ptr<_1b5789a8b_assignInfo>(_1b5789a8b_assignInfo{._field_ok=true});;
	jule::I64 _85613_braceN = 0LL;;
	{
		auto expr = _85239_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abcd7bc5:;
		if (it != expr_end) {
			jule::I64 _85714_i = it - expr->begin();
			jule::Ptr<_1b4ad5712_Token> _85721_token = *it;
			{
				{
					auto &_match_expr{ (*(_85721_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1abcd8654:;
						{
							(_85613_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1abcd8a0b:;
						{
							(_85613_braceN)--;
						}
					}
					_match_end_1abcd891d:;
				};
				{
					
					if ((_85613_braceN > 0LL)) {
						_case_begin_1abcd9b94:;
						{
							goto _iter_next_1abcd7bc5;
						}
					}
					else if (((!(_1b4ada55d_IsAssignOp((*(_85721_token))._field_Id))) && ((*_85721_token.alloc)._field_Id != static_cast<jule::U64>(38LLU)))) {
						_case_begin_1abcd9c0a:;
						{
							goto _iter_next_1abcd7bc5;
						}
					}
					_match_end_1abcd9b3e:;
				};
				(*(_85313_info))._field_l=(*(_85239_tokens)).slice(0LL, _85714_i);
				if (((*_85313_info.alloc)._field_l.len() == 0LL)) {
					(*_85313_info.alloc)._field_ok=false;
				};
				(*_85313_info.alloc)._field_setter=_85721_token;
				if (((_85714_i + 1LL) >= (*(_85239_tokens)).len())) {
					(*_85313_info.alloc)._field_r=nullptr;
					(*_85313_info.alloc)._field_ok=_1b4ada294_IsPostfixOp((*((*_85313_info.alloc)._field_setter))._field_Id);
					goto _iter_end_1abcd7bc5;
				};
				(*_85313_info.alloc)._field_r=(*(_85239_tokens)).slice((_85714_i + 1LL));
				if (_1b4ada294_IsPostfixOp((*(*_85313_info.alloc)._field_setter.alloc)._field_Id)) {
					if (((*_85313_info.alloc)._field_r.len() > 0LL)) {
						_1b5770b93_pushErr(_self_, (*_85313_info.alloc)._field_r[0LL], jule::Str::lit("invalid syntax", 14));
						(*_85313_info.alloc)._field_r=nullptr;
					};
				};
				goto _iter_end_1abcd7bc5;
			}
			_iter_next_1abcd7bc5:;
			++it;
			_85714_i++;
			goto _iter_begin_1abcd7bc5;
		}
		_iter_end_1abcd7bc5:;
	};
	return _85313_info;;
}



inline jule::Ptr<_1b4b090d7_AssignLeft> _1b577976d_buildAssignL(_1b576e90b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _89736_tokens) {
	jule::Ptr<_1b4b090d7_AssignLeft> _89813_l = jule::new_ptr<_1b4b090d7_AssignLeft>(_1b4b090d7_AssignLeft{._field_Token=(*(_89736_tokens))[0LL], });;
	if (((*((*(_89736_tokens))[0LL]))._field_Id == static_cast<jule::U64>(1LLU))) {
		(*(_89813_l))._field_Ident=(*((*_89813_l.alloc)._field_Token))._field_Kind;
	};
	(*_89813_l.alloc)._field_Expr=_1b578e0e0_buildExpr((*(_self_))._field_p, _89736_tokens);
	return _89813_l;;
}



inline jule::Slice<jule::Ptr<_1b4b090d7_AssignLeft>> _1b5779aae_buildAssignLs(_1b576e90b_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1b4ad5712_Token>>>* _90837_parts) {
	jule::Slice<jule::Ptr<_1b4b090d7_AssignLeft>> _90917_lefts = nullptr;;
	{
		auto expr = _90837_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abce26c4:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1b4ad5712_Token>> _91021_part = *it;
			{
				jule::Ptr<_1b4b090d7_AssignLeft> _91117_l = _1b577976d_buildAssignL(_self_, &(_91021_part));;
				{ jule::Slice<jule::Ptr<_1b4b090d7_AssignLeft>> &__jule_push_dest = _90917_lefts; __jule_push_dest.push(_91117_l); };
			}
			_iter_next_1abce26c4:;
			++it;
			goto _iter_begin_1abce26c4;
		}
		_iter_end_1abce26c4:;
	};
	return _90917_lefts;;
}



inline __jule_tuple__1b4b101ba_StmtData__jule_tuple_bool _1b5779e00_buildPlainAssign(_1b576e90b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _91740_tokens) {
	__jule_tuple__1b4b101ba_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1b5789a8b_assignInfo> _91813_info = _1b577942c_buildAssignInfo(_self_, _91740_tokens);;
	if ((!((*(_91813_info))._field_ok))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1b4b0966a_AssignSt> _92313_assign = jule::new_ptr<_1b4b0966a_AssignSt>(_1b4b0966a_AssignSt{._field_Setter=(*_91813_info.alloc)._field_setter, });;
	if (((*((*_91813_info.alloc)._field_setter))._field_Id == static_cast<jule::U64>(38LLU))) {
		(*(_92313_assign))._field_Declarative=true;
		(*_92313_assign.alloc)._field_Right=_1b578e0e0_buildExpr((*(_self_))._field_p, &((*_91813_info.alloc)._field_r));
		jule::Bool _93113_ok = _1b577a2eb_buildDeclAssign1(_self_, &((*_91813_info.alloc)._field_l), &(_92313_assign));;
		if ((!(_93113_ok))) {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = true;
			return __jule_func_result;;
		};
		if (((*_92313_assign.alloc)._field_Left.len() > 1LL)) {
			__jule_func_result.__jule_result_arg0 = jule::Any(_92313_assign, &__jule_any_type57);
			__jule_func_result.__jule_result_arg1 = true;
			return __jule_func_result;;
		};
		jule::Ptr<_1b4b090d7_AssignLeft> _94017_left = (*_92313_assign.alloc)._field_Left[0LL];;
		jule::Ptr<_1b4b13894_VarDecl> _94117_decl = jule::new_ptr<_1b4b13894_VarDecl>(_1b4b13894_VarDecl{._field_Scope=(*(_self_))._field_s, ._field_Token=(*(_94017_left))._field_Token, ._field_Setter=(*_92313_assign.alloc)._field_Setter, ._field_Ident=(*_94017_left.alloc)._field_Ident, ._field_Mutable=(*_94017_left.alloc)._field_Mutable, ._field_Reference=(*_94017_left.alloc)._field_Reference, ._field_Expr=(*_92313_assign.alloc)._field_Right});;
		__jule_func_result.__jule_result_arg0 = jule::Any(_94117_decl, &__jule_any_type16);
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1b4ad5712_Token>>> _95313_parts;
	jule::Slice<_1cb285120_Log> _95320_errs;
	({
		__jule_tuple_ssx_1b4ad5712_Token__jule_tuple_s_1cb285120_Log __jule_assign_result = _1b578bdac_parts(&((*_91813_info.alloc)._field_l), static_cast<jule::U64>(5LLU), true);
		_95313_parts = __jule_assign_result.__jule_result_arg0;
		_95320_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_95320_errs.len() > 0LL)) {
		(*(*(_self_))._field_p.alloc)._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_95320_errs);
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	(*_92313_assign.alloc)._field_Left=_1b5779aae_buildAssignLs(_self_, &(_95313_parts));
	if (((*_91813_info.alloc)._field_r != nullptr)) {
		(*_92313_assign.alloc)._field_Right=_1b578e0e0_buildExpr((*(_self_))._field_p, &((*_91813_info.alloc)._field_r));
	};
	__jule_func_result.__jule_result_arg0 = jule::Any(_92313_assign, &__jule_any_type57);
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Bool _1b577a2eb_buildDeclAssign1(_1b576e90b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _96740_lefts, jule::Ptr<_1b4b0966a_AssignSt>* _96762_assign) {
	jule::Slice<jule::Slice<jule::Ptr<_1b4ad5712_Token>>> _96913_parts;
	jule::Slice<_1cb285120_Log> _96920_errs;
	({
		__jule_tuple_ssx_1b4ad5712_Token__jule_tuple_s_1cb285120_Log __jule_assign_result = _1b578bdac_parts(_96740_lefts, static_cast<jule::U64>(5LLU), true);
		_96913_parts = __jule_assign_result.__jule_result_arg0;
		_96920_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_96920_errs.len() > 0LL)) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_96920_errs);
		return false;;
	};
	{
		auto expr = &(_96913_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abceddc8:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1b4ad5712_Token>> _97521_part = *it;
			{
				jule::Bool _97617_isMut = false;;
				jule::Bool _97717_isRef = false;;
				jule::Ptr<_1b4ad5712_Token> _97913_token = _97521_part[0LL];;
				if (((*(_97913_token))._field_Id == static_cast<jule::U64>(32LLU))) {
					_97617_isMut=true;
					(_97521_part).mut_slice(1LL);;
					if ((_97521_part.len() == 0LL)) {
						_1b5770b93_pushErr(_self_, _97913_token, jule::Str::lit("invalid syntax", 14));
						return false;;
					};
				};
				if (((*(_97521_part[0LL]))._field_Id == static_cast<jule::U64>(65LLU))) {
					_97717_isRef=true;
					(_97521_part).mut_slice(1LL);;
					if ((_97521_part.len() == 0LL)) {
						_1b5770b93_pushErr(_self_, _97913_token, jule::Str::lit("invalid syntax", 14));
						return false;;
					};
				};
				if ((((*(_97521_part[0LL]))._field_Id != static_cast<jule::U64>(1LLU)) && ((*(_97521_part[0LL]))._field_Id != static_cast<jule::U64>(74LLU)))) {
					_1b5770b93_pushErr(_self_, _97913_token, jule::Str::lit("invalid syntax", 14));
					return false;;
				};
				jule::Ptr<_1b4b090d7_AssignLeft> _100317_l = _1b577976d_buildAssignL(_self_, &(_97521_part));;
				(*(_100317_l))._field_Mutable=_97617_isMut;
				(*_100317_l.alloc)._field_Reference=_97717_isRef;
				{ jule::Slice<jule::Ptr<_1b4b090d7_AssignLeft>> &__jule_push_dest = (*((*(_96762_assign))))._field_Left; __jule_push_dest.push(_100317_l); };
			}
			_iter_next_1abceddc8:;
			++it;
			goto _iter_begin_1abceddc8;
		}
		_iter_end_1abceddc8:;
	};
	return true;;
}



inline __jule_tuple_x_1b4b0966a_AssignSt__jule_tuple_bool _1b577a63c_buildDeclAssign(_1b576e90b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _101238_tokens) {
	__jule_tuple_x_1b4b0966a_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_101238_tokens.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	(_101238_tokens).mut_slice(1LL);;
	jule::Ptr<_1b4ad5712_Token> _101813_token = _101238_tokens[0LL];;
	if (((*(_101813_token))._field_Id != static_cast<jule::U64>(74LLU))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1b4b0966a_AssignSt> _102313_assign = jule::new_ptr<_1b4b0966a_AssignSt>(_1b4b0966a_AssignSt{._field_Declarative=true, });;
	jule::I64 _102713_i = 0LL;;
	jule::Slice<jule::Ptr<_1b4ad5712_Token>> _102813_rang = _1b578b63c_range(&(_102713_i), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), &(_101238_tokens));;
	if ((_102813_rang == nullptr)) {
		_1b5770b93_pushErr(_self_, _101813_token, jule::Str::lit("invalid syntax", 14));
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	} else if (((_102713_i + 1LL) < _101238_tokens.len())) {
		(*(_102313_assign))._field_Setter=_101238_tokens[_102713_i];
		if (((*((*_102313_assign.alloc)._field_Setter))._field_Id != static_cast<jule::U64>(71LLU))) {
			_1b5770b93_pushErr(_self_, (*_102313_assign.alloc)._field_Setter, jule::Str::lit("invalid syntax", 14));
		};
		(_102713_i)++;
		jule::Slice<jule::Ptr<_1b4ad5712_Token>> _103817_exprTokens = _101238_tokens.slice(_102713_i);;
		(*_102313_assign.alloc)._field_Right=_1b578e0e0_buildExpr((*(_self_))._field_p, &(_103817_exprTokens));
	};
	jule::Bool _10429_ok = _1b577a2eb_buildDeclAssign1(_self_, &(_102813_rang), &(_102313_assign));;
	__jule_func_result.__jule_result_arg0 = _102313_assign;
	__jule_func_result.__jule_result_arg1 = _10429_ok;
	return __jule_func_result;;
}



inline __jule_tuple__1b4b101ba_StmtData__jule_tuple_bool _1b577a97d_buildAssignSt(_1b576e90b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _104637_tokens) {
	__jule_tuple__1b4b101ba_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if ((!(_1b5789e43_checkAssignTokens(_104637_tokens)))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_104637_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1abd0d503:;
			{
				({
					__jule_tuple_x_1b4b0966a_AssignSt__jule_tuple_bool __jule_assign_result = _1b577a63c_buildDeclAssign(_self_, (*(_104637_tokens)));
					__jule_func_result.__jule_result_arg0 = jule::Any(__jule_assign_result.__jule_result_arg0, &__jule_any_type57);
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1abd0c678:;
			{
				({
					__jule_tuple__1b4b101ba_StmtData__jule_tuple_bool __jule_assign_result = _1b5779e00_buildPlainAssign(_self_, _104637_tokens);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1abd0cb1d:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1b4b008c5_UseExpr> _1b577acbe_buildUseExpr(_1b576e90b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _105936_tokens) {
	if (((*(_105936_tokens)).len() == 1LL)) {
		_1b5770b93_pushErr(_self_, (*(_105936_tokens))[0LL], jule::Str::lit("expression missing", 18));
		return nullptr;;
	};
	jule::Ptr<_1b4b008c5_UseExpr> _106413_ue = jule::new_ptr<_1b4b008c5_UseExpr>(_1b4b008c5_UseExpr{._field_Token=(*(_105936_tokens))[0LL], });;
	((*(_105936_tokens))).mut_slice(1LL);;
	(*(_106413_ue))._field_Expr=_1b578e0e0_buildExpr((*(_self_))._field_p, _105936_tokens);
	return _106413_ue;;
}



inline jule::Any _1b577b110_buildConstSt(_1b576e90b_scopeParser* _self_, jule::Ptr<_1b576e06a_stmt>* _107236_st) {
	if (((*((*(_107236_st))))._field_tokens.len() == 1LL)) {
		_1b5770b93_pushErr(_self_, (*((*(_107236_st))))._field_tokens[0LL], jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*((*(_107236_st))))._field_tokens[1LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_1abd1286a:;
			{
				((*((*(_107236_st))))._field_tokens).mut_slice(1LL);;
				jule::Ptr<_1b4b144dd_Iter> _108017_iter = _1b5774c96_buildIterSt(_self_, _107236_st);;
				if ((_108017_iter != nullptr)) {
					(*_108017_iter.alloc)._field_Comptime=true;
				};
				return jule::Any(_108017_iter, &__jule_any_type53);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1abd1268e:;
			{
				((*((*(_107236_st))))._field_tokens).mut_slice(1LL);;
				jule::Ptr<_1b4b18316_MatchCase> _108717_mt = _1b5778618_buildMatchCase(_self_, (*((*(_107236_st))))._field_tokens);;
				if ((_108717_mt != nullptr)) {
					(*_108717_mt.alloc)._field_Comptime=true;
				};
				return jule::Any(_108717_mt, &__jule_any_type58);;
			}
		}
		else {
			_case_begin_1abd111c6:;
			{
				return jule::Any(_1b5771c82_buildVarSt(_self_, &((*((*(_107236_st))))._field_tokens)), &__jule_any_type16);;
			}
		}
		_match_end_1abd121c7:;
	};
}



inline jule::Any _1b577b451_buildSt(_1b576e90b_scopeParser* _self_, jule::Ptr<_1b576e06a_stmt>* _109731_st) {
	jule::Ptr<_1b4ad5712_Token> _109813_token = (*((*(_109731_st))))._field_tokens[0LL];;
	if (((*(_109813_token))._field_Id == static_cast<jule::U64>(1LLU))) {
		jule::Any _110017_s;
		jule::Bool _110020_ok;
		({
			__jule_tuple__1b4b101ba_StmtData__jule_tuple_bool __jule_assign_result = _1b57790db_buildIdSt(_self_, &((*((*(_109731_st))))._field_tokens));
			_110017_s = __jule_assign_result.__jule_result_arg0;
			_110020_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_110020_ok) {
			return _110017_s;;
		};
	};
	jule::Any _110613_s;
	jule::Bool _110616_ok;
	({
		__jule_tuple__1b4b101ba_StmtData__jule_tuple_bool __jule_assign_result = _1b577a97d_buildAssignSt(_self_, &((*((*(_109731_st))))._field_tokens));
		_110613_s = __jule_assign_result.__jule_result_arg0;
		_110616_ok = __jule_assign_result.__jule_result_arg1;
	});
	if (_110616_ok) {
		return _110613_s;;
	};
	{
		auto &_match_expr{ (*(_109813_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_1abd18442:;
			{
				return jule::Any(_1b577acbe_buildUseExpr(_self_, &((*((*(_109731_st))))._field_tokens)), &__jule_any_type62);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1abd188d7:;
			{
				return _1b577b110_buildConstSt(_self_, _109731_st);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(30LLU) || _match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1abd1894d:;
			{
				return jule::Any(_1b5771c82_buildVarSt(_self_, &((*((*(_109731_st))))._field_tokens)), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1abd189b4:;
			{
				return jule::Any(_1b57720c3_buildRetSt(_self_, (*((*(_109731_st))))._field_tokens), &__jule_any_type61);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_1abd18a2a:;
			{
				return jule::Any(_1b5774c96_buildIterSt(_self_, _109731_st), &__jule_any_type53);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1abd18aa2:;
			{
				return jule::Any(_1b57750d7_buildBreakSt(_self_, &((*((*(_109731_st))))._field_tokens)), &__jule_any_type60);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_1abd18b29:;
			{
				return jule::Any(_1b5775428_buildContSt(_self_, &((*((*(_109731_st))))._field_tokens)), &__jule_any_type54);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(13LLU)) {
			_case_begin_1abd18ba1:;
			{
				return jule::Any(_1b5775deb_buildIfElseChain(_self_, (*((*(_109731_st))))._field_tokens), &__jule_any_type52);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_1abd18c28:;
			{
				return jule::Any(_1b577623c_buildCoCallSt(_self_, (*((*(_109731_st))))._field_tokens), &__jule_any_type51);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(18LLU)) {
			_case_begin_1abd18ca0:;
			{
				return jule::Any(_1b577657d_buildGotoSt(_self_, &((*((*(_109731_st))))._field_tokens)), &__jule_any_type56);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(28LLU)) {
			_case_begin_1abd18d27:;
			{
				return jule::Any(_1b57768be_buildFallSt(_self_, &((*((*(_109731_st))))._field_tokens)), &__jule_any_type59);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1abd18d9e:;
			{
				return jule::Any(_1b5776c10_buildTypeAliasSt(_self_, &((*((*(_109731_st))))._field_tokens)), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1abd18e26:;
			{
				return jule::Any(_1b5778618_buildMatchCase(_self_, (*((*(_109731_st))))._field_tokens), &__jule_any_type58);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1abd18e9d:;
			{
				if (((*((*(_109731_st))))._field_tokens.len() < 1LL)) {
					goto _match_end_1abd1872d;
				};
				if ((((*((*((*(_109731_st))))._field_tokens[1LL]))._field_Id == static_cast<jule::U64>(33LLU)) || ((*((*((*(_109731_st))))._field_tokens[1LL]))._field_Id == static_cast<jule::U64>(72LLU)))) {
					return jule::Any(_1b5778959_buildScopeSt(_self_, (*((*(_109731_st))))._field_tokens), &__jule_any_type50);;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1abd19025:;
			{
				return jule::Any(_1b5778959_buildScopeSt(_self_, (*((*(_109731_st))))._field_tokens), &__jule_any_type50);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_1abd1909c:;
			{
				return jule::Any(_1b5778959_buildScopeSt(_self_, (*((*(_109731_st))))._field_tokens), &__jule_any_type50);;
			}
		}
		_match_end_1abd1872d:;
	};
	jule::Ptr<_1b4b00001_Expr> _115313_expr = _1b578e0e0_buildExpr((*(_self_))._field_p, &((*((*(_109731_st))))._field_tokens));;
	if ((_115313_expr != nullptr)) {
		return jule::Any(_115313_expr, &__jule_any_type51);;
	};
	_1b5770b93_pushErr(_self_, _109813_token, jule::Str::lit("invalid syntax", 14));
	return nullptr;;
}



inline void _1b577b7b4_build(_1b576e90b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _116129_tokens, jule::Ptr<_1b4b10a4a_ScopeTree>* _116152_s) {
	if (((*(_116152_s)) == nullptr)) {
		return;;
	};
	(*(_self_))._field_stmts=_1b576e422_splitStmts(_116129_tokens);
	(*(_self_))._field_pos=-1LL;
	(*(_self_))._field_s=(*(_116152_s));
	while (((!(_1b5770830_isLastSt(_self_))) && (!(_1b5770599_finished(_self_))))) {
		{
			jule::Ptr<_1b576e06a_stmt> _116917_st = _1b5771545_next(_self_);;
			jule::Any _117017_data = _1b577b451_buildSt(_self_, &(_116917_st));;
			if ((_117017_data != nullptr)) {
				(*((*(_self_))._field_s))._field_Stmts=jule::append((*(*(_self_))._field_s.alloc)._field_Stmts,jule::Slice<_1b4b103da_Stmt>::make({_1b4b103da_Stmt{._field_Token=(*(_116917_st))._field_tokens[0LL], ._field_Data=_117017_data}}));
			};
			if (_1b5770313_stopped(_self_)) {
				goto _iter_end_1abd2630c;
			};
		}
	_iter_next_1abd2630c:;
	}
	_iter_end_1abd2630c:;;
}





std::ostream &operator<<(std::ostream &_Stream, _1b576e90b_scopeParser _Src) {
	_Stream << "scopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline void _1b577cb17_pushErr(_1b577c331_exprBuilder* _self_, jule::Ptr<_1b4ad5712_Token> _4526_token, jule::Str _4541_fmt, jule::Slice<jule::Any> _4554_args) {
	_1b578d93b_pushErr((*(_self_))._field_p.ptr(), _4526_token, _4541_fmt, _4554_args);
}



inline void _1b577ce7a_pushSuggestion(_1b577c331_exprBuilder* _self_, jule::Str _5033_fmt, jule::Slice<jule::Any> _5046_args) {
	_1b578dc9e_pushSuggestion((*(_self_))._field_p.ptr(), _5033_fmt, _5046_args);
}



inline jule::Ptr<_1b4b00ae5_TupleExpr> _1b577d2bb_buildTuple(_1b577c331_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_1b4ad5712_Token>>>* _5434_parts) {
	jule::Ptr<_1b4b00ae5_TupleExpr> _5513_tuple = jule::new_ptr<_1b4b00ae5_TupleExpr>(_1b4b00ae5_TupleExpr{._field_Expr=jule::Slice<jule::Ptr<_1b4b00001_Expr>>::alloc(0LL, (*(_5434_parts)).len())});;
	{
		auto expr = _5434_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abd4b024:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1b4ad5712_Token>> _5821_part = *it;
			{
				(*(_5513_tuple))._field_Expr=jule::append((*_5513_tuple.alloc)._field_Expr,jule::Slice<jule::Ptr<_1b4b00001_Expr>>::make({_1b57876b0_buildFromTokens(_self_, _5821_part)}));
			}
			_iter_next_1abd4b024:;
			++it;
			goto _iter_begin_1abd4b024;
		}
		_iter_end_1abd4b024:;
	};
	return _5513_tuple;;
}



inline jule::Ptr<_1b4b00e8b_LitExpr> _1b577d60c_buildLit(_1b577c331_exprBuilder* _self_, jule::Ptr<_1b4ad5712_Token> _6427_token) {
	return jule::new_ptr<_1b4b00e8b_LitExpr>(_1b4b00e8b_LitExpr{._field_Token=_6427_token, ._field_Value=(*(_6427_token))._field_Kind});;
}



inline jule::Any _1b577dc8e_buildSingle(_1b577c331_exprBuilder* _self_, jule::Ptr<_1b4ad5712_Token> _7534_token) {
	{
		auto &_match_expr{ (*(_7534_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(4LLU)) {
			_case_begin_1abd4ce8d:;
			{
				return jule::Any(_1b577d60c_buildLit(_self_, _7534_token), &__jule_any_type102);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(39LLU)) {
			_case_begin_1abd4d015:;
			{
				return jule::Any(jule::new_ptr<_1b4b02487_VariadicExpr>(_1b4b02487_VariadicExpr{._field_Token=_7534_token, }), &__jule_any_type75);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU) || _match_expr == static_cast<jule::U64>(24LLU) || _match_expr == static_cast<jule::U64>(36LLU)) {
			_case_begin_1abd4d07b:;
			{
				return jule::Any(_1b5788a9b_buildIdentExpr(&(_7534_token)), &__jule_any_type79);;
			}
		}
		_match_end_1abd4cdd3:;
	};
	_1b577cb17_pushErr(_self_, _7534_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1b4b0181b_IdentExpr> _1b577e0d0_buildBindIdent(_1b577c331_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _9238_tokens) {
	if (((*((*(_9238_tokens))[0LL]))._field_Id != static_cast<jule::U64>(27LLU))) {
		return nullptr;;
	} else if (((*((*(_9238_tokens))[1LL]))._field_Id != static_cast<jule::U64>(17LLU))) {
		_1b577cb17_pushErr(_self_, (*(_9238_tokens))[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1b577ce7a_pushSuggestion(_self_, jule::Str::lit("use dot (.) to access binded defines", 36), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b4ad5712_Token> _10013_token = (*(_9238_tokens))[2LL];;
	if (((*(_10013_token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1b577cb17_pushErr(_self_, (*(_9238_tokens))[2LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1b577ce7a_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b4b0181b_IdentExpr> _10613_expr = _1b5788a9b_buildIdentExpr(&(_10013_token));;
	(*(_10613_expr))._field_Binded=true;
	return _10613_expr;;
}



inline jule::Ptr<_1b4b020ad_UnaryExpr> _1b577e421_buildUnary(_1b577c331_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _11133_tokens) {
	jule::Ptr<_1b4ad5712_Token> _11213_op = _11133_tokens[0LL];;
	if ((_11133_tokens.len() == 1LL)) {
		_1b577cb17_pushErr(_self_, _11213_op, jule::Str::lit("missing expression for unary operator", 37), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((!(_1b4ad5e4e_IsUnaryOp((*(_11213_op))._field_Id)))) {
		_1b577cb17_pushErr(_self_, _11213_op, jule::Str::lit("invalid unary operator: @", 25), jule::Slice<jule::Any>::make({jule::Any((*_11213_op.alloc)._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	(_11133_tokens).mut_slice(1LL);;
	return jule::new_ptr<_1b4b020ad_UnaryExpr>(_1b4b020ad_UnaryExpr{._field_Op=_11213_op, ._field_Expr=_1b57876b0_buildFromTokens(_self_, _11133_tokens)});;
}



inline jule::Ptr<_1b4b03114_SubIdentExpr> _1b577e762_buildObjSubIdent(_1b577c331_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _13239_tokens) {
	jule::I64 _13313_i = (_13239_tokens.len() - 1LL);;
	jule::Ptr<_1b4ad5712_Token> _13413_identToken = _13239_tokens[_13313_i];;
	(_13313_i)--;
	(_13239_tokens).mut_slice(0LL, _13313_i);;
	if ((_13239_tokens.len() == 0LL)) {
		_1b577cb17_pushErr(_self_, _13413_identToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1b4b03114_SubIdentExpr>(_1b4b03114_SubIdentExpr{._field_Expr=_1b57876b0_buildFromTokens(_self_, _13239_tokens), ._field_Ident=_13413_identToken});;
}



inline jule::Ptr<_1b4b02c3a_NsSelectionExpr> _1b577eaa3_buildNsSubIdent(_1b577c331_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _14739_tokens) {
	jule::Ptr<_1b4b02c3a_NsSelectionExpr> _14813_ns = jule::new_ptr<_1b4b02c3a_NsSelectionExpr>();;
	if ((((*(_14739_tokens)).len() == 3LL) && ((*((*(_14739_tokens))[0LL]))._field_Id == static_cast<jule::U64>(31LLU)))) {
		(*_14813_ns.alloc)._field_Ns=(*(_14739_tokens)).slice(0LL, 1LL);
		(*_14813_ns.alloc)._field_Ident=(*(_14739_tokens))[2LL];
	} else {
		{
			auto expr = _14739_tokens;
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1abd5954e:;
			if (it != expr_end) {
				jule::I64 _15418_i = it - expr->begin();
				jule::Ptr<_1b4ad5712_Token> _15425_token = *it;
				{
					if (((_15418_i & 1LL) == 0LL)) {
						if (((*(_15425_token))._field_Id != static_cast<jule::U64>(1LLU))) {
							_1b577cb17_pushErr(_self_, _15425_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							_1b577ce7a_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
						};
						(*_14813_ns.alloc)._field_Ns=jule::append((*_14813_ns.alloc)._field_Ns,jule::Slice<jule::Ptr<_1b4ad5712_Token>>::make({_15425_token}));
					} else if (((*(_15425_token))._field_Id != static_cast<jule::U64>(19LLU))) {
						_1b577cb17_pushErr(_self_, _15425_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
						_1b577ce7a_pushSuggestion(_self_, jule::Str::lit("expected double colon \"::\"", 26), jule::Slice<jule::Any>());
					};
				}
				_iter_next_1abd5954e:;
				++it;
				_15418_i++;
				goto _iter_begin_1abd5954e;
			}
			_iter_end_1abd5954e:;
		};
		(*_14813_ns.alloc)._field_Ident=(*_14813_ns.alloc)._field_Ns[((*_14813_ns.alloc)._field_Ns.len() - 1LL)];
		((*(_14813_ns))._field_Ns).mut_slice(0LL, ((*(_14813_ns))._field_Ns.len() - 1LL));;
	};
	return _14813_ns;;
}



inline jule::Ptr<_1b4aeabbc_TypeDecl> _1b577ede4_buildType(_1b577c331_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _17233_tokens) {
	jule::I64 _17313_i = 0LL;;
	jule::Ptr<_1b4aeabbc_TypeDecl> _17413_t;
	jule::Bool _17416_ok;
	({
		__jule_tuple_x_1b4aeabbc_TypeDecl__jule_tuple_bool __jule_assign_result = _1b5790542_buildType((*(_self_))._field_p, _17233_tokens, (&(_17313_i)), false);
		_17413_t = __jule_assign_result.__jule_result_arg0;
		_17416_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_17416_ok))) {
		_1b577cb17_pushErr(_self_, (*(_17233_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_17313_i < (*(_17233_tokens)).len())) {
		_1b577cb17_pushErr(_self_, (*(_17233_tokens))[_17313_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	return _17413_t;;
}



inline jule::Any _1b5780235_buildSubIdent(_1b577c331_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _18637_tokens) {
	jule::I64 _1879_i = ((*(_18637_tokens)).len() - 2LL);;
	jule::Ptr<_1b4ad5712_Token> _1889_token = (*(_18637_tokens))[_1879_i];;
	{
		auto &_match_expr{ (*(_1889_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(17LLU)) {
			_case_begin_1abd62579:;
			{
				return jule::Any(_1b577e762_buildObjSubIdent(_self_, (*(_18637_tokens))), &__jule_any_type86);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1abd62b84:;
			{
				return jule::Any(_1b577eaa3_buildNsSubIdent(_self_, _18637_tokens), &__jule_any_type90);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_1abd62bea:;
			{
				return jule::Any(_1b577ede4_buildType(_self_, _18637_tokens), &__jule_any_type89);;
			}
		}
		_match_end_1abd62810:;
	};
	if (_1b578923e_isAnonFnHead(_18637_tokens)) {
		return jule::Any(_1b577ede4_buildType(_self_, _18637_tokens), &__jule_any_type89);;
	};
	_1b577cb17_pushErr(_self_, _1889_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1b4b02487_VariadicExpr> _1b5780576_buildVariadic(_1b577c331_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _20836_tokens) {
	jule::Ptr<_1b4ad5712_Token> _20913_token = _20836_tokens[(_20836_tokens.len() - 1LL)];;
	(_20836_tokens).mut_slice(0LL, (_20836_tokens.len() - 1LL));;
	return jule::new_ptr<_1b4b02487_VariadicExpr>(_1b4b02487_VariadicExpr{._field_Token=_20913_token, ._field_Expr=_1b57876b0_buildFromTokens(_self_, _20836_tokens)});;
}



inline jule::Ptr<_1b4b002ba_RangeExpr> _1b57808b7_buildBetweenParentheses(_1b577c331_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _21746_tokens) {
	if ((_21746_tokens.len() == 2LL)) {
		_1b577cb17_pushErr(_self_, _21746_tokens[0LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		_1b577ce7a_pushSuggestion(_self_, jule::Str::lit("empty parentheses are not valid expression, must include an expression in range", 79), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_21746_tokens).mut_slice(1LL, (_21746_tokens.len() - 1LL));;
	return jule::new_ptr<_1b4b002ba_RangeExpr>(_1b4b002ba_RangeExpr{._field_Expr=_1b57876b0_buildFromTokens(_self_, _21746_tokens)});;
}



inline jule::Ptr<_1b4b02861_CastExpr> _1b5780c08_tryBuildCast(_1b577c331_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _22936_tokens) {
	jule::I64 _23013_rangeN = 0LL;;
	{
		auto expr = _22936_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abd68371:;
		if (it != expr_end) {
			jule::I64 _23113_i = it - expr->begin();
			jule::Ptr<_1b4ad5712_Token> _23116_token = *it;
			{
				{
					auto &_match_expr{ (*(_23116_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1abd68d66:;
						{
							(_23013_rangeN)++;
							goto _iter_next_1abd68371;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1abd69240:;
						{
							(_23013_rangeN)--;
						}
					}
					_match_end_1abd69152:;
				};
				if ((_23013_rangeN > 0LL)) {
					goto _iter_next_1abd68371;
				} else if (((_23113_i + 1LL) == (*(_22936_tokens)).len())) {
					return nullptr;;
				};
				jule::Slice<jule::Ptr<_1b4ad5712_Token>> _25017_typeTokens = (*(_22936_tokens)).slice(0LL, (_23113_i + 1LL));;
				jule::Slice<jule::Ptr<_1b4ad5712_Token>> _25117_exprTokens = (*(_22936_tokens)).slice((_23113_i + 1LL));;
				if ((_25117_exprTokens.len() == 0LL)) {
					return nullptr;;
				};
				jule::Ptr<_1b4ad5712_Token> _25813_tok = _25117_exprTokens[0LL];;
				if (((*(_25813_tok))._field_Id != static_cast<jule::U64>(74LLU))) {
					return nullptr;;
				};
				jule::Ptr<_1b4b02861_CastExpr> _26317_cast = jule::new_ptr<_1b4b02861_CastExpr>(_1b4b02861_CastExpr{});;
				if ((_25117_exprTokens.len() == 2LL)) {
					_1b577cb17_pushErr(_self_, _25117_exprTokens[0LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
					_1b577ce7a_pushSuggestion(_self_, jule::Str::lit("give an expression for casting", 30), jule::Slice<jule::Any>());
				};
				if ((_25017_typeTokens.len() == 2LL)) {
					_1b577cb17_pushErr(_self_, _25017_typeTokens[0LL], jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
					_1b577ce7a_pushSuggestion(_self_, jule::Str::lit("type declaration expected for casting", 37), jule::Slice<jule::Any>());
				} else {
					(_25017_typeTokens).mut_slice(1LL, (_25017_typeTokens.len() - 1LL));;
					jule::I64 _27721_typeIndex = 0LL;;
					jule::Ptr<_1b4aeabbc_TypeDecl> _27821_t;
					jule::Bool _27824_ok;
					({
						__jule_tuple_x_1b4aeabbc_TypeDecl__jule_tuple_bool __jule_assign_result = _1b5790542_buildType((*(_self_))._field_p, &(_25017_typeTokens), (&(_27721_typeIndex)), true);
						_27821_t = __jule_assign_result.__jule_result_arg0;
						_27824_ok = __jule_assign_result.__jule_result_arg1;
					});
					if ((_27824_ok && (_27721_typeIndex < _25017_typeTokens.len()))) {
						_1b577cb17_pushErr(_self_, _25017_typeTokens[_27721_typeIndex], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					} else if ((!(_27824_ok))) {
						return _26317_cast;;
					};
					(*(_26317_cast))._field_Kind=_27821_t;
					if ((_25117_exprTokens.len() > 2LL)) {
						jule::I64 _28825_j = 0LL;;
						_1b578b63c_range(&(_28825_j), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), &(_25117_exprTokens));
						if ((_28825_j < _25117_exprTokens.len())) {
							return nullptr;;
						};
						(_25117_exprTokens).mut_slice(0LL, _28825_j);;
						(*_26317_cast.alloc)._field_Expr=_1b57876b0_buildFromTokens(_self_, _25117_exprTokens);
					};
				};
				return _26317_cast;;
			}
			_iter_next_1abd68371:;
			++it;
			_23113_i++;
			goto _iter_begin_1abd68371;
		}
		_iter_end_1abd68371:;
	};
	return nullptr;;
}



inline void _1b5781126_pushArg(_1b577c331_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b4b00001_Expr>>* _30331_args, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _30350_tokens, jule::Ptr<_1b4ad5712_Token> _30368_err_token) {
	if ((_30350_tokens.len() == 0LL)) {
		_1b577cb17_pushErr(_self_, _30368_err_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1b577ce7a_pushSuggestion(_self_, jule::Str::lit("an expression expected", 22), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Ptr<_1b4b00001_Expr>> &__jule_push_dest = (*(_30331_args)); __jule_push_dest.push(_1b57876b0_buildFromTokens(_self_, _30350_tokens)); };
}



inline jule::Slice<jule::Ptr<_1b4b00001_Expr>> _1b5781467_buildArgs(_1b577c331_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _31232_tokens) {
	if ((_31232_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1b4b00001_Expr>> _31817_args = nullptr;;
	jule::I64 _31913_last = 0LL;;
	jule::I64 _32013_rangeN = 0LL;;
	(_31232_tokens).mut_slice(1LL, (_31232_tokens.len() - 1LL));;
	{
		auto expr = &(_31232_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abd76a33:;
		if (it != expr_end) {
			jule::I64 _32213_i = it - expr->begin();
			jule::Ptr<_1b4ad5712_Token> _32216_token = *it;
			{
				{
					auto &_match_expr{ (*(_32216_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1abd7733b:;
						{
							(_32013_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1abd77715:;
						{
							(_32013_rangeN)--;
						}
					}
					_match_end_1abd77627:;
				};
				if (((_32013_rangeN > 0LL) || ((*(_32216_token))._field_Id != static_cast<jule::U64>(5LLU)))) {
					goto _iter_next_1abd76a33;
				};
				_1b5781126_pushArg(_self_, &(_31817_args), _31232_tokens.slice(_31913_last, _32213_i), _32216_token);
				_31913_last=(_32213_i + 1LL);
			}
			_iter_next_1abd76a33:;
			++it;
			_32213_i++;
			goto _iter_begin_1abd76a33;
		}
		_iter_end_1abd76a33:;
	};
	if ((_31913_last < _31232_tokens.len())) {
		if ((_31913_last == 0LL)) {
			if ((_31232_tokens.len() > 0LL)) {
				_1b5781126_pushArg(_self_, &(_31817_args), _31232_tokens.slice(_31913_last), _31232_tokens[_31913_last]);
			};
		} else {
			_1b5781126_pushArg(_self_, &(_31817_args), _31232_tokens.slice(_31913_last), _31232_tokens[(_31913_last - 1LL)]);
		};
	};
	return _31817_args;;
}



inline jule::Ptr<_1b4b03c2a_FnCallExpr> _1b5781c5e_buildFnCall(_1b577c331_exprBuilder* _self_, jule::Ptr<_1b4ad5712_Token>* _37835_token, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _37855_expr, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _37876_args) {
	return jule::new_ptr<_1b4b03c2a_FnCallExpr>(_1b4b03c2a_FnCallExpr{._field_Token=(*(_37835_token)), ._field_Expr=_1b57876b0_buildFromTokens(_self_, (*(_37855_expr))), ._field_Args=_1b5781467_buildArgs(_self_, (*(_37876_args))), });;
}



inline jule::Any _1b57820a0_buildParenthesesRange(_1b577c331_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _38645_tokens) {
	jule::Ptr<_1b4ad5712_Token> _38713_token = (*(_38645_tokens))[0LL];;
	if (((*(_38713_token))._field_Id == static_cast<jule::U64>(74LLU))) {
		jule::Ptr<_1b4b02861_CastExpr> _38917_expr = _1b5780c08_tryBuildCast(_self_, _38645_tokens);;
		if ((_38917_expr != nullptr)) {
			return jule::Any(_38917_expr, &__jule_any_type106);;
		};
	};
	jule::Slice<jule::Ptr<_1b4ad5712_Token>> _39413_exprTokens;
	jule::Slice<jule::Ptr<_1b4ad5712_Token>> _39429_argsTokens;
	({
		__jule_tuple_sx_1b4ad5712_Token__jule_tuple_sx_1b4ad5712_Token __jule_assign_result = _1b578b906_rangeLast(_38645_tokens);
		_39413_exprTokens = __jule_assign_result.__jule_result_arg0;
		_39429_argsTokens = __jule_assign_result.__jule_result_arg1;
	});
	if ((_39413_exprTokens.len() == 0LL)) {
		return jule::Any(_1b57808b7_buildBetweenParentheses(_self_, _39429_argsTokens), &__jule_any_type101);;
	};
	if (_1b578923e_isAnonFnHead(&(_39413_exprTokens))) {
		return jule::Any(_1b577ede4_buildType(_self_, _38645_tokens), &__jule_any_type89);;
	};
	return jule::Any(_1b5781c5e_buildFnCall(_self_, &(_38713_token), &(_39413_exprTokens), &(_39429_argsTokens)), &__jule_any_type82);;
}



inline jule::Ptr<_1b4b01365_UnsafeExpr> _1b57823e1_buildUnsafeExpr(_1b577c331_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _40838_tokens) {
	jule::Ptr<_1b4ad5712_Token> _40913_token = _40838_tokens[0LL];;
	(_40838_tokens).mut_slice(1LL);;
	jule::I64 _41113_i = 0LL;;
	jule::Slice<jule::Ptr<_1b4ad5712_Token>> _41213_rangeTokens = _1b578b63c_range(&(_41113_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_40838_tokens));;
	if ((_41213_rangeTokens.len() == 0LL)) {
		_1b577cb17_pushErr(_self_, _40838_tokens[0LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1b4b01365_UnsafeExpr>(_1b4b01365_UnsafeExpr{._field_Token=_40913_token, ._field_Expr=_1b57876b0_buildFromTokens(_self_, _41213_rangeTokens)});;
}



inline jule::Ptr<_1b4b126d9_FnDecl> _1b5782732_buildAnonFn(_1b577c331_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _42335_tokens) {
	jule::Ptr<_1b4b126d9_FnDecl> _42413_f = _1b5794ac9_buildFn((*(_self_))._field_p, _42335_tokens, false, false);;
	if ((!(_1b4b12a4c_IsAnon(_42413_f.ptr())))) {
		_1b577cb17_pushErr(_self_, (*_42413_f.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1b577ce7a_pushSuggestion(_self_, jule::Str::lit("anonymous function expected, remove identifier of function", 58), jule::Slice<jule::Any>());
	};
	return _42413_f;;
}



inline jule::Any _1b5782a73_buildUnsafe(_1b577c331_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _43235_tokens) {
	{
		auto &_match_expr{ (*((*(_43235_tokens))[1LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1abd89b34:;
			{
				return jule::Any(_1b5782732_buildAnonFn(_self_, _43235_tokens), &__jule_any_type14);;
			}
		}
		else {
			_case_begin_1abd88eeb:;
			{
				return jule::Any(_1b57823e1_buildUnsafeExpr(_self_, (*(_43235_tokens))), &__jule_any_type103);;
			}
		}
		_match_end_1abd8943b:;
	};
}



inline void _1b5782e91_pushRangeLitPart(_1b577c331_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _44239_part, jule::Ptr<_1b4ad5712_Token> _4439_errorToken, jule::Slice<jule::Slice<jule::Ptr<_1b4ad5712_Token>>>* _44334_parts) {
	if ((_44239_part.len() == 0LL)) {
		_1b577cb17_pushErr(_self_, _4439_errorToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1b577ce7a_pushSuggestion(_self_, jule::Str::lit("an expression expected", 22), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Slice<jule::Ptr<_1b4ad5712_Token>>> &__jule_push_dest = (*(_44334_parts)); __jule_push_dest.push(_44239_part); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_1b4ad5712_Token>>> _1b57832d2_getBraceRangeLitExprParts(_1b577c331_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _45348_tokens) {
	if ((_45348_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1b4ad5712_Token>>> _45917_parts = nullptr;;
	jule::I64 _46113_last = 0LL;;
	jule::I64 _46213_rangeN = 0LL;;
	(_45348_tokens).mut_slice(1LL, (_45348_tokens.len() - 1LL));;
	{
		auto expr = &(_45348_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abd8d550:;
		if (it != expr_end) {
			jule::I64 _46413_i = it - expr->begin();
			jule::Ptr<_1b4ad5712_Token> _46416_token = *it;
			{
				{
					auto &_match_expr{ (*(_46416_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1abd8dd58:;
						{
							(_46213_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1abd8e232:;
						{
							(_46213_rangeN)--;
						}
					}
					_match_end_1abd8e144:;
				};
				if (((_46213_rangeN > 0LL) || ((*(_46416_token))._field_Id != static_cast<jule::U64>(5LLU)))) {
					goto _iter_next_1abd8d550;
				};
				_1b5782e91_pushRangeLitPart(_self_, _45348_tokens.slice(_46113_last, _46413_i), _46416_token, &(_45917_parts));
				_46113_last=(_46413_i + 1LL);
			}
			_iter_next_1abd8d550:;
			++it;
			_46413_i++;
			goto _iter_begin_1abd8d550;
		}
		_iter_end_1abd8d550:;
	};
	if ((_46113_last < _45348_tokens.len())) {
		if ((_46113_last == 0LL)) {
			if ((_45348_tokens.len() > 0LL)) {
				_1b5782e91_pushRangeLitPart(_self_, _45348_tokens.slice(_46113_last), _45348_tokens[_46113_last], &(_45917_parts));
			};
		} else {
			_1b5782e91_pushRangeLitPart(_self_, _45348_tokens.slice(_46113_last), _45348_tokens[(_46113_last - 1LL)], &(_45917_parts));
		};
	};
	return _45917_parts;;
}



inline jule::Ptr<_1b4b04720_FieldExprPair> _1b5783623_buildFieldExprPair(_1b577c331_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _49541_tokens) {
	if (((_49541_tokens.len() - 2LL) == 0LL)) {
		_1b577cb17_pushErr(_self_, _49541_tokens[1LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b4b04720_FieldExprPair> _50013_pair = jule::new_ptr<_1b4b04720_FieldExprPair>(_1b4b04720_FieldExprPair{._field_Field=_49541_tokens[0LL], });;
	(_49541_tokens).mut_slice(2LL);;
	(*(_50013_pair))._field_Expr=_1b57876b0_buildFromTokens(_self_, _49541_tokens);
	return _50013_pair;;
}



inline jule::Ptr<_1b4b00001_Expr> _1b5783964_buildStructLitExpr(_1b577c331_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _50842_tokens) {
	jule::Ptr<_1b4ad5712_Token> _50913_token = (*(_50842_tokens))[0LL];;
	if ((((*(_50913_token))._field_Id == static_cast<jule::U64>(1LLU)) && ((*(_50842_tokens)).len() > 1LL))) {
		_50913_token=(*(_50842_tokens))[1LL];
		if (((*_50913_token.alloc)._field_Id == static_cast<jule::U64>(8LLU))) {
			return jule::new_ptr<_1b4b00001_Expr>(_1b4b00001_Expr{._field_Token=_50913_token, ._field_End=(*(_50842_tokens))[((*(_50842_tokens)).len() - 1LL)], ._field_Kind=jule::Any(_1b5783623_buildFieldExprPair(_self_, (*(_50842_tokens))), &__jule_any_type77)});;
		};
	};
	return _1b57876b0_buildFromTokens(_self_, (*(_50842_tokens)));;
}



inline jule::Slice<jule::Ptr<_1b4b00001_Expr>> _1b5783ca5_buildStructLitExprs(_1b577c331_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _52343_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1b4ad5712_Token>>> _52413_parts = _1b57832d2_getBraceRangeLitExprParts(_self_, (*(_52343_tokens)));;
	if ((_52413_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1b4b00001_Expr>> _52913_pairs = jule::Slice<jule::Ptr<_1b4b00001_Expr>>::alloc(0LL, _52413_parts.len());;
	{
		auto expr = &(_52413_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abd97a32:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1b4ad5712_Token>> _53021_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1b4b00001_Expr>> &__jule_push_dest = _52913_pairs; __jule_push_dest.push(_1b5783964_buildStructLitExpr(_self_, &(_53021_part))); };
			}
			_iter_next_1abd97a32:;
			++it;
			goto _iter_begin_1abd97a32;
		}
		_iter_end_1abd97a32:;
	};
	return _52913_pairs;;
}



inline jule::Ptr<_1b4b0504a_StructLit> _1b57840e6_buildTypedStructLiteral(_1b577c331_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _53646_tokens) {
	jule::I64 _53713_i = 0LL;;
	jule::Ptr<_1b4aeabbc_TypeDecl> _53813_t;
	jule::Bool _53816_ok;
	({
		__jule_tuple_x_1b4aeabbc_TypeDecl__jule_tuple_bool __jule_assign_result = _1b5790542_buildType((*(_self_))._field_p, &(_53646_tokens), (&(_53713_i)), true);
		_53813_t = __jule_assign_result.__jule_result_arg0;
		_53816_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_53816_ok))) {
		return nullptr;;
	} else if ((_53713_i >= _53646_tokens.len())) {
		_1b577cb17_pushErr(_self_, _53646_tokens[_53713_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_53646_tokens).mut_slice(_53713_i);;
	jule::Ptr<_1b4ad5712_Token> _5479_token = _53646_tokens[0LL];;
	if (((*(_5479_token))._field_Id != static_cast<jule::U64>(72LLU))) {
		_1b577cb17_pushErr(_self_, _5479_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1b4b0504a_StructLit>(_1b4b0504a_StructLit{._field_End=_53646_tokens[(_53646_tokens.len() - 1LL)], ._field_Kind=_53813_t, ._field_Exprs=_1b5783ca5_buildStructLitExprs(_self_, &(_53646_tokens))});;
}



inline jule::Ptr<_1b4b00001_Expr> _1b5784437_buildBraceLitPart(_1b577c331_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _56041_tokens) {
	jule::Slice<jule::Ptr<_1b4ad5712_Token>> _56113_l;
	jule::Slice<jule::Ptr<_1b4ad5712_Token>> _56120_r;
	({
		__jule_tuple_sx_1b4ad5712_Token__jule_tuple_sx_1b4ad5712_Token __jule_assign_result = _1b5788518_splitDelim(_56041_tokens, static_cast<jule::U64>(8LLU));
		_56113_l = __jule_assign_result.__jule_result_arg0;
		_56120_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_56113_l != nullptr)) {
		return jule::new_ptr<_1b4b00001_Expr>(_1b4b00001_Expr{._field_Token=(*(_56041_tokens))[0LL], ._field_End=(*(_56041_tokens))[((*(_56041_tokens)).len() - 1LL)], ._field_Kind=jule::Any(jule::new_ptr<_1b4b05d2b_KeyValPair>(_1b4b05d2b_KeyValPair{._field_Key=_1b57876b0_buildFromTokens(_self_, _56113_l), ._field_Val=_1b57876b0_buildFromTokens(_self_, _56120_r), ._field_Colon=(*(_56041_tokens))[_56113_l.len()]}), &__jule_any_type78)});;
	};
	return _1b57876b0_buildFromTokens(_self_, (*(_56041_tokens)));;
}



inline jule::Ptr<_1b4b05501_BraceLit> _1b5784778_buildBraceLit(_1b577c331_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _57737_tokens) {
	jule::Ptr<_1b4b05501_BraceLit> _57813_lit = jule::new_ptr<_1b4b05501_BraceLit>(_1b4b05501_BraceLit{._field_Token=(*(_57737_tokens))[0LL], ._field_End=(*(_57737_tokens))[((*(_57737_tokens)).len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_1b4ad5712_Token>>> _58313_parts = _1b57832d2_getBraceRangeLitExprParts(_self_, (*(_57737_tokens)));;
	if ((_58313_parts == nullptr)) {
		return _57813_lit;;
	};
	(*(_57813_lit))._field_Exprs=jule::Slice<jule::Ptr<_1b4b00001_Expr>>::alloc(0LL, _58313_parts.len());
	{
		auto expr = &(_58313_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abda71b2:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1b4ad5712_Token>> _58921_part = *it;
			{
				(*_57813_lit.alloc)._field_Exprs=jule::append((*_57813_lit.alloc)._field_Exprs,jule::Slice<jule::Ptr<_1b4b00001_Expr>>::make({_1b5784437_buildBraceLitPart(_self_, &(_58921_part))}));
			}
			_iter_next_1abda71b2:;
			++it;
			goto _iter_begin_1abda71b2;
		}
		_iter_end_1abda71b2:;
	};
	return _57813_lit;;
}



inline jule::Any _1b5784ab9_buildBraceRange(_1b577c331_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _59639_tokens) {
	jule::Slice<jule::Ptr<_1b4ad5712_Token>> _59713_exprTokens;
	jule::I64 _59725_rangeN;
	({
		__jule_tuple_sx_1b4ad5712_Token__jule_tuple_int __jule_assign_result = _1b5788d65_getRangeExprTokens(_59639_tokens);
		_59713_exprTokens = __jule_assign_result.__jule_result_arg0;
		_59725_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	{
		
		if ((_59713_exprTokens.len() == 0LL)) {
			_case_begin_1abda8cda:;
			{
				return jule::Any(_1b5784778_buildBraceLit(_self_, _59639_tokens), &__jule_any_type108);;
			}
		}
		else if ((_59725_rangeN > 0LL)) {
			_case_begin_1abda8d84:;
			{
				_1b577cb17_pushErr(_self_, (*(_59639_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1abda8c52:;
	};
	jule::Ptr<_1b4ad5712_Token> _6089_elseToken = _59713_exprTokens[(_59713_exprTokens.len() - 1LL)];;
	if (((*(_59713_exprTokens[(_59713_exprTokens.len() - 1LL)]))._field_Id == static_cast<jule::U64>(14LLU))) {
		(_59713_exprTokens).mut_slice(0LL, (_59713_exprTokens.len() - 1LL));;
		jule::Any _61117_d = _1b578702d_build(_self_, &(_59713_exprTokens));;
		if ((_61117_d == nullptr)) {
			return nullptr;;
		};
		{
			auto &_match_expr{ _61117_d };
			
			if (_match_expr.type == &__jule_any_type82) {
				_case_begin_1abdac5b3:;
				{
					((*(_59639_tokens))).mut_slice((_59713_exprTokens.len() + 1LL));;
					jule::I64 _61821_i = 0LL;;
					jule::Slice<jule::Ptr<_1b4ad5712_Token>> _61921_rangeTokens = _1b578b63c_range(&(_61821_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _59639_tokens);;
					jule::Ptr<_1b4b03c2a_FnCallExpr> _62021_model = _61117_d.unsafe_cast_ptr<_1b4b03c2a_FnCallExpr>();;
					if (_1b4b04335_Ignored(_62021_model.ptr())) {
						_1b577cb17_pushErr(_self_, _6089_elseToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
						_1b577ce7a_pushSuggestion(_self_, jule::Str::lit("just ignore exceptional or handle it but you cannot do both at same time", 72), jule::Slice<jule::Any>());
					};
					(*_62021_model.alloc)._field_Exception=_1b578ead5_buildScope((*(_self_))._field_p, &(_61921_rangeTokens), (*(_59639_tokens))[(_61821_i - 1LL)]);
					return _61117_d;;
				}
			}
			else {
				_case_begin_1abdabae0:;
				{
					_1b577cb17_pushErr(_self_, _59713_exprTokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			_match_end_1abdaba8a:;
		};
	};
	{
		auto &_match_expr{ (*(_59713_exprTokens[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1abdb171b:;
			{
				return _1b5782a73_buildUnsafe(_self_, _59639_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1abdb1782:;
			{
				return jule::Any(_1b5782732_buildAnonFn(_self_, _59639_tokens), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU) || _match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1abdb17e8:;
			{
				return jule::Any(_1b57840e6_buildTypedStructLiteral(_self_, (*(_59639_tokens))), &__jule_any_type107);;
			}
		}
		else {
			_case_begin_1abdabb56:;
			{
				_1b577cb17_pushErr(_self_, _59713_exprTokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1abdb0b8d:;
	};
}



inline jule::Slice<jule::Slice<jule::Ptr<_1b4ad5712_Token>>> _1b5784e0a_getEnumerableParts(_1b577c331_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _64841_tokens) {
	(_64841_tokens).mut_slice(1LL, (_64841_tokens.len() - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1b4ad5712_Token>>> _65013_parts;
	jule::Slice<_1cb285120_Log> _65020_errors;
	({
		__jule_tuple_ssx_1b4ad5712_Token__jule_tuple_s_1cb285120_Log __jule_assign_result = _1b578bdac_parts(&(_64841_tokens), static_cast<jule::U64>(5LLU), true);
		_65013_parts = __jule_assign_result.__jule_result_arg0;
		_65020_errors = __jule_assign_result.__jule_result_arg1;
	});
	(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_65020_errors);
	return _65013_parts;;
}



inline jule::Ptr<_1b4b06557_SliceExpr> _1b578524b_buildSlice(_1b577c331_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _65533_tokens) {
	jule::Ptr<_1b4b06557_SliceExpr> _65613_slc = jule::new_ptr<_1b4b06557_SliceExpr>(_1b4b06557_SliceExpr{._field_Token=_65533_tokens[0LL], ._field_End=_65533_tokens[(_65533_tokens.len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_1b4ad5712_Token>>> _66113_parts = _1b5784e0a_getEnumerableParts(_self_, _65533_tokens);;
	if ((_66113_parts.len() == 0LL)) {
		return _65613_slc;;
	};
	(*(_65613_slc))._field_Exprs=jule::Slice<jule::Ptr<_1b4b00001_Expr>>::alloc(0LL, _66113_parts.len());
	{
		auto expr = &(_66113_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abdb659a:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1b4ad5712_Token>> _66721_p = *it;
			{
				if ((_66721_p.len() == 0LL)) {
					goto _iter_next_1abdb659a;
				};
				(*_65613_slc.alloc)._field_Exprs=jule::append((*_65613_slc.alloc)._field_Exprs,jule::Slice<jule::Ptr<_1b4b00001_Expr>>::make({_1b57876b0_buildFromTokens(_self_, _66721_p)}));
			}
			_iter_next_1abdb659a:;
			++it;
			goto _iter_begin_1abdb659a;
		}
		_iter_end_1abdb659a:;
	};
	return _65613_slc;;
}



inline jule::Ptr<_1b4b06eb4_IndexingExpr> _1b5785702_buildIndexing(_1b577c331_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _67736_exprTokens, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _67813_tokens, jule::Ptr<_1b4ad5712_Token> _67835_errorToken) {
	jule::Ptr<_1b4ad5712_Token> _67913_end = _67813_tokens[(_67813_tokens.len() - 1LL)];;
	(_67813_tokens).mut_slice(1LL, (_67813_tokens.len() - 1LL));;
	if ((_67813_tokens.len() == 0LL)) {
		_1b577cb17_pushErr(_self_, _67835_errorToken, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b4b00001_Expr> _68513_expr = _1b57876b0_buildFromTokens(_self_, _67736_exprTokens);;
	if ((_68513_expr == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1b4b00001_Expr> _68913_index = _1b57876b0_buildFromTokens(_self_, _67813_tokens);;
	if ((_68913_index == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1b4b06eb4_IndexingExpr>(_1b4b06eb4_IndexingExpr{._field_Token=_67835_errorToken, ._field_End=_67913_end, ._field_Expr=_68513_expr, ._field_Index=_68913_index});;
}



inline jule::Ptr<_1b4b07624_SlicingExpr> _1b5785d1d_buildSlicing(_1b577c331_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _70136_exprTokens, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _70163_start, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _70214_to, jule::Ptr<_1b4ad5712_Token>* _70233_errorToken, jule::Ptr<_1b4ad5712_Token> _70257_end) {
	jule::Ptr<_1b4b07624_SlicingExpr> _70313_slc = jule::new_ptr<_1b4b07624_SlicingExpr>(_1b4b07624_SlicingExpr{._field_Token=(*(_70233_errorToken)), ._field_End=_70257_end, ._field_Expr=_1b57876b0_buildFromTokens(_self_, (*(_70136_exprTokens))), });;
	if (((*(_70163_start)).len() > 0LL)) {
		(*(_70313_slc))._field_Start=_1b57876b0_buildFromTokens(_self_, (*(_70163_start)));
	};
	if (((*(_70214_to)).len() > 0LL)) {
		(*_70313_slc.alloc)._field_To=_1b57876b0_buildFromTokens(_self_, (*(_70214_to)));
	};
	return _70313_slc;;
}



inline jule::Any _1b578615e_buildBracketRange(_1b577c331_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _71740_tokens) {
	jule::Ptr<_1b4ad5712_Token> _71813_errorToken = _71740_tokens[0LL];;
	jule::Slice<jule::Ptr<_1b4ad5712_Token>> _71913_exprTokens;
	jule::I64 _71925_rangeN;
	({
		__jule_tuple_sx_1b4ad5712_Token__jule_tuple_int __jule_assign_result = _1b5788d65_getRangeExprTokens(&(_71740_tokens));
		_71913_exprTokens = __jule_assign_result.__jule_result_arg0;
		_71925_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	if ((_71913_exprTokens.len() == 0LL)) {
		return jule::Any(_1b578524b_buildSlice(_self_, _71740_tokens), &__jule_any_type94);;
	} else if ((_71925_rangeN > 0LL)) {
		_1b577cb17_pushErr(_self_, _71813_errorToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_71740_tokens).mut_slice(_71913_exprTokens.len());;
	jule::Slice<jule::Ptr<_1b4ad5712_Token>> _73413_splitTokens = _71740_tokens.slice(1LL, (_71740_tokens.len() - 1LL));;
	jule::Slice<jule::Ptr<_1b4ad5712_Token>> _73513_start;
	jule::Slice<jule::Ptr<_1b4ad5712_Token>> _73524_to;
	({
		__jule_tuple_sx_1b4ad5712_Token__jule_tuple_sx_1b4ad5712_Token __jule_assign_result = _1b5788518_splitDelim(&(_73413_splitTokens), static_cast<jule::U64>(8LLU));
		_73513_start = __jule_assign_result.__jule_result_arg0;
		_73524_to = __jule_assign_result.__jule_result_arg1;
	});
	if (((_73513_start != nullptr) || (_73524_to != nullptr))) {
		return jule::Any(_1b5785d1d_buildSlicing(_self_, &(_71913_exprTokens), &(_73513_start), &(_73524_to), &(_71813_errorToken), _71740_tokens[(_71740_tokens.len() - 1LL)]), &__jule_any_type105);;
	};
	return jule::Any(_1b5785702_buildIndexing(_self_, _71913_exprTokens, _71740_tokens, _71813_errorToken), &__jule_any_type104);;
}



inline jule::Any _1b57864a0_buildExclRight(_1b577c331_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _74238_tokens) {
	jule::Ptr<_1b4ad5712_Token> _7439_token = (*(_74238_tokens))[((*(_74238_tokens)).len() - 1LL)];;
	((*(_74238_tokens))).mut_slice(0LL, ((*(_74238_tokens)).len() - 1LL));;
	jule::Any _74513_d = _1b578702d_build(_self_, _74238_tokens);;
	if ((_74513_d == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _74513_d };
		
		if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1abdc4630:;
			{
				(*(_74513_d.unsafe_cast_ptr<_1b4b03c2a_FnCallExpr>()))._field_Exception=jule::new_ptr<_1b4b10a4a_ScopeTree>(_1b4b10a4a_ScopeTree{._field_Deferred=true, });
				return _74513_d;;
			}
		}
		_match_end_1abdc45ca:;
	};
	_1b577cb17_pushErr(_self_, _7439_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1b57867e1_buildData(_1b577c331_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _76033_tokens) {
	{
		auto _match_expr{ (*(_76033_tokens)).len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1abdc5c5d:;
			{
				return nullptr;;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1abdc5cd5:;
			{
				return _1b577dc8e_buildSingle(_self_, (*(_76033_tokens))[0LL]);;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1abdc5d4b:;
			{
				if (((*((*(_76033_tokens))[0LL]))._field_Id == static_cast<jule::U64>(27LLU))) {
					return jule::Any(_1b577e0d0_buildBindIdent(_self_, _76033_tokens), &__jule_any_type79);;
				};
			}
		}
		_match_end_1abdc5ab5:;
	};
	jule::Ptr<_1b4ad5712_Token> _77213_token = (*(_76033_tokens))[((*(_76033_tokens)).len() - 1LL)];;
	if (((*(_77213_token))._field_Id == static_cast<jule::U64>(39LLU))) {
		return jule::Any(_1b5780576_buildVariadic(_self_, (*(_76033_tokens))), &__jule_any_type75);;
	};
	_77213_token=(*(_76033_tokens))[0LL];
	if (_1b4ad5e4e_IsUnaryOp((*_77213_token.alloc)._field_Id)) {
		if (((*(_76033_tokens)).len() > 1LL)) {
			_77213_token=(*(_76033_tokens))[1LL];
			if (((*_77213_token.alloc)._field_Id == static_cast<jule::U64>(31LLU))) {
				return jule::Any(_1b577ede4_buildType(_self_, _76033_tokens), &__jule_any_type89);;
			};
		};
		return jule::Any(_1b577e421_buildUnary(_self_, (*(_76033_tokens))), &__jule_any_type88);;
	};
	if (((*(_76033_tokens)).len() >= 3LL)) {
		{
			auto &_match_expr{ (*(_77213_token))._field_Id };
			
			if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
				_case_begin_1abdca812:;
				{
					if (((*(_76033_tokens)).len() > 3LL)) {
						jule::Ptr<_1b4ad5712_Token> _79821_t = (*(_76033_tokens))[((*(_76033_tokens)).len() - 1LL)];;
						if (((*(_79821_t))._field_Id == static_cast<jule::U64>(75LLU))) {
							goto _match_end_1abdca768;
						};
					};
					jule::Ptr<_1b4ad5712_Token> _80417_next = (*(_76033_tokens))[1LL];;
					if (((*(_80417_next))._field_Id != static_cast<jule::U64>(77LLU))) {
						goto _match_end_1abdca768;
					};
					return jule::Any(_1b577ede4_buildType(_self_, _76033_tokens), &__jule_any_type89);;
				}
			}
			_match_end_1abdca768:;
		};
	};
	_77213_token=(*(_76033_tokens))[((*(_76033_tokens)).len() - 1LL)];
	{
		auto &_match_expr{ (*(_77213_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1abdcd9be:;
			{
				return _1b5780235_buildSubIdent(_self_, _76033_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(68LLU)) {
			_case_begin_1abdcda46:;
			{
				return _1b57864a0_buildExclRight(_self_, _76033_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(75LLU)) {
			_case_begin_1abdcdaac:;
			{
				return _1b57820a0_buildParenthesesRange(_self_, _76033_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1abdcdb23:;
			{
				return _1b5784ab9_buildBraceRange(_self_, _76033_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_1abdcdb89:;
			{
				return _1b578615e_buildBracketRange(_self_, (*(_76033_tokens)));;
			}
		}
		_match_end_1abdcd969:;
	};
	_1b577cb17_pushErr(_self_, _77213_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1b5786bdc_buildBinary(_1b577c331_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _82935_tokens, jule::I64 _82953_i) {
	jule::Ptr<_1b4ad5712_Token> _83013_op = (*(_82935_tokens))[_82953_i];;
	jule::Slice<jule::Ptr<_1b4ad5712_Token>> _83113_leftTokens = (*(_82935_tokens)).slice(0LL, _82953_i);;
	if ((_1b5787a78_isTypeOp(&((*(_83013_op))._field_Id)) && _1b5787d86_isTypeRange(&(_83113_leftTokens)))) {
		return jule::Any(_1b577ede4_buildType(_self_, _82935_tokens), &__jule_any_type89);;
	};
	jule::Slice<jule::Ptr<_1b4ad5712_Token>> _83613_rightTokens = (*(_82935_tokens)).slice((_82953_i + 1LL));;
	if ((_83113_leftTokens.len() == 0LL)) {
		_1b577cb17_pushErr(_self_, (*(_82935_tokens))[_82953_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1b577ce7a_pushSuggestion(_self_, jule::Str::lit("left operand expected for binary operator", 41), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_83613_rightTokens.len() == 0LL)) {
		_1b577cb17_pushErr(_self_, (*(_82935_tokens))[_82953_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1b577ce7a_pushSuggestion(_self_, jule::Str::lit("right operand expected for binary operator", 42), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::Any(jule::new_ptr<_1b4b035ba_BinaryExpr>(_1b4b035ba_BinaryExpr{._field_Left=_1b57876b0_buildFromTokens(_self_, _83113_leftTokens), ._field_Right=_1b57876b0_buildFromTokens(_self_, _83613_rightTokens), ._field_Op=_83013_op}), &__jule_any_type109);;
}



inline jule::Any _1b578702d_build(_1b577c331_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _85429_tokens) {
	if (((*((*(_85429_tokens))[0LL]))._field_Id == static_cast<jule::U64>(37LLU))) {
		return jule::Any(_1b577ede4_buildType(_self_, _85429_tokens), &__jule_any_type89);;
	};
	jule::I64 _8589_i = _1b57887d2_findLowestPrecOp(_85429_tokens);;
	if ((_8589_i == -1LL)) {
		return _1b57867e1_buildData(_self_, _85429_tokens);;
	};
	return _1b5786bdc_buildBinary(_self_, _85429_tokens, _8589_i);;
}



inline jule::Any _1b578736e_buildKind(_1b577c331_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _86533_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1b4ad5712_Token>>> _86613_parts;
	jule::Slice<_1cb285120_Log> _86620_errors;
	({
		__jule_tuple_ssx_1b4ad5712_Token__jule_tuple_s_1cb285120_Log __jule_assign_result = _1b578bdac_parts(_86533_tokens, static_cast<jule::U64>(5LLU), true);
		_86613_parts = __jule_assign_result.__jule_result_arg0;
		_86620_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_86620_errors != nullptr)) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_86620_errors);
		return nullptr;;
	} else if ((_86613_parts.len() > 1LL)) {
		return jule::Any(_1b577d2bb_buildTuple(_self_, &(_86613_parts)), &__jule_any_type80);;
	};
	return _1b578702d_build(_self_, _86533_tokens);;
}



inline jule::Ptr<_1b4b00001_Expr> _1b57876b0_buildFromTokens(_1b577c331_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _87638_tokens) {
	if ((_87638_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Any _88013_kind = _1b578736e_buildKind(_self_, &(_87638_tokens));;
	if ((_88013_kind == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1b4b00001_Expr>(_1b4b00001_Expr{._field_Token=_87638_tokens[0LL], ._field_End=_87638_tokens[(_87638_tokens.len() - 1LL)], ._field_Kind=_88013_kind});;
}





std::ostream &operator<<(std::ostream &_Stream, _1b577c331_exprBuilder _Src) {
	_Stream << "exprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b5789a8b_assignInfo _Src) {
	_Stream << "assignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}



inline void _1b578d287_stop(_1b578ce8a_parser* _self_) {
	(*(_self_))._field_ast=nullptr;
}



inline jule::Bool _1b578d51d_stopped(_1b578ce8a_parser* _self_) {
	return ((*(_self_))._field_ast == nullptr);;
}



inline void _1b578d93b_pushErr(_1b578ce8a_parser* _self_, jule::Ptr<_1b4ad5712_Token> _20826_token, jule::Str _20841_fmt, jule::Slice<jule::Any> _20854_args) {
	{ jule::Slice<_1cb285120_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1b578c572_compilerErr(&(_20826_token), &(_20841_fmt), _20854_args)); };
}



inline void _1b578dc9e_pushSuggestion(_1b578ce8a_parser* _self_, jule::Str _21333_fmt, jule::Slice<jule::Any> _21346_args) {
	{
		_1b578c918_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _21333_fmt, _21346_args);
	};
}



inline jule::Ptr<_1b4b00001_Expr> _1b578e0e0_buildExpr(jule::Ptr<_1b578ce8a_parser> _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _21734_tokens) {
	return _1b57876b0_buildFromTokens((*(_self_))._field_ep.ptr(), (*(_21734_tokens)));;
}



inline jule::Ptr<_1b4aea0d9_Directive> _1b578e431_buildDirective(_1b578ce8a_parser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _22137_tokens) {
	if ((_22137_tokens.len() == 1LL)) {
		_1b578d93b_pushErr(_self_, _22137_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_22137_tokens[1LL]))._field_Column != ((*(_22137_tokens[0LL]))._field_Column + 1LL))) {
		_1b578d93b_pushErr(_self_, _22137_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1b4aea0d9_Directive>(_1b4aea0d9_Directive{._field_Tag=_22137_tokens[1LL], ._field_Args=_22137_tokens.slice(2LL)});;
}



inline void _1b578e6d9_pushDirective(_1b578ce8a_parser* _self_, jule::Ptr<_1b4aea0d9_Directive> _23636_d) {
	if ((_23636_d == nullptr)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_directives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abe0a754:;
		if (it != expr_end) {
			jule::Ptr<_1b4aea0d9_Directive> _24116_pd = *it;
			{
				if (((*((*(_23636_d))._field_Tag))._field_Kind == (*(*(_24116_pd))._field_Tag.alloc)._field_Kind)) {
					return;;
				};
			}
			_iter_next_1abe0a754:;
			++it;
			goto _iter_begin_1abe0a754;
		}
		_iter_end_1abe0a754:;
	};
	{ jule::Slice<jule::Ptr<_1b4aea0d9_Directive>> &__jule_push_dest = (*(_self_))._field_directives; __jule_push_dest.push(_23636_d); };
}



inline jule::Ptr<_1b4b10a4a_ScopeTree> _1b578ead5_buildScope(jule::Ptr<_1b578ce8a_parser> _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _24935_tokens, jule::Ptr<_1b4ad5712_Token> _24957_end) {
	jule::Ptr<_1b4b10a4a_ScopeTree> _25013_s = _1b576cce4_newScope();;
	(*(_25013_s))._field_End=_24957_end;
	_1b576e90b_scopeParser _25213_sp = _1b576e90b_scopeParser{._field_p=_self_, };;
	_1b577b7b4_build(&_25213_sp, _24935_tokens, &(_25013_s));
	return _25013_s;;
}



inline __jule_tuple_x_1b4aeabbc_TypeDecl__jule_tuple_bool _1b579008b__buildType(jule::Ptr<_1b578ce8a_parser> _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _25942_tokens, jule::I64* _26013_i, jule::Bool _26022_err) {
	__jule_tuple_x_1b4aeabbc_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	_1b57a00ac_typeBuilder _26113_tb = _1b57a00ac_typeBuilder{._field_p=_self_, ._field_tokens=(*(_25942_tokens)), ._field_i=_26013_i, ._field_err=_26022_err};;
	__jule_func_result = std::move(_1b57a308d_build(&_26113_tb));
return __jule_func_result;;
}



inline __jule_tuple_x_1b4aeabbc_TypeDecl__jule_tuple_bool _1b5790542_buildType(jule::Ptr<_1b578ce8a_parser> _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _27141_tokens, jule::I64* _27213_i, jule::Bool _27222_err) {
	__jule_tuple_x_1b4aeabbc_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1b4ad5712_Token> _2739_token = (*(_27141_tokens))[(*(_27213_i))];;
	jule::Ptr<_1b4aeabbc_TypeDecl> _27413_t;
	jule::Bool _27416_ok;
	({
		__jule_tuple_x_1b4aeabbc_TypeDecl__jule_tuple_bool __jule_assign_result = _1b579008b__buildType(_self_, _27141_tokens, _27213_i, _27222_err);
		_27413_t = __jule_assign_result.__jule_result_arg0;
		_27416_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((_27222_err && (!(_27416_ok)))) {
		_1b578d93b_pushErr(_self_, _2739_token, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
	};
	__jule_func_result.__jule_result_arg0 = _27413_t;
	__jule_func_result.__jule_result_arg1 = _27416_ok;
	return __jule_func_result;;
}



inline jule::Ptr<_1b4b17546_TypeAliasDecl> _1b5790883_buildTypeAliasDecl(jule::Ptr<_1b578ce8a_parser> _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _28143_tokens) {
	jule::I64 _28213_i = 1LL;;
	if ((_28213_i >= (*(_28143_tokens)).len())) {
		_1b578d93b_pushErr(_self_.ptr(), (*(_28143_tokens))[(_28213_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b4b17546_TypeAliasDecl> _28713_tad = jule::new_ptr<_1b4b17546_TypeAliasDecl>(_1b4b17546_TypeAliasDecl{._field_Token=(*(_28143_tokens))[1LL], ._field_Ident=(*((*(_28143_tokens))[1LL]))._field_Kind, });;
	jule::Ptr<_1b4ad5712_Token> _29113_token = (*(_28143_tokens))[_28213_i];;
	if (((*(_29113_token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1b578d93b_pushErr(_self_, _29113_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1b578dc9e_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(_28213_i)++;
	if ((_28213_i >= (*(_28143_tokens)).len())) {
		_1b578d93b_pushErr(_self_, (*(_28143_tokens))[(_28213_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return _28713_tad;;
	};
	_29113_token=(*(_28143_tokens))[_28213_i];
	if (((*_29113_token.alloc)._field_Id != static_cast<jule::U64>(8LLU))) {
		_1b578d93b_pushErr(_self_, (*(_28143_tokens))[(_28213_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1b578dc9e_pushSuggestion(_self_, jule::Str::lit("expected colon \":\"", 18), jule::Slice<jule::Any>());
		return _28713_tad;;
	};
	(_28213_i)++;
	if ((_28213_i >= (*(_28143_tokens)).len())) {
		_1b578d93b_pushErr(_self_, (*(_28143_tokens))[(_28213_i - 1LL)], jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
		return _28713_tad;;
	};
	jule::Ptr<_1b4aeabbc_TypeDecl> _31213_t;
	jule::Bool _31216_ok;
	({
		__jule_tuple_x_1b4aeabbc_TypeDecl__jule_tuple_bool __jule_assign_result = _1b5790542_buildType(_self_, _28143_tokens, (&(_28213_i)), true);
		_31213_t = __jule_assign_result.__jule_result_arg0;
		_31216_ok = __jule_assign_result.__jule_result_arg1;
	});
	(*(_28713_tad))._field_Kind=_31213_t;
	if ((_31216_ok && (_28213_i < (*(_28143_tokens)).len()))) {
		_1b578d93b_pushErr(_self_, (*(_28143_tokens))[_28213_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*_28713_tad.alloc)._field_Public=_1b4bb7d00_IsPub((*_28713_tad.alloc)._field_Ident);
	return _28713_tad;;
}



inline void _1b5790be6_buildVarTypeAndExpr(jule::Ptr<_1b578ce8a_parser> _self_, jule::Ptr<_1b4b13894_VarDecl>* _32144_v, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _32162_tokens) {
	jule::I64 _32213_i = 0LL;;
	jule::Ptr<_1b4ad5712_Token> _32313_tok = (*(_32162_tokens))[_32213_i];;
	if (((*(_32313_tok))._field_Id == static_cast<jule::U64>(8LLU))) {
		(_32213_i)++;
		if (((_32213_i >= (*(_32162_tokens)).len()) || ((*((*(_32162_tokens))[_32213_i]))._field_Id == static_cast<jule::U64>(71LLU)))) {
			_1b578d93b_pushErr(_self_.ptr(), _32313_tok, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
			return;;
		};
		jule::Ptr<_1b4aeabbc_TypeDecl> _33017_t;
		jule::Bool _33020_ok;
		({
			__jule_tuple_x_1b4aeabbc_TypeDecl__jule_tuple_bool __jule_assign_result = _1b5790542_buildType(_self_, _32162_tokens, (&(_32213_i)), true);
			_33017_t = __jule_assign_result.__jule_result_arg0;
			_33020_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_33020_ok) {
			(*((*(_32144_v))))._field_Kind=_33017_t;
			if ((_32213_i >= (*(_32162_tokens)).len())) {
				return;;
			};
			_32313_tok=(*(_32162_tokens))[_32213_i];
		};
	};
	if (((*_32313_tok.alloc)._field_Id != static_cast<jule::U64>(71LLU))) {
		_1b578d93b_pushErr(_self_, _32313_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_32144_v))))._field_Setter=_32313_tok;
	jule::Slice<jule::Ptr<_1b4ad5712_Token>> _34613_exprTokens = (*(_32162_tokens)).slice((_32213_i + 1LL));;
	if ((_34613_exprTokens.len() == 0LL)) {
		_1b578d93b_pushErr(_self_, _32313_tok, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_32144_v))))._field_Expr=_1b578e0e0_buildExpr(_self_, &(_34613_exprTokens));
}



inline void _1b5791059_buildVarCommon(jule::Ptr<_1b578ce8a_parser> _self_, jule::Ptr<_1b4b13894_VarDecl>* _35439_v, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _35456_tokens) {
	(*((*(_35439_v))))._field_Token=_35456_tokens[0LL];
	if (((*((*((*(_35439_v))))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1b578d93b_pushErr(_self_.ptr(), (*((*(_35439_v))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1b578dc9e_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_35439_v))))._field_Ident=(*(*((*(_35439_v))))._field_Token.alloc)._field_Kind;
	(*((*(_35439_v))))._field_Public=_1b4bb7d00_IsPub((*((*(_35439_v))))._field_Ident);
	(*((*(_35439_v))))._field_Kind=nullptr;
	if ((_35456_tokens.len() > 1LL)) {
		(_35456_tokens).mut_slice(1LL);;
		_1b5790be6_buildVarTypeAndExpr(_self_, _35439_v, &(_35456_tokens));
	};
}



inline void _1b57913bc_buildVarBegin(_1b578ce8a_parser* _self_, jule::Ptr<_1b4b13894_VarDecl>* _37037_v, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _37055_tokens) {
	jule::Ptr<_1b4ad5712_Token> _3719_tok = (*(_37055_tokens))[0LL];;
	{
		auto &_match_expr{ (*(_3719_tok))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1abe263c9:;
			{
				(*((*(_37037_v))))._field_Statically=true;
				goto _case_begin_1abe26055;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1abe26055:;
			{
				if (((*(_37055_tokens)).len() == 1LL)) {
					(*(_37055_tokens))=nullptr;
					_1b578d93b_pushErr(_self_, _3719_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				((*(_37055_tokens))).mut_slice(1LL);;
				if (((*((*(_37055_tokens))[0LL]))._field_Id == static_cast<jule::U64>(32LLU))) {
					(*((*(_37037_v))))._field_Mutable=true;
					((*(_37055_tokens))).mut_slice(1LL);;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1abe25c47:;
			{
				(*((*(_37037_v))))._field_Constant=true;
				((*(_37055_tokens))).mut_slice(1LL);;
			}
		}
		else {
			_case_begin_1abe25917:;
			{
				(*(_37055_tokens))=nullptr;
				_1b578d93b_pushErr(_self_, _3719_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1abe25be2:;
	};
}



inline jule::Ptr<_1b4b13894_VarDecl> _1b579170d_buildVar(jule::Ptr<_1b578ce8a_parser> _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _39832_tokens) {
	jule::Ptr<_1b4b13894_VarDecl> _39913_v = jule::new_ptr<_1b4b13894_VarDecl>(_1b4b13894_VarDecl{._field_Token=_39832_tokens[0LL], });;
	_1b57913bc_buildVarBegin(_self_.ptr(), &(_39913_v), &(_39832_tokens));
	if ((_39832_tokens.len() == 0LL)) {
		return nullptr;;
	};
	if (((*(_39832_tokens[0LL]))._field_Id == static_cast<jule::U64>(65LLU))) {
		(*(_39913_v))._field_Reference=true;
		if ((_39832_tokens.len() == 1LL)) {
			return nullptr;;
		};
		(_39832_tokens).mut_slice(1LL);;
	};
	_1b5791059_buildVarCommon(_self_, &(_39913_v), _39832_tokens);
	return _39913_v;;
}



inline jule::Ptr<_1b4b07dc7_GenericDecl> _1b5791a4e_buildGeneric(jule::Ptr<_1b578ce8a_parser> _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _41737_tokens) {
	jule::Ptr<_1b4b07dc7_GenericDecl> _41813_g = jule::new_ptr<_1b4b07dc7_GenericDecl>(_1b4b07dc7_GenericDecl{._field_Token=(*(_41737_tokens))[0LL], });;
	if (((*((*(_41813_g))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1b578d93b_pushErr(_self_.ptr(), (*_41813_g.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1b578dc9e_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*_41813_g.alloc)._field_Ident=(*(*_41813_g.alloc)._field_Token.alloc)._field_Kind;
	if (((*(_41737_tokens)).len() > 1LL)) {
		if (((*((*(_41737_tokens))[1LL]))._field_Id != static_cast<jule::U64>(8LLU))) {
			_1b578d93b_pushErr(_self_, (*(_41737_tokens))[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		if (((*(_41737_tokens)).len() == 2LL)) {
			_1b578d93b_pushErr(_self_, (*(_41737_tokens))[1LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
			return nullptr;;
		};
		jule::Slice<jule::Ptr<_1b4ad5712_Token>> _43517_constraintTokens = (*(_41737_tokens)).slice(2LL);;
		jule::Slice<jule::Slice<jule::Ptr<_1b4ad5712_Token>>> _43617_parts;
		jule::Slice<_1cb285120_Log> _43624_errors;
		({
			__jule_tuple_ssx_1b4ad5712_Token__jule_tuple_s_1cb285120_Log __jule_assign_result = _1b578bdac_parts(&(_43517_constraintTokens), static_cast<jule::U64>(66LLU), true);
			_43617_parts = __jule_assign_result.__jule_result_arg0;
			_43624_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_43624_errors.len() > 0LL)) {
			(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_43624_errors);
			return nullptr;;
		};
		(*_41813_g.alloc)._field_Constraint=jule::new_ptr<_1b4b07921_Constraint>(_1b4b07921_Constraint{._field_Mask=jule::Slice<jule::Ptr<_1b4aeabbc_TypeDecl>>::alloc(0LL, _43617_parts.len())});
		{
			auto expr = &(_43617_parts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1abe337e3:;
			if (it != expr_end) {
				jule::Slice<jule::Ptr<_1b4ad5712_Token>> _44225_part = *it;
				{
					jule::I64 _44321_i = 0LL;;
					jule::Ptr<_1b4aeabbc_TypeDecl> _44421_kind;
					({
						__jule_tuple_x_1b4aeabbc_TypeDecl__jule_tuple_bool __jule_assign_result = _1b5790542_buildType(_self_, &(_44225_part), (&(_44321_i)), true);
						_44421_kind = __jule_assign_result.__jule_result_arg0;
					});
					(*((*_41813_g.alloc)._field_Constraint))._field_Mask=jule::append((*(*_41813_g.alloc)._field_Constraint.alloc)._field_Mask,jule::Slice<jule::Ptr<_1b4aeabbc_TypeDecl>>::make({_44421_kind}));
					if ((_44321_i < _44225_part.len())) {
						_1b578d93b_pushErr(_self_, _44225_part[_44321_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					};
				}
				_iter_next_1abe337e3:;
				++it;
				goto _iter_begin_1abe337e3;
			}
			_iter_end_1abe337e3:;
		};
	};
	return _41813_g;;
}



inline jule::Slice<jule::Ptr<_1b4b07dc7_GenericDecl>> _1b5791e4a_buildGenerics(jule::Ptr<_1b578ce8a_parser> _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _45438_tokens, jule::Ptr<_1b4ad5712_Token>* _45457_errorToken) {
	if (((*(_45438_tokens)).len() == 0LL)) {
		_1b578d93b_pushErr(_self_.ptr(), (*(_45457_errorToken)), jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1b4ad5712_Token>>> _46013_parts;
	jule::Slice<_1cb285120_Log> _46020_errors;
	({
		__jule_tuple_ssx_1b4ad5712_Token__jule_tuple_s_1cb285120_Log __jule_assign_result = _1b578bdac_parts(_45438_tokens, static_cast<jule::U64>(5LLU), true);
		_46013_parts = __jule_assign_result.__jule_result_arg0;
		_46020_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_46020_errors.len() > 0LL)) {
		(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_46020_errors);
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1b4b07dc7_GenericDecl>> _46613_generics = jule::Slice<jule::Ptr<_1b4b07dc7_GenericDecl>>::alloc(0LL, _46013_parts.len());;
	{
		auto expr = &(_46013_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abe388c5:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1b4ad5712_Token>> _46721_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1b4b07dc7_GenericDecl>> &__jule_push_dest = _46613_generics; __jule_push_dest.push(_1b5791a4e_buildGeneric(_self_, &(_46721_part))); };
			}
			_iter_next_1abe388c5:;
			++it;
			goto _iter_begin_1abe388c5;
		}
		_iter_end_1abe388c5:;
	};
	return _46613_generics;;
}



inline jule::Ptr<_1b4b11287_ParamDecl> _1b579228b_buildSelfParam(_1b578ce8a_parser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _47437_tokens) {
	if ((_47437_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1b4b11287_ParamDecl> _47913_param = jule::new_ptr<_1b4b11287_ParamDecl>();;
	if (((*(_47437_tokens[0LL]))._field_Id == static_cast<jule::U64>(32LLU))) {
		(*_47913_param.alloc)._field_Mutable=true;
		if ((_47437_tokens.len() == 1LL)) {
			_1b578d93b_pushErr(_self_, _47437_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_47437_tokens).mut_slice(1LL);;
	};
	_1cb1d27a9_StrBuilder _49113_ident = static__1cb1d2a73_New(5LL);;
	if (((*(_47437_tokens[0LL]))._field_Id == static_cast<jule::U64>(65LLU))) {
		_1cb1db3d9_WriteStr(&_49113_ident, jule::Str::lit("&", 1));
		if ((_47437_tokens.len() == 1LL)) {
			_1b578d93b_pushErr(_self_, _47437_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_47437_tokens).mut_slice(1LL);;
	};
	if (((*(_47437_tokens[0LL]))._field_Id == static_cast<jule::U64>(24LLU))) {
		_1cb1db3d9_WriteStr(&_49113_ident, jule::Str::lit("self", 4));
		(*_47913_param.alloc)._field_Token=_47437_tokens[0LL];
		if ((_47437_tokens.len() != 1LL)) {
			_1b578d93b_pushErr(_self_, _47437_tokens[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		};
	};
	(*_47913_param.alloc)._field_Ident=_1cb1dbbd1_Str(&_49113_ident);
	return _47913_param;;
}



inline void _1b57926a9_paramTypeBegin(_1b578ce8a_parser* _self_, jule::Ptr<_1b4b11287_ParamDecl>* _51438_param, jule::I64* _51462_i, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _51471_tokens) {
	for (; ((*(_51462_i)) < (*(_51471_tokens)).len()); ((*(_51462_i)))++) {
		{
			jule::Ptr<_1b4ad5712_Token> _51613_token = (*(_51471_tokens))[(*(_51462_i))];;
			if (((*(_51613_token))._field_Id != static_cast<jule::U64>(39LLU))) {
				return;;
			};
			if ((*((*(_51438_param))))._field_Variadic) {
				_1b578d93b_pushErr(_self_, _51613_token, jule::Str::lit("define is already variadic", 26), jule::Slice<jule::Any>());
				goto _iter_next_1abe40d0b;
			};
			(*((*(_51438_param))))._field_Variadic=true;
		}
	_iter_next_1abe40d0b:;
	}
	_iter_end_1abe40d0b:;;
}



inline void _1b5792a1c_buildParamType(jule::Ptr<_1b578ce8a_parser> _self_, jule::Ptr<_1b4b11287_ParamDecl>* _52939_param, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _52963_tokens) {
	jule::I64 _53013_i = 0LL;;
	_1b57926a9_paramTypeBegin(_self_.ptr(), _52939_param, &(_53013_i), _52963_tokens);
	if ((_53013_i >= (*(_52963_tokens)).len())) {
		return;;
	};
	({
		__jule_tuple_x_1b4aeabbc_TypeDecl__jule_tuple_bool __jule_assign_result = _1b5790542_buildType(_self_, _52963_tokens, (&(_53013_i)), true);
		(*((*(_52939_param))))._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_53013_i < (*(_52963_tokens)).len())) {
		_1b578d93b_pushErr(_self_, (*(_52963_tokens))[_53013_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1b5792d80_buildParamBody(jule::Ptr<_1b578ce8a_parser> _self_, jule::Ptr<_1b4b11287_ParamDecl>* _54239_param, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _54262_tokens) {
	jule::Ptr<_1b4ad5712_Token> _54313_tok = _54262_tokens[0LL];;
	if ((_54262_tokens.len() == 1LL)) {
		(*((*(_54239_param))))._field_Ident=(*(_54313_tok))._field_Kind;
		return;;
	} else if ((_54262_tokens.len() < 3LL)) {
		_1b578d93b_pushErr(_self_.ptr(), _54313_tok, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_54262_tokens[1LL]))._field_Id != static_cast<jule::U64>(8LLU))) {
		(*((*(_54239_param))))._field_Ident=jule::Str::lit("<anonymous>", 11);
		_1b5792a1c_buildParamType(_self_, _54239_param, &(_54262_tokens));
		return;;
	};
	(*((*(_54239_param))))._field_Ident=(*(_54313_tok))._field_Kind;
	(_54262_tokens).mut_slice(2LL);;
	_1b5792a1c_buildParamType(_self_, _54239_param, &(_54262_tokens));
}



inline jule::Ptr<_1b4b11287_ParamDecl> _1b57931c1_buildParam(jule::Ptr<_1b578ce8a_parser> _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _56234_tokens) {
	jule::Ptr<_1b4b11287_ParamDecl> _56313_param = jule::new_ptr<_1b4b11287_ParamDecl>(_1b4b11287_ParamDecl{._field_Token=_56234_tokens[0LL], });;
	if (((*((*(_56313_param))._field_Token))._field_Id == static_cast<jule::U64>(32LLU))) {
		(*_56313_param.alloc)._field_Mutable=true;
		if ((_56234_tokens.len() == 1LL)) {
			_1b578d93b_pushErr(_self_.ptr(), _56234_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_56234_tokens).mut_slice(1LL);;
		(*_56313_param.alloc)._field_Token=_56234_tokens[0LL];
	};
	if ((_56234_tokens.len() >= 3LL)) {
		if (((*(*_56313_param.alloc)._field_Token.alloc)._field_Id == static_cast<jule::U64>(65LLU))) {
			if ((_56234_tokens.len() == 1LL)) {
				_1b578d93b_pushErr(_self_, _56234_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			};
			if ((((*(_56234_tokens[1LL]))._field_Id == static_cast<jule::U64>(1LLU)) && ((*(_56234_tokens[2LL]))._field_Id == static_cast<jule::U64>(8LLU)))) {
				(*_56313_param.alloc)._field_Reference=true;
				(_56234_tokens).mut_slice(1LL);;
				(*_56313_param.alloc)._field_Token=_56234_tokens[0LL];
			};
		};
	};
	if (((*(*_56313_param.alloc)._field_Token.alloc)._field_Id != static_cast<jule::U64>(1LLU))) {
		(*_56313_param.alloc)._field_Ident=jule::Str::lit("<anonymous>", 11);
		_1b5792a1c_buildParamType(_self_, &(_56313_param), &(_56234_tokens));
	} else {
		_1b5792d80_buildParamBody(_self_, &(_56313_param), _56234_tokens);
	};
	return _56313_param;;
}



inline void _1b5793479_checkParams(_1b578ce8a_parser* _self_, jule::Slice<jule::Ptr<_1b4b11287_ParamDecl>>* _60535_params) {
	{
		auto expr = _60535_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abe50ce9:;
		if (it != expr_end) {
			jule::Ptr<_1b4b11287_ParamDecl> _60621_param = *it;
			{
				if ((_1b4b1160b_IsSelf(_60621_param.ptr()) || ((*_60621_param.alloc)._field_Kind != nullptr))) {
					goto _iter_next_1abe50ce9;
				};
				if (((*_60621_param.alloc)._field_Token == nullptr)) {
					_1b578d93b_pushErr(_self_, (*_60621_param.alloc)._field_Token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
				} else {
					(*_60621_param.alloc)._field_Kind=jule::new_ptr<_1b4aeabbc_TypeDecl>(_1b4aeabbc_TypeDecl{._field_Token=(*_60621_param.alloc)._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1b4aeb2c7_IdentTypeDecl>(_1b4aeb2c7_IdentTypeDecl{._field_Token=(*_60621_param.alloc)._field_Token, ._field_Ident=(*((*_60621_param.alloc)._field_Token))._field_Kind, }), &__jule_any_type74)});
					(*_60621_param.alloc)._field_Ident=jule::Str::lit("<anonymous>", 11);
				};
			}
			_iter_next_1abe50ce9:;
			++it;
			goto _iter_begin_1abe50ce9;
		}
		_iter_end_1abe50ce9:;
	};
}



inline jule::Slice<jule::Ptr<_1b4b11287_ParamDecl>> _1b5793875_buildParams(jule::Ptr<_1b578ce8a_parser> _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _62536_tokens, jule::Bool _62554_method) {
	jule::Slice<jule::Slice<jule::Ptr<_1b4ad5712_Token>>> _62613_parts;
	jule::Slice<_1cb285120_Log> _62620_errs;
	({
		__jule_tuple_ssx_1b4ad5712_Token__jule_tuple_s_1cb285120_Log __jule_assign_result = _1b578bdac_parts(_62536_tokens, static_cast<jule::U64>(5LLU), true);
		_62613_parts = __jule_assign_result.__jule_result_arg0;
		_62620_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_errors=jule::append((*_self_.alloc)._field_errors,_62620_errs);
	if ((_62613_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1b4b11287_ParamDecl>> _63217_params = nullptr;;
	if ((_62554_method && (_62613_parts.len() > 0LL))) {
		jule::Ptr<_1b4b11287_ParamDecl> _63417_param = _1b579228b_buildSelfParam(_self_, _62613_parts[0LL]);;
		if (((_63417_param != nullptr) && _1b4b1160b_IsSelf(_63417_param))) {
			{ jule::Slice<jule::Ptr<_1b4b11287_ParamDecl>> &__jule_push_dest = _63217_params; __jule_push_dest.push(_63417_param); };
			(_62613_parts).mut_slice(1LL);;
		};
	};
	{
		auto expr = &(_62613_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abe575e7:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1b4ad5712_Token>> _64121_part = *it;
			{
				if ((_64121_part.len() == 0LL)) {
					goto _iter_next_1abe575e7;
				};
				jule::Ptr<_1b4b11287_ParamDecl> _64517_param = _1b57931c1_buildParam(_self_, _64121_part);;
				if ((_64517_param != nullptr)) {
					{ jule::Slice<jule::Ptr<_1b4b11287_ParamDecl>> &__jule_push_dest = _63217_params; __jule_push_dest.push(_64517_param); };
				};
			}
			_iter_next_1abe575e7:;
			++it;
			goto _iter_begin_1abe575e7;
		}
		_iter_end_1abe575e7:;
	};
	_1b5793479_checkParams(_self_, &(_63217_params));
	return _63217_params;;
}



inline __jule_tuple_x_1b4aedab0_RetTypeDecl__jule_tuple_bool _1b5793c71_buildMultiRetType(jule::Ptr<_1b578ce8a_parser> _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _65542_tokens, jule::I64* _65565_i) {
	__jule_tuple_x_1b4aedab0_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1b4aedab0_RetTypeDecl>();
	((*(_65565_i)))++;
	if (((*(_65565_i)) >= (*(_65542_tokens)).len())) {
		((*(_65565_i)))--;
		({
			__jule_tuple_x_1b4aeabbc_TypeDecl__jule_tuple_bool __jule_assign_result = _1b5790542_buildType(_self_, _65542_tokens, _65565_i, false);
			(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
		});
		return __jule_func_result;;
	};
	((*(_65565_i)))--;
	jule::Slice<jule::Ptr<_1b4ad5712_Token>> _66513_rangeTokens = _1b578b63c_range(_65565_i, static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _65542_tokens);;
	jule::Slice<jule::Slice<jule::Ptr<_1b4ad5712_Token>>> _66713_parts;
	jule::Slice<_1cb285120_Log> _66720_errs;
	({
		__jule_tuple_ssx_1b4ad5712_Token__jule_tuple_s_1cb285120_Log __jule_assign_result = _1b578bdac_parts(&(_66513_rangeTokens), static_cast<jule::U64>(5LLU), true);
		_66713_parts = __jule_assign_result.__jule_result_arg0;
		_66720_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_66720_errs);
	if ((_66713_parts.len() == 0LL)) {
		return __jule_func_result;;
	};
	jule::Slice<jule::Ptr<_1b4aeabbc_TypeDecl>> _67313_types = jule::Slice<jule::Ptr<_1b4aeabbc_TypeDecl>>::alloc(0LL, _66713_parts.len());;
	(*__jule_func_result.__jule_result_arg0.alloc)._field_Idents=jule::Slice<jule::Ptr<_1b4ad5712_Token>>::alloc(0LL, _66713_parts.len());
	{
		auto expr = &(_66713_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abe5d4cc:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1b4ad5712_Token>> _67521_part = *it;
			{
				if ((_67521_part.len() == 0LL)) {
					goto _iter_next_1abe5d4cc;
				};
				jule::Ptr<_1b4ad5712_Token> _67917_token = _67521_part[0LL];;
				jule::I64 _68017_offset = 0LL;;
				if ((_67521_part.len() > 1LL)) {
					_67917_token=_67521_part[1LL];
					if (((*(_67917_token))._field_Id == static_cast<jule::U64>(8LLU))) {
						_68017_offset=2LL;
						if ((_67521_part.len() < 3LL)) {
							_1b578d93b_pushErr(_self_, _67917_token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
							goto _iter_next_1abe5d4cc;
						};
					};
				};
				_67917_token=_67521_part[0LL];
				if ((_68017_offset != 2LL)) {
					jule::Ptr<_1b4ad5712_Token> _69621_newToken = jule::new_ptr<_1b4ad5712_Token>((*_67917_token.alloc));;
					(*_69621_newToken.alloc)._field_Kind=jule::Str::lit("<anonymous>", 11);
					(*__jule_func_result.__jule_result_arg0.alloc)._field_Idents=jule::append((*__jule_func_result.__jule_result_arg0.alloc)._field_Idents,jule::Slice<jule::Ptr<_1b4ad5712_Token>>::make({_69621_newToken}));
				} else {
					(*__jule_func_result.__jule_result_arg0.alloc)._field_Idents=jule::append((*__jule_func_result.__jule_result_arg0.alloc)._field_Idents,jule::Slice<jule::Ptr<_1b4ad5712_Token>>::make({_67917_token}));
				};
				jule::Ptr<_1b4aeabbc_TypeDecl> _70317_tk;
				({
					__jule_tuple_x_1b4aeabbc_TypeDecl__jule_tuple_bool __jule_assign_result = _1b5790542_buildType(_self_, &(_67521_part), (&(_68017_offset)), true);
					_70317_tk = __jule_assign_result.__jule_result_arg0;
				});
				if ((_68017_offset < _67521_part.len())) {
					_1b578d93b_pushErr(_self_, _67521_part[_68017_offset], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				{ jule::Slice<jule::Ptr<_1b4aeabbc_TypeDecl>> &__jule_push_dest = _67313_types; __jule_push_dest.push(_70317_tk); };
			}
			_iter_next_1abe5d4cc:;
			++it;
			goto _iter_begin_1abe5d4cc;
		}
		_iter_end_1abe5d4cc:;
	};
	if ((_67313_types.len() > 1LL)) {
		(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind=jule::new_ptr<_1b4aeabbc_TypeDecl>(_1b4aeabbc_TypeDecl{._field_Token=(*(_65542_tokens))[0LL], ._field_Kind=jule::Any(jule::new_ptr<_1b4aec3e9_TupleTypeDecl>(_1b4aec3e9_TupleTypeDecl{._field_Types=_67313_types}), &__jule_any_type73)});
	} else {
		(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind=_67313_types[0LL];
	};
	__jule_func_result.__jule_result_arg1=true;
	return __jule_func_result;;
}



inline __jule_tuple_x_1b4aedab0_RetTypeDecl__jule_tuple_bool _1b579416c_buildRetType(jule::Ptr<_1b578ce8a_parser> _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _72637_tokens, jule::I64* _72660_i) {
	__jule_tuple_x_1b4aedab0_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1b4aedab0_RetTypeDecl>();
	if (((*(_72660_i)) >= (*(_72637_tokens)).len())) {
		return __jule_func_result;;
	};
	jule::Ptr<_1b4ad5712_Token> _73213_token = (*(_72637_tokens))[(*(_72660_i))];;
	{
		auto &_match_expr{ (*(_73213_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_1abe67371:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(71LLU)) {
			_case_begin_1abe673e8:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(8LLU)) {
			_case_begin_1abe6745e:;
			{
				if ((((*(_72660_i)) + 1LL) >= (*(_72637_tokens)).len())) {
					_1b578d93b_pushErr(_self_.ptr(), _73213_token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
					return __jule_func_result;;
				};
				((*(_72660_i)))++;
				_73213_token=(*(_72637_tokens))[(*(_72660_i))];
				{
					auto &_match_expr{ (*(_73213_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1abe68680:;
						{
							({
								__jule_tuple_x_1b4aedab0_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1b5793c71_buildMultiRetType(_self_, _72637_tokens, _72660_i);
								__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
								__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
							});
							return __jule_func_result;;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1abe69362:;
						{
							_1b578d93b_pushErr(_self_, _73213_token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
							return __jule_func_result;;
						}
					}
					_match_end_1abe692c9:;
				};
				({
					__jule_tuple_x_1b4aeabbc_TypeDecl__jule_tuple_bool __jule_assign_result = _1b5790542_buildType(_self_, _72637_tokens, _72660_i, true);
					(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
				return __jule_func_result;;
			}
		}
		_match_end_1abe6731b:;
	};
	((*(_72660_i)))++;
	_1b578d93b_pushErr(_self_.ptr(), _73213_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return __jule_func_result;;
}



inline jule::Ptr<_1b4b126d9_FnDecl> _1b5794623_buildFnPrototype(jule::Ptr<_1b578ce8a_parser> _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _76541_tokens, jule::I64* _76564_i, jule::Bool _76572_method) {
	jule::Ptr<_1b4b126d9_FnDecl> _76613_f = jule::new_ptr<_1b4b126d9_FnDecl>(_1b4b126d9_FnDecl{._field_Token=(*(_76541_tokens))[(*(_76564_i))], });;
	if (((*((*(_76613_f))._field_Token))._field_Id == static_cast<jule::U64>(34LLU))) {
		(*_76613_f.alloc)._field_Statically=true;
		((*(_76564_i)))++;
		if (((*(_76564_i)) >= (*(_76541_tokens)).len())) {
			_1b578d93b_pushErr(_self_.ptr(), (*_76613_f.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*_76613_f.alloc)._field_Token=(*(_76541_tokens))[(*(_76564_i))];
	};
	if (((*(*_76613_f.alloc)._field_Token.alloc)._field_Id == static_cast<jule::U64>(31LLU))) {
		(*_76613_f.alloc)._field_Unsafety=true;
		((*(_76564_i)))++;
		if (((*(_76564_i)) >= (*(_76541_tokens)).len())) {
			_1b578d93b_pushErr(_self_, (*_76613_f.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*_76613_f.alloc)._field_Token=(*(_76541_tokens))[(*(_76564_i))];
	};
	((*(_76564_i)))++;
	if (((*(_76564_i)) >= (*(_76541_tokens)).len())) {
		_1b578d93b_pushErr(_self_, (*_76613_f.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b4ad5712_Token> _7999_tok = (*(_76541_tokens))[(*(_76564_i))];;
	if (((*(_7999_tok))._field_Id == static_cast<jule::U64>(1LLU))) {
		((*(_76564_i)))++;
		if (((*(_76564_i)) >= (*(_76541_tokens)).len())) {
			_1b578d93b_pushErr(_self_, (*_76613_f.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*_76613_f.alloc)._field_Ident=(*_7999_tok.alloc)._field_Kind;
	} else {
		(*_76613_f.alloc)._field_Ident=jule::Str::lit("<anonymous>", 11);
	};
	jule::Ptr<_1b4ad5712_Token> _8119_errorToken = (*(_76541_tokens))[(*(_76564_i))];;
	jule::Slice<jule::Ptr<_1b4ad5712_Token>> _81213_genericsTokens = _1b578b63c_range(_76564_i, static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), _76541_tokens);;
	if ((_81213_genericsTokens != nullptr)) {
		(*_76613_f.alloc)._field_Generics=_1b5791e4a_buildGenerics(_self_, &(_81213_genericsTokens), &(_8119_errorToken));
	};
	if (((*((*(_76541_tokens))[(*(_76564_i))]))._field_Id != static_cast<jule::U64>(74LLU))) {
		_1b578d93b_pushErr(_self_, (*(_76541_tokens))[(*(_76564_i))], jule::Str::lit("missing function parentheses", 28), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1b4ad5712_Token>> _82213_paramsToks = _1b578b63c_range(_76564_i, static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _76541_tokens);;
	if ((_82213_paramsToks.len() > 0LL)) {
		(*_76613_f.alloc)._field_Params=_1b5793875_buildParams(_self_, &(_82213_paramsToks), _76572_method);
	};
	if (((*(_76564_i)) < (*(_76541_tokens)).len())) {
		jule::Ptr<_1b4ad5712_Token> _82813_token = (*(_76541_tokens))[(*(_76564_i))];;
		if (((*(_82813_token))._field_Id == static_cast<jule::U64>(68LLU))) {
			(*_76613_f.alloc)._field_Exceptional=true;
			((*(_76564_i)))++;
		};
	};
	(*_76613_f.alloc)._field_Public=_1b4bb7d00_IsPub((*_76613_f.alloc)._field_Ident);
	({
		__jule_tuple_x_1b4aedab0_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1b579416c_buildRetType(_self_, _76541_tokens, _76564_i);
		(*_76613_f.alloc)._field_Result = __jule_assign_result.__jule_result_arg0;
	});
	return _76613_f;;
}



inline jule::Ptr<_1b4b126d9_FnDecl> _1b5794ac9_buildFn(jule::Ptr<_1b578ce8a_parser> _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _84232_tokens, jule::Bool _84250_method, jule::Bool _84264_prototype) {
	jule::I64 _84313_i = 0LL;;
	jule::Ptr<_1b4b126d9_FnDecl> _84413_f = _1b5794623_buildFnPrototype(_self_, _84232_tokens, &(_84313_i), _84250_method);;
	if (_84264_prototype) {
		if ((_84313_i < (*(_84232_tokens)).len())) {
			_1b578d93b_pushErr(_self_, (*(_84232_tokens))[(_84313_i + 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		};
		return _84413_f;;
	} else if ((_84413_f == nullptr)) {
		return _84413_f;;
	};
	if ((_84313_i >= (*(_84232_tokens)).len())) {
		_1b578d287_stop(_self_);
		_1b578d93b_pushErr(_self_, (*(_84413_f))._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1b578dc9e_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1b4ad5712_Token>> _86013_blockTokens = _1b578b63c_range(&(_84313_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _84232_tokens);;
	if ((_86013_blockTokens != nullptr)) {
		(*_84413_f.alloc)._field_Scope=_1b578ead5_buildScope(_self_, &(_86013_blockTokens), (*(_84232_tokens))[(_84313_i - 1LL)]);
		(*((*_84413_f.alloc)._field_Scope))._field_Unsafety=(*_84413_f.alloc)._field_Unsafety;
		if ((_84313_i < (*(_84232_tokens)).len())) {
			_1b578d93b_pushErr(_self_, (*(_84232_tokens))[_84313_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		};
	} else {
		_1b578d287_stop(_self_);
		_1b578d93b_pushErr(_self_, (*_84413_f.alloc)._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1b578dc9e_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _84413_f;;
}



inline jule::Slice<jule::Ptr<_1b4ad5712_Token>> _1b5794e1a_getUseDeclSelectors(_1b578ce8a_parser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _87642_tokens) {
	jule::I64 _87713_i = 0LL;;
	_87642_tokens=_1b578b63c_range(&(_87713_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_87642_tokens));
	jule::Slice<jule::Slice<jule::Ptr<_1b4ad5712_Token>>> _87913_parts;
	jule::Slice<_1cb285120_Log> _87920_errs;
	({
		__jule_tuple_ssx_1b4ad5712_Token__jule_tuple_s_1cb285120_Log __jule_assign_result = _1b578bdac_parts(&(_87642_tokens), static_cast<jule::U64>(5LLU), true);
		_87913_parts = __jule_assign_result.__jule_result_arg0;
		_87920_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_87920_errs.len() > 0LL)) {
		((*(_self_))._field_errors).append(_87920_errs);;
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1b4ad5712_Token>> _88513_selectors = jule::Slice<jule::Ptr<_1b4ad5712_Token>>::alloc(0LL, _87913_parts.len());;
	{
		auto expr = &(_87913_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abe828a8:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1b4ad5712_Token>> _88621_part = *it;
			{
				if ((_88621_part.len() > 1LL)) {
					_1b578d93b_pushErr(_self_, _88621_part[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1b4ad5712_Token> _89017_tok = _88621_part[0LL];;
				if ((((*(_89017_tok))._field_Id != static_cast<jule::U64>(1LLU)) && ((*_89017_tok.alloc)._field_Id != static_cast<jule::U64>(24LLU)))) {
					_1b578d93b_pushErr(_self_, _89017_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					_1b578dc9e_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
					goto _iter_next_1abe828a8;
				};
				{ jule::Slice<jule::Ptr<_1b4ad5712_Token>> &__jule_push_dest = _88513_selectors; __jule_push_dest.push(_89017_tok); };
			}
			_iter_next_1abe828a8:;
			++it;
			goto _iter_begin_1abe828a8;
		}
		_iter_end_1abe828a8:;
	};
	return _88513_selectors;;
}



inline void _1b579527d_buildBindUseDecl(_1b578ce8a_parser* _self_, jule::Ptr<_1b4b18b30_UseDecl>* _90140_decl, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _90157_tokens) {
	if (((*(_90157_tokens)).len() > 1LL)) {
		_1b578d93b_pushErr(_self_, (*(_90157_tokens))[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1b4ad5712_Token> _9059_token = (*(_90157_tokens))[0LL];;
	if ((((*(_9059_token))._field_Id != static_cast<jule::U64>(4LLU)) || (((*_9059_token.alloc)._field_Kind[0LL] != '`') && ((*_9059_token.alloc)._field_Kind[0LL] != '\"')))) {
		_1b578d93b_pushErr(_self_, _9059_token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_90140_decl))))._field_Binded=true;
	(*((*(_90140_decl))))._field_LinkPath=(*_9059_token.alloc)._field_Kind.slice(1LL, ((*_9059_token.alloc)._field_Kind.len() - 1LL));
}



inline jule::Str _1b57955be_useDeclTokstoa(_1b578ce8a_parser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _91434_tokens) {
	jule::I64 _91513_n = 0LL;;
	{
		auto expr = _91434_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abe89dee:;
		if (it != expr_end) {
			jule::Ptr<_1b4ad5712_Token> *_91616_token = it;
			{
				if ((((*((*(_91616_token))))._field_Id != static_cast<jule::U64>(1LLU)) && ((*(*(_91616_token)).alloc)._field_Id != static_cast<jule::U64>(19LLU)))) {
					_1b578d93b_pushErr(_self_, (*(_91616_token)), jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				_91513_n+=(*(*(_91616_token)).alloc)._field_Kind.len();
			}
			_iter_next_1abe89dee:;
			++it;
			goto _iter_begin_1abe89dee;
		}
		_iter_end_1abe89dee:;
	};
	_1cb1d27a9_StrBuilder _92213_s = static__1cb1d2a73_New(_91513_n);;
	{
		auto expr = _91434_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abe89c9a:;
		if (it != expr_end) {
			jule::Ptr<_1b4ad5712_Token> *_92316_token = it;
			{
				_1cb1db3d9_WriteStr(&_92213_s, (*((*(_92316_token))))._field_Kind);
			}
			_iter_next_1abe89c9a:;
			++it;
			goto _iter_begin_1abe89c9a;
		}
		_iter_end_1abe89c9a:;
	};
	return _1cb1dbbd1_Str(&_92213_s);;
}



inline void _1b5795932_buildStdUseDecl(_1b578ce8a_parser* _self_, jule::Ptr<_1b4b18b30_UseDecl>* _92939_decl, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _92959_tokens) {
	(*((*(_92939_decl))))._field_Std=true;
	jule::Ptr<_1b4ad5712_Token> _93213_token = _92959_tokens[0LL];;
	if ((_92959_tokens.len() < 3LL)) {
		_1b578d93b_pushErr(_self_, _93213_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(_92959_tokens).mut_slice(2LL);;
	_93213_token=_92959_tokens[(_92959_tokens.len() - 1LL)];
	{
		auto &_match_expr{ (*(_93213_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1abe8e8a4:;
			{
				_1b578d93b_pushErr(_self_, _93213_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1abe8e92b:;
			{
				jule::Slice<jule::Ptr<_1b4ad5712_Token>> _94521_selectors = nullptr;;
				({
					__jule_tuple_sx_1b4ad5712_Token__jule_tuple_sx_1b4ad5712_Token __jule_assign_result = _1b578b906_rangeLast(&(_92959_tokens));
					_92959_tokens = __jule_assign_result.__jule_result_arg0;
					_94521_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*((*(_92939_decl))))._field_Selected=_1b5794e1a_getUseDeclSelectors(_self_, _94521_selectors);
				if ((_92959_tokens.len() == 0LL)) {
					_1b578d93b_pushErr(_self_, _93213_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_93213_token=_92959_tokens[(_92959_tokens.len() - 1LL)];
				if (((*(_93213_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_1b578d93b_pushErr(_self_, _93213_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_92959_tokens).mut_slice(0LL, (_92959_tokens.len() - 1LL));;
				if ((_92959_tokens.len() == 0LL)) {
					_1b578d93b_pushErr(_self_, _93213_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1abe8e992:;
			{
				(_92959_tokens).mut_slice(0LL, (_92959_tokens.len() - 1LL));;
				if ((_92959_tokens.len() == 0LL)) {
					_1b578d93b_pushErr(_self_, _93213_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_93213_token=_92959_tokens[(_92959_tokens.len() - 1LL)];
				if (((*(_93213_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_1b578d93b_pushErr(_self_, _93213_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_92959_tokens).mut_slice(0LL, (_92959_tokens.len() - 1LL));;
				if ((_92959_tokens.len() == 0LL)) {
					_1b578d93b_pushErr(_self_, _93213_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(*((*(_92939_decl))))._field_Full=true;
			}
		}
		_match_end_1abe8e84e:;
	};
	if (((_92959_tokens.len() == 1LL) && ((*(_92959_tokens[0LL]))._field_Id == static_cast<jule::U64>(31LLU)))) {
		(*((*(_92939_decl))))._field_LinkPath=jule::Str::lit("std::unsafe", 11);
	} else {
		(*((*(_92939_decl))))._field_LinkPath=(jule::Str::lit("std::", 5) + _1b57955be_useDeclTokstoa(_self_, &(_92959_tokens)));
	};
}



inline void _1b5795c95_buildIdentUseDecl(_1b578ce8a_parser* _self_, jule::Ptr<_1b4b18b30_UseDecl>* _98741_decl, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _98761_tokens) {
	(*((*(_98741_decl))))._field_Std=false;
	jule::Ptr<_1b4ad5712_Token> _99013_token = _98761_tokens[(_98761_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ (*(_99013_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1abe9846d:;
			{
				_1b578d93b_pushErr(_self_, _99013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1abe993c5:;
			{
				jule::Slice<jule::Ptr<_1b4ad5712_Token>> _99621_selectors = nullptr;;
				({
					__jule_tuple_sx_1b4ad5712_Token__jule_tuple_sx_1b4ad5712_Token __jule_assign_result = _1b578b906_rangeLast(&(_98761_tokens));
					_98761_tokens = __jule_assign_result.__jule_result_arg0;
					_99621_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*((*(_98741_decl))))._field_Selected=_1b5794e1a_getUseDeclSelectors(_self_, _99621_selectors);
				if ((_98761_tokens.len() == 0LL)) {
					_1b578d93b_pushErr(_self_, _99013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_99013_token=_98761_tokens[(_98761_tokens.len() - 1LL)];
				if (((*(_99013_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_1b578d93b_pushErr(_self_, _99013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_98761_tokens).mut_slice(0LL, (_98761_tokens.len() - 1LL));;
				if ((_98761_tokens.len() == 0LL)) {
					_1b578d93b_pushErr(_self_, _99013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1abe9943b:;
			{
				(_98761_tokens).mut_slice(0LL, (_98761_tokens.len() - 1LL));;
				if ((_98761_tokens.len() == 0LL)) {
					_1b578d93b_pushErr(_self_, _99013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_99013_token=_98761_tokens[(_98761_tokens.len() - 1LL)];
				if (((*(_99013_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_1b578d93b_pushErr(_self_, _99013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_98761_tokens).mut_slice(0LL, (_98761_tokens.len() - 1LL));;
				if ((_98761_tokens.len() == 0LL)) {
					_1b578d93b_pushErr(_self_, _99013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(*((*(_98741_decl))))._field_Full=true;
			}
		}
		_match_end_1abe992a4:;
	};
	(*((*(_98741_decl))))._field_LinkPath=_1b57955be_useDeclTokstoa(_self_, &(_98761_tokens));
}



inline void _1b5796108_parseUseDecl(_1b578ce8a_parser* _self_, jule::Ptr<_1b4b18b30_UseDecl>* _103536_decl, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _103556_tokens) {
	if ((*((*(_103536_decl))))._field_Binded) {
		_1b579527d_buildBindUseDecl(_self_, _103536_decl, &(_103556_tokens));
		return;;
	};
	jule::Ptr<_1b4ad5712_Token> _104113_token = _103556_tokens[0LL];;
	if (((*(_104113_token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1b578d93b_pushErr(_self_, _104113_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1b578dc9e_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	};
	if (((_103556_tokens.len() > 2LL) && ((*(_103556_tokens[1LL]))._field_Id == static_cast<jule::U64>(9LLU)))) {
		(*((*(_103536_decl))))._field_Alias=(*_104113_token.alloc)._field_Kind;
		if (((*(_103556_tokens[2LL]))._field_Id != static_cast<jule::U64>(1LLU))) {
			_1b578d93b_pushErr(_self_, _104113_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			_1b578dc9e_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
			return;;
		};
		(_103556_tokens).mut_slice(2LL);;
		_104113_token=_103556_tokens[0LL];
	};
	;
	{
		
		if ((*_104113_token.alloc)._field_Kind.equal("std", 3)) {
			_case_begin_1abea659c:;
			{
				_1b5795932_buildStdUseDecl(_self_, _103536_decl, _103556_tokens);
			}
		}
		else {
			_case_begin_1abea61e5:;
			{
				_1b5795c95_buildIdentUseDecl(_self_, _103536_decl, _103556_tokens);
			}
		}
		_match_end_1abea617e:;
	};
}



inline jule::Ptr<_1b4b18b30_UseDecl> _1b5796504_buildUseDecl(_1b578ce8a_parser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _106935_tokens, jule::Bool _106953_binded) {
	jule::Ptr<_1b4b18b30_UseDecl> _107013_decl = jule::new_ptr<_1b4b18b30_UseDecl>(_1b4b18b30_UseDecl{._field_Token=_106935_tokens[0LL], ._field_Binded=_106953_binded, });;
	if ((_106935_tokens.len() < 2LL)) {
		_1b578d93b_pushErr(_self_, (*(_107013_decl))._field_Token, jule::Str::lit("missing path of use statement", 29), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_106935_tokens).mut_slice(1LL);;
	_1b5796108_parseUseDecl(_self_, &(_107013_decl), _106935_tokens);
	return _107013_decl;;
}



inline jule::Ptr<_1b4aeabbc_TypeDecl> _1b5796900_buildTypeEnumItemKind(jule::Ptr<_1b578ce8a_parser> _self_, jule::I64* _108346_i, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _108359_tokens) {
	jule::I64 _108413_braceN = 0LL;;
	jule::I64 _10859_exprStart = (*(_108346_i));;
	for (; ((*(_108346_i)) < (*(_108359_tokens)).len()); ((*(_108346_i)))++) {
		{
			jule::Ptr<_1b4ad5712_Token> _108713_t = (*(_108359_tokens))[(*(_108346_i))];;
			{
				auto &_match_expr{ (*(_108713_t))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1abeaa5c3:;
					{
						(_108413_braceN)++;
						goto _iter_next_1abea9a56;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1abeaa8d1:;
					{
						(_108413_braceN)--;
					}
				}
				_match_end_1abeaa87b:;
			};
			if ((_108413_braceN > 0LL)) {
				goto _iter_next_1abea9a56;
			};
			if ((((*(_108713_t))._field_Id == static_cast<jule::U64>(5LLU)) || (((*(_108346_i)) + 1LL) >= (*(_108359_tokens)).len()))) {
				jule::Slice<jule::Ptr<_1b4ad5712_Token>> _110325_kindTokens = nullptr;;
				if (((*_108713_t.alloc)._field_Id == static_cast<jule::U64>(5LLU))) {
					_110325_kindTokens=(*(_108359_tokens)).slice(_10859_exprStart, (*(_108346_i)));
				} else {
					_110325_kindTokens=(*(_108359_tokens)).slice(_10859_exprStart);
				};
				jule::I64 _110921_j = 0LL;;
				jule::Ptr<_1b4aeabbc_TypeDecl> _111021_kind;
				({
					__jule_tuple_x_1b4aeabbc_TypeDecl__jule_tuple_bool __jule_assign_result = _1b5790542_buildType(_self_, &(_110325_kindTokens), (&(_110921_j)), true);
					_111021_kind = __jule_assign_result.__jule_result_arg0;
				});
				if ((_110921_j < _110325_kindTokens.len())) {
					_1b578d93b_pushErr(_self_, _110325_kindTokens[_110921_j], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				return _111021_kind;;
			};
		}
	_iter_next_1abea9a56:;
	}
	_iter_end_1abea9a56:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1b4b1a4c2_TypeEnumItemDecl>> _1b5796c41_buildTypeEnumItems(jule::Ptr<_1b578ce8a_parser> _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _112043_tokens) {
	jule::Slice<jule::Ptr<_1b4b1a4c2_TypeEnumItemDecl>> _112113_items = jule::Slice<jule::Ptr<_1b4b1a4c2_TypeEnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I64 _112213_i = 0LL;;
	for (; (_112213_i < (*(_112043_tokens)).len()); (_112213_i)++) {
		{
			jule::Ptr<_1b4ad5712_Token> _112417_t = (*(_112043_tokens))[_112213_i];;
			jule::Ptr<_1b4b1a4c2_TypeEnumItemDecl> _112517_item = jule::new_ptr<_1b4b1a4c2_TypeEnumItemDecl>();;
			(*_112517_item.alloc)._field_Token=_112417_t;
			if ((((*((*_112517_item.alloc)._field_Token))._field_Id == static_cast<jule::U64>(1LLU)) && (((*(_112043_tokens)).len() - _112213_i) > 2LL))) {
				_112417_t=(*(_112043_tokens))[(_112213_i + 1LL)];
				if (((*(_112417_t))._field_Id == static_cast<jule::U64>(8LLU))) {
					(*_112517_item.alloc)._field_Ident=(*(*_112517_item.alloc)._field_Token.alloc)._field_Kind;
					_112213_i+=2LL;
					if (((_112213_i >= (*(_112043_tokens)).len()) || ((*((*(_112043_tokens))[_112213_i]))._field_Id == static_cast<jule::U64>(5LLU)))) {
						_1b578d93b_pushErr(_self_.ptr(), _112417_t, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
						goto _iter_next_1abeb073d;
					};
				};
			};
			(*_112517_item.alloc)._field_Kind=_1b5796900_buildTypeEnumItemKind(_self_, &(_112213_i), _112043_tokens);
			{ jule::Slice<jule::Ptr<_1b4b1a4c2_TypeEnumItemDecl>> &__jule_push_dest = _112113_items; __jule_push_dest.push(_112517_item); };
		}
	_iter_next_1abeb073d:;
	}
	_iter_end_1abeb073d:;;
	return _112113_items;;
}



inline jule::Ptr<_1b4b1ab32_TypeEnumDecl> _1b5797082_buildTypeEnumDecl(jule::Ptr<_1b578ce8a_parser> _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _114442_tokens) {
	jule::I64 _114513_i = 1LL;;
	jule::Ptr<_1b4b1ab32_TypeEnumDecl> _114613_e = jule::new_ptr<_1b4b1ab32_TypeEnumDecl>(_1b4b1ab32_TypeEnumDecl{._field_Token=(*(_114442_tokens))[_114513_i], });;
	if (((*((*(_114613_e))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1b578d93b_pushErr(_self_.ptr(), (*_114613_e.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1b578dc9e_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*_114613_e.alloc)._field_Ident=(*(*_114613_e.alloc)._field_Token.alloc)._field_Kind;
	_114513_i+=3LL;
	jule::Slice<jule::Ptr<_1b4ad5712_Token>> _115613_itemTokens = _1b578b63c_range(&(_114513_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _114442_tokens);;
	if ((_115613_itemTokens == nullptr)) {
		_1b578d287_stop(_self_);
		_1b578d93b_pushErr(_self_, (*_114613_e.alloc)._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1b578dc9e_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _114613_e;;
	} else if ((_114513_i < (*(_114442_tokens)).len())) {
		_1b578d93b_pushErr(_self_, (*(_114442_tokens))[_114513_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*_114613_e.alloc)._field_Public=_1b4bb7d00_IsPub((*_114613_e.alloc)._field_Ident);
	(*_114613_e.alloc)._field_End=(*(_114442_tokens))[(_114513_i - 1LL)];
	(*_114613_e.alloc)._field_Items=_1b5796c41_buildTypeEnumItems(_self_, &(_115613_itemTokens));
	return _114613_e;;
}



inline jule::Ptr<_1b4b00001_Expr> _1b579747d_buildEnumItemExpr(jule::Ptr<_1b578ce8a_parser> _self_, jule::I64* _117142_i, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _117155_tokens) {
	jule::I64 _117213_braceN = 0LL;;
	jule::I64 _11739_exprStart = (*(_117142_i));;
	for (; ((*(_117142_i)) < (*(_117155_tokens)).len()); ((*(_117142_i)))++) {
		{
			jule::Ptr<_1b4ad5712_Token> _117513_t = (*(_117155_tokens))[(*(_117142_i))];;
			{
				auto &_match_expr{ (*(_117513_t))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1abebd42c:;
					{
						(_117213_braceN)++;
						goto _iter_next_1abebc8b0;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1abebd73a:;
					{
						(_117213_braceN)--;
					}
				}
				_match_end_1abebd6d5:;
			};
			if ((_117213_braceN > 0LL)) {
				goto _iter_next_1abebc8b0;
			};
			if ((((*(_117513_t))._field_Id == static_cast<jule::U64>(5LLU)) || (((*(_117142_i)) + 1LL) >= (*(_117155_tokens)).len()))) {
				jule::Slice<jule::Ptr<_1b4ad5712_Token>> _119125_exprTokens = nullptr;;
				if (((*_117513_t.alloc)._field_Id == static_cast<jule::U64>(5LLU))) {
					_119125_exprTokens=(*(_117155_tokens)).slice(_11739_exprStart, (*(_117142_i)));
				} else {
					_119125_exprTokens=(*(_117155_tokens)).slice(_11739_exprStart);
				};
				return _1b578e0e0_buildExpr(_self_, &(_119125_exprTokens));;
			};
		}
	_iter_next_1abebc8b0:;
	}
	_iter_end_1abebc8b0:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1b4b190d6_EnumItemDecl>> _1b57977be_buildEnumItems(jule::Ptr<_1b578ce8a_parser> _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _120339_tokens) {
	jule::Slice<jule::Ptr<_1b4b190d6_EnumItemDecl>> _120413_items = jule::Slice<jule::Ptr<_1b4b190d6_EnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I64 _120513_i = 0LL;;
	for (; (_120513_i < (*(_120339_tokens)).len()); (_120513_i)++) {
		{
			jule::Ptr<_1b4ad5712_Token> _120717_t = (*(_120339_tokens))[_120513_i];;
			jule::Ptr<_1b4b190d6_EnumItemDecl> _120817_item = jule::new_ptr<_1b4b190d6_EnumItemDecl>();;
			(*_120817_item.alloc)._field_Token=_120717_t;
			if (((*((*_120817_item.alloc)._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
				_1b578d93b_pushErr(_self_.ptr(), (*_120817_item.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				_1b578dc9e_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
			};
			(*_120817_item.alloc)._field_Ident=(*(*_120817_item.alloc)._field_Token.alloc)._field_Kind;
			if ((((_120513_i + 1LL) >= (*(_120339_tokens)).len()) || ((*((*(_120339_tokens))[(_120513_i + 1LL)]))._field_Id == static_cast<jule::U64>(5LLU)))) {
				if (((_120513_i + 1LL) < (*(_120339_tokens)).len())) {
					(_120513_i)++;
				};
				{ jule::Slice<jule::Ptr<_1b4b190d6_EnumItemDecl>> &__jule_push_dest = _120413_items; __jule_push_dest.push(_120817_item); };
				goto _iter_next_1abec22bb;
			};
			(_120513_i)++;
			_120717_t=(*(_120339_tokens))[_120513_i];
			(_120513_i)++;
			if (((*(_120717_t))._field_Id != static_cast<jule::U64>(8LLU))) {
				_1b578d93b_pushErr(_self_, _120717_t, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				_1b578dc9e_pushSuggestion(_self_, jule::Str::lit("expected colon \":\" for assignment", 33), jule::Slice<jule::Any>());
				goto _iter_next_1abec22bb;
			};
			if (((_120513_i >= (*(_120339_tokens)).len()) || ((*((*(_120339_tokens))[_120513_i]))._field_Id == static_cast<jule::U64>(5LLU)))) {
				_1b578d93b_pushErr(_self_, _120717_t, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
				goto _iter_next_1abec22bb;
			};
			(*_120817_item.alloc)._field_Expr=_1b579747d_buildEnumItemExpr(_self_, &(_120513_i), _120339_tokens);
			{ jule::Slice<jule::Ptr<_1b4b190d6_EnumItemDecl>> &__jule_push_dest = _120413_items; __jule_push_dest.push(_120817_item); };
		}
	_iter_next_1abec22bb:;
	}
	_iter_end_1abec22bb:;;
	return _120413_items;;
}



inline jule::Ptr<_1b4b19b97_EnumDecl> _1b5797b10_buildEnumDecl(jule::Ptr<_1b578ce8a_parser> _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _124038_tokens) {
	if (((*(_124038_tokens)).len() < 3LL)) {
		_1b578d93b_pushErr(_self_.ptr(), (*(_124038_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b4b19b97_EnumDecl> _124513_e = jule::new_ptr<_1b4b19b97_EnumDecl>(_1b4b19b97_EnumDecl{._field_Token=(*(_124038_tokens))[1LL], });;
	if (((*((*(_124513_e))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1b578d93b_pushErr(_self_, (*_124513_e.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1b578dc9e_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*_124513_e.alloc)._field_Ident=(*(*_124513_e.alloc)._field_Token.alloc)._field_Kind;
	jule::I64 _125313_i = 2LL;;
	if (((*((*(_124038_tokens))[_125313_i]))._field_Id == static_cast<jule::U64>(8LLU))) {
		(_125313_i)++;
		if ((_125313_i >= (*(_124038_tokens)).len())) {
			_1b578d93b_pushErr(_self_, (*(_124038_tokens))[(_125313_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return _124513_e;;
		};
		({
			__jule_tuple_x_1b4aeabbc_TypeDecl__jule_tuple_bool __jule_assign_result = _1b5790542_buildType(_self_, _124038_tokens, (&(_125313_i)), true);
			(*_124513_e.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
		});
		if ((_125313_i >= (*(_124038_tokens)).len())) {
			_1b578d287_stop(_self_);
			_1b578d93b_pushErr(_self_, (*_124513_e.alloc)._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
			_1b578dc9e_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
			return _124513_e;;
		};
	} else {
		(*_124513_e.alloc)._field_Kind=nullptr;
	};
	jule::Slice<jule::Ptr<_1b4ad5712_Token>> _127013_itemTokens = _1b578b63c_range(&(_125313_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _124038_tokens);;
	if ((_127013_itemTokens == nullptr)) {
		_1b578d287_stop(_self_);
		_1b578d93b_pushErr(_self_, (*_124513_e.alloc)._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1b578dc9e_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _124513_e;;
	} else if ((_125313_i < (*(_124038_tokens)).len())) {
		_1b578d93b_pushErr(_self_, (*(_124038_tokens))[_125313_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*_124513_e.alloc)._field_Public=_1b4bb7d00_IsPub((*_124513_e.alloc)._field_Ident);
	(*_124513_e.alloc)._field_End=(*(_124038_tokens))[(_125313_i - 1LL)];
	(*_124513_e.alloc)._field_Items=_1b57977be_buildEnumItems(_self_, &(_127013_itemTokens));
	return _124513_e;;
}



inline jule::Any _1b5797e51_buildNodeEnumDecl(jule::Ptr<_1b578ce8a_parser> _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _128542_tokens) {
	if ((((*(_128542_tokens)).len() > 3LL) && ((*((*(_128542_tokens))[2LL]))._field_Id == static_cast<jule::U64>(8LLU)))) {
		if (((*((*(_128542_tokens))[3LL]))._field_Id == static_cast<jule::U64>(7LLU))) {
			return jule::Any(_1b5797082_buildTypeEnumDecl(_self_, _128542_tokens), &__jule_any_type18);;
		};
	};
	return jule::Any(_1b5797b10_buildEnumDecl(_self_, _128542_tokens), &__jule_any_type17);;
}



inline jule::Ptr<_1b4b1adeb_FieldDecl> _1b5798292_buildField(jule::Ptr<_1b578ce8a_parser> _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _129434_tokens) {
	jule::Ptr<_1b4b1adeb_FieldDecl> _129513_f = jule::new_ptr<_1b4b1adeb_FieldDecl>();;
	(*_129513_f.alloc)._field_Mutable=((*(_129434_tokens[0LL]))._field_Id == static_cast<jule::U64>(32LLU));
	if ((*_129513_f.alloc)._field_Mutable) {
		if ((_129434_tokens.len() == 1LL)) {
			_1b578d93b_pushErr(_self_.ptr(), _129434_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_129434_tokens).mut_slice(1LL);;
	};
	(*_129513_f.alloc)._field_Token=_129434_tokens[0LL];
	if (((*((*_129513_f.alloc)._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1b578d93b_pushErr(_self_, (*_129513_f.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1b578dc9e_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_129513_f.alloc)._field_Ident=(*(*_129513_f.alloc)._field_Token.alloc)._field_Kind;
	if ((_129434_tokens.len() == 1LL)) {
		_1b578d93b_pushErr(_self_, _129434_tokens[0LL], jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
		return nullptr;;
	} else if (((_129434_tokens.len() < 3LL) || ((*(_129434_tokens[1LL]))._field_Id != static_cast<jule::U64>(8LLU)))) {
		_1b578d93b_pushErr(_self_, _129434_tokens[1LL], jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_129434_tokens).mut_slice(2LL);;
	jule::I64 _132313_i = 0LL;;
	({
		__jule_tuple_x_1b4aeabbc_TypeDecl__jule_tuple_bool __jule_assign_result = _1b5790542_buildType(_self_, &(_129434_tokens), (&(_132313_i)), true);
		(*_129513_f.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_132313_i < _129434_tokens.len())) {
		jule::Ptr<_1b4ad5712_Token> _132613_token = _129434_tokens[_132313_i];;
		if (((*(_132613_token))._field_Id != static_cast<jule::U64>(71LLU))) {
			_1b578d93b_pushErr(_self_, _129434_tokens[_132313_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_132313_i)++;
		if ((_132313_i >= _129434_tokens.len())) {
			_1b578d93b_pushErr(_self_, _132613_token, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_129434_tokens).mut_slice(_132313_i);;
		(*_129513_f.alloc)._field_Default=_1b578e0e0_buildExpr(_self_, &(_129434_tokens));
	};
	(*_129513_f.alloc)._field_Public=_1b4bb7d00_IsPub((*_129513_f.alloc)._field_Ident);
	return _129513_f;;
}



inline jule::Slice<jule::Ptr<_1b4b1adeb_FieldDecl>> _1b57985d3_buildStructDeclFields(jule::Ptr<_1b578ce8a_parser> _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _134345_tokens) {
	jule::Slice<jule::Ptr<_1b4b1adeb_FieldDecl>> _134417_fields = nullptr;;
	jule::Slice<jule::Ptr<_1b576e06a_stmt>> _134513_stmts = _1b576e422_splitStmts(&(_134345_tokens));;
	{
		auto expr = &(_134513_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abee264e:;
		if (it != expr_end) {
			jule::Ptr<_1b576e06a_stmt> _134621_stmt = *it;
			{
				_134345_tokens=(*(_134621_stmt))._field_tokens;
				jule::Ptr<_1b4b1adeb_FieldDecl> _134817_f = _1b5798292_buildField(_self_, _134345_tokens);;
				{ jule::Slice<jule::Ptr<_1b4b1adeb_FieldDecl>> &__jule_push_dest = _134417_fields; __jule_push_dest.push(_134817_f); };
			}
			_iter_next_1abee264e:;
			++it;
			goto _iter_begin_1abee264e;
		}
		_iter_end_1abee264e:;
	};
	return _134417_fields;;
}



inline jule::Ptr<_1b4b1b7e2_StructDecl> _1b5798924_buildStructDecl(jule::Ptr<_1b578ce8a_parser> _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _135440_tokens) {
	if (((*(_135440_tokens)).len() < 3LL)) {
		_1b578d93b_pushErr(_self_.ptr(), (*(_135440_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I64 _136013_i = 1LL;;
	jule::Ptr<_1b4b1b7e2_StructDecl> _136113_s = jule::new_ptr<_1b4b1b7e2_StructDecl>(_1b4b1b7e2_StructDecl{._field_Token=(*(_135440_tokens))[_136013_i], });;
	if (((*((*(_136113_s))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1b578d93b_pushErr(_self_, (*_136113_s.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1b578dc9e_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(_136013_i)++;
	if ((_136013_i >= (*(_135440_tokens)).len())) {
		_1b578d93b_pushErr(_self_, (*(_135440_tokens))[_136013_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return _136113_s;;
	};
	(*_136113_s.alloc)._field_Ident=(*(*_136113_s.alloc)._field_Token.alloc)._field_Kind;
	jule::Ptr<_1b4ad5712_Token> _13759_errorToken = (*(_135440_tokens))[_136013_i];;
	jule::Slice<jule::Ptr<_1b4ad5712_Token>> _137613_genericsTokens = _1b578b63c_range(&(_136013_i), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), _135440_tokens);;
	if ((_137613_genericsTokens != nullptr)) {
		(*_136113_s.alloc)._field_Generics=_1b5791e4a_buildGenerics(_self_, &(_137613_genericsTokens), &(_13759_errorToken));
	};
	if ((_136013_i >= (*(_135440_tokens)).len())) {
		_1b578d93b_pushErr(_self_, (*(_135440_tokens))[(_136013_i - 1LL)], jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1b578dc9e_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _136113_s;;
	};
	jule::Slice<jule::Ptr<_1b4ad5712_Token>> _138613_bodyTokens = _1b578b63c_range(&(_136013_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _135440_tokens);;
	if ((_138613_bodyTokens == nullptr)) {
		_1b578d287_stop(_self_);
		_1b578d93b_pushErr(_self_, (*_136113_s.alloc)._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1b578dc9e_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _136113_s;;
	};
	if ((_136013_i < (*(_135440_tokens)).len())) {
		_1b578d93b_pushErr(_self_, (*(_135440_tokens))[_136013_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*_136113_s.alloc)._field_Public=_1b4bb7d00_IsPub((*_136113_s.alloc)._field_Ident);
	(*_136113_s.alloc)._field_Fields=_1b57985d3_buildStructDeclFields(_self_, _138613_bodyTokens);
	(*_136113_s.alloc)._field_End=(*(_135440_tokens))[(_136013_i - 1LL)];
	return _136113_s;;
}



inline void _1b5798bcc_checkMethodReceiver(_1b578ce8a_parser* _self_, jule::Ptr<_1b4b126d9_FnDecl>* _140239_f) {
	if ((*((*(_140239_f))))._field_Statically) {
		if ((((*((*(_140239_f))))._field_Params.len() > 0LL) && _1b4b1160b_IsSelf((*((*(_140239_f))))._field_Params[0LL].ptr()))) {
			_1b578d93b_pushErr(_self_, (*((*(_140239_f))))._field_Token, jule::Str::lit("static functions cannot have receiver parameter", 47), jule::Slice<jule::Any>());
		};
		return;;
	};
	if (((*((*(_140239_f))))._field_Params.len() == 0LL)) {
		_1b578d93b_pushErr(_self_, (*((*(_140239_f))))._field_Token, jule::Str::lit("missing receiver parameter", 26), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1b4b11287_ParamDecl> _14149_param = (*((*(_140239_f))))._field_Params[0LL];;
	if ((!(_1b4b1160b_IsSelf(_14149_param.ptr())))) {
		_1b578d93b_pushErr(_self_, (*((*(_140239_f))))._field_Token, jule::Str::lit("missing receiver parameter", 26), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1b5799040_buildTraitBody(jule::Ptr<_1b578ce8a_parser> _self_, jule::Ptr<_1b4b1c02e_TraitDecl>* _142139_t, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _142158_tokens) {
	jule::Slice<jule::Ptr<_1b576e06a_stmt>> _142213_stmts = _1b576e422_splitStmts(&(_142158_tokens));;
	{
		auto expr = &(_142213_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac0030cc:;
		if (it != expr_end) {
			jule::Ptr<_1b576e06a_stmt> _142321_stmt = *it;
			{
				_142158_tokens=(*(_142321_stmt))._field_tokens;
				if ((_142158_tokens.len() == 0LL)) {
					goto _iter_next_1ac0030cc;
				};
				{
					auto &_match_expr{ (*(_142158_tokens[0LL]))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(29LLU)) {
						_case_begin_1ac006a81:;
						{
							jule::Ptr<_1b4b126d9_FnDecl> _143021_f = _1b5794ac9_buildFn(_self_, &(_142158_tokens), true, true);;
							if ((_143021_f == nullptr)) {
								goto _match_end_1ac004353;
							};
							_1b5798bcc_checkMethodReceiver(_self_, &(_143021_f));
							if (((*(_143021_f))._field_Generics.len() > 0LL)) {
								_1b578d93b_pushErr(_self_, (*(_143021_f))._field_Token, jule::Str::lit("trait methods cannot have generics", 34), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_1b4b126d9_FnDecl>> &__jule_push_dest = (*((*(_142139_t))))._field_Methods; __jule_push_dest.push(_143021_f); };
						}
					}
					else {
						_case_begin_1ac003b5a:;
						{
							jule::I64 _144021_i = 0LL;;
							jule::Ptr<_1b4aeabbc_TypeDecl> _144121_ti;
							jule::Bool _144125_ok;
							({
								__jule_tuple_x_1b4aeabbc_TypeDecl__jule_tuple_bool __jule_assign_result = _1b5790542_buildType(_self_, &(_142158_tokens), (&(_144021_i)), true);
								_144121_ti = __jule_assign_result.__jule_result_arg0;
								_144125_ok = __jule_assign_result.__jule_result_arg1;
							});
							if ((!(_144125_ok))) {
								goto _match_end_1ac004353;
							};
							if ((_144021_i < _142158_tokens.len())) {
								_1b578d93b_pushErr(_self_, _142158_tokens[_144021_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_1b4aeabbc_TypeDecl>> &__jule_push_dest = (*((*(_142139_t))))._field_Inherits; __jule_push_dest.push(_144121_ti); };
						}
					}
					_match_end_1ac004353:;
				};
			}
			_iter_next_1ac0030cc:;
			++it;
			goto _iter_begin_1ac0030cc;
		}
		_iter_end_1ac0030cc:;
	};
}



inline jule::Ptr<_1b4b1c02e_TraitDecl> _1b5799381_buildTraitDecl(jule::Ptr<_1b578ce8a_parser> _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _145339_tokens) {
	if (((*(_145339_tokens)).len() < 3LL)) {
		_1b578d93b_pushErr(_self_.ptr(), (*(_145339_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b4b1c02e_TraitDecl> _145813_t = jule::new_ptr<_1b4b1c02e_TraitDecl>(_1b4b1c02e_TraitDecl{._field_Token=(*(_145339_tokens))[1LL], });;
	if (((*((*(_145813_t))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1b578d93b_pushErr(_self_, (*_145813_t.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1b578dc9e_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*_145813_t.alloc)._field_Ident=(*(*_145813_t.alloc)._field_Token.alloc)._field_Kind;
	jule::I64 _146613_i = 2LL;;
	jule::Slice<jule::Ptr<_1b4ad5712_Token>> _146713_bodyTokens = _1b578b63c_range(&(_146613_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _145339_tokens);;
	if ((_146713_bodyTokens == nullptr)) {
		_1b578d287_stop(_self_);
		_1b578d93b_pushErr(_self_, (*_145813_t.alloc)._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1b578dc9e_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_146613_i < (*(_145339_tokens)).len())) {
		_1b578d93b_pushErr(_self_, (*(_145339_tokens))[_146613_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*_145813_t.alloc)._field_Public=_1b4bb7d00_IsPub((*_145813_t.alloc)._field_Ident);
	_1b5799040_buildTraitBody(_self_, &(_145813_t), _146713_bodyTokens);
	(*_145813_t.alloc)._field_End=(*(_145339_tokens))[(_146613_i - 1LL)];
	return _145813_t;;
}



inline jule::Ptr<_1b4b126d9_FnDecl> _1b57996c2_buildBindFn(jule::Ptr<_1b578ce8a_parser> _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _148335_tokens) {
	(_148335_tokens).mut_slice(1LL);;
	jule::Ptr<_1b4b126d9_FnDecl> _148513_f = _1b5794ac9_buildFn(_self_, &(_148335_tokens), false, true);;
	if ((_148513_f != nullptr)) {
		(*_148513_f.alloc)._field_Public=false;
		(*_148513_f.alloc)._field_Binded=true;
	};
	return _148513_f;;
}



inline jule::Ptr<_1b4b13894_VarDecl> _1b5799a13_buildBindVar(jule::Ptr<_1b578ce8a_parser> _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _149336_tokens) {
	(_149336_tokens).mut_slice(1LL);;
	jule::Ptr<_1b4b13894_VarDecl> _149513_v = _1b579170d_buildVar(_self_, _149336_tokens);;
	if ((_149513_v != nullptr)) {
		(*_149513_v.alloc)._field_Public=false;
		(*_149513_v.alloc)._field_Binded=true;
		if (((*_149513_v.alloc)._field_Expr != nullptr)) {
			_1b578d93b_pushErr(_self_, (*_149513_v.alloc)._field_Token, jule::Str::lit("binded variables cannot have expression", 39), jule::Slice<jule::Any>());
		};
	};
	return _149513_v;;
}



inline jule::Ptr<_1b4b1b7e2_StructDecl> _1b5799d54_buildBindStruct(jule::Ptr<_1b578ce8a_parser> _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _150639_tokens) {
	(_150639_tokens).mut_slice(1LL);;
	jule::Ptr<_1b4b1b7e2_StructDecl> _150813_s = _1b5798924_buildStructDecl(_self_, &(_150639_tokens));;
	if ((_150813_s != nullptr)) {
		(*_150813_s.alloc)._field_Public=false;
		{
			auto expr = &((*_150813_s.alloc)._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac01a963:;
			if (it != expr_end) {
				jule::Ptr<_1b4b1adeb_FieldDecl> _151125_f = *it;
				{
					(*(_151125_f))._field_Public=true;
				}
				_iter_next_1ac01a963:;
				++it;
				goto _iter_begin_1ac01a963;
			}
			_iter_end_1ac01a963:;
		};
		(*_150813_s.alloc)._field_Binded=true;
	};
	return _150813_s;;
}



inline jule::Ptr<_1b4b17546_TypeAliasDecl> _1b579a195_buildBindTypeAlias(jule::Ptr<_1b578ce8a_parser> _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _152042_tokens) {
	(_152042_tokens).mut_slice(1LL);;
	jule::Ptr<_1b4b17546_TypeAliasDecl> _152213_t = _1b5790883_buildTypeAliasDecl(_self_, &(_152042_tokens));;
	if ((_152213_t != nullptr)) {
		(*_152213_t.alloc)._field_Public=false;
		(*_152213_t.alloc)._field_Binded=true;
	};
	return _152213_t;;
}



inline jule::Ptr<_1b4b18b30_UseDecl> _1b579a4d6_buildBindUse(jule::Ptr<_1b578ce8a_parser> _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _153036_tokens) {
	if ((_153036_tokens.len() == 1LL)) {
		_1b578d93b_pushErr(_self_.ptr(), _153036_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_153036_tokens).mut_slice(1LL);;
	;
	return _1b5796504_buildUseDecl(_self_, _153036_tokens, true);;
}



inline jule::Any _1b579a827_buildBind(jule::Ptr<_1b578ce8a_parser> _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _154134_tokens) {
	jule::Ptr<_1b4ad5712_Token> _154213_token = (*(_154134_tokens))[0LL];;
	if (((*(_154134_tokens)).len() == 1LL)) {
		_1b578d93b_pushErr(_self_.ptr(), _154213_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_154213_token=(*(_154134_tokens))[1LL];
	{
		auto &_match_expr{ (*(_154213_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1ac021738:;
			{
				return jule::Any(_1b57996c2_buildBindFn(_self_, (*(_154134_tokens))), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU) || _match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1ac02179e:;
			{
				return jule::Any(_1b5799a13_buildBindVar(_self_, (*(_154134_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_1ac0213b4:;
			{
				return jule::Any(_1b5799d54_buildBindStruct(_self_, (*(_154134_tokens))), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1ac02143b:;
			{
				return jule::Any(_1b579a195_buildBindTypeAlias(_self_, (*(_154134_tokens))), &__jule_any_type12);;
			}
		}
		else {
			_case_begin_1ac020d53:;
			{
				_1b578d93b_pushErr(_self_, _154213_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1ac02134d:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b4b126d9_FnDecl> _1b579ab68_getMethod(jule::Ptr<_1b578ce8a_parser> _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _156534_tokens) {
	jule::I64 _156613_i = 0LL;;
	jule::Ptr<_1b4ad5712_Token> _156713_token = (*(_156534_tokens))[_156613_i];;
	if (((*(_156713_token))._field_Id == static_cast<jule::U64>(34LLU))) {
		if (((_156613_i + 1LL) >= (*(_156534_tokens)).len())) {
			_1b578d93b_pushErr(_self_.ptr(), _156713_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_156613_i)++;
		_156713_token=(*(_156534_tokens))[_156613_i];
	};
	if (((*_156713_token.alloc)._field_Id == static_cast<jule::U64>(31LLU))) {
		if (((_156613_i + 1LL) >= (*(_156534_tokens)).len())) {
			_1b578d93b_pushErr(_self_, _156713_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_156613_i)++;
		_156713_token=(*(_156534_tokens))[_156613_i];
	};
	if (((*_156713_token.alloc)._field_Id != static_cast<jule::U64>(29LLU))) {
		_1b578d93b_pushErr(_self_, _156713_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1b5794ac9_buildFn(_self_, _156534_tokens, true, false);;
}



inline void _1b579aecb_parseImplBody(jule::Ptr<_1b578ce8a_parser> _self_, jule::Ptr<_1b4b1c68e_Impl>* _159438_ipl, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _159455_tokens) {
	jule::Slice<jule::Ptr<_1b576e06a_stmt>> _159513_stmts = _1b576e422_splitStmts(_159455_tokens);;
	{
		auto expr = &(_159513_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac029224:;
		if (it != expr_end) {
			jule::Ptr<_1b576e06a_stmt> _159621_stmt = *it;
			{
				(*(_159455_tokens))=(*(_159621_stmt))._field_tokens;
				jule::Ptr<_1b4ad5712_Token> _159817_token = (*(_159455_tokens))[0LL];;
				{
					auto &_match_expr{ (*(_159817_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(35LLU)) {
						_case_begin_1ac0297eb:;
						{
							_1b578e6d9_pushDirective(_self_.ptr(), _1b578e431_buildDirective(_self_, (*(_159455_tokens))));
							goto _iter_next_1ac029224;
						}
					}
					_match_end_1ac02a434:;
				};
				{
					auto &_match_expr{ (*(_159817_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(6LLU)) {
						_case_begin_1ac02b655:;
						{
							jule::Ptr<_1b4b13894_VarDecl> _160721_v = _1b579170d_buildVar(_self_, (*(_159455_tokens)));;
							if ((_160721_v != nullptr)) {
								{ jule::Slice<jule::Ptr<_1b4b13894_VarDecl>> &__jule_push_dest = (*((*(_159438_ipl))))._field_Statics; __jule_push_dest.push(_160721_v); };
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
						_case_begin_1ac02b6bb:;
						{
							jule::Ptr<_1b4b126d9_FnDecl> _161421_f = _1b579ab68_getMethod(_self_, _159455_tokens);;
							if ((_161421_f != nullptr)) {
								_1b5798bcc_checkMethodReceiver(_self_, &(_161421_f));
								_1b579b916_applyFnMeta(_self_, &(_161421_f));
								{ jule::Slice<jule::Ptr<_1b4b126d9_FnDecl>> &__jule_push_dest = (*((*(_159438_ipl))))._field_Methods; __jule_push_dest.push(_161421_f); };
							};
						}
					}
					else {
						_case_begin_1ac02a577:;
						{
							_1b578d93b_pushErr(_self_, _159817_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							goto _iter_next_1ac029224;
						}
					}
					_match_end_1ac02aa3e:;
				};
			}
			_iter_next_1ac029224:;
			++it;
			goto _iter_begin_1ac029224;
		}
		_iter_end_1ac029224:;
	};
}



inline jule::Ptr<_1b4b1c68e_Impl> _1b579b31c_buildImpl(jule::Ptr<_1b578ce8a_parser> _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _162733_tokens) {
	jule::Ptr<_1b4ad5712_Token> _162813_token = _162733_tokens[0LL];;
	if ((_162733_tokens.len() < 2LL)) {
		_1b578d93b_pushErr(_self_.ptr(), _162813_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I64 _163413_i = 1LL;;
	jule::Ptr<_1b4aeabbc_TypeDecl> _163613_base;
	jule::Bool _163623_ok;
	({
		__jule_tuple_x_1b4aeabbc_TypeDecl__jule_tuple_bool __jule_assign_result = _1b5790542_buildType(_self_, &(_162733_tokens), (&(_163413_i)), true);
		_163613_base = __jule_assign_result.__jule_result_arg0;
		_163623_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_163623_ok))) {
		return nullptr;;
	};
	if ((_163413_i >= _162733_tokens.len())) {
		_1b578d93b_pushErr(_self_, _162813_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b4b1c68e_Impl> _164513_ipl = jule::new_ptr<_1b4b1c68e_Impl>(_1b4b1c68e_Impl{._field_Base=_163613_base, });;
	_162813_token=_162733_tokens[_163413_i];
	if (((*(_162813_token))._field_Id != static_cast<jule::U64>(9LLU))) {
		if (((*_162813_token.alloc)._field_Id == static_cast<jule::U64>(72LLU))) {
			std::swap((*(_164513_ipl))._field_Base, (*_164513_ipl.alloc)._field_Dest);
			goto _julec_label_1ac0382dd;
		};
		_1b578d287_stop(_self_);
		_1b578d93b_pushErr(_self_, _162813_token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1b578dc9e_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_163413_i)++;
	if ((_163413_i >= _162733_tokens.len())) {
		_1b578d287_stop(_self_);
		_1b578d93b_pushErr(_self_, _162813_token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1b578dc9e_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	({
		__jule_tuple_x_1b4aeabbc_TypeDecl__jule_tuple_bool __jule_assign_result = _1b5790542_buildType(_self_, &(_162733_tokens), (&(_163413_i)), true);
		(*_164513_ipl.alloc)._field_Dest = __jule_assign_result.__jule_result_arg0;
		_163623_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_163623_ok))) {
		return nullptr;;
	};
	if ((_163413_i >= _162733_tokens.len())) {
		_1b578d287_stop(_self_);
		_1b578d93b_pushErr(_self_, _162813_token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1b578dc9e_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_1ac0382dd:;
	jule::Slice<jule::Ptr<_1b4ad5712_Token>> _168313_bodyTokens = _1b578b63c_range(&(_163413_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_162733_tokens));;
	if ((_168313_bodyTokens == nullptr)) {
		_1b578d287_stop(_self_);
		_1b578d93b_pushErr(_self_, _162813_token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1b578dc9e_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_163413_i < _162733_tokens.len())) {
		_1b578d93b_pushErr(_self_, _162733_tokens[_163413_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*_164513_ipl.alloc)._field_End=_162733_tokens[(_163413_i - 1LL)];
	_1b579aecb_parseImplBody(_self_, &(_164513_ipl), &(_168313_bodyTokens));
	return _164513_ipl;;
}



inline jule::Any _1b579b65d_buildNodeData(jule::Ptr<_1b578ce8a_parser> _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _169838_tokens) {
	jule::Ptr<_1b4ad5712_Token> _169913_token = (*(_169838_tokens))[0LL];;
	{
		auto &_match_expr{ (*(_169913_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1ac03d18e:;
			{
				jule::Ptr<_1b4b126d9_FnDecl> _170317_f = _1b5794ac9_buildFn(_self_, _169838_tokens, false, false);;
				if ((_170317_f != nullptr)) {
					(*_170317_f.alloc)._field_Global=true;
				};
				return jule::Any(_170317_f, &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU) || _match_expr == static_cast<jule::U64>(6LLU) || _match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1ac03d788:;
			{
				return jule::Any(_1b579170d_buildVar(_self_, (*(_169838_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1ac03d7ee:;
			{
				return jule::Any(_1b5790883_buildTypeAliasDecl(_self_, _169838_tokens), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(20LLU)) {
			_case_begin_1ac03cca4:;
			{
				return _1b5797e51_buildNodeEnumDecl(_self_, _169838_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_1ac03cd1a:;
			{
				return jule::Any(_1b5798924_buildStructDecl(_self_, _169838_tokens), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(25LLU)) {
			_case_begin_1ac03cd81:;
			{
				return jule::Any(_1b5799381_buildTraitDecl(_self_, _169838_tokens), &__jule_any_type15);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(26LLU)) {
			_case_begin_1ac03cde7:;
			{
				return jule::Any(_1b579b31c_buildImpl(_self_, (*(_169838_tokens))), &__jule_any_type11);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1ac03ce5d:;
			{
				return _1b579a827_buildBind(_self_, _169838_tokens);;
			}
		}
		else {
			_case_begin_1ac03c9b8:;
			{
				_1b578d93b_pushErr(_self_.ptr(), _169913_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ac03cc4e:;
	};
}



inline void _1b579b916_applyFnMeta(_1b578ce8a_parser* _self_, jule::Ptr<_1b4b126d9_FnDecl>* _173135_f) {
	(*((*(_173135_f))))._field_Directives=(*(_self_))._field_directives;
	(*(_self_))._field_directives=nullptr;
}



inline void _1b579bbbe_applyMeta(_1b578ce8a_parser* _self_, _1b4ae9bbb_Node* _173633_node) {
	{
		auto &_match_expr{ (*(_173633_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1ac044728:;
			{
				jule::Ptr<_1b4b13894_VarDecl> _173917_v = (*(_173633_node))._field_Data.unsafe_cast_ptr<_1b4b13894_VarDecl>();;
				if ((_173917_v == nullptr)) {
					return;;
				};
				(*(_173917_v))._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1ac044492:;
			{
				jule::Ptr<_1b4b126d9_FnDecl> _174617_f = (*(_173633_node))._field_Data.unsafe_cast_ptr<_1b4b126d9_FnDecl>();;
				if ((_174617_f == nullptr)) {
					return;;
				};
				_1b579b916_applyFnMeta(_self_, &(_174617_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1ac0447c2:;
			{
				jule::Ptr<_1b4b1b7e2_StructDecl> _175217_sd = (*(_173633_node))._field_Data.unsafe_cast_ptr<_1b4b1b7e2_StructDecl>();;
				if ((_175217_sd == nullptr)) {
					return;;
				};
				(*(_175217_sd))._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		_match_end_1ac0446a1:;
	};
}



inline void _1b579be77_pushUseDecl(jule::Ptr<_1b578ce8a_parser> _self_, jule::Ptr<_1b4b18b30_UseDecl>* _176136_decl) {
	(*((*(_self_))._field_ast))._field_UseDecls=jule::append((*(*_self_.alloc)._field_ast.alloc)._field_UseDecls,jule::Slice<jule::Ptr<_1b4b18b30_UseDecl>>::make({(*(_176136_decl))}));
	if (((*(*_self_.alloc)._field_ast.alloc)._field_Nodes.len() > 0LL)) {
		_1b578d93b_pushErr(_self_, (*((*(_176136_decl))))._field_Token, jule::Str::lit("use declarations must declared top of source code", 49), jule::Slice<jule::Any>());
		_1b578dc9e_pushSuggestion(_self_, jule::Str::lit("move this use declaration to top of source file", 47), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1b579c2b8_pushMetaNodes(jule::Ptr<_1b578ce8a_parser> _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _176938_tokens) {
	{
		auto &_match_expr{ (*((*(_176938_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_1ac04aa70:;
			{
				;
				jule::Ptr<_1b4b18b30_UseDecl> _177317_decl = _1b5796504_buildUseDecl(_self_.ptr(), (*(_176938_tokens)), false);;
				_1b579be77_pushUseDecl(_self_, &(_177317_decl));
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1ac04aae7:;
			{
				if ((((*(_176938_tokens)).len() > 1LL) && ((*((*(_176938_tokens))[1LL]))._field_Id == static_cast<jule::U64>(16LLU)))) {
					jule::Ptr<_1b4b18b30_UseDecl> _177821_decl = _1b579a4d6_buildBindUse(_self_, (*(_176938_tokens)));;
					_1b579be77_pushUseDecl(_self_, &(_177821_decl));
					return true;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_1ac04ab5d:;
			{
				_1b578e6d9_pushDirective(_self_.ptr(), _1b578e431_buildDirective(_self_, (*(_176938_tokens))));
				return true;;
			}
		}
		_match_end_1ac04a971:;
	};
	return false;;
}



inline _1b4ae9bbb_Node _1b579c609_parseNode(jule::Ptr<_1b578ce8a_parser> _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _178934_st) {
	_1b4ae9bbb_Node _179013_node = _1b4ae9bbb_Node{._field_Token=(*(_178934_st))[0LL], };;
	if (_1b579c2b8_pushMetaNodes(_self_, _178934_st)) {
		return _179013_node;;
	};
	jule::Any _179813_data = _1b579b65d_buildNodeData(_self_, _178934_st);;
	if ((_179813_data == nullptr)) {
		return _179013_node;;
	};
	_179013_node._field_Data=_179813_data;
	_1b579bbbe_applyMeta(_self_, &(_179013_node));
	if (((*_self_.alloc)._field_directives.len() != 0LL)) {
		_1b578d93b_pushErr(_self_, (*((*_self_.alloc)._field_directives[0LL]))._field_Tag, jule::Str::lit("this directive is out of scope, put it where it will be useful or delete it", 75), jule::Slice<jule::Any>());
	};
	(*_self_.alloc)._field_directives=nullptr;
	return _179013_node;;
}



inline void _1b579c8b2_appendNode(jule::Ptr<_1b578ce8a_parser> _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _181335_st) {
	if (((*(_181335_st)).len() == 0LL)) {
		return;;
	};
	_1b4ae9bbb_Node _181713_node = _1b579c609_parseNode(_self_, _181335_st);;
	if (((_181713_node._field_Data != nullptr) && (!(_1b578d51d_stopped(_self_))))) {
		(*((*_self_.alloc)._field_ast))._field_Nodes=jule::append((*(*_self_.alloc)._field_ast.alloc)._field_Nodes,jule::Slice<_1b4ae9bbb_Node>::make({_181713_node}));
	};
}



inline void _1b579cd8a_removeRange(_1b578ce8a_parser* _self_, jule::I64 _182330_i, jule::U64 _182338_id, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _182352_tokens, jule::Slice<jule::I64>* _182375_ranges) {
	jule::U64 _18249_close = _1b578c143_getCloseOfBrace(_182338_id);;
	for (; (_182330_i >= 0LL); (_182330_i)--) {
		{
			jule::Ptr<_1b4ad5712_Token> _182613_tok = (*(_182352_tokens))[(*(_182375_ranges))[_182330_i]];;
			if (((*(_182613_tok))._field_Id != _18249_close)) {
				goto _iter_next_1ac055cbc;
			};
			(*(_182375_ranges))=jule::append((*(_182375_ranges)).slice(0LL, _182330_i),(*(_182375_ranges)).slice((_182330_i + 1LL)));
			goto _iter_end_1ac055cbc;
		}
	_iter_next_1ac055cbc:;
	}
	_iter_end_1ac055cbc:;;
}



inline void _1b579d2a8_pushWrongOrderCloseErr(_1b578ce8a_parser* _self_, jule::Ptr<_1b4ad5712_Token>* _183542_t, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _183554_tokens, jule::Slice<jule::I64>* _183573_ranges) {
	{
		auto &_match_expr{ (*((*(_183554_tokens))[(*(_183573_ranges))[((*(_183573_ranges)).len() - 1LL)]]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(74LLU)) {
			_case_begin_1ac0580cc:;
			{
				_1b578d93b_pushErr(_self_, (*(_183542_t)), jule::Str::lit("was expected parentheses close", 30), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_1ac058154:;
			{
				_1b578d93b_pushErr(_self_, (*(_183542_t)), jule::Str::lit("was expected brace close", 24), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U64>(76LLU)) {
			_case_begin_1ac0581ba:;
			{
				_1b578d93b_pushErr(_self_, (*(_183542_t)), jule::Str::lit("was expected bracket close", 26), jule::Slice<jule::Any>());
			}
		}
		_match_end_1ac057ecd:;
	};
}



inline void _1b579d781_pushRangeClose(_1b578ce8a_parser* _self_, jule::Ptr<_1b4ad5712_Token> _184633_t, jule::U64 _184644_left, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _184660_tokens, jule::Slice<jule::I64>* _184683_ranges) {
	jule::I64 _18479_n = (*(_184683_ranges)).len();;
	if ((_18479_n == 0LL)) {
		{
			auto &_match_expr{ (*(_184633_t))._field_Id };
			
			if (_match_expr == static_cast<jule::U64>(77LLU)) {
				_case_begin_1ac05aca0:;
				{
					_1b578d93b_pushErr(_self_, _184633_t, jule::Str::lit("extra closed brackets", 21), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U64>(73LLU)) {
				_case_begin_1ac05ad27:;
				{
					_1b578d93b_pushErr(_self_, _184633_t, jule::Str::lit("extra closed braces", 19), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U64>(75LLU)) {
				_case_begin_1ac05ad8d:;
				{
					_1b578d93b_pushErr(_self_, _184633_t, jule::Str::lit("extra closed parentheses", 24), jule::Slice<jule::Any>());
				}
			}
			_match_end_1ac05abe5:;
		};
		return;;
	} else if (((*((*(_184660_tokens))[(*(_184683_ranges))[(_18479_n - 1LL)]]))._field_Id != _184644_left)) {
		_1b579d2a8_pushWrongOrderCloseErr(_self_, &(_184633_t), _184660_tokens, _184683_ranges);
	};
	_1b579cd8a_removeRange(_self_, (_18479_n - 1LL), (*(_184633_t))._field_Id, _184660_tokens, _184683_ranges);
}



inline void _1b579da39_checkRanges(_1b578ce8a_parser* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _186431_tokens) {
	jule::Slice<jule::I64> _186517_ranges = nullptr;;
	{
		auto expr = _186431_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac05ced3:;
		if (it != expr_end) {
			jule::I64 _186713_i = it - expr->begin();
			jule::Ptr<_1b4ad5712_Token> *_186716_token = it;
			{
				{
					auto &_match_expr{ (*((*(_186716_token))))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1ac05ec1b:;
						{
							{ jule::Slice<jule::I64> &__jule_push_dest = _186517_ranges; __jule_push_dest.push(_186713_i); };
						}
					}
					else if (_match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1ac05eca4:;
						{
							_1b579d781_pushRangeClose(_self_, (*(_186716_token)), static_cast<jule::U64>(74LLU), _186431_tokens, &(_186517_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU)) {
						_case_begin_1ac05ed1a:;
						{
							_1b579d781_pushRangeClose(_self_, (*(_186716_token)), static_cast<jule::U64>(72LLU), _186431_tokens, &(_186517_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_1ac05ed81:;
						{
							_1b579d781_pushRangeClose(_self_, (*(_186716_token)), static_cast<jule::U64>(76LLU), _186431_tokens, &(_186517_ranges));
						}
					}
					_match_end_1ac05eb61:;
				};
			}
			_iter_next_1ac05ced3:;
			++it;
			_186713_i++;
			goto _iter_begin_1ac05ced3;
		}
		_iter_end_1ac05ced3:;
	};
	{
		auto expr = &(_186517_ranges);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac05de5c:;
		if (it != expr_end) {
			jule::I64 _188216_i = *it;
			{
				jule::Ptr<_1b4ad5712_Token> _188313_token = (*(_186431_tokens))[_188216_i];;
				{
					auto &_match_expr{ (*(_188313_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1ac062bec:;
						{
							_1b578d93b_pushErr(_self_, _188313_token, jule::Str::lit("parentheses waiting to close", 28), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1ac062c63:;
						{
							_1b578d93b_pushErr(_self_, _188313_token, jule::Str::lit("brace waiting to close", 22), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1ac062cc9:;
						{
							_1b578d93b_pushErr(_self_, _188313_token, jule::Str::lit("bracket are waiting to close", 28), jule::Slice<jule::Any>());
						}
					}
					_match_end_1ac062b97:;
				};
			}
			_iter_next_1ac05de5c:;
			++it;
			goto _iter_begin_1ac05de5c;
		}
		_iter_end_1ac05de5c:;
	};
}



inline void _1b579dce2_parse(jule::Ptr<_1b578ce8a_parser> _self_, jule::Ptr<_1b4adae98_File>* _189530_f) {
	(*(_self_))._field_ast=jule::new_ptr<_1b4ae8ca8_Ast>(_1b4ae8ca8_Ast{._field_File=(*(_189530_f)), });
	(*_self_.alloc)._field_ep=jule::new_ptr<_1b577c331_exprBuilder>(_1b577c331_exprBuilder{._field_p=_self_});
	_1b579da39_checkRanges(_self_, &((*((*(_189530_f))))._field_Tokens));
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1b576e06a_stmt>> _190813_stmts = _1b576e422_splitStmts(&((*((*(_189530_f))))._field_Tokens));;
	jule::I64 _191113_i = 0LL;;
	for (; (_191113_i < _190813_stmts.len()); (_191113_i)++) {
		{
			jule::Ptr<_1b576e06a_stmt> _191317_stmt = _190813_stmts[_191113_i];;
			if (((*(_191317_stmt))._field_tokens.len() < 2LL)) {
				return;;
			};
			if (((*((*_191317_stmt.alloc)._field_tokens[0LL]))._field_Id != static_cast<jule::U64>(35LLU))) {
				goto _iter_end_1ac06652a;
			};
			if ((!(_1cb286d7a_IsTopDirective((*((*_191317_stmt.alloc)._field_tokens[1LL]))._field_Kind)))) {
				goto _iter_end_1ac06652a;
			};
			(*((*_self_.alloc)._field_ast))._field_TopDirectives=jule::append((*(*_self_.alloc)._field_ast.alloc)._field_TopDirectives,jule::Slice<jule::Ptr<_1b4aea0d9_Directive>>::make({_1b578e431_buildDirective(_self_, (*_191317_stmt.alloc)._field_tokens)}));
		}
	_iter_next_1ac06652a:;
	}
	_iter_end_1ac06652a:;;
	(*_self_.alloc)._field_errors=nullptr;
	for (; ((_191113_i < _190813_stmts.len()) && (!(_1b578d51d_stopped(_self_)))); (_191113_i)++) {
		{
			_1b579c8b2_appendNode(_self_, &((*(_190813_stmts[_191113_i]))._field_tokens));
		}
	_iter_next_1ac069891:;
	}
	_iter_end_1ac069891:;;
	if (((*_self_.alloc)._field_directives.len() != 0LL)) {
		_1b578d93b_pushErr(_self_, (*((*_self_.alloc)._field_directives[0LL]))._field_Tag, jule::Str::lit("this directive is out of scope, put it where it will be useful or delete it", 75), jule::Slice<jule::Any>());
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1b578ce8a_parser _Src) {
	_Stream << "parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ep:" << _Src._field_ep;
	_Stream << "}";
	return _Stream;
}



inline void _1b57a0651_pushErr(_1b57a00ac_typeBuilder* _self_, jule::Ptr<_1b4ad5712_Token> _4126_token, jule::Str _4141_fmt) {
	if ((*(_self_))._field_err) {
		_1b578d93b_pushErr((*(_self_))._field_p.ptr(), _4126_token, _4141_fmt, jule::Slice<jule::Any>());
	};
}



inline void _1b57a09b4_pushSuggestion(_1b57a00ac_typeBuilder* _self_, jule::Str _4833_fmt, jule::Slice<jule::Any> _4846_args) {
	if ((*(_self_))._field_err) {
		_1b578dc9e_pushSuggestion((*(_self_))._field_p.ptr(), _4833_fmt, _4846_args);
	};
}



inline jule::Ptr<_1b4aeabbc_TypeDecl> _1b57a0c4a_buildNamespace(_1b57a00ac_typeBuilder* _self_) {
	jule::Ptr<_1b4aeabbc_TypeDecl> _5513_t = jule::new_ptr<_1b4aeabbc_TypeDecl>(_1b4aeabbc_TypeDecl{._field_Token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))], });;
	jule::Ptr<_1b4aeb96a_NamespaceTypeDecl> _5913_nst = jule::new_ptr<_1b4aeb96a_NamespaceTypeDecl>();;
	jule::I64 _6013_n = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_1b4ad5712_Token> _6217_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			if (((_6013_n & 1LL) == 0LL)) {
				if (((*(_6217_token))._field_Id != static_cast<jule::U64>(1LLU))) {
					_1b57a0651_pushErr(_self_, _6217_token, jule::Str::lit("invalid syntax", 14));
					_1b57a09b4_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
				};
				(*_5913_nst.alloc)._field_Idents=jule::append((*_5913_nst.alloc)._field_Idents,jule::Slice<jule::Ptr<_1b4ad5712_Token>>::make({_6217_token}));
			} else if (((*(_6217_token))._field_Id != static_cast<jule::U64>(19LLU))) {
				goto _iter_end_1ac070105;
			};
			(_6013_n)++;
		}
	_iter_next_1ac070105:;
	}
	_iter_end_1ac070105:;;
	((*(_5913_nst))._field_Idents).mut_slice(0LL, ((*(_5913_nst))._field_Idents.len() - 1LL));;
	((*((*(_self_))._field_i)))--;
	(*_5913_nst.alloc)._field_Kind=_1b57a14ed_buildIdent(_self_);
	(*(_5513_t))._field_Kind=jule::Any(_5913_nst, &__jule_any_type91);
	return _5513_t;;
}



inline jule::Slice<jule::Ptr<_1b4aeabbc_TypeDecl>> _1b57a0ed1_buildGenerics(_1b57a00ac_typeBuilder* _self_) {
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		return nullptr;;
	};
	jule::Ptr<_1b4ad5712_Token> _889_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if (((*(_889_token))._field_Id != static_cast<jule::U64>(76LLU))) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1b4ad5712_Token>>> _9313_parts = _1b57a1267_identGenerics(_self_);;
	if ((_9313_parts.len() == 0LL)) {
		_1b57a0651_pushErr(_self_, _889_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1b4aeabbc_TypeDecl>> _9913_types = jule::Slice<jule::Ptr<_1b4aeabbc_TypeDecl>>::alloc(0LL, _9313_parts.len());;
	{
		auto expr = &(_9313_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac077250:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1b4ad5712_Token>> _10021_part = *it;
			{
				jule::I64 _10117_j = 0LL;;
				jule::Ptr<_1b4aeabbc_TypeDecl> _10217_t;
				({
					__jule_tuple_x_1b4aeabbc_TypeDecl__jule_tuple_bool __jule_assign_result = _1b5790542_buildType((*(_self_))._field_p, &(_10021_part), (&(_10117_j)), true);
					_10217_t = __jule_assign_result.__jule_result_arg0;
				});
				if ((_10117_j < _10021_part.len())) {
					_1b57a0651_pushErr(_self_, _10021_part[_10117_j], jule::Str::lit("invalid syntax", 14));
				};
				{ jule::Slice<jule::Ptr<_1b4aeabbc_TypeDecl>> &__jule_push_dest = _9913_types; __jule_push_dest.push(_10217_t); };
			}
			_iter_next_1ac077250:;
			++it;
			goto _iter_begin_1ac077250;
		}
		_iter_end_1ac077250:;
	};
	return _9913_types;;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1b4ad5712_Token>>> _1b57a1267_identGenerics(_1b57a00ac_typeBuilder* _self_) {
	jule::I64 _1129_first = (*((*(_self_))._field_i));;
	jule::I64 _11313_rangeN = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_1b4ad5712_Token> _11513_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			{
				auto &_match_expr{ (*(_11513_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(76LLU)) {
					_case_begin_1ac07b09a:;
					{
						(_11313_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(77LLU)) {
					_case_begin_1ac07b3a8:;
					{
						(_11313_rangeN)--;
					}
				}
				_match_end_1ac07b353:;
			};
			if ((_11313_rangeN == 0LL)) {
				((*((*(_self_))._field_i)))++;
				goto _iter_end_1ac07a242;
			};
		}
	_iter_next_1ac07a242:;
	}
	_iter_end_1ac07a242:;;
	jule::Slice<jule::Ptr<_1b4ad5712_Token>> _12713_tokens = (*(_self_))._field_tokens.slice((_1129_first + 1LL), ((*((*(_self_))._field_i)) - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1b4ad5712_Token>>> _12813_parts;
	jule::Slice<_1cb285120_Log> _12820_errors;
	({
		__jule_tuple_ssx_1b4ad5712_Token__jule_tuple_s_1cb285120_Log __jule_assign_result = _1b578bdac_parts(&(_12713_tokens), static_cast<jule::U64>(5LLU), true);
		_12813_parts = __jule_assign_result.__jule_result_arg0;
		_12820_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((*(_self_))._field_err) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_12820_errors);
	};
	return _12813_parts;;
}



inline jule::Ptr<_1b4aeabbc_TypeDecl> _1b57a14ed_buildIdent(_1b57a00ac_typeBuilder* _self_) {
	jule::Bool _13613_next = (((*((*(_self_))._field_i)) + 1LL) < (*(_self_))._field_tokens.len());;
	if ((_13613_next && ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id == static_cast<jule::U64>(19LLU)))) {
		return _1b57a0c4a_buildNamespace(_self_);;
	};
	jule::Ptr<_1b4ad5712_Token> _14013_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1b4aeb2c7_IdentTypeDecl> _14113_it = jule::new_ptr<_1b4aeb2c7_IdentTypeDecl>(_1b4aeb2c7_IdentTypeDecl{._field_Token=_14013_token, ._field_Ident=(*(_14013_token))._field_Kind, ._field_Binded=false, });;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1b4aeabbc_TypeDecl> _14713_itd = jule::new_ptr<_1b4aeabbc_TypeDecl>(_1b4aeabbc_TypeDecl{._field_Token=_14013_token, ._field_Kind=jule::Any(_14113_it, &__jule_any_type74)});;
	if (((!(_13613_next)) || ((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U64>(17LLU)))) {
		(*(_14113_it))._field_Generics=_1b57a0ed1_buildGenerics(_self_);
		return _14713_itd;;
	};
	if ((((*(_self_))._field_tokens.len() - (*((*(_self_))._field_i))) == 1LL)) {
		_1b57a0651_pushErr(_self_, _14013_token, jule::Str::lit("invalid syntax", 14));
		return _14713_itd;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1b57a0651_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str::lit("invalid syntax", 14));
		return _14713_itd;;
	};
	jule::Ptr<_1b4aeb591_SubIdentTypeDecl> _16413_sit = jule::new_ptr<_1b4aeb591_SubIdentTypeDecl>();;
	(*_16413_sit.alloc)._field_Idents=jule::append((*_16413_sit.alloc)._field_Idents,jule::Slice<jule::Ptr<_1b4aeb2c7_IdentTypeDecl>>::make({_14113_it}));
	jule::Ptr<_1b4aeabbc_TypeDecl> _16613_ident = _1b57a14ed_buildIdent(_self_);;
	{
		auto &_match_expr{ (*(_16613_ident))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1ac086e63:;
			{
				(*_16413_sit.alloc)._field_Idents=jule::append((*_16413_sit.alloc)._field_Idents,jule::Slice<jule::Ptr<_1b4aeb2c7_IdentTypeDecl>>::make({(*(_16613_ident))._field_Kind.unsafe_cast_ptr<_1b4aeb2c7_IdentTypeDecl>()}));
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1ac081578:;
			{
				(*_16413_sit.alloc)._field_Idents=jule::append((*_16413_sit.alloc)._field_Idents,(*((*(_16613_ident))._field_Kind.unsafe_cast_ptr<_1b4aeb591_SubIdentTypeDecl>()))._field_Idents);
			}
		}
		_match_end_1ac084b86:;
	};
	return jule::new_ptr<_1b4aeabbc_TypeDecl>(_1b4aeabbc_TypeDecl{._field_Token=_14013_token, ._field_Kind=jule::Any(_16413_sit, &__jule_any_type87)});;
}



inline jule::Ptr<_1b4aeabbc_TypeDecl> _1b57a1784_buildCppLink(_1b57a00ac_typeBuilder* _self_) {
	if (((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len()) || ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id != static_cast<jule::U64>(17LLU)))) {
		_1b57a0651_pushErr(_self_, (*(_self_))._field_tokens[(*((*(_self_))._field_i))], jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	(*((*(_self_))._field_i))+=2LL;
	jule::Ptr<_1b4aeabbc_TypeDecl> _18513_t = _1b57a14ed_buildIdent(_self_);;
	(*((*(_18513_t))._field_Kind.cast_ptr<_1b4aeb2c7_IdentTypeDecl>(&__jule_any_type74)))._field_Binded=true;
	return _18513_t;;
}



inline jule::Ptr<_1b4aeabbc_TypeDecl> _1b57a1a1a_buildFn(_1b57a00ac_typeBuilder* _self_) {
	jule::Ptr<_1b4ad5712_Token> _19113_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1b4b126d9_FnDecl> _19213_f = _1b5794623_buildFnPrototype((*(_self_))._field_p, &((*(_self_))._field_tokens), &((*((*(_self_))._field_i))), false);;
	if ((_19213_f == nullptr)) {
		return nullptr;;
	};
	if ((!(_1b4b12a4c_IsAnon(_19213_f.ptr())))) {
		_1b57a0651_pushErr(_self_, (*(_19213_f))._field_Token, jule::Str::lit("invalid syntax", 14));
	};
	return jule::new_ptr<_1b4aeabbc_TypeDecl>(_1b4aeabbc_TypeDecl{._field_Token=_19113_token, ._field_Kind=jule::Any(_19213_f, &__jule_any_type14)});;
}



inline jule::Ptr<_1b4aeabbc_TypeDecl> _1b57a1ca1_buildPtr(_1b57a00ac_typeBuilder* _self_) {
	jule::Ptr<_1b4ad5712_Token> _20613_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1b57a0651_pushErr(_self_, _20613_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id == static_cast<jule::U64>(31LLU))) {
		((*((*(_self_))._field_i)))++;
		return jule::new_ptr<_1b4aeabbc_TypeDecl>(_1b4aeabbc_TypeDecl{._field_Token=_20613_token, ._field_Kind=jule::Any(jule::new_ptr<_1b4aec6e6_PtrTypeDecl>(_1b4aec6e6_PtrTypeDecl{._field_Elem=nullptr}), &__jule_any_type70)});;
	};
	jule::Ptr<_1b4aeabbc_TypeDecl> _22313_elem = _1b57a2d07_step(_self_);;
	if ((_22313_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1b4aeabbc_TypeDecl>(_1b4aeabbc_TypeDecl{._field_Token=_20613_token, ._field_Kind=jule::Any(jule::new_ptr<_1b4aec6e6_PtrTypeDecl>(_1b4aec6e6_PtrTypeDecl{._field_Elem=_22313_elem}), &__jule_any_type70)});;
}



inline jule::Ptr<_1b4aeabbc_TypeDecl> _1b57a2037_buildSptr(_1b57a00ac_typeBuilder* _self_) {
	jule::Ptr<_1b4ad5712_Token> _23713_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1b57a0651_pushErr(_self_, _23713_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1b4aeabbc_TypeDecl> _24413_elem = _1b57a2d07_step(_self_);;
	if ((_24413_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1b4aeabbc_TypeDecl>(_1b4aeabbc_TypeDecl{._field_Token=_23713_token, ._field_Kind=jule::Any(jule::new_ptr<_1b4aebc67_SptrTypeDecl>(_1b4aebc67_SptrTypeDecl{._field_Elem=_24413_elem}), &__jule_any_type71)});;
}



inline jule::Ptr<_1b4aeabbc_TypeDecl> _1b57a22bd_buildSlc(_1b57a00ac_typeBuilder* _self_) {
	jule::Ptr<_1b4ad5712_Token> _25813_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1b4aeabbc_TypeDecl> _26013_elem = _1b57a2d07_step(_self_);;
	if ((_26013_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1b4aeabbc_TypeDecl>(_1b4aeabbc_TypeDecl{._field_Token=_25813_token, ._field_Kind=jule::Any(jule::new_ptr<_1b4aec0ec_SlcTypeDecl>(_1b4aec0ec_SlcTypeDecl{._field_Elem=_26013_elem}), &__jule_any_type69)});;
}



inline jule::Ptr<_1b4aeabbc_TypeDecl> _1b57a2554_buildArr(_1b57a00ac_typeBuilder* _self_) {
	jule::Slice<jule::Ptr<_1b4ad5712_Token>> _27313_exprTokens = _1b578b63c_range(&((*((*(_self_))._field_i))), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1b57a0651_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str::lit("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_1b4aeabbc_TypeDecl> _27913_elem = _1b57a2d07_step(_self_);;
	if ((_27913_elem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1b4aece88_ArrTypeDecl> _28413_arrt = jule::new_ptr<_1b4aece88_ArrTypeDecl>(_1b4aece88_ArrTypeDecl{._field_Elem=_27913_elem, });;
	jule::Ptr<_1b4ad5712_Token> _28813_token = _27313_exprTokens[0LL];;
	if (((_27313_exprTokens.len() == 1LL) && ((*(_28813_token))._field_Id == static_cast<jule::U64>(39LLU)))) {
	} else {
		(*(_28413_arrt))._field_Size=_1b578e0e0_buildExpr((*(_self_))._field_p, &(_27313_exprTokens));
	};
	return jule::new_ptr<_1b4aeabbc_TypeDecl>(_1b4aeabbc_TypeDecl{._field_Token=_28813_token, ._field_Kind=jule::Any(_28413_arrt, &__jule_any_type68)});;
}



inline jule::Ptr<_1b4aeabbc_TypeDecl> _1b57a27da_buildMap(_1b57a00ac_typeBuilder* _self_) {
	jule::Ptr<_1b4ad5712_Token> _30213_mapToken = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1b57a0651_pushErr(_self_, _30213_mapToken, jule::Str::lit("type missing", 12));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1b4ad5712_Token>> _31013_keyTokens = _1b578b63c_range(&((*((*(_self_))._field_i))), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1b57a0651_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str::lit("type missing", 12));
		return nullptr;;
	} else if ((_31013_keyTokens.len() == 0LL)) {
		_1b57a0651_pushErr(_self_, _30213_mapToken, jule::Str::lit("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_1b4aed6d6_MapTypeDecl> _31913_mapt = jule::new_ptr<_1b4aed6d6_MapTypeDecl>();;
	jule::I64 _32013_j = 0LL;;
	jule::Ptr<_1b4aeabbc_TypeDecl> _32113_keyt;
	jule::Bool _32123_ok;
	({
		__jule_tuple_x_1b4aeabbc_TypeDecl__jule_tuple_bool __jule_assign_result = _1b5790542_buildType((*(_self_))._field_p, &(_31013_keyTokens), (&(_32013_j)), (*(_self_))._field_err);
		_32113_keyt = __jule_assign_result.__jule_result_arg0;
		_32123_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_32123_ok))) {
		return nullptr;;
	} else if ((_32013_j < _31013_keyTokens.len())) {
		_1b57a0651_pushErr(_self_, _31013_keyTokens[_32013_j], jule::Str::lit("invalid syntax", 14));
	};
	(*_31913_mapt.alloc)._field_Key=_32113_keyt;
	jule::Ptr<_1b4aeabbc_TypeDecl> _32913_valt;
	({
		__jule_tuple_x_1b4aeabbc_TypeDecl__jule_tuple_bool __jule_assign_result = _1b5790542_buildType((*(_self_))._field_p, &((*(_self_))._field_tokens), (*(_self_))._field_i, (*(_self_))._field_err);
		_32913_valt = __jule_assign_result.__jule_result_arg0;
		_32123_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_32123_ok))) {
		return nullptr;;
	};
	(*_31913_mapt.alloc)._field_Val=_32913_valt;
	return jule::new_ptr<_1b4aeabbc_TypeDecl>(_1b4aeabbc_TypeDecl{._field_Token=_30213_mapToken, ._field_Kind=jule::Any(_31913_mapt, &__jule_any_type72)});;
}



inline jule::Ptr<_1b4aeabbc_TypeDecl> _1b57a2a71_buildEnumerable(_1b57a00ac_typeBuilder* _self_) {
	jule::Ptr<_1b4ad5712_Token> _34113_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 2LL) >= (*(_self_))._field_tokens.len())) {
		_1b57a0651_pushErr(_self_, _34113_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	_34113_token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))];
	if (((*(_34113_token))._field_Id == static_cast<jule::U64>(77LLU))) {
		return _1b57a22bd_buildSlc(_self_);;
	};
	((*((*(_self_))._field_i)))--;
	return _1b57a2554_buildArr(_self_);;
}



inline jule::Ptr<_1b4aeabbc_TypeDecl> _1b57a2d07_step(_1b57a00ac_typeBuilder* _self_) {
	jule::Ptr<_1b4ad5712_Token> _3569_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	{
		auto &_match_expr{ (*(_3569_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1ac0a6d73:;
			{
				return _1b57a14ed_buildIdent(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1ac0a72c4:;
			{
				return _1b57a1784_buildCppLink(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1ac0a73e5:;
			{
				return _1b57a1a1a_buildFn(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1ac0a6a65:;
			{
				return _1b57a1ca1_buildPtr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1ac0a6acb:;
			{
				return _1b57a2037_buildSptr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1ac0a6b42:;
			{
				return jule::new_ptr<_1b4aeabbc_TypeDecl>(_1b4aeabbc_TypeDecl{._field_Kind=jule::Any(jule::new_ptr<_1b4aebc67_SptrTypeDecl>(_1b4aebc67_SptrTypeDecl{._field_Elem=_1b57a2037_buildSptr(_self_)}), &__jule_any_type71)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(76LLU)) {
			_case_begin_1ac0a6ba8:;
			{
				return _1b57a2a71_buildEnumerable(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(37LLU)) {
			_case_begin_1ac0a6c30:;
			{
				return _1b57a27da_buildMap(_self_);;
			}
		}
		else {
			_case_begin_1ac0a6746:;
			{
				((*((*(_self_))._field_i)))++;
				_1b57a0651_pushErr(_self_, _3569_token, jule::Str::lit("invalid syntax", 14));
				return nullptr;;
			}
		}
		_match_end_1ac0a6a10:;
	};
}



inline __jule_tuple_x_1b4aeabbc_TypeDecl__jule_tuple_bool _1b57a308d_build(_1b57a00ac_typeBuilder* _self_) {
	__jule_tuple_x_1b4aeabbc_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1b4aeabbc_TypeDecl> _38813_root = _1b57a2d07_step(_self_);;
	if ((_38813_root == nullptr)) {
		__jule_func_result.__jule_result_arg0 = _1b579e7e8_buildVoidType();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _38813_root;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1b57a00ac_typeBuilder _Src) {
	_Stream << "typeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4eb1abb_CompileInfo _Src) {
	_Stream << "CompileInfo{";
	_Stream << "Prod:" << _Src._field_Prod << ", ";
	_Stream << "Test:" << _Src._field_Test << ", ";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CppStd:" << _Src._field_CppStd;
	_Stream << "}";
	return _Stream;
}



inline void _1b4eb35e5_pushErr(_1b4eb3095_directiveEval* _self_, jule::Ptr<_1b4ad5712_Token> _2126_t, jule::Str _2137_fmt, jule::Slice<jule::Any> _2150_args) {
	{ jule::Slice<_1cb285120_Log> &__jule_push_dest = (*(_self_))._field_logs; __jule_push_dest.push(_1cb285120_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*(_2126_t))._field_Row, ._field_Column=(*_2126_t.alloc)._field_Column, ._field_Path=(*((*_2126_t.alloc)._field_File))._field_Path, ._field_Text=_1cb285582_Logf(_2137_fmt, _2150_args), }); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_1b4ad5712_Token>>> _1b4eb39e1_splitOperans(_1b4eb3095_directiveEval* _self_, jule::U64 _3331_op, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _3349_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1b4ad5712_Token>>> _3413_parts = jule::Slice<jule::Slice<jule::Ptr<_1b4ad5712_Token>>>::alloc(0LL, 10LL);;
	jule::I64 _3513_i = 0LL;;
	jule::I64 _3613_rangeN = 0LL;;
	jule::I64 _3713_last = 0LL;;
	for (; (_3513_i < ((*(_3349_tokens)).len() - 1LL)); (_3513_i)++) {
		{
			jule::Ptr<_1b4ad5712_Token> _3913_b = (*(_3349_tokens))[_3513_i];;
			{
				auto &_match_expr{ (*(_3913_b))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1ac0cbd10:;
					{
						(_3613_rangeN)++;
						goto _iter_next_1ac0cb381;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1ac0cc11d:;
					{
						(_3613_rangeN)--;
					}
				}
				_match_end_1ac0cc0b8:;
			};
			if (((_3613_rangeN > 0LL) || ((*(_3913_b))._field_Id != _3331_op))) {
				goto _iter_next_1ac0cb381;
			};
			{ jule::Slice<jule::Slice<jule::Ptr<_1b4ad5712_Token>>> &__jule_push_dest = _3413_parts; __jule_push_dest.push((*(_3349_tokens)).slice(_3713_last, _3513_i)); };
			_3713_last=(_3513_i + 1LL);
		}
	_iter_next_1ac0cb381:;
	}
	_iter_end_1ac0cb381:;;
	if ((_3713_last < (*(_3349_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1b4ad5712_Token>>> &__jule_push_dest = _3413_parts; __jule_push_dest.push((*(_3349_tokens)).slice(_3713_last)); };
	} else {
		_1b4eb35e5_pushErr(_self_, (*(_3349_tokens))[(_3713_last - 1LL)], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _3413_parts;;
}



inline jule::Bool _1b4eb3d32_evalDirectiveIdent(_1b4eb3095_directiveEval* _self_, jule::Str _6433_ident) {
	if ((_6433_ident).empty()) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac0ceebc:;
		if (it != expr_end) {
			jule::Str *_6816_var = it;
			{
				if (((*(_6816_var)) == _6433_ident)) {
					return true;;
				};
			}
			_iter_next_1ac0ceebc:;
			++it;
			goto _iter_begin_1ac0ceebc;
		}
		_iter_end_1ac0ceebc:;
	};
	return false;;
}



inline jule::Bool _1b4eb4173_evalDirectivePart(_1b4eb3095_directiveEval* _self_, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _7840_part) {
	jule::Bool _799_logicalNot = ((*(_7840_part[0LL]))._field_Id == static_cast<jule::U64>(68LLU));;
	if (_799_logicalNot) {
		(_7840_part).mut_slice(1LL);;
	};
	if ((_7840_part.len() > 1LL)) {
		_1b4eb35e5_pushErr(_self_, _7840_part[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _8913_result = _1b4eb3d32_evalDirectiveIdent(_self_, (*(_7840_part[0LL]))._field_Kind);;
	if (_799_logicalNot) {
		_8913_result=(!(_8913_result));
	};
	return _8913_result;;
}



inline jule::Bool _1b4eb4409_eval(_1b4eb3095_directiveEval* _self_) {
	if (((*((*(_self_))._field_d))._field_Args.len() == 0LL)) {
		_1b4eb35e5_pushErr(_self_, (*(*(_self_))._field_d.alloc)._field_Tag, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _10213_result = false;;
	jule::Slice<jule::Slice<jule::Ptr<_1b4ad5712_Token>>> _10413_logicalOrParts = _1b4eb39e1_splitOperans(_self_, static_cast<jule::U64>(55LLU), &((*(*(_self_))._field_d.alloc)._field_Args));;
	if ((_10413_logicalOrParts == nullptr)) {
		return false;;
	};
	{
		auto expr = &(_10413_logicalOrParts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac0d5401:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1b4ad5712_Token>> _10921_part = *it;
			{
				jule::Bool _11017_and = true;;
				jule::Slice<jule::Slice<jule::Ptr<_1b4ad5712_Token>>> _11117_logicalAndParts = _1b4eb39e1_splitOperans(_self_, static_cast<jule::U64>(54LLU), &(_10921_part));;
				if ((_11117_logicalAndParts == nullptr)) {
					return false;;
				};
				{
					auto expr = &(_11117_logicalAndParts);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac0d6ac8:;
					if (it != expr_end) {
						jule::Slice<jule::Ptr<_1b4ad5712_Token>> _11625_andPart = *it;
						{
							jule::Ptr<_1b4ad5712_Token> _11717_first = _11625_andPart[0LL];;
							if (((*(_11717_first))._field_Id == static_cast<jule::U64>(74LLU))) {
								jule::Ptr<_1b4ad5712_Token> _11921_end = _11625_andPart[(_11625_andPart.len() - 1LL)];;
								if (((*(_11921_end))._field_Id != static_cast<jule::U64>(75LLU))) {
									_1b4eb35e5_pushErr(_self_, _11717_first, jule::Str::lit("parentheses waiting to close", 28), jule::Slice<jule::Any>());
									return false;;
								};
								(_11625_andPart).mut_slice(1LL, (_11625_andPart.len() - 1LL));;
							};
							_11017_and=(_11017_and && _1b4eb4173_evalDirectivePart(_self_, _11625_andPart));
						}
						_iter_next_1ac0d6ac8:;
						++it;
						goto _iter_begin_1ac0d6ac8;
					}
					_iter_end_1ac0d6ac8:;
				};
				_10213_result=(_10213_result || _11017_and);
			}
			_iter_next_1ac0d5401:;
			++it;
			goto _iter_begin_1ac0d5401;
		}
		_iter_end_1ac0d5401:;
	};
	return _10213_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4eb3095_directiveEval _Src) {
	_Stream << "directiveEval{";
	_Stream << "logs:" << _Src._field_logs << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b57a40a0_JuleImporter> static__1b57a449b_New(_1b4eb1abb_CompileInfo _5819_info) {
	jule::Ptr<_1b57a40a0_JuleImporter> _5913_imp = jule::new_ptr<_1b57a40a0_JuleImporter>(_1b57a40a0_JuleImporter{._field_mods=jule::Slice<jule::Str>::make({_1cb39d9db_PathStdlib}), });;
	_1b4eb244b_initVars(&((*(_5913_imp))._field_vars), &(_5819_info));
	return _5913_imp;;
}



inline jule::Slice<jule::Ptr<_1b4b9a893_ImportInfo>> _1b57a4732_AllPackages(_1b57a40a0_JuleImporter* _self_) {
	return (*(_self_))._field_pkgs;;
}



inline void _1b57a4b72_SetModPath(_1b57a40a0_JuleImporter* _self_, jule::Str _7529_path) {
	(*(_self_))._field_mod=_7529_path;
}



inline jule::Str _1b57a4e08_GetModPath(_1b57a40a0_JuleImporter* _self_) {
	return (*(_self_))._field_mod;;
}



inline jule::Str _1b57a5249_ModById(_1b57a40a0_JuleImporter* _self_, jule::I64 _8322_id) {
	return (*(_self_))._field_mods[_8322_id];;
}



inline jule::Ptr<_1b4b9a893_ImportInfo> _1b57a558a_GetImport(_1b57a40a0_JuleImporter* _self_, jule::Str _8728_path) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac0dd22d:;
		if (it != expr_end) {
			jule::Ptr<_1b4b9a893_ImportInfo> _8821_p = *it;
			{
				if (((*(_8821_p))._field_Path == _8728_path)) {
					return _8821_p;;
				};
			}
			_iter_next_1ac0dd22d:;
			++it;
			goto _iter_begin_1ac0dd22d;
		}
		_iter_end_1ac0dd22d:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1b4ae8ca8_Ast__jule_tuple_s_1cb285120_Log _1b57a5986_ImportPackage(_1b57a40a0_JuleImporter* _self_, jule::Str _9632_path, jule::Bool _9643_update_mod) {
	__jule_tuple_sx_1b4ae8ca8_Ast__jule_tuple_s_1cb285120_Log __jule_func_result;
	jule::Slice<jule::Ptr<_20d927670_DirEntry>> _9713_dirents = ({
		auto except = static__1cb1e3138_Read(_9632_path);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = jule::Slice<_1cb285120_Log>::make({_1b57a3ab6_flatCompilerErr((jule::Str::lit("connot read package directory: ", 31) + _9632_path))});
			return __jule_func_result;;
		} jule::Slice<jule::Ptr<_20d927670_DirEntry>>(nullptr);});
	});;
	if (_9643_update_mod) {
		jule::Str _10213_newMod = _1b4bb71d9_FindModuleFileDeep(_9632_path);;
		if ((_10213_newMod != (*(_self_))._field_mod)) {
			(*(_self_))._field_mod=_10213_newMod;
			jule::Slice<_1cb285120_Log> _10521_errs = _1b4bb74a3_CheckModuleFile(&((*(_self_))._field_mod));;
			if ((_10521_errs.len() != 0LL)) {
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = _10521_errs;
				return __jule_func_result;;
			};
		};
	};
	jule::Slice<jule::Ptr<_1b4ae8ca8_Ast>> _11213_asts = jule::Slice<jule::Ptr<_1b4ae8ca8_Ast>>::alloc(0LL, _9713_dirents.len());;
	{
		auto expr = &(_9713_dirents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac0de87d:;
		if (it != expr_end) {
			jule::Ptr<_20d927670_DirEntry> _11316_dirent = *it;
			{
				if ((_20d92ba09_IsDir((*(_11316_dirent))._field_Stat.ptr()) || (!(_1cb1bde8d_HasSuffix((*_11316_dirent.alloc)._field_Name, jule::Str::lit(".jule", 5)))))) {
					goto _iter_next_1ac0de87d;
				};
				jule::Str _11913__path = _1cb1e007a_Join(jule::Slice<jule::Str>::make({_9632_path,(*_11316_dirent.alloc)._field_Name}));;
				jule::Ptr<_1b4adae98_File> _12017_file = _1b4adc373_NewFileSet(_11913__path);;
				_1b4adb3b6_Fill(_12017_file.ptr(), _1b57a37a8_readBuff((*_12017_file.alloc)._field_Path));
				jule::Slice<_1cb285120_Log> _12217_errors = _1b4ae8857_Lex(_12017_file, static_cast<jule::I64>(0LL));;
				if ((_12217_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _12217_errors;
					return __jule_func_result;;
				};
				jule::Ptr<_1b5725bd1_FileInfo> _12717_finfo = _1b572892b_ParseFile(_12017_file);;
				if (((*(_12717_finfo))._field_Errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = (*_12717_finfo.alloc)._field_Errors;
					return __jule_func_result;;
				};
				if ((!(_1b4e96551_isPassFileAnnotation((*_11316_dirent.alloc)._field_Name)))) {
					goto _iter_next_1ac0de87d;
				};
				jule::Bool _13713_r;
				jule::Slice<_1cb285120_Log> _13720_logs;
				({
					__jule_tuple_bool__jule_tuple_s_1cb285120_Log __jule_assign_result = _1b57a616d_isPassBuildDirectives(_self_, &((*_12717_finfo.alloc)._field_Ast));
					_13713_r = __jule_assign_result.__jule_result_arg0;
					_13720_logs = __jule_assign_result.__jule_result_arg1;
				});
				if ((_13720_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _13720_logs;
					return __jule_func_result;;
				};
				if ((!(_13713_r))) {
					goto _iter_next_1ac0de87d;
				};
				{ jule::Slice<jule::Ptr<_1b4ae8ca8_Ast>> &__jule_push_dest = _11213_asts; __jule_push_dest.push((*_12717_finfo.alloc)._field_Ast); };
			}
			_iter_next_1ac0de87d:;
			++it;
			goto _iter_begin_1ac0de87d;
		}
		_iter_end_1ac0de87d:;
	};
	__jule_func_result.__jule_result_arg0 = _11213_asts;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1b57a5c3e_Imported(_1b57a40a0_JuleImporter* _self_, jule::Ptr<_1b4b9a893_ImportInfo> _15331_imp) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac0e250c:;
		if (it != expr_end) {
			jule::Ptr<_1b4b9a893_ImportInfo> _15516_p = *it;
			{
				if ((((*(_15516_p))._field_Binded == (*(_15331_imp))._field_Binded) && ((*_15516_p.alloc)._field_LinkPath == (*_15331_imp.alloc)._field_LinkPath))) {
					return;;
				};
			}
			_iter_next_1ac0e250c:;
			++it;
			goto _iter_begin_1ac0e250c;
		}
		_iter_end_1ac0e250c:;
	};
	if (((*(_self_))._field_mod.len() != 0LL)) {
		{
			auto expr = &((*(_self_))._field_mods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac0e9a64:;
			if (it != expr_end) {
				jule::I64 _16217_i = it - expr->begin();
				jule::Str _16220_mod = *it;
				{
					if (((*(_self_))._field_mod == _16220_mod)) {
						(*_15331_imp.alloc)._field_ModId=_16217_i;
						goto _julec_label_1ac0ea1d5;
					};
				}
				_iter_next_1ac0e9a64:;
				++it;
				_16217_i++;
				goto _iter_begin_1ac0e9a64;
			}
			_iter_end_1ac0e9a64:;
		};
		(*_15331_imp.alloc)._field_ModId=(*(_self_))._field_mods.len();
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_mods; __jule_push_dest.push((*(_self_))._field_mod); };
		_julec_label_1ac0ea1d5:;
	};
	{ jule::Slice<jule::Ptr<_1b4b9a893_ImportInfo>> &__jule_push_dest = (*(_self_))._field_pkgs; __jule_push_dest.push(_15331_imp); };
}



inline __jule_tuple_bool__jule_tuple_s_1cb285120_Log _1b57a616d_isPassBuildDirectives(_1b57a40a0_JuleImporter* _self_, jule::Ptr<_1b4ae8ca8_Ast>* _17945_file) {
	__jule_tuple_bool__jule_tuple_s_1cb285120_Log __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	{
		auto expr = &((*((*(_17945_file))))._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac0ecb22:;
		if (it != expr_end) {
			jule::Ptr<_1b4aea0d9_Directive> _18021_td = *it;
			{
				if ((!(*((*(_18021_td))._field_Tag))._field_Kind.equal("build", 5))) {
					goto _iter_next_1ac0ecb22;
				};
				_1b4eb3095_directiveEval _18417_de = _1b4eb3095_directiveEval{._field_d=_18021_td, ._field_vars=(*(_self_))._field_vars};;
				jule::Bool _18813_result = _1b4eb4409_eval(&_18417_de);;
				if ((_18417_de._field_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = _18417_de._field_logs;
					return __jule_func_result;;
				};
				if ((!(_18813_result))) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = nullptr;
					return __jule_func_result;;
				};
			}
			_iter_next_1ac0ecb22:;
			++it;
			goto _iter_begin_1ac0ecb22;
		}
		_iter_end_1ac0ecb22:;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1b57a40a0_JuleImporter _Src) {
	_Stream << "JuleImporter{";
	_Stream << "mods:" << _Src._field_mods << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "pkgs:" << _Src._field_pkgs << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b57b4445_OrderedDefines _Src) {
	_Stream << "OrderedDefines{";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Globals:" << _Src._field_Globals;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b5906a0a_liveTable _Src) {
	_Stream << "liveTable{";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "fns:" << _Src._field_fns << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "traits:" << _Src._field_traits;
	_Stream << "}";
	return _Stream;
}



inline void _1b593ac09_optimizeChild(jule::Ptr<_1b593a720_scopeDeadCode> _self_, jule::Ptr<_1b4b7880a_Scope>* _3938_s) {
	jule::Ptr<_1b593a720_scopeDeadCode> _4013_sdc = jule::new_ptr<_1b593a720_scopeDeadCode>(_1b593a720_scopeDeadCode{._field_parent=_self_, ._field_s=(*(_3938_s)), ._field_stmts=(&((*((*(_3938_s))))._field_Stmts)), ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*_self_.alloc)._field_gotos, });;
	{
		_1b593d624_optimizeStmts(_4013_sdc);
	};
}



inline void _1b593aeb2_optimizeBodyChildExceptional(jule::Ptr<_1b593a720_scopeDeadCode> _self_, jule::Ptr<_1b4b7880a_Scope>* _5053_s) {
	jule::Ptr<_1b593a720_scopeDeadCode> _5113_sdc = jule::new_ptr<_1b593a720_scopeDeadCode>(_1b593a720_scopeDeadCode{._field_s=(*(_5053_s)), ._field_stmts=(&((*((*(_5053_s))))._field_Stmts)), ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*_self_.alloc)._field_gotos, ._field_except=true});;
	{
		_1b593d624_optimizeStmts(_5113_sdc);
	};
}



inline void _1b593b26a_optimizeBodyChild(jule::Ptr<_1b593a720_scopeDeadCode> _self_, jule::Ptr<_1b4b7880a_Scope>* _6142_s) {
	jule::Ptr<_1b593a720_scopeDeadCode> _6213_sdc = jule::new_ptr<_1b593a720_scopeDeadCode>(_1b593a720_scopeDeadCode{._field_s=(*(_6142_s)), ._field_stmts=(&((*((*(_6142_s))))._field_Stmts)), ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*_self_.alloc)._field_gotos, });;
	{
		_1b593d624_optimizeStmts(_6213_sdc);
	};
}



inline void _1b593b523_optimizeExprModel(jule::Ptr<_1b593a720_scopeDeadCode> _self_, jule::Any* _7142_model) {
	_1b593e9aa_exprDeadCode _729_edc = static__1b59400e8_new(&(_self_));;
	_1b5946022_optimize(&_729_edc, _7142_model);
}



inline void _1b593b721_eliminateFollowed(_1b593a720_scopeDeadCode* _self_) {
	if (((*((*(_self_))._field_gotos)).len() != 0LL)) {
		return;;
	};
	{
		((*((*(_self_))._field_stmts))).mut_slice(0LL, ((*(_self_))._field_i + 1LL));;
	};
	jule::Ptr<_1b593a720_scopeDeadCode> _8313_parent = (*(_self_))._field_parent;;
	while ((_8313_parent != nullptr)) {
		{
			{
				((*((*(_8313_parent))._field_stmts))).mut_slice(0LL, ((*(_8313_parent))._field_i + 1LL));;
			};
			_8313_parent=(*_8313_parent.alloc)._field_parent;
		}
	_iter_next_1ac1de0ba:;
	}
	_iter_end_1ac1de0ba:;;
}



inline void _1b593b9c9_pushGoto(jule::Ptr<_1b593a720_scopeDeadCode> _self_, jule::Ptr<_1b4b7b577_GotoSt> _9232_gt) {
	jule::I64 _9313_i = 0LL;;
	for (; (_9313_i < (*((*(_self_))._field_labels)).len()); (_9313_i)++) {
		{
			if (((*(_9232_gt))._field_Ident == (*((*(*_self_.alloc)._field_labels.alloc)[_9313_i]))._field_Ident)) {
				return;;
			};
		}
	_iter_next_1ac1e1e69:;
	}
	_iter_end_1ac1e1e69:;;
	(*((*_self_.alloc)._field_gotos))=jule::append((*(*_self_.alloc)._field_gotos.alloc),jule::Slice<jule::Ptr<_1b4b7b577_GotoSt>>::make({_9232_gt}));
}



inline void _1b593bc82_pushLabel(jule::Ptr<_1b593a720_scopeDeadCode> _self_, jule::Ptr<_1b4b7b19d_Label> _10233_l) {
	jule::I64 _10313_i = 0LL;;
	while ((_10313_i < (*((*(_self_))._field_gotos)).len())) {
		{
			if (((*(_10233_l))._field_Ident == (*((*(*_self_.alloc)._field_gotos.alloc)[_10313_i]))._field_Ident)) {
				jule::copy((*((*(_self_))._field_gotos)).slice(_10313_i), (*((*(_self_))._field_gotos)).slice((_10313_i + 1LL)));
				((*((*(_self_))._field_gotos))).mut_slice(0LL, ((*((*(_self_))._field_gotos)).len() - 1LL));;
				goto _iter_next_1ac1e4147;
			};
			(_10313_i)++;
		}
	_iter_next_1ac1e4147:;
	}
	_iter_end_1ac1e4147:;;
	(*((*_self_.alloc)._field_labels))=jule::append((*(*_self_.alloc)._field_labels.alloc),jule::Slice<jule::Ptr<_1b4b7b19d_Label>>::make({_10233_l}));
}



inline void _1b593c03a_optimizeRangeIter(jule::Ptr<_1b593a720_scopeDeadCode> _self_, jule::Ptr<_1b4b7a642_RangeIter> _11541_it) {
	_1b593b523_optimizeExprModel(_self_, &((*((*(_11541_it))._field_Expr))._field_Model));
	_1b593b26a_optimizeBodyChild(_self_, &((*_11541_it.alloc)._field_Scope));
}



inline void _1b593c2e3_optimizeWhileIter(jule::Ptr<_1b593a720_scopeDeadCode> _self_, jule::Ptr<_1b4b79be6_WhileIter> _12041_it) {
	_1b593b523_optimizeExprModel(_self_, &((*(_12041_it))._field_Expr));
	if (((*_12041_it.alloc)._field_Next != nullptr)) {
		_1b593d426_optimizeStmt(_self_, (*_12041_it.alloc)._field_Next);
	};
	_1b593b26a_optimizeBodyChild(_self_, &((*_12041_it.alloc)._field_Scope));
}



inline void _1b593c59b_optimizeInfIter(jule::Ptr<_1b593a720_scopeDeadCode> _self_, jule::Ptr<_1b4b79740_InfIter> _12839_it) {
	_1b593b26a_optimizeBodyChild(_self_, &((*(_12839_it))._field_Scope));
}



inline void _1b593c854_optimizeConditional(jule::Ptr<_1b593a720_scopeDeadCode> _self_, jule::Ptr<_1b4b79443_Conditional> _13243_c) {
	{
		auto expr = &((*(_13243_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac1eaea6:;
		if (it != expr_end) {
			jule::Ptr<_1b4b78c28_If> _13321_case = *it;
			{
				if ((_13321_case != nullptr)) {
					_1b593b523_optimizeExprModel(_self_, &((*_13321_case.alloc)._field_Expr));
					_1b593b26a_optimizeBodyChild(_self_, &((*_13321_case.alloc)._field_Scope));
				};
			}
			_iter_next_1ac1eaea6:;
			++it;
			goto _iter_begin_1ac1eaea6;
		}
		_iter_end_1ac1eaea6:;
	};
	if (((*_13243_c.alloc)._field_Default != nullptr)) {
		if (((*_13243_c.alloc)._field_Elifs.len() == 0LL)) {
			_1b593ac09_optimizeChild(_self_, &((*(*_13243_c.alloc)._field_Default.alloc)._field_Scope));
		} else {
			_1b593b26a_optimizeBodyChild(_self_, &((*(*_13243_c.alloc)._field_Default.alloc)._field_Scope));
		};
	};
}



inline void _1b593cb0c_optimizeMatch(jule::Ptr<_1b593a720_scopeDeadCode> _self_, jule::Ptr<_1b4b7ca1d_Match> _15037_m) {
	{
		auto expr = &((*(_15037_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac1ee4d7:;
		if (it != expr_end) {
			jule::Ptr<_1b4b7d546_Case> _15121_case = *it;
			{
				{
					auto expr = &((*(_15121_case))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac1eee55:;
					if (it != expr_end) {
						jule::Ptr<_1b4c466a8_Data> _15225_expr = *it;
						{
							_1b593b523_optimizeExprModel(_self_, &((*(_15225_expr))._field_Model));
						}
						_iter_next_1ac1eee55:;
						++it;
						goto _iter_begin_1ac1eee55;
					}
					_iter_end_1ac1eee55:;
				};
				_1b593b26a_optimizeBodyChild(_self_, &((*_15121_case.alloc)._field_Scope));
			}
			_iter_next_1ac1ee4d7:;
			++it;
			goto _iter_begin_1ac1ee4d7;
		}
		_iter_end_1ac1ee4d7:;
	};
	if (((*_15037_m.alloc)._field_Default != nullptr)) {
		if (((*_15037_m.alloc)._field_Cases.len() == 0LL)) {
			_1b593ac09_optimizeChild(_self_, &((*(*_15037_m.alloc)._field_Default.alloc)._field_Scope));
		} else {
			_1b593b26a_optimizeBodyChild(_self_, &((*(*_15037_m.alloc)._field_Default.alloc)._field_Scope));
		};
	};
}



inline void _1b593cdb5_optimizeAssign(jule::Ptr<_1b593a720_scopeDeadCode> _self_, jule::Ptr<_1b4b7be07_Assign> _16838_assign) {
	_1b593b523_optimizeExprModel(_self_, &((*((*(_16838_assign))._field_Left))._field_Model));
	_1b593b523_optimizeExprModel(_self_, &((*((*_16838_assign.alloc)._field_Right))._field_Model));
}



inline void _1b593d16d_optimizeMultiAssign(jule::Ptr<_1b593a720_scopeDeadCode> _self_, jule::Ptr<_1b4b7c3ad_MultiAssign> _17343_assign) {
	{
		auto expr = &((*(_17343_assign))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac2042cd:;
		if (it != expr_end) {
			jule::Ptr<_1b4c466a8_Data> _17421_l = *it;
			{
				if ((_17421_l != nullptr)) {
					_1b593b523_optimizeExprModel(_self_, &((*_17421_l.alloc)._field_Model));
				};
			}
			_iter_next_1ac2042cd:;
			++it;
			goto _iter_begin_1ac2042cd;
		}
		_iter_end_1ac2042cd:;
	};
	_1b593b523_optimizeExprModel(_self_, &((*_17343_assign.alloc)._field_Right));
}



inline void _1b593d426_optimizeStmt(jule::Ptr<_1b593a720_scopeDeadCode> _self_, jule::Any _18236_st) {
	{
		auto &_match_expr{ _18236_st };
		
		if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1ac205e4a:;
			{
				jule::Ptr<_1b4b7880a_Scope> _18517_scope = _18236_st.unsafe_cast_ptr<_1b4b7880a_Scope>();;
				if ((*(_18517_scope))._field_Deferred) {
					_1b593d954_eliminateDeadCodeOfScope(_18517_scope);
				} else {
					_1b593ac09_optimizeChild(_self_, &(_18517_scope));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1ac205bc5:;
			{
				_1b593c03a_optimizeRangeIter(_self_, _18236_st.unsafe_cast_ptr<_1b4b7a642_RangeIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1ac205ec2:;
			{
				_1b593c2e3_optimizeWhileIter(_self_, _18236_st.unsafe_cast_ptr<_1b4b79be6_WhileIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1ac206049:;
			{
				_1b593c59b_optimizeInfIter(_self_, _18236_st.unsafe_cast_ptr<_1b4b79740_InfIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1ac2060c1:;
			{
				_1b593c854_optimizeConditional(_self_, _18236_st.unsafe_cast_ptr<_1b4b79443_Conditional>());
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1ac206148:;
			{
				_1b593cb0c_optimizeMatch(_self_, _18236_st.unsafe_cast_ptr<_1b4b7ca1d_Match>());
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1ac2061c0:;
			{
				_1b593cdb5_optimizeAssign(_self_, _18236_st.unsafe_cast_ptr<_1b4b7be07_Assign>());
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1ac206247:;
			{
				_1b593d16d_optimizeMultiAssign(_self_, _18236_st.unsafe_cast_ptr<_1b4b7c3ad_MultiAssign>());
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1ac2062be:;
			{
				jule::Ptr<_1b4c466a8_Data> _20617_d = _18236_st.unsafe_cast_ptr<_1b4c466a8_Data>();;
				if ((*(_self_))._field_except) {
					goto _match_end_1ac205d07;
				};
				{
					auto &_match_expr{ (*(_20617_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type22 || _match_expr.type == &__jule_any_type28) {
						_case_begin_1ac20c083:;
						{
							_1b593b721_eliminateFollowed(_self_);
						}
					}
					else {
						_case_begin_1ac20c319:;
						{
							_1b593b523_optimizeExprModel(_self_, &((*(_20617_d))._field_Model));
						}
					}
					_match_end_1ac20c2b4:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1ac206346:;
			{
				_1b593b721_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1ac2063bd:;
			{
				_1b593b9c9_pushGoto(_self_, _18236_st.unsafe_cast_ptr<_1b4b7b577_GotoSt>());
				_1b593b721_eliminateFollowed(_self_);
			}
		}
		else if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1ac206445:;
			{
				_1b593bc82_pushLabel(_self_, _18236_st.unsafe_cast_ptr<_1b4b7b19d_Label>());
			}
		}
		_match_end_1ac205d07:;
	};
}



inline void _1b593d624_optimizeStmts(jule::Ptr<_1b593a720_scopeDeadCode> _self_) {
	(*(_self_))._field_i=0LL;
	for (; ((*_self_.alloc)._field_i < (*((*_self_.alloc)._field_stmts)).len()); ((*_self_.alloc)._field_i)++) {
		{
			_1b593d426_optimizeStmt(_self_, (*((*_self_.alloc)._field_stmts))[(*_self_.alloc)._field_i]);
		}
	_iter_next_1ac20ec23:;
	}
	_iter_end_1ac20ec23:;;
}





std::ostream &operator<<(std::ostream &_Stream, _1b593a720_scopeDeadCode _Src) {
	_Stream << "scopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "except:" << _Src._field_except;
	_Stream << "}";
	return _Stream;
}



inline _1b593e9aa_exprDeadCode static__1b59400e8_new(jule::Ptr<_1b593a720_scopeDeadCode>* _4824_s) {
	return _1b593e9aa_exprDeadCode{._field_s=(*(_4824_s))};;
}



inline void _1b59403a1_binary(_1b593e9aa_exprDeadCode* _self_, jule::Ptr<_1b4b28a41_BinaryExprModel> _5425_m) {
	_1b5946022_optimize(_self_, &((*((*(_5425_m))._field_Left))._field_Model));
	_1b5946022_optimize(_self_, &((*((*_5425_m.alloc)._field_Right))._field_Model));
}



inline void _1b5940659_unary(_1b593e9aa_exprDeadCode* _self_, jule::Ptr<_1b4b28e1a_UnaryExprModel> _5924_m) {
	_1b5946022_optimize(_self_, &((*((*(_5924_m))._field_Expr))._field_Model));
}



inline void _1b5940912_structureLit(_1b593e9aa_exprDeadCode* _self_, jule::Ptr<_1b4b297de_StructLitExprModel> _6331_m) {
	{
		auto expr = &((*(_6331_m))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac213584:;
		if (it != expr_end) {
			jule::Ptr<_1b4b29448_StructArgExprModel> _6421_arg = *it;
			{
				_1b5946022_optimize(_self_, &((*((*(_6421_arg))._field_Expr))._field_Model));
			}
			_iter_next_1ac213584:;
			++it;
			goto _iter_begin_1ac213584;
		}
		_iter_end_1ac213584:;
	};
}



inline void _1b5940bba_allocStructure(_1b593e9aa_exprDeadCode* _self_, jule::Ptr<_1b4b29adb_AllocStructLitExprModel> _6933_m) {
	_1b5940912_structureLit(_self_, (*(_6933_m))._field_Lit);
}



inline void _1b5940e73_casting(_1b593e9aa_exprDeadCode* _self_, jule::Ptr<_1b4b2a16e_CastingExprModel> _7326_m) {
	_1b5946022_optimize(_self_, &((*((*(_7326_m))._field_Expr))._field_Model));
}



inline void _1b594122b_args(_1b593e9aa_exprDeadCode* _self_, jule::Slice<jule::Any>* _7724_args) {
	{
		auto expr = _7724_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac215b80:;
		if (it != expr_end) {
			jule::Any _7821_arg = *it;
			{
				_1b5946022_optimize(_self_, &(_7821_arg));
			}
			_iter_next_1ac215b80:;
			++it;
			goto _iter_begin_1ac215b80;
		}
		_iter_end_1ac215b80:;
	};
}



inline void _1b59414d4_funcCall(_1b593e9aa_exprDeadCode* _self_, jule::Ptr<_1b4b2aa21_FnCallExprModel> _8327_m) {
	_1b5946022_optimize(_self_, &((*(_8327_m))._field_Expr));
	_1b594122b_args(_self_, &((*_8327_m.alloc)._field_Args));
	if (((*_8327_m.alloc)._field_Except != nullptr)) {
		_1b593aeb2_optimizeBodyChildExceptional((*(_self_))._field_s, &((*_8327_m.alloc)._field_Except));
	};
}



inline void _1b594178c_slice(_1b593e9aa_exprDeadCode* _self_, jule::Ptr<_1b4b2adea_SliceExprModel> _9124_m) {
	_1b594122b_args(_self_, &((*(_9124_m))._field_Elems));
}



inline void _1b5941a45_array(_1b593e9aa_exprDeadCode* _self_, jule::Ptr<_1b4b2de0e_ArrayExprModel> _9524_m) {
	if ((((*(_9524_m))._field_Elems.len() == 2LL) && ((*_9524_m.alloc)._field_Elems[1LL] == nullptr))) {
		_1b5946022_optimize(_self_, &((*_9524_m.alloc)._field_Elems[0LL]));
	};
	_1b594122b_args(_self_, &((*_9524_m.alloc)._field_Elems));
}



inline void _1b5941ced_indexing(_1b593e9aa_exprDeadCode* _self_, jule::Ptr<_1b4b2b3a1_IndexingExprModel> _10227_m) {
	_1b5946022_optimize(_self_, &((*((*(_10227_m))._field_Expr))._field_Model));
	_1b5946022_optimize(_self_, &((*((*_10227_m.alloc)._field_Index))._field_Model));
}



inline void _1b59420a6_anonFunc(_1b593e9aa_exprDeadCode* _self_, jule::Ptr<_1b4b2b857_AnonFnExprModel> _10727_m) {
	_1b593d954_eliminateDeadCodeOfScope((*((*(_10727_m))._field_Func))._field_Scope);
}



inline void _1b594235e_mapExpr(_1b593e9aa_exprDeadCode* _self_, jule::Ptr<_1b4b2c1d7_MapExprModel> _11126_m) {
	{
		auto expr = &((*(_11126_m))._field_Entries);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac21b977:;
		if (it != expr_end) {
			jule::Ptr<_1b4b2bc31_KeyValPairExprModel> _11221_pair = *it;
			{
				_1b5946022_optimize(_self_, &((*(_11221_pair))._field_Key));
				_1b5946022_optimize(_self_, &((*_11221_pair.alloc)._field_Val));
			}
			_iter_next_1ac21b977:;
			++it;
			goto _iter_begin_1ac21b977;
		}
		_iter_end_1ac21b977:;
	};
}



inline void _1b5942617_slicing(_1b593e9aa_exprDeadCode* _self_, jule::Ptr<_1b4b2c76a_SlicingExprModel> _11826_m) {
	_1b5946022_optimize(_self_, &((*(_11826_m))._field_Expr));
	_1b5946022_optimize(_self_, &((*_11826_m.alloc)._field_Left));
	if (((*_11826_m.alloc)._field_Right != nullptr)) {
		_1b5946022_optimize(_self_, &((*_11826_m.alloc)._field_Right));
	};
}



inline void _1b59428c0_traitSub(_1b593e9aa_exprDeadCode* _self_, jule::Ptr<_1b4b2cced_TraitSubIdentExprModel> _12627_m) {
	_1b5946022_optimize(_self_, &((*(_12627_m))._field_Expr));
}



inline void _1b5942b78_structureSub(_1b593e9aa_exprDeadCode* _self_, jule::Ptr<_1b4b2d68e_StructSubIdentExprModel> _13031_m) {
	_1b5946022_optimize(_self_, &((*((*(_13031_m))._field_Expr))._field_Model));
}



inline void _1b5942e31_tuple(_1b593e9aa_exprDeadCode* _self_, jule::Ptr<_1b4b2e20b_TupleExprModel> _13424_m) {
	{
		auto expr = &((*(_13424_m))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac2212a6:;
		if (it != expr_end) {
			jule::Ptr<_1b4c466a8_Data> _13521_d = *it;
			{
				_1b5946022_optimize(_self_, &((*(_13521_d))._field_Model));
			}
			_iter_next_1ac2212a6:;
			++it;
			goto _iter_begin_1ac2212a6;
		}
		_iter_end_1ac2212a6:;
	};
}



inline void _1b59431d9_newCall(_1b593e9aa_exprDeadCode* _self_, jule::Ptr<_1b4b2ed88_BuiltinNewCallExprModel> _14026_m) {
	if (((*(_14026_m))._field_Init != nullptr)) {
		_1b5946022_optimize(_self_, &((*_14026_m.alloc)._field_Init));
	};
}



inline void _1b5943492_outCall(_1b593e9aa_exprDeadCode* _self_, jule::Ptr<_1b4b2e5d5_BuiltinOutCallExprModel> _14626_m) {
	_1b5946022_optimize(_self_, &((*(_14626_m))._field_Expr));
}



inline void _1b594374a_outlnCall(_1b593e9aa_exprDeadCode* _self_, jule::Ptr<_1b4b2e9ae_BuiltinOutlnCallExprModel> _15028_m) {
	_1b5946022_optimize(_self_, &((*(_15028_m))._field_Expr));
}



inline void _1b5943a03_panicCall(_1b593e9aa_exprDeadCode* _self_, jule::Ptr<_1b4b30262_BuiltinPanicCallExprModel> _15428_m) {
	_1b5946022_optimize(_self_, &((*(_15428_m))._field_Expr));
}



inline void _1b5943cab_assertCall(_1b593e9aa_exprDeadCode* _self_, jule::Ptr<_1b4b30718_BuiltinAssertCallExprModel> _15829_m) {
	_1b5946022_optimize(_self_, &((*(_15829_m))._field_Expr));
}



inline void _1b5944064_errorCall(_1b593e9aa_exprDeadCode* _self_, jule::Ptr<_1b4b3231e_BuiltinErrorCallExprModel> _16228_m) {
	_1b5946022_optimize(_self_, &((*((*(_16228_m))._field_Err))._field_Model));
}



inline void _1b594431c_makeCall(_1b593e9aa_exprDeadCode* _self_, jule::Ptr<_1b4b30bbe_BuiltinMakeCallExprModel> _16627_m) {
	if (((*(_16627_m))._field_Len != nullptr)) {
		_1b5946022_optimize(_self_, &((*_16627_m.alloc)._field_Len));
	};
	if (((*_16627_m.alloc)._field_Cap != nullptr)) {
		_1b5946022_optimize(_self_, &((*_16627_m.alloc)._field_Cap));
	};
}



inline void _1b59445c5_appendCall(_1b593e9aa_exprDeadCode* _self_, jule::Ptr<_1b4b31098_BuiltinAppendCallExprModel> _17529_m) {
	_1b5946022_optimize(_self_, &((*(_17529_m))._field_Dest));
	_1b5946022_optimize(_self_, &((*_17529_m.alloc)._field_Elements));
}



inline void _1b594487d_lenCall(_1b593e9aa_exprDeadCode* _self_, jule::Ptr<_1b4b31395_BuiltinLenCallExprModel> _18026_m) {
	_1b5946022_optimize(_self_, &((*((*(_18026_m))._field_Expr))._field_Model));
}



inline void _1b5944b36_capCall(_1b593e9aa_exprDeadCode* _self_, jule::Ptr<_1b4b31692_BuiltinCapCallExprModel> _18426_m) {
	_1b5946022_optimize(_self_, &((*((*(_18426_m))._field_Expr))._field_Model));
}



inline void _1b5944dde_deleteCall(_1b593e9aa_exprDeadCode* _self_, jule::Ptr<_1b4b31a6b_BuiltinDeleteCallExprModel> _18829_m) {
	_1b5946022_optimize(_self_, &((*((*(_18829_m))._field_Dest))._field_Model));
	if (((*_18829_m.alloc)._field_Key != nullptr)) {
		_1b5946022_optimize(_self_, &((*(*_18829_m.alloc)._field_Key.alloc)._field_Model));
	};
}



inline void _1b5945197_sizeof(_1b593e9aa_exprDeadCode* _self_, jule::Ptr<_1b4b329c3_SizeofExprModel> _19525_m) {
	_1b5946022_optimize(_self_, &((*(_19525_m))._field_Expr));
}



inline void _1b5945450_alignof(_1b593e9aa_exprDeadCode* _self_, jule::Ptr<_1b4b32bb0_AlignofExprModel> _19926_m) {
	_1b5946022_optimize(_self_, &((*(_19926_m))._field_Expr));
}



inline void _1b5945708_integratedToStr(_1b593e9aa_exprDeadCode* _self_, jule::Ptr<_1b4b33254_IntegratedToStrExprModel> _20334_m) {
	_1b5946022_optimize(_self_, &((*(_20334_m))._field_Expr));
}



inline void _1b59459b1_free(_1b593e9aa_exprDeadCode* _self_, jule::Ptr<_1b4b3392a_FreeExprModel> _20723_m) {
	_1b5946022_optimize(_self_, &((*(_20723_m))._field_Expr));
}



inline void _1b5945c69_backendEmit(_1b593e9aa_exprDeadCode* _self_, jule::Ptr<_1b4b3362d_BackendEmitExprModel> _21130_m) {
	_1b594122b_args(_self_, &((*(_21130_m))._field_Exprs));
}



inline void _1b5946022_optimize(_1b593e9aa_exprDeadCode* _self_, jule::Any* _21528_model) {
	{
		auto &_match_expr{ (*(_21528_model)) };
		
		if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1ac22e58e:;
			{
				_1b59403a1_binary(_self_, (*(_21528_model)).cast_ptr<_1b4b28a41_BinaryExprModel>(&__jule_any_type111));
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1ac22e1b5:;
			{
				_1b5940659_unary(_self_, (*(_21528_model)).cast_ptr<_1b4b28e1a_UnaryExprModel>(&__jule_any_type110));
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1ac22e616:;
			{
				_1b5940912_structureLit(_self_, (*(_21528_model)).cast_ptr<_1b4b297de_StructLitExprModel>(&__jule_any_type95));
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1ac22e68d:;
			{
				_1b5940bba_allocStructure(_self_, (*(_21528_model)).cast_ptr<_1b4b29adb_AllocStructLitExprModel>(&__jule_any_type112));
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1ac22e715:;
			{
				_1b5940e73_casting(_self_, (*(_21528_model)).cast_ptr<_1b4b2a16e_CastingExprModel>(&__jule_any_type93));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1ac22e78c:;
			{
				_1b59414d4_funcCall(_self_, (*(_21528_model)).cast_ptr<_1b4b2aa21_FnCallExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1ac22e814:;
			{
				_1b594178c_slice(_self_, (*(_21528_model)).cast_ptr<_1b4b2adea_SliceExprModel>(&__jule_any_type76));
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1ac22e88b:;
			{
				_1b5941a45_array(_self_, (*(_21528_model)).cast_ptr<_1b4b2de0e_ArrayExprModel>(&__jule_any_type85));
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1ac22e913:;
			{
				_1b5941ced_indexing(_self_, (*(_21528_model)).cast_ptr<_1b4b2b3a1_IndexingExprModel>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1ac22e98a:;
			{
				_1b59420a6_anonFunc(_self_, (*(_21528_model)).cast_ptr<_1b4b2b857_AnonFnExprModel>(&__jule_any_type100));
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1ac22ea12:;
			{
				_1b594235e_mapExpr(_self_, (*(_21528_model)).cast_ptr<_1b4b2c1d7_MapExprModel>(&__jule_any_type99));
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1ac22ea89:;
			{
				_1b5942617_slicing(_self_, (*(_21528_model)).cast_ptr<_1b4b2c76a_SlicingExprModel>(&__jule_any_type92));
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1ac22eb11:;
			{
				_1b59428c0_traitSub(_self_, (*(_21528_model)).cast_ptr<_1b4b2cced_TraitSubIdentExprModel>(&__jule_any_type97));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1ac22eb88:;
			{
				_1b5942b78_structureSub(_self_, (*(_21528_model)).cast_ptr<_1b4b2d68e_StructSubIdentExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1ac22ec10:;
			{
				_1b5942e31_tuple(_self_, (*(_21528_model)).cast_ptr<_1b4b2e20b_TupleExprModel>(&__jule_any_type81));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1ac22ec87:;
			{
				_1b5943492_outCall(_self_, (*(_21528_model)).cast_ptr<_1b4b2e5d5_BuiltinOutCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1ac22ed0e:;
			{
				_1b594374a_outlnCall(_self_, (*(_21528_model)).cast_ptr<_1b4b2e9ae_BuiltinOutlnCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1ac22ed86:;
			{
				_1b59431d9_newCall(_self_, (*(_21528_model)).cast_ptr<_1b4b2ed88_BuiltinNewCallExprModel>(&__jule_any_type113));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1ac22ee0d:;
			{
				_1b5943a03_panicCall(_self_, (*(_21528_model)).cast_ptr<_1b4b30262_BuiltinPanicCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1ac22ee85:;
			{
				_1b5943cab_assertCall(_self_, (*(_21528_model)).cast_ptr<_1b4b30718_BuiltinAssertCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1ac23000c:;
			{
				_1b5944064_errorCall(_self_, (*(_21528_model)).cast_ptr<_1b4b3231e_BuiltinErrorCallExprModel>(&__jule_any_type22));
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1ac230084:;
			{
				_1b594431c_makeCall(_self_, (*(_21528_model)).cast_ptr<_1b4b30bbe_BuiltinMakeCallExprModel>(&__jule_any_type114));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1ac23010b:;
			{
				_1b59445c5_appendCall(_self_, (*(_21528_model)).cast_ptr<_1b4b31098_BuiltinAppendCallExprModel>(&__jule_any_type25));
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1ac230183:;
			{
				_1b594487d_lenCall(_self_, (*(_21528_model)).cast_ptr<_1b4b31395_BuiltinLenCallExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1ac23020a:;
			{
				_1b5944b36_capCall(_self_, (*(_21528_model)).cast_ptr<_1b4b31692_BuiltinCapCallExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1ac230282:;
			{
				_1b5944dde_deleteCall(_self_, (*(_21528_model)).cast_ptr<_1b4b31a6b_BuiltinDeleteCallExprModel>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1ac230309:;
			{
				_1b5945197_sizeof(_self_, (*(_21528_model)).cast_ptr<_1b4b329c3_SizeofExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1ac230381:;
			{
				_1b5945450_alignof(_self_, (*(_21528_model)).cast_ptr<_1b4b32bb0_AlignofExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1ac230408:;
			{
				_1b5945708_integratedToStr(_self_, (*(_21528_model)).cast_ptr<_1b4b33254_IntegratedToStrExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1ac230480:;
			{
				_1b59459b1_free(_self_, (*(_21528_model)).cast_ptr<_1b4b3392a_FreeExprModel>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1ac230507:;
			{
				_1b5945c69_backendEmit(_self_, (*(_21528_model)).cast_ptr<_1b4b3362d_BackendEmitExprModel>(&__jule_any_type24));
			}
		}
		_match_end_1ac22e2e7:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1b593e9aa_exprDeadCode _Src) {
	_Stream << "exprDeadCode{";
	_Stream << "s:" << _Src._field_s;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4d710da_ExceptionalForwardingExprModel _Src) {
	_Stream << "ExceptionalForwardingExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4d71470_SwapExprModel _Src) {
	_Stream << "SwapExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4d71849_EmptyCompareExprModel _Src) {
	_Stream << "EmptyCompareExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Neg:" << _Src._field_Neg;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4d71bbd_RefExprModel _Src) {
	_Stream << "RefExprModel{";
	_Stream << "Var:" << _Src._field_Var;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4d72141_StrCompExprModel _Src) {
	_Stream << "StrCompExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "NotEq:" << _Src._field_NotEq;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4d726c4_MutSlicingExprModel _Src) {
	_Stream << "MutSlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4d729c1_UnsafeBinaryExprModel _Src) {
	_Stream << "UnsafeBinaryExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4d72d56_UnsafeIndexingExprModel _Src) {
	_Stream << "UnsafeIndexingExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4d73230_PushToSliceExprModel _Src) {
	_Stream << "PushToSliceExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4d73609_AppendToSliceExprModel _Src) {
	_Stream << "AppendToSliceExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Slice:" << _Src._field_Slice;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4d739d3_StrRuneIter _Src) {
	_Stream << "StrRuneIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Base:" << _Src._field_Base;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4d73cd0_UnsafeDerefExprModel _Src) {
	_Stream << "UnsafeDerefExprModel{";
	_Stream << "Base:" << _Src._field_Base;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4d740cc_UnsafeCastingExprModel _Src) {
	_Stream << "UnsafeCastingExprModel{";
	_Stream << "Base:" << _Src._field_Base;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4d74cae_nilVar _Src) {
	_Stream << "nilVar{";
	_Stream << "var:" << _Src._field_var << ", ";
	_Stream << "safe:" << _Src._field_safe;
	_Stream << "}";
	return _Stream;
}



inline void _1b4d75562_pushVar(_1b4d75100_nils* _self_, jule::Uintptr _2926_var, jule::Bool _2940_safe) {
	if (((!(_1b57cee66_Access)) || (_2926_var == 0LLU))) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac295a34:;
		if (it != expr_end) {
			_1b4d74cae_nilVar _3421_v = *it;
			{
				if ((_3421_v._field_var == _2926_var)) {
					_3421_v._field_safe=_2940_safe;
					return;;
				};
			}
			_iter_next_1ac295a34:;
			++it;
			goto _iter_begin_1ac295a34;
		}
		_iter_end_1ac295a34:;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac2957e2:;
		if (it != expr_end) {
			_1b4d74cae_nilVar _4121_v = *it;
			{
				if ((_4121_v._field_var == 0LLU)) {
					_4121_v._field_var=_2926_var;
					_4121_v._field_safe=_2940_safe;
					return;;
				};
			}
			_iter_next_1ac2957e2:;
			++it;
			goto _iter_begin_1ac2957e2;
		}
		_iter_end_1ac2957e2:;
	};
	{ jule::Slice<_1b4d74cae_nilVar> &__jule_push_dest = (*(_self_))._field_vars; __jule_push_dest.push(_1b4d74cae_nilVar{._field_var=_2926_var, ._field_safe=_2940_safe}); };
}



inline jule::Bool _1b4d758a3_removeVar(_1b4d75100_nils* _self_, jule::Uintptr _5228_var) {
	if ((_5228_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac29821d:;
			if (it != expr_end) {
				_1b4d74cae_nilVar _5425_v = *it;
				{
					if ((_5425_v._field_var == _5228_var)) {
						_5425_v._field_var=0LLU;
						_5425_v._field_safe=false;
						return true;;
					};
				}
				_iter_next_1ac29821d:;
				++it;
				goto _iter_begin_1ac29821d;
			}
			_iter_end_1ac29821d:;
		};
	};
	return false;;
}



inline jule::Bool _1b4d75be4_isSafe(_1b4d75100_nils* _self_, jule::Uintptr _6625_var) {
	if ((_6625_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac29987e:;
			if (it != expr_end) {
				_1b4d74cae_nilVar _6820_v = *it;
				{
					if ((_6820_v._field_var == _6625_var)) {
						return _6820_v._field_safe;;
					};
				}
				_iter_next_1ac29987e:;
				++it;
				goto _iter_begin_1ac29987e;
			}
			_iter_end_1ac29987e:;
		};
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4d75100_nils _Src) {
	_Stream << "nils{";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b57b5aa6_scopeOptimizer> static__1b57b6128_new(jule::Ptr<_1b4b7880a_Scope> _5123_scope) {
	jule::Ptr<_1b57b5aa6_scopeOptimizer> _5213_sc = jule::new_ptr<_1b57b5aa6_scopeOptimizer>(_1b57b5aa6_scopeOptimizer{._field_scope=_5123_scope, ._field_data=jule::new_ptr<_1b57c9c74_data>(_1b57c9c74_data{._field_boundary=jule::new_ptr<_1b57cb66b_boundary>(), ._field_nils=jule::new_ptr<_1b4d75100_nils>(), ._field_dynamic=jule::new_ptr<_1b57c70e5_dynamic>()})});;
	return _5213_sc;;
}



inline void _1b57b63d1_setCurrentStmt(jule::Ptr<_1b57b5aa6_scopeOptimizer> _self_, jule::Any _6338_stmt) {
	(*((*(_self_))._field_scope))._field_Stmts[(*_self_.alloc)._field_i]=(*(((jule::Any*)((&(_6338_stmt))))));
}



inline void _1b57b65ce_removeCurrent(jule::Ptr<_1b57b5aa6_scopeOptimizer> _self_) {
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts.slice(0LL, (*_self_.alloc)._field_i),(*(*_self_.alloc)._field_scope.alloc)._field_Stmts.slice(((*_self_.alloc)._field_i + 1LL)));
}



inline jule::Bool _1b57b6865_isLastStmt(jule::Ptr<_1b57b5aa6_scopeOptimizer> _self_) {
	jule::Ptr<_1b57b5aa6_scopeOptimizer> _7313_r = _self_;;
	for (; (_7313_r != nullptr); _7313_r=(*_7313_r.alloc)._field_parent) {
		{
			if ((((*((*_7313_r.alloc)._field_scope))._field_Stmts.len() - (*_7313_r.alloc)._field_i) != 1LL)) {
				return false;;
			};
		}
	_iter_next_1ac2a6aab:;
	}
	_iter_end_1ac2a6aab:;;
	return true;;
}



inline jule::Bool _1b57b6aeb_isIter(jule::Ptr<_1b57b5aa6_scopeOptimizer> _self_) {
	jule::Ptr<_1b57b5aa6_scopeOptimizer> _8313_r = (*(_self_))._field_parent;;
	for (; (_8313_r != nullptr); _8313_r=(*_8313_r.alloc)._field_parent) {
		{
			{
				auto &_match_expr{ (*((*(_8313_r))._field_scope))._field_Stmts[(*(_8313_r))._field_i] };
				
				if (_match_expr.type == &__jule_any_type39 || _match_expr.type == &__jule_any_type37 || _match_expr.type == &__jule_any_type35) {
					_case_begin_1ac2a931c:;
					{
						return true;;
					}
				}
				_match_end_1ac2a9284:;
			};
		}
	_iter_next_1ac2a86a1:;
	}
	_iter_end_1ac2a86a1:;;
	return false;;
}



inline void _1b57b6da4_optimizeData(jule::Ptr<_1b57b5aa6_scopeOptimizer> _self_, jule::Ptr<_1b4c466a8_Data> _9536_d) {
	{
		auto &_match_expr{ (*(_9536_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1ac2aa4b6:;
			{
				jule::Ptr<_1b4b2aa21_FnCallExprModel> _9817_m = (*(_9536_d))._field_Model.unsafe_cast_ptr<_1b4b2aa21_FnCallExprModel>();;
				if (_20c58021e_Production) {
					if (((!(_1b4b3acea_IsBuiltin((*(_9817_m))._field_Func.ptr()))) && _1b57b208b_IsStdPackage(&((*((*((*((*(*_9817_m.alloc)._field_Func.alloc)._field_Decl))._field_Token))._field_File))._field_Path), jule::Str::lit("debug", 5)))) {
						_1b57b63d1_setCurrentStmt(_self_, nullptr);
						return;;
					};
				};
				static__1b57bcb68_optimizeData(&((*(_9536_d))._field_Model), &((*_self_.alloc)._field_data));
				if (((((((_1b57d13da_Exceptional && (*(*(*_9817_m.alloc)._field_Func.alloc)._field_Decl.alloc)._field_Exceptional) && ((*_9817_m.alloc)._field_Except != nullptr)) && ((*(*_9817_m.alloc)._field_Except.alloc)._field_Stmts.len() == 1LL)) && _1b57b0be4_IsForwarded(&((*_9817_m.alloc)._field_Except))) && _1b57b6865_isLastStmt(_self_)) && (!(_1b57b6aeb_isIter(_self_))))) {
					_1b57b63d1_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1b4d710da_ExceptionalForwardingExprModel>(_1b4d710da_ExceptionalForwardingExprModel{._field_Expr=_9817_m}), &__jule_any_type120));
				};
				return;;
			}
		}
		_match_end_1ac2aa450:;
	};
	static__1b57bcb68_optimizeData(&((*_9536_d.alloc)._field_Model), &((*_self_.alloc)._field_data));
}



inline void _1b57b715c_optimizeVar(jule::Ptr<_1b57b5aa6_scopeOptimizer> _self_, jule::Ptr<_1b4bddaa1_Var> _12135_v) {
	if (((*(_12135_v))._field_Value != nullptr)) {
		if (((((*((*(_self_))._field_data))._field_nils != nullptr) && _1b4d76761_isNilValidType((*((*_12135_v.alloc)._field_Kind))._field_Kind)) && _1b4d76497_isGuaranteedNonNilExpr(&((*(*_self_.alloc)._field_data.alloc)._field_nils), (*((*(*_12135_v.alloc)._field_Value.alloc)._field_Data))._field_Model))) {
			;
			_1b4d75562_pushVar((*(*_self_.alloc)._field_data.alloc)._field_nils, _1b4d76aa2_getNilVar(jule::Any(_12135_v, &__jule_any_type8)), true);
		};
		if (((*(*_self_.alloc)._field_data.alloc)._field_dynamic != nullptr)) {
			jule::Ptr<_1b4c7c90e_TypeKind> _13021_kind = _1b57c88bb_isTypeGuaranteedDynamicData(&((*(*_self_.alloc)._field_data.alloc)._field_dynamic), (*(*_12135_v.alloc)._field_Kind.alloc)._field_Kind, (*(*(*_12135_v.alloc)._field_Value.alloc)._field_Data.alloc)._field_Model);;
			if ((_13021_kind != nullptr)) {
				if (_1b57c848c_isDynamicValidType((*(*_12135_v.alloc)._field_Kind.alloc)._field_Kind)) {
					_1b57c7557_pushVar((*(*_self_.alloc)._field_data.alloc)._field_dynamic, _1b57c8c0c_getDynamicVar(jule::Any(_12135_v, &__jule_any_type8)), _13021_kind);
				};
			};
		};
		static__1b57bcb68_optimizeData(&((*(*(*_12135_v.alloc)._field_Value.alloc)._field_Data.alloc)._field_Model), &((*_self_.alloc)._field_data));
	};
}



inline void _1b57b7415_optimizeConditional(jule::Ptr<_1b57b5aa6_scopeOptimizer> _self_, jule::Ptr<_1b4b79443_Conditional> _14243_c) {
	_1b57c9779_dataCheckpoint _14313_checkpoint = _1b57ca0e8_getCheckpoint((*(_self_))._field_data.ptr());;
	{
		auto expr = &((*_14243_c.alloc)._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac2b89ad:;
		if (it != expr_end) {
			jule::Ptr<_1b4b78c28_If> _14421_elif = *it;
			{
				static__1b57bcb68_optimizeData(&((*(_14421_elif))._field_Expr), &((*_self_.alloc)._field_data));
				_1b57ba094_optimizeChild(_self_, (*_14421_elif.alloc)._field_Scope);
				if ((((*(_14243_c))._field_Elifs.len() > 1LL) || ((*_14243_c.alloc)._field_Default != nullptr))) {
					_1b57ca3a1_loadCheckpoint((*_self_.alloc)._field_data, &(_14313_checkpoint));
				};
			}
			_iter_next_1ac2b89ad:;
			++it;
			goto _iter_begin_1ac2b89ad;
		}
		_iter_end_1ac2b89ad:;
	};
	if (((*_14243_c.alloc)._field_Default != nullptr)) {
		_1b57ba094_optimizeChild(_self_, (*(*_14243_c.alloc)._field_Default.alloc)._field_Scope);
		_1b57ca3a1_loadCheckpoint((*_self_.alloc)._field_data, &(_14313_checkpoint));
	};
	if ((!(_1b57d0890_Cond))) {
		return;;
	};
	jule::Bool _16013_constCase = false;;
	{
		auto expr = &((*_14243_c.alloc)._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac2bc5e9:;
		if (it != expr_end) {
			jule::I64 _16314_i = it - expr->begin();
			jule::Ptr<_1b4b78c28_If> _16321_elif = *it;
			{
				if ((!(_1b57ba65a_isConstantValidConditionalCase(&(_16321_elif))))) {
					goto _iter_next_1ac2bc5e9;
				};
				_16013_constCase=true;
				((*(_14243_c))._field_Elifs).mut_slice(0LL, _16314_i);;
				(*_14243_c.alloc)._field_Default=jule::new_ptr<_1b4b79025_Else>(_1b4b79025_Else{._field_Scope=(*(_16321_elif))._field_Scope});
				goto _iter_end_1ac2bc5e9;
			}
			_iter_next_1ac2bc5e9:;
			++it;
			_16314_i++;
			goto _iter_begin_1ac2bc5e9;
		}
		_iter_end_1ac2bc5e9:;
	};
	if (((*_14243_c.alloc)._field_Elifs.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1b4b78c28_If>* _18013_i = (&((*_14243_c.alloc)._field_Elifs[0LL]));;
	jule::Ptr<_1b4b78c28_If>* _1819_end = (&((*_14243_c.alloc)._field_Elifs[((*_14243_c.alloc)._field_Elifs.len() - 1LL)]));;
	for (; (_18013_i <= _1819_end); (_18013_i)++) {
		{
			{
				if (_1b57bb073_isUnreachableConditionalCase(&((*(_18013_i))))) {
					(*(_18013_i))=nullptr;
				};
			};
		}
	_iter_next_1ac2c0267:;
	}
	_iter_end_1ac2c0267:;;
	if (((*_14243_c.alloc)._field_Elifs.len() == 0LL)) {
		return;;
	};
	if ((!(_16013_constCase))) {
		return;;
	};
	jule::I64 _19913_only = -1LL;;
	{
		auto expr = &((*_14243_c.alloc)._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac2c2588:;
		if (it != expr_end) {
			jule::I64 _20013_j = it - expr->begin();
			jule::Ptr<_1b4b78c28_If> _20016_elif = *it;
			{
				if ((_20016_elif != nullptr)) {
					if ((_19913_only != -1LL)) {
						return;;
					};
					_19913_only=_20013_j;
				};
			}
			_iter_next_1ac2c2588:;
			++it;
			_20013_j++;
			goto _iter_begin_1ac2c2588;
		}
		_iter_end_1ac2c2588:;
	};
	if ((_19913_only != -1LL)) {
		_1b57b63d1_setCurrentStmt(_self_, jule::Any((*((*_14243_c.alloc)._field_Elifs[_19913_only]))._field_Scope, &__jule_any_type21));
	};
}



inline void _1b57b7833_buildDefaultConstantTrueCase(jule::Ptr<_1b57b5aa6_scopeOptimizer> _self_, jule::Ptr<_1b4b7d546_Case> _21652_case, jule::I64* _21670_i, jule::Ptr<_1b4b7ca1d_Match>* _21683_m) {
	(*(_21652_case))._field_Exprs=nullptr;
	jule::I64 _2189_start = (*(_21670_i));;
	_julec_label_1ac2c98d1:;
	for (;;) {
		{
			if (((*((*_21652_case.alloc)._field_Scope))._field_Stmts.len() == 0LL)) {
				goto _iter_end_1ac2c9969;
			};
			jule::Any *_22418_stmt = &((*(*_21652_case.alloc)._field_Scope.alloc)._field_Stmts[((*(*_21652_case.alloc)._field_Scope.alloc)._field_Stmts.len() - 1LL)]);;
			{
				auto &_match_expr{ (*(_22418_stmt)) };
				
				if (_match_expr.type == &__jule_any_type47) {
					_case_begin_1ac2cc098:;
					{
						((*(_21670_i)))++;
						if (((*(_21670_i)) >= (*((*(_21683_m))))._field_Cases.len())) {
							(*(_22418_stmt))=jule::Any((*((*((*(_21683_m))))._field_Default))._field_Scope, &__jule_any_type21);
							goto _iter_end_1ac2c9969;
						};
						_21652_case=(*((*(_21683_m))))._field_Cases[(*(_21670_i))];
						(*(_22418_stmt))=jule::Any((*_21652_case.alloc)._field_Scope, &__jule_any_type21);
					}
				}
				else {
					_case_begin_1ac2cc1a8:;
					{
						goto _iter_end_1ac2c9969;
					}
				}
				_match_end_1ac2cc043:;
			};
		}
	_iter_next_1ac2c9969:;
	}
	_iter_end_1ac2c9969:;;
	(*((*(_21683_m))))._field_Default=(*((*(_21683_m))))._field_Cases[_2189_start];
	((*((*(_21683_m))))._field_Cases).mut_slice(0LL, _2189_start);;
}



inline void _1b57b7adb_optimizeMatch(jule::Ptr<_1b57b5aa6_scopeOptimizer> _self_, jule::Ptr<_1b4b7ca1d_Match> _24237_m) {
	jule::Uintptr _24313_var = 0LLU;;
	if ((_1b57d194b_Dynamic && (*(_24237_m))._field_TypeMatch)) {
		_24313_var=_1b57c8c0c_getDynamicVar((*((*_24237_m.alloc)._field_Expr))._field_Model);
	};
	_1b57c9779_dataCheckpoint _24713_checkpoint = _1b57ca0e8_getCheckpoint((*(_self_))._field_data.ptr());;
	{
		auto expr = &((*_24237_m.alloc)._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac2d171d:;
		if (it != expr_end) {
			jule::Ptr<_1b4b7d546_Case> _24821_case = *it;
			{
				{
					auto expr = &((*(_24821_case))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac2d2103:;
					if (it != expr_end) {
						jule::Ptr<_1b4c466a8_Data> _24925_expr = *it;
						{
							static__1b57bcb68_optimizeData(&((*(_24925_expr))._field_Model), &((*_self_.alloc)._field_data));
						}
						_iter_next_1ac2d2103:;
						++it;
						goto _iter_begin_1ac2d2103;
					}
					_iter_end_1ac2d2103:;
				};
				if ((((*_24821_case.alloc)._field_Exprs.len() == 1LL) && ((*(*_self_.alloc)._field_data.alloc)._field_dynamic != nullptr))) {
					jule::Ptr<_1b4c7c90e_TypeKind> _25421_kind = _1b57c88bb_isTypeGuaranteedDynamicData(&((*(*_self_.alloc)._field_data.alloc)._field_dynamic), (*((*_24821_case.alloc)._field_Exprs[0LL]))._field_Kind, nullptr);;
					if ((_25421_kind != nullptr)) {
						_1b57c7557_pushVar((*(*_self_.alloc)._field_data.alloc)._field_dynamic, _24313_var, _25421_kind);
					} else {
						_1b57c7898_removeVar((*(*_self_.alloc)._field_data.alloc)._field_dynamic, _24313_var);
					};
				};
				_1b57ba094_optimizeChild(_self_, (*_24821_case.alloc)._field_Scope);
				if ((((*_24237_m.alloc)._field_Cases.len() > 1LL) || ((*_24237_m.alloc)._field_Default != nullptr))) {
					_1b57ca3a1_loadCheckpoint((*_self_.alloc)._field_data, &(_24713_checkpoint));
				};
			}
			_iter_next_1ac2d171d:;
			++it;
			goto _iter_begin_1ac2d171d;
		}
		_iter_end_1ac2d171d:;
	};
	if (((*_24237_m.alloc)._field_Default != nullptr)) {
		_1b57ba094_optimizeChild(_self_, (*(*_24237_m.alloc)._field_Default.alloc)._field_Scope);
		_1b57ca3a1_loadCheckpoint((*_self_.alloc)._field_data, &(_24713_checkpoint));
	};
	if ((!(_1b57d0890_Cond))) {
		return;;
	};
	jule::Bool _27513_constCase = false;;
	{
		auto expr = &((*_24237_m.alloc)._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac2d8a44:;
		if (it != expr_end) {
			jule::I64 _27818_i = it - expr->begin();
			jule::Ptr<_1b4b7d546_Case> _27825_case = *it;
			{
				if ((!(_1b57bac32_isConstantValidMatchCase(&(_27825_case))))) {
					goto _iter_next_1ac2d8a44;
				};
				_27513_constCase=true;
				_1b57b7833_buildDefaultConstantTrueCase(_self_, _27825_case, &(_27818_i), &(_24237_m));
				goto _iter_end_1ac2d8a44;
			}
			_iter_next_1ac2d8a44:;
			++it;
			_27818_i++;
			goto _iter_begin_1ac2d8a44;
		}
		_iter_end_1ac2d8a44:;
	};
	if (((*_24237_m.alloc)._field_Cases.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1b4b7d546_Case>* _29213_i = (&((*_24237_m.alloc)._field_Cases[0LL]));;
	jule::Ptr<_1b4b7d546_Case>* _2939_end = (&((*_24237_m.alloc)._field_Cases[((*_24237_m.alloc)._field_Cases.len() - 1LL)]));;
	for (; (_29213_i <= _2939_end); (_29213_i)++) {
		{
			{
				if (_1b57bb309_isUnreachableMatchCase(&((*(_29213_i))))) {
					(*(_29213_i))=nullptr;
				};
			};
		}
	_iter_next_1ac2db63a:;
	}
	_iter_end_1ac2db63a:;;
	if ((!(_27513_constCase))) {
		return;;
	};
	jule::I64 _30713_only = -1LL;;
	{
		auto expr = &((*_24237_m.alloc)._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac2dc8c2:;
		if (it != expr_end) {
			jule::I64 _30813_j = it - expr->begin();
			jule::Ptr<_1b4b7d546_Case> _30816_case = *it;
			{
				if ((_30816_case != nullptr)) {
					if ((_30713_only != -1LL)) {
						return;;
					};
					_30713_only=_30813_j;
				};
			}
			_iter_next_1ac2dc8c2:;
			++it;
			_30813_j++;
			goto _iter_begin_1ac2dc8c2;
		}
		_iter_end_1ac2dc8c2:;
	};
	if ((_30713_only != -1LL)) {
		_1b57b63d1_setCurrentStmt(_self_, jule::Any((*((*_24237_m.alloc)._field_Cases[_30713_only]))._field_Scope, &__jule_any_type21));
	};
}



inline void _1b57b7d94_optimizeRangeIter(jule::Ptr<_1b57b5aa6_scopeOptimizer> _self_, jule::Ptr<_1b4b7a642_RangeIter> _32441_it) {
	if ((((*((*(_self_))._field_data))._field_boundary != nullptr) && ((*(_32441_it))._field_KeyA != nullptr))) {
		_1b57cbacd_pushVar((*(*_self_.alloc)._field_data.alloc)._field_boundary, _1b57cda9c_getBoundaryVar((*((*_32441_it.alloc)._field_Expr))._field_Model), jule::Any((*_32441_it.alloc)._field_KeyA, &__jule_any_type8));
	};
	_1b57ba094_optimizeChild(_self_, (*_32441_it.alloc)._field_Scope);
	if (_1b57d1693_Iter) {
		{
			auto &_match_expr{ (*((*(_32441_it))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type93) {
				_case_begin_1ac2e2531:;
				{
					jule::Ptr<_1b4b2a16e_CastingExprModel> _33621_cem = (*((*(_32441_it))._field_Expr))._field_Model.unsafe_cast_ptr<_1b4b2a16e_CastingExprModel>();;
					jule::Ptr<_1b4c854d8_Prim> _33717_eprim = _1b4c80060_Prim((*(_33621_cem))._field_ExprKind.ptr());;
					if (((_33717_eprim == nullptr) || (!(_1b4c88970_IsStr(_33717_eprim.ptr()))))) {
						goto _match_end_1ac2e24ba;
					};
					jule::Ptr<_1b4c899d7_Slc> _34121_s = _1b4c810b6_Slc((*_33621_cem.alloc)._field_Kind.ptr());;
					if ((_34121_s == nullptr)) {
						goto _match_end_1ac2e24ba;
					};
					jule::Ptr<_1b4c854d8_Prim> _34517_prim = _1b4c80060_Prim((*(_34121_s))._field_Elem.ptr());;
					if ((_34517_prim == nullptr)) {
						goto _match_end_1ac2e24ba;
					};
					{
						
						if (_1b4c86dd0_IsU8(_34517_prim.ptr())) {
							_case_begin_1ac2e5dd6:;
							{
								(*_32441_it.alloc)._field_Expr=(*_33621_cem.alloc)._field_Expr;
							}
						}
						else if (_1b4c868b3_IsI32(_34517_prim.ptr())) {
							_case_begin_1ac2e606d:;
							{
								static__1b57bcb68_optimizeData(&((*((*_33621_cem.alloc)._field_Expr))._field_Model), &((*_self_.alloc)._field_data));
								_1b57b63d1_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1b4d739d3_StrRuneIter>(_1b4d739d3_StrRuneIter{._field_Expr=(*_33621_cem.alloc)._field_Expr, ._field_Base=_32441_it}), &__jule_any_type121));
								return;;
							}
						}
						_match_end_1ac2e5c0a:;
					};
				}
			}
			_match_end_1ac2e24ba:;
		};
	};
	static__1b57bcb68_optimizeData(&((*(*_32441_it.alloc)._field_Expr.alloc)._field_Model), &((*_self_.alloc)._field_data));
}



inline void _1b57b814c_optimizeWhileIter(jule::Ptr<_1b57b5aa6_scopeOptimizer> _self_, jule::Ptr<_1b4b79be6_WhileIter> _36941_it) {
	static__1b57bcb68_optimizeData(&((*(_36941_it))._field_Expr), &((*(_self_))._field_data));
	_1b57b9cdb_optimizeStmt(_self_, (*_36941_it.alloc)._field_Next);
	_1b57ba094_optimizeChild(_self_, (*_36941_it.alloc)._field_Scope);
}



inline jule::Bool _1b57b848d_substr(jule::Ptr<_1b57b5aa6_scopeOptimizer> _self_, jule::Ptr<_1b4b7be07_Assign> _37530_a) {
	if (((*((*(_37530_a))._field_Op))._field_Id != static_cast<jule::U64>(71LLU))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_37530_a))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1ac2eaddb:;
			{
				jule::Ptr<_1b4b2c76a_SlicingExprModel> _38117_sem = (*((*(_37530_a))._field_Right))._field_Model.unsafe_cast_ptr<_1b4b2c76a_SlicingExprModel>();;
				if (_1b4d7055c_equalModels((*((*_37530_a.alloc)._field_Left))._field_Model, (*(_38117_sem))._field_Expr)) {
					_1b57b63d1_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1b4d726c4_MutSlicingExprModel>(_1b4d726c4_MutSlicingExprModel{._field_Token=(*_38117_sem.alloc)._field_Token, ._field_Expr=(*_38117_sem.alloc)._field_Expr, ._field_Left=(*_38117_sem.alloc)._field_Left, ._field_Right=(*_38117_sem.alloc)._field_Right}), &__jule_any_type122));
					return true;;
				};
			}
		}
		_match_end_1ac2ead75:;
	};
	return false;;
}



inline jule::Bool _1b57b87ce_strAssign(jule::Ptr<_1b57b5aa6_scopeOptimizer> _self_, jule::Ptr<_1b4b7be07_Assign> _39533_a) {
	if ((!(_1b57d0ad2_Str))) {
		return false;;
	};
	jule::Ptr<_1b4c854d8_Prim> _3999_lp = _1b4c80060_Prim((*((*(_39533_a))._field_Left))._field_Kind.ptr());;
	if (((_3999_lp == nullptr) || (!(_1b4c88970_IsStr(_3999_lp.ptr()))))) {
		return false;;
	};
	return _1b57b848d_substr(_self_, _39533_a);;
}



inline jule::Bool _1b57b8b20_sliceAssign(jule::Ptr<_1b57b5aa6_scopeOptimizer> _self_, jule::Ptr<_1b4b7be07_Assign> _40635_a) {
	if (((!(_1b57d0d79_Slice)) || (_1b4c810b6_Slc((*((*(_40635_a))._field_Left))._field_Kind.ptr()) == nullptr))) {
		return false;;
	};
	return _1b57b848d_substr(_self_, _40635_a);;
}



inline void _1b57b8dc8_optimizePostfix(jule::Ptr<_1b57b5aa6_scopeOptimizer> _self_, jule::Ptr<_1b4b7b951_Postfix> _41439_postfix) {
	if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
		_1b57cd250_possibleBoundaryRemove(&((*(*_self_.alloc)._field_data.alloc)._field_boundary), (*(_41439_postfix))._field_Expr);
	};
	static__1b57bcb68_optimizeData(&((*_41439_postfix.alloc)._field_Expr), &((*_self_.alloc)._field_data));
}



inline void _1b57b9181_optimizeAssign(jule::Ptr<_1b57b5aa6_scopeOptimizer> _self_, jule::Ptr<_1b4b7be07_Assign> _42138_assign) {
	if ((((*((*(_42138_assign))._field_Op))._field_Id == static_cast<jule::U64>(71LLU)) && _1b4d7055c_equalModels((*((*_42138_assign.alloc)._field_Left))._field_Model, (*((*_42138_assign.alloc)._field_Right))._field_Model))) {
		_1b57b65ce_removeCurrent(_self_);
		((*_self_.alloc)._field_i)--;
		return;;
	};
	if (((*((*_self_.alloc)._field_data))._field_boundary != nullptr)) {
		if (_1b57cd519_isBoundaryRiskyType((*(*_42138_assign.alloc)._field_Left.alloc)._field_Kind)) {
			_1b57cd250_possibleBoundaryRemove(&((*(*_self_.alloc)._field_data.alloc)._field_boundary), (*(*_42138_assign.alloc)._field_Left.alloc)._field_Model);
		};
	};
	if (((*(*_self_.alloc)._field_data.alloc)._field_nils != nullptr)) {
		if (_1b4d76497_isGuaranteedNonNilExpr(&((*(*_self_.alloc)._field_data.alloc)._field_nils), (*(*_42138_assign.alloc)._field_Right.alloc)._field_Model)) {
			if (_1b4d76761_isNilValidType((*(*_42138_assign.alloc)._field_Left.alloc)._field_Kind)) {
				;
				_1b4d75562_pushVar((*(*_self_.alloc)._field_data.alloc)._field_nils, _1b4d76aa2_getNilVar((*(*_42138_assign.alloc)._field_Left.alloc)._field_Model), true);
			};
		} else {
			_1b4d760ce_possibleNilRemove(&((*(*_self_.alloc)._field_data.alloc)._field_nils), (*(*_42138_assign.alloc)._field_Left.alloc)._field_Model);
		};
	};
	if (((*(*_self_.alloc)._field_data.alloc)._field_dynamic != nullptr)) {
		jule::Ptr<_1b4c7c90e_TypeKind> _44517_kind = _1b57c88bb_isTypeGuaranteedDynamicData(&((*(*_self_.alloc)._field_data.alloc)._field_dynamic), (*(*_42138_assign.alloc)._field_Right.alloc)._field_Kind, (*(*_42138_assign.alloc)._field_Right.alloc)._field_Model);;
		if ((_44517_kind != nullptr)) {
			if (_1b57c848c_isDynamicValidType((*(*_42138_assign.alloc)._field_Left.alloc)._field_Kind)) {
				_1b57c7557_pushVar((*(*_self_.alloc)._field_data.alloc)._field_dynamic, _1b57c8c0c_getDynamicVar((*(*_42138_assign.alloc)._field_Left.alloc)._field_Model), _44517_kind);
			};
		} else {
			_1b57c817e_possibleDynamicRemove(&((*(*_self_.alloc)._field_data.alloc)._field_dynamic), (*(*_42138_assign.alloc)._field_Left.alloc)._field_Model);
		};
	};
	{
		
		if (_1b57b87ce_strAssign(_self_, _42138_assign) || _1b57b8b20_sliceAssign(_self_, _42138_assign)) {
			_case_begin_1ac30dc78:;
			{
				return;;
			}
		}
		_match_end_1ac30c051:;
	};
	static__1b57bcb68_optimizeData(&((*(*_42138_assign.alloc)._field_Left.alloc)._field_Model), &((*_self_.alloc)._field_data));
	static__1b57bcb68_optimizeData(&((*(*_42138_assign.alloc)._field_Right.alloc)._field_Model), &((*_self_.alloc)._field_data));
	{
		auto &_match_expr{ (*((*(_42138_assign))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(43LLU) || _match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1ac310bae:;
			{
				if (((!(_1b57cebad_Math)) || (_1b4c815d3_Struct((*(*_42138_assign.alloc)._field_Left.alloc)._field_Kind.ptr()) != nullptr))) {
					goto _match_end_1ac310b48;
				};
				jule::U64 _47113_oldId;
				jule::Str _47120_oldKind;
				({
					jule::U64 ___jule_assign_arg = (*(*_42138_assign.alloc)._field_Op.alloc)._field_Id;
					jule::Str _1___jule_assign_arg = (*(*_42138_assign.alloc)._field_Op.alloc)._field_Kind;
					_47113_oldId = ___jule_assign_arg;
					_47120_oldKind = _1___jule_assign_arg;
				});
				{
					auto &_match_expr{ (*((*(_42138_assign))._field_Op))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(43LLU)) {
						_case_begin_1ac31395e:;
						{
							(*(*_42138_assign.alloc)._field_Op.alloc)._field_Id=static_cast<jule::U64>(63LLU);
							(*(*_42138_assign.alloc)._field_Op.alloc)._field_Kind=jule::Str::lit("/", 1);
						}
					}
					else if (_match_expr == static_cast<jule::U64>(44LLU)) {
						_case_begin_1ac3139c5:;
						{
							(*(*_42138_assign.alloc)._field_Op.alloc)._field_Id=static_cast<jule::U64>(64LLU);
							(*(*_42138_assign.alloc)._field_Op.alloc)._field_Kind=jule::Str::lit("%", 1);
						}
					}
					else {
						_case_begin_1ac313211:;
						{
							jule::panic(jule::Str::lit("implementation mistake, this panic call should be unreachable", 61) + jule::Str("\nlocation: julec/opt/scope.jule:480:17"));;
						}
					}
					_match_end_1ac313530:;
				};
				jule::Any _48217_model = jule::Any(jule::new_ptr<_1b4b28a41_BinaryExprModel>(_1b4b28a41_BinaryExprModel{._field_Left=(*_42138_assign.alloc)._field_Left, ._field_Right=(*_42138_assign.alloc)._field_Right, ._field_Op=(*_42138_assign.alloc)._field_Op}), &__jule_any_type111);;
				static__1b57bcb68_optimizeData(&(_48217_model), &((*_self_.alloc)._field_data));
				{
					auto &_match_expr{ _48217_model };
					
					if (_match_expr.type == &__jule_any_type111) {
						_case_begin_1ac316dd5:;
						{
							(*_42138_assign.alloc)._field_Right=jule::new_ptr<_1b4b28546_OperandExprModel>((*(*_42138_assign.alloc)._field_Right.alloc));
							(*(*_42138_assign.alloc)._field_Op.alloc)._field_Id=static_cast<jule::U64>(71LLU);
							(*(*_42138_assign.alloc)._field_Op.alloc)._field_Kind=jule::Str::lit("=", 1);
							(*(*_42138_assign.alloc)._field_Right.alloc)._field_Model=_48217_model;
							return;;
						}
					}
					_match_end_1ac316ac7:;
				};
				(*(*_42138_assign.alloc)._field_Op.alloc)._field_Id=_47113_oldId;
				(*(*_42138_assign.alloc)._field_Op.alloc)._field_Kind=_47120_oldKind;
				return;;
			}
		}
		_match_end_1ac310b48:;
	};
	if (_1b57ce8b1_Append) {
		{
			auto &_match_expr{ (*((*(_42138_assign))._field_Right))._field_Model };
			
			if (_match_expr.type == &__jule_any_type25) {
				_case_begin_1ac319a42:;
				{
					jule::Ptr<_1b4b31098_BuiltinAppendCallExprModel> _50421_m = (*(*_42138_assign.alloc)._field_Right.alloc)._field_Model.cast_ptr<_1b4b31098_BuiltinAppendCallExprModel>(&__jule_any_type25);;
					if ((!(_1b57c5eb2_areSameLvalueExprModel(&((*(*_42138_assign.alloc)._field_Left.alloc)._field_Model), &((*(_50421_m))._field_Dest))))) {
						return;;
					};
					{
						auto &_match_expr{ (*(_50421_m))._field_Elements };
						
						if (_match_expr.type == &__jule_any_type76) {
							_case_begin_1ac31b00a:;
							{
								_1b57b63d1_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1b4d73230_PushToSliceExprModel>(_1b4d73230_PushToSliceExprModel{._field_Dest=(*_50421_m.alloc)._field_Dest, ._field_Elems=(*(_50421_m))._field_Elements.unsafe_cast_ptr<_1b4b2adea_SliceExprModel>()}), &__jule_any_type123));
							}
						}
						else {
							_case_begin_1ac31b58d:;
							{
								_1b57b63d1_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1b4d73609_AppendToSliceExprModel>(_1b4d73609_AppendToSliceExprModel{._field_Dest=(*(*_42138_assign.alloc)._field_Left.alloc)._field_Model, ._field_Slice=(*_50421_m.alloc)._field_Elements}), &__jule_any_type124));
							}
						}
						_match_end_1ac31b538:;
					};
				}
			}
			_match_end_1ac3199cb:;
		};
	};
}



inline jule::Bool _1b57b94c2_tryOptimizeSwap(jule::Ptr<_1b57b5aa6_scopeOptimizer> _self_, jule::Ptr<_1b4b7c3ad_MultiAssign>* _52640_assign) {
	if (((((!(_1b57d1132_Assign)) || ((*((*(_52640_assign))))._field_Left.len() != 2LL)) || ((*((*(_52640_assign))))._field_Left[0LL] == nullptr)) || ((*((*(_52640_assign))))._field_Left[1LL] == nullptr))) {
		return false;;
	};
	jule::Ptr<_1b4b2e20b_TupleExprModel> _53117_tup;;
	{
		auto &_match_expr{ (*((*(_52640_assign))))._field_Right };
		
		if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1ac320196:;
			{
				_53117_tup=(*((*(_52640_assign))))._field_Right.unsafe_cast_ptr<_1b4b2e20b_TupleExprModel>();
			}
		}
		_match_end_1ac320130:;
	};
	if (((_53117_tup == nullptr) || ((*(_53117_tup))._field_Datas.len() != 2LL))) {
		return false;;
	};
	if ((_1b4d7055c_equalModels((*((*((*(_52640_assign))))._field_Left[0LL]))._field_Model, (*((*(_53117_tup))._field_Datas[0LL]))._field_Model) && _1b4d7055c_equalModels((*((*((*(_52640_assign))))._field_Left[1LL]))._field_Model, (*((*(_53117_tup))._field_Datas[1LL]))._field_Model))) {
		_1b57b65ce_removeCurrent(_self_);
		((*_self_.alloc)._field_i)--;
		return true;;
	};
	if (((!(_1b4d7055c_equalModels((*((*((*(_52640_assign))))._field_Left[0LL]))._field_Model, (*((*(_53117_tup))._field_Datas[1LL]))._field_Model))) || (!(_1b4d7055c_equalModels((*((*((*(_52640_assign))))._field_Left[1LL]))._field_Model, (*((*(_53117_tup))._field_Datas[0LL]))._field_Model))))) {
		return false;;
	};
	jule::Ptr<_1b4d71470_SwapExprModel> _55313_model = jule::new_ptr<_1b4d71470_SwapExprModel>(_1b4d71470_SwapExprModel{._field_Left=(*((*(_52640_assign))))._field_Left[0LL], ._field_Right=(*((*(_52640_assign))))._field_Left[1LL]});;
	static__1b57bcb68_optimizeData(&((*((*(_55313_model))._field_Left))._field_Model), &((*_self_.alloc)._field_data));
	static__1b57bcb68_optimizeData(&((*((*_55313_model.alloc)._field_Right))._field_Model), &((*_self_.alloc)._field_data));
	_1b57b63d1_setCurrentStmt(_self_, jule::Any(_55313_model, &__jule_any_type125));
	return true;;
}



inline void _1b57b977a_optimizeMultiAssign(jule::Ptr<_1b57b5aa6_scopeOptimizer> _self_, jule::Ptr<_1b4b7c3ad_MultiAssign> _56343_assign) {
	if (_1b57b94c2_tryOptimizeSwap(_self_, &(_56343_assign))) {
		return;;
	};
	jule::Ptr<_1b4b2e20b_TupleExprModel> _57013_tup = static_cast<jule::Ptr<_1b4b2e20b_TupleExprModel>>(nullptr);;
	{
		auto &_match_expr{ (*(_56343_assign))._field_Right };
		
		if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1a92789b5:;
			{
				_57013_tup=(*(_56343_assign))._field_Right.unsafe_cast_ptr<_1b4b2e20b_TupleExprModel>();
			}
		}
		_match_end_1a927894e:;
	};
	{
		auto expr = &((*(_56343_assign))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9277b5c:;
		if (it != expr_end) {
			jule::I64 _57514_i = it - expr->begin();
			jule::Ptr<_1b4c466a8_Data> _57521_l = *it;
			{
				if ((_57521_l != nullptr)) {
					if (((*((*_self_.alloc)._field_data))._field_boundary != nullptr)) {
						if (_1b57cd519_isBoundaryRiskyType((*_57521_l.alloc)._field_Kind)) {
							_1b57cd250_possibleBoundaryRemove(&((*(*_self_.alloc)._field_data.alloc)._field_boundary), (*_57521_l.alloc)._field_Model);
						};
					};
					if (((*(*_self_.alloc)._field_data.alloc)._field_nils != nullptr)) {
						if (((_57013_tup != nullptr) && _1b4d76497_isGuaranteedNonNilExpr(&((*(*_self_.alloc)._field_data.alloc)._field_nils), (*((*_57013_tup.alloc)._field_Datas[_57514_i]))._field_Model))) {
							if (_1b4d76761_isNilValidType((*_57521_l.alloc)._field_Kind)) {
								;
								_1b4d75562_pushVar((*(*_self_.alloc)._field_data.alloc)._field_nils, _1b4d76aa2_getNilVar((*_57521_l.alloc)._field_Model), true);
							};
						} else {
							_1b4d760ce_possibleNilRemove(&((*(*_self_.alloc)._field_data.alloc)._field_nils), (*_57521_l.alloc)._field_Model);
						};
					};
					if ((((*(*_self_.alloc)._field_data.alloc)._field_dynamic != nullptr) && (_57013_tup != nullptr))) {
						jule::Ptr<_1b4c7c90e_TypeKind> _59325_kind = _1b57c88bb_isTypeGuaranteedDynamicData(&((*(*_self_.alloc)._field_data.alloc)._field_dynamic), (*((*_57013_tup.alloc)._field_Datas[_57514_i]))._field_Kind, (*((*_57013_tup.alloc)._field_Datas[_57514_i]))._field_Model);;
						if ((_59325_kind != nullptr)) {
							if (_1b57c848c_isDynamicValidType((*_57521_l.alloc)._field_Kind)) {
								_1b57c7557_pushVar((*(*_self_.alloc)._field_data.alloc)._field_dynamic, _1b57c8c0c_getDynamicVar((*_57521_l.alloc)._field_Model), _59325_kind);
							};
						} else {
							_1b57c817e_possibleDynamicRemove(&((*(*_self_.alloc)._field_data.alloc)._field_dynamic), (*_57521_l.alloc)._field_Model);
						};
					};
					static__1b57bcb68_optimizeData(&((*_57521_l.alloc)._field_Model), &((*_self_.alloc)._field_data));
				};
			}
			_iter_next_1a9277b5c:;
			++it;
			_57514_i++;
			goto _iter_begin_1a9277b5c;
		}
		_iter_end_1a9277b5c:;
	};
	static__1b57bcb68_optimizeData(&((*_56343_assign.alloc)._field_Right), &((*_self_.alloc)._field_data));
}



inline void _1b57b9a33_optimizeRet(jule::Ptr<_1b57b5aa6_scopeOptimizer> _self_, jule::Ptr<_1b4b7e0d5_RetSt> _60935_r) {
	static__1b57bcb68_optimizeData(&((*(_60935_r))._field_Expr), &((*(_self_))._field_data));
	if ((!(_1b57d13da_Exceptional))) {
		return;;
	};
	{
		auto &_match_expr{ (*(_60935_r))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1a92847e5:;
			{
				goto _match_end_1a9284b58;
			}
		}
		else {
			_case_begin_1a9284bad:;
			{
				return;;
			}
		}
		_match_end_1a9284b58:;
	};
	jule::Ptr<_1b4b2aa21_FnCallExprModel> _62313_fc = (*_60935_r.alloc)._field_Expr.cast_ptr<_1b4b2aa21_FnCallExprModel>(&__jule_any_type33);;
	if (((((!((*((*((*(_62313_fc))._field_Func))._field_Decl))._field_Exceptional)) || ((*_62313_fc.alloc)._field_Except == nullptr)) || ((*((*_62313_fc.alloc)._field_Except))._field_Stmts.len() != 1LL)) || (!(_1b57b0be4_IsForwarded(&((*_62313_fc.alloc)._field_Except)))))) {
		return;;
	};
	_1b57b63d1_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1b4d710da_ExceptionalForwardingExprModel>(_1b4d710da_ExceptionalForwardingExprModel{._field_Expr=_62313_fc}), &__jule_any_type120));
}



inline void _1b57b9cdb_optimizeStmt(jule::Ptr<_1b57b5aa6_scopeOptimizer> _self_, jule::Any _63336_stmt) {
	{
		auto &_match_expr{ _63336_stmt };
		
		if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1a9288101:;
			{
				_1b57ba094_optimizeChild(_self_, _63336_stmt.unsafe_cast_ptr<_1b4b7880a_Scope>());
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1a9287d48:;
			{
				_1b57b6da4_optimizeData(_self_, _63336_stmt.unsafe_cast_ptr<_1b4c466a8_Data>());
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a9288167:;
			{
				_1b57b715c_optimizeVar(_self_, _63336_stmt.unsafe_cast_ptr<_1b4bddaa1_Var>());
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1a92881cd:;
			{
				_1b57b7415_optimizeConditional(_self_, _63336_stmt.unsafe_cast_ptr<_1b4b79443_Conditional>());
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1a9288244:;
			{
				_1b57b7d94_optimizeRangeIter(_self_, _63336_stmt.unsafe_cast_ptr<_1b4b7a642_RangeIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1a92882bb:;
			{
				_1b57b814c_optimizeWhileIter(_self_, _63336_stmt.unsafe_cast_ptr<_1b4b79be6_WhileIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1a9288343:;
			{
				_1b57ba094_optimizeChild(_self_, (*(_63336_stmt.unsafe_cast_ptr<_1b4b79740_InfIter>()))._field_Scope);
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1a92883ba:;
			{
				_1b57b9181_optimizeAssign(_self_, _63336_stmt.unsafe_cast_ptr<_1b4b7be07_Assign>());
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1a9288442:;
			{
				_1b57b977a_optimizeMultiAssign(_self_, _63336_stmt.unsafe_cast_ptr<_1b4b7c3ad_MultiAssign>());
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1a92884b9:;
			{
				_1b57b7adb_optimizeMatch(_self_, _63336_stmt.unsafe_cast_ptr<_1b4b7ca1d_Match>());
			}
		}
		else if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1a9288541:;
			{
				_1b57b9a33_optimizeRet(_self_, _63336_stmt.unsafe_cast_ptr<_1b4b7e0d5_RetSt>());
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1a92885b8:;
			{
				_1b57b8dc8_optimizePostfix(_self_, _63336_stmt.unsafe_cast_ptr<_1b4b7b951_Postfix>());
			}
		}
		_match_end_1a9287ead:;
	};
}



inline void _1b57ba094_optimizeChild(jule::Ptr<_1b57b5aa6_scopeOptimizer> _self_, jule::Ptr<_1b4b7880a_Scope> _66237_child) {
	jule::Ptr<_1b57b5aa6_scopeOptimizer> _66313_so = static__1b57b6128_new(_66237_child);;
	(*(_66313_so))._field_parent=_self_;
	(*_66313_so.alloc)._field_data=(*(_self_))._field_data;
	_1b57ba292_optimize(_66313_so);
}



inline void _1b57ba292_optimize(jule::Ptr<_1b57b5aa6_scopeOptimizer> _self_) {
	(*(_self_))._field_i=0LL;
	for (; ((*_self_.alloc)._field_i < (*((*_self_.alloc)._field_scope))._field_Stmts.len()); ((*_self_.alloc)._field_i)++) {
		{
			_1b57b9cdb_optimizeStmt(_self_, (*(*_self_.alloc)._field_scope.alloc)._field_Stmts[(*_self_.alloc)._field_i]);
		}
	_iter_next_1a9291846:;
	}
	_iter_end_1a9291846:;;
}





std::ostream &operator<<(std::ostream &_Stream, _1b57b5aa6_scopeOptimizer _Src) {
	_Stream << "scopeOptimizer{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline void static__1b57bc87c_optimize(jule::Any* _5829_model) {
	static__1b57bcb68_optimizeData(_5829_model, &(_1b57c937d_emptyData));
}



inline void static__1b57bcb68_optimizeData(jule::Any* _6233_model, jule::Ptr<_1b57c9c74_data>* _6256_d) {
	if (_1b5946583_exprEnabled) {
		jule::Ptr<_1b57bc22d_exprOptimizer> _6517_exop = jule::new_ptr<_1b57bc22d_exprOptimizer>(_1b57bc22d_exprOptimizer{._field_model=((jule::Ptr<jule::Any>)(_6233_model)), ._field_data=(*(_6256_d))});;
		_1b57c5676_do(_6517_exop.ptr());
	};
}



inline jule::Bool _1b57bcea9_selfCmpCond(_1b57bc22d_exprOptimizer* _self_, jule::Ptr<_1b4b28a41_BinaryExprModel>* _7331_m) {
	if ((!(_1b4d7055c_equalModels((*((*((*(_7331_m))))._field_Left))._field_Model, (*((*((*(_7331_m))))._field_Right))._field_Model)))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_7331_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(53LLU) || _match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1a92a10a3:;
			{
				(*((*(_self_))._field_model))=jule::Any(static__1b2753ecb_NewBool(true), &__jule_any_type19);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_1a92a149e:;
			{
				(*((*(_self_))._field_model))=jule::Any(static__1b2753ecb_NewBool(false), &__jule_any_type19);
				return true;;
			}
		}
		else {
			_case_begin_1a929ee70:;
			{
				return false;;
			}
		}
		_match_end_1a92a103c:;
	};
}



inline jule::Bool _1b57bd2ea_boolCond(_1b57bc22d_exprOptimizer* _self_, jule::Ptr<_1b4b28a41_BinaryExprModel>* _9728_m) {
	jule::Ptr<_1b4c854d8_Prim> _989_lp = _1b4c80060_Prim((*((*((*(_9728_m))))._field_Left))._field_Kind.ptr());;
	if (((_989_lp == nullptr) || (!(_1b4c886d9_IsBool(_989_lp.ptr()))))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_9728_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1a92a585a:;
			{
				std::swap((*((*(_9728_m))))._field_Left, (*((*(_9728_m))))._field_Right);
			}
		}
		else {
			_case_begin_1a92a4a68:;
			{
				{
					auto &_match_expr{ (*((*((*(_9728_m))))._field_Right))._field_Model };
					
					if (_match_expr.type == &__jule_any_type19) {
						_case_begin_1a92a3d53:;
						{
							goto _match_end_1a92a5382;
						}
					}
					else {
						_case_begin_1a92a53d7:;
						{
							return false;;
						}
					}
					_match_end_1a92a5382:;
				};
			}
		}
		_match_end_1a92a4a13:;
	};
	jule::Ptr<_1b2753508_Const> _11513_c = (*((*((*(_9728_m))))._field_Right))._field_Model.cast_ptr<_1b2753508_Const>(&__jule_any_type19);;
	{
		auto &_match_expr{ (*((*((*(_9728_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1a92a7472:;
			{
				if (_1b27553ea_ReadBool(_11513_c.ptr())) {
					(*((*(_self_))._field_model))=(*(*((*(_9728_m))))._field_Left.alloc)._field_Model;
				} else {
					_1b27569d4_SetBool(_11513_c.ptr(), false);
					(*((*(_self_))._field_model))=jule::Any(_11513_c, &__jule_any_type19);
				};
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1a92a751b:;
			{
				if (_1b27553ea_ReadBool(_11513_c.ptr())) {
					_1b27569d4_SetBool(_11513_c, true);
					(*((*(_self_))._field_model))=jule::Any(_11513_c, &__jule_any_type19);
				} else {
					(*((*(_self_))._field_model))=(*(*((*(_9728_m))))._field_Left.alloc)._field_Model;
				};
				return true;;
			}
		}
		else {
			_case_begin_1a92a55d5:;
		}
		_match_end_1a92a73ea:;
	};
	return false;;
}



inline jule::Bool _1b57bd63b_strCond(_1b57bc22d_exprOptimizer* _self_, jule::Ptr<_1b4b28a41_BinaryExprModel> _15026_m) {
	jule::Ptr<_1b4c854d8_Prim> _1519_lp = _1b4c80060_Prim((*((*(_15026_m))._field_Left))._field_Kind.ptr());;
	if (((_1519_lp == nullptr) || (!(_1b4c88970_IsStr(_1519_lp.ptr()))))) {
		return false;;
	};
	if ((((*((*_15026_m.alloc)._field_Op))._field_Id != static_cast<jule::U64>(50LLU)) && ((*(*_15026_m.alloc)._field_Op.alloc)._field_Id != static_cast<jule::U64>(51LLU)))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_15026_m))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1a92ae07d:;
			{
				std::swap((*_15026_m.alloc)._field_Left, (*_15026_m.alloc)._field_Right);
			}
		}
		else {
			_case_begin_1a92ad28b:;
			{
				{
					auto &_match_expr{ (*((*(_15026_m))._field_Right))._field_Model };
					
					if (_match_expr.type == &__jule_any_type19) {
						_case_begin_1a92abd06:;
						{
							goto _match_end_1a92adaa5;
						}
					}
					else {
						_case_begin_1a92adb0a:;
						{
							return false;;
						}
					}
					_match_end_1a92adaa5:;
				};
			}
		}
		_match_end_1a92ad236:;
	};
	jule::Ptr<_1b2753508_Const> _17113_c = (*((*_15026_m.alloc)._field_Right))._field_Model.cast_ptr<_1b2753508_Const>(&__jule_any_type19);;
	{
		auto &_match_expr{ (*((*(_15026_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1a92add19:;
			{
				if ((_1b2755681_ReadStr(_17113_c.ptr())).empty()) {
					jule::Any _17521_model = jule::Any(jule::new_ptr<_1b4d71849_EmptyCompareExprModel>(_1b4d71849_EmptyCompareExprModel{._field_Expr=(*(*_15026_m.alloc)._field_Left.alloc)._field_Model, ._field_Neg=false}), &__jule_any_type126);;
					(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_17521_model))))));
					goto _match_end_1a92b0aa7;
				};
				jule::Any _18217_model = jule::Any(jule::new_ptr<_1b4d72141_StrCompExprModel>(_1b4d72141_StrCompExprModel{._field_Left=(*(*_15026_m.alloc)._field_Left.alloc)._field_Model, ._field_Right=_17113_c, ._field_NotEq=false}), &__jule_any_type127);;
				(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_18217_model))))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1a92b0b51:;
			{
				if ((_1b2755681_ReadStr(_17113_c.ptr())).empty()) {
					jule::Any _19021_model = jule::Any(jule::new_ptr<_1b4d71849_EmptyCompareExprModel>(_1b4d71849_EmptyCompareExprModel{._field_Expr=(*(*_15026_m.alloc)._field_Left.alloc)._field_Model, ._field_Neg=true}), &__jule_any_type126);;
					(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_19021_model))))));
					goto _match_end_1a92b0aa7;
				};
				jule::Any _19717_model = jule::Any(jule::new_ptr<_1b4d72141_StrCompExprModel>(_1b4d72141_StrCompExprModel{._field_Left=(*(*_15026_m.alloc)._field_Left.alloc)._field_Model, ._field_Right=_17113_c, ._field_NotEq=true}), &__jule_any_type127);;
				(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_19717_model))))));
			}
		}
		_match_end_1a92b0aa7:;
	};
	return true;;
}



inline jule::Bool _1b57bdae2_tryNeutralElement1(_1b57bc22d_exprOptimizer* _self_, jule::Ptr<_1b4b28a41_BinaryExprModel>* _20738_m, jule::Ptr<_1b2753508_Const> _20763_c, jule::Ptr<_1b4b28546_OperandExprModel>* _20775_nc) {
	if (_1b2757c7c_IsStr(_20763_c.ptr())) {
		if ((!(_1b57d0ad2_Str))) {
			return false;;
		};
		if (((_1b2755681_ReadStr(_20763_c)).empty() && ((*((*((*(_20738_m))))._field_Op))._field_Id == static_cast<jule::U64>(60LLU)))) {
			(*((*(_self_))._field_model))=(*((*(_20775_nc))))._field_Model;
			return true;;
		};
		return false;;
	};
	if (((!(_1b57cebad_Math)) || (_1b27561ba_AsF64(_20763_c) != 0LL))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_20738_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1a92b974d:;
			{
				if (((*(_20775_nc)) == (*((*(_20738_m))))._field_Left)) {
					(*(*(_self_))._field_model.alloc)=(*((*(_20775_nc))))._field_Model;
					return true;;
				};
				(*(*(_self_))._field_model.alloc)=jule::Any(_20763_c, &__jule_any_type19);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1a92ba40d:;
			{
				_1b2756473_SetI64(_20763_c, 0LL);
				(*(*(_self_))._field_model.alloc)=jule::Any(_20763_c, &__jule_any_type19);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1a92ba474:;
			{
				(*(*(_self_))._field_model.alloc)=(*((*(_20775_nc))))._field_Model;
				return true;;
			}
		}
		_match_end_1a92ba2cb:;
	};
	return false;;
}



inline jule::Bool _1b57bde33_tryNeutralElement(_1b57bc22d_exprOptimizer* _self_, jule::Ptr<_1b4b28a41_BinaryExprModel>* _25137_m) {
	{
		auto &_match_expr{ (*((*((*(_25137_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1a92bd8ea:;
			{
				jule::Ptr<_1b2753508_Const> _25517_c = (*((*((*(_25137_m))))._field_Left))._field_Model.unsafe_cast_ptr<_1b2753508_Const>();;
				return _1b57bdae2_tryNeutralElement1(_self_, _25137_m, _25517_c, &((*((*(_25137_m))))._field_Right));;
			}
		}
		_match_end_1a92bd884:;
	};
	{
		auto &_match_expr{ (*((*((*(_25137_m))))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1a92bdd6d:;
			{
				jule::Ptr<_1b2753508_Const> _26017_c = (*((*((*(_25137_m))))._field_Right))._field_Model.unsafe_cast_ptr<_1b2753508_Const>();;
				return _1b57bdae2_tryNeutralElement1(_self_, _25137_m, _26017_c, &((*((*(_25137_m))))._field_Left));;
			}
		}
		_match_end_1a92bdd07:;
	};
	return false;;
}



inline void _1b57be1db_checkBinaryForBoundary(_1b57bc22d_exprOptimizer* _self_, jule::Ptr<_1b4b28a41_BinaryExprModel>* _26642_m) {
	if (((*((*(_self_))._field_data))._field_boundary == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*((*(_26642_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1a92c2316:;
			{
				jule::Ptr<_1b4b31395_BuiltinLenCallExprModel> _27217_blc = (*((*((*(_26642_m))))._field_Left))._field_Model.unsafe_cast_ptr<_1b4b31395_BuiltinLenCallExprModel>();;
				if ((!(_1b57cd7d3_isBoundaryValidType((*((*(_27217_blc))._field_Expr))._field_Kind)))) {
					return;;
				};
				if ((((*((*((*(_26642_m))))._field_Op))._field_Id != static_cast<jule::U64>(70LLU)) && ((*(*((*(_26642_m))))._field_Op.alloc)._field_Id != static_cast<jule::U64>(50LLU)))) {
					return;;
				};
				if (((*(*((*(_26642_m))))._field_Op.alloc)._field_Id == static_cast<jule::U64>(50LLU))) {
					{
						auto &_match_expr{ (*((*((*(_26642_m))))._field_Right))._field_Model };
						
						if (_match_expr.type == &__jule_any_type19) {
							_case_begin_1a92c557d:;
							{
								jule::Ptr<_1b2753508_Const> _28425_c = jule::new_ptr<_1b2753508_Const>((*((*((*((*(_26642_m))))._field_Right))._field_Model.cast_ptr<_1b2753508_Const>(&__jule_any_type19))));;
								_1b275a554_Sub(_28425_c, (*(static__1b2753948_NewI64(1LL))));
								_1b57cbacd_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1b57cda9c_getBoundaryVar((*(*_27217_blc.alloc)._field_Expr.alloc)._field_Model), jule::Any(_28425_c, &__jule_any_type19));
							}
						}
						_match_end_1a92c5517:;
					};
					return;;
				};
				_1b57cbacd_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1b57cda9c_getBoundaryVar((*(*_27217_blc.alloc)._field_Expr.alloc)._field_Model), (*(*((*(_26642_m))))._field_Right.alloc)._field_Model);
				return;;
			}
		}
		_match_end_1a92c22a0:;
	};
	{
		auto &_match_expr{ (*((*((*(_26642_m))))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1a92c2888:;
			{
				jule::Ptr<_1b4b31395_BuiltinLenCallExprModel> _29517_blc = (*((*((*(_26642_m))))._field_Right))._field_Model.unsafe_cast_ptr<_1b4b31395_BuiltinLenCallExprModel>();;
				if ((!(_1b57cd7d3_isBoundaryValidType((*(*(_29517_blc))._field_Expr.alloc)._field_Kind)))) {
					return;;
				};
				if ((((*(*((*(_26642_m))))._field_Op.alloc)._field_Id != static_cast<jule::U64>(69LLU)) && ((*(*((*(_26642_m))))._field_Op.alloc)._field_Id != static_cast<jule::U64>(50LLU)))) {
					return;;
				};
				if (((*(*((*(_26642_m))))._field_Op.alloc)._field_Id == static_cast<jule::U64>(50LLU))) {
					{
						auto &_match_expr{ (*((*((*(_26642_m))))._field_Left))._field_Model };
						
						if (_match_expr.type == &__jule_any_type19) {
							_case_begin_1a92cc002:;
							{
								jule::Ptr<_1b2753508_Const> _30725_c = jule::new_ptr<_1b2753508_Const>((*((*((*((*(_26642_m))))._field_Left))._field_Model.cast_ptr<_1b2753508_Const>(&__jule_any_type19))));;
								_1b275a554_Sub(_30725_c, (*(static__1b2753948_NewI64(1LL))));
								_1b57cbacd_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1b57cda9c_getBoundaryVar((*(*_29517_blc.alloc)._field_Expr.alloc)._field_Model), jule::Any(_30725_c, &__jule_any_type19));
							}
						}
						_match_end_1a92cbe8b:;
					};
					return;;
				};
				_1b57cbacd_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1b57cda9c_getBoundaryVar((*(*_29517_blc.alloc)._field_Expr.alloc)._field_Model), (*(*((*(_26642_m))))._field_Left.alloc)._field_Model);
				return;;
			}
		}
		_match_end_1a92c2822:;
	};
}



inline void _1b57be494_checkBinaryForNil(_1b57bc22d_exprOptimizer* _self_, jule::Ptr<_1b4b28a41_BinaryExprModel>* _31837_m) {
	if (((*((*(_self_))._field_data))._field_nils == nullptr)) {
		return;;
	};
	jule::Uintptr _32213_var = _1b4d76aa2_getNilVar((*((*((*(_31837_m))))._field_Left))._field_Model);;
	if ((_32213_var != 0LLU)) {
		if ((!(_1b4d76761_isNilValidType((*(*((*(_31837_m))))._field_Left.alloc)._field_Kind)))) {
			return;;
		};
		{
			auto &_match_expr{ (*((*((*(_31837_m))))._field_Right))._field_Model };
			
			if (_match_expr.type == &__jule_any_type19) {
				_case_begin_1a92d2854:;
				{
					_1b4d75562_pushVar((*(*(_self_))._field_data.alloc)._field_nils.ptr(), _32213_var, ((*((*((*(_31837_m))))._field_Op))._field_Id == static_cast<jule::U64>(51LLU)));
				}
			}
			_match_end_1a92d27dd:;
		};
		return;;
	};
	_32213_var=_1b4d76aa2_getNilVar((*((*((*(_31837_m))))._field_Right))._field_Model);
	if ((_32213_var != 0LLU)) {
		if ((!(_1b4d76761_isNilValidType((*(*((*(_31837_m))))._field_Right.alloc)._field_Kind)))) {
			return;;
		};
		{
			auto &_match_expr{ (*((*((*(_31837_m))))._field_Left))._field_Model };
			
			if (_match_expr.type == &__jule_any_type19) {
				_case_begin_1a92d4ee9:;
				{
					_1b4d75562_pushVar((*(*(_self_))._field_data.alloc)._field_nils.ptr(), _32213_var, ((*(*((*(_31837_m))))._field_Op.alloc)._field_Id == static_cast<jule::U64>(51LLU)));
				}
			}
			_match_end_1a92d4e83:;
		};
		return;;
	};
}



inline void _1b57be74c_binary(_1b57bc22d_exprOptimizer* _self_, jule::Ptr<_1b4b28a41_BinaryExprModel> _35025_m) {
	_1b57be1db_checkBinaryForBoundary(_self_, &(_35025_m));
	_1b57be494_checkBinaryForNil(_self_, &(_35025_m));
	static__1b57bcb68_optimizeData(&((*((*(_35025_m))._field_Left))._field_Model), &((*(_self_))._field_data));
	static__1b57bcb68_optimizeData(&((*((*_35025_m.alloc)._field_Right))._field_Model), &((*(_self_))._field_data));
	if (_1b57d0890_Cond) {
		{
			
			if (_1b57bd63b_strCond(_self_, _35025_m) || _1b57bd2ea_boolCond(_self_, &(_35025_m)) || _1b57bcea9_selfCmpCond(_self_, &(_35025_m))) {
				_case_begin_1a92d7c11:;
				{
					return;;
				}
			}
			_match_end_1a92d7b34:;
		};
	};
	if (_1b57bde33_tryNeutralElement(_self_, &(_35025_m))) {
		return;;
	};
	if ((!(_1b57cebad_Math))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_35025_m))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1a92d712d:;
			{
				goto _match_end_1a92d8edc;
			}
		}
		else {
			_case_begin_1a92d9042:;
			{
				return;;
			}
		}
		_match_end_1a92d8edc:;
	};
	jule::Ptr<_1b4c854d8_Prim> _3869_lp = _1b4c80060_Prim((*(*_35025_m.alloc)._field_Left.alloc)._field_Kind.ptr());;
	if ((_3869_lp == nullptr)) {
		return;;
	};
	jule::Ptr<_1b4c854d8_Prim> _3909_rp = _1b4c80060_Prim((*(*_35025_m.alloc)._field_Right.alloc)._field_Kind);;
	if ((_3909_rp == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_35025_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1a92dbc15:;
			{
				jule::Bool _39713_ok;
				jule::U64 _39717_x;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1b57c5ae9_checkForBitShiftOpt(&((*_35025_m.alloc)._field_Left), &((*_35025_m.alloc)._field_Right));
					_39713_ok = __jule_assign_result.__jule_result_arg0;
					_39717_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_39713_ok) {
					(*((*_35025_m.alloc)._field_Op))._field_Id=static_cast<jule::U64>(56LLU);
					(*(*_35025_m.alloc)._field_Op.alloc)._field_Kind=jule::Str::lit("<<", 2);
					jule::Ptr<_1b2753508_Const> _40121_c = (*(*_35025_m.alloc)._field_Right.alloc)._field_Model.cast_ptr<_1b2753508_Const>(&__jule_any_type19);;
					_1b275672b_SetU64(_40121_c.ptr(), _39717_x);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1a92db819:;
			{
				jule::Bool _40813_ok;
				jule::U64 _40817_x;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1b57c5ae9_checkForBitShiftOpt(&((*_35025_m.alloc)._field_Left), &((*_35025_m.alloc)._field_Right));
					_40813_ok = __jule_assign_result.__jule_result_arg0;
					_40817_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_40813_ok) {
					(*((*_35025_m.alloc)._field_Op))._field_Id=static_cast<jule::U64>(57LLU);
					(*(*_35025_m.alloc)._field_Op.alloc)._field_Kind=jule::Str::lit(">>", 2);
					jule::Ptr<_1b2753508_Const> _41221_c = (*(*_35025_m.alloc)._field_Right.alloc)._field_Model.cast_ptr<_1b2753508_Const>(&__jule_any_type19);;
					_1b275672b_SetU64(_41221_c.ptr(), _40817_x);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1a92db891:;
			{
				jule::Ptr<_1b2753508_Const> _41917_c = (*(*_35025_m.alloc)._field_Right.alloc)._field_Model.cast_ptr<_1b2753508_Const>(&__jule_any_type19);;
				if ((_1b27561ba_AsF64(_41917_c.ptr()) == 2LL)) {
					(*((*_35025_m.alloc)._field_Op))._field_Id=static_cast<jule::U64>(65LLU);
					(*(*_35025_m.alloc)._field_Op.alloc)._field_Kind=jule::Str::lit("&", 1);
					_1b2756473_SetI64(_41917_c, 1LL);
					return;;
				};
			}
		}
		else {
			_case_begin_1a92db451:;
			{
				return;;
			}
		}
		_match_end_1a92db7a3:;
	};
	jule::Any _43413_model = jule::Any(jule::new_ptr<_1b4d729c1_UnsafeBinaryExprModel>(_1b4d729c1_UnsafeBinaryExprModel{._field_Node=_35025_m}), &__jule_any_type128);;
	(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_43413_model))))));
}



inline void _1b57bea05_unary(_1b57bc22d_exprOptimizer* _self_, jule::Ptr<_1b4b28e1a_UnaryExprModel> _43824_m) {
	static__1b57bcb68_optimizeData(&((*((*(_43824_m))._field_Expr))._field_Model), &((*(_self_))._field_data));
	if ((!(_1b57d04c7_Ptr))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_43824_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1a92e647d:;
			{
				{
					auto &_match_expr{ (*((*(_43824_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type110) {
						_case_begin_1a92e7528:;
						{
							jule::Ptr<_1b4b28e1a_UnaryExprModel> _44721_um = (*((*(_43824_m))._field_Expr))._field_Model.unsafe_cast_ptr<_1b4b28e1a_UnaryExprModel>();;
							if (((*((*(_44721_um))._field_Op))._field_Id == static_cast<jule::U64>(65LLU))) {
								(*((*(_self_))._field_model))=(*(*_44721_um.alloc)._field_Expr.alloc)._field_Model;
								return;;
							};
							return;;
						}
					}
					_match_end_1a92e74b2:;
				};
				if ((!(_1b57cee66_Access))) {
					return;;
				};
				if ((((*((*(_self_))._field_data))._field_nils != nullptr) && _1b4d76761_isNilValidType((*(*_43824_m.alloc)._field_Expr.alloc)._field_Kind))) {
					jule::Uintptr _46117_var = _1b4d76aa2_getNilVar((*(*_43824_m.alloc)._field_Expr.alloc)._field_Model);;
					if (_1b4d75be4_isSafe((*(*(_self_))._field_data.alloc)._field_nils, _46117_var)) {
						jule::Any _46325_model = jule::Any(jule::new_ptr<_1b4d73cd0_UnsafeDerefExprModel>(_1b4d73cd0_UnsafeDerefExprModel{._field_Base=_43824_m}), &__jule_any_type129);;
						(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_46325_model))))));
						return;;
					};
					_1b4d75562_pushVar((*(*(_self_))._field_data.alloc)._field_nils, _46117_var, true);
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1a92e689b:;
			{
				{
					auto &_match_expr{ (*((*(_43824_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1a92ed023:;
						{
							jule::Ptr<_1b4bddaa1_Var> _47321_v = (*((*(_43824_m))._field_Expr))._field_Model.unsafe_cast_ptr<_1b4bddaa1_Var>();;
							if ((*(_47321_v))._field_Reference) {
								jule::Any _47525_model = jule::Any(jule::new_ptr<_1b4d71bbd_RefExprModel>(_1b4d71bbd_RefExprModel{._field_Var=_47321_v}), &__jule_any_type130);;
								(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_47525_model))))));
							};
						}
					}
					_match_end_1a92eceac:;
				};
			}
		}
		_match_end_1a92e6747:;
	};
}



inline void _1b57becad_structureLit(_1b57bc22d_exprOptimizer* _self_, jule::Ptr<_1b4b297de_StructLitExprModel> _48231_m) {
	{
		auto expr = &((*(_48231_m))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a92ed3b9:;
		if (it != expr_end) {
			jule::Ptr<_1b4b29448_StructArgExprModel> _48321_arg = *it;
			{
				if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
					if (_1b57cd519_isBoundaryRiskyType((*((*(_48321_arg))._field_Expr))._field_Kind)) {
						_1b57cd250_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), jule::Any(_48321_arg, &__jule_any_type131));
					};
				};
				if (((*(*(_self_))._field_data.alloc)._field_nils != nullptr)) {
					_1b4d760ce_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), (*(*_48321_arg.alloc)._field_Expr.alloc)._field_Model);
				};
				if (((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr)) {
					_1b57c817e_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*(*_48321_arg.alloc)._field_Expr.alloc)._field_Model);
				};
				static__1b57bcb68_optimizeData(&((*(*_48321_arg.alloc)._field_Expr.alloc)._field_Model), &((*(_self_))._field_data));
			}
			_iter_next_1a92ed3b9:;
			++it;
			goto _iter_begin_1a92ed3b9;
		}
		_iter_end_1a92ed3b9:;
	};
}



inline void _1b57c0066_allocStructure(_1b57bc22d_exprOptimizer* _self_, jule::Ptr<_1b4b29adb_AllocStructLitExprModel> _49933_m) {
	_1b57becad_structureLit(_self_, (*(_49933_m))._field_Lit);
}



inline void _1b57c031e_casting(_1b57bc22d_exprOptimizer* _self_, jule::Ptr<_1b4b2a16e_CastingExprModel> _50326_m) {
	jule::Bool _5049_valid = _1b57c848c_isDynamicValidType((*(_50326_m))._field_ExprKind);;
	jule::Uintptr _5059_var = _1b57c8c0c_getDynamicVar((*((*_50326_m.alloc)._field_Expr))._field_Model);;
	if (((_5049_valid && ((*((*(_self_))._field_data))._field_dynamic != nullptr)) && _1b57c7c94_isFits((*(*(_self_))._field_data.alloc)._field_dynamic, _5059_var, (*_50326_m.alloc)._field_Kind))) {
		jule::Any _50717_model = jule::Any(jule::new_ptr<_1b4d740cc_UnsafeCastingExprModel>(_1b4d740cc_UnsafeCastingExprModel{._field_Base=_50326_m}), &__jule_any_type132);;
		(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_50717_model))))));
		return;;
	};
	static__1b57bcb68_optimizeData(&((*(*_50326_m.alloc)._field_Expr.alloc)._field_Model), &((*(_self_))._field_data));
	if ((((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr) && _5049_valid)) {
		_1b57c7557_pushVar((*(*(_self_))._field_data.alloc)._field_dynamic, _5059_var, (*_50326_m.alloc)._field_Kind);
	};
}



inline void _1b57c0682_args(_1b57bc22d_exprOptimizer* _self_, jule::Slice<jule::Ptr<_1b4b387dc_ParamIns>> _51723_params, jule::Slice<jule::Any>* _51749_args) {
	{
		auto expr = _51749_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a93098ae:;
		if (it != expr_end) {
			jule::I64 _51814_i = it - expr->begin();
			jule::Any _51821_arg = *it;
			{
				if ((_51814_i < _51723_params.len())) {
					jule::Ptr<_1b4b387dc_ParamIns> _52021_p = _51723_params[_51814_i];;
					if (((*((*(_52021_p))._field_Decl))._field_Mutable && (*(*_52021_p.alloc)._field_Decl.alloc)._field_Reference)) {
						if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
							if (_1b57cd519_isBoundaryRiskyType((*_52021_p.alloc)._field_Kind)) {
								_1b57cd250_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), _51821_arg);
							};
						};
						if (((*(*(_self_))._field_data.alloc)._field_nils != nullptr)) {
							_1b4d760ce_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), _51821_arg);
						};
						if (((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr)) {
							_1b57c817e_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), _51821_arg);
						};
					};
				};
				static__1b57bcb68_optimizeData(&(_51821_arg), &((*(_self_))._field_data));
				(*(_51749_args))[_51814_i]=_51821_arg;
			}
			_iter_next_1a93098ae:;
			++it;
			_51814_i++;
			goto _iter_begin_1a93098ae;
		}
		_iter_end_1a93098ae:;
	};
}



inline void _1b57c093a_scope(_1b57bc22d_exprOptimizer* _self_, jule::Ptr<_1b4b7880a_Scope>* _54025_s) {
	jule::Ptr<_1b57b5aa6_scopeOptimizer> _54113_scopt = static__1b57b6128_new((*(_54025_s)));;
	(*(_54113_scopt))._field_data=(*(_self_))._field_data;
	_1b57ba292_optimize(_54113_scopt);
}



inline void _1b57c0be3_funcCall(_1b57bc22d_exprOptimizer* _self_, jule::Ptr<_1b4b2aa21_FnCallExprModel> _54627_m) {
	static__1b57bcb68_optimizeData(&((*(_54627_m))._field_Expr), &((*(_self_))._field_data));
	_1b57c0682_args(_self_, (*((*_54627_m.alloc)._field_Func))._field_Params, &((*_54627_m.alloc)._field_Args));
	if (((*_54627_m.alloc)._field_Except != nullptr)) {
		_1b57c093a_scope(_self_, &((*_54627_m.alloc)._field_Except));
	};
}



inline void _1b57c0e9b_slice(_1b57bc22d_exprOptimizer* _self_, jule::Ptr<_1b4b2adea_SliceExprModel> _55424_m) {
	_1b57c0682_args(_self_, nullptr, &((*(_55424_m))._field_Elems));
}



inline void _1b57c1254_array(_1b57bc22d_exprOptimizer* _self_, jule::Ptr<_1b4b2de0e_ArrayExprModel> _55824_m) {
	if ((((*(_55824_m))._field_Elems.len() == 2LL) && ((*_55824_m.alloc)._field_Elems[1LL] == nullptr))) {
		jule::Any _56017_elem = (*_55824_m.alloc)._field_Elems[0LL];;
		static__1b57bcb68_optimizeData(&(_56017_elem), &((*(_self_))._field_data));
		(*_55824_m.alloc)._field_Elems[0LL]=_56017_elem;
	};
	_1b57c0682_args(_self_, nullptr, &((*_55824_m.alloc)._field_Elems));
}



inline void _1b57c150c_indexing(_1b57bc22d_exprOptimizer* _self_, jule::Ptr<_1b4b2b3a1_IndexingExprModel> _56727_m) {
	static__1b57bcb68_optimizeData(&((*((*(_56727_m))._field_Expr))._field_Model), &((*(_self_))._field_data));
	static__1b57bcb68_optimizeData(&((*((*_56727_m.alloc)._field_Index))._field_Model), &((*(_self_))._field_data));
	if ((!(_1b57cee66_Access))) {
		return;;
	};
	jule::Bool _5749_array = (_1b4c80d30_Arr((*(*_56727_m.alloc)._field_Expr.alloc)._field_Kind.ptr()) != nullptr);;
	if ((_5749_array && _1b4c470b0_IsConst((*_56727_m.alloc)._field_Index))) {
		jule::Any _57717_model = jule::Any(jule::new_ptr<_1b4d72d56_UnsafeIndexingExprModel>(_1b4d72d56_UnsafeIndexingExprModel{._field_Node=_56727_m}), &__jule_any_type133);;
		(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_57717_model))))));
		return;;
	};
	if ((((*((*(_self_))._field_data))._field_boundary != nullptr) && _1b57cd7d3_isBoundaryValidType((*(*_56727_m.alloc)._field_Expr.alloc)._field_Kind))) {
		jule::Uintptr _58313_var = _1b57cda9c_getBoundaryVar((*(*_56727_m.alloc)._field_Expr.alloc)._field_Model);;
		if (_1b57cc31a_fitsMaxSize((*(*(_self_))._field_data.alloc)._field_boundary, _58313_var, (*(*_56727_m.alloc)._field_Index.alloc)._field_Model)) {
			jule::Any _58521_model = jule::Any(jule::new_ptr<_1b4d72d56_UnsafeIndexingExprModel>(_1b4d72d56_UnsafeIndexingExprModel{._field_Node=_56727_m}), &__jule_any_type133);;
			(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_58521_model))))));
			return;;
		};
		_1b57cbacd_pushVar((*(*(_self_))._field_data.alloc)._field_boundary, _58313_var, (*(*_56727_m.alloc)._field_Index.alloc)._field_Model);
	};
}



inline void _1b57c17b5_anonFunc(_1b57bc22d_exprOptimizer* _self_, jule::Ptr<_1b4b2b857_AnonFnExprModel> _59327_m) {
	_1b57c093a_scope(_self_, &((*((*(_59327_m))._field_Func))._field_Scope));
}



inline void _1b57c1a6d_mapExpr(_1b57bc22d_exprOptimizer* _self_, jule::Ptr<_1b4b2c1d7_MapExprModel> _59726_m) {
	{
		auto expr = &((*(_59726_m))._field_Entries);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a931cc57:;
		if (it != expr_end) {
			jule::Ptr<_1b4b2bc31_KeyValPairExprModel> _59821_pair = *it;
			{
				static__1b57bcb68_optimizeData(&((*(_59821_pair))._field_Key), &((*(_self_))._field_data));
				static__1b57bcb68_optimizeData(&((*_59821_pair.alloc)._field_Val), &((*(_self_))._field_data));
			}
			_iter_next_1a931cc57:;
			++it;
			goto _iter_begin_1a931cc57;
		}
		_iter_end_1a931cc57:;
	};
}



inline void _1b57c1d26_slicing(_1b57bc22d_exprOptimizer* _self_, jule::Ptr<_1b4b2c76a_SlicingExprModel> _60426_m) {
	static__1b57bcb68_optimizeData(&((*(_60426_m))._field_Expr), &((*(_self_))._field_data));
	static__1b57bcb68_optimizeData(&((*_60426_m.alloc)._field_Left), &((*(_self_))._field_data));
	if (((*_60426_m.alloc)._field_Right != nullptr)) {
		static__1b57bcb68_optimizeData(&((*_60426_m.alloc)._field_Right), &((*(_self_))._field_data));
	};
}



inline void _1b57c20ce_traitSub(_1b57bc22d_exprOptimizer* _self_, jule::Ptr<_1b4b2cced_TraitSubIdentExprModel> _61227_m) {
	static__1b57bcb68_optimizeData(&((*(_61227_m))._field_Expr), &((*(_self_))._field_data));
}



inline void _1b57c2387_structureSub(_1b57bc22d_exprOptimizer* _self_, jule::Ptr<_1b4b2d68e_StructSubIdentExprModel> _61631_m) {
	static__1b57bcb68_optimizeData(&((*((*(_61631_m))._field_Expr))._field_Model), &((*(_self_))._field_data));
}



inline void _1b57c2640_tuple(_1b57bc22d_exprOptimizer* _self_, jule::Ptr<_1b4b2e20b_TupleExprModel> _62024_m) {
	{
		auto expr = &((*(_62024_m))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9322047:;
		if (it != expr_end) {
			jule::Ptr<_1b4c466a8_Data> _62121_d = *it;
			{
				static__1b57bcb68_optimizeData(&((*(_62121_d))._field_Model), &((*(_self_))._field_data));
			}
			_iter_next_1a9322047:;
			++it;
			goto _iter_begin_1a9322047;
		}
		_iter_end_1a9322047:;
	};
}



inline void _1b57c28e8_newCall(_1b57bc22d_exprOptimizer* _self_, jule::Ptr<_1b4b2ed88_BuiltinNewCallExprModel> _62626_m) {
	if (((*(_62626_m))._field_Init != nullptr)) {
		static__1b57bcb68_optimizeData(&((*_62626_m.alloc)._field_Init), &((*(_self_))._field_data));
	};
}



inline void _1b57c2ba1_outCall(_1b57bc22d_exprOptimizer* _self_, jule::Ptr<_1b4b2e5d5_BuiltinOutCallExprModel> _63226_m) {
	static__1b57bcb68_optimizeData(&((*(_63226_m))._field_Expr), &((*(_self_))._field_data));
}



inline void _1b57c2e59_outlnCall(_1b57bc22d_exprOptimizer* _self_, jule::Ptr<_1b4b2e9ae_BuiltinOutlnCallExprModel> _63628_m) {
	static__1b57bcb68_optimizeData(&((*(_63628_m))._field_Expr), &((*(_self_))._field_data));
}



inline void _1b57c3212_panicCall(_1b57bc22d_exprOptimizer* _self_, jule::Ptr<_1b4b30262_BuiltinPanicCallExprModel> _64028_m) {
	static__1b57bcb68_optimizeData(&((*(_64028_m))._field_Expr), &((*(_self_))._field_data));
}



inline void _1b57c34ba_assertCall(_1b57bc22d_exprOptimizer* _self_, jule::Ptr<_1b4b30718_BuiltinAssertCallExprModel> _64429_m) {
	static__1b57bcb68_optimizeData(&((*(_64429_m))._field_Expr), &((*(_self_))._field_data));
}



inline void _1b57c3773_errorCall(_1b57bc22d_exprOptimizer* _self_, jule::Ptr<_1b4b3231e_BuiltinErrorCallExprModel> _64828_m) {
	static__1b57bcb68_optimizeData(&((*((*(_64828_m))._field_Err))._field_Model), &((*(_self_))._field_data));
}



inline void _1b57c3a2b_makeCall(_1b57bc22d_exprOptimizer* _self_, jule::Ptr<_1b4b30bbe_BuiltinMakeCallExprModel> _65227_m) {
	if (((*(_65227_m))._field_Len != nullptr)) {
		static__1b57bcb68_optimizeData(&((*_65227_m.alloc)._field_Len), &((*(_self_))._field_data));
	};
	if (((*_65227_m.alloc)._field_Cap != nullptr)) {
		static__1b57bcb68_optimizeData(&((*_65227_m.alloc)._field_Cap), &((*(_self_))._field_data));
	};
}



inline void _1b57c3cd4_appendCall(_1b57bc22d_exprOptimizer* _self_, jule::Ptr<_1b4b31098_BuiltinAppendCallExprModel> _66129_m) {
	static__1b57bcb68_optimizeData(&((*(_66129_m))._field_Dest), &((*(_self_))._field_data));
	static__1b57bcb68_optimizeData(&((*_66129_m.alloc)._field_Elements), &((*(_self_))._field_data));
}



inline void _1b57c408c_lenCall(_1b57bc22d_exprOptimizer* _self_, jule::Ptr<_1b4b31395_BuiltinLenCallExprModel> _66626_m) {
	static__1b57bcb68_optimizeData(&((*((*(_66626_m))._field_Expr))._field_Model), &((*(_self_))._field_data));
}



inline void _1b57c4345_capCall(_1b57bc22d_exprOptimizer* _self_, jule::Ptr<_1b4b31692_BuiltinCapCallExprModel> _67026_m) {
	static__1b57bcb68_optimizeData(&((*((*(_67026_m))._field_Expr))._field_Model), &((*(_self_))._field_data));
}



inline void _1b57c45ed_deleteCall(_1b57bc22d_exprOptimizer* _self_, jule::Ptr<_1b4b31a6b_BuiltinDeleteCallExprModel> _67429_m) {
	static__1b57bcb68_optimizeData(&((*((*(_67429_m))._field_Dest))._field_Model), &((*(_self_))._field_data));
	if (((*_67429_m.alloc)._field_Key != nullptr)) {
		static__1b57bcb68_optimizeData(&((*(*_67429_m.alloc)._field_Key.alloc)._field_Model), &((*(_self_))._field_data));
	};
}



inline void _1b57c48a6_sizeof(_1b57bc22d_exprOptimizer* _self_, jule::Ptr<_1b4b329c3_SizeofExprModel> _68125_m) {
	static__1b57bcb68_optimizeData(&((*(_68125_m))._field_Expr), &((*(_self_))._field_data));
}



inline void _1b57c4b5e_alignof(_1b57bc22d_exprOptimizer* _self_, jule::Ptr<_1b4b32bb0_AlignofExprModel> _68526_m) {
	static__1b57bcb68_optimizeData(&((*(_68526_m))._field_Expr), &((*(_self_))._field_data));
}



inline void _1b57c4e17_integratedToStr(_1b57bc22d_exprOptimizer* _self_, jule::Ptr<_1b4b33254_IntegratedToStrExprModel> _68934_m) {
	static__1b57bcb68_optimizeData(&((*(_68934_m))._field_Expr), &((*(_self_))._field_data));
}



inline void _1b57c51c0_free(_1b57bc22d_exprOptimizer* _self_, jule::Ptr<_1b4b3392a_FreeExprModel> _69323_m) {
	static__1b57bcb68_optimizeData(&((*(_69323_m))._field_Expr), &((*(_self_))._field_data));
}



inline void _1b57c5478_backendEmit(_1b57bc22d_exprOptimizer* _self_, jule::Ptr<_1b4b3362d_BackendEmitExprModel> _69730_m) {
	_1b57c0682_args(_self_, nullptr, &((*(_69730_m))._field_Exprs));
}



inline void _1b57c5676_do(_1b57bc22d_exprOptimizer* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_model)) };
		
		if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1a933075e:;
			{
				_1b57be74c_binary(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1b4b28a41_BinaryExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1a9330231:;
			{
				_1b57bea05_unary(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1b4b28e1a_UnaryExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1a93307d6:;
			{
				_1b57becad_structureLit(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1b4b297de_StructLitExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1a933085d:;
			{
				_1b57c0066_allocStructure(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1b4b29adb_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1a93308d5:;
			{
				_1b57c031e_casting(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1b4b2a16e_CastingExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1a933095c:;
			{
				_1b57c0be3_funcCall(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1b4b2aa21_FnCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1a93309d4:;
			{
				_1b57c0e9b_slice(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1b4b2adea_SliceExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1a9330a5b:;
			{
				_1b57c1254_array(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1b4b2de0e_ArrayExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1a9330ad3:;
			{
				_1b57c150c_indexing(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1b4b2b3a1_IndexingExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1a9330b5a:;
			{
				_1b57c17b5_anonFunc(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1b4b2b857_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1a9330bd2:;
			{
				_1b57c1a6d_mapExpr(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1b4b2c1d7_MapExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1a9330c59:;
			{
				_1b57c1d26_slicing(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1b4b2c76a_SlicingExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1a9330cd1:;
			{
				_1b57c20ce_traitSub(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1b4b2cced_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1a9330d58:;
			{
				_1b57c2387_structureSub(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1b4b2d68e_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1a9330dd0:;
			{
				_1b57c2640_tuple(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1b4b2e20b_TupleExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1a9330e57:;
			{
				_1b57c2ba1_outCall(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1b4b2e5d5_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1a9330ece:;
			{
				_1b57c2e59_outlnCall(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1b4b2e9ae_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1a9331056:;
			{
				_1b57c28e8_newCall(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1b4b2ed88_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1a93310cd:;
			{
				_1b57c3212_panicCall(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1b4b30262_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1a9331155:;
			{
				_1b57c34ba_assertCall(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1b4b30718_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1a93311cc:;
			{
				_1b57c3773_errorCall(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1b4b3231e_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1a9331254:;
			{
				_1b57c3a2b_makeCall(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1b4b30bbe_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1a93312cb:;
			{
				_1b57c3cd4_appendCall(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1b4b31098_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1a9331353:;
			{
				_1b57c408c_lenCall(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1b4b31395_BuiltinLenCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1a93313ca:;
			{
				_1b57c4345_capCall(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1b4b31692_BuiltinCapCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1a9331452:;
			{
				_1b57c45ed_deleteCall(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1b4b31a6b_BuiltinDeleteCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1a93314c9:;
			{
				_1b57c48a6_sizeof(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1b4b329c3_SizeofExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1a9331551:;
			{
				_1b57c4b5e_alignof(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1b4b32bb0_AlignofExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1a93315c8:;
			{
				_1b57c4e17_integratedToStr(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1b4b33254_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1a9331650:;
			{
				_1b57c51c0_free(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1b4b3392a_FreeExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1a93316c7:;
			{
				_1b57c5478_backendEmit(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1b4b3362d_BackendEmitExprModel>());
			}
		}
		_match_end_1a93304b7:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1b57bc22d_exprOptimizer _Src) {
	_Stream << "exprOptimizer{";
	_Stream << "model:" << _Src._field_model << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b57c6ca4_dynamicVar _Src) {
	_Stream << "dynamicVar{";
	_Stream << "var:" << _Src._field_var << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline void _1b57c7557_pushVar(jule::Ptr<_1b57c70e5_dynamic> _self_, jule::Uintptr _3227_var, jule::Ptr<_1b4c7c90e_TypeKind> _3245_kind) {
	if (((!(_1b57d194b_Dynamic)) || (_3227_var == 0LLU))) {
		return;;
	};
	_3245_kind=_1b57c88bb_isTypeGuaranteedDynamicData(&(_self_), _3245_kind, nullptr);
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a934ce41:;
		if (it != expr_end) {
			_1b57c6ca4_dynamicVar _3821_v = *it;
			{
				if ((_3821_v._field_var == _3227_var)) {
					_3821_v._field_kind=_3245_kind;
					return;;
				};
			}
			_iter_next_1a934ce41:;
			++it;
			goto _iter_begin_1a934ce41;
		}
		_iter_end_1a934ce41:;
	};
	{
		auto expr = &((*_self_.alloc)._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a934d903:;
		if (it != expr_end) {
			_1b57c6ca4_dynamicVar _4521_v = *it;
			{
				if ((_4521_v._field_var == 0LLU)) {
					({
						jule::Uintptr ___jule_assign_arg = _3227_var;
						jule::Ptr<_1b4c7c90e_TypeKind> _1___jule_assign_arg = _3245_kind;
						_4521_v._field_var = ___jule_assign_arg;
						_4521_v._field_kind = _1___jule_assign_arg;
					});
					return;;
				};
			}
			_iter_next_1a934d903:;
			++it;
			goto _iter_begin_1a934d903;
		}
		_iter_end_1a934d903:;
	};
	(*_self_.alloc)._field_vars=jule::append((*_self_.alloc)._field_vars,jule::Slice<_1b57c6ca4_dynamicVar>::make({_1b57c6ca4_dynamicVar{._field_var=_3227_var, ._field_kind=_3245_kind}}));
}



inline jule::Bool _1b57c7898_removeVar(_1b57c70e5_dynamic* _self_, jule::Uintptr _5528_var) {
	if ((_5528_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a9350aae:;
			if (it != expr_end) {
				_1b57c6ca4_dynamicVar _5725_v = *it;
				{
					if ((_5725_v._field_var == _5528_var)) {
						_5725_v._field_var=0LLU;
						_5725_v._field_kind=nullptr;
						return true;;
					};
				}
				_iter_next_1a9350aae:;
				++it;
				goto _iter_begin_1a9350aae;
			}
			_iter_end_1a9350aae:;
		};
	};
	return false;;
}



inline jule::Bool _1b57c7c94_isFits(_1b57c70e5_dynamic* _self_, jule::Uintptr _6925_var, jule::Ptr<_1b4c7c90e_TypeKind> _6939_kind) {
	if ((_6925_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a9352440:;
			if (it != expr_end) {
				_1b57c6ca4_dynamicVar _7120_v = *it;
				{
					if ((_7120_v._field_var == _6925_var)) {
						return ((_7120_v._field_kind != nullptr) && _1b4c7d118_Equal(_7120_v._field_kind, _6939_kind));;
					};
				}
				_iter_next_1a9352440:;
				++it;
				goto _iter_begin_1a9352440;
			}
			_iter_end_1a9352440:;
		};
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1b57c70e5_dynamic _Src) {
	_Stream << "dynamic{";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline _1b57c9779_dataCheckpoint _1b57ca0e8_getCheckpoint(_1b57c9c74_data* _self_) {
	_1b57c9779_dataCheckpoint _2513_c = _1b57c9779_dataCheckpoint{};;
	_2513_c._field_boundary._field_vars=jule::append(jule::Slice<_1b57cb32a_boundaryVar>::alloc(0LL, 0LL),(*((*(_self_))._field_boundary))._field_vars);
	{
		auto expr = &(_2513_c._field_boundary._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9354310:;
		if (it != expr_end) {
			jule::I64 _2713_i = it - expr->begin();
			{
				_2513_c._field_boundary._field_vars[_2713_i]._field_maxSize=jule::append(jule::Slice<jule::Any>::alloc(0LL, 0LL, jule::Any(nullptr)),_2513_c._field_boundary._field_vars[_2713_i]._field_maxSize);
			}
			_iter_next_1a9354310:;
			++it;
			_2713_i++;
			goto _iter_begin_1a9354310;
		}
		_iter_end_1a9354310:;
	};
	_2513_c._field_nils._field_vars=jule::append(jule::Slice<_1b4d74cae_nilVar>::alloc(0LL, 0LL),(*((*(_self_))._field_nils))._field_vars);
	_2513_c._field_dynamic._field_vars=jule::append(jule::Slice<_1b57c6ca4_dynamicVar>::alloc(0LL, 0LL),(*((*(_self_))._field_dynamic))._field_vars);
	return _2513_c;;
}



inline void _1b57ca3a1_loadCheckpoint(_1b57c9c74_data* _self_, _1b57c9779_dataCheckpoint* _3538_c) {
	(*((*(_self_))._field_boundary))=(*(_3538_c))._field_boundary;
	(*((*(_self_))._field_nils))=(*(_3538_c))._field_nils;
	(*((*(_self_))._field_dynamic))=(*(_3538_c))._field_dynamic;
}





std::ostream &operator<<(std::ostream &_Stream, _1b57c9c74_data _Src) {
	_Stream << "data{";
	_Stream << "boundary:" << _Src._field_boundary << ", ";
	_Stream << "nils:" << _Src._field_nils << ", ";
	_Stream << "dynamic:" << _Src._field_dynamic;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b57cb32a_boundaryVar _Src) {
	_Stream << "boundaryVar{";
	_Stream << "var:" << _Src._field_var << ", ";
	_Stream << "maxSize:" << _Src._field_maxSize;
	_Stream << "}";
	return _Stream;
}



inline void _1b57cbacd_pushVar(_1b57cb66b_boundary* _self_, jule::Uintptr _2426_var, jule::Any _2444_maxSize) {
	if (((!(_1b57cee66_Access)) || (_2426_var == 0LLU))) {
		return;;
	};
	if ((!(_1b57cc6d3_isValidBoundaryInfo(_2444_maxSize)))) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9368434:;
		if (it != expr_end) {
			_1b57cb32a_boundaryVar _3221_v = *it;
			{
				if ((_3221_v._field_var == _2426_var)) {
					{
						auto expr = &(_3221_v._field_maxSize);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1a936919e:;
						if (it != expr_end) {
							jule::I64 _3421_i = it - expr->begin();
							jule::Any _3424_max = *it;
							{
								if (_1b57cce20_fitsSize(_2444_maxSize, _3424_max)) {
									_3221_v._field_maxSize[_3421_i]=_2444_maxSize;
									return;;
								};
							}
							_iter_next_1a936919e:;
							++it;
							_3421_i++;
							goto _iter_begin_1a936919e;
						}
						_iter_end_1a936919e:;
					};
					{ jule::Slice<jule::Any> &__jule_push_dest = _3221_v._field_maxSize; __jule_push_dest.push(_2444_maxSize); };
					return;;
				};
			}
			_iter_next_1a9368434:;
			++it;
			goto _iter_begin_1a9368434;
		}
		_iter_end_1a9368434:;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9368c70:;
		if (it != expr_end) {
			_1b57cb32a_boundaryVar _4621_v = *it;
			{
				if ((_4621_v._field_var == 0LLU)) {
					_4621_v._field_var=_2426_var;
					{ jule::Slice<jule::Any> &__jule_push_dest = _4621_v._field_maxSize; __jule_push_dest.push(_2444_maxSize); };
					return;;
				};
			}
			_iter_next_1a9368c70:;
			++it;
			goto _iter_begin_1a9368c70;
		}
		_iter_end_1a9368c70:;
	};
	{ jule::Slice<_1b57cb32a_boundaryVar> &__jule_push_dest = (*(_self_))._field_vars; __jule_push_dest.push(_1b57cb32a_boundaryVar{._field_var=_2426_var, ._field_maxSize=jule::Slice<jule::Any>::make({_2444_maxSize})}); };
}



inline jule::Bool _1b57cc31a_fitsMaxSize(_1b57cb66b_boundary* _self_, jule::Uintptr _7130_var, jule::Any _7144_expr) {
	if ((_7130_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a936da33:;
			if (it != expr_end) {
				_1b57cb32a_boundaryVar _7320_v = *it;
				{
					if ((_7320_v._field_var == _7130_var)) {
						return (_1b57cca9b_fitsMaxSize(_7320_v._field_maxSize, _7144_expr) != -1LL);;
					};
				}
				_iter_next_1a936da33:;
				++it;
				goto _iter_begin_1a936da33;
			}
			_iter_end_1a936da33:;
		};
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1b57cb66b_boundary _Src) {
	_Stream << "boundary{";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b5946a06_Optimizer> static__1b5946e79_New(jule::Ptr<_1b57a68aa_IR>* _2624_ir) {
	return jule::new_ptr<_1b5946a06_Optimizer>(_1b5946a06_Optimizer{._field_ir=(*(_2624_ir))});;
}



inline void _1b5947232_optimizeGlobal(_1b5946a06_Optimizer* _self_, jule::Ptr<_1b4bddaa1_Var>* _3238_v) {
	if ((!((*((*(_3238_v))))._field_Binded))) {
		static__1b57bc87c_optimize(&((*((*((*((*(_3238_v))))._field_Value))._field_Data))._field_Model));
	};
}



inline void _1b59474da_optimizeFunction(_1b5946a06_Optimizer* _self_, jule::Ptr<_1b4b36884_Fn>* _3840_func) {
	if ((*((*(_3840_func))))._field_Binded) {
		return;;
	};
	{
		auto expr = &((*((*(_3840_func))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9373d24:;
		if (it != expr_end) {
			jule::Ptr<_1b4b39865_FnIns> _4221_ins = *it;
			{
				jule::Ptr<_1b57b5aa6_scopeOptimizer> _4317_so = static__1b57b6128_new((*(_4221_ins))._field_Scope);;
				_1b57ba292_optimize(_4317_so);
			}
			_iter_next_1a9373d24:;
			++it;
			goto _iter_begin_1a9373d24;
		}
		_iter_end_1a9373d24:;
	};
}



inline void _1b5947793_optimizeStruct(_1b5946a06_Optimizer* _self_, jule::Ptr<_1b4b218b3_Struct>* _4838_s) {
	if ((*((*(_4838_s))))._field_Binded) {
		return;;
	};
	{
		auto expr = &((*((*(_4838_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a93754c9:;
		if (it != expr_end) {
			jule::Ptr<_1b4b24641_StructIns> _5221_ins = *it;
			{
				{
					auto expr = &((*(_5221_ins))._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a9375dc0:;
					if (it != expr_end) {
						jule::Ptr<_1b4b23a91_FieldIns> _5325_f = *it;
						{
							if (((*(_5325_f))._field_Default != nullptr)) {
								static__1b57bc87c_optimize(&((*(*_5325_f.alloc)._field_Default.alloc)._field_Model));
							};
						}
						_iter_next_1a9375dc0:;
						++it;
						goto _iter_begin_1a9375dc0;
					}
					_iter_end_1a9375dc0:;
				};
				{
					auto expr = &((*_5221_ins.alloc)._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a9376310:;
					if (it != expr_end) {
						jule::Ptr<_1b4b36884_Fn> _5825_m = *it;
						{
							_1b59474da_optimizeFunction(_self_, &(_5825_m));
						}
						_iter_next_1a9376310:;
						++it;
						goto _iter_begin_1a9376310;
					}
					_iter_end_1a9376310:;
				};
			}
			_iter_next_1a93754c9:;
			++it;
			goto _iter_begin_1a93754c9;
		}
		_iter_end_1a93754c9:;
	};
}



inline void _1b5947a4b_optimizeGlobals(_1b5946a06_Optimizer* _self_, jule::Ptr<_1b4b9d7b9_Package>* _6439_p) {
	{
		auto expr = &((*((*(_6439_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9377630:;
		if (it != expr_end) {
			jule::Ptr<_1b4c41340_SymbolTable> _6521_f = *it;
			{
				{
					auto expr = &((*(_6521_f))._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a9378433:;
					if (it != expr_end) {
						jule::Ptr<_1b4bddaa1_Var> _6625_v = *it;
						{
							_1b5947232_optimizeGlobal(_self_, &(_6625_v));
						}
						_iter_next_1a9378433:;
						++it;
						goto _iter_begin_1a9378433;
					}
					_iter_end_1a9378433:;
				};
			}
			_iter_next_1a9377630:;
			++it;
			goto _iter_begin_1a9377630;
		}
		_iter_end_1a9377630:;
	};
}



inline void _1b5947d04_optimizeFunctions(_1b5946a06_Optimizer* _self_, jule::Ptr<_1b4b9d7b9_Package>* _7241_p) {
	{
		auto expr = &((*((*(_7241_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a93789b6:;
		if (it != expr_end) {
			jule::Ptr<_1b4c41340_SymbolTable> _7321_f = *it;
			{
				{
					auto expr = &((*(_7321_f))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a9379830:;
					if (it != expr_end) {
						jule::Ptr<_1b4b36884_Fn> _7425_func = *it;
						{
							_1b59474da_optimizeFunction(_self_, &(_7425_func));
						}
						_iter_next_1a9379830:;
						++it;
						goto _iter_begin_1a9379830;
					}
					_iter_end_1a9379830:;
				};
			}
			_iter_next_1a93789b6:;
			++it;
			goto _iter_begin_1a93789b6;
		}
		_iter_end_1a93789b6:;
	};
}



inline void _1b59480ac_optimizeStructs(_1b5946a06_Optimizer* _self_, jule::Ptr<_1b4b9d7b9_Package>* _8039_p) {
	{
		auto expr = &((*((*(_8039_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9379db3:;
		if (it != expr_end) {
			jule::Ptr<_1b4c41340_SymbolTable> _8121_f = *it;
			{
				{
					auto expr = &((*(_8121_f))._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a937ac2c:;
					if (it != expr_end) {
						jule::Ptr<_1b4b218b3_Struct> _8225_s = *it;
						{
							_1b5947793_optimizeStruct(_self_, &(_8225_s));
						}
						_iter_next_1a937ac2c:;
						++it;
						goto _iter_begin_1a937ac2c;
					}
					_iter_end_1a937ac2c:;
				};
			}
			_iter_next_1a9379db3:;
			++it;
			goto _iter_begin_1a9379db3;
		}
		_iter_end_1a9379db3:;
	};
}



inline void _1b5948365_optimizePackage(_1b5946a06_Optimizer* _self_, jule::Ptr<_1b4b9d7b9_Package>* _8839_p) {
	_1b5947a4b_optimizeGlobals(_self_, _8839_p);
	_1b5947d04_optimizeFunctions(_self_, _8839_p);
	_1b59480ac_optimizeStructs(_self_, _8839_p);
}



inline void _1b5948563_Optimize(_1b5946a06_Optimizer* _self_) {
	_1b594880a_detectEnabled();
	if (_1b57ce608_Deadcode) {
		_1b593990b_EliminateDefines(&((*(_self_))._field_ir));
	};
	if ((_1b5946808_scopeEnabled || _1b5946583_exprEnabled)) {
		{
			auto expr = &((*((*(_self_))._field_ir))._field_Used);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a937cc1d:;
			if (it != expr_end) {
				jule::Ptr<_1b4b9a893_ImportInfo> _10425_u = *it;
				{
					if ((!((*(_10425_u))._field_Binded))) {
						_1b5948365_optimizePackage(_self_, &((*_10425_u.alloc)._field_Package));
					};
				}
				_iter_next_1a937cc1d:;
				++it;
				goto _iter_begin_1a937cc1d;
			}
			_iter_end_1a937cc1d:;
		};
		_1b5948365_optimizePackage(_self_, &((*(*(_self_))._field_ir.alloc)._field_Main));
	};
	if (_1b57ce608_Deadcode) {
		_1b593e3b1_EliminateScopes(&((*(_self_))._field_ir));
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1b5946a06_Optimizer _Src) {
	_Stream << "Optimizer{";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline void static__1b5948ba1_Reset(void) {
	jule::out(jule::Str::lit("\033[0m", 4));
}



inline void static__1b596d588_Print(jule::Str _1921_escape, jule::Str _1934_text) {
	jule::out(_1921_escape);
	jule::out(_1934_text);
	static__1b5948ba1_Reset();
}





std::ostream &operator<<(std::ostream &_Stream, _1b596e710_AnsiEscape _Src) {
	_Stream << "AnsiEscape{";
	_Stream << "}";
	return _Stream;
}



inline void static__1b597105d_LogFlat(_1cb285120_Log* _1424_l) {
	jule::outln((*(_1424_l))._field_Text);
}



inline void static__1b597128e_LogError(_1cb285120_Log* _1925_l) {
	jule::out(jule::Str::lit("\033[31m", 5));
	jule::out(jule::Str::lit("error: ", 7));
	jule::out((*(_1925_l))._field_Text);
	static__1b5948ba1_Reset();
	if (((*(_1925_l))._field_Path.len() != 0LL)) {
		jule::out(jule::Str::lit("\n  --> ", 7));
		jule::out((*(_1925_l))._field_Path);
	};
	if ((((*(_1925_l))._field_Row != 0LL) && ((*(_1925_l))._field_Column != 0LL))) {
		jule::out(jule::Str::lit(":", 1));
		jule::out(_1b2745440_Itoa((*(_1925_l))._field_Row));
		jule::out(jule::Str::lit(":", 1));
		jule::out(_1b2745440_Itoa((*(_1925_l))._field_Column));
	};
	if (((*(_1925_l))._field_Line.len() != 0LL)) {
		jule::Str _3617_line = _1cb1c523b_TrimLeft((*(_1925_l))._field_Line, jule::Str::lit("\r\n\v\b ", 5));;
		jule::I64 _3717_offset = (((*(_1925_l))._field_Line.len() - _3617_line.len()) + 1LL);;
		jule::I64 _3817_oldLen = _3617_line.len();;
		_3617_line=_1cb1c523b_TrimLeft(_3617_line, jule::Str::lit("\t", 1));
		if ((_3817_oldLen != _3617_line.len())) {
			_3717_offset+=((_3817_oldLen - _3617_line.len()) << 3LLU);
		};
		jule::out(jule::Str::lit("\n  ", 3));
		jule::Str _4413_row = _1b2745440_Itoa((*(_1925_l))._field_Row);;
		jule::out(_4413_row);
		jule::out(jule::Str::lit(" | ", 3));
		jule::out(_3617_line);
		jule::out(jule::Str::lit("\n  ", 3));
		jule::out(_1cb1bd751_Repeat(jule::Str::lit(" ", 1), _4413_row.len()));
		jule::out(jule::Str::lit(" | ", 3));
		jule::out(_1cb1bd751_Repeat(jule::Str::lit(" ", 1), ((*(_1925_l))._field_Column - _3717_offset)));
		jule::out(jule::Str::lit("^", 1));
		if (((*(_1925_l))._field_Suggestion.len() != 0LL)) {
			jule::out(jule::Str::lit("\n  ", 3));
			jule::out(_1cb1bd751_Repeat(jule::Str::lit(" ", 1), _4413_row.len()));
			jule::out(jule::Str::lit(" | ", 3));
			static__1b596d588_Print(jule::Str::lit("\033[95m", 5), jule::Str::lit("suggestion: ", 12));
			jule::out((*(_1925_l))._field_Suggestion);
		};
	};
	jule::outln(jule::Str::lit("\n", 1));
}



inline void static__1b59714c0_Log(_1cb285120_Log* _6520_l) {
	{
		auto &_match_expr{ (*(_6520_l))._field_Kind };
		
		if (_match_expr == static_cast<jule::I64>(0LL)) {
			_case_begin_1a9386de2:;
			{
				static__1b597105d_LogFlat(_6520_l);
			}
		}
		else if (_match_expr == static_cast<jule::I64>(1LL)) {
			_case_begin_1a938a7ec:;
			{
				static__1b597128e_LogError(_6520_l);
			}
		}
		_match_end_1a938a70e:;
	};
}



inline void static__1b5971701_PrintLogs(jule::Slice<_1cb285120_Log>* _7526_logs) {
	{
		auto expr = _7526_logs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a938b2d1:;
		if (it != expr_end) {
			_1cb285120_Log *_7616_l = it;
			{
				static__1b59714c0_Log(_7616_l);
			}
			_iter_next_1a938b2d1:;
			++it;
			goto _iter_begin_1a938b2d1;
		}
		_iter_end_1a938b2d1:;
	};
	jule::out(jule::Str::lit("=== ", 4));
	jule::out(_1b2745440_Itoa((*(_7526_logs)).len()));
	jule::outln(jule::Str::lit(" error generated ===", 20));
}





std::ostream &operator<<(std::ostream &_Stream, _1b5970c83_Logger _Src) {
	_Stream << "Logger{";
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a901add9_AbsTime _Src) {
	_Stream << "AbsTime{";
	_Stream << "Day:" << _Src._field_Day << ", ";
	_Stream << "WeekDay:" << _Src._field_WeekDay << ", ";
	_Stream << "YearDay:" << _Src._field_YearDay << ", ";
	_Stream << "Month:" << _Src._field_Month << ", ";
	_Stream << "Year:" << _Src._field_Year << ", ";
	_Stream << "Second:" << _Src._field_Second << ", ";
	_Stream << "Minute:" << _Src._field_Minute << ", ";
	_Stream << "Hour:" << _Src._field_Hour;
	_Stream << "}";
	return _Stream;
}



inline _1a901b5b0_Time static__1a901b967_Unix(jule::U64 _9120_sec) {
	return _1a901b5b0_Time{._field_sec=_9120_sec};;
}



inline _1a901b5b0_Time static__1a901bb76_Now(void) {
	return static__1a901b967_Unix(_1a901d6a0_unix());;
}



inline _1a901add9_AbsTime _1a901d35e_Abs(_1a901b5b0_Time* _self_) {
	jule::U64 _1279_secs = ((*(_self_))._field_sec - 951868800LLU);;
	jule::U64 _12813_days = (_1279_secs / 86400LLU);;
	jule::U64 _12913_remSecs = (_1279_secs % 86400LL);;
	if ((_12913_remSecs < 0LLU)) {
		_12913_remSecs+=86400LLU;
		(_12813_days)--;
	};
	jule::U64 _13513_qcCycles = (_12813_days / 146097LLU);;
	jule::U64 _13613_remDays = (_12813_days % 146097LL);;
	if ((_13613_remDays < 0LLU)) {
		_13613_remDays+=146097LLU;
		(_13513_qcCycles)--;
	};
	jule::U64 _14213_cCycles = (_13613_remDays / 36524LLU);;
	if ((_14213_cCycles == 4LLU)) {
		(_14213_cCycles)--;
	};
	_13613_remDays-=(_14213_cCycles * 36524LLU);
	jule::U64 _14813_qCycles = (_13613_remDays / 1461LLU);;
	if ((_14813_qCycles == 25LLU)) {
		(_14813_qCycles)--;
	};
	_13613_remDays-=(_14813_qCycles * 1461LLU);
	jule::U64 _15413_remYears = (_13613_remDays / 365LLU);;
	if ((_15413_remYears == 4LLU)) {
		(_15413_remYears)--;
	};
	_13613_remDays-=(_15413_remYears * 365LLU);
	jule::U64 _16013_leap = static_cast<jule::U64>(0LLU);;
	if (((_15413_remYears == 0LLU) && ((_14813_qCycles > 0LLU) || (_14213_cCycles == 0LLU)))) {
		_16013_leap=1LLU;
	};
	jule::U64 _16413_yDay = (((_13613_remDays + 31LLU) + 28LLU) + _16013_leap);;
	if ((_16413_yDay >= (365LLU + _16013_leap))) {
		_16413_yDay-=(365LLU + _16013_leap);
	};
	jule::U64 _16913_months = static_cast<jule::U64>(0LLU);;
	for (; (_1a901a34a_mdays[static_cast<jule::I64>(_16913_months)] <= _13613_remDays); (_16913_months)++) {
		{
			_13613_remDays-=_1a901a34a_mdays[static_cast<jule::I64>(_16913_months)];
		}
	_iter_next_1ac456b18:;
	}
	_iter_end_1ac456b18:;;
	_1a901add9_AbsTime _17413_t = _1a901add9_AbsTime{};;
	_17413_t._field_Year=((((_15413_remYears + (4LLU * _14813_qCycles)) + (100LLU * _14213_cCycles)) + (400LLU * _13513_qcCycles)) + 100LLU);
	_17413_t._field_Month=(_16913_months + 2LLU);
	if ((_17413_t._field_Month >= 12LLU)) {
		_17413_t._field_Month-=12LLU;
		(_17413_t._field_Year)++;
	};
	_17413_t._field_Month+=1LLU;
	_17413_t._field_Year+=1900LLU;
	_17413_t._field_Day=(_13613_remDays + 1LLU);
	_17413_t._field_WeekDay=((3LLU + _12813_days) % 7LL);
	if ((_17413_t._field_WeekDay < 0LLU)) {
		_17413_t._field_WeekDay+=7LLU;
	};
	_17413_t._field_YearDay=_16413_yDay;
	_17413_t._field_Hour=(_12913_remSecs / 3600LLU);
	_17413_t._field_Minute=((_12913_remSecs / 60LLU) % 60LL);
	_17413_t._field_Second=(_12913_remSecs % 60LL);
	return _17413_t;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a901b5b0_Time _Src) {
	_Stream << "Time{";
	_Stream << "sec:" << _Src._field_sec;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b644d496_scopeCoder> static__1b644db06_new(jule::Ptr<_1a9026b3c_ObjectCoder>* _7324_oc) {
	return jule::new_ptr<_1b644d496_scopeCoder>(_1b644d496_scopeCoder{._field_oc=(*(_7324_oc))});;
}



inline void _1ac4eb938_iterHead(jule::Ptr<_1b644d496_scopeCoder> _self_, jule::Ptr<_1b4b7a642_RangeIter>* _8032_it, jule::Bool* _8044_ref, jule::Str _8055_begin) {
	_1a90272e1_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1a9027797_addIndent((*_self_.alloc)._field_oc);
	_1a9027b93_indent((*_self_.alloc)._field_oc);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("auto expr = ", 12));
	if ((_1b57ce30b_Copy && _1b64557bc_isCopyOptimizable(&((*((*(_8032_it))))._field_Expr)))) {
		(*(_8044_ref))=true;
		{
			auto &_match_expr{ (*((*((*(_8032_it))))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1ac4eec9e:;
				{
					jule::Ptr<_1b4bddaa1_Var> _8917_v = (*((*((*(_8032_it))))._field_Expr))._field_Model.unsafe_cast_ptr<_1b4bddaa1_Var>();;
					if ((*(_8917_v))._field_Reference) {
						_1b64667de_model((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*((*(_8032_it))))._field_Expr))._field_Model);
						goto _match_end_1ac50040e;
					};
					goto _case_begin_1ac500464;
				}
			}
			else {
				_case_begin_1ac500464:;
				{
					_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("&(", 2));
					_1b64667de_model((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*((*(_8032_it))))._field_Expr))._field_Model);
					_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
				}
			}
			_match_end_1ac50040e:;
		};
	} else {
		_1b645be22_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*((*(_8032_it))))._field_Expr))._field_Model);
	};
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
	_1a9027b93_indent((*_self_.alloc)._field_oc);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("auto it = expr", 14));
	if ((*(_8044_ref))) {
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("->", 2));
	} else {
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
	};
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("begin();\n", 9));
	_1a9027b93_indent((*_self_.alloc)._field_oc);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("auto expr_end = expr", 20));
	if ((*(_8044_ref))) {
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("->", 2));
	} else {
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
	};
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("end();\n", 7));
	_1a9027b93_indent((*_self_.alloc)._field_oc);
	_1a90272e1_write((*_self_.alloc)._field_oc, _8055_begin);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(":;\n", 3));
	_1a9027b93_indent((*_self_.alloc)._field_oc);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("if (it != expr_end) {\n", 22));
	_1a9027797_addIndent((*_self_.alloc)._field_oc);
	_1a9027b93_indent((*_self_.alloc)._field_oc);
}



inline void _1b644e2cc_rangeIndexIter(jule::Ptr<_1b644d496_scopeCoder> _self_, jule::Ptr<_1b4b7a642_RangeIter>* _12939_it) {
	_1cb1d27a9_StrBuilder _13013_sb = static__1cb1d2a73_New(64LL);;
	static__1b646ec9d_iterBegin(&(_13013_sb), static_cast<jule::Uintptr>((*(_12939_it))));
	jule::Str _1329_begin = _1cb1dbbd1_Str(&_13013_sb);;
	_1cb1dbdce_Clear(&_13013_sb);
	static__1b6470375_iterNext(&(_13013_sb), static_cast<jule::Uintptr>((*(_12939_it))));
	jule::Str _1359_next = _1cb1dbbd1_Str(&_13013_sb);;
	jule::Bool _13713_ref = false;;
	_1ac4eb938_iterHead(_self_, _12939_it, &(_13713_ref), _1329_begin);
	if (((*((*(_12939_it))))._field_KeyA != nullptr)) {
		_1a902e44c_varInitExpr((*_self_.alloc)._field_oc, &((*((*(_12939_it))))._field_KeyA), jule::__new_closure<void>((void*)__jule_anon_1ac50c3d8, jule::Ptr<__jule_anon_1ac50c3d8_ctx>::make(__jule_anon_1ac50c3d8_ctx{._self_=_self_,._13713_ref=_13713_ref}).as<jule::Uintptr>(), __jule_anon_1ac50c3d8_ctx_handler));
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
		_1a9027b93_indent((*_self_.alloc)._field_oc);
	};
	if (((*((*(_12939_it))))._field_KeyB != nullptr)) {
		(*(*((*(_12939_it))))._field_KeyB.alloc)._field_Reference=(_1b57ce30b_Copy && _1b6455b85_isIterCopyOptimizable(&((*((*(_12939_it))))._field_Expr), &((*((*(_12939_it))))._field_KeyB)));
		_1a902e44c_varInitExpr((*_self_.alloc)._field_oc, &((*((*(_12939_it))))._field_KeyB), jule::__new_closure<void>((void*)__jule_anon_1ac510d9d, jule::Ptr<__jule_anon_1ac510d9d_ctx>::make(__jule_anon_1ac510d9d_ctx{._self_=_self_,._12939_it=_12939_it}).as<jule::Uintptr>(), __jule_anon_1ac510d9d_ctx_handler));
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
		_1a9027b93_indent((*_self_.alloc)._field_oc);
	};
	_1b6454a30_scope(_self_, (*((*(_12939_it))))._field_Scope);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
	_1a9027b93_indent((*_self_.alloc)._field_oc);
	_1a90272e1_write((*_self_.alloc)._field_oc, _1359_next);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(":;\n", 3));
	_1a9027b93_indent((*_self_.alloc)._field_oc);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("++it;\n", 6));
	_1a9027b93_indent((*_self_.alloc)._field_oc);
	if (((*((*(_12939_it))))._field_KeyA != nullptr)) {
		static__1b646e9b2_var(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*((*(_12939_it))))._field_KeyA);
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("++;\n", 4));
		_1a9027b93_indent((*_self_.alloc)._field_oc);
	};
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("goto ", 5));
	_1a90272e1_write((*_self_.alloc)._field_oc, _1329_begin);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
	_1a9027995_doneIndent((*_self_.alloc)._field_oc);
	_1a9027b93_indent((*_self_.alloc)._field_oc);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("}\n", 2));
	_1a9027b93_indent((*_self_.alloc)._field_oc);
	static__1b6470089_iterEnd(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>((*(_12939_it))));
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(":;\n", 3));
	_1a9027995_doneIndent((*_self_.alloc)._field_oc);
	_1a9027b93_indent((*_self_.alloc)._field_oc);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
}



inline void _1b644e585_rangeHashmapIter(jule::Ptr<_1b644d496_scopeCoder> _self_, jule::Ptr<_1b4b7a642_RangeIter>* _19641_it) {
	_1cb1d27a9_StrBuilder _19713_sb = static__1cb1d2a73_New(64LL);;
	static__1b646ec9d_iterBegin(&(_19713_sb), static_cast<jule::Uintptr>((*(_19641_it))));
	jule::Str _1999_begin = _1cb1dbbd1_Str(&_19713_sb);;
	_1cb1dbdce_Clear(&_19713_sb);
	static__1b6470375_iterNext(&(_19713_sb), static_cast<jule::Uintptr>((*(_19641_it))));
	jule::Str _2029_next = _1cb1dbbd1_Str(&_19713_sb);;
	jule::Bool _20413_ref = false;;
	_1ac4eb938_iterHead(_self_, _19641_it, &(_20413_ref), _1999_begin);
	if (((*((*(_19641_it))))._field_KeyA != nullptr)) {
		_1a902e44c_varInitExpr((*_self_.alloc)._field_oc, &((*((*(_19641_it))))._field_KeyA), jule::__new_closure<void>((void*)__jule_anon_1ac520374, jule::Ptr<__jule_anon_1ac520374_ctx>::make(__jule_anon_1ac520374_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ac520374_ctx_handler));
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
		_1a9027b93_indent((*_self_.alloc)._field_oc);
	};
	if (((*((*(_19641_it))))._field_KeyB != nullptr)) {
		_1a902e44c_varInitExpr((*_self_.alloc)._field_oc, &((*((*(_19641_it))))._field_KeyB), jule::__new_closure<void>((void*)__jule_anon_1ac5227e9, jule::Ptr<__jule_anon_1ac5227e9_ctx>::make(__jule_anon_1ac5227e9_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ac5227e9_ctx_handler));
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
		_1a9027b93_indent((*_self_.alloc)._field_oc);
	};
	_1b6454a30_scope(_self_, (*((*(_19641_it))))._field_Scope);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
	_1a9027b93_indent((*_self_.alloc)._field_oc);
	_1a90272e1_write((*_self_.alloc)._field_oc, _2029_next);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(":;\n", 3));
	_1a9027b93_indent((*_self_.alloc)._field_oc);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("++it;\n", 6));
	_1a9027b93_indent((*_self_.alloc)._field_oc);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("goto ", 5));
	_1a90272e1_write((*_self_.alloc)._field_oc, _1999_begin);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
	_1a9027995_doneIndent((*_self_.alloc)._field_oc);
	_1a9027b93_indent((*_self_.alloc)._field_oc);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("}\n", 2));
	_1a9027b93_indent((*_self_.alloc)._field_oc);
	static__1b6470089_iterEnd(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>((*(_19641_it))));
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(":;\n", 3));
	_1a9027995_doneIndent((*_self_.alloc)._field_oc);
	_1a9027b93_indent((*_self_.alloc)._field_oc);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
}



inline void _1b644e83d_strRuneIter(jule::Ptr<_1b644d496_scopeCoder> _self_, jule::Ptr<_1b4d739d3_StrRuneIter> _24335_it) {
	_1cb1d27a9_StrBuilder _24413_sb = static__1cb1d2a73_New(64LL);;
	static__1b646ec9d_iterBegin(&(_24413_sb), static_cast<jule::Uintptr>((*(_24335_it))._field_Base));
	jule::Str _2469_begin = _1cb1dbbd1_Str(&_24413_sb);;
	_1cb1dbdce_Clear(&_24413_sb);
	static__1b6470375_iterNext(&(_24413_sb), static_cast<jule::Uintptr>((*_24335_it.alloc)._field_Base));
	jule::Str _2499_next = _1cb1dbbd1_Str(&_24413_sb);;
	_1a90272e1_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1a9027797_addIndent((*_self_.alloc)._field_oc);
	_1a9027b93_indent((*_self_.alloc)._field_oc);
	jule::Bool _25513_ref = false;;
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("auto expr = ", 12));
	if ((_1b57ce30b_Copy && _1b64557bc_isCopyOptimizable(&((*_24335_it.alloc)._field_Expr)))) {
		_25513_ref=true;
		{
			auto &_match_expr{ (*((*(_24335_it))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1ac530708:;
				{
					jule::Ptr<_1b4bddaa1_Var> _26117_v = (*((*(_24335_it))._field_Expr))._field_Model.unsafe_cast_ptr<_1b4bddaa1_Var>();;
					if ((*(_26117_v))._field_Reference) {
						_1b64667de_model((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*_24335_it.alloc)._field_Expr))._field_Model);
						goto _match_end_1ac530d68;
					};
					goto _case_begin_1ac530dbd;
				}
			}
			else {
				_case_begin_1ac530dbd:;
				{
					_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("&(", 2));
					_1b64667de_model((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*_24335_it.alloc)._field_Expr))._field_Model);
					_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
				}
			}
			_match_end_1ac530d68:;
		};
	} else {
		_1b645be22_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*_24335_it.alloc)._field_Expr))._field_Model);
	};
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
	_1a9027b93_indent((*_self_.alloc)._field_oc);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("char *it = expr", 15));
	if (_25513_ref) {
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("->", 2));
	} else {
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
	};
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("operator char*();\n", 18));
	_1a9027b93_indent((*_self_.alloc)._field_oc);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("const char *end = it + expr", 27));
	if (_25513_ref) {
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("->", 2));
	} else {
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
	};
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("len();\n", 7));
	_1a9027b93_indent((*_self_.alloc)._field_oc);
	if (((*((*_24335_it.alloc)._field_Base))._field_KeyA != nullptr)) {
		_1a902e44c_varInitExpr((*_self_.alloc)._field_oc, &((*(*_24335_it.alloc)._field_Base.alloc)._field_KeyA), jule::__new_closure<void>((void*)__jule_anon_1ac53b527, jule::Ptr<__jule_anon_1ac53b527_ctx>::make(__jule_anon_1ac53b527_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ac53b527_ctx_handler));
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
		_1a9027b93_indent((*_self_.alloc)._field_oc);
	};
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("std::size_t len;\n", 17));
	_1a9027b93_indent((*_self_.alloc)._field_oc);
	if (((*(*_24335_it.alloc)._field_Base.alloc)._field_KeyB != nullptr)) {
		_1a902e44c_varInitExpr((*_self_.alloc)._field_oc, &((*(*_24335_it.alloc)._field_Base.alloc)._field_KeyB), nullptr);
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
		_1a9027b93_indent((*_self_.alloc)._field_oc);
	};
	_1a90272e1_write((*_self_.alloc)._field_oc, _2469_begin);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(":;\n", 3));
	_1a9027b93_indent((*_self_.alloc)._field_oc);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("std::tie(", 9));
	if (((*(*_24335_it.alloc)._field_Base.alloc)._field_KeyB != nullptr)) {
		static__1b646e9b2_var(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(*_24335_it.alloc)._field_Base.alloc)._field_KeyB);
	} else {
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("std::ignore", 11));
	};
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(", len) = jule::utf8_decode_rune_str(it, end - it", 48));
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(");\n", 3));
	_1a9027b93_indent((*_self_.alloc)._field_oc);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("if (it < end) {\n", 16));
	_1a9027797_addIndent((*_self_.alloc)._field_oc);
	_1a9027b93_indent((*_self_.alloc)._field_oc);
	_1b6454a30_scope(_self_, (*(*_24335_it.alloc)._field_Base.alloc)._field_Scope);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
	_1a9027b93_indent((*_self_.alloc)._field_oc);
	_1a90272e1_write((*_self_.alloc)._field_oc, _2499_next);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(":;\n", 3));
	_1a9027b93_indent((*_self_.alloc)._field_oc);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("it += len;\n", 11));
	_1a9027b93_indent((*_self_.alloc)._field_oc);
	if (((*(*_24335_it.alloc)._field_Base.alloc)._field_KeyA != nullptr)) {
		static__1b646e9b2_var(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(*_24335_it.alloc)._field_Base.alloc)._field_KeyA);
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("++;\n", 4));
		_1a9027b93_indent((*_self_.alloc)._field_oc);
	};
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("goto ", 5));
	_1a90272e1_write((*_self_.alloc)._field_oc, _2469_begin);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
	_1a9027995_doneIndent((*_self_.alloc)._field_oc);
	_1a9027b93_indent((*_self_.alloc)._field_oc);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("}\n", 2));
	_1a9027995_doneIndent((*_self_.alloc)._field_oc);
	_1a9027b93_indent((*_self_.alloc)._field_oc);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
}



inline void _1b644eae6_ifCase(jule::Ptr<_1b644d496_scopeCoder> _self_, jule::Ptr<_1b4b78c28_If> _35130_i) {
	if (((*(_35130_i))._field_Expr != nullptr)) {
		_1a90272e1_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
		_1b645be22_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*_35130_i.alloc)._field_Expr);
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(") ", 2));
	};
	_1b6454a30_scope(_self_, (*_35130_i.alloc)._field_Scope);
}



inline void _1b644ed9e_conditional(jule::Ptr<_1b644d496_scopeCoder> _self_, jule::Ptr<_1b4b79443_Conditional> _36035_c) {
	jule::Bool _36113_writed = false;;
	{
		auto expr = &((*(_36035_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac551482:;
		if (it != expr_end) {
			jule::Ptr<_1b4b78c28_If> _36221_elif = *it;
			{
				if ((_36221_elif == nullptr)) {
					goto _iter_next_1ac551482;
				};
				if (_36113_writed) {
					_1a90272e1_write((*(_self_))._field_oc, jule::Str::lit(" else ", 6));
				};
				_36113_writed=true;
				_1b644eae6_ifCase(_self_, _36221_elif);
			}
			_iter_next_1ac551482:;
			++it;
			goto _iter_begin_1ac551482;
		}
		_iter_end_1ac551482:;
	};
	if (((*_36035_c.alloc)._field_Default != nullptr)) {
		if (_36113_writed) {
			_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(" else ", 6));
		};
		_1b6454a30_scope(_self_, (*(*_36035_c.alloc)._field_Default.alloc)._field_Scope);
	};
}



inline void _1b6450157_infIter(jule::Ptr<_1b644d496_scopeCoder> _self_, jule::Ptr<_1b4b79740_InfIter> _38031_it) {
	_1a90272e1_write((*(_self_))._field_oc, jule::Str::lit("for (;;) {\n", 11));
	_1a9027797_addIndent((*_self_.alloc)._field_oc);
	_1a9027b93_indent((*_self_.alloc)._field_oc);
	_1b6454a30_scope(_self_, (*(_38031_it))._field_Scope);
	_1a9027995_doneIndent((*_self_.alloc)._field_oc);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
	_1a9027b93_indent((*_self_.alloc)._field_oc);
	static__1b6470375_iterNext(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_38031_it));
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(":;\n", 3));
	_1a9027b93_indent((*_self_.alloc)._field_oc);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("}\n", 2));
	_1a9027b93_indent((*_self_.alloc)._field_oc);
	static__1b6470089_iterEnd(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_38031_it));
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(":;", 2));
}



inline void _1b6450410_whileIter(jule::Ptr<_1b644d496_scopeCoder> _self_, jule::Ptr<_1b4b79be6_WhileIter> _39733_it) {
	if ((((*(_39733_it))._field_Expr != nullptr) && ((*_39733_it.alloc)._field_Next == nullptr))) {
		_1a90272e1_write((*(_self_))._field_oc, jule::Str::lit("while (", 7));
		_1b645be22_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*_39733_it.alloc)._field_Expr);
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(") {", 3));
	} else {
		_1a90272e1_write((*(_self_))._field_oc, jule::Str::lit("for (; ", 7));
		if (((*(_39733_it))._field_Expr != nullptr)) {
			_1b645be22_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*_39733_it.alloc)._field_Expr);
		};
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("; ", 2));
		if (((*_39733_it.alloc)._field_Next != nullptr)) {
			_1b64544be_st(_self_, (*_39733_it.alloc)._field_Next);
		};
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(") {", 3));
	};
	if (((*((*(_39733_it))._field_Scope))._field_Stmts.len() == 0LL)) {
		_1a90272e1_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
		return;;
	};
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
	_1a9027797_addIndent((*_self_.alloc)._field_oc);
	_1a9027b93_indent((*_self_.alloc)._field_oc);
	_1b6454a30_scope(_self_, (*_39733_it.alloc)._field_Scope);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
	_1a9027995_doneIndent((*_self_.alloc)._field_oc);
	_1a9027b93_indent((*_self_.alloc)._field_oc);
	static__1b6470375_iterNext(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_39733_it));
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(":;\n", 3));
	_1a9027b93_indent((*_self_.alloc)._field_oc);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("}\n", 2));
	_1a9027b93_indent((*_self_.alloc)._field_oc);
	static__1b6470089_iterEnd(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_39733_it));
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(":;", 2));
}



inline void _1b64506b8_rangeIter(jule::Ptr<_1b644d496_scopeCoder> _self_, jule::Ptr<_1b4b7a642_RangeIter> _43633_it) {
	{
		
		if ((_1b4c810b6_Slc((*((*(_43633_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac566ca0:;
			{
				_1b644e2cc_rangeIndexIter(_self_, &(_43633_it));
			}
		}
		else if ((_1b4c80d30_Arr((*((*(_43633_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac56695e:;
			{
				_1b644e2cc_rangeIndexIter(_self_, &(_43633_it));
			}
		}
		else if ((_1b4c81b00_Map((*((*(_43633_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac5669c5:;
			{
				_1b644e585_rangeHashmapIter(_self_, &(_43633_it));
			}
		}
		else {
			_case_begin_1ac5668e8:;
			{
				_1b644e2cc_rangeIndexIter(_self_, &(_43633_it));
			}
		}
		_match_end_1ac5667e9:;
	};
}



inline void _1b6450971_cont(jule::Ptr<_1b644d496_scopeCoder> _self_, jule::Ptr<_1b4b7a9c7_ContSt> _44924_c) {
	_1a90272e1_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1b6470375_iterNext(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(_44924_c))._field_It);
}



inline void _1b6450c29_label(jule::Ptr<_1b644d496_scopeCoder> _self_, jule::Ptr<_1b4b7b19d_Label> _45425_l) {
	static__1b6470661_label(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::Uintptr>(_45425_l));
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(":", 1));
}



inline void _1b6450ed2_gotoSt(jule::Ptr<_1b644d496_scopeCoder> _self_, jule::Ptr<_1b4b7b577_GotoSt> _45926_gt) {
	_1a90272e1_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1b6470661_label(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>((*(_45926_gt))._field_Label));
}



inline void _1b645128a_postfix(jule::Ptr<_1b644d496_scopeCoder> _self_, jule::Ptr<_1b4b7b951_Postfix> _46431_p) {
	_1a90272e1_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1b645be22_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*(_46431_p))._field_Expr);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
	_1a90272e1_write((*_self_.alloc)._field_oc, (*_46431_p.alloc)._field_Op);
}



inline void _1b6451543_assign(jule::Ptr<_1b644d496_scopeCoder> _self_, jule::Ptr<_1b4b7be07_Assign> _47130_a) {
	_1b645be22_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_47130_a))._field_Left))._field_Model);
	_1a90272e1_write((*_self_.alloc)._field_oc, (*((*_47130_a.alloc)._field_Op))._field_Kind);
	_1b645be22_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*_47130_a.alloc)._field_Right))._field_Model);
}



inline void _1b64517eb_mapLookupAssign(jule::Ptr<_1b644d496_scopeCoder> _self_, jule::Ptr<_1b4b7c3ad_MultiAssign>* _47740_a) {
	jule::Ptr<_1b4b2b3a1_IndexingExprModel> _47813_iem = (*((*(_47740_a))))._field_Right.cast_ptr<_1b4b2b3a1_IndexingExprModel>(&__jule_any_type44);;
	_1b645be22_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_47813_iem))._field_Expr))._field_Model);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(".lookup(", 8));
	_1b645be22_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*_47813_iem.alloc)._field_Index))._field_Model);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
	if (((*((*(_47740_a))))._field_Left[0LL] != nullptr)) {
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("&(", 2));
		_1b645be22_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*((*(_47740_a))))._field_Left[0LL]))._field_Model);
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("), ", 3));
	} else {
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("nullptr, ", 9));
	};
	if (((*((*(_47740_a))))._field_Left[1LL] != nullptr)) {
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("&(", 2));
		_1b645be22_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*((*(_47740_a))))._field_Left[1LL]))._field_Model);
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
	} else {
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("nullptr", 7));
	};
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1b6451aa4_multiAssignTup(jule::Ptr<_1b644d496_scopeCoder> _self_, jule::Ptr<_1b4b7c3ad_MultiAssign>* _50039_a) {
	_1a90272e1_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_1a9027797_addIndent((*_self_.alloc)._field_oc);
	jule::Ptr<_1b4b2e20b_TupleExprModel> _50413_tup = (*((*(_50039_a))))._field_Right.cast_ptr<_1b4b2e20b_TupleExprModel>(&__jule_any_type81);;
	{
		auto expr = &((*(_50413_tup))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac57c337:;
		if (it != expr_end) {
			jule::I64 _50614_i = it - expr->begin();
			jule::Ptr<_1b4c466a8_Data> _50621_r = *it;
			{
				_1a9027b93_indent((*_self_.alloc)._field_oc);
				jule::Ptr<_1b4c466a8_Data> _50817_l = (*((*(_50039_a))))._field_Left[_50614_i];;
				if ((_50817_l != nullptr)) {
					{
						auto &_match_expr{ (*(_50817_l))._field_Model };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_1ac58011a:;
							{
								jule::Ptr<_1b4bddaa1_Var> _51225_v = (*(_50817_l))._field_Model.unsafe_cast_ptr<_1b4bddaa1_Var>();;
								if (((*(_51225_v))._field_Reference && (!(_1b4bdde7a_IsInitialized(_51225_v))))) {
									static__1b646e9b2_var(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _51225_v);
									_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(" = &(", 5));
									_1b645be22_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*(_50621_r))._field_Model);
									_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(");\n", 3));
									(*((*(_50039_a))))._field_Left[_50614_i]=nullptr;
									goto _iter_next_1ac57c337;
								};
							}
						}
						_match_end_1ac5800b5:;
					};
					_1a903baca_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_50817_l.alloc)._field_Kind);
					_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(" ", 1));
					static__1b646cc13_toOut(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _1b644cc37_assignArgName, static_cast<jule::Uintptr>(_50614_i));
					_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
				};
				_1b645be22_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*_50621_r.alloc)._field_Model);
				_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1ac57c337:;
			++it;
			_50614_i++;
			goto _iter_begin_1ac57c337;
		}
		_iter_end_1ac57c337:;
	};
	{
		auto expr = &((*((*(_50039_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac585dce:;
		if (it != expr_end) {
			jule::I64 _53314_i = it - expr->begin();
			jule::Ptr<_1b4c466a8_Data> _53321_l = *it;
			{
				if ((_53321_l == nullptr)) {
					goto _iter_next_1ac585dce;
				};
				_1a9027b93_indent((*_self_.alloc)._field_oc);
				_1b645be22_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*(_53321_l))._field_Model);
				_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
				static__1b646cc13_toOut(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _1b644cc37_assignArgName, static_cast<jule::Uintptr>(_53314_i));
				_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1ac585dce:;
			++it;
			_53314_i++;
			goto _iter_begin_1ac585dce;
		}
		_iter_end_1ac585dce:;
	};
	_1a9027995_doneIndent((*_self_.alloc)._field_oc);
	_1a9027b93_indent((*_self_.alloc)._field_oc);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("})", 2));
}



inline void _1b6451d5c_multiAssignFn(jule::Ptr<_1b644d496_scopeCoder> _self_, jule::Ptr<_1b4b7c3ad_MultiAssign>* _54938_a) {
	_1a90272e1_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_1a9027797_addIndent((*_self_.alloc)._field_oc);
	_1a9027b93_indent((*_self_.alloc)._field_oc);
	jule::Ptr<_1b4b2aa21_FnCallExprModel> _55413_f = (*((*(_54938_a))))._field_Right.cast_ptr<_1b4b2aa21_FnCallExprModel>(&__jule_any_type33);;
	_1a9041a7a_codeMut1((*((*(*_self_.alloc)._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), &((*((*(_55413_f))._field_Func))._field_Result));
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(" __jule_assign_result = ", 24));
	_1b645be22_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*(_54938_a))))._field_Right);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
	jule::Ptr<_1b4c8a5cb_Tuple> _56013_tup = _1b4c81d86_Tup((*(*_55413_f.alloc)._field_Func.alloc)._field_Result.ptr());;
	{
		auto expr = &((*((*(_54938_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac595619:;
		if (it != expr_end) {
			jule::I64 _56114_i = it - expr->begin();
			jule::Ptr<_1b4c466a8_Data> _56121_l = *it;
			{
				if ((_56121_l != nullptr)) {
					;
					_1a9027b93_indent((*_self_.alloc)._field_oc);
					_1b645be22_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*_56121_l.alloc)._field_Model);
					{
						
						if (_1b4c7d118_Equal((*(_56013_tup))._field_Types[_56114_i], (*_56121_l.alloc)._field_Kind)) {
							_case_begin_1ac5a1933:;
							{
								_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(" = __jule_assign_result.__jule_result_arg", 41));
								_1a90272e1_write((*_self_.alloc)._field_oc, _1b2745440_Itoa(_56114_i));
							}
						}
						else if (_1b57b12bb_IsAny(&((*_56121_l.alloc)._field_Kind))) {
							_case_begin_1ac59d842:;
							{
								_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(" = jule::Any(__jule_assign_result.__jule_result_arg", 51));
								_1a90272e1_write((*_self_.alloc)._field_oc, _1b2745440_Itoa(_56114_i));
								_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(", &__jule_any_type", 18));
								_1a90272e1_write((*_self_.alloc)._field_oc, _1b2745440_Itoa(_1a90289a7_pushAnyType((*_self_.alloc)._field_oc, (*(_56013_tup))._field_Types[_56114_i])));
								_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
							}
						}
						else {
							_case_begin_1ac596b7b:;
							{
								if ((_1b4c81869_Trait((*(_56013_tup))._field_Types[_56114_i].ptr()) != nullptr)) {
									_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
									jule::Ptr<_1b4b49c3d_Trait> _58029_t1 = _1b4c81869_Trait((*_56121_l.alloc)._field_Kind.ptr());;
									jule::Ptr<_1b4b49c3d_Trait> _58129_t2 = _1b4c81869_Trait((*_56013_tup.alloc)._field_Types[_56114_i].ptr());;
									_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("__jule_assign_result.__jule_result_arg", 38));
									_1a90272e1_write((*_self_.alloc)._field_oc, _1b2745440_Itoa(_56114_i));
									_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(".map<", 5));
									static__1b646da27_traitDecl(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _58029_t1);
									_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(">(", 2));
									_1a902937b_pushAndWriteMaskMapper((*_self_.alloc)._field_oc, _58029_t1, _58129_t2);
									_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
									goto _match_end_1ac597b9e;
								};
								jule::Ptr<_1b4b49c3d_Trait> _59121_t = _1b4c81869_Trait((*_56121_l.alloc)._field_Kind);;
								_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(" = jule::Trait(__jule_assign_result.__jule_result_arg", 53));
								_1a90272e1_write((*_self_.alloc)._field_oc, _1b2745440_Itoa(_56114_i));
								_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(", (jule::Trait::Type*)&", 23));
								static__1b646da27_traitDecl(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _59121_t);
								_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("_mptr_data", 10));
								_1a90272e1_write((*_self_.alloc)._field_oc, _1b2745440_Itoa(_1b57b3c6e_FindTraitTypeOffset(_59121_t, (*_56013_tup.alloc)._field_Types[_56114_i])));
								_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
							}
						}
						_match_end_1ac597b9e:;
					};
					_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
				};
			}
			_iter_next_1ac595619:;
			++it;
			_56114_i++;
			goto _iter_begin_1ac595619;
		}
		_iter_end_1ac595619:;
	};
	_1a9027995_doneIndent((*_self_.alloc)._field_oc);
	_1a9027b93_indent((*_self_.alloc)._field_oc);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("})", 2));
}



inline void _1b6452115_multiAssign(jule::Ptr<_1b644d496_scopeCoder> _self_, jule::Ptr<_1b4b7c3ad_MultiAssign> _60935_a) {
	{
		auto expr = &((*(_60935_a))._field_Decls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac5a7472:;
		if (it != expr_end) {
			jule::Ptr<_1b4bddaa1_Var> _61221_d = *it;
			{
				_1a902e44c_varInitExpr((*(_self_))._field_oc, &(_61221_d), nullptr);
				_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
				_1a9027b93_indent((*_self_.alloc)._field_oc);
			}
			_iter_next_1ac5a7472:;
			++it;
			goto _iter_begin_1ac5a7472;
		}
		_iter_end_1ac5a7472:;
	};
	{
		auto &_match_expr{ (*(_60935_a))._field_Right };
		
		if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1ac5a7b8c:;
			{
				_1b64517eb_mapLookupAssign(_self_, &(_60935_a));
				return;;
			}
		}
		_match_end_1ac5a7b37:;
	};
	{
		auto &_match_expr{ (*(_60935_a))._field_Right };
		
		if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1ac5a9e25:;
			{
				_1b6451aa4_multiAssignTup(_self_, &(_60935_a));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1ac5a9672:;
			{
				_1b6451d5c_multiAssignFn(_self_, &(_60935_a));
			}
		}
		else {
			_case_begin_1ac5a960b:;
			{
				jule::panic(jule::Str::lit("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:631:13"));;
			}
		}
		_match_end_1ac5a95a6:;
	};
}



inline jule::Fn<void> _1b6452456_matchExpr(jule::Ptr<_1b644d496_scopeCoder> _self_, jule::Ptr<_1b4b7ca1d_Match> _63533_m) {
	if ((!(_1b4c470b0_IsConst((*(_63533_m))._field_Expr.ptr())))) {
		return jule::__new_closure<void>((void*)__jule_anon_1ac5aba1a, jule::Ptr<__jule_anon_1ac5aba1a_ctx>::make(__jule_anon_1ac5aba1a_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ac5aba1a_ctx_handler);;
	};
	if (((!(_1b27579e6_IsBool((*(*_63533_m.alloc)._field_Expr.alloc)._field_Constant.ptr()))) || (!(_1b27553ea_ReadBool((*(*_63533_m.alloc)._field_Expr.alloc)._field_Constant))))) {
		return jule::__new_closure<void>((void*)__jule_anon_1ac5acd29, jule::Ptr<__jule_anon_1ac5acd29_ctx>::make(__jule_anon_1ac5acd29_ctx{._self_=_self_,._63533_m=_63533_m}).as<jule::Uintptr>(), __jule_anon_1ac5acd29_ctx_handler);;
	};
	return nullptr;;
}



inline void _1b64527b9_case(jule::Ptr<_1b644d496_scopeCoder> _self_, jule::Ptr<_1b4b7ca1d_Match> _64528_m, jule::Ptr<_1b4b7d546_Case> _64543_c) {
	if ((((*(_64543_c))._field_Exprs.len() != 0LL) && (!((*(_64528_m))._field_Comptime)))) {
		if ((((*_64528_m.alloc)._field_Cases.len() > 0LL) && ((*_64528_m.alloc)._field_Cases[0LL] == _64543_c))) {
			_1a90272e1_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
		} else {
			_1a90272e1_write((*(_self_))._field_oc, jule::Str::lit("else if (", 9));
		};
		{
			auto expr = &((*_64543_c.alloc)._field_Exprs);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac5b1e4e:;
			if (it != expr_end) {
				jule::I64 _65218_i = it - expr->begin();
				jule::Ptr<_1b4c466a8_Data> _65225_expr = *it;
				{
					{
						
						if ((!((*_64528_m.alloc)._field_TypeMatch))) {
							_case_begin_1ac5ba73d:;
							{
								jule::Fn<void> _65521_caseExpr = _1b6452456_matchExpr(_self_, _64528_m);;
								if (_1b4c47401_GoodOperand((*_64528_m.alloc)._field_Expr.ptr(), &(_65225_expr))) {
									if ((_65521_caseExpr != nullptr)) {
										_65521_caseExpr();
										_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(" == ", 4));
									};
									_1b645be22_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*(_65225_expr))._field_Model);
								} else {
									_1b645be22_possibleRefExpr((*((*_self_.alloc)._field_oc))._field_ec, (*(_65225_expr))._field_Model);
									if ((_65521_caseExpr != nullptr)) {
										_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(" == ", 4));
										_65521_caseExpr();
									};
								};
							}
						}
						else {
							_case_begin_1ac5b2b31:;
							{
								_1a90272e1_write((*(_self_))._field_oc, jule::Str::lit("_match_expr", 11));
								jule::Ptr<_1b4c7c90e_TypeKind> _67125_tk = (*(_65225_expr))._field_Model.cast_ptr<_1b4c7c90e_TypeKind>(&__jule_any_type84);;
								if ((_1b4c81869_Trait((*((*_64528_m.alloc)._field_Expr))._field_Kind.ptr()) != nullptr)) {
									_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(".type_is(", 9));
									_1b6459507_boolean((*(*_self_.alloc)._field_oc.alloc)._field_ec, (_1b4c802e6_Sptr((*_65225_expr.alloc)._field_Kind) != nullptr));
									_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(", (const jule::Trait::Type*)&", 29));
									static__1b646da27_traitDecl(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _1b4c81869_Trait((*(*_64528_m.alloc)._field_Expr.alloc)._field_Kind));
									_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("_mptr_data", 10));
									_1a90272e1_write((*_self_.alloc)._field_oc, _1b2745440_Itoa(_1b57b3c6e_FindTraitTypeOffset(_1b4c81869_Trait((*(*_64528_m.alloc)._field_Expr.alloc)._field_Kind), (*_65225_expr.alloc)._field_Kind)));
									_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
								} else {
									jule::I64 _68125_j = _1a90289a7_pushAnyType((*_self_.alloc)._field_oc, _67125_tk);;
									_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(".type == &__jule_any_type", 25));
									_1a90272e1_write((*_self_.alloc)._field_oc, _1b2745440_Itoa(_68125_j));
								};
							}
						}
						_match_end_1ac5b2a32:;
					};
					if ((((*_64543_c.alloc)._field_Exprs.len() - _65218_i) > 1LL)) {
						_1a90272e1_write((*(_self_))._field_oc, jule::Str::lit(" || ", 4));
					};
				}
				_iter_next_1ac5b1e4e:;
				++it;
				_65218_i++;
				goto _iter_begin_1ac5b1e4e;
			}
			_iter_end_1ac5b1e4e:;
		};
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(") ", 2));
	} else if ((((*(_64528_m))._field_Default == _64543_c) && ((*_64528_m.alloc)._field_Cases.len() != 0LL))) {
		_1a9027b93_indent((*(_self_))._field_oc);
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("else ", 5));
	};
	_1a9027797_addIndent((*(_self_))._field_oc);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("{\n", 2));
	_1a9027b93_indent((*_self_.alloc)._field_oc);
	static__1b6470c38_caseBegin(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_64543_c));
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(":;\n", 3));
	if (((*((*(_64543_c))._field_Scope))._field_Stmts.len() > 0LL)) {
		_1a9027b93_indent((*_self_.alloc)._field_oc);
		_1b6454a30_scope(_self_, (*_64543_c.alloc)._field_Scope);
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
	};
	_1a9027995_doneIndent((*_self_.alloc)._field_oc);
	_1a9027b93_indent((*_self_.alloc)._field_oc);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
}



inline void _1b6452a72_matchSt(jule::Ptr<_1b644d496_scopeCoder> _self_, jule::Ptr<_1b4b7ca1d_Match> _71531_m) {
	if ((((*(_71531_m))._field_Cases.len() == 0LL) && ((*_71531_m.alloc)._field_Default == nullptr))) {
		return;;
	};
	if (((*_71531_m.alloc)._field_Comptime && (((*_71531_m.alloc)._field_Default == nullptr) || ((*((*((*_71531_m.alloc)._field_Default))._field_Scope))._field_Stmts.len() == 0LL)))) {
		return;;
	};
	_1a90272e1_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1a9027797_addIndent((*_self_.alloc)._field_oc);
	_1a9027b93_indent((*_self_.alloc)._field_oc);
	if (((!((*_71531_m.alloc)._field_Comptime)) && (!(_1b4c470b0_IsConst((*_71531_m.alloc)._field_Expr.ptr()))))) {
		if ((_1b57ce30b_Copy && _1b64557bc_isCopyOptimizable(&((*_71531_m.alloc)._field_Expr)))) {
			_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("auto &_match_expr{ ", 19));
		} else {
			_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("auto _match_expr{ ", 18));
		};
		_1b645be22_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*(*_71531_m.alloc)._field_Expr.alloc)._field_Model);
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(" };\n", 4));
		_1a9027b93_indent((*_self_.alloc)._field_oc);
	};
	if (((*_71531_m.alloc)._field_Cases.len() > 0LL)) {
		{
			auto expr = &((*_71531_m.alloc)._field_Cases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac5cd29a:;
			if (it != expr_end) {
				jule::Ptr<_1b4b7d546_Case> _74325_c = *it;
				{
					if ((_74325_c == nullptr)) {
						goto _iter_next_1ac5cd29a;
					};
					_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
					_1a9027b93_indent((*_self_.alloc)._field_oc);
					_1b64527b9_case(_self_, _71531_m, _74325_c);
				}
				_iter_next_1ac5cd29a:;
				++it;
				goto _iter_begin_1ac5cd29a;
			}
			_iter_end_1ac5cd29a:;
		};
	};
	if (((*_71531_m.alloc)._field_Default != nullptr)) {
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
		_1b64527b9_case(_self_, _71531_m, (*_71531_m.alloc)._field_Default);
	};
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
	_1a9027b93_indent((*_self_.alloc)._field_oc);
	static__1b647094c_matchEnd(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_71531_m));
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(":;", 2));
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
	_1a9027995_doneIndent((*_self_.alloc)._field_oc);
	_1a9027b93_indent((*_self_.alloc)._field_oc);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
}



inline void _1b6452d2a_fallSt(jule::Ptr<_1b644d496_scopeCoder> _self_, jule::Ptr<_1b4b7dc3e_FallSt> _77026_f) {
	_1a90272e1_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1b6470c38_caseBegin(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(_77026_f))._field_DestCase);
}



inline void _1b64530d3_breakSt(jule::Ptr<_1b644d496_scopeCoder> _self_, jule::Ptr<_1b4b7ada1_BreakSt> _77527_b) {
	_1a90272e1_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	if (((*(_77527_b))._field_It != 0LLU)) {
		static__1b6470089_iterEnd(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_77527_b.alloc)._field_It);
	} else {
		static__1b647094c_matchEnd(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(_77527_b))._field_Mtch);
	};
}



inline void _1b645338b_setResult(jule::Ptr<_1b644d496_scopeCoder> _self_, jule::Ptr<_1b4b7e0d5_RetSt> _78433_r) {
	if (((*((*((*((*(_78433_r))._field_Func))._field_Decl))._field_Result))._field_Idents.len() == 1LL)) {
		_1a90272e1_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result = ", 21));
		_1b645be22_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*_78433_r.alloc)._field_Expr);
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
		_1a9027b93_indent((*_self_.alloc)._field_oc);
		return;;
	};
	{
		auto &_match_expr{ (*(_78433_r))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1ac5d80b8:;
			{
				jule::Slice<jule::Ptr<_1b4c466a8_Data>> _79417_datas = (*((*(_78433_r))._field_Expr.unsafe_cast_ptr<_1b4b2e20b_TupleExprModel>()))._field_Datas;;
				{
					auto expr = &(_79417_datas);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac5dbc8c:;
					if (it != expr_end) {
						jule::I64 _79517_i = it - expr->begin();
						jule::Ptr<_1b4c466a8_Data> _79520_data = *it;
						{
							_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
							_1a90272e1_write((*_self_.alloc)._field_oc, _1b2745440_Itoa(_79517_i));
							_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
							_1b645be22_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*(_79520_data))._field_Model);
							_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
							_1a9027b93_indent((*_self_.alloc)._field_oc);
						}
						_iter_next_1ac5dbc8c:;
						++it;
						_79517_i++;
						goto _iter_begin_1ac5dbc8c;
					}
					_iter_end_1ac5dbc8c:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1ac5dac58:;
			{
				_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("__jule_func_result = std::move(", 31));
				_1b64667de_model((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*_78433_r.alloc)._field_Expr);
				_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(");\n", 3));
			}
		}
		else {
			_case_begin_1ac5da87e:;
			{
				jule::panic(jule::Str::lit("implementation mistake, this panic call should be unreachable", 61) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:808:13"));;
			}
		}
		_match_end_1ac5da829:;
	};
}



inline void _1b6453644_retSt(jule::Ptr<_1b644d496_scopeCoder> _self_, jule::Ptr<_1b4b7e0d5_RetSt> _81229_r) {
	if (_1b4b36d07_IsVoid((*((*(_81229_r))._field_Func))._field_Decl.ptr())) {
		if ((*(*(*_81229_r.alloc)._field_Func.alloc)._field_Decl.alloc)._field_Exceptional) {
			_1a90272e1_write((*(_self_))._field_oc, jule::Str::lit("return jule::VoidExceptional{};", 31));
			return;;
		};
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("return;", 7));
		return;;
	} else if (((*((*((*((*(_81229_r))._field_Func))._field_Decl))._field_Result))._field_Idents.len() == 0LL)) {
		if ((*(*(*_81229_r.alloc)._field_Func.alloc)._field_Decl.alloc)._field_Exceptional) {
			_1a90272e1_write((*(_self_))._field_oc, jule::Str::lit("return jule::Exceptional<", 25));
			_1a903baca_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(*_81229_r.alloc)._field_Func.alloc)._field_Result);
			_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(">{.result=", 10));
			_1b645be22_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*_81229_r.alloc)._field_Expr);
			_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("};", 2));
		} else {
			_1a90272e1_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
			_1b645be22_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*_81229_r.alloc)._field_Expr);
			_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(";", 1));
		};
		return;;
	};
	if (((*(_81229_r))._field_Expr != nullptr)) {
		_1b645338b_setResult(_self_, _81229_r);
	};
	if ((*((*((*_81229_r.alloc)._field_Func))._field_Decl))._field_Exceptional) {
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("return jule::Exceptional<", 25));
		_1a9041a7a_codeMut1((*((*(*_self_.alloc)._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), &((*(*_81229_r.alloc)._field_Func.alloc)._field_Result));
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(">{.result=__jule_func_result};", 30));
	} else {
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("return __jule_func_result;", 26));
	};
}



inline void _1b64538ec_var(jule::Ptr<_1b644d496_scopeCoder> _self_, jule::Ptr<_1b4bddaa1_Var> _84827_v) {
	if ((!((*(_84827_v))._field_Constant))) {
		_1a902e705_var((*(_self_))._field_oc, _84827_v);
	};
}



inline void _1b6453ba5_mutSlicing(jule::Ptr<_1b644d496_scopeCoder> _self_, jule::Ptr<_1b4d726c4_MutSlicingExprModel> _85434_m) {
	_1a90272e1_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1b645be22_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*(_85434_m))._field_Expr);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(").mut_slice(", 12));
	if ((!(_20c58021e_Production))) {
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("\"", 1));
		_1a9029634_locInfo((*_self_.alloc)._field_oc, &((*_85434_m.alloc)._field_Token));
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("\", ", 3));
	};
	_1b645be22_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*_85434_m.alloc)._field_Left);
	if (((*_85434_m.alloc)._field_Right != nullptr)) {
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
		_1b645be22_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*_85434_m.alloc)._field_Right);
	};
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(");", 2));
}



inline void _1b6453e5d_swap(jule::Ptr<_1b644d496_scopeCoder> _self_, jule::Ptr<_1b4d71470_SwapExprModel> _87128_m) {
	_1a90272e1_write((*(_self_))._field_oc, jule::Str::lit("std::swap(", 10));
	_1b645be22_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*(_87128_m))._field_Left))._field_Model);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
	_1b645be22_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*_87128_m.alloc)._field_Right))._field_Model);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1b6454216_exceptionalForwarding(jule::Ptr<_1b644d496_scopeCoder> _self_, jule::Ptr<_1b4d710da_ExceptionalForwardingExprModel> _87945_m) {
	_1a90272e1_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
	_1b645db05_pureFuncCall((*(*_self_.alloc)._field_oc.alloc)._field_ec, &((*(_87945_m))._field_Expr));
}



inline void _1b64544be_st(jule::Ptr<_1b644d496_scopeCoder> _self_, jule::Any _88526_st) {
	if ((_88526_st == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _88526_st };
		
		if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1ac608c10:;
			{
				_1b6454a30_scope(_self_, _88526_st.unsafe_cast_ptr<_1b4b7880a_Scope>());
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ac608e96:;
			{
				_1b64538ec_var(_self_, _88526_st.unsafe_cast_ptr<_1b4bddaa1_Var>());
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1ac60900c:;
			{
				_1b64667de_model((*((*(_self_))._field_oc))._field_ec, (*(_88526_st.unsafe_cast_ptr<_1b4c466a8_Data>()))._field_Model);
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1ac60976b:;
			{
				_1b644ed9e_conditional(_self_, _88526_st.unsafe_cast_ptr<_1b4b79443_Conditional>());
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1ac6097d2:;
			{
				_1b6450157_infIter(_self_, _88526_st.unsafe_cast_ptr<_1b4b79740_InfIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1ac609848:;
			{
				_1b6450410_whileIter(_self_, _88526_st.unsafe_cast_ptr<_1b4b79be6_WhileIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1ac6098ae:;
			{
				_1b64506b8_rangeIter(_self_, _88526_st.unsafe_cast_ptr<_1b4b7a642_RangeIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1ac609925:;
			{
				_1b6450971_cont(_self_, _88526_st.unsafe_cast_ptr<_1b4b7a9c7_ContSt>());
			}
		}
		else if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1ac60998b:;
			{
				_1b6450c29_label(_self_, _88526_st.unsafe_cast_ptr<_1b4b7b19d_Label>());
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1ac609a02:;
			{
				_1b6450ed2_gotoSt(_self_, _88526_st.unsafe_cast_ptr<_1b4b7b577_GotoSt>());
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1ac609a68:;
			{
				_1b645128a_postfix(_self_, _88526_st.unsafe_cast_ptr<_1b4b7b951_Postfix>());
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1ac609ace:;
			{
				_1b6451543_assign(_self_, _88526_st.unsafe_cast_ptr<_1b4b7be07_Assign>());
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1ac609b45:;
			{
				_1b6452115_multiAssign(_self_, _88526_st.unsafe_cast_ptr<_1b4b7c3ad_MultiAssign>());
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1ac609bab:;
			{
				_1b6452a72_matchSt(_self_, _88526_st.unsafe_cast_ptr<_1b4b7ca1d_Match>());
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1ac609c33:;
			{
				_1b6452d2a_fallSt(_self_, _88526_st.unsafe_cast_ptr<_1b4b7dc3e_FallSt>());
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1ac609caa:;
			{
				_1b64530d3_breakSt(_self_, _88526_st.unsafe_cast_ptr<_1b4b7ada1_BreakSt>());
			}
		}
		else if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1ac609d32:;
			{
				_1b6453644_retSt(_self_, _88526_st.unsafe_cast_ptr<_1b4b7e0d5_RetSt>());
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_1ac609da9:;
			{
				_1b6464017_pushToSlice((*((*(_self_))._field_oc))._field_ec, _88526_st.unsafe_cast_ptr<_1b4d73230_PushToSliceExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_1ac609e31:;
			{
				_1b64642c0_appendToSlice((*((*(_self_))._field_oc))._field_ec, _88526_st.unsafe_cast_ptr<_1b4d73609_AppendToSliceExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_1ac609ea8:;
			{
				_1b6453ba5_mutSlicing(_self_, _88526_st.unsafe_cast_ptr<_1b4d726c4_MutSlicingExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type125) {
			_case_begin_1ac60a030:;
			{
				_1b6453e5d_swap(_self_, _88526_st.unsafe_cast_ptr<_1b4d71470_SwapExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1ac60a0a7:;
			{
				_1b6454216_exceptionalForwarding(_self_, _88526_st.unsafe_cast_ptr<_1b4d710da_ExceptionalForwardingExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1ac60a12e:;
			{
				_1b644e83d_strRuneIter(_self_, _88526_st.unsafe_cast_ptr<_1b4d739d3_StrRuneIter>());
			}
		}
		else {
			_case_begin_1ac608a23:;
			{
				_1a90272e1_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_stmt>", 20));
			}
		}
		_match_end_1ac60888b:;
	};
}



inline void _1b6454777_scopeStmts(jule::Ptr<_1b644d496_scopeCoder> _self_, jule::Ptr<_1b4b7880a_Scope>* _94135_s) {
	{
		auto expr = &((*((*(_94135_s))))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac617aba:;
		if (it != expr_end) {
			jule::Any _94221_st = *it;
			{
				_1a9027b93_indent((*(_self_))._field_oc);
				_1b64544be_st(_self_, _94221_st);
				_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1ac617aba:;
			++it;
			goto _iter_begin_1ac617aba;
		}
		_iter_end_1ac617aba:;
	};
}



inline void _1b6454a30_scope(jule::Ptr<_1b644d496_scopeCoder> _self_, jule::Ptr<_1b4b7880a_Scope> _95029_s) {
	_1a9027797_addIndent((*(_self_))._field_oc);
	if ((*(_95029_s))._field_Deferred) {
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("__JULE_DEFER(", 13));
	};
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("{\n", 2));
	_1b6454777_scopeStmts(_self_, &(_95029_s));
	_1a9027995_doneIndent((*_self_.alloc)._field_oc);
	_1a9027b93_indent((*_self_.alloc)._field_oc);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
	if ((*_95029_s.alloc)._field_Deferred) {
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(");", 2));
	};
}



inline void _1b6454cd8_commonFuncScope(jule::Ptr<_1b644d496_scopeCoder> _self_, jule::Ptr<_1b4b39865_FnIns>* _96540_f) {
	if ((!(_1b4b36d07_IsVoid((*((*(_96540_f))))._field_Decl.ptr())))) {
		jule::Ptr<_1b4c8a5cb_Tuple> _96717_tup = _1b4c81d86_Tup((*((*(_96540_f))))._field_Result.ptr());;
		if ((_96717_tup != nullptr)) {
			_1a9027b93_indent((*(_self_))._field_oc);
			_1a90413a4_tup((*((*(*_self_.alloc)._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _96717_tup);
			_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(" __jule_func_result;\n", 21));
			{
				auto expr = &((*_96717_tup.alloc)._field_Types);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1ac620d26:;
				if (it != expr_end) {
					jule::I64 _97222_i = it - expr->begin();
					jule::Ptr<_1b4c7c90e_TypeKind> _97229_t = *it;
					{
						if (_1a90436e7_shouldInitialized(&(_97229_t))) {
							_1a9027b93_indent((*_self_.alloc)._field_oc);
							_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
							_1a90272e1_write((*_self_.alloc)._field_oc, _1b2745440_Itoa(_97222_i));
							_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
							_1b6466a97_initExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, _97229_t);
							_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
						};
					}
					_iter_next_1ac620d26:;
					++it;
					_97222_i++;
					goto _iter_begin_1ac620d26;
				}
				_iter_end_1ac620d26:;
			};
		} else if (((*((*(*((*(_96540_f))))._field_Decl.alloc)._field_Result))._field_Idents.len() == 1LL)) {
			_1a9027b93_indent((*(_self_))._field_oc);
			_1a903baca_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*((*(_96540_f))))._field_Result);
			_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(" __jule_func_result", 19));
			if (_1a90436e7_shouldInitialized(&((*((*(_96540_f))))._field_Result))) {
				_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
				_1b6466a97_initExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*(_96540_f))))._field_Result);
			};
			_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
		};
	};
	_1b6454777_scopeStmts(_self_, &((*((*(_96540_f))))._field_Scope));
	if (((*(*((*(_96540_f))))._field_Decl.alloc)._field_Exceptional && _1b4b36d07_IsVoid((*((*(_96540_f))))._field_Decl))) {
		_1a9027b93_indent((*_self_.alloc)._field_oc);
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("return jule::VoidExceptional{};\n", 32));
	};
}



inline void _1b645514b_anonFuncScope(jule::Ptr<_1b644d496_scopeCoder> _self_, jule::Ptr<_1b4b2b857_AnonFnExprModel> _100537_m, jule::Str _100558_ident) {
	if (((*((*(_100537_m))._field_Func))._field_Scope == nullptr)) {
		return;;
	};
	jule::Bool _10099_closure = _1b57b160c_IsClosure(&(_100537_m));;
	if (_10099_closure) {
		(*((*((*(_self_))._field_oc))._field_ec))._field_varPrefixes=jule::append((*(*(*_self_.alloc)._field_oc.alloc)._field_ec.alloc)._field_varPrefixes,jule::Slice<jule::Fn<jule::Bool,jule::Ptr<_1b4bddaa1_Var>>>::make({jule::__new_closure<jule::Bool,jule::Ptr<_1b4bddaa1_Var>>((void*)__jule_anon_1ac62ceba, jule::Ptr<__jule_anon_1ac62ceba_ctx>::make(__jule_anon_1ac62ceba_ctx{._self_=_self_,._100537_m=_100537_m}).as<jule::Uintptr>(), __jule_anon_1ac62ceba_ctx_handler)}));
	};
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("{\n", 2));
	_1a9027797_addIndent((*_self_.alloc)._field_oc);
	if (_10099_closure) {
		_1a9027b93_indent((*_self_.alloc)._field_oc);
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::Ptr<", 10));
		_1a90272e1_write((*_self_.alloc)._field_oc, _100558_ident);
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("_ctx> __jule_closure_ctx = __f_ctx.as<", 38));
		_1a90272e1_write((*_self_.alloc)._field_oc, _100558_ident);
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("_ctx>();\n", 9));
	};
	_1b6454cd8_commonFuncScope(_self_, &((*_100537_m.alloc)._field_Func));
	_1a9027995_doneIndent((*_self_.alloc)._field_oc);
	_1a9027b93_indent((*_self_.alloc)._field_oc);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
	if (_10099_closure) {
		((*((*((*(_self_))._field_oc))._field_ec))._field_varPrefixes).mut_slice(0LL, ((*((*((*(_self_))._field_oc))._field_ec))._field_varPrefixes.len() - 1LL));;
	};
}



inline void _1b6455404_funcScope(jule::Ptr<_1b644d496_scopeCoder> _self_, jule::Ptr<_1b4b39865_FnIns> _103733_f) {
	if (((*(_103733_f))._field_Scope == nullptr)) {
		return;;
	};
	_1a90272e1_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1a9027797_addIndent((*_self_.alloc)._field_oc);
	_1b6454cd8_commonFuncScope(_self_, &(_103733_f));
	_1a9027995_doneIndent((*_self_.alloc)._field_oc);
	_1a9027b93_indent((*_self_.alloc)._field_oc);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
}





std::ostream &operator<<(std::ostream &_Stream, _1b644d496_scopeCoder _Src) {
	_Stream << "scopeCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b6458acd_exprCoder> static__1b6458e96_new(jule::Ptr<_1a9026b3c_ObjectCoder>* _11424_oc) {
	return jule::new_ptr<_1b6458acd_exprCoder>(_1b6458acd_exprCoder{._field_oc=(*(_11424_oc)), });;
}



inline void _1b645924e_string(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b2753508_Const>* _12027_c) {
	jule::Str _1219_content = _1b2755681_ReadStr((*(_12027_c)).ptr());;
	if ((_1219_content.len() == 0LL)) {
		_1a90272e1_write((*(_self_))._field_oc, jule::Str::lit("jule::Str()", 11));
		return;;
	};
	jule::Str _1269_len = _1b2745176_FmtInt(static_cast<jule::I64>(_1219_content.len()), 10LL);;
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::Str", 9));
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("::lit(", 6));
	_1b6467889_cstrLit(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _1219_content);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
	_1a90272e1_write((*_self_.alloc)._field_oc, _1269_len);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1b6459507_boolean(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Bool _13527_b) {
	if (_13527_b) {
		_1a90272e1_write((*(_self_))._field_oc, jule::Str::lit("true", 4));
	} else {
		_1a90272e1_write((*(_self_))._field_oc, jule::Str::lit("false", 5));
	};
}



inline void _1b6459705_nilLit(jule::Ptr<_1b6458acd_exprCoder> _self_) {
	_1a90272e1_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
}



inline jule::Bool _1b6459a46_ftoaSpecialCases(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::F64* _14737_x) {
	{
		
		if (_1b26e99aa_IsNaN((*(_14737_x)))) {
			_case_begin_1ac64ca89:;
			{
				_1a90272e1_write((*(_self_))._field_oc, jule::Str::lit("NAN", 3));
			}
		}
		else if (_1b26ea13c_IsInf((*(_14737_x)), 1LL)) {
			_case_begin_1ac64cb33:;
			{
				_1a90272e1_write((*(_self_))._field_oc, jule::Str::lit("INFINITY", 8));
			}
		}
		else if (_1b26ea13c_IsInf((*(_14737_x)), -1LL)) {
			_case_begin_1ac64cbaa:;
			{
				_1a90272e1_write((*(_self_))._field_oc, jule::Str::lit("-INFINITY", 9));
			}
		}
		else {
			_case_begin_1ac64ca01:;
			{
				return false;;
			}
		}
		_match_end_1ac64c902:;
	};
	return true;;
}



inline void _1b6459cee_float32(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b2753508_Const>* _16128_c) {
	jule::F64 _1629_x = _1b27561ba_AsF64((*(_16128_c)).ptr());;
	if (_1b6459a46_ftoaSpecialCases(_self_, &(_1629_x))) {
		return;;
	};
	{
		
		if ((_1629_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_1ac651cbe:;
			{
				_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MAX_F32", 13));
			}
		}
		else if ((_1629_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_1ac650d89:;
			{
				_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MIN_F32", 13));
			}
		}
		else {
			_case_begin_1ac650d23:;
			{
				_1b6467c30_ftoa(&((*((*_self_.alloc)._field_oc))._field_Buf), _1629_x, 32LL);
				_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("f", 1));
			}
		}
		_match_end_1ac650be1:;
	};
}



inline void _1b645a0a7_float64(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b2753508_Const>* _18028_c) {
	jule::F64 _1819_x = _1b27561ba_AsF64((*(_18028_c)).ptr());;
	if (_1b6459a46_ftoaSpecialCases(_self_, &(_1819_x))) {
		return;;
	};
	{
		
		if ((_1819_x == jule::MAX_F64)) {
			_case_begin_1ac654750:;
			{
				_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MAX_F64", 13));
			}
		}
		else if ((_1819_x == jule::MIN_F64)) {
			_case_begin_1ac654376:;
			{
				_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MIN_F64", 13));
			}
		}
		else {
			_case_begin_1ac654310:;
			{
				_1b6467c30_ftoa(&((*((*_self_.alloc)._field_oc))._field_Buf), _1819_x, 64LL);
			}
		}
		_match_end_1ac6541cd:;
	};
}



inline void _1b645a360_constant(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b2753508_Const> _19832_c) {
	{
		
		if (_1b2757c7c_IsStr(_19832_c.ptr())) {
			_case_begin_1ac6565a9:;
			{
				_1b645924e_string(_self_, &(_19832_c));
			}
		}
		else if (_1b27579e6_IsBool(_19832_c.ptr())) {
			_case_begin_1ac656620:;
			{
				_1b6459507_boolean(_self_, _1b27553ea_ReadBool(_19832_c));
			}
		}
		else if (_1b2758013_IsF64(_19832_c.ptr())) {
			_case_begin_1ac656686:;
			{
				{
					
					if ((*_19832_c.alloc)._field_Kind.equal("f32", 3)) {
						_case_begin_1ac65905c:;
						{
							_1b6459cee_float32(_self_, &(_19832_c));
						}
					}
					else {
						_case_begin_1ac658bc7:;
						{
							_1b645a0a7_float64(_self_, &(_19832_c));
						}
					}
					_match_end_1ac658ac8:;
				};
			}
		}
		else if (_1b27574c9_IsI64(_19832_c.ptr())) {
			_case_begin_1ac6566ec:;
			{
				_1b646801b_itoa(&((*((*(_self_))._field_oc))._field_Buf), _1b2754dcd_ReadI64(_19832_c));
			}
		}
		else if (_1b2757760_IsU64(_19832_c.ptr())) {
			_case_begin_1ac656763:;
			{
				_1b6468307_utoa(&((*((*(_self_))._field_oc))._field_Buf), _1b2755164_ReadU64(_19832_c));
			}
		}
		else if (_1b2758299_IsNil(_19832_c.ptr())) {
			_case_begin_1ac6567c9:;
			{
				_1b6459705_nilLit(_self_);
			}
		}
		else {
			_case_begin_1ac656543:;
			{
				_1a90272e1_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_constant_expression>", 35));
			}
		}
		_match_end_1ac656444:;
	};
}



inline void _1b645a77d_divByZeroBinary(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4ad5712_Token>* _22236_op, jule::Ptr<_1b4b28546_OperandExprModel>* _22253_l, jule::Ptr<_1b4b28546_OperandExprModel>* _22280_r) {
	_1a90272e1_write((*(_self_))._field_oc, jule::Str::lit("jule::", 6));
	{
		auto &_match_expr{ (*((*(_22236_op))))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1ac65c219:;
			{
				_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("div(", 4));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU) || _match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1ac65cba9:;
			{
				_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("mod(", 4));
			}
		}
		_match_end_1ac65cb21:;
	};
	if ((!(_20c58021e_Production))) {
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("\"", 1));
		_1a9029634_locInfo((*_self_.alloc)._field_oc, _22236_op);
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("\",", 2));
	};
	_1b645be22_possibleRefExpr(_self_, (*((*(_22253_l))))._field_Model);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(",", 1));
	_1b645be22_possibleRefExpr(_self_, (*((*(_22280_r))))._field_Model);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1b645aa36_unsafeBinary(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b28a41_BinaryExprModel> _24436_m) {
	if ((((*((*(_24436_m))._field_Op))._field_Id == static_cast<jule::U64>(50LLU)) || ((*(*_24436_m.alloc)._field_Op.alloc)._field_Id == static_cast<jule::U64>(51LLU)))) {
		if (_1b57b12bb_IsAny(&((*((*_24436_m.alloc)._field_Left))._field_Kind))) {
			if (((!(_1b4c7d9dc_IsNil((*((*_24436_m.alloc)._field_Right))._field_Kind.ptr()))) && (!(_1b57b12bb_IsAny(&((*(*_24436_m.alloc)._field_Right.alloc)._field_Kind)))))) {
				_1a90272e1_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
				if (((*(*_24436_m.alloc)._field_Op.alloc)._field_Id == static_cast<jule::U64>(51LLU))) {
					_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("!", 1));
				};
				jule::I64 _25421_i = _1a90289a7_pushAnyType((*_self_.alloc)._field_oc, (*(*_24436_m.alloc)._field_Right.alloc)._field_Kind);;
				_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("__jule_any_type", 15));
				_1a90272e1_write((*_self_.alloc)._field_oc, _1b2745440_Itoa(_25421_i));
				_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("_compare(", 9));
				_1b645be22_possibleRefExpr(_self_, (*(*_24436_m.alloc)._field_Left.alloc)._field_Model);
				_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
				_1b645be22_possibleRefExpr(_self_, (*(*_24436_m.alloc)._field_Right.alloc)._field_Model);
				_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("))", 2));
				return;;
			};
		};
	};
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("(", 1));
	_1b645be22_possibleRefExpr(_self_, (*(*_24436_m.alloc)._field_Left.alloc)._field_Model);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(" ", 1));
	_1a90272e1_write((*_self_.alloc)._field_oc, (*(*_24436_m.alloc)._field_Op.alloc)._field_Kind);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(" ", 1));
	_1b645be22_possibleRefExpr(_self_, (*(*_24436_m.alloc)._field_Right.alloc)._field_Model);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1b645acde_binary(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b28a41_BinaryExprModel> _27530_m) {
	{
		auto &_match_expr{ (*((*(_27530_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1ac66dd52:;
			{
				if ((_1b4c815d3_Struct((*((*(_27530_m))._field_Left))._field_Kind.ptr()) == nullptr)) {
					_1b645a77d_divByZeroBinary(_self_, &((*_27530_m.alloc)._field_Op), &((*_27530_m.alloc)._field_Left), &((*_27530_m.alloc)._field_Right));
					return;;
				};
			}
		}
		_match_end_1ac66dc97:;
	};
	_1b645aa36_unsafeBinary(_self_, _27530_m);
}



inline void _1b645b097_var(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4bddaa1_Var> _28727_m) {
	{
		auto expr = &((*(_self_))._field_varPrefixes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac6710c9:;
		if (it != expr_end) {
			jule::Fn<jule::Bool,jule::Ptr<_1b4bddaa1_Var>> _28816_prefix = *it;
			{
				if (_28816_prefix(_28727_m)) {
					return;;
				};
			}
			_iter_next_1ac6710c9:;
			++it;
			goto _iter_begin_1ac6710c9;
		}
		_iter_end_1ac6710c9:;
	};
	if ((*(_28727_m))._field_Binded) {
		jule::Ptr<_1b4aea0d9_Directive> _29413_d = _1b57b29e8_FindDirective(&((*_28727_m.alloc)._field_Directives), jule::Str::lit("namespace", 9));;
		if ((_29413_d != nullptr)) {
			_1a9027599_writeBytes((*_self_.alloc)._field_oc, _1a903452e_concatAllParts((*_29413_d.alloc)._field_Args));
			_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("::", 2));
		};
	};
	static__1b646e9b2_var(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _28727_m);
}



inline void _1b645b350_structureIns(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b24641_StructIns> _30336_m) {
	_1a9039d81_structureIns((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _30336_m);
}



inline void _1b645b608_unary(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b28e1a_UnaryExprModel> _30729_m) {
	{
		auto &_match_expr{ (*((*(_30729_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1ac6753a8:;
			{
				_1a90272e1_write((*(_self_))._field_oc, jule::Str::lit("(~(", 3));
				_1b645be22_possibleRefExpr(_self_, (*((*(_30729_m))._field_Expr))._field_Model);
				_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1ac675991:;
			{
				if ((_20c58021e_Production || (_1b4c802e6_Sptr((*((*(_30729_m))._field_Expr))._field_Kind.ptr()) == nullptr))) {
					goto _match_end_1ac6758a3;
				};
				_1b645be22_possibleRefExpr(_self_, (*(*_30729_m.alloc)._field_Expr.alloc)._field_Model);
				_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(".get(\"", 6));
				_1a9029634_locInfo((*_self_.alloc)._field_oc, &((*_30729_m.alloc)._field_Op));
				_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("\")", 2));
				return;;
			}
		}
		_match_end_1ac6758a3:;
	};
	_1a90272e1_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1a90272e1_write((*_self_.alloc)._field_oc, (*((*(_30729_m))._field_Op))._field_Kind);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("(", 1));
	_1b645be22_possibleRefExpr(_self_, (*((*_30729_m.alloc)._field_Expr))._field_Model);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("))", 2));
}



inline void _1b645b8b1_structureLit(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b297de_StructLitExprModel> _33136_m) {
	if ((*((*((*(_33136_m))._field_Strct))._field_Decl))._field_Binded) {
		_1a90272e1_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	};
	_1a9039d81_structureIns((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_33136_m.alloc)._field_Strct);
	if ((*(*(*_33136_m.alloc)._field_Strct.alloc)._field_Decl.alloc)._field_Binded) {
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
	};
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("{", 1));
	if (((*_33136_m.alloc)._field_Args.len() > 0LL)) {
		_julec_label_1ac680b55:;
		{
			auto expr = &((*(*_33136_m.alloc)._field_Strct.alloc)._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac680ced:;
			if (it != expr_end) {
				jule::I64 _34417_i = it - expr->begin();
				jule::Ptr<_1b4b23a91_FieldIns> _34420_f = *it;
				{
					{
						auto expr = &((*_33136_m.alloc)._field_Args);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ac681b56:;
						if (it != expr_end) {
							jule::Ptr<_1b4b29448_StructArgExprModel> _34529_arg = *it;
							{
								if (((*(_34529_arg))._field_Field == _34420_f)) {
									_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
									static__1b646e6c6_field(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), &((*((*_34529_arg.alloc)._field_Field))._field_Decl));
									_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("=", 1));
									_1b645be22_possibleRefExpr(_self_, (*((*_34529_arg.alloc)._field_Expr))._field_Model);
									if ((((*(*_33136_m.alloc)._field_Strct.alloc)._field_Fields.len() - _34417_i) > 1LL)) {
										_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
									};
									goto _iter_next_1ac680ced;
								};
							}
							_iter_next_1ac681b56:;
							++it;
							goto _iter_begin_1ac681b56;
						}
						_iter_end_1ac681b56:;
					};
				}
				_iter_next_1ac680ced:;
				++it;
				_34417_i++;
				goto _iter_begin_1ac680ced;
			}
			_iter_end_1ac680ced:;
		};
	};
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
}



inline void _1b645bb69_allocStructure(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b29adb_AllocStructLitExprModel> _36238_m) {
	_1a90272e1_write((*(_self_))._field_oc, jule::Str::lit("jule::new_ptr<", 14));
	static__1b646e3da_structureIns(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), &((*((*(_36238_m))._field_Lit))._field_Strct));
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(">(", 2));
	_1b645b8b1_structureLit(_self_, (*_36238_m.alloc)._field_Lit);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1b645be22_possibleRefExpr(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Any _37035_expr) {
	{
		auto &_match_expr{ _37035_expr };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ac688eb0:;
			{
				jule::Ptr<_1b4bddaa1_Var> _37313_v = _37035_expr.unsafe_cast_ptr<_1b4bddaa1_Var>();;
				if ((*(_37313_v))._field_Reference) {
					_1a90272e1_write((*(_self_))._field_oc, jule::Str::lit("(*(", 3));
					_1b64667de_model(_self_, _37035_expr);
					_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("))", 2));
					return;;
				};
			}
		}
		_match_end_1ac688e5a:;
	};
	_1b64667de_model(_self_, _37035_expr);
}



inline void _1b645c340_castTraitFromTrait(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b2a16e_CastingExprModel>* _38443_m, jule::Ptr<_1b4b49c3d_Trait> _38469_t1, jule::Ptr<_1b4b49c3d_Trait> _38485_t2) {
	_1b645be22_possibleRefExpr(_self_, (*((*((*(_38443_m))))._field_Expr))._field_Model);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(".map(", 5));
	_1a902937b_pushAndWriteMaskMapper((*_self_.alloc)._field_oc, _38469_t1, _38485_t2);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1b645c5e8_casting(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b2a16e_CastingExprModel> _39731_m) {
	{
		
		if (_1b57b12bb_IsAny(&((*(_39731_m))._field_Kind))) {
			_case_begin_1ac68da75:;
			{
				if (_1b4c7d9dc_IsNil((*_39731_m.alloc)._field_ExprKind.ptr())) {
					_1a90272e1_write((*(_self_))._field_oc, jule::Str::lit("jule::Any()", 11));
					return;;
				};
				if ((_1b4c80a99_TypeEnum((*_39731_m.alloc)._field_ExprKind) != nullptr)) {
					_1b645be22_possibleRefExpr(_self_, (*((*_39731_m.alloc)._field_Expr))._field_Model);
					return;;
				};
				jule::I64 _40813_i = _1a90289a7_pushAnyType((*_self_.alloc)._field_oc, (*_39731_m.alloc)._field_ExprKind);;
				_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::Any(", 10));
				{
					auto &_match_expr{ (*((*(_39731_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type19) {
						_case_begin_1ac691a78:;
						{
							jule::Ptr<_1b4c854d8_Prim> _41217_prim = _1b4c80060_Prim((*_39731_m.alloc)._field_ExprKind);;
							if (((_41217_prim != nullptr) && _1b275288c_IsInt((*_41217_prim.alloc)._field_Kind))) {
								_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("static_cast<", 12));
								_1a90375ed_prim((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _41217_prim);
								_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(">(", 2));
								_1b645be22_possibleRefExpr(_self_, (*(*_39731_m.alloc)._field_Expr.alloc)._field_Model);
								_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
								goto _match_end_1ac692958;
							};
							goto _case_begin_1ac6929ad;
						}
					}
					else {
						_case_begin_1ac6929ad:;
						{
							_1b645be22_possibleRefExpr(_self_, (*(*_39731_m.alloc)._field_Expr.alloc)._field_Model);
						}
					}
					_match_end_1ac692958:;
				};
				_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(", &__jule_any_type", 18));
				_1a90272e1_write((*_self_.alloc)._field_oc, _1b2745440_Itoa(_40813_i));
				_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if (_1b57b12bb_IsAny(&((*(_39731_m))._field_ExprKind))) {
			_case_begin_1ac68db1e:;
			{
				_1b645be22_possibleRefExpr(_self_, (*((*_39731_m.alloc)._field_Expr))._field_Model);
				_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
				if ((_1b4c802e6_Sptr((*_39731_m.alloc)._field_Kind.ptr()) != nullptr)) {
					_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("cast_ptr<", 9));
					_1a903baca_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(_1b4c802e6_Sptr((*_39731_m.alloc)._field_Kind)))._field_Elem);
				} else {
					_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("cast<", 5));
					_1a903baca_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_39731_m.alloc)._field_Kind);
				};
				_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(">(", 2));
				if ((!(_20c58021e_Production))) {
					_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("\"", 1));
					_1a9029634_locInfo((*_self_.alloc)._field_oc, &((*_39731_m.alloc)._field_Token));
					_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("\", ", 3));
				};
				_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("&__jule_any_type", 16));
				_1a90272e1_write((*_self_.alloc)._field_oc, _1b2745440_Itoa(_1a90289a7_pushAnyType((*_self_.alloc)._field_oc, (*_39731_m.alloc)._field_Kind)));
				_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if ((_1b4c8057c_Ptr((*(_39731_m))._field_ExprKind.ptr()) != nullptr) || (_1b4c8057c_Ptr((*_39731_m.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac68db85:;
			{
				_1a90272e1_write((*(_self_))._field_oc, jule::Str::lit("((", 2));
				_1a903baca_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_39731_m.alloc)._field_Kind);
				_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(")(", 2));
				_1b645be22_possibleRefExpr(_self_, (*((*_39731_m.alloc)._field_Expr))._field_Model);
				_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		else if ((_1b4c81869_Trait((*(_39731_m))._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1ac68dbeb:;
			{
				if ((_1b4c81869_Trait((*_39731_m.alloc)._field_Kind.ptr()) != nullptr)) {
					_1b645c340_castTraitFromTrait(_self_, &(_39731_m), _1b4c81869_Trait((*_39731_m.alloc)._field_Kind), _1b4c81869_Trait((*_39731_m.alloc)._field_ExprKind));
					return;;
				};
				_1b645be22_possibleRefExpr(_self_, (*((*_39731_m.alloc)._field_Expr))._field_Model);
				_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
				if ((_1b4c802e6_Sptr((*_39731_m.alloc)._field_Kind) != nullptr)) {
					_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("cast_ptr<", 9));
					_1a903baca_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(_1b4c802e6_Sptr((*_39731_m.alloc)._field_Kind)))._field_Elem);
				} else {
					_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("cast<", 5));
					_1a903baca_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_39731_m.alloc)._field_Kind);
				};
				_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(">(", 2));
				if ((!(_20c58021e_Production))) {
					_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("\"", 1));
					_1a9029634_locInfo((*_self_.alloc)._field_oc, &((*_39731_m.alloc)._field_Token));
					_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("\", ", 3));
				};
				_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("(jule::Trait::Type*)&", 21));
				static__1b646da27_traitDecl(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _1b4c81869_Trait((*_39731_m.alloc)._field_ExprKind));
				_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("_mptr_data", 10));
				_1a90272e1_write((*_self_.alloc)._field_oc, _1b2745440_Itoa(_1b57b3c6e_FindTraitTypeOffset(_1b4c81869_Trait((*_39731_m.alloc)._field_ExprKind), (*_39731_m.alloc)._field_Kind)));
				_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if ((_1b4c81869_Trait((*(_39731_m))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac68dc62:;
			{
				_1a903baca_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_39731_m.alloc)._field_Kind);
				_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("(", 1));
				_1b645be22_possibleRefExpr(_self_, (*((*_39731_m.alloc)._field_Expr))._field_Model);
				_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(", (jule::Trait::Type*)&", 23));
				static__1b646da27_traitDecl(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _1b4c81869_Trait((*_39731_m.alloc)._field_Kind));
				_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("_mptr_data", 10));
				_1a90272e1_write((*_self_.alloc)._field_oc, _1b2745440_Itoa(_1b57b3c6e_FindTraitTypeOffset(_1b4c81869_Trait((*_39731_m.alloc)._field_Kind), (*_39731_m.alloc)._field_ExprKind)));
				_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		_match_end_1ac68d8ee:;
	};
	jule::Ptr<_1b4c854d8_Prim> _4949_prim = _1b4c80060_Prim((*(_39731_m))._field_Kind.ptr());;
	jule::Ptr<_1b4c854d8_Prim> _4959_eprim = _1b4c80060_Prim((*_39731_m.alloc)._field_ExprKind.ptr());;
	if ((((_4959_eprim != nullptr) && (_4949_prim != nullptr)) && _1b4c88970_IsStr(_4949_prim))) {
		if (_1b4c86dd0_IsU8(_4959_eprim)) {
			_1a90272e1_write((*(_self_))._field_oc, jule::Str::lit("jule::Str::from_byte(", 21));
		} else {
			_1a90272e1_write((*(_self_))._field_oc, jule::Str::lit("jule::Str::from_rune(", 21));
		};
		_1b645be22_possibleRefExpr(_self_, (*((*_39731_m.alloc)._field_Expr))._field_Model);
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("static_cast<", 12));
	_1a903baca_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_39731_m.alloc)._field_Kind);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(">(", 2));
	_1b645be22_possibleRefExpr(_self_, (*(*_39731_m.alloc)._field_Expr.alloc)._field_Model);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1b645c8a1_models(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Slice<jule::Any> _51330_args) {
	if ((_51330_args.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &(_51330_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac6bbc6d:;
		if (it != expr_end) {
			jule::I64 _51714_i = it - expr->begin();
			jule::Any _51721_a = *it;
			{
				_1b645be22_possibleRefExpr(_self_, _51721_a);
				if (((_51330_args.len() - _51714_i) > 1LL)) {
					_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(",", 1));
				};
			}
			_iter_next_1ac6bbc6d:;
			++it;
			_51714_i++;
			goto _iter_begin_1ac6bbc6d;
		}
		_iter_end_1ac6bbc6d:;
	};
}



inline void _1b645cb59_args(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b2aa21_FnCallExprModel>* _52529_m) {
	jule::I64 _52613_j = 0LL;;
	if (((((*((*((*(_52529_m))))._field_Func))._field_Owner != nullptr) && (!((*((*(*((*(_52529_m))))._field_Func.alloc)._field_Decl))._field_Statically))) || (((*(*((*(_52529_m))))._field_Func.alloc)._field_Params.len() > 0LL) && _1b4b354cb_IsSelf((*((*(*((*(_52529_m))))._field_Func.alloc)._field_Params[0LL]))._field_Decl.ptr())))) {
		(_52613_j)++;
	};
	{
		auto expr = &((*((*(_52529_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac6bee3b:;
		if (it != expr_end) {
			jule::I64 _53113_i = it - expr->begin();
			jule::Any _53116_arg = *it;
			{
				jule::Ptr<_1b4b387dc_ParamIns> _53213_p = (*(*((*(_52529_m))))._field_Func.alloc)._field_Params[_52613_j];;
				if ((((*(_53213_p))._field_Decl != nullptr) && (*(*_53213_p.alloc)._field_Decl.alloc)._field_Reference)) {
					{
						auto &_match_expr{ _53116_arg };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_1ac6c2c30:;
							{
								jule::Ptr<_1b4bddaa1_Var> _53621_v = _53116_arg.unsafe_cast_ptr<_1b4bddaa1_Var>();;
								if ((*(_53621_v))._field_Reference) {
									_1b64667de_model(_self_, _53116_arg);
									goto _julec_label_1ac6c267a;
								};
							}
						}
						_match_end_1ac6c2bca:;
					};
					_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("&(", 2));
					_1b64667de_model(_self_, _53116_arg);
					_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
					goto _julec_label_1ac6c267a;
				};
				_1b645be22_possibleRefExpr(_self_, _53116_arg);
				_julec_label_1ac6c267a:;
				if ((((*((*(_52529_m))))._field_Args.len() - _53113_i) > 1LL)) {
					_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
				};
				(_52613_j)++;
			}
			_iter_next_1ac6bee3b:;
			++it;
			_53113_i++;
			goto _iter_begin_1ac6bee3b;
		}
		_iter_end_1ac6bee3b:;
	};
}



inline void _1b645ce12_modelForCall(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Any _55636_expr) {
	{
		auto &_match_expr{ _55636_expr };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1ac6c7a6a:;
			{
				_1b6461487_funcIns(_self_, _55636_expr.unsafe_cast_ptr<_1b4b39865_FnIns>());
				return;;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1ac6c78c2:;
			{
				jule::Ptr<_1b4b2d68e_StructSubIdentExprModel> _56217_ssie = _55636_expr.unsafe_cast_ptr<_1b4b2d68e_StructSubIdentExprModel>();;
				if (((*(_56217_ssie))._field_Method != nullptr)) {
					_1b6461487_funcIns(_self_, (*_56217_ssie.alloc)._field_Method);
					return;;
				};
			}
		}
		_match_end_1ac6c7a04:;
	};
	_1b645be22_possibleRefExpr(_self_, _55636_expr);
}



inline void _1b645d1ba_pushCallInf(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b2aa21_FnCallExprModel>* _57132_m) {
	if ((_20c58021e_Production || (!((*((*((*(_57132_m))))._field_Func))._field_Anon)))) {
		_1a90272e1_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		return;;
	};
	if ((*(*((*(_57132_m))))._field_Func.alloc)._field_Anon) {
		{
			auto &_match_expr{ (*((*(_57132_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type98) {
				_case_begin_1ac6cb574:;
				{
					if ((*((*((*((*((*((*(_57132_m))))._field_Expr.unsafe_cast_ptr<_1b4b2d68e_StructSubIdentExprModel>()))._field_Field))._field_Decl))._field_Owner))._field_Binded) {
						_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("(", 1));
						return;;
					};
				}
			}
			_match_end_1ac6cb51e:;
		};
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(".call", 5));
	};
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("(\"", 2));
	_1a9029634_locInfo((*_self_.alloc)._field_oc, &((*((*(_57132_m))))._field_Token));
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("\"", 1));
	if (((*((*(_57132_m))))._field_Args.len() != 0LL)) {
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
	};
}



inline jule::Bool _1b645d50b_isWrapped(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b2aa21_FnCallExprModel>* _59434_m) {
	if ((((!(_1b4b3acea_IsBuiltin((*((*(_59434_m))))._field_Func.ptr()))) && ((*((*(*((*(_59434_m))))._field_Func.alloc)._field_Decl))._field_Params.len() > 0LL)) && _1b4b354cb_IsSelf((*(*(*((*(_59434_m))))._field_Func.alloc)._field_Decl.alloc)._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*((*(_59434_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type98) {
				_case_begin_1ac6d12d2:;
				{
					jule::Ptr<_1b4b2d68e_StructSubIdentExprModel> _59821_ssie = (*((*(_59434_m))))._field_Expr.unsafe_cast_ptr<_1b4b2d68e_StructSubIdentExprModel>();;
					{
						
						if (_1b4b35762_IsRef((*(*(*((*(_59434_m))))._field_Func.alloc)._field_Decl.alloc)._field_Params[0LL].ptr()) || (_1b4c802e6_Sptr((*((*(_59821_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
							_case_begin_1ac6d2eb5:;
							{
								goto _match_end_1ac6d2228;
							}
						}
						else {
							_case_begin_1ac6d228e:;
							{
								if ((_1b4c815d3_Struct((*((*(_59821_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
									if ((!((*(*_59821_ssie.alloc)._field_Expr.alloc)._field_Lvalue))) {
										_1a90272e1_write((*(_self_))._field_oc, jule::Str::lit("({ auto _wrap_copy = ", 21));
										_1b64667de_model(_self_, (*(*_59821_ssie.alloc)._field_Expr.alloc)._field_Model);
										_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("; ", 2));
										return true;;
									};
								};
							}
						}
						_match_end_1ac6d2228:;
					};
				}
			}
			_match_end_1ac6d127c:;
		};
	};
	return false;;
}



inline jule::Bool _1b645d84c_writeReceiver(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Any _61837_m) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ _61837_m };
		
		if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1ac6d7a7a:;
			{
				_1b645be22_possibleRefExpr(_self_, (*((*(_61837_m.unsafe_cast_ptr<_1b4b28e1a_UnaryExprModel>()))._field_Expr))._field_Model);
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (_match_expr.type == &__jule_any_type129) {
			_case_begin_1ac6d7c78:;
			{
				_1b645be22_possibleRefExpr(_self_, (*((*((*(_61837_m.unsafe_cast_ptr<_1b4d73cd0_UnsafeDerefExprModel>()))._field_Base))._field_Expr))._field_Model);
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1ac6d7c12:;
			{
				jule::panic(jule::Str::lit("implementation mistake, this panic call should be unreachable", 61) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:627:13"));;
			}
		}
		_match_end_1ac6d7bac:;
	};
}



inline void _1b645db05_pureFuncCall(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b2aa21_FnCallExprModel>* _63137_m) {
	jule::Bool _6329_wrapped = _1b645d50b_isWrapped(_self_, _63137_m);;
	_1b645ce12_modelForCall(_self_, (*((*(_63137_m))))._field_Expr);
	if ((!(_1b4b3acea_IsBuiltin((*((*(_63137_m))))._field_Func.ptr())))) {
		if (((*((*(*((*(_63137_m))))._field_Func.alloc)._field_Decl))._field_Binded && ((*(*((*(_63137_m))))._field_Func.alloc)._field_Generics.len() > 0LL))) {
			if ((!(_1b57b2db1_HasDirective(&((*(*(*((*(_63137_m))))._field_Func.alloc)._field_Decl.alloc)._field_Directives), jule::Str::lit("cdef", 4))))) {
				_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("<", 1));
				{
					auto expr = &((*(*((*(_63137_m))))._field_Func.alloc)._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac6dbd7b:;
					if (it != expr_end) {
						jule::I64 _63826_i = it - expr->begin();
						jule::Ptr<_1b4c7b028_InsGeneric> _63833_g = *it;
						{
							_1a903baca_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(_63833_g))._field_Kind);
							if ((((*(*((*(_63137_m))))._field_Func.alloc)._field_Generics.len() - _63826_i) > 1LL)) {
								_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
							};
						}
						_iter_next_1ac6dbd7b:;
						++it;
						_63826_i++;
						goto _iter_begin_1ac6dbd7b;
					}
					_iter_end_1ac6dbd7b:;
				};
				_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(">", 1));
			};
		};
	};
	_1b645d1ba_pushCallInf(_self_, _63137_m);
	if (((*(*((*(_63137_m))))._field_Func.alloc)._field_AsAnon && (!((*(*((*(_63137_m))))._field_Func.alloc)._field_Anon)))) {
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("nullptr", 7));
		if (((*((*(_63137_m))))._field_Args.len() > 0LL)) {
			_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
		};
	};
	if ((((!(_1b4b3acea_IsBuiltin((*((*(_63137_m))))._field_Func))) && ((*(*(*((*(_63137_m))))._field_Func.alloc)._field_Decl.alloc)._field_Params.len() > 0LL)) && _1b4b354cb_IsSelf((*(*(*((*(_63137_m))))._field_Func.alloc)._field_Decl.alloc)._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*((*(_63137_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type98) {
				_case_begin_1ac6e3a86:;
				{
					jule::Ptr<_1b4b2d68e_StructSubIdentExprModel> _66221_ssie = (*((*(_63137_m))))._field_Expr.unsafe_cast_ptr<_1b4b2d68e_StructSubIdentExprModel>();;
					{
						
						if (_1b4b35762_IsRef((*(*(*((*(_63137_m))))._field_Func.alloc)._field_Decl.alloc)._field_Params[0LL].ptr())) {
							_case_begin_1ac6ed2bb:;
							{
								_1b645d84c_writeReceiver(_self_, (*((*(_66221_ssie))._field_Expr))._field_Model);
							}
						}
						else if ((_1b4c802e6_Sptr((*((*(_66221_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
							_case_begin_1ac6e4b53:;
							{
								jule::Bool _66921_safe = _1b645d84c_writeReceiver(_self_, (*(*_66221_ssie.alloc)._field_Expr.alloc)._field_Model);;
								if (_66921_safe) {
									_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(".ptr(", 5));
									if ((!(_20c58021e_Production))) {
										_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("\"", 1));
										_1a9029634_locInfo((*_self_.alloc)._field_oc, &((*((*(_63137_m))))._field_Token));
										_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("\"", 1));
									};
									_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
								};
							}
						}
						else {
							_case_begin_1ac6e4aba:;
							{
								if ((_1b4c815d3_Struct((*((*(_66221_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
									{
										auto &_match_expr{ (*((*(_66221_ssie))._field_Expr))._field_Model };
										
										if (_match_expr.type == &__jule_any_type8) {
											_case_begin_1ac6e53b2:;
											{
												jule::Ptr<_1b4bddaa1_Var> _68329_v = (*((*(_66221_ssie))._field_Expr))._field_Model.unsafe_cast_ptr<_1b4bddaa1_Var>();;
												if ((*(_68329_v))._field_Reference) {
													goto _match_end_1ac6e588a;
												};
												goto _case_begin_1ac6e58e0;
											}
										}
										else {
											_case_begin_1ac6e58e0:;
											{
												_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("&", 1));
											}
										}
										_match_end_1ac6e588a:;
									};
								};
								if (_6329_wrapped) {
									_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("_wrap_copy", 10));
								} else if ((_1b4c8057c_Ptr((*(*_66221_ssie.alloc)._field_Expr.alloc)._field_Kind) == nullptr)) {
									_1b64667de_model(_self_, (*(*_66221_ssie.alloc)._field_Expr.alloc)._field_Model);
								} else {
									_1b645be22_possibleRefExpr(_self_, (*((*((*(*_66221_ssie.alloc)._field_Expr.alloc)._field_Model.cast_ptr<_1b4b28e1a_UnaryExprModel>(&__jule_any_type110)))._field_Expr))._field_Model);
								};
							}
						}
						_match_end_1ac6e4a54:;
					};
					if (((*((*(_63137_m))))._field_Args.len() > 0LL)) {
						_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
					};
				}
			}
			else if (_match_expr.type == &__jule_any_type97) {
				_case_begin_1ac6e3745:;
				{
					_1b645be22_possibleRefExpr(_self_, (*((*((*(_63137_m))))._field_Expr.unsafe_cast_ptr<_1b4b2cced_TraitSubIdentExprModel>()))._field_Expr);
					_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(".data", 5));
					if (((*((*(_63137_m))))._field_Args.len() > 0LL)) {
						_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
					};
				}
			}
			_match_end_1ac6e3a20:;
		};
	};
	_1b645cb59_args(_self_, _63137_m);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
	if (_6329_wrapped) {
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("; })", 4));
	};
}



inline void _1b645ddad_coFuncCall(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b2aa21_FnCallExprModel>* _72135_m) {
	_1a90272e1_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1a9027797_addIndent((*_self_.alloc)._field_oc);
	_1cb1d27a9_StrBuilder _72413_head = static__1cb1d2a73_New(32LL);;
	_1cb1db3d9_WriteStr(&_72413_head, jule::Str::lit("std::thread([", 13));
	if (((*((*((*(_72135_m))))._field_Func))._field_Owner != nullptr)) {
		_1cb1db3d9_WriteStr(&_72413_head, jule::Str::lit("_self_", 6));
		if (((*((*(_72135_m))))._field_Args.len() > 0LL)) {
			_1cb1db3d9_WriteStr(&_72413_head, jule::Str::lit(", ", 2));
		};
	};
	{
		auto expr = &((*((*(_72135_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac70c6e8:;
		if (it != expr_end) {
			jule::I64 _73213_i = it - expr->begin();
			jule::Any _73216_arg = *it;
			{
				if ((_73213_i > 0LL)) {
					_1cb1db3d9_WriteStr(&_72413_head, jule::Str::lit(", ", 2));
				};
				{
					auto &_match_expr{ _73216_arg };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1ac70dc38:;
						{
							jule::Ptr<_1b4bddaa1_Var> _73821_v = _73216_arg.unsafe_cast_ptr<_1b4bddaa1_Var>();;
							static__1b646e9b2_var(&(_72413_head), _73821_v);
							goto _iter_next_1ac70c6e8;
						}
					}
					_match_end_1ac70d4a7:;
				};
				jule::Str _74213_name = (jule::Str::lit("_co_arg_", 8) + _1b2745440_Itoa(_73213_i));;
				_1cb1db3d9_WriteStr(&_72413_head, _74213_name);
				_1a9027b93_indent((*_self_.alloc)._field_oc);
				_1a903baca_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*((*(*((*(_72135_m))))._field_Func.alloc)._field_Params[_73213_i]))._field_Kind);
				_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(" ", 1));
				if ((*((*((*(*((*(_72135_m))))._field_Func.alloc)._field_Params[_73213_i]))._field_Decl))._field_Reference) {
					_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("&", 1));
				};
				_1a90272e1_write((*_self_.alloc)._field_oc, _74213_name);
				_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
				_1b645be22_possibleRefExpr(_self_, _73216_arg);
				_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
				jule::Any _75413_argS = jule::Any(_74213_name, &__jule_any_type4);;
				(*((*(_72135_m))))._field_Args[_73213_i]=(*(((jule::Any*)((&(_75413_argS))))));
			}
			_iter_next_1ac70c6e8:;
			++it;
			_73213_i++;
			goto _iter_begin_1ac70c6e8;
		}
		_iter_end_1ac70c6e8:;
	};
	_1a9027b93_indent((*_self_.alloc)._field_oc);
	_1cb1db131_Write(&(*(*_self_.alloc)._field_oc.alloc)._field_Buf, _1cb1dc682_Buf(&_72413_head));
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("](void) mutable -> void {\n", 26));
	_1a9027797_addIndent((*_self_.alloc)._field_oc);
	_1a9027b93_indent((*_self_.alloc)._field_oc);
	_1b645db05_pureFuncCall(_self_, _72135_m);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
	_1a9027995_doneIndent((*_self_.alloc)._field_oc);
	_1a9027b93_indent((*_self_.alloc)._field_oc);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("}).detach();\n", 13));
	_1a9027995_doneIndent((*_self_.alloc)._field_oc);
	_1a9027b93_indent((*_self_.alloc)._field_oc);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
}



inline void _1b645e221_writeUseExpr(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b39865_FnIns>* _77237_f, jule::Ptr<_1b4c466a8_Data> _77252_d) {
	if ((_1b4c81d86_Tup((*(_77252_d))._field_Kind.ptr()) == nullptr)) {
		_1b645be22_possibleRefExpr(_self_, (*_77252_d.alloc)._field_Model);
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(";", 1));
		return;;
	};
	jule::Ptr<_1b4b2e20b_TupleExprModel> _77813_tup = (*_77252_d.alloc)._field_Model.cast_ptr<_1b4b2e20b_TupleExprModel>(&__jule_any_type81);;
	_1a90413a4_tup((*((*(*_self_.alloc)._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _1b4c81d86_Tup((*((*(_77237_f))))._field_Result.ptr()));
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("{", 1));
	{
		auto expr = &((*_77813_tup.alloc)._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac71c20d:;
		if (it != expr_end) {
			jule::I64 _78113_i = it - expr->begin();
			jule::Ptr<_1b4c466a8_Data> _78116_data = *it;
			{
				_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(".__jule_result_arg", 18));
				_1a90272e1_write((*_self_.alloc)._field_oc, _1b2745440_Itoa(_78113_i));
				_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("=", 1));
				_1b645be22_possibleRefExpr(_self_, (*(_78116_data))._field_Model);
				if ((((*(_77813_tup))._field_Datas.len() - _78113_i) > 1LL)) {
					_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1ac71c20d:;
			++it;
			_78113_i++;
			goto _iter_begin_1ac71c20d;
		}
		_iter_end_1ac71c20d:;
	};
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("};", 2));
}



inline void _1b645e4c9_funcCall(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b2aa21_FnCallExprModel> _79332_m) {
	if ((*(_79332_m))._field_IsCo) {
		_1b645ddad_coFuncCall(_self_, &(_79332_m));
		return;;
	};
	if (((_1b4b3acea_IsBuiltin((*_79332_m.alloc)._field_Func.ptr()) || (!((*((*(*_79332_m.alloc)._field_Func.alloc)._field_Decl))._field_Exceptional))) || (((*_79332_m.alloc)._field_Except != nullptr) && ((*(*_79332_m.alloc)._field_Except.alloc)._field_Stmts.len() == 0LL)))) {
		_1b645db05_pureFuncCall(_self_, &(_79332_m));
		return;;
	};
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("({\n", 3));
	_1a9027797_addIndent((*_self_.alloc)._field_oc);
	_1a9027b93_indent((*_self_.alloc)._field_oc);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("auto except = ", 14));
	_1b645db05_pureFuncCall(_self_, &(_79332_m));
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
	_1a9027b93_indent((*_self_.alloc)._field_oc);
	if (((*_79332_m.alloc)._field_Except != nullptr)) {
		if ((((*(*_79332_m.alloc)._field_Func.alloc)._field_Result == nullptr) || (!((*_79332_m.alloc)._field_Assigned)))) {
			_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("if (!except.ok()) ", 18));
			_1b6454a30_scope((*(*_self_.alloc)._field_oc.alloc)._field_sc, (*_79332_m.alloc)._field_Except);
			_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
		} else {
			jule::Bool _82117_forwarded = _1b57b0be4_IsForwarded(&((*_79332_m.alloc)._field_Except));;
			_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("(except.ok()) ? (except.result) : (", 35));
			if (_82117_forwarded) {
				_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("{", 1));
			};
			jule::Any _82621_stmt = (*(*_79332_m.alloc)._field_Except.alloc)._field_Stmts[((*(*_79332_m.alloc)._field_Except.alloc)._field_Stmts.len() - 1LL)];;
			{
				auto &_match_expr{ _82621_stmt };
				
				if (_match_expr.type == &__jule_any_type23) {
					_case_begin_1ac72acee:;
					{
						((*((*(_79332_m))._field_Except))._field_Stmts).mut_slice(0LL, ((*((*(_79332_m))._field_Except))._field_Stmts.len() - 1LL));;
						_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("{\n", 2));
						_1a9027797_addIndent((*_self_.alloc)._field_oc);
						_1b6454777_scopeStmts((*(*_self_.alloc)._field_oc.alloc)._field_sc, &((*_79332_m.alloc)._field_Except));
						_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
						_1a9027b93_indent((*_self_.alloc)._field_oc);
						_1b645e221_writeUseExpr(_self_, &((*_79332_m.alloc)._field_Func), _82621_stmt.unsafe_cast_ptr<_1b4c466a8_Data>());
						_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
						_1a9027995_doneIndent((*_self_.alloc)._field_oc);
						_1a9027b93_indent((*_self_.alloc)._field_oc);
						_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
					}
				}
				else {
					_case_begin_1ac72c30b:;
					{
						_1b6454a30_scope((*(*_self_.alloc)._field_oc.alloc)._field_sc, (*_79332_m.alloc)._field_Except);
					}
				}
				_match_end_1ac72c2a6:;
			};
			if (_82117_forwarded) {
				_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(" ", 1));
				_1b6466a97_initExpr(_self_, (*(*_79332_m.alloc)._field_Func.alloc)._field_Result);
				_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(";}", 2));
			};
			_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(");\n", 3));
		};
		_1a9027995_doneIndent((*_self_.alloc)._field_oc);
	} else {
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("if (!except.ok()) jule::panic(jule::Str(\"unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 139));
		_1a9029634_locInfo((*_self_.alloc)._field_oc, &((*_79332_m.alloc)._field_Token));
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("\"));\n", 5));
		if ((!(_1b4b36d07_IsVoid((*(*_79332_m.alloc)._field_Func.alloc)._field_Decl)))) {
			_1a9027b93_indent((*_self_.alloc)._field_oc);
			_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("(except.result);\n", 17));
		};
		_1a9027995_doneIndent((*_self_.alloc)._field_oc);
	};
	_1a9027b93_indent((*_self_.alloc)._field_oc);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("})", 2));
}



inline void _1b645e782_slice(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b2adea_SliceExprModel> _86629_m) {
	if (((*(_86629_m))._field_Elems.len() == 0LL)) {
		_1a9038ed4_asSlice((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_86629_m.alloc)._field_ElemKind);
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	_1a9038ed4_asSlice((*(*_self_.alloc)._field_oc.alloc)._field_tc, &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_86629_m.alloc)._field_ElemKind);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("::make({", 8));
	_1b645c8a1_models(_self_, (*_86629_m.alloc)._field_Elems);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("})", 2));
}



inline void _1b645ea3a_indexing(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b2b3a1_IndexingExprModel> _87832_m) {
	{
		auto &_match_expr{ (*((*(_87832_m))._field_Expr))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1ac73d97c:;
			{
				_1a90272e1_write((*(_self_))._field_oc, jule::Str::lit("jule::Str::at(", 14));
				if ((!(_20c58021e_Production))) {
					_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("\"", 1));
					_1a9029634_locInfo((*_self_.alloc)._field_oc, &((*(_87832_m))._field_Token));
					_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("\", ", 3));
				};
				_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("reinterpret_cast<const jule::U8*>(", 34));
				jule::Str _88913_s = _1b2755681_ReadStr((*((*(_87832_m))._field_Expr))._field_Model.unsafe_cast_ptr<_1b2753508_Const>().ptr());;
				_1b6467889_cstrLit(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _88913_s);
				_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("), ", 3));
				_1a90272e1_write((*_self_.alloc)._field_oc, _1b2745440_Itoa(_88913_s.len()));
				_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
				_1b645be22_possibleRefExpr(_self_, (*((*_87832_m.alloc)._field_Index))._field_Model);
				_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		_match_end_1ac73d927:;
	};
	_1b645be22_possibleRefExpr(_self_, (*((*_87832_m.alloc)._field_Expr))._field_Model);
	{
		
		if (_20c58021e_Production || (_1b4c8057c_Ptr((*(*_87832_m.alloc)._field_Expr.alloc)._field_Kind.ptr()) != nullptr) || (_1b4c81b00_Map((*(*_87832_m.alloc)._field_Expr.alloc)._field_Kind) != nullptr) || _1b57b1002_IsExprComesFromBind(&((*_87832_m.alloc)._field_Expr))) {
			_case_begin_1ac747711:;
			{
				_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("[", 1));
				_1b645be22_possibleRefExpr(_self_, (*(*_87832_m.alloc)._field_Index.alloc)._field_Model);
				_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("]", 1));
			}
		}
		else {
			_case_begin_1ac73da26:;
			{
				_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(".at(\"", 5));
				_1a9029634_locInfo((*_self_.alloc)._field_oc, &((*_87832_m.alloc)._field_Token));
				_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("\", ", 3));
				_1b645be22_possibleRefExpr(_self_, (*(*_87832_m.alloc)._field_Index.alloc)._field_Model);
				_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
			}
		}
		_match_end_1ac745104:;
	};
}



inline void _1b645ece3_unsafeIndexing(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4d72d56_UnsafeIndexingExprModel> _91838_m) {
	_1b645be22_possibleRefExpr(_self_, (*((*((*(_91838_m))._field_Node))._field_Expr))._field_Model);
	{
		
		if (_20c58021e_Production || (_1b4c8057c_Ptr((*(*(*_91838_m.alloc)._field_Node.alloc)._field_Expr.alloc)._field_Kind.ptr()) != nullptr) || (_1b4c81b00_Map((*(*(*_91838_m.alloc)._field_Node.alloc)._field_Expr.alloc)._field_Kind) != nullptr)) {
			_case_begin_1ac74b54a:;
			{
				_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("[", 1));
				_1b645be22_possibleRefExpr(_self_, (*((*(*_91838_m.alloc)._field_Node.alloc)._field_Index))._field_Model);
				_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("]", 1));
			}
		}
		else {
			_case_begin_1ac74a5e3:;
			{
				_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(".__at(", 6));
				_1b645be22_possibleRefExpr(_self_, (*((*(*_91838_m.alloc)._field_Node.alloc)._field_Index))._field_Model);
				_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
			}
		}
		_match_end_1ac74b193:;
	};
}



inline void _1b646009b_anonFunc(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b2b857_AnonFnExprModel> _93532_m) {
	jule::Bool _9369_closure = _1b57b160c_IsClosure(&(_93532_m));;
	jule::Str _9379_ident = _1a9028666_pushAnonFn((*(_self_))._field_oc, &(_93532_m));;
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::__new_closure<", 20));
	_1a903b404_anonFunc((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(_93532_m))._field_Func);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(">((void*)", 9));
	_1a90272e1_write((*_self_.alloc)._field_oc, _9379_ident);
	if (_9369_closure) {
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(", jule::Ptr<", 12));
		_1a90272e1_write((*_self_.alloc)._field_oc, _9379_ident);
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("_ctx", 4));
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(">::make(", 8));
		_1a90272e1_write((*_self_.alloc)._field_oc, _9379_ident);
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("_ctx{", 5));
		{
			auto expr = &((*_93532_m.alloc)._field_Captured);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac755d4b:;
			if (it != expr_end) {
				jule::I64 _94918_i = it - expr->begin();
				jule::Ptr<_1b4bddaa1_Var> _94925_v = *it;
				{
					_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
					static__1b646e9b2_var(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _94925_v);
					_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("=", 1));
					_1b645b097_var(_self_, _94925_v);
					if ((((*_93532_m.alloc)._field_Captured.len() - _94918_i) > 1LL)) {
						_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(",", 1));
					};
				}
				_iter_next_1ac755d4b:;
				++it;
				_94918_i++;
				goto _iter_begin_1ac755d4b;
			}
			_iter_end_1ac755d4b:;
		};
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("}).as<jule::Uintptr>(), ", 24));
		_1a90272e1_write((*_self_.alloc)._field_oc, _9379_ident);
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("_ctx_handler)", 13));
	} else {
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(", nullptr, nullptr)", 19));
	};
}



inline void _1b6460354_mapExpr(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b2c1d7_MapExprModel> _96631_m) {
	_1a90272e1_write((*(_self_))._field_oc, jule::Str::lit("jule::Map<", 10));
	_1a903baca_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(_96631_m))._field_KeyKind);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
	_1a903baca_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc, &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_96631_m.alloc)._field_ValKind);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(">({", 3));
	if (((*_96631_m.alloc)._field_Entries.len() > 0LL)) {
		{
			auto expr = &((*_96631_m.alloc)._field_Entries);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac75e21c:;
			if (it != expr_end) {
				jule::I64 _97318_i = it - expr->begin();
				jule::Ptr<_1b4b2bc31_KeyValPairExprModel> _97325_pair = *it;
				{
					_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("{", 1));
					_1b645be22_possibleRefExpr(_self_, (*(_97325_pair))._field_Key);
					_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(",", 1));
					_1b645be22_possibleRefExpr(_self_, (*_97325_pair.alloc)._field_Val);
					_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
					if ((((*_96631_m.alloc)._field_Entries.len() - _97318_i) > 1LL)) {
						_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(",", 1));
					};
				}
				_iter_next_1ac75e21c:;
				++it;
				_97318_i++;
				goto _iter_begin_1ac75e21c;
			}
			_iter_end_1ac75e21c:;
		};
	};
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("})", 2));
}



inline void _1b646060c_slicing(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b2c76a_SlicingExprModel> _98731_m) {
	_1b645be22_possibleRefExpr(_self_, (*(_98731_m))._field_Expr);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(".slice(", 7));
	if ((!(_20c58021e_Production))) {
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("\"", 1));
		_1a9029634_locInfo((*_self_.alloc)._field_oc, &((*_98731_m.alloc)._field_Token));
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("\", ", 3));
	};
	_1b645be22_possibleRefExpr(_self_, (*_98731_m.alloc)._field_Left);
	if (((*_98731_m.alloc)._field_Right != nullptr)) {
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
		_1b645be22_possibleRefExpr(_self_, (*_98731_m.alloc)._field_Right);
	};
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1b64608b5_traitSub(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b2cced_TraitSubIdentExprModel> _100332_m) {
	_1a90272e1_write((*(_self_))._field_oc, jule::Str::lit("((", 2));
	static__1b646da27_traitDecl(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(_100332_m))._field_Trt);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("MptrData", 8));
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("*)", 2));
	_1b645be22_possibleRefExpr(_self_, (*_100332_m.alloc)._field_Expr);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(".safe_type(", 11));
	if ((!(_20c58021e_Production))) {
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("\"", 1));
		_1a9029634_locInfo((*_self_.alloc)._field_oc, &((*_100332_m.alloc)._field_Token));
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("\"", 1));
	};
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("))->", 4));
	static__1b646d450_func(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), &((*_100332_m.alloc)._field_Method));
}



inline void _1b6460b6d_structureSub(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b2d68e_StructSubIdentExprModel> _101936_m) {
	_1b645be22_possibleRefExpr(_self_, (*((*(_101936_m))._field_Expr))._field_Model);
	if (((*_101936_m.alloc)._field_Field == nullptr)) {
		return;;
	};
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
	static__1b646e6c6_field(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), &((*((*_101936_m.alloc)._field_Field))._field_Decl));
}



inline void _1b6460e26_array(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b2de0e_ArrayExprModel> _102829_m) {
	_1a903a1e4_array((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(_102829_m))._field_Kind);
	if (((*_102829_m.alloc)._field_Elems.len() == 0LL)) {
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	if ((((*_102829_m.alloc)._field_Elems.len() == 2LL) && ((*_102829_m.alloc)._field_Elems[1LL] == nullptr))) {
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("(", 1));
		_1b645be22_possibleRefExpr(_self_, (*_102829_m.alloc)._field_Elems[0LL]);
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("({", 2));
	_1b645c8a1_models(_self_, (*_102829_m.alloc)._field_Elems);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("})", 2));
	return;;
}



inline void _1b64611ce_funcInsCommon(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b39865_FnIns> _105137_m) {
	_1a903b767_func((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _105137_m);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("(", 1));
	_1b6461487_funcIns(_self_, _105137_m);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1b6461487_funcIns(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b39865_FnIns> _105831_m) {
	if ((((*(_105831_m))._field_Decl != nullptr) && (*(*_105831_m.alloc)._field_Decl.alloc)._field_Binded)) {
		jule::Ptr<_1b4aea0d9_Directive> _106013_d = _1b57b29e8_FindDirective(&((*(*_105831_m.alloc)._field_Decl.alloc)._field_Directives), jule::Str::lit("namespace", 9));;
		if ((_106013_d != nullptr)) {
			_1a9027599_writeBytes((*(_self_))._field_oc, _1a903452e_concatAllParts((*_106013_d.alloc)._field_Args));
			_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("::", 2));
		};
	};
	static__1b646d73b_funcIns(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), &(_105831_m));
}



inline void _1b6461740_tuple(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b2e20b_TupleExprModel> _106929_m) {
	{
		auto expr = &((*_106929_m.alloc)._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac77a689:;
		if (it != expr_end) {
			jule::I64 _107014_i = it - expr->begin();
			jule::Ptr<_1b4c466a8_Data> _107021_d = *it;
			{
				_1b645be22_possibleRefExpr(_self_, (*(_107021_d))._field_Model);
				_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(";", 1));
				if ((((*(_106929_m))._field_Datas.len() - _107014_i) > 1LL)) {
					_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
					_1a9027b93_indent((*_self_.alloc)._field_oc);
				};
			}
			_iter_next_1ac77a689:;
			++it;
			_107014_i++;
			goto _iter_begin_1ac77a689;
		}
		_iter_end_1ac77a689:;
	};
}



inline void _1b64619e8_newCall(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b2ed88_BuiltinNewCallExprModel> _108031_m) {
	_1a90272e1_write((*(_self_))._field_oc, jule::Str::lit("jule::new_ptr<", 14));
	_1a903baca_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(_108031_m))._field_Kind);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(">(", 2));
	if (((*_108031_m.alloc)._field_Init != nullptr)) {
		_1b645be22_possibleRefExpr(_self_, (*_108031_m.alloc)._field_Init);
	};
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1b6461ca1_outCall(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b2e5d5_BuiltinOutCallExprModel> _109031_m) {
	if (((*(_109031_m))._field_Debug && _20c58021e_Production)) {
		return;;
	};
	_1a90272e1_write((*(_self_))._field_oc, jule::Str::lit("jule::out(", 10));
	_1b645be22_possibleRefExpr(_self_, (*_109031_m.alloc)._field_Expr);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1b6462059_outlnCall(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b2e9ae_BuiltinOutlnCallExprModel> _109933_m) {
	if (((*(_109933_m))._field_Debug && _20c58021e_Production)) {
		return;;
	};
	_1a90272e1_write((*(_self_))._field_oc, jule::Str::lit("jule::outln(", 12));
	_1b645be22_possibleRefExpr(_self_, (*_109933_m.alloc)._field_Expr);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1b6462312_panicCall(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b30262_BuiltinPanicCallExprModel> _110833_m) {
	_1a90272e1_write((*(_self_))._field_oc, jule::Str::lit("jule::panic(", 12));
	_1b645be22_possibleRefExpr(_self_, (*(_110833_m))._field_Expr);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(" + jule::Str(\"\\nlocation: ", 26));
	_1a9029634_locInfo((*_self_.alloc)._field_oc, &((*_110833_m.alloc)._field_Token));
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("\"));", 4));
}



inline void _1b64625ba_assertCall(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b30718_BuiltinAssertCallExprModel> _111634_m) {
	if (_20c58021e_Production) {
		return;;
	};
	_1a90272e1_write((*(_self_))._field_oc, jule::Str::lit("if (!(", 6));
	_1b645be22_possibleRefExpr(_self_, (*(_111634_m))._field_Expr);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(")) jule::panic(jule::Str(", 25));
	_1b6467889_cstrLit(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_111634_m.alloc)._field_Log);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(") + jule::Str(\"\\nlocation: ", 27));
	_1a9029634_locInfo((*_self_.alloc)._field_oc, &((*_111634_m.alloc)._field_Token));
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("\"));", 4));
}



inline void _1b6462873_errorCall(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b3231e_BuiltinErrorCallExprModel> _112933_m) {
	_1a90272e1_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
	if (_1b4b36d07_IsVoid((*((*(_112933_m))._field_Func))._field_Decl.ptr())) {
		{
			auto &_match_expr{ (*((*(_112933_m))._field_Err))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1ac78baeb:;
				{
					jule::Ptr<_1b4bddaa1_Var> _113417_v = (*((*(_112933_m))._field_Err))._field_Model.unsafe_cast_ptr<_1b4bddaa1_Var>();;
					if ((*(_113417_v))._field_Ident.equal("error", 5)) {
						_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::VoidExceptional{.error=std::move(except.error)}", 53));
						return;;
					};
				}
			}
			_match_end_1ac78ba96:;
		};
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::VoidExceptional{.error=jule::Any(", 39));
	} else {
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::Exceptional<", 18));
		_1a9041a7a_codeMut1((*((*(*_self_.alloc)._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), &((*((*(_112933_m))._field_Func))._field_Result));
		{
			auto &_match_expr{ (*((*(_112933_m))._field_Err))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1ac791062:;
				{
					jule::Ptr<_1b4bddaa1_Var> _114617_v = (*((*(_112933_m))._field_Err))._field_Model.unsafe_cast_ptr<_1b4bddaa1_Var>();;
					if ((*(_114617_v))._field_Ident.equal("error", 5)) {
						_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(">{.error=except.error}", 22));
						return;;
					};
				}
			}
			_match_end_1ac79100c:;
		};
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(">{.error=jule::Any(", 19));
	};
	_1b645be22_possibleRefExpr(_self_, (*((*(_112933_m))._field_Err))._field_Model);
	jule::I64 _11559_i = _1a90289a7_pushAnyType((*_self_.alloc)._field_oc, (*(*_112933_m.alloc)._field_Err.alloc)._field_Kind);;
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(", &__jule_any_type", 18));
	_1a90272e1_write((*_self_.alloc)._field_oc, _1b2745440_Itoa(_11559_i));
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(")}", 2));
}



inline void _1b6462b2b_copyCall(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b31e45_BuiltinCopyCallExprModel> _116132_m) {
	_1a90272e1_write((*(_self_))._field_oc, jule::Str::lit("jule::copy(", 11));
	_1b645be22_possibleRefExpr(_self_, (*((*(_116132_m))._field_Dest))._field_Model);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
	_1b645be22_possibleRefExpr(_self_, (*((*_116132_m.alloc)._field_Src))._field_Model);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1b6462dd4_lenCall(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b31395_BuiltinLenCallExprModel> _116931_m) {
	_1b645be22_possibleRefExpr(_self_, (*((*(_116931_m))._field_Expr))._field_Model);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(".len()", 6));
}



inline void _1b646318c_capCall(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b31692_BuiltinCapCallExprModel> _117431_m) {
	_1b645be22_possibleRefExpr(_self_, (*((*(_117431_m))._field_Expr))._field_Model);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(".cap()", 6));
}



inline void _1b6463445_deleteCall(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b31a6b_BuiltinDeleteCallExprModel> _117934_m) {
	_1b645be22_possibleRefExpr(_self_, (*((*(_117934_m))._field_Dest))._field_Model);
	if (((*_117934_m.alloc)._field_Key != nullptr)) {
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(".del(", 5));
		_1b645be22_possibleRefExpr(_self_, (*(*_117934_m.alloc)._field_Key.alloc)._field_Model);
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
	} else {
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(".clear()", 8));
	};
}



inline void _1b64636ed_makeCallSlice(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b30bbe_BuiltinMakeCallExprModel>* _119038_m) {
	jule::Ptr<_1b4c899d7_Slc> _119113_slice = _1b4c810b6_Slc((*((*(_119038_m))))._field_Kind.ptr());;
	_1a903baca_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*((*(_119038_m))))._field_Kind);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("::alloc(", 8));
	_1b645be22_possibleRefExpr(_self_, (*((*(_119038_m))))._field_Len);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
	if (((*((*(_119038_m))))._field_Cap != nullptr)) {
		_1b645be22_possibleRefExpr(_self_, (*((*(_119038_m))))._field_Cap);
	} else {
		_1b645be22_possibleRefExpr(_self_, (*((*(_119038_m))))._field_Len);
	};
	if (_1a90436e7_shouldInitialized(&((*(_119113_slice))._field_Elem))) {
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
		_1b6466a97_initExpr(_self_, (*_119113_slice.alloc)._field_Elem);
	};
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1b64639a6_makeCallStr(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b30bbe_BuiltinMakeCallExprModel>* _120836_m) {
	_1a90272e1_write((*(_self_))._field_oc, jule::Str::lit("jule::Str", 9));
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("::alloc(", 8));
	_1b645be22_possibleRefExpr(_self_, (*((*(_120836_m))))._field_Len);
	if (((*((*(_120836_m))))._field_Cap != nullptr)) {
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
		_1b645be22_possibleRefExpr(_self_, (*((*(_120836_m))))._field_Cap);
	};
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1b6463c5e_makeCall(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b30bbe_BuiltinMakeCallExprModel> _121932_m) {
	if ((_1b4c810b6_Slc((*(_121932_m))._field_Kind.ptr()) != nullptr)) {
		_1b64636ed_makeCallSlice(_self_, &(_121932_m));
		return;;
	};
	_1b64639a6_makeCallStr(_self_, &(_121932_m));
}



inline void _1b6464017_pushToSlice(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4d73230_PushToSliceExprModel> _122735_m) {
	;
	_1a90272e1_write((*(_self_))._field_oc, jule::Str::lit("{ ", 2));
	_1a9038ed4_asSlice((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*((*(_122735_m))._field_Elems))._field_ElemKind);
	jule::Bool _123513_ptr = false;;
	{
		auto &_match_expr{ (*(_122735_m))._field_Dest };
		
		if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1ac7a860c:;
			{
				jule::Ptr<_1b4b28e1a_UnaryExprModel> _123917_u = (*(_122735_m))._field_Dest.unsafe_cast_ptr<_1b4b28e1a_UnaryExprModel>();;
				if ((_1b4c8057c_Ptr((*((*(_123917_u))._field_Expr))._field_Kind.ptr()) != nullptr)) {
					_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(" *__jule_push_dest = ", 21));
					_1b645be22_possibleRefExpr(_self_, (*(*_123917_u.alloc)._field_Expr.alloc)._field_Model);
					_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("; ", 2));
					_123513_ptr=true;
					goto _match_end_1ac7aa356;
				};
				goto _case_begin_1ac7aa3ab;
			}
		}
		else {
			_case_begin_1ac7aa3ab:;
			{
				_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(" &__jule_push_dest = ", 21));
				_1b645be22_possibleRefExpr(_self_, (*_122735_m.alloc)._field_Dest);
				_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("; ", 2));
			}
		}
		_match_end_1ac7aa356:;
	};
	if (((*(*_122735_m.alloc)._field_Elems.alloc)._field_Elems.len() == 1LL)) {
		if (_123513_ptr) {
			_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("__jule_push_dest->push(", 23));
		} else {
			_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("__jule_push_dest.push(", 22));
		};
		_1b645be22_possibleRefExpr(_self_, (*(*_122735_m.alloc)._field_Elems.alloc)._field_Elems[0LL]);
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("); }", 4));
		return;;
	};
	if (_123513_ptr) {
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("__jule_push_dest->alloc_for_append(", 35));
	} else {
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("__jule_push_dest.alloc_for_append(", 34));
	};
	_1a90272e1_write((*_self_.alloc)._field_oc, _1b2745440_Itoa((*(*_122735_m.alloc)._field_Elems.alloc)._field_Elems.len()));
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("); ", 3));
	{
		auto expr = &((*(*_122735_m.alloc)._field_Elems.alloc)._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac7b1d1e:;
		if (it != expr_end) {
			jule::Any _127321_e = *it;
			{
				_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("__jule_push_dest", 16));
				if (_123513_ptr) {
					_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("->__push(", 9));
				} else {
					_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(".__push(", 8));
				};
				_1b645be22_possibleRefExpr(_self_, _127321_e);
				_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("); ", 3));
			}
			_iter_next_1ac7b1d1e:;
			++it;
			goto _iter_begin_1ac7b1d1e;
		}
		_iter_end_1ac7b1d1e:;
	};
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
}



inline void _1b64642c0_appendToSlice(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4d73609_AppendToSliceExprModel> _128737_m) {
	_1a90272e1_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1b645be22_possibleRefExpr(_self_, (*(_128737_m))._field_Dest);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(").append(", 9));
	_1b645be22_possibleRefExpr(_self_, (*_128737_m.alloc)._field_Slice);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(");", 2));
}



inline void _1b6464578_appendCall(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b31098_BuiltinAppendCallExprModel> _129534_m) {
	_1a90272e1_write((*(_self_))._field_oc, jule::Str::lit("jule::append(", 13));
	_1b645be22_possibleRefExpr(_self_, (*(_129534_m))._field_Dest);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(",", 1));
	_1b645be22_possibleRefExpr(_self_, (*_129534_m.alloc)._field_Elements);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1b6464831_sizeof(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b329c3_SizeofExprModel> _130330_m) {
	_1a90272e1_write((*(_self_))._field_oc, jule::Str::lit("sizeof(", 7));
	_1b645be22_possibleRefExpr(_self_, (*(_130330_m))._field_Expr);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1b6464ad9_alignof(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b32bb0_AlignofExprModel> _130931_m) {
	_1a90272e1_write((*(_self_))._field_oc, jule::Str::lit("alignof(", 8));
	_1b645be22_possibleRefExpr(_self_, (*(_130931_m))._field_Expr);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1b6464d92_runeLit(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b32e57_RuneExprModel> _131527_m) {
	if (((*(_131527_m))._field_Code <= 127LL)) {
		_1cb1db692_WriteByte(&(*((*(_self_))._field_oc))._field_Buf, '\'');
		jule::Str _131817_b = _1b646726d_sbtoa(static_cast<jule::U8>((*_131527_m.alloc)._field_Code));;
		if (_131817_b.equal("'", 1)) {
			_1cb1db692_WriteByte(&(*(*_self_.alloc)._field_oc.alloc)._field_Buf, '\\');
		};
		_1cb1db3d9_WriteStr(&(*(*_self_.alloc)._field_oc.alloc)._field_Buf, _131817_b);
		_1cb1db692_WriteByte(&(*(*_self_.alloc)._field_oc.alloc)._field_Buf, '\'');
		return;;
	};
	_1b646801b_itoa(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), static_cast<jule::I64>((*_131527_m.alloc)._field_Code));
}



inline void _1b646514a_structureStatic(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b2da35_StructStaticIdentExprModel> _132939_m) {
	static__1b646d73b_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &((*(_132939_m))._field_Method));
}



inline void _1b6465403_integratedToStr(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b33254_IntegratedToStrExprModel> _133339_m) {
	_1a90272e1_write((*(_self_))._field_oc, jule::Str::lit("jule::to_str(", 13));
	_1b645be22_possibleRefExpr(_self_, (*(_133339_m))._field_Expr);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1b64656ab_backendEmit(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b3362d_BackendEmitExprModel> _133935_m) {
	if (((*(_133935_m))._field_Exprs.len() == 0LL)) {
		_1a90272e1_write((*(_self_))._field_oc, (*_133935_m.alloc)._field_Code);
		return;;
	};
	jule::I64 _13449_n = _1cb1dc165_Len(&(*(*_self_.alloc)._field_oc.alloc)._field_Buf);;
	jule::Slice<jule::Any> _134513_args = jule::Slice<jule::Any>::alloc((*_133935_m.alloc)._field_Exprs.len(), (*_133935_m.alloc)._field_Exprs.len());;
	{
		auto expr = &((*_133935_m.alloc)._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac7c56c3:;
		if (it != expr_end) {
			jule::I64 _134614_i = it - expr->begin();
			jule::Any _134621_expr = *it;
			{
				_1b645be22_possibleRefExpr(_self_, _134621_expr);
				jule::Slice<jule::U8> _134817_buf = _1cb1dc682_Buf(&(*(*_self_.alloc)._field_oc.alloc)._field_Buf);;
				_134513_args[_134614_i]=jule::Any(static_cast<jule::Str>(_134817_buf.slice(_13449_n)), &__jule_any_type4);
				{
					_1cb1dc93a_SetBuf(&(*(*_self_.alloc)._field_oc.alloc)._field_Buf, _134817_buf.slice(0LL, _13449_n));
				};
			}
			_iter_next_1ac7c56c3:;
			++it;
			_134614_i++;
			goto _iter_begin_1ac7c56c3;
		}
		_iter_end_1ac7c56c3:;
	};
	_1a90272e1_write((*_self_.alloc)._field_oc, _1b4d5dacd_Format((*_133935_m.alloc)._field_Code, _134513_args));
}



inline void _1b6465964_free(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4b3392a_FreeExprModel> _135528_m) {
	_1b645be22_possibleRefExpr(_self_, (*(_135528_m))._field_Expr);
	if (_20c57eb14_RC) {
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(".dealloc()", 10));
		return;;
	};
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(".__free()", 9));
}



inline void _1b6465c1c_strComp(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4d72141_StrCompExprModel> _136431_m) {
	if ((*(_136431_m))._field_NotEq) {
		_1a90272e1_write((*(_self_))._field_oc, jule::Str::lit("(!", 2));
	};
	jule::Str _13689_s = _1b2755681_ReadStr((*_136431_m.alloc)._field_Right.ptr());;
	_1b645be22_possibleRefExpr(_self_, (*_136431_m.alloc)._field_Left);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(".equal(", 7));
	_1b6467889_cstrLit(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _13689_s);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
	_1a90272e1_write((*_self_.alloc)._field_oc, _1b2745440_Itoa(_13689_s.len()));
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
	if ((*_136431_m.alloc)._field_NotEq) {
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
	};
}



inline void _1b6465ec5_emptyCompare(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4d71849_EmptyCompareExprModel> _138036_m) {
	if ((*(_138036_m))._field_Neg) {
		_1a90272e1_write((*(_self_))._field_oc, jule::Str::lit("!", 1));
	};
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("(", 1));
	_1b645be22_possibleRefExpr(_self_, (*_138036_m.alloc)._field_Expr);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(").empty()", 9));
}



inline void _1b646627d_unsafeDeref(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4d73cd0_UnsafeDerefExprModel> _138935_m) {
	{
		
		if ((_1b4c802e6_Sptr((*((*((*(_138935_m))._field_Base))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac7d4182:;
			{
				_1a90272e1_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				_1b645be22_possibleRefExpr(_self_, (*(*(*_138935_m.alloc)._field_Base.alloc)._field_Expr.alloc)._field_Model);
				_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(".alloc)", 7));
			}
		}
		else {
			_case_begin_1ac7d3cca:;
			{
				jule::panic(jule::Str::lit("implementation mistake, this panic call should be unreachable", 61) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1396:13"));;
			}
		}
		_match_end_1ac7d3bcb:;
	};
}



inline void _1b6466536_unsafeCasting(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4d740cc_UnsafeCastingExprModel> _140037_m) {
	{
		
		if (_1b57b12bb_IsAny(&((*((*(_140037_m))._field_Base))._field_ExprKind))) {
			_case_begin_1ac7d6d33:;
			{
				_1b645be22_possibleRefExpr(_self_, (*((*(*_140037_m.alloc)._field_Base.alloc)._field_Expr))._field_Model);
				if ((_1b4c802e6_Sptr((*(*_140037_m.alloc)._field_Base.alloc)._field_Kind.ptr()) != nullptr)) {
					_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(".unsafe_cast_ptr<", 17));
					_1a903baca_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(_1b4c802e6_Sptr((*(*_140037_m.alloc)._field_Base.alloc)._field_Kind)))._field_Elem);
				} else {
					_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(".unsafe_cast<", 13));
					_1a903baca_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(*_140037_m.alloc)._field_Base.alloc)._field_Kind);
				};
				_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(">()", 3));
			}
		}
		else {
			_case_begin_1ac7d697b:;
			{
				jule::panic(jule::Str::lit("implementation mistake, this panic call should be unreachable", 61) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1413:13"));;
			}
		}
		_match_end_1ac7d688d:;
	};
}



inline void _1b64667de_model(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Any _141729_m) {
	{
		auto &_match_expr{ _141729_m };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1ac7dc4ed:;
			{
				_1a90272e1_write((*(_self_))._field_oc, _141729_m.unsafe_cast<jule::Str>());
			}
		}
		else if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1ac7dc696:;
			{
				_1a903baca_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _141729_m.unsafe_cast_ptr<_1b4c7c90e_TypeKind>());
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1ac7dc70c:;
			{
				_1b645a360_constant(_self_, _141729_m.unsafe_cast_ptr<_1b2753508_Const>());
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ac7dc773:;
			{
				_1b645b097_var(_self_, _141729_m.unsafe_cast_ptr<_1b4bddaa1_Var>());
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1ac7dc7d9:;
			{
				_1b645b350_structureIns(_self_, _141729_m.unsafe_cast_ptr<_1b4b24641_StructIns>());
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1ac7dc850:;
			{
				_1b64611ce_funcInsCommon(_self_, _141729_m.unsafe_cast_ptr<_1b4b39865_FnIns>());
			}
		}
		else if (_match_expr.type == &__jule_any_type128) {
			_case_begin_1ac7dc8b6:;
			{
				_1b645aa36_unsafeBinary(_self_, (*(_141729_m.unsafe_cast_ptr<_1b4d729c1_UnsafeBinaryExprModel>()))._field_Node);
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1ac7dd510:;
			{
				_1b645acde_binary(_self_, _141729_m.unsafe_cast_ptr<_1b4b28a41_BinaryExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1ac7dd576:;
			{
				_1b645b608_unary(_self_, _141729_m.unsafe_cast_ptr<_1b4b28e1a_UnaryExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1ac7dd5dc:;
			{
				_1b645b8b1_structureLit(_self_, _141729_m.unsafe_cast_ptr<_1b4b297de_StructLitExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1ac7dd653:;
			{
				_1b645bb69_allocStructure(_self_, _141729_m.unsafe_cast_ptr<_1b4b29adb_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1ac7dd6b9:;
			{
				_1b645c5e8_casting(_self_, _141729_m.unsafe_cast_ptr<_1b4b2a16e_CastingExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1ac7dd730:;
			{
				_1b645e4c9_funcCall(_self_, _141729_m.unsafe_cast_ptr<_1b4b2aa21_FnCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1ac7dd796:;
			{
				_1b645e782_slice(_self_, _141729_m.unsafe_cast_ptr<_1b4b2adea_SliceExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1ac7dd81d:;
			{
				_1b6460e26_array(_self_, _141729_m.unsafe_cast_ptr<_1b4b2de0e_ArrayExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type133) {
			_case_begin_1ac7dd895:;
			{
				_1b645ece3_unsafeIndexing(_self_, _141729_m.unsafe_cast_ptr<_1b4d72d56_UnsafeIndexingExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1ac7dd91c:;
			{
				_1b645ea3a_indexing(_self_, _141729_m.unsafe_cast_ptr<_1b4b2b3a1_IndexingExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1ac7dd994:;
			{
				_1b646009b_anonFunc(_self_, _141729_m.unsafe_cast_ptr<_1b4b2b857_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1ac7dda1b:;
			{
				_1b6460354_mapExpr(_self_, _141729_m.unsafe_cast_ptr<_1b4b2c1d7_MapExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1ac7dda93:;
			{
				_1b646060c_slicing(_self_, _141729_m.unsafe_cast_ptr<_1b4b2c76a_SlicingExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1ac7ddb1a:;
			{
				_1b64608b5_traitSub(_self_, _141729_m.unsafe_cast_ptr<_1b4b2cced_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1ac7ddb92:;
			{
				_1b6460b6d_structureSub(_self_, _141729_m.unsafe_cast_ptr<_1b4b2d68e_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1ac7ddc19:;
			{
				_1b6461740_tuple(_self_, _141729_m.unsafe_cast_ptr<_1b4b2e20b_TupleExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1ac7ddc91:;
			{
				_1b6461ca1_outCall(_self_, _141729_m.unsafe_cast_ptr<_1b4b2e5d5_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1ac7ddd18:;
			{
				_1b6462059_outlnCall(_self_, _141729_m.unsafe_cast_ptr<_1b4b2e9ae_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1ac7ddd90:;
			{
				_1b64619e8_newCall(_self_, _141729_m.unsafe_cast_ptr<_1b4b2ed88_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1ac7dde17:;
			{
				_1b6462312_panicCall(_self_, _141729_m.unsafe_cast_ptr<_1b4b30262_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1ac7dde8e:;
			{
				_1b64625ba_assertCall(_self_, _141729_m.unsafe_cast_ptr<_1b4b30718_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1ac7de016:;
			{
				_1b6462873_errorCall(_self_, _141729_m.unsafe_cast_ptr<_1b4b3231e_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1ac7de08d:;
			{
				_1b6463c5e_makeCall(_self_, _141729_m.unsafe_cast_ptr<_1b4b30bbe_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1ac7de115:;
			{
				_1b6464578_appendCall(_self_, _141729_m.unsafe_cast_ptr<_1b4b31098_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1ac7de18c:;
			{
				_1b6462b2b_copyCall(_self_, _141729_m.unsafe_cast_ptr<_1b4b31e45_BuiltinCopyCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1ac7de214:;
			{
				_1b6462dd4_lenCall(_self_, _141729_m.unsafe_cast_ptr<_1b4b31395_BuiltinLenCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1ac7de28b:;
			{
				_1b646318c_capCall(_self_, _141729_m.unsafe_cast_ptr<_1b4b31692_BuiltinCapCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1ac7de313:;
			{
				_1b6463445_deleteCall(_self_, _141729_m.unsafe_cast_ptr<_1b4b31a6b_BuiltinDeleteCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1ac7de38a:;
			{
				_1b6464831_sizeof(_self_, _141729_m.unsafe_cast_ptr<_1b4b329c3_SizeofExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1ac7de412:;
			{
				_1b6464ad9_alignof(_self_, _141729_m.unsafe_cast_ptr<_1b4b32bb0_AlignofExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1ac7de489:;
			{
				_1b6464d92_runeLit(_self_, _141729_m.unsafe_cast_ptr<_1b4b32e57_RuneExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1ac7de511:;
			{
				_1b646514a_structureStatic(_self_, _141729_m.unsafe_cast_ptr<_1b4b2da35_StructStaticIdentExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1ac7de588:;
			{
				_1b6465403_integratedToStr(_self_, _141729_m.unsafe_cast_ptr<_1b4b33254_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1ac7de610:;
			{
				_1b64656ab_backendEmit(_self_, _141729_m.unsafe_cast_ptr<_1b4b3362d_BackendEmitExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1ac7de687:;
			{
				_1b6465964_free(_self_, _141729_m.unsafe_cast_ptr<_1b4b3392a_FreeExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type127) {
			_case_begin_1ac7de70e:;
			{
				_1b6465c1c_strComp(_self_, _141729_m.unsafe_cast_ptr<_1b4d72141_StrCompExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type130) {
			_case_begin_1ac7de786:;
			{
				_1b645b097_var(_self_, (*(_141729_m.unsafe_cast_ptr<_1b4d71bbd_RefExprModel>()))._field_Var);
			}
		}
		else if (_match_expr.type == &__jule_any_type126) {
			_case_begin_1ac7de80d:;
			{
				_1b6465ec5_emptyCompare(_self_, _141729_m.unsafe_cast_ptr<_1b4d71849_EmptyCompareExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type129) {
			_case_begin_1ac7de885:;
			{
				_1b646627d_unsafeDeref(_self_, _141729_m.unsafe_cast_ptr<_1b4d73cd0_UnsafeDerefExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type132) {
			_case_begin_1ac7de90c:;
			{
				_1b6466536_unsafeCasting(_self_, _141729_m.unsafe_cast_ptr<_1b4d740cc_UnsafeCastingExprModel>());
			}
		}
		else {
			_case_begin_1ac7dc630:;
			{
				_1a90272e1_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_expression_model>", 32));
			}
		}
		_match_end_1ac7dc5ca:;
	};
}



inline void _1b6466a97_initExpr(jule::Ptr<_1b6458acd_exprCoder> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _151832_t) {
	if (_1b4c7e7ac_NilCompatible(_151832_t.ptr())) {
		if ((_1b4c8057c_Ptr(_151832_t) != nullptr)) {
			_1a90272e1_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
		} else {
			_1a903baca_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _151832_t);
			_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("(nullptr)", 9));
		};
		return;;
	};
	jule::Ptr<_1b4c8a5cb_Tuple> _152813_tup = _1b4c81d86_Tup(_151832_t);;
	if ((_152813_tup != nullptr)) {
		_1a90413a4_tup((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _152813_tup);
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("{", 1));
		{
			auto expr = &((*_152813_tup.alloc)._field_Types);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac80d079:;
			if (it != expr_end) {
				jule::I64 _153218_i = it - expr->begin();
				jule::Ptr<_1b4c7c90e_TypeKind> _153225_tt = *it;
				{
					if ((!(_1a90436e7_shouldInitialized(&(_153225_tt))))) {
						goto _iter_next_1ac80d079;
					};
					_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(".__jule_result_arg", 18));
					_1a90272e1_write((*_self_.alloc)._field_oc, _1b2745440_Itoa(_153218_i));
					_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("=", 1));
					_1b6466a97_initExpr(_self_, _153225_tt);
					if ((((*_152813_tup.alloc)._field_Types.len() - _153218_i) > 1LL)) {
						_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
					};
				}
				_iter_next_1ac80d079:;
				++it;
				_153218_i++;
				goto _iter_begin_1ac80d079;
			}
			_iter_end_1ac80d079:;
		};
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
		return;;
	};
	jule::Ptr<_1b4b4c449_Enum> _154713_enm = _1b4c80813_Enum(_151832_t);;
	if ((_154713_enm != nullptr)) {
		_1b64667de_model(_self_, (*((*((*((*_154713_enm.alloc)._field_Items[0LL]))._field_Value))._field_Data))._field_Model);
		return;;
	};
	jule::Ptr<_1b4c854d8_Prim> _15529_prim = _1b4c80060_Prim(_151832_t);;
	if ((_15529_prim != nullptr)) {
		if (_1b2752e64_IsNum((*_15529_prim.alloc)._field_Kind)) {
			_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("0", 1));
		} else if (_1b4c886d9_IsBool(_15529_prim)) {
			_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("false", 5));
		} else if (_1b4c88970_IsStr(_15529_prim)) {
			_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::Str()", 11));
		};
		return;;
	};
	if ((_1b4c80d30_Arr(_151832_t) != nullptr)) {
		jule::Ptr<_1b4c8bd08_Arr> _156417_arr = _1b4c80d30_Arr(_151832_t);;
		_1a903baca_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc, &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _151832_t);
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("(", 1));
		_1b6466a97_initExpr(_self_, (*(_156417_arr))._field_Elem);
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	jule::Ptr<_1b4b24641_StructIns> _157113_s = _1b4c815d3_Struct(_151832_t);;
	if ((((_157113_s != nullptr) && (*((*_157113_s.alloc)._field_Decl))._field_Binded) && (_1b57b29e8_FindDirective(&((*(*_157113_s.alloc)._field_Decl.alloc)._field_Directives), jule::Str::lit("typedef", 7)) == nullptr))) {
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("(", 1));
		_1a903baca_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc, &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _151832_t);
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("){}", 3));
		return;;
	};
	_1a903baca_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc, &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _151832_t);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("()", 2));
}





std::ostream &operator<<(std::ostream &_Stream, _1b6458acd_exprCoder _Src) {
	_Stream << "exprCoder{";
	_Stream << "oc:" << _Src._field_oc << ", ";
	_Stream << "varPrefixes:" << _Src._field_varPrefixes;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b64693d5_TestCoder> static__1b6469858_New(jule::Ptr<_1a9026b3c_ObjectCoder>* _2924_oc) {
	return jule::new_ptr<_1b64693d5_TestCoder>(_1b64693d5_TestCoder{._field_oc=(*(_2924_oc))});;
}



inline jule::Ptr<_1b4b9a893_ImportInfo> _1b6469ade_findTestingPackage(jule::Ptr<_1b64693d5_TestCoder> _self_) {
	{
		auto expr = &((*((*((*(_self_))._field_oc))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac81ccd1:;
		if (it != expr_end) {
			jule::Ptr<_1b4b9a893_ImportInfo> _3621_imp = *it;
			{
				if ((*(_3621_imp))._field_LinkPath.equal("std::testing", 12)) {
					return _3621_imp;;
				};
			}
			_iter_next_1ac81ccd1:;
			++it;
			goto _iter_begin_1ac81ccd1;
		}
		_iter_end_1ac81ccd1:;
	};
	return nullptr;;
}



inline void _1b6469d97_appendTest(jule::Ptr<_1b64693d5_TestCoder> _self_, jule::Ptr<_1b4b39865_FnIns> _4434_f) {
	_1a9027b93_indent((*(_self_))._field_oc);
	_1b646a5d4_callTmReset(_self_);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
	_1a9027b93_indent((*_self_.alloc)._field_oc);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("std::cout << \">>> TEST RUNNING: \" ", 34));
	_1b6467889_cstrLit(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*((*(_4434_f))._field_Decl))._field_Ident);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(" << std::endl;\n", 15));
	_1a9027b93_indent((*_self_.alloc)._field_oc);
	static__1b646d73b_funcIns(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), &(_4434_f));
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("(_t);\n", 6));
	_1a9027b93_indent((*_self_.alloc)._field_oc);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("post_test();\n", 13));
}



inline void _1b646a150_appendPackageTests(jule::Ptr<_1b64693d5_TestCoder> _self_, jule::Ptr<_1b4b9d7b9_Package>* _5943_p) {
	{
		auto expr = &((*((*(_5943_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac82459b:;
		if (it != expr_end) {
			jule::Ptr<_1b4c41340_SymbolTable> _6021_file = *it;
			{
				{
					auto expr = &((*(_6021_file))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac825019:;
					if (it != expr_end) {
						jule::Ptr<_1b4b36884_Fn> _6125_f = *it;
						{
							if (_1b57b2db1_HasDirective(&((*(_6125_f))._field_Directives), jule::Str::lit("test", 4))) {
								_1b6469d97_appendTest(_self_, (*_6125_f.alloc)._field_Instances[0LL]);
							};
						}
						_iter_next_1ac825019:;
						++it;
						goto _iter_begin_1ac825019;
					}
					_iter_end_1ac825019:;
				};
			}
			_iter_next_1ac82459b:;
			++it;
			goto _iter_begin_1ac82459b;
		}
		_iter_end_1ac82459b:;
	};
}



inline jule::Bool _1b646a3d6_readyTestingPackage(jule::Ptr<_1b64693d5_TestCoder> _self_) {
	jule::Ptr<_1b4b9a893_ImportInfo> _7013_p = _1b6469ade_findTestingPackage(_self_);;
	if ((_7013_p == nullptr)) {
		return false;;
	};
	(*_self_.alloc)._field_t=(*(_1b4b9ba70_FindStruct(_7013_p.ptr(), jule::Str::lit("T", 1), false)))._field_Instances[0LL];
	(*_self_.alloc)._field_tmReset=_1b4b256a8_FindMethod((*_self_.alloc)._field_t.ptr(), jule::Str::lit("reset", 5), false);
	(*_self_.alloc)._field_tmFailed=_1b4b256a8_FindMethod((*_self_.alloc)._field_t, jule::Str::lit("Failed", 6), false);
	(*_self_.alloc)._field_tmSkipped=_1b4b256a8_FindMethod((*_self_.alloc)._field_t, jule::Str::lit("Skipped", 7), false);
	return true;;
}



inline void _1b646a5d4_callTmReset(jule::Ptr<_1b64693d5_TestCoder> _self_) {
	static__1b646d450_func(&((*((*(_self_))._field_oc))._field_Buf), &((*_self_.alloc)._field_tmReset));
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1b646a7d2_callTmFailed(jule::Ptr<_1b64693d5_TestCoder> _self_) {
	static__1b646d450_func(&((*((*(_self_))._field_oc))._field_Buf), &((*_self_.alloc)._field_tmFailed));
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1b646a9d0_callTmSkipped(jule::Ptr<_1b64693d5_TestCoder> _self_) {
	static__1b646d450_func(&((*((*(_self_))._field_oc))._field_Buf), &((*_self_.alloc)._field_tmSkipped));
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1b646abcd_Serialize(jule::Ptr<_1b64693d5_TestCoder> _self_) {
	_1a9033e68_serializeHead((*(_self_))._field_oc);
	__JULE_DEFER({
		_1a9033907_end((*_self_.alloc)._field_oc);
	});;
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("\nvoid test_point(void) {\n", 25));
	_1a9027797_addIndent((*_self_.alloc)._field_oc);
	_1a9027b93_indent((*_self_.alloc)._field_oc);
	if ((!(_1b646a3d6_readyTestingPackage(_self_)))) {
		_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
		_1a9027995_doneIndent((*_self_.alloc)._field_oc);
		return;;
	};
	_1cb1d27a9_StrBuilder _11813_tb = static__1cb1d2a73_New(40LL);;
	_1a9039d81_structureIns((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &(_11813_tb), (*_self_.alloc)._field_t);
	_1a9037cc4_asSptr((*(*_self_.alloc)._field_oc.alloc)._field_tc, &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _1cb1dc682_Buf(&_11813_tb));
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(" _t = jule::new_ptr<", 20));
	_1a9027599_writeBytes((*_self_.alloc)._field_oc, _1cb1dc682_Buf(&_11813_tb));
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(">(); _t.ref = nullptr;\n", 23));
	_1a9027b93_indent((*_self_.alloc)._field_oc);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::Uint total = 0, failed = 0, skipped = 0;\n", 47));
	_1a9027b93_indent((*_self_.alloc)._field_oc);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("auto post_test = [&](void) {\n", 29));
	_1a9027797_addIndent((*_self_.alloc)._field_oc);
	_1a9027b93_indent((*_self_.alloc)._field_oc);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("++total;\n", 9));
	_1a9027b93_indent((*_self_.alloc)._field_oc);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("if (", 4));
	_1b646a7d2_callTmFailed(_self_);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(") { ++failed; std::cout << \"    [*] FAILED\" << std::endl; }\n", 60));
	_1a9027b93_indent((*_self_.alloc)._field_oc);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("else if (", 9));
	_1b646a9d0_callTmSkipped(_self_);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit(") { ++skipped; std::cout << \"    [*] SKIPPED\" << std::endl; }\n", 62));
	_1a9027b93_indent((*_self_.alloc)._field_oc);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("else { std::cout << \"    [*] PASSED\" << std::endl; }\n", 53));
	_1a9027995_doneIndent((*_self_.alloc)._field_oc);
	_1a9027b93_indent((*_self_.alloc)._field_oc);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("};\n", 3));
	_1b646a150_appendPackageTests(_self_, &((*((*(*_self_.alloc)._field_oc.alloc)._field_ir))._field_Main));
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("\n\n", 2));
	_1a9027b93_indent((*_self_.alloc)._field_oc);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("std::cout << std::endl << \"total tests: \" << total << \" skipped: \" << skipped << \" failed: \" << failed << \" pass: \" << total-failed-skipped << std::endl;\n", 154));
	_1a9027b93_indent((*_self_.alloc)._field_oc);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("if (failed != 0) std::exit(1);\n", 31));
	_1a9027995_doneIndent((*_self_.alloc)._field_oc);
	_1a9027b93_indent((*_self_.alloc)._field_oc);
	_1a90272e1_write((*_self_.alloc)._field_oc, jule::Str::lit("}\n", 2));
}





std::ostream &operator<<(std::ostream &_Stream, _1b64693d5_TestCoder _Src) {
	_Stream << "TestCoder{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "tmReset:" << _Src._field_tmReset << ", ";
	_Stream << "tmFailed:" << _Src._field_tmFailed << ", ";
	_Stream << "tmSkipped:" << _Src._field_tmSkipped << ", ";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline void static__1b646c86c_writeIdentTo(_1cb1d27a9_StrBuilder* _3533_buf, jule::Str* _3551_ident) {
	{
		auto expr = _3551_ident;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac83e8b3:;
		if (it != expr_end) {
			jule::U8 *_3616_b = it;
			{
				if (((*(_3616_b)) >= 128LLU)) {
					goto _julec_label_1ac840a5c;
				};
			}
			_iter_next_1ac83e8b3:;
			++it;
			goto _iter_begin_1ac83e8b3;
		}
		_iter_end_1ac83e8b3:;
	};
	_1cb1db3d9_WriteStr(_3533_buf, (*(_3551_ident)));
	return;;
	_julec_label_1ac840a5c:;
	{
		auto expr = _3551_ident;
		char *it = expr->operator char*();
		const char *end = it + expr->len();
		std::size_t len;
		jule::I32 _4616_r;
		_iter_begin_1ac840e47:;
		std::tie(_4616_r, len) = jule::utf8_decode_rune_str(it, end - it);
		if (it < end) {
			{
				if ((_4616_r < 128LL)) {
					_1cb1db692_WriteByte(_3533_buf, static_cast<jule::U8>(_4616_r));
					goto _iter_next_1ac840e47;
				};
				_1cb1db3d9_WriteStr(_3533_buf, _1b2745176_FmtInt(static_cast<jule::I64>(_4616_r), 15LL));
			}
			_iter_next_1ac840e47:;
			it += len;
			goto _iter_begin_1ac840e47;
		}
	};
}



inline void static__1b646cc13_toOut(_1cb1d27a9_StrBuilder* _6326_buf, jule::Str _6343_ident, jule::Uintptr _6355_addr) {
	_1cb1db692_WriteByte(_6326_buf, '_');
	if ((_6355_addr != 0LLU)) {
		_1cb1db3d9_WriteStr(_6326_buf, _1b2744cad_FmtUint(static_cast<jule::U64>(_6355_addr), 15LL));
		_1cb1db692_WriteByte(_6326_buf, '_');
	};
	static__1b646c86c_writeIdentTo(_6326_buf, &(_6343_ident));
}



inline void static__1b646d164_toLocal(_1cb1d27a9_StrBuilder* _7828_buf, jule::I64 _7845_row, jule::I64 _7855_col, jule::Str* _7866_ident) {
	_1cb1db692_WriteByte(_7828_buf, '_');
	_1cb1db3d9_WriteStr(_7828_buf, _1b2745440_Itoa(_7845_row));
	_1cb1db3d9_WriteStr(_7828_buf, _1b2745440_Itoa(_7855_col));
	_1cb1db692_WriteByte(_7828_buf, '_');
	static__1b646c86c_writeIdentTo(_7828_buf, _7866_ident);
}



inline void static__1b646d450_func(_1cb1d27a9_StrBuilder* _8625_buf, jule::Ptr<_1b4b36884_Fn>* _8643_f) {
	{
		
		if ((*((*(_8643_f))))._field_Binded) {
			_case_begin_1ac845710:;
			{
				_1cb1db3d9_WriteStr(_8625_buf, (*((*(_8643_f))))._field_Ident);
				return;;
			}
		}
		else if ((*((*(_8643_f))))._field_Ident.equal("main", 4)) {
			_case_begin_1ac8457a9:;
			{
				_1cb1db3d9_WriteStr(_8625_buf, jule::Str::lit("entry_point", 11));
				return;;
			}
		}
		else if (_1b4b3708d_IsMethod((*(_8643_f)).ptr())) {
			_case_begin_1ac845820:;
			{
				if ((*((*(_8643_f))))._field_Statically) {
					_1cb1db3d9_WriteStr(_8625_buf, jule::Str::lit("static_", 7));
				};
			}
		}
		_match_end_1ac8455ab:;
	};
	static__1b646cc13_toOut(_8625_buf, (*((*(_8643_f))))._field_Ident, static_cast<jule::Uintptr>((*(_8643_f))));
}



inline void static__1b646d73b_funcIns(_1cb1d27a9_StrBuilder* _10228_buf, jule::Ptr<_1b4b39865_FnIns>* _10246_f) {
	if (_1b4b3acea_IsBuiltin((*(_10246_f)).ptr())) {
		_1cb1db3d9_WriteStr(_10228_buf, jule::Str::lit("jule::", 6));
		_1cb1db3d9_WriteStr(_10228_buf, (*((*((*(_10246_f))))._field_Decl))._field_Ident);
		return;;
	};
	if (((*(*((*(_10246_f))))._field_Decl.alloc)._field_Binded || ((*((*(_10246_f))))._field_Generics.len() == 0LL))) {
		static__1b646d450_func(_10228_buf, &((*((*(_10246_f))))._field_Decl));
		return;;
	};
	static__1b646cc13_toOut(_10228_buf, (*(*((*(_10246_f))))._field_Decl.alloc)._field_Ident, static_cast<jule::Uintptr>((*(_10246_f))));
}



inline void static__1b646da27_traitDecl(_1cb1d27a9_StrBuilder* _11730_buf, jule::Ptr<_1b4b49c3d_Trait> _11747_t) {
	static__1b646cc13_toOut(_11730_buf, (*(_11747_t))._field_Ident, static_cast<jule::Uintptr>(_11747_t));
}



inline void static__1b646dd13_param(_1cb1d27a9_StrBuilder* _12126_buf, jule::Ptr<_1b4b34db0_Param>* _12144_p) {
	if ((_1b4ad83b3_IsAnonIdent((*((*(_12144_p))))._field_Ident) || _1b4ad80e9_IsIgnoreIdent((*((*(_12144_p))))._field_Ident))) {
		return;;
	};
	if (_1b4b354cb_IsSelf((*(_12144_p)).ptr())) {
		_1cb1db3d9_WriteStr(_12126_buf, jule::Str::lit("_self_", 6));
		return;;
	};
	if (((*((*(_12144_p))))._field_Token == nullptr)) {
		static__1b646d164_toLocal(_12126_buf, 0LL, 0LL, &((*((*(_12144_p))))._field_Ident));
		return;;
	};
	static__1b646d164_toLocal(_12126_buf, (*((*((*(_12144_p))))._field_Token))._field_Row, (*((*((*(_12144_p))))._field_Token))._field_Column, &((*((*(_12144_p))))._field_Ident));
}



inline void static__1b646e0ee_structure(_1cb1d27a9_StrBuilder* _13630_buf, jule::Ptr<_1b4b218b3_Struct>* _13648_s) {
	if ((*((*(_13648_s))))._field_Binded) {
		if ((!(_1b57b2db1_HasDirective(&((*((*(_13648_s))))._field_Directives), jule::Str::lit("typedef", 7))))) {
			_1cb1db3d9_WriteStr(_13630_buf, jule::Str::lit("struct ", 7));
		};
		_1cb1db3d9_WriteStr(_13630_buf, (*((*(_13648_s))))._field_Ident);
		return;;
	};
	static__1b646cc13_toOut(_13630_buf, (*((*(_13648_s))))._field_Ident, static_cast<jule::Uintptr>((*(_13648_s))));
}



inline void static__1b646e3da_structureIns(_1cb1d27a9_StrBuilder* _14733_buf, jule::Ptr<_1b4b24641_StructIns>* _14751_s) {
	if (((*((*((*(_14751_s))))._field_Decl))._field_Binded || ((*((*(_14751_s))))._field_Generics.len() == 0LL))) {
		static__1b646e0ee_structure(_14733_buf, &((*((*(_14751_s))))._field_Decl));
		return;;
	};
	static__1b646cc13_toOut(_14733_buf, (*(*((*(_14751_s))))._field_Decl.alloc)._field_Ident, static_cast<jule::Uintptr>((*(_14751_s))));
}



inline void static__1b646e6c6_field(_1cb1d27a9_StrBuilder* _15526_buf, jule::Ptr<_1b4b1d98c_Field>* _15544_f) {
	if ((*((*((*(_15544_f))))._field_Owner))._field_Binded) {
		_1cb1db3d9_WriteStr(_15526_buf, (*((*(_15544_f))))._field_Ident);
		return;;
	};
	_1cb1db3d9_WriteStr(_15526_buf, jule::Str::lit("_field_", 7));
	static__1b646c86c_writeIdentTo(_15526_buf, &((*((*(_15544_f))))._field_Ident));
}



inline void static__1b646e9b2_var(_1cb1d27a9_StrBuilder* _16524_buf, jule::Ptr<_1b4bddaa1_Var> _16545_v) {
	{
		
		if ((*(_16545_v))._field_Binded) {
			_case_begin_1ac858cd9:;
			{
				_1cb1db3d9_WriteStr(_16524_buf, (*_16545_v.alloc)._field_Ident);
			}
		}
		else if ((*(_16545_v))._field_Ident.equal("error", 5)) {
			_case_begin_1ac858d50:;
			{
				_1cb1db3d9_WriteStr(_16524_buf, jule::Str::lit("except.error", 12));
			}
		}
		else if ((*(_16545_v))._field_Ident.equal("self", 4)) {
			_case_begin_1ac858db6:;
			{
				_1cb1db3d9_WriteStr(_16524_buf, jule::Str::lit("_self_", 6));
			}
		}
		else if (((*(_16545_v))._field_RetOrder == -1LL)) {
			_case_begin_1ac858e2c:;
			{
				_1cb1db3d9_WriteStr(_16524_buf, jule::Str::lit("__jule_func_result", 18));
			}
		}
		else if (((*(_16545_v))._field_RetOrder >= 0LL)) {
			_case_begin_1ac858e93:;
			{
				_1cb1db3d9_WriteStr(_16524_buf, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
				_1cb1db3d9_WriteStr(_16524_buf, _1b2745440_Itoa((*_16545_v.alloc)._field_RetOrder));
			}
		}
		else if (((*(_16545_v))._field_Scope != nullptr)) {
			_case_begin_1ac859009:;
			{
				static__1b646d164_toLocal(_16524_buf, (*((*_16545_v.alloc)._field_Token))._field_Row, (*(*_16545_v.alloc)._field_Token.alloc)._field_Column, &((*_16545_v.alloc)._field_Ident));
			}
		}
		else {
			_case_begin_1ac858c73:;
			{
				static__1b646cc13_toOut(_16524_buf, (*(_16545_v))._field_Ident, static_cast<jule::Uintptr>(_16545_v));
			}
		}
		_match_end_1ac858b74:;
	};
}



inline void static__1b646ec9d_iterBegin(_1cb1d27a9_StrBuilder* _18730_buf, jule::Uintptr _18747_it) {
	_1cb1db3d9_WriteStr(_18730_buf, jule::Str::lit("_iter_begin_", 12));
	_1cb1db3d9_WriteStr(_18730_buf, _1b2744cad_FmtUint(static_cast<jule::U64>(_18747_it), 15LL));
}



inline void static__1b6470089_iterEnd(_1cb1d27a9_StrBuilder* _19228_buf, jule::Uintptr _19245_it) {
	_1cb1db3d9_WriteStr(_19228_buf, jule::Str::lit("_iter_end_", 10));
	_1cb1db3d9_WriteStr(_19228_buf, _1b2744cad_FmtUint(static_cast<jule::U64>(_19245_it), 15LL));
}



inline void static__1b6470375_iterNext(_1cb1d27a9_StrBuilder* _19729_buf, jule::Uintptr _19746_it) {
	_1cb1db3d9_WriteStr(_19729_buf, jule::Str::lit("_iter_next_", 11));
	_1cb1db3d9_WriteStr(_19729_buf, _1b2744cad_FmtUint(static_cast<jule::U64>(_19746_it), 15LL));
}



inline void static__1b6470661_label(_1cb1d27a9_StrBuilder* _20226_buf, jule::Uintptr _20243_u) {
	_1cb1db3d9_WriteStr(_20226_buf, jule::Str::lit("_julec_label_", 13));
	_1cb1db3d9_WriteStr(_20226_buf, _1b2744cad_FmtUint(static_cast<jule::U64>(_20243_u), 15LL));
}



inline void static__1b647094c_matchEnd(_1cb1d27a9_StrBuilder* _20729_buf, jule::Uintptr _20746_m) {
	_1cb1db3d9_WriteStr(_20729_buf, jule::Str::lit("_match_end_", 11));
	_1cb1db3d9_WriteStr(_20729_buf, _1b2744cad_FmtUint(static_cast<jule::U64>(_20746_m), 15LL));
}



inline void static__1b6470c38_caseBegin(_1cb1d27a9_StrBuilder* _21230_buf, jule::Uintptr _21247_c) {
	_1cb1db3d9_WriteStr(_21230_buf, jule::Str::lit("_case_begin_", 12));
	_1cb1db3d9_WriteStr(_21230_buf, _1b2744cad_FmtUint(static_cast<jule::U64>(_21247_c), 15LL));
}





std::ostream &operator<<(std::ostream &_Stream, _1b646c361_identCoder _Src) {
	_Stream << "identCoder{";
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a9024d8d_SerializationInfo _Src) {
	_Stream << "SerializationInfo{";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CompilerCommand:" << _Src._field_CompilerCommand;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a90252ab_traitCast _Src) {
	_Stream << "traitCast{";
	_Stream << "t1:" << _Src._field_t1 << ", ";
	_Stream << "t2:" << _Src._field_t2;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a9025685_anonHash _Src) {
	_Stream << "anonHash{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a903618a_Str(_1a9035cc2_customType* _self_) {
	return (*(_self_))._field_kind;;
}



inline jule::Bool _1a90364cb_Equal(jule::Ptr<_1a9035cc2_customType> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _4421_k) {
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a9035cc2_customType _Src) {
	_Stream << _1a903618a_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1a903690a_typeCoder> static__1a9036e27_new(jule::Ptr<_1a9026b3c_ObjectCoder>* _6924_oc) {
	jule::Ptr<_1a903690a_typeCoder> _7013_tc = jule::new_ptr<_1a903690a_typeCoder>(_1a903690a_typeCoder{._field_oc=(*(_6924_oc)), });;
	(*(_7013_tc))._field_rc=static__1a903e9bd_new(&(_7013_tc));
	return _7013_tc;;
}



inline void _1a903728a_toType(_1a903690a_typeCoder* _self_, _1cb1d27a9_StrBuilder* _7630_buf, jule::Str _7651_id) {
	if ((!_7651_id.equal("uintptr", 7))) {
		_7651_id=_1b27475a7_RealKindOf(_7651_id);
	};
	_1cb1db3d9_WriteStr(_7630_buf, jule::Str::lit("jule::", 6));
	if (((97LL <= _7651_id[0LL]) && (_7651_id[0LL] <= 122LLU))) {
		_1cb1db692_WriteByte(_7630_buf, (_7651_id[0LL] - 32LLU));
	} else {
		_1cb1db692_WriteByte(_7630_buf, _7651_id[0LL]);
	};
	_1cb1db3d9_WriteStr(_7630_buf, _7651_id.slice(1LL));
}



inline void _1a90375ed_prim(_1a903690a_typeCoder* _self_, _1cb1d27a9_StrBuilder* _9028_buf, jule::Ptr<_1b4c854d8_Prim> _9045_p) {
	_1a903728a_toType(_self_, _9028_buf, (*(_9045_p))._field_Kind);
}



inline void _1a9037961_tuple(_1a903690a_typeCoder* _self_, _1cb1d27a9_StrBuilder* _9529_buf, jule::Ptr<_1b4c8a5cb_Tuple> _9550_t) {
	_1cb1db3d9_WriteStr(_9529_buf, jule::Str::lit("std::tuple<", 11));
	{
		auto expr = &((*_9550_t.alloc)._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac9a5c7c:;
		if (it != expr_end) {
			jule::I64 _9714_i = it - expr->begin();
			jule::Ptr<_1b4c7c90e_TypeKind> _9721_tk = *it;
			{
				_1a903baca_kind(_self_, _9529_buf, _9721_tk);
				if ((((*(_9550_t))._field_Types.len() - _9714_i) > 1LL)) {
					_1cb1db692_WriteByte(_9529_buf, ',');
				};
			}
			_iter_next_1ac9a5c7c:;
			++it;
			_9714_i++;
			goto _iter_begin_1ac9a5c7c;
		}
		_iter_end_1ac9a5c7c:;
	};
	_1cb1db692_WriteByte(_9529_buf, '>');
}



inline void _1a9037cc4_asSptr(_1a903690a_typeCoder* _self_, _1cb1d27a9_StrBuilder* _10730_buf, jule::Slice<jule::U8> _10747_elem) {
	_1cb1db3d9_WriteStr(_10730_buf, jule::Str::lit("jule::Ptr<", 10));
	_1cb1db131_Write(_10730_buf, _10747_elem);
	_1cb1db692_WriteByte(_10730_buf, '>');
}



inline void _1a9038137_sptr(_1a903690a_typeCoder* _self_, _1cb1d27a9_StrBuilder* _11428_buf, jule::Ptr<_1b4c89014_Sptr> _11449_sptr) {
	_1cb1db3d9_WriteStr(_11428_buf, jule::Str::lit("jule::Ptr<", 10));
	_1a903baca_kind(_self_, _11428_buf, (*(_11449_sptr))._field_Elem);
	_1cb1db692_WriteByte(_11428_buf, '>');
}



inline void _1a903849a_ptr(_1a903690a_typeCoder* _self_, _1cb1d27a9_StrBuilder* _12127_buf, jule::Ptr<_1b4c8c7cb_Ptr> _12148_p) {
	;
	if (_1b4c8d315_IsUnsafe(_12148_p.ptr())) {
		_1cb1db3d9_WriteStr(_12127_buf, jule::Str::lit("void*", 5));
	} else {
		_1a903baca_kind(_self_, _12127_buf, (*(_12148_p))._field_Elem);
		_1cb1db3d9_WriteStr(_12127_buf, jule::Str::lit("*", 1));
	};
}



inline void _1a903880d_enumDecl(_1a903690a_typeCoder* _self_, _1cb1d27a9_StrBuilder* _13232_buf, jule::Ptr<_1b4b4c449_Enum> _13253_e) {
	_1a903baca_kind(_self_, _13232_buf, (*((*(_13253_e))._field_Kind))._field_Kind);
}



inline void _1a9038b71_typeEnumDecl(_1a903690a_typeCoder* _self_, _1cb1d27a9_StrBuilder* _13736_buf, jule::Ptr<_1b4b4db54_TypeEnum> _13757_e) {
	_1cb1db3d9_WriteStr(_13736_buf, jule::Str::lit("jule::Any", 9));
}



inline void _1a9038ed4_asSlice(_1a903690a_typeCoder* _self_, _1cb1d27a9_StrBuilder* _14131_buf, jule::Ptr<_1b4c7c90e_TypeKind> _14152_elem) {
	_1cb1db3d9_WriteStr(_14131_buf, jule::Str::lit("jule::Slice<", 12));
	_1a903baca_kind(_self_, _14131_buf, _14152_elem);
	_1cb1db692_WriteByte(_14131_buf, '>');
}



inline void _1a9039347_slice(_1a903690a_typeCoder* _self_, _1cb1d27a9_StrBuilder* _14829_buf, jule::Ptr<_1b4c899d7_Slc> _14850_s) {
	_1a9038ed4_asSlice(_self_, _14829_buf, (*(_14850_s))._field_Elem);
}



inline void _1a90396aa_mapType(_1a903690a_typeCoder* _self_, _1cb1d27a9_StrBuilder* _15331_buf, jule::Ptr<_1b4c8b17b_Map> _15352_m) {
	_1cb1db3d9_WriteStr(_15331_buf, jule::Str::lit("jule::Map<", 10));
	_1a903baca_kind(_self_, _15331_buf, (*(_15352_m))._field_Key);
	_1cb1db692_WriteByte(_15331_buf, ',');
	_1a903baca_kind(_self_, _15331_buf, (*_15352_m.alloc)._field_Val);
	_1cb1db692_WriteByte(_15331_buf, '>');
}



inline void _1a9039d81_structureIns(_1a903690a_typeCoder* _self_, _1cb1d27a9_StrBuilder* _16736_buf, jule::Ptr<_1b4b24641_StructIns> _16757_s) {
	if ((!((*((*(_16757_s))._field_Decl))._field_Binded))) {
		static__1b646e3da_structureIns(_16736_buf, &(_16757_s));
		return;;
	};
	jule::Ptr<_1b4aea0d9_Directive> _1729_d = _1b57b29e8_FindDirective(&((*(*_16757_s.alloc)._field_Decl.alloc)._field_Directives), jule::Str::lit("namespace", 9));;
	if ((_1729_d != nullptr)) {
		_1cb1db131_Write(_16736_buf, _1a903452e_concatAllParts((*_1729_d.alloc)._field_Args));
		_1cb1db3d9_WriteStr(_16736_buf, jule::Str::lit("::", 2));
	};
	static__1b646e3da_structureIns(_16736_buf, &(_16757_s));
	if (((*_16757_s.alloc)._field_Generics.len() > 0LL)) {
		_1cb1db692_WriteByte(_16736_buf, '<');
		{
			auto expr = &((*_16757_s.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac9b7585:;
			if (it != expr_end) {
				jule::I64 _18018_i = it - expr->begin();
				jule::Ptr<_1b4c7b028_InsGeneric> _18025_g = *it;
				{
					_1a903baca_kind(_self_, _16736_buf, (*(_18025_g))._field_Kind);
					if ((((*_16757_s.alloc)._field_Generics.len() - _18018_i) > 1LL)) {
						_1cb1db692_WriteByte(_16736_buf, ',');
					};
				}
				_iter_next_1ac9b7585:;
				++it;
				_18018_i++;
				goto _iter_begin_1ac9b7585;
			}
			_iter_end_1ac9b7585:;
		};
		_1cb1db692_WriteByte(_16736_buf, '>');
	};
}



inline void _1a903a1e4_array(_1a903690a_typeCoder* _self_, _1cb1d27a9_StrBuilder* _19129_buf, jule::Ptr<_1b4c8bd08_Arr> _19150_a) {
	_1cb1db3d9_WriteStr(_19129_buf, jule::Str::lit("jule::Array<", 12));
	_1a903baca_kind(_self_, _19129_buf, (*(_19150_a))._field_Elem);
	_1cb1db692_WriteByte(_19129_buf, ',');
	_1cb1db3d9_WriteStr(_19129_buf, _1b2745440_Itoa((*_19150_a.alloc)._field_N));
	_1cb1db692_WriteByte(_19129_buf, '>');
}



inline void _1a903a8ba_paramIns(_1a903690a_typeCoder* _self_, _1cb1d27a9_StrBuilder* _21432_buf, jule::Ptr<_1b4b387dc_ParamIns>* _21454_p) {
	if ((*((*((*(_21454_p))))._field_Decl))._field_Variadic) {
		_1cb1db3d9_WriteStr(_21432_buf, jule::Str::lit("jule::Slice<", 12));
		_1a903baca_kind(_self_, _21432_buf, (*((*(_21454_p))))._field_Kind);
		_1cb1db692_WriteByte(_21432_buf, '>');
	} else {
		_1a903baca_kind(_self_, _21432_buf, (*((*(_21454_p))))._field_Kind);
	};
	if ((*((*((*(_21454_p))))._field_Decl))._field_Reference) {
		_1cb1db692_WriteByte(_21432_buf, '*');
	};
}



inline void _1a903b091_funcInsResult(_1a903690a_typeCoder* _self_, _1cb1d27a9_StrBuilder* _24637_s, jule::Ptr<_1b4b39865_FnIns>* _24657_f) {
	if (_1b4b36d07_IsVoid((*((*(_24657_f))))._field_Decl.ptr())) {
		if ((*(*((*(_24657_f))))._field_Decl.alloc)._field_Exceptional) {
			_1cb1db3d9_WriteStr(_24637_s, jule::Str::lit("jule::VoidExceptional", 21));
		} else {
			_1cb1db3d9_WriteStr(_24637_s, jule::Str::lit("void", 4));
		};
		return;;
	};
	if ((*(*((*(_24657_f))))._field_Decl.alloc)._field_Exceptional) {
		_1cb1db3d9_WriteStr(_24637_s, jule::Str::lit("jule::Exceptional<", 18));
		_1a9041a7a_codeMut1((*(_self_))._field_rc.ptr(), _24637_s, &((*((*(_24657_f))))._field_Result));
		_1cb1db692_WriteByte(_24637_s, '>');
		return;;
	};
	_1a9041a7a_codeMut1((*(_self_))._field_rc, _24637_s, &((*((*(_24657_f))))._field_Result));
}



inline void _1a903b404_anonFunc(_1a903690a_typeCoder* _self_, _1cb1d27a9_StrBuilder* _26432_buf, jule::Ptr<_1b4b39865_FnIns> _26453_f) {
	if ((((*(_26453_f))._field_Result != nullptr) && (_1b4c81d86_Tup((*_26453_f.alloc)._field_Result) != nullptr))) {
		_1a9028c60_pushResultIns((*(_self_))._field_oc, &(_26453_f));
	};
	_1a903b091_funcInsResult(_self_, _26432_buf, &(_26453_f));
	if (((*_26453_f.alloc)._field_Params.len() == 0LL)) {
		return;;
	};
	_1cb1db692_WriteByte(_26432_buf, ',');
	{
		auto expr = &((*_26453_f.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac9c9d28:;
		if (it != expr_end) {
			jule::I64 _27314_i = it - expr->begin();
			jule::Ptr<_1b4b387dc_ParamIns> _27321_param = *it;
			{
				if (_1b4b354cb_IsSelf((*(_27321_param))._field_Decl.ptr())) {
					goto _iter_next_1ac9c9d28;
				};
				_1a903a8ba_paramIns(_self_, _26432_buf, &(_27321_param));
				if ((((*_26453_f.alloc)._field_Params.len() - _27314_i) > 1LL)) {
					_1cb1db692_WriteByte(_26432_buf, ',');
				};
			}
			_iter_next_1ac9c9d28:;
			++it;
			_27314_i++;
			goto _iter_begin_1ac9c9d28;
		}
		_iter_end_1ac9c9d28:;
	};
}



inline void _1a903b767_func(_1a903690a_typeCoder* _self_, _1cb1d27a9_StrBuilder* _28528_buf, jule::Ptr<_1b4b39865_FnIns> _28549_f) {
	_1cb1db3d9_WriteStr(_28528_buf, jule::Str::lit("jule::Fn<", 9));
	_1a903b404_anonFunc(_self_, _28528_buf, _28549_f);
	_1cb1db692_WriteByte(_28528_buf, '>');
}



inline void _1a903baca_kind(_1a903690a_typeCoder* _self_, _1cb1d27a9_StrBuilder* _29228_buf, jule::Ptr<_1b4c7c90e_TypeKind> _29249_k) {
	{
		
		if ((_1b4c815d3_Struct(_29249_k.ptr()) != nullptr)) {
			_case_begin_1ac9cd535:;
			{
				_1a9039d81_structureIns(_self_, _29228_buf, _1b4c815d3_Struct(_29249_k));
				return;;
			}
		}
		else if (_1b4c7d756_Binded(_29249_k.ptr())) {
			_case_begin_1ac9cd5ce:;
			{
				_1cb1db3d9_WriteStr(_29228_buf, (*_29249_k.alloc)._field_BindIdent);
				return;;
			}
		}
		else if ((_1b4c80060_Prim(_29249_k.ptr()) != nullptr)) {
			_case_begin_1ac9cd645:;
			{
				_1a90375ed_prim(_self_, _29228_buf, _1b4c80060_Prim(_29249_k));
				return;;
			}
		}
		else if ((_1b4c81d86_Tup(_29249_k.ptr()) != nullptr)) {
			_case_begin_1ac9cd6ab:;
			{
				_1a9037961_tuple(_self_, _29228_buf, _1b4c81d86_Tup(_29249_k));
				return;;
			}
		}
		else if ((_1b4c802e6_Sptr(_29249_k.ptr()) != nullptr)) {
			_case_begin_1ac9cd722:;
			{
				_1a9038137_sptr(_self_, _29228_buf, _1b4c802e6_Sptr(_29249_k));
				return;;
			}
		}
		else if ((_1b4c8057c_Ptr(_29249_k.ptr()) != nullptr)) {
			_case_begin_1ac9cd799:;
			{
				_1a903849a_ptr(_self_, _29228_buf, _1b4c8057c_Ptr(_29249_k));
				return;;
			}
		}
		else if ((_1b4c80813_Enum(_29249_k.ptr()) != nullptr)) {
			_case_begin_1ac9cd821:;
			{
				_1a903880d_enumDecl(_self_, _29228_buf, _1b4c80813_Enum(_29249_k));
				return;;
			}
		}
		else if ((_1b4c80a99_TypeEnum(_29249_k.ptr()) != nullptr)) {
			_case_begin_1ac9cd898:;
			{
				_1a9038b71_typeEnumDecl(_self_, _29228_buf, _1b4c80a99_TypeEnum(_29249_k));
				return;;
			}
		}
		else if ((_1b4c810b6_Slc(_29249_k.ptr()) != nullptr)) {
			_case_begin_1ac9cd920:;
			{
				_1a9039347_slice(_self_, _29228_buf, _1b4c810b6_Slc(_29249_k));
				return;;
			}
		}
		else if ((_1b4c81b00_Map(_29249_k.ptr()) != nullptr)) {
			_case_begin_1ac9cd997:;
			{
				_1a90396aa_mapType(_self_, _29228_buf, _1b4c81b00_Map(_29249_k));
				return;;
			}
		}
		else if ((_1b4c81869_Trait(_29249_k.ptr()) != nullptr)) {
			_case_begin_1ac9cda1e:;
			{
				_1cb1db3d9_WriteStr(_29228_buf, jule::Str::lit("jule::Trait", 11));
				return;;
			}
		}
		else if ((_1b4c80d30_Arr(_29249_k.ptr()) != nullptr)) {
			_case_begin_1ac9cda96:;
			{
				_1a903a1e4_array(_self_, _29228_buf, _1b4c80d30_Arr(_29249_k));
				return;;
			}
		}
		else if ((_1b4c8134c_Fn(_29249_k.ptr()) != nullptr)) {
			_case_begin_1ac9cdb1d:;
			{
				_1a903b767_func(_self_, _29228_buf, _1b4c8134c_Fn(_29249_k));
				return;;
			}
		}
		_match_end_1ac9cd359:;
	};
	{
		auto &_match_expr{ (*(_29249_k))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data27)) {
			_case_begin_1ac9cdba6:;
			{
				_1cb1db3d9_WriteStr(_29228_buf, (*((*(_29249_k))._field_Kind.cast_ptr<_1a9035cc2_customType>((jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data27)))._field_kind);
			}
		}
		else {
			_case_begin_1ac9d7176:;
			{
				_1cb1db3d9_WriteStr(_29228_buf, jule::Str::lit("[<unimplemented_type_kind>]", 27));
			}
		}
		_match_end_1ac9d7121:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a903690a_typeCoder _Src) {
	_Stream << "typeCoder{";
	_Stream << "oc:" << _Src._field_oc << ", ";
	_Stream << "rc:" << _Src._field_rc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a903e4e5_resultCoder> static__1a903e9bd_new(jule::Ptr<_1a903690a_typeCoder>* _35924_tc) {
	return jule::new_ptr<_1a903e4e5_resultCoder>(_1a903e4e5_resultCoder{._field_tc=(*(_35924_tc))});;
}



inline void _1a903ed31_ptr(_1a903e4e5_resultCoder* _self_, _1cb1d27a9_StrBuilder* _36327_s, jule::Ptr<_1b4c8c7cb_Ptr> _36346_p) {
	_1cb1db3d9_WriteStr(_36327_s, jule::Str::lit("p", 1));
	_1a9041717_codeMut(_self_, _36327_s, &((*(_36346_p))._field_Elem));
}



inline void _1a9040194_sptr(_1a903e4e5_resultCoder* _self_, _1cb1d27a9_StrBuilder* _36828_s, jule::Ptr<_1b4c89014_Sptr> _36847_p) {
	_1cb1db3d9_WriteStr(_36828_s, jule::Str::lit("x", 1));
	_1a9041717_codeMut(_self_, _36828_s, &((*(_36847_p))._field_Elem));
}



inline void _1a9040507_mapType(_1a903e4e5_resultCoder* _self_, _1cb1d27a9_StrBuilder* _37331_s, jule::Ptr<_1b4c8b17b_Map> _37350_p) {
	_1cb1db3d9_WriteStr(_37331_s, jule::Str::lit("m", 1));
	_1a9041717_codeMut(_self_, _37331_s, &((*(_37350_p))._field_Key));
	_1a9041717_codeMut(_self_, _37331_s, &((*_37350_p.alloc)._field_Val));
}



inline void _1a904086a_slice(_1a903e4e5_resultCoder* _self_, _1cb1d27a9_StrBuilder* _37929_s, jule::Ptr<_1b4c899d7_Slc> _37948_slc) {
	_1cb1db3d9_WriteStr(_37929_s, jule::Str::lit("s", 1));
	_1a9041717_codeMut(_self_, _37929_s, &((*(_37948_slc))._field_Elem));
}



inline void _1a9040bcd_arr(_1a903e4e5_resultCoder* _self_, _1cb1d27a9_StrBuilder* _38427_s, jule::Ptr<_1b4c8bd08_Arr> _38446_arr) {
	_1cb1db3d9_WriteStr(_38427_s, jule::Str::lit("a", 1));
	_1cb1db3d9_WriteStr(_38427_s, _1b2745176_FmtInt(static_cast<jule::I64>((*(_38446_arr))._field_N), 16LL));
	_1a9041717_codeMut(_self_, _38427_s, &((*_38446_arr.alloc)._field_Elem));
}



inline void _1a9041041_func(_1a903e4e5_resultCoder* _self_, _1cb1d27a9_StrBuilder* _39028_s, jule::Ptr<_1b4b39865_FnIns> _39047_f) {
	_1cb1db3d9_WriteStr(_39028_s, jule::Str::lit("f", 1));
	{
		auto expr = &((*(_39047_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac9de5ce:;
		if (it != expr_end) {
			jule::Ptr<_1b4b387dc_ParamIns> _39221_p = *it;
			{
				if ((*((*(_39221_p))._field_Decl))._field_Reference) {
					_1cb1db3d9_WriteStr(_39028_s, jule::Str::lit("r", 1));
				};
				_1a9041717_codeMut(_self_, _39028_s, &((*_39221_p.alloc)._field_Kind));
			}
			_iter_next_1ac9de5ce:;
			++it;
			goto _iter_begin_1ac9de5ce;
		}
		_iter_end_1ac9de5ce:;
	};
	if (((*_39047_f.alloc)._field_Result != nullptr)) {
		_1a9041717_codeMut(_self_, _39028_s, &((*_39047_f.alloc)._field_Result));
	};
}



inline void _1a90413a4_tup(_1a903e4e5_resultCoder* _self_, _1cb1d27a9_StrBuilder* _40327_s, jule::Ptr<_1b4c8a5cb_Tuple> _40346_tup) {
	{
		auto expr = &((*(_40346_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac9e1c30:;
		if (it != expr_end) {
			jule::Ptr<_1b4c7c90e_TypeKind> _40421_t = *it;
			{
				_1cb1db3d9_WriteStr(_40327_s, jule::Str::lit("__jule_tuple_", 13));
				_1a9041717_codeMut(_self_, _40327_s, &(_40421_t));
			}
			_iter_next_1ac9e1c30:;
			++it;
			goto _iter_begin_1ac9e1c30;
		}
		_iter_end_1ac9e1c30:;
	};
}



inline void _1a9041717_codeMut(_1a903e4e5_resultCoder* _self_, _1cb1d27a9_StrBuilder* _41031_s, jule::Ptr<_1b4c7c90e_TypeKind>* _41051_t) {
	{
		auto &_match_expr{ (*((*(_41051_t))))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data26)) {
			_case_begin_1ac9e2e40:;
			{
				_1a903ed31_ptr(_self_, _41031_s, (*((*(_41051_t))))._field_Kind.cast_ptr<_1b4c8c7cb_Ptr>((jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data26));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data21)) {
			_case_begin_1ac9e365a:;
			{
				_1a9040194_sptr(_self_, _41031_s, (*((*(_41051_t))))._field_Kind.cast_ptr<_1b4c89014_Sptr>((jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data21));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data24)) {
			_case_begin_1ac9e32e7:;
			{
				_1a9040507_mapType(_self_, _41031_s, (*((*(_41051_t))))._field_Kind.cast_ptr<_1b4c8b17b_Map>((jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data24));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data22)) {
			_case_begin_1ac9e335d:;
			{
				_1a904086a_slice(_self_, _41031_s, (*((*(_41051_t))))._field_Kind.cast_ptr<_1b4c899d7_Slc>((jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data22));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data25)) {
			_case_begin_1ac9e33c4:;
			{
				_1a9040bcd_arr(_self_, _41031_s, (*((*(_41051_t))))._field_Kind.cast_ptr<_1b4c8bd08_Arr>((jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data25));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data1)) {
			_case_begin_1ac9e343a:;
			{
				_1a9041041_func(_self_, _41031_s, (*((*(_41051_t))))._field_Kind.cast_ptr<_1b4b39865_FnIns>((jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data1));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data3)) {
			_case_begin_1ac9e389c:;
			{
				jule::Ptr<_1b4b4c449_Enum> _42513_te = (*((*(_41051_t))))._field_Kind.cast_ptr<_1b4b4c449_Enum>((jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data3);;
				static__1b646cc13_toOut(_41031_s, (*(_42513_te))._field_Ident, static_cast<jule::Uintptr>(_42513_te));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data4)) {
			_case_begin_1ac9e3913:;
			{
				jule::Ptr<_1b4b4db54_TypeEnum> _42813_te = (*((*(_41051_t))))._field_Kind.cast_ptr<_1b4b4db54_TypeEnum>((jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data4);;
				static__1b646cc13_toOut(_41031_s, (*(_42813_te))._field_Ident, static_cast<jule::Uintptr>(_42813_te));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data0)) {
			_case_begin_1ac9e3979:;
			{
				jule::Ptr<_1b4b24641_StructIns> _43117_si = (*((*(_41051_t))))._field_Kind.cast_ptr<_1b4b24641_StructIns>((jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data0);;
				static__1b646e3da_structureIns(_41031_s, &(_43117_si));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data2)) {
			_case_begin_1ac9e39e0:;
			{
				jule::Ptr<_1b4b49c3d_Trait> _43417_trt = (*((*(_41051_t))))._field_Kind.cast_ptr<_1b4b49c3d_Trait>((jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data2);;
				static__1b646da27_traitDecl(_41031_s, _43417_trt);
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data20)) {
			_case_begin_1ac9e3a67:;
			{
				_1cb1db3d9_WriteStr(_41031_s, (*((*((*(_41051_t))))._field_Kind.cast_ptr<_1b4c854d8_Prim>((jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data20)))._field_Kind);
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data23)) {
			_case_begin_1ac9e3ade:;
			{
				_1a90413a4_tup(_self_, _41031_s, (*((*(_41051_t))))._field_Kind.cast_ptr<_1b4c8a5cb_Tuple>((jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data23));
			}
		}
		else {
			_case_begin_1ac9e3281:;
			{
				jule::panic(jule::Str::lit("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/type.jule:441:13"));;
			}
		}
		_match_end_1ac9e322b:;
	};
}



inline void _1a9041a7a_codeMut1(_1a903e4e5_resultCoder* _self_, _1cb1d27a9_StrBuilder* _44532_s, jule::Ptr<_1b4c7c90e_TypeKind>* _44552_t) {
	jule::Ptr<_1b4c8a5cb_Tuple> _44613_tup = _1b4c81d86_Tup((*(_44552_t)).ptr());;
	if ((_44613_tup != nullptr)) {
		_1a90413a4_tup(_self_, _44532_s, _44613_tup);
	} else {
		_1a903baca_kind((*(_self_))._field_tc.ptr(), _44532_s, (*(_44552_t)));
	};
}



inline jule::Slice<jule::U8> _1a9041d88_code(_1a903e4e5_resultCoder* _self_, jule::Ptr<_1b4c7c90e_TypeKind>* _45428_t) {
	_1cb1d27a9_StrBuilder _45513_s = static__1cb1d2a73_New(20LL);;
	_1a9041717_codeMut(_self_, &(_45513_s), _45428_t);
	return _1cb1dc682_Buf(&_45513_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a903e4e5_resultCoder _Src) {
	_Stream << "resultCoder{";
	_Stream << "tc:" << _Src._field_tc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ac9ee9a7_Name(_1ac9ee589_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1ac9eeb0b_What(_1ac9ee589_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1ac9eec60_Reset(_1ac9ee589_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1ac9eedb4_Short(_1ac9ee589_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac9ee589_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1aca02cb8_Name(_1aca0313c_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1aca03428_What(_1aca0313c_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1aca0356b_Reset(_1aca0313c_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1aca036ae_Short(_1aca0313c_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1aca0313c_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1aca0642b_Name(_1aca067a0_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1aca06a8b_What(_1aca067a0_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1aca06bce_Reset(_1aca067a0_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1aca06d22_Short(_1aca067a0_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1aca067a0_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1aca09ad3_Name(_1aca09e57_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1aca0a243_What(_1aca09e57_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1aca0a386_Reset(_1aca09e57_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1aca0a4c9_Short(_1aca09e57_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1aca09e57_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1aca0d246_Name(_1aca0d5ba_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1aca0d8a6_What(_1aca0d5ba_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1aca0d9e9_Reset(_1aca0d5ba_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1aca0db3c_Short(_1aca0d5ba_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1aca0d5ba_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a90a9e45_FlagSet> static__1a90aa231_New(void) {
	return jule::new_ptr<_1a90a9e45_FlagSet>(_1a90a9e45_FlagSet{._field_flags=jule::Slice<jule::Trait>::alloc(0LL, 20LL)});;
}



inline jule::Trait _1a90aa6d7_FindFlag(_1a90a9e45_FlagSet* _self_, jule::Str _7127_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca1855e:;
		if (it != expr_end) {
			jule::Trait _7221_flag = *it;
			{
				if ((((_1a90a8372_CommonFlagMptrData*)_7221_flag.safe_type())->_1a9077231_Name(_7221_flag.data) == _7127_name)) {
					return _7221_flag;;
				};
			}
			_iter_next_1aca1855e:;
			++it;
			goto _iter_begin_1aca1855e;
		}
		_iter_end_1aca1855e:;
	};
	return nullptr;;
}



inline jule::Trait _1a90aaa28_FindFlagShort(_1a90a9e45_FlagSet* _self_, jule::I32 _8132_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca193d9:;
		if (it != expr_end) {
			jule::Trait _8221_flag = *it;
			{
				if ((((_1a90a8372_CommonFlagMptrData*)_8221_flag.safe_type())->_1a9077374_Short(_8221_flag.data) == _8132_name)) {
					return _8221_flag;;
				};
			}
			_iter_next_1aca193d9:;
			++it;
			goto _iter_begin_1aca193d9;
		}
		_iter_end_1aca193d9:;
	};
	return nullptr;;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _1a90ab100_Parse(_1a90a9e45_FlagSet* _self_, jule::Slice<jule::Str> _11524_args) {
	_1a90ac909_argParser _11613_ap = _1a90ac909_argParser{._field_set=(*(_self_)), ._field_args=_11524_args, };;
	({
		auto except = _1a90ade05_parse(&_11613_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>{.error=except.error};
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>{.result=_11613_ap._field_content};;
}



inline jule::Ptr<_1aca0d5ba_Flag> _1aca76be9_addFlagCommon(_1a90a9e45_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	if ((_1a90aa6d7_FindFlag(_self_, _13135_name) != nullptr)) {
		jule::panic((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:133:13"));;
	};
	if (((_13146_short != 0LL) && (_1a90aaa28_FindFlagShort(_self_, _13146_short) != nullptr))) {
		jule::panic((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + jule::Str::from_rune(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:137:13"));;
	};
	jule::Ptr<_1aca0d5ba_Flag> _14013_flag = jule::new_ptr<_1aca0d5ba_Flag>(_1aca0d5ba_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	{ jule::Slice<jule::Trait> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait(_14013_flag, (jule::Trait::Type*)&_1a90a8372_CommonFlag_mptr_data4)); };
	return _14013_flag;;
}

inline jule::Ptr<_1aca09e57_Flag> _1aca7deed_addFlagCommon(_1a90a9e45_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	if ((_1a90aa6d7_FindFlag(_self_, _13135_name) != nullptr)) {
		jule::panic((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:133:13"));;
	};
	if (((_13146_short != 0LL) && (_1a90aaa28_FindFlagShort(_self_, _13146_short) != nullptr))) {
		jule::panic((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + jule::Str::from_rune(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:137:13"));;
	};
	jule::Ptr<_1aca09e57_Flag> _14013_flag = jule::new_ptr<_1aca09e57_Flag>(_1aca09e57_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	{ jule::Slice<jule::Trait> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait(_14013_flag, (jule::Trait::Type*)&_1a90a8372_CommonFlag_mptr_data3)); };
	return _14013_flag;;
}



inline void _1aca744bb_AddVar(_1a90a9e45_FlagSet* _self_, jule::Ptr<jule::Str> _16762_var, jule::Str _16771_name, jule::I32 _16782_short, jule::Str _16795_what) {
	if ((_16762_var == nullptr)) {
		jule::panic(jule::Str::lit("std::flag: FlatSet.AddVar[T]: variable is nil", 45) + jule::Str("\nlocation: std/flag/flag.jule:169:13"));;
	};
	jule::Ptr<_1aca0d5ba_Flag> _17113_flag = _1aca76be9_addFlagCommon(_self_, _16771_name, _16782_short, _16795_what);;
	(*(_17113_flag))._field_default=(*(_16762_var));
	(*_17113_flag.alloc)._field_data=_16762_var;
}

inline void _1aca7b814_AddVar(_1a90a9e45_FlagSet* _self_, jule::Ptr<jule::Bool> _16762_var, jule::Str _16771_name, jule::I32 _16782_short, jule::Str _16795_what) {
	if ((_16762_var == nullptr)) {
		jule::panic(jule::Str::lit("std::flag: FlatSet.AddVar[T]: variable is nil", 45) + jule::Str("\nlocation: std/flag/flag.jule:169:13"));;
	};
	jule::Ptr<_1aca09e57_Flag> _17113_flag = _1aca7deed_addFlagCommon(_self_, _16771_name, _16782_short, _16795_what);;
	(*(_17113_flag))._field_default=(*(_16762_var));
	(*_17113_flag.alloc)._field_data=_16762_var;
}





std::ostream &operator<<(std::ostream &_Stream, _1a90a9e45_FlagSet _Src) {
	_Stream << "FlagSet{";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_i64__jule_tuple_bool _1aca2129d_parseInteger(_1a90ac909_argParser* _self_, jule::Str* _18531_s, jule::Fn<__jule_tuple_i64__jule_tuple_bool,jule::Str,jule::I64> _18539_parser) {
	__jule_tuple_i64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (((*(_18531_s))).empty()) {
			_case_begin_1aca23d94:;
			{
				__jule_func_result.__jule_result_arg0 = 0LL;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_1cb1bdb19_HasPrefix((*(_18531_s)), jule::Str::lit("0x", 2))) {
			_case_begin_1aca2425c:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18539_parser((*(_18531_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1cb1bdb19_HasPrefix((*(_18531_s)), jule::Str::lit("0b", 2))) {
			_case_begin_1aca238dd:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18539_parser((*(_18531_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1cb1bdb19_HasPrefix((*(_18531_s)), jule::Str::lit("0o", 2))) {
			_case_begin_1aca23954:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18539_parser((*(_18531_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_18531_s))[0LL] == '0')) {
			_case_begin_1aca239ba:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18539_parser((*(_18531_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1aca23877:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18539_parser((*(_18531_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1aca23778:;
	};
	return __jule_func_result;;
}

inline __jule_tuple_u64__jule_tuple_bool _1aca28c23_parseInteger(_1a90ac909_argParser* _self_, jule::Str* _18531_s, jule::Fn<__jule_tuple_u64__jule_tuple_bool,jule::Str,jule::I64> _18539_parser) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (((*(_18531_s))).empty()) {
			_case_begin_1aca2b7c5:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_1cb1bdb19_HasPrefix((*(_18531_s)), jule::Str::lit("0x", 2))) {
			_case_begin_1aca2bb8d:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18539_parser((*(_18531_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1cb1bdb19_HasPrefix((*(_18531_s)), jule::Str::lit("0b", 2))) {
			_case_begin_1aca2b31e:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18539_parser((*(_18531_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1cb1bdb19_HasPrefix((*(_18531_s)), jule::Str::lit("0o", 2))) {
			_case_begin_1aca2b385:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18539_parser((*(_18531_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_18531_s))[0LL] == '0')) {
			_case_begin_1aca2b3eb:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18539_parser((*(_18531_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1aca2b2a8:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18539_parser((*(_18531_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1aca2b1a9:;
	};
	return __jule_func_result;;
}



inline jule::Str _1a90ad223_getData(_1a90ac909_argParser* _self_) {
	if ((((*(_self_))._field_i + 1LL) >= (*(_self_))._field_args.len())) {
		return jule::Str();;
	};
	((*(_self_))._field_i)++;
	return (*(_self_))._field_args[(*(_self_))._field_i];;
}



inline jule::VoidExceptional _1a90ad498_processFlag(_1a90ac909_argParser* _self_, jule::Trait* _21235_flag) {
	{
		auto &_match_expr{ (*(_21235_flag)) };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a90a8372_CommonFlag_mptr_data3)) {
			_case_begin_1aca1d4a9:;
			{
				jule::Ptr<_1aca09e57_Flag> _21517_bf = (*(_21235_flag)).cast_ptr<_1aca09e57_Flag>((jule::Trait::Type*)&_1a90a8372_CommonFlag_mptr_data3);;
				(*((*(_21517_bf))._field_data))=(!((*_21517_bf.alloc)._field_default));
				return jule::VoidExceptional{};;
			}
		}
		_match_end_1aca1d454:;
	};
	jule::Str _2209_data = _1a90ad223_getData(_self_);;
	if ((_2209_data).empty()) {
		return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + ((_1a90a8372_CommonFlagMptrData*)(*(_21235_flag)).safe_type())->_1a9077231_Name((*(_21235_flag)).data)) + jule::Str::lit(": expression missing", 20)), &__jule_any_type4)};
	};
	{
		auto &_match_expr{ (*(_21235_flag)) };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a90a8372_CommonFlag_mptr_data0)) {
			_case_begin_1aca20357:;
			{
				jule::Ptr<_1ac9ee589_Flag> _22717_intf = (*(_21235_flag)).cast_ptr<_1ac9ee589_Flag>((jule::Trait::Type*)&_1a90a8372_CommonFlag_mptr_data0);;
				jule::Bool _22827_ok;
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _1aca2129d_parseInteger(_self_, &(_2209_data), jule::__new_closure<__jule_tuple_i64__jule_tuple_bool,jule::Str,jule::I64>((void*)__jule_anon1aca215de, nullptr, nullptr));
					(*((*(_22717_intf))._field_data)) = __jule_assign_result.__jule_result_arg0;
					_22827_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_22827_ok))) {
					return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + ((_1a90a8372_CommonFlagMptrData*)(*(_21235_flag)).safe_type())->_1a9077231_Name((*(_21235_flag)).data)) + jule::Str::lit(": expression must be valid signed integer", 41)), &__jule_any_type4)};
				};
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a90a8372_CommonFlag_mptr_data1)) {
			_case_begin_1aca1ec2a:;
			{
				jule::Ptr<_1aca0313c_Flag> _23517_uintf = (*(_21235_flag)).cast_ptr<_1aca0313c_Flag>((jule::Trait::Type*)&_1a90a8372_CommonFlag_mptr_data1);;
				jule::Bool _23628_ok;
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1aca28c23_parseInteger(_self_, &(_2209_data), jule::__new_closure<__jule_tuple_u64__jule_tuple_bool,jule::Str,jule::I64>((void*)__jule_anon1aca294a4, nullptr, nullptr));
					(*((*(_23517_uintf))._field_data)) = __jule_assign_result.__jule_result_arg0;
					_23628_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_23628_ok))) {
					return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + ((_1a90a8372_CommonFlagMptrData*)(*(_21235_flag)).safe_type())->_1a9077231_Name((*(_21235_flag)).data)) + jule::Str::lit(": expression must be valid unsigned integer", 43)), &__jule_any_type4)};
				};
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a90a8372_CommonFlag_mptr_data2)) {
			_case_begin_1aca203bd:;
			{
				jule::Ptr<_1aca067a0_Flag> _24317_ff = (*(_21235_flag)).cast_ptr<_1aca067a0_Flag>((jule::Trait::Type*)&_1a90a8372_CommonFlag_mptr_data2);;
				(*((*(_24317_ff))._field_data))=({
					auto except = _1b273a3e1_ParseFloat(_2209_data, 64LL);
					(except.ok()) ? (except.result) : ({{

						return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + ((_1a90a8372_CommonFlagMptrData*)(*(_21235_flag)).safe_type())->_1a9077231_Name((*(_21235_flag)).data)) + jule::Str::lit(": expression must be valid floating-point", 41)), &__jule_any_type4)};
					} 0;});
				});
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a90a8372_CommonFlag_mptr_data4)) {
			_case_begin_1aca20445:;
			{
				(*((*((*(_21235_flag)).cast_ptr<_1aca0d5ba_Flag>((jule::Trait::Type*)&_1a90a8372_CommonFlag_mptr_data4)))._field_data))=_2209_data;
			}
		}
		_match_end_1aca1eb3c:;
	};
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1a90ad751_singleDash(_1a90ac909_argParser* _self_, jule::Str* _25230_arg) {
	if (((*(_25230_arg)).len() == 1LL)) {
		return jule::VoidExceptional{.error=jule::Any(((*(_25230_arg)) + jule::Str::lit(": missing argument", 18)), &__jule_any_type4)};
	};
	{
		auto expr = (*(_25230_arg)).slice(1LL);
		char *it = expr.operator char*();
		const char *end = it + expr.len();
		std::size_t len;
		jule::I32 _25716_r;
		_iter_begin_1aca3305c:;
		std::tie(_25716_r, len) = jule::utf8_decode_rune_str(it, end - it);
		if (it < end) {
			{
				jule::Trait _25817_flag = _1a90aaa28_FindFlagShort(&(*(_self_))._field_set, _25716_r);;
				if ((_25817_flag == nullptr)) {
					return jule::VoidExceptional{.error=jule::Any((((*(_25230_arg)) + jule::Str::lit(": flag is not exist: ", 21)) + jule::Str::from_rune(_25716_r)), &__jule_any_type4)};
				};
				({
					auto except = _1a90ad498_processFlag(_self_, &(_25817_flag));
					if (!except.ok()) {
						return jule::VoidExceptional{.error=std::move(except.error)};
					}
				});
			}
			_iter_next_1aca3305c:;
			it += len;
			goto _iter_begin_1aca3305c;
		}
	};
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1a90ada09_doubleDash(_1a90ac909_argParser* _self_, jule::Str* _26630_arg) {
	if (((*(_26630_arg)).len() == 2LL)) {
		return jule::VoidExceptional{.error=jule::Any(((*(_26630_arg)) + jule::Str::lit(": missing argument", 18)), &__jule_any_type4)};
	};
	jule::Trait _27013_flag = _1a90aa6d7_FindFlag(&(*(_self_))._field_set, (*(_26630_arg)).slice(2LL));;
	if ((_27013_flag == nullptr)) {
		return jule::VoidExceptional{.error=jule::Any(((*(_26630_arg)) + jule::Str::lit(": flag is not exist", 19)), &__jule_any_type4)};
	};
	return _1a90ad498_processFlag(_self_, &(_27013_flag));
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1a90adc07_tryArg(_1a90ac909_argParser* _self_) {
	jule::Str _2789_arg = (*(_self_))._field_args[(*(_self_))._field_i];;
	if (((*(_self_))._field_args.len() == 0LL)) {
		return jule::VoidExceptional{};;
	};
	if ((_2789_arg[0LL] == '-')) {
		if (((_2789_arg.len() > 1LL) && (_2789_arg[1LL] == '-'))) {
			({
				auto except = _1a90ada09_doubleDash(_self_, &(_2789_arg));
				if (!except.ok()) {
					return jule::VoidExceptional{.error=std::move(except.error)};
				}
			});
			return jule::VoidExceptional{};;
		};
		({
			auto except = _1a90ad751_singleDash(_self_, &(_2789_arg));
			if (!except.ok()) {
				return jule::VoidExceptional{.error=std::move(except.error)};
			}
		});
		return jule::VoidExceptional{};;
	};
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_content; __jule_push_dest.push(_2789_arg); };
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1a90ade05_parse(_1a90ac909_argParser* _self_) {
	for (; ((*(_self_))._field_i < (*(_self_))._field_args.len()); ((*(_self_))._field_i)++) {
		{
			({
				auto except = _1a90adc07_tryArg(_self_);
				if (!except.ok()) {
					return jule::VoidExceptional{.error=std::move(except.error)};
				}
			});
		}
	_iter_next_1aca389e1:;
	}
	_iter_end_1aca389e1:;;
	return jule::VoidExceptional{};
}





std::ostream &operator<<(std::ostream &_Stream, _1a90ac909_argParser _Src) {
	_Stream << "argParser{";
	_Stream << "set:" << _Src._field_set << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "content:" << _Src._field_content << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a9026b3c_ObjectCoder> static__1a9027038_New(jule::Ptr<_1b57a68aa_IR>* _11524_ir, _1a9024d8d_SerializationInfo _11533_info) {
	jule::Ptr<_1a9026b3c_ObjectCoder> _11613_oc = jule::new_ptr<_1a9026b3c_ObjectCoder>(_1a9026b3c_ObjectCoder{._field_ir=(*(_11524_ir)), ._field_info=_11533_info, });;
	(*(_11613_oc))._field_ec=static__1b6458e96_new(&(_11613_oc));
	(*_11613_oc.alloc)._field_sc=static__1b644db06_new(&(_11613_oc));
	(*_11613_oc.alloc)._field_tc=static__1a9036e27_new(&(_11613_oc));
	return _11613_oc;;
}



inline void _1a90272e1_write(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, jule::Str _12625_s) {
	_1cb1db3d9_WriteStr(&(*(_self_))._field_Buf, _12625_s);
}



inline void _1a9027599_writeBytes(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, jule::Slice<jule::U8> _13030_b) {
	_1cb1db131_Write(&(*(_self_))._field_Buf, _13030_b);
}



inline void _1a9027797_addIndent(jule::Ptr<_1a9026b3c_ObjectCoder> _self_) {
	(*(_self_))._field_indentBuffer=jule::append((*_self_.alloc)._field_indentBuffer,jule::Slice<jule::U8>::make({9LLU}));
}



inline void _1a9027995_doneIndent(jule::Ptr<_1a9026b3c_ObjectCoder> _self_) {
	((*(_self_))._field_indentBuffer).mut_slice(0LL, ((*(_self_))._field_indentBuffer.len() - 1LL));;
}



inline void _1a9027b93_indent(jule::Ptr<_1a9026b3c_ObjectCoder> _self_) {
	_1cb1db131_Write(&(*(_self_))._field_Buf, (*_self_.alloc)._field_indentBuffer);
}



inline jule::I64 _1a9027ed4_findAnyType(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, jule::Ptr<_1b4c7c90e_TypeKind>* _14936_t) {
	{
		auto expr = &((*(_self_))._field_anyTypeMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac86d21b:;
		if (it != expr_end) {
			jule::I64 _15014_i = it - expr->begin();
			jule::Ptr<_1b4c7c90e_TypeKind> _15021_at = *it;
			{
				if (_1b4c7d118_Equal(_15021_at, (*(_14936_t)))) {
					return _15014_i;;
				};
			}
			_iter_next_1ac86d21b:;
			++it;
			_15014_i++;
			goto _iter_begin_1ac86d21b;
		}
		_iter_end_1ac86d21b:;
	};
	return -1LL;;
}



inline jule::I64 _1a9028325_pushDealloc(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _15835_t) {
	{
		auto expr = &((*(_self_))._field_deallocated);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac86e66d:;
		if (it != expr_end) {
			jule::I64 _15913_i = it - expr->begin();
			jule::Ptr<_1b4c7c90e_TypeKind> _15916_dt = *it;
			{
				if (_1b4c7d118_Equal(_15916_dt, _15835_t)) {
					return _15913_i;;
				};
			}
			_iter_next_1ac86e66d:;
			++it;
			_15913_i++;
			goto _iter_begin_1ac86e66d;
		}
		_iter_end_1ac86e66d:;
	};
	jule::I64 _1649_i = (*_self_.alloc)._field_deallocated.len();;
	(*_self_.alloc)._field_deallocated=jule::append((*_self_.alloc)._field_deallocated,jule::Slice<jule::Ptr<_1b4c7c90e_TypeKind>>::make({_15835_t}));
	_1cb1db3d9_WriteStr(&(*_self_.alloc)._field_deallocObj, jule::Str::lit("void __jule_type_deallocator", 28));
	_1cb1db3d9_WriteStr(&(*_self_.alloc)._field_deallocObj, _1b2745440_Itoa(_1649_i));
	_1cb1db3d9_WriteStr(&(*_self_.alloc)._field_deallocObj, jule::Str::lit("(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 56));
	_1a903baca_kind((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_deallocObj), _15835_t);
	_1cb1db3d9_WriteStr(&(*_self_.alloc)._field_deallocObj, jule::Str::lit(">().dealloc(); }\n", 17));
	return _1649_i;;
}



inline jule::Str _1a9028666_pushAnonFn(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, jule::Ptr<_1b4b2b857_AnonFnExprModel>* _17435_m) {
	jule::Str __jule_func_result;
	jule::Bool _1759_closure = _1b57b160c_IsClosure(_17435_m);;
	if (_1759_closure) {
		_1cb1db3d9_WriteStr(&(*(_self_))._field_anonObj, jule::Str::lit("struct ", 7));
		jule::I64 _17913_l = _1cb1dc165_Len(&(*_self_.alloc)._field_anonObj);;
		_1cb1db3d9_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("__jule_anon_", 12));
		_1cb1db3d9_WriteStr(&(*_self_.alloc)._field_anonObj, _1b2744cad_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*((*(_17435_m))))._field_Func)), 15LL));
		__jule_func_result=static_cast<jule::Str>(_1cb1dc682_Buf(&(*_self_.alloc)._field_anonObj).slice(_17913_l));
		_1cb1db3d9_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("_ctx{\n", 6));
		{
			auto expr = &((*((*(_17435_m))))._field_Captured);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac876004:;
			if (it != expr_end) {
				jule::Ptr<_1b4bddaa1_Var> _18425_v = *it;
				{
					_1cb1db692_WriteByte(&(*_self_.alloc)._field_anonObj, 9LLU);
					_1a903baca_kind((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_anonObj), (*((*(_18425_v))._field_Kind))._field_Kind);
					_1cb1db692_WriteByte(&(*_self_.alloc)._field_anonObj, ' ');
					if ((*_18425_v.alloc)._field_Reference) {
						_1cb1db692_WriteByte(&(*_self_.alloc)._field_anonObj, '*');
					};
					static__1b646e9b2_var(&((*_self_.alloc)._field_anonObj), _18425_v);
					_1cb1db3d9_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit(";\n", 2));
				}
				_iter_next_1ac876004:;
				++it;
				goto _iter_begin_1ac876004;
			}
			_iter_end_1ac876004:;
		};
		_1cb1db3d9_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("};\n", 3));
		_1cb1db3d9_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("static void ", 12));
		_1cb1db3d9_WriteStr(&(*_self_.alloc)._field_anonObj, __jule_func_result);
		_1cb1db3d9_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<", 55));
		_1cb1db3d9_WriteStr(&(*_self_.alloc)._field_anonObj, __jule_func_result);
		_1cb1db3d9_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("_ctx>().dealloc(); }\n", 21));
	} else {
		__jule_func_result=jule::Str::lit("__jule_anon", 11);
		__jule_func_result+=_1b2744cad_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*((*(_17435_m))))._field_Func)), 15LL);
	};
	(*(_self_))._field_anons=jule::append((*_self_.alloc)._field_anons,jule::Slice<jule::Ptr<_1a9025685_anonHash>>::make({jule::new_ptr<_1a9025685_anonHash>(_1a9025685_anonHash{._field_expr=(*(_17435_m)), ._field_ident=__jule_func_result})}));
	_1a902ea68_anonFuncInsDecl(_self_, _17435_m, __jule_func_result);
	_1cb1db692_WriteByte(&(*_self_.alloc)._field_anonObj, '\n');
	return __jule_func_result;;
}



inline jule::I64 _1a90289a7_pushAnyType(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _21435_t) {
	if ((_1b4c80813_Enum(_21435_t.ptr()) != nullptr)) {
		_21435_t=(*((*(_1b4c80813_Enum(_21435_t)))._field_Kind))._field_Kind;
	};
	jule::I64 _21813_i = _1a9027ed4_findAnyType(_self_, &(_21435_t));;
	if ((_21813_i != -1LL)) {
		return _21813_i;;
	};
	_21813_i=(*_self_.alloc)._field_anyTypeMap.len();
	(*_self_.alloc)._field_anyTypeMap=jule::append((*_self_.alloc)._field_anyTypeMap,jule::Slice<jule::Ptr<_1b4c7c90e_TypeKind>>::make({_21435_t}));
	jule::Str _2249_si = _1b2745440_Itoa(_21813_i);;
	if ((_1b4c802e6_Sptr(_21435_t) != nullptr)) {
		_1cb1d27a9_StrBuilder _22617_elemKind = static__1cb1d2a73_New(40LL);;
		_1a903baca_kind((*_self_.alloc)._field_tc.ptr(), &(_22617_elemKind), (*(_1b4c802e6_Sptr(_21435_t)))._field_Elem);
		jule::I64 _23013_di = _1a9028325_pushDealloc(_self_, (*(_1b4c802e6_Sptr(_21435_t)))._field_Elem);;
		_1cb1db3d9_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("struct jule::Any::Type ", 23));
		_1cb1db3d9_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("__jule_any_type", 15));
		_1cb1db3d9_WriteStr(&(*_self_.alloc)._field_anyObj, _2249_si);
		_1cb1db3d9_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("{.dealloc=__jule_type_deallocator", 33));
		_1cb1db3d9_WriteStr(&(*_self_.alloc)._field_anyObj, _1b2745440_Itoa(_23013_di));
		_1cb1db3d9_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(", .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};\n", 50));
		_1cb1db3d9_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
		_1cb1db3d9_WriteStr(&(*_self_.alloc)._field_anyObj, _2249_si);
		_1cb1db3d9_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_compare(const jule::Any &any, const ", 37));
		_1a9037cc4_asSptr((*_self_.alloc)._field_tc, &((*_self_.alloc)._field_anyObj), _1cb1dc682_Buf(&_22617_elemKind));
		_1cb1db3d9_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" &other) { return any.type == &__jule_any_type", 46));
		_1cb1db3d9_WriteStr(&(*_self_.alloc)._field_anyObj, _2249_si);
		_1cb1db3d9_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" && jule::ptr_equal(any.data.alloc, other.alloc); }\n", 52));
	} else {
		jule::Bool _24913_comparable = _1b4c7e009_Comparable(_21435_t);;
		_1cb1d27a9_StrBuilder _25017_kindB = static__1cb1d2a73_New(40LL);;
		_1a903baca_kind((*_self_.alloc)._field_tc.ptr(), &(_25017_kindB), _21435_t);
		jule::Slice<jule::U8> _25213_kind = _1cb1dc682_Buf(&_25017_kindB);;
		jule::I64 _25513_di = _1a9028325_pushDealloc(_self_, _21435_t);;
		if (_24913_comparable) {
			_1cb1db3d9_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
			_1cb1db3d9_WriteStr(&(*_self_.alloc)._field_anyObj, _2249_si);
			_1cb1db3d9_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<", 66));
			_1cb1db131_Write(&(*_self_.alloc)._field_anyObj, _25213_kind);
			_1cb1db3d9_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("*>(alloc) == *reinterpret_cast<", 31));
			_1cb1db131_Write(&(*_self_.alloc)._field_anyObj, _25213_kind);
			_1cb1db3d9_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("*>(other); }\n", 13));
		};
		_1cb1db3d9_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Str __jule_any_type", 25));
		_1cb1db3d9_WriteStr(&(*_self_.alloc)._field_anyObj, _2249_si);
		_1cb1db3d9_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<", 76));
		if ((_1b4c8057c_Ptr(_21435_t) == nullptr)) {
			_1cb1db3d9_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("const ", 6));
			_1cb1db131_Write(&(*_self_.alloc)._field_anyObj, _25213_kind);
		} else {
			_1cb1db131_Write(&(*_self_.alloc)._field_anyObj, _25213_kind);
			_1cb1db3d9_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("* const", 7));
		};
		_1cb1db3d9_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("*>(alloc)); }\n", 14));
		_1cb1db3d9_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("struct jule::Any::Type ", 23));
		_1cb1db3d9_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("__jule_any_type", 15));
		_1cb1db3d9_WriteStr(&(*_self_.alloc)._field_anyObj, _2249_si);
		_1cb1db3d9_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("{.dealloc=__jule_type_deallocator", 33));
		_1cb1db3d9_WriteStr(&(*_self_.alloc)._field_anyObj, _1b2745440_Itoa(_25513_di));
		_1cb1db3d9_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(", ", 2));
		if (_24913_comparable) {
			_1cb1db3d9_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(".eq=__jule_any_type", 19));
			_1cb1db3d9_WriteStr(&(*_self_.alloc)._field_anyObj, _2249_si);
			_1cb1db3d9_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_eq, ", 5));
		};
		_1cb1db3d9_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(".to_str=__jule_any_type", 23));
		_1cb1db3d9_WriteStr(&(*_self_.alloc)._field_anyObj, _2249_si);
		_1cb1db3d9_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_to_str};\n", 10));
		if (_24913_comparable) {
			_1cb1db3d9_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
			_1cb1db3d9_WriteStr(&(*_self_.alloc)._field_anyObj, _2249_si);
			_1cb1db3d9_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_compare(const jule::Any &any, const ", 37));
			_1cb1db131_Write(&(*_self_.alloc)._field_anyObj, _25213_kind);
			_1cb1db3d9_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" &other) { return any.type == &__jule_any_type", 46));
			_1cb1db3d9_WriteStr(&(*_self_.alloc)._field_anyObj, _2249_si);
			_1cb1db3d9_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" && __jule_any_type", 19));
			_1cb1db3d9_WriteStr(&(*_self_.alloc)._field_anyObj, _2249_si);
			_1cb1db3d9_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_eq(any.data.alloc, (void*)&other); }\n", 38));
		};
	};
	return _21813_i;;
}



inline void _1a9028c60_pushResultIns(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, jule::Ptr<_1b4b39865_FnIns>* _31338_f) {
	jule::Str _3149_s = static_cast<jule::Str>(_1a9041d88_code((*((*(_self_))._field_tc))._field_rc.ptr(), &((*((*(_31338_f))))._field_Result)));;
	jule::Bool _31512_ok;
	(*_self_.alloc)._field_resultMap.lookup(_3149_s, nullptr, &(_31512_ok));
	if (_31512_ok) {
		return;;
	};
	(*_self_.alloc)._field_resultMap[_3149_s]=false;
	_1cb1db3d9_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit("struct ", 7));
	_1cb1db3d9_WriteStr(&(*_self_.alloc)._field_resultDecls, _3149_s);
	_1cb1db3d9_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit(" {\n", 3));
	{
		auto expr = &((*(_1b4c81d86_Tup((*((*(_31338_f))))._field_Result.ptr())))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac89a3ad:;
		if (it != expr_end) {
			jule::I64 _32314_i = it - expr->begin();
			jule::Ptr<_1b4c7c90e_TypeKind> _32321_t = *it;
			{
				_1cb1db692_WriteByte(&(*_self_.alloc)._field_resultDecls, 9LLU);
				_1a903baca_kind((*_self_.alloc)._field_tc, &((*_self_.alloc)._field_resultDecls), _32321_t);
				_1cb1db692_WriteByte(&(*_self_.alloc)._field_resultDecls, ' ');
				_1cb1db3d9_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit("__jule_result_arg", 17));
				_1cb1db3d9_WriteStr(&(*_self_.alloc)._field_resultDecls, _1b2745440_Itoa(_32314_i));
				_1cb1db3d9_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit(";\n", 2));
			}
			_iter_next_1ac89a3ad:;
			++it;
			_32314_i++;
			goto _iter_begin_1ac89a3ad;
		}
		_iter_end_1ac89a3ad:;
	};
	_1cb1db3d9_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit("};\n", 3));
}



inline void _1a9029018_pushResult(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, jule::Ptr<_1b4b36884_Fn>* _33435_f) {
	if ((_1b4b36d07_IsVoid((*(_33435_f)).ptr()) || ((*((*((*(_33435_f))))._field_Result))._field_Idents.len() <= 1LL))) {
		return;;
	};
	jule::I64 _33813_n = (*((*(_33435_f))))._field_Instances.len();;
	if (((*((*(_33435_f))))._field_Generics.len() == 0LL)) {
		_33813_n=1LL;
	};
	{
		auto expr = (*((*(_33435_f))))._field_Instances.slice(0LL, _33813_n);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1ac8a045c:;
		if (it != expr_end) {
			jule::Ptr<_1b4b39865_FnIns> _34221_ins = *it;
			{
				_1a9028c60_pushResultIns(_self_, &(_34221_ins));
			}
			_iter_next_1ac8a045c:;
			++it;
			goto _iter_begin_1ac8a045c;
		}
		_iter_end_1ac8a045c:;
	};
}



inline void _1a902937b_pushAndWriteMaskMapper(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, jule::Ptr<_1b4b49c3d_Trait> _34746_t1, jule::Ptr<_1b4b49c3d_Trait> _34762_t2) {
	_1cb1d27a9_StrBuilder _34813_ident = static__1cb1d2a73_New(32LL);;
	_1cb1db3d9_WriteStr(&_34813_ident, jule::Str::lit("__jule_trait_offset_mapper_", 27));
	_1cb1db3d9_WriteStr(&_34813_ident, _1b2744cad_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_34762_t2)), 15LL));
	_1cb1db3d9_WriteStr(&_34813_ident, jule::Str::lit("_to_", 4));
	_1cb1db3d9_WriteStr(&_34813_ident, _1b2744cad_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_34746_t1)), 15LL));
	_1cb1db131_Write(&(*(_self_))._field_Buf, _1cb1dc682_Buf(&_34813_ident));
	{
		auto expr = &((*_self_.alloc)._field_traitCastMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac8a32c8:;
		if (it != expr_end) {
			_1a90252ab_traitCast _35616_m = *it;
			{
				if (((_35616_m._field_t1 == _34746_t1) && (_35616_m._field_t2 == _34762_t2))) {
					return;;
				};
			}
			_iter_next_1ac8a32c8:;
			++it;
			goto _iter_begin_1ac8a32c8;
		}
		_iter_end_1ac8a32c8:;
	};
	(*_self_.alloc)._field_traitCastMap=jule::append((*_self_.alloc)._field_traitCastMap,jule::Slice<_1a90252ab_traitCast>::make({_1a90252ab_traitCast{._field_t1=_34746_t1, ._field_t2=_34762_t2}}));
	;
	_1cb1db3d9_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("void *", 6));
	_1cb1db131_Write(&(*_self_.alloc)._field_anyObj, _1cb1dc682_Buf(&_34813_ident));
	_1cb1db3d9_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("(const void *data) noexcept { ", 30));
	_1cb1d27a9_StrBuilder _37013_t1Ident = static__1cb1d2a73_New(16LL);;
	_1cb1d27a9_StrBuilder _37113_t2Ident = static__1cb1d2a73_New(16LL);;
	static__1b646da27_traitDecl(&(_37013_t1Ident), _34746_t1);
	static__1b646da27_traitDecl(&(_37113_t2Ident), _34762_t2);
	{
		auto expr = &((*(_34746_t1))._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac8a38e4:;
		if (it != expr_end) {
			jule::Ptr<_1b4b218b3_Struct> _37521_s1 = *it;
			{
				{
					auto expr = &((*(_34762_t2))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac8a78a4:;
					if (it != expr_end) {
						jule::Ptr<_1b4b218b3_Struct> _37620_s2 = *it;
						{
							if ((_37521_s1 == _37620_s2)) {
								{
									auto expr = &((*(_37521_s1))._field_Instances);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1ac8a8740:;
									if (it != expr_end) {
										jule::Ptr<_1b4b24641_StructIns> _37833_s1i = *it;
										{
											jule::I64 _37925_i1 = _1b57b38ea_FindTraitTypeOffsetS(_34746_t1, _37833_s1i);;
											jule::I64 _38025_i2 = _1b57b38ea_FindTraitTypeOffsetS(_34762_t2, _37833_s1i);;
											_1cb1db3d9_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("if (data == &", 13));
											_1cb1db131_Write(&(*_self_.alloc)._field_anyObj, _1cb1dc682_Buf(&_37113_t2Ident));
											_1cb1db3d9_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_mptr_data", 10));
											_1cb1db3d9_WriteStr(&(*_self_.alloc)._field_anyObj, _1b2745440_Itoa(_38025_i2));
											_1cb1db3d9_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(") return &", 10));
											_1cb1db131_Write(&(*_self_.alloc)._field_anyObj, _1cb1dc682_Buf(&_37013_t1Ident));
											_1cb1db3d9_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_mptr_data", 10));
											_1cb1db3d9_WriteStr(&(*_self_.alloc)._field_anyObj, _1b2745440_Itoa(_37925_i1));
											_1cb1db3d9_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("; ", 2));
										}
										_iter_next_1ac8a8740:;
										++it;
										goto _iter_begin_1ac8a8740;
									}
									_iter_end_1ac8a8740:;
								};
							};
						}
						_iter_next_1ac8a78a4:;
						++it;
						goto _iter_begin_1ac8a78a4;
					}
					_iter_end_1ac8a78a4:;
				};
			}
			_iter_next_1ac8a38e4:;
			++it;
			goto _iter_begin_1ac8a38e4;
		}
		_iter_end_1ac8a38e4:;
	};
	_1cb1db3d9_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" jule::panic(\"trait casting failed because of an implementation mistake, this is a JuleC bug\"); return nullptr; }\n", 114));
}



inline void _1a9029634_locInfo(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, jule::Ptr<_1b4ad5712_Token>* _39828_t) {
	jule::Str *_39910_loc = &((*((*((*(_39828_t))))._field_File))._field_Path);;
	if (_20c58021e_Production) {
		{
			
			if (_1cb1bdb19_HasPrefix((*(_39910_loc)), _1cb39d9db_PathStdlib)) {
				_case_begin_1ac8adbeb:;
				{
					_1b6467559_cstrBytes(&((*(_self_))._field_Buf), (*(_39910_loc)).slice((_1cb1e0c6d_Dir(_1cb39d9db_PathStdlib).len() + 1LL)));
				}
			}
			else if (_1cb1bdb19_HasPrefix((*(_39910_loc)), (*((*(_self_))._field_ir))._field_Root)) {
				_case_begin_1ac8adcd9:;
				{
					_1b6467559_cstrBytes(&((*_self_.alloc)._field_Buf), (*(_39910_loc)).slice((_1cb1e0c6d_Dir((*(*_self_.alloc)._field_ir.alloc)._field_Root).len() + 1LL)));
				}
			}
			else {
				_case_begin_1ac8ad833:;
				{
					_1b6467559_cstrBytes(&((*(_self_))._field_Buf), (*(_39910_loc)));
				}
			}
			_match_end_1ac8ad767:;
		};
	} else {
		_1b6467559_cstrBytes(&((*(_self_))._field_Buf), (*(_39910_loc)));
	};
	_1a90272e1_write(_self_, jule::Str::lit(":", 1));
	_1a90272e1_write(_self_, _1b2745440_Itoa((*((*(_39828_t))))._field_Row));
	_1a90272e1_write(_self_, jule::Str::lit(":", 1));
	_1a90272e1_write(_self_, _1b2745440_Itoa((*((*(_39828_t))))._field_Column));
}



inline void _1a9029832_head(jule::Ptr<_1a9026b3c_ObjectCoder> _self_) {
	_1a901b5b0_Time _4259_time = static__1a901bb76_Now();;
	_1a901add9_AbsTime _4269_abs = _1a901d35e_Abs(&_4259_time);;
	_1a90272e1_write(_self_, jule::Str::lit("// Auto generated by JuleC.\n", 28));
	_1a90272e1_write(_self_, jule::Str::lit("// JuleC version: ", 18));
	_1a90272e1_write(_self_, jule::Str::lit("jule0.0.16 @master", 18));
	_1a90272e1_write(_self_, jule::Str::lit("\n", 1));
	_1a90272e1_write(_self_, jule::Str::lit("// Date: ", 9));
	_1a90272e1_write(_self_, _1b2744cad_FmtUint(_4269_abs._field_Day, 10LL));
	_1a90272e1_write(_self_, jule::Str::lit("/", 1));
	_1a90272e1_write(_self_, _1b2744cad_FmtUint(_4269_abs._field_Month, 10LL));
	_1a90272e1_write(_self_, jule::Str::lit("/", 1));
	_1a90272e1_write(_self_, _1b2744cad_FmtUint(_4269_abs._field_Year, 10LL));
	_1a90272e1_write(_self_, jule::Str::lit(" (DD/MM/YYYY) UTC\n//\n// Recomended Compile Command;\n// ", 55));
	_1a90272e1_write(_self_, (*_self_.alloc)._field_info._field_Compiler);
	_1a90272e1_write(_self_, jule::Str::lit(" ", 1));
	_1a90272e1_write(_self_, (*_self_.alloc)._field_info._field_CompilerCommand);
	_1a90272e1_write(_self_, jule::Str::lit("\n\n", 2));
	if (_20c58021e_Production) {
		_1a90272e1_write(_self_, jule::Str::lit("#define __JULE_ENABLE__PRODUCTION\n", 34));
	};
	if ((!(_20c57eb14_RC))) {
		_1a90272e1_write(_self_, jule::Str::lit("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43));
	};
	if ((!(_20c57eecc_Safety))) {
		_1a90272e1_write(_self_, jule::Str::lit("#define __JULE_DISABLE__SAFETY\n", 31));
	};
	_1a9029a30_links(_self_);
	_1a90272e1_write(_self_, jule::Str::lit("\n\n#include \"", 12));
	_1a90272e1_write(_self_, _1cb39e28e_PathApi);
	_1a90272e1_write(_self_, jule::Str::lit("\"\n\n", 3));
}



inline void _1a9029a30_links(jule::Ptr<_1a9026b3c_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac8ba345:;
		if (it != expr_end) {
			jule::Ptr<_1b4b9a893_ImportInfo> _46316_used = *it;
			{
				{
					
					if ((!((*(_46316_used))._field_Binded))) {
						_case_begin_1ac8bb159:;
						{
							goto _iter_next_1ac8ba345;
						}
					}
					else if (_1cb277a08_IsStdHeaderPath((*(_46316_used))._field_Path)) {
						_case_begin_1ac8bb1e2:;
						{
							_1a90272e1_write(_self_, jule::Str::lit("#include ", 9));
							_1a90272e1_write(_self_, (*_46316_used.alloc)._field_Path);
							_1a90272e1_write(_self_, jule::Str::lit("\n", 1));
						}
					}
					else if (_1cb277cd3_IsValidHeaderExt(_1cb1e0311_Ext((*(_46316_used))._field_Path))) {
						_case_begin_1ac8bb258:;
						{
							_1a90272e1_write(_self_, jule::Str::lit("#include \"", 10));
							_1a90272e1_write(_self_, (*_46316_used.alloc)._field_Path);
							_1a90272e1_write(_self_, jule::Str::lit("\"\n", 2));
						}
					}
					_match_end_1ac8bb016:;
				};
			}
			_iter_next_1ac8ba345:;
			++it;
			goto _iter_begin_1ac8ba345;
		}
		_iter_end_1ac8ba345:;
	};
}



inline void _1a9029cd8_prepareStructure(_1a9026b3c_ObjectCoder* _self_, jule::Ptr<_1b4b218b3_Struct>* _47940_s) {
	{
		auto expr = &((*((*(_47940_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac8bd03a:;
		if (it != expr_end) {
			jule::Ptr<_1b4b24641_StructIns> _48021_ins = *it;
			{
				{
					auto expr = &((*(_48021_ins))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac8be976:;
					if (it != expr_end) {
						jule::Ptr<_1b4b36884_Fn> _48125_m = *it;
						{
							if ((*(_48125_m))._field_Statically) {
								goto _iter_next_1ac8be976;
							};
							{
								auto expr = &((*_48125_m.alloc)._field_Instances);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1ac8c045a:;
								if (it != expr_end) {
									jule::Ptr<_1b4b39865_FnIns> _48529_mins = *it;
									{
										jule::Ptr<_1b4b387dc_ParamIns> _48625_p = (*(_48529_mins))._field_Params[0LL];;
										_1cb1d27a9_StrBuilder _48725_kind = static__1cb1d2a73_New(40LL);;
										_1a903baca_kind((*(_self_))._field_tc.ptr(), &(_48725_kind), (*(_48625_p))._field_Kind);
										if ((!(_1b4b35762_IsRef((*_48625_p.alloc)._field_Decl.ptr())))) {
											_1cb1db3d9_WriteStr(&_48725_kind, jule::Str::lit("*", 1));
										};
										(*_48625_p.alloc)._field_Kind=jule::new_ptr<_1b4c7c90e_TypeKind>(_1b4c7c90e_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a9035cc2_customType>(_1a9035cc2_customType{._field_kind=_1cb1dbbd1_Str(&_48725_kind)}), (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data27)});
									}
									_iter_next_1ac8c045a:;
									++it;
									goto _iter_begin_1ac8c045a;
								}
								_iter_end_1ac8c045a:;
							};
						}
						_iter_next_1ac8be976:;
						++it;
						goto _iter_begin_1ac8be976;
					}
					_iter_end_1ac8be976:;
				};
			}
			_iter_next_1ac8bd03a:;
			++it;
			goto _iter_begin_1ac8bd03a;
		}
		_iter_end_1ac8bd03a:;
	};
}



inline void _1a9029ed6_prepareStructures(jule::Ptr<_1a9026b3c_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac8be8dd:;
		if (it != expr_end) {
			jule::Ptr<_1b4b218b3_Struct> _50321_s = *it;
			{
				if (((*(_50321_s))._field_Token != nullptr)) {
					_1a9029cd8_prepareStructure(_self_.ptr(), &(_50321_s));
				};
			}
			_iter_next_1ac8be8dd:;
			++it;
			goto _iter_begin_1ac8be8dd;
		}
		_iter_end_1ac8be8dd:;
	};
}



inline void _1a902a28e_structurePlainDecl(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, jule::Ptr<_1b4b218b3_Struct>* _51043_s) {
	{
		auto expr = &((*((*(_51043_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac8c4a7a:;
		if (it != expr_end) {
			jule::Ptr<_1b4b24641_StructIns> _51121_ins = *it;
			{
				_1a90272e1_write(_self_, jule::Str::lit("struct ", 7));
				static__1b646e3da_structureIns(&((*_self_.alloc)._field_Buf), &(_51121_ins));
				_1a90272e1_write(_self_, jule::Str::lit(";\n", 2));
			}
			_iter_next_1ac8c4a7a:;
			++it;
			goto _iter_begin_1ac8c4a7a;
		}
		_iter_end_1ac8c4a7a:;
	};
}



inline void _1a902a48c_structurePlainDecls(jule::Ptr<_1a9026b3c_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac8c6065:;
		if (it != expr_end) {
			jule::Ptr<_1b4b218b3_Struct> _51921_s = *it;
			{
				if (((*(_51921_s))._field_Token != nullptr)) {
					_1a902a28e_structurePlainDecl(_self_, &(_51921_s));
				};
			}
			_iter_next_1ac8c6065:;
			++it;
			goto _iter_begin_1ac8c6065;
		}
		_iter_end_1ac8c6065:;
	};
}



inline void _1a902a745_fieldDecl(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, jule::Ptr<_1b4b23a91_FieldIns>* _52634_f) {
	_1a903baca_kind((*(_self_))._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*(_52634_f))))._field_Kind);
	_1a90272e1_write(_self_, jule::Str::lit(" ", 1));
	static__1b646e6c6_field(&((*_self_.alloc)._field_Buf), &((*((*(_52634_f))))._field_Decl));
	if (((*((*(_52634_f))))._field_Default == nullptr)) {
		if (_1a90436e7_shouldInitialized(&((*((*(_52634_f))))._field_Kind))) {
			_1a90272e1_write(_self_, jule::Str::lit(" = ", 3));
			_1b6466a97_initExpr((*_self_.alloc)._field_ec, (*((*(_52634_f))))._field_Kind);
		};
	} else {
		_1a90272e1_write(_self_, jule::Str::lit(" = ", 3));
		_1b645be22_possibleRefExpr((*_self_.alloc)._field_ec, (*((*((*(_52634_f))))._field_Default))._field_Model);
	};
	_1a90272e1_write(_self_, jule::Str::lit(";", 1));
}



inline void _1a902a9ed_structureDestructor(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, jule::Ptr<_1b4b24641_StructIns>* _54444_s) {
	;
	jule::Ptr<_1b4b36884_Fn> _5479_disposeMethod = _1b4b256a8_FindMethod((*(_54444_s)).ptr(), jule::Str::lit("Dispose", 7), false);;
	jule::Bool _54813_disposed = static__1b4be0047_Dispose(_5479_disposeMethod);;
	if ((!(_54813_disposed))) {
		return;;
	};
	_1a90272e1_write(_self_, jule::Str::lit("~", 1));
	static__1b646e3da_structureIns(&((*_self_.alloc)._field_Buf), _54444_s);
	_1a90272e1_write(_self_, jule::Str::lit("(void) { ", 9));
	static__1b646d450_func(&((*_self_.alloc)._field_Buf), &(_5479_disposeMethod));
	_1a90272e1_write(_self_, jule::Str::lit("(this); }", 9));
}



inline void _1a902ad61_structureOperatorEq(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, jule::Slice<jule::U8> _56039_ident, jule::Ptr<_1b4b24641_StructIns>* _56059_s) {
	if ((!((*((*(_56059_s))))._field_Comparable))) {
		return;;
	};
	if (((*((*(_56059_s))))._field_Operators._field_Eq != nullptr)) {
		_1a902b5e2_structureOperator(_self_, _56039_ident, &((*((*(_56059_s))))._field_Operators._field_Eq), jule::Str::lit("==", 2));
		return;;
	};
	_1a9027b93_indent(_self_);
	if (_1b57d021e_Inline) {
		_1a90272e1_write(_self_, jule::Str::lit("inline ", 7));
	};
	_1a90272e1_write(_self_, jule::Str::lit("bool operator==(", 16));
	_1a9027599_writeBytes(_self_, _56039_ident);
	_1a90272e1_write(_self_, jule::Str::lit(" _other) {", 10));
	if (((*((*(_56059_s))))._field_Fields.len() > 0LL)) {
		_1a9027797_addIndent(_self_);
		_1a90272e1_write(_self_, jule::Str::lit("\n", 1));
		_1a9027b93_indent(_self_);
		_1a90272e1_write(_self_, jule::Str::lit("return ", 7));
		_1a9027797_addIndent(_self_);
		jule::Bool _58317_writed = false;;
		{
			auto expr = &((*((*(_56059_s))))._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac8d4150:;
			if (it != expr_end) {
				jule::Ptr<_1b4b23a91_FieldIns> _58425_f = *it;
				{
					jule::Ptr<_1b4b24641_StructIns> _58617_strct = _1b4c815d3_Struct((*(_58425_f))._field_Kind.ptr());;
					if ((((_58617_strct != nullptr) && ((*_58617_strct.alloc)._field_Decl != nullptr)) && (*(*_58617_strct.alloc)._field_Decl.alloc)._field_Binded)) {
						goto _iter_next_1ac8d4150;
					};
					if (_58317_writed) {
						_1a90272e1_write(_self_, jule::Str::lit(" &&", 3));
					};
					_58317_writed=true;
					_1a90272e1_write(_self_, jule::Str::lit("\n", 1));
					_1a9027b93_indent(_self_);
					_1a90272e1_write(_self_, jule::Str::lit("this->", 6));
					_1cb1d27a9_StrBuilder _59721_fIdent = static__1cb1d2a73_New((*((*_58425_f.alloc)._field_Decl))._field_Ident.len());;
					static__1b646e6c6_field(&(_59721_fIdent), &((*_58425_f.alloc)._field_Decl));
					_1a9027599_writeBytes(_self_, _1cb1dc682_Buf(&_59721_fIdent));
					_1a90272e1_write(_self_, jule::Str::lit(" == _other.", 11));
					_1a9027599_writeBytes(_self_, _1cb1dc682_Buf(&_59721_fIdent));
				}
				_iter_next_1ac8d4150:;
				++it;
				goto _iter_begin_1ac8d4150;
			}
			_iter_end_1ac8d4150:;
		};
		_1a9027995_doneIndent(_self_);
		if ((!(_58317_writed))) {
			_1a90272e1_write(_self_, jule::Str::lit("true", 4));
		};
		_1a90272e1_write(_self_, jule::Str::lit(";\n", 2));
		_1a9027995_doneIndent(_self_);
		_1a9027b93_indent(_self_);
		_1a90272e1_write(_self_, jule::Str::lit("}", 1));
	} else {
		_1a90272e1_write(_self_, jule::Str::lit(" return true; }", 15));
	};
	_1a90272e1_write(_self_, jule::Str::lit("\n\n", 2));
}



inline void _1a902b1c4_structureOperatorNotEq(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, jule::Slice<jule::U8> _61742_ident, jule::Ptr<_1b4b24641_StructIns>* _61762_s) {
	if ((!((*((*(_61762_s))))._field_Comparable))) {
		return;;
	};
	_1a9027b93_indent(_self_);
	if (_1b57d021e_Inline) {
		_1a90272e1_write(_self_, jule::Str::lit("inline ", 7));
	};
	_1a90272e1_write(_self_, jule::Str::lit("bool operator!=(", 16));
	_1a9027599_writeBytes(_self_, _61742_ident);
	_1a90272e1_write(_self_, jule::Str::lit(" _other) { return !this->operator==(_other); }\n\n", 48));
}



inline void _1a902b5e2_structureOperator(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, jule::Slice<jule::U8> _63137_ident, jule::Ptr<_1b4b39865_FnIns>* _63157_f, jule::Str _63168_op) {
	if (((*(_63157_f)) == nullptr)) {
		return;;
	};
	jule::Bool _6369_unary = ((*((*(_63157_f))))._field_Params.len() == 1LL);;
	jule::Bool _6379_assignment = _1b4b36d07_IsVoid((*((*(_63157_f))))._field_Decl.ptr());;
	_1a9027b93_indent(_self_);
	if (_1b57d021e_Inline) {
		_1a90272e1_write(_self_, jule::Str::lit("inline ", 7));
	};
	if (_6379_assignment) {
		_1a9027599_writeBytes(_self_, _63137_ident);
		_1a90272e1_write(_self_, jule::Str::lit("&", 1));
	} else {
		if ((_1b4c80060_Prim((*((*(_63157_f))))._field_Result.ptr()) == nullptr)) {
			_1a9027599_writeBytes(_self_, _63137_ident);
		} else {
			_1a90272e1_write(_self_, jule::Str::lit("jule::Bool", 10));
		};
	};
	_1a90272e1_write(_self_, jule::Str::lit(" operator", 9));
	_1a90272e1_write(_self_, _63168_op);
	_1a90272e1_write(_self_, jule::Str::lit("(", 1));
	if ((!(_6369_unary))) {
		jule::Ptr<_1b4b387dc_ParamIns> _65917_p = (*((*(_63157_f))))._field_Params[1LL];;
		_1a903a8ba_paramIns((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_Buf), &(_65917_p));
		_1a90272e1_write(_self_, jule::Str::lit(" _other", 7));
	};
	_1a90272e1_write(_self_, jule::Str::lit(") { ", 4));
	if ((!(_6379_assignment))) {
		_1a90272e1_write(_self_, jule::Str::lit("return ", 7));
	};
	static__1b646d73b_funcIns(&((*_self_.alloc)._field_Buf), _63157_f);
	if ((!(_6369_unary))) {
		_1a90272e1_write(_self_, jule::Str::lit("(this, _other); ", 16));
		if (_6379_assignment) {
			_1a90272e1_write(_self_, jule::Str::lit("return *this; ", 14));
		};
		_1a90272e1_write(_self_, jule::Str::lit("}", 1));
	} else {
		_1a90272e1_write(_self_, jule::Str::lit("(this); }", 9));
	};
	_1a90272e1_write(_self_, jule::Str::lit("\n\n", 2));
}



inline void _1a902b89a_structureOperators(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, jule::Ptr<_1b4b24641_StructIns>* _68043_s) {
	_1cb1d27a9_StrBuilder _68113_sb = static__1cb1d2a73_New(40LL);;
	static__1b646e3da_structureIns(&(_68113_sb), _68043_s);
	jule::Slice<jule::U8> _6839_ident = _1cb1dc682_Buf(&_68113_sb);;
	_1a902ad61_structureOperatorEq(_self_, _6839_ident, _68043_s);
	_1a902b1c4_structureOperatorNotEq(_self_, _6839_ident, _68043_s);
	_1a902b5e2_structureOperator(_self_, _6839_ident, &((*((*(_68043_s))))._field_Operators._field_Gt), jule::Str::lit(">", 1));
	_1a902b5e2_structureOperator(_self_, _6839_ident, &((*((*(_68043_s))))._field_Operators._field_GtEq), jule::Str::lit(">=", 2));
	_1a902b5e2_structureOperator(_self_, _6839_ident, &((*((*(_68043_s))))._field_Operators._field_Lt), jule::Str::lit("<", 1));
	_1a902b5e2_structureOperator(_self_, _6839_ident, &((*((*(_68043_s))))._field_Operators._field_LtEq), jule::Str::lit("<=", 2));
	_1a902b5e2_structureOperator(_self_, _6839_ident, &((*((*(_68043_s))))._field_Operators._field_Shl), jule::Str::lit("<<", 2));
	_1a902b5e2_structureOperator(_self_, _6839_ident, &((*((*(_68043_s))))._field_Operators._field_Shr), jule::Str::lit(">>", 2));
	_1a902b5e2_structureOperator(_self_, _6839_ident, &((*((*(_68043_s))))._field_Operators._field_Add), jule::Str::lit("+", 1));
	_1a902b5e2_structureOperator(_self_, _6839_ident, &((*((*(_68043_s))))._field_Operators._field_Sub), jule::Str::lit("-", 1));
	_1a902b5e2_structureOperator(_self_, _6839_ident, &((*((*(_68043_s))))._field_Operators._field_Div), jule::Str::lit("/", 1));
	_1a902b5e2_structureOperator(_self_, _6839_ident, &((*((*(_68043_s))))._field_Operators._field_Mul), jule::Str::lit("*", 1));
	_1a902b5e2_structureOperator(_self_, _6839_ident, &((*((*(_68043_s))))._field_Operators._field_Mod), jule::Str::lit("%", 1));
	_1a902b5e2_structureOperator(_self_, _6839_ident, &((*((*(_68043_s))))._field_Operators._field_BitAnd), jule::Str::lit("&", 1));
	_1a902b5e2_structureOperator(_self_, _6839_ident, &((*((*(_68043_s))))._field_Operators._field_BitOr), jule::Str::lit("|", 1));
	_1a902b5e2_structureOperator(_self_, _6839_ident, &((*((*(_68043_s))))._field_Operators._field_BitXor), jule::Str::lit("^", 1));
	_1a902b5e2_structureOperator(_self_, _6839_ident, &((*((*(_68043_s))))._field_Operators._field_Neg), jule::Str::lit("-", 1));
	_1a902b5e2_structureOperator(_self_, _6839_ident, &((*((*(_68043_s))))._field_Operators._field_Pos), jule::Str::lit("+", 1));
	_1a902b5e2_structureOperator(_self_, _6839_ident, &((*((*(_68043_s))))._field_Operators._field_BitNot), jule::Str::lit("~", 1));
	_1a902b5e2_structureOperator(_self_, _6839_ident, &((*((*(_68043_s))))._field_Operators._field_AddAssign), jule::Str::lit("+=", 2));
	_1a902b5e2_structureOperator(_self_, _6839_ident, &((*((*(_68043_s))))._field_Operators._field_SubAssign), jule::Str::lit("-=", 2));
	_1a902b5e2_structureOperator(_self_, _6839_ident, &((*((*(_68043_s))))._field_Operators._field_DivAssign), jule::Str::lit("/=", 2));
	_1a902b5e2_structureOperator(_self_, _6839_ident, &((*((*(_68043_s))))._field_Operators._field_MulAssign), jule::Str::lit("*=", 2));
	_1a902b5e2_structureOperator(_self_, _6839_ident, &((*((*(_68043_s))))._field_Operators._field_ModAssign), jule::Str::lit("%=", 2));
	_1a902b5e2_structureOperator(_self_, _6839_ident, &((*((*(_68043_s))))._field_Operators._field_ShlAssign), jule::Str::lit("<<=", 3));
	_1a902b5e2_structureOperator(_self_, _6839_ident, &((*((*(_68043_s))))._field_Operators._field_ShrAssign), jule::Str::lit(">>=", 3));
	_1a902b5e2_structureOperator(_self_, _6839_ident, &((*((*(_68043_s))))._field_Operators._field_BitOrAssign), jule::Str::lit("|=", 2));
	_1a902b5e2_structureOperator(_self_, _6839_ident, &((*((*(_68043_s))))._field_Operators._field_BitAndAssign), jule::Str::lit("&=", 2));
	_1a902b5e2_structureOperator(_self_, _6839_ident, &((*((*(_68043_s))))._field_Operators._field_BitXorAssign), jule::Str::lit("^=", 2));
}



inline void _1a902bb53_structureInsDecl(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, jule::Ptr<_1b4b24641_StructIns>* _72141_s) {
	{
		auto expr = &((*((*(_72141_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac906c22:;
		if (it != expr_end) {
			jule::Ptr<_1b4b36884_Fn> _72221_m = *it;
			{
				if (_1a903483c_isHeadDecl(&(_72221_m))) {
					_1a902cea6_funcDecl(_self_, &(_72221_m), false);
				};
			}
			_iter_next_1ac906c22:;
			++it;
			goto _iter_begin_1ac906c22;
		}
		_iter_end_1ac906c22:;
	};
	_1a90272e1_write(_self_, jule::Str::lit("struct ", 7));
	static__1b646e3da_structureIns(&((*_self_.alloc)._field_Buf), _72141_s);
	_1a90272e1_write(_self_, jule::Str::lit(" {\n", 3));
	_1a9027797_addIndent(_self_);
	{
		auto expr = &((*((*(_72141_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac90752a:;
		if (it != expr_end) {
			jule::Ptr<_1b4b23a91_FieldIns> _73321_f = *it;
			{
				_1a9027b93_indent(_self_);
				_1a902a745_fieldDecl(_self_, &(_73321_f));
				_1a90272e1_write(_self_, jule::Str::lit("\n", 1));
			}
			_iter_next_1ac90752a:;
			++it;
			goto _iter_begin_1ac90752a;
		}
		_iter_end_1ac90752a:;
	};
	_1a9027b93_indent(_self_);
	_1a902a9ed_structureDestructor(_self_, _72141_s);
	_1a90272e1_write(_self_, jule::Str::lit("\n\n", 2));
	_1a902b89a_structureOperators(_self_, _72141_s);
	_1a90272e1_write(_self_, jule::Str::lit("\n", 1));
	_1a9027995_doneIndent(_self_);
	_1a9027b93_indent(_self_);
	_1a90272e1_write(_self_, jule::Str::lit("};", 2));
}



inline void _1a902be0b_structureDecl(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, jule::Ptr<_1b4b218b3_Struct>* _75138_s) {
	{
		auto expr = &((*((*(_75138_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac90c156:;
		if (it != expr_end) {
			jule::Ptr<_1b4b24641_StructIns> _75221_ins = *it;
			{
				_1a902bb53_structureInsDecl(_self_, &(_75221_ins));
			}
			_iter_next_1ac90c156:;
			++it;
			goto _iter_begin_1ac90c156;
		}
		_iter_end_1ac90c156:;
	};
}



inline void _1a902c109_structureDecls(jule::Ptr<_1a9026b3c_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac90c8c6:;
		if (it != expr_end) {
			jule::Ptr<_1b4b218b3_Struct> _75821_s = *it;
			{
				if (((*(_75821_s))._field_Token != nullptr)) {
					_1a902be0b_structureDecl(_self_, &(_75821_s));
					_1a90272e1_write(_self_, jule::Str::lit("\n", 1));
				};
			}
			_iter_next_1ac90c8c6:;
			++it;
			goto _iter_begin_1ac90c8c6;
		}
		_iter_end_1ac90c8c6:;
	};
}



inline void _1a902c307_structureMethodDecls(jule::Ptr<_1a9026b3c_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac90d8d8:;
		if (it != expr_end) {
			jule::Ptr<_1b4b218b3_Struct> _76721_s = *it;
			{
				if (((*(_76721_s))._field_Token != nullptr)) {
					{
						auto expr = &((*_76721_s.alloc)._field_Instances);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ac9109a6:;
						if (it != expr_end) {
							jule::Ptr<_1b4b24641_StructIns> _76929_ins = *it;
							{
								{
									auto expr = &((*(_76929_ins))._field_Methods);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1ac9113e1:;
									if (it != expr_end) {
										jule::Ptr<_1b4b36884_Fn> _77033_m = *it;
										{
											if ((!(_1a903483c_isHeadDecl(&(_77033_m))))) {
												_1a9029018_pushResult(_self_, &(_77033_m));
												_1a902cea6_funcDecl(_self_, &(_77033_m), false);
											};
										}
										_iter_next_1ac9113e1:;
										++it;
										goto _iter_begin_1ac9113e1;
									}
									_iter_end_1ac9113e1:;
								};
							}
							_iter_next_1ac9109a6:;
							++it;
							goto _iter_begin_1ac9109a6;
						}
						_iter_end_1ac9109a6:;
					};
				};
			}
			_iter_next_1ac90d8d8:;
			++it;
			goto _iter_begin_1ac90d8d8;
		}
		_iter_end_1ac90d8d8:;
	};
}



inline void _1a902c7d0_funcHead(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, _1cb1d27a9_StrBuilder* _78533_buf, jule::Ptr<_1b4b39865_FnIns>* _78555_f, jule::Bool _78566_ptr, jule::Str _78577_ident) {
	if ((((!(_78566_ptr)) && _1b57d021e_Inline) && (!(_1b4b37324_IsEntryPoint((*((*(_78555_f))))._field_Decl.ptr()))))) {
		_1cb1db3d9_WriteStr(_78533_buf, jule::Str::lit("inline ", 7));
	};
	_1a903b091_funcInsResult((*(_self_))._field_tc.ptr(), _78533_buf, _78555_f);
	if (_78566_ptr) {
		_1cb1db3d9_WriteStr(_78533_buf, jule::Str::lit("(*", 2));
		static__1b646d73b_funcIns(_78533_buf, _78555_f);
		_1cb1db692_WriteByte(_78533_buf, ')');
	} else {
		_1cb1db692_WriteByte(_78533_buf, ' ');
		if ((_78577_ident).empty()) {
			static__1b646d73b_funcIns(_78533_buf, _78555_f);
		} else {
			_1cb1db3d9_WriteStr(_78533_buf, _78577_ident);
		};
	};
}



inline void _1a902cb43_funcDeclIns(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, jule::Ptr<_1b4b39865_FnIns>* _80436_f, jule::Bool _80447_ptr) {
	_1a9027b93_indent(_self_);
	_1a902c7d0_funcHead(_self_, &((*_self_.alloc)._field_Buf), _80436_f, _80447_ptr, jule::Str());
	_1a902e0d9_paramsIns(_self_, &((*_self_.alloc)._field_Buf), _80436_f);
	_1a90272e1_write(_self_, jule::Str::lit(";\n", 2));
}



inline void _1a902cea6_funcDecl(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, jule::Ptr<_1b4b36884_Fn>* _81133_f, jule::Bool _81141_ptr) {
	{
		auto expr = &((*((*(_81133_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac9175d4:;
		if (it != expr_end) {
			jule::Ptr<_1b4b39865_FnIns> _81221_c = *it;
			{
				_1a902cb43_funcDeclIns(_self_, &(_81221_c), _81141_ptr);
			}
			_iter_next_1ac9175d4:;
			++it;
			goto _iter_begin_1ac9175d4;
		}
		_iter_end_1ac9175d4:;
	};
}



inline void _1a902d25e_funcDeclTrait(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, jule::Ptr<_1b4b36884_Fn>* _81738_f) {
	{
		auto expr = &((*((*(_81738_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac9184e7:;
		if (it != expr_end) {
			jule::Ptr<_1b4b39865_FnIns> _81821_c = *it;
			{
				jule::Ptr<_1b4c7c90e_TypeKind> _81917_k = (*((*(_81821_c))._field_Params[0LL]))._field_Kind;;
				(*((*_81821_c.alloc)._field_Params[0LL]))._field_Kind=_1a9024b3a_generalGCPtr;
				_1a902cb43_funcDeclIns(_self_, &(_81821_c), true);
				(*((*_81821_c.alloc)._field_Params[0LL]))._field_Kind=_81917_k;
			}
			_iter_next_1ac9184e7:;
			++it;
			goto _iter_begin_1ac9184e7;
		}
		_iter_end_1ac9184e7:;
	};
}



inline void _1a902d45c_funcDecls(jule::Ptr<_1a9026b3c_ObjectCoder> _self_) {
	_1b57a9050_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1b4b9d7b9_Package>*>((void*)__jule_anon_1ac91b20e, jule::Ptr<__jule_anon_1ac91b20e_ctx>::make(__jule_anon_1ac91b20e_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ac91b20e_ctx_handler));
}



inline void _1a902d715_traitDataTypeMethods(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, jule::Ptr<_1b4b49c3d_Trait>* _83945_t) {
	_1b57a9dec_IterTraitMethods(_83945_t, jule::__new_closure<void,jule::Ptr<_1b4b36884_Fn>*>((void*)__jule_anon_1ac91c70a, jule::Ptr<__jule_anon_1ac91c70a_ctx>::make(__jule_anon_1ac91c70a_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ac91c70a_ctx_handler));
}



inline void _1a902d913_traitDataTypes(jule::Ptr<_1a9026b3c_ObjectCoder> _self_) {
	_1b57a9050_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1b4b9d7b9_Package>*>((void*)__jule_anon_1ac922ce8, jule::Ptr<__jule_anon_1ac922ce8_ctx>::make(__jule_anon_1ac922ce8_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ac922ce8_ctx_handler));
}



inline void _1a902dc76_paramIns(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, _1cb1d27a9_StrBuilder* _87533_buf, jule::Ptr<_1b4b387dc_ParamIns>* _87555_p) {
	_1a903a8ba_paramIns((*(_self_))._field_tc.ptr(), _87533_buf, _87555_p);
	_1cb1db692_WriteByte(_87533_buf, ' ');
	static__1b646dd13_param(_87533_buf, &((*((*(_87555_p))))._field_Decl));
}



inline void _1a902e0d9_paramsIns(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, _1cb1d27a9_StrBuilder* _88134_buf, jule::Ptr<_1b4b39865_FnIns>* _88156_f) {
	if (((!((*((*(_88156_f))))._field_AsAnon)) && ((*((*(_88156_f))))._field_Params.len() == 0LL))) {
		_1cb1db3d9_WriteStr(_88134_buf, jule::Str::lit("(void)", 6));
		return;;
	};
	_1cb1db692_WriteByte(_88134_buf, '(');
	if ((*((*(_88156_f))))._field_AsAnon) {
		_1cb1db3d9_WriteStr(_88134_buf, jule::Str::lit("jule::Ptr<jule::Uintptr> __f_ctx", 32));
		if (((*((*(_88156_f))))._field_Params.len() > 0LL)) {
			_1cb1db3d9_WriteStr(_88134_buf, jule::Str::lit(", ", 2));
		};
	};
	{
		auto expr = &((*((*(_88156_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac92b3a6:;
		if (it != expr_end) {
			jule::I64 _89314_i = it - expr->begin();
			jule::Ptr<_1b4b387dc_ParamIns> _89321_p = *it;
			{
				_1a902dc76_paramIns(_self_, _88134_buf, &(_89321_p));
				if ((((*((*(_88156_f))))._field_Params.len() - _89314_i) > 1LL)) {
					_1cb1db3d9_WriteStr(_88134_buf, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1ac92b3a6:;
			++it;
			_89314_i++;
			goto _iter_begin_1ac92b3a6;
		}
		_iter_end_1ac92b3a6:;
	};
	_1cb1db692_WriteByte(_88134_buf, ')');
}



inline void _1a902e44c_varInitExpr(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, jule::Ptr<_1b4bddaa1_Var>* _90236_v, jule::Fn<void> _90245_init) {
	if ((*((*(_90236_v))))._field_Statically) {
		_1a90272e1_write(_self_, jule::Str::lit("static ", 7));
	};
	_1a903baca_kind((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*((*(_90236_v))))._field_Kind))._field_Kind);
	_1a90272e1_write(_self_, jule::Str::lit(" ", 1));
	if ((*((*(_90236_v))))._field_Reference) {
		_1a90272e1_write(_self_, jule::Str::lit("*", 1));
	};
	static__1b646e9b2_var(&((*_self_.alloc)._field_Buf), (*(_90236_v)));
	if ((_90245_init != nullptr)) {
		_1a90272e1_write(_self_, jule::Str::lit(" = ", 3));
		_90245_init();
	};
	_1a90272e1_write(_self_, jule::Str::lit(";", 1));
}



inline void _1a902e705_var(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, jule::Ptr<_1b4bddaa1_Var> _92027_v) {
	if (_1b4ad80e9_IsIgnoreIdent((*(_92027_v))._field_Ident)) {
		return;;
	};
	if ((((*_92027_v.alloc)._field_Value != nullptr) && ((*(*_92027_v.alloc)._field_Value.alloc)._field_Expr != nullptr))) {
		if (((*((*(*_92027_v.alloc)._field_Value.alloc)._field_Data))._field_Model != nullptr)) {
			if ((*_92027_v.alloc)._field_Reference) {
				_1a902e44c_varInitExpr(_self_, &(_92027_v), jule::__new_closure<void>((void*)__jule_anon_1ac933853, jule::Ptr<__jule_anon_1ac933853_ctx>::make(__jule_anon_1ac933853_ctx{._self_=_self_,._92027_v=_92027_v}).as<jule::Uintptr>(), __jule_anon_1ac933853_ctx_handler));
			} else {
				_1a902e44c_varInitExpr(_self_, &(_92027_v), jule::__new_closure<void>((void*)__jule_anon_1ac935954, jule::Ptr<__jule_anon_1ac935954_ctx>::make(__jule_anon_1ac935954_ctx{._self_=_self_,._92027_v=_92027_v}).as<jule::Uintptr>(), __jule_anon_1ac935954_ctx_handler));
			};
			return;;
		};
		_1a902e44c_varInitExpr(_self_, &(_92027_v), nullptr);
		return;;
	};
	if ((*_92027_v.alloc)._field_Reference) {
		_1a902e44c_varInitExpr(_self_, &(_92027_v), jule::__new_closure<void>((void*)__jule_anon_1ac938171, jule::Ptr<__jule_anon_1ac938171_ctx>::make(__jule_anon_1ac938171_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ac938171_ctx_handler));
		return;;
	};
	if (_1a90436e7_shouldInitialized(&((*((*_92027_v.alloc)._field_Kind))._field_Kind))) {
		_1a902e44c_varInitExpr(_self_, &(_92027_v), jule::__new_closure<void>((void*)__jule_anon_1ac9392e8, jule::Ptr<__jule_anon_1ac9392e8_ctx>::make(__jule_anon_1ac9392e8_ctx{._self_=_self_,._92027_v=_92027_v}).as<jule::Uintptr>(), __jule_anon_1ac9392e8_ctx_handler));
		return;;
	};
	_1a902e44c_varInitExpr(_self_, &(_92027_v), nullptr);
}



inline void _1a902ea68_anonFuncInsDecl(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, jule::Ptr<_1b4b2b857_AnonFnExprModel>* _95140_m, jule::Str _95161_ident) {
	_1a902c7d0_funcHead(_self_, &((*_self_.alloc)._field_anonObj), &((*((*(_95140_m))))._field_Func), false, _95161_ident);
	_1a902e0d9_paramsIns(_self_, &((*_self_.alloc)._field_anonObj), &((*((*(_95140_m))))._field_Func));
	_1cb1db692_WriteByte(&(*_self_.alloc)._field_anonObj, ';');
}



inline void _1a902edcb_anonFuncIns(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, jule::Ptr<_1b4b2b857_AnonFnExprModel>* _95736_m, jule::Str _95757_ident) {
	_1a902c7d0_funcHead(_self_, &((*_self_.alloc)._field_Buf), &((*((*(_95736_m))))._field_Func), false, _95757_ident);
	_1a902e0d9_paramsIns(_self_, &((*_self_.alloc)._field_Buf), &((*((*(_95736_m))))._field_Func));
	_1a90272e1_write(_self_, jule::Str::lit(" ", 1));
	_1b645514b_anonFuncScope((*_self_.alloc)._field_sc, (*(_95736_m)), _95757_ident);
	if (((*((*((*(_95736_m))))._field_Func))._field_Scope != nullptr)) {
		_1a90272e1_write(_self_, jule::Str::lit("\n\n", 2));
	};
}



inline void _1a903023e_funcIns(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, jule::Ptr<_1b4b39865_FnIns>* _96732_f, jule::Str _96743_ident) {
	_1a902c7d0_funcHead(_self_, &((*_self_.alloc)._field_Buf), _96732_f, false, _96743_ident);
	_1a902e0d9_paramsIns(_self_, &((*_self_.alloc)._field_Buf), _96732_f);
	_1a90272e1_write(_self_, jule::Str::lit(" ", 1));
	_1b6455404_funcScope((*_self_.alloc)._field_sc, (*(_96732_f)));
	if (((*((*(_96732_f))))._field_Scope != nullptr)) {
		_1a90272e1_write(_self_, jule::Str::lit("\n\n", 2));
	};
}



inline void _1a90304e7_func(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, jule::Ptr<_1b4b36884_Fn>* _97729_f) {
	{
		auto expr = &((*((*(_97729_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac942ad7:;
		if (it != expr_end) {
			jule::Ptr<_1b4b39865_FnIns> _97821_ins = *it;
			{
				_1a903023e_funcIns(_self_, &(_97821_ins), jule::Str());
			}
			_iter_next_1ac942ad7:;
			++it;
			goto _iter_begin_1ac942ad7;
		}
		_iter_end_1ac942ad7:;
	};
}



inline void _1a903085a_funcTrait(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, jule::Ptr<_1b4b24641_StructIns>* _98330_s, jule::Ptr<_1b4b39865_FnIns>* _98350_f) {
	(*((*(_98350_f))))._field_Scope=nullptr;
	_1cb1d27a9_StrBuilder _98613_nident = static__1cb1d2a73_New(30LL);;
	_1cb1db3d9_WriteStr(&_98613_nident, jule::Str::lit("__jule_trait_method_", 20));
	_1cb1db3d9_WriteStr(&_98613_nident, _1b2744cad_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*(_98350_f)))), 15LL));
	_1cb1db3d9_WriteStr(&_98613_nident, jule::Str::lit("_", 1));
	_1cb1db3d9_WriteStr(&_98613_nident, _1b2744cad_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*(_98330_s)))), 15LL));
	jule::Ptr<_1b4c7c90e_TypeKind> _99213_k = (*((*((*(_98350_f))))._field_Params[0LL]))._field_Kind;;
	(*((*((*(_98350_f))))._field_Params[0LL]))._field_Kind=_1a9024b3a_generalGCPtr;
	_1a903023e_funcIns(_self_, _98350_f, _1cb1dbbd1_Str(&_98613_nident));
	(*((*((*(_98350_f))))._field_Params[0LL]))._field_Kind=_99213_k;
}



inline __jule_tuple_x_1b4b39865_FnIns__jule_tuple_bool _1a9030b9b_findTraitMetMap(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, jule::Ptr<_1b4b36884_Fn>* _99840_m) {
	__jule_tuple_x_1b4b39865_FnIns__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1b4b39865_FnIns> _99913_mins = (*((*(_99840_m))))._field_Instances[0LL];;
	{
		auto expr = &((*(_self_))._field_traitMetMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac9483a1:;
		if (it != expr_end) {
			jule::Ptr<_1b4b39865_FnIns> _100018_f = it->first;
			{
				if (((((*((*(_100018_f))._field_Decl))._field_Public == (*((*(_99840_m))))._field_Public) && ((*(*_100018_f.alloc)._field_Decl.alloc)._field_Ident == (*((*(_99840_m))))._field_Ident)) && _1b4b3a48c_EqualFn(_100018_f, &(_99913_mins)))) {
					__jule_func_result.__jule_result_arg0 = _100018_f;
					__jule_func_result.__jule_result_arg1 = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1ac9483a1:;
			++it;
			goto _iter_begin_1ac9483a1;
		}
		_iter_end_1ac9483a1:;
	};
	__jule_func_result.__jule_result_arg0 = _99913_mins;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline void _1a903100e_traitWrapper(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, jule::Ptr<_1b4b49c3d_Trait>* _101037_t, jule::Ptr<_1b4b36884_Fn>* _101053_m) {
	_julec_label_1ac94aaac:;
	{
		auto expr = &((*((*(_101037_t))))._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac94ac55:;
		if (it != expr_end) {
			jule::Ptr<_1b4b218b3_Struct> _101221_imp = *it;
			{
				jule::Ptr<_1b4b39865_FnIns> _101317_mepf;
				jule::Bool _101323_exist;
				({
					__jule_tuple_x_1b4b39865_FnIns__jule_tuple_bool __jule_assign_result = _1a9030b9b_findTraitMetMap(_self_, _101053_m);
					_101317_mepf = __jule_assign_result.__jule_result_arg0;
					_101323_exist = __jule_assign_result.__jule_result_arg1;
				});
				if (_101323_exist) {
					jule::Slice<jule::Uintptr> _101621_vals = (*_self_.alloc)._field_traitMetMap[_101317_mepf];;
					{
						auto expr = &(_101621_vals);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ac94caae:;
						if (it != expr_end) {
							jule::Uintptr _101724_val = *it;
							{
								if ((_101724_val == static_cast<jule::Uintptr>(_101221_imp))) {
									goto _iter_next_1ac94ac55;
								};
							}
							_iter_next_1ac94caae:;
							++it;
							goto _iter_begin_1ac94caae;
						}
						_iter_end_1ac94caae:;
					};
					(*_self_.alloc)._field_traitMetMap[_101317_mepf]=jule::append(_101621_vals,jule::Slice<jule::Uintptr>::make({static_cast<jule::Uintptr>(_101221_imp)}));
				} else {
					(*_self_.alloc)._field_traitMetMap[_101317_mepf]=jule::append(jule::Slice<jule::Uintptr>::alloc(0LL, 0LL, 0),jule::Slice<jule::Uintptr>::make({static_cast<jule::Uintptr>(_101221_imp)}));
				};
				{
					auto expr = &((*(_101221_imp))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac94d5a4:;
					if (it != expr_end) {
						jule::Ptr<_1b4b24641_StructIns> _102725_ins = *it;
						{
							_1a903085a_funcTrait(_self_, &(_102725_ins), &(_101317_mepf));
							jule::Ptr<_1b4b36884_Fn> _103021_sm = _1b4b256a8_FindMethod(_102725_ins.ptr(), (*((*(_101053_m))))._field_Ident, false);;
							if (((_103021_sm == nullptr) || ((*(_103021_sm))._field_Instances.len() == 0LL))) {
								return;;
							};
							_1a9027797_addIndent(_self_);
							_1a90272e1_write(_self_, jule::Str::lit("{\n", 2));
							_1a9027b93_indent(_self_);
							if (((*((*(_101053_m))))._field_Exceptional || (!(_1b4b36d07_IsVoid((*(_101053_m)).ptr()))))) {
								_1a90272e1_write(_self_, jule::Str::lit("return ", 7));
							};
							static__1b646d450_func(&((*_self_.alloc)._field_Buf), &(_103021_sm));
							_1a90272e1_write(_self_, jule::Str::lit("(", 1));
							_1a90272e1_write(_self_, jule::Str::lit("_self_.as<", 10));
							_1a9039d81_structureIns((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_Buf), _102725_ins);
							_1a90272e1_write(_self_, jule::Str::lit(">()", 3));
							jule::Bool _104717_ptr = (!(_1b4b35762_IsRef((*((*(_101053_m))))._field_Params[0LL].ptr())));;
							if (_104717_ptr) {
								_1a90272e1_write(_self_, jule::Str::lit(".alloc", 6));
							};
							{
								auto expr = (*((*(_101053_m))))._field_Params.slice(1LL);
								auto it = expr.begin();
								auto expr_end = expr.end();
								_iter_begin_1ac9550e4:;
								if (it != expr_end) {
									jule::Ptr<_1b4b34db0_Param> _105124_mp = *it;
									{
										_1a90272e1_write(_self_, jule::Str::lit(", ", 2));
										static__1b646dd13_param(&((*_self_.alloc)._field_Buf), &(_105124_mp));
									}
									_iter_next_1ac9550e4:;
									++it;
									goto _iter_begin_1ac9550e4;
								}
								_iter_end_1ac9550e4:;
							};
							_1a90272e1_write(_self_, jule::Str::lit(");\n}\n", 5));
							_1a9027995_doneIndent(_self_);
						}
						_iter_next_1ac94d5a4:;
						++it;
						goto _iter_begin_1ac94d5a4;
					}
					_iter_end_1ac94d5a4:;
				};
			}
			_iter_next_1ac94ac55:;
			++it;
			goto _iter_begin_1ac94ac55;
		}
		_iter_end_1ac94ac55:;
	};
}



inline void _1a903120c_traitWrappers(jule::Ptr<_1a9026b3c_ObjectCoder> _self_) {
	_1b57a9050_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1b4b9d7b9_Package>*>((void*)__jule_anon_1ac957437, jule::Ptr<__jule_anon_1ac957437_ctx>::make(__jule_anon_1ac957437_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ac957437_ctx_handler));
}



inline void _1a9031570_traitDataMethods(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, jule::Ptr<_1b4b49c3d_Trait>* _107641_t, jule::Ptr<_1b4b24641_StructIns> _107652_s) {
	_1b57a9dec_IterTraitMethods(_107641_t, jule::__new_closure<void,jule::Ptr<_1b4b36884_Fn>*>((void*)__jule_anon_1ac9587bd, jule::Ptr<__jule_anon_1ac9587bd_ctx>::make(__jule_anon_1ac9587bd_ctx{._self_=_self_,._107652_s=_107652_s}).as<jule::Uintptr>(), __jule_anon_1ac9587bd_ctx_handler));
}



inline void _1a903198d_traitData(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, jule::Ptr<_1b4b49c3d_Trait>* _109334_t, jule::I64 _109345_i, jule::Ptr<_1b4b24641_StructIns>* _109358_s) {
	_1cb1d27a9_StrBuilder _109413_ident = static__1cb1d2a73_New((*((*(_109334_t))))._field_Ident.len());;
	static__1b646da27_traitDecl(&(_109413_ident), (*(_109334_t)));
	_1a90272e1_write(_self_, jule::Str::lit("static ", 7));
	_1a9027599_writeBytes(_self_, _1cb1dc682_Buf(&_109413_ident));
	_1a90272e1_write(_self_, jule::Str::lit("MptrData ", 9));
	_1a9027599_writeBytes(_self_, _1cb1dc682_Buf(&_109413_ident));
	_1a90272e1_write(_self_, jule::Str::lit("_mptr_data", 10));
	_1a90272e1_write(_self_, _1b2745440_Itoa(_109345_i));
	_1a90272e1_write(_self_, jule::Str::lit(" {\n", 3));
	_1a9027797_addIndent(_self_);
	_1a9027b93_indent(_self_);
	_1a90272e1_write(_self_, jule::Str::lit(".dealloc=__jule_type_deallocator", 32));
	_1a90272e1_write(_self_, _1b2745440_Itoa(_1a9028325_pushDealloc(_self_, jule::new_ptr<_1b4c7c90e_TypeKind>(_1b4c7c90e_TypeKind{._field_Kind=jule::Trait((*(_109358_s)), (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data0)}))));
	_1a90272e1_write(_self_, jule::Str::lit(",\n", 2));
	_1a9031570_traitDataMethods(_self_, _109334_t, (*(_109358_s)));
	_1a9027995_doneIndent(_self_);
	_1a90272e1_write(_self_, jule::Str::lit("};\n", 3));
}



inline void _1a9031b8b_traitDatas(jule::Ptr<_1a9026b3c_ObjectCoder> _self_) {
	_1b57a9050_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1b4b9d7b9_Package>*>((void*)__jule_anon_1ac9660c2, jule::Ptr<__jule_anon_1ac9660c2_ctx>::make(__jule_anon_1ac9660c2_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ac9660c2_ctx_handler));
}



inline void _1a9031d89_globals(jule::Ptr<_1a9026b3c_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Globals);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac96581e:;
		if (it != expr_end) {
			jule::Ptr<_1b4bddaa1_Var> _113021_v = *it;
			{
				_1a903baca_kind((*(_self_))._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*(_113021_v))._field_Kind))._field_Kind);
				_1a90272e1_write(_self_, jule::Str::lit(" ", 1));
				static__1b646e9b2_var(&((*_self_.alloc)._field_Buf), _113021_v);
				_1a90272e1_write(_self_, jule::Str::lit(" = ", 3));
				_1b64667de_model((*_self_.alloc)._field_ec, (*((*((*_113021_v.alloc)._field_Value))._field_Data))._field_Model);
				_1a90272e1_write(_self_, jule::Str::lit(";\n", 2));
			}
			_iter_next_1ac96581e:;
			++it;
			goto _iter_begin_1ac96581e;
		}
		_iter_end_1ac96581e:;
	};
}



inline void _1a9032087_decls(jule::Ptr<_1a9026b3c_ObjectCoder> _self_) {
	_1a902a48c_structurePlainDecls(_self_);
	_1a902c109_structureDecls(_self_);
	(*_self_.alloc)._field_headPos=_1cb1dc165_Len(&(*_self_.alloc)._field_Buf);
	_1a902c307_structureMethodDecls(_self_);
	_1a902d45c_funcDecls(_self_);
	_1a90272e1_write(_self_, jule::Str::lit("\n\n", 2));
	_1a902d913_traitDataTypes(_self_);
	_1a90272e1_write(_self_, jule::Str::lit("\n\n", 2));
	(*_self_.alloc)._field_wrapPos=_1cb1dc165_Len(&(*_self_.alloc)._field_Buf);
	_1a903120c_traitWrappers(_self_);
	_1a90272e1_write(_self_, jule::Str::lit("\n\n", 2));
	_1a9031b8b_traitDatas(_self_);
	_1a90272e1_write(_self_, jule::Str::lit("\n\n", 2));
	(*_self_.alloc)._field_declPos=_1cb1dc165_Len(&(*_self_.alloc)._field_Buf);
	_1a9031d89_globals(_self_);
}



inline void _1a9032340_structureMethods(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, jule::Ptr<_1b4b24641_StructIns>* _115841_s) {
	{
		auto expr = &((*((*(_115841_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac971d47:;
		if (it != expr_end) {
			jule::Ptr<_1b4b36884_Fn> _115921_f = *it;
			{
				_1a90304e7_func(_self_, &(_115921_f));
				_1a90272e1_write(_self_, jule::Str::lit("\n\n", 2));
			}
			_iter_next_1ac971d47:;
			++it;
			goto _iter_begin_1ac971d47;
		}
		_iter_end_1ac971d47:;
	};
}



inline void _1a90325e8_structureOstream(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, jule::Ptr<_1b4b24641_StructIns>* _116541_s) {
	_1a9027b93_indent(_self_);
	_1a90272e1_write(_self_, jule::Str::lit("std::ostream &operator<<(std::ostream &_Stream, ", 48));
	static__1b646e3da_structureIns(&((*_self_.alloc)._field_Buf), _116541_s);
	_1a90272e1_write(_self_, jule::Str::lit(" _Src) {\n", 9));
	_1a9027797_addIndent(_self_);
	_1a9027b93_indent(_self_);
	jule::Ptr<_1b4b36884_Fn> _117313_fts = _1b4b256a8_FindMethod((*(_116541_s)).ptr(), jule::Str::lit("Str", 3), false);;
	if (static__1b4be0311_Str(_117313_fts)) {
		_1a90272e1_write(_self_, jule::Str::lit("_Stream << ", 11));
		static__1b646d450_func(&((*_self_.alloc)._field_Buf), &(_117313_fts));
		_1a90272e1_write(_self_, jule::Str::lit("(&_Src);\n", 9));
	} else {
		_1a90272e1_write(_self_, jule::Str::lit("_Stream << \"", 12));
		_1b6467559_cstrBytes(&((*_self_.alloc)._field_Buf), (*((*((*(_116541_s))))._field_Decl))._field_Ident);
		_1a90272e1_write(_self_, jule::Str::lit("{\";\n", 4));
		{
			auto expr = &((*((*(_116541_s))))._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac976984:;
			if (it != expr_end) {
				jule::I64 _118318_i = it - expr->begin();
				jule::Ptr<_1b4b23a91_FieldIns> _118325_f = *it;
				{
					_1a9027b93_indent(_self_);
					_1a90272e1_write(_self_, jule::Str::lit("_Stream << \"", 12));
					_1b6467559_cstrBytes(&((*_self_.alloc)._field_Buf), (*((*(_118325_f))._field_Decl))._field_Ident);
					_1a90272e1_write(_self_, jule::Str::lit(":", 1));
					jule::Ptr<_1b4b24641_StructIns> _119017_strct = _1b4c815d3_Struct((*_118325_f.alloc)._field_Kind.ptr());;
					if ((((_119017_strct != nullptr) && ((*_119017_strct.alloc)._field_Decl != nullptr)) && (*(*_119017_strct.alloc)._field_Decl.alloc)._field_Binded)) {
						_1a90272e1_write(_self_, jule::Str::lit(" cpp.", 5));
						static__1b646e6c6_field(&((*_self_.alloc)._field_Buf), &((*_118325_f.alloc)._field_Decl));
						_1a90272e1_write(_self_, jule::Str::lit("\"", 1));
					} else {
						_1a90272e1_write(_self_, jule::Str::lit("\" << _Src.", 10));
						static__1b646e6c6_field(&((*_self_.alloc)._field_Buf), &((*_118325_f.alloc)._field_Decl));
					};
					if (((_118318_i + 1LL) < (*((*(_116541_s))))._field_Fields.len())) {
						_1a90272e1_write(_self_, jule::Str::lit(" << \", \"", 8));
					};
					_1a90272e1_write(_self_, jule::Str::lit(";\n", 2));
				}
				_iter_next_1ac976984:;
				++it;
				_118318_i++;
				goto _iter_begin_1ac976984;
			}
			_iter_end_1ac976984:;
		};
		_1a9027b93_indent(_self_);
		_1a90272e1_write(_self_, jule::Str::lit("_Stream << \"}\";\n", 16));
	};
	_1a9027b93_indent(_self_);
	_1a90272e1_write(_self_, jule::Str::lit("return _Stream;\n", 16));
	_1a9027995_doneIndent(_self_);
	_1a90272e1_write(_self_, jule::Str::lit("}", 1));
}



inline void _1a90328a1_structureIns(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, jule::Ptr<_1b4b24641_StructIns>* _121637_s) {
	_1a9032340_structureMethods(_self_, _121637_s);
	_1a90272e1_write(_self_, jule::Str::lit("\n\n", 2));
	_1a90325e8_structureOstream(_self_, _121637_s);
}



inline void _1a9032b59_structure(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, jule::Ptr<_1b4b218b3_Struct>* _122234_s) {
	{
		auto expr = &((*((*(_122234_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac980c35:;
		if (it != expr_end) {
			jule::Ptr<_1b4b24641_StructIns> _122321_ins = *it;
			{
				_1a90328a1_structureIns(_self_, &(_122321_ins));
				_1a90272e1_write(_self_, jule::Str::lit("\n\n", 2));
			}
			_iter_next_1ac980c35:;
			++it;
			goto _iter_begin_1ac980c35;
		}
		_iter_end_1ac980c35:;
	};
}



inline void _1a9032d57_structures(jule::Ptr<_1a9026b3c_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac981483:;
		if (it != expr_end) {
			jule::Ptr<_1b4b218b3_Struct> _123021_s = *it;
			{
				if (((*(_123021_s))._field_Token != nullptr)) {
					_1a9032b59_structure(_self_, &(_123021_s));
					_1a90272e1_write(_self_, jule::Str::lit("\n\n", 2));
				};
			}
			_iter_next_1ac981483:;
			++it;
			goto _iter_begin_1ac981483;
		}
		_iter_end_1ac981483:;
	};
}



inline void _1a9033055_funcs(jule::Ptr<_1a9026b3c_ObjectCoder> _self_) {
	_1b57a9050_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1b4b9d7b9_Package>*>((void*)__jule_anon_1ac984057, jule::Ptr<__jule_anon_1ac984057_ctx>::make(__jule_anon_1ac984057_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ac984057_ctx_handler));
}



inline void _1a903330d_pushInit(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, jule::Ptr<_1b4b9d7b9_Package>* _125433_pkg) {
	_1b57a9380_IterFiles(_125433_pkg, jule::__new_closure<void,jule::Ptr<_1b4c41340_SymbolTable>*>((void*)__jule_anon_1ac985531, jule::Ptr<__jule_anon_1ac985531_ctx>::make(__jule_anon_1ac985531_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ac985531_ctx_handler));
}



inline void _1a903350b_anonHashes(jule::Ptr<_1a9026b3c_ObjectCoder> _self_) {
	_julec_label_1ac98903a:;
	jule::Slice<jule::Ptr<_1a9025685_anonHash>> _127113_anons = (*(_self_))._field_anons;;
	(*_self_.alloc)._field_anons=nullptr;
	{
		auto expr = &(_127113_anons);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac988a40:;
		if (it != expr_end) {
			jule::Ptr<_1a9025685_anonHash> _127321_h = *it;
			{
				_1a902edcb_anonFuncIns(_self_, &((*(_127321_h))._field_expr), (*_127321_h.alloc)._field_ident);
			}
			_iter_next_1ac988a40:;
			++it;
			goto _iter_begin_1ac988a40;
		}
		_iter_end_1ac988a40:;
	};
	if (((*_self_.alloc)._field_anons.len() > 0LL)) {
		goto _julec_label_1ac98903a;
	};
}



inline void _1a9033709_initCaller(jule::Ptr<_1a9026b3c_ObjectCoder> _self_) {
	_1a90272e1_write(_self_, jule::Str::lit("void __jule_call_initializers(void) {\n", 38));
	_1a9027797_addIndent(_self_);
	_1b57a9050_IterPackages(&((*_self_.alloc)._field_ir), jule::__new_closure<void,jule::Ptr<_1b4b9d7b9_Package>*>((void*)__jule_anon_1ac98d308, jule::Ptr<__jule_anon_1ac98d308_ctx>::make(__jule_anon_1ac98d308_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ac98d308_ctx_handler));
	_1a9027995_doneIndent(_self_);
	_1a90272e1_write(_self_, jule::Str::lit("\n}", 2));
}



inline void _1a9033907_end(jule::Ptr<_1a9026b3c_ObjectCoder> _self_) {
	_1a90272e1_write(_self_, jule::Str::lit("int main(int argc, char *argv[], char *envp[]) {\n    jule::setup_argv(argc, argv);\n    jule::setup_envp(envp);\n\n    __jule_call_initializers();\n    ", 148));
	if (_20c57e85b_Test) {
		_1a90272e1_write(_self_, jule::Str::lit("test_point();", 13));
	} else {
		_1a90272e1_write(_self_, jule::Str::lit("entry_point();", 14));
	};
	_1a90272e1_write(_self_, jule::Str::lit("\n\n    return EXIT_SUCCESS;\n}", 28));
}



inline void _1a9033c6a_insertBuf(jule::Ptr<_1a9026b3c_ObjectCoder> _self_, _1cb1d27a9_StrBuilder* _131134_buf, jule::I64 _131151_pos) {
	if ((_1cb1dc165_Len(_131134_buf) > 0LL)) {
		jule::Slice<jule::U8> _131317_head = jule::Slice<jule::U8>::alloc(0LL, (_1cb1dc165_Len(&(*(_self_))._field_Buf) + _1cb1dc165_Len(_131134_buf)), 0);;
		(_131317_head).append(_1cb1dc682_Buf(&(*_self_.alloc)._field_Buf).slice(0LL, _131151_pos));;
		(_131317_head).append(_1cb1dc682_Buf(_131134_buf));;
		(_131317_head).append(_1cb1dc682_Buf(&(*_self_.alloc)._field_Buf).slice(_131151_pos));;
		{
			_1cb1dc93a_SetBuf(&(*_self_.alloc)._field_Buf, _131317_head);
		};
	};
}



inline void _1a9033e68_serializeHead(jule::Ptr<_1a9026b3c_ObjectCoder> _self_) {
	_1a9029ed6_prepareStructures(_self_);
	_1a9029832_head(_self_);
	_1a90272e1_write(_self_, jule::Str::lit("\n", 1));
	_1a9032087_decls(_self_);
	_1a9033c6a_insertBuf(_self_, &((*_self_.alloc)._field_resultDecls), (*_self_.alloc)._field_headPos);
	(*_self_.alloc)._field_wrapPos+=_1cb1dc165_Len(&(*_self_.alloc)._field_resultDecls);
	(*_self_.alloc)._field_declPos+=_1cb1dc165_Len(&(*_self_.alloc)._field_resultDecls);
	_1a90272e1_write(_self_, jule::Str::lit("\n", 1));
	_1a9032d57_structures(_self_);
	_1a9033055_funcs(_self_);
	_1a9033709_initCaller(_self_);
	_1a90272e1_write(_self_, jule::Str::lit("\n\n", 2));
	_1a903350b_anonHashes(_self_);
	_1a9033c6a_insertBuf(_self_, &((*_self_.alloc)._field_deallocObj), (*_self_.alloc)._field_wrapPos);
	(*_self_.alloc)._field_wrapPos+=_1cb1dc165_Len(&(*_self_.alloc)._field_deallocObj);
	(*_self_.alloc)._field_declPos+=_1cb1dc165_Len(&(*_self_.alloc)._field_deallocObj);
	_1a9033c6a_insertBuf(_self_, &((*_self_.alloc)._field_anyObj), (*_self_.alloc)._field_declPos);
	(*_self_.alloc)._field_declPos+=_1cb1dc165_Len(&(*_self_.alloc)._field_anyObj);
	_1a9033c6a_insertBuf(_self_, &((*_self_.alloc)._field_anonObj), (*_self_.alloc)._field_declPos);
	(*_self_.alloc)._field_declPos+=_1cb1dc165_Len(&(*_self_.alloc)._field_anonObj);
}



inline void _1a9034166_Serialize(jule::Ptr<_1a9026b3c_ObjectCoder> _self_) {
	_1a9033e68_serializeHead(_self_);
	_1a9033907_end(_self_);
}





std::ostream &operator<<(std::ostream &_Stream, _1a9026b3c_ObjectCoder _Src) {
	_Stream << "ObjectCoder{";
	_Stream << "Buf:" << _Src._field_Buf << ", ";
	_Stream << "resultDecls:" << _Src._field_resultDecls << ", ";
	_Stream << "anyObj:" << _Src._field_anyObj << ", ";
	_Stream << "anonObj:" << _Src._field_anonObj << ", ";
	_Stream << "deallocObj:" << _Src._field_deallocObj << ", ";
	_Stream << "ir:" << _Src._field_ir << ", ";
	_Stream << "info:" << _Src._field_info << ", ";
	_Stream << "anons:" << _Src._field_anons << ", ";
	_Stream << "deallocated:" << _Src._field_deallocated << ", ";
	_Stream << "indentBuffer:" << _Src._field_indentBuffer << ", ";
	_Stream << "resultMap:" << _Src._field_resultMap << ", ";
	_Stream << "anyTypeMap:" << _Src._field_anyTypeMap << ", ";
	_Stream << "traitCastMap:" << _Src._field_traitCastMap << ", ";
	_Stream << "traitMetMap:" << _Src._field_traitMetMap << ", ";
	_Stream << "ec:" << _Src._field_ec << ", ";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "tc:" << _Src._field_tc << ", ";
	_Stream << "headPos:" << _Src._field_headPos << ", ";
	_Stream << "declPos:" << _Src._field_declPos << ", ";
	_Stream << "wrapPos:" << _Src._field_wrapPos;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b57c9779_dataCheckpoint _Src) {
	_Stream << "dataCheckpoint{";
	_Stream << "boundary:" << _Src._field_boundary << ", ";
	_Stream << "nils:" << _Src._field_nils << ", ";
	_Stream << "dynamic:" << _Src._field_dynamic;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b5906e28_ObjectDeadCode> static__1b5937046_new(jule::Ptr<_1b57a68aa_IR>* _3524_ir) {
	return jule::new_ptr<_1b5906e28_ObjectDeadCode>(_1b5906e28_ObjectDeadCode{._field_ir=(*(_3524_ir))});;
}



inline jule::Bool _1ac17bc4a_isLive(jule::Ptr<_1b5906e28_ObjectDeadCode> _self_, jule::Ptr<_1b4b49c3d_Trait>* _4130_t) {
	jule::Slice<jule::Ptr<_1b4b49c3d_Trait>> _4217_live = nullptr;;
	{
		
{
			_case_begin_1ac17d961:;
			{
				_4217_live=(*(_self_))._field_live._field_traits;
			}
		}
		_match_end_1ac17d7c9:;
	};
	{
		auto expr = &(_4217_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac17ea0b:;
		if (it != expr_end) {
			jule::I64 _5313_i = it - expr->begin();
			{
				if ((_4217_live[_5313_i] == (*(_4130_t)))) {
					return true;;
				};
			}
			_iter_next_1ac17ea0b:;
			++it;
			_5313_i++;
			goto _iter_begin_1ac17ea0b;
		}
		_iter_end_1ac17ea0b:;
	};
	return false;;
}

inline jule::Bool _1ac18269b_isLive(jule::Ptr<_1b5906e28_ObjectDeadCode> _self_, jule::Ptr<_1b4b39865_FnIns>* _4130_t) {
	jule::Slice<jule::Ptr<_1b4b39865_FnIns>> _4217_live = nullptr;;
	{
		
{
			_case_begin_1ac184291:;
			{
				_4217_live=(*(_self_))._field_live._field_fns;
			}
		}
		_match_end_1ac1841d6:;
	};
	{
		auto expr = &(_4217_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac18423b:;
		if (it != expr_end) {
			jule::I64 _5313_i = it - expr->begin();
			{
				if ((_4217_live[_5313_i] == (*(_4130_t)))) {
					return true;;
				};
			}
			_iter_next_1ac18423b:;
			++it;
			_5313_i++;
			goto _iter_begin_1ac18423b;
		}
		_iter_end_1ac18423b:;
	};
	return false;;
}

inline jule::Bool _1ac1884e8_isLive(jule::Ptr<_1b5906e28_ObjectDeadCode> _self_, jule::Ptr<_1b4b24641_StructIns>* _4130_t) {
	jule::Slice<jule::Ptr<_1b4b24641_StructIns>> _4217_live = nullptr;;
	{
		
{
			_case_begin_1ac18cdb0:;
			{
				_4217_live=(*(_self_))._field_live._field_structs;
			}
		}
		_match_end_1ac18cc8e:;
	};
	{
		auto expr = &(_4217_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac18dd28:;
		if (it != expr_end) {
			jule::I64 _5313_i = it - expr->begin();
			{
				if ((_4217_live[_5313_i] == (*(_4130_t)))) {
					return true;;
				};
			}
			_iter_next_1ac18dd28:;
			++it;
			_5313_i++;
			goto _iter_begin_1ac18dd28;
		}
		_iter_end_1ac18dd28:;
	};
	return false;;
}

inline jule::Bool _1ac190742_isLive(jule::Ptr<_1b5906e28_ObjectDeadCode> _self_, jule::Ptr<_1b4bddaa1_Var>* _4130_t) {
	jule::Slice<jule::Ptr<_1b4bddaa1_Var>> _4217_live = nullptr;;
	{
		
{
			_case_begin_1ac192106:;
			{
				_4217_live=(*(_self_))._field_live._field_vars;
			}
		}
		_match_end_1ac19227c:;
	};
	{
		auto expr = &(_4217_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac192b62:;
		if (it != expr_end) {
			jule::I64 _5313_i = it - expr->begin();
			{
				if ((_4217_live[_5313_i] == (*(_4130_t)))) {
					return true;;
				};
			}
			_iter_next_1ac192b62:;
			++it;
			_5313_i++;
			goto _iter_begin_1ac192b62;
		}
		_iter_end_1ac192b62:;
	};
	return false;;
}



inline void _1ac17c0e1_pushLive(jule::Ptr<_1b5906e28_ObjectDeadCode> _self_, jule::Ptr<_1b4b49c3d_Trait> _6135_t) {
	{
		
{
			_case_begin_1ac180a73:;
			{
				(*(_self_))._field_live._field_traits=jule::append((*_self_.alloc)._field_live._field_traits,jule::Slice<jule::Ptr<_1b4b49c3d_Trait>>::make({_6135_t}));
			}
		}
		_match_end_1ac17edc4:;
	};
}

inline void _1ac182a42_pushLive(jule::Ptr<_1b5906e28_ObjectDeadCode> _self_, jule::Ptr<_1b4b39865_FnIns> _6135_t) {
	{
		
{
			_case_begin_1ac186826:;
			{
				(*(_self_))._field_live._field_fns=jule::append((*_self_.alloc)._field_live._field_fns,jule::Slice<jule::Ptr<_1b4b39865_FnIns>>::make({_6135_t}));
			}
		}
		_match_end_1ac185e30:;
	};
}

inline void _1ac188a9d_pushLive(jule::Ptr<_1b5906e28_ObjectDeadCode> _self_, jule::Ptr<_1b4b24641_StructIns> _6135_t) {
	{
		
{
			_case_begin_1ac18a231:;
			{
				(*(_self_))._field_live._field_structs=jule::append((*_self_.alloc)._field_live._field_structs,jule::Slice<jule::Ptr<_1b4b24641_StructIns>>::make({_6135_t}));
			}
		}
		_match_end_1ac1895a4:;
	};
}

inline void _1ac190ad8_pushLive(jule::Ptr<_1b5906e28_ObjectDeadCode> _self_, jule::Ptr<_1b4bddaa1_Var> _6135_t) {
	{
		
{
			_case_begin_1ac194834:;
			{
				(*(_self_))._field_live._field_vars=jule::append((*_self_.alloc)._field_live._field_vars,jule::Slice<jule::Ptr<_1b4bddaa1_Var>>::make({_6135_t}));
			}
		}
		_match_end_1ac193ca6:;
	};
}



inline void _1b593783d_setReferencesAsLive(jule::Ptr<_1b5906e28_ObjectDeadCode> _self_, jule::Ptr<_1b4b3ca44_ReferenceStack>* _7444_rs) {
	if (((*(_7444_rs)) == nullptr)) {
		return;;
	};
	jule::I64 _7813_i = 0LL;;
	for (; (_7813_i < _1b4b3d22b_Len((*(_7444_rs)).ptr())); (_7813_i)++) {
		{
			jule::Any _8017_ref = _1b4b3d56c_At((*(_7444_rs)).ptr(), _7813_i);;
			{
				auto &_match_expr{ _8017_ref };
				
				if (_match_expr.type == &__jule_any_type10) {
					_case_begin_1ac17a94c:;
					{
						jule::Ptr<_1b4b49c3d_Trait> _8321_t = _8017_ref.unsafe_cast_ptr<_1b4b49c3d_Trait>();;
						if (_1ac17bc4a_isLive(_self_, &(_8321_t))) {
							goto _iter_next_1ac179b6b;
						};
						_1ac17c0e1_pushLive(_self_, _8321_t);
						{
							auto expr = &((*(_8321_t))._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1ac17b6c8:;
							if (it != expr_end) {
								jule::Ptr<_1b4b36884_Fn> _8829_ins = *it;
								{
									{
										auto expr = &((*(_8829_ins))._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1ac180b61:;
										if (it != expr_end) {
											jule::Ptr<_1b4b39865_FnIns> _8933_mins = *it;
											{
												if (_1ac18269b_isLive(_self_, &(_8933_mins))) {
													goto _iter_next_1ac180b61;
												};
												_1ac182a42_pushLive(_self_, _8933_mins);
												_1b593783d_setReferencesAsLive(_self_, &((*(_8933_mins))._field_Refers));
											}
											_iter_next_1ac180b61:;
											++it;
											goto _iter_begin_1ac180b61;
										}
										_iter_end_1ac180b61:;
									};
								}
								_iter_next_1ac17b6c8:;
								++it;
								goto _iter_begin_1ac17b6c8;
							}
							_iter_end_1ac17b6c8:;
						};
					}
				}
				else if (_match_expr.type == &__jule_any_type7) {
					_case_begin_1ac17a782:;
					{
						jule::Ptr<_1b4b39865_FnIns> _9821_f = _8017_ref.unsafe_cast_ptr<_1b4b39865_FnIns>();;
						if (_1ac18269b_isLive(_self_, &(_9821_f))) {
							goto _match_end_1ac17a809;
						};
						if ((((*(_9821_f))._field_Owner != nullptr) && (!((*((*_9821_f.alloc)._field_Decl))._field_Statically)))) {
							if ((!(_1ac1884e8_isLive(_self_, &((*_9821_f.alloc)._field_Owner))))) {
								_1ac188a9d_pushLive(_self_, (*_9821_f.alloc)._field_Owner);
								_1b593783d_setReferencesAsLive(_self_, &((*(*_9821_f.alloc)._field_Owner.alloc)._field_Refers));
							};
						};
						_1ac182a42_pushLive(_self_, _9821_f);
						_1b593783d_setReferencesAsLive(_self_, &((*_9821_f.alloc)._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type8) {
					_case_begin_1ac17a9b3:;
					{
						jule::Ptr<_1b4bddaa1_Var> _11121_v = _8017_ref.unsafe_cast_ptr<_1b4bddaa1_Var>();;
						if (_1ac190742_isLive(_self_, &(_11121_v))) {
							goto _match_end_1ac17a809;
						};
						_1ac190ad8_pushLive(_self_, _11121_v);
						_1b593783d_setReferencesAsLive(_self_, &((*(_11121_v))._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type9) {
					_case_begin_1ac17aa29:;
					{
						jule::Ptr<_1b4b24641_StructIns> _11821_s = _8017_ref.unsafe_cast_ptr<_1b4b24641_StructIns>();;
						if (_1ac1884e8_isLive(_self_, &(_11821_s))) {
							goto _match_end_1ac17a809;
						};
						_1ac188a9d_pushLive(_self_, _11821_s);
						_1b593783d_setReferencesAsLive(_self_, &((*(_11821_s))._field_Refers));
						{
							auto expr = &((*_11821_s.alloc)._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1ac196b99:;
							if (it != expr_end) {
								jule::Ptr<_1b4b36884_Fn> _12429_m = *it;
								{
									{
										auto expr = &((*(_12429_m))._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1ac19787b:;
										if (it != expr_end) {
											jule::Ptr<_1b4b39865_FnIns> _12533_ins = *it;
											{
												if (_1ac18269b_isLive(_self_, &(_12533_ins))) {
													goto _iter_next_1ac19787b;
												};
												if (_1b57b1c17_IsTraitMethod(&(_11821_s), &(_12533_ins))) {
													_1ac182a42_pushLive(_self_, _12533_ins);
													_1b593783d_setReferencesAsLive(_self_, &((*(_12533_ins))._field_Refers));
												};
												;
												;
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_Eq)) {
														_1ac182a42_pushLive(_self_, _12533_ins);
														_1b593783d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_Gt)) {
														_1ac182a42_pushLive(_self_, _12533_ins);
														_1b593783d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_GtEq)) {
														_1ac182a42_pushLive(_self_, _12533_ins);
														_1b593783d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_Lt)) {
														_1ac182a42_pushLive(_self_, _12533_ins);
														_1b593783d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_LtEq)) {
														_1ac182a42_pushLive(_self_, _12533_ins);
														_1b593783d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_Shl)) {
														_1ac182a42_pushLive(_self_, _12533_ins);
														_1b593783d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_Shr)) {
														_1ac182a42_pushLive(_self_, _12533_ins);
														_1b593783d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_Add)) {
														_1ac182a42_pushLive(_self_, _12533_ins);
														_1b593783d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_Sub)) {
														_1ac182a42_pushLive(_self_, _12533_ins);
														_1b593783d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_Div)) {
														_1ac182a42_pushLive(_self_, _12533_ins);
														_1b593783d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_Mul)) {
														_1ac182a42_pushLive(_self_, _12533_ins);
														_1b593783d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_Mod)) {
														_1ac182a42_pushLive(_self_, _12533_ins);
														_1b593783d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_BitAnd)) {
														_1ac182a42_pushLive(_self_, _12533_ins);
														_1b593783d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_BitOr)) {
														_1ac182a42_pushLive(_self_, _12533_ins);
														_1b593783d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_BitXor)) {
														_1ac182a42_pushLive(_self_, _12533_ins);
														_1b593783d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_Neg)) {
														_1ac182a42_pushLive(_self_, _12533_ins);
														_1b593783d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_Pos)) {
														_1ac182a42_pushLive(_self_, _12533_ins);
														_1b593783d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_BitNot)) {
														_1ac182a42_pushLive(_self_, _12533_ins);
														_1b593783d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_AddAssign)) {
														_1ac182a42_pushLive(_self_, _12533_ins);
														_1b593783d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_SubAssign)) {
														_1ac182a42_pushLive(_self_, _12533_ins);
														_1b593783d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_DivAssign)) {
														_1ac182a42_pushLive(_self_, _12533_ins);
														_1b593783d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_MulAssign)) {
														_1ac182a42_pushLive(_self_, _12533_ins);
														_1b593783d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_ModAssign)) {
														_1ac182a42_pushLive(_self_, _12533_ins);
														_1b593783d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_ShlAssign)) {
														_1ac182a42_pushLive(_self_, _12533_ins);
														_1b593783d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_ShrAssign)) {
														_1ac182a42_pushLive(_self_, _12533_ins);
														_1b593783d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_BitOrAssign)) {
														_1ac182a42_pushLive(_self_, _12533_ins);
														_1b593783d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_BitAndAssign)) {
														_1ac182a42_pushLive(_self_, _12533_ins);
														_1b593783d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_BitXorAssign)) {
														_1ac182a42_pushLive(_self_, _12533_ins);
														_1b593783d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
											}
											_iter_next_1ac19787b:;
											++it;
											goto _iter_begin_1ac19787b;
										}
										_iter_end_1ac19787b:;
									};
								}
								_iter_next_1ac196b99:;
								++it;
								goto _iter_begin_1ac196b99;
							}
							_iter_end_1ac196b99:;
						};
					}
				}
				_match_end_1ac17a809:;
			};
		}
	_iter_next_1ac179b6b:;
	}
	_iter_end_1ac179b6b:;;
}



inline void _1b5937ae6_inits(jule::Ptr<_1b5906e28_ObjectDeadCode> _self_, jule::Ptr<_1b4b9d7b9_Package>* _15630_pkg) {
	{
		auto expr = &((*((*(_15630_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac1999b0:;
		if (it != expr_end) {
			jule::Ptr<_1b4c41340_SymbolTable> _15721_file = *it;
			{
				{
					auto expr = &((*(_15721_file))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac1976d3:;
					if (it != expr_end) {
						jule::Ptr<_1b4b36884_Fn> _15825_f = *it;
						{
							if ((*(_15825_f))._field_Ident.equal("init", 4)) {
								jule::Ptr<_1b4b39865_FnIns> _16025_ins = (*_15825_f.alloc)._field_Instances[0LL];;
								(*(_self_))._field_live._field_fns=jule::append((*_self_.alloc)._field_live._field_fns,jule::Slice<jule::Ptr<_1b4b39865_FnIns>>::make({_16025_ins}));
								_1b593783d_setReferencesAsLive(_self_, &((*(_16025_ins))._field_Refers));
							};
						}
						_iter_next_1ac1976d3:;
						++it;
						goto _iter_begin_1ac1976d3;
					}
					_iter_end_1ac1976d3:;
				};
			}
			_iter_next_1ac1999b0:;
			++it;
			goto _iter_begin_1ac1999b0;
		}
		_iter_end_1ac1999b0:;
	};
}



inline void _1b5937d9e_collectLivePackage(jule::Ptr<_1b5906e28_ObjectDeadCode> _self_, jule::Ptr<_1b4b9d7b9_Package>* _16843_pkg) {
	_1b5937ae6_inits(_self_, _16843_pkg);
	if (_20c57e85b_Test) {
		{
			auto expr = &((*((*(_16843_pkg))))._field_Files);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac1b6306:;
			if (it != expr_end) {
				jule::Ptr<_1b4c41340_SymbolTable> _17425_file = *it;
				{
					{
						auto expr = &((*(_17425_file))._field_Funcs);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ac1b6c41:;
						if (it != expr_end) {
							jule::Ptr<_1b4b36884_Fn> _17529_f = *it;
							{
								if (_1b57b2db1_HasDirective(&((*(_17529_f))._field_Directives), jule::Str::lit("test", 4))) {
									jule::Ptr<_1b4b39865_FnIns> _17729_ins = (*_17529_f.alloc)._field_Instances[0LL];;
									(*_self_.alloc)._field_live._field_fns=jule::append((*_self_.alloc)._field_live._field_fns,jule::Slice<jule::Ptr<_1b4b39865_FnIns>>::make({_17729_ins}));
									_1b593783d_setReferencesAsLive(_self_, &((*(_17729_ins))._field_Refers));
								};
							}
							_iter_next_1ac1b6c41:;
							++it;
							goto _iter_begin_1ac1b6c41;
						}
						_iter_end_1ac1b6c41:;
					};
				}
				_iter_next_1ac1b6306:;
				++it;
				goto _iter_begin_1ac1b6306;
			}
			_iter_end_1ac1b6306:;
		};
	};
}



inline void _1b593809c_collectLive(jule::Ptr<_1b5906e28_ObjectDeadCode> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac1b6ba8:;
		if (it != expr_end) {
			jule::Ptr<_1b4b9a893_ImportInfo> _18721_used = *it;
			{
				if ((!((*(_18721_used))._field_Binded))) {
					_1b5937d9e_collectLivePackage(_self_, &((*_18721_used.alloc)._field_Package));
				};
			}
			_iter_next_1ac1b6ba8:;
			++it;
			goto _iter_begin_1ac1b6ba8;
		}
		_iter_end_1ac1b6ba8:;
	};
	_1b5937d9e_collectLivePackage(_self_, &((*(*_self_.alloc)._field_ir.alloc)._field_Main));
	jule::Ptr<_1b4b36884_Fn> _19513_main = _1b4b9ed4d_FindFn((*(*_self_.alloc)._field_ir.alloc)._field_Main.ptr(), jule::Str::lit("main", 4), false);;
	jule::Ptr<_1b4b39865_FnIns> _19613_ins = (*(_19513_main))._field_Instances[0LL];;
	(*_self_.alloc)._field_live._field_fns=jule::append((*_self_.alloc)._field_live._field_fns,jule::Slice<jule::Ptr<_1b4b39865_FnIns>>::make({_19613_ins}));
	_1b593783d_setReferencesAsLive(_self_, &((*(_19613_ins))._field_Refers));
}



inline void _1b5938355_removeDeadGlobals(jule::Ptr<_1b5906e28_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1b4bddaa1_Var>>* _20142_vars) {
	jule::I64 _20213_i = 0LL;;
	while ((_20213_i < (*(_20142_vars)).len())) {
		{
			jule::Ptr<_1b4bddaa1_Var> _20413_v = (*(_20142_vars))[_20213_i];;
			if (_1ac190742_isLive(_self_, &(_20413_v))) {
				(_20213_i)++;
				goto _iter_next_1ac1bce78;
			};
			(*(_20142_vars))=jule::append((*(_20142_vars)).slice(0LL, _20213_i),(*(_20142_vars)).slice((_20213_i + 1LL)));
		}
	_iter_next_1ac1bce78:;
	}
	_iter_end_1ac1bce78:;;
}



inline void _1b593860d_removeDeadFns(jule::Ptr<_1b5906e28_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1b4b36884_Fn>>* _21338_funcs) {
	jule::I64 _21413_i = 0LL;;
	while ((_21413_i < (*(_21338_funcs)).len())) {
		{
			jule::Ptr<_1b4b36884_Fn> _21617_f = (*(_21338_funcs))[_21413_i];;
			jule::I64 _21717_j = 0LL;;
			while ((_21717_j < (*(_21617_f))._field_Instances.len())) {
				{
					jule::Ptr<_1b4b39865_FnIns> _21917_ins = (*_21617_f.alloc)._field_Instances[_21717_j];;
					if (_1ac18269b_isLive(_self_, &(_21917_ins))) {
						(_21717_j)++;
						goto _iter_next_1ac1c06c8;
					};
					(*_21617_f.alloc)._field_Instances=jule::append((*_21617_f.alloc)._field_Instances.slice(0LL, _21717_j),(*_21617_f.alloc)._field_Instances.slice((_21717_j + 1LL)));
				}
			_iter_next_1ac1c06c8:;
			}
			_iter_end_1ac1c06c8:;;
			if (((*_21617_f.alloc)._field_Instances.len() == 0LL)) {
				(*(_21338_funcs))=jule::append((*(_21338_funcs)).slice(0LL, _21413_i),(*(_21338_funcs)).slice((_21413_i + 1LL)));
				goto _iter_next_1ac1bea29;
			};
			(_21413_i)++;
		}
	_iter_next_1ac1bea29:;
	}
	_iter_end_1ac1bea29:;;
}



inline void _1b59388b6_removeDeadStructs(jule::Ptr<_1b5906e28_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1b4b218b3_Struct>>* _23442_structs) {
	jule::I64 _23513_i = 0LL;;
	while ((_23513_i < (*(_23442_structs)).len())) {
		{
			jule::Ptr<_1b4b218b3_Struct> _23717_s = (*(_23442_structs))[_23513_i];;
			jule::I64 _23817_j = 0LL;;
			while ((_23817_j < (*(_23717_s))._field_Instances.len())) {
				{
					jule::Ptr<_1b4b24641_StructIns> _24021_ins = (*_23717_s.alloc)._field_Instances[_23817_j];;
					_1b593860d_removeDeadFns(_self_, &((*(_24021_ins))._field_Methods));
					if ((((*_24021_ins.alloc)._field_Methods.len() != 0LL) || _1ac1884e8_isLive(_self_, &(_24021_ins)))) {
						(_23817_j)++;
						goto _iter_next_1ac1c4413;
					};
					(*_23717_s.alloc)._field_Instances=jule::append((*_23717_s.alloc)._field_Instances.slice(0LL, _23817_j),(*_23717_s.alloc)._field_Instances.slice((_23817_j + 1LL)));
				}
			_iter_next_1ac1c4413:;
			}
			_iter_end_1ac1c4413:;;
			if (((*_23717_s.alloc)._field_Instances.len() == 0LL)) {
				(*(_23442_structs))=jule::append((*(_23442_structs)).slice(0LL, _23513_i),(*(_23442_structs)).slice((_23513_i + 1LL)));
				goto _iter_next_1ac1c3764;
			};
			(_23513_i)++;
		}
	_iter_next_1ac1c3764:;
	}
	_iter_end_1ac1c3764:;;
}



inline void _1b5938b6e_removeDeadTraits(jule::Ptr<_1b5906e28_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1b4b49c3d_Trait>>* _25641_traits) {
	jule::I64 _25713_i = 0LL;;
	while ((_25713_i < (*(_25641_traits)).len())) {
		{
			jule::Ptr<_1b4b49c3d_Trait> _25917_t = (*(_25641_traits))[_25713_i];;
			if ((!(_1ac17bc4a_isLive(_self_, &(_25917_t))))) {
				(*(_25641_traits))=jule::append((*(_25641_traits)).slice(0LL, _25713_i),(*(_25641_traits)).slice((_25713_i + 1LL)));
				goto _iter_next_1ac1c800a;
			};
			jule::I64 _26417_j = 0LL;;
			while ((_26417_j < (*(_25917_t))._field_Implemented.len())) {
				{
					jule::Ptr<_1b4b218b3_Struct> _26617_s = (*_25917_t.alloc)._field_Implemented[_26417_j];;
					if (((*(_26617_s))._field_Instances.len() > 0LL)) {
						(_26417_j)++;
						goto _iter_next_1ac1c8934;
					};
					(*_25917_t.alloc)._field_Implemented=jule::append((*_25917_t.alloc)._field_Implemented.slice(0LL, _26417_j),(*_25917_t.alloc)._field_Implemented.slice((_26417_j + 1LL)));
				}
			_iter_next_1ac1c8934:;
			}
			_iter_end_1ac1c8934:;;
			(_25713_i)++;
		}
	_iter_next_1ac1c800a:;
	}
	_iter_end_1ac1c800a:;;
}



inline void _1b5938e27_removeDeadsFile(jule::Ptr<_1b5906e28_ObjectDeadCode> _self_, jule::Ptr<_1b4c41340_SymbolTable>* _27740_file) {
	_1b593860d_removeDeadFns(_self_, &((*((*(_27740_file))))._field_Funcs));
	_1b59388b6_removeDeadStructs(_self_, &((*((*(_27740_file))))._field_Structs));
	_1b5938b6e_removeDeadTraits(_self_, &((*((*(_27740_file))))._field_Traits));
	_1b5938355_removeDeadGlobals(_self_, &((*((*(_27740_file))))._field_Vars));
}



inline void _1b59391d0_removeDeadsPackage(jule::Ptr<_1b5906e28_ObjectDeadCode> _self_, jule::Ptr<_1b4b9d7b9_Package>* _28443_pkg) {
	{
		auto expr = &((*((*(_28443_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac1cd5a4:;
		if (it != expr_end) {
			jule::Ptr<_1b4c41340_SymbolTable> _28521_file = *it;
			{
				_1b5938e27_removeDeadsFile(_self_, &(_28521_file));
			}
			_iter_next_1ac1cd5a4:;
			++it;
			goto _iter_begin_1ac1cd5a4;
		}
		_iter_end_1ac1cd5a4:;
	};
}



inline void _1b59393cd_removeDeads(jule::Ptr<_1b5906e28_ObjectDeadCode> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac1cdd24:;
		if (it != expr_end) {
			jule::Ptr<_1b4b9a893_ImportInfo> _29121_used = *it;
			{
				if ((!((*(_29121_used))._field_Binded))) {
					_1b59391d0_removeDeadsPackage(_self_, &((*_29121_used.alloc)._field_Package));
				};
			}
			_iter_next_1ac1cdd24:;
			++it;
			goto _iter_begin_1ac1cdd24;
		}
		_iter_end_1ac1cdd24:;
	};
	_1b59391d0_removeDeadsPackage(_self_, &((*(*_self_.alloc)._field_ir.alloc)._field_Main));
}



inline void _1b59395cb_elimanate(jule::Ptr<_1b5906e28_ObjectDeadCode> _self_) {
	_1b593809c_collectLive(_self_);
	_1b59393cd_removeDeads(_self_);
}





std::ostream &operator<<(std::ostream &_Stream, _1b5906e28_ObjectDeadCode _Src) {
	_Stream << "ObjectDeadCode{";
	_Stream << "live:" << _Src._field_live << ", ";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_x_1b57a68aa_IR__jule_tuple_s_1cb285120_Log static__1b57a6d50_Build(jule::Str _2721_path, jule::I64 _2732_flags) {
	__jule_tuple_x_1b57a68aa_IR__jule_tuple_s_1cb285120_Log __jule_func_result;
	jule::Ptr<_1b57a40a0_JuleImporter> _2813_importer = static__1b57a449b_New(_1b57a8835_buildCompileInfo());;
	jule::Slice<jule::Ptr<_1b4ae8ca8_Ast>> _2913_files;
	jule::Slice<_1cb285120_Log> _2924_logs;
	({
		__jule_tuple_sx_1b4ae8ca8_Ast__jule_tuple_s_1cb285120_Log __jule_assign_result = _1b57a5986_ImportPackage(_2813_importer.ptr(), _2721_path, true);
		_2913_files = __jule_assign_result.__jule_result_arg0;
		_2924_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2924_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _2924_logs;
		return __jule_func_result;;
	};
	jule::Str _339_root = _2721_path;;
	if ((_2913_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_1b4b9d7b9_Package> _3913_pkg;
	({
		__jule_tuple_x_1b4b9d7b9_Package__jule_tuple_s_1cb285120_Log __jule_assign_result = _1b4c9db94_AnalyzePackage(_2913_files, jule::Trait(_2813_importer, (jule::Trait::Type*)&_1b4b9797d_Importer_mptr_data0), _2732_flags);
		_3913_pkg = __jule_assign_result.__jule_result_arg0;
		_2924_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2924_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _2924_logs;
		return __jule_func_result;;
	};
	jule::Ptr<_1b57a68aa_IR> _4413_ir = jule::new_ptr<_1b57a68aa_IR>(_1b57a68aa_IR{._field_Root=_339_root, ._field_Main=_3913_pkg, ._field_Used=_1b57a4732_AllPackages(_2813_importer), });;
	(*(_4413_ir))._field_Passes=_1b57a8626_getAllUniquePasses(&((*_4413_ir.alloc)._field_Main), (*_4413_ir.alloc)._field_Used);
	__jule_func_result.__jule_result_arg0 = _4413_ir;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1b57a7339_appendStructs(_1b57a68aa_IR* _self_, jule::Ptr<_1b4b9d7b9_Package>* _5633_p, jule::Slice<jule::Ptr<_1b4b218b3_Struct>>* _5657_buffer) {
	{
		auto expr = &((*((*(_5633_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac11cb64:;
		if (it != expr_end) {
			jule::Ptr<_1b4c41340_SymbolTable> _5721_f = *it;
			{
				{
					auto expr = &((*(_5721_f))._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac11d5b0:;
					if (it != expr_end) {
						jule::Ptr<_1b4b218b3_Struct> _5825_s = *it;
						{
							if ((!((*(_5825_s))._field_Binded))) {
								{ jule::Slice<jule::Ptr<_1b4b218b3_Struct>> &__jule_push_dest = (*(_5657_buffer)); __jule_push_dest.push(_5825_s); };
							};
						}
						_iter_next_1ac11d5b0:;
						++it;
						goto _iter_begin_1ac11d5b0;
					}
					_iter_end_1ac11d5b0:;
				};
			}
			_iter_next_1ac11cb64:;
			++it;
			goto _iter_begin_1ac11cb64;
		}
		_iter_end_1ac11cb64:;
	};
}



inline jule::Slice<jule::Ptr<_1b4b218b3_Struct>> _1b57a75c0_GetAllStructures(_1b57a68aa_IR* _self_) {
	jule::Slice<jule::Ptr<_1b4b218b3_Struct>> _6917_buffer = nullptr;;
	_1b57a7339_appendStructs(_self_, &((*(_self_))._field_Main), &(_6917_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac11e759:;
		if (it != expr_end) {
			jule::Ptr<_1b4b9a893_ImportInfo> _7121_u = *it;
			{
				if ((!((*(_7121_u))._field_Binded))) {
					_1b57a7339_appendStructs(_self_, &((*_7121_u.alloc)._field_Package), &(_6917_buffer));
				};
			}
			_iter_next_1ac11e759:;
			++it;
			goto _iter_begin_1ac11e759;
		}
		_iter_end_1ac11e759:;
	};
	return _6917_buffer;;
}



inline void _1b57a7933_appendGlobals(_1b57a68aa_IR* _self_, jule::Ptr<_1b4b9d7b9_Package>* _7933_p, jule::Slice<jule::Ptr<_1b4bddaa1_Var>>* _7957_buffer) {
	{
		auto expr = &((*((*(_7933_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac120da9:;
		if (it != expr_end) {
			jule::Ptr<_1b4c41340_SymbolTable> _8021_f = *it;
			{
				{
					auto expr = &((*(_8021_f))._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac121805:;
					if (it != expr_end) {
						jule::Ptr<_1b4bddaa1_Var> _8125_v = *it;
						{
							if (((((*(_8125_v))._field_Token != nullptr) && (!((*_8125_v.alloc)._field_Binded))) && (!((*_8125_v.alloc)._field_Constant)))) {
								{ jule::Slice<jule::Ptr<_1b4bddaa1_Var>> &__jule_push_dest = (*(_7957_buffer)); __jule_push_dest.push(_8125_v); };
							};
						}
						_iter_next_1ac121805:;
						++it;
						goto _iter_begin_1ac121805;
					}
					_iter_end_1ac121805:;
				};
			}
			_iter_next_1ac120da9:;
			++it;
			goto _iter_begin_1ac120da9;
		}
		_iter_end_1ac120da9:;
	};
}



inline jule::Slice<jule::Ptr<_1b4bddaa1_Var>> _1b57a7bb9_GetAllGlobals(_1b57a68aa_IR* _self_) {
	jule::Slice<jule::Ptr<_1b4bddaa1_Var>> _9217_buffer = nullptr;;
	_1b57a7933_appendGlobals(_self_, &((*(_self_))._field_Main), &(_9217_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac12320d:;
		if (it != expr_end) {
			jule::Ptr<_1b4b9a893_ImportInfo> _9421_u = *it;
			{
				if ((!((*(_9421_u))._field_Binded))) {
					_1b57a7933_appendGlobals(_self_, &((*_9421_u.alloc)._field_Package), &(_9217_buffer));
				};
			}
			_iter_next_1ac12320d:;
			++it;
			goto _iter_begin_1ac12320d;
		}
		_iter_end_1ac12320d:;
	};
	return _9217_buffer;;
}



inline void _1b57a7db7_Order(_1b57a68aa_IR* _self_) {
	(*(_self_))._field_Ordered._field_Structs=_1b57a75c0_GetAllStructures(_self_);
	(*(_self_))._field_Ordered._field_Globals=_1b57a7bb9_GetAllGlobals(_self_);
	_1ac124ce2_order(&((*(_self_))._field_Ordered._field_Structs));
	_1ac12a446_order(&((*(_self_))._field_Ordered._field_Globals));
}





std::ostream &operator<<(std::ostream &_Stream, _1b57a68aa_IR _Src) {
	_Stream << "IR{";
	_Stream << "Root:" << _Src._field_Root << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Main:" << _Src._field_Main << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Ordered:" << _Src._field_Ordered;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1b4b249b5_Str(_1b4b24641_StructIns* _self_) {
	_1cb1d27a9_StrBuilder _23913_kind = static__1cb1d2a73_New(32LL);;
	_1cb1db3d9_WriteStr(&_23913_kind, (*((*(_self_))._field_Decl))._field_Ident);
	if (((*(_self_))._field_Generics.len() > 0LL)) {
		_1cb1db692_WriteByte(&_23913_kind, '[');
		{
			auto expr = &((*(_self_))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aabb2243:;
			if (it != expr_end) {
				jule::I64 _24317_i = it - expr->begin();
				jule::Ptr<_1b4c7b028_InsGeneric> *_24320_g = it;
				{
					_1cb1db3d9_WriteStr(&_23913_kind, _1b4c7ccc7_Str((*((*(_24320_g))))._field_Kind.ptr()));
					if ((_24317_i < ((*(_self_))._field_Generics.len() - 1LL))) {
						_1cb1db692_WriteByte(&_23913_kind, ',');
					};
				}
				_iter_next_1aabb2243:;
				++it;
				_24317_i++;
				goto _iter_begin_1aabb2243;
			}
			_iter_end_1aabb2243:;
		};
		_1cb1db692_WriteByte(&_23913_kind, ']');
	};
	return _1cb1dbbd1_Str(&_23913_kind);;
}



inline jule::Bool _1b4b24d06_Equal(jule::Ptr<_1b4b24641_StructIns> _self_, jule::Ptr<_1b4c7c90e_TypeKind> _25521_other) {
	jule::Ptr<_1b4b24641_StructIns> _2569_s = _1b4c815d3_Struct(_25521_other.ptr());;
	if ((_2569_s == nullptr)) {
		return false;;
	};
	if (((*(_self_))._field_Decl != (*(_2569_s))._field_Decl)) {
		return false;;
	};
	if (((*_self_.alloc)._field_Generics.len() != (*(_2569_s))._field_Generics.len())) {
		return false;;
	};
	jule::I64 _26913_i = 0LL;;
	for (; (_26913_i < (*_self_.alloc)._field_Generics.len()); (_26913_i)++) {
		{
			if ((!(_1b4c7d118_Equal((*((*_self_.alloc)._field_Generics[_26913_i]))._field_Kind, (*((*(_2569_s))._field_Generics[_26913_i]))._field_Kind)))) {
				return false;;
			};
		}
	_iter_next_1aabb581d:;
	}
	_iter_end_1aabb581d:;;
	return true;;
}



inline jule::Bool _1b4b252ac_Same(_1b4b24641_StructIns* _self_, jule::Ptr<_1b4b24641_StructIns> _28319_s) {
	if ((((*(_self_))._field_Decl != (*(_28319_s))._field_Decl) || ((*_28319_s.alloc)._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aabb8d4e:;
		if (it != expr_end) {
			jule::I64 _28713_i = it - expr->begin();
			jule::Ptr<_1b4c7b028_InsGeneric> *_28716_g = it;
			{
				jule::Ptr<_1b4c7b028_InsGeneric> _28813_g2 = (*_28319_s.alloc)._field_Generics[_28713_i];;
				if ((((*((*((*(_28716_g))))._field_Kind))._field_BindIdent != (*(*(_28813_g2))._field_Kind.alloc)._field_BindIdent) || (!(_1b4c7d118_Equal((*(*(_28716_g)).alloc)._field_Kind, (*_28813_g2.alloc)._field_Kind))))) {
					return false;;
				};
			}
			_iter_next_1aabb8d4e:;
			++it;
			_28713_i++;
			goto _iter_begin_1aabb8d4e;
		}
		_iter_end_1aabb8d4e:;
	};
	return true;;
}



inline jule::Ptr<_1b4b36884_Fn> _1b4b256a8_FindMethod(_1b4b24641_StructIns* _self_, jule::Str _29829_ident, jule::Bool _29841_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aabbb879:;
		if (it != expr_end) {
			jule::Ptr<_1b4b36884_Fn> _29921_f = *it;
			{
				if ((((*(_29921_f))._field_Statically == _29841_statically) && ((*_29921_f.alloc)._field_Ident == _29829_ident))) {
					return _29921_f;;
				};
			}
			_iter_next_1aabbb879:;
			++it;
			goto _iter_begin_1aabbb879;
		}
		_iter_end_1aabbb879:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b4b23a91_FieldIns> _1b4b259e9_FindField(_1b4b24641_StructIns* _self_, jule::Str _30928_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aabbbdeb:;
		if (it != expr_end) {
			jule::Ptr<_1b4b23a91_FieldIns> _31021_f = *it;
			{
				if (((*((*(_31021_f))._field_Decl))._field_Ident == _30928_ident)) {
					return _31021_f;;
				};
			}
			_iter_next_1aabbbdeb:;
			++it;
			goto _iter_begin_1aabbbdeb;
		}
		_iter_end_1aabbbdeb:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b4bddaa1_Var> _1b4b25d3a_FindStatic(_1b4b24641_StructIns* _self_, jule::Str _32029_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aabbdd54:;
		if (it != expr_end) {
			jule::Ptr<_1b4bddaa1_Var> _32121_v = *it;
			{
				if (((*(_32121_v))._field_Ident == _32029_ident)) {
					return _32121_v;;
				};
			}
			_iter_next_1aabbdd54:;
			++it;
			goto _iter_begin_1aabbdd54;
		}
		_iter_end_1aabbdd54:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1b4b24641_StructIns _Src) {
	_Stream << _1b4b249b5_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1cb34715a_Cmd> static__1cb347556_New(jule::Str _2619_path) {
	return jule::new_ptr<_1cb34715a_Cmd>(_1cb34715a_Cmd{._field_path=_2619_path, });;
}



inline jule::VoidExceptional _1cb347754_Spawn(_1cb34715a_Cmd* _self_) {
	return _1cb39bc09_spawn(_self_);
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I64> _1cb347bd8_Wait(_1cb34715a_Cmd* _self_) {
	return _1cb39c18d_wait(_self_);
}



inline jule::VoidExceptional _1cb39bc09_spawn(_1cb34715a_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_pid != -1LL)) {
		jule::panic(jule::Str::lit("command is already spawned", 26) + jule::Str("\nlocation: std/process/cmd_unix.jule:83:13"));;
	};
	jule::Str _859_path = (*(_self_))._field_path;;
	jule::Array<signed,2> _8613_pipe = jule::Array<signed,2>(0);;
	if ((pipe((&(_8613_pipe[0LL]))) == -1LL)) {
		return jule::VoidExceptional{.error=jule::Any(static_cast<jule::I64>(3LL), &__jule_any_type0)};
	};
	if ((_20d8d6299_Fcntl(static_cast<jule::I64>(_8613_pipe[1LL]), F_SETFD, (fcntl(static_cast<jule::I64>(_8613_pipe[1LL]), F_GETFD) | FD_CLOEXEC)) == -1LL)) {
		_20d8e4153_Close(static_cast<jule::I64>(_8613_pipe[0LL]));
		_20d8e4153_Close(static_cast<jule::I64>(_8613_pipe[1LL]));
		return jule::VoidExceptional{.error=jule::Any(static_cast<jule::I64>(3LL), &__jule_any_type0)};
	};
	(*(_self_))._field_attrs._field_pid=fork();
	{
		auto &_match_expr{ (*(_self_))._field_attrs._field_pid };
		
		if (_match_expr == -1LL) {
			_case_begin_1aa1c7704:;
			{
				return jule::VoidExceptional{.error=jule::Any(static_cast<jule::I64>(3LL), &__jule_any_type0)};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1aa1c6a88:;
			{
				_20d8e4153_Close(static_cast<jule::I64>(_8613_pipe[0LL]));
				jule::Slice<jule::Str> _10117_args = jule::Slice<jule::Str>::alloc(1LL, (1LL + (*(_self_))._field_Args.len()));;
				_10117_args[0LL]=_859_path;
				(_10117_args).append((*(_self_))._field_Args);;
				({
					auto except = _1cb39b9a6_setenv(&((*(_self_))._field_Env));
					if (!except.ok()) {
						return jule::VoidExceptional{.error=std::move(except.error)};
					}
				});
				_1cb39b775_execvp(&(_859_path), &(_10117_args));
				jule::Str _10613_code = _1cb3977b5_Itoa(_20d83b793_GetLastErrno());;
				{
					_20d8e450a_Write(static_cast<jule::I64>(_8613_pipe[1LL]), (&(_10613_code[0LL])), static_cast<jule::U64>(_10613_code.len()));
				};
				_20d8e4153_Close(static_cast<jule::I64>(_8613_pipe[1LL]));
				_1cb39d49c_Exit(1LL);
			}
		}
		else {
			_case_begin_1aa1c208e:;
			{
				_20d8e4153_Close(static_cast<jule::I64>(_8613_pipe[1LL]));
				jule::Array<jule::U8,16> _11221_buf = jule::Array<jule::U8,16>(0);;
				jule::I64 _11313_n = _20d8e3c79_Read(static_cast<jule::I64>(_8613_pipe[0LL]), (&(_11221_buf[0LL])), static_cast<jule::U64>(16LLU));;
				_20d8e4153_Close(static_cast<jule::I64>(_8613_pipe[0LL]));
				if ((_11313_n != 0LL)) {
					(*(_self_))._field_attrs._field_pid=-1LL;
					jule::I64 _11717_code;
					({
						__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1cb38e191_AtoiBp((&(_11221_buf[0LL])), _11313_n);
						_11717_code = __jule_assign_result.__jule_result_arg0;
					});
					return jule::VoidExceptional{.error=jule::Any(_1cb39c930_processErrorFromCode(_11717_code), &__jule_any_type0)};
				};
			}
		}
		_match_end_1aa1c47cd:;
	};
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I64> _1cb39c18d_wait(_1cb34715a_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_pid == -1LL)) {
		jule::panic(jule::Str::lit("command is not spawned", 22) + jule::Str("\nlocation: std/process/cmd_unix.jule:135:13"));;
	};
	jule::I64 _13713_stat = 0LL;;
	{
		if ((waitpid((*(_self_))._field_attrs._field_pid, ((signed*)((&(_13713_stat)))), 0LL) == -1LL)) {
			return jule::Exceptional<jule::I64>{.error=jule::Any(_1cb39cb83_getLastProcessError(), &__jule_any_type0)};
		};
	};
	(*(_self_))._field_attrs._field_pid=-1LL;
	return jule::Exceptional<jule::I64>{.result=WEXITSTATUS(_13713_stat)};;
}





std::ostream &operator<<(std::ostream &_Stream, _1cb34715a_Cmd _Src) {
	_Stream << "Cmd{";
	_Stream << "attrs:" << _Src._field_attrs << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Env:" << _Src._field_Env;
	_Stream << "}";
	return _Stream;
}



inline void _20d895e3a_Free(void* _4520_ptr) {
	free(_4520_ptr);
}



inline jule::Str _20d8c672e_BytePtrToStr(jule::U8* _6924_s) {
	if ((_6924_s == nullptr)) {
		return jule::Str();;
	};
	jule::I64 _739_n = 0LL;;
	{
		for (; (_6924_s[_739_n] != 0LLU); (_739_n)++) {};
	};
	if ((_739_n == 0LL)) {
		return jule::Str();;
	};
	jule::Slice<jule::U8> _809_buf = jule::Slice<jule::U8>::alloc(_739_n, _739_n, 0);;
	_739_n=0LL;
	{
		for (; (_6924_s[_739_n] != 0LLU); (_739_n)++) {
			{
				_809_buf[_739_n]=_6924_s[_739_n];
			}
		_iter_next_1a90dd9e5:;
		}
		_iter_end_1a90dd9e5:;;
	};
	return static_cast<jule::Str>(_809_buf);;
}



inline jule::Slice<jule::U8> _20d8c69b5_StrToBytes(jule::Str _9315_s) {
	{
		auto expr = &(_9315_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a90de243:;
		if (it != expr_end) {
			jule::I64 _949_i = it - expr->begin();
			jule::U8 *_9412_b = it;
			{
				if (((*(_9412_b)) == 0LLU)) {
					jule::Slice<jule::U8> _9617_bytes = jule::Slice<jule::U8>::alloc((_949_i + 1LL), (_949_i + 1LL), 0);;
					jule::copy(_9617_bytes, _9315_s.slice(0LL, _9617_bytes.len()));
					return _9617_bytes;;
				};
			}
			_iter_next_1a90de243:;
			++it;
			_949_i++;
			goto _iter_begin_1a90de243;
		}
		_iter_end_1a90de243:;
	};
	jule::Slice<jule::U8> _1019_bytes = jule::Slice<jule::U8>::alloc((_9315_s.len() + 1LL), (_9315_s.len() + 1LL), 0);;
	jule::copy(_1019_bytes, _9315_s);
	return _1019_bytes;;
}



inline jule::I64 _20d83b793_GetLastErrno(void) {
	return errno;;
}



inline jule::I64 _20d8d6299_Fcntl(jule::I64 _5410_handle, jule::I64 _5423_cmd, jule::I64 _5433_arg) {
	return fcntl(_5410_handle, _5423_cmd, _5433_arg);;
}



inline jule::I64 _20d8d661d_Stat(jule::U8* _5916_path, struct stat* _5933_stat) {
	return stat(((char*)(_5916_path)), _5933_stat);;
}



inline jule::I64 _20d8d6a4c_Open(jule::U8* _6416_path, jule::I64 _6429_flag, jule::I64 _6440_mode) {
	return open(((char*)(_6416_path)), _6429_flag, _6440_mode);;
}



inline jule::U8* _20d8d6dc1_Getcwd(jule::U8* _7018_buff, jule::U64 _7031_bufflen) {
	return ((jule::U8*)(getcwd(((char*)(_7018_buff)), _7031_bufflen)));;
}



inline DIR* _20d8d73bb_Opendir(jule::U8* _7519_path) {
	return opendir(((char*)(_7519_path)));;
}



inline struct dirent* _20d8d7597_Readdir(DIR* _7823_dir) {
	return readdir(_7823_dir);;
}



inline jule::I64 _20d8d783e_Closedir(DIR* _8124_dir) {
	return closedir(_8124_dir);;
}



inline jule::I64 _20d8d8246_Mkdir(jule::U8* _9017_path, jule::I64 _9030_mode) {
	return mkdir(((char*)(_9017_path)), _9030_mode);;
}



inline jule::I64 _20d8d8510_Rmdir(jule::U8* _9517_path) {
	return rmdir(((char*)(_9517_path)));;
}



inline jule::I64 _20d8d87c9_Unlink(jule::U8* _9818_path) {
	return unlink(((char*)(_9818_path)));;
}



inline jule::I64 _20d8e3c79_Read(jule::I64 _2016_handle, void* _2033_buff, jule::U64 _2048_n) {
	return read(_2016_handle, _2033_buff, _2048_n);;
}



inline jule::I64 _20d8e4153_Close(jule::I64 _2510_handle) {
	return close(_2510_handle);;
}



inline jule::I64 _20d8e450a_Write(jule::I64 _2817_handle, void* _2830_buff, jule::U64 _2845_n) {
	return write(_2817_handle, _2830_buff, _2845_n);;
}



inline void _20d8e473b_Exit(jule::I64 _339_code) {
	exit(_339_code);
}



inline void _20d9251ea_handleRW(jule::Slice<jule::U8>* _1414_b) {
	if (((*(_1414_b)).len() > 1073741824LL)) {
		{
			((*((&((*(_1414_b))))))).mut_slice(0LL, 1073741824LLU);;
		};
	};
}



inline void _20d9260b9_HandleRW(jule::Slice<jule::U8>* _814_b) {
	_20d9251ea_handleRW(_814_b);
}



inline jule::Str _20d7319b8_Str(jule::U8* _108_b, jule::I64 _1018_n) {
	jule::Str _119_s = jule::Str();;
	{
		_119_s.buffer = jule::Ptr<jule::U8>::make(_108_b, nullptr);
		_119_s._len = _1018_n;
		_119_s._slice = _108_b;
	};
	return _119_s;;
}



inline jule::Slice<jule::U8> _1a9147587_Slice(jule::U8* _2316_e, jule::I64 _2326_n) {
	jule::Slice<jule::U8> _249_buf = static_cast<jule::Slice<jule::U8>>(nullptr);;
	{
		_249_buf.data = jule::Ptr<jule::U8>::make(_2316_e, nullptr);
		_249_buf._len = _2326_n;
		_249_buf._cap = _2326_n;
		_249_buf._slice = _2316_e;
	};
	return _249_buf;;
}



inline jule::Slice<jule::U8> _20d73c760_StrBytes(jule::Str _4113_s) {
	if ((_4113_s.len() == 0LL)) {
		return nullptr;;
	};
	return _1a9147587_Slice((&(_4113_s[0LL])), _4113_s.len());;
}



inline jule::Str _20d73c9e6_BytesStr(jule::Slice<jule::U8> _5013_b) {
	if ((_5013_b.len() == 0LL)) {
		return jule::Str();;
	};
	return _20d7319b8_Str((&(_5013_b[0LL])), _5013_b.len());;
}



inline jule::Str _20d73ccb0_StrFromBytes(jule::Slice<jule::U8> _5817_b) {
	return (*(((jule::Str*)((&(_5817_b))))));;
}



inline jule::I64 _20d7635aa_getLastOsError(void) {
	jule::I64 _305_err = _20d83b793_GetLastErrno();;
	{
		auto &_match_expr{ _305_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1a9150282:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1a914eb55:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else if (_match_expr == 40LL) {
			_case_begin_1a914ebbb:;
			{
				return static_cast<jule::I64>(2LL);;
			}
		}
		else if (_match_expr == 36LL) {
			_case_begin_1a914ec43:;
			{
				return static_cast<jule::I64>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1a914ecba:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1a914ee74:;
			{
				return static_cast<jule::I64>(5LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1a914eeda:;
			{
				return static_cast<jule::I64>(6LL);;
			}
		}
		else {
			_case_begin_1a914e957:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		_match_end_1a914ea67:;
	};
}



inline jule::Slice<jule::Str> _20d767ceb_Args(void) {
	return jule::args();;
}



inline jule::Exceptional<jule::Str> _20d76825d_WorkingDir(void) {
	return _20d768b98_getwd();
}



inline jule::Exceptional<jule::Str> _20d768b98_getwd(void) {
	jule::U8* _119_buf = _20d8d6dc1_Getcwd(nullptr, 0LLU);;
	if ((_119_buf == nullptr)) {
		return jule::Exceptional<jule::Str>{.error=jule::Any(_20d7635aa_getLastOsError(), &__jule_any_type0)};
	};
	jule::Str _155_pwd = _20d8c672e_BytePtrToStr(_119_buf);;
	{
		_20d895e3a_Free(_119_buf);
	};
	return jule::Exceptional<jule::Str>{.result=_155_pwd};;
}



inline jule::Bool _1cade3c7e_IsLetter(jule::I32 _7613_r) {
	if ((static_cast<jule::U32>(_7613_r) <= 255LLU)) {
		return ((_1cae51a01__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_7613_r))] & 96LLU) != 0LLU);;
	};
	return _1cae59e49_isExcludingLatin(_1cadecc55_Letter, _7613_r);;
}



inline jule::Bool _1cae592bc_is16(jule::Slice<_1cae5752e_Range16> _1919_ranges, jule::U16 _19128_r) {
	if (((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU))) {
		{
			auto expr = &(_1919_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aa05bd3b:;
			if (it != expr_end) {
				jule::I64 _19313_i = it - expr->begin();
				{
					_1cae5752e_Range16* _19413_range = (&(_1919_ranges[_19313_i]));;
					{
						if ((_19128_r < (*(_19413_range))._field_Lo)) {
							return false;;
						};
						if ((_19128_r <= (*(_19413_range))._field_Hi)) {
							return (((*(_19413_range))._field_Stride == 1LLU) || (jule::mod((_19128_r - (*(_19413_range))._field_Lo),(*(_19413_range))._field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_1aa05bd3b:;
				++it;
				_19313_i++;
				goto _iter_begin_1aa05bd3b;
			}
			_iter_end_1aa05bd3b:;
		};
		return false;;
	};
	jule::I64 _2089_lo = 0LL;;
	jule::I64 _2099_hi = _1919_ranges.len();;
	while ((_2089_lo < _2099_hi)) {
		{
			jule::I64 _2119_m = (_2089_lo + ((_2099_hi - _2089_lo) >> 1LLU));;
			_1cae5752e_Range16* _2129_range = (&(_1919_ranges[_2119_m]));;
			{
				if ((((*(_2129_range))._field_Lo <= _19128_r) && (_19128_r <= (*(_2129_range))._field_Hi))) {
					return (((*(_2129_range))._field_Stride == 1LLU) || (jule::mod((_19128_r - (*(_2129_range))._field_Lo),(*(_2129_range))._field_Stride) == 0LLU));;
				};
				if ((_19128_r < (*(_2129_range))._field_Lo)) {
					_2099_hi=_2119_m;
				} else {
					_2089_lo=(_2119_m + 1LL);
				};
			};
		}
	_iter_next_1aa05ab4d:;
	}
	_iter_end_1aa05ab4d:;;
	return false;;
}



inline jule::Bool _1cae59641_is32(jule::Slice<_1cae57a5c_Range32> _2289_ranges, jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto expr = &(_2289_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aa063518:;
			if (it != expr_end) {
				jule::I64 _23013_i = it - expr->begin();
				{
					_1cae57a5c_Range32* _23113_range = (&(_2289_ranges[_23013_i]));;
					{
						if ((_22828_r < (*(_23113_range))._field_Lo)) {
							return false;;
						};
						if ((_22828_r <= (*(_23113_range))._field_Hi)) {
							return (((*(_23113_range))._field_Stride == 1LLU) || (jule::mod((_22828_r - (*(_23113_range))._field_Lo),(*(_23113_range))._field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_1aa063518:;
				++it;
				_23013_i++;
				goto _iter_begin_1aa063518;
			}
			_iter_end_1aa063518:;
		};
		return false;;
	};
	jule::I64 _2459_lo = 0LL;;
	jule::I64 _2469_hi = _2289_ranges.len();;
	while ((_2459_lo < _2469_hi)) {
		{
			jule::I64 _2489_m = (_2459_lo + ((_2469_hi - _2459_lo) >> 1LLU));;
			_1cae57a5c_Range32* _2499_range = (&(_2289_ranges[_2489_m]));;
			{
				if ((((*(_2499_range))._field_Lo <= _22828_r) && (_22828_r <= (*(_2499_range))._field_Hi))) {
					return (((*(_2499_range))._field_Stride == 1LLU) || (jule::mod((_22828_r - (*(_2499_range))._field_Lo),(*(_2499_range))._field_Stride) == 0LLU));;
				};
				if ((_22828_r < (*(_2499_range))._field_Lo)) {
					_2469_hi=_2489_m;
				} else {
					_2459_lo=(_2489_m + 1LL);
				};
			};
		}
	_iter_next_1aa062e41:;
	}
	_iter_end_1aa062e41:;;
	return false;;
}



inline jule::Bool _1cae59e49_isExcludingLatin(jule::Ptr<_1cae57ed0_RangeTable> _27821_rangeTab, jule::I32 _27844_r) {
	{
		jule::Slice<_1cae5752e_Range16> *_28010_R16 = &((*(_27821_rangeTab))._field_R16);;
		jule::I64 _2829_off = (*_27821_rangeTab.alloc)._field_LatinOffset;;
		if ((((*(_28010_R16)).len() > _2829_off) && (static_cast<jule::U32>(_27844_r) <= static_cast<jule::U32>((*(_28010_R16))[((*(_28010_R16)).len() - 1LL)]._field_Hi)))) {
			return _1cae592bc_is16((*(_28010_R16)).slice(_2829_off), static_cast<jule::U16>(_27844_r));;
		};
	};
	jule::Slice<_1cae57a5c_Range32> *_2876_R32 = &((*_27821_rangeTab.alloc)._field_R32);;
	if ((((*(_2876_R32)).len() > 0LL) && (_27844_r >= static_cast<jule::I32>((*(_2876_R32))[0LL]._field_Lo)))) {
		return _1cae59641_is32((*(_2876_R32)), static_cast<jule::U32>(_27844_r));;
	};
	return false;;
}



inline jule::Bool _1cae5a18b_IsUpper(jule::I32 _29512_r) {
	if ((static_cast<jule::U32>(_29512_r) <= 255LLU)) {
		return ((_1cae51a01__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_29512_r))] & 96LLU) == 32LLU);;
	};
	return _1cae59e49_isExcludingLatin(_1cae04025_Upper, _29512_r);;
}



inline __jule_tuple_i32__jule_tuple_int _1cb179a2b_DecodeRune(jule::Slice<jule::U8> _18215_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_18215_p.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _1865_p0 = _18215_p[0LL];;
	jule::U8 _1875_x = _1cb178794_first[static_cast<jule::I64>(_1865_p0)];;
	if ((_1875_x >= 240LLU)) {
		jule::I32 _1929_mask = static_cast<jule::I32>(((_1875_x << 31LLU) >> 31LLU));;
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>(_18215_p[0LL]) & (~(_1929_mask))) | (65533LL & _1929_mask));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _1955_sz = static_cast<jule::I64>((_1875_x & 7LLU));;
	_1cb178d49_acceptRange _1965_accept = _1cb1791e0_acceptRanges[static_cast<jule::I64>((_1875_x >> 4LLU))];;
	if ((_18215_p.len() < _1955_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2005_b1 = _18215_p[1LL];;
	if (((_2005_b1 < _1965_accept._field_lo) || (_1965_accept._field_hi < _2005_b1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1955_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>((_1865_p0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2005_b1 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2075_b2 = _18215_p[2LL];;
	if (((_2075_b2 < 128LLU) || (191LL < _2075_b2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1955_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = (((static_cast<jule::I32>((_1865_p0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2005_b1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2075_b2 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2145_b3 = _18215_p[3LL];;
	if (((_2145_b3 < 128LLU) || (191LL < _2145_b3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = ((((static_cast<jule::I32>((_1865_p0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2005_b1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2075_b2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2145_b3 & 63LLU)));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _1cb179d6c_DecodeRuneStr(jule::Str _22918_s) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_22918_s.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _2335_s0 = _22918_s[0LL];;
	jule::U8 _2345_x = _1cb178794_first[static_cast<jule::I64>(_2335_s0)];;
	if ((_2345_x >= 240LLU)) {
		jule::I32 _2399_mask = static_cast<jule::I32>(((_2345_x << 31LLU) >> 31LLU));;
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>(_22918_s[0LL]) & (~(_2399_mask))) | (65533LL & _2399_mask));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _2425_sz = static_cast<jule::I64>((_2345_x & 7LLU));;
	_1cb178d49_acceptRange _2435_accept = _1cb1791e0_acceptRanges[static_cast<jule::I64>((_2345_x >> 4LLU))];;
	if ((_22918_s.len() < _2425_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2475_s1 = _22918_s[1LL];;
	if (((_2475_s1 < _2435_accept._field_lo) || (_2435_accept._field_hi < _2475_s1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2425_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>((_2335_s0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2475_s1 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2545_s2 = _22918_s[2LL];;
	if (((_2545_s2 < 128LLU) || (191LL < _2545_s2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2425_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = (((static_cast<jule::I32>((_2335_s0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2475_s1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2545_s2 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2615_s3 = _22918_s[3LL];;
	if (((_2615_s3 < 128LLU) || (191LL < _2615_s3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = ((((static_cast<jule::I32>((_2335_s0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2475_s1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2545_s2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2615_s3 & 63LLU)));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _1cb17a3bc_DecodeLastRuneStr(jule::Str _31722_s) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_31722_s.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::I64 _3215_end = _31722_s.len();;
	jule::I64 _3229_start = (_3215_end - 1LL);;
	__jule_func_result.__jule_result_arg0=static_cast<jule::I32>(_31722_s[_3229_start]);
	if ((__jule_func_result.__jule_result_arg0 < 128LL)) {
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _3309_lim = (_3215_end - 4LL);;
	if ((_3309_lim < 0LL)) {
		_3309_lim=0LL;
	};
	(_3229_start)--;
	for (; (_3229_start >= _3309_lim); (_3229_start)--) {
		{
			if (_1cb17bad8_RuneStart(_31722_s[_3229_start])) {
				goto _iter_end_1aa0aa86d;
			};
		}
	_iter_next_1aa0aa86d:;
	}
	_iter_end_1aa0aa86d:;;
	if ((_3229_start < 0LL)) {
		_3229_start=0LL;
	};
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1cb179d6c_DecodeRuneStr(_31722_s.slice(_3229_start, _3215_end));
		__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if (((_3229_start + __jule_func_result.__jule_result_arg1) != _3215_end)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline jule::Slice<jule::U8> _1cb17ae17_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r) {
	if ((_40530_r <= 127LL)) {
		return jule::append(_40519_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>(_40530_r)}));;
	};
	return _1cb17b28b_appendRuneNonASCII(_40519_p, _40530_r);;
}



inline jule::Slice<jule::U8> _1cb17b28b_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r) {
	jule::U32 _4145_i = static_cast<jule::U32>(_41242_r);;
	{
		
		if ((_4145_i <= 2047LLU)) {
			_case_begin_1aa0bb21e:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({(192LL | static_cast<jule::U8>((_41242_r >> 6LL))),(128LL | (static_cast<jule::U8>(_41242_r) & 63LLU))}));;
			}
		}
		else if ((_4145_i > 1114111LLU) || ((55296LL <= _4145_i) && (_4145_i <= 57343LLU))) {
			_case_begin_1aa0b9d00:;
			{
				_41242_r=128LL;
				goto _case_begin_1aa0b9d66;
			}
		}
		else if ((_4145_i <= 65535LLU)) {
			_case_begin_1aa0b9d66:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({(224LL | static_cast<jule::U8>((_41242_r >> 12LL))),(128LL | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU)),(128LL | (static_cast<jule::U8>(_41242_r) & 63LLU))}));;
			}
		}
		else {
			_case_begin_1aa0b95a2:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({(240LL | static_cast<jule::U8>((_41242_r >> 18LL))),(128LL | (static_cast<jule::U8>((_41242_r >> 12LL)) & 63LLU)),(128LL | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU)),(128LL | (static_cast<jule::U8>(_41242_r) & 63LLU))}));;
			}
		}
		_match_end_1aa0b953b:;
	};
}



inline jule::I64 _1cb17b81e_RuneCountStr(jule::Str _47317_s) {
	jule::I64 __jule_func_result = 0;
	jule::I64 _4749_i = 0LL;;
	for (; (_4749_i < _47317_s.len()); (__jule_func_result)++) {
		{
			jule::U8 _47613_c = _47317_s[_4749_i];;
			if ((_47613_c < 128LLU)) {
				(_4749_i)++;
				goto _iter_next_1aa0be80a;
			};
			jule::U8 _4829_x = _1cb178794_first[static_cast<jule::I64>(_47613_c)];;
			if ((_4829_x == 241LLU)) {
				(_4749_i)++;
				goto _iter_next_1aa0be80a;
			};
			jule::I64 _48713_size = static_cast<jule::I64>((_4829_x & 7LLU));;
			if (((_4749_i + _48713_size) > _47317_s.len())) {
				(_4749_i)++;
				goto _iter_next_1aa0be80a;
			};
			_1cb178d49_acceptRange _4929_accept = _1cb1791e0_acceptRanges[static_cast<jule::I64>((_4829_x >> 4LLU))];;
			_47613_c=_47317_s[(_4749_i + 1LL)];
			if (((_47613_c < _4929_accept._field_lo) || (_4929_accept._field_hi < _47613_c))) {
				_48713_size=1LL;
			} else if ((_48713_size == 2LL)) {
			} else {
				_47613_c=_47317_s[(_4749_i + 2LL)];
				if (((_47613_c < 128LLU) || (191LL < _47613_c))) {
					_48713_size=1LL;
				} else if ((_48713_size == 3LL)) {
				} else {
					_47613_c=_47317_s[(_4749_i + 3LL)];
					if (((_47613_c < 128LLU) || (191LL < _47613_c))) {
						_48713_size=1LL;
					};
				};
			};
			_4749_i+=_48713_size;
		}
	_iter_next_1aa0be80a:;
	}
	_iter_end_1aa0be80a:;;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1cb17bad8_RuneStart(jule::U8 _51714_b) {
	return ((_51714_b & 192LLU) != 128LLU);;
}



inline jule::I64 _1cb1bc95e_findLastByte(jule::U8* _4517_begin, jule::U8* _4535_end, jule::U8 _4547_b) {
	jule::U8* _469_it = _4535_end;;
	for (; (_469_it >= _4517_begin); (_469_it)--) {
		{
			{
				if (((*(_469_it)) == _4547_b)) {
					return ((jule::I64)((_469_it - _4517_begin)));;
				};
			};
		}
	_iter_next_1aa0e8a54:;
	}
	_iter_end_1aa0e8a54:;;
	return -1LL;;
}



inline jule::I64 _1cb1bd08b_FindByteStr(jule::Str _6816_s, jule::U8 _6824_b) {
	{
		auto expr = &(_6816_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa0eab88:;
		if (it != expr_end) {
			jule::I64 _709_i = it - expr->begin();
			jule::U8 *_7012_se = it;
			{
				if (((*(_7012_se)) == _6824_b)) {
					return _709_i;;
				};
			}
			_iter_next_1aa0eab88:;
			++it;
			_709_i++;
			goto _iter_begin_1aa0eab88;
		}
		_iter_end_1aa0eab88:;
	};
	return -1LL;;
}



inline jule::I64 _1cb1bd410_FindLastByteStr(jule::Str _7920_s, jule::U8 _7928_b) {
	if ((_7920_s.len() == 0LL)) {
		return -1LL;;
	};
	return _1cb1bc95e_findLastByte((&(_7920_s[0LL])), (&(_7920_s[(_7920_s.len() - 1LL)])), _7928_b);;
}



inline jule::Str _1cb1bd751_Repeat(jule::Str _1111_s, jule::I64 _1123_n) {
	if ((_1123_n <= 0LL)) {
		return jule::Str();;
	};
	if ((_1111_s.len() > jule::div(jule::MAX_I64,_1123_n))) {
		jule::panic(jule::Str::lit("std::strings: repeat: integer buffer size overflow", 50) + jule::Str("\nlocation: std/strings/strings.jule:16:9"));;
	};
	_1cb1d27a9_StrBuilder _189_ss = static__1cb1d2a73_New((_1111_s.len() * _1123_n));;
	for (; (_1123_n > 0LL); (_1123_n)--) {
		{
			_1cb1db3d9_WriteStr(&_189_ss, _1111_s);
		}
	_iter_next_1aa11b714:;
	}
	_iter_end_1aa11b714:;;
	return _1cb1dbbd1_Str(&_189_ss);;
}



inline jule::Bool _1cb1bdb19_HasPrefix(jule::Str _2614_s, jule::Str _2622_sub) {
	return ((_2614_s.len() >= _2622_sub.len()) && (_2614_s.slice(0LL, _2622_sub.len()) == _2622_sub));;
}



inline jule::Bool _1cb1bde8d_HasSuffix(jule::Str _3114_s, jule::Str _3122_sub) {
	return ((_3114_s.len() >= _3122_sub.len()) && (_3114_s.slice((_3114_s.len() - _3122_sub.len())) == _3122_sub));;
}



inline jule::I64 _1cb1be444_FindAt(jule::Str _3911_s, jule::Str _3919_sub, jule::I64 _3933_i) {
	if ((((_3933_i < 0LL) || (_3911_s.len() < _3919_sub.len())) || (_3919_sub.len() == 0LL))) {
		return -1LL;;
	};
	for (; (_3933_i < _3911_s.len()); (_3933_i)++) {
		{
			if (_1cb1bdb19_HasPrefix(_3911_s.slice(_3933_i), _3919_sub)) {
				return _3933_i;;
			};
		}
	_iter_next_1aa120350:;
	}
	_iter_end_1aa120350:;;
	return -1LL;;
}



inline jule::I64 _1cb1be785_Find(jule::Str _549_s, jule::Str _5417_sub) {
	return _1cb1be444_FindAt(_549_s, _5417_sub, 0LL);;
}



inline jule::I64 _1cb1bebb4_FindLastAt(jule::Str _6215_s, jule::Str _6223_sub, jule::I64 _6233_i) {
	jule::I64 _639_j = ((_6233_i - _6223_sub.len()) + 1LL);;
	if (((((_6223_sub.len() == 0LL) || (_6233_i < 0LL)) || (_6233_i >= _6215_s.len())) || (_639_j < 0LL))) {
		return -1LL;;
	};
	_julec_label_1aa12309a:;
	for (; (_639_j >= 0LL); (_639_j)--) {
		{
			jule::I64 _6913_k = _639_j;;
			jule::I64 _7013_z = 0LL;;
			for (; (_7013_z < _6223_sub.len()); ({
				jule::I64 ___jule_assign_arg = (_6913_k + 1LL);
				jule::I64 _1___jule_assign_arg = (_7013_z + 1LL);
				_6913_k = ___jule_assign_arg;
				_7013_z = _1___jule_assign_arg;
			})) {
				{
					if ((_6215_s[_6913_k] != _6223_sub[_7013_z])) {
						goto _iter_next_1aa122c04;
					};
				}
			_iter_next_1aa123bd3:;
			}
			_iter_end_1aa123bd3:;;
			return _639_j;;
		}
	_iter_next_1aa122c04:;
	}
	_iter_end_1aa122c04:;;
	return -1LL;;
}



inline jule::I64 _1cb1c0038_FindLast(jule::Str _8413_s, jule::Str _8421_sub) {
	return _1cb1bebb4_FindLastAt(_8413_s, _8421_sub, (_8413_s.len() - 1LL));;
}



inline jule::I64 _1cb1c1820_FindLastByte(jule::Str _14817_s, jule::U8 _14825_b) {
	return _1cb1bd410_FindLastByteStr(_14817_s, _14825_b);;
}



inline jule::I64 _1cb1c1b94_FindRune(jule::Str _15513_s, jule::I32 _15521_r) {
	jule::I64 _1569_i = 0LL;;
	while ((_1569_i < _15513_s.len())) {
		{
			jule::I32 _1589_br;
			jule::I64 _15813_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1cb179d6c_DecodeRuneStr(_15513_s.slice(_1569_i));
				_1589_br = __jule_assign_result.__jule_result_arg0;
				_15813_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_15521_r == _1589_br)) {
				return _1569_i;;
			};
			_1569_i+=_15813_n;
		}
	_iter_next_1aa12b58c:;
	}
	_iter_end_1aa12b58c:;;
	return -1LL;;
}



inline jule::I64 _1cb1c25bd_FindAny(jule::Str _18512_s, jule::Str _18520_runes) {
	jule::I64 _1869_i = 0LL;;
	while ((_1869_i < _18512_s.len())) {
		{
			jule::I32 _1889_r;
			jule::I64 _18812_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1cb179d6c_DecodeRuneStr(_18512_s.slice(_1869_i));
				_1889_r = __jule_assign_result.__jule_result_arg0;
				_18812_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1cb1c1b94_FindRune(_18520_runes, _1889_r) != -1LL)) {
				return _1869_i;;
			};
			_1869_i+=_18812_n;
		}
	_iter_next_1aa12e8c0:;
	}
	_iter_end_1aa12e8c0:;;
	return -1LL;;
}



inline jule::Slice<jule::Str> _1cb1c2c61_Split(jule::Str _21510_s, jule::Str _21518_sub, jule::I64 _21532_n) {
	jule::I64 _2169_cap = _21532_n;;
	if ((_21532_n < 0LL)) {
		_2169_cap=16LLU;
	};
	jule::Slice<jule::Str> _2209_parts = jule::Slice<jule::Str>::alloc(0LL, _2169_cap);;
	if ((_21532_n == 0LL)) {
		return _2209_parts;;
	};
	if ((_21532_n < 0LL)) {
		_21532_n=_21510_s.len();
	};
	jule::I64 _2279_i = 0LL;;
	for (; (_21532_n > 0LL); (_21532_n)--) {
		{
			jule::I64 _2299_j = _1cb1be444_FindAt(_21510_s, _21518_sub, _2279_i);;
			if ((_2299_j == -1LL)) {
				goto _iter_end_1aa1345a6;
			};
			{ jule::Slice<jule::Str> &__jule_push_dest = _2209_parts; __jule_push_dest.push(_21510_s.slice(_2279_i, _2299_j)); };
			_2279_i=(_2299_j + _21518_sub.len());
		}
	_iter_next_1aa1345a6:;
	}
	_iter_end_1aa1345a6:;;
	if (((_21532_n > 0LL) && (_2279_i < _21510_s.len()))) {
		{ jule::Slice<jule::Str> &__jule_push_dest = _2209_parts; __jule_push_dest.push(_21510_s.slice(_2279_i)); };
	};
	return _2209_parts;;
}



inline jule::Bool _1cb1c30d5_Contains(jule::Str _24313_s, jule::Str _24321_sub) {
	return (_1cb1be444_FindAt(_24313_s, _24321_sub, 0LL) != -1LL);;
}



inline jule::Bool _1cb1c3b52_ContainsAny(jule::Str _25816_s, jule::Str _25824_runes) {
	return (_1cb1c25bd_FindAny(_25816_s, _25824_runes) != -1LL);;
}



inline jule::I64 _1cb1c3ec6_Count(jule::Str _26410_s, jule::Str _26418_sub) {
	if ((_26418_sub.len() == 0LL)) {
		return 0LL;;
	};
	jule::I64 _2689_n = 0LL;;
	jule::I64 _2699_i = 0LL;;
	for (;;) {
		{
			jule::I64 _2719_j = _1cb1be444_FindAt(_26410_s, _26418_sub, _2699_i);;
			if ((_2719_j == -1LL)) {
				goto _iter_end_1aa139721;
			};
			(_2689_n)++;
			_2699_i=(_2719_j + _26418_sub.len());
		}
	_iter_next_1aa139721:;
	}
	_iter_end_1aa139721:;;
	return _2689_n;;
}



inline jule::Str _1cb1c44b0_Replace(jule::Str _28412_s, jule::Str _28420_sub, jule::Str _28430_new, jule::I64 _28444_n) {
	if (((_28444_n == 0LL) || (_28420_sub == _28430_new))) {
		return _28412_s;;
	};
	jule::I64 _2895_m = _1cb1c3ec6_Count(_28412_s, _28420_sub);;
	if ((_2895_m == 0LL)) {
		return _28412_s;;
	};
	if (((_28444_n < 0LL) || (_2895_m < _28444_n))) {
		_28444_n=_2895_m;
	};
	_1cb1d27a9_StrBuilder _2979_ss = static__1cb1d2a73_New(((_28412_s.len() + (_28444_n * (_28430_new.len() - _28420_sub.len()))) + 1LL));;
	jule::I64 _2989_i = 0LL;;
	for (; (_28444_n > 0LL); (_28444_n)--) {
		{
			jule::I64 _3009_j = _1cb1be444_FindAt(_28412_s, _28420_sub, _2989_i);;
			if ((_3009_j == -1LL)) {
				goto _iter_end_1aa13d1d6;
			};
			_1cb1db3d9_WriteStr(&_2979_ss, _28412_s.slice(_2989_i, _3009_j));
			_1cb1db3d9_WriteStr(&_2979_ss, _28430_new);
			_2989_i=(_3009_j + _28420_sub.len());
		}
	_iter_next_1aa13d1d6:;
	}
	_iter_end_1aa13d1d6:;;
	_1cb1db3d9_WriteStr(&_2979_ss, _28412_s.slice(_2989_i));
	return _1cb1dbbd1_Str(&_2979_ss);;
}



inline jule::Str _1cb1c523b_TrimLeft(jule::Str _34117_s, jule::Str _34125_cutset) {
	jule::I64 _3429_i = 0LL;;
	while ((_3429_i < _34117_s.len())) {
		{
			jule::I32 _3449_r;
			jule::I64 _34412_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1cb179d6c_DecodeRuneStr(_34117_s.slice(_3429_i));
				_3449_r = __jule_assign_result.__jule_result_arg0;
				_34412_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1cb1c1b94_FindRune(_34125_cutset, _3449_r) == -1LL)) {
				return _34117_s.slice(_3429_i);;
			};
			_3429_i+=_34412_n;
		}
	_iter_next_1aa142aae:;
	}
	_iter_end_1aa142aae:;;
	return jule::Str();;
}



inline jule::Str _1cb1c55b0_TrimRight(jule::Str _35514_s, jule::Str _35522_cutset) {
	jule::I64 _3569_i = _35514_s.len();;
	while ((_3569_i > 0LL)) {
		{
			jule::I32 _3589_r;
			jule::I64 _35812_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1cb17a3bc_DecodeLastRuneStr(_35514_s.slice(0LL, _3569_i));
				_3589_r = __jule_assign_result.__jule_result_arg0;
				_35812_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1cb1c1b94_FindRune(_35522_cutset, _3589_r) == -1LL)) {
				return _35514_s.slice(0LL, _3569_i);;
			};
			_3569_i-=_35812_n;
		}
	_iter_next_1aa144c7b:;
	}
	_iter_end_1aa144c7b:;;
	return jule::Str();;
}



inline jule::Str _1cb1c5934_Trim(jule::Str _3699_s, jule::Str _36917_cutset) {
	return _1cb1c523b_TrimLeft(_1cb1c55b0_TrimRight(_3699_s, _36917_cutset), _36917_cutset);;
}



inline jule::Str _1cb1c5ca8_Join(jule::Slice<jule::Str> _3759_parts, jule::Str _37523_sep) {
	{
		auto _match_expr{ _3759_parts.len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1aa146651:;
			{
				return jule::Str();;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1aa146d38:;
			{
				return _3759_parts[0LL];;
			}
		}
		_match_end_1aa146b18:;
	};
	jule::I64 _3829_n = 0LL;;
	{
		auto expr = &(_3759_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa1471bd:;
		if (it != expr_end) {
			jule::Str *_38312_part = it;
			{
				_3829_n+=(*(_38312_part)).len();
				(_3829_n)++;
			}
			_iter_next_1aa1471bd:;
			++it;
			goto _iter_begin_1aa1471bd;
		}
		_iter_end_1aa1471bd:;
	};
	_1cb1d27a9_StrBuilder _3879_s = static__1cb1d2a73_New((_3829_n + 1LL));;
	_1cb1db3d9_WriteStr(&_3879_s, _3759_parts[0LL]);
	{
		auto expr = _3759_parts.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1aa14892d:;
		if (it != expr_end) {
			jule::Str *_38912_part = it;
			{
				_1cb1db3d9_WriteStr(&_3879_s, _37523_sep);
				_1cb1db3d9_WriteStr(&_3879_s, (*(_38912_part)));
			}
			_iter_next_1aa14892d:;
			++it;
			goto _iter_begin_1aa14892d;
		}
		_iter_end_1aa14892d:;
	};
	return _1cb1dbbd1_Str(&_3879_s);;
}



inline jule::Str _1cb1de662_Clean(jule::Str _10914_path) {
	jule::Str _1105_originalPath = _10914_path;;
	jule::I64 _1115_volLen = _1cb1e24cd_volumeNameLen(_10914_path);;
	(_10914_path).mut_slice(_1115_volLen);;
	if ((_10914_path).empty()) {
		if ((((_1115_volLen > 1LL) && _1cb1e1e06_IsPathSep(_1105_originalPath[0LL])) && _1cb1e1e06_IsPathSep(_1105_originalPath[1LL]))) {
			return _1cb1dec39_FromSlash(_1105_originalPath);;
		};
		return (_1105_originalPath + jule::Str::lit(".", 1));;
	};
	jule::Bool _1205_rooted = _1cb1e1e06_IsPathSep(_10914_path[0LL]);;
	jule::I64 _1275_n = _10914_path.len();;
	_1cb1dd7c6_lazyBuff _1289_out = _1cb1dd7c6_lazyBuff{._field_path=_10914_path, ._field_volAndPath=_1105_originalPath, ._field_volLen=_1115_volLen};;
	jule::I64 _1339_r;
	jule::I64 _13316_dotdot;
	({
		jule::I64 ___jule_assign_arg = 0LL;
		jule::I64 _1___jule_assign_arg = 0LL;
		_1339_r = ___jule_assign_arg;
		_13316_dotdot = _1___jule_assign_arg;
	});
	if (_1205_rooted) {
		_1cb1de013_append(&_1289_out, 47LLU);
		({
			jule::I64 ___jule_assign_arg = 1LL;
			jule::I64 _1___jule_assign_arg = 1LL;
			_1339_r = ___jule_assign_arg;
			_13316_dotdot = _1___jule_assign_arg;
		});
	};
	while ((_1339_r < _1275_n)) {
		{
			{
				
				if (_1cb1e1e06_IsPathSep(_10914_path[_1339_r])) {
					_case_begin_1aa15cc50:;
					{
						(_1339_r)++;
					}
				}
				else if (((_10914_path[_1339_r] == '.') && (((_1339_r + 1LL) == _1275_n) || _1cb1e1e06_IsPathSep(_10914_path[(_1339_r + 1LL)])))) {
					_case_begin_1aa15982e:;
					{
						(_1339_r)++;
					}
				}
				else if ((((_10914_path[_1339_r] == '.') && (_10914_path[(_1339_r + 1LL)] == '.')) && (((_1339_r + 2LL) == _1275_n) || _1cb1e1e06_IsPathSep(_10914_path[(_1339_r + 2LL)])))) {
					_case_begin_1aa159895:;
					{
						_1339_r+=2LL;
						{
							
							if ((_1289_out._field_w > _13316_dotdot)) {
								_case_begin_1aa160d1e:;
								{
									(_1289_out._field_w)--;
									while (((_1289_out._field_w > _13316_dotdot) && (!(_1cb1e1e06_IsPathSep(_1cb1ddc5a_index(&_1289_out, _1289_out._field_w)))))) {
										{
											(_1289_out._field_w)--;
										}
									_iter_next_1aa1615a0:;
									}
									_iter_end_1aa1615a0:;;
								}
							}
							else if ((!(_1205_rooted))) {
								_case_begin_1aa160db8:;
								{
									if ((_1289_out._field_w > 0LL)) {
										_1cb1de013_append(&_1289_out, 47LLU);
									};
									_1cb1de013_append(&_1289_out, '.');
									_1cb1de013_append(&_1289_out, '.');
									_13316_dotdot=_1289_out._field_w;
								}
							}
							_match_end_1aa1609ab:;
						};
					}
				}
				else {
					_case_begin_1aa1597b8:;
					{
						if (((_1205_rooted && (_1289_out._field_w != 1LL)) || ((!(_1205_rooted)) && (_1289_out._field_w != 0LL)))) {
							_1cb1de013_append(&_1289_out, 47LLU);
						};
						;
						for (; ((_1339_r < _1275_n) && (!(_1cb1e1e06_IsPathSep(_10914_path[_1339_r])))); (_1339_r)++) {
							{
								_1cb1de013_append(&_1289_out, _10914_path[_1339_r]);
							}
						_iter_next_1aa15ab2c:;
						}
						_iter_end_1aa15ab2c:;;
					}
				}
				_match_end_1aa15971e:;
			};
		}
	_iter_next_1aa1584cb:;
	}
	_iter_end_1aa1584cb:;;
	if ((_1289_out._field_w == 0LL)) {
		_1cb1de013_append(&_1289_out, '.');
	};
	return _1cb1dec39_FromSlash(_1cb1de299_string(&_1289_out));;
}



inline jule::Str _1cb1dec39_FromSlash(jule::Str _21214_path) {
	{
		return _21214_path;;
	};
}



inline jule::Str _1cb1e007a_Join(jule::Slice<jule::Str> _2269_elem) {
	return _1cb1e2aa5_join(_2269_elem);;
}



inline jule::Str _1cb1e0311_Ext(jule::Str _2318_path) {
	jule::I64 _2329_i = (_2318_path.len() - 1LL);;
	for (; ((_2329_i >= 0LL) && (!(_1cb1e1e06_IsPathSep(_2318_path[_2329_i])))); (_2329_i)--) {
		{
			if ((_2318_path[_2329_i] == '.')) {
				return _2318_path.slice(_2329_i);;
			};
		}
	_iter_next_1aa165087:;
	}
	_iter_end_1aa165087:;;
	return jule::Str();;
}



inline __jule_tuple_str__jule_tuple_bool _1cb1e05ca_Abs(jule::Str _2468_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result = std::move(_1cb1e281e_abs(_2468_path));
return __jule_func_result;;
}



inline jule::Str _1cb1e0894_Base(jule::Str _25213_path) {
	if ((_25213_path).empty()) {
		return jule::Str::lit(".", 1);;
	};
	while (((_25213_path.len() > 0LL) && _1cb1e1e06_IsPathSep(_25213_path[(_25213_path.len() - 1LL)]))) {
		{
			(_25213_path).mut_slice(0LL, (_25213_path.len() - 1LL));;
		}
	_iter_next_1aa1663da:;
	}
	_iter_end_1aa1663da:;;
	(_25213_path).mut_slice(_1cb1e0eb0_VolumeName(_25213_path).len());;
	jule::I64 _2639_i = (_25213_path.len() - 1LL);;
	while (((_2639_i >= 0LL) && (!(_1cb1e1e06_IsPathSep(_25213_path[_2639_i]))))) {
		{
			(_2639_i)--;
		}
	_iter_next_1aa1667d6:;
	}
	_iter_end_1aa1667d6:;;
	if ((_2639_i >= 0LL)) {
		(_25213_path).mut_slice((_2639_i + 1LL));;
	};
	if ((_25213_path).empty()) {
		return jule::Str::lit("/", 1);;
	};
	return _25213_path;;
}



inline jule::Str _1cb1e0c6d_Dir(jule::Str _2838_path) {
	jule::Str _2845_vol = _1cb1e0eb0_VolumeName(_2838_path);;
	jule::I64 _2859_i = (_2838_path.len() - 1LL);;
	while (((_2859_i >= _2845_vol.len()) && (!(_1cb1e1e06_IsPathSep(_2838_path[_2859_i]))))) {
		{
			(_2859_i)--;
		}
	_iter_next_1aa16a059:;
	}
	_iter_end_1aa16a059:;;
	jule::Str _2895_dir = _1cb1de662_Clean(_2838_path.slice(_2845_vol.len(), (_2859_i + 1LL)));;
	if ((_2895_dir.equal(".", 1) && (_2845_vol.len() > 2LL))) {
		return _2845_vol;;
	};
	return (_2845_vol + _2895_dir);;
}



inline jule::Str _1cb1e0eb0_VolumeName(jule::Str _30115_path) {
	return _1cb1dec39_FromSlash(_30115_path.slice(0LL, _1cb1e24cd_volumeNameLen(_30115_path)));;
}



inline jule::Bool _1cb1e1e06_IsPathSep(jule::U8 _4814_c) {
	return (47LL == _4814_c);;
}



inline jule::Bool _1cb1e2214_IsAbs(jule::Str _5310_path) {
	return _1cb1bdb19_HasPrefix(_5310_path, jule::Str::lit("/", 1));;
}



inline jule::I64 _1cb1e24cd_volumeNameLen(jule::Str _5918_path) {
	return 0LL;;
}



inline __jule_tuple_str__jule_tuple_bool _1cb1e281e_abs(jule::Str _638_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if (_1cb1e2214_IsAbs(_638_path)) {
		__jule_func_result.__jule_result_arg0 = _1cb1de662_Clean(_638_path);
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	jule::Str _675_wd = ({
		auto except = _20d76825d_WorkingDir();
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = jule::Str();
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		} jule::Str();});
	});;
	__jule_func_result.__jule_result_arg0 = _1cb1e2aa5_join(jule::Slice<jule::Str>::make({_675_wd,_638_path}));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Str _1cb1e2aa5_join(jule::Slice<jule::Str> _739_elem) {
	{
		auto expr = &(_739_elem);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa172d86:;
		if (it != expr_end) {
			jule::I64 _749_i = it - expr->begin();
			jule::Str *_7412_e = it;
			{
				if (!((*(_7412_e))).empty()) {
					return _1cb1de662_Clean(_1cb1c5ca8_Join(_739_elem.slice(_749_i), jule::Str::lit("/", 1)));;
				};
			}
			_iter_next_1aa172d86:;
			++it;
			_749_i++;
			goto _iter_begin_1aa172d86;
		}
		_iter_end_1aa172d86:;
	};
	return jule::Str();;
}



inline jule::I64 _20d91d820_getLastFsError(void) {
	jule::I64 _725_err = _20d83b793_GetLastErrno();;
	{
		auto &_match_expr{ _725_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1aa180b96:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1aa180a97:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else if (_match_expr == 40LL) {
			_case_begin_1aa1804d1:;
			{
				return static_cast<jule::I64>(2LL);;
			}
		}
		else if (_match_expr == 36LL) {
			_case_begin_1aa180547:;
			{
				return static_cast<jule::I64>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1aa1805ad:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1aa180635:;
			{
				return static_cast<jule::I64>(5LL);;
			}
		}
		else if (_match_expr == 75LL) {
			_case_begin_1aa1806ac:;
			{
				return static_cast<jule::I64>(6LL);;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1aa180734:;
			{
				return static_cast<jule::I64>(7LL);;
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_1aa180d3e:;
			{
				return static_cast<jule::I64>(8LL);;
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_1aa180db6:;
			{
				return static_cast<jule::I64>(9LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1aa180e3d:;
			{
				return static_cast<jule::I64>(10LL);;
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_1aa180eb5:;
			{
				return static_cast<jule::I64>(11LL);;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1aa18103c:;
			{
				return static_cast<jule::I64>(12LL);;
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1aa1810b4:;
			{
				return static_cast<jule::I64>(13LL);;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1aa18113b:;
			{
				return static_cast<jule::I64>(14LL);;
			}
		}
		else if (_match_expr == 63LL) {
			_case_begin_1aa1811b3:;
			{
				return static_cast<jule::I64>(15LL);;
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_1aa18123a:;
			{
				return static_cast<jule::I64>(16LL);;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1aa1812b2:;
			{
				return static_cast<jule::I64>(17LL);;
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_1aa181339:;
			{
				return static_cast<jule::I64>(18LL);;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1aa1813b1:;
			{
				return static_cast<jule::I64>(19LL);;
			}
		}
		else if (_match_expr == 26LL || _match_expr == 16LL) {
			_case_begin_1aa181438:;
			{
				return static_cast<jule::I64>(20LL);;
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_1aa1814b0:;
			{
				return static_cast<jule::I64>(21LL);;
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1aa181537:;
			{
				return static_cast<jule::I64>(22LL);;
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_1aa1815ae:;
			{
				return static_cast<jule::I64>(23LL);;
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_1aa181636:;
			{
				return static_cast<jule::I64>(24LL);;
			}
		}
		else if (_match_expr == 105LL) {
			_case_begin_1aa1816ad:;
			{
				return static_cast<jule::I64>(25LL);;
			}
		}
		else if (_match_expr == 74LL) {
			_case_begin_1aa181735:;
			{
				return static_cast<jule::I64>(26LL);;
			}
		}
		else if (_match_expr == 39LL) {
			_case_begin_1aa1817ac:;
			{
				return static_cast<jule::I64>(27LL);;
			}
		}
		else {
			_case_begin_1aa18036b:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		_match_end_1aa18047b:;
	};
}



inline __jule_tuple_int__jule_tuple_bool _1cb38e191_AtoiBp(jule::U8* _722_b, jule::I64 _736_n) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Bool _89_neg = ((*(_722_b)) == '-');;
	if (_89_neg) {
		if ((_736_n == 1LL)) {
			return __jule_func_result;;
		};
		(_736_n)--;
		(_722_b)++;
	};
	for (; (_736_n > 0LL); (_736_n)--) {
		{
			if ((('0' <= (*(_722_b))) && ((*(_722_b)) <= '9'))) {
				__jule_func_result.__jule_result_arg0*=10LL;
				__jule_func_result.__jule_result_arg0+=static_cast<jule::I64>(((*(_722_b)) - '0'));
			} else {
				return __jule_func_result;;
			};
			(_722_b)++;
		}
	_iter_next_1aa1aa1a9:;
	}
	_iter_end_1aa1aa1a9:;;
	__jule_func_result.__jule_result_arg1=true;
	if (_89_neg) {
		__jule_func_result.__jule_result_arg0=(-(__jule_func_result.__jule_result_arg0));
	};
	return __jule_func_result;;
}



inline jule::Str _1cb3977b5_Itoa(jule::I64 _89_x) {
	if ((_89_x < 0LL)) {
		return (jule::Str::lit("-", 1) + _1cb397ac3_Utoa(static_cast<jule::U64>((-(_89_x)))));;
	};
	return _1cb397ac3_Utoa(static_cast<jule::U64>(_89_x));;
}



inline jule::Str _1cb397ac3_Utoa(jule::U64 _1613_x) {
	if ((_1613_x == 0LLU)) {
		return jule::Str::lit("0", 1);;
	};
	jule::Slice<jule::U8> _209_buf = jule::Slice<jule::U8>::alloc(20LL, 20LL, 0);;
	jule::I64 _219_i = 0LL;;
	while ((_1613_x >= 10LLU)) {
		{
			jule::U64 _239_q = (_1613_x / 10LLU);;
			_209_buf[_219_i]=static_cast<jule::U8>((('0' + _1613_x) - (_239_q * 10LLU)));
			(_219_i)++;
			_1613_x=_239_q;
		}
	_iter_next_1aa1b1cd7:;
	}
	_iter_end_1aa1b1cd7:;;
	_209_buf[_219_i]=static_cast<jule::U8>(('0' + _1613_x));
	(_209_buf).mut_slice(0LL, (_219_i + 1LL));;
	_1cb397d04_rev(&(_209_buf));
	return _20d73ccb0_StrFromBytes(_209_buf);;
}



inline void _1cb397d04_rev(jule::Slice<jule::U8>* _3513_b) {
	jule::I64 _369_i = 0LL;;
	for (; (_369_i < ((*(_3513_b)).len() >> 1LL)); (_369_i)++) {
		{
			({
				jule::U8 ___jule_assign_arg = (*(_3513_b))[(((*(_3513_b)).len() - 1LL) - _369_i)];
				jule::U8 _1___jule_assign_arg = (*(_3513_b))[_369_i];
				(*(_3513_b))[_369_i] = ___jule_assign_arg;
				(*(_3513_b))[(((*(_3513_b)).len() - 1LL) - _369_i)] = _1___jule_assign_arg;
			});
		}
	_iter_next_1aa1b5879:;
	}
	_iter_end_1aa1b5879:;;
}



inline jule::Slice<char*> _1cb39b401_strSliceToCstrSlice(jule::Slice<jule::Str>* _3525_s, jule::Slice<jule::Slice<jule::U8>>* _3540_bargs) {
	jule::Slice<char*> _369_cs = jule::Slice<char*>::alloc(((*(_3525_s)).len() + 1LL), ((*(_3525_s)).len() + 1LL), nullptr);;
	(*(_3540_bargs))=jule::Slice<jule::Slice<jule::U8>>::alloc((*(_3525_s)).len(), (*(_3525_s)).len());
	{
		auto expr = _3525_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa1d1697:;
		if (it != expr_end) {
			jule::I64 _389_i = it - expr->begin();
			jule::Str *_3812_arg = it;
			{
				jule::Slice<jule::U8> _3913_barg = _20d8c69b5_StrToBytes((*(_3812_arg)));;
				(*(_3540_bargs))[_389_i]=_3913_barg;
				_369_cs[_389_i]=((char*)((&(_3913_barg[0LL]))));
			}
			_iter_next_1aa1d1697:;
			++it;
			_389_i++;
			goto _iter_begin_1aa1d1697;
		}
		_iter_end_1aa1d1697:;
	};
	_369_cs[(_369_cs.len() - 1LL)]=nullptr;
	return _369_cs;;
}



inline jule::I64 _1cb39b775_execvp(jule::Str* _4712_file, jule::Slice<jule::Str>* _4724_argv) {
	jule::Slice<jule::Slice<jule::U8>> _489_bargs = static_cast<jule::Slice<jule::Slice<jule::U8>>>(nullptr);;
	jule::Slice<char*> _495_cargv = _1cb39b401_strSliceToCstrSlice(_4724_argv, &(_489_bargs));;
	jule::Slice<jule::U8> _505_s = _20d8c69b5_StrToBytes((*(_4712_file)));;
	{
		return execvp(((char*)((&(_505_s[0LL])))), (char*const*)(&(_495_cargv[0LL])));;
	};
}



inline jule::VoidExceptional _1cb39b9a6_setenv(jule::Slice<jule::Str>* _5612_envv) {
	;
	{
		auto expr = _5612_envv;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa1d4ee7:;
		if (it != expr_end) {
			jule::Str *_5812_env = it;
			{
				jule::I64 _599_i = _1cb1bd08b_FindByteStr((*(_5812_env)), '=');;
				if ((_599_i == -1LL)) {
					return jule::VoidExceptional{.error=jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0)};
				};
				{
					jule::Slice<jule::U8> _6413_key = _20d8c69b5_StrToBytes((*(_5812_env)).slice(0LL, _599_i));;
					if ((((*(_5812_env)).len() - _599_i) == 1LL)) {
						jule::Str _6617_val = jule::Str::lit("\x00", 1);;
						if ((setenv(((char*)((&(_6413_key[0LL])))), ((char*)((&(_6617_val[0LL])))), 1LL) == -1LL)) {
							return jule::VoidExceptional{.error=jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0)};
						};
					} else {
						jule::Slice<jule::U8> _7117_val = _20d8c69b5_StrToBytes((*(_5812_env)).slice((_599_i + 1LL)));;
						if ((setenv(((char*)((&(_6413_key[0LL])))), ((char*)((&(_7117_val[0LL])))), 1LL) == -1LL)) {
							return jule::VoidExceptional{.error=jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0)};
						};
					};
				};
			}
			_iter_next_1aa1d4ee7:;
			++it;
			goto _iter_begin_1aa1d4ee7;
		}
		_iter_end_1aa1d4ee7:;
	};
	return jule::VoidExceptional{};
}



inline jule::I64 _1cb39c930_processErrorFromCode(jule::I64 _1125_code) {
	{
		auto &_match_expr{ _1125_code };
		
		if (_match_expr == 13LL) {
			_case_begin_1aa1d5d61:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1aa1d5dc7:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else {
			_case_begin_1aa1da89e:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		_match_end_1aa1d6405:;
	};
}



inline jule::I64 _1cb39cb83_getLastProcessError(void) {
	return _1cb39c930_processErrorFromCode(_20d83b793_GetLastErrno());;
}



inline void _1cb39d49c_Exit(jule::I64 _129_code) {
	_20d8e473b_Exit(_129_code);
}



inline jule::Str _1cb39d6ab_Executable(void) {
	return jule::executable();;
}



inline jule::Bool _1cb277a08_IsStdHeaderPath(jule::Str _2620_p) {
	return ((_2620_p[0LL] == '<') && (_2620_p[(_2620_p.len() - 1LL)] == '>'));;
}



inline jule::Bool _1cb277cd3_IsValidHeaderExt(jule::Str _3121_ext) {
	{
		auto expr = &(_1cb1e3e3b_CppHeaderExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa20cdbb:;
		if (it != expr_end) {
			jule::Str *_3212_validExt = it;
			{
				if ((_3121_ext == (*(_3212_validExt)))) {
					return true;;
				};
			}
			_iter_next_1aa20cdbb:;
			++it;
			goto _iter_begin_1aa20cdbb;
		}
		_iter_end_1aa20cdbb:;
	};
	return false;;
}



inline jule::Bool _1cb27809c_IsValidCppExt(jule::Str _4118_ext) {
	if (_4118_ext.equal(".c", 2)) {
		return true;;
	};
	{
		auto expr = &(_1cb1e52a0_CppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa20d460:;
		if (it != expr_end) {
			jule::Str *_4512_e = it;
			{
				if ((_4118_ext == (*(_4512_e)))) {
					return true;;
				};
			}
			_iter_next_1aa20d460:;
			++it;
			goto _iter_begin_1aa20d460;
		}
		_iter_end_1aa20d460:;
	};
	{
		auto expr = &(_1cb275c8c_ObjectiveCppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa20e098:;
		if (it != expr_end) {
			jule::Str *_5012_e = it;
			{
				if ((_4118_ext == (*(_5012_e)))) {
					return true;;
				};
			}
			_iter_next_1aa20e098:;
			++it;
			goto _iter_begin_1aa20e098;
		}
		_iter_end_1aa20e098:;
	};
	return false;;
}



inline jule::Str _1cb285582_Logf(jule::Str _3239_fmt, jule::Slice<jule::Any> _32322_args) {
	return _1cb286022_applyFmt(_3239_fmt, _32322_args);;
}



inline jule::Str _1cb285890_argToStr(jule::Any _32713_arg) {
	{
		auto &_match_expr{ _32713_arg };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1aa2105d8:;
			{
				return _32713_arg.unsafe_cast<jule::Str>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type134) {
			_case_begin_1aa210c59:;
			{
				return jule::Str::from_byte(_32713_arg.unsafe_cast<jule::U8>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1aa210cd1:;
			{
				return jule::Str::from_rune(_32713_arg.unsafe_cast<jule::I32>());;
			}
		}
		else {
			_case_begin_1aa210819:;
			{
				return jule::Str::lit("<fmt?>", 6);;
			}
		}
		_match_end_1aa2107b4:;
	};
}



inline jule::I64 _1cb285b59_findNextFmt(jule::Str _34016_fmt) {
	{
		auto expr = &(_34016_fmt);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa210929:;
		if (it != expr_end) {
			jule::I64 _3419_i = it - expr->begin();
			jule::U8 *_34112_b = it;
			{
				if (((*(_34112_b)) == '@')) {
					return _3419_i;;
				};
			}
			_iter_next_1aa210929:;
			++it;
			_3419_i++;
			goto _iter_begin_1aa210929;
		}
		_iter_end_1aa210929:;
	};
	return -1LL;;
}



inline jule::Str _1cb286022_applyFmt(jule::Str _34917_fmt, jule::Slice<jule::Any> _34927_args) {
	_1cb1d27a9_StrBuilder _3509_s = static__1cb1d2a73_New(32LL);;
	{
		auto expr = &(_34927_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa21283d:;
		if (it != expr_end) {
			jule::Any *_35112_arg = it;
			{
				jule::I64 _3529_i = _1cb285b59_findNextFmt(_34917_fmt);;
				if ((_3529_i == -1LL)) {
					goto _iter_end_1aa21283d;
				};
				_1cb1db3d9_WriteStr(&_3509_s, _34917_fmt.slice(0LL, _3529_i));
				_1cb1db3d9_WriteStr(&_3509_s, _1cb285890_argToStr((*(_35112_arg))));
				(_34917_fmt).mut_slice((_3529_i + 1LL));;
			}
			_iter_next_1aa21283d:;
			++it;
			goto _iter_begin_1aa21283d;
		}
		_iter_end_1aa21283d:;
	};
	_1cb1db3d9_WriteStr(&_3509_s, _34917_fmt);
	return _1cb1dbbd1_Str(&_3509_s);;
}



inline jule::Bool _1cb286d7a_IsTopDirective(jule::Str _2219_directive) {
	return (_2219_directive.equal("pass", 4) || _2219_directive.equal("build", 5));;
}



inline jule::Bool _1cb288299_IsWindows(jule::Str _3714_os) {
	return _3714_os.equal("windows", 7);;
}



inline jule::Bool _1cb2885a7_IsDarwin(jule::Str _4013_os) {
	return _4013_os.equal("darwin", 6);;
}



inline jule::Bool _1cb288871_IsLinux(jule::Str _4312_os) {
	return _4312_os.equal("linux", 5);;
}



inline jule::Bool _1cb288bb2_IsI386(jule::Str _4611_arch) {
	return _4611_arch.equal("i386", 4);;
}



inline jule::Bool _1cb288e48_IsAmd64(jule::Str _4912_arch) {
	return _4912_arch.equal("amd64", 5);;
}



inline jule::Bool _1cb289212_IsArm64(jule::Str _5212_arch) {
	return _5212_arch.equal("arm64", 5);;
}



inline jule::Bool _1cb2894cb_IsUnix(jule::Str _5511_os) {
	return (_1cb2885a7_IsDarwin(_5511_os) || _1cb288871_IsLinux(_5511_os));;
}



inline jule::Bool _1cb2898a5_Is32Bit(jule::Str _5812_arch) {
	return _1cb288bb2_IsI386(_5812_arch);;
}



inline jule::Bool _1cb289ae7_Is64Bit(jule::Str _6112_arch) {
	return (_1cb288e48_IsAmd64(_6112_arch) || _1cb289212_IsArm64(_6112_arch));;
}



inline void _1cb39e943_init(void) {
	jule::Str _259_path = _1cb39d6ab_Executable();;
	if ((_259_path).empty()) {
		jule::panic(jule::Str::lit("std::jule::build: executable file cannot found", 46) + jule::Str("\nlocation: std/jule/build/env.jule:27:9"));;
	};
	{
		_1cb39de92_PathWd=({
			auto except = _20d76825d_WorkingDir();
			(except.ok()) ? (except.result) : ({{
				jule::panic(jule::Str::lit("std::jule::build: working directory path cannot found", 53) + jule::Str("\nlocation: std/jule/build/env.jule:33:13"));;
				return;;
			} jule::Str();});
		});
		_1cb39dbea_PathExec=_1cb1e0c6d_Dir(_259_path);
		_1cb39d9db_PathStdlib=_1cb1e007a_Join(jule::Slice<jule::Str>::make({_1cb39dbea_PathExec,jule::Str::lit("..", 2),jule::Str::lit("std", 3)}));
		_1cb39e28e_PathApi=_1cb1e007a_Join(jule::Slice<jule::Str>::make({_1cb39dbea_PathExec,jule::Str::lit("..", 2),jule::Str::lit("api", 3),jule::Str::lit("jule.hpp", 8)}));
	};
}



inline jule::I64 _1b26d71a1_LeadingZeros64(jule::U64 _6119_x) {
	return (64LL - _1b26dea38_Len64(_6119_x));;
}



inline jule::I64 _1b26d80e7_TrailingZeros(jule::U64 _8318_x) {
	;
	return _1b26d8c96_TrailingZeros64(static_cast<jule::U64>(_8318_x));;
}



inline jule::I64 _1b26d89cc_TrailingZeros32(jule::U32 _10520_x) {
	if ((_10520_x == 0LLU)) {
		return 32LL;;
	};
	return static_cast<jule::I64>(_1b26d77de__DE_BRUIJN32_TAB[static_cast<jule::I64>((((_10520_x & (-(_10520_x))) * 125613361LLU) >> 27LLU))]);;
}



inline jule::I64 _1b26d8c96_TrailingZeros64(jule::U64 _11420_x) {
	if ((_11420_x == 0LLU)) {
		return 64LL;;
	};
	return static_cast<jule::I64>(_1b26d7d83__DE_BRUIJN64_TAB[static_cast<jule::I64>((((_11420_x & (-(_11420_x))) * 285870213051353865LLU) >> 58LLU))]);;
}



inline jule::I64 _1b26de76e_Len32(jule::U32 _35214_x) {
	jule::I64 __jule_func_result = 0;
	if ((_35214_x >= 65536LLU)) {
		_35214_x>>=16LLU;
		__jule_func_result=16LL;
	};
	if ((_35214_x >= 256LLU)) {
		_35214_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = (__jule_func_result + static_cast<jule::I64>(jule::Str::at(reinterpret_cast<const jule::U8*>("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b"), 256, static_cast<jule::I64>(_35214_x))));
	return __jule_func_result;;
}



inline jule::I64 _1b26dea38_Len64(jule::U64 _36614_x) {
	jule::I64 __jule_func_result = 0;
	if ((_36614_x >= 4294967296LLU)) {
		_36614_x>>=32LLU;
		__jule_func_result=32LL;
	};
	if ((_36614_x >= 65536LLU)) {
		_36614_x>>=16LLU;
		__jule_func_result+=16LL;
	};
	if ((_36614_x >= 256LLU)) {
		_36614_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = (__jule_func_result + static_cast<jule::I64>(jule::Str::at(reinterpret_cast<const jule::U8*>("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b"), 256, static_cast<jule::I64>(_36614_x))));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _1b26e07c5_Add64(jule::U64 _41510_x, jule::U64 _41518_y, jule::U64 _41526_carry) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg0=((_41510_x + _41518_y) + _41526_carry);
	__jule_func_result.__jule_result_arg1=(((_41510_x & _41518_y) | ((_41510_x | _41518_y) & (~(__jule_func_result.__jule_result_arg0)))) >> 63LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _1b26e20ce_Mul64(jule::U64 _49910_x, jule::U64 _49918_y) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::U64 _5015_x0 = (_49910_x & 4294967295LLU);;
	jule::U64 _5025_x1 = (_49910_x >> 32LLU);;
	jule::U64 _5035_y0 = (_49918_y & 4294967295LLU);;
	jule::U64 _5045_y1 = (_49918_y >> 32LLU);;
	jule::U64 _5055_w0 = (_5015_x0 * _5035_y0);;
	jule::U64 _5065_t = ((_5025_x1 * _5035_y0) + (_5055_w0 >> 32LLU));;
	jule::U64 _5079_w1 = (_5065_t & 4294967295LLU);;
	jule::U64 _5085_w2 = (_5065_t >> 32LLU);;
	_5079_w1+=(_5015_x0 * _5045_y1);
	__jule_func_result.__jule_result_arg0=(((_5025_x1 * _5045_y1) + _5085_w2) + (_5079_w1 >> 32LLU));
	__jule_func_result.__jule_result_arg1=(_49910_x * _49918_y);
	return __jule_func_result;;
}



inline jule::U32 _1b25e3db0_F32Bits(jule::F32 _4112_f) {
	return (*(((jule::U32*)((&(_4112_f))))));;
}



inline jule::F32 _1b25e41bd_F32FromBits(jule::U32 _4716_b) {
	return (*(((jule::F32*)((&(_4716_b))))));;
}



inline jule::U64 _1b25e4487_F64Bits(jule::F64 _5212_f) {
	return (*(((jule::U64*)((&(_5212_f))))));;
}



inline jule::F64 _1b25e47c8_F64FromBits(jule::U64 _5816_b) {
	return (*(((jule::F64*)((&(_5816_b))))));;
}



inline __jule_tuple_f64__jule_tuple_int _1b25e6d3b_Frexp(jule::F64 _4714_f) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		
		if ((_4714_f == 0LL)) {
			_case_begin_1aa2ec021:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		else if (_1b26ea13c_IsInf(_4714_f, 0LL) || _1b26e99aa_IsNaN(_4714_f)) {
			_case_begin_1aa2ec0ba:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		_match_end_1aa2ebe44:;
	};
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1b26ea406_normalize(_4714_f);
		_4714_f = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _569_x = _1b25e4487_F64Bits(_4714_f);;
	__jule_func_result.__jule_result_arg1+=((static_cast<jule::I64>(((_569_x >> 52LLU) & 2047LLU)) - 1023LL) + 1LL);
	_569_x=(_569_x & 9227875636482146303LLU);
	_569_x|=4602678819172646912LLU;
	__jule_func_result.__jule_result_arg0=_1b25e47c8_F64FromBits(_569_x);
	return __jule_func_result;;
}



inline jule::F64 _1b26e969c_NaN(void) {
	return _1b25e47c8_F64FromBits(9221120237041090561LLU);;
}



inline jule::Bool _1b26e99aa_IsNaN(jule::F64 _5210_f) {
	return false;;
}



inline jule::F64 _1b26e9c74_Inf(jule::I64 _618_sign) {
	if ((_618_sign >= 0LL)) {
		return _1b25e47c8_F64FromBits(9218868437227405312LLU);;
	};
	return _1b25e47c8_F64FromBits(18442240474082181120LLU);;
}



inline jule::Bool _1b26ea13c_IsInf(jule::F64 _7210_f, jule::I64 _7218_sign) {
	return (((_7218_sign >= 0LL) && (_7210_f > jule::MAX_F64)) || ((_7218_sign <= 0LL) && (_7210_f < jule::MIN_F64)));;
}



inline __jule_tuple_f64__jule_tuple_int _1b26ea406_normalize(jule::F64 _8214_x) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	if ((_1b26ec7b0_Abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		__jule_func_result.__jule_result_arg0 = (_8214_x * 4503599627370496LLU);
		__jule_func_result.__jule_result_arg1 = -52LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _8214_x;
	__jule_func_result.__jule_result_arg1 = 0LL;
	return __jule_func_result;;
}



inline jule::F64 _1b26ebdca_Log(jule::F64 _1118_x) {
	;
	;
	;
	;
	;
	;
	;
	;
	;
	{
		
		if (_1b26e99aa_IsNaN(_1118_x) || _1b26ea13c_IsInf(_1118_x, 1LL)) {
			_case_begin_1aa339b1e:;
			{
				return _1118_x;;
			}
		}
		else if ((_1118_x < 0LL)) {
			_case_begin_1aa339bb8:;
			{
				return _1b26e969c_NaN();;
			}
		}
		else if ((_1118_x == 0LL)) {
			_case_begin_1aa339c2e:;
			{
				return _1b26e9c74_Inf(-1LL);;
			}
		}
		_match_end_1aa339a53:;
	};
	jule::F64 _1339_f1;
	jule::I64 _13317_ki;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1b25e6d3b_Frexp(_1118_x);
		_1339_f1 = __jule_assign_result.__jule_result_arg0;
		_13317_ki = __jule_assign_result.__jule_result_arg1;
	});
	if ((_1339_f1 < 0.7071067811865476)) {
		_1339_f1*=2LL;
		(_13317_ki)--;
	};
	jule::F64 _1385_f = (_1339_f1 - 1LL);;
	jule::F64 _1395_k = static_cast<jule::F64>(_13317_ki);;
	jule::F64 _1425_s = jule::div(_1385_f,(2LL + _1385_f));;
	jule::F64 _1435_s2 = (_1425_s * _1425_s);;
	jule::F64 _1445_s4 = (_1435_s2 * _1435_s2);;
	jule::F64 _1455_t1 = (_1435_s2 * (0.6666666666666735 + (_1445_s4 * (0.2857142874366239 + (_1445_s4 * (0.1818357216161805 + (_1445_s4 * 0.14798198605116586)))))));;
	jule::F64 _1465_t2 = (_1445_s4 * (0.3999999999940942 + (_1445_s4 * (0.22222198432149784 + (_1445_s4 * 0.15313837699209373)))));;
	jule::F64 _1475_R = (_1455_t1 + _1465_t2);;
	jule::F64 _1485_hfsq = ((0.5 * _1385_f) * _1385_f);;
	return ((_1395_k * 0.6931471803691238) - ((_1485_hfsq - ((_1425_s * (_1485_hfsq + _1475_R)) + (_1395_k * 0.00000000019082149292705877))) - _1385_f));;
}



inline jule::F64 _1b26ec7b0_Abs(jule::F64 _438_x) {
	return _1b25e47c8_F64FromBits((_1b25e4487_F64Bits(_438_x) & 9223372036854775807LLU));;
}



inline __jule_tuple_f64__jule_tuple_f64 _1b2704388_Modf(jule::F64 _449_f) {
	__jule_tuple_f64__jule_tuple_f64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::F64 _465_absF = _1b26ec7b0_Abs(_449_f);;
	jule::F64 _479_i = 0LL;;
	if ((_465_absF > 4503599627370496LL)) {
		_479_i=_449_f;
	} else {
		_479_i=(_465_absF + 4503599627370496LL);
		_479_i-=4503599627370496LL;
		while ((_479_i > _465_absF)) {
			{
				(_479_i)--;
			}
		_iter_next_1aa39dcb5:;
		}
		_iter_end_1aa39dcb5:;;
		if ((_449_f < 0LL)) {
			_479_i=(-(_479_i));
		};
	};
	__jule_func_result.__jule_result_arg0 = _479_i;
	__jule_func_result.__jule_result_arg1 = (_449_f - _479_i);
	return __jule_func_result;;
}



inline jule::F64 _1b2704b91_Log2(jule::F64 _449_x) {
	jule::F64 _455_frac;
	jule::I64 _4511_exp;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1b25e6d3b_Frexp(_449_x);
		_455_frac = __jule_assign_result.__jule_result_arg0;
		_4511_exp = __jule_assign_result.__jule_result_arg1;
	});
	if ((_455_frac == 0.5)) {
		return static_cast<jule::F64>((_4511_exp - 1LL));;
	};
	return ((_1b26ebdca_Log(_455_frac) * 1.4426950408889634) + static_cast<jule::F64>(_4511_exp));;
}



inline jule::Str _1b272d637_FmtFloat(jule::F64 _7913_f, jule::U8 _7921_fmt, jule::I64 _7932_prec, jule::I64 _7943_bitSize) {
	return _20d73ccb0_StrFromBytes(_1b272dc20_genericFtoa(jule::Slice<jule::U8>::alloc(0LL, _1b27320ca_max(((_7932_prec + 4LL) + 1LL), 25LL), 0), _7913_f, _7921_fmt, _7932_prec, _7943_bitSize));;
}



inline jule::Slice<jule::U8> _1b272dc20_genericFtoa(jule::Slice<jule::U8> _8720_dst, jule::F64 _8733_val, jule::U8 _8743_fmt, jule::I64 _8758_prec, jule::I64 _8769_bitSize) {
	jule::U64 _889_bits = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_1b272c427_floatInfo> _8913_flt = nullptr;;
	{
		auto &_match_expr{ _8769_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1aa59d987:;
			{
				_889_bits=static_cast<jule::U64>(_1b25e3db0_F32Bits(static_cast<jule::F32>(_8733_val)));
				_8913_flt=((jule::Ptr<_1b272c427_floatInfo>)((&(_1b272c823_f32info))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1aa59d9ed:;
			{
				_889_bits=_1b25e4487_F64Bits(_8733_val);
				_8913_flt=((jule::Ptr<_1b272c427_floatInfo>)((&(_1b272cb20_f64info))));
			}
		}
		else {
			_case_begin_1aa59b622:;
			{
				jule::panic(jule::Str::lit("std::conv: illegal bitSize", 26) + jule::Str("\nlocation: std/conv/ftoa.jule:98:9"));;
			}
		}
		_match_end_1aa59d25b:;
	};
	jule::Bool _1015_neg = ((_889_bits >> ((*(_8913_flt))._field_expbits + (*_8913_flt.alloc)._field_mantbits)) != 0LLU);;
	jule::I64 _1029_exp = (static_cast<jule::I64>((_889_bits >> (*_8913_flt.alloc)._field_mantbits)) & static_cast<jule::I64>(((1LL << (*_8913_flt.alloc)._field_expbits) - 1LL)));;
	jule::U64 _1039_mant = (_889_bits & ((static_cast<jule::U64>(1LLU) << (*_8913_flt.alloc)._field_mantbits) - 1LLU));;
	{
		auto &_match_expr{ _1029_exp };
		
		if (_match_expr == static_cast<jule::I64>(((1LL << (*_8913_flt.alloc)._field_expbits) - 1LL))) {
			_case_begin_1aa5a2848:;
			{
				{
					
					if ((_1039_mant != 0LLU)) {
						_case_begin_1aa5a4251:;
						{
							return jule::append(_8720_dst,jule::Str::lit("nan", 3));;
						}
					}
					else if (_1015_neg) {
						_case_begin_1aa5a40ca:;
						{
							return jule::append(_8720_dst,jule::Str::lit("-inf", 4));;
						}
					}
					else {
						_case_begin_1aa5a3959:;
						{
							return jule::append(_8720_dst,jule::Str::lit("+inf", 4));;
						}
					}
					_match_end_1aa5a385a:;
				};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1aa5a2936:;
			{
				(_1029_exp)++;
			}
		}
		else {
			_case_begin_1aa5a19ac:;
			{
				_1039_mant|=(static_cast<jule::U64>(1LLU) << (*_8913_flt.alloc)._field_mantbits);
			}
		}
		_match_end_1aa5a1b55:;
	};
	_1029_exp+=(*_8913_flt.alloc)._field_bias;
	if ((_8743_fmt == 'b')) {
		return _1b2731250_fmtB(_8720_dst, _1015_neg, _1039_mant, _1029_exp, &((*_8913_flt.alloc)));;
	};
	if (((_8743_fmt == 'x') || (_8743_fmt == 'X'))) {
		return _1b27318d2_fmtX(_8720_dst, _8758_prec, _8743_fmt, _1015_neg, _1039_mant, _1029_exp, &((*_8913_flt.alloc)));;
	};
	;
	_1b272d0a4_decimalSlice _1379_digs = _1b272d0a4_decimalSlice{};;
	jule::Bool _1389_ok = false;;
	jule::Bool _1405_shortest = (_8758_prec < 0LL);;
	if (_1405_shortest) {
		_1379_digs._field_d=jule::Slice<jule::U8>::alloc(32LL, 32LL, 0);
		_1b273c02a_ryuFtoaShortest(&(_1379_digs), _1039_mant, (_1029_exp - static_cast<jule::I64>((*_8913_flt.alloc)._field_mantbits)), &((*_8913_flt.alloc)));
		_1389_ok=true;
		{
			auto &_match_expr{ _8743_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1aa5a2491:;
				{
					_8758_prec=_1b27320ca_max((_1379_digs._field_nd - 1LL), 0LL);
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1aa5a7c9e:;
				{
					_8758_prec=_1b27320ca_max((_1379_digs._field_nd - _1379_digs._field_dp), 0LL);
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1aa5a7d15:;
				{
					_8758_prec=_1379_digs._field_nd;
				}
			}
			_match_end_1aa5a6d36:;
		};
	} else if ((_8743_fmt != 'f')) {
		jule::I64 _15713_digits = _8758_prec;;
		{
			auto &_match_expr{ _8743_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1aa5a9c6d:;
				{
					(_15713_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1aa5a9d5b:;
				{
					if ((_8758_prec == 0LL)) {
						_8758_prec=1LL;
					};
					_15713_digits=_8758_prec;
				}
			}
			else {
				_case_begin_1aa5a982d:;
				{
					_15713_digits=1LL;
				}
			}
			_match_end_1aa5a82ee:;
		};
		if (((_8769_bitSize == 32LL) && (_15713_digits <= 9LL))) {
			_1379_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_1b273ac71_ryuFtoaFixed32(&(_1379_digs), static_cast<jule::U32>(_1039_mant), (_1029_exp - static_cast<jule::I64>((*_8913_flt.alloc)._field_mantbits)), _15713_digits);
			_1389_ok=true;
		} else if ((_15713_digits <= 18LL)) {
			_1379_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_1b273b216_ryuFtoaFixed64(&(_1379_digs), _1039_mant, (_1029_exp - static_cast<jule::I64>((*_8913_flt.alloc)._field_mantbits)), _15713_digits);
			_1389_ok=true;
		};
	};
	if ((!(_1389_ok))) {
		return _1b272e429_bigFtoa(_8720_dst, _8758_prec, _8743_fmt, _1015_neg, _1039_mant, _1029_exp, &((*_8913_flt.alloc)));;
	};
	return _1b272eb00_fmtDigits(_8720_dst, _1405_shortest, _1015_neg, _1379_digs, _8758_prec, _8743_fmt);;
}



inline jule::Slice<jule::U8> _1b272e429_bigFtoa(jule::Slice<jule::U8> _18716_dst, jule::I64 _18733_prec, jule::U8 _18744_fmt, jule::Bool _18755_neg, jule::U64 _1885_mant, jule::I64 _18816_exp, _1b272c427_floatInfo* _18827_flt) {
	_1b2740d0e_decimal _1899_d = _1b2740d0e_decimal{};;
	_1b27411b6_assign(&_1899_d, _1885_mant);
	_1b274146e_shift(&_1899_d, (_18816_exp - static_cast<jule::I64>((*(_18827_flt))._field_mantbits)));
	_1b272d0a4_decimalSlice _1929_digs = _1b272d0a4_decimalSlice{};;
	jule::Bool _1935_shortest = (_18733_prec < 0LL);;
	if (_1935_shortest) {
		_1b273001d_roundShortest(&(_1899_d), _1885_mant, _18816_exp, _18827_flt);
		_1929_digs=_1b272d0a4_decimalSlice{._field_d=_1899_d._field_d.slice(0LL), ._field_nd=_1899_d._field_nd, ._field_dp=_1899_d._field_dp, };
		{
			auto &_match_expr{ _18744_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1aa5b0bca:;
				{
					_18733_prec=(_1929_digs._field_nd - 1LL);
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1aa5b19bc:;
				{
					_18733_prec=_1b27320ca_max((_1929_digs._field_nd - _1929_digs._field_dp), 0LL);
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1aa5b1a33:;
				{
					_18733_prec=_1929_digs._field_nd;
				}
			}
			_match_end_1aa5b1846:;
		};
	} else {
		{
			auto &_match_expr{ _18744_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1aa5b0911:;
				{
					_1b2741c88_round(&_1899_d, (_18733_prec + 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1aa5b0977:;
				{
					_1b2741c88_round(&_1899_d, (_1899_d._field_dp + _18733_prec));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1aa5b09dd:;
				{
					if ((_18733_prec == 0LL)) {
						_18733_prec=1LL;
					};
					_1b2741c88_round(&_1899_d, _18733_prec);
				}
			}
			_match_end_1aa5b3194:;
		};
		_1929_digs=_1b272d0a4_decimalSlice{._field_d=_1899_d._field_d.slice(0LL), ._field_nd=_1899_d._field_nd, ._field_dp=_1899_d._field_dp, };
	};
	return _1b272eb00_fmtDigits(_18716_dst, _1935_shortest, _18755_neg, _1929_digs, _18733_prec, _18744_fmt);;
}



inline jule::Slice<jule::U8> _1b272eb00_fmtDigits(jule::Slice<jule::U8> _22418_dst, jule::Bool _22431_shortest, jule::Bool _22447_neg, _1b272d0a4_decimalSlice _2255_digs, jule::I64 _22529_prec, jule::U8 _22540_fmt) {
	{
		auto &_match_expr{ _22540_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_1aa5b61ca:;
			{
				return _1b27305b2_fmtE(_22418_dst, _22447_neg, _2255_digs, _22529_prec, _22540_fmt);;
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1aa5b6241:;
			{
				return _1b2730a9b_fmtF(_22418_dst, _22447_neg, _2255_digs, _22529_prec);;
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_1aa5b62a7:;
			{
				jule::I64 _23313_eprec = _22529_prec;;
				if (((_23313_eprec > _2255_digs._field_nd) && (_2255_digs._field_nd >= _2255_digs._field_dp))) {
					_23313_eprec=_2255_digs._field_nd;
				};
				if (_22431_shortest) {
					_23313_eprec=6LL;
				};
				jule::I64 _2439_exp = (_2255_digs._field_dp - 1LL);;
				if (((_2439_exp < -4LL) || (_2439_exp >= _23313_eprec))) {
					if ((_22529_prec > _2255_digs._field_nd)) {
						_22529_prec=_2255_digs._field_nd;
					};
					return _1b27305b2_fmtE(_22418_dst, _22447_neg, _2255_digs, (_22529_prec - 1LL), ((_22540_fmt + 'e') - 'g'));;
				};
				if ((_22529_prec > _2255_digs._field_dp)) {
					_22529_prec=_2255_digs._field_nd;
				};
				return _1b2730a9b_fmtF(_22418_dst, _22447_neg, _2255_digs, _1b27320ca_max((_22529_prec - _2255_digs._field_dp), 0LL));;
			}
		}
		_match_end_1aa5b6131:;
	};
	return jule::append(_22418_dst,jule::Slice<jule::U8>::make({'%',_22540_fmt}));;
}



inline void _1b273001d_roundShortest(_1b2740d0e_decimal* _26223_d, jule::U64 _26235_mant, jule::I64 _26246_exp, _1b272c427_floatInfo* _26257_flt) {
	if ((_26235_mant == 0LLU)) {
		(*(_26223_d))._field_nd=0LL;
		return;;
	};
	jule::I64 _2835_minexp = ((*(_26257_flt))._field_bias + 1LL);;
	if (((_26246_exp > _2835_minexp) && ((332LL * ((*(_26223_d))._field_dp - (*(_26223_d))._field_nd)) >= (100LL * (_26246_exp - static_cast<jule::I64>((*(_26257_flt))._field_mantbits)))))) {
		return;;
	};
	_1b2740d0e_decimal _2929_upper = _1b2740d0e_decimal{};;
	_1b27411b6_assign(&_2929_upper, ((_26235_mant << 1LLU) + 1LLU));
	_1b274146e_shift(&_2929_upper, ((_26246_exp - static_cast<jule::I64>((*(_26257_flt))._field_mantbits)) - 1LL));
	jule::U64 _3029_mantlo = static_cast<jule::U64>(0LLU);;
	jule::I64 _3039_explo = 0LL;;
	if (((_26235_mant > (1LLU << (*(_26257_flt))._field_mantbits)) || (_26246_exp == _2835_minexp))) {
		_3029_mantlo=(_26235_mant - 1LLU);
		_3039_explo=_26246_exp;
	} else {
		_3029_mantlo=((_26235_mant << 1LLU) - 1LLU);
		_3039_explo=(_26246_exp - 1LL);
	};
	_1b2740d0e_decimal _3119_lower = _1b2740d0e_decimal{};;
	_1b27411b6_assign(&_3119_lower, ((_3029_mantlo << 1LLU) + 1LLU));
	_1b274146e_shift(&_3119_lower, ((_3039_explo - static_cast<jule::I64>((*(_26257_flt))._field_mantbits)) - 1LL));
	jule::Bool _3185_inclusive = ((_26235_mant & 1LL) == 0LLU);;
	jule::U8 _3319_upperdelta = static_cast<jule::U8>(0LLU);;
	jule::I64 _3359_ui = 0LL;;
	for (; ; (_3359_ui)++) {
		{
			jule::I64 _3409_mi = ((_3359_ui - _2929_upper._field_dp) + (*(_26223_d))._field_dp);;
			if ((_3409_mi >= (*(_26223_d))._field_nd)) {
				goto _iter_end_1aa5c2a33;
			};
			jule::I64 _3449_li = ((_3359_ui - _2929_upper._field_dp) + _3119_lower._field_dp);;
			jule::U8 _34513_l = static_cast<jule::U8>(48LLU);;
			if (((_3449_li >= 0LL) && (_3449_li < _3119_lower._field_nd))) {
				_34513_l=_3119_lower._field_d[_3449_li];
			};
			jule::U8 _34913_m = static_cast<jule::U8>(48LLU);;
			if ((_3409_mi >= 0LL)) {
				_34913_m=(*(_26223_d))._field_d[_3409_mi];
			};
			jule::U8 _35313_u = static_cast<jule::U8>(48LLU);;
			if ((_3359_ui < _2929_upper._field_nd)) {
				_35313_u=_2929_upper._field_d[_3359_ui];
			};
			jule::Bool _3619_okdown = ((_34513_l != _34913_m) || (_3185_inclusive && ((_3449_li + 1LL) == _3119_lower._field_nd)));;
			{
				
				if (((_3319_upperdelta == 0LLU) && ((_34913_m + 1LLU) < _35313_u))) {
					_case_begin_1aa5c76a3:;
					{
						_3319_upperdelta=2LLU;
					}
				}
				else if (((_3319_upperdelta == 0LLU) && (_34913_m != _35313_u))) {
					_case_begin_1aa5c774c:;
					{
						_3319_upperdelta=1LLU;
					}
				}
				else if (((_3319_upperdelta == 1LLU) && ((_34913_m != '9') || (_35313_u != '0')))) {
					_case_begin_1aa5c77b3:;
					{
						_3319_upperdelta=2LLU;
					}
				}
				_match_end_1aa5c75d7:;
			};
			jule::Bool _3829_okup = ((_3319_upperdelta > 0LLU) && ((_3185_inclusive || (_3319_upperdelta > 1LLU)) || ((_3359_ui + 1LL) < _2929_upper._field_nd)));;
			{
				
				if ((_3619_okdown && _3829_okup)) {
					_case_begin_1aa5ca200:;
					{
						_1b2741c88_round(_26223_d, (_3409_mi + 1LL));
						return;;
					}
				}
				else if (_3619_okdown) {
					_case_begin_1aa5ca299:;
					{
						_1b2741727_roundDown(_26223_d, (_3409_mi + 1LL));
						return;;
					}
				}
				else if (_3829_okup) {
					_case_begin_1aa5ca310:;
					{
						_1b27419d0_roundUp(_26223_d, (_3409_mi + 1LL));
						return;;
					}
				}
				_match_end_1aa5c7829:;
			};
		}
	_iter_next_1aa5c2a33:;
	}
	_iter_end_1aa5c2a33:;;
}



inline jule::Slice<jule::U8> _1b27305b2_fmtE(jule::Slice<jule::U8> _40113_dst, jule::Bool _40126_neg, _1b272d0a4_decimalSlice _40137_d, jule::I64 _40154_prec, jule::U8 _40165_fmt) {
	if (_40126_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('-'); };
	};
	jule::U8 _4089_ch = '0';;
	if ((_40137_d._field_nd != 0LL)) {
		_4089_ch=_40137_d._field_d[0LL];
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_4089_ch); };
	if ((_40154_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('.'); };
		jule::I64 _41713_i = 1LL;;
		jule::I64 _4189_m = _1b2731c56_min(_40137_d._field_nd, (_40154_prec + 1LL));;
		if ((_41713_i < _4189_m)) {
			(_40113_dst).append(_40137_d._field_d.slice(_41713_i, _4189_m));;
			_41713_i=_4189_m;
		};
		for (; (_41713_i <= _40154_prec); (_41713_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_1aa5ce2e2:;
		}
		_iter_end_1aa5ce2e2:;;
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_40165_fmt); };
	jule::I64 _4309_exp = (_40137_d._field_dp - 1LL);;
	if ((_40137_d._field_nd == 0LL)) {
		_4309_exp=0LL;
	};
	if ((_4309_exp < 0LL)) {
		_4089_ch='-';
		_4309_exp=(-(_4309_exp));
	} else {
		_4089_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_4089_ch); };
	{
		
		if ((_4309_exp < 10LL)) {
			_case_begin_1aa5d1987:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push('0'); __jule_push_dest.__push((static_cast<jule::U8>(_4309_exp) + '0')); };
			}
		}
		else if ((_4309_exp < 100LL)) {
			_case_begin_1aa5d1415:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push((static_cast<jule::U8>((_4309_exp / 10LL)) + '0')); __jule_push_dest.__push((static_cast<jule::U8>((_4309_exp % 10LL)) + '0')); };
			}
		}
		else {
			_case_begin_1aa5d139e:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push((static_cast<jule::U8>((_4309_exp / 100LL)) + '0')); __jule_push_dest.__push(((static_cast<jule::U8>((_4309_exp / 10LL)) % 10LL) + '0')); __jule_push_dest.__push((static_cast<jule::U8>((_4309_exp % 10LL)) + '0')); };
			}
		}
		_match_end_1aa5d0e2b:;
	};
	return _40113_dst;;
}



inline jule::Slice<jule::U8> _1b2730a9b_fmtF(jule::Slice<jule::U8> _45613_dst, jule::Bool _45626_neg, _1b272d0a4_decimalSlice _45637_d, jule::I64 _45654_prec) {
	if (_45626_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('-'); };
	};
	if ((_45637_d._field_dp > 0LL)) {
		jule::I64 _46413_m = _1b2731c56_min(_45637_d._field_nd, _45637_d._field_dp);;
		(_45613_dst).append(_45637_d._field_d.slice(0LL, _46413_m));;
		for (; (_46413_m < _45637_d._field_dp); (_46413_m)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_1aa5d589d:;
		}
		_iter_end_1aa5d589d:;;
	} else {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('0'); };
	};
	if ((_45654_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('.'); };
		jule::I64 _47513_i = 0LL;;
		for (; (_47513_i < _45654_prec); (_47513_i)++) {
			{
				jule::U8 _47717_ch = static_cast<jule::U8>(48LLU);;
				jule::I64 _47813_j = (_45637_d._field_dp + _47513_i);;
				if (((0LL <= _47813_j) && (_47813_j < _45637_d._field_nd))) {
					_47717_ch=_45637_d._field_d[_47813_j];
				};
				{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push(_47717_ch); };
			}
		_iter_next_1aa5d6cab:;
		}
		_iter_end_1aa5d6cab:;;
	};
	return _45613_dst;;
}



inline jule::Slice<jule::U8> _1b2731250_fmtB(jule::Slice<jule::U8> _48913_dst, jule::Bool _48926_neg, jule::U64 _48937_mant, jule::I64 _48952_exp, _1b272c427_floatInfo* _48963_flt) {
	if (_48926_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('-'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1b27460ab_fmtBits(_48913_dst, _48937_mant, 10LL, false, true);
		_48913_dst = __jule_assign_result.__jule_result_arg0;
	});
	{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('p'); };
	_48952_exp-=static_cast<jule::I64>((*(_48963_flt))._field_mantbits);
	if ((_48952_exp >= 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('+'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1b27460ab_fmtBits(_48913_dst, static_cast<jule::U64>(_48952_exp), 10LL, (_48952_exp < 0LL), true);
		_48913_dst = __jule_assign_result.__jule_result_arg0;
	});
	return _48913_dst;;
}



inline jule::Slice<jule::U8> _1b27318d2_fmtX(jule::Slice<jule::U8> _51113_dst, jule::I64 _51126_prec, jule::U8 _51137_fmt, jule::Bool _51148_neg, jule::U64 _5129_mant, jule::I64 _51224_exp, _1b272c427_floatInfo* _51235_flt) {
	if ((_5129_mant == 0LLU)) {
		_51224_exp=0LL;
	};
	_5129_mant<<=(60LLU - (*(_51235_flt))._field_mantbits);
	while (((_5129_mant != 0LLU) && ((_5129_mant & 1152921504606846976LLU) == 0LLU))) {
		{
			_5129_mant<<=1LLU;
			(_51224_exp)--;
		}
	_iter_next_1aa5dbb90:;
	}
	_iter_end_1aa5dbb90:;;
	if (((_51126_prec >= 0LL) && (_51126_prec < 15LL))) {
		jule::U64 _5269_shift = static_cast<jule::U64>((_51126_prec << 2LLU));;
		jule::U64 _5279_extra = ((_5129_mant << _5269_shift) & 1152921504606846975LLU);;
		_5129_mant>>=(60LLU - _5269_shift);
		if (((_5279_extra | (_5129_mant & 1LLU)) > 576460752303423488LLU)) {
			(_5129_mant)++;
		};
		_5129_mant<<=(60LLU - _5269_shift);
		if (((_5129_mant & 2305843009213693952LLU) != 0LLU)) {
			_5129_mant>>=1LLU;
			(_51224_exp)++;
		};
	};
	jule::Str _5409_hex = jule::Str();;
	if ((_51137_fmt == 'X')) {
		_5409_hex=jule::Str::lit("0123456789ABCDEF", 16);
	} else {
		_5409_hex=jule::Str::lit("0123456789abcdef", 16);
	};
	if (_51148_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('-'); };
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push('0'); __jule_push_dest.__push(_51137_fmt); __jule_push_dest.__push(('0' + static_cast<jule::U8>(((_5129_mant >> 60LLU) & 1LLU)))); };
	_5129_mant<<=4LLU;
	if (((_51126_prec < 0LL) && (_5129_mant != 0LLU))) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('.'); };
		while ((_5129_mant != 0LLU)) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5409_hex[static_cast<jule::I64>(((_5129_mant >> 60LLU) & 15LLU))]); };
				_5129_mant<<=4LLU;
			}
		_iter_next_1aa5e2536:;
		}
		_iter_end_1aa5e2536:;;
	} else if ((_51126_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('.'); };
		jule::I64 _56313_i = 0LL;;
		for (; (_56313_i < _51126_prec); (_56313_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5409_hex[static_cast<jule::I64>(((_5129_mant >> 60LLU) & 15LLU))]); };
				_5129_mant<<=4LLU;
			}
		_iter_next_1aa5e3c30:;
		}
		_iter_end_1aa5e3c30:;;
	};
	jule::U8 _5719_ch = static_cast<jule::U8>(80LLU);;
	if ((_51137_fmt == _1b2732c68_lower(_51137_fmt))) {
		_5719_ch='p';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5719_ch); };
	if ((_51224_exp < 0LL)) {
		_5719_ch='-';
		_51224_exp=(-(_51224_exp));
	} else {
		_5719_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5719_ch); };
	{
		
		if ((_51224_exp < 100LL)) {
			_case_begin_1aa5e0eb3:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push((static_cast<jule::U8>((_51224_exp / 10LL)) + '0')); __jule_push_dest.__push((static_cast<jule::U8>((_51224_exp % 10LL)) + '0')); };
			}
		}
		else if ((_51224_exp < 1000LL)) {
			_case_begin_1aa5e1029:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push((static_cast<jule::U8>((_51224_exp / 100LL)) + '0')); __jule_push_dest.__push((static_cast<jule::U8>(((_51224_exp / 10LL) % 10LL)) + '0')); __jule_push_dest.__push((static_cast<jule::U8>((_51224_exp % 10LL)) + '0')); };
			}
		}
		else {
			_case_begin_1aa5e58d0:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(4); __jule_push_dest.__push((static_cast<jule::U8>((_51224_exp / 1000LL)) + '0')); __jule_push_dest.__push(((static_cast<jule::U8>((_51224_exp / 100LL)) % 10LL) + '0')); __jule_push_dest.__push((static_cast<jule::U8>(((_51224_exp / 10LL) % 10LL)) + '0')); __jule_push_dest.__push((static_cast<jule::U8>((_51224_exp % 10LL)) + '0')); };
			}
		}
		_match_end_1aa5e5bcc:;
	};
	return _51113_dst;;
}



inline jule::I64 _1b2731c56_min(jule::I64 _5968_a, jule::I64 _59616_b) {
	if ((_5968_a < _59616_b)) {
		return _5968_a;;
	};
	return _59616_b;;
}



inline jule::I64 _1b27320ca_max(jule::I64 _6038_a, jule::I64 _60316_b) {
	if ((_6038_a > _60316_b)) {
		return _6038_a;;
	};
	return _60316_b;;
}



inline jule::U8 _1b2732c68_lower(jule::U8 _4710_c) {
	return (_4710_c | 32LL);;
}



inline __jule_tuple_u64__jule_tuple__1b2176b1e_ConvError _1b27331db_parseUint(jule::Str* _5119_s, jule::I64 _5131_base, jule::I64 _5146_bitSize) {
	__jule_tuple_u64__jule_tuple__1b2176b1e_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	if (((*(_5119_s))).empty()) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	{
		
		if (((2LL <= _5131_base) && (_5131_base <= 36LL))) {
			_case_begin_1aa5ec453:;
		}
		else if ((_5131_base == 0LL)) {
			_case_begin_1aa5ec387:;
			{
				_5131_base=10LL;
				if (((*(_5119_s))[0LL] == '0')) {
					{
						
						if ((((*(_5119_s)).len() >= 3LL) && (_1b2732c68_lower((*(_5119_s))[1LL]) == 'b'))) {
							_case_begin_1aa5edd6c:;
							{
								_5131_base=2LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_1b2732c68_lower((*(_5119_s))[1LL]) == 'o'))) {
							_case_begin_1aa5ede5a:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_1b2732c68_lower((*(_5119_s))[1LL]) == 'x'))) {
							_case_begin_1aa5eda2b:;
							{
								_5131_base=16LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else {
							_case_begin_1aa5ed9b5:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(1LL);;
							}
						}
						_match_end_1aa5ed90a:;
					};
				};
			}
		}
		else {
			_case_begin_1aa5eb7a4:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(3LL);
				return __jule_func_result;;
			}
		}
		_match_end_1aa5ebd37:;
	};
	if ((_5146_bitSize == 0LL)) {
		_5146_bitSize=64LL;
	} else if (((_5146_bitSize < 0LL) || (_5146_bitSize > 64LL))) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(4LL);
		return __jule_func_result;;
	};
	jule::U64 _909_cutoff = static_cast<jule::U64>(0LLU);;
	{
		auto &_match_expr{ _5131_base };
		
		if (_match_expr == 10LL) {
			_case_begin_1aa602d2c:;
			{
				_909_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1aa602a0d:;
			{
				_909_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_1aa6020e5:;
			{
				_909_cutoff=(jule::div(jule::MAX_U64,static_cast<jule::U64>(_5131_base)) + 1LLU);
			}
		}
		_match_end_1aa602920:;
	};
	jule::U64 _1009_maxVal = static_cast<jule::U64>(0LLU);;
	{
		auto &_match_expr{ _5146_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1aa602a74:;
			{
				_1009_maxVal=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1aa5ed641:;
			{
				_1009_maxVal=jule::MAX_U64;
			}
		}
		_match_end_1aa603ec6:;
	};
	jule::U64 _1089_n = static_cast<jule::U64>(0LLU);;
	{
		auto expr = _5119_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa604d84:;
		if (it != expr_end) {
			jule::U8 _10912_c = *it;
			{
				jule::U8 _11013_d = static_cast<jule::U8>(0LLU);;
				{
					
					if ((('0' <= _10912_c) && (_10912_c <= '9'))) {
						_case_begin_1aa6061c6:;
						{
							_11013_d=(_10912_c - '0');
						}
					}
					else if ((('a' <= _1b2732c68_lower(_10912_c)) && (_1b2732c68_lower(_10912_c) <= 'z'))) {
						_case_begin_1aa60610a:;
						{
							_11013_d=((_1b2732c68_lower(_10912_c) - 'a') + 10LLU);
						}
					}
					else if ((_10912_c == '_')) {
						_case_begin_1aa605c20:;
						{
							goto _iter_next_1aa604d84;
						}
					}
					else {
						_case_begin_1aa605ba9:;
						{
							__jule_func_result.__jule_result_arg0 = 0LLU;
							__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
							return __jule_func_result;;
						}
					}
					_match_end_1aa605b54:;
				};
				if ((_11013_d >= static_cast<jule::U8>(_5131_base))) {
					__jule_func_result.__jule_result_arg0 = 0LLU;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
					return __jule_func_result;;
				};
				if ((_1089_n >= _909_cutoff)) {
					__jule_func_result.__jule_result_arg0 = _1009_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(1LL);
					return __jule_func_result;;
				};
				_1089_n*=static_cast<jule::U64>(_5131_base);
				jule::U64 _1329_n1 = (_1089_n + static_cast<jule::U64>(_11013_d));;
				if (((_1329_n1 < _1089_n) || (_1329_n1 > _1009_maxVal))) {
					__jule_func_result.__jule_result_arg0 = _1009_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(1LL);
					return __jule_func_result;;
				};
				_1089_n=_1329_n1;
			}
			_iter_next_1aa604d84:;
			++it;
			goto _iter_begin_1aa604d84;
		}
		_iter_end_1aa604d84:;
	};
	__jule_func_result.__jule_result_arg0 = _1089_n;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(0LL);
	return __jule_func_result;;
}



inline jule::Exceptional<jule::U64> _1b273361a_ParseUint(jule::Str _14618_s, jule::I64 _14630_base, jule::I64 _14645_bitSize) {
	jule::U64 _1475_un;
	jule::I64 _1479_err;
	({
		__jule_tuple_u64__jule_tuple__1b2176b1e_ConvError __jule_assign_result = _1b27331db_parseUint(&(_14618_s), _14630_base, _14645_bitSize);
		_1475_un = __jule_assign_result.__jule_result_arg0;
		_1479_err = __jule_assign_result.__jule_result_arg1;
	});
	if ((_1479_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::U64>{.error=jule::Any(_1479_err, &__jule_any_type0)};
	};
	return jule::Exceptional<jule::U64>{.result=_1475_un};;
}



inline jule::Exceptional<jule::I64> _1b2733ac1_ParseInt(jule::Str _17217_s, jule::I64 _17225_base, jule::I64 _17240_bitSize) {
	if ((_17217_s).empty()) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0)};
	};
	jule::Bool _1789_neg = false;;
	if ((_17217_s[0LL] == '+')) {
		(_17217_s).mut_slice(1LL);;
	} else if ((_17217_s[0LL] == '-')) {
		_1789_neg=true;
		(_17217_s).mut_slice(1LL);;
	};
	jule::U64 _1879_un;
	jule::I64 _18713_err;
	({
		__jule_tuple_u64__jule_tuple__1b2176b1e_ConvError __jule_assign_result = _1b27331db_parseUint(&(_17217_s), _17225_base, _17240_bitSize);
		_1879_un = __jule_assign_result.__jule_result_arg0;
		_18713_err = __jule_assign_result.__jule_result_arg1;
	});
	if (((_18713_err != static_cast<jule::I64>(0LL)) && (_18713_err != static_cast<jule::I64>(1LL)))) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(_18713_err, &__jule_any_type0)};
	};
	if ((_17240_bitSize == 0LL)) {
		_17240_bitSize=64LL;
	};
	jule::U64 _1965_cutoff = static_cast<jule::U64>((1LL << static_cast<jule::U64>((_17240_bitSize - 1LL))));;
	if (((!(_1789_neg)) && (_1879_un >= _1965_cutoff))) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0)};
	};
	if ((_1789_neg && (_1879_un > _1965_cutoff))) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0)};
	};
	jule::I64 _2039_n = static_cast<jule::I64>(_1879_un);;
	if (_1789_neg) {
		_2039_n=(-(_2039_n));
	};
	return jule::Exceptional<jule::I64>{.result=_2039_n};;
}



inline __jule_tuple_f64__jule_tuple_bool _1b2734781_eiselLemire64(jule::U64 _4122_man, jule::I64 _4132_exp10, jule::Bool _4144_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_4122_man == 0LLU)) {
		if (_4144_neg) {
			__jule_func_result.__jule_result_arg0=_1b25e47c8_F64FromBits(9223372036854775808LLU);
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_4132_exp10 < -348LL) || (347LL < _4132_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I64 _575_clz = _1b26d71a1_LeadingZeros64(_4122_man);;
	_4122_man<<=static_cast<jule::U64>(_575_clz);
	;
	jule::U64 _609_retExp2 = (static_cast<jule::U64>(((((217706LL * _4132_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(_575_clz));;
	jule::U64 _639_xHi;
	jule::U64 _6318_xLo;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1b26e20ce_Mul64(_4122_man, _1b27355ea_detailedPowsOfTen[(_4132_exp10 - -348LL)][1LL]);
		_639_xHi = __jule_assign_result.__jule_result_arg0;
		_6318_xLo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_639_xHi & 511LLU) == 511LLU) && ((_6318_xLo + _4122_man) < _4122_man))) {
		jule::U64 _679_yHi;
		jule::U64 _6714_yLo;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1b26e20ce_Mul64(_4122_man, _1b27355ea_detailedPowsOfTen[(_4132_exp10 - -348LL)][0LL]);
			_679_yHi = __jule_assign_result.__jule_result_arg0;
			_6714_yLo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _6813_mergedHi;
		jule::U64 _6823_mergedLo;
		({
			jule::U64 ___jule_assign_arg = _639_xHi;
			jule::U64 _1___jule_assign_arg = (_6318_xLo + _679_yHi);
			_6813_mergedHi = ___jule_assign_arg;
			_6823_mergedLo = _1___jule_assign_arg;
		});
		if ((_6823_mergedLo < _6318_xLo)) {
			(_6813_mergedHi)++;
		};
		if (((((_6813_mergedHi & 511LLU) == 511LLU) && ((_6823_mergedLo + 1LLU) == 0LLU)) && ((_6714_yLo + _4122_man) < _4122_man))) {
			__jule_func_result.__jule_result_arg0 = 0LL;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _6813_mergedHi;
			jule::U64 _1___jule_assign_arg = _6823_mergedLo;
			_639_xHi = ___jule_assign_arg;
			_6318_xLo = _1___jule_assign_arg;
		});
	};
	jule::U64 _795_msb = (_639_xHi >> 63LLU);;
	jule::U64 _809_retMantissa = (_639_xHi >> (_795_msb + 9LLU));;
	_609_retExp2-=(1LLU ^ _795_msb);
	if ((((_6318_xLo == 0LLU) && ((_639_xHi & 511LLU) == 0LLU)) && ((_809_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_809_retMantissa+=(_809_retMantissa & 1LLU);
	_809_retMantissa>>=1LLU;
	if (((_809_retMantissa >> 53LLU) > 0LLU)) {
		_809_retMantissa>>=1LLU;
		_609_retExp2+=1LLU;
	};
	if (((_609_retExp2 - 1LLU) >= 2046LLU)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _1039_retBits = ((_609_retExp2 << 52LLU) | (_809_retMantissa & 4503599627370495LLU));;
	if (_4144_neg) {
		_1039_retBits|=9223372036854775808LLU;
	};
	__jule_func_result.__jule_result_arg0 = _1b25e47c8_F64FromBits(_1039_retBits);
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1b2734c04_eiselLemire32(jule::U64 _11022_man, jule::I64 _11032_exp10, jule::Bool _11044_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_11022_man == 0LLU)) {
		if (_11044_neg) {
			__jule_func_result.__jule_result_arg0=_1b25e41bd_F32FromBits(2147483648LLU);
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_11032_exp10 < -348LL) || (347LL < _11032_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I64 _1325_clz = _1b26d71a1_LeadingZeros64(_11022_man);;
	_11022_man<<=static_cast<jule::U64>(_1325_clz);
	;
	jule::U64 _1359_retExp2 = (static_cast<jule::U64>(((((217706LL * _11032_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(_1325_clz));;
	jule::U64 _1389_x_hi;
	jule::U64 _13819_x_lo;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1b26e20ce_Mul64(_11022_man, _1b27355ea_detailedPowsOfTen[(_11032_exp10 - -348LL)][1LL]);
		_1389_x_hi = __jule_assign_result.__jule_result_arg0;
		_13819_x_lo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_1389_x_hi & 274877906943LLU) == 274877906943LLU) && ((_13819_x_lo + _11022_man) < _11022_man))) {
		jule::U64 _1429_y_hi;
		jule::U64 _14215_y_lo;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1b26e20ce_Mul64(_11022_man, _1b27355ea_detailedPowsOfTen[(_11032_exp10 - -348LL)][0LL]);
			_1429_y_hi = __jule_assign_result.__jule_result_arg0;
			_14215_y_lo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _14313_merged_hi;
		jule::U64 _14324_merged_lo;
		({
			jule::U64 ___jule_assign_arg = _1389_x_hi;
			jule::U64 _1___jule_assign_arg = (_13819_x_lo + _1429_y_hi);
			_14313_merged_hi = ___jule_assign_arg;
			_14324_merged_lo = _1___jule_assign_arg;
		});
		if ((_14324_merged_lo < _13819_x_lo)) {
			(_14313_merged_hi)++;
		};
		if (((((_14313_merged_hi & 274877906943LLU) == 274877906943LLU) && ((_14324_merged_lo + 1LLU) == 0LLU)) && ((_14215_y_lo + _11022_man) < _11022_man))) {
			__jule_func_result.__jule_result_arg0 = 0.0f;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _14313_merged_hi;
			jule::U64 _1___jule_assign_arg = _14324_merged_lo;
			_1389_x_hi = ___jule_assign_arg;
			_13819_x_lo = _1___jule_assign_arg;
		});
	};
	jule::U64 _1545_msb = (_1389_x_hi >> 63LLU);;
	jule::U64 _1559_retMantissa = (_1389_x_hi >> (_1545_msb + 38LLU));;
	_1359_retExp2-=(1LLU ^ _1545_msb);
	if ((((_13819_x_lo == 0LLU) && ((_1389_x_hi & 274877906943LLU) == 0LLU)) && ((_1559_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_1559_retMantissa+=(_1559_retMantissa & 1LLU);
	_1559_retMantissa>>=1LLU;
	if (((_1559_retMantissa >> 24LLU) > 0LLU)) {
		_1559_retMantissa>>=1LLU;
		_1359_retExp2+=1LLU;
	};
	if (((_1359_retExp2 - 1LLU) >= 254LLU)) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _1789_retBits = ((_1359_retExp2 << 23LLU) | (_1559_retMantissa & 8388607LLU));;
	if (_11044_neg) {
		_1789_retBits|=2147483648LLU;
	};
	__jule_func_result.__jule_result_arg0 = _1b25e41bd_F32FromBits(static_cast<jule::U32>(_1789_retBits));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::I64 _1b27369d6_commonPrefixLenIgnoreCase(jule::Str _4630_s, jule::Str _4638_prefix) {
	jule::I64 _479_n = _4638_prefix.len();;
	if ((_479_n > _4630_s.len())) {
		_479_n=_4630_s.len();
	};
	jule::I64 _519_i = 0LL;;
	for (; (_519_i < _479_n); (_519_i)++) {
		{
			jule::U8 _5313_c = _4630_s[_519_i];;
			if ((('A' <= _5313_c) && (_5313_c <= 'Z'))) {
				_5313_c+=32LL;
			};
			if ((_5313_c != _4638_prefix[_519_i])) {
				return _519_i;;
			};
		}
	_iter_next_1aa62a89e:;
	}
	_iter_end_1aa62a89e:;;
	return _479_n;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1b2736ce4_special(jule::Str _6912_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_6912_s.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		__jule_func_result.__jule_result_arg2 = false;
		return __jule_func_result;;
	};
	jule::I64 _739_sign = 1LL;;
	jule::I64 _749_nsign = 0LL;;
	{
		auto &_match_expr{ _6912_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_1aa62e221:;
			{
				if ((_6912_s[0LL] == '-')) {
					_739_sign=-1LL;
				};
				_749_nsign=1LL;
				{
					jule::Str* _8317_sp = (&(_6912_s));;
					((*(_8317_sp))).mut_slice(1LL);;
				};
				goto _case_begin_1aa62e298;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_1aa62e298:;
			{
				jule::I64 _8813_caseN = _1b27369d6_commonPrefixLenIgnoreCase(_6912_s, jule::Str::lit("infinity", 8));;
				if (((3LL < _8813_caseN) && (_8813_caseN < 8LL))) {
					_8813_caseN=3LL;
				};
				if (((_8813_caseN == 3LL) || (_8813_caseN == 8LL))) {
					__jule_func_result.__jule_result_arg0 = _1b26e9c74_Inf(_739_sign);
					__jule_func_result.__jule_result_arg1 = (_749_nsign + __jule_func_result.__jule_result_arg1);
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_1aa62e30e:;
			{
				if ((_1b27369d6_commonPrefixLenIgnoreCase(_6912_s, jule::Str::lit("NaN", 3)) == 3LL)) {
					__jule_func_result.__jule_result_arg0 = _1b26e969c_NaN();
					__jule_func_result.__jule_result_arg1 = 3LL;
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1aa62e177:;
	};
	__jule_func_result.__jule_result_arg0 = 0LL;
	__jule_func_result.__jule_result_arg1 = 0LL;
	__jule_func_result.__jule_result_arg2 = false;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1b27370ad_readFloat(jule::Str* _10815_s) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	__jule_func_result.__jule_result_arg3 = false;
	__jule_func_result.__jule_result_arg4 = false;
	__jule_func_result.__jule_result_arg5 = 0;
	__jule_func_result.__jule_result_arg6 = false;
	if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
		return __jule_func_result;;
	};
	{
		
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			_case_begin_1aa634842:;
			{
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			_case_begin_1aa6348a8:;
			{
				__jule_func_result.__jule_result_arg2=true;
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		_match_end_1aa634446:;
	};
	jule::U64 _1229_base = static_cast<jule::U64>(10LLU);;
	jule::I64 _1239_maxMantDigits = 19LL;;
	jule::U8 _1249_expChar = 'e';;
	if (((((__jule_func_result.__jule_result_arg5 + 2LL) < (*(_10815_s)).len()) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '0')) && (_1b2732c68_lower((*(_10815_s))[(__jule_func_result.__jule_result_arg5 + 1LL)]) == 'x'))) {
		_1229_base=16LLU;
		_1239_maxMantDigits=16LL;
		__jule_func_result.__jule_result_arg5+=2LL;
		_1249_expChar='p';
		__jule_func_result.__jule_result_arg4=true;
	};
	jule::Bool _1329_sawdot = false;;
	jule::Bool _1339_sawdigits = false;;
	jule::I64 _1349_nd = 0LL;;
	jule::I64 _1359_ndMant = 0LL;;
	jule::I64 _1369_dp = 0LL;;
	for (; (__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()); (__jule_func_result.__jule_result_arg5)++) {
		{
			jule::U8 _1389_c = (*(_10815_s))[__jule_func_result.__jule_result_arg5];;
			{
				
				if ((_1389_c == '_')) {
					_case_begin_1aa63988b:;
					{
						goto _iter_next_1aa638bba;
					}
				}
				else if ((_1389_c == '.')) {
					_case_begin_1aa639935:;
					{
						if (_1329_sawdot) {
							goto _julec_label_1aa63e30d;
						};
						_1329_sawdot=true;
						_1369_dp=_1349_nd;
						goto _iter_next_1aa638bba;
					}
				}
				else if ((('0' <= _1389_c) && (_1389_c <= '9'))) {
					_case_begin_1aa63999b:;
					{
						_1339_sawdigits=true;
						if (((_1389_c == '0') && (_1349_nd == 0LL))) {
							(_1369_dp)--;
							goto _iter_next_1aa638bba;
						};
						(_1349_nd)++;
						if ((_1359_ndMant < _1239_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=_1229_base;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>((_1389_c - '0'));
							(_1359_ndMant)++;
						} else if ((_1389_c != '0')) {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1aa638bba;
					}
				}
				else if ((((_1229_base == 16LLU) && ('a' <= _1b2732c68_lower(_1389_c))) && (_1b2732c68_lower(_1389_c) <= 'f'))) {
					_case_begin_1aa639a12:;
					{
						_1339_sawdigits=true;
						(_1349_nd)++;
						if ((_1359_ndMant < _1239_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=16LLU;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>(((_1b2732c68_lower(_1389_c) - 'a') + 10LLU));
							(_1359_ndMant)++;
						} else {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1aa638bba;
					}
				}
				_match_end_1aa6397ae:;
			};
			goto _iter_end_1aa638bba;
		}
	_iter_next_1aa638bba:;
	}
	_iter_end_1aa638bba:;;
	_julec_label_1aa63e30d:;
	if ((!(_1339_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_1329_sawdot))) {
		_1369_dp=_1349_nd;
	};
	if ((_1229_base == 16LLU)) {
		_1369_dp*=4LL;
		_1359_ndMant*=4LL;
	};
	if (((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && (_1b2732c68_lower((*(_10815_s))[__jule_func_result.__jule_result_arg5]) == _1249_expChar))) {
		(__jule_func_result.__jule_result_arg5)++;
		if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
			return __jule_func_result;;
		};
		jule::I64 _20113_esign = 1LL;;
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			(__jule_func_result.__jule_result_arg5)++;
		} else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			(__jule_func_result.__jule_result_arg5)++;
			_20113_esign=-1LL;
		};
		if ((((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len()) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] < '0')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] > '9'))) {
			return __jule_func_result;;
		};
		jule::I64 _21113_e = 0LL;;
		for (; ((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && ((('0' <= (*(_10815_s))[__jule_func_result.__jule_result_arg5]) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] <= '9')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_'))); (__jule_func_result.__jule_result_arg5)++) {
			{
				if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_')) {
					goto _iter_next_1aa641b6d;
				};
				if ((_21113_e < 10000LL)) {
					_21113_e=(((_21113_e * 10LL) + static_cast<jule::I64>((*(_10815_s))[__jule_func_result.__jule_result_arg5])) - '0');
				};
			}
		_iter_next_1aa641b6d:;
		}
		_iter_end_1aa641b6d:;;
		_1369_dp+=(_21113_e * _20113_esign);
	} else if ((_1229_base == 16LLU)) {
		return __jule_func_result;;
	};
	if ((__jule_func_result.__jule_result_arg0 != 0LLU)) {
		__jule_func_result.__jule_result_arg1=(_1369_dp - _1359_ndMant);
	};
	__jule_func_result.__jule_result_arg6=true;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_bool _1b2738b09_atof64exact(jule::U64 _48616_mantissa, jule::I64 _48635_exp, jule::Bool _48645_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_48616_mantissa >> _1b272cb20_f64info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_48616_mantissa);
	if (_48645_neg) {
		__jule_func_result.__jule_result_arg0=(-(__jule_func_result.__jule_result_arg0));
	};
	{
		
		if ((_48635_exp == 0LL)) {
			_case_begin_1aa64ab77:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp > 0LL) && (_48635_exp <= 37LL))) {
			_case_begin_1aa64ac10:;
			{
				if ((_48635_exp > 22LL)) {
					__jule_func_result.__jule_result_arg0*=_1b2737ec1_f64pow10[(_48635_exp - 22LL)];
					_48635_exp=22LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 1000000000000000LL) || (__jule_func_result.__jule_result_arg0 < -1000000000000000LL))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = (__jule_func_result.__jule_result_arg0 * _1b2737ec1_f64pow10[_48635_exp]);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp < 0LL) && (_48635_exp >= -22LL))) {
			_case_begin_1aa64ac76:;
			{
				__jule_func_result.__jule_result_arg0 = jule::div(__jule_func_result.__jule_result_arg0,_1b2737ec1_f64pow10[(-(_48635_exp))]);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1aa64a5a0:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1b2739038_atof32exact(jule::U64 _52016_mantissa, jule::I64 _52035_exp, jule::Bool _52049_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_52016_mantissa >> _1b272c823_f32info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_52016_mantissa);
	if (_52049_neg) {
		__jule_func_result.__jule_result_arg0=(-(__jule_func_result.__jule_result_arg0));
	};
	{
		
		if ((_52035_exp == 0LL)) {
			_case_begin_1aa64edbd:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp > 0LL) && (_52035_exp <= 17LL))) {
			_case_begin_1aa64ee56:;
			{
				if ((_52035_exp > 10LL)) {
					__jule_func_result.__jule_result_arg0*=_1b2738301_f32pow10[(_52035_exp - 10LL)];
					_52035_exp=10LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 10000000.0f) || (__jule_func_result.__jule_result_arg0 < -10000000.0f))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = (__jule_func_result.__jule_result_arg0 * _1b2738301_f32pow10[_52035_exp]);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp < 0LL) && (_52035_exp >= -10LL))) {
			_case_begin_1aa64eebc:;
			{
				__jule_func_result.__jule_result_arg0 = jule::div(__jule_func_result.__jule_result_arg0,_1b2738301_f32pow10[(-(_52035_exp))]);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1aa64e7e6:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple__1b2176b1e_ConvError _1b27395cc_atofHex(_1b272c427_floatInfo* _55613_flt, jule::U64 _55633_mantissa, jule::I64 _55652_exp, jule::Bool _55662_neg, jule::Bool _55673_trunc) {
	__jule_tuple_f64__jule_tuple__1b2176b1e_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	jule::I64 _5575_maxExp = ((static_cast<jule::I64>((1LL << (*(_55613_flt))._field_expbits)) + (*(_55613_flt))._field_bias) - 2LL);;
	jule::I64 _5585_minExp = ((*(_55613_flt))._field_bias + 1LL);;
	_55652_exp+=static_cast<jule::I64>((*(_55613_flt))._field_mantbits);
	while (((_55633_mantissa != 0LLU) && ((_55633_mantissa >> ((*(_55613_flt))._field_mantbits + 2LLU)) == 0LLU))) {
		{
			_55633_mantissa<<=1LLU;
			(_55652_exp)--;
		}
	_iter_next_1aa6537c8:;
	}
	_iter_end_1aa6537c8:;;
	if (_55673_trunc) {
		_55633_mantissa|=1LLU;
	};
	while (((_55633_mantissa >> ((1LLU + (*(_55613_flt))._field_mantbits) + 2LLU)) != 0LLU)) {
		{
			_55633_mantissa=((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU));
			(_55652_exp)++;
		}
	_iter_next_1aa655b93:;
	}
	_iter_end_1aa655b93:;;
	while (((_55633_mantissa > 1LLU) && (_55652_exp < (_5585_minExp - 2LL)))) {
		{
			_55633_mantissa=((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU));
			(_55652_exp)++;
		}
	_iter_next_1aa65606c:;
	}
	_iter_end_1aa65606c:;;
	jule::U64 _5889_round = (_55633_mantissa & 3LLU);;
	_55633_mantissa>>=2LLU;
	_5889_round|=(_55633_mantissa & 1LLU);
	_55652_exp+=2LL;
	if ((_5889_round == 3LLU)) {
		(_55633_mantissa)++;
		if ((_55633_mantissa == (1LLU << (1LLU + (*(_55613_flt))._field_mantbits)))) {
			_55633_mantissa>>=1LLU;
			(_55652_exp)++;
		};
	};
	if (((_55633_mantissa >> (*(_55613_flt))._field_mantbits) == 0LLU)) {
		_55652_exp=(*(_55613_flt))._field_bias;
	};
	jule::I64 _6039_err = static_cast<jule::I64>(0LL);;
	if ((_55652_exp > _5575_maxExp)) {
		_55633_mantissa=static_cast<jule::U64>((1LL << (*(_55613_flt))._field_mantbits));
		_55652_exp=(_5575_maxExp + 1LL);
		_6039_err=static_cast<jule::I64>(1LL);
	};
	jule::U64 _6109_bits = (_55633_mantissa & ((1LLU << (*(_55613_flt))._field_mantbits) - 1LLU));;
	_6109_bits|=(static_cast<jule::U64>(((_55652_exp - (*(_55613_flt))._field_bias) & static_cast<jule::I64>(((1LL << (*(_55613_flt))._field_expbits) - 1LL)))) << (*(_55613_flt))._field_mantbits);
	if (_55662_neg) {
		_6109_bits|=((1LLU << (*(_55613_flt))._field_mantbits) << (*(_55613_flt))._field_expbits);
	};
	if (((*(_55613_flt)) == _1b272c823_f32info)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1b25e41bd_F32FromBits(static_cast<jule::U32>(_6109_bits)));
		__jule_func_result.__jule_result_arg1 = _6039_err;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _1b25e47c8_F64FromBits(_6109_bits);
	__jule_func_result.__jule_result_arg1 = _6039_err;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_int__jule_tuple__1b2176b1e_ConvError _1b27399a6_atof32(jule::Str _62111_s) {
	__jule_tuple_f32__jule_tuple_int__jule_tuple__1b2176b1e_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _6239_val;
		jule::I64 _62314__n;
		jule::Bool _62318_ok;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b2736ce4_special(_62111_s);
			_6239_val = __jule_assign_result.__jule_result_arg0;
			_62314__n = __jule_assign_result.__jule_result_arg1;
			_62318_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_62318_ok) {
			__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_6239_val);
			__jule_func_result.__jule_result_arg1 = _62314__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _6295_mantissa;
	jule::I64 _62915_exp;
	jule::Bool _62920_neg;
	jule::Bool _62925_trunc;
	jule::Bool _62932_hex;
	jule::I64 _62937__n;
	jule::Bool _62945_ok;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b27370ad_readFloat(&(_62111_s));
		_6295_mantissa = __jule_assign_result.__jule_result_arg0;
		_62915_exp = __jule_assign_result.__jule_result_arg1;
		_62920_neg = __jule_assign_result.__jule_result_arg2;
		_62925_trunc = __jule_assign_result.__jule_result_arg3;
		_62932_hex = __jule_assign_result.__jule_result_arg4;
		_62937__n = __jule_assign_result.__jule_result_arg5;
		_62945_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_62937__n;
	if ((!(_62945_ok))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	if (_62932_hex) {
		jule::F64 _63613_ff = 0LL;;
		({
			__jule_tuple_f64__jule_tuple__1b2176b1e_ConvError __jule_assign_result = _1b27395cc_atofHex(&(_1b272c823_f32info), _6295_mantissa, _62915_exp, _62920_neg, _62925_trunc);
			_63613_ff = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_63613_ff);
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_62925_trunc))) {
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1b2739038_atof32exact(_6295_mantissa, _62915_exp, _62920_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_62945_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_62945_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1b2734c04_eiselLemire32(_6295_mantissa, _62915_exp, _62920_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_62945_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_62945_ok) {
			if ((!(_62925_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
			jule::F32 _65817_fUp = static_cast<jule::F32>(0.0f);;
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1b2734c04_eiselLemire32((_6295_mantissa + 1LLU), _62915_exp, _62920_neg);
				_65817_fUp = __jule_assign_result.__jule_result_arg0;
				_62945_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_62945_ok && (__jule_func_result.__jule_result_arg0 == _65817_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1b2740d0e_decimal _6679_d = _1b2740d0e_decimal{};;
	if ((!(_1b2737740_set(&_6679_d, _20d73c760_StrBytes(_62111_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _6715_b;
	jule::Bool _6718_ovf;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1b2737a81_floatBits(&_6679_d, &(_1b272c823_f32info));
		_6715_b = __jule_assign_result.__jule_result_arg0;
		_6718_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=_1b25e41bd_F32FromBits(static_cast<jule::U32>(_6715_b));
	if (_6718_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I64>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1b2176b1e_ConvError _1b2739be8_atof64(jule::Str _67911_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__1b2176b1e_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _6819_val;
		jule::I64 _68114__n;
		jule::Bool _68118_ok;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b2736ce4_special(_67911_s);
			_6819_val = __jule_assign_result.__jule_result_arg0;
			_68114__n = __jule_assign_result.__jule_result_arg1;
			_68118_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_68118_ok) {
			__jule_func_result.__jule_result_arg0 = _6819_val;
			__jule_func_result.__jule_result_arg1 = _68114__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _6875_mantissa;
	jule::I64 _68715_exp;
	jule::Bool _68720_neg;
	jule::Bool _68725_trunc;
	jule::Bool _68732_hex;
	jule::I64 _68737__n;
	jule::Bool _68745_ok;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b27370ad_readFloat(&(_67911_s));
		_6875_mantissa = __jule_assign_result.__jule_result_arg0;
		_68715_exp = __jule_assign_result.__jule_result_arg1;
		_68720_neg = __jule_assign_result.__jule_result_arg2;
		_68725_trunc = __jule_assign_result.__jule_result_arg3;
		_68732_hex = __jule_assign_result.__jule_result_arg4;
		_68737__n = __jule_assign_result.__jule_result_arg5;
		_68745_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_68737__n;
	if ((!(_68745_ok))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	if (_68732_hex) {
		({
			__jule_tuple_f64__jule_tuple__1b2176b1e_ConvError __jule_assign_result = _1b27395cc_atofHex(&(_1b272cb20_f64info), _6875_mantissa, _68715_exp, _68720_neg, _68725_trunc);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_68725_trunc))) {
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1b2738b09_atof64exact(_6875_mantissa, _68715_exp, _68720_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_68745_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_68745_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1b2734781_eiselLemire64(_6875_mantissa, _68715_exp, _68720_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_68745_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_68745_ok) {
			if ((!(_68725_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
			jule::F64 _71517_fUp = 0LL;;
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1b2734781_eiselLemire64((_6875_mantissa + 1LLU), _68715_exp, _68720_neg);
				_71517_fUp = __jule_assign_result.__jule_result_arg0;
				_68745_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_68745_ok && (__jule_func_result.__jule_result_arg0 == _71517_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1b2740d0e_decimal _7249_d = _1b2740d0e_decimal{};;
	if ((!(_1b2737740_set(&_7249_d, _20d73c760_StrBytes(_67911_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _7285_b;
	jule::Bool _7288_ovf;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1b2737a81_floatBits(&_7249_d, &(_1b272cb20_f64info));
		_7285_b = __jule_assign_result.__jule_result_arg0;
		_7288_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=_1b25e47c8_F64FromBits(_7285_b);
	if (_7288_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I64>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1b2176b1e_ConvError _1b273a06c_parseFloatPrefix(jule::Str* _73622_s, jule::I64 _73630_bitSize) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__1b2176b1e_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	if ((_73630_bitSize == 32LL)) {
		jule::F32 _7389_f;
		jule::I64 _73812_n;
		jule::I64 _73815_err;
		({
			__jule_tuple_f32__jule_tuple_int__jule_tuple__1b2176b1e_ConvError __jule_assign_result = _1b27399a6_atof32((*(_73622_s)));
			_7389_f = __jule_assign_result.__jule_result_arg0;
			_73812_n = __jule_assign_result.__jule_result_arg1;
			_73815_err = __jule_assign_result.__jule_result_arg2;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_7389_f);
		__jule_func_result.__jule_result_arg1 = _73812_n;
		__jule_func_result.__jule_result_arg2 = _73815_err;
		return __jule_func_result;;
	};
	__jule_func_result = std::move(_1b2739be8_atof64((*(_73622_s))));
return __jule_func_result;;
}



inline jule::Exceptional<jule::F64> _1b273a3e1_ParseFloat(jule::Str _76815_s, jule::I64 _76823_bitSize) {
	jule::F64 _7695_f;
	jule::I64 _7698_n;
	jule::I64 _76911_err;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__1b2176b1e_ConvError __jule_assign_result = _1b273a06c_parseFloatPrefix(&(_76815_s), _76823_bitSize);
		_7695_f = __jule_assign_result.__jule_result_arg0;
		_7698_n = __jule_assign_result.__jule_result_arg1;
		_76911_err = __jule_assign_result.__jule_result_arg2;
	});
	if (((_7698_n != _76815_s.len()) && ((_76911_err == static_cast<jule::I64>(0LL)) || (_76911_err != static_cast<jule::I64>(2LL))))) {
		return jule::Exceptional<jule::F64>{.error=jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0)};
	};
	if ((_76911_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::F64>{.error=jule::Any(_76911_err, &__jule_any_type0)};
	};
	return jule::Exceptional<jule::F64>{.result=_7695_f};;
}



inline void _1b273ac71_ryuFtoaFixed32(_1b272d0a4_decimalSlice* _4924_d, jule::U32 _4945_mant, jule::I64 _4956_exp, jule::I64 _4966_prec) {
	if ((_4966_prec < 0LL)) {
		jule::panic(jule::Str::lit("ryuFtoaFixed32 called with negative prec", 40) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:9"));;
	};
	if ((_4966_prec > 9LL)) {
		jule::panic(jule::Str::lit("ryuFtoaFixed32 called with prec > 9", 35) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:9"));;
	};
	if ((_4945_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_4924_d))._field_nd = ___jule_assign_arg;
			(*(_4924_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I64 _629_e2 = _4956_exp;;
	jule::I64 _635_b = _1b26de76e_Len32(_4945_mant);;
	if ((_635_b < 25LL)) {
		_4945_mant<<=static_cast<jule::U64>((25LL - _635_b));
		_629_e2+=(static_cast<jule::I64>(_635_b) - 25LL);
	};
	jule::I64 _745_q = (((-(_1b273c2b1_mulByLog2Log10((_629_e2 + 24LL)))) + _4966_prec) - 1LL);;
	jule::Bool _799_exact = ((_745_q <= 27LL) && (_745_q >= 0LL));;
	jule::U32 _819_di;
	jule::I64 _8113_dexp2;
	jule::Bool _8124_d0;
	({
		__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b273dba8_mult64bitPow10(_4945_mant, _629_e2, _745_q);
		_819_di = __jule_assign_result.__jule_result_arg0;
		_8113_dexp2 = __jule_assign_result.__jule_result_arg1;
		_8124_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_8113_dexp2 >= 0LL)) {
		jule::panic(jule::Str::lit("not enough significant bits after mult64bitPow10", 48) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:9"));;
	};
	if ((((_745_q < 0LL) && (_745_q >= -10LL)) && _1b273e45b_divisibleByPow5(static_cast<jule::U64>(_4945_mant), (-(_745_q))))) {
		_799_exact=true;
		_8124_d0=true;
	};
	jule::U64 _945_extra = static_cast<jule::U64>((-(_8113_dexp2)));;
	jule::U32 _955_extraMask = static_cast<jule::U32>(((1LL << _945_extra) - 1LL));;
	jule::U32 _979_dfrac = static_cast<jule::U32>(0LLU);;
	({
		jule::U32 ___jule_assign_arg = (_819_di >> _945_extra);
		jule::U32 _1___jule_assign_arg = (_819_di & _955_extraMask);
		_819_di = ___jule_assign_arg;
		_979_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _999_roundUp = false;;
	if (_799_exact) {
		_999_roundUp=(((_979_dfrac > (1LLU << (_945_extra - 1LLU))) || ((_979_dfrac == (1LLU << (_945_extra - 1LLU))) && (!(_8124_d0)))) || (((_979_dfrac == (1LLU << (_945_extra - 1LLU))) && _8124_d0) && ((_819_di & 1LLU) == 1LLU)));
	} else {
		_999_roundUp=((_979_dfrac >> (_945_extra - 1LLU)) == 1LLU);
	};
	if ((_979_dfrac != 0LLU)) {
		_8124_d0=false;
	};
	_1b273ba52_formatDecimal(_4924_d, static_cast<jule::U64>(_819_di), (!(_8124_d0)), _999_roundUp, _4966_prec);
	(*(_4924_d))._field_dp-=_745_q;
}



inline void _1b273b216_ryuFtoaFixed64(_1b272d0a4_decimalSlice* _12124_d, jule::U64 _12145_mant, jule::I64 _12156_exp, jule::I64 _12166_prec) {
	if ((_12166_prec > 18LL)) {
		jule::panic(jule::Str::lit("ryuFtoaFixed64 called with prec > 18", 36) + jule::Str("\nlocation: std/conv/ftoaryu.jule:123:9"));;
	};
	if ((_12145_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_12124_d))._field_nd = ___jule_assign_arg;
			(*(_12124_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I64 _1319_e2 = _12156_exp;;
	jule::I64 _1325_b = _1b26dea38_Len64(_12145_mant);;
	if ((_1325_b < 55LL)) {
		_12145_mant=(_12145_mant << static_cast<jule::U64>((55LL - _1325_b)));
		_1319_e2+=(static_cast<jule::I64>(_1325_b) - 55LL);
	};
	jule::I64 _1465_q = (((-(_1b273c2b1_mulByLog2Log10((_1319_e2 + 54LL)))) + _12166_prec) - 1LL);;
	jule::Bool _1519_exact = ((_1465_q <= 55LL) && (_1465_q >= 0LL));;
	jule::U64 _1539_di;
	jule::I64 _15313_dexp2;
	jule::Bool _15324_d0;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b273e0d7_mult128bitPow10(_12145_mant, _1319_e2, _1465_q);
		_1539_di = __jule_assign_result.__jule_result_arg0;
		_15313_dexp2 = __jule_assign_result.__jule_result_arg1;
		_15324_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_15313_dexp2 >= 0LL)) {
		jule::panic(jule::Str::lit("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:155:9"));;
	};
	if ((((_1465_q < 0LL) && (_1465_q >= -22LL)) && _1b273e45b_divisibleByPow5(_12145_mant, (-(_1465_q))))) {
		_1519_exact=true;
		_15324_d0=true;
	};
	jule::U64 _1665_extra = static_cast<jule::U64>((-(_15313_dexp2)));;
	jule::U64 _1675_extraMask = static_cast<jule::U64>(((1LL << _1665_extra) - 1LL));;
	jule::U64 _1699_dfrac = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = (_1539_di >> _1665_extra);
		jule::U64 _1___jule_assign_arg = (_1539_di & _1675_extraMask);
		_1539_di = ___jule_assign_arg;
		_1699_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _1719_roundUp = false;;
	if (_1519_exact) {
		_1719_roundUp=(((_1699_dfrac > (1LLU << (_1665_extra - 1LLU))) || ((_1699_dfrac == (1LLU << (_1665_extra - 1LLU))) && (!(_15324_d0)))) || (((_1699_dfrac == (1LLU << (_1665_extra - 1LLU))) && _15324_d0) && ((_1539_di & 1LLU) == 1LLU)));
	} else {
		_1719_roundUp=((_1699_dfrac >> (_1665_extra - 1LLU)) == 1LLU);
	};
	if ((_1699_dfrac != 0LLU)) {
		_15324_d0=false;
	};
	_1b273ba52_formatDecimal(_12124_d, _1539_di, (!(_15324_d0)), _1719_roundUp, _12166_prec);
	(*(_12124_d))._field_dp-=_1465_q;
}



inline void _1b273ba52_formatDecimal(_1b272d0a4_decimalSlice* _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I64 _20088_prec) {
	jule::U64 _2015_max = _1b273b557_u64pow10[_20088_prec];;
	jule::I64 _2029_trimmed = 0LL;;
	while ((_20044_m >= _2015_max)) {
		{
			jule::U64 _2049_a;
			jule::U64 _20412_b;
			({
				jule::U64 ___jule_assign_arg = (_20044_m / 10LLU);
				jule::U64 _1___jule_assign_arg = (_20044_m % 10LL);
				_2049_a = ___jule_assign_arg;
				_20412_b = _1___jule_assign_arg;
			});
			_20044_m=_2049_a;
			(_2029_trimmed)++;
			if ((_20412_b > 5LLU)) {
				_20073_roundUp=true;
			} else if ((_20412_b < 5LLU)) {
				_20073_roundUp=false;
			} else {
				_20073_roundUp=(_20056_trunc || ((_20044_m & 1LLU) == 1LLU));
			};
			if ((_20412_b != 0LLU)) {
				_20056_trunc=true;
			};
		}
	_iter_next_1aa691717:;
	}
	_iter_end_1aa691717:;;
	if (_20073_roundUp) {
		(_20044_m)++;
	};
	if ((_20044_m >= _2015_max)) {
		_20044_m/=10LLU;
		(_2029_trimmed)++;
	};
	jule::U64 _2299_n = static_cast<jule::U64>(_20088_prec);;
	(*(_20023_d))._field_nd=static_cast<jule::I64>(_20088_prec);
	jule::U64 _2319_v = _20044_m;;
	while ((_2319_v >= 100LLU)) {
		{
			jule::U64 _23313_v1 = static_cast<jule::U64>(0LLU);;
			jule::U64 _23413_v2 = static_cast<jule::U64>(0LLU);;
			if (((_2319_v >> 32LLU) == 0LLU)) {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>((static_cast<jule::U32>(_2319_v) / 100LLU));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((static_cast<jule::U32>(_2319_v) % 100LL));
					_23313_v1 = ___jule_assign_arg;
					_23413_v2 = _1___jule_assign_arg;
				});
			} else {
				({
					jule::U64 ___jule_assign_arg = (_2319_v / 100LLU);
					jule::U64 _1___jule_assign_arg = (_2319_v % 100LL);
					_23313_v1 = ___jule_assign_arg;
					_23413_v2 = _1___jule_assign_arg;
				});
			};
			_2299_n-=2LLU;
			(*(_20023_d))._field_d[static_cast<jule::I64>((_2299_n + 1LLU))]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>(((2LL * _23413_v2) + 1LLU)));
			(*(_20023_d))._field_d[static_cast<jule::I64>(_2299_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((2LL * _23413_v2)));
			_2319_v=_23313_v1;
		}
	_iter_next_1aa694165:;
	}
	_iter_end_1aa694165:;;
	if ((_2319_v > 0LLU)) {
		(_2299_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I64>(_2299_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>(((2LL * _2319_v) + 1LLU)));
	};
	if ((_2319_v >= 10LLU)) {
		(_2299_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I64>(_2299_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((2LL * _2319_v)));
	};
	while (((*(_20023_d))._field_d[((*(_20023_d))._field_nd - 1LL)] == '0')) {
		{
			((*(_20023_d))._field_nd)--;
			(_2029_trimmed)++;
		}
	_iter_next_1aa69a798:;
	}
	_iter_end_1aa69a798:;;
	(*(_20023_d))._field_dp=((*(_20023_d))._field_nd + _2029_trimmed);
}



inline void _1b273c02a_ryuFtoaShortest(_1b272d0a4_decimalSlice* _26125_d, jule::U64 _26146_mant, jule::I64 _26157_exp, _1b272c427_floatInfo* _26168_flt) {
	if ((_26146_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_26125_d))._field_nd = ___jule_assign_arg;
			(*(_26125_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	if (((_26157_exp <= 0LL) && (_1b26d8c96_TrailingZeros64(_26146_mant) >= (-(_26157_exp))))) {
		_26146_mant>>=static_cast<jule::U64>((-(_26157_exp)));
		_1b273d108_ryuDigits(_26125_d, _26146_mant, _26146_mant, _26146_mant, true, false);
		return;;
	};
	jule::U64 _2735_ml;
	jule::U64 _2739_mc;
	jule::U64 _27313_mu;
	jule::I64 _27321_e2;
	({
		__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_assign_result = _1b273c9a9_computeBounds(_26146_mant, _26157_exp, _26168_flt);
		_2735_ml = __jule_assign_result.__jule_result_arg0;
		_2739_mc = __jule_assign_result.__jule_result_arg1;
		_27313_mu = __jule_assign_result.__jule_result_arg2;
		_27321_e2 = __jule_assign_result.__jule_result_arg3;
	});
	if ((_27321_e2 == 0LL)) {
		_1b273d108_ryuDigits(_26125_d, _2735_ml, _2739_mc, _27313_mu, true, false);
		return;;
	};
	jule::I64 _2795_q = (_1b273c2b1_mulByLog2Log10((-(_27321_e2))) + 1LL);;
	jule::U64 _2839_dl = static_cast<jule::U64>(0LLU);;
	jule::U64 _2849_dc = static_cast<jule::U64>(0LLU);;
	jule::U64 _2859_du = static_cast<jule::U64>(0LLU);;
	jule::Bool _2869_dl0 = false;;
	jule::Bool _2879_dc0 = false;;
	jule::Bool _2889_du0 = false;;
	if (((*(_26168_flt)) == _1b272c823_f32info)) {
		jule::U32 _29013_dl32 = static_cast<jule::U32>(0LLU);;
		jule::U32 _29113_dc32 = static_cast<jule::U32>(0LLU);;
		jule::U32 _29213_du32 = static_cast<jule::U32>(0LLU);;
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b273dba8_mult64bitPow10(static_cast<jule::U32>(_2735_ml), _27321_e2, _2795_q);
			_29013_dl32 = __jule_assign_result.__jule_result_arg0;
			_2869_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b273dba8_mult64bitPow10(static_cast<jule::U32>(_2739_mc), _27321_e2, _2795_q);
			_29113_dc32 = __jule_assign_result.__jule_result_arg0;
			_2879_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b273dba8_mult64bitPow10(static_cast<jule::U32>(_27313_mu), _27321_e2, _2795_q);
			_29213_du32 = __jule_assign_result.__jule_result_arg0;
			_27321_e2 = __jule_assign_result.__jule_result_arg1;
			_2889_du0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(_29013_dl32);
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(_29113_dc32);
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(_29213_du32);
			_2839_dl = ___jule_assign_arg;
			_2849_dc = _1___jule_assign_arg;
			_2859_du = _2___jule_assign_arg;
		});
	} else {
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b273e0d7_mult128bitPow10(_2735_ml, _27321_e2, _2795_q);
			_2839_dl = __jule_assign_result.__jule_result_arg0;
			_2869_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b273e0d7_mult128bitPow10(_2739_mc, _27321_e2, _2795_q);
			_2849_dc = __jule_assign_result.__jule_result_arg0;
			_2879_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b273e0d7_mult128bitPow10(_27313_mu, _27321_e2, _2795_q);
			_2859_du = __jule_assign_result.__jule_result_arg0;
			_27321_e2 = __jule_assign_result.__jule_result_arg1;
			_2889_du0 = __jule_assign_result.__jule_result_arg2;
		});
	};
	if ((_27321_e2 >= 0LL)) {
		jule::panic(jule::Str::lit("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:303:9"));;
	};
	if ((_2795_q > 55LL)) {
		({
			jule::Bool ___jule_assign_arg = false;
			jule::Bool _1___jule_assign_arg = false;
			jule::Bool _2___jule_assign_arg = false;
			_2869_dl0 = ___jule_assign_arg;
			_2879_dc0 = _1___jule_assign_arg;
			_2889_du0 = _2___jule_assign_arg;
		});
	};
	if (((_2795_q < 0LL) && (_2795_q >= -24LL))) {
		if (_1b273e45b_divisibleByPow5(_2735_ml, (-(_2795_q)))) {
			_2869_dl0=true;
		};
		if (_1b273e45b_divisibleByPow5(_2739_mc, (-(_2795_q)))) {
			_2879_dc0=true;
		};
		if (_1b273e45b_divisibleByPow5(_27313_mu, (-(_2795_q)))) {
			_2889_du0=true;
		};
	};
	jule::U64 _3255_extra = static_cast<jule::U64>((-(_27321_e2)));;
	jule::U64 _3265_extraMask = static_cast<jule::U64>(((1LL << _3255_extra) - 1LL));;
	jule::U64 _3289_fracl = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = (_2839_dl >> _3255_extra);
		jule::U64 _1___jule_assign_arg = (_2839_dl & _3265_extraMask);
		_2839_dl = ___jule_assign_arg;
		_3289_fracl = _1___jule_assign_arg;
	});
	jule::U64 _3309_fracc = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = (_2849_dc >> _3255_extra);
		jule::U64 _1___jule_assign_arg = (_2849_dc & _3265_extraMask);
		_2849_dc = ___jule_assign_arg;
		_3309_fracc = _1___jule_assign_arg;
	});
	jule::U64 _3329_fracu = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = (_2859_du >> _3255_extra);
		jule::U64 _1___jule_assign_arg = (_2859_du & _3265_extraMask);
		_2859_du = ___jule_assign_arg;
		_3329_fracu = _1___jule_assign_arg;
	});
	jule::Bool _3389_uok = ((!(_2889_du0)) || (_3329_fracu > 0LLU));;
	if ((_2889_du0 && (_3329_fracu == 0LLU))) {
		_3389_uok=((_26146_mant & 1LLU) == 0LLU);
	};
	if ((!(_3389_uok))) {
		(_2859_du)--;
	};
	jule::Bool _3479_cup = false;;
	if (_2879_dc0) {
		_3479_cup=((_3309_fracc > (1LLU << (_3255_extra - 1LLU))) || ((_3309_fracc == (1LLU << (_3255_extra - 1LLU))) && ((_2849_dc & 1LLU) == 1LLU)));
	} else {
		_3479_cup=((_3309_fracc >> (_3255_extra - 1LLU)) == 1LLU);
	};
	jule::Bool _3615_lok = ((_2869_dl0 && (_3289_fracl == 0LLU)) && ((_26146_mant & 1LLU) == 0LLU));;
	if ((!(_3615_lok))) {
		(_2839_dl)++;
	};
	jule::Bool _3665_c0 = (_2879_dc0 && (_3309_fracc == 0LLU));;
	_1b273d108_ryuDigits(_26125_d, _2839_dl, _2849_dc, _2859_du, _3665_c0, _3479_cup);
	(*(_26125_d))._field_dp-=_2795_q;
}



inline jule::I64 _1b273c2b1_mulByLog2Log10(jule::I64 _37719_x) {
	return ((_37719_x * 78913LL) >> 18LL);;
}



inline jule::I64 _1b273c57a_mulByLog10Log2(jule::I64 _38719_x) {
	return ((_38719_x * 108853LL) >> 15LL);;
}



inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1b273c9a9_computeBounds(jule::U64 _39518_mant, jule::I64 _39529_exp, _1b272c427_floatInfo* _3966_flt) {
	__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0;
	__jule_func_result.__jule_result_arg3 = 0;
	if (((_39518_mant != (1LLU << (*(_3966_flt))._field_mantbits)) || (_39529_exp == (((*(_3966_flt))._field_bias + 1LL) - static_cast<jule::I64>((*(_3966_flt))._field_mantbits))))) {
		({
			jule::U64 ___jule_assign_arg = ((2LL * _39518_mant) - 1LLU);
			jule::U64 _1___jule_assign_arg = (2LL * _39518_mant);
			jule::U64 _2___jule_assign_arg = ((2LL * _39518_mant) + 1LLU);
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=(_39529_exp - 1LL);
	} else {
		({
			jule::U64 ___jule_assign_arg = ((4LL * _39518_mant) - 1LLU);
			jule::U64 _1___jule_assign_arg = (4LL * _39518_mant);
			jule::U64 _2___jule_assign_arg = ((4LL * _39518_mant) + 2LLU);
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=(_39529_exp - 2LL);
	};
	return __jule_func_result;;
}



inline void _1b273d108_ryuDigits(_1b272d0a4_decimalSlice* _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup) {
	jule::U32 _4109_lhi;
	jule::U32 _41014_llo;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1b273e725_divmod1e9(_40936_lower);
		_4109_lhi = __jule_assign_result.__jule_result_arg0;
		_41014_llo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _4115_chi;
	jule::U32 _41110_clo;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1b273e725_divmod1e9(_40948_central);
		_4115_chi = __jule_assign_result.__jule_result_arg0;
		_41110_clo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _4125_uhi;
	jule::U32 _41210_ulo;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1b273e725_divmod1e9(_40962_upper);
		_4125_uhi = __jule_assign_result.__jule_result_arg0;
		_41210_ulo = __jule_assign_result.__jule_result_arg1;
	});
	if ((_4125_uhi == 0LLU)) {
		_1b273d779_ryuDigits32(_40919_d, _41014_llo, _41110_clo, _41210_ulo, _40978_c0, _40992_cup, 8LL);
	} else if ((_4109_lhi < _4125_uhi)) {
		if ((_41014_llo != 0LLU)) {
			(_4109_lhi)++;
		};
		_40978_c0=(_40978_c0 && (_41110_clo == 0LLU));
		_40992_cup=((_41110_clo > 500000000LL) || ((_41110_clo == 500000000LL) && _40992_cup));
		_1b273d779_ryuDigits32(_40919_d, _4109_lhi, _4115_chi, _4125_uhi, _40978_c0, _40992_cup, 8LL);
		(*(_40919_d))._field_dp+=9LL;
	} else {
		(*(_40919_d))._field_nd=0LL;
		jule::U64 _42813_n = static_cast<jule::U64>(9LLU);;
		jule::U32 _42913_v = _4115_chi;;
		while ((_42913_v > 0LLU)) {
			{
				jule::U32 _43113_v1;
				jule::U32 _43117_v2;
				({
					jule::U32 ___jule_assign_arg = (_42913_v / 10LLU);
					jule::U32 _1___jule_assign_arg = (_42913_v % 10LL);
					_43113_v1 = ___jule_assign_arg;
					_43117_v2 = _1___jule_assign_arg;
				});
				_42913_v=_43113_v1;
				(_42813_n)--;
				(*(_40919_d))._field_d[static_cast<jule::I64>(_42813_n)]=static_cast<jule::U8>((_43117_v2 + '0'));
			}
		_iter_next_1aa6b8c28:;
		}
		_iter_end_1aa6b8c28:;;
		((*(_40919_d))._field_d).mut_slice(static_cast<jule::I64>(_42813_n));;
		(*(_40919_d))._field_nd=static_cast<jule::I64>((9LL - _42813_n));
		_1b273d779_ryuDigits32(_40919_d, _41014_llo, _41110_clo, _41210_ulo, _40978_c0, _40992_cup, ((*(_40919_d))._field_nd + 8LL));
	};
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[((*(_40919_d))._field_nd - 1LL)] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
		}
	_iter_next_1aa6bb8c9:;
	}
	_iter_end_1aa6bb8c9:;;
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[0LL] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
			((*(_40919_d))._field_dp)--;
			((*(_40919_d))._field_d).mut_slice(1LL);;
		}
	_iter_next_1aa6b9784:;
	}
	_iter_end_1aa6b9784:;;
}



inline void _1b273d779_ryuDigits32(_1b272d0a4_decimalSlice* _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4559_upper, jule::Bool _45525_c0, jule::Bool _45539_cup, jule::I64 _45554_endindex) {
	if ((_4559_upper == 0LLU)) {
		(*(_45421_d))._field_dp=(_45554_endindex + 1LL);
		return;;
	};
	jule::I64 _4609_trimmed = 0LL;;
	jule::I64 _4639_cNextDigit = 0LL;;
	while ((_4559_upper > 0LLU)) {
		{
			jule::U32 _4709_l = ((_45442_lower + 9LLU) / 10LLU);;
			jule::U32 _47113_c;
			jule::U32 _47120_cdigit;
			({
				jule::U32 ___jule_assign_arg = (_45458_central / 10LLU);
				jule::U32 _1___jule_assign_arg = (_45458_central % 10LL);
				_47113_c = ___jule_assign_arg;
				_47120_cdigit = _1___jule_assign_arg;
			});
			jule::U32 _4729_u = (_4559_upper / 10LLU);;
			if ((_4709_l > _4729_u)) {
				goto _iter_end_1aa6be129;
			};
			if (((_4709_l == (_47113_c + 1LLU)) && (_47113_c < _4729_u))) {
				(_47113_c)++;
				_47120_cdigit=0LLU;
				_45539_cup=false;
			};
			(_4609_trimmed)++;
			_45525_c0=(_45525_c0 && (_4639_cNextDigit == 0LL));
			_4639_cNextDigit=static_cast<jule::I64>(_47120_cdigit);
			({
				jule::U32 ___jule_assign_arg = _4709_l;
				jule::U32 _1___jule_assign_arg = _47113_c;
				jule::U32 _2___jule_assign_arg = _4729_u;
				_45442_lower = ___jule_assign_arg;
				_45458_central = _1___jule_assign_arg;
				_4559_upper = _2___jule_assign_arg;
			});
		}
	_iter_next_1aa6be129:;
	}
	_iter_end_1aa6be129:;;
	if ((_4609_trimmed > 0LL)) {
		_45539_cup=(((_4639_cNextDigit > 5LL) || ((_4639_cNextDigit == 5LL) && (!(_45525_c0)))) || (((_4639_cNextDigit == 5LL) && _45525_c0) && ((_45458_central & 1LLU) == 1LLU)));
	};
	if (((_45458_central < _4559_upper) && _45539_cup)) {
		(_45458_central)++;
	};
	_45554_endindex-=_4609_trimmed;
	jule::U32 _5099_v = _45458_central;;
	jule::I64 _5109_n = _45554_endindex;;
	while ((_5109_n > (*(_45421_d))._field_nd)) {
		{
			jule::U32 _5129_v1;
			jule::U32 _51213_v2;
			({
				jule::U32 ___jule_assign_arg = (_5099_v / 100LLU);
				jule::U32 _1___jule_assign_arg = (_5099_v % 100LL);
				_5129_v1 = ___jule_assign_arg;
				_51213_v2 = _1___jule_assign_arg;
			});
			(*(_45421_d))._field_d[_5109_n]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>(((2LL * _51213_v2) + 1LLU)));
			(*(_45421_d))._field_d[(_5109_n - 1LL)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((2LL * _51213_v2)));
			_5109_n-=2LL;
			_5099_v=_5129_v1;
		}
	_iter_next_1aa6c4bce:;
	}
	_iter_end_1aa6c4bce:;;
	if ((_5109_n == (*(_45421_d))._field_nd)) {
		(*(_45421_d))._field_d[_5109_n]=static_cast<jule::U8>((_5099_v + '0'));
	};
	(*(_45421_d))._field_nd=(_45554_endindex + 1LL);
	(*(_45421_d))._field_dp=((*(_45421_d))._field_nd + _4609_trimmed);
}



inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1b273dba8_mult64bitPow10(jule::U32 _53419_m, jule::I64 _53431_e2, jule::I64 _53440_q) {
	__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_53440_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (_53419_m << 6LLU);
		__jule_func_result.__jule_result_arg1 = (_53431_e2 - 6LL);
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_53440_q < -348LL) || (347LL < _53440_q))) {
		jule::panic(jule::Str::lit("mult64bitPow10: power of 10 is out of range", 43) + jule::Str("\nlocation: std/conv/ftoaryu.jule:541:9"));;
	};
	jule::U64 _5439_pow = _1b27355ea_detailedPowsOfTen[(_53440_q - -348LL)][1LL];;
	if ((_53440_q < 0LL)) {
		_5439_pow+=1LLU;
	};
	jule::U64 _5485_hi;
	jule::U64 _5489_lo;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1b26e20ce_Mul64(static_cast<jule::U64>(_53419_m), _5439_pow);
		_5485_hi = __jule_assign_result.__jule_result_arg0;
		_5489_lo = __jule_assign_result.__jule_result_arg1;
	});
	_53431_e2+=((_1b273c57a_mulByLog10Log2(_53440_q) - 63LL) + 57LL);
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(((_5485_hi << 7LLU) | (_5489_lo >> 57LLU)));
	__jule_func_result.__jule_result_arg1 = _53431_e2;
	__jule_func_result.__jule_result_arg2 = ((_5489_lo << 7LLU) == 0LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1b273e0d7_mult128bitPow10(jule::U64 _56220_m, jule::I64 _56232_e2, jule::I64 _56241_q) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_56241_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (_56220_m << 8LLU);
		__jule_func_result.__jule_result_arg1 = (_56232_e2 - 8LL);
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_56241_q < -348LL) || (347LL < _56241_q))) {
		jule::panic(jule::Str::lit("mult128bitPow10: power of 10 is out of range", 44) + jule::Str("\nlocation: std/conv/ftoaryu.jule:569:9"));;
	};
	jule::Array<jule::U64,2> _5719_pow = _1b27355ea_detailedPowsOfTen[(_56241_q - -348LL)];;
	if ((_56241_q < 0LL)) {
		_5719_pow[0LL]+=1LLU;
	};
	_56232_e2+=((_1b273c57a_mulByLog10Log2(_56241_q) - 127LL) + 119LL);
	jule::U64 _5795_l1;
	jule::U64 _5799_l0;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1b26e20ce_Mul64(_56220_m, _5719_pow[0LL]);
		_5795_l1 = __jule_assign_result.__jule_result_arg0;
		_5799_l0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5809_h1;
	jule::U64 _58013_h0;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1b26e20ce_Mul64(_56220_m, _5719_pow[1LL]);
		_5809_h1 = __jule_assign_result.__jule_result_arg0;
		_58013_h0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5815_mid;
	jule::U64 _58110_carry;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1b26e07c5_Add64(_5795_l1, _58013_h0, 0LLU);
		_5815_mid = __jule_assign_result.__jule_result_arg0;
		_58110_carry = __jule_assign_result.__jule_result_arg1;
	});
	_5809_h1+=_58110_carry;
	__jule_func_result.__jule_result_arg0 = ((_5809_h1 << 9LLU) | (_5815_mid >> 55LLU));
	__jule_func_result.__jule_result_arg1 = _56232_e2;
	__jule_func_result.__jule_result_arg2 = (((_5815_mid << 9LLU) == 0LLU) && (_5799_l0 == 0LLU));
	return __jule_func_result;;
}



inline jule::Bool _1b273e45b_divisibleByPow5(jule::U64 _58624_m, jule::I64 _58632_k) {
	if ((_58624_m == 0LLU)) {
		return true;;
	};
	jule::I64 _5909_i = 0LL;;
	for (; (_5909_i < _58632_k); (_5909_i)++) {
		{
			if (((_58624_m % 5LL) != 0LLU)) {
				return false;;
			};
			_58624_m/=5LLU;
		}
	_iter_next_1aa6d3a67:;
	}
	_iter_end_1aa6d3a67:;;
	return true;;
}



inline __jule_tuple_u32__jule_tuple_u32 _1b273e725_divmod1e9(jule::U64 _60214_x) {
	__jule_tuple_u32__jule_tuple_u32 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>((_60214_x / 1000000000LL));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::U32>((_60214_x % 1000000000LL));
		return __jule_func_result;;
	};
}



inline void _1b274265c_trim(_1b2740d0e_decimal* _27414_a) {
	while ((((*(_27414_a))._field_nd > 0LL) && ((*(_27414_a))._field_d[((*(_27414_a))._field_nd - 1LL)] == '0'))) {
		{
			((*(_27414_a))._field_nd)--;
		}
	_iter_next_1aa6d7054:;
	}
	_iter_end_1aa6d7054:;;
	if (((*(_27414_a))._field_nd == 0LL)) {
		(*(_27414_a))._field_dp=0LL;
	};
}



inline void _1b2742948_rightShift(_1b2740d0e_decimal* _28420_a, jule::U64 _28432_k) {
	jule::I64 _2859_r = 0LL;;
	jule::I64 _2869_w = 0LL;;
	jule::U64 _2899_n = static_cast<jule::U64>(0LLU);;
	for (; ((_2899_n >> _28432_k) == 0LLU); (_2859_r)++) {
		{
			if ((_2859_r >= (*(_28420_a))._field_nd)) {
				if ((_2899_n == 0LLU)) {
					(*(_28420_a))._field_nd=0LL;
					return;;
				};
				while (((_2899_n >> _28432_k) == 0LLU)) {
					{
						_2899_n=(_2899_n * 10LLU);
						(_2859_r)++;
					}
				_iter_next_1aa6da200:;
				}
				_iter_end_1aa6da200:;;
				goto _iter_end_1aa6d8b9e;
			};
			jule::U64 _3039_c = static_cast<jule::U64>((*(_28420_a))._field_d[_2859_r]);;
			_2899_n=(((_2899_n * 10LLU) + _3039_c) - '0');
		}
	_iter_next_1aa6d8b9e:;
	}
	_iter_end_1aa6d8b9e:;;
	(*(_28420_a))._field_dp-=(_2859_r - 1LL);
	jule::U64 _3085_mask = (static_cast<jule::U64>((1LL << _28432_k)) - 1LLU);;
	for (; (_2859_r < (*(_28420_a))._field_nd); (_2859_r)++) {
		{
			jule::U64 _3129_c = static_cast<jule::U64>((*(_28420_a))._field_d[_2859_r]);;
			jule::U64 _3139_dig = (_2899_n >> _28432_k);;
			_2899_n&=_3085_mask;
			(*(_28420_a))._field_d[_2869_w]=static_cast<jule::U8>((_3139_dig + '0'));
			(_2869_w)++;
			_2899_n=(((_2899_n * 10LLU) + _3129_c) - '0');
		}
	_iter_next_1aa6d9a6d:;
	}
	_iter_end_1aa6d9a6d:;;
	while ((_2899_n > 0LLU)) {
		{
			jule::U64 _3229_dig = (_2899_n >> _28432_k);;
			_2899_n&=_3085_mask;
			if ((_2869_w < 800LL)) {
				(*(_28420_a))._field_d[_2869_w]=static_cast<jule::U8>((_3229_dig + '0'));
				(_2869_w)++;
			} else if ((_3229_dig > 0LLU)) {
				(*(_28420_a))._field_trunc=true;
			};
			_2899_n=(_2899_n * 10LLU);
		}
	_iter_next_1aa6dc8d9:;
	}
	_iter_end_1aa6dc8d9:;;
	(*(_28420_a))._field_nd=_2869_w;
	_1b274265c_trim(_28420_a);
}



inline jule::Bool _1b2742dee_prefixIsLessThan(jule::Array<jule::U8,800> _33821_b, jule::I64 _33835_end, jule::Str* _33846_s) {
	jule::I64 _3399_i = 0LL;;
	for (; (_3399_i < (*(_33846_s)).len()); (_3399_i)++) {
		{
			if ((_3399_i >= _33835_end)) {
				return true;;
			};
			if ((_33821_b[_3399_i] != (*(_33846_s))[_3399_i])) {
				return (_33821_b[_3399_i] < (*(_33846_s))[_3399_i]);;
			};
		}
	_iter_next_1aa6e1954:;
	}
	_iter_end_1aa6e1954:;;
	return false;;
}



inline void _1b27431a7_leftShift(_1b2740d0e_decimal* _35219_a, jule::U64 _35231_k) {
	jule::I64 _3539_delta = _1b2740726_leftCheats[static_cast<jule::I64>(_35231_k)]._field_delta;;
	if (_1b2742dee_prefixIsLessThan((*(_35219_a))._field_d, (*(_35219_a))._field_nd, &(_1b2740726_leftCheats[static_cast<jule::I64>(_35231_k)]._field_cutoff))) {
		(_3539_delta)--;
	};
	jule::I64 _3589_r = (*(_35219_a))._field_nd;;
	jule::I64 _3599_w = ((*(_35219_a))._field_nd + _3539_delta);;
	jule::U64 _3629_n = static_cast<jule::U64>(0LLU);;
	(_3589_r)--;
	for (; (_3589_r >= 0LL); (_3589_r)--) {
		{
			_3629_n+=((static_cast<jule::U64>((*(_35219_a))._field_d[_3589_r]) - '0') << _35231_k);
			jule::U64 _3669_quo = (_3629_n / 10LLU);;
			jule::U64 _3679_rem = (_3629_n - (10LLU * _3669_quo));;
			(_3599_w)--;
			if ((_3599_w < 800LL)) {
				(*(_35219_a))._field_d[_3599_w]=static_cast<jule::U8>((_3679_rem + '0'));
			} else if ((_3679_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_3629_n=_3669_quo;
		}
	_iter_next_1aa6e4b88:;
	}
	_iter_end_1aa6e4b88:;;
	while ((_3629_n > 0LLU)) {
		{
			jule::U64 _3799_quo = (_3629_n / 10LLU);;
			jule::U64 _3809_rem = (_3629_n - (10LLU * _3799_quo));;
			(_3599_w)--;
			if ((_3599_w < 800LL)) {
				(*(_35219_a))._field_d[_3599_w]=static_cast<jule::U8>((_3809_rem + '0'));
			} else if ((_3809_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_3629_n=_3799_quo;
		}
	_iter_next_1aa6e5260:;
	}
	_iter_end_1aa6e5260:;;
	(*(_35219_a))._field_nd+=_3539_delta;
	if (((*(_35219_a))._field_nd >= 800LL)) {
		(*(_35219_a))._field_nd=800LL;
	};
	(*(_35219_a))._field_dp+=_3539_delta;
	_1b274265c_trim(_35219_a);
}



inline jule::Bool _1b274352b_shouldRoundUp(_1b2740d0e_decimal* _39919_a, jule::I64 _39931_nd) {
	if (((_39931_nd < 0LL) || (_39931_nd >= (*(_39919_a))._field_nd))) {
		return false;;
	};
	if ((((*(_39919_a))._field_d[_39931_nd] == '5') && ((_39931_nd + 1LL) == (*(_39919_a))._field_nd))) {
		if ((*(_39919_a))._field_trunc) {
			return true;;
		};
		return ((_39931_nd > 0LL) && ((((*(_39919_a))._field_d[(_39931_nd - 1LL)] - '0') & 1LL) != 0LLU));;
	};
	return ((*(_39919_a))._field_d[_39931_nd] >= '5');;
}



inline jule::Str _1b2744cad_FmtUint(jule::U64 _6112_i, jule::I64 _6120_base) {
	if (((_6112_i < 100LLU) && (_6120_base == 10LL))) {
		return _1b2745781_small(static_cast<jule::I64>(_6112_i));;
	};
	jule::Str _658_s;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1b27460ab_fmtBits(nullptr, _6112_i, _6120_base, false, false);
		_658_s = __jule_assign_result.__jule_result_arg1;
	});
	return _658_s;;
}



inline jule::Str _1b2745176_FmtInt(jule::I64 _7211_i, jule::I64 _7219_base) {
	if ((((0LL <= _7211_i) && (_7211_i < 100LL)) && (_7219_base == 10LL))) {
		return _1b2745781_small(static_cast<jule::I64>(_7211_i));;
	};
	jule::Str _768_s;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1b27460ab_fmtBits(nullptr, static_cast<jule::U64>(_7211_i), _7219_base, (_7211_i < 0LL), false);
		_768_s = __jule_assign_result.__jule_result_arg1;
	});
	return _768_s;;
}



inline jule::Str _1b2745440_Itoa(jule::I64 _819_i) {
	return _1b2745176_FmtInt(static_cast<jule::I64>(_819_i), 10LL);;
}



inline jule::Str _1b2745781_small(jule::I64 _8610_i) {
	if ((_8610_i < 10LL)) {
		return jule::Str::from_byte(static_cast<jule::U8>(('0' + _8610_i)));;
	};
	jule::Slice<jule::U8> _909_buf = jule::Slice<jule::U8>::alloc(3LL, 3LL, 0);;
	_909_buf[0LL]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, (_8610_i << 1LL));
	_909_buf[1LL]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, ((_8610_i << 1LL) + 1LL));
	return _20d73ccb0_StrFromBytes(_909_buf.slice(0LL, 2LL));;
}



inline jule::Bool _1b2745a17_isPowerOfTwo(jule::I64 _9617_x) {
	return ((_9617_x & (_9617_x - 1LL)) == 0LL);;
}



inline __jule_tuple_su8__jule_tuple_str _1b27460ab_fmtBits(jule::Slice<jule::U8> _10516_dst, jule::U64 _10533_u, jule::I64 _10541_base, jule::Bool _10552_neg, jule::Bool _10563_append_) {
	__jule_tuple_su8__jule_tuple_str __jule_func_result;
	if (((_10541_base < 2LL) || (_10541_base > 36LL))) {
		jule::panic(jule::Str::lit("std::conv: illegal base", 23) + jule::Str("\nlocation: std/conv/itoa.jule:107:9"));;
	};
	jule::Slice<jule::U8> _1119_a = jule::Slice<jule::U8>::alloc(65LL, 65LL, 0);;
	jule::I64 _1129_i = _1119_a.len();;
	if (_10552_neg) {
		_10533_u=(-(_10533_u));
	};
	{
		
		if ((_10541_base == 10LL)) {
			_case_begin_1aa730762:;
			{
				;
				jule::U64 _15413_us = static_cast<jule::U64>(_10533_u);;
				while ((_15413_us >= 100LLU)) {
					{
						jule::U64 _15613_is = ((_15413_us % 100LL) << 1LLU);;
						_15413_us/=100LLU;
						_1129_i-=2LL;
						_1119_a[(_1129_i + 1LL)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((_15613_is + 1LLU)));
						_1119_a[_1129_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>(_15613_is));
					}
				_iter_next_1aa732302:;
				}
				_iter_end_1aa732302:;;
				jule::U64 _1649_is = (_15413_us << 1LLU);;
				(_1129_i)--;
				_1119_a[_1129_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((_1649_is + 1LLU)));
				if ((_15413_us >= 10LLU)) {
					(_1129_i)--;
					_1119_a[_1129_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>(_1649_is));
				};
			}
		}
		else if (_1b2745a17_isPowerOfTwo(_10541_base)) {
			_case_begin_1aa730e27:;
			{
				jule::U64 _1799_shift = (static_cast<jule::U64>(_1b26d80e7_TrailingZeros(static_cast<jule::U64>(_10541_base))) & 7LLU);;
				jule::U64 _1809_b = static_cast<jule::U64>(_10541_base);;
				jule::U64 _1819_m = (static_cast<jule::U64>(_10541_base) - 1LLU);;
				while ((_10533_u >= _1809_b)) {
					{
						(_1129_i)--;
						_1119_a[_1129_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I64>((static_cast<jule::U64>(_10533_u) & _1819_m)));
						_10533_u>>=_1799_shift;
					}
				_iter_next_1aa73a01e:;
				}
				_iter_end_1aa73a01e:;;
				(_1129_i)--;
				_1119_a[_1129_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I64>(static_cast<jule::U64>(_10533_u)));
			}
		}
		else {
			_case_begin_1aa72e871:;
			{
				jule::U64 _1929_b = static_cast<jule::U64>(_10541_base);;
				while ((_10533_u >= _1929_b)) {
					{
						(_1129_i)--;
						jule::U64 _19813_q = jule::div(_10533_u,_1929_b);;
						_1119_a[_1129_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I64>(static_cast<jule::U64>((_10533_u - (_19813_q * _1929_b)))));
						_10533_u=_19813_q;
					}
				_iter_next_1aa730542:;
				}
				_iter_end_1aa730542:;;
				(_1129_i)--;
				_1119_a[_1129_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I64>(static_cast<jule::U64>(_10533_u)));
			}
		}
		_match_end_1aa72e7d8:;
	};
	if (_10552_neg) {
		(_1129_i)--;
		_1119_a[_1129_i]='-';
	};
	if (_10563_append_) {
		__jule_func_result.__jule_result_arg0=jule::append(_10516_dst,_1119_a.slice(_1129_i));
		return __jule_func_result;;
	};
	jule::I64 _2175_n = jule::copy(_1119_a, _1119_a.slice(_1129_i));;
	__jule_func_result.__jule_result_arg1=_20d73ccb0_StrFromBytes(_1119_a.slice(0LL, _2175_n));
	return __jule_func_result;;
}



inline jule::Str _1b27475a7_RealKindOf(jule::Str _4515_kind) {
	{
		auto &_match_expr{ _4515_kind };
		
		if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1aa74b55d:;
			{
				return _1b2746ac3_SysInt;;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4) || _match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1aa74ebc1:;
			{
				return _1b2746d7b_SysUint;;
			}
		}
		else {
			_case_begin_1aa74c51a:;
			{
				return _4515_kind;;
			}
		}
		_match_end_1aa74de12:;
	};
}



inline jule::I64 _1b2747871_BitsizeOf(jule::Str _5914_k) {
	{
		auto &_match_expr{ _5914_k };
		
		if (_match_expr == jule::Str::lit("i8", 2) || _match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1aa750b06:;
			{
				return 8LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3) || _match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1aa750d26:;
			{
				return 16LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3) || _match_expr == jule::Str::lit("u32", 3) || _match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1aa750d8c:;
			{
				return 32LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3) || _match_expr == jule::Str::lit("u64", 3) || _match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1aa750b6c:;
			{
				return 64LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4) || _match_expr == jule::Str::lit("int", 3) || _match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1aa750bd3:;
			{
				return _1b27467c6_BitSize;;
			}
		}
		else {
			_case_begin_1aa75093b:;
			{
				return -1LL;;
			}
		}
		_match_end_1aa750a5c:;
	};
}



inline jule::Str _1b2747bb2_IntFromBits(jule::I64 _8716_bits) {
	{
		auto &_match_expr{ _8716_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1aa753246:;
			{
				return jule::Str::lit("i8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1aa75306a:;
			{
				return jule::Str::lit("i16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1aa7530d1:;
			{
				return jule::Str::lit("i32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1aa7532ac:;
			{
				return jule::Str::lit("i64", 3);;
			}
		}
		else {
			_case_begin_1aa75282d:;
			{
				return jule::Str();;
			}
		}
		_match_end_1aa75294e:;
	};
}



inline jule::Str _1b2747e48_UintFromBits(jule::I64 _10517_bits) {
	{
		auto &_match_expr{ _10517_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1aa7544bc:;
			{
				return jule::Str::lit("u8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1aa753c80:;
			{
				return jule::Str::lit("u16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1aa753ce6:;
			{
				return jule::Str::lit("u32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1aa754533:;
			{
				return jule::Str::lit("u64", 3);;
			}
		}
		else {
			_case_begin_1aa754038:;
			{
				return jule::Str();;
			}
		}
		_match_end_1aa753bd6:;
	};
}



inline jule::Str _1b2748212_FloatFromBits(jule::I64 _12318_bits) {
	{
		auto &_match_expr{ _12318_bits };
		
		if (_match_expr == 32LLU) {
			_case_begin_1aa755996:;
			{
				return jule::Str::lit("f32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1aa755017:;
			{
				return jule::Str::lit("f64", 3);;
			}
		}
		else {
			_case_begin_1aa7552ae:;
			{
				return jule::Str();;
			}
		}
		_match_end_1aa754e5c:;
	};
}



inline jule::Bool _1b2748d17_CheckBitFloat(jule::Str _15118_val, jule::I64 _15128_bit) {
	({
		auto except = _1b273a3e1_ParseFloat(_15118_val, _15128_bit);
		(except.ok()) ? (except.result) : ({{
			return false;;
		} 0;});
	});
	return true;;
}



inline jule::I64 _1b27490d1_BitsizeOfFloat(jule::F64 _16119_x) {
	{
		
		if (((-340282346638528860000000000000000000000.0 <= _16119_x) && (_16119_x <= 340282346638528860000000000000000000000.0))) {
			_case_begin_1aa75a5c2:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1aa75a050:;
			{
				return 64LLU;;
			}
		}
		_match_end_1aa756ec5:;
	};
}



inline jule::I64 _1b274939a_BitsizeOfInt(jule::I64 _17717_x) {
	{
		
		if (((-128LL <= _17717_x) && (_17717_x <= 127LL))) {
			_case_begin_1aa75b32b:;
			{
				return 8LLU;;
			}
		}
		else if (((-32768LL <= _17717_x) && (_17717_x <= 32767LL))) {
			_case_begin_1aa75b408:;
			{
				return 16LLU;;
			}
		}
		else if (((-2147483648LL <= _17717_x) && (_17717_x <= 2147483647LL))) {
			_case_begin_1aa75b46e:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1aa75a88b:;
			{
				return 64LLU;;
			}
		}
		_match_end_1aa75a7ae:;
	};
}



inline jule::I64 _1b2749664_BitsizeOfUint(jule::U64 _19718_x) {
	{
		
		if ((_19718_x <= 255LLU)) {
			_case_begin_1aa75cd99:;
			{
				return 8LLU;;
			}
		}
		else if ((_19718_x <= 65535LLU)) {
			_case_begin_1aa75c085:;
			{
				return 16LLU;;
			}
		}
		else if ((_19718_x <= 4294967295LLU)) {
			_case_begin_1aa75c0eb:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1aa75c00d:;
			{
				return 64LLU;;
			}
		}
		_match_end_1aa75c4a3:;
	};
}



inline void _1b274980c_UpdateTarget(void) {
	{
		{
			auto &_match_expr{ _1cb39e800_Arch };
			
			if (_match_expr == jule::Str::lit("arm64", 5) || _match_expr == jule::Str::lit("amd64", 5)) {
				_case_begin_1aa75ce54:;
				{
					_1b27467c6_BitSize=64LLU;
					_1b2746ac3_SysInt=jule::Str::lit("i64", 3);
					_1b2746d7b_SysUint=jule::Str::lit("u64", 3);
				}
			}
			else if (_match_expr == jule::Str::lit("i386", 4)) {
				_case_begin_1aa75dd78:;
				{
					_1b27467c6_BitSize=32LLU;
					_1b2746ac3_SysInt=jule::Str::lit("i32", 3);
					_1b2746d7b_SysUint=jule::Str::lit("u32", 3);
				}
			}
			_match_end_1aa75dc79:;
		};
	};
}



inline void _1b2749983_init(void) {
	_1b274980c_UpdateTarget();
}



inline jule::I64 _1b274d5e1_MinI(jule::Str _6113_k) {
	_6113_k=_1b27475a7_RealKindOf(_6113_k);
	{
		auto &_match_expr{ _6113_k };
		
		if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1aa761562:;
			{
				return -128LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1aa7612dc:;
			{
				return -32768LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1aa761353:;
			{
				return -2147483648LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1aa7613ca:;
			{
				return jule::MIN_I64;;
			}
		}
		else {
			_case_begin_1aa75d042:;
			{
				return 0LL;;
			}
		}
		_match_end_1aa75d10d:;
	};
}



inline jule::I64 _1b274d8ee_MaxI(jule::Str _7913_k) {
	_7913_k=_1b27475a7_RealKindOf(_7913_k);
	{
		auto &_match_expr{ _7913_k };
		
		if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1aa762574:;
			{
				return 127LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1aa7625da:;
			{
				return 32767LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1aa762651:;
			{
				return 2147483647LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1aa7626b7:;
			{
				return jule::MAX_I64;;
			}
		}
		else {
			_case_begin_1aa762420:;
			{
				return 0LL;;
			}
		}
		_match_end_1aa7623ba:;
	};
}



inline jule::U64 _1b274dbb8_MaxU(jule::Str _9713_k) {
	_9713_k=_1b27475a7_RealKindOf(_9713_k);
	{
		auto &_match_expr{ _9713_k };
		
		if (_match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1aa763b6e:;
			{
				return 255LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1aa763bd5:;
			{
				return 65535LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1aa763c4b:;
			{
				return 4294967295LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1aa763cb2:;
			{
				return jule::MAX_U64;;
			}
		}
		else {
			_case_begin_1aa763a1a:;
			{
				return 0LLU;;
			}
		}
		_match_end_1aa7639b5:;
	};
}



inline jule::F64 _1b274e009_Min(jule::Str _11512_k) {
	_11512_k=_1b27475a7_RealKindOf(_11512_k);
	jule::I64 _1175_i = _1b274d5e1_MinI(_11512_k);;
	if ((_1175_i != 0LL)) {
		return static_cast<jule::F64>(_1175_i);;
	};
	{
		auto &_match_expr{ _11512_k };
		
		if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1aa7662e2:;
			{
				return -340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1aa765d6e:;
			{
				return jule::MIN_F64;;
			}
		}
		else {
			_case_begin_1aa765995:;
			{
				return 0LL;;
			}
		}
		_match_end_1aa7656a9:;
	};
}



inline jule::F64 _1b274e290_Max(jule::Str _13312_k) {
	_13312_k=_1b27475a7_RealKindOf(_13312_k);
	jule::I64 _1355_i = _1b274d8ee_MaxI(_13312_k);;
	if ((_1355_i != 0LL)) {
		return static_cast<jule::F64>(_1355_i);;
	};
	jule::U64 _1395_u = _1b274dbb8_MaxU(_13312_k);;
	if ((_1395_u != 0LLU)) {
		return static_cast<jule::F64>(_1395_u);;
	};
	{
		auto &_match_expr{ _13312_k };
		
		if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1aa768602:;
			{
				return 340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1aa76817e:;
			{
				return jule::MAX_F64;;
			}
		}
		else {
			_case_begin_1aa767ca5:;
			{
				return 0LL;;
			}
		}
		_match_end_1aa767964:;
	};
}



inline jule::Bool _1b274e746_IsI16Greater(jule::Str _621_k) {
	return _621_k.equal("i8", 2);;
}



inline jule::Bool _1b274ea54_IsI32Greater(jule::Str _1121_k) {
	return (_1121_k.equal("i8", 2) || _1121_k.equal("i16", 3));;
}



inline jule::Bool _1b274ed1d_IsI64Greater(jule::Str _1621_k) {
	return ((_1621_k.equal("i8", 2) || _1621_k.equal("i16", 3)) || _1621_k.equal("i32", 3));;
}



inline jule::Bool _1b275015e_IsU16Greater(jule::Str _2321_k) {
	return _2321_k.equal("u8", 2);;
}



inline jule::Bool _1b27503e5_IsU32Greater(jule::Str _2821_k) {
	return (_2821_k.equal("u8", 2) || _2821_k.equal("u16", 3));;
}



inline jule::Bool _1b27506ae_IsU64Greater(jule::Str _3421_k) {
	return ((_3421_k.equal("u8", 2) || _3421_k.equal("u16", 3)) || _3421_k.equal("u32", 3));;
}



inline jule::Bool _1b2750978_IsF32Greater(jule::Str _4117_k) {
	return (!_4117_k.equal("f64", 3));;
}



inline jule::Bool _1b2750d52_IsF64Greater(jule::Str _4617_k) {
	return true;;
}



inline jule::Bool _1b275114e_IsGreater(jule::Str _5118_k1, jule::Str _5127_k2) {
	{
		auto &_match_expr{ _5118_k1 };
		
		if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1aa76bced:;
			{
				return _1b27522b5_IsSigInt(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4)) {
			_case_begin_1aa76bd64:;
			{
				return _1b27525c3_IsUnsigInt(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1aa76bdca:;
			{
				return _1b27525c3_IsUnsigInt(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1aa76be52:;
			{
				return _1b274e746_IsI16Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1aa76c1c7:;
			{
				return _1b274ea54_IsI32Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1aa76c24e:;
			{
				return _1b274ed1d_IsI64Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1aa76c2c6:;
			{
				return _1b275015e_IsU16Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1aa76c34d:;
			{
				return _1b27503e5_IsU32Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1aa76c45d:;
			{
				return _1b27506ae_IsU64Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1aa76c4c4:;
			{
				return _1b2750978_IsF32Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1aa76c53a:;
			{
				return _1b2750d52_IsF64Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("any", 3)) {
			_case_begin_1aa76c5a1:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1aa76ba9a:;
			{
				return false;;
			}
		}
		_match_end_1aa76a59e:;
	};
}



inline jule::Bool _1b27522b5_IsSigInt(jule::Str _2717_k) {
	return ((((_2717_k.equal("i8", 2) || _2717_k.equal("i16", 3)) || _2717_k.equal("i32", 3)) || _2717_k.equal("i64", 3)) || _2717_k.equal("int", 3));;
}



inline jule::Bool _1b27525c3_IsUnsigInt(jule::Str _3619_k) {
	return (((((_3619_k.equal("u8", 2) || _3619_k.equal("u16", 3)) || _3619_k.equal("u32", 3)) || _3619_k.equal("u64", 3)) || _3619_k.equal("uint", 4)) || _3619_k.equal("uintptr", 7));;
}



inline jule::Bool _1b275288c_IsInt(jule::Str _4610_k) {
	return (_1b27522b5_IsSigInt(_4610_k) || _1b27525c3_IsUnsigInt(_4610_k));;
}



inline jule::Bool _1b2752bcd_IsFloat(jule::Str _5112_k) {
	return (_5112_k.equal("f32", 3) || _5112_k.equal("f64", 3));;
}



inline jule::Bool _1b2752e64_IsNum(jule::Str _5610_k) {
	return (_1b275288c_IsInt(_5610_k) || _1b2752bcd_IsFloat(_5610_k));;
}



inline jule::Bool _1b275322d_IsSigNum(jule::Str _6113_k) {
	return (_1b27522b5_IsSigInt(_6113_k) || _1b2752bcd_IsFloat(_6113_k));;
}



inline void _1b275c523_lshiftUnsig(_1b2753508_Const* _59021_c, _1b2753508_Const* _59032_x) {
	jule::U64 _5915_l = _1b2755e34_AsU64(_59021_c);;
	jule::U64 _5925_r = _1b2755e34_AsU64(_59032_x);;
	_1b275672b_SetU64(_59021_c, (_5915_l << _5925_r));
}



inline void _1b275c853_rshiftUnsig(_1b2753508_Const* _59621_c, _1b2753508_Const* _59632_x) {
	jule::U64 _5975_l = _1b2755e34_AsU64(_59621_c);;
	jule::U64 _5985_r = _1b2755e34_AsU64(_59632_x);;
	_1b275672b_SetU64(_59621_c, (_5975_l >> _5985_r));
}



inline jule::Bool _1b4ad5e4e_IsUnaryOp(jule::U64 _33414_id) {
	{
		auto expr = &(_1b4a3b35a_UnaryOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa829a6a:;
		if (it != expr_end) {
			jule::U64 *_33512_op = it;
			{
				if ((_33414_id == (*(_33512_op)))) {
					return true;;
				};
			}
			_iter_next_1aa829a6a:;
			++it;
			goto _iter_begin_1aa829a6a;
		}
		_iter_end_1aa829a6a:;
	};
	return false;;
}



inline jule::Bool _1b4ad625c_IsBinOp(jule::U64 _34412_id) {
	{
		auto expr = &(_1b4a3b59c_BinOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa82a076:;
		if (it != expr_end) {
			jule::U64 *_34512_op = it;
			{
				if ((_34412_id == (*(_34512_op)))) {
					return true;;
				};
			}
			_iter_next_1aa82a076:;
			++it;
			goto _iter_begin_1aa82a076;
		}
		_iter_end_1aa82a076:;
	};
	return false;;
}



inline jule::Bool _1b4ad6867_IsStr(jule::Str _36410_k) {
	return (!(_36410_k).empty() && ((_36410_k[0LL] == '\"') || _1b4ad6aed_IsRawStr(_36410_k)));;
}



inline jule::Bool _1b4ad6aed_IsRawStr(jule::Str _36713_k) {
	return (!(_36713_k).empty() && (_36713_k[0LL] == '`'));;
}



inline jule::Bool _1b4ad6db7_IsRune(jule::Str _37111_k) {
	return (!(_37111_k).empty() && (_37111_k[0LL] == '\''));;
}



inline jule::Bool _1b4ad779c_IsFloat(jule::Str _38012_k) {
	if (_1cb1bdb19_HasPrefix(_38012_k, jule::Str::lit("0x", 2))) {
		return _1cb1c3b52_ContainsAny(_38012_k, jule::Str::lit(".pP", 3));;
	};
	return _1cb1c3b52_ContainsAny(_38012_k, jule::Str::lit(".eE", 3));;
}



inline jule::Bool _1b4ad7a66_IsNum(jule::Str _38810_k) {
	if ((_38810_k).empty()) {
		return false;;
	};
	jule::U8 _3935_b = _38810_k[0LL];;
	return ((_3935_b == '.') || (('0' <= _3935_b) && (_3935_b <= '9')));;
}



inline jule::Bool _1b4ad80e9_IsIgnoreIdent(jule::Str _40318_ident) {
	return _40318_ident.equal("_", 1);;
}



inline jule::Bool _1b4ad83b3_IsAnonIdent(jule::Str _40616_ident) {
	return _40616_ident.equal("<anonymous>", 11);;
}



inline jule::Bool _1b4ad8946_IsSpace(jule::I32 _41912_r) {
	{
		auto expr = &(_1b4a3b14b_Spaces);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa832457:;
		if (it != expr_end) {
			jule::I32 *_42012_cr = it;
			{
				if ((_41912_r == (*(_42012_cr)))) {
					return true;;
				};
			}
			_iter_next_1aa832457:;
			++it;
			goto _iter_begin_1aa832457;
		}
		_iter_end_1aa832457:;
	};
	return false;;
}



inline jule::Bool _1b4ad8e41_IsLetter(jule::I32 _42913_r) {
	return _1cade3c7e_IsLetter(_42913_r);;
}



inline jule::Bool _1b4ad93b4_IsDecimal(jule::U8 _44914_b) {
	return (('0' <= _44914_b) && (_44914_b <= '9'));;
}



inline jule::Bool _1b4ad967d_IsBinary(jule::U8 _45213_b) {
	return ((_45213_b == '0') || (_45213_b == '1'));;
}



inline jule::Bool _1b4ad9947_IsOctal(jule::U8 _45512_b) {
	return (('0' <= _45512_b) && (_45512_b <= '7'));;
}



inline jule::Bool _1b4ad9c11_IsHex(jule::U8 _45810_b) {
	{
		
		if ((('0' <= _45810_b) && (_45810_b <= '9'))) {
			_case_begin_1aa835ec7:;
			{
				return true;;
			}
		}
		else if ((('a' <= _45810_b) && (_45810_b <= 'f'))) {
			_case_begin_1aa836071:;
			{
				return true;;
			}
		}
		else if ((('A' <= _45810_b) && (_45810_b <= 'F'))) {
			_case_begin_1aa8360e8:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1aa835e50:;
			{
				return false;;
			}
		}
		_match_end_1aa835966:;
	};
}



inline jule::Bool _1b4ad9eca_IsAssign(jule::U64 _47313_id) {
	return ((((((((_47313_id == static_cast<jule::U64>(1LLU)) || (_47313_id == static_cast<jule::U64>(27LLU))) || (_47313_id == static_cast<jule::U64>(30LLU))) || (_47313_id == static_cast<jule::U64>(32LLU))) || (_47313_id == static_cast<jule::U64>(24LLU))) || (_47313_id == static_cast<jule::U64>(74LLU))) || (_47313_id == static_cast<jule::U64>(62LLU))) || (_47313_id == static_cast<jule::U64>(65LLU)));;
}



inline jule::Bool _1b4ada294_IsPostfixOp(jule::U64 _48516_id) {
	{
		auto expr = &(_1b4acebe5_PostfixOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa837605:;
		if (it != expr_end) {
			jule::U64 *_48612_op = it;
			{
				if ((_48516_id == (*(_48612_op)))) {
					return true;;
				};
			}
			_iter_next_1aa837605:;
			++it;
			goto _iter_begin_1aa837605;
		}
		_iter_end_1aa837605:;
	};
	return false;;
}



inline jule::Bool _1b4ada55d_IsAssignOp(jule::U64 _49515_id) {
	if (_1b4ada294_IsPostfixOp(_49515_id)) {
		return true;;
	};
	{
		auto expr = &(_1b4aceed1_AssignOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa839cbc:;
		if (it != expr_end) {
			jule::U64 *_49912_op = it;
			{
				if ((_49515_id == (*(_49912_op)))) {
					return true;;
				};
			}
			_iter_next_1aa839cbc:;
			++it;
			goto _iter_begin_1aa839cbc;
		}
		_iter_end_1aa839cbc:;
	};
	return false;;
}



inline jule::Ptr<_1b4adae98_File> _1b4adc373_NewFileSet(jule::Str _5715_path) {
	return jule::new_ptr<_1b4adae98_File>(_1b4adae98_File{._field_Path=_5715_path, });;
}



inline _1cb285120_Log _1b4addd9c_makeErr(jule::I64 _10012_row, jule::I64 _10022_col, jule::Ptr<_1b4adae98_File>* _10033_f, jule::Str _10043_fmt, jule::Slice<jule::Any> _10056_args) {
	return _1cb285120_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_10012_row, ._field_Column=_10022_col, ._field_Path=(*((*(_10033_f))))._field_Path, ._field_Text=_1cb285582_Logf(_10043_fmt, _10056_args), };;
}



inline jule::Bool _1b4ade265_bytesHasPrefix(jule::Slice<jule::U8>* _11020_bytes, jule::Str _11035_prefix) {
	if (((*(_11020_bytes)).len() < _11035_prefix.len())) {
		return false;;
	};
	{
		auto expr = &(_11035_prefix);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa84503b:;
		if (it != expr_end) {
			jule::I64 _1149_i = it - expr->begin();
			{
				if (((*(_11020_bytes))[_1149_i] != _11035_prefix[_1149_i])) {
					return false;;
				};
			}
			_iter_next_1aa84503b:;
			++it;
			_1149_i++;
			goto _iter_begin_1aa84503b;
		}
		_iter_end_1aa84503b:;
	};
	return true;;
}



inline jule::Str _1b4ade5d9_floatFmtE(jule::Slice<jule::U8>* _12215_txt, jule::I64 _12232_i) {
	jule::Str __jule_func_result;
	(_12232_i)++;
	if ((_12232_i >= (*(_12215_txt)).len())) {
		return __jule_func_result;;
	};
	jule::U8 _1289_b = (*(_12215_txt))[_12232_i];;
	if ((_1289_b == '_')) {
		return __jule_func_result;;
	};
	if (((_1289_b == '+') || (_1289_b == '-'))) {
		(_12232_i)++;
		if ((_12232_i >= (*(_12215_txt)).len())) {
			return __jule_func_result;;
		};
		if (((*(_12215_txt))[_12232_i] == '_')) {
			return __jule_func_result;;
		};
	};
	jule::I64 _1425_first = _12232_i;;
	for (; (_12232_i < (*(_12215_txt)).len()); (_12232_i)++) {
		{
			_1289_b=(*(_12215_txt))[_12232_i];
			if (((_1289_b != '_') && (!(_1b4ad93b4_IsDecimal(_1289_b))))) {
				goto _iter_end_1aa847dc9;
			};
		}
	_iter_next_1aa847dc9:;
	}
	_iter_end_1aa847dc9:;;
	if ((_12232_i == _1425_first)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_12215_txt)).slice(0LL, _12232_i));
	return __jule_func_result;;
}



inline jule::Str _1b4ade9a2_floatFmtP(jule::Slice<jule::U8>* _15615_txt, jule::I64 _15628_i) {
	return _1b4ade5d9_floatFmtE(_15615_txt, _15628_i);;
}



inline jule::Str _1b4aded26_floatFmtDotnp(jule::Slice<jule::U8>* _16019_txt, jule::I64 _16036_i) {
	if (((*(_16019_txt))[_16036_i] != '.')) {
		return jule::Str();;
	};
	(_16036_i)++;
	_julec_label_1aa84a2e9:;
	for (; (_16036_i < (*(_16019_txt)).len()); (_16036_i)++) {
		{
			jule::U8 _1689_b = (*(_16019_txt))[_16036_i];;
			{
				
				if ((_1689_b == '_') || _1b4ad93b4_IsDecimal(_1689_b)) {
					_case_begin_1aa84ac9a:;
					{
						goto _iter_next_1aa84a052;
					}
				}
				else if (_1b4ae16a7_isFloatFmtP(_1689_b, _16036_i)) {
					_case_begin_1aa84ad44:;
					{
						return _1b4ade9a2_floatFmtP(_16019_txt, _16036_i);;
					}
				}
				else {
					_case_begin_1aa84ac23:;
					{
						goto _iter_end_1aa84a052;
					}
				}
				_match_end_1aa84abac:;
			};
		}
	_iter_next_1aa84a052:;
	}
	_iter_end_1aa84a052:;;
	return jule::Str();;
}



inline jule::Str _1b4ae019a_floatFmtDotfp(jule::Slice<jule::U8>* _18119_txt, jule::I64 _18136_i) {
	_18136_i+=2LL;
	return _1b4ade5d9_floatFmtE(_18119_txt, _18136_i);;
}



inline jule::Str _1b4ae051e_floatFmtDotp(jule::Slice<jule::U8>* _18618_txt, jule::I64 _18635_i) {
	(_18635_i)++;
	return _1b4ade5d9_floatFmtE(_18618_txt, _18635_i);;
}



inline jule::Str _1b4ae09a3_floatNum(jule::Slice<jule::U8>* _19114_txt, jule::I64 _19131_i) {
	jule::Str __jule_func_result;
	(_19131_i)++;
	if ((_19131_i >= (*(_19114_txt)).len())) {
		__jule_func_result = static_cast<jule::Str>((*(_19114_txt)));
		return __jule_func_result;;
	};
	if (((*(_19114_txt))[_19131_i] == '_')) {
		(_19131_i)--;
		__jule_func_result = static_cast<jule::Str>((*(_19114_txt)).slice(0LL, _19131_i));
		return __jule_func_result;;
	};
	for (; (_19131_i < (*(_19114_txt)).len()); (_19131_i)++) {
		{
			jule::U8 _2019_b = (*(_19114_txt))[_19131_i];;
			if (((_19131_i > 1LL) && ((_2019_b == 'e') || (_2019_b == 'E')))) {
				__jule_func_result = _1b4ade5d9_floatFmtE(_19114_txt, _19131_i);
				return __jule_func_result;;
			};
			if (((_2019_b != '_') && (!(_1b4ad93b4_IsDecimal(_2019_b))))) {
				goto _iter_end_1aa84da5b;
			};
		}
	_iter_next_1aa84da5b:;
	}
	_iter_end_1aa84da5b:;;
	if ((_19131_i == 1LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_19114_txt)).slice(0LL, _19131_i));
	return __jule_func_result;;
}



inline jule::Str _1b4ae0be5_commonNum(jule::Slice<jule::U8>* _21615_txt) {
	jule::Str __jule_func_result;
	jule::I64 _2179_i = 0LL;;
	_julec_label_1aa84d2db:;
	for (; (_2179_i < (*(_21615_txt)).len()); (_2179_i)++) {
		{
			jule::U8 _2209_b = (*(_21615_txt))[_2179_i];;
			{
				
				if ((_2209_b == '.')) {
					_case_begin_1aa851b91:;
					{
						__jule_func_result = _1b4ae09a3_floatNum(_21615_txt, _2179_i);
						return __jule_func_result;;
					}
				}
				else if ((_2209_b == '_')) {
					_case_begin_1aa851c3a:;
					{
						goto _iter_next_1aa85108b;
					}
				}
				else if (_1b4ae1333_isFloatFmtE(_2209_b, _2179_i)) {
					_case_begin_1aa851ca1:;
					{
						__jule_func_result = _1b4ade5d9_floatFmtE(_21615_txt, _2179_i);
						return __jule_func_result;;
					}
				}
				else if ((!(_1b4ad93b4_IsDecimal(_2209_b)))) {
					_case_begin_1aa851d17:;
					{
						goto _iter_end_1aa85108b;
					}
				}
				_match_end_1aa851ab4:;
			};
		}
	_iter_next_1aa85108b:;
	}
	_iter_end_1aa85108b:;;
	if ((_2179_i == 0LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_21615_txt)).slice(0LL, _2179_i));
	return __jule_func_result;;
}



inline jule::Str _1b4ae0eae_binaryNum(jule::Slice<jule::U8>* _23915_txt) {
	jule::Str __jule_func_result;
	if ((!(_1b4ade265_bytesHasPrefix(_23915_txt, jule::Str::lit("0b", 2))))) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_23915_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	;
	jule::I64 _2489_i = 2LL;;
	for (; (_2489_i < (*(_23915_txt)).len()); (_2489_i)++) {
		{
			if ((((*(_23915_txt))[_2489_i] != '_') && (!(_1b4ad967d_IsBinary((*(_23915_txt))[_2489_i]))))) {
				goto _iter_end_1aa854a73;
			};
		}
	_iter_next_1aa854a73:;
	}
	_iter_end_1aa854a73:;;
	if ((_2489_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_23915_txt)).slice(0LL, _2489_i));
	return __jule_func_result;;
}



inline jule::Bool _1b4ae1333_isFloatFmtE(jule::U8 _26116_b, jule::I64 _26125_i) {
	return ((_26125_i > 0LL) && ((_26116_b == 'e') || (_26116_b == 'E')));;
}



inline jule::Bool _1b4ae16a7_isFloatFmtP(jule::U8 _26516_b, jule::I64 _26525_i) {
	return ((_26525_i > 0LL) && ((_26516_b == 'p') || (_26516_b == 'P')));;
}



inline jule::Bool _1b4ae1a2b_isFloatFmtDotnp(jule::Slice<jule::U8>* _26921_txt, jule::I64 _26938_i) {
	if (((*(_26921_txt))[_26938_i] != '.')) {
		return false;;
	};
	(_26938_i)++;
	_julec_label_1aa857658:;
	for (; (_26938_i < (*(_26921_txt)).len()); (_26938_i)++) {
		{
			jule::U8 _2769_b = (*(_26921_txt))[_26938_i];;
			{
				
				if ((_2769_b == '_') || _1b4ad93b4_IsDecimal(_2769_b)) {
					_case_begin_1aa85866a:;
					{
						goto _iter_next_1aa857559;
					}
				}
				else if (_1b4ae16a7_isFloatFmtP(_2769_b, _26938_i)) {
					_case_begin_1aa858714:;
					{
						return true;;
					}
				}
				else {
					_case_begin_1aa8585e3:;
					{
						goto _iter_end_1aa857559;
					}
				}
				_match_end_1aa85857c:;
			};
		}
	_iter_next_1aa857559:;
	}
	_iter_end_1aa857559:;;
	return false;;
}



inline jule::Bool _1b4ae1da0_isFloatFmtDotp(jule::Slice<jule::U8>* _29020_txt, jule::I64 _29033_i) {
	{
		
		if (((*(_29020_txt)).len() < 3LL)) {
			_case_begin_1aa859979:;
			{
				goto _case_begin_1aa859a23;
			}
		}
		else if (((*(_29020_txt))[_29033_i] != '.')) {
			_case_begin_1aa859a23:;
			{
				goto _case_begin_1aa859a9a;
			}
		}
		else if ((((*(_29020_txt))[(_29033_i + 1LL)] != 'p') && ((*(_29020_txt))[(_29033_i + 1LL)] != 'P'))) {
			_case_begin_1aa859a9a:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1aa8598e1:;
			{
				return true;;
			}
		}
		_match_end_1aa8597e2:;
	};
}



inline jule::Bool _1b4ae2224_isFloatFmtDotfp(jule::Slice<jule::U8>* _30321_txt, jule::I64 _30334_i) {
	{
		
		if (((*(_30321_txt)).len() < 4LL)) {
			_case_begin_1aa85b739:;
			{
				goto _case_begin_1aa85b7a0;
			}
		}
		else if (((*(_30321_txt))[_30334_i] != '.')) {
			_case_begin_1aa85b7a0:;
			{
				goto _case_begin_1aa85b816;
			}
		}
		else if ((((*(_30321_txt))[(_30334_i + 1LL)] != 'f') && ((*(_30321_txt))[(_30334_i + 1LL)] != 'F'))) {
			_case_begin_1aa85b816:;
			{
				goto _case_begin_1aa85b88d;
			}
		}
		else if ((((*(_30321_txt))[(_30334_i + 2LL)] != 'p') && ((*(_30321_txt))[(_30334_i + 1LL)] != 'P'))) {
			_case_begin_1aa85b88d:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1aa85b66d:;
			{
				return true;;
			}
		}
		_match_end_1aa85b22d:;
	};
}



inline jule::Str _1b4ae271e_octalNum(jule::Slice<jule::U8>* _31814_txt) {
	jule::Str __jule_func_result;
	if (((*(_31814_txt))[0LL] != '0')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_31814_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	jule::I64 _3269_octalStart = 1LL;;
	jule::Bool _3289_o = false;;
	if (((*(_31814_txt))[1LL] == 'o')) {
		if (((*(_31814_txt)).len() < 3LL)) {
			return __jule_func_result;;
		};
		(_3269_octalStart)++;
		_3289_o=true;
	};
	jule::I64 _3379_i = _3269_octalStart;;
	for (; (_3379_i < (*(_31814_txt)).len()); (_3379_i)++) {
		{
			jule::U8 _3399_b = (*(_31814_txt))[_3379_i];;
			if ((_3399_b == '.')) {
				if (_3289_o) {
					__jule_func_result = jule::Str();
					return __jule_func_result;;
				};
				__jule_func_result = _1b4ae09a3_floatNum(_31814_txt, _3379_i);
				return __jule_func_result;;
			};
			if (_1b4ae1333_isFloatFmtE(_3399_b, _3379_i)) {
				__jule_func_result = _1b4ade5d9_floatFmtE(_31814_txt, _3379_i);
				return __jule_func_result;;
			};
			if (((_3399_b != '_') && (!(_1b4ad9947_IsOctal(_3399_b))))) {
				goto _iter_end_1aa860d8c;
			};
		}
	_iter_next_1aa860d8c:;
	}
	_iter_end_1aa860d8c:;;
	if ((_3379_i == _3269_octalStart)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_31814_txt)).slice(0LL, _3379_i));
	return __jule_func_result;;
}



inline jule::Str _1b4ae28ea_hexNum(jule::Slice<jule::U8>* _36012_txt) {
	jule::Str __jule_func_result;
	if (((*(_36012_txt)).len() < 3LL)) {
		return __jule_func_result;;
	};
	if ((((*(_36012_txt))[0LL] != '0') || (((*(_36012_txt))[1LL] != 'x') && ((*(_36012_txt))[1LL] != 'X')))) {
		return __jule_func_result;;
	};
	;
	jule::I64 _3699_i = 2LL;;
	_julec_label_1aa864852:;
	for (; (_3699_i < (*(_36012_txt)).len()); (_3699_i)++) {
		{
			jule::U8 _3729_b = (*(_36012_txt))[_3699_i];;
			{
				
				if (_1b4ae1da0_isFloatFmtDotp(_36012_txt, _3699_i)) {
					_case_begin_1aa865556:;
					{
						__jule_func_result = _1b4ae051e_floatFmtDotp(_36012_txt, _3699_i);
						return __jule_func_result;;
					}
				}
				else if (_1b4ae2224_isFloatFmtDotfp(_36012_txt, _3699_i)) {
					_case_begin_1aa865600:;
					{
						__jule_func_result = _1b4ae019a_floatFmtDotfp(_36012_txt, _3699_i);
						return __jule_func_result;;
					}
				}
				else if (_1b4ae16a7_isFloatFmtP(_3729_b, _3699_i)) {
					_case_begin_1aa865666:;
					{
						__jule_func_result = _1b4ade9a2_floatFmtP(_36012_txt, _3699_i);
						return __jule_func_result;;
					}
				}
				else if (_1b4ae1a2b_isFloatFmtDotnp(_36012_txt, _3699_i)) {
					_case_begin_1aa8656cc:;
					{
						__jule_func_result = _1b4aded26_floatFmtDotnp(_36012_txt, _3699_i);
						return __jule_func_result;;
					}
				}
				else if (((_3729_b != '_') && (!(_1b4ad9c11_IsHex(_3729_b))))) {
					_case_begin_1aa865743:;
					{
						goto _iter_end_1aa8649a6;
					}
				}
				_match_end_1aa865468:;
			};
		}
	_iter_next_1aa8649a6:;
	}
	_iter_end_1aa8649a6:;;
	if ((_3699_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_36012_txt)).slice(0LL, _3699_i));
	return __jule_func_result;;
}



inline jule::Str _1b4ae2c4c_hexEscape(jule::Slice<jule::U8>* _39315_txt, jule::I64 _39328_n) {
	jule::Str __jule_func_result;
	if (((*(_39315_txt)).len() < _39328_n)) {
		return __jule_func_result;;
	};
	;
	jule::I64 _3999_i = 2LL;;
	for (; (_3999_i < _39328_n); (_3999_i)++) {
		{
			if ((!(_1b4ad9c11_IsHex((*(_39315_txt))[_3999_i])))) {
				return __jule_func_result;;
			};
		}
	_iter_next_1aa867cd9:;
	}
	_iter_end_1aa867cd9:;;
	__jule_func_result=static_cast<jule::Str>((*(_39315_txt)).slice(0LL, _39328_n));
	return __jule_func_result;;
}



inline jule::Str _1b4ae3016_bigUnicodePointEscape(jule::Slice<jule::U8>* _41127_txt) {
	return _1b4ae2c4c_hexEscape(_41127_txt, 10LL);;
}



inline jule::Str _1b4ae32d0_littleUnicodePointEscape(jule::Slice<jule::U8>* _41630_txt) {
	return _1b4ae2c4c_hexEscape(_41630_txt, 6LL);;
}



inline jule::Str _1b4ae3599_hexByteEscape(jule::Slice<jule::U8>* _42119_txt) {
	return _1b4ae2c4c_hexEscape(_42119_txt, 4LL);;
}



inline jule::Str _1b4ae3863_byteEscape(jule::Slice<jule::U8>* _42616_txt) {
	jule::Str __jule_func_result;
	if (((*(_42616_txt)).len() < 4LL)) {
		return __jule_func_result;;
	};
	if ((((!(_1b4ad9947_IsOctal((*(_42616_txt))[1LL]))) || (!(_1b4ad9947_IsOctal((*(_42616_txt))[2LL])))) || (!(_1b4ad9947_IsOctal((*(_42616_txt))[3LL]))))) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_42616_txt)).slice(0LL, 4LL));
	return __jule_func_result;;
}



inline jule::Slice<_1cb285120_Log> _1b4ae8857_Lex(jule::Ptr<_1b4adae98_File> _80912_f, jule::I64 _80922_mode) {
	if ((_80912_f == nullptr)) {
		return nullptr;;
	};
	_1b4ae40d3_lex _8149_lex = _1b4ae40d3_lex{._field_mode=_80922_mode, ._field_file=_80912_f, ._field_pos=0LL, ._field_row=-1LL, };;
	_1b4ae6de9_newLine(&_8149_lex);
	_1b4ae4bc7_lex(&_8149_lex);
	if ((_8149_lex._field_errors.len() > 0LL)) {
		return _8149_lex._field_errors;;
	};
	(*(_80912_f))._field_Tokens=_8149_lex._field_tokens;
	return nullptr;;
}



inline jule::Bool _1b4bb6e31_FindModuleFile(jule::Slice<jule::Ptr<_20d927670_DirEntry>>* _1320_dirents) {
	{
		auto expr = _1320_dirents;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa8eaaa3:;
		if (it != expr_end) {
			jule::Ptr<_20d927670_DirEntry> *_1412_d = it;
			{
				if (((!(_20d92ba09_IsDir((*((*(_1412_d))))._field_Stat.ptr()))) && (*(*(_1412_d)).alloc)._field_Name.equal("jule.mod", 8))) {
					return true;;
				};
			}
			_iter_next_1aa8eaaa3:;
			++it;
			goto _iter_begin_1aa8eaaa3;
		}
		_iter_end_1aa8eaaa3:;
	};
	return false;;
}



inline jule::Str _1b4bb71d9_FindModuleFileDeep(jule::Str _2527_path) {
	for (;;) {
		{
			jule::Slice<jule::Ptr<_20d927670_DirEntry>> _2713_dirents = ({
				auto except = static__1cb1e3138_Read(_2527_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_1aa8eb4aa;
				} jule::Slice<jule::Ptr<_20d927670_DirEntry>>(nullptr);});
			});;
			jule::Bool _319_exist = _1b4bb6e31_FindModuleFile(&(_2713_dirents));;
			if (_319_exist) {
				return _2527_path;;
			};
			jule::I64 _369_n = _2527_path.len();;
			_2527_path=_1cb1e0c6d_Dir(_2527_path);
			if ((_2527_path.len() == _369_n)) {
				goto _iter_end_1aa8eb4aa;
			};
		}
	_iter_next_1aa8eb4aa:;
	}
	_iter_end_1aa8eb4aa:;;
	return jule::Str();;
}



inline jule::Slice<_1cb285120_Log> _1b4bb74a3_CheckModuleFile(jule::Str* _4721_path) {
	jule::Slice<jule::U8> _485_bytes = ({
		auto except = static__20d929ee1_Read(_1cb1e007a_Join(jule::Slice<jule::Str>::make({(*(_4721_path)),jule::Str::lit("jule.mod", 8)})));
		(except.ok()) ? (except.result) : ({{
			return jule::Slice<_1cb285120_Log>::make({_1cb285120_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Text=jule::Str::lit("module file could not checked because of a problem", 50), }});;
		} jule::Slice<jule::U8>(nullptr);});
	});;
	jule::Str _545_s = _1cb1c5934_Trim(_20d73c9e6_BytesStr(_485_bytes), jule::Str::lit(" \n\r\t\v", 5));;
	if ((_545_s.len() != 0LL)) {
		return jule::Slice<_1cb285120_Log>::make({_1cb285120_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Text=jule::Str::lit("module file has syntax error(s)", 31), }});;
	};
	return nullptr;;
}



inline jule::Bool _1b4bb7d00_IsPub(jule::Str _910_ident) {
	if ((_910_ident[0LL] < 128LLU)) {
		jule::U8 _119_b = _910_ident[0LL];;
		return (('A' <= _119_b) && (_119_b <= 'Z'));;
	};
	jule::I32 _145_r;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1cb179d6c_DecodeRuneStr(_910_ident);
		_145_r = __jule_assign_result.__jule_result_arg0;
	});
	return _1cae5a18b_IsUpper(_145_r);;
}



inline jule::Bool _1b4c10661_IsAscii(jule::I32 _1112_r) {
	;
	return (_1112_r <= 127LL);;
}



inline jule::I32 _1b4c2a68c_ToRune(jule::Str _2015_lit) {
	jule::I32 _219_r = static_cast<jule::I32>(0LL);;
	(_2015_lit).mut_slice(1LL, (_2015_lit.len() - 1LL));;
	if (((_2015_lit[0LL] == '\\') && (_2015_lit.len() > 1LL))) {
		jule::I64 _2413_i = 0LL;;
		_219_r=_1b4c2b2e7_runeFromEsqSeq(_2015_lit, &(_2413_i));
	} else {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1cb179d6c_DecodeRuneStr(_2015_lit);
			_219_r = __jule_assign_result.__jule_result_arg0;
		});
	};
	return _219_r;;
}



inline jule::Str _1b4c2a89b_ToRawStr(jule::Str _3613_lit) {
	if ((_3613_lit.len() == 2LL)) {
		return jule::Str();;
	};
	return _3613_lit.slice(1LL, (_3613_lit.len() - 1LL));;
}



inline jule::Str _1b4c2abdc_ToStr(jule::Str _4714_lit) {
	if ((_4714_lit.len() == 2LL)) {
		return jule::Str();;
	};
	jule::Bool _539_isPure = true;;
	{
		auto expr = &(_4714_lit);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa9083eb:;
		if (it != expr_end) {
			jule::U8 _5412_b = *it;
			{
				if (((_5412_b >= 128LLU) || (_5412_b == '\\'))) {
					_539_isPure=false;
					goto _iter_end_1aa9083eb;
				};
			}
			_iter_next_1aa9083eb:;
			++it;
			goto _iter_begin_1aa9083eb;
		}
		_iter_end_1aa9083eb:;
	};
	if (_539_isPure) {
		return _4714_lit.slice(1LL, (_4714_lit.len() - 1LL));;
	};
	(_4714_lit).mut_slice(1LL, (_4714_lit.len() - 1LL));;
	jule::Slice<jule::U8> _689_s = jule::Slice<jule::U8>::alloc(0LL, _4714_lit.len(), 0);;
	jule::I64 _699_i = 0LL;;
	while ((_699_i < _4714_lit.len())) {
		{
			jule::U8 _719_b = _4714_lit[_699_i];;
			if ((_719_b == '\\')) {
				_1b4c2b68d_strEsqSeq(&(_689_s), _4714_lit, &(_699_i));
			} else {
				jule::I32 _7513_r;
				jule::I64 _7516_size;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1cb179d6c_DecodeRuneStr(_4714_lit.slice(_699_i));
					_7513_r = __jule_assign_result.__jule_result_arg0;
					_7516_size = __jule_assign_result.__jule_result_arg1;
				});
				_699_i+=_7516_size;
				_689_s=_1cb17ae17_AppendRune(_689_s, _7513_r);
			};
		}
	_iter_next_1aa90a3dc:;
	}
	_iter_end_1aa90a3dc:;;
	return _20d73ccb0_StrFromBytes(_689_s);;
}



inline __jule_tuple_u8__jule_tuple_bool _1b4c2ae73_tryBtoaCommonEsq(jule::Str _8321_s) {
	__jule_tuple_u8__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_8321_s.len() < 2LL) || (_8321_s[0LL] != '\\'))) {
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _8321_s[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_1aa90c8b7:;
			{
				__jule_func_result.__jule_result_arg0='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1aa90d0d2:;
			{
				__jule_func_result.__jule_result_arg0='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1aa90d148:;
			{
				__jule_func_result.__jule_result_arg0='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_1aa90d1ae:;
			{
				__jule_func_result.__jule_result_arg0='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_1aa90d225:;
			{
				__jule_func_result.__jule_result_arg0='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1aa90d29c:;
			{
				__jule_func_result.__jule_result_arg0='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_1aa90d324:;
			{
				__jule_func_result.__jule_result_arg0='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_1aa90d39b:;
			{
				__jule_func_result.__jule_result_arg0='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_1aa90d423:;
			{
				__jule_func_result.__jule_result_arg0='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_1aa90d49a:;
			{
				__jule_func_result.__jule_result_arg0='\v';
			}
		}
		_match_end_1aa90ce39:;
	};
	__jule_func_result.__jule_result_arg1=(__jule_func_result.__jule_result_arg0 != 0LLU);
	return __jule_func_result;;
}



inline jule::I32 _1b4c2b2e7_runeFromEsqSeq(jule::Str _11319_s, jule::I64* _11332_i) {
	jule::U8 _1145_b;
	jule::Bool _1148_ok;
	({
		__jule_tuple_u8__jule_tuple_bool __jule_assign_result = _1b4c2ae73_tryBtoaCommonEsq(_11319_s.slice((*(_11332_i))));
		_1145_b = __jule_assign_result.__jule_result_arg0;
		_1148_ok = __jule_assign_result.__jule_result_arg1;
	});
	((*(_11332_i)))++;
	if (_1148_ok) {
		((*(_11332_i)))++;
		return static_cast<jule::I32>(_1145_b);;
	};
	{
		auto &_match_expr{ _11319_s[(*(_11332_i))] };
		
		if (_match_expr == 'u') {
			_case_begin_1aa913093:;
			{
				;
				jule::I32 _1249_r = static_cast<jule::I32>(({
					auto except = _1b273361a_ParseUint(_11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 5LL)), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:124:19"));
					(except.result);
				}));;
				(*(_11332_i))+=5LL;
				return _1249_r;;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1aa912da6:;
			{
				;
				jule::I32 _1299_r = static_cast<jule::I32>(({
					auto except = _1b273361a_ParseUint(_11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 9LL)), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:129:19"));
					(except.result);
				}));;
				(*(_11332_i))+=9LL;
				return _1299_r;;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1aa9127bd:;
			{
				;
				jule::Str _1349_seq = _11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 3LL));;
				(*(_11332_i))+=3LL;
				return static_cast<jule::I32>(({
					auto except = _1b273361a_ParseUint(_1349_seq, 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:136:18"));
					(except.result);
				}));;
			}
		}
		else {
			_case_begin_1aa9115be:;
			{
				;
				jule::Str _1399_seq = _11319_s.slice((*(_11332_i)), ((*(_11332_i)) + 3LL));;
				(*(_11332_i))+=3LL;
				return static_cast<jule::I32>(({
					auto except = _1b273361a_ParseUint(_1399_seq.slice(1LL), 8LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:141:18"));
					(except.result);
				}));;
			}
		}
		_match_end_1aa911d3e:;
	};
}



inline void _1b4c2b68d_strEsqSeq(jule::Slice<jule::U8>* _14519_buf, jule::Str _14532_s, jule::I64* _14545_i) {
	jule::I32 _1465_r = _1b4c2b2e7_runeFromEsqSeq(_14532_s, _14545_i);;
	if ((_1465_r <= 255LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = (*(_14519_buf)); __jule_push_dest.push(static_cast<jule::U8>(_1465_r)); };
		return;;
	};
	(*(_14519_buf))=_1cb17ae17_AppendRune((*(_14519_buf)), _1465_r);
}



inline jule::I64 _1b4d5a7cd_findFormatPrefix(jule::Slice<jule::U8>* _1122_bytes, jule::I64 _1141_i) {
	while ((_1141_i < (*(_1122_bytes)).len())) {
		{
			jule::I32 _139_r;
			jule::I64 _1312_size;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1cb179a2b_DecodeRune((*(_1122_bytes)).slice(_1141_i));
				_139_r = __jule_assign_result.__jule_result_arg0;
				_1312_size = __jule_assign_result.__jule_result_arg1;
			});
			if ((_139_r == '{')) {
				return _1141_i;;
			};
			_1141_i+=_1312_size;
		}
	_iter_next_1aa93dce4:;
	}
	_iter_end_1aa93dce4:;;
	return -1LL;;
}



inline jule::Slice<jule::U8> _1b4d5ab0d_getFormatRange(jule::I64* _2724_i, jule::Slice<jule::U8>* _2737_bytes) {
	jule::I64 _285_start = (*(_2724_i));;
	jule::I64 _299_braces = 0LL;;
	while (((*(_2724_i)) < (*(_2737_bytes)).len())) {
		{
			jule::I32 _319_r;
			jule::I64 _3112_size;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1cb179a2b_DecodeRune((*(_2737_bytes)).slice((*(_2724_i))));
				_319_r = __jule_assign_result.__jule_result_arg0;
				_3112_size = __jule_assign_result.__jule_result_arg1;
			});
			(*(_2724_i))+=_3112_size;
			{
				auto &_match_expr{ _319_r };
				
				if (_match_expr == '{') {
					_case_begin_1aa941753:;
					{
						(_299_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_1aa9419b7:;
					{
						(_299_braces)--;
						if ((_299_braces == 0LL)) {
							return (*(_2737_bytes)).slice(_285_start, (*(_2724_i)));;
						};
					}
				}
				_match_end_1aa940eb1:;
			};
		}
	_iter_next_1aa940840:;
	}
	_iter_end_1aa940840:;;
	return nullptr;;
}



inline void _1b4d5ade9_FmtByDefault(_1cb1d27a9_StrBuilder* _4722_buf, jule::Any* _4740_arg) {
	if (((*(_4740_arg)) == nullptr)) {
		_1cb1db3d9_WriteStr(_4722_buf, jule::Str::lit("<nil>", 5));
		return;;
	};
	{
		auto &_match_expr{ (*(_4740_arg)) };
		
		if (_match_expr.type == &__jule_any_type135) {
			_case_begin_1aa943656:;
			{
				_1cb1db3d9_WriteStr(_4722_buf, _1b272d637_FmtFloat(static_cast<jule::F64>((*(_4740_arg)).cast<jule::F32>(&__jule_any_type135)), 'g', -1LL, 32LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1aa942e91:;
			{
				_1cb1db3d9_WriteStr(_4722_buf, _1b272d637_FmtFloat((*(_4740_arg)).cast<jule::F64>(&__jule_any_type5), 'g', -1LL, 64LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type136) {
			_case_begin_1aa943007:;
			{
				_1cb1db3d9_WriteStr(_4722_buf, _1b2745176_FmtInt(static_cast<jule::I64>((*(_4740_arg)).cast<jule::I8>(&__jule_any_type136)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type137) {
			_case_begin_1aa94306d:;
			{
				_1cb1db3d9_WriteStr(_4722_buf, _1b2745176_FmtInt(static_cast<jule::I64>((*(_4740_arg)).cast<jule::I16>(&__jule_any_type137)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1aa9430d4:;
			{
				_1cb1db3d9_WriteStr(_4722_buf, _1b2745176_FmtInt(static_cast<jule::I64>((*(_4740_arg)).cast<jule::I32>(&__jule_any_type6)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1aa94314a:;
			{
				_1cb1db3d9_WriteStr(_4722_buf, _1b2745176_FmtInt((*(_4740_arg)).cast<jule::I64>(&__jule_any_type1), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type134) {
			_case_begin_1aa943777:;
			{
				_1cb1db3d9_WriteStr(_4722_buf, _1b2744cad_FmtUint(static_cast<jule::U64>((*(_4740_arg)).cast<jule::U8>(&__jule_any_type134)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type138) {
			_case_begin_1aa9437dd:;
			{
				_1cb1db3d9_WriteStr(_4722_buf, _1b2744cad_FmtUint(static_cast<jule::U64>((*(_4740_arg)).cast<jule::U16>(&__jule_any_type138)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type139) {
			_case_begin_1aa943854:;
			{
				_1cb1db3d9_WriteStr(_4722_buf, _1b2744cad_FmtUint(static_cast<jule::U64>((*(_4740_arg)).cast<jule::U32>(&__jule_any_type139)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1aa9438ba:;
			{
				_1cb1db3d9_WriteStr(_4722_buf, _1b2744cad_FmtUint((*(_4740_arg)).cast<jule::U64>(&__jule_any_type2), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1aa943931:;
			{
				_1cb1db3d9_WriteStr(_4722_buf, (*(_4740_arg)).cast<jule::Str>(&__jule_any_type4));
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1aa943997:;
			{
				if ((*(_4740_arg)).cast<jule::Bool>(&__jule_any_type3)) {
					_1cb1db3d9_WriteStr(_4722_buf, jule::Str::lit("true", 4));
				} else {
					_1cb1db3d9_WriteStr(_4722_buf, jule::Str::lit("false", 5));
				};
			}
		}
		else {
			_case_begin_1aa942941:;
			{
				_1cb1db3d9_WriteStr(_4722_buf, jule::to_str((*(_4740_arg))));
			}
		}
		_match_end_1aa940c6e:;
	};
}



inline void _1b4d5b317_applyFmtByDefault(_1cb1d27a9_StrBuilder* _8627_buf, jule::I64* _8649_j, jule::Slice<jule::Any> _8657_args) {
	jule::Any _875_arg = _8657_args[(*(_8649_j))];;
	((*(_8649_j)))++;
	_1b4d5ade9_FmtByDefault(_8627_buf, &(_875_arg));
}



inline void _1b4d5b735_applyFmt(jule::Slice<jule::U8>* _9418_fmt, _1cb1d27a9_StrBuilder* _9436_buf, jule::I64* _9458_j, jule::Slice<jule::Any> _9466_args) {
	if (((*(_9418_fmt)).len() == 2LL)) {
		_1b4d5b317_applyFmtByDefault(_9436_buf, _9458_j, _9466_args);
		return;;
	};
	if (((((((*(_9418_fmt)).len() == 4LL) && ((*(_9418_fmt))[0LL] == '{')) && ((*(_9418_fmt))[1LL] == '{')) && ((*(_9418_fmt))[2LL] == '}')) && ((*(_9418_fmt))[3LL] == '}'))) {
		_1cb1db3d9_WriteStr(_9436_buf, jule::Str::lit("{}", 2));
		return;;
	};
	_1cb1db131_Write(_9436_buf, (*(_9418_fmt)));
}



inline jule::Slice<jule::U8> _1b4d5baa9_Format(jule::Str _11511_fmt, jule::Slice<jule::Any> _11521_args) {
	jule::Slice<jule::U8> _1169_fmtBytes = _20d73c760_StrBytes(_11511_fmt);;
	if ((_11521_args.len() == 0LL)) {
		return _1169_fmtBytes;;
	};
	jule::I64 _1209_i = _1b4d5a7cd_findFormatPrefix(&(_1169_fmtBytes), 0LL);;
	if ((_1209_i == -1LL)) {
		return _1169_fmtBytes;;
	};
	jule::I64 _1249_j = 0LL;;
	jule::I64 _1259_last = 0LL;;
	_1cb1d27a9_StrBuilder _1269_buf = static__1cb1d2a73_New(_11511_fmt.len());;
	for (; (_1209_i != -1LL); _1209_i=_1b4d5a7cd_findFormatPrefix(&(_1169_fmtBytes), _1209_i)) {
		{
			_1cb1db131_Write(&_1269_buf, _1169_fmtBytes.slice(_1259_last, _1209_i));
			jule::Slice<jule::U8> _12913_format = _1b4d5ab0d_getFormatRange(&(_1209_i), &(_1169_fmtBytes));;
			if ((_12913_format == nullptr)) {
				goto _iter_next_1aa950b6e;
			};
			_1b4d5b735_applyFmt(&(_12913_format), &(_1269_buf), &(_1249_j), _11521_args);
			if ((_1249_j >= _11521_args.len())) {
				_1cb1db131_Write(&_1269_buf, _1169_fmtBytes.slice(_1209_i));
				_1259_last=_1169_fmtBytes.len();
				goto _iter_end_1aa950b6e;
			};
			_1259_last=_1209_i;
		}
	_iter_next_1aa950b6e:;
	}
	_iter_end_1aa950b6e:;;
	if ((_1259_last < _1169_fmtBytes.len())) {
		_1cb1db131_Write(&_1269_buf, _1169_fmtBytes.slice(_1259_last));
	};
	return _1cb1dc682_Buf(&_1269_buf);;
}



inline jule::Str _1b4d5dacd_Format(jule::Str _3111_fmt, jule::Slice<jule::Any> _3121_args) {
	return _20d73ccb0_StrFromBytes(_1b4d5baa9_Format(_3111_fmt, _3121_args));;
}



inline jule::Bool _1b4b3bb42_parameterUsesGenerics(jule::Ptr<_1b4b387dc_ParamIns>* _38531_p, jule::Slice<jule::Ptr<_1b4b07dc7_GenericDecl>>* _38546_generics) {
	if (_1b4b354cb_IsSelf((*((*(_38531_p))))._field_Decl.ptr())) {
		return false;;
	};
	return _1b4c98166_kindUsesGenerics(&((*((*(_38531_p))))._field_Kind), _38546_generics);;
}



inline jule::Ptr<_1b4c84ad1_TypeSymbol> _1b4b3e3b4_buildType(jule::Ptr<_1b4aeabbc_TypeDecl> _9418_t) {
	if ((_9418_t == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1b4c84ad1_TypeSymbol>(_1b4c84ad1_TypeSymbol{._field_Decl=_9418_t, });;
}



inline jule::Ptr<_1b4c47830_Value> _1b4b3e6c2_buildExpr(jule::Ptr<_1b4b00001_Expr> _10318_expr) {
	if ((_10318_expr == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1b4c47830_Value>(_1b4c47830_Value{._field_Expr=_10318_expr, });;
}



inline jule::Ptr<_1b4c7bb1c_TypeAlias> _1b4b3e98b_buildTypeAlias(jule::Ptr<_1b4b17546_TypeAliasDecl> _11223_decl) {
	return jule::new_ptr<_1b4c7bb1c_TypeAlias>(_1b4c7bb1c_TypeAlias{._field_Scope=(*(_11223_decl))._field_Scope, ._field_Public=(*_11223_decl.alloc)._field_Public, ._field_Binded=(*_11223_decl.alloc)._field_Binded, ._field_Token=(*_11223_decl.alloc)._field_Token, ._field_Ident=(*_11223_decl.alloc)._field_Ident, ._field_Kind=_1b4b3e3b4_buildType((*_11223_decl.alloc)._field_Kind), });;
}



inline jule::Ptr<_1b4b1d98c_Field> _1b4b3eccc_buildField(jule::Ptr<_1b4b1adeb_FieldDecl> _12319_decl) {
	return jule::new_ptr<_1b4b1d98c_Field>(_1b4b1d98c_Field{._field_Token=(*(_12319_decl))._field_Token, ._field_Public=(*_12319_decl.alloc)._field_Public, ._field_Mutable=(*_12319_decl.alloc)._field_Mutable, ._field_Ident=(*_12319_decl.alloc)._field_Ident, ._field_Kind=_1b4b3e3b4_buildType((*_12319_decl.alloc)._field_Kind), ._field_Default=(*_12319_decl.alloc)._field_Default});;
}



inline jule::Slice<jule::Ptr<_1b4b1d98c_Field>> _1b4b40063_buildFields(jule::Slice<jule::Ptr<_1b4b1adeb_FieldDecl>>* _13421_decls) {
	jule::Slice<jule::Ptr<_1b4b1d98c_Field>> _1359_fields = jule::Slice<jule::Ptr<_1b4b1d98c_Field>>::alloc(0LL, (*(_13421_decls)).len());;
	{
		auto expr = _13421_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aac000a5:;
		if (it != expr_end) {
			jule::Ptr<_1b4b1adeb_FieldDecl> _13617_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1b4b1d98c_Field>> &__jule_push_dest = _1359_fields; __jule_push_dest.push(_1b4b3eccc_buildField(_13617_decl)); };
			}
			_iter_next_1aac000a5:;
			++it;
			goto _iter_begin_1aac000a5;
		}
		_iter_end_1aac000a5:;
	};
	return _1359_fields;;
}



inline jule::Ptr<_1b4b218b3_Struct> _1b4b4032c_buildStruct(jule::Ptr<_1b4b1b7e2_StructDecl> _14220_decl) {
	return jule::new_ptr<_1b4b218b3_Struct>(_1b4b218b3_Struct{._field_Token=(*(_14220_decl))._field_Token, ._field_Ident=(*_14220_decl.alloc)._field_Ident, ._field_Fields=_1b4b40063_buildFields(&((*_14220_decl.alloc)._field_Fields)), ._field_Public=(*_14220_decl.alloc)._field_Public, ._field_Binded=(*_14220_decl.alloc)._field_Binded, ._field_Directives=(*_14220_decl.alloc)._field_Directives, ._field_Generics=(*_14220_decl.alloc)._field_Generics, });;
}



inline jule::Ptr<_1b4b34db0_Param> _1b4b405e6_buildParam(jule::Ptr<_1b4b11287_ParamDecl> _15419_decl) {
	return jule::new_ptr<_1b4b34db0_Param>(_1b4b34db0_Param{._field_Token=(*(_15419_decl))._field_Token, ._field_Mutable=(*_15419_decl.alloc)._field_Mutable, ._field_Variadic=(*_15419_decl.alloc)._field_Variadic, ._field_Reference=(*_15419_decl.alloc)._field_Reference, ._field_Kind=_1b4b3e3b4_buildType((*_15419_decl.alloc)._field_Kind), ._field_Ident=(*_15419_decl.alloc)._field_Ident});;
}



inline jule::Slice<jule::Ptr<_1b4b34db0_Param>> _1b4b409c0_buildParams(jule::Slice<jule::Ptr<_1b4b11287_ParamDecl>>* _16521_decls) {
	jule::Slice<jule::Ptr<_1b4b34db0_Param>> _1669_params = jule::Slice<jule::Ptr<_1b4b34db0_Param>>::alloc(0LL, (*(_16521_decls)).len());;
	{
		auto expr = _16521_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aac07211:;
		if (it != expr_end) {
			jule::Ptr<_1b4b11287_ParamDecl> _16717_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1b4b34db0_Param>> &__jule_push_dest = _1669_params; __jule_push_dest.push(_1b4b405e6_buildParam(_16717_decl)); };
			}
			_iter_next_1aac07211:;
			++it;
			goto _iter_begin_1aac07211;
		}
		_iter_end_1aac07211:;
	};
	return _1669_params;;
}



inline jule::Ptr<_1b4b3462e_RetType> _1b4b40c12_buildRetType(jule::Ptr<_1b4aedab0_RetTypeDecl> _17321_decl) {
	if ((((*(_17321_decl))._field_Idents == nullptr) && ((*_17321_decl.alloc)._field_Kind == nullptr))) {
		return nullptr;;
	};
	return jule::new_ptr<_1b4b3462e_RetType>(_1b4b3462e_RetType{._field_Kind=_1b4b3e3b4_buildType((*_17321_decl.alloc)._field_Kind), ._field_Idents=(*_17321_decl.alloc)._field_Idents});;
}



inline jule::Ptr<_1b4b36884_Fn> _1b4b40ecb_buildFunc(jule::Ptr<_1b4b126d9_FnDecl> _18318_decl) {
	return jule::new_ptr<_1b4b36884_Fn>(_1b4b36884_Fn{._field_Token=(*(_18318_decl))._field_Token, ._field_Global=(*_18318_decl.alloc)._field_Global, ._field_Unsafety=(*_18318_decl.alloc)._field_Unsafety, ._field_Public=(*_18318_decl.alloc)._field_Public, ._field_Binded=(*_18318_decl.alloc)._field_Binded, ._field_Statically=(*_18318_decl.alloc)._field_Statically, ._field_Exceptional=(*_18318_decl.alloc)._field_Exceptional, ._field_Ident=(*_18318_decl.alloc)._field_Ident, ._field_Directives=(*_18318_decl.alloc)._field_Directives, ._field_Scope=(*_18318_decl.alloc)._field_Scope, ._field_Generics=(*_18318_decl.alloc)._field_Generics, ._field_Result=_1b4b40c12_buildRetType((*_18318_decl.alloc)._field_Result), ._field_Params=_1b4b409c0_buildParams(&((*_18318_decl.alloc)._field_Params)), });;
}



inline jule::Slice<jule::Ptr<_1b4b36884_Fn>> _1b4b41295_buildMethods(jule::Slice<jule::Ptr<_1b4b126d9_FnDecl>>* _20122_decls) {
	jule::Slice<jule::Ptr<_1b4b36884_Fn>> _2029_methods = jule::Slice<jule::Ptr<_1b4b36884_Fn>>::alloc(0LL, (*(_20122_decls)).len());;
	{
		auto expr = _20122_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aac0c7aa:;
		if (it != expr_end) {
			jule::Ptr<_1b4b126d9_FnDecl> _20317_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1b4b36884_Fn>> &__jule_push_dest = _2029_methods; __jule_push_dest.push(_1b4b40ecb_buildFunc(_20317_decl)); };
			}
			_iter_next_1aac0c7aa:;
			++it;
			goto _iter_begin_1aac0c7aa;
		}
		_iter_end_1aac0c7aa:;
	};
	return _2029_methods;;
}



inline jule::Slice<jule::Ptr<_1b4c84ad1_TypeSymbol>> _1b4b4155e_buildTraitInherits(jule::Slice<jule::Ptr<_1b4aeabbc_TypeDecl>>* _20928_inherits) {
	jule::Slice<jule::Ptr<_1b4c84ad1_TypeSymbol>> _2109_symbols = jule::Slice<jule::Ptr<_1b4c84ad1_TypeSymbol>>::alloc(0LL, (*(_20928_inherits)).len());;
	{
		auto expr = _20928_inherits;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aac0d3d2:;
		if (it != expr_end) {
			jule::Ptr<_1b4aeabbc_TypeDecl> _21117_it = *it;
			{
				{ jule::Slice<jule::Ptr<_1b4c84ad1_TypeSymbol>> &__jule_push_dest = _2109_symbols; __jule_push_dest.push(_1b4b3e3b4_buildType(_21117_it)); };
			}
			_iter_next_1aac0d3d2:;
			++it;
			goto _iter_begin_1aac0d3d2;
		}
		_iter_end_1aac0d3d2:;
	};
	return _2109_symbols;;
}



inline jule::Ptr<_1b4b49c3d_Trait> _1b4b41828_buildTrait(jule::Ptr<_1b4b1c02e_TraitDecl> _21719_decl) {
	return jule::new_ptr<_1b4b49c3d_Trait>(_1b4b49c3d_Trait{._field_Token=(*(_21719_decl))._field_Token, ._field_Ident=(*_21719_decl.alloc)._field_Ident, ._field_Public=(*_21719_decl.alloc)._field_Public, ._field_Inherits=_1b4b4155e_buildTraitInherits(&((*_21719_decl.alloc)._field_Inherits)), ._field_Methods=_1b4b41295_buildMethods(&((*_21719_decl.alloc)._field_Methods)), });;
}



inline jule::Ptr<_1b4b4b8cc_EnumItem> _1b4b41ae2_buildEnumItem(jule::Ptr<_1b4b190d6_EnumItemDecl> _22722_decl) {
	return jule::new_ptr<_1b4b4b8cc_EnumItem>(_1b4b4b8cc_EnumItem{._field_Token=(*(_22722_decl))._field_Token, ._field_Ident=(*_22722_decl.alloc)._field_Ident, ._field_Value=_1b4b3e6c2_buildExpr((*_22722_decl.alloc)._field_Expr)});;
}



inline jule::Slice<jule::Ptr<_1b4b4b8cc_EnumItem>> _1b4b41dab_buildEnumItems(jule::Slice<jule::Ptr<_1b4b190d6_EnumItemDecl>>* _23524_decls) {
	jule::Slice<jule::Ptr<_1b4b4b8cc_EnumItem>> _2369_items = jule::Slice<jule::Ptr<_1b4b4b8cc_EnumItem>>::alloc(0LL, (*(_23524_decls)).len());;
	{
		auto expr = _23524_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aac10769:;
		if (it != expr_end) {
			jule::Ptr<_1b4b190d6_EnumItemDecl> _23717_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1b4b4b8cc_EnumItem>> &__jule_push_dest = _2369_items; __jule_push_dest.push(_1b4b41ae2_buildEnumItem(_23717_decl)); };
			}
			_iter_next_1aac10769:;
			++it;
			goto _iter_begin_1aac10769;
		}
		_iter_end_1aac10769:;
	};
	return _2369_items;;
}



inline jule::Ptr<_1b4b4c449_Enum> _1b4b423a6_buildEnum(jule::Ptr<_1b4b19b97_EnumDecl> _24318_decl) {
	return jule::new_ptr<_1b4b4c449_Enum>(_1b4b4c449_Enum{._field_Token=(*(_24318_decl))._field_Token, ._field_Public=(*_24318_decl.alloc)._field_Public, ._field_Ident=(*_24318_decl.alloc)._field_Ident, ._field_Kind=_1b4b3e3b4_buildType((*_24318_decl.alloc)._field_Kind), ._field_Items=_1b4b41dab_buildEnumItems(&((*_24318_decl.alloc)._field_Items))});;
}



inline jule::Ptr<_1b4b4d57c_TypeEnumItem> _1b4b42582_buildTypeEnumItem(jule::Ptr<_1b4b1a4c2_TypeEnumItemDecl> _25326_decl) {
	return jule::new_ptr<_1b4b4d57c_TypeEnumItem>(_1b4b4d57c_TypeEnumItem{._field_Token=(*(_25326_decl))._field_Token, ._field_Ident=(*_25326_decl.alloc)._field_Ident, ._field_Kind=_1b4b3e3b4_buildType((*_25326_decl.alloc)._field_Kind)});;
}



inline jule::Slice<jule::Ptr<_1b4b4d57c_TypeEnumItem>> _1b4b42829_buildTypeEnumItems(jule::Slice<jule::Ptr<_1b4b1a4c2_TypeEnumItemDecl>>* _26128_decls) {
	jule::Slice<jule::Ptr<_1b4b4d57c_TypeEnumItem>> _2629_items = jule::Slice<jule::Ptr<_1b4b4d57c_TypeEnumItem>>::alloc(0LL, (*(_26128_decls)).len());;
	{
		auto expr = _26128_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aac139c0:;
		if (it != expr_end) {
			jule::Ptr<_1b4b1a4c2_TypeEnumItemDecl> _26317_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1b4b4d57c_TypeEnumItem>> &__jule_push_dest = _2629_items; __jule_push_dest.push(_1b4b42582_buildTypeEnumItem(_26317_decl)); };
			}
			_iter_next_1aac139c0:;
			++it;
			goto _iter_begin_1aac139c0;
		}
		_iter_end_1aac139c0:;
	};
	return _2629_items;;
}



inline jule::Ptr<_1b4b4db54_TypeEnum> _1b4b42ae3_buildTypeEnum(jule::Ptr<_1b4b1ab32_TypeEnumDecl> _26922_decl) {
	return jule::new_ptr<_1b4b4db54_TypeEnum>(_1b4b4db54_TypeEnum{._field_Token=(*(_26922_decl))._field_Token, ._field_Public=(*_26922_decl.alloc)._field_Public, ._field_Ident=(*_26922_decl.alloc)._field_Ident, ._field_Items=_1b4b42829_buildTypeEnumItems(&((*_26922_decl.alloc)._field_Items))});;
}



inline jule::Ptr<_1b4bddaa1_Var> _1b4b42dac_buildVar(jule::Ptr<_1b4b13894_VarDecl> _27817_decl) {
	return jule::new_ptr<_1b4bddaa1_Var>(_1b4bddaa1_Var{._field_Token=(*(_27817_decl))._field_Token, ._field_Ident=(*_27817_decl.alloc)._field_Ident, ._field_Binded=(*_27817_decl.alloc)._field_Binded, ._field_Constant=(*_27817_decl.alloc)._field_Constant, ._field_Mutable=(*_27817_decl.alloc)._field_Mutable, ._field_Public=(*_27817_decl.alloc)._field_Public, ._field_Statically=(*_27817_decl.alloc)._field_Statically, ._field_Reference=(*_27817_decl.alloc)._field_Reference, ._field_Kind=_1b4b3e3b4_buildType((*_27817_decl.alloc)._field_Kind), ._field_Value=_1b4b3e6c2_buildExpr((*_27817_decl.alloc)._field_Expr), ._field_Refers=static__1b4b3cd30_new(), ._field_Directives=(*_27817_decl.alloc)._field_Directives, });;
}



inline jule::Slice<jule::Ptr<_1b4bddaa1_Var>> _1b4b43176_buildVars(jule::Slice<jule::Ptr<_1b4b13894_VarDecl>> _29518_decls) {
	jule::Slice<jule::Ptr<_1b4bddaa1_Var>> _2969_vars = jule::Slice<jule::Ptr<_1b4bddaa1_Var>>::alloc(0LL, _29518_decls.len());;
	{
		auto expr = &(_29518_decls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aac1e459:;
		if (it != expr_end) {
			jule::Ptr<_1b4b13894_VarDecl> _29717_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1b4bddaa1_Var>> &__jule_push_dest = _2969_vars; __jule_push_dest.push(_1b4b42dac_buildVar(_29717_decl)); };
			}
			_iter_next_1aac1e459:;
			++it;
			goto _iter_begin_1aac1e459;
		}
		_iter_end_1aac1e459:;
	};
	return _2969_vars;;
}



inline jule::Ptr<_1b4b733a4_Impl> _1b4b43440_buildImpl(jule::Ptr<_1b4b1c68e_Impl> _30318_decl) {
	return jule::new_ptr<_1b4b733a4_Impl>(_1b4b733a4_Impl{._field_Base=(*(_30318_decl))._field_Base, ._field_Dest=(*_30318_decl.alloc)._field_Dest, ._field_Methods=_1b4b41295_buildMethods(&((*_30318_decl.alloc)._field_Methods)), ._field_Statics=_1b4b43176_buildVars((*_30318_decl.alloc)._field_Statics)});;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4b6d800_buildAsComptimeMethodData(jule::Ptr<_1b4b39865_FnIns>* _142135_f) {
	return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=jule::new_ptr<_1b4c7c90e_TypeKind>(_1b4c7c90e_TypeKind{._field_Kind=jule::Trait((*(_142135_f)), (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data1)}), });;
}



inline jule::Ptr<_1b4b9a893_ImportInfo> _1b4b6db0d_findComptimePackage(jule::Ptr<_1b4bbac37_Sema>* _142929_s) {
	return _1b4bbb1cc_SelectPackage((*(_142929_s)).ptr(), jule::__new_closure<jule::Bool,jule::Ptr<_1b4b9a893_ImportInfo>>((void*)__jule_anon1aac8a75b, nullptr, nullptr));;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4b6de82_buildComptimeTypeInfoData(jule::Ptr<_1b4bbac37_Sema>* _143535_s, jule::Ptr<_1b4c7c90e_TypeKind>* _143550_t) {
	return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=jule::new_ptr<_1b4c7c90e_TypeKind>(_1b4c7c90e_TypeKind{._field_Kind=jule::Trait(_1b4bba572_pushComptimeTypeInfo((*((*(_143535_s))))._field_meta.ptr(), _143550_t), (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data15)}), });;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4b6e2c3_buildComptimeValue(jule::Ptr<_1b4c466a8_Data>* _144328_d) {
	return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=jule::new_ptr<_1b4c7c90e_TypeKind>(_1b4c7c90e_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1b4b67ae6_comptimeValue>(_1b4b67ae6_comptimeValue{._field_data=(*(_144328_d))}), (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data16)}), });;
}



inline jule::Str _1b4b7234d_toStrConstraints(jule::Ptr<_1b4c7b028_InsGeneric> _14321_g) {
	_1cb1d27a9_StrBuilder _1449_sb = static__1cb1d2a73_New(128LL);;
	{
		auto expr = &((*_14321_g.alloc)._field_Constraint);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aadd6b3d:;
		if (it != expr_end) {
			jule::I64 _1459_i = it - expr->begin();
			jule::Ptr<_1b4c7c90e_TypeKind> *_14512_c = it;
			{
				_1cb1db3d9_WriteStr(&_1449_sb, _1b4c7ccc7_Str((*(_14512_c)).ptr()));
				if ((((*(_14321_g))._field_Constraint.len() - _1459_i) > 1LL)) {
					_1cb1db3d9_WriteStr(&_1449_sb, jule::Str::lit(" | ", 3));
				};
			}
			_iter_next_1aadd6b3d:;
			++it;
			_1459_i++;
			goto _iter_begin_1aadd6b3d;
		}
		_iter_end_1aadd6b3d:;
	};
	return _1cb1dbbd1_Str(&_1449_sb);;
}



inline jule::Bool _1b4b72716_matchConstraint(jule::Str* _15421_c, jule::Ptr<_1b4c7c90e_TypeKind>* _15434_g) {
	{
		auto &_match_expr{ (*(_15421_c)) };
		
		if (_match_expr == jule::Str::lit("signed", 6)) {
			_case_begin_1aadd8997:;
			{
				jule::Ptr<_1b4c854d8_Prim> _1579_prim = _1b4c80060_Prim((*(_15434_g)).ptr());;
				if ((_1579_prim == nullptr)) {
					return false;;
				};
				return _1b275322d_IsSigNum((*(_1579_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str::lit("unsigned", 8)) {
			_case_begin_1aadd8a0d:;
			{
				jule::Ptr<_1b4c854d8_Prim> _1639_prim = _1b4c80060_Prim((*(_15434_g)).ptr());;
				if ((_1639_prim == nullptr)) {
					return false;;
				};
				return _1b27525c3_IsUnsigInt((*(_1639_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str::lit("float", 5)) {
			_case_begin_1aadd8a85:;
			{
				jule::Ptr<_1b4c854d8_Prim> _1699_prim = _1b4c80060_Prim((*(_15434_g)).ptr());;
				if ((_1699_prim == nullptr)) {
					return false;;
				};
				return _1b2752bcd_IsFloat((*(_1699_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str::lit("numeric", 7)) {
			_case_begin_1aadd8b0c:;
			{
				jule::Ptr<_1b4c854d8_Prim> _1759_prim = _1b4c80060_Prim((*(_15434_g)).ptr());;
				if ((_1759_prim == nullptr)) {
					return false;;
				};
				return _1b2752e64_IsNum((*(_1759_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str::lit("mutable", 7)) {
			_case_begin_1aadd8cd8:;
			{
				return _1b4c7e290_Mutable((*(_15434_g)).ptr());;
			}
		}
		else if (_match_expr == jule::Str::lit("immutable", 9)) {
			_case_begin_1aadd8d4e:;
			{
				return (!(_1b4c7e290_Mutable((*(_15434_g)).ptr())));;
			}
		}
		else if (_match_expr == jule::Str::lit("comparable", 10)) {
			_case_begin_1aadd8db5:;
			{
				return _1b4c7e009_Comparable((*(_15434_g)).ptr());;
			}
		}
		else if (_match_expr == jule::Str::lit("ordered", 7)) {
			_case_begin_1aadd8e2b:;
			{
				return _1b4c7e526_Ordered((*(_15434_g)).ptr());;
			}
		}
		else {
			_case_begin_1aadd7de7:;
			{
				return false;;
			}
		}
		_match_end_1aadd8843:;
	};
}



inline jule::Bool _1b4b729d0_isBuiltinConstraint(jule::Str* _19325_ident) {
	{
		auto expr = &(_1b4b70714_builtinConstraints);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aaddeb46:;
		if (it != expr_end) {
			jule::Str *_19412_bc = it;
			{
				if (((*(_19325_ident)) == (*(_19412_bc)))) {
					return true;;
				};
			}
			_iter_next_1aaddeb46:;
			++it;
			goto _iter_begin_1aaddeb46;
		}
		_iter_end_1aaddeb46:;
	};
	return false;;
}



inline jule::Ptr<_1b4b80cb8_scopeChecker> _1b4b755d7_newScopeCheckerBase(jule::Ptr<_1b4bbac37_Sema>* _5829_s, jule::Ptr<_1b4b39865_FnIns> _5843_owner) {
	return jule::new_ptr<_1b4b80cb8_scopeChecker>(_1b4b80cb8_scopeChecker{._field_s=(*(_5829_s)), ._field_owner=_5843_owner, ._field_table=jule::new_ptr<_1b4c41340_SymbolTable>(), });;
}



inline jule::Ptr<_1b4b80cb8_scopeChecker> _1b4b759a0_newScopeChecker(jule::Ptr<_1b4bbac37_Sema>* _6625_s, jule::Ptr<_1b4b39865_FnIns> _6639_owner) {
	jule::Ptr<_1b4b80cb8_scopeChecker> _679_base = _1b4b755d7_newScopeCheckerBase(_6625_s, _6639_owner);;
	(*(_679_base))._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1b4b7e745_scopeLabel>>>(nullptr);
	(*_679_base.alloc)._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1b4b7ecc8_scopeGoto>>>(nullptr);
	return _679_base;;
}



inline jule::Ptr<_1b4b7e745_scopeLabel> _1b4b75d24_findLabelParent(jule::Str* _7621_ident, jule::Ptr<_1b4b80cb8_scopeChecker> _7637_scope) {
	jule::Ptr<_1b4b7e745_scopeLabel> _779_label = _1b4b84dbb_findLabelScope(_7637_scope, _7621_ident);;
	while ((_779_label == nullptr)) {
		{
			if ((((*_7637_scope.alloc)._field_parent == nullptr) || ((*_7637_scope.alloc)._field_owner != nullptr))) {
				return nullptr;;
			};
			_7637_scope=(*_7637_scope.alloc)._field_parent;
			_779_label=_1b4b84dbb_findLabelScope(_7637_scope, _7621_ident);
		}
	_iter_next_1aae08786:;
	}
	_iter_end_1aae08786:;;
	return _779_label;;
}



inline jule::Bool _1b4b761dc_modelIsGotoScope(jule::Any _9021_Model, jule::Ptr<_1b4b7880a_Scope>* _9034_sc) {
	{
		auto &_match_expr{ _9021_Model };
		
		if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1aae0a623:;
			{
				jule::Ptr<_1b4b2aa21_FnCallExprModel> _939_fcem = _9021_Model.unsafe_cast_ptr<_1b4b2aa21_FnCallExprModel>();;
				if (((*(_939_fcem))._field_Except == (*(_9034_sc)))) {
					return true;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1aae08e90:;
			{
				jule::Ptr<_1b4c466a8_Data> _989_d = _9021_Model.unsafe_cast_ptr<_1b4c466a8_Data>();;
				return _1b4b761dc_modelIsGotoScope((*(_989_d))._field_Model, _9034_sc);;
			}
		}
		_match_end_1aae0a5bd:;
	};
	return false;;
}



inline jule::Bool _1b4b76561_stmtIsGotoScope(jule::Any* _10421_stmt, jule::Ptr<_1b4b7880a_Scope>* _10434_sc) {
	{
		auto &_match_expr{ (*(_10421_stmt)) };
		
		if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1aae0c317:;
			{
				return ((*(_10421_stmt)).cast_ptr<_1b4b7880a_Scope>(&__jule_any_type21) == (*(_10434_sc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1aae0cb97:;
			{
				return ((*((*(_10421_stmt)).cast_ptr<_1b4b79740_InfIter>(&__jule_any_type35)))._field_Scope == (*(_10434_sc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1aae0cc0d:;
			{
				jule::Ptr<_1b4b7a642_RangeIter> _1119_it = (*(_10421_stmt)).cast_ptr<_1b4b7a642_RangeIter>(&__jule_any_type39);;
				return (((*(_1119_it))._field_Scope == (*(_10434_sc))) || _1b4b761dc_modelIsGotoScope((*((*_1119_it.alloc)._field_Expr))._field_Model, _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1aae0c78a:;
			{
				jule::Ptr<_1b4b79be6_WhileIter> _1149_it = (*(_10421_stmt)).cast_ptr<_1b4b79be6_WhileIter>(&__jule_any_type37);;
				return ((((*(_1149_it))._field_Scope == (*(_10434_sc))) || _1b4b761dc_modelIsGotoScope((*_1149_it.alloc)._field_Expr, _10434_sc)) || _1b4b761dc_modelIsGotoScope((*_1149_it.alloc)._field_Next, _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1aae0c801:;
			{
				jule::Ptr<_1b4b7ca1d_Match> _1199_m = (*(_10421_stmt)).cast_ptr<_1b4b7ca1d_Match>(&__jule_any_type46);;
				{
					auto expr = &((*(_1199_m))._field_Cases);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aae12042:;
					if (it != expr_end) {
						jule::Ptr<_1b4b7d546_Case> *_12016_c = it;
						{
							if (((*((*(_12016_c))))._field_Scope == (*(_10434_sc)))) {
								return true;;
							};
							{
								auto expr = &((*(*(_12016_c)).alloc)._field_Exprs);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1aae12e88:;
								if (it != expr_end) {
									jule::Ptr<_1b4c466a8_Data> *_12420_expr = it;
									{
										if (_1b4b761dc_modelIsGotoScope((*((*(_12420_expr))))._field_Model, _10434_sc)) {
											return true;;
										};
									}
									_iter_next_1aae12e88:;
									++it;
									goto _iter_begin_1aae12e88;
								}
								_iter_end_1aae12e88:;
							};
						}
						_iter_next_1aae12042:;
						++it;
						goto _iter_begin_1aae12042;
					}
					_iter_end_1aae12042:;
				};
				return (((*_1199_m.alloc)._field_Default != nullptr) && ((*(*_1199_m.alloc)._field_Default.alloc)._field_Scope == (*(_10434_sc))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1aae0c867:;
			{
				jule::Ptr<_1b4b79443_Conditional> _1329_c = (*(_10421_stmt)).cast_ptr<_1b4b79443_Conditional>(&__jule_any_type34);;
				{
					auto expr = &((*(_1329_c))._field_Elifs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aae14a39:;
					if (it != expr_end) {
						jule::Ptr<_1b4b78c28_If> *_13316_elif = it;
						{
							if ((((*((*(_13316_elif))))._field_Scope == (*(_10434_sc))) || _1b4b761dc_modelIsGotoScope((*(*(_13316_elif)).alloc)._field_Expr, _10434_sc))) {
								return true;;
							};
						}
						_iter_next_1aae14a39:;
						++it;
						goto _iter_begin_1aae14a39;
					}
					_iter_end_1aae14a39:;
				};
				return (((*_1329_c.alloc)._field_Default != nullptr) && ((*(*_1329_c.alloc)._field_Default.alloc)._field_Scope == (*(_10434_sc))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1aae0c8cd:;
			{
				jule::Ptr<_1b4c466a8_Data> _1409_d = (*(_10421_stmt)).cast_ptr<_1b4c466a8_Data>(&__jule_any_type23);;
				return _1b4b761dc_modelIsGotoScope((*(_1409_d))._field_Model, _10434_sc);;
			}
		}
		else {
			_case_begin_1aae0ab84:;
			{
				return false;;
			}
		}
		_match_end_1aae0ab2e:;
	};
}



inline jule::I64 _1b4b768d5_countMatchType(jule::Ptr<_1b4b7ca1d_Match>* _14720_m, jule::Ptr<_1b4c7c90e_TypeKind>* _14732_t) {
	jule::I64 _1489_n = 0LL;;
	jule::Str _1495_kind = _1b4c7ccc7_Str((*(_14732_t)).ptr());;
	_julec_label_1aae17971:;
	{
		auto expr = &((*((*(_14720_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aae17da0:;
		if (it != expr_end) {
			jule::Ptr<_1b4b7d546_Case> *_15112_c = it;
			{
				if (((*(_15112_c)) == nullptr)) {
					goto _iter_next_1aae17da0;
				};
				{
					auto expr = &((*((*(_15112_c))))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aae18ad7:;
					if (it != expr_end) {
						jule::Ptr<_1b4c466a8_Data> *_15616_expr = it;
						{
							if (((*(_15616_expr)) == nullptr)) {
								goto _iter_end_1aae17da0;
							};
							if ((_1495_kind == _1b4c7ccc7_Str((*((*(_15616_expr))))._field_Model.cast_ptr<_1b4c7c90e_TypeKind>(&__jule_any_type84).ptr()))) {
								(_1489_n)++;
							};
						}
						_iter_next_1aae18ad7:;
						++it;
						goto _iter_begin_1aae18ad7;
					}
					_iter_end_1aae18ad7:;
				};
			}
			_iter_next_1aae17da0:;
			++it;
			goto _iter_begin_1aae17da0;
		}
		_iter_end_1aae17da0:;
	};
	return _1489_n;;
}



inline jule::Slice<jule::Ptr<_1b4c466a8_Data>> _1b4b76b9e_getDatasFromTupleData(jule::Ptr<_1b4c466a8_Data>* _17131_d) {
	if ((_1b4c81d86_Tup((*((*(_17131_d))))._field_Kind.ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*((*(_17131_d))))._field_Model };
			
			if (_match_expr.type == &__jule_any_type81) {
				_case_begin_1aae1c745:;
				{
					return (*((*((*(_17131_d))))._field_Model.unsafe_cast_ptr<_1b4b2e20b_TupleExprModel>()))._field_Datas;;
				}
			}
			else {
				_case_begin_1aae1a633:;
				{
					jule::Ptr<_1b4c8a5cb_Tuple> _17717_t = _1b4c81d86_Tup((*((*(_17131_d))))._field_Kind);;
					jule::Slice<jule::Ptr<_1b4c466a8_Data>> _17817_r = jule::Slice<jule::Ptr<_1b4c466a8_Data>>::alloc(0LL, (*(_17717_t))._field_Types.len());;
					{
						auto expr = &((*_17717_t.alloc)._field_Types);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1aae1be1a:;
						if (it != expr_end) {
							jule::Ptr<_1b4c7c90e_TypeKind> _17925_kind = *it;
							{
								{ jule::Slice<jule::Ptr<_1b4c466a8_Data>> &__jule_push_dest = _17817_r; __jule_push_dest.push(jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=_17925_kind, ._field_Mutable=true, })); };
							}
							_iter_next_1aae1be1a:;
							++it;
							goto _iter_begin_1aae1be1a;
						}
						_iter_end_1aae1be1a:;
					};
					return _17817_r;;
				}
			}
			_match_end_1aae1a5cd:;
		};
	} else {
		return jule::Slice<jule::Ptr<_1b4c466a8_Data>>::make({(*(_17131_d))});;
	};
}



inline jule::Bool _1b4b774da_checkMut(jule::Ptr<_1b4bbac37_Sema>* _20618_s, jule::Ptr<_1b4c466a8_Data>* _20629_left, jule::Ptr<_1b4c466a8_Data> _20646_right, jule::Ptr<_1b4ad5712_Token> _20660_op) {
	jule::Bool __jule_func_result = false;
	{
		
		if ((!((*((*(_20629_left))))._field_Mutable))) {
			_case_begin_1aae211a5:;
			{
				_1b4bbd872_pushErr((*(_20618_s)).ptr(), _20660_op, jule::Str::lit("cannot assign to immutable storage", 34), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((((_20646_right != nullptr) && (!((*_20646_right.alloc)._field_Mutable))) && _1b4c7e290_Mutable((*_20646_right.alloc)._field_Kind.ptr()))) {
			_case_begin_1aae215a1:;
			{
				if ((((*(_20660_op))._field_Id != static_cast<jule::U64>(71LLU)) && (_1b4c815d3_Struct((*_20646_right.alloc)._field_Kind) != nullptr))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_1b4bbd872_pushErr((*(_20618_s)).ptr(), _20660_op, jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_1b4c7ccc7_Str((*_20646_right.alloc)._field_Kind), &__jule_any_type4)}));
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1aae2113e:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1aae21095:;
	};
}



inline jule::Bool _1b4b779c4_checkAssign(jule::Ptr<_1b4bbac37_Sema>* _22521_s, jule::Ptr<_1b4c466a8_Data>* _22536_left, jule::Ptr<_1b4c466a8_Data> _22553_right, jule::Ptr<_1b4ad5712_Token> _22567_op) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1b4b39865_FnIns> _2265_f = _1b4c8134c_Fn((*((*(_22536_left))))._field_Kind.ptr());;
	if ((((_2265_f != nullptr) && ((*_2265_f.alloc)._field_Decl != nullptr)) && (*(*_2265_f.alloc)._field_Decl.alloc)._field_Global)) {
		_1b4bbd872_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str::lit("type is not support assignment", 30), jule::Slice<jule::Any>());
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		
		if (_1b4c470b0_IsConst((*(_22536_left)).ptr())) {
			_case_begin_1aae2696e:;
			{
				_1b4bbd872_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str::lit("constants is can't assign", 25), jule::Slice<jule::Any>());
				_1b4bbdbd5_pushSuggestion((*(_22521_s)).ptr(), jule::Str::lit("remove constant qualifer if you need to assign", 46), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!((*((*(_22536_left))))._field_Lvalue))) {
			_case_begin_1aae269d5:;
			{
				_1b4bbd872_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str::lit("invalid expression: expected lvalue for assignment", 50), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!(_1b4b774da_checkMut(_22521_s, _22536_left, _22553_right, _22567_op)))) {
			_case_begin_1aae26a4b:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1aae268b4:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1aae2674e:;
	};
}



inline jule::Bool _1b4b77c8d_isValidAstStForNextSt(jule::Any* _24731_n) {
	{
		auto &_match_expr{ (*(_24731_n)) };
		
		if (_match_expr.type == &__jule_any_type57) {
			_case_begin_1aae26ad4:;
			{
				return (!((*((*(_24731_n)).cast_ptr<_1b4b0966a_AssignSt>(&__jule_any_type57)))._field_Declarative));;
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1aae28bc4:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1aae28a81:;
			{
				return false;;
			}
		}
		_match_end_1aae28a2b:;
	};
}



inline jule::Bool _1b4b78057_isValidStForNextSt(jule::Any* _25824_st) {
	{
		auto &_match_expr{ (*(_25824_st)) };
		
		if (_match_expr.type == &__jule_any_type42 || _match_expr.type == &__jule_any_type43 || _match_expr.type == &__jule_any_type45) {
			_case_begin_1aae29ba3:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1aae29378:;
			{
				{
					auto &_match_expr{ (*((*(_25824_st)).cast_ptr<_1b4c466a8_Data>(&__jule_any_type23)))._field_Model };
					
					if (_match_expr.type == &__jule_any_type33) {
						_case_begin_1aae2a6ba:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1aae2aec3:;
						{
							return false;;
						}
					}
					_match_end_1aae2ae6d:;
				};
			}
		}
		else {
			_case_begin_1aae29312:;
			{
				return false;;
			}
		}
		_match_end_1aae292ac:;
	};
}



inline jule::Bool _1b4b78321_stmtIsDef(jule::Any* _27615_st) {
	{
		auto &_match_expr{ (*(_27615_st)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1aae2b446:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1aae2a588:;
			{
				return false;;
			}
		}
		_match_end_1aae2a533:;
	};
}



inline jule::U64 _1b4b931c6_removeEqFromOp(jule::U64 _220119_op) {
	{
		auto &_match_expr{ _220119_op };
		
		if (_match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1aae2c1d3:;
			{
				return static_cast<jule::U64>(60LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(41LLU)) {
			_case_begin_1aae2c249:;
			{
				return static_cast<jule::U64>(61LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(42LLU)) {
			_case_begin_1aae2be08:;
			{
				return static_cast<jule::U64>(62LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1aae2be6e:;
			{
				return static_cast<jule::U64>(63LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1aae2c337:;
			{
				return static_cast<jule::U64>(64LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(45LLU)) {
			_case_begin_1aae2c39d:;
			{
				return static_cast<jule::U64>(56LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(46LLU)) {
			_case_begin_1aae2c414:;
			{
				return static_cast<jule::U64>(57LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(47LLU)) {
			_case_begin_1aae2c48b:;
			{
				return static_cast<jule::U64>(67LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(48LLU)) {
			_case_begin_1aae2c513:;
			{
				return static_cast<jule::U64>(65LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(49LLU)) {
			_case_begin_1aae2c5e0:;
			{
				return static_cast<jule::U64>(66LLU);;
			}
		}
		else {
			_case_begin_1aae2b963:;
			{
				return _220119_op;;
			}
		}
		_match_end_1aae2bd2b:;
	};
}



inline void _1b4b93407_makeComptimeRange(jule::Ptr<_1b4c466a8_Data>* _223027_d) {
	{
		
		if ((_1b4c823a3_comptimeStructFields((*((*(_223027_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aae2c9db:;
			{
				(*((*(_223027_d))))._field_Kind=jule::new_ptr<_1b4c7c90e_TypeKind>(_1b4c7c90e_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1b4b51cab_comptimeRange>(_1b4b51cab_comptimeRange{._field_kind=jule::Trait(_1b4c823a3_comptimeStructFields((*((*(_223027_d))))._field_Kind), (jule::Trait::Type*)&_1b4b51a8b_comptimeRangeKind_mptr_data0)}), (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data5)});
			}
		}
		else if ((_1b4c828c0_comptimeEnumFields((*((*(_223027_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aae31050:;
			{
				(*((*(_223027_d))))._field_Kind=jule::new_ptr<_1b4c7c90e_TypeKind>(_1b4c7c90e_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1b4b51cab_comptimeRange>(_1b4b51cab_comptimeRange{._field_kind=jule::Trait(_1b4c828c0_comptimeEnumFields((*((*(_223027_d))))._field_Kind), (jule::Trait::Type*)&_1b4b51a8b_comptimeRangeKind_mptr_data2)}), (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data5)});
			}
		}
		else if ((_1b4c83690_comptimeTypeInfos((*((*(_223027_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aae310b6:;
			{
				(*((*(_223027_d))))._field_Kind=jule::new_ptr<_1b4c7c90e_TypeKind>(_1b4c7c90e_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1b4b51cab_comptimeRange>(_1b4b51cab_comptimeRange{._field_kind=jule::Trait(_1b4c83690_comptimeTypeInfos((*((*(_223027_d))))._field_Kind), (jule::Trait::Type*)&_1b4b51a8b_comptimeRangeKind_mptr_data4)}), (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data5)});
			}
		}
		else if ((_1b4c82ddc_comptimeParams((*((*(_223027_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aae2ca52:;
			{
				(*((*(_223027_d))))._field_Kind=jule::new_ptr<_1b4c7c90e_TypeKind>(_1b4c7c90e_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1b4b51cab_comptimeRange>(_1b4b51cab_comptimeRange{._field_kind=jule::Trait(_1b4c82ddc_comptimeParams((*((*(_223027_d))))._field_Kind), (jule::Trait::Type*)&_1b4b51a8b_comptimeRangeKind_mptr_data3)}), (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data5)});
			}
		}
		else if ((_1b4c83bac_comptimeStatics((*((*(_223027_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aae2cab8:;
			{
				(*((*(_223027_d))))._field_Kind=jule::new_ptr<_1b4c7c90e_TypeKind>(_1b4c7c90e_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1b4b51cab_comptimeRange>(_1b4b51cab_comptimeRange{._field_kind=jule::Trait(_1b4c83bac_comptimeStatics((*((*(_223027_d))))._field_Kind), (jule::Trait::Type*)&_1b4b51a8b_comptimeRangeKind_mptr_data1)}), (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data5)});
			}
		}
		else if ((_1b4c846e6_comptimeFiles((*((*(_223027_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aae2cb2e:;
			{
				(*((*(_223027_d))))._field_Kind=jule::new_ptr<_1b4c7c90e_TypeKind>(_1b4c7c90e_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1b4b51cab_comptimeRange>(_1b4b51cab_comptimeRange{._field_kind=jule::Trait(_1b4c846e6_comptimeFiles((*((*(_223027_d))))._field_Kind), (jule::Trait::Type*)&_1b4b51a8b_comptimeRangeKind_mptr_data5)}), (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data5)});
			}
		}
		else {
			_case_begin_1aae2c975:;
			{
				(*((*(_223027_d))))._field_Decl=true;
			}
		}
		_match_end_1aae30c20:;
	};
}



inline jule::Bool _1b4b93902_canComptimeMatch(jule::Ptr<_1b4c466a8_Data>* _225126_d) {
	if ((!(_1b4c4043d_isGoodValueToInfer(_225126_d)))) {
		return false;;
	};
	return (_1b4c470b0_IsConst((*(_225126_d)).ptr()) || (_1b4c83926_comptimeTypeInfo((*((*(_225126_d))))._field_Kind.ptr()) != nullptr));;
}



inline jule::Ptr<_1b4bddaa1_Var> _1b4b97d79_findVarInPackage(jule::Slice<jule::Ptr<_1b4c41340_SymbolTable>>* _4626_files, jule::Str* _4650_ident, jule::Bool _4662_binded) {
	{
		auto expr = _4626_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab1101eb:;
		if (it != expr_end) {
			jule::Ptr<_1b4c41340_SymbolTable> _4717_f = *it;
			{
				jule::Ptr<_1b4bddaa1_Var> _4813_v = _1b4c41c25_FindVar(_4717_f.ptr(), (*(_4650_ident)), _4662_binded);;
				if ((_4813_v != nullptr)) {
					return _4813_v;;
				};
			}
			_iter_next_1ab1101eb:;
			++it;
			goto _iter_begin_1ab1101eb;
		}
		_iter_end_1ab1101eb:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b4c7bb1c_TypeAlias> _1b4b982ec_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1b4c41340_SymbolTable>>* _5832_files, jule::Str* _5856_ident, jule::Bool _5868_binded) {
	{
		auto expr = _5832_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab111153:;
		if (it != expr_end) {
			jule::Ptr<_1b4c41340_SymbolTable> _5917_f = *it;
			{
				jule::Ptr<_1b4c7bb1c_TypeAlias> _6013_ta = _1b4c42121_FindTypeAlias(_5917_f.ptr(), (*(_5856_ident)), _5868_binded);;
				if ((_6013_ta != nullptr)) {
					return _6013_ta;;
				};
			}
			_iter_next_1ab111153:;
			++it;
			goto _iter_begin_1ab111153;
		}
		_iter_end_1ab111153:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b4b218b3_Struct> _1b4b9872b_findStructInPackage(jule::Slice<jule::Ptr<_1b4c41340_SymbolTable>>* _7029_files, jule::Str* _7053_ident, jule::Bool _7065_binded) {
	{
		auto expr = _7029_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab112660:;
		if (it != expr_end) {
			jule::Ptr<_1b4c41340_SymbolTable> _7117_f = *it;
			{
				jule::Ptr<_1b4b218b3_Struct> _7213_s = _1b4c4251c_FindStruct(_7117_f.ptr(), (*(_7053_ident)), _7065_binded);;
				if ((_7213_s != nullptr)) {
					return _7213_s;;
				};
			}
			_iter_next_1ab112660:;
			++it;
			goto _iter_begin_1ab112660;
		}
		_iter_end_1ab112660:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b4b36884_Fn> _1b4b98bd2_findFnInPackage(jule::Slice<jule::Ptr<_1b4c41340_SymbolTable>>* _8225_files, jule::Str* _8249_ident, jule::Bool _8261_binded) {
	{
		auto expr = _8225_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab113b6c:;
		if (it != expr_end) {
			jule::Ptr<_1b4c41340_SymbolTable> _8317_file = *it;
			{
				jule::Ptr<_1b4b36884_Fn> _8413_f = _1b4c42918_FindFn(_8317_file.ptr(), (*(_8249_ident)), _8261_binded);;
				if ((_8413_f != nullptr)) {
					return _8413_f;;
				};
			}
			_iter_next_1ab113b6c:;
			++it;
			goto _iter_begin_1ab113b6c;
		}
		_iter_end_1ab113b6c:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b4b49c3d_Trait> _1b4b99023_findTraitInPackage(jule::Slice<jule::Ptr<_1b4c41340_SymbolTable>>* _9428_files, jule::Str* _9452_ident) {
	{
		auto expr = _9428_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab115751:;
		if (it != expr_end) {
			jule::Ptr<_1b4c41340_SymbolTable> _9517_f = *it;
			{
				jule::Ptr<_1b4b49c3d_Trait> _9613_t = _1b4c42c59_FindTrait(_9517_f.ptr(), (*(_9452_ident)));;
				if ((_9613_t != nullptr)) {
					return _9613_t;;
				};
			}
			_iter_next_1ab115751:;
			++it;
			goto _iter_begin_1ab115751;
		}
		_iter_end_1ab115751:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b4b4c449_Enum> _1b4b99397_findEnumInPackage(jule::Slice<jule::Ptr<_1b4c41340_SymbolTable>>* _10627_files, jule::Str* _10651_ident) {
	{
		auto expr = _10627_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab115993:;
		if (it != expr_end) {
			jule::Ptr<_1b4c41340_SymbolTable> _10717_f = *it;
			{
				jule::Ptr<_1b4b4c449_Enum> _10813_e = _1b4c4309a_FindEnum(_10717_f.ptr(), (*(_10651_ident)));;
				if ((_10813_e != nullptr)) {
					return _10813_e;;
				};
			}
			_iter_next_1ab115993:;
			++it;
			goto _iter_begin_1ab115993;
		}
		_iter_end_1ab115993:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b4b4db54_TypeEnum> _1b4b9971b_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1b4c41340_SymbolTable>>* _11831_files, jule::Str* _11855_ident) {
	{
		auto expr = _11831_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab116cc4:;
		if (it != expr_end) {
			jule::Ptr<_1b4c41340_SymbolTable> _11917_f = *it;
			{
				jule::Ptr<_1b4b4db54_TypeEnum> _12013_e = _1b4c433db_FindTypeEnum(_11917_f.ptr(), (*(_11855_ident)));;
				if ((_12013_e != nullptr)) {
					return _12013_e;;
				};
			}
			_iter_next_1ab116cc4:;
			++it;
			goto _iter_begin_1ab116cc4;
		}
		_iter_end_1ab116cc4:;
	};
	return nullptr;;
}



inline jule::Any _1b4b99c5a_defByIdentPackage(jule::Slice<jule::Ptr<_1b4c41340_SymbolTable>>* _12927_files, jule::Str* _12951_ident, jule::Bool _12963_binded) {
	{
		auto expr = _12927_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab11828c:;
		if (it != expr_end) {
			jule::Ptr<_1b4c41340_SymbolTable> _13017_file = *it;
			{
				jule::Any _13113_def = _1b4c443a9_defByIdent(_13017_file.ptr(), _12951_ident, _12963_binded);;
				if ((_13113_def != nullptr)) {
					return _13113_def;;
				};
			}
			_iter_next_1ab11828c:;
			++it;
			goto _iter_begin_1ab11828c;
		}
		_iter_end_1ab11828c:;
	};
	return nullptr;;
}



inline jule::Bool _1b4ba0c94_isStdPackage(jule::Str* _35518_f, jule::Str _35526_p) {
	return _1cb1bdb19_HasPrefix((*(_35518_f)), _1cb1e007a_Join(jule::Slice<jule::Str>::make({_1cb39d9db_PathStdlib,_35526_p})));;
}



inline jule::Bool _1b4bb83c7_isValidModelForRef(jule::Any* _1328_m) {
	{
		auto &_match_expr{ (*(_1328_m)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ab129dc5:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1ab129e3b:;
			{
				jule::Ptr<_1b4b2d68e_StructSubIdentExprModel> _1813_model = (*(_1328_m)).cast_ptr<_1b4b2d68e_StructSubIdentExprModel>(&__jule_any_type98);;
				return (((*(_1813_model))._field_Field != nullptr) && _1b4bb83c7_isValidModelForRef(&((*((*_1813_model.alloc)._field_Expr))._field_Model)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1ab129ea2:;
			{
				jule::Ptr<_1b4b28e1a_UnaryExprModel> _2113_unary = (*(_1328_m)).cast_ptr<_1b4b28e1a_UnaryExprModel>(&__jule_any_type110);;
				if (((*((*(_2113_unary))._field_Op))._field_Id != static_cast<jule::U64>(62LLU))) {
					return false;;
				};
				if ((_1b4c8057c_Ptr((*((*_2113_unary.alloc)._field_Expr))._field_Kind.ptr()) != nullptr)) {
					return true;;
				};
				if ((_1b4c802e6_Sptr((*(*_2113_unary.alloc)._field_Expr.alloc)._field_Kind) == nullptr)) {
					return false;;
				};
				return _1b4bb83c7_isValidModelForRef(&((*(*_2113_unary.alloc)._field_Expr.alloc)._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1ab12a018:;
			{
				jule::Ptr<_1b4b2b3a1_IndexingExprModel> _3513_indexing = (*(_1328_m)).cast_ptr<_1b4b2b3a1_IndexingExprModel>(&__jule_any_type44);;
				return _1b4bb83c7_isValidModelForRef(&((*((*(_3513_indexing))._field_Expr))._field_Model));;
			}
		}
		else {
			_case_begin_1ab129600:;
			{
				return false;;
			}
		}
		_match_end_1ab12959a:;
	};
}



inline _1cb285120_Log _1b4bb887d_compilerErr(jule::Ptr<_1b4ad5712_Token>* _4217_token, jule::Bool _4232_line, jule::Str _4244_fmt, jule::Slice<jule::Any> _4257_args) {
	_1cb285120_Log _439_log = _1cb285120_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*((*(_4217_token))))._field_Row, ._field_Column=(*((*(_4217_token))))._field_Column, ._field_Path=(*((*((*(_4217_token))))._field_File))._field_Path, ._field_Text=_1cb285582_Logf(_4244_fmt, _4257_args), };;
	if (_4232_line) {
		_439_log._field_Line=_1b4adbeaa_GetRow((*((*(_4217_token))))._field_File, (*((*(_4217_token))))._field_Row);
	};
	return _439_log;;
}



inline jule::Bool _1b4bb8c02_impIsLookupable(jule::Ptr<_1b4b9a893_ImportInfo>* _5621_i, jule::Str* _5638_ident) {
	if ((*((*(_5621_i))))._field_Binded) {
		return false;;
	};
	if ((!((*((*(_5621_i))))._field_ImportAll))) {
		if (((*((*(_5621_i))))._field_Selected.len() > 0LL)) {
			return _1b4b9d225_existIdent((*(_5621_i)).ptr(), (*(_5638_ident)));;
		};
	};
	return (*((*(_5621_i))))._field_ImportAll;;
}



inline void _1b4bb9032_appendRetVars(jule::Slice<jule::Ptr<_1b4bddaa1_Var>>* _6823_dest, jule::Ptr<_1b4b39865_FnIns>* _6842_f) {
	if ((_1b4b36d07_IsVoid((*((*(_6842_f))))._field_Decl.ptr()) || ((*((*(_6842_f))))._field_Result == nullptr))) {
		return;;
	};
	jule::Slice<jule::Ptr<_1b4c7c90e_TypeKind>> _739_types = _1b4b3aa64_Types((*(_6842_f)).ptr());;
	{
		auto expr = &((*((*(*((*(_6842_f))))._field_Decl.alloc)._field_Result))._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab135ae5:;
		if (it != expr_end) {
			jule::I64 _7410_i = it - expr->begin();
			jule::Ptr<_1b4ad5712_Token> _7417_ident = *it;
			{
				if ((_1b4ad80e9_IsIgnoreIdent((*(_7417_ident))._field_Kind) || _1b4ad83b3_IsAnonIdent((*_7417_ident.alloc)._field_Kind))) {
					goto _iter_next_1ab135ae5;
				};
				{ jule::Slice<jule::Ptr<_1b4bddaa1_Var>> &__jule_push_dest = (*(_6823_dest)); __jule_push_dest.push(jule::new_ptr<_1b4bddaa1_Var>(_1b4bddaa1_Var{._field_Scope=(*((*(_6842_f))))._field_Scope, ._field_Token=_7417_ident, ._field_Ident=(*_7417_ident.alloc)._field_Kind, ._field_Mutable=true, ._field_Used=true, ._field_Kind=jule::new_ptr<_1b4c84ad1_TypeSymbol>(_1b4c84ad1_TypeSymbol{._field_Kind=_739_types[_7410_i]}), ._field_Value=jule::new_ptr<_1b4c47830_Value>(_1b4c47830_Value{._field_Data=jule::new_ptr<_1b4c466a8_Data>()}), ._field_RetOrder=_7410_i, })); };
			}
			_iter_next_1ab135ae5:;
			++it;
			_7410_i++;
			goto _iter_begin_1ab135ae5;
		}
		_iter_end_1ab135ae5:;
	};
	if ((((*(*(*((*(_6842_f))))._field_Decl.alloc)._field_Result.alloc)._field_Idents.len() == 1LL) && ((*(_6823_dest)).len() == 1LL))) {
		(*((*(_6823_dest))[((*(_6823_dest)).len() - 1LL)]))._field_RetOrder=-1LL;
	};
}



inline void _1b4bb931d_appendParamVars(jule::Slice<jule::Ptr<_1b4bddaa1_Var>>* _9825_dest, jule::Ptr<_1b4b39865_FnIns>* _9844_f) {
	if (((*((*(_9844_f))))._field_Params.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_9844_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab13a457:;
		if (it != expr_end) {
			jule::Ptr<_1b4b387dc_ParamIns> _10317_p = *it;
			{
				if ((_1b4ad80e9_IsIgnoreIdent((*((*(_10317_p))._field_Decl))._field_Ident) || _1b4ad83b3_IsAnonIdent((*(*_10317_p.alloc)._field_Decl.alloc)._field_Ident))) {
					goto _iter_next_1ab13a457;
				};
				jule::Ptr<_1b4bddaa1_Var> _10813_v = jule::new_ptr<_1b4bddaa1_Var>(_1b4bddaa1_Var{._field_Scope=(*((*(_9844_f))))._field_Scope, ._field_Token=(*(*_10317_p.alloc)._field_Decl.alloc)._field_Token, ._field_Ident=(*(*_10317_p.alloc)._field_Decl.alloc)._field_Ident, ._field_Mutable=(*(*_10317_p.alloc)._field_Decl.alloc)._field_Mutable, ._field_Used=true, ._field_Reference=(*(*_10317_p.alloc)._field_Decl.alloc)._field_Reference, ._field_Kind=jule::new_ptr<_1b4c84ad1_TypeSymbol>(), ._field_Value=jule::new_ptr<_1b4c47830_Value>(_1b4c47830_Value{._field_Data=jule::new_ptr<_1b4c466a8_Data>()}), });;
				{
					
					if (_1b4b354cb_IsSelf((*_10317_p.alloc)._field_Decl)) {
						_case_begin_1ab144120:;
						{
							(*((*(_10813_v))._field_Kind))._field_Kind=jule::new_ptr<_1b4c7c90e_TypeKind>(_1b4c7c90e_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait((*((*(_9844_f))))._field_Owner, (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data0)});
							(*_10813_v.alloc)._field_Reference=(!(_1b4b35762_IsRef((*_10317_p.alloc)._field_Decl)));
							if (_1b4b35762_IsRef((*_10317_p.alloc)._field_Decl)) {
								((*(_10813_v))._field_Ident).mut_slice(1LL);;
								(*((*(*_10813_v.alloc)._field_Kind.alloc)._field_Kind))._field_Kind=jule::Trait(jule::new_ptr<_1b4c89014_Sptr>(_1b4c89014_Sptr{._field_Elem=jule::new_ptr<_1b4c7c90e_TypeKind>(_1b4c7c90e_TypeKind{._field_BindIdent=(*(*(*_10813_v.alloc)._field_Kind.alloc)._field_Kind.alloc)._field_BindIdent, ._field_Kind=(*(*(*_10813_v.alloc)._field_Kind.alloc)._field_Kind.alloc)._field_Kind})}), (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data21);
							};
						}
					}
					else if ((*(*_10317_p.alloc)._field_Decl.alloc)._field_Variadic) {
						_case_begin_1ab143d56:;
						{
							(*((*(_10813_v))._field_Kind))._field_Kind=jule::new_ptr<_1b4c7c90e_TypeKind>(_1b4c7c90e_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1b4c899d7_Slc>(_1b4c899d7_Slc{._field_Elem=jule::new_ptr<_1b4c7c90e_TypeKind>(_1b4c7c90e_TypeKind{._field_BindIdent=(*((*_10317_p.alloc)._field_Kind))._field_BindIdent, ._field_Kind=(*(*_10317_p.alloc)._field_Kind.alloc)._field_Kind})}), (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data22)});
						}
					}
					else {
						_case_begin_1ab143ce0:;
						{
							(*((*(_10813_v))._field_Kind))._field_Kind=(*_10317_p.alloc)._field_Kind;
						}
					}
					_match_end_1ab143bbe:;
				};
				{ jule::Slice<jule::Ptr<_1b4bddaa1_Var>> &__jule_push_dest = (*(_9825_dest)); __jule_push_dest.push(_10813_v); };
			}
			_iter_next_1ab13a457:;
			++it;
			goto _iter_begin_1ab13a457;
		}
		_iter_end_1ab13a457:;
	};
}



inline void _1b4bb9609_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1b4c7bb1c_TypeAlias>>* _15834_dest, jule::Ptr<_1b4b39865_FnIns>* _15859_f) {
	jule::I64 _1599_size = (*((*(_15859_f))))._field_Generics.len();;
	if (((*((*((*(_15859_f))))._field_Decl))._field_Owner != nullptr)) {
		_1599_size+=(*(*(*((*(_15859_f))))._field_Decl.alloc)._field_Owner.alloc)._field_Generics.len();
	};
	if ((_1599_size == 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_15859_f))))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab14c524:;
		if (it != expr_end) {
			jule::I64 _16810_i = it - expr->begin();
			jule::Ptr<_1b4c7b028_InsGeneric> _16817_g = *it;
			{
				jule::Ptr<_1b4b07dc7_GenericDecl> _16913_decl = (*(*((*(_15859_f))))._field_Decl.alloc)._field_Generics[_16810_i];;
				{ jule::Slice<jule::Ptr<_1b4c7bb1c_TypeAlias>> &__jule_push_dest = (*(_15834_dest)); __jule_push_dest.push(jule::new_ptr<_1b4c7bb1c_TypeAlias>(_1b4c7bb1c_TypeAlias{._field_Scope=(*(*((*(_15859_f))))._field_Decl.alloc)._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=(*_16913_decl.alloc)._field_Token, ._field_Ident=(*(_16913_decl))._field_Ident, ._field_Kind=jule::new_ptr<_1b4c84ad1_TypeSymbol>(_1b4c84ad1_TypeSymbol{._field_Kind=(*(_16817_g))._field_Kind}), })); };
			}
			_iter_next_1ab14c524:;
			++it;
			_16810_i++;
			goto _iter_begin_1ab14c524;
		}
		_iter_end_1ab14c524:;
	};
	if (((*(*((*(_15859_f))))._field_Decl.alloc)._field_Owner != nullptr)) {
		jule::Ptr<_1b4b24641_StructIns> _18113_owner = (*((*(_15859_f))))._field_Owner;;
		{
			auto expr = &((*_18113_owner.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ab14ee0b:;
			if (it != expr_end) {
				jule::I64 _18214_i = it - expr->begin();
				jule::Ptr<_1b4c7b028_InsGeneric> _18221_g = *it;
				{
					jule::Ptr<_1b4b07dc7_GenericDecl> _18317_decl = (*((*(_18113_owner))._field_Decl))._field_Generics[_18214_i];;
					{ jule::Slice<jule::Ptr<_1b4c7bb1c_TypeAlias>> &__jule_push_dest = (*(_15834_dest)); __jule_push_dest.push(jule::new_ptr<_1b4c7bb1c_TypeAlias>(_1b4c7bb1c_TypeAlias{._field_Scope=(*(*((*(_15859_f))))._field_Decl.alloc)._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=(*_18317_decl.alloc)._field_Token, ._field_Ident=(*(_18317_decl))._field_Ident, ._field_Kind=jule::new_ptr<_1b4c84ad1_TypeSymbol>(_1b4c84ad1_TypeSymbol{._field_Kind=(*(_18221_g))._field_Kind}), })); };
				}
				_iter_next_1ab14ee0b:;
				++it;
				_18214_i++;
				goto _iter_begin_1ab14ee0b;
			}
			_iter_end_1ab14ee0b:;
		};
	};
}



inline jule::Ptr<_1b4c41340_SymbolTable> _1b4bb997d_findFile(jule::Slice<jule::Ptr<_1b4c41340_SymbolTable>>* _19618_files, jule::Ptr<_1b4adae98_File>* _19642_handler) {
	{
		auto expr = _19618_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab14cc1c:;
		if (it != expr_end) {
			jule::Ptr<_1b4c41340_SymbolTable> _19717_fl = *it;
			{
				if (((*(_19717_fl))._field_File == (*(_19642_handler)))) {
					return _19717_fl;;
				};
			}
			_iter_next_1ab14cc1c:;
			++it;
			goto _iter_begin_1ab14cc1c;
		}
		_iter_end_1ab14cc1c:;
	};
	return nullptr;;
}



inline void _1b4bb9e34_pushSuggestion(_1cb285120_Log* _20530_log, jule::Str _20541_fmt, jule::Slice<jule::Any> _20554_args) {
	(*(_20530_log))._field_Suggestion=_1cb285582_Logf(_20541_fmt, _20554_args);
}



inline void _1b4bdc286_pushImplemented(jule::Ptr<_1b4b49c3d_Trait> _288224_t, jule::Ptr<_1b4b218b3_Struct>* _288240_d) {
	_julec_label_1ab154949:;
	{
		
		if (((*(_288224_t))._field_Implemented.len() > 0LL)) {
			_case_begin_1ab1551a8:;
			{
				{
					auto expr = &((*_288224_t.alloc)._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab156220:;
					if (it != expr_end) {
						jule::Ptr<_1b4b218b3_Struct> _288616_s = *it;
						{
							if ((_288616_s == (*(_288240_d)))) {
								goto _match_end_1ab154c79;
							};
						}
						_iter_next_1ab156220:;
						++it;
						goto _iter_begin_1ab156220;
					}
					_iter_end_1ab156220:;
				};
				goto _case_begin_1ab154d23;
			}
		}
		else {
			_case_begin_1ab154d23:;
			{
				(*(_288224_t))._field_Implemented=jule::append((*_288224_t.alloc)._field_Implemented,jule::Slice<jule::Ptr<_1b4b218b3_Struct>>::make({(*(_288240_d))}));
			}
		}
		_match_end_1ab154c79:;
	};
	{
		auto expr = &((*(_288224_t))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab156594:;
		if (it != expr_end) {
			jule::Ptr<_1b4c84ad1_TypeSymbol> _289517_i = *it;
			{
				_1b4bdc286_pushImplemented(_1b4c81869_Trait((*(_289517_i))._field_Kind.ptr()), _288240_d);
			}
			_iter_next_1ab156594:;
			++it;
			goto _iter_begin_1ab156594;
		}
		_iter_end_1ab156594:;
	};
}



inline void _1b4bdc572_pushImplements(jule::Ptr<_1b4b218b3_Struct>* _290024_s, jule::Ptr<_1b4b49c3d_Trait> _290040_t) {
	_julec_label_1ab1579a2:;
	{
		
		if (((*((*(_290024_s))))._field_Implements.len() > 0LL)) {
			_case_begin_1ab158123:;
			{
				{
					auto expr = &((*((*(_290024_s))))._field_Implements);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab15918a:;
					if (it != expr_end) {
						jule::Ptr<_1b4b49c3d_Trait> _290416_b = *it;
						{
							if ((_290416_b == _290040_t)) {
								goto _match_end_1ab157be4;
							};
						}
						_iter_next_1ab15918a:;
						++it;
						goto _iter_begin_1ab15918a;
					}
					_iter_end_1ab15918a:;
				};
				goto _case_begin_1ab157c8d;
			}
		}
		else {
			_case_begin_1ab157c8d:;
			{
				{ jule::Slice<jule::Ptr<_1b4b49c3d_Trait>> &__jule_push_dest = (*((*(_290024_s))))._field_Implements; __jule_push_dest.push(_290040_t); };
			}
		}
		_match_end_1ab157be4:;
	};
	{
		auto expr = &((*(_290040_t))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab15950e:;
		if (it != expr_end) {
			jule::Ptr<_1b4c84ad1_TypeSymbol> _291317_i = *it;
			{
				_1b4bdc572_pushImplements(_290024_s, _1b4c81869_Trait((*(_291317_i))._field_Kind.ptr()));
			}
			_iter_next_1ab15950e:;
			++it;
			goto _iter_begin_1ab15950e;
		}
		_iter_end_1ab15950e:;
	};
}



inline jule::Bool _1b4c2be1e_traitHasReferenceReceiver(jule::Ptr<_1b4b49c3d_Trait>* _2831_t) {
	{
		auto expr = &((*((*(_2831_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab3e73a1:;
		if (it != expr_end) {
			jule::Ptr<_1b4b36884_Fn> *_2912_f = it;
			{
				if ((*((*(_2912_f))))._field_Statically) {
					goto _iter_next_1ab3e73a1;
				};
				jule::Ptr<_1b4b34db0_Param> _359_p = (*(*(_2912_f)).alloc)._field_Params[0LL];;
				if ((_1b4b35762_IsRef(_359_p.ptr()) && _1b4b354cb_IsSelf(_359_p))) {
					return true;;
				};
			}
			_iter_next_1ab3e73a1:;
			++it;
			goto _iter_begin_1ab3e73a1;
		}
		_iter_end_1ab3e73a1:;
	};
	return false;;
}



inline jule::Bool _1b4c2c2c6_floatAssignable(jule::Str* _4321_kind, jule::Ptr<_1b4c466a8_Data>* _4333_d) {
	jule::Str _445_value = _1b272d637_FmtFloat(_1b27561ba_AsF64((*((*(_4333_d))))._field_Constant.ptr()), 'g', -1LL, 64LL);;
	return _1b2748d17_CheckBitFloat(_445_value, _1b2747871_BitsizeOf((*(_4321_kind))));;
}



inline jule::Bool _1b4c2c64a_sigAssignable(jule::Str _4818_kind, jule::Ptr<_1b4c466a8_Data>* _4830_d) {
	jule::F64 _495_min = _1b274e009_Min(_4818_kind);;
	jule::F64 _505_max = _1b274e290_Max(_4818_kind);;
	{
		
		if (_1b2758013_IsF64((*((*(_4830_d))))._field_Constant.ptr())) {
			_case_begin_1ab3eaddd:;
			{
				jule::F64 _539_x = _1b2755917_ReadF64((*((*(_4830_d))))._field_Constant);;
				jule::F64 _549_i;
				jule::F64 _5412_frac;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1b2704388_Modf(_539_x);
					_549_i = __jule_assign_result.__jule_result_arg0;
					_5412_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_5412_frac != 0LL)) {
					return false;;
				};
				return ((_549_i >= _495_min) && (_549_i <= _505_max));;
			}
		}
		else if (_1b2757760_IsU64((*((*(_4830_d))))._field_Constant.ptr())) {
			_case_begin_1ab3eae54:;
			{
				jule::F64 _609_x = _1b27561ba_AsF64((*((*(_4830_d))))._field_Constant);;
				if ((_609_x <= _505_max)) {
					return true;;
				};
			}
		}
		else if (_1b27574c9_IsI64((*((*(_4830_d))))._field_Constant.ptr())) {
			_case_begin_1ab3eaecb:;
			{
				jule::F64 _659_x = _1b27561ba_AsF64((*((*(_4830_d))))._field_Constant);;
				return ((_495_min <= _659_x) && (_659_x <= _505_max));;
			}
		}
		_match_end_1ab3eaccd:;
	};
	return false;;
}



inline jule::Bool _1b4c2ca13_unsigAssignable(jule::Str _7120_kind, jule::Ptr<_1b4c466a8_Data>* _7132_d) {
	jule::F64 _725_max = _1b274e290_Max(_7120_kind);;
	if (((*((*(_7132_d))))._field_IsRune && _7120_kind.equal("u8", 2))) {
		return _1b4c10661_IsAscii(static_cast<jule::I32>(_1b2754dcd_ReadI64((*((*(_7132_d))))._field_Constant.ptr())));;
	};
	{
		
		if (_1b2758013_IsF64((*((*(_7132_d))))._field_Constant)) {
			_case_begin_1ab401a81:;
			{
				jule::F64 _799_x = _1b2755917_ReadF64((*((*(_7132_d))))._field_Constant);;
				if ((_799_x < 0LL)) {
					return false;;
				};
				jule::F64 _839_i;
				jule::F64 _8312_frac;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1b2704388_Modf(_799_x);
					_839_i = __jule_assign_result.__jule_result_arg0;
					_8312_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_8312_frac != 0LL)) {
					return false;;
				};
				return (_839_i <= _725_max);;
			}
		}
		else if (_1b2757760_IsU64((*((*(_7132_d))))._field_Constant)) {
			_case_begin_1ab401ae7:;
			{
				jule::F64 _899_x = _1b27561ba_AsF64((*((*(_7132_d))))._field_Constant);;
				if ((_899_x <= _725_max)) {
					return true;;
				};
			}
		}
		else if (_1b27574c9_IsI64((*((*(_7132_d))))._field_Constant)) {
			_case_begin_1ab401b5d:;
			{
				jule::F64 _949_x = _1b27561ba_AsF64((*((*(_7132_d))))._field_Constant);;
				return ((0LL <= _949_x) && (_949_x <= _725_max));;
			}
		}
		_match_end_1ab4011e0:;
	};
	return false;;
}



inline jule::Bool _1b4c2cd87_intAssignable(jule::Str _10018_kind, jule::Ptr<_1b4c466a8_Data>* _10030_d) {
	{
		
		if (_1b27522b5_IsSigInt(_10018_kind)) {
			_case_begin_1ab40b580:;
			{
				return _1b4c2c64a_sigAssignable(_10018_kind, _10030_d);;
			}
		}
		else if (_1b27525c3_IsUnsigInt(_10018_kind)) {
			_case_begin_1ab40b618:;
			{
				return _1b4c2ca13_unsigAssignable(_10018_kind, _10030_d);;
			}
		}
		else {
			_case_begin_1ab40b096:;
			{
				return false;;
			}
		}
		_match_end_1ab40aeca:;
	};
}



inline void _1b4c392a0_checkMutRiskOfStructLit(jule::Ptr<_1b4bbac37_Sema>* _92033_s, jule::Ptr<_1b4b297de_StructLitExprModel>* _92044_m) {
	{
		auto expr = &((*((*(_92044_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab40c691:;
		if (it != expr_end) {
			jule::Ptr<_1b4b29448_StructArgExprModel> *_92112_arg = it;
			{
				if ((*((*((*((*(_92112_arg))))._field_Field))._field_Decl))._field_Mutable) {
					goto _iter_next_1ab40c691;
				};
				if (((!((*((*(*(_92112_arg)).alloc)._field_Expr))._field_Mutable)) && _1b4c7e290_Mutable((*(*(*(_92112_arg)).alloc)._field_Expr.alloc)._field_Kind.ptr()))) {
					_1b4bbd872_pushErr((*(_92033_s)).ptr(), (*(*(_92112_arg)).alloc)._field_Token, jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_1b4c7ccc7_Str((*(*(*(_92112_arg)).alloc)._field_Expr.alloc)._field_Kind), &__jule_any_type4)}));
				};
			}
			_iter_next_1ab40c691:;
			++it;
			goto _iter_begin_1ab40c691;
		}
		_iter_end_1ab40c691:;
	};
}



inline jule::Ptr<_1b4c7c90e_TypeKind> _1b4c400db_lenKind(void) {
	return _1b4d6121d_primInt;;
}



inline jule::Bool _1b4c4043d_isGoodValueToInfer(jule::Ptr<_1b4c466a8_Data>* _142124_d) {
	return (!(_1b4c46a93_IsNil((*(_142124_d)).ptr())));;
}



inline jule::Ptr<_1b4aea0d9_Directive> _1b4c74dac_findDirective(jule::Slice<jule::Ptr<_1b4aea0d9_Directive>>* _425923_directives, jule::Str _425954_d) {
	{
		auto expr = _425923_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab546676:;
		if (it != expr_end) {
			jule::Ptr<_1b4aea0d9_Directive> _426017_dr = *it;
			{
				if (((*((*(_426017_dr))._field_Tag))._field_Kind == _425954_d)) {
					return _426017_dr;;
				};
			}
			_iter_next_1ab546676:;
			++it;
			goto _iter_begin_1ab546676;
		}
		_iter_end_1ab546676:;
	};
	return nullptr;;
}



inline jule::Any _1b4c75275_findBuiltinsImport(jule::Str* _426824_ident, jule::Ptr<_1b4b9a893_ImportInfo> _426836_imp) {
	return _1b4d6482b_findPackageBuiltinDef(&((*(_426836_imp))._field_LinkPath), _426824_ident);;
}



inline void _1b4c754a6_fitBitsize(jule::Ptr<_1b4c466a8_Data>* _427720_d) {
	jule::Ptr<_1b4c854d8_Prim> _42789_prim = _1b4c80060_Prim((*((*(_427720_d))))._field_Kind.ptr());;
	jule::I64 _42795_z = _1b2747871_BitsizeOf(_1b4c85829_Str(_42789_prim.ptr()));;
	{
		
		if (_1b27574c9_IsI64((*((*(_427720_d))))._field_Constant.ptr())) {
			_case_begin_1ab548e5e:;
			{
				jule::I64 _42829_k = _1b274939a_BitsizeOfInt(_1b2754dcd_ReadI64((*((*(_427720_d))))._field_Constant));;
				if (((_42829_k > _42795_z) || _1b27525c3_IsUnsigInt((*_42789_prim.alloc)._field_Kind))) {
					(*(*((*(_427720_d))))._field_Constant.alloc)._field_Kind=_1b2747bb2_IntFromBits(_42829_k);
					(*((*(_427720_d))))._field_Kind=(*((*(_1b4d63572_findBuiltinTypeAlias((*(*((*(_427720_d))))._field_Constant.alloc)._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		else if (_1b2757760_IsU64((*((*(_427720_d))))._field_Constant.ptr())) {
			_case_begin_1ab548ec5:;
			{
				jule::I64 _42889_k = _1b2749664_BitsizeOfUint(_1b2755164_ReadU64((*((*(_427720_d))))._field_Constant));;
				if (((_42889_k > _42795_z) || _1b27522b5_IsSigInt((*_42789_prim.alloc)._field_Kind))) {
					(*(*((*(_427720_d))))._field_Constant.alloc)._field_Kind=_1b2747e48_UintFromBits(_42889_k);
					(*((*(_427720_d))))._field_Kind=(*((*(_1b4d63572_findBuiltinTypeAlias((*(*((*(_427720_d))))._field_Constant.alloc)._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		else if (_1b2758013_IsF64((*((*(_427720_d))))._field_Constant.ptr())) {
			_case_begin_1ab54904c:;
			{
				if ((_42795_z == 64LLU)) {
					return;;
				};
				jule::I64 _42989_k = _1b27490d1_BitsizeOfFloat(_1b2755917_ReadF64((*((*(_427720_d))))._field_Constant));;
				if ((_42989_k > _42795_z)) {
					(*(*((*(_427720_d))))._field_Constant.alloc)._field_Kind=_1b2748212_FloatFromBits(_42989_k);
					(*((*(_427720_d))))._field_Kind=(*((*(_1b4d63572_findBuiltinTypeAlias((*(*((*(_427720_d))))._field_Constant.alloc)._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		_match_end_1ab548d4e:;
	};
}



inline void _1b4c757d6_makeStructLitAlloc(jule::Ptr<_1b4c466a8_Data>* _430628_d, jule::Ptr<_1b4b297de_StructLitExprModel>* _430643_lit) {
	(*((*(_430628_d))))._field_Kind=jule::new_ptr<_1b4c7c90e_TypeKind>(_1b4c7c90e_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1b4c89014_Sptr>(_1b4c89014_Sptr{._field_Elem=jule::new_ptr<_1b4c7c90e_TypeKind>(_1b4c7c90e_TypeKind{._field_Kind=jule::Trait((*((*(_430643_lit))))._field_Strct, (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data0)})}), (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data21)});
	(*((*(_430628_d))))._field_Model=jule::Any(jule::new_ptr<_1b4b29adb_AllocStructLitExprModel>(_1b4b29adb_AllocStructLitExprModel{._field_Lit=(*(_430643_lit))}), &__jule_any_type112);
}



inline jule::Ptr<_1b4bddaa1_Var> _1b4c75b5a_buildErrorVar(jule::Ptr<_1b4b7880a_Scope>* _431723_s, jule::Ptr<_1b4b03c2a_FnCallExpr>* _431739_fc) {
	return jule::new_ptr<_1b4bddaa1_Var>(_1b4bddaa1_Var{._field_Scope=(*(_431723_s)), ._field_Token=(*((*(_431739_fc))))._field_Token, ._field_Ident=jule::Str::lit("error", 5), ._field_Mutable=true, ._field_Used=true, ._field_Reference=false, ._field_Kind=(*(_1b4d63572_findBuiltinTypeAlias(jule::Str::lit("any", 3))))._field_Kind, ._field_Value=jule::new_ptr<_1b4c47830_Value>(_1b4c47830_Value{._field_Data=jule::new_ptr<_1b4c466a8_Data>()}), });;
}



inline jule::Any _1b4c75ece_findBuiltinsSema(jule::Str* _433222_ident, jule::Ptr<_1b4bbac37_Sema> _433238_s) {
	{
		auto expr = &((*((*(_433238_s))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab555597:;
		if (it != expr_end) {
			jule::Ptr<_1b4b9a893_ImportInfo> _433317_imp = *it;
			{
				if (((*(_433317_imp))._field_ImportAll || _1b4b9d225_existIdent(_433317_imp, (*(_433222_ident))))) {
					jule::Any _433517_def = _1b4c75275_findBuiltinsImport(_433222_ident, _433317_imp);;
					if ((_433517_def != nullptr)) {
						return _433517_def;;
					};
				};
			}
			_iter_next_1ab555597:;
			++it;
			goto _iter_begin_1ab555597;
		}
		_iter_end_1ab555597:;
	};
	jule::Str _43439_ppath = _1b4adb64c_Dir((*(*_433238_s.alloc)._field_file.alloc)._field_File.ptr());;
	if (_1cb1bdb19_HasPrefix(_43439_ppath, _1cb39d9db_PathStdlib)) {
		(_43439_ppath).mut_slice(_1cb39d9db_PathStdlib.len());;
		_43439_ppath=(jule::Str::lit("std", 3) + _1cb1c44b0_Replace(_43439_ppath, jule::Str::lit("/", 1), jule::Str::lit("::", 2), -1LL));
		return _1b4d6482b_findPackageBuiltinDef(&(_43439_ppath), _433222_ident);;
	};
	return nullptr;;
}



inline jule::Bool _1b4c76298_isOkForShifting(jule::Ptr<_1b4c466a8_Data>* _435725_d) {
	if (_1b4c470b0_IsConst((*(_435725_d)).ptr())) {
		{
			
			if (_1b27574c9_IsI64((*((*(_435725_d))))._field_Constant.ptr())) {
				_case_begin_1ab5589a7:;
				{
					return (_1b2754dcd_ReadI64((*((*(_435725_d))))._field_Constant) >= 0LL);;
				}
			}
			else if (_1b2757760_IsU64((*((*(_435725_d))))._field_Constant.ptr())) {
				_case_begin_1ab558a51:;
				{
					return true;;
				}
			}
			else if (_1b2758013_IsF64((*((*(_435725_d))))._field_Constant.ptr())) {
				_case_begin_1ab558ac8:;
				{
					return (_1b2755917_ReadF64((*((*(_435725_d))))._field_Constant) >= 0LL);;
				}
			}
			else {
				_case_begin_1ab55891e:;
				{
					return false;;
				}
			}
			_match_end_1ab558853:;
		};
	};
	jule::Ptr<_1b4c854d8_Prim> _43705_prim = _1b4c80060_Prim((*((*(_435725_d))))._field_Kind.ptr());;
	return ((_43705_prim != nullptr) && _1b275288c_IsInt(_1b4c85829_Str(_43705_prim)));;
}



inline jule::Bool _1b4c76672_isInstancedStruct(jule::Ptr<_1b4b24641_StructIns> _437422_s) {
	return ((*((*(_437422_s))._field_Decl))._field_Generics.len() == (*_437422_s.alloc)._field_Generics.len());;
}



inline jule::Bool _1b4c7696e_isPtrArithmeticCompatible(jule::Ptr<_1b4c466a8_Data>* _437835_l, jule::Ptr<_1b4c466a8_Data>* _437850_r) {
	jule::Ptr<_1b4c8c7cb_Ptr> _43795_ptr = _1b4c8057c_Ptr((*((*(_437850_r))))._field_Kind.ptr());;
	if ((_43795_ptr != nullptr)) {
		return _1b4c7d118_Equal((*(_1b4c8057c_Ptr((*((*(_437835_l))))._field_Kind)))._field_Elem, (*_43795_ptr.alloc)._field_Elem);;
	};
	if (_1b4c470b0_IsConst((*(_437850_r)).ptr())) {
		return _1b4c2cd87_intAssignable(jule::Str::lit("int", 3), _437850_r);;
	};
	_1b4c2d371_typeCompatibilityChecker _43869_tcc = _1b4c2d371_typeCompatibilityChecker{._field_dest=_1b4d6121d_primInt, ._field_src=(*((*(_437850_r))))._field_Kind, };;
	return _1b4c2ea37_check(&_43869_tcc);;
}



inline void _1b4c76d15_applyCastKindModel(jule::Ptr<_1b4c466a8_Data>* _439328_d, jule::Ptr<_1b4c7c90e_TypeKind>* _439343_t, jule::Ptr<_1b4ad5712_Token>* _439362_token) {
	(*((*(_439328_d))))._field_Model=jule::Any(jule::new_ptr<_1b4b2a16e_CastingExprModel>(_1b4b2a16e_CastingExprModel{._field_Token=(*(_439362_token)), ._field_Expr=jule::new_ptr<_1b4c466a8_Data>((*((*(_439328_d))))), ._field_Kind=(*(_439343_t)), ._field_ExprKind=(*((*(_439328_d))))._field_Kind}), &__jule_any_type93);
}



inline void _1b4c771ab_applyCastKind(jule::Ptr<_1b4c466a8_Data>* _440223_d, jule::Ptr<_1b4c7c90e_TypeKind>* _440238_t, jule::Ptr<_1b4ad5712_Token>* _440257_token) {
	_1b4c76d15_applyCastKindModel(_440223_d, _440238_t, _440257_token);
	(*((*(_440223_d))))._field_Kind=(*(_440238_t));
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c773ba_buildVoidData(void) {
	return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=_1b4d5ee86_primVoid, });;
}



inline jule::Str _1b4c7773e_checkDataForIntegerIndexing(jule::Ptr<_1b4c466a8_Data>* _441337_d, jule::Ptr<_1b4ad5712_Token>* _441352_token) {
	jule::Str __jule_func_result = jule::Str();
	if (((*(_441337_d)) == nullptr)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	{
		
		if ((_1b4c80060_Prim((*((*(_441337_d))))._field_Kind.ptr()) == nullptr)) {
			_case_begin_1ab5680d2:;
			{
				__jule_func_result = jule::Str::lit("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if ((!(_1b275288c_IsInt(_1b4c85829_Str(_1b4c80060_Prim((*((*(_441337_d))))._field_Kind.ptr()).ptr()))))) {
			_case_begin_1ab568148:;
			{
				__jule_func_result = jule::Str::lit("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if (_1b4c470b0_IsConst((*(_441337_d)).ptr())) {
			_case_begin_1ab5681ae:;
			{
				if ((_1b27561ba_AsF64((*((*(_441337_d))))._field_Constant.ptr()) < 0LL)) {
					__jule_func_result = jule::Str::lit("overflow the limit of data-type", 31);
					return __jule_func_result;;
				};
			}
		}
		else if ((_1b4c80060_Prim((*((*(_441337_d))))._field_Kind.ptr()) == nullptr) || _1b4c470b0_IsConst((*(_441337_d)).ptr()) || (_1b27475a7_RealKindOf(_1b4c85829_Str(_1b4c80060_Prim((*((*(_441337_d))))._field_Kind).ptr())) != _1b27475a7_RealKindOf(jule::Str::lit("int", 3)))) {
			_case_begin_1ab568225:;
			{
				_1b4c771ab_applyCastKind(_441337_d, &(_1b4d6121d_primInt), _441352_token);
			}
		}
		_match_end_1ab568027:;
	};
	__jule_func_result = jule::Str();
	return __jule_func_result;;
}



inline void _1b4c77ad5_applyCastModelByEnum(jule::Ptr<_1b4c466a8_Data>* _443830_d, jule::Ptr<_1b4b4c449_Enum> _443844_e, jule::Ptr<_1b4ad5712_Token>* _443859_token) {
	if ((_443844_e == nullptr)) {
		return;;
	};
	jule::Ptr<_1b4c854d8_Prim> _44425_p = _1b4c80060_Prim((*((*(_443844_e))._field_Kind))._field_Kind.ptr());;
	if (_1b4c88970_IsStr(_44425_p.ptr())) {
		return;;
	};
	_1b4c76d15_applyCastKindModel(_443830_d, &((*(*(_443844_e))._field_Kind.alloc)._field_Kind), _443859_token);
}



inline void _1b4c77dc1_castConstByType(jule::Str* _444921_t, jule::Ptr<_1b4c466a8_Data>* _444934_d) {
	{
		
		if (_1b27522b5_IsSigInt((*(_444921_t)))) {
			_case_begin_1ab56e02d:;
			{
				{
					auto _match_expr{ _1b2747871_BitsizeOf(_1b27475a7_RealKindOf((*(_444921_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1ab56eade:;
						{
							_1b2756473_SetI64((*((*(_444934_d))))._field_Constant.ptr(), _1b2755b9d_AsI64((*((*(_444934_d))))._field_Constant));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1ab56eb66:;
						{
							_1b2756473_SetI64((*((*(_444934_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I32>(_1b2755b9d_AsI64((*((*(_444934_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1ab56ebcc:;
						{
							_1b2756473_SetI64((*((*(_444934_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I16>(_1b2755b9d_AsI64((*((*(_444934_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1ab56ec43:;
						{
							_1b2756473_SetI64((*((*(_444934_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I8>(_1b2755b9d_AsI64((*((*(_444934_d))))._field_Constant))));
						}
					}
					_match_end_1ab56e7c0:;
				};
			}
		}
		else if (_1b27525c3_IsUnsigInt((*(_444921_t)))) {
			_case_begin_1ab56e0c7:;
			{
				{
					auto _match_expr{ _1b2747871_BitsizeOf(_1b27475a7_RealKindOf((*(_444921_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1ab573c25:;
						{
							_1b275672b_SetU64((*((*(_444934_d))))._field_Constant.ptr(), _1b2755e34_AsU64((*((*(_444934_d))))._field_Constant));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1ab573c9c:;
						{
							_1b275672b_SetU64((*((*(_444934_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U32>(_1b2755e34_AsU64((*((*(_444934_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1ab573d13:;
						{
							_1b275672b_SetU64((*((*(_444934_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U16>(_1b2755e34_AsU64((*((*(_444934_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1ab573d79:;
						{
							_1b275672b_SetU64((*((*(_444934_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U8>(_1b2755e34_AsU64((*((*(_444934_d))))._field_Constant))));
						}
					}
					_match_end_1ab572be1:;
				};
			}
		}
		else if (_1b2752bcd_IsFloat((*(_444921_t)))) {
			_case_begin_1ab56e13d:;
			{
				{
					auto _match_expr{ _1b2747871_BitsizeOf(_1b27475a7_RealKindOf((*(_444921_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1ab5741ba:;
						{
							_1b2757045_SetF64((*((*(_444934_d))))._field_Constant.ptr(), _1b27561ba_AsF64((*((*(_444934_d))))._field_Constant));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1ab577d7d:;
						{
							_1b2757045_SetF64((*((*(_444934_d))))._field_Constant.ptr(), static_cast<jule::F64>(static_cast<jule::F32>(_1b27561ba_AsF64((*((*(_444934_d))))._field_Constant))));
						}
					}
					_match_end_1ab576d27:;
				};
			}
		}
		_match_end_1ab56ddc9:;
	};
}



inline void _1b4c783dd_updateModelToGenericIns(jule::Any* _448333_m, jule::Ptr<_1b4b39865_FnIns>* _448352_f) {
	{
		auto &_match_expr{ (*(_448333_m)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1ab56e43a:;
			{
				(*(_448333_m))=jule::Any((*(_448352_f)), &__jule_any_type7);
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1ab578345:;
			{
				(*((*(_448333_m)).cast_ptr<_1b4b2d68e_StructSubIdentExprModel>(&__jule_any_type98)))._field_Method=(*(_448352_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1ab56e4c3:;
			{
				(*((*(_448333_m)).cast_ptr<_1b4b2da35_StructStaticIdentExprModel>(&__jule_any_type96)))._field_Method=(*(_448352_f));
			}
		}
		_match_end_1ab578268:;
	};
}



inline jule::Bool _1b4c78652_pushSubIdentFromExpr(jule::Any _449429_expr, jule::Ptr<_1b4aeb591_SubIdentTypeDecl>* _449450_t) {
	{
		auto &_match_expr{ _449429_expr };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1ab57a8ec:;
			{
				jule::Ptr<_1b4b0181b_IdentExpr> _449713_e = _449429_expr.unsafe_cast_ptr<_1b4b0181b_IdentExpr>();;
				{ jule::Slice<jule::Ptr<_1b4aeb2c7_IdentTypeDecl>> &__jule_push_dest = (*((*(_449450_t))))._field_Idents; __jule_push_dest.push(jule::new_ptr<_1b4aeb2c7_IdentTypeDecl>(_1b4aeb2c7_IdentTypeDecl{._field_Token=(*(_449713_e))._field_Token, ._field_Ident=(*_449713_e.alloc)._field_Ident, })); };
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1ab57bb95:;
			{
				jule::Ptr<_1b4b03114_SubIdentExpr> _450313_e = _449429_expr.unsafe_cast_ptr<_1b4b03114_SubIdentExpr>();;
				if ((!(_1b4c78652_pushSubIdentFromExpr((*((*(_450313_e))._field_Expr))._field_Kind, _449450_t)))) {
					return false;;
				};
				{ jule::Slice<jule::Ptr<_1b4aeb2c7_IdentTypeDecl>> &__jule_push_dest = (*((*(_449450_t))))._field_Idents; __jule_push_dest.push(jule::new_ptr<_1b4aeb2c7_IdentTypeDecl>(_1b4aeb2c7_IdentTypeDecl{._field_Token=(*_450313_e.alloc)._field_Ident, ._field_Ident=(*((*_450313_e.alloc)._field_Ident))._field_Kind, })); };
			}
		}
		else {
			_case_begin_1ab57b6de:;
			{
				return false;;
			}
		}
		_match_end_1ab57a974:;
	};
	return true;;
}



inline jule::Str _1b4c7891b_constoa(jule::Ptr<_1b2753508_Const>* _451713_c) {
	{
		
		if (_1b27574c9_IsI64((*(_451713_c)).ptr())) {
			_case_begin_1ab57ea55:;
			{
				return _1b2745176_FmtInt(_1b2754dcd_ReadI64((*(_451713_c)).ptr()), 10LL);;
			}
		}
		else if (_1b2757760_IsU64((*(_451713_c)).ptr())) {
			_case_begin_1ab57e923:;
			{
				return _1b2744cad_FmtUint(_1b2755164_ReadU64((*(_451713_c)).ptr()), 10LL);;
			}
		}
		else {
			_case_begin_1ab57bd82:;
			{
				return jule::Str();;
			}
		}
		_match_end_1ab57e5c1:;
	};
}



inline jule::Ptr<_1b4c466a8_Data> _1b4c78d4a_evalEnumStatic(jule::Ptr<_1b4b4c449_Enum>* _452824_enm, jule::Ptr<_1b4b4b8cc_EnumItem>* _452841_item, jule::Ptr<_1b4ad5712_Token>* _452863_token) {
	jule::Ptr<_1b4c466a8_Data> _45299_d = jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=jule::new_ptr<_1b4c7c90e_TypeKind>(_1b4c7c90e_TypeKind{._field_Kind=jule::Trait((*(_452824_enm)), (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data3)}), });;
	if (((*(_452841_item)) != nullptr)) {
		(*(_45299_d))._field_Constant=jule::new_ptr<_1b2753508_Const>((*(*((*((*((*(_452841_item))))._field_Value))._field_Data))._field_Constant.alloc));
		(*_45299_d.alloc)._field_Model=jule::Any((*_45299_d.alloc)._field_Constant, &__jule_any_type19);
		_1b4c77ad5_applyCastModelByEnum(&(_45299_d), (*(_452824_enm)), _452863_token);
	};
	return _45299_d;;
}



inline jule::Ptr<_1b4b297de_StructLitExprModel> _1b4c79114_isLitBased(jule::Any* _454520_m) {
	{
		auto &_match_expr{ (*(_454520_m)) };
		
		if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1ab5846a3:;
			{
				return (*(_454520_m)).cast_ptr<_1b4b297de_StructLitExprModel>(&__jule_any_type95);;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1ab584719:;
			{
				return (*((*(_454520_m)).cast_ptr<_1b4b29adb_AllocStructLitExprModel>(&__jule_any_type112)))._field_Lit;;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1ab584780:;
			{
				jule::Ptr<_1b4b2d68e_StructSubIdentExprModel> _455213_ssi = (*(_454520_m)).cast_ptr<_1b4b2d68e_StructSubIdentExprModel>(&__jule_any_type98);;
				return _1b4c79114_isLitBased(&((*((*(_455213_ssi))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1ab5847e6:;
			{
				jule::Ptr<_1b4b2a16e_CastingExprModel> _455513_c = (*(_454520_m)).cast_ptr<_1b4b2a16e_CastingExprModel>(&__jule_any_type93);;
				return _1b4c79114_isLitBased(&((*((*(_455513_c))._field_Expr))._field_Model));;
			}
		}
		else {
			_case_begin_1ab584263:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab58420d:;
	};
}



inline void _1b4c79400_makeImplicitDeref(jule::Ptr<_1b4c466a8_Data>* _456227_d, jule::Ptr<_1b4ad5712_Token> _456241_baseToken) {
	jule::Ptr<_1b4b28e1a_UnaryExprModel> _45639_unary = jule::new_ptr<_1b4b28e1a_UnaryExprModel>(_1b4b28e1a_UnaryExprModel{._field_Expr=jule::new_ptr<_1b4c466a8_Data>((*((*(_456227_d))))), ._field_Op=jule::new_ptr<_1b4ad5712_Token>((*(_456241_baseToken)))});;
	(*((*(_45639_unary))._field_Op))._field_Id=static_cast<jule::U64>(62LLU);
	(*(*_45639_unary.alloc)._field_Op.alloc)._field_Kind=jule::Str::lit("*", 1);
	(*((*(_456227_d))))._field_Model=jule::Any(_45639_unary, &__jule_any_type110);
}



inline void _1ab670e10_updateRefer(jule::Ptr<_1b4b3ca44_ReferenceStack> _457323_ref, jule::Ptr<_1b4b39865_FnIns>* _457346_old, jule::Ptr<_1b4b39865_FnIns>* _457359_new) {
	{
		auto expr = &((*_457323_ref.alloc)._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab6727d5:;
		if (it != expr_end) {
			jule::I64 _45749_i = it - expr->begin();
			jule::Any _457412_sym = *it;
			{
				if ((__jule_any_type7_compare(_457412_sym, (*(_457346_old))))) {
					(*(_457323_ref))._field_buffer[_45749_i]=jule::Any((*(_457359_new)), &__jule_any_type7);
				};
			}
			_iter_next_1ab6727d5:;
			++it;
			_45749_i++;
			goto _iter_begin_1ab6727d5;
		}
		_iter_end_1ab6727d5:;
	};
}



inline void _1b4c79a82_makeVariadic(jule::Ptr<_1b4c466a8_Data>* _458122_d, jule::Ptr<_1b4c7c90e_TypeKind> _458136_elem) {
	(*((*(_458122_d))))._field_Kind=jule::new_ptr<_1b4c7c90e_TypeKind>(_1b4c7c90e_TypeKind{._field_BindIdent=(*_458136_elem.alloc)._field_BindIdent, ._field_Generic=(*(_458136_elem))._field_Generic, ._field_Variadic=true, ._field_Kind=(*_458136_elem.alloc)._field_Kind});
}



inline jule::Bool _1b4c79eb1_isVarCaptured(jule::Ptr<_1b4b80cb8_scopeChecker> _459518_r, jule::Ptr<_1b4b80cb8_scopeChecker> _459540_s, jule::Ptr<_1b4bddaa1_Var> _459558_v) {
	if (((*(_459558_v))._field_Scope == nullptr)) {
		return false;;
	};
	for (;;) {
		{
			if (((*(_459540_s))._field_scope == (*_459558_v.alloc)._field_Scope)) {
				return false;;
			};
			if ((((*_459540_s.alloc)._field_parent == nullptr) || (_459540_s == _459518_r))) {
				goto _iter_end_1ab58ace7;
			};
			_459540_s=(*_459540_s.alloc)._field_parent;
		}
	_iter_next_1ab58ace7:;
	}
	_iter_end_1ab58ace7:;;
	return true;;
}



inline jule::Bool _1b4c98166_kindUsesGenerics(jule::Ptr<_1b4c7c90e_TypeKind>* _171626_k, jule::Slice<jule::Ptr<_1b4b07dc7_GenericDecl>>* _171641_generics) {
	{
		auto expr = _171641_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab9728c6:;
		if (it != expr_end) {
			jule::Ptr<_1b4b07dc7_GenericDecl> *_171712_g = it;
			{
				if (static__1b4c97c37_exist(&((*((*(_171712_g))))._field_Ident), _171626_k)) {
					return true;;
				};
			}
			_iter_next_1ab9728c6:;
			++it;
			goto _iter_begin_1ab9728c6;
		}
		_iter_end_1ab9728c6:;
	};
	return false;;
}



inline jule::Bool _1b4c9852e_hasDirective(jule::Slice<jule::Ptr<_1b4aea0d9_Directive>>* _172622_directives, jule::Str _172653_tag) {
	{
		auto expr = _172622_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab973168:;
		if (it != expr_end) {
			jule::Ptr<_1b4aea0d9_Directive> _172717_dr = *it;
			{
				if (((*((*(_172717_dr))._field_Tag))._field_Kind == _172653_tag)) {
					return true;;
				};
			}
			_iter_next_1ab973168:;
			++it;
			goto _iter_begin_1ab973168;
		}
		_iter_end_1ab973168:;
	};
	return false;;
}



inline jule::Bool _1b4c987e8_canGetPtr(jule::Ptr<_1b4c466a8_Data>* _173519_d) {
	{
		
		if ((!((*((*(_173519_d))))._field_Lvalue)) || _1b4c470b0_IsConst((*(_173519_d)).ptr())) {
			_case_begin_1ab974ab5:;
			{
				return false;;
			}
		}
		else if ((_1b4c8134c_Fn((*((*(_173519_d))))._field_Kind.ptr()) != nullptr) || (_1b4c80813_Enum((*((*(_173519_d))))._field_Kind) != nullptr)) {
			_case_begin_1ab974b4d:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1ab974a4e:;
			{
				return true;;
			}
		}
		_match_end_1ab974026:;
	};
}



inline jule::Bool _1b4c98b39_isValidForSptrType(jule::Ptr<_1b4c7c90e_TypeKind>* _174728_t) {
	jule::Ptr<_1b4b24641_StructIns> _17489_s = _1b4c815d3_Struct((*(_174728_t)).ptr());;
	if ((((_17489_s != nullptr) && ((*_17489_s.alloc)._field_Decl != nullptr)) && (*(*_17489_s.alloc)._field_Decl.alloc)._field_Binded)) {
		return false;;
	};
	return true;;
}



inline jule::Bool _1b4c98dc0_isValidForRef(jule::Ptr<_1b4c7c90e_TypeKind>* _175623_t) {
	return (_1b4c8134c_Fn((*(_175623_t)).ptr()) == nullptr);;
}



inline jule::Bool _1b4c99189_isBuiltinStrConvertable(jule::Ptr<_1b4c7c90e_TypeKind>* _175933_t) {
	return ((((!(_1b4c7dc73_Void((*(_175933_t)).ptr()))) && (_1b4c8134c_Fn((*(_175933_t)).ptr()) == nullptr)) && (_1b4c81d86_Tup((*(_175933_t)).ptr()) == nullptr)) && (!(_1b4c8211c_comptime((*(_175933_t)).ptr()))));;
}



inline jule::Str _1b4c99453_buildLinkPathByTokens(jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _176327_tokens) {
	if ((((*(_176327_tokens)).len() == 1LL) && ((*((*(_176327_tokens))[0LL]))._field_Id == static_cast<jule::U64>(31LLU)))) {
		return jule::Str::lit("std::unsafe", 11);;
	};
	jule::I64 _17679_n = 0LL;;
	{
		auto expr = _176327_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab97a923:;
		if (it != expr_end) {
			jule::Ptr<_1b4ad5712_Token> *_176812_token = it;
			{
				_17679_n+=(*((*(_176812_token))))._field_Kind.len();
				_17679_n+=2LL;
			}
			_iter_next_1ab97a923:;
			++it;
			goto _iter_begin_1ab97a923;
		}
		_iter_end_1ab97a923:;
	};
	_1cb1d27a9_StrBuilder _17729_s = static__1cb1d2a73_New(_17679_n);;
	{
		auto expr = _176327_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab978624:;
		if (it != expr_end) {
			jule::I64 _17739_i = it - expr->begin();
			jule::Ptr<_1b4ad5712_Token> *_177312_token = it;
			{
				_1cb1db3d9_WriteStr(&_17729_s, (*((*(_177312_token))))._field_Kind);
				if ((((*(_176327_tokens)).len() - _17739_i) > 1LL)) {
					_1cb1db3d9_WriteStr(&_17729_s, jule::Str::lit("::", 2));
				};
			}
			_iter_next_1ab978624:;
			++it;
			_17739_i++;
			goto _iter_begin_1ab978624;
		}
		_iter_end_1ab978624:;
	};
	return _1cb1dbbd1_Str(&_17729_s);;
}



inline jule::Ptr<_1b4c854d8_Prim> _1b4c9982c_buildPrimType(jule::Str _178218_kind) {
	return jule::new_ptr<_1b4c854d8_Prim>(_1b4c854d8_Prim{._field_Kind=_178218_kind});;
}



inline void _1b4c99e15_applyImplicitCast(jule::Ptr<_1b4c7c90e_TypeKind>* _181027_dest, jule::Ptr<_1b4c466a8_Data>* _181049_d, jule::Ptr<_1b4ad5712_Token>* _181064_token) {
	if (_1b4c7d9dc_IsNil((*((*(_181049_d))))._field_Kind.ptr())) {
		return;;
	};
	jule::Ptr<_1b4c854d8_Prim> _18145_destPrim = _1b4c80060_Prim((*(_181027_dest)).ptr());;
	if (((_18145_destPrim != nullptr) && _1b4c88c06_IsAny(_18145_destPrim))) {
		jule::Ptr<_1b4c854d8_Prim> _18169_prim = _1b4c80060_Prim((*((*(_181049_d))))._field_Kind);;
		if (((_18169_prim == nullptr) || (!(_1b4c88c06_IsAny(_18169_prim.ptr()))))) {
			_1b4c771ab_applyCastKind(_181049_d, _181027_dest, _181064_token);
		};
		return;;
	};
	jule::Ptr<_1b4b49c3d_Trait> _18235_dt = _1b4c81869_Trait((*(_181027_dest)).ptr());;
	if ((_18235_dt != nullptr)) {
		jule::Ptr<_1b4b49c3d_Trait> _18259_bt = _1b4c81869_Trait((*((*(_181049_d))))._field_Kind);;
		if (((_18259_bt == nullptr) || (_18259_bt != _18235_dt))) {
			_1b4c76d15_applyCastKindModel(_181049_d, _181027_dest, _181064_token);
			return;;
		};
	};
	if (((_1b4c80a99_TypeEnum((*(_181027_dest)).ptr()) != nullptr) && (_1b4c80a99_TypeEnum((*((*(_181049_d))))._field_Kind) == nullptr))) {
		_1b4c76d15_applyCastKindModel(_181049_d, _181027_dest, _181064_token);
		return;;
	};
}



inline jule::Bool _1b4c9a1ce_validTypeForXof(jule::Ptr<_1b4c7c90e_TypeKind>* _183825_t) {
	return ((!(_1b4c7dc73_Void((*(_183825_t)).ptr()))) && (_1b4c8134c_Fn((*(_183825_t)).ptr()) == nullptr));;
}



inline __jule_tuple_x_1b4c41340_SymbolTable__jule_tuple_s_1cb285120_Log _1b4c9d2e2_buildSymbols(jule::Ptr<_1b4ae8ca8_Ast>* _1622_ast, jule::Trait* _1638_importer, jule::Ptr<_1b4b43a06_symbolBuilder> _1662_owner) {
	__jule_tuple_x_1b4c41340_SymbolTable__jule_tuple_s_1cb285120_Log __jule_func_result;
	jule::Ptr<_1b4b43a06_symbolBuilder> _179_sb = jule::new_ptr<_1b4b43a06_symbolBuilder>(_1b4b43a06_symbolBuilder{._field_owner=_1662_owner, ._field_importer=(*(_1638_importer)), ._field_ast=(*(_1622_ast)), });;
	_1b4b49105_build(_179_sb);
	if (((*_179_sb.alloc)._field_errors.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*_179_sb.alloc)._field_table;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = (*_179_sb.alloc)._field_errors;
	return __jule_func_result;;
}



inline __jule_tuple_x_1b4b9d7b9_Package__jule_tuple_s_1cb285120_Log _1b4c9d765_analyzePackage(jule::Slice<jule::Ptr<_1b4ae8ca8_Ast>>* _3024_files, jule::Trait* _3044_importer, jule::I64* _3065_flags) {
	__jule_tuple_x_1b4b9d7b9_Package__jule_tuple_s_1cb285120_Log __jule_func_result;
	jule::Slice<jule::Ptr<_1b4c41340_SymbolTable>> _329_tables = jule::Slice<jule::Ptr<_1b4c41340_SymbolTable>>::alloc(0LL, (*(_3024_files)).len());;
	{
		auto expr = _3024_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba9ed55:;
		if (it != expr_end) {
			jule::Ptr<_1b4ae8ca8_Ast> _3317_f = *it;
			{
				jule::Ptr<_1b4c41340_SymbolTable> _3413_table;
				jule::Slice<_1cb285120_Log> _3424_errors;
				({
					__jule_tuple_x_1b4c41340_SymbolTable__jule_tuple_s_1cb285120_Log __jule_assign_result = _1b4c9d2e2_buildSymbols(&(_3317_f), _3044_importer, nullptr);
					_3413_table = __jule_assign_result.__jule_result_arg0;
					_3424_errors = __jule_assign_result.__jule_result_arg1;
				});
				if ((_3424_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _3424_errors;
					return __jule_func_result;;
				};
				{ jule::Slice<jule::Ptr<_1b4c41340_SymbolTable>> &__jule_push_dest = _329_tables; __jule_push_dest.push(_3413_table); };
			}
			_iter_next_1aba9ed55:;
			++it;
			goto _iter_begin_1aba9ed55;
		}
		_iter_end_1aba9ed55:;
	};
	jule::Ptr<_1b4bbac37_Sema> _419_sema = jule::new_ptr<_1b4bbac37_Sema>(_1b4bbac37_Sema{._field_flags=(*(_3065_flags)), ._field_meta=jule::new_ptr<_1b4bba132_commonSemaMeta>()});;
	_1b4bda4c6_check(_419_sema, &(_329_tables));
	if (((*_419_sema.alloc)._field_errors.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = (*_419_sema.alloc)._field_errors;
		return __jule_func_result;;
	};
	jule::Ptr<_1b4b9d7b9_Package> _509_pkg = jule::new_ptr<_1b4b9d7b9_Package>(_1b4b9d7b9_Package{._field_Files=(*_419_sema.alloc)._field_files});;
	__jule_func_result.__jule_result_arg0 = _509_pkg;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_x_1b4b9d7b9_Package__jule_tuple_s_1cb285120_Log _1b4c9db94_AnalyzePackage(jule::Slice<jule::Ptr<_1b4ae8ca8_Ast>> _7423_files, jule::Trait _7442_importer, jule::I64 _7462_flags) {
	__jule_tuple_x_1b4b9d7b9_Package__jule_tuple_s_1cb285120_Log __jule_func_result;
	if ((_7423_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	__jule_func_result = std::move(_1b4c9d765_analyzePackage(&(_7423_files), &(_7442_importer), &(_7462_flags)));
return __jule_func_result;;
}



inline jule::Ptr<_1b4b39865_FnIns> _1b4d5e56d_findBuiltinFunc(jule::Str* _2621_ident) {
	{
		auto &_match_expr{ (*(_2621_ident)) };
		
		if (_match_expr == jule::Str::lit("out", 3)) {
			_case_begin_1abaa9029:;
			{
				static jule::Ptr<_1b4b39865_FnIns> _2920_f = jule::new_ptr<_1b4b39865_FnIns>(_1b4b39865_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b4c466a8_Data>,jule::Ptr<_1b4c483d0_Eval>*,jule::Ptr<_1b4b03c2a_FnCallExpr>*,jule::Ptr<_1b4c466a8_Data>*>(_1b4d650ce_builtinCallerOut), });;
				return _2920_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("outln", 5)) {
			_case_begin_1abaa9090:;
			{
				static jule::Ptr<_1b4b39865_FnIns> _3220_f = jule::new_ptr<_1b4b39865_FnIns>(_1b4b39865_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b4c466a8_Data>,jule::Ptr<_1b4c483d0_Eval>*,jule::Ptr<_1b4b03c2a_FnCallExpr>*,jule::Ptr<_1b4c466a8_Data>*>(_1b4d6550d_builtinCallerOutln), });;
				return _3220_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("new", 3)) {
			_case_begin_1abaa9117:;
			{
				static jule::Ptr<_1b4b39865_FnIns> _3520_f = jule::new_ptr<_1b4b39865_FnIns>(_1b4b39865_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b4c466a8_Data>,jule::Ptr<_1b4c483d0_Eval>*,jule::Ptr<_1b4b03c2a_FnCallExpr>*,jule::Ptr<_1b4c466a8_Data>*>(_1b4d6593c_builtinCallerNew), });;
				return _3520_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("panic", 5)) {
			_case_begin_1abaa918e:;
			{
				static jule::Ptr<_1b4b39865_FnIns> _3820_f = jule::new_ptr<_1b4b39865_FnIns>(_1b4b39865_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b4c466a8_Data>,jule::Ptr<_1b4c483d0_Eval>*,jule::Ptr<_1b4b03c2a_FnCallExpr>*,jule::Ptr<_1b4c466a8_Data>*>(_1b4d65d6b_builtinCallerPanic), });;
				return _3820_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("make", 4)) {
			_case_begin_1abaa9337:;
			{
				static jule::Ptr<_1b4b39865_FnIns> _4120_f = jule::new_ptr<_1b4b39865_FnIns>(_1b4b39865_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b4c466a8_Data>,jule::Ptr<_1b4c483d0_Eval>*,jule::Ptr<_1b4b03c2a_FnCallExpr>*,jule::Ptr<_1b4c466a8_Data>*>(_1b4d664cb_builtinCallerMake), });;
				return _4120_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("append", 6)) {
			_case_begin_1abaa939d:;
			{
				static jule::Ptr<_1b4b39865_FnIns> _4420_f = jule::new_ptr<_1b4b39865_FnIns>(_1b4b39865_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b4c466a8_Data>,jule::Ptr<_1b4c483d0_Eval>*,jule::Ptr<_1b4b03c2a_FnCallExpr>*,jule::Ptr<_1b4c466a8_Data>*>(_1b4d667ea_builtinCallerAppend), });;
				return _4420_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("copy", 4)) {
			_case_begin_1abaa9425:;
			{
				static jule::Ptr<_1b4b39865_FnIns> _4720_f = jule::new_ptr<_1b4b39865_FnIns>(_1b4b39865_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b4c466a8_Data>,jule::Ptr<_1b4c483d0_Eval>*,jule::Ptr<_1b4b03c2a_FnCallExpr>*,jule::Ptr<_1b4c466a8_Data>*>(_1b4d67213_builtinCallerCopy), });;
				return _4720_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("len", 3)) {
			_case_begin_1abaa949c:;
			{
				static jule::Ptr<_1b4b39865_FnIns> _5020_f = jule::new_ptr<_1b4b39865_FnIns>(_1b4b39865_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b4c466a8_Data>,jule::Ptr<_1b4c483d0_Eval>*,jule::Ptr<_1b4b03c2a_FnCallExpr>*,jule::Ptr<_1b4c466a8_Data>*>(_1b4d688a7_builtinCallerLen), });;
				return _5020_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("cap", 3)) {
			_case_begin_1abaa95bd:;
			{
				static jule::Ptr<_1b4b39865_FnIns> _5320_f = jule::new_ptr<_1b4b39865_FnIns>(_1b4b39865_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b4c466a8_Data>,jule::Ptr<_1b4c483d0_Eval>*,jule::Ptr<_1b4b03c2a_FnCallExpr>*,jule::Ptr<_1b4c466a8_Data>*>(_1b4d6915a_builtinCallerCap), });;
				return _5320_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("delete", 6)) {
			_case_begin_1abaa9634:;
			{
				static jule::Ptr<_1b4b39865_FnIns> _5620_f = jule::new_ptr<_1b4b39865_FnIns>(_1b4b39865_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b4c466a8_Data>,jule::Ptr<_1b4c483d0_Eval>*,jule::Ptr<_1b4b03c2a_FnCallExpr>*,jule::Ptr<_1b4c466a8_Data>*>(_1b4d69a73_builtinCallerDelete), });;
				return _5620_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("assert", 6)) {
			_case_begin_1abaa969a:;
			{
				static jule::Ptr<_1b4b39865_FnIns> _5920_f = jule::new_ptr<_1b4b39865_FnIns>(_1b4b39865_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b4c466a8_Data>,jule::Ptr<_1b4c483d0_Eval>*,jule::Ptr<_1b4b03c2a_FnCallExpr>*,jule::Ptr<_1b4c466a8_Data>*>(_1b4d69ea2_builtinCallerAssert), });;
				return _5920_f;;
			}
		}
		else {
			_case_begin_1abaa8a73:;
			{
				return nullptr;;
			}
		}
		_match_end_1abaa8d2b:;
	};
}



inline jule::Ptr<_1b4c7bb1c_TypeAlias> _1b4d5e87b_primTypeAlias(jule::Ptr<_1b4c7c90e_TypeKind>* _6623_k) {
	return jule::new_ptr<_1b4c7bb1c_TypeAlias>(_1b4c7bb1c_TypeAlias{._field_Public=true, ._field_Kind=jule::new_ptr<_1b4c84ad1_TypeSymbol>(_1b4c84ad1_TypeSymbol{._field_Kind=(*(_6623_k))}), });;
}



inline jule::Ptr<_1b4bddaa1_Var> _1b4d63231_findBuiltinVar(jule::Str* _9420_ident) {
	{
		auto &_match_expr{ (*(_9420_ident)) };
		
		if (_match_expr == jule::Str::lit("nil", 3)) {
			_case_begin_1abab17b2:;
			{
				static jule::Ptr<_1b4bddaa1_Var> _9720_v = jule::new_ptr<_1b4bddaa1_Var>(_1b4bddaa1_Var{._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Kind=jule::new_ptr<_1b4c84ad1_TypeSymbol>(_1b4c84ad1_TypeSymbol{._field_Kind=_1b4d5eb89_primNil}), ._field_Value=jule::new_ptr<_1b4c47830_Value>(_1b4c47830_Value{._field_Data=jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Constant=static__1b275476d_NewNil()})}), });;
				return _9720_v;;
			}
		}
		else if (_match_expr == jule::Str::lit("true", 4)) {
			_case_begin_1abab185b:;
			{
				static jule::Ptr<_1b4bddaa1_Var> _11220_v = jule::new_ptr<_1b4bddaa1_Var>(_1b4bddaa1_Var{._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Kind=(*(_1b4d63572_findBuiltinTypeAlias(jule::Str::lit("bool", 4))))._field_Kind, ._field_Value=jule::new_ptr<_1b4c47830_Value>(_1b4c47830_Value{._field_Data=jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Constant=static__1b2753ecb_NewBool(true)})}), });;
				return _11220_v;;
			}
		}
		else if (_match_expr == jule::Str::lit("false", 5)) {
			_case_begin_1abab18d3:;
			{
				static jule::Ptr<_1b4bddaa1_Var> _12520_v = jule::new_ptr<_1b4bddaa1_Var>(_1b4bddaa1_Var{._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Kind=(*(_1b4d63572_findBuiltinTypeAlias(jule::Str::lit("bool", 4))))._field_Kind, ._field_Value=jule::new_ptr<_1b4c47830_Value>(_1b4c47830_Value{._field_Data=jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Constant=static__1b2753ecb_NewBool(false)})}), });;
				return _12520_v;;
			}
		}
		else {
			_case_begin_1abab1031:;
			{
				return nullptr;;
			}
		}
		_match_end_1abaaa613:;
	};
}



inline jule::Ptr<_1b4c7bb1c_TypeAlias> _1b4d63572_findBuiltinTypeAlias(jule::Str _14225_ident) {
	{
		auto &_match_expr{ _14225_ident };
		
		if (_match_expr == jule::Str::lit("any", 3)) {
			_case_begin_1abab6630:;
			{
				static jule::Ptr<_1b4c7bb1c_TypeAlias> _14520_t = _1b4d5e87b_primTypeAlias(&(_1b4d6023e_primAny));;
				return _14520_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("str", 3)) {
			_case_begin_1abab67a6:;
			{
				static jule::Ptr<_1b4c7bb1c_TypeAlias> _14820_t = _1b4d5e87b_primTypeAlias(&(_1b4d6053b_primStr));;
				return _14820_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("bool", 4)) {
			_case_begin_1abab681c:;
			{
				static jule::Ptr<_1b4c7bb1c_TypeAlias> _15120_t = _1b4d5e87b_primTypeAlias(&(_1b4d607e4_primBool));;
				return _15120_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1abab68a5:;
			{
				static jule::Ptr<_1b4c7bb1c_TypeAlias> _15420_t = _1b4d5e87b_primTypeAlias(&(_1b4d60a9c_primUintptr));;
				return _15420_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4)) {
			_case_begin_1abab691b:;
			{
				static jule::Ptr<_1b4c7bb1c_TypeAlias> _15720_t = _1b4d5e87b_primTypeAlias(&(_1b4d60d55_primUint));;
				return _15720_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1abab6982:;
			{
				static jule::Ptr<_1b4c7bb1c_TypeAlias> _16020_t = _1b4d5e87b_primTypeAlias(&(_1b4d6121d_primInt));;
				return _16020_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1abab69e8:;
			{
				static jule::Ptr<_1b4c7bb1c_TypeAlias> _16320_t = _1b4d5e87b_primTypeAlias(&(_1b4d61460_primI8));;
				return _16320_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1abab6a70:;
			{
				static jule::Ptr<_1b4c7bb1c_TypeAlias> _16620_t = _1b4d5e87b_primTypeAlias(&(_1b4d61707_primI16));;
				return _16620_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1abab6b4c:;
			{
				static jule::Ptr<_1b4c7bb1c_TypeAlias> _16920_t = _1b4d5e87b_primTypeAlias(&(_1b4d61c68_primI64));;
				return _16920_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1abab6bc4:;
			{
				static jule::Ptr<_1b4c7bb1c_TypeAlias> _17220_t = _1b4d5e87b_primTypeAlias(&(_1b4d622c9_primU16));;
				return _17220_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1abab6c4b:;
			{
				static jule::Ptr<_1b4c7bb1c_TypeAlias> _17520_t = _1b4d5e87b_primTypeAlias(&(_1b4d62582_primU32));;
				return _17520_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1abab6cc3:;
			{
				static jule::Ptr<_1b4c7bb1c_TypeAlias> _17820_t = _1b4d5e87b_primTypeAlias(&(_1b4d62a6b_primU64));;
				return _17820_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1abab6d4a:;
			{
				static jule::Ptr<_1b4c7bb1c_TypeAlias> _18120_t = _1b4d5e87b_primTypeAlias(&(_1b4d62cad_primF32));;
				return _18120_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1abab6dc2:;
			{
				static jule::Ptr<_1b4c7bb1c_TypeAlias> _18420_t = _1b4d5e87b_primTypeAlias(&(_1b4d62ebc_primF64));;
				return _18420_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("byte", 4) || _match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1abab6e49:;
			{
				static jule::Ptr<_1b4c7bb1c_TypeAlias> _18720_t = _1b4d5e87b_primTypeAlias(&(_1b4d62021_primU8));;
				return _18720_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("rune", 4) || _match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1abab6ec1:;
			{
				static jule::Ptr<_1b4c7bb1c_TypeAlias> _19020_t = _1b4d5e87b_primTypeAlias(&(_1b4d619b0_primI32));;
				return _19020_t;;
			}
		}
		else {
			_case_begin_1abab1e00:;
			{
				return nullptr;;
			}
		}
		_match_end_1abab1ecc:;
	};
}



inline jule::Any _1b4d63808_findBuiltinDef(jule::Str* _19720_ident) {
	jule::Ptr<_1b4bddaa1_Var> _1989_v = _1b4d63231_findBuiltinVar(_19720_ident);;
	if ((_1989_v != nullptr)) {
		return jule::Any(_1989_v, &__jule_any_type8);;
	};
	jule::Ptr<_1b4b39865_FnIns> _2029_f = _1b4d5e56d_findBuiltinFunc(_19720_ident);;
	if ((_2029_f != nullptr)) {
		return jule::Any(_2029_f, &__jule_any_type7);;
	};
	jule::Ptr<_1b4c7bb1c_TypeAlias> _2069_ta = _1b4d63572_findBuiltinTypeAlias((*(_19720_ident)));;
	if ((_2069_ta != nullptr)) {
		return jule::Any(_2069_ta, &__jule_any_type65);;
	};
	return nullptr;;
}



inline jule::Any _1b4d63ac2_findBuiltinDefStdDebug(jule::Str* _21328_ident) {
	{
		auto &_match_expr{ (*(_21328_ident)) };
		
		if (_match_expr == jule::Str::lit("Out", 3)) {
			_case_begin_1abac165c:;
			{
				static jule::Ptr<_1b4b39865_FnIns> _21620_f = jule::new_ptr<_1b4b39865_FnIns>(_1b4b39865_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b4c466a8_Data>,jule::Ptr<_1b4c483d0_Eval>*,jule::Ptr<_1b4b03c2a_FnCallExpr>*,jule::Ptr<_1b4c466a8_Data>*>(_1b4d6d747_builtinCallerStdDebugOut), });;
				return jule::Any(_21620_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Outln", 5)) {
			_case_begin_1abac199d:;
			{
				static jule::Ptr<_1b4b39865_FnIns> _21920_f = jule::new_ptr<_1b4b39865_FnIns>(_1b4b39865_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b4c466a8_Data>,jule::Ptr<_1b4c483d0_Eval>*,jule::Ptr<_1b4b03c2a_FnCallExpr>*,jule::Ptr<_1b4c466a8_Data>*>(_1b4d6db76_builtinCallerStdDebugOutln), });;
				return jule::Any(_21920_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1ababed0e:;
			{
				return nullptr;;
			}
		}
		_match_end_1abac14d6:;
	};
}



inline jule::Any _1b4d63d8b_findBuiltinDefStdMem(jule::Str* _22626_ident) {
	{
		auto &_match_expr{ (*(_22626_ident)) };
		
		if (_match_expr == jule::Str::lit("SizeOf", 6)) {
			_case_begin_1abac2ebb:;
			{
				static jule::Ptr<_1b4b39865_FnIns> _22920_f = jule::new_ptr<_1b4b39865_FnIns>(_1b4b39865_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b4c466a8_Data>,jule::Ptr<_1b4c483d0_Eval>*,jule::Ptr<_1b4b03c2a_FnCallExpr>*,jule::Ptr<_1b4c466a8_Data>*>(_1b4d6c14c_builtinCallerStdMemSizeOf), });;
				return jule::Any(_22920_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("AlignOf", 7)) {
			_case_begin_1abac332e:;
			{
				static jule::Ptr<_1b4b39865_FnIns> _23220_f = jule::new_ptr<_1b4b39865_FnIns>(_1b4b39865_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b4c466a8_Data>,jule::Ptr<_1b4c483d0_Eval>*,jule::Ptr<_1b4b03c2a_FnCallExpr>*,jule::Ptr<_1b4c466a8_Data>*>(_1b4d6c57b_builtinCallerStdMemAlignOf), });;
				return jule::Any(_23220_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Free", 4)) {
			_case_begin_1abac3054:;
			{
				static jule::Ptr<_1b4b39865_FnIns> _23520_f = jule::new_ptr<_1b4b39865_FnIns>(_1b4b39865_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b4c466a8_Data>,jule::Ptr<_1b4c483d0_Eval>*,jule::Ptr<_1b4b03c2a_FnCallExpr>*,jule::Ptr<_1b4c466a8_Data>*>(_1b4d6c9aa_builtinCallerStdMemFree), });;
				return jule::Any(_23520_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1abac31ec:;
			{
				return nullptr;;
			}
		}
		_match_end_1abac177d:;
	};
}



inline jule::Any _1b4d64265_findBuiltinDefStdComptime(jule::Str* _24231_ident) {
	{
		auto &_match_expr{ (*(_24231_ident)) };
		
		if (_match_expr == jule::Str::lit("TypeOf", 6)) {
			_case_begin_1abac54b8:;
			{
				static jule::Ptr<_1b4b39865_FnIns> _24520_f = jule::new_ptr<_1b4b39865_FnIns>(_1b4b39865_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b4c466a8_Data>,jule::Ptr<_1b4c483d0_Eval>*,jule::Ptr<_1b4b03c2a_FnCallExpr>*,jule::Ptr<_1b4c466a8_Data>*>(_1b4d6a3d1_builtinCallerStdComptimeTypeOf), });;
				return jule::Any(_24520_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("ValueOf", 7)) {
			_case_begin_1abac5793:;
			{
				static jule::Ptr<_1b4b39865_FnIns> _24820_f = jule::new_ptr<_1b4b39865_FnIns>(_1b4b39865_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b4c466a8_Data>,jule::Ptr<_1b4c483d0_Eval>*,jule::Ptr<_1b4b03c2a_FnCallExpr>*,jule::Ptr<_1b4c466a8_Data>*>(_1b4d6aa52_builtinCallerStdComptimeValueOf), });;
				return jule::Any(_24820_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Line", 4)) {
			_case_begin_1abac5809:;
			{
				static jule::Ptr<_1b4b39865_FnIns> _25120_f = jule::new_ptr<_1b4b39865_FnIns>(_1b4b39865_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b4c466a8_Data>,jule::Ptr<_1b4c483d0_Eval>*,jule::Ptr<_1b4b03c2a_FnCallExpr>*,jule::Ptr<_1b4c466a8_Data>*>(_1b4d6ae81_builtinCallerStdComptimeLine), });;
				return jule::Any(_25120_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("File", 4)) {
			_case_begin_1abac552e:;
			{
				static jule::Ptr<_1b4b39865_FnIns> _25420_f = jule::new_ptr<_1b4b39865_FnIns>(_1b4b39865_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b4c466a8_Data>,jule::Ptr<_1b4c483d0_Eval>*,jule::Ptr<_1b4b03c2a_FnCallExpr>*,jule::Ptr<_1b4c466a8_Data>*>(_1b4d6b3b0_builtinCallerStdComptimeFile), });;
				return jule::Any(_25420_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Files", 5)) {
			_case_begin_1abac55a6:;
			{
				static jule::Ptr<_1b4b39865_FnIns> _25720_f = jule::new_ptr<_1b4b39865_FnIns>(_1b4b39865_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b4c466a8_Data>,jule::Ptr<_1b4c483d0_Eval>*,jule::Ptr<_1b4b03c2a_FnCallExpr>*,jule::Ptr<_1b4c466a8_Data>*>(_1b4d6b7de_builtinCallerStdComptimeFiles), });;
				return jule::Any(_25720_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("TypeAlias", 9)) {
			_case_begin_1abac58c5:;
			{
				static jule::Ptr<_1b4b39865_FnIns> _26020_f = jule::new_ptr<_1b4b39865_FnIns>(_1b4b39865_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b4c466a8_Data>,jule::Ptr<_1b4c483d0_Eval>*,jule::Ptr<_1b4b03c2a_FnCallExpr>*,jule::Ptr<_1b4c466a8_Data>*>(_1b4d6bc1d_builtinCallerStdComptimeTypeAlias), });;
				return jule::Any(_26020_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1abac5672:;
			{
				return nullptr;;
			}
		}
		_match_end_1abac372a:;
	};
}



inline jule::Any _1b4d644a7_findBuiltinDefStdJuleIntegrated(jule::Str* _26737_ident) {
	{
		auto &_match_expr{ (*(_26737_ident)) };
		
		if (_match_expr == jule::Str::lit("ToStr", 5)) {
			_case_begin_1abac5b6c:;
			{
				static jule::Ptr<_1b4b39865_FnIns> _27020_f = jule::new_ptr<_1b4b39865_FnIns>(_1b4b39865_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b4c466a8_Data>,jule::Ptr<_1b4c483d0_Eval>*,jule::Ptr<_1b4b03c2a_FnCallExpr>*,jule::Ptr<_1b4c466a8_Data>*>(_1b4d6cdd9_builtinCallerStdJuleIntegratedToStr), });;
				return jule::Any(_27020_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Emit", 4)) {
			_case_begin_1abac9b82:;
			{
				static jule::Ptr<_1b4b39865_FnIns> _27320_f = jule::new_ptr<_1b4b39865_FnIns>(_1b4b39865_FnIns{._field_Decl=jule::new_ptr<_1b4b36884_Fn>(_1b4b36884_Fn{._field_Generics=jule::Slice<jule::Ptr<_1b4b07dc7_GenericDecl>>::alloc(1LL, 1LL), }), ._field_caller=jule::Fn<jule::Ptr<_1b4c466a8_Data>,jule::Ptr<_1b4c483d0_Eval>*,jule::Ptr<_1b4b03c2a_FnCallExpr>*,jule::Ptr<_1b4c466a8_Data>*>(_1b4d6d318_builtinCallerStdJuleIntegratedEmit), });;
				return jule::Any(_27320_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1abac9a61:;
			{
				return nullptr;;
			}
		}
		_match_end_1abac9973:;
	};
}



inline jule::Any _1b4d6482b_findPackageBuiltinDef(jule::Str* _28527_linkPath, jule::Str* _28543_ident) {
	{
		auto &_match_expr{ (*(_28527_linkPath)) };
		
		if (_match_expr == jule::Str::lit("std::comptime", 13)) {
			_case_begin_1abacbc2d:;
			{
				return _1b4d64265_findBuiltinDefStdComptime(_28543_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std::debug", 10)) {
			_case_begin_1abacbc94:;
			{
				return _1b4d63ac2_findBuiltinDefStdDebug(_28543_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std::mem", 8)) {
			_case_begin_1abacbd0a:;
			{
				return _1b4d63d8b_findBuiltinDefStdMem(_28543_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std::jule::integrated", 21)) {
			_case_begin_1abacbd71:;
			{
				return _1b4d644a7_findBuiltinDefStdJuleIntegrated(_28543_ident);;
			}
		}
		else {
			_case_begin_1abac9dd5:;
			{
				return nullptr;;
			}
		}
		_match_end_1abacb8cb:;
	};
}



inline jule::Ptr<_1b4c466a8_Data> _1b4d64ba0_builtinCallerError(jule::Ptr<_1b4c483d0_Eval>* _30028_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _30043_fc) {
	if (((*((*(_30043_fc))))._field_Args.len() < 1LL)) {
		_1b4c48930_pushErr((*(_30028_e)).ptr(), (*((*(_30043_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("err", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_30043_fc))))._field_Args.len() > 1LL)) {
		_1b4c48930_pushErr((*(_30028_e)).ptr(), (*((*((*(_30043_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("error", 5), &__jule_any_type4)}));
	};
	jule::Ptr<_1b4c466a8_Data> _3089_expr = _1b4c6b49c_evalExpr((*(_30028_e)), (*((*(_30043_fc))))._field_Args[0LL]);;
	if ((_3089_expr == nullptr)) {
		return nullptr;;
	};
	if (_1b4c46a93_IsNil(_3089_expr.ptr())) {
		_1b4c48930_pushErr((*(_30028_e)).ptr(), (*((*((*(_30043_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("you cannot call error function with nil", 39), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1b4c466a8_Data> _3179_d = _1b4c773ba_buildVoidData();;
	(*(_3179_d))._field_Model=jule::Any(jule::new_ptr<_1b4b3231e_BuiltinErrorCallExprModel>(_1b4b3231e_BuiltinErrorCallExprModel{._field_Err=_3089_expr}), &__jule_any_type22);
	return _3179_d;;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4d650ce_builtinCallerOut(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _32226_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _32241_fc, jule::Ptr<_1b4c466a8_Data>* ) {
	if (((*((*(_32241_fc))))._field_Args.len() < 1LL)) {
		_1b4c48930_pushErr((*(_32226_e)).ptr(), (*((*(_32241_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("v", 1), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_32241_fc))))._field_Args.len() > 1LL)) {
		_1b4c48930_pushErr((*(_32226_e)).ptr(), (*((*((*(_32241_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("out", 3), &__jule_any_type4)}));
	};
	jule::Ptr<_1b4c466a8_Data> _3319_expr = _1b4c6b49c_evalExpr((*(_32226_e)), (*((*(_32241_fc))))._field_Args[0LL]);;
	if ((_3319_expr == nullptr)) {
		return nullptr;;
	};
	if ((!(_1b4c99189_isBuiltinStrConvertable(&((*(_3319_expr))._field_Kind))))) {
		_1b4c48930_pushErr((*(_32226_e)).ptr(), (*((*((*(_32241_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b4c466a8_Data> _3419_d = _1b4c773ba_buildVoidData();;
	(*(_3419_d))._field_Model=jule::Any(jule::new_ptr<_1b4b2e5d5_BuiltinOutCallExprModel>(_1b4b2e5d5_BuiltinOutCallExprModel{._field_Expr=(*(_3319_expr))._field_Model, }), &__jule_any_type26);
	return _3419_d;;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4d6550d_builtinCallerOutln(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _34628_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _34643_fc, jule::Ptr<_1b4c466a8_Data>* _34665_d) {
	(*(_34665_d))=_1b4d650ce_builtinCallerOut(nullptr, _34628_e, _34643_fc, _34665_d);
	if (((*(_34665_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*(_34665_d))))._field_Model=jule::Any(jule::new_ptr<_1b4b2e9ae_BuiltinOutlnCallExprModel>(_1b4b2e9ae_BuiltinOutlnCallExprModel{._field_Expr=(*((*((*(_34665_d))))._field_Model.cast_ptr<_1b4b2e5d5_BuiltinOutCallExprModel>(&__jule_any_type26)))._field_Expr, }), &__jule_any_type27);
	return (*(_34665_d));;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4d6593c_builtinCallerNew(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _35826_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _35841_fc, jule::Ptr<_1b4c466a8_Data>* _35863_d) {
	if (((*((*(_35841_fc))))._field_Args.len() < 1LL)) {
		_1b4c48930_pushErr((*(_35826_e)).ptr(), (*((*(_35841_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_35841_fc))))._field_Args.len() > 2LL)) {
		_1b4c48930_pushErr((*(_35826_e)).ptr(), (*((*((*(_35841_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("new", 3), &__jule_any_type4)}));
	};
	jule::Ptr<_1b4c466a8_Data> _3679_t = _1b4c6582b_evalExprKind((*(_35826_e)), (*((*((*(_35841_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_3679_t == nullptr)) {
		return nullptr;;
	};
	if ((!((*(_3679_t))._field_Decl))) {
		_1b4c48930_pushErr((*(_35826_e)).ptr(), (*((*((*(_35841_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((!(_1b4c98b39_isValidForSptrType(&((*(_3679_t))._field_Kind))))) {
		jule::Ptr<_1b4b24641_StructIns> _37813_s = _1b4c815d3_Struct((*(_3679_t))._field_Kind.ptr());;
		if ((((_37813_s != nullptr) && ((*_37813_s.alloc)._field_Decl != nullptr)) && (*(*_37813_s.alloc)._field_Decl.alloc)._field_Binded)) {
			_1b4c48930_pushErr((*(_35826_e)).ptr(), (*((*((*(_35841_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("binded structures cannot supports reference counting", 52), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	(*((*(_35863_d))))._field_Kind=jule::new_ptr<_1b4c7c90e_TypeKind>(_1b4c7c90e_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1b4c89014_Sptr>(_1b4c89014_Sptr{._field_Elem=(*(_3679_t))._field_Kind}), (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data21)});
	if (((*((*(_35841_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1b4c7c90e_TypeKind> _39213_old = (*((*(_35826_e))))._field_prefix;;
		(*((*(_35826_e))))._field_prefix=(*(_3679_t))._field_Kind;
		jule::Ptr<_1b4c466a8_Data> _39513_init = _1b4c6b49c_evalExpr((*(_35826_e)), (*((*(_35841_fc))))._field_Args[1LL]);;
		(*((*(_35826_e))))._field_prefix=_39213_old;
		if ((_39513_init != nullptr)) {
			jule::Ptr<_1b4ad5712_Token> _40017_token = (*((*((*(_35841_fc))))._field_Args[1LL]))._field_Token;;
			;
			_1b4bca719_checkValidityForInitExpr((*((*(_35826_e))))._field_s, (!((*((*(_35826_e))))._field_immutable)), false, &((*(_3679_t))._field_Kind), &(_39513_init), &(_40017_token));
			_1b4bc6380_checkAssignType((*((*(_35826_e))))._field_s, false, &((*(_3679_t))._field_Kind), &(_39513_init), _40017_token);
			(*((*(_35863_d))))._field_Model=jule::Any(jule::new_ptr<_1b4b2ed88_BuiltinNewCallExprModel>(_1b4b2ed88_BuiltinNewCallExprModel{._field_Kind=(*(_3679_t))._field_Kind, ._field_Init=(*_39513_init.alloc)._field_Model}), &__jule_any_type113);
		};
	} else {
		(*((*(_35863_d))))._field_Model=jule::Any(jule::new_ptr<_1b4b2ed88_BuiltinNewCallExprModel>(_1b4b2ed88_BuiltinNewCallExprModel{._field_Kind=(*(_3679_t))._field_Kind, }), &__jule_any_type113);
	};
	return (*(_35863_d));;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4d65d6b_builtinCallerPanic(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _42028_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _42043_fc, jule::Ptr<_1b4c466a8_Data>* ) {
	if (((*((*(_42043_fc))))._field_Args.len() < 1LL)) {
		_1b4c48930_pushErr((*(_42028_e)).ptr(), (*((*(_42043_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("message", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_42043_fc))))._field_Args.len() > 1LL)) {
		_1b4c48930_pushErr((*(_42028_e)).ptr(), (*((*((*(_42043_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("panic", 5), &__jule_any_type4)}));
	};
	jule::Ptr<_1b4c466a8_Data> _4299_expr = _1b4c6b49c_evalExpr((*(_42028_e)), (*((*(_42043_fc))))._field_Args[0LL]);;
	if ((_4299_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1b4c80060_Prim((*(_4299_expr))._field_Kind.ptr()) == nullptr) || (!(_1b4c88970_IsStr(_1b4c80060_Prim((*(_4299_expr))._field_Kind).ptr()))))) {
		_1b4c48930_pushErr((*(_42028_e)).ptr(), (*((*(_42043_fc))))._field_Token, jule::Str::lit("panic function only accepts strings", 35), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1b4c466a8_Data> _4389_d = _1b4c773ba_buildVoidData();;
	(*(_4389_d))._field_Model=jule::Any(jule::new_ptr<_1b4b30262_BuiltinPanicCallExprModel>(_1b4b30262_BuiltinPanicCallExprModel{._field_Token=(*((*(_42043_fc))))._field_Token, ._field_Expr=(*(_4299_expr))._field_Model}), &__jule_any_type28);
	return _4389_d;;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4d664cb_builtinCallerMake(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _44627_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _44642_fc, jule::Ptr<_1b4c466a8_Data>* _44664_d) {
	if (((*((*(_44642_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_44642_fc))))._field_Args.len() == 1LL)) {
			_1b4c48930_pushErr((*(_44627_e)).ptr(), (*((*(_44642_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("size", 4), &__jule_any_type4)}));
			return nullptr;;
		};
		_1b4c48930_pushErr((*(_44627_e)).ptr(), (*((*(_44642_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type, size", 10), &__jule_any_type4)}));
		return nullptr;;
	} else if (((*((*(_44642_fc))))._field_Args.len() > 3LL)) {
		_1b4c48930_pushErr((*(_44627_e)).ptr(), (*((*((*(_44642_fc))))._field_Args[3LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("make", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b4c466a8_Data> _4599_t = _1b4c6582b_evalExprKind((*(_44627_e)), (*((*((*(_44642_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_4599_t == nullptr)) {
		return nullptr;;
	};
	if ((!((*(_4599_t))._field_Decl))) {
		_1b4c48930_pushErr((*(_44627_e)).ptr(), (*((*((*(_44642_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_1b4c810b6_Slc((*(_4599_t))._field_Kind.ptr()) == nullptr)) {
		_1b4c48930_pushErr((*(_44627_e)).ptr(), (*((*((*(_44642_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1b4c7ccc7_Str((*(_4599_t))._field_Kind), &__jule_any_type4),jule::Any(jule::Str::lit("make", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	(*((*(_44664_d))))._field_Kind=(*(_4599_t))._field_Kind;
	jule::Ptr<_1b4c466a8_Data> _4749_lenExpr = _1b4c6b49c_evalExpr(_1b4bc59cd_evalp((*((*(_44627_e))))._field_s, (*((*(_44627_e))))._field_lookup, (*(_4599_t))._field_Kind), (*((*(_44642_fc))))._field_Args[1LL]);;
	if ((_4749_lenExpr == nullptr)) {
		return nullptr;;
	};
	_1b4c5261a_checkIntegerIndexingByData((*(_44627_e)).ptr(), &(_4749_lenExpr), (*((*((*(_44642_fc))))._field_Args[1LL]))._field_Token);
	jule::Ptr<_1b4b30bbe_BuiltinMakeCallExprModel> _4819_model = jule::new_ptr<_1b4b30bbe_BuiltinMakeCallExprModel>(_1b4b30bbe_BuiltinMakeCallExprModel{._field_Kind=(*(_4599_t))._field_Kind, ._field_Len=(*(_4749_lenExpr))._field_Model, });;
	(*((*(_44664_d))))._field_Model=jule::Any(_4819_model, &__jule_any_type114);
	if (((*((*(_44642_fc))))._field_Args.len() == 3LL)) {
		jule::Ptr<_1b4c466a8_Data> _48713_capExpr = _1b4c6b49c_evalExpr(_1b4bc59cd_evalp((*((*(_44627_e))))._field_s, (*((*(_44627_e))))._field_lookup, (*(_4599_t))._field_Kind), (*((*(_44642_fc))))._field_Args[2LL]);;
		if ((_48713_capExpr == nullptr)) {
			return (*(_44664_d));;
		};
		_1b4c5261a_checkIntegerIndexingByData((*(_44627_e)).ptr(), &(_48713_capExpr), (*((*((*(_44642_fc))))._field_Args[2LL]))._field_Token);
		(*(_4819_model))._field_Cap=(*(_48713_capExpr))._field_Model;
	};
	return (*(_44664_d));;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4d667ea_builtinCallerAppend(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _49729_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _49744_fc, jule::Ptr<_1b4c466a8_Data>* _49766_d) {
	if (((*((*(_49744_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_49744_fc))))._field_Args.len() == 1LL)) {
			_1b4c48930_pushErr((*(_49729_e)).ptr(), (*((*(_49744_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("values", 6), &__jule_any_type4)}));
			return nullptr;;
		};
		_1b4c48930_pushErr((*(_49729_e)).ptr(), (*((*(_49744_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("src, values", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b4c466a8_Data> _5079_t = _1b4c6b49c_evalExpr((*(_49729_e)), (*((*(_49744_fc))))._field_Args[0LL]);;
	if ((_5079_t == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1b4c899d7_Slc> _5129_s = _1b4c810b6_Slc((*(_5079_t))._field_Kind.ptr());;
	if ((_5129_s == nullptr)) {
		_1b4c48930_pushErr((*(_49729_e)).ptr(), (*((*((*(_49744_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	;
	;
	if (_1b4bca719_checkValidityForInitExpr((*((*(_49729_e))))._field_s, true, false, &((*(_5079_t))._field_Kind), &(_5079_t), &((*((*((*(_49744_fc))))._field_Args[0LL]))._field_Token))) {
		_1b4bc6380_checkAssignType((*((*(_49729_e))))._field_s, false, &((*(_5079_t))._field_Kind), &(_5079_t), (*((*((*(_49744_fc))))._field_Args[0LL]))._field_Token);
	};
	jule::Ptr<_1b4c7c90e_TypeKind> _5279_prefix = (*((*(_49729_e))))._field_prefix;;
	(*((*(_49729_e))))._field_prefix=(*(_5079_t))._field_Kind;
	__JULE_DEFER({
		(*((*(_49729_e))))._field_prefix=_5279_prefix;
	});;
	(*(_49766_d))=jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=(*(_5079_t))._field_Kind, ._field_Mutable=true, });
	{
		auto &_match_expr{ (*((*((*(_49744_fc))))._field_Args[1LL]))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1abb1b641:;
			{
				if (((*((*(_49744_fc))))._field_Args.len() > 2LL)) {
					_1b4c48930_pushErr((*(_49729_e)).ptr(), (*((*((*(_49744_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("variadic argument can't use with more argument", 46), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1b4c466a8_Data> _54113_e1 = _1b4c6b49c_evalExpr((*(_49729_e)), (*((*((*((*(_49744_fc))))._field_Args[1LL]))._field_Kind.unsafe_cast_ptr<_1b4b02487_VariadicExpr>()))._field_Expr);;
				if ((_54113_e1 == nullptr)) {
					return nullptr;;
				};
				if (((_1b4c80060_Prim((*(_5129_s))._field_Elem.ptr()) != nullptr) && _1b4c86dd0_IsU8(_1b4c80060_Prim((*(_5129_s))._field_Elem).ptr()))) {
					if (((_1b4c80060_Prim((*(_54113_e1))._field_Kind) != nullptr) && _1b4c88970_IsStr(_1b4c80060_Prim((*(_54113_e1))._field_Kind).ptr()))) {
						_1b4c79a82_makeVariadic(&(_54113_e1), _1b4d62021_primU8);
						(*((*(_49766_d))))._field_Model=jule::Any(jule::new_ptr<_1b4b31098_BuiltinAppendCallExprModel>(_1b4b31098_BuiltinAppendCallExprModel{._field_Dest=(*(_5079_t))._field_Model, ._field_Elements=(*(_54113_e1))._field_Model}), &__jule_any_type25);
						return (*(_49766_d));;
					};
				};
				if ((!(_1b4c7ecc9_Variadicable((*(_54113_e1))._field_Kind)))) {
					_1b4c48930_pushErr((*(_49729_e)).ptr(), (*((*((*(_49744_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("type @ is not variadicable", 26), jule::Slice<jule::Any>::make({jule::Any(_1b4c7ccc7_Str((*(_54113_e1))._field_Kind), &__jule_any_type4)}));
					return nullptr;;
				};
				_1b4c79a82_makeVariadic(&(_54113_e1), (*(_5129_s))._field_Elem);
				if (_1b4bca719_checkValidityForInitExpr((*((*(_49729_e))))._field_s, true, false, &((*(_5129_s))._field_Elem), &(_54113_e1), &((*((*((*(_49744_fc))))._field_Args[1LL]))._field_Token))) {
					_1b4bc6380_checkAssignType((*((*(_49729_e))))._field_s, false, &((*(_5129_s))._field_Elem), &(_54113_e1), (*((*((*(_49744_fc))))._field_Args[1LL]))._field_Token);
				};
				(*((*(_49766_d))))._field_Model=jule::Any(jule::new_ptr<_1b4b31098_BuiltinAppendCallExprModel>(_1b4b31098_BuiltinAppendCallExprModel{._field_Dest=(*(_5079_t))._field_Model, ._field_Elements=(*(_54113_e1))._field_Model}), &__jule_any_type25);
				return (*(_49766_d));;
			}
		}
		_match_end_1abb1b597:;
	};
	jule::Ptr<_1b4c466a8_Data> _5759_e1 = _1b4c6b49c_evalExpr((*(_49729_e)), (*((*(_49744_fc))))._field_Args[1LL]);;
	if ((_5759_e1 == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1b4b2adea_SliceExprModel> _5809_slice = jule::new_ptr<_1b4b2adea_SliceExprModel>(_1b4b2adea_SliceExprModel{._field_ElemKind=(*(_5129_s))._field_Elem, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, ((*((*(_49744_fc))))._field_Args.len() - 1LL), jule::Any(nullptr))});;
	{
		auto expr = (*((*(_49744_fc))))._field_Args.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1abb2874c:;
		if (it != expr_end) {
			jule::Ptr<_1b4b00001_Expr> _58417_arg = *it;
			{
				_5759_e1=_1b4c6b49c_evalExpr((*(_49729_e)), _58417_arg);
				if ((_5759_e1 == nullptr)) {
					return nullptr;;
				};
				if ((*(*(_5759_e1))._field_Kind.alloc)._field_Variadic) {
					_1b4c48930_pushErr((*(_49729_e)).ptr(), (*(_58417_arg))._field_Token, jule::Str::lit("variadic argument can't use with more argument", 46), jule::Slice<jule::Any>());
				};
				if (_1b4bca719_checkValidityForInitExpr((*((*(_49729_e))))._field_s, true, false, &((*(_5129_s))._field_Elem), &(_5759_e1), &((*_58417_arg.alloc)._field_Token))) {
					_1b4bc6380_checkAssignType((*((*(_49729_e))))._field_s, false, &((*(_5129_s))._field_Elem), &(_5759_e1), (*_58417_arg.alloc)._field_Token);
				};
				(*(_5809_slice))._field_Elems=jule::append((*_5809_slice.alloc)._field_Elems,jule::Slice<jule::Any>::make({(*(_5759_e1))._field_Model}));
			}
			_iter_next_1abb2874c:;
			++it;
			goto _iter_begin_1abb2874c;
		}
		_iter_end_1abb2874c:;
	};
	(*((*(_49766_d))))._field_Model=jule::Any(jule::new_ptr<_1b4b31098_BuiltinAppendCallExprModel>(_1b4b31098_BuiltinAppendCallExprModel{._field_Dest=(*(_5079_t))._field_Model, ._field_Elements=jule::Any(_5809_slice, &__jule_any_type76)}), &__jule_any_type25);
	return (*(_49766_d));;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4d66cd4_callerCopySlice(jule::Ptr<_1b4c466a8_Data>* _60625_dest, jule::Ptr<_1b4c483d0_Eval>* _60643_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _60658_fc, jule::Ptr<_1b4c466a8_Data>* _60680_d) {
	if ((!((*((*(_60625_dest))))._field_Mutable))) {
		_1b4c48930_pushErr((*(_60643_e)).ptr(), (*((*((*(_60658_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1b4c466a8_Data> _6119_src = _1b4c6b49c_evalExpr((*(_60643_e)), (*((*(_60658_fc))))._field_Args[1LL]);;
	if ((_6119_src == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1b4c899d7_Slc> _6159_slc = _1b4c810b6_Slc((*(_6119_src))._field_Kind.ptr());;
	if ((_6159_slc != nullptr)) {
		if (((!((*(_6119_src))._field_Mutable)) && _1b4c7e290_Mutable((*_6159_slc.alloc)._field_Elem.ptr()))) {
			_1b4c48930_pushErr((*(_60643_e)).ptr(), (*((*((*(_60658_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
		};
		if ((!(_1b4c7d118_Equal((*((*(_60625_dest))))._field_Kind, (*(_6119_src))._field_Kind)))) {
			_1b4c48930_pushErr((*(_60643_e)).ptr(), (*((*((*(_60658_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1b4c7ccc7_Str((*((*(_60625_dest))))._field_Kind), &__jule_any_type4),jule::Any(_1b4c7ccc7_Str((*(_6119_src))._field_Kind), &__jule_any_type4)}));
		};
	} else {
		jule::Ptr<_1b4c854d8_Prim> _6259_destPrim = _1b4c80060_Prim((*(_1b4c810b6_Slc((*((*(_60625_dest))))._field_Kind)))._field_Elem.ptr());;
		jule::Ptr<_1b4c854d8_Prim> _6269_prim = _1b4c80060_Prim((*(_6119_src))._field_Kind);;
		if (((((_6259_destPrim == nullptr) || (_6269_prim == nullptr)) || (!(_1b4c88970_IsStr(_6269_prim.ptr())))) || (!(_1b4c86dd0_IsU8(_6259_destPrim.ptr()))))) {
			_1b4c48930_pushErr((*(_60643_e)).ptr(), (*((*((*(_60658_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1b4c7ccc7_Str((*((*(_60625_dest))))._field_Kind), &__jule_any_type4),jule::Any(_1b4c7ccc7_Str((*(_6119_src))._field_Kind), &__jule_any_type4)}));
		};
	};
	(*((*(_60680_d))))._field_Kind=_1b4c400db_lenKind();
	(*((*(_60680_d))))._field_Model=jule::Any(jule::new_ptr<_1b4b31e45_BuiltinCopyCallExprModel>(_1b4b31e45_BuiltinCopyCallExprModel{._field_Dest=(*(_60625_dest)), ._field_Src=_6119_src}), &__jule_any_type30);
	return (*(_60680_d));;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4d67213_builtinCallerCopy(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _64027_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _64042_fc, jule::Ptr<_1b4c466a8_Data>* _64064_d) {
	if (((*((*(_64042_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_64042_fc))))._field_Args.len() == 1LL)) {
			_1b4c48930_pushErr((*(_64027_e)).ptr(), (*((*(_64042_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("src", 3), &__jule_any_type4)}));
			return nullptr;;
		};
		_1b4c48930_pushErr((*(_64027_e)).ptr(), (*((*(_64042_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("src, values", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_64042_fc))))._field_Args.len() > 2LL)) {
		_1b4c48930_pushErr((*(_64027_e)).ptr(), (*((*((*(_64042_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("copy", 4), &__jule_any_type4)}));
	};
	jule::Ptr<_1b4c466a8_Data> _6539_dest = _1b4c6b49c_evalExpr((*(_64027_e)), (*((*(_64042_fc))))._field_Args[0LL]);;
	{
		
		if ((_6539_dest == nullptr)) {
			_case_begin_1abb3de05:;
			{
				return nullptr;;
			}
		}
		else if ((_1b4c810b6_Slc((*(_6539_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abb3de6b:;
			{
				return _1b4d66cd4_callerCopySlice(&(_6539_dest), _64027_e, _64042_fc, _64064_d);;
			}
		}
		else {
			_case_begin_1abb3cdb0:;
			{
				_1b4c48930_pushErr((*(_64027_e)).ptr(), (*((*((*(_64042_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1abb3b353:;
	};
}



inline jule::Ptr<_1b4c466a8_Data> _1b4d67587_callerLenSlice(jule::Ptr<_1b4c466a8_Data>* _66524_expr, jule::Ptr<_1b4c466a8_Data>* _66542_d) {
	(*((*(_66542_d))))._field_Kind=_1b4c400db_lenKind();
	(*((*(_66542_d))))._field_Model=jule::Any(jule::new_ptr<_1b4b31395_BuiltinLenCallExprModel>(_1b4b31395_BuiltinLenCallExprModel{._field_Expr=(*(_66524_expr))}), &__jule_any_type115);
	return (*(_66542_d));;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4d6790b_callerLenMap(jule::Ptr<_1b4c466a8_Data>* _67322_expr, jule::Ptr<_1b4c466a8_Data>* _67340_d) {
	(*((*(_67340_d))))._field_Kind=_1b4c400db_lenKind();
	(*((*(_67340_d))))._field_Model=jule::Any(jule::new_ptr<_1b4b31395_BuiltinLenCallExprModel>(_1b4b31395_BuiltinLenCallExprModel{._field_Expr=(*(_67322_expr))}), &__jule_any_type115);
	return (*(_67340_d));;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4d67c80_callerLenArr(jule::Ptr<_1b4c466a8_Data>* _68122_expr, jule::Ptr<_1b4c466a8_Data>* _68140_d) {
	(*((*(_68140_d))))._field_Kind=_1b4c400db_lenKind();
	(*((*(_68140_d))))._field_Constant=static__1b2753948_NewI64(static_cast<jule::I64>((*(_1b4c80d30_Arr((*((*(_68122_expr))))._field_Kind.ptr())))._field_N));
	(*((*(_68140_d))))._field_Model=jule::Any((*((*(_68140_d))))._field_Constant, &__jule_any_type19);
	return (*(_68140_d));;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4d68104_callerLenStr(jule::Ptr<_1b4c466a8_Data>* _68822_expr, jule::Ptr<_1b4c466a8_Data>* _68840_d) {
	(*((*(_68840_d))))._field_Kind=_1b4c400db_lenKind();
	if (_1b4c470b0_IsConst((*(_68822_expr)).ptr())) {
		(*((*(_68840_d))))._field_Constant=static__1b2753948_NewI64(static_cast<jule::I64>(_1b2755681_ReadStr((*((*(_68822_expr))))._field_Constant.ptr()).len()));
		(*((*(_68840_d))))._field_Model=jule::Any((*((*(_68840_d))))._field_Constant, &__jule_any_type19);
	} else {
		(*((*(_68840_d))))._field_Model=jule::Any(jule::new_ptr<_1b4b31395_BuiltinLenCallExprModel>(_1b4b31395_BuiltinLenCallExprModel{._field_Expr=(*(_68822_expr))}), &__jule_any_type115);
	};
	return (*(_68840_d));;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4d68478_callerLenComptime(jule::Ptr<_1b4c466a8_Data>* _70127_d, jule::I64 _70137_n) {
	(*((*(_70127_d))))._field_Kind=_1b4c400db_lenKind();
	(*((*(_70127_d))))._field_Constant=static__1b2753948_NewI64(static_cast<jule::I64>(_70137_n));
	(*((*(_70127_d))))._field_Model=jule::Any((*((*(_70127_d))))._field_Constant, &__jule_any_type19);
	return (*(_70127_d));;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4d688a7_builtinCallerLen(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _70826_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _70841_fc, jule::Ptr<_1b4c466a8_Data>* _70863_d) {
	if (((*((*(_70841_fc))))._field_Args.len() < 1LL)) {
		_1b4c48930_pushErr((*(_70826_e)).ptr(), (*((*(_70841_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("obj", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_70841_fc))))._field_Args.len() > 1LL)) {
		_1b4c48930_pushErr((*(_70826_e)).ptr(), (*((*((*(_70841_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("len", 3), &__jule_any_type4)}));
	};
	jule::Ptr<_1b4c466a8_Data> _7169_dest = _1b4c6b15b_evalExpr1((*(_70826_e)), (*((*(_70841_fc))))._field_Args[0LL]);;
	{
		
		if ((_7169_dest == nullptr)) {
			_case_begin_1abb4b330:;
			{
				return nullptr;;
			}
		}
		else if ((_1b4c810b6_Slc((*(_7169_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abb4a274:;
			{
				return _1b4d67587_callerLenSlice(&(_7169_dest), _70863_d);;
			}
		}
		else if ((_1b4c80d30_Arr((*(_7169_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abb4a2da:;
			{
				return _1b4d67c80_callerLenArr(&(_7169_dest), _70863_d);;
			}
		}
		else if ((_1b4c81b00_Map((*(_7169_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abb4a351:;
			{
				return _1b4d6790b_callerLenMap(&(_7169_dest), _70863_d);;
			}
		}
		else if (((_1b4c80060_Prim((*(_7169_dest))._field_Kind.ptr()) != nullptr) && _1b4c88970_IsStr(_1b4c80060_Prim((*_7169_dest.alloc)._field_Kind).ptr()))) {
			_case_begin_1abb4a3b7:;
			{
				return _1b4d68104_callerLenStr(&(_7169_dest), _70863_d);;
			}
		}
		else if ((_1b4c823a3_comptimeStructFields((*(_7169_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abb4a42d:;
			{
				return _1b4d68478_callerLenComptime(_70863_d, (*(_1b4c823a3_comptimeStructFields((*_7169_dest.alloc)._field_Kind)))._field_fields.len());;
			}
		}
		else if ((_1b4c828c0_comptimeEnumFields((*(_7169_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abb4a494:;
			{
				return _1b4d68478_callerLenComptime(_70863_d, (*(_1b4c828c0_comptimeEnumFields((*_7169_dest.alloc)._field_Kind)))._field_fields.len());;
			}
		}
		else if ((_1b4c83690_comptimeTypeInfos((*(_7169_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abb4b42e:;
			{
				return _1b4d68478_callerLenComptime(_70863_d, (*(_1b4c83690_comptimeTypeInfos((*_7169_dest.alloc)._field_Kind)))._field_types.len());;
			}
		}
		else if ((_1b4c82ddc_comptimeParams((*(_7169_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abb4b495:;
			{
				return _1b4d68478_callerLenComptime(_70863_d, (*(_1b4c82ddc_comptimeParams((*_7169_dest.alloc)._field_Kind)))._field_params.len());;
			}
		}
		else if ((_1b4c83bac_comptimeStatics((*(_7169_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abb4b50b:;
			{
				return _1b4d68478_callerLenComptime(_70863_d, (*(_1b4c83bac_comptimeStatics((*_7169_dest.alloc)._field_Kind)))._field_fields.len());;
			}
		}
		else if ((_1b4c846e6_comptimeFiles((*(_7169_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abb4b572:;
			{
				return _1b4d68478_callerLenComptime(_70863_d, (*(_1b4c846e6_comptimeFiles((*_7169_dest.alloc)._field_Kind)))._field_files.len());;
			}
		}
		else {
			_case_begin_1abb4a20d:;
			{
				_1b4c48930_pushErr((*(_70826_e)).ptr(), (*((*((*(_70841_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1abb486a1:;
	};
}



inline jule::Ptr<_1b4c466a8_Data> _1b4d68c2b_callerCapSlice(jule::Ptr<_1b4c466a8_Data>* _74624_expr, jule::Ptr<_1b4c466a8_Data>* _74642_d) {
	(*((*(_74642_d))))._field_Kind=_1b4c400db_lenKind();
	(*((*(_74642_d))))._field_Model=jule::Any(jule::new_ptr<_1b4b31692_BuiltinCapCallExprModel>(_1b4b31692_BuiltinCapCallExprModel{._field_Expr=(*(_74624_expr))}), &__jule_any_type116);
	return (*(_74642_d));;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4d6915a_builtinCallerCap(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _75426_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _75441_fc, jule::Ptr<_1b4c466a8_Data>* _75463_d) {
	if (((*((*(_75441_fc))))._field_Args.len() < 1LL)) {
		_1b4c48930_pushErr((*(_75426_e)).ptr(), (*((*(_75441_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("obj", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_75441_fc))))._field_Args.len() > 1LL)) {
		_1b4c48930_pushErr((*(_75426_e)).ptr(), (*((*((*(_75441_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("cap", 3), &__jule_any_type4)}));
	};
	jule::Ptr<_1b4c466a8_Data> _7629_dest = _1b4c6b49c_evalExpr((*(_75426_e)), (*((*(_75441_fc))))._field_Args[0LL]);;
	{
		
		if ((_7629_dest == nullptr)) {
			_case_begin_1abb5ac8a:;
			{
				return nullptr;;
			}
		}
		else if ((*(_7629_dest))._field_Decl) {
			_case_begin_1abb5ad01:;
			{
				_1b4c48930_pushErr((*(_75426_e)).ptr(), (*((*((*(_75441_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1b4c810b6_Slc((*(_7629_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abb5ad67:;
			{
				return _1b4d68c2b_callerCapSlice(&(_7629_dest), _75463_d);;
			}
		}
		else {
			_case_begin_1abb59c45:;
			{
				_1b4c48930_pushErr((*(_75426_e)).ptr(), (*((*((*(_75441_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1abb581d8:;
	};
}



inline jule::Ptr<_1b4c466a8_Data> _1b4d69644_callerDeleteMap(jule::Ptr<_1b4c483d0_Eval>* _77725_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _77740_fc, jule::Ptr<_1b4c466a8_Data>* _77762_expr, jule::Ptr<_1b4c466a8_Data>* _77780_d) {
	if ((!((*((*(_77762_expr))))._field_Mutable))) {
		_1b4c48930_pushErr((*(_77725_e)).ptr(), (*((*((*(_77740_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	(*(_77780_d))=_1b4c773ba_buildVoidData();
	jule::Ptr<_1b4b31a6b_BuiltinDeleteCallExprModel> _7829_model = jule::new_ptr<_1b4b31a6b_BuiltinDeleteCallExprModel>(_1b4b31a6b_BuiltinDeleteCallExprModel{._field_Dest=(*(_77762_expr)), });;
	if (((*((*(_77740_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1b4c466a8_Data> _78613_key = _1b4c6b49c_evalExpr((*(_77725_e)), (*((*(_77740_fc))))._field_Args[1LL]);;
		{
			
			if ((_78613_key == nullptr)) {
				_case_begin_1abb61aa4:;
				{
					return nullptr;;
				}
			}
			else if ((*(_78613_key))._field_Decl) {
				_case_begin_1abb606eb:;
				{
					_1b4c48930_pushErr((*(_77725_e)).ptr(), (*((*((*(_77740_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			else {
				_case_begin_1abb60685:;
				{
					;
					jule::Ptr<_1b4c7c90e_TypeKind> _79517_keyType = (*(_1b4c81b00_Map((*((*(_77762_expr))))._field_Kind.ptr())))._field_Key;;
					if ((!(_1b4bc6380_checkAssignType((*((*(_77725_e))))._field_s, false, &(_79517_keyType), &(_78613_key), (*((*((*(_77740_fc))))._field_Args[1LL]))._field_Token)))) {
						return nullptr;;
					};
				}
			}
			_match_end_1abb6061e:;
		};
		(*(_7829_model))._field_Key=_78613_key;
	};
	(*((*(_77780_d))))._field_Model=jule::Any(_7829_model, &__jule_any_type31);
	return (*(_77780_d));;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4d69a73_builtinCallerDelete(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _80629_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _80644_fc, jule::Ptr<_1b4c466a8_Data>* _80666_d) {
	if (((*((*(_80644_fc))))._field_Args.len() < 1LL)) {
		_1b4c48930_pushErr((*(_80629_e)).ptr(), (*((*(_80644_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("map", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_80644_fc))))._field_Args.len() > 2LL)) {
		_1b4c48930_pushErr((*(_80629_e)).ptr(), (*((*((*(_80644_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("delete", 6), &__jule_any_type4)}));
	};
	jule::Ptr<_1b4c466a8_Data> _8149_dest = _1b4c6b49c_evalExpr((*(_80629_e)), (*((*(_80644_fc))))._field_Args[0LL]);;
	{
		
		if ((_8149_dest == nullptr)) {
			_case_begin_1abb68803:;
			{
				return nullptr;;
			}
		}
		else if ((*(_8149_dest))._field_Decl) {
			_case_begin_1abb68869:;
			{
				_1b4c48930_pushErr((*(_80629_e)).ptr(), (*((*((*(_80644_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1b4c81b00_Map((*(_8149_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abb688d0:;
			{
				return _1b4d69644_callerDeleteMap(_80629_e, _80644_fc, &(_8149_dest), _80666_d);;
			}
		}
		else {
			_case_begin_1abb677ad:;
			{
				_1b4c48930_pushErr((*(_80629_e)).ptr(), (*((*((*(_80644_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1abb65c51:;
	};
}



inline jule::Ptr<_1b4c466a8_Data> _1b4d69ea2_builtinCallerAssert(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _82929_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _82944_fc, jule::Ptr<_1b4c466a8_Data>* ) {
	if (((*((*(_82944_fc))))._field_Args.len() < 1LL)) {
		_1b4c48930_pushErr((*(_82929_e)).ptr(), (*((*(_82944_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("expr", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_82944_fc))))._field_Args.len() > 2LL)) {
		_1b4c48930_pushErr((*(_82929_e)).ptr(), (*((*((*(_82944_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("assert", 6), &__jule_any_type4)}));
	};
	jule::Ptr<_1b4c466a8_Data> _8389_expr = _1b4c6b49c_evalExpr((*(_82929_e)), (*((*(_82944_fc))))._field_Args[0LL]);;
	if ((_8389_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1b4c80060_Prim((*(_8389_expr))._field_Kind.ptr()) == nullptr) || (!(_1b4c886d9_IsBool(_1b4c80060_Prim((*(_8389_expr))._field_Kind).ptr()))))) {
		_1b4c48930_pushErr((*(_82929_e)).ptr(), (*((*(_82944_fc))))._field_Token, jule::Str::lit("assertion requires boolean expression", 37), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1b4b30718_BuiltinAssertCallExprModel> _8479_model = jule::new_ptr<_1b4b30718_BuiltinAssertCallExprModel>(_1b4b30718_BuiltinAssertCallExprModel{._field_Token=(*((*(_82944_fc))))._field_Token, ._field_Expr=(*(_8389_expr))._field_Model, ._field_Log=jule::Str::lit("assertion failed", 16)});;
	if (((*((*(_82944_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1b4c466a8_Data> _85513_log = _1b4c6b49c_evalExpr((*(_82929_e)), (*((*(_82944_fc))))._field_Args[1LL]);;
		if ((_85513_log == nullptr)) {
			return nullptr;;
		};
		if ((((!(_1b4c470b0_IsConst(_85513_log.ptr()))) || (_1b4c80060_Prim((*(_85513_log))._field_Kind) == nullptr)) || (!(_1b4c88970_IsStr(_1b4c80060_Prim((*(_85513_log))._field_Kind).ptr()))))) {
			_1b4c48930_pushErr((*(_82929_e)).ptr(), (*((*((*(_82944_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("const str", 9), &__jule_any_type4),jule::Any(_1b4c7ccc7_Str((*(_85513_log))._field_Kind), &__jule_any_type4)}));
			return nullptr;;
		};
		(*(_8479_model))._field_Log=_1b2755681_ReadStr((*(_85513_log))._field_Constant.ptr());
	};
	jule::Ptr<_1b4c466a8_Data> _8689_d = _1b4c773ba_buildVoidData();;
	(*(_8689_d))._field_Model=jule::Any(_8479_model, &__jule_any_type29);
	return _8689_d;;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4d6a3d1_builtinCallerStdComptimeTypeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _87340_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _87355_fc, jule::Ptr<_1b4c466a8_Data>* ) {
	if (((*((*(_87355_fc))))._field_Args.len() < 1LL)) {
		_1b4c48930_pushErr((*(_87340_e)).ptr(), (*((*(_87355_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_87355_fc))))._field_Args.len() > 1LL)) {
		_1b4c48930_pushErr((*(_87340_e)).ptr(), (*((*((*(_87355_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("TypeOf", 6), &__jule_any_type4)}));
	};
	jule::Ptr<_1b4c466a8_Data> _8829_d = _1b4c6582b_evalExprKind((*(_87340_e)), (*((*((*(_87355_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_8829_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1b4b39865_FnIns> _8865_f = _1b4c8134c_Fn((*(_8829_d))._field_Kind.ptr());;
	if ((_8865_f != nullptr)) {
		if (_1b4b3acea_IsBuiltin(_8865_f)) {
			_1b4c48930_pushErr((*(_87340_e)).ptr(), (*((*((*(_87355_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("comptime::TypeOf is not supports type @", 39), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("<built-in fn>", 13), &__jule_any_type4)}));
			return nullptr;;
		};
		if (((*_8865_f.alloc)._field_Generics.len() != (*((*_8865_f.alloc)._field_Decl))._field_Generics.len())) {
			_1b4c48930_pushErr((*(_87340_e)).ptr(), (*((*((*(_87355_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	jule::Ptr<_1b4b24641_StructIns> _8975_s = _1b4c815d3_Struct((*(_8829_d))._field_Kind);;
	if (((_8975_s != nullptr) && ((*_8975_s.alloc)._field_Generics.len() != (*((*_8975_s.alloc)._field_Decl))._field_Generics.len()))) {
		_1b4c48930_pushErr((*(_87340_e)).ptr(), (*((*((*(_87355_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (_1b4c8211c_comptime((*(_8829_d))._field_Kind)) {
		_1b4c48930_pushErr((*(_87340_e)).ptr(), (*((*((*(_87355_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("comptime::TypeOf is not supports type @", 39), jule::Slice<jule::Any>::make({jule::Any(_1b4c7ccc7_Str((*(_8829_d))._field_Kind), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1b4b6de82_buildComptimeTypeInfoData(&((*((*(_87340_e))))._field_s), &((*(_8829_d))._field_Kind));;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4d6aa52_builtinCallerStdComptimeValueOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _90941_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _90956_fc, jule::Ptr<_1b4c466a8_Data>* ) {
	if (((*((*(_90956_fc))))._field_Args.len() < 1LL)) {
		_1b4c48930_pushErr((*(_90941_e)).ptr(), (*((*(_90956_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("expr", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_90956_fc))))._field_Args.len() > 1LL)) {
		_1b4c48930_pushErr((*(_90941_e)).ptr(), (*((*((*(_90956_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("ValueOf", 7), &__jule_any_type4)}));
	};
	jule::Ptr<_1b4c466a8_Data> _9179_d = _1b4c6b49c_evalExpr((*(_90941_e)), (*((*(_90956_fc))))._field_Args[0LL]);;
	if ((_9179_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1b4c4043d_isGoodValueToInfer(&(_9179_d))))) {
		_1b4c48930_pushErr((*(_90941_e)).ptr(), (*((*((*(_90956_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1b4c7ccc7_Str((*(_9179_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("ValueOf", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1b4b6e2c3_buildComptimeValue(&(_9179_d));;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4d6ae81_builtinCallerStdComptimeLine(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _92938_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _92953_fc, jule::Ptr<_1b4c466a8_Data>* ) {
	if (((*((*(_92953_fc))))._field_Args.len() > 0LL)) {
		_1b4c48930_pushErr((*(_92938_e)).ptr(), (*((*((*(_92953_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Line", 4), &__jule_any_type4)}));
	};
	jule::Ptr<_1b2753508_Const> _9339_constant = static__1b2753948_NewI64(static_cast<jule::I64>((*((*((*(_92953_fc))))._field_Token))._field_Row));;
	return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=_1b4d6121d_primInt, ._field_Model=jule::Any(_9339_constant, &__jule_any_type19), ._field_Constant=_9339_constant});;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4d6b3b0_builtinCallerStdComptimeFile(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _94138_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _94153_fc, jule::Ptr<_1b4c466a8_Data>* ) {
	if (((*((*(_94153_fc))))._field_Args.len() > 0LL)) {
		_1b4c48930_pushErr((*(_94138_e)).ptr(), (*((*((*(_94153_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("File", 4), &__jule_any_type4)}));
	};
	return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=jule::new_ptr<_1b4c7c90e_TypeKind>(_1b4c7c90e_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1b4b6ba40_comptimeFile>(_1b4b6ba40_comptimeFile{._field_file=(*((*((*(_94138_e))))._field_s))._field_file}), (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data18)}), });;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4d6b7de_builtinCallerStdComptimeFiles(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _95439_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _95454_fc, jule::Ptr<_1b4c466a8_Data>* ) {
	if (((*((*(_95454_fc))))._field_Args.len() > 0LL)) {
		_1b4c48930_pushErr((*(_95439_e)).ptr(), (*((*((*(_95454_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Files", 5), &__jule_any_type4)}));
	};
	return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=jule::new_ptr<_1b4c7c90e_TypeKind>(_1b4c7c90e_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1b4b6a445_comptimeFiles>(_1b4b6a445_comptimeFiles{._field_files=(*((*((*(_95439_e))))._field_s))._field_files}), (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data17)}), });;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4d6bc1d_builtinCallerStdComptimeTypeAlias(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _96743_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _96758_fc, jule::Ptr<_1b4c466a8_Data>* ) {
	if (((*((*(_96758_fc))))._field_Args.len() > 2LL)) {
		_1b4c48930_pushErr((*(_96743_e)).ptr(), (*((*((*(_96758_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("TypeAlias", 9), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_96758_fc))))._field_Args.len() == 0LL)) {
		_1b4c48930_pushErr((*(_96743_e)).ptr(), (*((*(_96758_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("ident, type", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_96758_fc))))._field_Args.len() == 1LL)) {
		_1b4c48930_pushErr((*(_96743_e)).ptr(), (*((*(_96758_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*((*(_96758_fc))))._field_Args[0LL]))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1abb8edac:;
			{
				goto _match_end_1abb92145;
			}
		}
		else {
			_case_begin_1abb921ab:;
			{
				_1b4c48930_pushErr((*(_96743_e)).ptr(), (*((*((*(_96758_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				_1b4c48c93_pushSuggestion((*(_96743_e)).ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1abb92145:;
	};
	jule::Ptr<_1b4ad5712_Token> _9889_ident = (*((*((*((*(_96758_fc))))._field_Args[0LL]))._field_Kind.cast_ptr<_1b4b0181b_IdentExpr>(&__jule_any_type79)))._field_Token;;
	{
		auto &_match_expr{ (*((*(_96743_e))))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b4c9c500_Lookup_mptr_data0)) {
			_case_begin_1abb94477:;
			{
				goto _match_end_1abb946b9;
			}
		}
		else {
			_case_begin_1abb9471e:;
			{
				_1b4c48930_pushErr((*(_96743_e)).ptr(), (*((*(_96758_fc))))._field_Token, jule::Str::lit("you can call @ function in the scopes only", 42), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("TypeAlias", 9), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1abb946b9:;
	};
	jule::Ptr<_1b4b80cb8_scopeChecker> _9979_sc = (*((*(_96743_e))))._field_lookup.cast_ptr<_1b4b80cb8_scopeChecker>((jule::Trait::Type*)&_1b4c9c500_Lookup_mptr_data0);;
	jule::Ptr<_1b4c7bb1c_TypeAlias> _9989_alias = jule::new_ptr<_1b4c7bb1c_TypeAlias>(_1b4c7bb1c_TypeAlias{._field_Scope=(*(_9979_sc))._field_tree, ._field_Public=_1b4bb7d00_IsPub((*(_9889_ident))._field_Kind), ._field_Binded=false, ._field_Used=false, ._field_Generic=false, ._field_Token=_9889_ident, ._field_Ident=(*_9889_ident.alloc)._field_Kind, ._field_Kind=jule::new_ptr<_1b4c84ad1_TypeSymbol>(), });;
	jule::Ptr<_1b4c466a8_Data> _10089_t = _1b4c65b6c_eval1((*(_96743_e)), (*((*(_96758_fc))))._field_Args[1LL]);;
	if ((_10089_t == nullptr)) {
		return nullptr;;
	};
	if ((*(_10089_t))._field_Decl) {
		(*((*(_9989_alias))._field_Kind))._field_Kind=(*(_10089_t))._field_Kind;
	} else {
		jule::Ptr<_1b4b615d4_comptimeTypeInfo> _101513_cti = _1b4c83926_comptimeTypeInfo((*(_10089_t))._field_Kind.ptr());;
		if ((_101513_cti == nullptr)) {
			_1b4c48930_pushErr((*(_96743_e)).ptr(), (*((*((*(_96758_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			_1b4c48c93_pushSuggestion((*(_96743_e)).ptr(), jule::Str::lit("expected type declaration", 25), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*((*(_9989_alias))._field_Kind))._field_Kind=(*(_101513_cti))._field_base;
	};
	_1b4b85b69_checkTypeAlias(_9979_sc, &(_9989_alias));
	return _1b4c773ba_buildVoidData();;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4d6c14c_builtinCallerStdMemSizeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _102735_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _102750_fc, jule::Ptr<_1b4c466a8_Data>* ) {
	jule::Ptr<_1b4c466a8_Data> _10289_result = jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=_1b4d60d55_primUint, });;
	if (((*((*(_102750_fc))))._field_Args.len() < 1LL)) {
		_1b4c48930_pushErr((*(_102735_e)).ptr(), (*((*(_102750_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type4)}));
		return _10289_result;;
	};
	if (((*((*(_102750_fc))))._field_Args.len() > 1LL)) {
		_1b4c48930_pushErr((*(_102735_e)).ptr(), (*((*((*(_102750_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("SizeOf", 6), &__jule_any_type4)}));
	};
	jule::Ptr<_1b4c466a8_Data> _10409_d = _1b4c6582b_evalExprKind((*(_102735_e)), (*((*((*(_102750_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_10409_d == nullptr)) {
		return _10289_result;;
	};
	if ((!(_1b4c9a1ce_validTypeForXof(&((*(_10409_d))._field_Kind))))) {
		_1b4c48930_pushErr((*(_102735_e)).ptr(), (*((*((*(_102750_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1b4c7ccc7_Str((*(_10409_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("SizeOf", 6), &__jule_any_type4)}));
	};
	(*(_10289_result))._field_Model=jule::Any(jule::new_ptr<_1b4b329c3_SizeofExprModel>(_1b4b329c3_SizeofExprModel{._field_Expr=(*(_10409_d))._field_Model}), &__jule_any_type117);
	return _10289_result;;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4d6c57b_builtinCallerStdMemAlignOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _105236_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _105251_fc, jule::Ptr<_1b4c466a8_Data>* ) {
	jule::Ptr<_1b4c466a8_Data> _10539_result = jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=_1b4d60d55_primUint, });;
	if (((*((*(_105251_fc))))._field_Args.len() < 1LL)) {
		_1b4c48930_pushErr((*(_105236_e)).ptr(), (*((*(_105251_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type4)}));
		return _10539_result;;
	};
	if (((*((*(_105251_fc))))._field_Args.len() > 1LL)) {
		_1b4c48930_pushErr((*(_105236_e)).ptr(), (*((*((*(_105251_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("AlignOf", 7), &__jule_any_type4)}));
	};
	jule::Ptr<_1b4c466a8_Data> _10659_d = _1b4c6582b_evalExprKind((*(_105236_e)), (*((*((*(_105251_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_10659_d == nullptr)) {
		return _10539_result;;
	};
	if ((!(_1b4c9a1ce_validTypeForXof(&((*(_10659_d))._field_Kind))))) {
		_1b4c48930_pushErr((*(_105236_e)).ptr(), (*((*((*(_105251_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1b4c7ccc7_Str((*(_10659_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("AlignOf", 7), &__jule_any_type4)}));
	};
	(*(_10539_result))._field_Model=jule::Any(jule::new_ptr<_1b4b32bb0_AlignofExprModel>(_1b4b32bb0_AlignofExprModel{._field_Expr=(*(_10659_d))._field_Model}), &__jule_any_type118);
	return _10539_result;;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4d6c9aa_builtinCallerStdMemFree(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _107733_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _107748_fc, jule::Ptr<_1b4c466a8_Data>* ) {
	if (((*((*(_107748_fc))))._field_Args.len() < 1LL)) {
		_1b4c48930_pushErr((*(_107733_e)).ptr(), (*((*(_107748_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("h", 1), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_107748_fc))))._field_Args.len() > 1LL)) {
		_1b4c48930_pushErr((*(_107733_e)).ptr(), (*((*((*(_107748_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Free", 4), &__jule_any_type4)}));
	};
	jule::Ptr<_1b4c466a8_Data> _10869_d = _1b4c6b49c_evalExpr((*(_107733_e)), (*((*(_107748_fc))))._field_Args[0LL]);;
	if ((_10869_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1b4c7ea43_PerformsRC((*(_10869_d))._field_Kind.ptr())))) {
		_1b4c48930_pushErr((*(_107733_e)).ptr(), (*((*((*(_107748_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1b4c466a8_Data> _10959_result = _1b4c773ba_buildVoidData();;
	(*(_10959_result))._field_Model=jule::Any(jule::new_ptr<_1b4b3392a_FreeExprModel>(_1b4b3392a_FreeExprModel{._field_Expr=(*(_10869_d))._field_Model}), &__jule_any_type32);
	return _10959_result;;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4d6cdd9_builtinCallerStdJuleIntegratedToStr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _110045_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _110060_fc, jule::Ptr<_1b4c466a8_Data>* ) {
	if (((*((*(_110060_fc))))._field_Args.len() < 1LL)) {
		_1b4c48930_pushErr((*(_110045_e)).ptr(), (*((*(_110060_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("expr", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_110060_fc))))._field_Args.len() > 1LL)) {
		_1b4c48930_pushErr((*(_110045_e)).ptr(), (*((*((*(_110060_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("ToStr", 5), &__jule_any_type4)}));
	};
	jule::Ptr<_1b4c466a8_Data> _11099_d = _1b4c6b49c_evalExpr((*(_110045_e)), (*((*(_110060_fc))))._field_Args[0LL]);;
	if ((_11099_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1b4c99189_isBuiltinStrConvertable(&((*(_11099_d))._field_Kind))))) {
		_1b4c48930_pushErr((*(_110045_e)).ptr(), (*((*((*(_110060_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1b4c466a8_Data>(_1b4c466a8_Data{._field_Kind=_1b4d6053b_primStr, ._field_Model=jule::Any(jule::new_ptr<_1b4b33254_IntegratedToStrExprModel>(_1b4b33254_IntegratedToStrExprModel{._field_Expr=(*(_11099_d))._field_Model}), &__jule_any_type119), });;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4d6d318_builtinCallerStdJuleIntegratedEmit(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _112744_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _112759_fc, jule::Ptr<_1b4c466a8_Data>* _112781_d) {
	if ((!(_1b4c49425_isUnsafe((*(_112744_e)).ptr())))) {
		_1b4c48930_pushErr((*(_112744_e)).ptr(), (*((*(_112759_fc))))._field_Token, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
	};
	if (((*((*(_112759_fc))))._field_Args.len() < 1LL)) {
		_1b4c48930_pushErr((*(_112744_e)).ptr(), (*((*(_112759_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("code", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b4c466a8_Data> _11379_argd = _1b4c6b49c_evalExpr((*(_112744_e)), (*((*(_112759_fc))))._field_Args[0LL]);;
	if ((_11379_argd == nullptr)) {
		return nullptr;;
	};
	if (((_1b4c80060_Prim((*(_11379_argd))._field_Kind.ptr()) == nullptr) || (!(_1b4c88970_IsStr(_1b4c80060_Prim((*(_11379_argd))._field_Kind).ptr()))))) {
		_1b4c48930_pushErr((*(_112744_e)).ptr(), (*((*((*(_112759_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1b4c7ccc7_Str((*(_11379_argd))._field_Kind), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((!(_1b4c470b0_IsConst(_11379_argd.ptr()))) || (!(_1b2757c7c_IsStr((*(_11379_argd))._field_Constant.ptr()))))) {
		_1b4c48930_pushErr((*(_112744_e)).ptr(), (*((*((*(_112759_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b4c466a8_Data> _11529_r = _1b4c773ba_buildVoidData();;
	jule::Ptr<_1b4b39865_FnIns> _11549_f = _1b4c8134c_Fn((*((*(_112781_d))))._field_Kind);;
	if (((*(_11549_f))._field_Generics.len() > 0LL)) {
		(*(_11529_r))._field_Kind=(*((*_11549_f.alloc)._field_Generics[0LL]))._field_Kind;
	};
	jule::Ptr<_1b4b3362d_BackendEmitExprModel> _11599_model = jule::new_ptr<_1b4b3362d_BackendEmitExprModel>(_1b4b3362d_BackendEmitExprModel{._field_Code=_1b2755681_ReadStr((*(_11379_argd))._field_Constant), });;
	if (((*((*(_112759_fc))))._field_Args.len() > 1LL)) {
		(*(_11599_model))._field_Exprs=jule::Slice<jule::Any>::alloc(0LL, ((*((*(_112759_fc))))._field_Args.len() - 1LL), jule::Any(nullptr));
		{
			auto expr = (*((*(_112759_fc))))._field_Args.slice(1LL);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1abbbdeeb:;
			if (it != expr_end) {
				jule::Ptr<_1b4b00001_Expr> _116521_arg = *it;
				{
					_11379_argd=_1b4c65b6c_eval1((*(_112744_e)), _116521_arg);
					if ((_11379_argd == nullptr)) {
						return nullptr;;
					};
					(*_11599_model.alloc)._field_Exprs=jule::append((*_11599_model.alloc)._field_Exprs,jule::Slice<jule::Any>::make({(*(_11379_argd))._field_Model}));
				}
				_iter_next_1abbbdeeb:;
				++it;
				goto _iter_begin_1abbbdeeb;
			}
			_iter_end_1abbbdeeb:;
		};
	};
	(*_11529_r.alloc)._field_Model=jule::Any(_11599_model, &__jule_any_type24);
	return _11529_r;;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4d6d747_builtinCallerStdDebugOut(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _117834_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _117849_fc, jule::Ptr<_1b4c466a8_Data>* _117871_d) {
	(*(_117871_d))=_1b4d650ce_builtinCallerOut(nullptr, _117834_e, _117849_fc, _117871_d);
	if (((*(_117871_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*((*(_117871_d))))._field_Model.cast_ptr<_1b4b2e5d5_BuiltinOutCallExprModel>(&__jule_any_type26)))._field_Debug=true;
	return (*(_117871_d));;
}



inline jule::Ptr<_1b4c466a8_Data> _1b4d6db76_builtinCallerStdDebugOutln(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _118736_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _118751_fc, jule::Ptr<_1b4c466a8_Data>* _118773_d) {
	(*(_118773_d))=_1b4d6550d_builtinCallerOutln(nullptr, _118736_e, _118751_fc, _118773_d);
	if (((*(_118773_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*((*(_118773_d))))._field_Model.cast_ptr<_1b4b2e9ae_BuiltinOutlnCallExprModel>(&__jule_any_type27)))._field_Debug=true;
	return (*(_118773_d));;
}



inline jule::Ptr<_1b5725bd1_FileInfo> _1b572892b_ParseFile(jule::Ptr<_1b4adae98_File> _2318_f) {
	if ((_2318_f == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1b5725bd1_FileInfo> _279_finf = jule::new_ptr<_1b5725bd1_FileInfo>();;
	({
		__jule_tuple_x_1b4ae8ca8_Ast__jule_tuple_s_1cb285120_Log __jule_assign_result = _1b576c354_parseFileset(_2318_f);
		(*_279_finf.alloc)._field_Ast = __jule_assign_result.__jule_result_arg0;
		(*_279_finf.alloc)._field_Errors = __jule_assign_result.__jule_result_arg1;
	});
	if (((*_279_finf.alloc)._field_Errors.len() > 0LL)) {
		(*_279_finf.alloc)._field_Ast=nullptr;
	};
	return _279_finf;;
}



inline __jule_tuple_x_1b4ae8ca8_Ast__jule_tuple_s_1cb285120_Log _1b576c354_parseFileset(jule::Ptr<_1b4adae98_File> _5521_f) {
	__jule_tuple_x_1b4ae8ca8_Ast__jule_tuple_s_1cb285120_Log __jule_func_result;
	jule::Ptr<_1b578ce8a_parser> _569_p = jule::new_ptr<_1b578ce8a_parser>();;
	_1b579dce2_parse(_569_p, &(_5521_f));
	__jule_func_result.__jule_result_arg0 = (*_569_p.alloc)._field_ast;
	__jule_func_result.__jule_result_arg1 = (*_569_p.alloc)._field_errors;
	return __jule_func_result;;
}



inline jule::Ptr<_1b4b10a4a_ScopeTree> _1b576cce4_newScope(void) {
	return jule::new_ptr<_1b4b10a4a_ScopeTree>();;
}



inline __jule_tuple_bool__jule_tuple_bool _1b576d179_isSt(jule::Ptr<_1b4ad5712_Token> _499_current, jule::Ptr<_1b4ad5712_Token> _4926_prev) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=(((*(_499_current))._field_Id == static_cast<jule::U64>(3LLU)) || ((*(_4926_prev))._field_Row < (*_499_current.alloc)._field_Row));
	__jule_func_result.__jule_result_arg1=((*_499_current.alloc)._field_Id == static_cast<jule::U64>(3LLU));
	return __jule_func_result;;
}



inline jule::Bool _1b576d4ed_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _5526_tokens, jule::I64* _5545_i) {
	if ((((*(_5545_i)) > 1LL) && ((*((*(_5526_tokens))[((*(_5545_i)) - 2LL)]))._field_Id == static_cast<jule::U64>(19LLU)))) {
		return false;;
	};
	{
		jule::Ptr<_1b4ad5712_Token> _619_prev = (*(_5526_tokens))[((*(_5545_i)) - 1LL)];;
		return (((*(_619_prev))._field_Id == static_cast<jule::U64>(17LLU)) || (_1b4ad625c_IsBinOp((*_619_prev.alloc)._field_Id) && ((*_619_prev.alloc)._field_Row < (*((*(_5526_tokens))[(*(_5545_i))]))._field_Row)));;
	};
}



inline __jule_tuple_int__jule_tuple_bool _1b576d8b6_nextStPos(jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _6815_tokens, jule::I64 _6833_start) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _699_braceN = 0LL;;
	jule::I64 _709_i = _6833_start;;
	for (; (_709_i < (*(_6815_tokens)).len()); (_709_i)++) {
		{
			jule::Bool _7213_ok = false;;
			jule::Bool _7313_terminated = false;;
			jule::Ptr<_1b4ad5712_Token> _749_tok = (*(_6815_tokens))[_709_i];;
			{
				auto &_match_expr{ (*(_749_tok))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1abc51567:;
					{
						if (((_699_braceN == 0LL) && (_709_i > _6833_start))) {
							if ((!(_1b576d4ed_prevIsIncompleteExpr(_6815_tokens, &(_709_i))))) {
								({
									__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1b576d179_isSt(_749_tok, (*(_6815_tokens))[(_709_i - 1LL)]);
									_7213_ok = __jule_assign_result.__jule_result_arg0;
									_7313_terminated = __jule_assign_result.__jule_result_arg1;
								});
								if (_7213_ok) {
									goto _julec_label_1abc514ac;
								};
							};
						};
						(_699_braceN)++;
						goto _iter_next_1abc50126;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1abc517cb:;
					{
						(_699_braceN)--;
						if (((_699_braceN == 0LL) && ((_709_i + 1LL) < (*(_6815_tokens)).len()))) {
							({
								__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1b576d179_isSt((*(_6815_tokens))[(_709_i + 1LL)], _749_tok);
								_7213_ok = __jule_assign_result.__jule_result_arg0;
								_7313_terminated = __jule_assign_result.__jule_result_arg1;
							});
							if (_7213_ok) {
								(_709_i)++;
								goto _julec_label_1abc514ac;
							};
						};
						goto _iter_next_1abc50126;
					}
				}
				_match_end_1abc51754:;
			};
			if ((_699_braceN != 0LL)) {
				goto _iter_next_1abc50126;
			};
			if ((_709_i > _6833_start)) {
				if (_1b576d4ed_prevIsIncompleteExpr(_6815_tokens, &(_709_i))) {
					goto _iter_next_1abc50126;
				};
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1b576d179_isSt(_749_tok, (*(_6815_tokens))[(_709_i - 1LL)]);
					_7213_ok = __jule_assign_result.__jule_result_arg0;
					_7313_terminated = __jule_assign_result.__jule_result_arg1;
				});
			} else {
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1b576d179_isSt(_749_tok, _749_tok);
					_7213_ok = __jule_assign_result.__jule_result_arg0;
					_7313_terminated = __jule_assign_result.__jule_result_arg1;
				});
			};
			if ((!(_7213_ok))) {
				goto _iter_next_1abc50126;
			};
			_julec_label_1abc514ac:;
			if (_7313_terminated) {
				(_709_i)++;
			};
			__jule_func_result.__jule_result_arg0 = _709_i;
			__jule_func_result.__jule_result_arg1 = _7313_terminated;
			return __jule_func_result;;
		}
	_iter_next_1abc50126:;
	}
	_iter_end_1abc50126:;;
	__jule_func_result.__jule_result_arg0 = _709_i;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1b4ad5712_Token__jule_tuple_bool _1b576dc3a_skipSt(jule::I64* _13016_i, jule::Slice<jule::Ptr<_1b4ad5712_Token>> _13028_tokens) {
	__jule_tuple_sx_1b4ad5712_Token__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _1315_start = (*(_13016_i));;
	jule::Bool _1329_terminated = false;;
	({
		__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b576d8b6_nextStPos(&(_13028_tokens), _1315_start);
		(*(_13016_i)) = __jule_assign_result.__jule_result_arg0;
		_1329_terminated = __jule_assign_result.__jule_result_arg1;
	});
	jule::Slice<jule::Ptr<_1b4ad5712_Token>> _1349_stTokens = _13028_tokens.slice(_1315_start, (*(_13016_i)));;
	if (_1329_terminated) {
		if ((_1349_stTokens.len() == 1LL)) {
			__jule_func_result = std::move(_1b576dc3a_skipSt(_13016_i, _13028_tokens));
return __jule_func_result;;
		};
		(_1349_stTokens).mut_slice(0LL, (_1349_stTokens.len() - 1LL));;
	};
	__jule_func_result.__jule_result_arg0 = _1349_stTokens;
	__jule_func_result.__jule_result_arg1 = _1329_terminated;
	return __jule_func_result;;
}



inline jule::Slice<jule::Ptr<_1b576e06a_stmt>> _1b576e422_splitStmts(jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _15120_tokens) {
	jule::Slice<jule::Ptr<_1b576e06a_stmt>> _1529_stmts = jule::Slice<jule::Ptr<_1b576e06a_stmt>>::alloc(0LL, 20LL);;
	jule::I64 _1539_pos = 0LL;;
	while ((_1539_pos < (*(_15120_tokens)).len())) {
		{
			jule::Slice<jule::Ptr<_1b4ad5712_Token>> _15513_stmt;
			jule::Bool _15519_terminated;
			({
				__jule_tuple_sx_1b4ad5712_Token__jule_tuple_bool __jule_assign_result = _1b576dc3a_skipSt(&(_1539_pos), (*(_15120_tokens)));
				_15513_stmt = __jule_assign_result.__jule_result_arg0;
				_15519_terminated = __jule_assign_result.__jule_result_arg1;
			});
			{ jule::Slice<jule::Ptr<_1b576e06a_stmt>> &__jule_push_dest = _1529_stmts; __jule_push_dest.push(jule::new_ptr<_1b576e06a_stmt>(_1b576e06a_stmt{._field_tokens=_15513_stmt, ._field_terminated=_15519_terminated})); };
		}
	_iter_next_1abc599b0:;
	}
	_iter_end_1abc599b0:;;
	return _1529_stmts;;
}



inline jule::Bool _1b5787a78_isTypeOp(jule::U64* _89314_id) {
	return ((((*(_89314_id)) == static_cast<jule::U64>(65LLU)) || ((*(_89314_id)) == static_cast<jule::U64>(54LLU))) || ((*(_89314_id)) == static_cast<jule::U64>(62LLU)));;
}



inline jule::Bool _1b5787d86_isTypeRange(jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _90021_tokens) {
	jule::Bool _9019_op = false;;
	{
		auto expr = _90021_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abd29b7e:;
		if (it != expr_end) {
			jule::I64 _9029_i = it - expr->begin();
			jule::Ptr<_1b4ad5712_Token> _90212_token = *it;
			{
				if (((*(_90212_token))._field_Id == static_cast<jule::U64>(76LLU))) {
					if (_9019_op) {
						return true;;
					};
					jule::I64 _90717_rangeN = 0LL;;
					jule::Slice<jule::Ptr<_1b4ad5712_Token>> _90817_lTokens = (*(_90021_tokens)).slice(_9029_i);;
					{
						auto expr = &(_90817_lTokens);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1abd2b5ba:;
						if (it != expr_end) {
							jule::Ptr<_1b4ad5712_Token> _90920_lToken = *it;
							{
								{
									auto &_match_expr{ (*(_90920_lToken))._field_Id };
									
									if (_match_expr == static_cast<jule::U64>(76LLU)) {
										_case_begin_1abd2bd5c:;
										{
											(_90717_rangeN)++;
											goto _iter_next_1abd2b5ba;
										}
									}
									else if (_match_expr == static_cast<jule::U64>(77LLU)) {
										_case_begin_1abd2c236:;
										{
											(_90717_rangeN)--;
											goto _iter_next_1abd2b5ba;
										}
									}
									_match_end_1abd2c148:;
								};
								if ((_90717_rangeN == 0LL)) {
									return _1b5787a78_isTypeOp(&((*(_90920_lToken))._field_Id));;
								};
							}
							_iter_next_1abd2b5ba:;
							++it;
							goto _iter_begin_1abd2b5ba;
						}
						_iter_end_1abd2b5ba:;
					};
					return true;;
				};
				if ((!(_1b5787a78_isTypeOp(&((*_90212_token.alloc)._field_Id))))) {
					return false;;
				};
				_9019_op=true;
			}
			_iter_next_1abd29b7e:;
			++it;
			_9029_i++;
			goto _iter_begin_1abd29b7e;
		}
		_iter_end_1abd29b7e:;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1b4ad5712_Token>> _1b5788150_getBlockExpr(jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _93322_tokens) {
	jule::I64 _9349_braceN = 0LL;;
	jule::I64 _9359_skipToNextBraceClose = 0LL;;
	{
		auto expr = _93322_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abd2d721:;
		if (it != expr_end) {
			jule::I64 _9369_i = it - expr->begin();
			jule::Ptr<_1b4ad5712_Token> _93612_tok = *it;
			{
				{
					auto &_match_expr{ (*(_93612_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(31LLU)) {
						_case_begin_1abd2ee09:;
						{
							if (((((*(_93322_tokens)).len() - _9369_i) > 1LL) && ((*((*(_93322_tokens))[(_9369_i + 1LL)]))._field_Id == static_cast<jule::U64>(72LLU)))) {
								(_9359_skipToNextBraceClose)++;
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1abd2ee92:;
						{
							if (((_9349_braceN > 0LL) || (_9359_skipToNextBraceClose > 0LL))) {
								if ((_9359_skipToNextBraceClose > 0LL)) {
									(_9359_skipToNextBraceClose)--;
								};
								(_9349_braceN)++;
								goto _match_end_1abd2ed4e;
							};
							return (*(_93322_tokens)).slice(0LL, _9369_i);;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1abd30008:;
						{
							(_9349_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1abd3006e:;
						{
							(_9349_braceN)--;
						}
					}
					_match_end_1abd2ed4e:;
				};
			}
			_iter_next_1abd2d721:;
			++it;
			_9369_i++;
			goto _iter_begin_1abd2d721;
		}
		_iter_end_1abd2d721:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1b4ad5712_Token__jule_tuple_sx_1b4ad5712_Token _1b5788518_splitDelim(jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _96520_tokens, jule::U64 _96538_delim) {
	__jule_tuple_sx_1b4ad5712_Token__jule_tuple_sx_1b4ad5712_Token __jule_func_result;
	jule::I64 _9669_func = -1LL;;
	jule::I64 _9679_rangeN = 0LL;;
	jule::I64 _9689_i = 0LL;;
	for (; (_9689_i < (*(_96520_tokens)).len()); (_9689_i)++) {
		{
			jule::Ptr<_1b4ad5712_Token> _9709_token = (*(_96520_tokens))[_9689_i];;
			{
				auto &_match_expr{ (*(_9709_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(29LLU)) {
					_case_begin_1abd34a46:;
					{
						_9669_func=_9679_rangeN;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1abd34aac:;
					{
						(_9679_rangeN)++;
						goto _iter_next_1abd33292;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1abd34b23:;
					{
						(_9679_rangeN)--;
						if ((_9669_func == _9679_rangeN)) {
							_9669_func=-1LL;
							if (((((*(_96520_tokens)).len() - _9689_i) > 1LL) && ((*((*(_96520_tokens))[(_9689_i + 1LL)]))._field_Id == static_cast<jule::U64>(8LLU)))) {
								(_9689_i)++;
								goto _iter_next_1abd33292;
							};
						};
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU)) {
					_case_begin_1abd34b89:;
					{
						(_9679_rangeN)--;
					}
				}
				_match_end_1abd349e1:;
			};
			if ((((*(_9709_token))._field_Id == _96538_delim) && (_9679_rangeN == 0LL))) {
				jule::Slice<jule::Ptr<_1b4ad5712_Token>> _99417_l = (*(_96520_tokens)).slice(0LL, _9689_i);;
				jule::Slice<jule::Ptr<_1b4ad5712_Token>> _99517_r = (*(_96520_tokens)).slice((_9689_i + 1LL));;
				__jule_func_result.__jule_result_arg0 = _99417_l;
				__jule_func_result.__jule_result_arg1 = _99517_r;
				return __jule_func_result;;
			};
		}
	_iter_next_1abd33292:;
	}
	_iter_end_1abd33292:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline jule::I64 _1b57887d2_findLowestPrecOp(jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _100422_tokens) {
	jule::U8 _10099_prec = 255LLU;;
	jule::I64 _10109_precPos = -1LL;;
	jule::I64 _10129_braceN = 0LL;;
	jule::Bool _10139_skipToNextBraceOpen = false;;
	{
		auto expr = _100422_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abd39d59:;
		if (it != expr_end) {
			jule::I64 _10149_i = it - expr->begin();
			jule::Ptr<_1b4ad5712_Token> *_101412_token = it;
			{
				{
					auto &_match_expr{ (*((*(_101412_token))))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1abd3aae6:;
						{
							_10139_skipToNextBraceOpen=false;
							goto _case_begin_1abd3ab7e;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1abd3ab7e:;
						{
							(_10129_braceN)++;
							goto _iter_next_1abd39d59;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(75LLU) || _match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_1abd3abe5:;
						{
							(_10129_braceN)--;
							goto _iter_next_1abd39d59;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(13LLU)) {
						_case_begin_1abd3ac5b:;
						{
							_10139_skipToNextBraceOpen=true;
							goto _iter_next_1abd39d59;
						}
					}
					_match_end_1abd3aa3b:;
				};
				{
					
					if (_10139_skipToNextBraceOpen) {
						_case_begin_1abd3c466:;
						{
							goto _iter_next_1abd39d59;
						}
					}
					else if ((_10149_i == 0LL)) {
						_case_begin_1abd3c4cc:;
						{
							goto _iter_next_1abd39d59;
						}
					}
					else if ((_10129_braceN > 0LL)) {
						_case_begin_1abd3c543:;
						{
							goto _iter_next_1abd39d59;
						}
					}
					else if ((!(_1b4ad625c_IsBinOp((*((*(_101412_token))))._field_Id)))) {
						_case_begin_1abd3c5a9:;
						{
							goto _iter_next_1abd39d59;
						}
					}
					_match_end_1abd3c301:;
				};
				jule::Ptr<_1b4ad5712_Token> _10439_left = (*(_100422_tokens))[(_10149_i - 1LL)];;
				if ((_1b4ad5e4e_IsUnaryOp((*(_10439_left))._field_Id) || ((*_10439_left.alloc)._field_Id == static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_1abd39d59;
				};
				if (((_10149_i > 1LL) && ((*_10439_left.alloc)._field_Id == static_cast<jule::U64>(77LLU)))) {
					jule::Ptr<_1b4ad5712_Token> _105113_lleft = (*(_100422_tokens))[(_10149_i - 2LL)];;
					if (((*(_105113_lleft))._field_Id == static_cast<jule::U64>(76LLU))) {
						if ((((*((*(_101412_token))))._field_Id == static_cast<jule::U64>(65LLU)) || ((*(*(_101412_token)).alloc)._field_Id == static_cast<jule::U64>(62LLU)))) {
							goto _iter_next_1abd39d59;
						};
					};
				};
				jule::U8 _10609_p = _1b4ad5a86_Prec((*(_101412_token)));;
				if (((_10609_p != 0LLU) && (_10609_p <= _10099_prec))) {
					_10099_prec=_10609_p;
					_10109_precPos=_10149_i;
				};
			}
			_iter_next_1abd39d59:;
			++it;
			_10149_i++;
			goto _iter_begin_1abd39d59;
		}
		_iter_end_1abd39d59:;
	};
	return _10109_precPos;;
}



inline jule::Ptr<_1b4b0181b_IdentExpr> _1b5788a9b_buildIdentExpr(jule::Ptr<_1b4ad5712_Token>* _106924_token) {
	return jule::new_ptr<_1b4b0181b_IdentExpr>(_1b4b0181b_IdentExpr{._field_Token=(*(_106924_token)), ._field_Ident=(*((*(_106924_token))))._field_Kind, ._field_Binded=false});;
}



inline __jule_tuple_sx_1b4ad5712_Token__jule_tuple_int _1b5788d65_getRangeExprTokens(jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _107728_tokens) {
	__jule_tuple_sx_1b4ad5712_Token__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg1 = 0;
	jule::I64 _10789_rangeN = 0LL;;
	jule::I64 _10799_i = ((*(_107728_tokens)).len() - 1LL);;
	for (; (_10799_i >= 0LL); (_10799_i)--) {
		{
			jule::Ptr<_1b4ad5712_Token> _10819_tok = (*(_107728_tokens))[_10799_i];;
			{
				auto &_match_expr{ (*(_10819_tok))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1abd44490:;
					{
						(_10789_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1abd4479d:;
					{
						(_10789_rangeN)--;
					}
				}
				_match_end_1abd44748:;
			};
			if ((_10789_rangeN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_107728_tokens)).slice(0LL, _10799_i);
				__jule_func_result.__jule_result_arg1 = _10789_rangeN;
				return __jule_func_result;;
			};
		}
	_iter_next_1abd43a33:;
	}
	_iter_end_1abd43a33:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = _10789_rangeN;
	return __jule_func_result;;
}



inline jule::Bool _1b578923e_isAnonFnHead(jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _110018_tokens) {
	{
		auto &_match_expr{ (*((*(_110018_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1abd461d9:;
			{
				if ((((*(_110018_tokens)).len() == 1LL) || ((*((*(_110018_tokens))[1LL]))._field_Id != static_cast<jule::U64>(29LLU)))) {
					goto _match_end_1abd4664b;
				};
				goto _case_begin_1abd4677d;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1abd4677d:;
			{
				if (((*((*(_110018_tokens))[((*(_110018_tokens)).len() - 1LL)]))._field_Id == static_cast<jule::U64>(73LLU))) {
					goto _match_end_1abd4664b;
				};
				return true;;
			}
		}
		_match_end_1abd4664b:;
	};
	return false;;
}



inline jule::Bool _1b5789e43_checkAssignTokens(jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _1623_tokens) {
	if ((((*(_1623_tokens)).len() == 0LL) || (!(_1b4ad9eca_IsAssign((*((*(_1623_tokens))[0LL]))._field_Id))))) {
		return false;;
	};
	jule::I64 _209_braceN = 0LL;;
	{
		auto expr = _1623_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abddc15e:;
		if (it != expr_end) {
			jule::Ptr<_1b4ad5712_Token> *_2112_t = it;
			{
				{
					auto &_match_expr{ (*((*(_2112_t))))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1abddc868:;
						{
							(_209_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1abddcc20:;
						{
							(_209_braceN)--;
						}
					}
					_match_end_1abddcb32:;
				};
				{
					
					if ((_209_braceN < 0LL)) {
						_case_begin_1abdddda8:;
						{
							return false;;
						}
					}
					else if ((_209_braceN > 0LL)) {
						_case_begin_1abddde41:;
						{
							goto _iter_next_1abddc15e;
						}
					}
					else if (_1b4ada55d_IsAssignOp((*((*(_2112_t))))._field_Id) || ((*(*(_2112_t)).alloc)._field_Id == static_cast<jule::U64>(38LLU))) {
						_case_begin_1abdddea7:;
						{
							return true;;
						}
					}
					_match_end_1abdddd53:;
				};
			}
			_iter_next_1abddc15e:;
			++it;
			goto _iter_begin_1abddc15e;
		}
		_iter_end_1abddc15e:;
	};
	return false;;
}



inline _1cb285120_Log _1b578b10e_makeErr(jule::I64 _5112_row, jule::I64 _5122_col, jule::Ptr<_1b4adae98_File>* _5133_f, jule::Str _5143_fmt, jule::Slice<jule::Any> _5156_args) {
	return _1cb285120_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_5112_row, ._field_Column=_5122_col, ._field_Path=(*((*(_5133_f))))._field_Path, ._field_Text=_1cb285582_Logf(_5143_fmt, _5156_args), };;
}



inline jule::Slice<jule::Ptr<_1b4ad5712_Token>> _1b578b63c_range(jule::I64* _6915_i, jule::U64 _6923_open, jule::U64 _6938_close, jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _6959_tokens) {
	if (((*(_6915_i)) >= (*(_6959_tokens)).len())) {
		return nullptr;;
	};
	jule::Ptr<_1b4ad5712_Token> _735_tok = (*(_6959_tokens))[(*(_6915_i))];;
	if (((*(_735_tok))._field_Id != _6923_open)) {
		return nullptr;;
	};
	((*(_6915_i)))++;
	jule::I64 _789_rangeN = 1LL;;
	jule::I64 _795_start = (*(_6915_i));;
	for (; ((_789_rangeN != 0LL) && ((*(_6915_i)) < (*(_6959_tokens)).len())); ((*(_6915_i)))++) {
		{
			jule::Ptr<_1b4ad5712_Token> _819_token = (*(_6959_tokens))[(*(_6915_i))];;
			{
				auto &_match_expr{ (*(_819_token))._field_Id };
				
				if (_match_expr == _6923_open) {
					_case_begin_1abde3e24:;
					{
						(_789_rangeN)++;
					}
				}
				else if (_match_expr == _6938_close) {
					_case_begin_1abde4276:;
					{
						(_789_rangeN)--;
					}
				}
				_match_end_1abde41ee:;
			};
		}
	_iter_next_1abde3330:;
	}
	_iter_end_1abde3330:;;
	return (*(_6959_tokens)).slice(_795_start, ((*(_6915_i)) - 1LL));;
}



inline __jule_tuple_sx_1b4ad5712_Token__jule_tuple_sx_1b4ad5712_Token _1b578b906_rangeLast(jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _9919_tokens) {
	__jule_tuple_sx_1b4ad5712_Token__jule_tuple_sx_1b4ad5712_Token __jule_func_result;
	if (((*(_9919_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::U64 _1035_first = (*((*(_9919_tokens))[((*(_9919_tokens)).len() - 1LL)]))._field_Id;;
	if ((((_1035_first != static_cast<jule::U64>(73LLU)) && (_1035_first != static_cast<jule::U64>(76LLU))) && (_1035_first != static_cast<jule::U64>(75LLU)))) {
		__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I64 _1099_braceN = 0LL;;
	jule::I64 _1109_i = ((*(_9919_tokens)).len() - 1LL);;
	for (; (_1109_i >= 0LL); (_1109_i)--) {
		{
			jule::Ptr<_1b4ad5712_Token> _1129_token = (*(_9919_tokens))[_1109_i];;
			{
				auto &_match_expr{ (*(_1129_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1abde8203:;
					{
						(_1099_braceN)++;
						goto _iter_next_1abde74bb;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1abde8511:;
					{
						(_1099_braceN)--;
					}
				}
				_match_end_1abde84ab:;
			};
			if ((_1099_braceN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_9919_tokens)).slice(0LL, _1109_i);
				__jule_func_result.__jule_result_arg1 = (*(_9919_tokens)).slice(_1109_i);
				return __jule_func_result;;
			};
		}
	_iter_next_1abde74bb:;
	}
	_iter_end_1abde74bb:;;
	__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_ssx_1b4ad5712_Token__jule_tuple_s_1cb285120_Log _1b578bdac_parts(jule::Slice<jule::Ptr<_1b4ad5712_Token>>* _13715_tokens, jule::U64 _13733_id, jule::Bool _13746_exprMust) {
	__jule_tuple_ssx_1b4ad5712_Token__jule_tuple_s_1cb285120_Log __jule_func_result;
	if (((*(_13715_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I64 _1419_rangeN = 0LL;;
	jule::I64 _1429_last = 0LL;;
	{
		auto expr = _13715_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abdeb349:;
		if (it != expr_end) {
			jule::I64 _1439_i = it - expr->begin();
			jule::Ptr<_1b4ad5712_Token> _14312_token = *it;
			{
				{
					auto &_match_expr{ (*(_14312_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1abdec36c:;
						{
							(_1419_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1abdec3e4:;
						{
							(_1419_rangeN)--;
						}
					}
					else if (_match_expr == _13733_id) {
						_case_begin_1abdec45a:;
						{
							if ((_1419_rangeN > 0LL)) {
								goto _iter_next_1abdeb349;
							};
							if ((_13746_exprMust && ((_1439_i - _1429_last) <= 0LL))) {
								_1cb285120_Log _15417_err = _1b578b10e_makeErr((*(_14312_token))._field_Row, (*_14312_token.alloc)._field_Column, &((*_14312_token.alloc)._field_File), jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());;
								{ jule::Slice<_1cb285120_Log> &__jule_push_dest = __jule_func_result.__jule_result_arg1; __jule_push_dest.push(_15417_err); };
							};
							{ jule::Slice<jule::Slice<jule::Ptr<_1b4ad5712_Token>>> &__jule_push_dest = __jule_func_result.__jule_result_arg0; __jule_push_dest.push((*(_13715_tokens)).slice(_1429_last, _1439_i)); };
							_1429_last=(_1439_i + 1LL);
						}
					}
					_match_end_1abdec2b2:;
				};
			}
			_iter_next_1abdeb349:;
			++it;
			_1439_i++;
			goto _iter_begin_1abdeb349;
		}
		_iter_end_1abdeb349:;
	};
	if ((_1429_last < (*(_13715_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1b4ad5712_Token>>> &__jule_push_dest = __jule_func_result.__jule_result_arg0; __jule_push_dest.push((*(_13715_tokens)).slice(_1429_last)); };
	};
	return __jule_func_result;;
}



inline jule::U64 _1b578c143_getCloseOfBrace(jule::U64 _16720_left) {
	{
		auto &_match_expr{ _16720_left };
		
		if (_match_expr == static_cast<jule::U64>(75LLU)) {
			_case_begin_1abe008c0:;
			{
				return static_cast<jule::U64>(74LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1abe00936:;
			{
				return static_cast<jule::U64>(72LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_1abe0099c:;
			{
				return static_cast<jule::U64>(76LLU);;
			}
		}
		else {
			_case_begin_1abdebc62:;
			{
				return _16720_left;;
			}
		}
		_match_end_1abdebd83:;
	};
}



inline _1cb285120_Log _1b578c572_compilerErr(jule::Ptr<_1b4ad5712_Token>* _18017_token, jule::Str* _18033_fmt, jule::Slice<jule::Any> _18046_args) {
	return _1cb285120_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*((*(_18017_token))))._field_Row, ._field_Column=(*((*(_18017_token))))._field_Column, ._field_Path=(*((*((*(_18017_token))))._field_File))._field_Path, ._field_Text=_1cb285582_Logf((*(_18033_fmt)), _18046_args), ._field_Line=_1b4adbeaa_GetRow((*((*(_18017_token))))._field_File, (*((*(_18017_token))))._field_Row), };;
}



inline void _1b578c918_pushSuggestion(_1cb285120_Log* _19130_log, jule::Str _19141_fmt, jule::Slice<jule::Any> _19154_args) {
	(*(_19130_log))._field_Suggestion=_1cb285582_Logf(_19141_fmt, _19154_args);
}



inline jule::Ptr<_1b4aeabbc_TypeDecl> _1b579e7e8_buildVoidType(void) {
	return jule::new_ptr<_1b4aeabbc_TypeDecl>();;
}



inline __jule_tuple_bool__jule_tuple_bool _1b4e96265_checkOs(jule::Str _912_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _912_arg };
		
		if (_match_expr == jule::Str::lit("windows", 7)) {
			_case_begin_1ac0b7d2e:;
			{
				__jule_func_result.__jule_result_arg0=_1cb288299_IsWindows(_1cb39e547_Os);
			}
		}
		else if (_match_expr == jule::Str::lit("darwin", 6)) {
			_case_begin_1ac0b7999:;
			{
				__jule_func_result.__jule_result_arg0=_1cb2885a7_IsDarwin(_1cb39e547_Os);
			}
		}
		else if (_match_expr == jule::Str::lit("linux", 5)) {
			_case_begin_1ac0b7a10:;
			{
				__jule_func_result.__jule_result_arg0=_1cb288871_IsLinux(_1cb39e547_Os);
			}
		}
		else if (_match_expr == jule::Str::lit("unix", 4)) {
			_case_begin_1ac0b7a76:;
			{
				__jule_func_result.__jule_result_arg0=_1cb2894cb_IsUnix(_1cb39e547_Os);
			}
		}
		else {
			_case_begin_1ac0b74b0:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1ac0b75d1:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_bool__jule_tuple_bool _1b4e963a8_checkArch(jule::Str _2814_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _2814_arg };
		
		if (_match_expr == jule::Str::lit("i386", 4)) {
			_case_begin_1ac0ba00c:;
			{
				__jule_func_result.__jule_result_arg0=_1cb288bb2_IsI386(_1cb39e800_Arch);
			}
		}
		else if (_match_expr == jule::Str::lit("amd64", 5)) {
			_case_begin_1ac0b9b77:;
			{
				__jule_func_result.__jule_result_arg0=_1cb288e48_IsAmd64(_1cb39e800_Arch);
			}
		}
		else if (_match_expr == jule::Str::lit("arm64", 5)) {
			_case_begin_1ac0b9bdd:;
			{
				__jule_func_result.__jule_result_arg0=_1cb289212_IsArm64(_1cb39e800_Arch);
			}
		}
		else if (_match_expr == jule::Str::lit("x64", 3)) {
			_case_begin_1ac0b9c54:;
			{
				__jule_func_result.__jule_result_arg0=_1cb289ae7_Is64Bit(_1cb39e800_Arch);
			}
		}
		else if (_match_expr == jule::Str::lit("x32", 3)) {
			_case_begin_1ac0b9cba:;
			{
				__jule_func_result.__jule_result_arg0=_1cb2898a5_Is32Bit(_1cb39e800_Arch);
			}
		}
		else {
			_case_begin_1ac0b968d:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1ac0b97ae:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1b4e96551_isPassFileAnnotation(jule::Str _5029_p) {
	_5029_p=_1cb1e0894_Base(_5029_p);
	jule::I64 _525_n = _5029_p.len();;
	(_5029_p).mut_slice(0LL, (_525_n - _1cb1e0311_Ext(_5029_p).len()));;
	jule::Str _589_a1 = jule::Str();;
	jule::Str _619_a2 = jule::Str();;
	jule::I64 _649_i = _1cb1c1820_FindLastByte(_5029_p, '_');;
	if ((_649_i == -1LL)) {
		jule::Bool _6713_ok;
		jule::Bool _6721_exist;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1b4e96265_checkOs(_5029_p);
			_6713_ok = __jule_assign_result.__jule_result_arg0;
			_6721_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_6721_exist) {
			return _6713_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1b4e963a8_checkArch(_5029_p);
			_6713_ok = __jule_assign_result.__jule_result_arg0;
			_6721_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_6721_exist)) || _6713_ok);;
	};
	if (((_649_i + 1LL) >= _525_n)) {
		return true;;
	};
	_589_a1=_5029_p.slice((_649_i + 1LL));
	(_5029_p).mut_slice(0LL, _649_i);;
	_649_i=_1cb1c1820_FindLastByte(_5029_p, '_');
	if ((_649_i != -1LL)) {
		_619_a2=_5029_p.slice((_649_i + 1LL));
	};
	if ((_619_a2).empty()) {
		jule::Bool _8813_ok;
		jule::Bool _8821_exist;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1b4e96265_checkOs(_589_a1);
			_8813_ok = __jule_assign_result.__jule_result_arg0;
			_8821_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_8821_exist) {
			return _8813_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1b4e963a8_checkArch(_589_a1);
			_8813_ok = __jule_assign_result.__jule_result_arg0;
			_8821_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_8821_exist)) || _8813_ok);;
	};
	jule::Bool _969_ok;
	jule::Bool _9617_exist;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1b4e963a8_checkArch(_589_a1);
		_969_ok = __jule_assign_result.__jule_result_arg0;
		_9617_exist = __jule_assign_result.__jule_result_arg1;
	});
	if (_9617_exist) {
		if ((!(_969_ok))) {
			return false;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1b4e96265_checkOs(_619_a2);
			_969_ok = __jule_assign_result.__jule_result_arg0;
			_9617_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_9617_exist)) || _969_ok);;
	};
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1b4e96265_checkOs(_589_a1);
		_969_ok = __jule_assign_result.__jule_result_arg0;
		_9617_exist = __jule_assign_result.__jule_result_arg1;
	});
	return ((!(_9617_exist)) || _969_ok);;
}



inline void _1b4eb1dda_setOsVars(jule::Slice<jule::Str>* _3619_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(_1cb39e547_Os); };
	if (_1cb2894cb_IsUnix(_1cb39e547_Os)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(jule::Str::lit("unix", 4)); };
	};
}



inline void _1b4eb2160_setArchVars(jule::Slice<jule::Str>* _4421_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(_1cb39e800_Arch); };
	if (_1cb289ae7_Is64Bit(_1cb39e800_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str::lit("x64", 3)); };
	};
	if (_1cb2898a5_Is32Bit(_1cb39e800_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str::lit("x32", 3)); };
	};
}



inline void _1b4eb244b_initVars(jule::Slice<jule::Str>* _5518_vars, _1b4eb1abb_CompileInfo* _5532_info) {
	_1b4eb1dda_setOsVars(_5518_vars);
	_1b4eb2160_setArchVars(_5518_vars);
	if ((*(_5532_info))._field_Prod) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("production", 10)); };
	};
	if ((*(_5532_info))._field_Test) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("test", 4)); };
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_Compiler };
		
		if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1ac0c5ab7:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("clang", 5)); };
			}
		}
		else if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1ac0c5512:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("gcc", 3)); };
			}
		}
		_match_end_1ac0c5479:;
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1ac0c559a:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp14", 5)); };
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1ac0c62d2:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp17", 5)); };
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1ac0c6348:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp20", 5)); };
			}
		}
		_match_end_1ac0c627c:;
	};
}



inline jule::Slice<jule::U8> _1b57a37a8_readBuff(jule::Str _3013_path) {
	return ({
		auto except = static__20d929ee1_Read(_3013_path);
		(except.ok()) ? (except.result) : ({{
			jule::outln(jule::Str::lit("error: file cannot read", 23));
			;
			_1cb39d49c_Exit(1LL);
			return nullptr;;
		} jule::Slice<jule::U8>(nullptr);});
	});;
}



inline _1cb285120_Log _1b57a3ab6_flatCompilerErr(jule::Str _4120_text) {
	return _1cb285120_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Text=_4120_text, };;
}



inline void _1b57a825d_pushPasses(jule::Ptr<_1b4b9d7b9_Package>* _11120_p, jule::Slice<jule::Str>* _11144_passes) {
	{
		auto expr = &((*((*(_11120_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac111a9d:;
		if (it != expr_end) {
			jule::Ptr<_1b4c41340_SymbolTable> _11217_f = *it;
			{
				_julec_label_1ac1121ca:;
				{
					auto expr = &((*(_11217_f))._field_Passes);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac11262b:;
					if (it != expr_end) {
						_1b4b3e051_Pass _11416_pass = *it;
						{
							if ((_11416_pass._field_Text).empty()) {
								goto _iter_next_1ac11262b;
							};
							{
								auto expr = _11144_passes;
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1ac1131ed:;
								if (it != expr_end) {
									jule::Str _11820_cpass = *it;
									{
										if ((_11820_cpass == _11416_pass._field_Text)) {
											goto _iter_next_1ac11262b;
										};
									}
									_iter_next_1ac1131ed:;
									++it;
									goto _iter_begin_1ac1131ed;
								}
								_iter_end_1ac1131ed:;
							};
							{ jule::Slice<jule::Str> &__jule_push_dest = (*(_11144_passes)); __jule_push_dest.push(_11416_pass._field_Text); };
						}
						_iter_next_1ac11262b:;
						++it;
						goto _iter_begin_1ac11262b;
					}
					_iter_end_1ac11262b:;
				};
			}
			_iter_next_1ac111a9d:;
			++it;
			goto _iter_begin_1ac111a9d;
		}
		_iter_end_1ac111a9d:;
	};
}



inline jule::Slice<jule::Str> _1b57a8626_getAllUniquePasses(jule::Ptr<_1b4b9d7b9_Package>* _12828_pkg, jule::Slice<jule::Ptr<_1b4b9a893_ImportInfo>> _12853_uses) {
	jule::Slice<jule::Str> _12913_passes = nullptr;;
	_1b57a825d_pushPasses(_12828_pkg, &(_12913_passes));
	{
		auto expr = &(_12853_uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac1147c6:;
		if (it != expr_end) {
			jule::Ptr<_1b4b9a893_ImportInfo> _13217_u = *it;
			{
				if ((!((*(_13217_u))._field_Binded))) {
					_1b57a825d_pushPasses(&((*_13217_u.alloc)._field_Package), &(_12913_passes));
				};
			}
			_iter_next_1ac1147c6:;
			++it;
			goto _iter_begin_1ac1147c6;
		}
		_iter_end_1ac1147c6:;
	};
	return _12913_passes;;
}



inline _1b4eb1abb_CompileInfo _1b57a8835_buildCompileInfo(void) {
	_1b4eb1abb_CompileInfo _1429_info = _1b4eb1abb_CompileInfo{._field_Prod=_20c58021e_Production, ._field_Test=_20c57e85b_Test, };;
	{
		auto &_match_expr{ _20c57dc89_Compiler };
		
		if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1ac115bb2:;
			{
				_1429_info._field_Compiler=jule::Str::lit("clang", 5);
			}
		}
		else if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1ac115d27:;
			{
				_1429_info._field_Compiler=jule::Str::lit("gcc", 3);
			}
		}
		_match_end_1ac115ca0:;
	};
	{
		auto &_match_expr{ _20c57e1a7_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1ac115db0:;
			{
				_1429_info._field_CppStd=jule::Str::lit("cpp14", 5);
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1ac11694e:;
			{
				_1429_info._field_CppStd=jule::Str::lit("cpp17", 5);
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1ac1161e0:;
			{
				_1429_info._field_CppStd=jule::Str::lit("cpp20", 5);
			}
		}
		_match_end_1ac116ae7:;
	};
	return _1429_info;;
}



inline void _1b57a9050_IterPackages(jule::Ptr<_1b57a68aa_IR>* _722_ir, jule::Fn<void,jule::Ptr<_1b4b9d7b9_Package>*> _731_f) {
	{
		auto expr = &((*((*(_722_ir))))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac133350:;
		if (it != expr_end) {
			jule::Ptr<_1b4b9a893_ImportInfo> _817_used = *it;
			{
				if ((!((*(_817_used))._field_Binded))) {
					_731_f(&((*_817_used.alloc)._field_Package));
				};
			}
			_iter_next_1ac133350:;
			++it;
			goto _iter_begin_1ac133350;
		}
		_iter_end_1ac133350:;
	};
	_731_f(&((*((*(_722_ir))))._field_Main));
}



inline void _1b57a9380_IterFiles(jule::Ptr<_1b4b9d7b9_Package>* _1619_pkg, jule::Fn<void,jule::Ptr<_1b4c41340_SymbolTable>*> _1634_f) {
	{
		auto expr = &((*((*(_1619_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac13498e:;
		if (it != expr_end) {
			jule::Ptr<_1b4c41340_SymbolTable> _1717_file = *it;
			{
				_1634_f(&(_1717_file));
			}
			_iter_next_1ac13498e:;
			++it;
			goto _iter_begin_1ac13498e;
		}
		_iter_end_1ac13498e:;
	};
}



inline void _1b57a9726_iterTraitInheritMethods(jule::Ptr<_1b4b49c3d_Trait>* _2233_base, jule::Ptr<_1b4b49c3d_Trait>* _2252_t, jule::Fn<void,jule::Ptr<_1b4b36884_Fn>*> _2263_f) {
	_1b57a9b44_iterTraitInheritMethods1(_2233_base, _2252_t, _2263_f);
	{
		auto expr = &((*((*(_2252_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac135ac2:;
		if (it != expr_end) {
			jule::Ptr<_1b4b36884_Fn> _2417_m = *it;
			{
				if ((!(_1b57b3235_ContainsTraitMethod(_2233_base, &((*(_2417_m))._field_Ident))))) {
					_2263_f(&(_2417_m));
				};
			}
			_iter_next_1ac135ac2:;
			++it;
			goto _iter_begin_1ac135ac2;
		}
		_iter_end_1ac135ac2:;
	};
}



inline void _1b57a9b44_iterTraitInheritMethods1(jule::Ptr<_1b4b49c3d_Trait>* _3134_base, jule::Ptr<_1b4b49c3d_Trait>* _3153_t, jule::Fn<void,jule::Ptr<_1b4b36884_Fn>*> _3164_f) {
	{
		auto expr = &((*((*(_3153_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac136e47:;
		if (it != expr_end) {
			jule::Ptr<_1b4c84ad1_TypeSymbol> _3217_inh = *it;
			{
				jule::Ptr<_1b4b49c3d_Trait> _3313_t2 = _1b4c81869_Trait((*(_3217_inh))._field_Kind.ptr());;
				_1b57a9726_iterTraitInheritMethods(_3134_base, &(_3313_t2), _3164_f);
			}
			_iter_next_1ac136e47:;
			++it;
			goto _iter_begin_1ac136e47;
		}
		_iter_end_1ac136e47:;
	};
}



inline void _1b57a9dec_IterTraitMethods(jule::Ptr<_1b4b49c3d_Trait>* _3926_t, jule::Fn<void,jule::Ptr<_1b4b36884_Fn>*> _3937_f) {
	{
		auto expr = &((*((*(_3926_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac1383cc:;
		if (it != expr_end) {
			jule::Ptr<_1b4b36884_Fn> _4017_m = *it;
			{
				_3937_f(&(_4017_m));
			}
			_iter_next_1ac1383cc:;
			++it;
			goto _iter_begin_1ac1383cc;
		}
		_iter_end_1ac1383cc:;
	};
	_1b57a9b44_iterTraitInheritMethods1(_3926_t, _3926_t, _3937_f);
}



inline jule::Bool _1b57b0be4_IsForwarded(jule::Ptr<_1b4b7880a_Scope>* _2317_s) {
	jule::Any _245_last = (*((*(_2317_s))))._field_Stmts[((*((*(_2317_s))))._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _245_last };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1ac13991c:;
			{
				{
					auto &_match_expr{ (*(_245_last.cast_ptr<_1b4c466a8_Data>(&__jule_any_type23)))._field_Model };
					
					if (_match_expr.type == &__jule_any_type22) {
						_case_begin_1ac139ae8:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1ac13a7b9:;
						{
							return false;;
						}
					}
					_match_end_1ac13a764:;
				};
			}
		}
		else {
			_case_begin_1ac139a82:;
			{
				return true;;
			}
		}
		_match_end_1ac139a2c:;
	};
}



inline jule::Bool _1b57b1002_IsExprComesFromBind(jule::Ptr<_1b4c466a8_Data>* _3925_d) {
	{
		auto &_match_expr{ (*((*(_3925_d))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ac139ea0:;
			{
				return (*((*((*(_3925_d))))._field_Model.unsafe_cast_ptr<_1b4bddaa1_Var>()))._field_Binded;;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1ac13b468:;
			{
				return (*((*((*((*((*(_3925_d))))._field_Model.unsafe_cast_ptr<_1b4b2d68e_StructSubIdentExprModel>()))._field_Owner))._field_Decl))._field_Binded;;
			}
		}
		else {
			_case_begin_1ac13aea1:;
			{
				return false;;
			}
		}
		_match_end_1ac13ae4b:;
	};
}



inline jule::Bool _1b57b12bb_IsAny(jule::Ptr<_1b4c7c90e_TypeKind>* _5115_t) {
	if ((_1b4c80a99_TypeEnum((*(_5115_t)).ptr()) != nullptr)) {
		return true;;
	};
	jule::Ptr<_1b4c854d8_Prim> _555_prim = _1b4c80060_Prim((*(_5115_t)).ptr());;
	return ((_555_prim != nullptr) && _1b4c88c06_IsAny(_555_prim));;
}



inline jule::Bool _1b57b160c_IsClosure(jule::Ptr<_1b4b2b857_AnonFnExprModel>* _6015_m) {
	return ((*((*(_6015_m))))._field_Captured.len() > 0LL);;
}



inline jule::Bool _1b57b1893_IsOpMethod(jule::Ptr<_1b4b36884_Fn>* _6316_m) {
	if ((((*((*(_6316_m))))._field_Generics.len() > 0LL) || ((*((*(_6316_m))))._field_Instances.len() == 0LL))) {
		return false;;
	};
	jule::Ptr<_1b4b39865_FnIns> _675_mi = (*((*(_6316_m))))._field_Instances[0LL];;
	;
	;
	{
		if ((_675_mi == (*(*_675_mi.alloc)._field_Owner.alloc)._field_Operators._field_Eq)) {
			return true;;
		};
	};
	{
		if ((_675_mi == (*(*_675_mi.alloc)._field_Owner.alloc)._field_Operators._field_Gt)) {
			return true;;
		};
	};
	{
		if ((_675_mi == (*(*_675_mi.alloc)._field_Owner.alloc)._field_Operators._field_GtEq)) {
			return true;;
		};
	};
	{
		if ((_675_mi == (*(*_675_mi.alloc)._field_Owner.alloc)._field_Operators._field_Lt)) {
			return true;;
		};
	};
	{
		if ((_675_mi == (*(*_675_mi.alloc)._field_Owner.alloc)._field_Operators._field_LtEq)) {
			return true;;
		};
	};
	{
		if ((_675_mi == (*(*_675_mi.alloc)._field_Owner.alloc)._field_Operators._field_Shl)) {
			return true;;
		};
	};
	{
		if ((_675_mi == (*(*_675_mi.alloc)._field_Owner.alloc)._field_Operators._field_Shr)) {
			return true;;
		};
	};
	{
		if ((_675_mi == (*(*_675_mi.alloc)._field_Owner.alloc)._field_Operators._field_Add)) {
			return true;;
		};
	};
	{
		if ((_675_mi == (*(*_675_mi.alloc)._field_Owner.alloc)._field_Operators._field_Sub)) {
			return true;;
		};
	};
	{
		if ((_675_mi == (*(*_675_mi.alloc)._field_Owner.alloc)._field_Operators._field_Div)) {
			return true;;
		};
	};
	{
		if ((_675_mi == (*(*_675_mi.alloc)._field_Owner.alloc)._field_Operators._field_Mul)) {
			return true;;
		};
	};
	{
		if ((_675_mi == (*(*_675_mi.alloc)._field_Owner.alloc)._field_Operators._field_Mod)) {
			return true;;
		};
	};
	{
		if ((_675_mi == (*(*_675_mi.alloc)._field_Owner.alloc)._field_Operators._field_BitAnd)) {
			return true;;
		};
	};
	{
		if ((_675_mi == (*(*_675_mi.alloc)._field_Owner.alloc)._field_Operators._field_BitOr)) {
			return true;;
		};
	};
	{
		if ((_675_mi == (*(*_675_mi.alloc)._field_Owner.alloc)._field_Operators._field_BitXor)) {
			return true;;
		};
	};
	{
		if ((_675_mi == (*(*_675_mi.alloc)._field_Owner.alloc)._field_Operators._field_Neg)) {
			return true;;
		};
	};
	{
		if ((_675_mi == (*(*_675_mi.alloc)._field_Owner.alloc)._field_Operators._field_Pos)) {
			return true;;
		};
	};
	{
		if ((_675_mi == (*(*_675_mi.alloc)._field_Owner.alloc)._field_Operators._field_BitNot)) {
			return true;;
		};
	};
	{
		if ((_675_mi == (*(*_675_mi.alloc)._field_Owner.alloc)._field_Operators._field_AddAssign)) {
			return true;;
		};
	};
	{
		if ((_675_mi == (*(*_675_mi.alloc)._field_Owner.alloc)._field_Operators._field_SubAssign)) {
			return true;;
		};
	};
	{
		if ((_675_mi == (*(*_675_mi.alloc)._field_Owner.alloc)._field_Operators._field_DivAssign)) {
			return true;;
		};
	};
	{
		if ((_675_mi == (*(*_675_mi.alloc)._field_Owner.alloc)._field_Operators._field_MulAssign)) {
			return true;;
		};
	};
	{
		if ((_675_mi == (*(*_675_mi.alloc)._field_Owner.alloc)._field_Operators._field_ModAssign)) {
			return true;;
		};
	};
	{
		if ((_675_mi == (*(*_675_mi.alloc)._field_Owner.alloc)._field_Operators._field_ShlAssign)) {
			return true;;
		};
	};
	{
		if ((_675_mi == (*(*_675_mi.alloc)._field_Owner.alloc)._field_Operators._field_ShrAssign)) {
			return true;;
		};
	};
	{
		if ((_675_mi == (*(*_675_mi.alloc)._field_Owner.alloc)._field_Operators._field_BitOrAssign)) {
			return true;;
		};
	};
	{
		if ((_675_mi == (*(*_675_mi.alloc)._field_Owner.alloc)._field_Operators._field_BitAndAssign)) {
			return true;;
		};
	};
	{
		if ((_675_mi == (*(*_675_mi.alloc)._field_Owner.alloc)._field_Operators._field_BitXorAssign)) {
			return true;;
		};
	};
	return false;;
}



inline jule::Bool _1b57b1c17_IsTraitMethod(jule::Ptr<_1b4b24641_StructIns>* _7923_owner, jule::Ptr<_1b4b39865_FnIns>* _7943_f) {
	{
		auto expr = &((*((*((*(_7923_owner))))._field_Decl))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac141d86:;
		if (it != expr_end) {
			jule::Ptr<_1b4b49c3d_Trait> _8017_t = *it;
			{
				if ((_1b4b4a8dc_FindMethod(_8017_t.ptr(), (*((*((*(_7943_f))))._field_Decl))._field_Ident) != nullptr)) {
					return true;;
				};
			}
			_iter_next_1ac141d86:;
			++it;
			goto _iter_begin_1ac141d86;
		}
		_iter_end_1ac141d86:;
	};
	return false;;
}



inline jule::Bool _1b57b208b_IsStdPackage(jule::Str* _9218_f, jule::Str _9226_p) {
	return _1cb1bdb19_HasPrefix((*(_9218_f)), _1cb1e007a_Join(jule::Slice<jule::Str>::make({_1cb39d9db_PathStdlib,_9226_p})));;
}



inline jule::Ptr<_1b4aea0d9_Directive> _1b57b29e8_FindDirective(jule::Slice<jule::Ptr<_1b4aea0d9_Directive>>* _923_directives, jule::Str _954_tag) {
	{
		auto expr = _923_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac14c831:;
		if (it != expr_end) {
			jule::Ptr<_1b4aea0d9_Directive> _1017_dr = *it;
			{
				if (((*((*(_1017_dr))._field_Tag))._field_Kind == _954_tag)) {
					return _1017_dr;;
				};
			}
			_iter_next_1ac14c831:;
			++it;
			goto _iter_begin_1ac14c831;
		}
		_iter_end_1ac14c831:;
	};
	return nullptr;;
}



inline jule::Bool _1b57b2db1_HasDirective(jule::Slice<jule::Ptr<_1b4aea0d9_Directive>>* _1918_directives, jule::Str _1949_tag) {
	return (_1b57b29e8_FindDirective(&((*(_1918_directives))), _1949_tag) != nullptr);;
}



inline jule::Bool _1b57b3235_ContainsTraitMethod(jule::Ptr<_1b4b49c3d_Trait>* _2429_t, jule::Str* _2441_ident) {
	{
		auto expr = &((*((*(_2429_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac14e47b:;
		if (it != expr_end) {
			jule::Ptr<_1b4b36884_Fn> _2512_m = *it;
			{
				if (((*(_2512_m))._field_Ident == (*(_2441_ident)))) {
					return true;;
				};
			}
			_iter_next_1ac14e47b:;
			++it;
			goto _iter_begin_1ac14e47b;
		}
		_iter_end_1ac14e47b:;
	};
	return false;;
}



inline jule::I64 _1b57b38ea_FindTraitTypeOffsetS(jule::Ptr<_1b4b49c3d_Trait> _3725_t, jule::Ptr<_1b4b24641_StructIns> _3740_s) {
	if (((*(_3725_t))._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	jule::I64 _419_i = 0LL;;
	{
		auto expr = &((*_3725_t.alloc)._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac15115e:;
		if (it != expr_end) {
			jule::Ptr<_1b4b218b3_Struct> *_4212_si = it;
			{
				if (((*(_3740_s))._field_Decl == (*(_4212_si)))) {
					{
						auto expr = &((*((*(_4212_si))))._field_Instances);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ac151eea:;
						if (it != expr_end) {
							jule::Ptr<_1b4b24641_StructIns> *_4420_ins = it;
							{
								if (((*(_4420_ins)) == _3740_s)) {
									return _419_i;;
								};
								(_419_i)++;
							}
							_iter_next_1ac151eea:;
							++it;
							goto _iter_begin_1ac151eea;
						}
						_iter_end_1ac151eea:;
					};
					goto _iter_end_1ac15115e;
				} else {
					_419_i+=(*((*(_4212_si))))._field_Instances.len();
				};
			}
			_iter_next_1ac15115e:;
			++it;
			goto _iter_begin_1ac15115e;
		}
		_iter_end_1ac15115e:;
	};
	return -1LL;;
}



inline jule::I64 _1b57b3c6e_FindTraitTypeOffset(jule::Ptr<_1b4b49c3d_Trait> _6024_t, jule::Ptr<_1b4c7c90e_TypeKind> _6039_k) {
	if (((*(_6024_t))._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	jule::Ptr<_1b4b24641_StructIns> _6413_s = nullptr;;
	if ((_1b4c802e6_Sptr(_6039_k.ptr()) != nullptr)) {
		_6039_k=(*(_1b4c802e6_Sptr(_6039_k)))._field_Elem;
	};
	_6413_s=_1b4c815d3_Struct(_6039_k);
	if ((_6413_s == nullptr)) {
		return -1LL;;
	};
	return _1b57b38ea_FindTraitTypeOffsetS(_6024_t, _6413_s);;
}



inline jule::Bool _1ac128015_isOrdered(jule::Ptr<_1b4b218b3_Struct>* _1418_t, jule::Slice<jule::Ptr<_1b4b218b3_Struct>> _1425_s) {
	_julec_label_1ac129a1c:;
	{
		auto expr = &((*((*(_1418_t))))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac129e5c:;
		if (it != expr_end) {
			jule::Ptr<_1b4b218b3_Struct> *_1612_d = it;
			{
				;
				{
					auto expr = &(_1425_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac12a5cd:;
					if (it != expr_end) {
						jule::Ptr<_1b4b218b3_Struct> *_2516_o = it;
						{
							if (((*(_1612_d)) == (*(_2516_o)))) {
								goto _iter_next_1ac129e5c;
							};
						}
						_iter_next_1ac12a5cd:;
						++it;
						goto _iter_begin_1ac12a5cd;
					}
					_iter_end_1ac12a5cd:;
				};
				return false;;
			}
			_iter_next_1ac129e5c:;
			++it;
			goto _iter_begin_1ac129e5c;
		}
		_iter_end_1ac129e5c:;
	};
	return true;;
}

inline jule::Bool _1ac12e5b0_isOrdered(jule::Ptr<_1b4bddaa1_Var>* _1418_t, jule::Slice<jule::Ptr<_1b4bddaa1_Var>> _1425_s) {
	_julec_label_1ac131073:;
	{
		auto expr = &((*((*(_1418_t))))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac1314b3:;
		if (it != expr_end) {
			jule::Ptr<_1b4bddaa1_Var> *_1612_d = it;
			{
				{
					
{
						_case_begin_1ac131c99:;
						{
							if ((*((*(_1612_d))))._field_Constant) {
								goto _iter_next_1ac1314b3;
							};
						}
					}
					_match_end_1ac131c33:;
				};
				{
					auto expr = &(_1425_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac132052:;
					if (it != expr_end) {
						jule::Ptr<_1b4bddaa1_Var> *_2516_o = it;
						{
							if (((*(_1612_d)) == (*(_2516_o)))) {
								goto _iter_next_1ac1314b3;
							};
						}
						_iter_next_1ac132052:;
						++it;
						goto _iter_begin_1ac132052;
					}
					_iter_end_1ac132052:;
				};
				return false;;
			}
			_iter_next_1ac1314b3:;
			++it;
			goto _iter_begin_1ac1314b3;
		}
		_iter_end_1ac1314b3:;
	};
	return true;;
}



inline void _1ac124ce2_order(jule::Slice<jule::Ptr<_1b4b218b3_Struct>>* _3718_s) {
	jule::I64 _389_i = 0LL;;
	_julec_label_1ac125265:;
	jule::I64 _409_j = _389_i;;
	_julec_label_1ac126464:;
	for (; (_409_j < (*(_3718_s)).len()); (_409_j)++) {
		{
			jule::Ptr<_1b4b218b3_Struct> _4313_t = (*(_3718_s))[_409_j];;
			{
				auto expr = (*(_3718_s)).slice(0LL, _389_i);
				auto it = expr.begin();
				auto expr_end = expr.end();
				_iter_begin_1ac1271ce:;
				if (it != expr_end) {
					jule::Ptr<_1b4b218b3_Struct> _4416_o = *it;
					{
						if ((_4313_t == _4416_o)) {
							goto _iter_next_1ac126497;
						};
					}
					_iter_next_1ac1271ce:;
					++it;
					goto _iter_begin_1ac1271ce;
				}
				_iter_end_1ac1271ce:;
			};
			if (_1ac128015_isOrdered(&(_4313_t), (*(_3718_s)).slice(0LL, _389_i))) {
				if ((_389_i != _409_j)) {
					std::swap((*(_3718_s))[_389_i], (*(_3718_s))[_409_j]);
				};
				(_389_i)++;
			};
		}
	_iter_next_1ac126497:;
	}
	_iter_end_1ac126497:;;
	if ((_389_i < (*(_3718_s)).len())) {
		goto _julec_label_1ac125265;
	};
}

inline void _1ac12a446_order(jule::Slice<jule::Ptr<_1b4bddaa1_Var>>* _3718_s) {
	jule::I64 _389_i = 0LL;;
	_julec_label_1ac12b854:;
	jule::I64 _409_j = _389_i;;
	_julec_label_1ac12ca0e:;
	for (; (_409_j < (*(_3718_s)).len()); (_409_j)++) {
		{
			jule::Ptr<_1b4bddaa1_Var> _4313_t = (*(_3718_s))[_409_j];;
			{
				auto expr = (*(_3718_s)).slice(0LL, _389_i);
				auto it = expr.begin();
				auto expr_end = expr.end();
				_iter_begin_1ac12d779:;
				if (it != expr_end) {
					jule::Ptr<_1b4bddaa1_Var> _4416_o = *it;
					{
						if ((_4313_t == _4416_o)) {
							goto _iter_next_1ac12ca42;
						};
					}
					_iter_next_1ac12d779:;
					++it;
					goto _iter_begin_1ac12d779;
				}
				_iter_end_1ac12d779:;
			};
			if (_1ac12e5b0_isOrdered(&(_4313_t), (*(_3718_s)).slice(0LL, _389_i))) {
				if ((_389_i != _409_j)) {
					std::swap((*(_3718_s))[_389_i], (*(_3718_s))[_409_j]);
				};
				(_389_i)++;
			};
		}
	_iter_next_1ac12ca42:;
	}
	_iter_end_1ac12ca42:;;
	if ((_389_i < (*(_3718_s)).len())) {
		goto _julec_label_1ac12b854;
	};
}



inline void _1b593990b_EliminateDefines(jule::Ptr<_1b57a68aa_IR>* _30526_ir) {
	jule::Ptr<_1b5906e28_ObjectDeadCode> _3069_ocd = static__1b5937046_new(_30526_ir);;
	_1b59395cb_elimanate(_3069_ocd);
}



inline void _1b593d954_eliminateDeadCodeOfScope(jule::Ptr<_1b4b7880a_Scope> _24133_s) {
	jule::Slice<jule::Ptr<_1b4b7b19d_Label>> _2425_labels = jule::Slice<jule::Ptr<_1b4b7b19d_Label>>::alloc(0LL, 16LLU);;
	jule::Slice<jule::Ptr<_1b4b7b577_GotoSt>> _2435_gotos = jule::Slice<jule::Ptr<_1b4b7b577_GotoSt>>::alloc(0LL, 16LLU);;
	jule::Ptr<_1b593a720_scopeDeadCode> _2449_sdc = jule::new_ptr<_1b593a720_scopeDeadCode>(_1b593a720_scopeDeadCode{._field_s=_24133_s, ._field_stmts=(&((*(_24133_s))._field_Stmts)), ._field_labels=((jule::Ptr<jule::Slice<jule::Ptr<_1b4b7b19d_Label>>>)((&(_2425_labels)))), ._field_gotos=((jule::Ptr<jule::Slice<jule::Ptr<_1b4b7b577_GotoSt>>>)((&(_2435_gotos)))), });;
	{
		_1b593d624_optimizeStmts(_2449_sdc);
	};
}



inline void _1b593dbc9_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1b4b36884_Fn>>* _25433_funcs) {
	{
		auto expr = _25433_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac1d24cb:;
		if (it != expr_end) {
			jule::Ptr<_1b4b36884_Fn> _25517_func = *it;
			{
				{
					auto expr = &((*(_25517_func))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac1d4a50:;
					if (it != expr_end) {
						jule::Ptr<_1b4b39865_FnIns> _25621_ins = *it;
						{
							_1b593d954_eliminateDeadCodeOfScope((*(_25621_ins))._field_Scope);
						}
						_iter_next_1ac1d4a50:;
						++it;
						goto _iter_begin_1ac1d4a50;
					}
					_iter_end_1ac1d4a50:;
				};
			}
			_iter_next_1ac1d24cb:;
			++it;
			goto _iter_begin_1ac1d24cb;
		}
		_iter_end_1ac1d24cb:;
	};
}



inline void _1b593de0a_eliminateFunctionsScopePackage(jule::Ptr<_1b4b9d7b9_Package>* _26240_pkg) {
	{
		auto expr = &((*((*(_26240_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac1d54e0:;
		if (it != expr_end) {
			jule::Ptr<_1b4c41340_SymbolTable> _26317_f = *it;
			{
				_1b593dbc9_eliminateScopeFunctions(&((*(_26317_f))._field_Funcs));
			}
			_iter_next_1ac1d54e0:;
			++it;
			goto _iter_begin_1ac1d54e0;
		}
		_iter_end_1ac1d54e0:;
	};
}



inline void _1b593e1b3_eliminateScopePackage(jule::Ptr<_1b4b9d7b9_Package>* _26831_pkg) {
	_1b593de0a_eliminateFunctionsScopePackage(_26831_pkg);
}



inline void _1b593e3b1_EliminateScopes(jule::Ptr<_1b57a68aa_IR>* _27325_ir) {
	jule::I64 _2749_i = ((*((*(_27325_ir))))._field_Used.len() - 1LL);;
	for (; (_2749_i >= 0LL); (_2749_i)--) {
		{
			jule::Ptr<_1b4b9a893_ImportInfo> _27613_u = (*((*(_27325_ir))))._field_Used[_2749_i];;
			if ((!((*(_27613_u))._field_Binded))) {
				_1b593e1b3_eliminateScopePackage(&((*_27613_u.alloc)._field_Package));
			};
		}
	_iter_next_1ac1d6c0b:;
	}
	_iter_end_1ac1d6c0b:;;
	_1b593e1b3_eliminateScopePackage(&((*((*(_27325_ir))))._field_Main));
}



inline jule::Uintptr _1b4d6de1d_typeData(jule::Any* _1714_m) {
	return ((jule::Uintptr)(((*(_1714_m))).type));;
}



inline jule::Bool _1b4d6e2a3_equalConst(jule::Ptr<_1b2753508_Const> _2115_l, jule::Ptr<_1b2753508_Const> _2126_r) {
	{
		
		if (_1b27574c9_IsI64(_2115_l.ptr())) {
			_case_begin_1ac27ac5b:;
			{
				return (_1b27574c9_IsI64(_2126_r.ptr()) && (_1b2754dcd_ReadI64(_2115_l) == _1b2754dcd_ReadI64(_2126_r)));;
			}
		}
		else if (_1b2757760_IsU64(_2115_l.ptr())) {
			_case_begin_1ac27acd3:;
			{
				return (_1b2757760_IsU64(_2126_r.ptr()) && (_1b2755164_ReadU64(_2115_l) == _1b2755164_ReadU64(_2126_r)));;
			}
		}
		else if (_1b2758013_IsF64(_2115_l.ptr())) {
			_case_begin_1ac27ad5a:;
			{
				return (_1b2758013_IsF64(_2126_r.ptr()) && (_1b2755917_ReadF64(_2115_l) == _1b2755917_ReadF64(_2126_r)));;
			}
		}
		else if (_1b2757c7c_IsStr(_2115_l.ptr())) {
			_case_begin_1ac27add2:;
			{
				return (_1b2757c7c_IsStr(_2126_r.ptr()) && (_1b2755681_ReadStr(_2115_l) == _1b2755681_ReadStr(_2126_r)));;
			}
		}
		else if (_1b27579e6_IsBool(_2115_l.ptr())) {
			_case_begin_1ac27ae59:;
			{
				return (_1b27579e6_IsBool(_2126_r.ptr()) && (_1b27553ea_ReadBool(_2115_l) == _1b27553ea_ReadBool(_2126_r)));;
			}
		}
		else if (_1b2758299_IsNil(_2115_l.ptr())) {
			_case_begin_1ac27b0e1:;
			{
				return _1b2758299_IsNil(_2126_r.ptr());;
			}
		}
		else {
			_case_begin_1ac27a4db:;
			{
				return false;;
			}
		}
		_match_end_1ac27a475:;
	};
}



inline jule::Bool _1b4d6e627_equalCasting(jule::Ptr<_1b4b2a16e_CastingExprModel> _4017_l, jule::Ptr<_1b4b2a16e_CastingExprModel> _4039_r) {
	if ((!(_1b4c7d118_Equal((*(_4017_l))._field_Kind, (*(_4039_r))._field_Kind)))) {
		return false;;
	};
	return _1b4d7055c_equalModels((*((*_4017_l.alloc)._field_Expr))._field_Model, (*(*_4039_r.alloc)._field_Expr.alloc)._field_Model);;
}



inline jule::Bool _1b4d6e9e0_equalUnary(jule::Ptr<_1b4b28e1a_UnaryExprModel> _4715_l, jule::Ptr<_1b4b28e1a_UnaryExprModel> _4735_r) {
	if ((((*((*(_4715_l))._field_Op))._field_Id != (*(*(_4735_r))._field_Op.alloc)._field_Id) || ((*(*_4715_l.alloc)._field_Op.alloc)._field_Kind != (*(*_4735_r.alloc)._field_Op.alloc)._field_Kind))) {
		return false;;
	};
	return _1b4d7055c_equalModels((*((*_4715_l.alloc)._field_Expr))._field_Model, (*(*_4735_r.alloc)._field_Expr.alloc)._field_Model);;
}



inline jule::Bool _1b4d6ed64_equalIndexing(jule::Ptr<_1b4b2b3a1_IndexingExprModel> _5418_l, jule::Ptr<_1b4b2b3a1_IndexingExprModel> _5441_r) {
	return (_1b4d7055c_equalModels((*((*(_5418_l))._field_Expr))._field_Model, (*(*(_5441_r))._field_Expr.alloc)._field_Model) && _1b4d7055c_equalModels((*((*_5418_l.alloc)._field_Index))._field_Model, (*(*_5441_r.alloc)._field_Index.alloc)._field_Model));;
}



inline jule::Bool _1b4d701d8_equalBinary(jule::Ptr<_1b4b28a41_BinaryExprModel> _5916_l, jule::Ptr<_1b4b28a41_BinaryExprModel> _5937_r) {
	if ((((*((*(_5916_l))._field_Op))._field_Id != (*(*(_5937_r))._field_Op.alloc)._field_Id) || ((*(*_5916_l.alloc)._field_Op.alloc)._field_Kind != (*(*_5937_r.alloc)._field_Op.alloc)._field_Kind))) {
		return false;;
	};
	return (_1b4d7055c_equalModels((*((*_5916_l.alloc)._field_Left))._field_Model, (*(*_5937_r.alloc)._field_Left.alloc)._field_Model) && _1b4d7055c_equalModels((*((*_5916_l.alloc)._field_Right))._field_Model, (*(*_5937_r.alloc)._field_Right.alloc)._field_Model));;
}



inline jule::Bool _1b4d7055c_equalModels(jule::Any _7016_l, jule::Any _7030_r) {
	if ((_1b4d6de1d_typeData(&(_7016_l)) != _1b4d6de1d_typeData(&(_7030_r)))) {
		return false;;
	};
	{
		auto &_match_expr{ _7016_l };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ac289ab1:;
			{
				return (_7016_l.unsafe_cast_ptr<_1b4bddaa1_Var>() == _7030_r.cast_ptr<_1b4bddaa1_Var>(&__jule_any_type8));;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1ac28a430:;
			{
				jule::Ptr<_1b4b2d68e_StructSubIdentExprModel> _789_li = _7016_l.unsafe_cast_ptr<_1b4b2d68e_StructSubIdentExprModel>();;
				jule::Ptr<_1b4b2d68e_StructSubIdentExprModel> _799_ri = _7030_r.cast_ptr<_1b4b2d68e_StructSubIdentExprModel>(&__jule_any_type98);;
				return (((*(_789_li))._field_Field == (*(_799_ri))._field_Field) && _1b4d7055c_equalModels((*((*_789_li.alloc)._field_Expr))._field_Model, (*(*_799_ri.alloc)._field_Expr.alloc)._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1ac28a496:;
			{
				return _1b4d6e2a3_equalConst(_7016_l.unsafe_cast_ptr<_1b2753508_Const>(), _7030_r.cast_ptr<_1b2753508_Const>(&__jule_any_type19));;
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1ac289ece:;
			{
				return _1b4d6e627_equalCasting(_7016_l.unsafe_cast_ptr<_1b4b2a16e_CastingExprModel>(), _7030_r.cast_ptr<_1b4b2a16e_CastingExprModel>(&__jule_any_type93));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1ac28a045:;
			{
				return _1b4d6e9e0_equalUnary(_7016_l.unsafe_cast_ptr<_1b4b28e1a_UnaryExprModel>(), _7030_r.cast_ptr<_1b4b28e1a_UnaryExprModel>(&__jule_any_type110));;
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1ac28a0ab:;
			{
				return _1b4d6ed64_equalIndexing(_7016_l.unsafe_cast_ptr<_1b4b2b3a1_IndexingExprModel>(), _7030_r.cast_ptr<_1b4b2b3a1_IndexingExprModel>(&__jule_any_type44));;
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1ac28a122:;
			{
				return _1b4d701d8_equalBinary(_7016_l.unsafe_cast_ptr<_1b4b28a41_BinaryExprModel>(), _7030_r.cast_ptr<_1b4b28a41_BinaryExprModel>(&__jule_any_type111));;
			}
		}
		else {
			_case_begin_1ac289c9d:;
			{
				return false;;
			}
		}
		_match_end_1ac28985d:;
	};
}



inline void _1b4d760ce_possibleNilRemove(jule::Ptr<_1b4d75100_nils>* _7827_n, jule::Any _7837_m) {
	if (((*(_7827_n)) != nullptr)) {
		_1b4d758a3_removeVar((*(_7827_n)).ptr(), _1b4d76aa2_getNilVar(_7837_m));
	};
}



inline jule::Bool _1b4d76497_isGuaranteedNonNilExpr(jule::Ptr<_1b4d75100_nils>* _8432_n, jule::Any _8442_m) {
	{
		auto &_match_expr{ _8442_m };
		
		if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1ac2912d2:;
			{
				return true;;
			}
		}
		_match_end_1ac29127c:;
	};
	return (((*(_8432_n)) != nullptr) && _1b4d75be4_isSafe((*(_8432_n)).ptr(), _1b4d76aa2_getNilVar(_8442_m)));;
}



inline jule::Bool _1b4d76761_isNilValidType(jule::Ptr<_1b4c7c90e_TypeKind> _9223_t) {
	return (_1b4c802e6_Sptr(_9223_t.ptr()) != nullptr);;
}



inline jule::Uintptr _1b4d76aa2_getNilVar(jule::Any _9414_m) {
	if ((!(_1b57cee66_Access))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ _9414_m };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ac292888:;
			{
				jule::Ptr<_1b4bddaa1_Var> _1009_v = _9414_m.unsafe_cast_ptr<_1b4bddaa1_Var>();;
				if ((!((*(_1009_v))._field_Reference))) {
					return static_cast<jule::Uintptr>(_9414_m.unsafe_cast_ptr<_1b4bddaa1_Var>());;
				};
				return _1b4d76aa2_getNilVar((*((*((*_1009_v.alloc)._field_Value))._field_Data))._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1ac2927bc:;
			{
				return static_cast<jule::Uintptr>((*(_9414_m.unsafe_cast_ptr<_1b4b2d68e_StructSubIdentExprModel>()))._field_Field);;
			}
		}
		_match_end_1ac292833:;
	};
	return 0LLU;;
}



inline jule::Bool _1b57ba65a_isConstantValidConditionalCase(jule::Ptr<_1b4b78c28_If>* _67836_i) {
	{
		auto &_match_expr{ (*((*(_67836_i))))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1ac299bc0:;
			{
				jule::Ptr<_1b2753508_Const> _6819_c = (*((*(_67836_i))))._field_Expr.unsafe_cast_ptr<_1b2753508_Const>();;
				return (_1b27579e6_IsBool(_6819_c.ptr()) && _1b27553ea_ReadBool(_6819_c));;
			}
		}
		_match_end_1ac299b6a:;
	};
	return false;;
}



inline jule::Bool _1b57ba968_isUnreachableExpr(jule::Any* _68723_expr) {
	{
		auto &_match_expr{ (*(_68723_expr)) };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1ac29a93a:;
			{
				jule::Ptr<_1b2753508_Const> _6909_c = (*(_68723_expr)).cast_ptr<_1b2753508_Const>(&__jule_any_type19);;
				return (_1b27579e6_IsBool(_6909_c.ptr()) && (!(_1b27553ea_ReadBool(_6909_c))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1ac299c58:;
			{
				jule::Ptr<_1b4b28a41_BinaryExprModel> _6939_m = (*(_68723_expr)).cast_ptr<_1b4b28a41_BinaryExprModel>(&__jule_any_type111);;
				if (((*((*(_6939_m))._field_Op))._field_Id == static_cast<jule::U64>(54LLU))) {
					return (_1b57ba968_isUnreachableExpr(&((*((*_6939_m.alloc)._field_Left))._field_Model)) || _1b57ba968_isUnreachableExpr(&((*((*_6939_m.alloc)._field_Right))._field_Model)));;
				};
			}
		}
		_match_end_1ac29a8d5:;
	};
	return false;;
}



inline jule::Bool _1b57bac32_isConstantValidMatchCase(jule::Ptr<_1b4b7d546_Case>* _70230_case) {
	{
		auto expr = &((*((*(_70230_case))))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac29ecb3:;
		if (it != expr_end) {
			jule::Ptr<_1b4c466a8_Data> *_70312_expr = it;
			{
				if (((_1b4c470b0_IsConst((*(_70312_expr)).ptr()) && _1b27579e6_IsBool((*(*(_70312_expr)).alloc)._field_Constant.ptr())) && _1b27553ea_ReadBool((*(*(_70312_expr)).alloc)._field_Constant))) {
					return true;;
				};
			}
			_iter_next_1ac29ecb3:;
			++it;
			goto _iter_begin_1ac29ecb3;
		}
		_iter_end_1ac29ecb3:;
	};
	return false;;
}



inline jule::Bool _1b57bb073_isUnreachableConditionalCase(jule::Ptr<_1b4b78c28_If>* _71134_i) {
	return _1b57ba968_isUnreachableExpr(&((*((*(_71134_i))))._field_Expr));;
}



inline jule::Bool _1b57bb309_isUnreachableMatchCase(jule::Ptr<_1b4b7d546_Case>* _71528_case) {
	{
		auto expr = &((*((*(_71528_case))))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac2a1c71:;
		if (it != expr_end) {
			jule::Ptr<_1b4c466a8_Data> *_71612_expr = it;
			{
				if ((!(_1b57ba968_isUnreachableExpr(&((*((*(_71612_expr))))._field_Model))))) {
					return false;;
				};
			}
			_iter_next_1ac2a1c71:;
			++it;
			goto _iter_begin_1ac2a1c71;
		}
		_iter_end_1ac2a1c71:;
	};
	return true;;
}



inline __jule_tuple_bool__jule_tuple_u64 _1b57c5ae9_checkForBitShiftOpt(jule::Ptr<_1b4b28546_OperandExprModel>* _77925_l, jule::Ptr<_1b4b28546_OperandExprModel>* _77948_r) {
	__jule_tuple_bool__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = 0;
	if (((!(_1b275288c_IsInt(_1b4c7ccc7_Str((*((*(_77925_l))))._field_Kind.ptr())))) || (!(_1b275288c_IsInt(_1b4c7ccc7_Str((*((*(_77948_r))))._field_Kind)))))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg1=_1b2755e34_AsU64((*((*(_77948_r))))._field_Model.cast_ptr<_1b2753508_Const>(&__jule_any_type19).ptr());
	if (((__jule_func_result.__jule_result_arg1 == 0LLU) || ((__jule_func_result.__jule_result_arg1 & 1LL) != 0LLU))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	jule::F64 _7875_j = _1b2704b91_Log2(static_cast<jule::F64>(__jule_func_result.__jule_result_arg1));;
	jule::U64 _7885_z = static_cast<jule::U64>(_7875_j);;
	if ((static_cast<jule::F64>(_7885_z) != _7875_j)) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = _7885_z;
	return __jule_func_result;;
}



inline jule::Bool _1b57c5eb2_areSameLvalueExprModel(jule::Any* _79628_l, jule::Any* _79643_r) {
	{
		auto &_match_expr{ (*(_79628_l)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a92975c7:;
			{
				return ((*(_79643_r)) == (*(_79628_l)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1a92973a7:;
			{
				{
					auto &_match_expr{ (*(_79643_r)) };
					
					if (_match_expr.type == &__jule_any_type98) {
						_case_begin_1a9298034:;
						{
							goto _match_end_1a92981aa;
						}
					}
					else {
						_case_begin_1a9298210:;
						{
							return false;;
						}
					}
					_match_end_1a92981aa:;
				};
				jule::Ptr<_1b4b2d68e_StructSubIdentExprModel> _8099_lsi = (*(_79628_l)).cast_ptr<_1b4b2d68e_StructSubIdentExprModel>(&__jule_any_type98);;
				jule::Ptr<_1b4b2d68e_StructSubIdentExprModel> _8109_rsi = (*(_79643_r)).cast_ptr<_1b4b2d68e_StructSubIdentExprModel>(&__jule_any_type98);;
				if (((*(_8099_lsi))._field_Field != (*(_8109_rsi))._field_Field)) {
					return false;;
				};
				return _1b57c5eb2_areSameLvalueExprModel(&((*((*_8099_lsi.alloc)._field_Expr))._field_Model), &((*(*_8109_rsi.alloc)._field_Expr.alloc)._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1a929763d:;
			{
				{
					auto &_match_expr{ (*(_79643_r)) };
					
					if (_match_expr.type == &__jule_any_type110) {
						_case_begin_1a929a762:;
						{
							jule::Ptr<_1b4b28e1a_UnaryExprModel> _82213_ul = (*(_79628_l)).cast_ptr<_1b4b28e1a_UnaryExprModel>(&__jule_any_type110);;
							jule::Ptr<_1b4b28e1a_UnaryExprModel> _82313_ur = (*(_79643_r)).cast_ptr<_1b4b28e1a_UnaryExprModel>(&__jule_any_type110);;
							if ((((*((*(_82213_ul))._field_Op))._field_Id != (*(*(_82313_ur))._field_Op.alloc)._field_Id) || ((*(*_82213_ul.alloc)._field_Op.alloc)._field_Kind != (*(*_82313_ur.alloc)._field_Op.alloc)._field_Kind))) {
								return false;;
							};
							return _1b57c5eb2_areSameLvalueExprModel(&((*((*_82213_ul.alloc)._field_Expr))._field_Model), &((*(*_82313_ur.alloc)._field_Expr.alloc)._field_Model));;
						}
					}
					_match_end_1a9299b7e:;
				};
			}
		}
		_match_end_1a929752d:;
	};
	return false;;
}



inline void _1b57c817e_possibleDynamicRemove(jule::Ptr<_1b57c70e5_dynamic>* _8131_d, jule::Any _8144_m) {
	if (((*(_8131_d)) != nullptr)) {
		_1b57c7898_removeVar((*(_8131_d)).ptr(), _1b57c8c0c_getDynamicVar(_8144_m));
	};
}



inline jule::Bool _1b57c848c_isDynamicValidType(jule::Ptr<_1b4c7c90e_TypeKind> _8727_t) {
	return _1b57b12bb_IsAny(&(_8727_t));;
}



inline jule::Ptr<_1b4c7c90e_TypeKind> _1b57c88bb_isTypeGuaranteedDynamicData(jule::Ptr<_1b57c70e5_dynamic>* _8937_dy, jule::Ptr<_1b4c7c90e_TypeKind> _8955_t, jule::Any _8973_m) {
	jule::Bool _905_isAny = _1b57b12bb_IsAny(&(_8955_t));;
	if (((!(_905_isAny)) && (_1b4c81869_Trait(_8955_t.ptr()) == nullptr))) {
		return _8955_t;;
	};
	if ((!(_905_isAny))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _8973_m };
		
		if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1a9345576:;
			{
				jule::Ptr<_1b4b2a16e_CastingExprModel> _9913_cem = _8973_m.unsafe_cast_ptr<_1b4b2a16e_CastingExprModel>();;
				return _1b57c88bb_isTypeGuaranteedDynamicData(_8937_dy, (*(_9913_cem))._field_ExprKind, (*((*_9913_cem.alloc)._field_Expr))._field_Model);;
			}
		}
		_match_end_1a9345884:;
	};
	jule::Uintptr _1025_var = _1b57c8c0c_getDynamicVar(_8973_m);;
	if ((_1025_var == 0LLU)) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_8937_dy))))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a934737a:;
		if (it != expr_end) {
			_1b57c6ca4_dynamicVar _10617_v = *it;
			{
				if ((_10617_v._field_var == _1025_var)) {
					return _10617_v._field_kind;;
				};
			}
			_iter_next_1a934737a:;
			++it;
			goto _iter_begin_1a934737a;
		}
		_iter_end_1a934737a:;
	};
	return nullptr;;
}



inline jule::Uintptr _1b57c8c0c_getDynamicVar(jule::Any _11418_m) {
	if ((!(_1b57d194b_Dynamic))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ _11418_m };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a9347a95:;
			{
				jule::Ptr<_1b4bddaa1_Var> _1209_v = _11418_m.unsafe_cast_ptr<_1b4bddaa1_Var>();;
				if ((!((*(_1209_v))._field_Reference))) {
					return static_cast<jule::Uintptr>(_11418_m.unsafe_cast_ptr<_1b4bddaa1_Var>());;
				};
				return _1b57c8c0c_getDynamicVar((*((*((*_1209_v.alloc)._field_Value))._field_Data))._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1a9347974:;
			{
				return static_cast<jule::Uintptr>((*(_11418_m.unsafe_cast_ptr<_1b4b2d68e_StructSubIdentExprModel>()))._field_Field);;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1a9348469:;
			{
				jule::Ptr<_1b4b28e1a_UnaryExprModel> _1319_uem = _11418_m.unsafe_cast_ptr<_1b4b28e1a_UnaryExprModel>();;
				if (((*((*(_1319_uem))._field_Op))._field_Id == static_cast<jule::U64>(62LLU))) {
					return _1b57c8c0c_getDynamicVar((*((*_1319_uem.alloc)._field_Expr))._field_Model);;
				};
			}
		}
		_match_end_1a93479eb:;
	};
	return 0LLU;;
}



inline jule::Bool _1b57cc6d3_isValidBoundaryInfo(jule::Any _8424_m) {
	return _1b57cce20_fitsSize(_8424_m, _8424_m);;
}



inline jule::I64 _1b57cca9b_fitsMaxSize(jule::Slice<jule::Any> _8916_max, jule::Any _8934_expr) {
	{
		auto expr = &(_8916_max);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9357a50:;
		if (it != expr_end) {
			jule::I64 _909_i = it - expr->begin();
			jule::Any *_9012_m = it;
			{
				if (_1b57cce20_fitsSize((*(_9012_m)), _8934_expr)) {
					return _909_i;;
				};
			}
			_iter_next_1a9357a50:;
			++it;
			_909_i++;
			goto _iter_begin_1a9357a50;
		}
		_iter_end_1a9357a50:;
	};
	return -1LL;;
}



inline jule::Bool _1b57cce20_fitsSize(jule::Any _9813_e1, jule::Any _9828_e2) {
	if ((_1b4d6de1d_typeData(&(_9813_e1)) != _1b4d6de1d_typeData(&(_9828_e2)))) {
		return false;;
	};
	{
		auto &_match_expr{ _9813_e1 };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1a9359568:;
			{
				jule::Ptr<_1b2753508_Const> _1049_exprConst = _9828_e2.cast_ptr<_1b2753508_Const>(&__jule_any_type19);;
				return ((_1b27561ba_AsF64(_1049_exprConst.ptr()) >= 0LL) && _1b2759dc2_GtEq(_9813_e1.unsafe_cast_ptr<_1b2753508_Const>().ptr(), (*_1049_exprConst.alloc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a93595ce:;
			{
				return (_9828_e2 == _9813_e1);;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1a9359645:;
			{
				jule::Ptr<_1b4b2d68e_StructSubIdentExprModel> _1099_ssi1 = _9813_e1.unsafe_cast_ptr<_1b4b2d68e_StructSubIdentExprModel>();;
				jule::Ptr<_1b4b2d68e_StructSubIdentExprModel> _1109_ssi2 = _9828_e2.cast_ptr<_1b4b2d68e_StructSubIdentExprModel>(&__jule_any_type98);;
				return (_1b4d7055c_equalModels((*((*(_1099_ssi1))._field_Expr))._field_Model, (*(*(_1109_ssi2))._field_Expr.alloc)._field_Model) && ((*_1099_ssi1.alloc)._field_Field == (*_1109_ssi2.alloc)._field_Field));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1a93596ab:;
			{
				jule::Ptr<_1b4b28e1a_UnaryExprModel> _1139_uem1 = _9813_e1.unsafe_cast_ptr<_1b4b28e1a_UnaryExprModel>();;
				jule::Ptr<_1b4b28e1a_UnaryExprModel> _1149_uem2 = _9828_e2.cast_ptr<_1b4b28e1a_UnaryExprModel>(&__jule_any_type110);;
				if ((((*((*(_1139_uem1))._field_Op))._field_Id != static_cast<jule::U64>(62LLU)) || ((*(*_1139_uem1.alloc)._field_Op.alloc)._field_Id != (*(*(_1149_uem2))._field_Op.alloc)._field_Id))) {
					return false;;
				};
				return _1b57cce20_fitsSize((*((*_1139_uem1.alloc)._field_Expr))._field_Model, (*(*_1149_uem2.alloc)._field_Expr.alloc)._field_Model);;
			}
		}
		else {
			_case_begin_1a9358259:;
			{
				return false;;
			}
		}
		_match_end_1a9358204:;
	};
}



inline void _1b57cd250_possibleBoundaryRemove(jule::Ptr<_1b57cb66b_boundary>* _12432_b, jule::Any _12446_model) {
	{
		auto expr = &((*((*(_12432_b))))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a93599ca:;
		if (it != expr_end) {
			_1b57cb32a_boundaryVar _12617_v = *it;
			{
				{
					auto expr = &(_12617_v._field_maxSize);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a93613d8:;
					if (it != expr_end) {
						jule::I64 _12713_i = it - expr->begin();
						jule::Any _12716_max = *it;
						{
							if (_1b4d7055c_equalModels(_12716_max, _12446_model)) {
								_12617_v._field_maxSize=jule::append(_12617_v._field_maxSize.slice(0LL, _12713_i),_12617_v._field_maxSize.slice((_12713_i + 1LL)));
								goto _iter_end_1a93613d8;
							};
						}
						_iter_next_1a93613d8:;
						++it;
						_12713_i++;
						goto _iter_begin_1a93613d8;
					}
					_iter_end_1a93613d8:;
				};
			}
			_iter_next_1a93599ca:;
			++it;
			goto _iter_begin_1a93599ca;
		}
		_iter_end_1a93599ca:;
	};
}



inline jule::Bool _1b57cd519_isBoundaryRiskyType(jule::Ptr<_1b4c7c90e_TypeKind> _13628_t) {
	return (_1b4c80d30_Arr(_13628_t.ptr()) == nullptr);;
}



inline jule::Bool _1b57cd7d3_isBoundaryValidType(jule::Ptr<_1b4c7c90e_TypeKind> _14128_t) {
	return ((_1b4c810b6_Slc(_14128_t.ptr()) != nullptr) || (_1b4c80d30_Arr(_14128_t) != nullptr));;
}



inline jule::Uintptr _1b57cda9c_getBoundaryVar(jule::Any _14319_m) {
	if ((!(_1b57cee66_Access))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ _14319_m };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a9363907:;
			{
				jule::Ptr<_1b4bddaa1_Var> _1499_v = _14319_m.unsafe_cast_ptr<_1b4bddaa1_Var>();;
				if ((!((*(_1499_v))._field_Reference))) {
					return static_cast<jule::Uintptr>(_14319_m.unsafe_cast_ptr<_1b4bddaa1_Var>());;
				};
				return _1b57cda9c_getBoundaryVar((*((*((*_1499_v.alloc)._field_Value))._field_Data))._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1a9363c48:;
			{
				return static_cast<jule::Uintptr>((*(_14319_m.unsafe_cast_ptr<_1b4b2d68e_StructSubIdentExprModel>()))._field_Field);;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1a93639a1:;
			{
				jule::Ptr<_1b4b28e1a_UnaryExprModel> _1609_uem = _14319_m.unsafe_cast_ptr<_1b4b28e1a_UnaryExprModel>();;
				if (((*((*(_1609_uem))._field_Op))._field_Id == static_cast<jule::U64>(62LLU))) {
					return _1b57cda9c_getBoundaryVar((*((*_1609_uem.alloc)._field_Expr))._field_Model);;
				};
			}
		}
		_match_end_1a93638a2:;
	};
	return 0LLU;;
}



inline void _1b57d1b27_PushOptLevel(jule::I64 _3217_level) {
	jule::Bool _335_l1 = (_3217_level >= static_cast<jule::I64>(1LL));;
	_1b57ce30b_Copy=_335_l1;
	_1b57ce608_Deadcode=_335_l1;
	_1b57ce8b1_Append=_335_l1;
	_1b57cebad_Math=_335_l1;
	_1b57cee66_Access=_335_l1;
	_1b57d021e_Inline=_335_l1;
	_1b57d04c7_Ptr=_335_l1;
	_1b57d0890_Cond=_335_l1;
	_1b57d0ad2_Str=_335_l1;
	_1b57d0d79_Slice=_335_l1;
	_1b57d1132_Assign=_335_l1;
	_1b57d13da_Exceptional=_335_l1;
	_1b57d1693_Iter=_335_l1;
	_1b57d194b_Dynamic=_335_l1;
}



inline void _1b594880a_detectEnabled(void) {
	_1b5946583_exprEnabled=(((_1b57d04c7_Ptr || _1b57cebad_Math) || _1b57cee66_Access) || _1b57d0890_Cond);
	_1b5946808_scopeEnabled=((((((((_1b57d0890_Cond || _1b57ce8b1_Append) || _1b57ce30b_Copy) || _1b57d0ad2_Str) || _1b57d0d79_Slice) || _1b57d1132_Assign) || _1b57d13da_Exceptional) || _1b57d1693_Iter) || _1b57d194b_Dynamic);
}



inline void _1b59721b3_Throw(jule::Str _910_msg) {
	jule::outln(_910_msg);
	_1cb39d49c_Exit(1LL);
}



inline jule::U64 _1a901d6a0_unix(void) {
	return static_cast<jule::U64>(time(nullptr));;
}



inline jule::Bool _1b64557bc_isCopyOptimizable(jule::Ptr<_1b4c466a8_Data>* _105023_expr) {
	if ((!((*((*(_105023_expr))))._field_Lvalue))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_105023_expr))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1ac4e5943:;
			{
				return false;;
			}
		}
		_match_end_1ac4e58dd:;
	};
	return true;;
}



inline jule::Bool _1b6455b85_isIterCopyOptimizable(jule::Ptr<_1b4c466a8_Data>* _106127_expr, jule::Ptr<_1b4bddaa1_Var>* _106141_v) {
	if (((!((*((*(_106127_expr))))._field_Lvalue)) && (!(_1b4c7e290_Mutable((*((*(_106127_expr))))._field_Kind.ptr()))))) {
		return true;;
	};
	return ((!((*((*(_106141_v))))._field_Mutable)) && (!((*((*(_106127_expr))))._field_Mutable)));;
}



inline jule::Bool _1b64560b4_captureVarHandling(jule::Ptr<_1a9026b3c_ObjectCoder>* _106828_oc, jule::Ptr<_1b4b2b857_AnonFnExprModel>* _106851_m, jule::Ptr<_1b4bddaa1_Var>* _106877_v) {
	{
		auto expr = &((*((*(_106851_m))))._field_Captured);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac4e7acc:;
		if (it != expr_end) {
			jule::Ptr<_1b4bddaa1_Var> _106912_cv = *it;
			{
				if ((_106912_cv == (*(_106877_v)))) {
					_1a90272e1_write((*(_106828_oc)), jule::Str::lit("__jule_closure_ctx.alloc->", 26));
					static__1b646e9b2_var(&((*((*(_106828_oc))))._field_Buf), (*(_106877_v)));
					return true;;
				};
			}
			_iter_next_1ac4e7acc:;
			++it;
			goto _iter_begin_1ac4e7acc;
		}
		_iter_end_1ac4e7acc:;
	};
	return false;;
}



inline jule::Str _1b6466e60_decomposeCommonEsq(jule::U8 _158323_b) {
	{
		auto &_match_expr{ _158323_b };
		
		if (_match_expr == '\\') {
			_case_begin_1ac63879a:;
			{
				return jule::Str::lit("\\\\", 2);;
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1ac638613:;
			{
				return jule::Str::lit("'", 1);;
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1ac638679:;
			{
				return jule::Str::lit("\\\"", 2);;
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_1ac63817e:;
			{
				return jule::Str::lit("\\a", 2);;
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_1ac6381e5:;
			{
				return jule::Str::lit("\\b", 2);;
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_1ac63826c:;
			{
				return jule::Str::lit("\\f", 2);;
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_1ac6382e4:;
			{
				return jule::Str::lit("\\n", 2);;
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_1ac63836b:;
			{
				return jule::Str::lit("\\r", 2);;
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_1ac638811:;
			{
				return jule::Str::lit("\\t", 2);;
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_1ac638877:;
			{
				return jule::Str::lit("\\v", 2);;
			}
		}
		else {
			_case_begin_1ac6368db:;
			{
				return jule::Str();;
			}
		}
		_match_end_1ac638129:;
	};
}



inline jule::Str _1b646726d_sbtoa(jule::U8 _161010_b) {
	if ((_161010_b == 0LLU)) {
		return jule::Str::lit("\\x00", 4);;
	};
	if ((_161010_b < 128LLU)) {
		jule::Str _16159_seq = _1b6466e60_decomposeCommonEsq(_161010_b);;
		if (!(_16159_seq).empty()) {
			return _16159_seq;;
		};
		if (((32LL <= _161010_b) && (_161010_b <= 126LLU))) {
			return jule::Str::from_byte(_161010_b);;
		};
	};
	jule::Str _16235_seq = _1b2744cad_FmtUint(static_cast<jule::U64>(_161010_b), 8LL);;
	if ((_16235_seq.len() == 2LL)) {
		return (jule::Str::lit("\\0", 2) + _16235_seq);;
	};
	return (jule::Str::lit("\\", 1) + _16235_seq);;
}



inline void _1b6467559_cstrBytes(_1cb1d27a9_StrBuilder* _163019_s, jule::Str _163034_ctx) {
	{
		auto expr = &(_163034_ctx);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac63d580:;
		if (it != expr_end) {
			jule::U8 *_163112_b = it;
			{
				_1cb1db3d9_WriteStr(_163019_s, _1b646726d_sbtoa((*(_163112_b))));
			}
			_iter_next_1ac63d580:;
			++it;
			goto _iter_begin_1ac63d580;
		}
		_iter_end_1ac63d580:;
	};
}



inline void _1b6467889_cstrLit(_1cb1d27a9_StrBuilder* _163617_s, jule::Str _163632_ctx) {
	_1cb1db692_WriteByte(_163617_s, '\"');
	_1b6467559_cstrBytes(_163617_s, _163632_ctx);
	_1cb1db692_WriteByte(_163617_s, '\"');
}



inline void _1b6467c30_ftoa(_1cb1d27a9_StrBuilder* _164214_s, jule::F64 _164229_f, jule::I64 _164237_bitsize) {
	if ((_164237_bitsize != 32LL)) {
		if ((_164229_f == static_cast<jule::F64>(static_cast<jule::I64>(_164229_f)))) {
			_1b646801b_itoa(_164214_s, static_cast<jule::I64>(_164229_f));
			return;;
		};
		if ((_164229_f == static_cast<jule::F64>(static_cast<jule::U64>(_164229_f)))) {
			_1b6468307_utoa(_164214_s, static_cast<jule::U64>(_164229_f));
			return;;
		};
	};
	jule::Str _16535_m = _1b272d637_FmtFloat(_164229_f, 'f', -1LL, _164237_bitsize);;
	_1cb1db3d9_WriteStr(_164214_s, _16535_m);
	if ((!(_1cb1c30d5_Contains(_16535_m, jule::Str::lit(".", 1))))) {
		_1cb1db3d9_WriteStr(_164214_s, jule::Str::lit(".0", 2));
	};
}



inline void _1b646801b_itoa(_1cb1d27a9_StrBuilder* _166014_s, jule::I64 _166029_x) {
	{
		
		if ((_166029_x == jule::MAX_I64)) {
			_case_begin_1ac64285e:;
			{
				_1cb1db3d9_WriteStr(_166014_s, jule::Str::lit("jule::MAX_I64", 13));
				return;;
			}
		}
		else if ((_166029_x == jule::MIN_I64)) {
			_case_begin_1ac642908:;
			{
				_1cb1db3d9_WriteStr(_166014_s, jule::Str::lit("jule::MIN_I64", 13));
				return;;
			}
		}
		_match_end_1ac64274e:;
	};
	_1cb1db3d9_WriteStr(_166014_s, _1b2745176_FmtInt(_166029_x, 10LL));
	if (_1cb289ae7_Is64Bit(jule::Str::lit("arm64", 5))) {
		_1cb1db692_WriteByte(_166014_s, 'L');
	};
	_1cb1db692_WriteByte(_166014_s, 'L');
}



inline void _1b6468307_utoa(_1cb1d27a9_StrBuilder* _167714_s, jule::U64 _167729_x) {
	{
		
		if ((_167729_x == jule::MAX_U64)) {
			_case_begin_1ac6449a4:;
			{
				_1cb1db3d9_WriteStr(_167714_s, jule::Str::lit("jule::MAX_U64", 13));
				return;;
			}
		}
		_match_end_1ac644872:;
	};
	_1cb1db3d9_WriteStr(_167714_s, _1b2744cad_FmtUint(_167729_x, 10LL));
	if (_1cb289ae7_Is64Bit(jule::Str::lit("arm64", 5))) {
		_1cb1db692_WriteByte(_167714_s, 'L');
	};
	_1cb1db3d9_WriteStr(_167714_s, jule::Str::lit("LU", 2));
}



inline jule::Slice<jule::U8> _1a903452e_concatAllParts(jule::Slice<jule::Ptr<_1b4ad5712_Token>> _135719_parts) {
	jule::I64 _13589_n = 0LL;;
	{
		auto expr = &(_135719_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac863ac4:;
		if (it != expr_end) {
			jule::Ptr<_1b4ad5712_Token> *_135912_part = it;
			{
				_13589_n+=(*((*(_135912_part))))._field_Kind.len();
			}
			_iter_next_1ac863ac4:;
			++it;
			goto _iter_begin_1ac863ac4;
		}
		_iter_end_1ac863ac4:;
	};
	if ((_13589_n == 0LL)) {
		return nullptr;;
	};
	_1cb1d27a9_StrBuilder _13659_s = static__1cb1d2a73_New(_13589_n);;
	{
		auto expr = &(_135719_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac864dc2:;
		if (it != expr_end) {
			jule::Ptr<_1b4ad5712_Token> *_136612_p = it;
			{
				_1cb1db3d9_WriteStr(&_13659_s, (*((*(_136612_p))))._field_Kind);
			}
			_iter_next_1ac864dc2:;
			++it;
			goto _iter_begin_1ac864dc2;
		}
		_iter_end_1ac864dc2:;
	};
	return _1cb1dc682_Buf(&_13659_s);;
}



inline jule::Bool _1a903483c_isHeadDecl(jule::Ptr<_1b4b36884_Fn>* _137320_m) {
	if ((((*((*(_137320_m))))._field_Generics.len() > 0LL) || ((*((*(_137320_m))))._field_Instances.len() == 0LL))) {
		return false;;
	};
	if (_1b57b1893_IsOpMethod(_137320_m)) {
		return true;;
	};
	jule::Ptr<_1b4b39865_FnIns> _13809_mi = (*((*(_137320_m))))._field_Instances[0LL];;
	;
	return static__1b4be0047_Dispose(_1b4b256a8_FindMethod((*(_13809_mi))._field_Owner.ptr(), jule::Str::lit("Dispose", 7), false));;
}



inline jule::Bool _1a90436e7_shouldInitialized(jule::Ptr<_1b4c7c90e_TypeKind>* _46427_t) {
	jule::Ptr<_1b4c854d8_Prim> _4655_prim = _1b4c80060_Prim((*(_46427_t)).ptr());;
	if ((_4655_prim != nullptr)) {
		return ((!(_1b4c88c06_IsAny(_4655_prim))) && (!(_1b4c88970_IsStr(_4655_prim))));;
	};
	{
		
		if ((_1b4c802e6_Sptr((*(_46427_t)).ptr()) != nullptr)) {
			_case_begin_1ac99c933:;
			{
				return false;;
			}
		}
		else if ((_1b4c81b00_Map((*(_46427_t)).ptr()) != nullptr)) {
			_case_begin_1ac99c999:;
			{
				return false;;
			}
		}
		else if ((_1b4c810b6_Slc((*(_46427_t)).ptr()) != nullptr)) {
			_case_begin_1ac99ca10:;
			{
				return false;;
			}
		}
		else if ((_1b4c81869_Trait((*(_46427_t)).ptr()) != nullptr)) {
			_case_begin_1ac99bb63:;
			{
				return false;;
			}
		}
		else if ((_1b4c8134c_Fn((*(_46427_t)).ptr()) != nullptr)) {
			_case_begin_1ac99caba:;
			{
				return false;;
			}
		}
		else if ((_1b4c80d30_Arr((*(_46427_t)).ptr()) != nullptr)) {
			_case_begin_1ac99cb31:;
			{
				jule::Ptr<_1b4c8bd08_Arr> _48113_arr = _1b4c80d30_Arr((*(_46427_t)).ptr());;
				return _1a90436e7_shouldInitialized(&((*(_48113_arr))._field_Elem));;
			}
		}
		else if ((_1b4c815d3_Struct((*(_46427_t)).ptr()) != nullptr)) {
			_case_begin_1ac99cb97:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1ac99badb:;
			{
				return true;;
			}
		}
		_match_end_1ac99be3d:;
	};
}



inline void _1cb3a2858_printErrorMessage(jule::Str _3022_msg) {
	jule::outln(_3022_msg);
}



inline void _1cb3a2acd_help(jule::Slice<jule::Str>* _3510_args) {
	if (((*(_3510_args)).len() > 2LL)) {
		_1cb3a2858_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_3510_args))[2LL]));
		return;;
	};
	jule::I64 _419_max = _1cb3a267c_HelpMap[0LL][0LL].len();;
	{
		auto expr = &(_1cb3a267c_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca4703d:;
		if (it != expr_end) {
			jule::Array<jule::Str,2> *_4212_k = it;
			{
				jule::I64 _439_n = (*(_4212_k))[0LL].len();;
				if ((_439_n > _419_max)) {
					_419_max=_439_n;
				};
			}
			_iter_next_1aca4703d:;
			++it;
			goto _iter_begin_1aca4703d;
		}
		_iter_end_1aca4703d:;
	};
	_1cb1d27a9_StrBuilder _499_s = static__1cb1d2a73_New(32LL);;
	;
	{
		auto expr = &(_1cb3a267c_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca4887a:;
		if (it != expr_end) {
			jule::I64 _519_i = it - expr->begin();
			jule::Array<jule::Str,2> *_5112_part = it;
			{
				_1cb1db3d9_WriteStr(&_499_s, (*(_5112_part))[0LL]);
				_1cb1db3d9_WriteStr(&_499_s, _1cb1bd751_Repeat(jule::Str::lit(" ", 1), ((_419_max - (*(_5112_part))[0LL].len()) + 5LL)));
				_1cb1db3d9_WriteStr(&_499_s, (*(_5112_part))[1LL]);
				if (((_519_i + 1LL) < 5LL)) {
					_1cb1db692_WriteByte(&_499_s, '\n');
				};
			}
			_iter_next_1aca4887a:;
			++it;
			_519_i++;
			goto _iter_begin_1aca4887a;
		}
		_iter_end_1aca4887a:;
	};
	jule::outln(_499_s);
}



inline void _1cb3a2d0e_version(jule::Slice<jule::Str>* _6313_args) {
	if (((*(_6313_args)).len() > 2LL)) {
		_1cb3a2858_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_6313_args))[2LL]));
		return;;
	};
	jule::outln(jule::Str::lit("jule0.0.16 @master", 18));
}



inline void _1cb3a301d_toolDistos(void) {
	jule::out(jule::Str::lit("supported operating systems:\n ", 30));
	jule::out(jule::Str::lit("windows", 7));
	jule::out(jule::Str::lit(" ", 1));
	jule::out(jule::Str::lit("linux", 5));
	jule::out(jule::Str::lit(" ", 1));
	jule::out(jule::Str::lit("darwin", 6));
	jule::outln(jule::Str());
}



inline void _1cb3a3183_toolDistarch(void) {
	jule::out(jule::Str::lit("supported architects:\n ", 23));
	jule::out(jule::Str::lit("amd64", 5));
	jule::out(jule::Str::lit(" ", 1));
	jule::out(jule::Str::lit("i386", 4));
	jule::out(jule::Str::lit(" ", 1));
	jule::out(jule::Str::lit("arm64", 5));
	jule::outln(jule::Str());
}



inline void _1cb3a3381_tool(jule::Slice<jule::Str>* _9410_args) {
	if (((*(_9410_args)).len() == 2LL)) {
		jule::outln(jule::Str::lit("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;;
	} else if (((*(_9410_args)).len() > 3LL)) {
		_1cb3a2858_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_9410_args))[3LL]));
		return;;
	};
	jule::Str _1055_cmd = (*(_9410_args))[2LL];;
	{
		auto &_match_expr{ _1055_cmd };
		
		if (_match_expr == jule::Str::lit("distos", 6)) {
			_case_begin_1aca4e6b6:;
			{
				_1cb3a301d_toolDistos();
			}
		}
		else if (_match_expr == jule::Str::lit("distarch", 8)) {
			_case_begin_1aca4e782:;
			{
				_1cb3a3183_toolDistarch();
			}
		}
		else {
			_case_begin_1aca4d1ba:;
			{
				_1cb3a2858_printErrorMessage((jule::Str::lit("undefined command: ", 19) + _1055_cmd));
			}
		}
		_match_end_1aca4e2a9:;
	};
}



inline void _1cb3a35b2_julenv(jule::Slice<jule::Str>* _11712_args) {
	if (((*(_11712_args)).len() > 2LL)) {
		_1cb3a2858_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_11712_args))[2LL]));
		return;;
	};
	jule::outln(jule::Str::lit("julec version: jule0.0.16 @master", 33));
	jule::outln(jule::Str::lit("architecture: arm64", 19));
	jule::outln(jule::Str::lit("operating system: linux", 23));
	jule::outln((jule::Str::lit("default compiler: ", 18) + _20c57dc89_Compiler));
	jule::outln((jule::Str::lit("default C++ standard: ", 22) + _20c57e1a7_CppStd));
}



inline void _1cb3a3903_mod(jule::Slice<jule::Str>* _1309_args) {
	if (((*(_1309_args)).len() == 2LL)) {
		jule::outln(jule::Str::lit("command is not given, try julec mod init", 40));
		return;;
	};
	if (((*(_1309_args)).len() > 3LL)) {
		_1cb3a2858_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_1309_args))[3LL]));
		return;;
	};
	{
		auto &_match_expr{ (*(_1309_args))[2LL] };
		
		if (_match_expr == jule::Str::lit("init", 4)) {
			_case_begin_1aca52ca2:;
			{
				({
					auto except = static__20d92a387_Write(jule::Str::lit("jule.mod", 8), jule::Slice<jule::U8>(), 432LL);
					if (!except.ok()) {
						_1cb3a2858_printErrorMessage(jule::Str::lit("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_1aca51894:;
			{
				_1cb3a2858_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_1309_args))[2LL]));
			}
		}
		_match_end_1aca52785:;
	};
}



inline jule::Bool _1cb3a3b45_processCommand(jule::Slice<jule::Str>* _15320_args) {
	{
		auto &_match_expr{ (*(_15320_args))[1LL] };
		
		if (_match_expr == jule::Str::lit("help", 4)) {
			_case_begin_1aca5427b:;
			{
				_1cb3a2acd_help(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("version", 7)) {
			_case_begin_1aca542e2:;
			{
				_1cb3a2d0e_version(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("tool", 4)) {
			_case_begin_1aca54358:;
			{
				_1cb3a3381_tool(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("julenv", 6)) {
			_case_begin_1aca53a3e:;
			{
				_1cb3a35b2_julenv(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("mod", 3)) {
			_case_begin_1aca53aa5:;
			{
				_1cb3a3903_mod(_15320_args);
			}
		}
		else {
			_case_begin_1aca528d9:;
			{
				return false;;
			}
		}
		_match_end_1aca53467:;
	};
	return true;;
}



inline void _1cb3a3cdd_showInfo(void) {
	jule::outln(jule::Str::lit("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help\n    version       Show version\n    tool          Tools for effective Jule\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 307));
}



void entry_point(void) {
	jule::Slice<jule::Str> _1899_args = _20d767ceb_Args();;
	if ((_1899_args.len() < 2LL)) {
		_1cb3a3cdd_showInfo();
		return;;
	};
	if (_1cb3a3b45_processCommand(&(_1899_args))) {
		return;;
	};
	_1a90b3789_compileCommand(&(_1899_args));
}



inline void _1a90b06a9_init(void) {
	_20c57dc89_Compiler=jule::Str::lit("clang", 5);
}



inline jule::Ptr<_20d929540_File> _1a90b0973_openOutput(jule::Str* _4316_path) {
	jule::Str _445_dir = _1cb1e0c6d_Dir((*(_4316_path)));;
	({
		auto except = static__20d9282b9_Of(_445_dir);
		if (!except.ok()) {
			({
				auto except = static__1cb1e3369_Create(_445_dir);
				if (!except.ok()) {
					_1b59721b3_Throw(jule::Str::lit("a problem occurs when code generation", 37));
				}
			});
		}
	});
	return ({
		auto except = static__20d929c27_Create((*(_4316_path)));
		(except.ok()) ? (except.result) : ({
			_1b59721b3_Throw(jule::Str::lit("a problem occurs when code generation", 37));

			nullptr;
		});
	});;
}



inline void _1a90b0b1b_clearObjects(void) {
	({
		auto except = static__20d9268d3_Remove(_1a90b1c71_getCompilePath());
		if (!except.ok()) {
			jule::outln(jule::Str::lit("a problem occurs when object cleaning", 37));
			return;;
		}
	});
	static__1cb1e359a_Remove(_1a90aee6c_OutDir);
}



inline void _1a90b0e29_compileIr(jule::Str _7214_compiler, jule::Str _7229_compilerCmd) {
	jule::Ptr<_1cb34715a_Cmd> _739_cmd = static__1cb347556_New(_7214_compiler);;
	(*(_739_cmd))._field_Args=_1cb1c2c61_Split(_7229_compilerCmd, jule::Str::lit(" ", 1), -1LL);
	({
		auto except = _1cb347754_Spawn(_739_cmd);
		if (!except.ok()) {
			{
				auto &_match_expr{ except.error };
				
				if (jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0) == _match_expr) {
					_case_begin_1aca5a02e:;
					{
						static__1b596d588_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(0LL), &__jule_any_type0) == _match_expr) {
					_case_begin_1aca59bee:;
					{
						static__1b596d588_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_1aca59a34:;
					{
						static__1b596d588_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of unknown problem", 59));
					}
				}
				_match_end_1aca59b44:;
			};
			_1b59721b3_Throw(jule::Str());
		}
	});
	jule::I64 _865_status = ({
		auto except = _1cb347bd8_Wait(_739_cmd);
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:86:15"));
		(except.result);
	});;
	if ((_865_status != 0LL)) {
		jule::Str _889_errorMessage = ((jule::Str::lit("\n>>> your backend compiler (", 28) + _20c57dc89_Compiler) + jule::Str::lit(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149));;
		static__1b596d588_Print(jule::Str::lit("\033[31m", 5), _889_errorMessage);
		_1b59721b3_Throw(jule::Str());
	};
	_1a90b0b1b_clearObjects();
}



inline jule::Bool _1a90b11e3_isCppSourceFile(jule::Str _9920_path) {
	jule::I64 _1005_offset = _1cb1c1820_FindLastByte(_9920_path, '.');;
	if ((_1005_offset == -1LL)) {
		return false;;
	};
	return _1cb27809c_IsValidCppExt(_9920_path.slice(_1005_offset));;
}



inline void _1a90b1424_pushCompCmdClang(_1cb1d27a9_StrBuilder* _10726_cmd) {
	_1cb1db3d9_WriteStr(_10726_cmd, jule::Str::lit("-Wno-everything ", 16));
	_1cb1db3d9_WriteStr(_10726_cmd, jule::Str::lit("--std=", 6));
	{
		auto &_match_expr{ _20c57e1a7_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1aca5cd56:;
			{
				_1cb1db3d9_WriteStr(_10726_cmd, jule::Str::lit("c++14", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1aca5dc14:;
			{
				_1cb1db3d9_WriteStr(_10726_cmd, jule::Str::lit("c++17", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1aca5dc7a:;
			{
				_1cb1db3d9_WriteStr(_10726_cmd, jule::Str::lit("c++20", 5));
			}
		}
		_match_end_1aca5cdcd:;
	};
	_1cb1db692_WriteByte(_10726_cmd, ' ');
	if (_20c58021e_Production) {
		_1cb1db3d9_WriteStr(_10726_cmd, jule::Str::lit("-O3 ", 4));
		_1cb1db3d9_WriteStr(_10726_cmd, jule::Str::lit("-flto ", 6));
		_1cb1db3d9_WriteStr(_10726_cmd, jule::Str::lit("-DNDEBUG ", 9));
		_1cb1db3d9_WriteStr(_10726_cmd, jule::Str::lit("-fomit-frame-pointer ", 21));
	} else {
		_1cb1db3d9_WriteStr(_10726_cmd, jule::Str::lit("-O0 ", 4));
	};
}



inline void _1a90b1655_pushCompCmdGcc(_1cb1d27a9_StrBuilder* _13324_cmd) {
	_1cb1db3d9_WriteStr(_13324_cmd, jule::Str::lit("-w ", 3));
	_1cb1db3d9_WriteStr(_13324_cmd, jule::Str::lit("--std=", 6));
	{
		auto &_match_expr{ _20c57e1a7_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1aca60298:;
			{
				_1cb1db3d9_WriteStr(_13324_cmd, jule::Str::lit("c++14", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1aca61bc3:;
			{
				_1cb1db3d9_WriteStr(_13324_cmd, jule::Str::lit("c++17", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1aca61c39:;
			{
				_1cb1db3d9_WriteStr(_13324_cmd, jule::Str::lit("c++20", 5));
			}
		}
		_match_end_1aca60331:;
	};
	_1cb1db692_WriteByte(_13324_cmd, ' ');
	if (_20c58021e_Production) {
		_1cb1db3d9_WriteStr(_13324_cmd, jule::Str::lit("-O3 ", 4));
		_1cb1db3d9_WriteStr(_13324_cmd, jule::Str::lit("-DNDEBUG ", 9));
		_1cb1db3d9_WriteStr(_13324_cmd, jule::Str::lit("-fomit-frame-pointer ", 21));
	} else {
		_1cb1db3d9_WriteStr(_13324_cmd, jule::Str::lit("-O0 ", 4));
	};
}



inline __jule_tuple_str__jule_tuple_str _1a90b1ad9_genCompileCmd(jule::Str _15918_sourcePath, jule::Ptr<_1b57a68aa_IR>* _15936_ir) {
	__jule_tuple_str__jule_tuple_str __jule_func_result;
	jule::Str *_1606_compiler = &(_20c57de98_CompilerPath);;
	_1cb1d27a9_StrBuilder _1619_cmd = static__1cb1d2a73_New(64LL);;
	{
		auto &_match_expr{ _20c57dc89_Compiler };
		
		if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1aca648da:;
			{
				_1a90b1655_pushCompCmdGcc(&(_1619_cmd));
			}
		}
		else if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1aca64e29:;
			{
				_1a90b1424_pushCompCmdClang(&(_1619_cmd));
			}
		}
		_match_end_1aca64bb5:;
	};
	{
		auto expr = &((*((*(_15936_ir))))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca651d2:;
		if (it != expr_end) {
			jule::Ptr<_1b4b9a893_ImportInfo> *_17112_u = it;
			{
				if (((*((*(_17112_u))))._field_Binded && _1a90b11e3_isCppSourceFile((*(*(_17112_u)).alloc)._field_Path))) {
					_1cb1db3d9_WriteStr(&_1619_cmd, (*(*(_17112_u)).alloc)._field_Path);
					_1cb1db692_WriteByte(&_1619_cmd, ' ');
				};
			}
			_iter_next_1aca651d2:;
			++it;
			goto _iter_begin_1aca651d2;
		}
		_iter_end_1aca651d2:;
	};
	if (!(_1a90b0500_Out).empty()) {
		_1cb1db3d9_WriteStr(&_1619_cmd, jule::Str::lit("-o ", 3));
		_1cb1db3d9_WriteStr(&_1619_cmd, _1a90b0500_Out);
		_1cb1db692_WriteByte(&_1619_cmd, ' ');
	};
	_1cb1db3d9_WriteStr(&_1619_cmd, _15918_sourcePath);
	{
		auto expr = &((*((*(_15936_ir))))._field_Passes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca67bda:;
		if (it != expr_end) {
			jule::Str *_18612_pass = it;
			{
				_1cb1db692_WriteByte(&_1619_cmd, ' ');
				_1cb1db3d9_WriteStr(&_1619_cmd, (*(_18612_pass)));
			}
			_iter_next_1aca67bda:;
			++it;
			goto _iter_begin_1aca67bda;
		}
		_iter_end_1aca67bda:;
	};
	if (_1cb39e547_Os.equal("windows", 7)) {
		_1cb1db3d9_WriteStr(&_1619_cmd, jule::Str::lit(" -lshell32", 10));
	};
	__jule_func_result.__jule_result_arg0 = (*(_1606_compiler));
	__jule_func_result.__jule_result_arg1 = _1cb1dbbd1_Str(&_1619_cmd);
	return __jule_func_result;;
}



inline jule::Str _1a90b1c71_getCompilePath(void) {
	return _1cb1e007a_Join(jule::Slice<jule::Str>::make({_1a90aee6c_OutDir,_1a90b0247_OutName}));;
}



inline void _1a90b1ea2_applyTargetIndependentOptimizations(jule::Ptr<_1b57a68aa_IR>* _20545_ir) {
	jule::Ptr<_1b5946a06_Optimizer> _2069_opt = static__1b5946e79_New(_20545_ir);;
	_1b5948563_Optimize(_2069_opt.ptr());
}



inline void _1a90b214a_checkCompilerFlag(void) {
	{
		auto &_match_expr{ _20c57dc89_Compiler };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1aca6a3b3:;
			{
				_1b59721b3_Throw(jule::Str::lit("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1aca6a2e7:;
			{
				if ((_20c57de98_CompilerPath).empty()) {
					_20c57de98_CompilerPath=jule::Str::lit("clang++", 7);
				};
			}
		}
		else if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1aca69ec8:;
			{
				if ((_20c57de98_CompilerPath).empty()) {
					_20c57de98_CompilerPath=jule::Str::lit("g++", 3);
				};
			}
		}
		else {
			_case_begin_1aca69aaa:;
			{
				_1b59721b3_Throw((jule::Str::lit("invalid option value for --compiler: ", 37) + _20c57dc89_Compiler));
			}
		}
		_match_end_1aca69d0d:;
	};
}



inline void _1a90b2359_checkTargetArch(jule::Str _22720_arch) {
	if ((((!_22720_arch.equal("amd64", 5)) && (!_22720_arch.equal("arm64", 5))) && (!_22720_arch.equal("i386", 4)))) {
		_1b59721b3_Throw((jule::Str::lit("--target: unsupported/undefined architecture: ", 46) + _22720_arch));
	};
}



inline void _1a90b258a_checkTargetOs(jule::Str _23518_os) {
	if ((((!_23518_os.equal("windows", 7)) && (!_23518_os.equal("linux", 5))) && (!_23518_os.equal("darwin", 6)))) {
		_1b59721b3_Throw((jule::Str::lit("--target: unsupported/undefined operating system: ", 50) + _23518_os));
	};
}



inline void _1a90b27bb_checkTargetFlag(jule::Str* _24321_target) {
	if (((*(_24321_target))).empty()) {
		_1b59721b3_Throw(jule::Str::lit("missing option value: --target", 30));
	};
	jule::Slice<jule::Str> _2485_parts = _1cb1c2c61_Split((*(_24321_target)), jule::Str::lit("-", 1), -1LL);;
	if ((_2485_parts.len() != 2LL)) {
		_1b59721b3_Throw((jule::Str::lit("--target: undefined platform target format: ", 44) + (*(_24321_target))));
	};
	jule::Str _2535_os;
	jule::Str _2539_arch;
	({
		jule::Str ___jule_assign_arg = _2485_parts[0LL];
		jule::Str _1___jule_assign_arg = _2485_parts[1LL];
		_2535_os = ___jule_assign_arg;
		_2539_arch = _1___jule_assign_arg;
	});
	if ((!_2535_os.equal("native", 6))) {
		_1a90b258a_checkTargetOs(_2535_os);
		_1cb39e547_Os=_2535_os;
	};
	if ((!_2539_arch.equal("native", 6))) {
		_1a90b2359_checkTargetArch(_2539_arch);
		_1cb39e800_Arch=_2539_arch;
	};
	_1b274980c_UpdateTarget();
}



inline void _1a90b29ec_checkOptFlag(jule::Str* _26618_opt) {
	if (((*(_26618_opt))).empty()) {
		_1b59721b3_Throw(jule::Str::lit("missing option value: --opt", 27));
	};
	{
		auto &_match_expr{ (*(_26618_opt)) };
		
		if (_match_expr == jule::Str::lit("L0", 2)) {
			_case_begin_1aca71c8d:;
			{
				goto _match_end_1aca714eb;
			}
		}
		else if (_match_expr == jule::Str::lit("L1", 2)) {
			_case_begin_1aca71d37:;
			{
				_1b57d1b27_PushOptLevel(static_cast<jule::I64>(1LL));
			}
		}
		else {
			_case_begin_1aca715d9:;
			{
				_1b59721b3_Throw((jule::Str::lit("--opt: invalid optimization level: ", 35) + (*(_26618_opt))));
			}
		}
		_match_end_1aca714eb:;
	};
}



inline void _1a90b2db5_checkCppStdFlag(void) {
	{
		auto &_match_expr{ _20c57e1a7_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5) || _match_expr == jule::Str::lit("cpp17", 5) || _match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1aca72ae6:;
			{
				goto _match_end_1aca725c9;
			}
		}
		else {
			_case_begin_1aca719c4:;
			{
				_1b59721b3_Throw((jule::Str::lit("--cppstd: invalid cpp standard: ", 32) + _20c57e1a7_CppStd));
			}
		}
		_match_end_1aca725c9:;
	};
}



inline jule::Slice<jule::Str> _1a90b3080_checkFlags(jule::Slice<jule::Str>* _29216_args) {
	jule::Str _2939_opt = jule::Str::lit("L0", 2);;
	jule::Str _2949_target = jule::Str::lit("native-native", 13);;
	jule::Ptr<_1a90a9e45_FlagSet> _2969_fs = static__1a90aa231_New();;
	_1aca744bb_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_2939_opt)))), jule::Str::lit("opt", 3), 0LL, jule::Str::lit("Optimization level", 18));
	_1aca744bb_AddVar(_2969_fs, ((jule::Ptr<jule::Str>)((&(_2949_target)))), jule::Str::lit("target", 6), 0LL, jule::Str::lit("Target system", 13));
	_1aca744bb_AddVar(_2969_fs, ((jule::Ptr<jule::Str>)((&(_1a90b0500_Out)))), jule::Str::lit("out", 3), 'o', jule::Str::lit("Output identifier", 17));
	_1aca7b814_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_20c57e3b6_Shadowing)))), jule::Str::lit("shadowing", 9), 0LL, jule::Str::lit("Allow shadowing", 15));
	_1aca7b814_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_20c57e5c5_Transpilation)))), jule::Str::lit("transpile", 9), 't', jule::Str::lit("Transpile code", 14));
	_1aca744bb_AddVar(_2969_fs, ((jule::Ptr<jule::Str>)((&(_20c57dc89_Compiler)))), jule::Str::lit("compiler", 8), 0LL, jule::Str::lit("Backend compiler", 16));
	_1aca744bb_AddVar(_2969_fs, ((jule::Ptr<jule::Str>)((&(_20c57de98_CompilerPath)))), jule::Str::lit("compiler-path", 13), 0LL, jule::Str::lit("Path of backend compiler", 24));
	_1aca7b814_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_20c58021e_Production)))), jule::Str::lit("production", 10), 'p', jule::Str::lit("Compile for production", 22));
	_1aca7b814_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_20c57eb14_RC)))), jule::Str::lit("disable-rc", 10), 0LL, jule::Str::lit("Disable reference counting", 26));
	_1aca7b814_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_20c57eecc_Safety)))), jule::Str::lit("disable-safety", 14), 0LL, jule::Str::lit("Disable safety", 14));
	_1aca744bb_AddVar(_2969_fs, ((jule::Ptr<jule::Str>)((&(_20c57e1a7_CppStd)))), jule::Str::lit("cppstd", 6), 0LL, jule::Str::lit("C++ standard", 12));
	_1aca7b814_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1b57ce30b_Copy)))), jule::Str::lit("opt-copy", 8), 0LL, jule::Str::lit("Copy optimization", 17));
	_1aca7b814_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1b57ce608_Deadcode)))), jule::Str::lit("opt-deadcode", 12), 0LL, jule::Str::lit("Deadcode optimization", 21));
	_1aca7b814_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1b57ce8b1_Append)))), jule::Str::lit("opt-append", 10), 0LL, jule::Str::lit("Append optimization", 19));
	_1aca7b814_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1b57cebad_Math)))), jule::Str::lit("opt-math", 8), 0LL, jule::Str::lit("Math optimization", 17));
	_1aca7b814_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1b57cee66_Access)))), jule::Str::lit("opt-access", 10), 0LL, jule::Str::lit("Access optimization", 19));
	_1aca7b814_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1b57d021e_Inline)))), jule::Str::lit("opt-inline", 10), 0LL, jule::Str::lit("Inline optimization", 19));
	_1aca7b814_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1b57d04c7_Ptr)))), jule::Str::lit("opt-ptr", 7), 0LL, jule::Str::lit("Pointer optimizations", 21));
	_1aca7b814_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1b57d0890_Cond)))), jule::Str::lit("opt-cond", 8), 0LL, jule::Str::lit("Conditional optimizations", 25));
	_1aca7b814_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1b57d0ad2_Str)))), jule::Str::lit("opt-str", 7), 0LL, jule::Str::lit("String optimizations", 20));
	_1aca7b814_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1b57d0d79_Slice)))), jule::Str::lit("opt-slice", 9), 0LL, jule::Str::lit("Slice optimizations", 19));
	_1aca7b814_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1b57d1132_Assign)))), jule::Str::lit("opt-assign", 10), 0LL, jule::Str::lit("Assignment optimizations", 24));
	_1aca7b814_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1b57d13da_Exceptional)))), jule::Str::lit("opt-exceptional", 15), 0LL, jule::Str::lit("Exceptional optimizations", 25));
	_1aca7b814_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1b57d1693_Iter)))), jule::Str::lit("opt-iter", 8), 0LL, jule::Str::lit("Iterations optimizations", 24));
	_1aca7b814_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1b57d194b_Dynamic)))), jule::Str::lit("opt-dynamic", 11), 0LL, jule::Str::lit("Dynamic programming optimizations", 33));
	jule::Slice<jule::Str> _3249_content = ({
		auto except = _1a90ab100_Parse(_2969_fs, (*(_29216_args)));
		(except.ok()) ? (except.result) : ({
			_1b59721b3_Throw(except.error.cast<jule::Str>(&__jule_any_type4));

			nullptr;
		});
	});;
	_1a90b214a_checkCompilerFlag();
	_1a90b2db5_checkCppStdFlag();
	_1a90b27bb_checkTargetFlag(&(_2949_target));
	_1a90b29ec_checkOptFlag(&(_2939_opt));
	return _3249_content;;
}



inline void _1a90b328e_setupSemaFlags(jule::I64* _33724_flags) {
	if (_20c57e3b6_Shadowing) {
		(*(_33724_flags))|=static_cast<jule::I64>(1LL);
	};
}



inline jule::Ptr<_1b57a68aa_IR> _1a90b3558_buildIr(jule::Slice<jule::Str>* _34313_args) {
	jule::Slice<jule::Str> _3445_content = _1a90b3080_checkFlags(_34313_args);;
	jule::I64 _3469_semaFlags = static_cast<jule::I64>(0LL);;
	_1a90b328e_setupSemaFlags(&(_3469_semaFlags));
	if ((_3445_content.len() == 0LL)) {
		_1b59721b3_Throw(_1cb285582_Logf(jule::Str::lit("missing compile path", 20), jule::Slice<jule::Any>()));
	} else if ((_3445_content.len() > 1LL)) {
		_1b59721b3_Throw((jule::Str::lit("undefined content: ", 19) + _3445_content[1LL]));
	};
	jule::Str _3549_path;
	jule::Bool _35415_ok;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1cb1e05ca_Abs(_3445_content[0LL]);
		_3549_path = __jule_assign_result.__jule_result_arg0;
		_35415_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_35415_ok))) {
		_1b59721b3_Throw(jule::Str::lit("compile path could not processed because of a problem", 53));
	};
	jule::Ptr<_20d92b630_Status> _3605_inf = ({
		auto except = static__20d9282b9_Of(_1cb39d9db_PathStdlib);
		(except.ok()) ? (except.result) : ({{
			_1b59721b3_Throw(_1cb285582_Logf(jule::Str::lit("standard library directory not found", 36), jule::Slice<jule::Any>()));
			return nullptr;;
		} jule::Ptr<_20d92b630_Status>(nullptr);});
	});;
	if ((!(_20d92ba09_IsDir(_3605_inf.ptr())))) {
		_1b59721b3_Throw(_1cb285582_Logf(jule::Str::lit("standard library directory not found", 36), jule::Slice<jule::Any>()));
	};
	jule::Ptr<_1b57a68aa_IR> _3689_ir;
	jule::Slice<_1cb285120_Log> _36813_logs;
	({
		__jule_tuple_x_1b57a68aa_IR__jule_tuple_s_1cb285120_Log __jule_assign_result = static__1b57a6d50_Build(_3549_path, _3469_semaFlags);
		_3689_ir = __jule_assign_result.__jule_result_arg0;
		_36813_logs = __jule_assign_result.__jule_result_arg1;
	});
	if (((_3689_ir == nullptr) && (_36813_logs == nullptr))) {
		_1b59721b3_Throw(_1cb285582_Logf(jule::Str::lit("there is no Jule source code in package: @", 42), jule::Slice<jule::Any>::make({jule::Any(_3549_path, &__jule_any_type4)})));
	};
	if ((_36813_logs != nullptr)) {
		static__1b5971701_PrintLogs(&(_36813_logs));
		_1b59721b3_Throw(jule::Str());
	};
	return _3689_ir;;
}



inline void _1a90b3789_compileCommand(jule::Slice<jule::Str>* _38324_args) {
	((*(_38324_args))).mut_slice(1LL);;
	if ((*(_38324_args))[0LL].equal("test", 4)) {
		_20c57e85b_Test=true;
		((*(_38324_args))).mut_slice(1LL);;
	};
	jule::Ptr<_1b57a68aa_IR> _3899_ir = _1a90b3558_buildIr(_38324_args);;
	;
	if ((!(_20c57e85b_Test))) {
		jule::Ptr<_1b4b36884_Fn> _39413_main = _1b4b9ed4d_FindFn((*(_3899_ir))._field_Main.ptr(), jule::Str::lit("main", 4), false);;
		if ((_39413_main == nullptr)) {
			_1b59721b3_Throw(_1cb285582_Logf(jule::Str::lit("missing entry point: entry point (main) function is not defined", 63), jule::Slice<jule::Any>()));
		};
	};
	_1a90b1ea2_applyTargetIndependentOptimizations(&(_3899_ir));
	_1b57a7db7_Order(_3899_ir);
	jule::Str _4055_compPath = _1a90b1c71_getCompilePath();;
	jule::Str _4065_compiler;
	jule::Str _40615_compilerCmd;
	({
		__jule_tuple_str__jule_tuple_str __jule_assign_result = _1a90b1ad9_genCompileCmd(_4055_compPath, &(_3899_ir));
		_4065_compiler = __jule_assign_result.__jule_result_arg0;
		_40615_compilerCmd = __jule_assign_result.__jule_result_arg1;
	});
	jule::Ptr<_1a9026b3c_ObjectCoder> _4089_oc = static__1a9027038_New(&(_3899_ir), _1a9024d8d_SerializationInfo{._field_Compiler=_4065_compiler, ._field_CompilerCommand=_40615_compilerCmd});;
	if (_20c57e85b_Test) {
		jule::Ptr<_1b64693d5_TestCoder> _41313_tc = static__1b6469858_New(&(_4089_oc));;
		_1b646abcd_Serialize(_41313_tc);
	} else {
		_1a9034166_Serialize(_4089_oc);
	};
	jule::Ptr<_20d929540_File> _4199_file = _1a90b0973_openOutput(&(_4055_compPath));;
	({
		auto except = _20d926c57_Write(_4199_file.ptr(), _1cb1dc682_Buf(&(*(_4089_oc))._field_Buf));
		if (!except.ok()) {
			_1b59721b3_Throw(jule::Str::lit("object code could not write", 27));
		}
	});
	({
		auto except = _20d92aac4_Close(_4199_file);
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:423:5"));
	});
	if ((!(_20c57e5c5_Transpilation))) {
		_1a90b0e29_compileIr(_4065_compiler, _40615_compilerCmd);
	};
}



void __jule_call_initializers(void) {
	_1cb39e943_init();
	_1b2749983_init();
	_1a90b06a9_init();

}

inline jule::Bool __jule_anon1aabd62cd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b387dc_ParamIns> _24027_p1, jule::Ptr<_1b4b387dc_ParamIns> _24042_p2) {
	if (((*((*(_24027_p1))._field_Decl))._field_Mutable != (*(*(_24042_p2))._field_Decl.alloc)._field_Mutable)) {
		return false;;
	};
	if (_1b4b354cb_IsSelf((*_24027_p1.alloc)._field_Decl)) {
		if ((!(_1b4b354cb_IsSelf((*_24042_p2.alloc)._field_Decl)))) {
			return false;;
		};
		if ((_1b4b35762_IsRef((*_24027_p1.alloc)._field_Decl) != _1b4b35762_IsRef((*_24042_p2.alloc)._field_Decl))) {
			return false;;
		};
		return true;;
	};
	if (((*(*_24027_p1.alloc)._field_Decl.alloc)._field_Reference != (*(*_24042_p2.alloc)._field_Decl.alloc)._field_Reference)) {
		return false;;
	};
	if (((*(*_24027_p1.alloc)._field_Decl.alloc)._field_Variadic != (*(*_24042_p2.alloc)._field_Decl.alloc)._field_Variadic)) {
		return false;;
	};
	return _1b4c7d118_Equal((*_24027_p1.alloc)._field_Kind, (*_24042_p2.alloc)._field_Kind);;
}

inline jule::Bool __jule_anon_1aac431a3(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b9a893_ImportInfo> _50045_spkg) {
	jule::Ptr<__jule_anon_1aac431a3_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aac431a3_ctx>();
	return ((*((*(__jule_closure_ctx.alloc->_49841_pkg))))._field_Path == (*(_50045_spkg))._field_Path);;
}

inline jule::Ptr<_1b4c466a8_Data> __jule_anon_1aac97339(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _8833_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _8848_fc, jule::Ptr<_1b4c466a8_Data>* ) {
	jule::Ptr<__jule_anon_1aac97339_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aac97339_ctx>();
	return _1b4b5352c__Name(__jule_closure_ctx.alloc->_self_, _8833_e, _8848_fc);;
}

inline jule::Ptr<_1b4c466a8_Data> __jule_anon_1aac99292(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _9533_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _9548_fc, jule::Ptr<_1b4c466a8_Data>* ) {
	jule::Ptr<__jule_anon_1aac99292_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aac99292_ctx>();
	return _1b4b53d24__Public(__jule_closure_ctx.alloc->_self_, _9533_e, _9548_fc);;
}

inline jule::Ptr<_1b4c466a8_Data> __jule_anon_1aac9b1ea(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _10233_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _10248_fc, jule::Ptr<_1b4c466a8_Data>* ) {
	jule::Ptr<__jule_anon_1aac9b1ea_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aac9b1ea_ctx>();
	return _1b4b53928__Type(__jule_closure_ctx.alloc->_self_, _10233_e, _10248_fc);;
}

inline jule::Ptr<_1b4c466a8_Data> __jule_anon_1aacace54(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _21133_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _21148_fc, jule::Ptr<_1b4c466a8_Data>* ) {
	jule::Ptr<__jule_anon_1aacace54_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aacace54_ctx>();
	return _1b4b5682c__Name(__jule_closure_ctx.alloc->_self_, _21133_e, _21148_fc);;
}

inline jule::Ptr<_1b4c466a8_Data> __jule_anon_1aacaedac(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _21833_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _21848_fc, jule::Ptr<_1b4c466a8_Data>* ) {
	jule::Ptr<__jule_anon_1aacaedac_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aacaedac_ctx>();
	return _1b4b57124__Public(__jule_closure_ctx.alloc->_self_, _21833_e, _21848_fc);;
}

inline jule::Ptr<_1b4c466a8_Data> __jule_anon_1aacb1d15(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _22533_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _22548_fc, jule::Ptr<_1b4c466a8_Data>* ) {
	jule::Ptr<__jule_anon_1aacb1d15_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aacb1d15_ctx>();
	return _1b4b56c28__Type(__jule_closure_ctx.alloc->_self_, _22533_e, _22548_fc);;
}

inline jule::Ptr<_1b4c466a8_Data> __jule_anon_1aacbdb35(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _31333_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _31348_fc, jule::Ptr<_1b4c466a8_Data>* ) {
	jule::Ptr<__jule_anon_1aacbdb35_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aacbdb35_ctx>();
	return _1b4b59a3e__Name(__jule_closure_ctx.alloc->_self_, _31333_e, _31348_fc);;
}

inline jule::Ptr<_1b4c466a8_Data> __jule_anon_1aacd36a5(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _43533_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _43548_fc, jule::Ptr<_1b4c466a8_Data>* ) {
	jule::Ptr<__jule_anon_1aacd36a5_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aacd36a5_ctx>();
	return _1b4b5c6ac__Name(__jule_closure_ctx.alloc->_self_, _43533_e, _43548_fc);;
}

inline jule::Ptr<_1b4c466a8_Data> __jule_anon_1aacd560d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _44233_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _44248_fc, jule::Ptr<_1b4c466a8_Data>* ) {
	jule::Ptr<__jule_anon_1aacd560d_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aacd560d_ctx>();
	return _1b4b5cea4__Variadic(__jule_closure_ctx.alloc->_self_, _44233_e, _44248_fc);;
}

inline jule::Ptr<_1b4c466a8_Data> __jule_anon_1aacd7566(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _44933_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _44948_fc, jule::Ptr<_1b4c466a8_Data>* ) {
	jule::Ptr<__jule_anon_1aacd7566_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aacd7566_ctx>();
	return _1b4b5d3a0__Reference(__jule_closure_ctx.alloc->_self_, _44933_e, _44948_fc);;
}

inline jule::Ptr<_1b4c466a8_Data> __jule_anon_1aacd94be(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _45633_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _45648_fc, jule::Ptr<_1b4c466a8_Data>* ) {
	jule::Ptr<__jule_anon_1aacd94be_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aacd94be_ctx>();
	return _1b4b5caa8__Type(__jule_closure_ctx.alloc->_self_, _45633_e, _45648_fc);;
}

inline jule::Ptr<_1b4c466a8_Data> __jule_anon_1aad6b793(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _99833_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _99848_fc, jule::Ptr<_1b4c466a8_Data>* ) {
	jule::Ptr<__jule_anon_1aad6b793_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aad6b793_ctx>();
	return _1b4b623e8__Str(__jule_closure_ctx.alloc->_self_, _99833_e, _99848_fc);;
}

inline jule::Ptr<_1b4c466a8_Data> __jule_anon_1aad6d6eb(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _100533_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _100548_fc, jule::Ptr<_1b4c466a8_Data>* ) {
	jule::Ptr<__jule_anon_1aad6d6eb_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aad6d6eb_ctx>();
	return _1b4b62be0__Bits(__jule_closure_ctx.alloc->_self_, _100533_e, _100548_fc);;
}

inline jule::Ptr<_1b4c466a8_Data> __jule_anon_1aad70654(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _101233_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _101248_fc, jule::Ptr<_1b4c466a8_Data>* ) {
	jule::Ptr<__jule_anon_1aad70654_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aad70654_ctx>();
	return _1b4b630db__Elem(__jule_closure_ctx.alloc->_self_, _101233_e, _101248_fc);;
}

inline jule::Ptr<_1b4c466a8_Data> __jule_anon_1aad725ac(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _101933_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _101948_fc, jule::Ptr<_1b4c466a8_Data>* ) {
	jule::Ptr<__jule_anon_1aad725ac_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aad725ac_ctx>();
	return _1b4b634d7__Size(__jule_closure_ctx.alloc->_self_, _101933_e, _101948_fc);;
}

inline jule::Ptr<_1b4c466a8_Data> __jule_anon_1aad79372(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _102633_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _102648_fc, jule::Ptr<_1b4c466a8_Data>* ) {
	jule::Ptr<__jule_anon_1aad79372_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aad79372_ctx>();
	return _1b4b638d3__Key(__jule_closure_ctx.alloc->_self_, _102633_e, _102648_fc);;
}

inline jule::Ptr<_1b4c466a8_Data> __jule_anon_1aad7b2ca(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _103333_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _103348_fc, jule::Ptr<_1b4c466a8_Data>* ) {
	jule::Ptr<__jule_anon_1aad7b2ca_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aad7b2ca_ctx>();
	return _1b4b63cce__Value(__jule_closure_ctx.alloc->_self_, _103333_e, _103348_fc);;
}

inline jule::Ptr<_1b4c466a8_Data> __jule_anon_1aad7d233(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _104033_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _104048_fc, jule::Ptr<_1b4c466a8_Data>* ) {
	jule::Ptr<__jule_anon_1aad7d233_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aad7d233_ctx>();
	return _1b4b641ca__Fields(__jule_closure_ctx.alloc->_self_, _104033_e, _104048_fc);;
}

inline jule::Ptr<_1b4c466a8_Data> __jule_anon_1aad8018b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _104733_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _104748_fc, jule::Ptr<_1b4c466a8_Data>* ) {
	jule::Ptr<__jule_anon_1aad8018b_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aad8018b_ctx>();
	return _1b4b645c6__Statics(__jule_closure_ctx.alloc->_self_, _104733_e, _104748_fc);;
}

inline jule::Ptr<_1b4c466a8_Data> __jule_anon_1aad82237(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _105433_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _105448_fc, jule::Ptr<_1b4c466a8_Data>* ) {
	jule::Ptr<__jule_anon_1aad82237_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aad82237_ctx>();
	return _1b4b67497__Params(__jule_closure_ctx.alloc->_self_, _105433_e, _105448_fc);;
}

inline jule::Ptr<_1b4c466a8_Data> __jule_anon_1aad84190(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _106133_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _106148_fc, jule::Ptr<_1b4c466a8_Data>* ) {
	jule::Ptr<__jule_anon_1aad84190_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aad84190_ctx>();
	return _1b4b65eac__Types(__jule_closure_ctx.alloc->_self_, _106133_e, _106148_fc);;
}

inline jule::Ptr<_1b4c466a8_Data> __jule_anon_1aad860e8(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _106833_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _106848_fc, jule::Ptr<_1b4c466a8_Data>* ) {
	jule::Ptr<__jule_anon_1aad860e8_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aad860e8_ctx>();
	return _1b4b649c2__Public(__jule_closure_ctx.alloc->_self_, _106833_e, _106848_fc);;
}

inline jule::Ptr<_1b4c466a8_Data> __jule_anon_1aad88051(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _107533_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _107548_fc, jule::Ptr<_1b4c466a8_Data>* ) {
	jule::Ptr<__jule_anon_1aad88051_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aad88051_ctx>();
	return _1b4b64dbd__Binded(__jule_closure_ctx.alloc->_self_, _107533_e, _107548_fc);;
}

inline jule::Ptr<_1b4c466a8_Data> __jule_anon_1aad89ea9(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _108233_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _108248_fc, jule::Ptr<_1b4c466a8_Data>* ) {
	jule::Ptr<__jule_anon_1aad89ea9_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aad89ea9_ctx>();
	return _1b4b652b9__Ordered(__jule_closure_ctx.alloc->_self_, _108233_e, _108248_fc);;
}

inline jule::Ptr<_1b4c466a8_Data> __jule_anon_1aad8be12(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _108933_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _108948_fc, jule::Ptr<_1b4c466a8_Data>* ) {
	jule::Ptr<__jule_anon_1aad8be12_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aad8be12_ctx>();
	return _1b4b656b5__Comparable(__jule_closure_ctx.alloc->_self_, _108933_e, _108948_fc);;
}

inline jule::Ptr<_1b4c466a8_Data> __jule_anon_1aad8dd6a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _109633_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _109648_fc, jule::Ptr<_1b4c466a8_Data>* ) {
	jule::Ptr<__jule_anon_1aad8dd6a_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aad8dd6a_ctx>();
	return _1b4b65ab1__Mutable(__jule_closure_ctx.alloc->_self_, _109633_e, _109648_fc);;
}

inline jule::Ptr<_1b4c466a8_Data> __jule_anon_1aad90cc3(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _110333_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _110348_fc, jule::Ptr<_1b4c466a8_Data>* ) {
	jule::Ptr<__jule_anon_1aad90cc3_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aad90cc3_ctx>();
	return _1b4b663a8__Exceptional(__jule_closure_ctx.alloc->_self_, _110333_e, _110348_fc);;
}

inline jule::Ptr<_1b4c466a8_Data> __jule_anon_1aad92c2b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _111033_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _111048_fc, jule::Ptr<_1b4c466a8_Data>* ) {
	jule::Ptr<__jule_anon_1aad92c2b_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aad92c2b_ctx>();
	return _1b4b667a4__CanNil(__jule_closure_ctx.alloc->_self_, _111033_e, _111048_fc);;
}

inline jule::Ptr<_1b4c466a8_Data> __jule_anon_1aad94b84(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _111733_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _111748_fc, jule::Ptr<_1b4c466a8_Data>* ) {
	jule::Ptr<__jule_anon_1aad94b84_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aad94b84_ctx>();
	return _1b4b66ba0__RC(__jule_closure_ctx.alloc->_self_, _111733_e, _111748_fc);;
}

inline jule::Ptr<_1b4c466a8_Data> __jule_anon_1aad96adc(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _112433_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _112448_fc, jule::Ptr<_1b4c466a8_Data>* ) {
	jule::Ptr<__jule_anon_1aad96adc_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aad96adc_ctx>();
	return _1b4b6709b__Result(__jule_closure_ctx.alloc->_self_, _112433_e, _112448_fc);;
}

inline jule::Ptr<_1b4c466a8_Data> __jule_anon_1aad98a45(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _113133_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _113148_fc, jule::Ptr<_1b4c466a8_Data>* ) {
	jule::Ptr<__jule_anon_1aad98a45_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aad98a45_ctx>();
	return _1b4b627e4__Kind(__jule_closure_ctx.alloc->_self_, _113133_e, _113148_fc);;
}

inline jule::Ptr<_1b4c466a8_Data> __jule_anon_1aadb3b09(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _124733_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _124748_fc, jule::Ptr<_1b4c466a8_Data>* ) {
	jule::Ptr<__jule_anon_1aadb3b09_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aadb3b09_ctx>();
	return _1b4b6880b__Unwrap(__jule_closure_ctx.alloc->_self_, _124733_e, _124748_fc);;
}

inline jule::Ptr<_1b4c466a8_Data> __jule_anon_1aadb5a62(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _125433_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _125448_fc, jule::Ptr<_1b4c466a8_Data>* ) {
	jule::Ptr<__jule_anon_1aadb5a62_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aadb5a62_ctx>();
	return _1b4b68c07__Type(__jule_closure_ctx.alloc->_self_, _125433_e, _125448_fc);;
}

inline jule::Ptr<_1b4c466a8_Data> __jule_anon_1aadb79ba(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _126133_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _126148_fc, jule::Ptr<_1b4c466a8_Data>* ) {
	jule::Ptr<__jule_anon_1aadb79ba_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aadb79ba_ctx>();
	return _1b4b69103__Lvalue(__jule_closure_ctx.alloc->_self_, _126133_e, _126148_fc);;
}

inline jule::Ptr<_1b4c466a8_Data> __jule_anon_1aadb9923(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _126833_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _126848_fc, jule::Ptr<_1b4c466a8_Data>* ) {
	jule::Ptr<__jule_anon_1aadb9923_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aadb9923_ctx>();
	return _1b4b694ee__Mutable(__jule_closure_ctx.alloc->_self_, _126833_e, _126848_fc);;
}

inline jule::Ptr<_1b4c466a8_Data> __jule_anon_1aadbb87b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _127533_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _127548_fc, jule::Ptr<_1b4c466a8_Data>* ) {
	jule::Ptr<__jule_anon_1aadbb87b_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aadbb87b_ctx>();
	return _1b4b698ea__Const(__jule_closure_ctx.alloc->_self_, _127533_e, _127548_fc);;
}

inline jule::Ptr<_1b4c466a8_Data> __jule_anon_1aadbd7d4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _128233_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _128248_fc, jule::Ptr<_1b4c466a8_Data>* ) {
	jule::Ptr<__jule_anon_1aadbd7d4_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aadbd7d4_ctx>();
	return _1b4b69ce6__Field(__jule_closure_ctx.alloc->_self_, _128233_e, _128248_fc);;
}

inline jule::Ptr<_1b4c466a8_Data> __jule_anon_1aadd12a8(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _139633_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _139648_fc, jule::Ptr<_1b4c466a8_Data>* ) {
	jule::Ptr<__jule_anon_1aadd12a8_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aadd12a8_ctx>();
	return _1b4b6c843__Path(__jule_closure_ctx.alloc->_self_, _139633_e, _139648_fc);;
}

inline jule::Ptr<_1b4c466a8_Data> __jule_anon_1aadd3211(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _140333_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _140348_fc, jule::Ptr<_1b4c466a8_Data>* ) {
	jule::Ptr<__jule_anon_1aadd3211_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aadd3211_ctx>();
	return _1b4b6cc3e__Name(__jule_closure_ctx.alloc->_self_, _140333_e, _140348_fc);;
}

inline jule::Ptr<_1b4c466a8_Data> __jule_anon_1aadd5169(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c483d0_Eval>* _141033_e, jule::Ptr<_1b4b03c2a_FnCallExpr>* _141048_fc, jule::Ptr<_1b4c466a8_Data>* ) {
	jule::Ptr<__jule_anon_1aadd5169_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aadd5169_ctx>();
	return _1b4b6d13a__Dir(__jule_closure_ctx.alloc->_self_, _141033_e, _141048_fc);;
}

inline jule::Bool __jule_anon_1aade0b9c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4bbac37_Sema>* _6421_sema, jule::Slice<jule::Ptr<_1b4c7bb1c_TypeAlias>>* _6439_generics) {
	jule::Ptr<__jule_anon_1aade0b9c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aade0b9c_ctx>();
	{
		auto expr = &((*__jule_closure_ctx.alloc->_self_.alloc)._field_genericsD);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aade1c58:;
		if (it != expr_end) {
			jule::I64 _6518_i = it - expr->begin();
			jule::Ptr<_1b4b07dc7_GenericDecl> _6525_g = *it;
			{
				jule::Ptr<_1b4c7b028_InsGeneric> _6621_generic = (*(__jule_closure_ctx.alloc->_self_))._field_generics[_6518_i];;
				if ((((*(_6525_g))._field_Constraint == nullptr) || ((*((*_6525_g.alloc)._field_Constraint))._field_Mask.len() == 0LL))) {
					goto _iter_next_1aade1c58;
				};
				(*(_6621_generic))._field_Constraint=jule::Slice<jule::Ptr<_1b4c7c90e_TypeKind>>::alloc(0LL, (*((*_6525_g.alloc)._field_Constraint))._field_Mask.len());
				{
					auto expr = &((*((*_6525_g.alloc)._field_Constraint))._field_Mask);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aade49c5:;
					if (it != expr_end) {
						jule::Ptr<_1b4aeabbc_TypeDecl> _7129_mask = *it;
						{
							jule::I64 _7221_n = (*((*(_6421_sema))))._field_errors.len();;
							jule::Ptr<_1b4c7c90e_TypeKind> _7325_kind = _1b4bc3800_buildTypeWithRefers((*(_6421_sema)), &(_7129_mask), jule::Trait((*(_6421_sema)), (jule::Trait::Type*)&_1b4c9c500_Lookup_mptr_data3), (*(_6439_generics)), nullptr);;
							if ((_7325_kind == nullptr)) {
								{
									auto &_match_expr{ (*(_7129_mask))._field_Kind };
									
									if (_match_expr.type == &__jule_any_type74) {
										_case_begin_1aade67b8:;
										{
											jule::Ptr<_1b4aeb2c7_IdentTypeDecl> _7733_itd = (*(_7129_mask))._field_Kind.unsafe_cast_ptr<_1b4aeb2c7_IdentTypeDecl>();;
											if ((((*(_7733_itd))._field_Generics.len() == 0LL) && _1b4b729d0_isBuiltinConstraint(&((*_7733_itd.alloc)._field_Ident)))) {
												_7325_kind=jule::new_ptr<_1b4c7c90e_TypeKind>(_1b4c7c90e_TypeKind{._field_Kind=jule::Trait(_1b4c9982c_buildPrimType((*_7733_itd.alloc)._field_Ident), (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data20)});
												((*((*(_6421_sema))))._field_errors).mut_slice(0LL, _7221_n);;
												goto _julec_label_1aade9425;
											};
										}
									}
									_match_end_1aade6752:;
								};
								return false;;
							};
							_julec_label_1aade9425:;
							(*_6621_generic.alloc)._field_Constraint=jule::append((*_6621_generic.alloc)._field_Constraint,jule::Slice<jule::Ptr<_1b4c7c90e_TypeKind>>::make({_7325_kind}));
						}
						_iter_next_1aade49c5:;
						++it;
						goto _iter_begin_1aade49c5;
					}
					_iter_end_1aade49c5:;
				};
			}
			_iter_next_1aade1c58:;
			++it;
			_6518_i++;
			goto _iter_begin_1aade1c58;
		}
		_iter_end_1aade1c58:;
	};
	return true;;
}

inline jule::Bool __jule_anon_1ab220806(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4bbac37_Sema>* _110543_sema, jule::Slice<jule::Ptr<_1b4c7bb1c_TypeAlias>>* _110561_generics) {
	jule::Ptr<__jule_anon_1ab220806_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab220806_ctx>();
	jule::Bool _110617_ok = true;;
	{
		auto expr = &((*__jule_closure_ctx.alloc->_110140_f.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab221c9c:;
		if (it != expr_end) {
			jule::Ptr<_1b4b387dc_ParamIns> _110725_p = *it;
			{
				if (_1b4b354cb_IsSelf((*(_110725_p))._field_Decl.ptr())) {
					if (_1b4b35762_IsRef((*_110725_p.alloc)._field_Decl)) {
						(*_110725_p.alloc)._field_Kind=jule::new_ptr<_1b4c7c90e_TypeKind>(_1b4c7c90e_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1b4c89014_Sptr>(_1b4c89014_Sptr{._field_Elem=jule::new_ptr<_1b4c7c90e_TypeKind>(_1b4c7c90e_TypeKind{._field_Kind=jule::Trait((*__jule_closure_ctx.alloc->_110140_f.alloc)._field_Owner, (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data0)})}), (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data21)});
					} else {
						(*_110725_p.alloc)._field_Kind=jule::new_ptr<_1b4c7c90e_TypeKind>(_1b4c7c90e_TypeKind{._field_Kind=jule::Trait((*__jule_closure_ctx.alloc->_110140_f.alloc)._field_Owner, (jule::Trait::Type*)&_1b4c7c458_Kind_mptr_data0)});
					};
				} else {
					(*(_110725_p))._field_Kind=_1b4bc4999_buildTypeWithGenerics((*(_110543_sema)), &((*((*((*_110725_p.alloc)._field_Decl))._field_Kind))._field_Decl), (*(_110561_generics)), (*__jule_closure_ctx.alloc->_110140_f.alloc)._field_Refers);
					if (((*_110725_p.alloc)._field_Kind != nullptr)) {
						_1b4bc94b5_checkFnParamKind(__jule_closure_ctx.alloc->_self_, &(_110725_p));
					} else {
						_110617_ok=false;
					};
				};
			}
			_iter_next_1ab221c9c:;
			++it;
			goto _iter_begin_1ab221c9c;
		}
		_iter_end_1ab221c9c:;
	};
	if ((!(_1b4b36d07_IsVoid((*__jule_closure_ctx.alloc->_110140_f.alloc)._field_Decl.ptr())))) {
		(*__jule_closure_ctx.alloc->_110140_f.alloc)._field_Result=_1b4bc4999_buildTypeWithGenerics((*(_110543_sema)), &((*((*((*(*__jule_closure_ctx.alloc->_110140_f.alloc)._field_Decl.alloc)._field_Result))._field_Kind))._field_Decl), (*(_110561_generics)), (*__jule_closure_ctx.alloc->_110140_f.alloc)._field_Refers);
		_110617_ok=(((*__jule_closure_ctx.alloc->_110140_f.alloc)._field_Result != nullptr) && _110617_ok);
	};
	return _110617_ok;;
}

inline jule::Bool __jule_anon_1ab71e244(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b9a893_ImportInfo> _183149_imp) {
	jule::Ptr<__jule_anon_1ab71e244_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab71e244_ctx>();
	if ((((*__jule_closure_ctx.alloc->_182934_s.alloc)._field_Ns.len() == 1LL) && ((*(_183149_imp))._field_Alias == __jule_closure_ctx.alloc->_18309_path))) {
		return true;;
	};
	return (((*_183149_imp.alloc)._field_LinkPath == __jule_closure_ctx.alloc->_18309_path) && _1b4b9d4ab_isAccessibleViaSelection(_183149_imp));;
}

inline jule::Str __jule_anon1ab9eae5a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _84725_def) {
	{
		auto &_match_expr{ (*(_84725_def)) };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1ab9ec027:;
			{
				return (*((*(_84725_def)).cast_ptr<_1b4c7bb1c_TypeAlias>(&__jule_any_type65)))._field_Ident;;
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1ab9ebd4b:;
			{
				return (*((*(_84725_def)).cast_ptr<_1b4b218b3_Struct>(&__jule_any_type64)))._field_Ident;;
			}
		}
		else {
			_case_begin_1ab9eb91c:;
			{
				return jule::Str();;
			}
		}
		_match_end_1ab9eb8b7:;
	};
}

inline jule::Bool __jule_anon_1aba76b0c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b9a893_ImportInfo> _151949_imp) {
	jule::Ptr<__jule_anon_1aba76b0c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aba76b0c_ctx>();
	if ((((*__jule_closure_ctx.alloc->_151739_decl.alloc)._field_Idents.len() == 1LL) && ((*(_151949_imp))._field_Alias == __jule_closure_ctx.alloc->_15189_path))) {
		return true;;
	};
	return (((*_151949_imp.alloc)._field_LinkPath == __jule_closure_ctx.alloc->_15189_path) && _1b4b9d4ab_isAccessibleViaSelection(_151949_imp));;
}

inline void __jule_anon_1ac50c3d8(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1ac50c3d8_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac50c3d8_ctx>();
	if (__jule_closure_ctx.alloc->_13713_ref) {
		_1a90272e1_write((*__jule_closure_ctx.alloc->_self_.alloc)._field_oc, jule::Str::lit("it - expr->begin()", 18));
	} else {
		_1a90272e1_write((*__jule_closure_ctx.alloc->_self_.alloc)._field_oc, jule::Str::lit("it - expr.begin()", 17));
	};
}

inline void __jule_anon_1ac510d9d(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1ac510d9d_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac510d9d_ctx>();
	{
		if ((*(*((*(__jule_closure_ctx.alloc->_12939_it))))._field_KeyB.alloc)._field_Reference) {
			_1a90272e1_write((*__jule_closure_ctx.alloc->_self_.alloc)._field_oc, jule::Str::lit("it", 2));
		} else {
			_1a90272e1_write((*__jule_closure_ctx.alloc->_self_.alloc)._field_oc, jule::Str::lit("*it", 3));
		};
	};
}

inline void __jule_anon_1ac520374(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1ac520374_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac520374_ctx>();
	_1a90272e1_write((*__jule_closure_ctx.alloc->_self_.alloc)._field_oc, jule::Str::lit("it->first", 9));
}

inline void __jule_anon_1ac5227e9(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1ac5227e9_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac5227e9_ctx>();
	_1a90272e1_write((*__jule_closure_ctx.alloc->_self_.alloc)._field_oc, jule::Str::lit("it->second", 10));
}

inline void __jule_anon_1ac53b527(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1ac53b527_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac53b527_ctx>();
	_1a90272e1_write((*__jule_closure_ctx.alloc->_self_.alloc)._field_oc, jule::Str::lit("0", 1));
}

inline void __jule_anon_1ac5aba1a(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1ac5aba1a_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac5aba1a_ctx>();
	_1a90272e1_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("_match_expr", 11));
}

inline void __jule_anon_1ac5acd29(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1ac5acd29_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac5acd29_ctx>();
	_1b645be22_possibleRefExpr((*(*__jule_closure_ctx.alloc->_self_.alloc)._field_oc.alloc)._field_ec, (*(*__jule_closure_ctx.alloc->_63533_m.alloc)._field_Expr.alloc)._field_Model);
}

inline jule::Bool __jule_anon_1ac62ceba(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4bddaa1_Var> _101176_v) {
	jule::Ptr<__jule_anon_1ac62ceba_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac62ceba_ctx>();
	return _1b64560b4_captureVarHandling(&((*__jule_closure_ctx.alloc->_self_.alloc)._field_oc), &(__jule_closure_ctx.alloc->_100537_m), &(_101176_v));;
}

inline __jule_tuple_i64__jule_tuple_bool __jule_anon1aca215de(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _22865_s, jule::I64 _22873_base) {
	__jule_tuple_i64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0 = ({
		auto except = _1b2733ac1_ParseInt(_22865_s, _22873_base, 64LL);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = 0LL;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		} 0;});
	});
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}

inline __jule_tuple_u64__jule_tuple_bool __jule_anon1aca294a4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _23666_s, jule::I64 _23674_base) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0 = ({
		auto except = _1b273361a_ParseUint(_23666_s, _23674_base, 64LL);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = 0LLU;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		} 0;});
	});
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}

inline void __jule_anon_1ac91b20e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b9d7b9_Package>* _82744_pkg) {
	jule::Ptr<__jule_anon_1ac91b20e_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac91b20e_ctx>();
	_1b57a9380_IterFiles(_82744_pkg, jule::__new_closure<void,jule::Ptr<_1b4c41340_SymbolTable>*>((void*)__jule_anon_1ac91c111, jule::Ptr<__jule_anon_1ac91c111_ctx>::make(__jule_anon_1ac91c111_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1ac91c111_ctx_handler));
}

inline void __jule_anon_1ac91c70a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b36884_Fn>* _84042_m) {
	jule::Ptr<__jule_anon_1ac91c70a_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac91c70a_ctx>();
	jule::Ptr<_1b4b39865_FnIns> _84117_ins = (*((*(_84042_m))))._field_Instances[0LL];;
	{
		auto expr = (*(_84117_ins))._field_Params.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1ac9208a6:;
		if (it != expr_end) {
			jule::I64 _84218_i = it - expr.begin();
			jule::Ptr<_1b4b387dc_ParamIns> _84225_ip = *it;
			{
				if (_1b4ad83b3_IsAnonIdent((*((*(_84225_ip))._field_Decl))._field_Ident)) {
					(*(*_84225_ip.alloc)._field_Decl.alloc)._field_Ident=(jule::Str::lit("_", 1) + _1b2745440_Itoa(_84218_i));
				};
			}
			_iter_next_1ac9208a6:;
			++it;
			_84218_i++;
			goto _iter_begin_1ac9208a6;
		}
		_iter_end_1ac9208a6:;
	};
	_1a9029018_pushResult(__jule_closure_ctx.alloc->_self_, _84042_m);
	_1a902d25e_funcDeclTrait(__jule_closure_ctx.alloc->_self_, _84042_m);
}

inline void __jule_anon_1ac922ce8(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b9d7b9_Package>* _85344_pkg) {
	jule::Ptr<__jule_anon_1ac922ce8_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac922ce8_ctx>();
	_1b57a9380_IterFiles(_85344_pkg, jule::__new_closure<void,jule::Ptr<_1b4c41340_SymbolTable>*>((void*)__jule_anon_1ac923bea, jule::Ptr<__jule_anon_1ac923bea_ctx>::make(__jule_anon_1ac923bea_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1ac923bea_ctx_handler));
}

inline void __jule_anon_1ac933853(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1ac933853_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac933853_ctx>();
	_1a90272e1_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("&(", 2));
	_1b64667de_model((*__jule_closure_ctx.alloc->_self_.alloc)._field_ec, (*(*(*__jule_closure_ctx.alloc->_92027_v.alloc)._field_Value.alloc)._field_Data.alloc)._field_Model);
	_1a90272e1_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit(")", 1));
}

inline void __jule_anon_1ac935954(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1ac935954_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac935954_ctx>();
	_1b645be22_possibleRefExpr((*__jule_closure_ctx.alloc->_self_.alloc)._field_ec, (*(*(*__jule_closure_ctx.alloc->_92027_v.alloc)._field_Value.alloc)._field_Data.alloc)._field_Model);
}

inline void __jule_anon_1ac938171(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1ac938171_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac938171_ctx>();
	_1a90272e1_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("nullptr", 7));
}

inline void __jule_anon_1ac9392e8(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1ac9392e8_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac9392e8_ctx>();
	_1b6466a97_initExpr((*__jule_closure_ctx.alloc->_self_.alloc)._field_ec, (*(*__jule_closure_ctx.alloc->_92027_v.alloc)._field_Kind.alloc)._field_Kind);
}

inline void __jule_anon_1ac957437(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b9d7b9_Package>* _106244_pkg) {
	jule::Ptr<__jule_anon_1ac957437_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac957437_ctx>();
	_1b57a9380_IterFiles(_106244_pkg, jule::__new_closure<void,jule::Ptr<_1b4c41340_SymbolTable>*>((void*)__jule_anon_1ac958339, jule::Ptr<__jule_anon_1ac958339_ctx>::make(__jule_anon_1ac958339_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1ac958339_ctx_handler));
}

inline void __jule_anon_1ac9587bd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b36884_Fn>* _107742_m) {
	jule::Ptr<__jule_anon_1ac9587bd_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac9587bd_ctx>();
	_1a9027b93_indent(__jule_closure_ctx.alloc->_self_);
	_1a90272e1_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit(".", 1));
	static__1b646d450_func(&((*__jule_closure_ctx.alloc->_self_.alloc)._field_Buf), _107742_m);
	_1a90272e1_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("=__jule_trait_method_", 21));
	jule::Ptr<_1b4b39865_FnIns> _108213_mepf;
	jule::Bool _108219_exist;
	({
		__jule_tuple_x_1b4b39865_FnIns__jule_tuple_bool __jule_assign_result = _1a9030b9b_findTraitMetMap(__jule_closure_ctx.alloc->_self_, _107742_m);
		_108213_mepf = __jule_assign_result.__jule_result_arg0;
		_108219_exist = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_108219_exist))) {
		jule::panic(jule::Str::lit("implementation mistake, [traitDataMethods] could not found MepMap record", 72) + jule::Str("\nlocation: julec/obj/cxx/object.jule:1084:17"));;
	};
	_1a90272e1_write(__jule_closure_ctx.alloc->_self_, _1b2744cad_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_108213_mepf)), 15LL));
	_1a90272e1_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("_", 1));
	_1a90272e1_write(__jule_closure_ctx.alloc->_self_, _1b2744cad_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(__jule_closure_ctx.alloc->_107652_s)), 15LL));
	_1a90272e1_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit(",\n", 2));
}

inline void __jule_anon_1ac9660c2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b9d7b9_Package>* _111444_pkg) {
	jule::Ptr<__jule_anon_1ac9660c2_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac9660c2_ctx>();
	_1b57a9380_IterFiles(_111444_pkg, jule::__new_closure<void,jule::Ptr<_1b4c41340_SymbolTable>*>((void*)__jule_anon_1ac966ec4, jule::Ptr<__jule_anon_1ac966ec4_ctx>::make(__jule_anon_1ac966ec4_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1ac966ec4_ctx_handler));
}

inline void __jule_anon_1ac984057(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b9d7b9_Package>* _123944_pkg) {
	jule::Ptr<__jule_anon_1ac984057_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac984057_ctx>();
	_1b57a9380_IterFiles(_123944_pkg, jule::__new_closure<void,jule::Ptr<_1b4c41340_SymbolTable>*>((void*)__jule_anon_1ac984e59, jule::Ptr<__jule_anon_1ac984e59_ctx>::make(__jule_anon_1ac984e59_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1ac984e59_ctx_handler));
}

inline void __jule_anon_1ac985531(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c41340_SymbolTable>* _125537_file) {
	jule::Ptr<__jule_anon_1ac985531_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac985531_ctx>();
	{
		auto expr = &((*((*(_125537_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac988479:;
		if (it != expr_end) {
			jule::Ptr<_1b4b36884_Fn> _125620_f = *it;
			{
				if ((*(_125620_f))._field_Ident.equal("init", 4)) {
					_1a9027b93_indent(__jule_closure_ctx.alloc->_self_);
					static__1b646d450_func(&((*__jule_closure_ctx.alloc->_self_.alloc)._field_Buf), &(_125620_f));
					_1a90272e1_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("();\n", 4));
				};
			}
			_iter_next_1ac988479:;
			++it;
			goto _iter_begin_1ac988479;
		}
		_iter_end_1ac988479:;
	};
}

inline void __jule_anon_1ac98d308(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b9d7b9_Package>* _128444_pkg) {
	jule::Ptr<__jule_anon_1ac98d308_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac98d308_ctx>();
	_1a903330d_pushInit(__jule_closure_ctx.alloc->_self_, _128444_pkg);
}

inline jule::Bool __jule_anon1aac8a75b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b9a893_ImportInfo> _143028_pkg) {
	return (*(_143028_pkg))._field_LinkPath.equal("std::comptime", 13);;
}

inline void __jule_anon_1ac91c111(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c41340_SymbolTable>* _82841_file) {
	jule::Ptr<__jule_anon_1ac91c111_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac91c111_ctx>();
	{
		auto expr = &((*((*(_82841_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac91cab2:;
		if (it != expr_end) {
			jule::Ptr<_1b4b36884_Fn> _82929_f = *it;
			{
				if (((!((*(_82929_f))._field_Binded)) && ((*_82929_f.alloc)._field_Token != nullptr))) {
					_1a9029018_pushResult(__jule_closure_ctx.alloc->_self_, &(_82929_f));
					_1a902cea6_funcDecl(__jule_closure_ctx.alloc->_self_, &(_82929_f), false);
				};
			}
			_iter_next_1ac91cab2:;
			++it;
			goto _iter_begin_1ac91cab2;
		}
		_iter_end_1ac91cab2:;
	};
}

inline void __jule_anon_1ac923bea(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c41340_SymbolTable>* _85441_file) {
	jule::Ptr<__jule_anon_1ac923bea_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac923bea_ctx>();
	{
		auto expr = &((*((*(_85441_file))))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac924679:;
		if (it != expr_end) {
			jule::Ptr<_1b4b49c3d_Trait> _85529_t = *it;
			{
				if ((((*(_85529_t))._field_Token == nullptr) || ((*_85529_t.alloc)._field_Implemented.len() == 0LL))) {
					goto _iter_next_1ac924679;
				};
				_1a90272e1_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("struct ", 7));
				static__1b646da27_traitDecl(&((*__jule_closure_ctx.alloc->_self_.alloc)._field_Buf), _85529_t);
				_1a90272e1_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("MptrData", 8));
				_1a90272e1_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit(" {\n", 3));
				_1a9027797_addIndent(__jule_closure_ctx.alloc->_self_);
				_1a9027b93_indent(__jule_closure_ctx.alloc->_self_);
				_1a90272e1_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("void (*dealloc)(jule::Ptr<jule::Uintptr>&);\n", 44));
				_1a902d715_traitDataTypeMethods(__jule_closure_ctx.alloc->_self_, &(_85529_t));
				_1a9027995_doneIndent(__jule_closure_ctx.alloc->_self_);
				_1a9027b93_indent(__jule_closure_ctx.alloc->_self_);
				_1a90272e1_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("};\n\n", 4));
			}
			_iter_next_1ac924679:;
			++it;
			goto _iter_begin_1ac924679;
		}
		_iter_end_1ac924679:;
	};
}

inline void __jule_anon_1ac958339(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c41340_SymbolTable>* _106341_file) {
	jule::Ptr<__jule_anon_1ac958339_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac958339_ctx>();
	{
		auto expr = &((*((*(_106341_file))))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac958cb8:;
		if (it != expr_end) {
			jule::Ptr<_1b4b49c3d_Trait> _106429_t = *it;
			{
				if (((*(_106429_t))._field_Implemented.len() == 0LL)) {
					goto _iter_next_1ac958cb8;
				};
				_1b57a9dec_IterTraitMethods(&(_106429_t), jule::__new_closure<void,jule::Ptr<_1b4b36884_Fn>*>((void*)__jule_anon_1ac95a2d6, jule::Ptr<__jule_anon_1ac95a2d6_ctx>::make(__jule_anon_1ac95a2d6_ctx{._self_=__jule_closure_ctx.alloc->_self_,._106429_t=_106429_t}).as<jule::Uintptr>(), __jule_anon_1ac95a2d6_ctx_handler));
			}
			_iter_next_1ac958cb8:;
			++it;
			goto _iter_begin_1ac958cb8;
		}
		_iter_end_1ac958cb8:;
	};
}

inline void __jule_anon_1ac966ec4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c41340_SymbolTable>* _111541_file) {
	jule::Ptr<__jule_anon_1ac966ec4_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac966ec4_ctx>();
	{
		auto expr = &((*((*(_111541_file))))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac967953:;
		if (it != expr_end) {
			jule::Ptr<_1b4b49c3d_Trait> _111629_t = *it;
			{
				jule::I64 _111725_i = 0LL;;
				{
					auto expr = &((*(_111629_t))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac968767:;
					if (it != expr_end) {
						jule::Ptr<_1b4b218b3_Struct> _111833_s = *it;
						{
							{
								auto expr = &((*(_111833_s))._field_Instances);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1ac969119:;
								if (it != expr_end) {
									jule::Ptr<_1b4b24641_StructIns> _111937_ins = *it;
									{
										_1a903198d_traitData(__jule_closure_ctx.alloc->_self_, &(_111629_t), _111725_i, &(_111937_ins));
										(_111725_i)++;
									}
									_iter_next_1ac969119:;
									++it;
									goto _iter_begin_1ac969119;
								}
								_iter_end_1ac969119:;
							};
						}
						_iter_next_1ac968767:;
						++it;
						goto _iter_begin_1ac968767;
					}
					_iter_end_1ac968767:;
				};
			}
			_iter_next_1ac967953:;
			++it;
			goto _iter_begin_1ac967953;
		}
		_iter_end_1ac967953:;
	};
}

inline void __jule_anon_1ac984e59(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4c41340_SymbolTable>* _124041_file) {
	jule::Ptr<__jule_anon_1ac984e59_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac984e59_ctx>();
	{
		auto expr = &((*((*(_124041_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac9858d8:;
		if (it != expr_end) {
			jule::Ptr<_1b4b36884_Fn> _124129_f = *it;
			{
				if (((!(_20c57e85b_Test)) && _1b57b2db1_HasDirective(&((*(_124129_f))._field_Directives), jule::Str::lit("test", 4)))) {
					goto _iter_next_1ac9858d8;
				};
				if (((!((*_124129_f.alloc)._field_Binded)) && ((*_124129_f.alloc)._field_Token != nullptr))) {
					_1a90304e7_func(__jule_closure_ctx.alloc->_self_, &(_124129_f));
					_1a90272e1_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("\n\n", 2));
				};
			}
			_iter_next_1ac9858d8:;
			++it;
			goto _iter_begin_1ac9858d8;
		}
		_iter_end_1ac9858d8:;
	};
}

inline void __jule_anon_1ac95a2d6(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b4b36884_Fn>* _106854_m) {
	jule::Ptr<__jule_anon_1ac95a2d6_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac95a2d6_ctx>();
	_1a903100e_traitWrapper(__jule_closure_ctx.alloc->_self_, &(__jule_closure_ctx.alloc->_106429_t), _106854_m);
}

int main(int argc, char *argv[], char *envp[]) {
    jule::setup_argv(argc, argv);
    jule::setup_envp(envp);

    __jule_call_initializers();
    entry_point();

    return EXIT_SUCCESS;
}