// Auto generated by JuleC.
// JuleC version: jule0.0.11 @master
// Date: 8/4/2024 (DD/MM/YYYY) UTC
//
// Recomended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer dist/ir.cpp

#define __JULE_ENABLE__PRODUCTION


#include "api/jule.hpp"                                   

#include "std/jule/integrated/integrated.hpp"                                   
#include <dirent.h>
#include <fcntl.h>
#include <unistd.h>
#include <cstdio>
#include <sys/stat.h>
#include <signal.h>
#include <sys/wait.h>
#include <time.h>

struct _1a77d1162_Reader{};
struct _1a77d1591_Writer{};
struct _1a77d1b68_WriterCloser{};
struct _1a77d23b6_Stream{};
struct _1a7682bc3_Importer{};
struct _1a77274a4_Kind{};
struct _1a7741e19_Lookup{};
struct _1a8588039_CommonFlag{};
struct _1a41c7d7b_Range16;
struct _1a41c8343_Range32;
struct _1a41c87b6_RangeTable;
struct _1a4290a37_accept_range;
struct _1a42991d3_LazyBuff;
struct _1d4e9e836_DirEntry;
struct _1d4e9ea23_Directory;
struct _1d4ea035e_File;
struct _1d4ea101e_Status;
struct _1a4382211_Cmd;
struct _1a43349cc_Log;
struct _1a527737a_Token;
struct _1a527c76a_File;
struct _1a527e838_KindPair;
struct _1a5285300_Lex;
struct _1a6820cc9_Ast;
struct _1a6821934_Node;
struct _1a6852525_Directive;
struct _1a68529cb_TypeDecl;
struct _1a685305e_IdentTypeDecl;
struct _1a6853768_NamespaceTypeDecl;
struct _1a6853a54_SptrTypeDecl;
struct _1a6853d40_SlcTypeDecl;
struct _1a68541b4_TupleTypeDecl;
struct _1a68544a0_PtrTypeDecl;
struct _1a6854bed_ArrTypeDecl;
struct _1a6855407_MapTypeDecl;
struct _1a68557ae_RetTypeDecl;
struct _1a6855e41_Expr;
struct _1a68562e8_UseExpr;
struct _1a68565d4_TupleExpr;
struct _1a6856aac_LitExpr;
struct _1a68572b6_UnsafeExpr;
struct _1a685766d_CoExpr;
struct _1a6857ae1_IdentExpr;
struct _1a68582ea_UnaryExpr;
struct _1a68586a2_VariadicExpr;
struct _1a6858a59_CastExpr;
struct _1a6858e11_NsSelectionExpr;
struct _1a6859384_SubIdentExpr;
struct _1a6859807_BinopExpr;
struct _1a6859e12_FnCallExpr;
struct _1a685a929_FieldExprPair;
struct _1a685b1ee_StructLit;
struct _1a685b672_BraceLit;
struct _1a685be47_KeyValPair;
struct _1a685c3ba_SliceExpr;
struct _1a685ce9d_IndexingExpr;
struct _1a685d5a8_SlicingExpr;
struct _1a685d960_GenericDecl;
struct _1a685dd17_LabelSt;
struct _1a685e1be_GotoSt;
struct _1a685e4aa_FallSt;
struct _1a685eab5_AssignLeft;
struct _1a6860104_AssignSt;
struct _1a686070e_ScopeTree;
struct _1a6860dd5_ParamDecl;
struct _1a6862205_FnDecl;
struct _1a68631d4_VarDecl;
struct _1a686358b_RetSt;
struct _1a6863b0d_Iter;
struct _1a68643d3_WhileKind;
struct _1a6864c74_RangeKind;
struct _1a686512b_BreakSt;
struct _1a68654d3_ContSt;
struct _1a6865956_If;
struct _1a6865d0d_Else;
struct _1a6866281_Conditional;
struct _1a6866957_TypeAliasDecl;
struct _1a6866dca_Case;
struct _1a68675a1_MatchCase;
struct _1a6867d43_UseDecl;
struct _1a68682b6_EnumItemDecl;
struct _1a6868e10_EnumDecl;
struct _1a6869938_FieldDecl;
struct _1a686a296_StructDecl;
struct _1a686a8a1_TraitDecl;
struct _1a686aeab_Impl;
struct _1a72b4cde_FloatInfo;
struct _1a6d11bc1_DecimalSlice;
struct _1a753757d_LeftCheat;
struct _1a753776a_Decimal;
struct _1a75c3251_Const;
struct _1a6844a23_Field;
struct _1a683aed1_Operators;
struct _1a6826829_Struct;
struct _1a6830899_FieldIns;
struct _1a68382db_OperandExprModel;
struct _1a684b145_BinopExprModel;
struct _1a6849e79_UnaryExprModel;
struct _1a6827e8a_StructArgExprModel;
struct _1a682b752_StructLitExprModel;
struct _1a68225b1_AllocStructLitExprModel;
struct _1a684003a_CastingExprModel;
struct _1a6845150_FnCallExprModel;
struct _1a684533c_SliceExprModel;
struct _1a686b770_IndexingExprModel;
struct _1a686b95c_AnonFnExprModel;
struct _1a686bb49_KeyValPairExprModel;
struct _1a686bd36_MapExprModel;
struct _1a686c023_SlicingExprModel;
struct _1a686c210_TraitSubIdentExprModel;
struct _1a686c62d_StructSubIdentExprModel;
struct _1a686c81a_StructStaticIdentExprModel;
struct _1a686ca07_ArrayExprModel;
struct _1a686cbe4_CommonIdentExprModel;
struct _1a686cdd1_CommonSubIdentExprModel;
struct _1a686d0bd_TupleExprModel;
struct _1a686d2aa_BuiltinOutCallExprModel;
struct _1a686d497_BuiltinOutlnCallExprModel;
struct _1a686d684_BuiltinCloneCallExprModel;
struct _1a686d871_BuiltinNewCallExprModel;
struct _1a686da5d_BuiltinPanicCallExprModel;
struct _1a686dc4a_BuiltinAssertCallExprModel;
struct _1a686de37_BuiltinMakeCallExprModel;
struct _1a686e124_BuiltinAppendCallExprModel;
struct _1a686e311_BuiltinCopyCallExprModel;
struct _1a686e4ed_BuiltinErrorCallExprModel;
struct _1a686c3ec_SizeofExprModel;
struct _1a686eb5d_AlignofExprModel;
struct _1a686ed4a_RuneExprModel;
struct _1a6870037_IntegratedToStrExprModel;
struct _1a6870224_BackendEmitExprModel;
struct _1a6870411_FreeExprModel;
struct _1a68705ed_RetType;
struct _1a68707da_Param;
struct _1a68709c7_Fn;
struct _1a6871e07_ParamIns;
struct _1a6872c93_FnIns;
struct _1a6875988_ReferenceStack;
struct _1a6876d74_Pass;
struct _1a687a927_SymbolBuilder;
struct _1a68d46b7_Trait;
struct _1a693b6b9_EnumItem;
struct _1a6982435_Enum;
struct _1a6c31b02_Impl;
struct _1a7658803_Scope;
struct _1a7660200_If;
struct _1a7609c7c_Else;
struct _1a7609e69_Conditional;
struct _1a761aa90_InfIter;
struct _1a761ac7c_WhileIter;
struct _1a7648b23_RangeIter;
struct _1a7648d10_ContSt;
struct _1a766c839_BreakSt;
struct _1a766ca26_Label;
struct _1a766cc13_GotoSt;
struct _1a766ce00_Postfix;
struct _1a766d0dc_Assign;
struct _1a766d2c9_MultiAssign;
struct _1a766d4b6_Match;
struct _1a766d8d4_Case;
struct _1a766dac1_FallSt;
struct _1a766dcad_RetSt;
struct _1a766de9a_ScopeLabel;
struct _1a766e187_ScopeGoto;
struct _1a766e374_ScopeChecker;
struct _1a767e708_DirectiveChecker;
struct _1a7685038_ImportInfo;
struct _1a7687bea_Package;
struct _1a768cc22_Sema;
struct _1a76a4a80_MissingRetChecker;
struct _1a76a6752_IterRelation;
struct _1a76a7720_Var;
struct _1a76a8226_FuncPattern;
struct _1a76da104_TypeCompatibilityChecker;
struct _1a76db4ac_AssignTypeChecker;
struct _1a76dcd0a_DynamicTypeAnnotation;
struct _1a76e0abb_FnCallArgChecker;
struct _1a76e34c5_StructLitChecker;
struct _1a76e50a9_RangeChecker;
struct _1a76e7243_RetTypeChecker;
struct _1a76e8e26_SymbolTable;
struct _1a76edda4_Data;
struct _1a76eee2c_Value;
struct _1a7700922_Eval;
struct _1a7719c9e_UnaryEval;
struct _1a771ba3c_BinaryEval;
struct _1a7726b9b_TypeAlias;
struct _1a77278d3_TypeKind;
struct _1a772b772_TypeSymbol;
struct _1a772c135_Prim;
struct _1a7730644_Sptr;
struct _1a77310a1_Slc;
struct _1a7731a96_Tuple;
struct _1a7732657_Map;
struct _1a773324b_Arr;
struct _1a7733ba8_Ptr;
struct _1a7734aee_Referencer;
struct _1a7735847_TypeChecker;
struct _1a773c684_IdentTypeLookup;
struct _1a7d89286_FileInfo;
struct _1a7dd1575_Stmt;
struct _1a7dd1da0_ScopeParser;
struct _1a7ddd76e_CallData;
struct _1a7ddebc1_ExprBuilder;
struct _1a7de9eea_AssignInfo;
struct _1a7ded52b_Parser;
struct _1a7e0dd22_TypeBuilder;
struct _1a7817495_CompileInfo;
struct _1a781893b_DirectiveEval;
struct _1a7ceea26_JuleImporter;
struct _1a7dbbcd0_OrderedDefines;
struct _1a7d8135a_DefineOrderer;
struct _1a7ed0a1a_LiveTable;
struct _1a801508d_ScopeDeadCode;
struct _1a8018b41_ExprDeadCode;
struct _1a52de106_UnsafeBinopExprModel;
struct _1a55c5695_UnsafeIndexingExprModel;
struct _1a55c2263_PushToSliceExprModel;
struct _1a65b8764_MutSlicingExprModel;
struct _1a534733a_StrInsertBeginExprModel;
struct _1a55c39a1_ScopeOptimizer;
struct _1a5775218_ExprOptimizer;
struct _1a7ea9043_Optimizer;
struct _1a8036147_AnsiEscape;
struct _1a8037478_Logger;
struct _1a864c84b_AbsTime;
struct _1a864d022_Time;
struct _1a85be05e_ScopeCoder;
struct _1a85c6a06_ExprCoder;
struct _1a85d4b02_DeriveCoder;
struct _1a85d61ca_TestCoder;
struct _1a85d894c_IdentCoder;
struct _1a8621743_SerializationInfo;
struct _1a8615094_TraitHash;
struct _1a86588bd_CustomType;
struct _1a86591d7_TypeCoder;
struct _1aad0e02c_Flag;
struct _1aad12a8b_Flag;
struct _1aad16144_Flag;
struct _1aad19741_Flag;
struct _1aad1cce9_Flag;
struct _1a8690680_FlagSet;
struct _1d5090729_IR;
struct _1a6836a48_StructIns;
struct _1a7ed11d0_ObjectDeadCode;
struct _1a8615281_ObjectCoder;
struct _1a8692d8b_ArgParser;
struct _1a41c7d7b_Range16 {
	jule::U16 _field_lo = jule::U16();
	jule::U16 _field_hi = jule::U16();
	jule::U16 _field_stride = jule::U16();
	

	_1a41c7d7b_Range16(void) = default;

	inline bool operator==(_1a41c7d7b_Range16 _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi &&
			this->_field_stride == _other._field_stride;
	}

	inline bool operator!=(_1a41c7d7b_Range16 _other) { return !this->operator==(_other); }


};
struct _1a41c8343_Range32 {
	jule::U32 _field_lo = jule::U32();
	jule::U32 _field_hi = jule::U32();
	jule::U32 _field_stride = jule::U32();
	

	_1a41c8343_Range32(void) = default;

	inline bool operator==(_1a41c8343_Range32 _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi &&
			this->_field_stride == _other._field_stride;
	}

	inline bool operator!=(_1a41c8343_Range32 _other) { return !this->operator==(_other); }


};
struct _1a41c87b6_RangeTable {
	jule::Slice<_1a41c7d7b_Range16> _field_r16 = jule::Slice<_1a41c7d7b_Range16>();
	jule::Slice<_1a41c8343_Range32> _field_r32 = jule::Slice<_1a41c8343_Range32>();
	jule::I64 _field_latin_offset = jule::I64();
	

	_1a41c87b6_RangeTable(void) = default;

	inline bool operator==(_1a41c87b6_RangeTable _other) {
		return 
			this->_field_r16 == _other._field_r16 &&
			this->_field_r32 == _other._field_r32 &&
			this->_field_latin_offset == _other._field_latin_offset;
	}

	inline bool operator!=(_1a41c87b6_RangeTable _other) { return !this->operator==(_other); }


};
struct _1a4290a37_accept_range {
	jule::U8 _field_lo = jule::U8();
	jule::U8 _field_hi = jule::U8();
	

	_1a4290a37_accept_range(void) = default;

	inline bool operator==(_1a4290a37_accept_range _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi;
	}

	inline bool operator!=(_1a4290a37_accept_range _other) { return !this->operator==(_other); }


};
inline jule::U8 _1a4299656_index(_1a42991d3_LazyBuff*, jule::I64);
inline void _1a42998cb_append(_1a42991d3_LazyBuff*, jule::U8);
inline jule::Str _1a4299b40_string(_1a42991d3_LazyBuff*);
struct _1a42991d3_LazyBuff {
	jule::Str _field_path = jule::Str();
	jule::Slice<jule::U8> _field_buff = jule::Slice<jule::U8>();
	jule::I64 _field_w = jule::I64();
	jule::Str _field_vol_and_path = jule::Str();
	jule::I64 _field_vol_len = jule::I64();
	

	_1a42991d3_LazyBuff(void) = default;

	inline bool operator==(_1a42991d3_LazyBuff _other) {
		return 
			this->_field_path == _other._field_path &&
			this->_field_buff == _other._field_buff &&
			this->_field_w == _other._field_w &&
			this->_field_vol_and_path == _other._field_vol_and_path &&
			this->_field_vol_len == _other._field_vol_len;
	}

	inline bool operator!=(_1a42991d3_LazyBuff _other) { return !this->operator==(_other); }


};
struct _1d4e9e836_DirEntry {
	jule::Str _field_name = jule::Str();
	jule::Ptr<_1d4ea101e_Status> _field_stat = jule::Ptr<_1d4ea101e_Status>();
	

	_1d4e9e836_DirEntry(void) = default;

	inline bool operator==(_1d4e9e836_DirEntry _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_stat == _other._field_stat;
	}

	inline bool operator!=(_1d4e9e836_DirEntry _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Slice<jule::Ptr<_1d4e9e836_DirEntry>>> static__1a429d9ce_read(jule::Str);
inline jule::VoidExceptional static__1a429dbdd_create(jule::Str);
inline jule::VoidExceptional static__1a429ddec_remove(jule::Str);
struct _1d4e9ea23_Directory {
	

	_1d4e9ea23_Directory(void) = default;

	inline bool operator==(_1d4e9ea23_Directory _other) { return true; }

	inline bool operator!=(_1d4e9ea23_Directory _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Ptr<_1d4ea035e_File>> static__1d4e051d7_open(jule::Str, jule::I64, jule::I64);
inline jule::VoidExceptional static__1d4e061a5_remove(jule::Str);
inline jule::Exceptional<jule::I64> _1d4e24d61_write(_1d4ea035e_File*, jule::Slice<jule::U8>);
inline jule::Exceptional<jule::I64> _1d4e9e54a_read(_1d4ea035e_File*, jule::Slice<jule::U8>);
inline jule::Ptr<_1d4ea035e_File> static__1d4ea054b_new(jule::Uintptr);
inline jule::Exceptional<jule::Ptr<_1d4ea035e_File>> static__1d4ea067d_create(jule::Str);
inline jule::Exceptional<jule::Slice<jule::U8>> static__1d4ea07b0_read(jule::Str);
inline jule::VoidExceptional static__1d4ea08e2_write(jule::Str, jule::Slice<jule::U8>, jule::I64);
inline jule::Exceptional<jule::I64> _1d4ea0a24_seek(_1d4ea035e_File*, jule::I64, jule::I64);
inline jule::VoidExceptional _1d4ea0b56_close(_1d4ea035e_File*);
struct _1d4ea035e_File {
	jule::Uintptr _field_handle = jule::Uintptr();
	

	_1d4ea035e_File(void) = default;

	inline bool operator==(_1d4ea035e_File _other) {
		return 
			this->_field_handle == _other._field_handle;
	}

	inline bool operator!=(_1d4ea035e_File _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Ptr<_1d4ea101e_Status>> static__1d4e9edb9_of(jule::Str);
inline jule::Bool _1d4ea120b_is_dir(_1d4ea101e_Status*);
inline jule::Bool _1d4ea133d_is_reg(_1d4ea101e_Status*);
struct _1d4ea101e_Status {
	jule::U64 _field_mode = jule::U64();
	jule::U64 _field_size = jule::U64();
	

	_1d4ea101e_Status(void) = default;

	inline bool operator==(_1d4ea101e_Status _other) {
		return 
			this->_field_mode == _other._field_mode &&
			this->_field_size == _other._field_size;
	}

	inline bool operator!=(_1d4ea101e_Status _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a4382211_Cmd> static__1a4382640_new(jule::Str);
inline jule::Exceptional<jule::I64> _1a43828a4_spawn(_1a4382211_Cmd*);
inline jule::Exceptional<jule::I64> _1a4385632___spawn(_1a4382211_Cmd*);
struct _1a4382211_Cmd {
	jule::Str _field_path = jule::Str();
	jule::Slice<jule::Str> _field_args = jule::Slice<jule::Str>();
	jule::Slice<jule::Str> _field_env = jule::Slice<jule::Str>();
	

	_1a4382211_Cmd(void) = default;

	inline bool operator==(_1a4382211_Cmd _other) {
		return 
			this->_field_path == _other._field_path &&
			this->_field_args == _other._field_args &&
			this->_field_env == _other._field_env;
	}

	inline bool operator!=(_1a4382211_Cmd _other) { return !this->operator==(_other); }


};
struct _1a43349cc_Log {
	jule::I64 _field_kind = 0LL;
	jule::I64 _field_row = jule::I64();
	jule::I64 _field_column = jule::I64();
	jule::Str _field_path = jule::Str();
	jule::Str _field_text = jule::Str();
	jule::Str _field_line = jule::Str();
	jule::Str _field_suggestion = jule::Str();
	

	_1a43349cc_Log(void) = default;

	inline bool operator==(_1a43349cc_Log _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_row == _other._field_row &&
			this->_field_column == _other._field_column &&
			this->_field_path == _other._field_path &&
			this->_field_text == _other._field_text &&
			this->_field_line == _other._field_line &&
			this->_field_suggestion == _other._field_suggestion;
	}

	inline bool operator!=(_1a43349cc_Log _other) { return !this->operator==(_other); }


};
inline jule::U8 _1a5277765_prec(_1a527737a_Token*);
struct _1a527737a_Token {
	jule::Ptr<_1a527c76a_File> _field_file = jule::Ptr<_1a527c76a_File>();
	jule::I64 _field_row = jule::I64();
	jule::I64 _field_column = jule::I64();
	jule::Str _field_kind = jule::Str();
	jule::U64 _field_id = 0LLU;
	

	_1a527737a_Token(void) = default;

	inline bool operator==(_1a527737a_Token _other) {
		return 
			this->_field_file == _other._field_file &&
			this->_field_row == _other._field_row &&
			this->_field_column == _other._field_column &&
			this->_field_kind == _other._field_kind &&
			this->_field_id == _other._field_id;
	}

	inline bool operator!=(_1a527737a_Token _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a527cb77_is_ok(_1a527c76a_File*);
inline void _1a527cdec_fill(_1a527c76a_File*, jule::Slice<jule::U8>);
inline jule::Str _1a527d161_dir(_1a527c76a_File*);
inline jule::Str _1a527d3c5_name(_1a527c76a_File*);
inline jule::Uintptr _1a527d639_addr(_1a527c76a_File*);
inline jule::Str _1a527d947_get_row(_1a527c76a_File*, jule::I64);
struct _1a527c76a_File {
	jule::Str _field_path = jule::Str();
	jule::Slice<jule::U8> _field_data = jule::Slice<jule::U8>();
	jule::Slice<jule::Ptr<_1a527737a_Token>> _field_tokens = jule::Slice<jule::Ptr<_1a527737a_Token>>();
	

	_1a527c76a_File(void) = default;

	inline bool operator==(_1a527c76a_File _other) {
		return 
			this->_field_path == _other._field_path &&
			this->_field_data == _other._field_data &&
			this->_field_tokens == _other._field_tokens;
	}

	inline bool operator!=(_1a527c76a_File _other) { return !this->operator==(_other); }


};
struct _1a527e838_KindPair {
	jule::Str _field_kind = jule::Str("::", 2);
	jule::U64 _field_id = 0LLU;
	

	_1a527e838_KindPair(void) = default;

	inline bool operator==(_1a527e838_KindPair _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_id == _other._field_id;
	}

	inline bool operator!=(_1a527e838_KindPair _other) { return !this->operator==(_other); }


};
inline void _1a5285894_push_err(_1a5285300_Lex*, jule::Str, jule::Slice<jule::Any>);
inline void _1a5285bb3_push_err_tok(_1a5285300_Lex*, jule::Ptr<_1a527737a_Token>&, jule::Str);
inline void _1a5285d8e_lex(_1a5285300_Lex*);
inline jule::Str _1a528619c_id(_1a5285300_Lex*, jule::Slice<jule::U8>&);
inline jule::Slice<jule::U8> _1a5286411_resume(_1a5285300_Lex*);
inline void _1a5286686_lex_line_comment(_1a5285300_Lex*, jule::Ptr<_1a527737a_Token>&);
inline void _1a528690b_lex_range_comment(_1a5285300_Lex*, jule::Ptr<_1a527737a_Token>&);
inline jule::Str _1a5286c19_num(_1a5285300_Lex*, jule::Slice<jule::U8>&);
inline jule::Str _1a5287027_escape_seq(_1a5285300_Lex*, jule::Slice<jule::U8>&);
inline jule::Str _1a52873ce_get_rune(_1a5285300_Lex*, jule::Slice<jule::U8>&, jule::Bool);
inline jule::Str _1a52876dc_lex_rune(_1a5285300_Lex*, jule::Slice<jule::U8>&);
inline jule::Str _1a5287951_lex_str(_1a5285300_Lex*);
inline jule::Bool _1a5287bb5_is_first_token_of_line(_1a5285300_Lex*);
inline void _1a5287d91_new_line(_1a5285300_Lex*);
inline jule::Bool _1a528838b_is_op(_1a5285300_Lex*, jule::Slice<jule::U8>&, jule::Str, jule::U64, jule::Ptr<_1a527737a_Token>&);
inline jule::Bool _1a5288743_lex_basic_ops(_1a5285300_Lex*, jule::Slice<jule::U8>, jule::Ptr<_1a527737a_Token>&);
inline jule::Bool _1a5288aea_lex_id(_1a5285300_Lex*, jule::Slice<jule::U8>&, jule::Ptr<_1a527737a_Token>&);
inline jule::Bool _1a5288ea2_lex_num(_1a5285300_Lex*, jule::Slice<jule::U8>&, jule::Ptr<_1a527737a_Token>&);
inline jule::Ptr<_1a527737a_Token> _1a5289216_token(_1a5285300_Lex*);
struct _1a5285300_Lex {
	jule::I64 _field_mode = 0LL;
	jule::Slice<jule::Ptr<_1a527737a_Token>> _field_tokens = jule::Slice<jule::Ptr<_1a527737a_Token>>();
	jule::Ptr<_1a527c76a_File> _field_file = jule::Ptr<_1a527c76a_File>();
	jule::I64 _field_pos = jule::I64();
	jule::I64 _field_column = jule::I64();
	jule::I64 _field_row = jule::I64();
	jule::Slice<_1a43349cc_Log> _field_errors = jule::Slice<_1a43349cc_Log>();
	

	_1a5285300_Lex(void) = default;

	inline bool operator==(_1a5285300_Lex _other) {
		return 
			this->_field_mode == _other._field_mode &&
			this->_field_tokens == _other._field_tokens &&
			this->_field_file == _other._field_file &&
			this->_field_pos == _other._field_pos &&
			this->_field_column == _other._field_column &&
			this->_field_row == _other._field_row &&
			this->_field_errors == _other._field_errors;
	}

	inline bool operator!=(_1a5285300_Lex _other) { return !this->operator==(_other); }


};
struct _1a6820cc9_Ast {
	jule::Ptr<_1a527c76a_File> _field_file = jule::Ptr<_1a527c76a_File>();
	jule::Slice<jule::Ptr<_1a6852525_Directive>> _field_top_directives = jule::Slice<jule::Ptr<_1a6852525_Directive>>();
	jule::Slice<jule::Ptr<_1a6867d43_UseDecl>> _field_use_decls = jule::Slice<jule::Ptr<_1a6867d43_UseDecl>>();
	jule::Slice<_1a6821934_Node> _field_nodes = jule::Slice<_1a6821934_Node>();
	

	_1a6820cc9_Ast(void) = default;

	inline bool operator==(_1a6820cc9_Ast _other) {
		return 
			this->_field_file == _other._field_file &&
			this->_field_top_directives == _other._field_top_directives &&
			this->_field_use_decls == _other._field_use_decls &&
			this->_field_nodes == _other._field_nodes;
	}

	inline bool operator!=(_1a6820cc9_Ast _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a6821d52_is_decl(_1a6821934_Node*);
inline jule::Bool _1a68220b6_is_directive(_1a6821934_Node*);
inline jule::Bool _1a682232a_is_impl(_1a6821934_Node*);
inline jule::Bool _1a685216d_is_use_decl(_1a6821934_Node*);
struct _1a6821934_Node {
	jule::Ptr<_1a527737a_Token> _field_token = jule::Ptr<_1a527737a_Token>();
	jule::Any _field_data = jule::Any();
	

	_1a6821934_Node(void) = default;

	inline bool operator==(_1a6821934_Node _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1a6821934_Node _other) { return !this->operator==(_other); }


};
struct _1a6852525_Directive {
	jule::Ptr<_1a527737a_Token> _field_tag = jule::Ptr<_1a527737a_Token>();
	jule::Slice<jule::Ptr<_1a527737a_Token>> _field_args = jule::Slice<jule::Ptr<_1a527737a_Token>>();
	

	_1a6852525_Directive(void) = default;

	inline bool operator==(_1a6852525_Directive _other) {
		return 
			this->_field_tag == _other._field_tag &&
			this->_field_args == _other._field_args;
	}

	inline bool operator!=(_1a6852525_Directive _other) { return !this->operator==(_other); }


};
struct _1a68529cb_TypeDecl {
	jule::Ptr<_1a527737a_Token> _field_token = jule::Ptr<_1a527737a_Token>();
	jule::Any _field_kind = jule::Any();
	

	_1a68529cb_TypeDecl(void) = default;

	inline bool operator==(_1a68529cb_TypeDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1a68529cb_TypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a68533b1_is_prim(_1a685305e_IdentTypeDecl*);
struct _1a685305e_IdentTypeDecl {
	jule::Ptr<_1a527737a_Token> _field_token = jule::Ptr<_1a527737a_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Slice<jule::Ptr<_1a68529cb_TypeDecl>> _field_generics = jule::Slice<jule::Ptr<_1a68529cb_TypeDecl>>();
	

	_1a685305e_IdentTypeDecl(void) = default;

	inline bool operator==(_1a685305e_IdentTypeDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_generics == _other._field_generics;
	}

	inline bool operator!=(_1a685305e_IdentTypeDecl _other) { return !this->operator==(_other); }


};
struct _1a6853768_NamespaceTypeDecl {
	jule::Slice<jule::Ptr<_1a527737a_Token>> _field_idents = jule::Slice<jule::Ptr<_1a527737a_Token>>();
	jule::Ptr<_1a685305e_IdentTypeDecl> _field_kind = jule::Ptr<_1a685305e_IdentTypeDecl>();
	

	_1a6853768_NamespaceTypeDecl(void) = default;

	inline bool operator==(_1a6853768_NamespaceTypeDecl _other) {
		return 
			this->_field_idents == _other._field_idents &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1a6853768_NamespaceTypeDecl _other) { return !this->operator==(_other); }


};
struct _1a6853a54_SptrTypeDecl {
	jule::Ptr<_1a68529cb_TypeDecl> _field_elem = jule::Ptr<_1a68529cb_TypeDecl>();
	

	_1a6853a54_SptrTypeDecl(void) = default;

	inline bool operator==(_1a6853a54_SptrTypeDecl _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1a6853a54_SptrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1a6853d40_SlcTypeDecl {
	jule::Ptr<_1a68529cb_TypeDecl> _field_elem = jule::Ptr<_1a68529cb_TypeDecl>();
	

	_1a6853d40_SlcTypeDecl(void) = default;

	inline bool operator==(_1a6853d40_SlcTypeDecl _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1a6853d40_SlcTypeDecl _other) { return !this->operator==(_other); }


};
struct _1a68541b4_TupleTypeDecl {
	jule::Slice<jule::Ptr<_1a68529cb_TypeDecl>> _field_types = jule::Slice<jule::Ptr<_1a68529cb_TypeDecl>>();
	

	_1a68541b4_TupleTypeDecl(void) = default;

	inline bool operator==(_1a68541b4_TupleTypeDecl _other) {
		return 
			this->_field_types == _other._field_types;
	}

	inline bool operator!=(_1a68541b4_TupleTypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a6854879_is_unsafe(_1a68544a0_PtrTypeDecl*);
struct _1a68544a0_PtrTypeDecl {
	jule::Ptr<_1a68529cb_TypeDecl> _field_elem = jule::Ptr<_1a68529cb_TypeDecl>();
	

	_1a68544a0_PtrTypeDecl(void) = default;

	inline bool operator==(_1a68544a0_PtrTypeDecl _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1a68544a0_PtrTypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a6855050_auto_sized(_1a6854bed_ArrTypeDecl*);
struct _1a6854bed_ArrTypeDecl {
	jule::Ptr<_1a68529cb_TypeDecl> _field_elem = jule::Ptr<_1a68529cb_TypeDecl>();
	jule::Ptr<_1a6855e41_Expr> _field_size = jule::Ptr<_1a6855e41_Expr>();
	

	_1a6854bed_ArrTypeDecl(void) = default;

	inline bool operator==(_1a6854bed_ArrTypeDecl _other) {
		return 
			this->_field_elem == _other._field_elem &&
			this->_field_size == _other._field_size;
	}

	inline bool operator!=(_1a6854bed_ArrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1a6855407_MapTypeDecl {
	jule::Ptr<_1a68529cb_TypeDecl> _field_key = jule::Ptr<_1a68529cb_TypeDecl>();
	jule::Ptr<_1a68529cb_TypeDecl> _field_val = jule::Ptr<_1a68529cb_TypeDecl>();
	

	_1a6855407_MapTypeDecl(void) = default;

	inline bool operator==(_1a6855407_MapTypeDecl _other) {
		return 
			this->_field_key == _other._field_key &&
			this->_field_val == _other._field_val;
	}

	inline bool operator!=(_1a6855407_MapTypeDecl _other) { return !this->operator==(_other); }


};
struct _1a68557ae_RetTypeDecl {
	jule::Ptr<_1a68529cb_TypeDecl> _field_kind = jule::Ptr<_1a68529cb_TypeDecl>();
	jule::Slice<jule::Ptr<_1a527737a_Token>> _field_idents = jule::Slice<jule::Ptr<_1a527737a_Token>>();
	

	_1a68557ae_RetTypeDecl(void) = default;

	inline bool operator==(_1a68557ae_RetTypeDecl _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_idents == _other._field_idents;
	}

	inline bool operator!=(_1a68557ae_RetTypeDecl _other) { return !this->operator==(_other); }


};
struct _1a6855e41_Expr {
	jule::Ptr<_1a527737a_Token> _field_token = jule::Ptr<_1a527737a_Token>();
	jule::Ptr<_1a527737a_Token> _field_end = jule::Ptr<_1a527737a_Token>();
	jule::Bool _field_range = jule::Bool();
	jule::Any _field_kind = jule::Any();
	

	_1a6855e41_Expr(void) = default;

	inline bool operator==(_1a6855e41_Expr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_range == _other._field_range &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1a6855e41_Expr _other) { return !this->operator==(_other); }


};
struct _1a68562e8_UseExpr {
	jule::Ptr<_1a527737a_Token> _field_token = jule::Ptr<_1a527737a_Token>();
	jule::Ptr<_1a6855e41_Expr> _field_expr = jule::Ptr<_1a6855e41_Expr>();
	

	_1a68562e8_UseExpr(void) = default;

	inline bool operator==(_1a68562e8_UseExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1a68562e8_UseExpr _other) { return !this->operator==(_other); }


};
struct _1a68565d4_TupleExpr {
	jule::Slice<jule::Ptr<_1a6855e41_Expr>> _field_expr = jule::Slice<jule::Ptr<_1a6855e41_Expr>>();
	

	_1a68565d4_TupleExpr(void) = default;

	inline bool operator==(_1a68565d4_TupleExpr _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1a68565d4_TupleExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a6856e0e_is_nil(_1a6856aac_LitExpr*);
struct _1a6856aac_LitExpr {
	jule::Ptr<_1a527737a_Token> _field_token = jule::Ptr<_1a527737a_Token>();
	jule::Str _field_value = jule::Str();
	

	_1a6856aac_LitExpr(void) = default;

	inline bool operator==(_1a6856aac_LitExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_value == _other._field_value;
	}

	inline bool operator!=(_1a6856aac_LitExpr _other) { return !this->operator==(_other); }


};
struct _1a68572b6_UnsafeExpr {
	jule::Ptr<_1a527737a_Token> _field_token = jule::Ptr<_1a527737a_Token>();
	jule::Ptr<_1a6855e41_Expr> _field_expr = jule::Ptr<_1a6855e41_Expr>();
	

	_1a68572b6_UnsafeExpr(void) = default;

	inline bool operator==(_1a68572b6_UnsafeExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1a68572b6_UnsafeExpr _other) { return !this->operator==(_other); }


};
struct _1a685766d_CoExpr {
	jule::Ptr<_1a527737a_Token> _field_token = jule::Ptr<_1a527737a_Token>();
	jule::Ptr<_1a6855e41_Expr> _field_expr = jule::Ptr<_1a6855e41_Expr>();
	

	_1a685766d_CoExpr(void) = default;

	inline bool operator==(_1a685766d_CoExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1a685766d_CoExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a6857e43_is_self(_1a6857ae1_IdentExpr*);
struct _1a6857ae1_IdentExpr {
	jule::Ptr<_1a527737a_Token> _field_token = jule::Ptr<_1a527737a_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_cpp_linked = jule::Bool();
	

	_1a6857ae1_IdentExpr(void) = default;

	inline bool operator==(_1a6857ae1_IdentExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_cpp_linked == _other._field_cpp_linked;
	}

	inline bool operator!=(_1a6857ae1_IdentExpr _other) { return !this->operator==(_other); }


};
struct _1a68582ea_UnaryExpr {
	jule::Ptr<_1a527737a_Token> _field_op = jule::Ptr<_1a527737a_Token>();
	jule::Ptr<_1a6855e41_Expr> _field_expr = jule::Ptr<_1a6855e41_Expr>();
	

	_1a68582ea_UnaryExpr(void) = default;

	inline bool operator==(_1a68582ea_UnaryExpr _other) {
		return 
			this->_field_op == _other._field_op &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1a68582ea_UnaryExpr _other) { return !this->operator==(_other); }


};
struct _1a68586a2_VariadicExpr {
	jule::Ptr<_1a527737a_Token> _field_token = jule::Ptr<_1a527737a_Token>();
	jule::Ptr<_1a6855e41_Expr> _field_expr = jule::Ptr<_1a6855e41_Expr>();
	

	_1a68586a2_VariadicExpr(void) = default;

	inline bool operator==(_1a68586a2_VariadicExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1a68586a2_VariadicExpr _other) { return !this->operator==(_other); }


};
struct _1a6858a59_CastExpr {
	jule::Ptr<_1a68529cb_TypeDecl> _field_kind = jule::Ptr<_1a68529cb_TypeDecl>();
	jule::Ptr<_1a6855e41_Expr> _field_expr = jule::Ptr<_1a6855e41_Expr>();
	

	_1a6858a59_CastExpr(void) = default;

	inline bool operator==(_1a6858a59_CastExpr _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1a6858a59_CastExpr _other) { return !this->operator==(_other); }


};
struct _1a6858e11_NsSelectionExpr {
	jule::Slice<jule::Ptr<_1a527737a_Token>> _field_ns = jule::Slice<jule::Ptr<_1a527737a_Token>>();
	jule::Ptr<_1a527737a_Token> _field_ident = jule::Ptr<_1a527737a_Token>();
	

	_1a6858e11_NsSelectionExpr(void) = default;

	inline bool operator==(_1a6858e11_NsSelectionExpr _other) {
		return 
			this->_field_ns == _other._field_ns &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1a6858e11_NsSelectionExpr _other) { return !this->operator==(_other); }


};
struct _1a6859384_SubIdentExpr {
	jule::Bool _field_is_self = jule::Bool();
	jule::Ptr<_1a6855e41_Expr> _field_expr = jule::Ptr<_1a6855e41_Expr>();
	jule::Ptr<_1a527737a_Token> _field_ident = jule::Ptr<_1a527737a_Token>();
	

	_1a6859384_SubIdentExpr(void) = default;

	inline bool operator==(_1a6859384_SubIdentExpr _other) {
		return 
			this->_field_is_self == _other._field_is_self &&
			this->_field_expr == _other._field_expr &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1a6859384_SubIdentExpr _other) { return !this->operator==(_other); }


};
struct _1a6859807_BinopExpr {
	jule::Ptr<_1a6855e41_Expr> _field_left = jule::Ptr<_1a6855e41_Expr>();
	jule::Ptr<_1a6855e41_Expr> _field_right = jule::Ptr<_1a6855e41_Expr>();
	jule::Ptr<_1a527737a_Token> _field_op = jule::Ptr<_1a527737a_Token>();
	

	_1a6859807_BinopExpr(void) = default;

	inline bool operator==(_1a6859807_BinopExpr _other) {
		return 
			this->_field_left == _other._field_left &&
			this->_field_right == _other._field_right &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1a6859807_BinopExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a685a385_unhandled(_1a6859e12_FnCallExpr*);
inline jule::Bool _1a685a5e9_ignored(_1a6859e12_FnCallExpr*);
struct _1a6859e12_FnCallExpr {
	jule::Ptr<_1a527737a_Token> _field_token = jule::Ptr<_1a527737a_Token>();
	jule::Ptr<_1a6855e41_Expr> _field_expr = jule::Ptr<_1a6855e41_Expr>();
	jule::Slice<jule::Ptr<_1a68529cb_TypeDecl>> _field_generics = jule::Slice<jule::Ptr<_1a68529cb_TypeDecl>>();
	jule::Slice<jule::Ptr<_1a6855e41_Expr>> _field_args = jule::Slice<jule::Ptr<_1a6855e41_Expr>>();
	jule::Ptr<_1a686070e_ScopeTree> _field_exception = jule::Ptr<_1a686070e_ScopeTree>();
	

	_1a6859e12_FnCallExpr(void) = default;

	inline bool operator==(_1a6859e12_FnCallExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_generics == _other._field_generics &&
			this->_field_args == _other._field_args &&
			this->_field_exception == _other._field_exception;
	}

	inline bool operator!=(_1a6859e12_FnCallExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a685ac7b_is_targeted(_1a685a929_FieldExprPair*);
struct _1a685a929_FieldExprPair {
	jule::Ptr<_1a527737a_Token> _field_field = jule::Ptr<_1a527737a_Token>();
	jule::Ptr<_1a6855e41_Expr> _field_expr = jule::Ptr<_1a6855e41_Expr>();
	

	_1a685a929_FieldExprPair(void) = default;

	inline bool operator==(_1a685a929_FieldExprPair _other) {
		return 
			this->_field_field == _other._field_field &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1a685a929_FieldExprPair _other) { return !this->operator==(_other); }


};
struct _1a685b1ee_StructLit {
	jule::Ptr<_1a527737a_Token> _field_end = jule::Ptr<_1a527737a_Token>();
	jule::Ptr<_1a68529cb_TypeDecl> _field_kind = jule::Ptr<_1a68529cb_TypeDecl>();
	jule::Slice<jule::Ptr<_1a6855e41_Expr>> _field_exprs = jule::Slice<jule::Ptr<_1a6855e41_Expr>>();
	

	_1a685b1ee_StructLit(void) = default;

	inline bool operator==(_1a685b1ee_StructLit _other) {
		return 
			this->_field_end == _other._field_end &&
			this->_field_kind == _other._field_kind &&
			this->_field_exprs == _other._field_exprs;
	}

	inline bool operator!=(_1a685b1ee_StructLit _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a685b9c4_is_empty(_1a685b672_BraceLit*);
struct _1a685b672_BraceLit {
	jule::Ptr<_1a527737a_Token> _field_token = jule::Ptr<_1a527737a_Token>();
	jule::Ptr<_1a527737a_Token> _field_end = jule::Ptr<_1a527737a_Token>();
	jule::Slice<jule::Ptr<_1a6855e41_Expr>> _field_exprs = jule::Slice<jule::Ptr<_1a6855e41_Expr>>();
	

	_1a685b672_BraceLit(void) = default;

	inline bool operator==(_1a685b672_BraceLit _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_exprs == _other._field_exprs;
	}

	inline bool operator!=(_1a685b672_BraceLit _other) { return !this->operator==(_other); }


};
struct _1a685be47_KeyValPair {
	jule::Ptr<_1a6855e41_Expr> _field_key = jule::Ptr<_1a6855e41_Expr>();
	jule::Ptr<_1a6855e41_Expr> _field_val = jule::Ptr<_1a6855e41_Expr>();
	jule::Ptr<_1a527737a_Token> _field_colon = jule::Ptr<_1a527737a_Token>();
	

	_1a685be47_KeyValPair(void) = default;

	inline bool operator==(_1a685be47_KeyValPair _other) {
		return 
			this->_field_key == _other._field_key &&
			this->_field_val == _other._field_val &&
			this->_field_colon == _other._field_colon;
	}

	inline bool operator!=(_1a685be47_KeyValPair _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a685ca3b_is_empty(_1a685c3ba_SliceExpr*);
struct _1a685c3ba_SliceExpr {
	jule::Ptr<_1a527737a_Token> _field_token = jule::Ptr<_1a527737a_Token>();
	jule::Ptr<_1a527737a_Token> _field_end = jule::Ptr<_1a527737a_Token>();
	jule::Slice<jule::Ptr<_1a6855e41_Expr>> _field_exprs = jule::Slice<jule::Ptr<_1a6855e41_Expr>>();
	

	_1a685c3ba_SliceExpr(void) = default;

	inline bool operator==(_1a685c3ba_SliceExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_exprs == _other._field_exprs;
	}

	inline bool operator!=(_1a685c3ba_SliceExpr _other) { return !this->operator==(_other); }


};
struct _1a685ce9d_IndexingExpr {
	jule::Ptr<_1a527737a_Token> _field_token = jule::Ptr<_1a527737a_Token>();
	jule::Ptr<_1a527737a_Token> _field_end = jule::Ptr<_1a527737a_Token>();
	jule::Ptr<_1a6855e41_Expr> _field_expr = jule::Ptr<_1a6855e41_Expr>();
	jule::Ptr<_1a6855e41_Expr> _field_index = jule::Ptr<_1a6855e41_Expr>();
	

	_1a685ce9d_IndexingExpr(void) = default;

	inline bool operator==(_1a685ce9d_IndexingExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_expr == _other._field_expr &&
			this->_field_index == _other._field_index;
	}

	inline bool operator!=(_1a685ce9d_IndexingExpr _other) { return !this->operator==(_other); }


};
struct _1a685d5a8_SlicingExpr {
	jule::Ptr<_1a527737a_Token> _field_token = jule::Ptr<_1a527737a_Token>();
	jule::Ptr<_1a527737a_Token> _field_end = jule::Ptr<_1a527737a_Token>();
	jule::Ptr<_1a6855e41_Expr> _field_expr = jule::Ptr<_1a6855e41_Expr>();
	jule::Ptr<_1a6855e41_Expr> _field_start = jule::Ptr<_1a6855e41_Expr>();
	jule::Ptr<_1a6855e41_Expr> _field_to = jule::Ptr<_1a6855e41_Expr>();
	

	_1a685d5a8_SlicingExpr(void) = default;

	inline bool operator==(_1a685d5a8_SlicingExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_expr == _other._field_expr &&
			this->_field_start == _other._field_start &&
			this->_field_to == _other._field_to;
	}

	inline bool operator!=(_1a685d5a8_SlicingExpr _other) { return !this->operator==(_other); }


};
struct _1a685d960_GenericDecl {
	jule::Ptr<_1a527737a_Token> _field_token = jule::Ptr<_1a527737a_Token>();
	jule::Str _field_ident = jule::Str();
	

	_1a685d960_GenericDecl(void) = default;

	inline bool operator==(_1a685d960_GenericDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1a685d960_GenericDecl _other) { return !this->operator==(_other); }


};
struct _1a685dd17_LabelSt {
	jule::Ptr<_1a527737a_Token> _field_token = jule::Ptr<_1a527737a_Token>();
	jule::Str _field_ident = jule::Str();
	

	_1a685dd17_LabelSt(void) = default;

	inline bool operator==(_1a685dd17_LabelSt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1a685dd17_LabelSt _other) { return !this->operator==(_other); }


};
struct _1a685e1be_GotoSt {
	jule::Ptr<_1a527737a_Token> _field_token = jule::Ptr<_1a527737a_Token>();
	jule::Ptr<_1a527737a_Token> _field_label = jule::Ptr<_1a527737a_Token>();
	

	_1a685e1be_GotoSt(void) = default;

	inline bool operator==(_1a685e1be_GotoSt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label;
	}

	inline bool operator!=(_1a685e1be_GotoSt _other) { return !this->operator==(_other); }


};
struct _1a685e4aa_FallSt {
	jule::Ptr<_1a527737a_Token> _field_token = jule::Ptr<_1a527737a_Token>();
	

	_1a685e4aa_FallSt(void) = default;

	inline bool operator==(_1a685e4aa_FallSt _other) {
		return 
			this->_field_token == _other._field_token;
	}

	inline bool operator!=(_1a685e4aa_FallSt _other) { return !this->operator==(_other); }


};
struct _1a685eab5_AssignLeft {
	jule::Ptr<_1a527737a_Token> _field_token = jule::Ptr<_1a527737a_Token>();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1a6855e41_Expr> _field_expr = jule::Ptr<_1a6855e41_Expr>();
	

	_1a685eab5_AssignLeft(void) = default;

	inline bool operator==(_1a685eab5_AssignLeft _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_reference == _other._field_reference &&
			this->_field_ident == _other._field_ident &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1a685eab5_AssignLeft _other) { return !this->operator==(_other); }


};
struct _1a6860104_AssignSt {
	jule::Bool _field_declarative = jule::Bool();
	jule::Ptr<_1a527737a_Token> _field_setter = jule::Ptr<_1a527737a_Token>();
	jule::Slice<jule::Ptr<_1a685eab5_AssignLeft>> _field_left = jule::Slice<jule::Ptr<_1a685eab5_AssignLeft>>();
	jule::Ptr<_1a6855e41_Expr> _field_right = jule::Ptr<_1a6855e41_Expr>();
	

	_1a6860104_AssignSt(void) = default;

	inline bool operator==(_1a6860104_AssignSt _other) {
		return 
			this->_field_declarative == _other._field_declarative &&
			this->_field_setter == _other._field_setter &&
			this->_field_left == _other._field_left &&
			this->_field_right == _other._field_right;
	}

	inline bool operator!=(_1a6860104_AssignSt _other) { return !this->operator==(_other); }


};
struct _1a686070e_ScopeTree {
	jule::Ptr<_1a686070e_ScopeTree> _field_parent = jule::Ptr<_1a686070e_ScopeTree>();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_deferred = jule::Bool();
	jule::Slice<_1a6821934_Node> _field_stmts = jule::Slice<_1a6821934_Node>();
	jule::Ptr<_1a527737a_Token> _field_end = jule::Ptr<_1a527737a_Token>();
	

	_1a686070e_ScopeTree(void) = default;

	inline bool operator==(_1a686070e_ScopeTree _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_deferred == _other._field_deferred &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_end == _other._field_end;
	}

	inline bool operator!=(_1a686070e_ScopeTree _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a6861248_is_self(_1a6860dd5_ParamDecl*);
struct _1a6860dd5_ParamDecl {
	jule::Ptr<_1a527737a_Token> _field_token = jule::Ptr<_1a527737a_Token>();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_variadic = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Ptr<_1a68529cb_TypeDecl> _field_kind = jule::Ptr<_1a68529cb_TypeDecl>();
	jule::Str _field_ident = jule::Str();
	

	_1a6860dd5_ParamDecl(void) = default;

	inline bool operator==(_1a6860dd5_ParamDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_variadic == _other._field_variadic &&
			this->_field_reference == _other._field_reference &&
			this->_field_kind == _other._field_kind &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1a6860dd5_ParamDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a6862557_is_anon(_1a6862205_FnDecl*);
struct _1a6862205_FnDecl {
	jule::Ptr<_1a527737a_Token> _field_token = jule::Ptr<_1a527737a_Token>();
	jule::Bool _field_global = jule::Bool();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_statically = jule::Bool();
	jule::Bool _field_exceptional = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_1a6852525_Directive>> _field_directives = jule::Slice<jule::Ptr<_1a6852525_Directive>>();
	jule::Ptr<_1a686070e_ScopeTree> _field_scope = jule::Ptr<_1a686070e_ScopeTree>();
	jule::Slice<jule::Ptr<_1a685d960_GenericDecl>> _field_generics = jule::Slice<jule::Ptr<_1a685d960_GenericDecl>>();
	jule::Ptr<_1a68557ae_RetTypeDecl> _field_result = jule::Ptr<_1a68557ae_RetTypeDecl>();
	jule::Slice<jule::Ptr<_1a6860dd5_ParamDecl>> _field_params = jule::Slice<jule::Ptr<_1a6860dd5_ParamDecl>>();
	

	_1a6862205_FnDecl(void) = default;

	inline bool operator==(_1a6862205_FnDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_global == _other._field_global &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_statically == _other._field_statically &&
			this->_field_exceptional == _other._field_exceptional &&
			this->_field_ident == _other._field_ident &&
			this->_field_directives == _other._field_directives &&
			this->_field_scope == _other._field_scope &&
			this->_field_generics == _other._field_generics &&
			this->_field_result == _other._field_result &&
			this->_field_params == _other._field_params;
	}

	inline bool operator!=(_1a6862205_FnDecl _other) { return !this->operator==(_other); }


};
struct _1a68631d4_VarDecl {
	jule::Ptr<_1a686070e_ScopeTree> _field_scope = jule::Ptr<_1a686070e_ScopeTree>();
	jule::Ptr<_1a527737a_Token> _field_token = jule::Ptr<_1a527737a_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_constant = jule::Bool();
	jule::Bool _field_statically = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Slice<jule::Ptr<_1a6852525_Directive>> _field_directives = jule::Slice<jule::Ptr<_1a6852525_Directive>>();
	jule::Ptr<_1a68529cb_TypeDecl> _field_kind = jule::Ptr<_1a68529cb_TypeDecl>();
	jule::Ptr<_1a6855e41_Expr> _field_expr = jule::Ptr<_1a6855e41_Expr>();
	

	_1a68631d4_VarDecl(void) = default;

	inline bool operator==(_1a68631d4_VarDecl _other) {
		return 
			this->_field_scope == _other._field_scope &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_public == _other._field_public &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_constant == _other._field_constant &&
			this->_field_statically == _other._field_statically &&
			this->_field_reference == _other._field_reference &&
			this->_field_directives == _other._field_directives &&
			this->_field_kind == _other._field_kind &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1a68631d4_VarDecl _other) { return !this->operator==(_other); }


};
struct _1a686358b_RetSt {
	jule::Ptr<_1a527737a_Token> _field_token = jule::Ptr<_1a527737a_Token>();
	jule::Ptr<_1a6855e41_Expr> _field_expr = jule::Ptr<_1a6855e41_Expr>();
	

	_1a686358b_RetSt(void) = default;

	inline bool operator==(_1a686358b_RetSt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1a686358b_RetSt _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a6863e60_is_inf(_1a6863b0d_Iter*);
struct _1a6863b0d_Iter {
	jule::Ptr<_1a527737a_Token> _field_token = jule::Ptr<_1a527737a_Token>();
	jule::Any _field_kind = jule::Any();
	jule::Ptr<_1a686070e_ScopeTree> _field_scope = jule::Ptr<_1a686070e_ScopeTree>();
	

	_1a6863b0d_Iter(void) = default;

	inline bool operator==(_1a6863b0d_Iter _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_kind == _other._field_kind &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1a6863b0d_Iter _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a6864735_is_while_next(_1a68643d3_WhileKind*);
struct _1a68643d3_WhileKind {
	jule::Ptr<_1a6855e41_Expr> _field_expr = jule::Ptr<_1a6855e41_Expr>();
	jule::Any _field_next = jule::Any();
	jule::Ptr<_1a527737a_Token> _field_next_token = jule::Ptr<_1a527737a_Token>();
	

	_1a68643d3_WhileKind(void) = default;

	inline bool operator==(_1a68643d3_WhileKind _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_next == _other._field_next &&
			this->_field_next_token == _other._field_next_token;
	}

	inline bool operator!=(_1a68643d3_WhileKind _other) { return !this->operator==(_other); }


};
struct _1a6864c74_RangeKind {
	jule::Ptr<_1a527737a_Token> _field_in_token = jule::Ptr<_1a527737a_Token>();
	jule::Ptr<_1a6855e41_Expr> _field_expr = jule::Ptr<_1a6855e41_Expr>();
	jule::Ptr<_1a68631d4_VarDecl> _field_key_a = jule::Ptr<_1a68631d4_VarDecl>();
	jule::Ptr<_1a68631d4_VarDecl> _field_key_b = jule::Ptr<_1a68631d4_VarDecl>();
	

	_1a6864c74_RangeKind(void) = default;

	inline bool operator==(_1a6864c74_RangeKind _other) {
		return 
			this->_field_in_token == _other._field_in_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_key_a == _other._field_key_a &&
			this->_field_key_b == _other._field_key_b;
	}

	inline bool operator!=(_1a6864c74_RangeKind _other) { return !this->operator==(_other); }


};
struct _1a686512b_BreakSt {
	jule::Ptr<_1a527737a_Token> _field_token = jule::Ptr<_1a527737a_Token>();
	jule::Ptr<_1a527737a_Token> _field_label = jule::Ptr<_1a527737a_Token>();
	

	_1a686512b_BreakSt(void) = default;

	inline bool operator==(_1a686512b_BreakSt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label;
	}

	inline bool operator!=(_1a686512b_BreakSt _other) { return !this->operator==(_other); }


};
struct _1a68654d3_ContSt {
	jule::Ptr<_1a527737a_Token> _field_token = jule::Ptr<_1a527737a_Token>();
	jule::Ptr<_1a527737a_Token> _field_label = jule::Ptr<_1a527737a_Token>();
	

	_1a68654d3_ContSt(void) = default;

	inline bool operator==(_1a68654d3_ContSt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label;
	}

	inline bool operator!=(_1a68654d3_ContSt _other) { return !this->operator==(_other); }


};
struct _1a6865956_If {
	jule::Ptr<_1a527737a_Token> _field_token = jule::Ptr<_1a527737a_Token>();
	jule::Ptr<_1a6855e41_Expr> _field_expr = jule::Ptr<_1a6855e41_Expr>();
	jule::Ptr<_1a686070e_ScopeTree> _field_scope = jule::Ptr<_1a686070e_ScopeTree>();
	

	_1a6865956_If(void) = default;

	inline bool operator==(_1a6865956_If _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1a6865956_If _other) { return !this->operator==(_other); }


};
struct _1a6865d0d_Else {
	jule::Ptr<_1a527737a_Token> _field_token = jule::Ptr<_1a527737a_Token>();
	jule::Ptr<_1a686070e_ScopeTree> _field_scope = jule::Ptr<_1a686070e_ScopeTree>();
	

	_1a6865d0d_Else(void) = default;

	inline bool operator==(_1a6865d0d_Else _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1a6865d0d_Else _other) { return !this->operator==(_other); }


};
struct _1a6866281_Conditional {
	jule::Ptr<_1a6865956_If> _field_head = jule::Ptr<_1a6865956_If>();
	jule::Slice<jule::Ptr<_1a6865956_If>> _field_tail = jule::Slice<jule::Ptr<_1a6865956_If>>();
	jule::Ptr<_1a6865d0d_Else> _field_default = jule::Ptr<_1a6865d0d_Else>();
	

	_1a6866281_Conditional(void) = default;

	inline bool operator==(_1a6866281_Conditional _other) {
		return 
			this->_field_head == _other._field_head &&
			this->_field_tail == _other._field_tail &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1a6866281_Conditional _other) { return !this->operator==(_other); }


};
struct _1a6866957_TypeAliasDecl {
	jule::Ptr<_1a686070e_ScopeTree> _field_scope = jule::Ptr<_1a686070e_ScopeTree>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Ptr<_1a527737a_Token> _field_token = jule::Ptr<_1a527737a_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1a68529cb_TypeDecl> _field_kind = jule::Ptr<_1a68529cb_TypeDecl>();
	

	_1a6866957_TypeAliasDecl(void) = default;

	inline bool operator==(_1a6866957_TypeAliasDecl _other) {
		return 
			this->_field_scope == _other._field_scope &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1a6866957_TypeAliasDecl _other) { return !this->operator==(_other); }


};
struct _1a6866dca_Case {
	jule::Ptr<_1a527737a_Token> _field_token = jule::Ptr<_1a527737a_Token>();
	jule::Ptr<_1a686070e_ScopeTree> _field_scope = jule::Ptr<_1a686070e_ScopeTree>();
	jule::Slice<jule::Ptr<_1a6855e41_Expr>> _field_exprs = jule::Slice<jule::Ptr<_1a6855e41_Expr>>();
	

	_1a6866dca_Case(void) = default;

	inline bool operator==(_1a6866dca_Case _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_scope == _other._field_scope &&
			this->_field_exprs == _other._field_exprs;
	}

	inline bool operator!=(_1a6866dca_Case _other) { return !this->operator==(_other); }


};
struct _1a68675a1_MatchCase {
	jule::Ptr<_1a527737a_Token> _field_token = jule::Ptr<_1a527737a_Token>();
	jule::Ptr<_1a527737a_Token> _field_end = jule::Ptr<_1a527737a_Token>();
	jule::Bool _field_type_match = jule::Bool();
	jule::Ptr<_1a6855e41_Expr> _field_expr = jule::Ptr<_1a6855e41_Expr>();
	jule::Slice<jule::Ptr<_1a6866dca_Case>> _field_cases = jule::Slice<jule::Ptr<_1a6866dca_Case>>();
	jule::Ptr<_1a6865d0d_Else> _field_default = jule::Ptr<_1a6865d0d_Else>();
	

	_1a68675a1_MatchCase(void) = default;

	inline bool operator==(_1a68675a1_MatchCase _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_type_match == _other._field_type_match &&
			this->_field_expr == _other._field_expr &&
			this->_field_cases == _other._field_cases &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1a68675a1_MatchCase _other) { return !this->operator==(_other); }


};
struct _1a6867d43_UseDecl {
	jule::Ptr<_1a527737a_Token> _field_token = jule::Ptr<_1a527737a_Token>();
	jule::Str _field_link_path = jule::Str();
	jule::Str _field_alias = jule::Str();
	jule::Bool _field_full = jule::Bool();
	jule::Slice<jule::Ptr<_1a527737a_Token>> _field_selected = jule::Slice<jule::Ptr<_1a527737a_Token>>();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_std = jule::Bool();
	

	_1a6867d43_UseDecl(void) = default;

	inline bool operator==(_1a6867d43_UseDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_link_path == _other._field_link_path &&
			this->_field_alias == _other._field_alias &&
			this->_field_full == _other._field_full &&
			this->_field_selected == _other._field_selected &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_std == _other._field_std;
	}

	inline bool operator!=(_1a6867d43_UseDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a6868849_auto_expr(_1a68682b6_EnumItemDecl*);
struct _1a68682b6_EnumItemDecl {
	jule::Ptr<_1a527737a_Token> _field_token = jule::Ptr<_1a527737a_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1a6855e41_Expr> _field_expr = jule::Ptr<_1a6855e41_Expr>();
	

	_1a68682b6_EnumItemDecl(void) = default;

	inline bool operator==(_1a68682b6_EnumItemDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1a68682b6_EnumItemDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a6869262_default_typed(_1a6868e10_EnumDecl*);
struct _1a6868e10_EnumDecl {
	jule::Ptr<_1a527737a_Token> _field_token = jule::Ptr<_1a527737a_Token>();
	jule::Bool _field_public = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1a68529cb_TypeDecl> _field_kind = jule::Ptr<_1a68529cb_TypeDecl>();
	jule::Slice<jule::Ptr<_1a68682b6_EnumItemDecl>> _field_items = jule::Slice<jule::Ptr<_1a68682b6_EnumItemDecl>>();
	jule::Ptr<_1a527737a_Token> _field_end = jule::Ptr<_1a527737a_Token>();
	

	_1a6868e10_EnumDecl(void) = default;

	inline bool operator==(_1a6868e10_EnumDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_public == _other._field_public &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind &&
			this->_field_items == _other._field_items &&
			this->_field_end == _other._field_end;
	}

	inline bool operator!=(_1a6868e10_EnumDecl _other) { return !this->operator==(_other); }


};
struct _1a6869938_FieldDecl {
	jule::Ptr<_1a527737a_Token> _field_token = jule::Ptr<_1a527737a_Token>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1a68529cb_TypeDecl> _field_kind = jule::Ptr<_1a68529cb_TypeDecl>();
	jule::Ptr<_1a6855e41_Expr> _field_default = jule::Ptr<_1a6855e41_Expr>();
	

	_1a6869938_FieldDecl(void) = default;

	inline bool operator==(_1a6869938_FieldDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_public == _other._field_public &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1a6869938_FieldDecl _other) { return !this->operator==(_other); }


};
struct _1a686a296_StructDecl {
	jule::Ptr<_1a527737a_Token> _field_token = jule::Ptr<_1a527737a_Token>();
	jule::Ptr<_1a527737a_Token> _field_end = jule::Ptr<_1a527737a_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_1a6869938_FieldDecl>> _field_fields = jule::Slice<jule::Ptr<_1a6869938_FieldDecl>>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Slice<jule::Ptr<_1a6852525_Directive>> _field_directives = jule::Slice<jule::Ptr<_1a6852525_Directive>>();
	jule::Slice<jule::Ptr<_1a685d960_GenericDecl>> _field_generics = jule::Slice<jule::Ptr<_1a685d960_GenericDecl>>();
	

	_1a686a296_StructDecl(void) = default;

	inline bool operator==(_1a686a296_StructDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_ident == _other._field_ident &&
			this->_field_fields == _other._field_fields &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_directives == _other._field_directives &&
			this->_field_generics == _other._field_generics;
	}

	inline bool operator!=(_1a686a296_StructDecl _other) { return !this->operator==(_other); }


};
struct _1a686a8a1_TraitDecl {
	jule::Ptr<_1a527737a_Token> _field_token = jule::Ptr<_1a527737a_Token>();
	jule::Ptr<_1a527737a_Token> _field_end = jule::Ptr<_1a527737a_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_public = jule::Bool();
	jule::Slice<jule::Ptr<_1a6862205_FnDecl>> _field_methods = jule::Slice<jule::Ptr<_1a6862205_FnDecl>>();
	

	_1a686a8a1_TraitDecl(void) = default;

	inline bool operator==(_1a686a8a1_TraitDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_ident == _other._field_ident &&
			this->_field_public == _other._field_public &&
			this->_field_methods == _other._field_methods;
	}

	inline bool operator!=(_1a686a8a1_TraitDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a686b31e_is_trait_impl(_1a686aeab_Impl*);
inline jule::Bool _1a686b583_is_struct_impl(_1a686aeab_Impl*);
struct _1a686aeab_Impl {
	jule::Ptr<_1a527737a_Token> _field_end = jule::Ptr<_1a527737a_Token>();
	jule::Ptr<_1a68529cb_TypeDecl> _field_base = jule::Ptr<_1a68529cb_TypeDecl>();
	jule::Ptr<_1a68529cb_TypeDecl> _field_dest = jule::Ptr<_1a68529cb_TypeDecl>();
	jule::Slice<jule::Ptr<_1a6862205_FnDecl>> _field_methods = jule::Slice<jule::Ptr<_1a6862205_FnDecl>>();
	jule::Slice<jule::Ptr<_1a68631d4_VarDecl>> _field_statics = jule::Slice<jule::Ptr<_1a68631d4_VarDecl>>();
	

	_1a686aeab_Impl(void) = default;

	inline bool operator==(_1a686aeab_Impl _other) {
		return 
			this->_field_end == _other._field_end &&
			this->_field_base == _other._field_base &&
			this->_field_dest == _other._field_dest &&
			this->_field_methods == _other._field_methods &&
			this->_field_statics == _other._field_statics;
	}

	inline bool operator!=(_1a686aeab_Impl _other) { return !this->operator==(_other); }


};
struct _1a72b4cde_FloatInfo {
	jule::U64 _field_mantbits = jule::U64();
	jule::U64 _field_expbits = jule::U64();
	jule::I64 _field_bias = jule::I64();
	

	_1a72b4cde_FloatInfo(void) = default;

	inline bool operator==(_1a72b4cde_FloatInfo _other) {
		return 
			this->_field_mantbits == _other._field_mantbits &&
			this->_field_expbits == _other._field_expbits &&
			this->_field_bias == _other._field_bias;
	}

	inline bool operator!=(_1a72b4cde_FloatInfo _other) { return !this->operator==(_other); }


};
struct _1a6d11bc1_DecimalSlice {
	jule::Slice<jule::U8> _field_d = jule::Slice<jule::U8>();
	jule::I64 _field_nd = jule::I64();
	jule::I64 _field_dp = jule::I64();
	jule::Bool _field_neg = jule::Bool();
	

	_1a6d11bc1_DecimalSlice(void) = default;

	inline bool operator==(_1a6d11bc1_DecimalSlice _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg;
	}

	inline bool operator!=(_1a6d11bc1_DecimalSlice _other) { return !this->operator==(_other); }


};
struct _1a753757d_LeftCheat {
	jule::I64 _field_delta = jule::I64();
	jule::Str _field_cutoff = jule::Str();
	

	_1a753757d_LeftCheat(void) = default;

	inline bool operator==(_1a753757d_LeftCheat _other) {
		return 
			this->_field_delta == _other._field_delta &&
			this->_field_cutoff == _other._field_cutoff;
	}

	inline bool operator!=(_1a753757d_LeftCheat _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a7303756_set(_1a753776a_Decimal*, jule::Str);
inline std::tuple<jule::U64,jule::Bool> _1a715606a_float_bits(_1a753776a_Decimal*, _1a72b4cde_FloatInfo&);
inline void _1a7537957_assign(_1a753776a_Decimal*, jule::U64);
inline void _1a7537a89_shift(_1a753776a_Decimal*, jule::I64);
inline void _1a7537bbb_round_down(_1a753776a_Decimal*, jule::I64);
inline void _1a7537ced_round_up(_1a753776a_Decimal*, jule::I64);
inline void _1a7537e30_round(_1a753776a_Decimal*, jule::I64);
inline jule::U64 _1a7538062_rounded_integer(_1a753776a_Decimal*);
struct _1a753776a_Decimal {
	jule::Array<jule::U8,800> _field_d = jule::Array<jule::U8,800>();
	jule::I64 _field_nd = jule::I64();
	jule::I64 _field_dp = jule::I64();
	jule::Bool _field_neg = jule::Bool();
	jule::Bool _field_trunc = jule::Bool();
	

	_1a753776a_Decimal(void) = default;

	inline bool operator==(_1a753776a_Decimal _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg &&
			this->_field_trunc == _other._field_trunc;
	}

	inline bool operator!=(_1a753776a_Decimal _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a75c3251_Const> static__1a75c2250_new_i64(jule::I64);
inline jule::Ptr<_1a75c3251_Const> static__1a75c343d_new_u64(jule::U64);
inline jule::Ptr<_1a75c3251_Const> static__1a75c3691_new_bool(jule::Bool);
inline jule::Ptr<_1a75c3251_Const> static__1a75c3938_new_str(jule::Str);
inline jule::Ptr<_1a75c3251_Const> static__1a75c3bd0_new_f64(jule::F64);
inline jule::Ptr<_1a75c3251_Const> static__1a75c3dcd_new_nil(void);
inline jule::I64 _1a75c44c7_read_i64(_1a75c3251_Const*);
inline jule::U64 _1a75c473b_read_u64(_1a75c3251_Const*);
inline jule::Bool _1a75c49a0_read_bool(_1a75c3251_Const*);
inline jule::Str _1a75c4c14_read_str(_1a75c3251_Const*);
inline jule::F64 _1a75c4e78_read_f64(_1a75c3251_Const*);
inline jule::I64 _1a75c51dc_as_i64(_1a75c3251_Const*);
inline jule::U64 _1a75c5451_as_u64(_1a75c3251_Const*);
inline jule::F64 _1a75c56b5_as_f64(_1a75c3251_Const*);
inline void _1a75c593a_set_i64(_1a75c3251_Const*, jule::I64);
inline void _1a75c5bb0_set_u64(_1a75c3251_Const*, jule::U64);
inline void _1a75c5e35_set_bool(_1a75c3251_Const*, jule::Bool);
inline void _1a75c61aa_set_str(_1a75c3251_Const*, jule::Str);
inline void _1a75c6430_set_f64(_1a75c3251_Const*, jule::F64);
inline void _1a75c660b_set_nil(_1a75c3251_Const*);
inline jule::Bool _1a75c6870_is_i64(_1a75c3251_Const*);
inline jule::Bool _1a75c6ad4_is_u64(_1a75c3251_Const*);
inline jule::Bool _1a75c6d48_is_bool(_1a75c3251_Const*);
inline jule::Bool _1a75c70ac_is_str(_1a75c3251_Const*);
inline jule::Bool _1a75c7321_is_f64(_1a75c3251_Const*);
inline jule::Bool _1a75c7585_is_nil(_1a75c3251_Const*);
inline jule::Bool _1a75c7893_are_same_types(_1a75c3251_Const*, _1a75c3251_Const);
inline jule::Bool _1a75c7ba1_and(_1a75c3251_Const*, _1a75c3251_Const);
inline jule::Bool _1a75c7eae_or(_1a75c3251_Const*, _1a75c3251_Const);
inline jule::Bool _1a75c82bc_eq(_1a75c3251_Const*, _1a75c3251_Const);
inline jule::Bool _1a75c85ca_lt(_1a75c3251_Const*, _1a75c3251_Const);
inline jule::Bool _1a75c88d8_lt_eq(_1a75c3251_Const*, _1a75c3251_Const);
inline jule::Bool _1a75c8be6_gt(_1a75c3251_Const*, _1a75c3251_Const);
inline jule::Bool _1a75c9004_gt_eq(_1a75c3251_Const*, _1a75c3251_Const);
inline jule::Bool _1a75c9312_add(_1a75c3251_Const*, _1a75c3251_Const);
inline jule::Bool _1a75c9620_sub(_1a75c3251_Const*, _1a75c3251_Const);
inline jule::Bool _1a75c992d_mul(_1a75c3251_Const*, _1a75c3251_Const);
inline jule::Bool _1a75c9c3b_div(_1a75c3251_Const*, _1a75c3251_Const);
inline jule::Bool _1a75ca049_mod(_1a75c3251_Const*, _1a75c3251_Const);
inline jule::Bool _1a75ca357_bitwise_and(_1a75c3251_Const*, _1a75c3251_Const);
inline jule::Bool _1a75ca665_bitwise_or(_1a75c3251_Const*, _1a75c3251_Const);
inline jule::Bool _1a75ca973_xor(_1a75c3251_Const*, _1a75c3251_Const);
inline jule::Bool _1a75cac81_lshift(_1a75c3251_Const*, _1a75c3251_Const);
inline jule::Bool _1a75cb08e_rshift(_1a75c3251_Const*, _1a75c3251_Const);
struct _1a75c3251_Const {
	jule::Any _field_data = jule::Any();
	

	_1a75c3251_Const(void) = default;

	inline jule::Bool operator==(_1a75c3251_Const _other) { return _1a75c82bc_eq(this, _other); }

	inline bool operator!=(_1a75c3251_Const _other) { return !this->operator==(_other); }

	inline jule::Bool operator>(_1a75c3251_Const _other) { return _1a75c8be6_gt(this, _other); }

	inline jule::Bool operator>=(_1a75c3251_Const _other) { return _1a75c9004_gt_eq(this, _other); }

	inline jule::Bool operator<(_1a75c3251_Const _other) { return _1a75c85ca_lt(this, _other); }

	inline jule::Bool operator<=(_1a75c3251_Const _other) { return _1a75c88d8_lt_eq(this, _other); }


};
inline jule::Ptr<_1a6830899_FieldIns> _1a67ddc0e_instance(jule::Ptr<_1a6844a23_Field>);
struct _1a6844a23_Field {
	jule::Ptr<_1a6826829_Struct> _field_owner = jule::Ptr<_1a6826829_Struct>();
	jule::Ptr<_1a527737a_Token> _field_token = jule::Ptr<_1a527737a_Token>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1a772b772_TypeSymbol> _field_kind = jule::Ptr<_1a772b772_TypeSymbol>();
	jule::Ptr<_1a6855e41_Expr> _field_default = jule::Ptr<_1a6855e41_Expr>();
	

	_1a6844a23_Field(void) = default;

	inline bool operator==(_1a6844a23_Field _other) {
		return 
			this->_field_owner == _other._field_owner &&
			this->_field_token == _other._field_token &&
			this->_field_public == _other._field_public &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1a6844a23_Field _other) { return !this->operator==(_other); }


};
struct _1a683aed1_Operators {
	jule::Ptr<_1a6872c93_FnIns> _field_eq = jule::Ptr<_1a6872c93_FnIns>();
	jule::Ptr<_1a6872c93_FnIns> _field_gt = jule::Ptr<_1a6872c93_FnIns>();
	jule::Ptr<_1a6872c93_FnIns> _field_gt_eq = jule::Ptr<_1a6872c93_FnIns>();
	jule::Ptr<_1a6872c93_FnIns> _field_lt = jule::Ptr<_1a6872c93_FnIns>();
	jule::Ptr<_1a6872c93_FnIns> _field_lt_eq = jule::Ptr<_1a6872c93_FnIns>();
	jule::Ptr<_1a6872c93_FnIns> _field_shl = jule::Ptr<_1a6872c93_FnIns>();
	jule::Ptr<_1a6872c93_FnIns> _field_shr = jule::Ptr<_1a6872c93_FnIns>();
	jule::Ptr<_1a6872c93_FnIns> _field_add = jule::Ptr<_1a6872c93_FnIns>();
	jule::Ptr<_1a6872c93_FnIns> _field_sub = jule::Ptr<_1a6872c93_FnIns>();
	jule::Ptr<_1a6872c93_FnIns> _field_div = jule::Ptr<_1a6872c93_FnIns>();
	jule::Ptr<_1a6872c93_FnIns> _field_mul = jule::Ptr<_1a6872c93_FnIns>();
	jule::Ptr<_1a6872c93_FnIns> _field_mod = jule::Ptr<_1a6872c93_FnIns>();
	jule::Ptr<_1a6872c93_FnIns> _field_bit_and = jule::Ptr<_1a6872c93_FnIns>();
	jule::Ptr<_1a6872c93_FnIns> _field_bit_or = jule::Ptr<_1a6872c93_FnIns>();
	jule::Ptr<_1a6872c93_FnIns> _field_bit_xor = jule::Ptr<_1a6872c93_FnIns>();
	jule::Ptr<_1a6872c93_FnIns> _field_neg = jule::Ptr<_1a6872c93_FnIns>();
	jule::Ptr<_1a6872c93_FnIns> _field_pos = jule::Ptr<_1a6872c93_FnIns>();
	jule::Ptr<_1a6872c93_FnIns> _field_bit_not = jule::Ptr<_1a6872c93_FnIns>();
	jule::Ptr<_1a6872c93_FnIns> _field_add_assign = jule::Ptr<_1a6872c93_FnIns>();
	jule::Ptr<_1a6872c93_FnIns> _field_sub_assign = jule::Ptr<_1a6872c93_FnIns>();
	jule::Ptr<_1a6872c93_FnIns> _field_div_assign = jule::Ptr<_1a6872c93_FnIns>();
	jule::Ptr<_1a6872c93_FnIns> _field_mul_assign = jule::Ptr<_1a6872c93_FnIns>();
	jule::Ptr<_1a6872c93_FnIns> _field_mod_assign = jule::Ptr<_1a6872c93_FnIns>();
	jule::Ptr<_1a6872c93_FnIns> _field_shl_assign = jule::Ptr<_1a6872c93_FnIns>();
	jule::Ptr<_1a6872c93_FnIns> _field_shr_assign = jule::Ptr<_1a6872c93_FnIns>();
	jule::Ptr<_1a6872c93_FnIns> _field_bit_or_assign = jule::Ptr<_1a6872c93_FnIns>();
	jule::Ptr<_1a6872c93_FnIns> _field_bit_and_assign = jule::Ptr<_1a6872c93_FnIns>();
	jule::Ptr<_1a6872c93_FnIns> _field_bit_xor_assign = jule::Ptr<_1a6872c93_FnIns>();
	

	_1a683aed1_Operators(void) = default;

	inline bool operator==(_1a683aed1_Operators _other) {
		return 
			this->_field_eq == _other._field_eq &&
			this->_field_gt == _other._field_gt &&
			this->_field_gt_eq == _other._field_gt_eq &&
			this->_field_lt == _other._field_lt &&
			this->_field_lt_eq == _other._field_lt_eq &&
			this->_field_shl == _other._field_shl &&
			this->_field_shr == _other._field_shr &&
			this->_field_add == _other._field_add &&
			this->_field_sub == _other._field_sub &&
			this->_field_div == _other._field_div &&
			this->_field_mul == _other._field_mul &&
			this->_field_mod == _other._field_mod &&
			this->_field_bit_and == _other._field_bit_and &&
			this->_field_bit_or == _other._field_bit_or &&
			this->_field_bit_xor == _other._field_bit_xor &&
			this->_field_neg == _other._field_neg &&
			this->_field_pos == _other._field_pos &&
			this->_field_bit_not == _other._field_bit_not &&
			this->_field_add_assign == _other._field_add_assign &&
			this->_field_sub_assign == _other._field_sub_assign &&
			this->_field_div_assign == _other._field_div_assign &&
			this->_field_mul_assign == _other._field_mul_assign &&
			this->_field_mod_assign == _other._field_mod_assign &&
			this->_field_shl_assign == _other._field_shl_assign &&
			this->_field_shr_assign == _other._field_shr_assign &&
			this->_field_bit_or_assign == _other._field_bit_or_assign &&
			this->_field_bit_and_assign == _other._field_bit_and_assign &&
			this->_field_bit_xor_assign == _other._field_bit_xor_assign;
	}

	inline bool operator!=(_1a683aed1_Operators _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a6836a48_StructIns> _1a6829387_instance(jule::Ptr<_1a6826829_Struct>);
inline jule::Ptr<_1a6836a48_StructIns> _1a682984e_append_instance(_1a6826829_Struct*, jule::Ptr<_1a6836a48_StructIns>&);
inline jule::Ptr<_1a68709c7_Fn> _1a682ae16_find_method(_1a6826829_Struct*, jule::Str, jule::Bool);
inline jule::Ptr<_1a76a7720_Var> _1a682be6c_find_static(_1a6826829_Struct*, jule::Str);
inline jule::Ptr<_1a6844a23_Field> _1a682d6dd_find_field(_1a6826829_Struct*, jule::Str);
inline jule::Bool _1a682e8cb_is_implements(_1a6826829_Struct*, jule::Ptr<_1a68d46b7_Trait>);
inline jule::Bool _1a68312c3_is_derives(_1a6826829_Struct*, jule::Str);
inline jule::Bool _1a682b378_is_uses(_1a6826829_Struct*, jule::Ptr<_1a6826829_Struct>);
inline jule::Bool _1a6838c04_has_ref_accessible(_1a6826829_Struct*);
struct _1a6826829_Struct {
	jule::Ptr<_1a768cc22_Sema> _field_sema = jule::Ptr<_1a768cc22_Sema>();
	jule::Slice<jule::Ptr<_1a6826829_Struct>> _field_depends = jule::Slice<jule::Ptr<_1a6826829_Struct>>();
	jule::Slice<jule::Ptr<_1a6826829_Struct>> _field_uses = jule::Slice<jule::Ptr<_1a6826829_Struct>>();
	jule::Ptr<_1a527737a_Token> _field_token = jule::Ptr<_1a527737a_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_1a6844a23_Field>> _field_fields = jule::Slice<jule::Ptr<_1a6844a23_Field>>();
	jule::Slice<jule::Ptr<_1a68709c7_Fn>> _field_methods = jule::Slice<jule::Ptr<_1a68709c7_Fn>>();
	jule::Slice<jule::Ptr<_1a76a7720_Var>> _field_statics = jule::Slice<jule::Ptr<_1a76a7720_Var>>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Slice<jule::Ptr<_1a6852525_Directive>> _field_directives = jule::Slice<jule::Ptr<_1a6852525_Directive>>();
	jule::Slice<jule::Ptr<_1a685d960_GenericDecl>> _field_generics = jule::Slice<jule::Ptr<_1a685d960_GenericDecl>>();
	jule::Slice<jule::Ptr<_1a68d46b7_Trait>> _field_implements = jule::Slice<jule::Ptr<_1a68d46b7_Trait>>();
	jule::Slice<jule::Ptr<_1a6836a48_StructIns>> _field_instances = jule::Slice<jule::Ptr<_1a6836a48_StructIns>>();
	

	_1a6826829_Struct(void) = default;

	inline bool operator==(_1a6826829_Struct _other) {
		return 
			this->_field_sema == _other._field_sema &&
			this->_field_depends == _other._field_depends &&
			this->_field_uses == _other._field_uses &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_fields == _other._field_fields &&
			this->_field_methods == _other._field_methods &&
			this->_field_statics == _other._field_statics &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_directives == _other._field_directives &&
			this->_field_generics == _other._field_generics &&
			this->_field_implements == _other._field_implements &&
			this->_field_instances == _other._field_instances;
	}

	inline bool operator!=(_1a6826829_Struct _other) { return !this->operator==(_other); }


};
struct _1a6830899_FieldIns {
	jule::Ptr<_1a6844a23_Field> _field_decl = jule::Ptr<_1a6844a23_Field>();
	jule::Ptr<_1a77278d3_TypeKind> _field_kind = jule::Ptr<_1a77278d3_TypeKind>();
	jule::Ptr<_1a76edda4_Data> _field_default = jule::Ptr<_1a76edda4_Data>();
	

	_1a6830899_FieldIns(void) = default;

	inline bool operator==(_1a6830899_FieldIns _other) {
		return 
			this->_field_decl == _other._field_decl &&
			this->_field_kind == _other._field_kind &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1a6830899_FieldIns _other) { return !this->operator==(_other); }


};
struct _1a68382db_OperandExprModel {
	jule::Ptr<_1a77278d3_TypeKind> _field_kind = jule::Ptr<_1a77278d3_TypeKind>();
	jule::Any _field_model = jule::Any();
	

	_1a68382db_OperandExprModel(void) = default;

	inline bool operator==(_1a68382db_OperandExprModel _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_1a68382db_OperandExprModel _other) { return !this->operator==(_other); }


};
struct _1a684b145_BinopExprModel {
	jule::Ptr<_1a68382db_OperandExprModel> _field_left = jule::Ptr<_1a68382db_OperandExprModel>();
	jule::Ptr<_1a68382db_OperandExprModel> _field_right = jule::Ptr<_1a68382db_OperandExprModel>();
	jule::Ptr<_1a527737a_Token> _field_op = jule::Ptr<_1a527737a_Token>();
	

	_1a684b145_BinopExprModel(void) = default;

	inline bool operator==(_1a684b145_BinopExprModel _other) {
		return 
			this->_field_left == _other._field_left &&
			this->_field_right == _other._field_right &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1a684b145_BinopExprModel _other) { return !this->operator==(_other); }


};
struct _1a6849e79_UnaryExprModel {
	jule::Ptr<_1a76edda4_Data> _field_expr = jule::Ptr<_1a76edda4_Data>();
	jule::Ptr<_1a527737a_Token> _field_op = jule::Ptr<_1a527737a_Token>();
	

	_1a6849e79_UnaryExprModel(void) = default;

	inline bool operator==(_1a6849e79_UnaryExprModel _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1a6849e79_UnaryExprModel _other) { return !this->operator==(_other); }


};
struct _1a6827e8a_StructArgExprModel {
	jule::Ptr<_1a6830899_FieldIns> _field_field = jule::Ptr<_1a6830899_FieldIns>();
	jule::Any _field_expr = jule::Any();
	

	_1a6827e8a_StructArgExprModel(void) = default;

	inline bool operator==(_1a6827e8a_StructArgExprModel _other) {
		return 
			this->_field_field == _other._field_field &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1a6827e8a_StructArgExprModel _other) { return !this->operator==(_other); }


};
struct _1a682b752_StructLitExprModel {
	jule::Ptr<_1a6836a48_StructIns> _field_strct = jule::Ptr<_1a6836a48_StructIns>();
	jule::Slice<jule::Ptr<_1a6827e8a_StructArgExprModel>> _field_args = jule::Slice<jule::Ptr<_1a6827e8a_StructArgExprModel>>();
	

	_1a682b752_StructLitExprModel(void) = default;

	inline bool operator==(_1a682b752_StructLitExprModel _other) {
		return 
			this->_field_strct == _other._field_strct &&
			this->_field_args == _other._field_args;
	}

	inline bool operator!=(_1a682b752_StructLitExprModel _other) { return !this->operator==(_other); }


};
struct _1a68225b1_AllocStructLitExprModel {
	jule::Ptr<_1a682b752_StructLitExprModel> _field_lit = jule::Ptr<_1a682b752_StructLitExprModel>();
	

	_1a68225b1_AllocStructLitExprModel(void) = default;

	inline bool operator==(_1a68225b1_AllocStructLitExprModel _other) {
		return 
			this->_field_lit == _other._field_lit;
	}

	inline bool operator!=(_1a68225b1_AllocStructLitExprModel _other) { return !this->operator==(_other); }


};
struct _1a684003a_CastingExprModel {
	jule::Ptr<_1a527737a_Token> _field_token = jule::Ptr<_1a527737a_Token>();
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_1a77278d3_TypeKind> _field_kind = jule::Ptr<_1a77278d3_TypeKind>();
	jule::Ptr<_1a77278d3_TypeKind> _field_expr_kind = jule::Ptr<_1a77278d3_TypeKind>();
	

	_1a684003a_CastingExprModel(void) = default;

	inline bool operator==(_1a684003a_CastingExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_kind == _other._field_kind &&
			this->_field_expr_kind == _other._field_expr_kind;
	}

	inline bool operator!=(_1a684003a_CastingExprModel _other) { return !this->operator==(_other); }


};
struct _1a6845150_FnCallExprModel {
	jule::Ptr<_1a527737a_Token> _field_token = jule::Ptr<_1a527737a_Token>();
	jule::Ptr<_1a6872c93_FnIns> _field_func = jule::Ptr<_1a6872c93_FnIns>();
	jule::Bool _field_is_co = jule::Bool();
	jule::Any _field_expr = jule::Any();
	jule::Slice<jule::Any> _field_args = jule::Slice<jule::Any>();
	jule::Ptr<_1a7658803_Scope> _field_except = jule::Ptr<_1a7658803_Scope>();
	jule::Bool _field_assigned = jule::Bool();
	

	_1a6845150_FnCallExprModel(void) = default;

	inline bool operator==(_1a6845150_FnCallExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_func == _other._field_func &&
			this->_field_is_co == _other._field_is_co &&
			this->_field_expr == _other._field_expr &&
			this->_field_args == _other._field_args &&
			this->_field_except == _other._field_except &&
			this->_field_assigned == _other._field_assigned;
	}

	inline bool operator!=(_1a6845150_FnCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a684533c_SliceExprModel {
	jule::Ptr<_1a77278d3_TypeKind> _field_elem_kind = jule::Ptr<_1a77278d3_TypeKind>();
	jule::Slice<jule::Any> _field_elems = jule::Slice<jule::Any>();
	

	_1a684533c_SliceExprModel(void) = default;

	inline bool operator==(_1a684533c_SliceExprModel _other) {
		return 
			this->_field_elem_kind == _other._field_elem_kind &&
			this->_field_elems == _other._field_elems;
	}

	inline bool operator!=(_1a684533c_SliceExprModel _other) { return !this->operator==(_other); }


};
struct _1a686b770_IndexingExprModel {
	jule::Ptr<_1a527737a_Token> _field_token = jule::Ptr<_1a527737a_Token>();
	jule::Ptr<_1a76edda4_Data> _field_expr = jule::Ptr<_1a76edda4_Data>();
	jule::Ptr<_1a76edda4_Data> _field_index = jule::Ptr<_1a76edda4_Data>();
	

	_1a686b770_IndexingExprModel(void) = default;

	inline bool operator==(_1a686b770_IndexingExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_index == _other._field_index;
	}

	inline bool operator!=(_1a686b770_IndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1a686b95c_AnonFnExprModel {
	jule::Ptr<_1a6872c93_FnIns> _field_func = jule::Ptr<_1a6872c93_FnIns>();
	jule::Bool _field_global = jule::Bool();
	

	_1a686b95c_AnonFnExprModel(void) = default;

	inline bool operator==(_1a686b95c_AnonFnExprModel _other) {
		return 
			this->_field_func == _other._field_func &&
			this->_field_global == _other._field_global;
	}

	inline bool operator!=(_1a686b95c_AnonFnExprModel _other) { return !this->operator==(_other); }


};
struct _1a686bb49_KeyValPairExprModel {
	jule::Any _field_key = jule::Any();
	jule::Any _field_val = jule::Any();
	

	_1a686bb49_KeyValPairExprModel(void) = default;

	inline bool operator==(_1a686bb49_KeyValPairExprModel _other) {
		return 
			this->_field_key == _other._field_key &&
			this->_field_val == _other._field_val;
	}

	inline bool operator!=(_1a686bb49_KeyValPairExprModel _other) { return !this->operator==(_other); }


};
struct _1a686bd36_MapExprModel {
	jule::Ptr<_1a77278d3_TypeKind> _field_key_kind = jule::Ptr<_1a77278d3_TypeKind>();
	jule::Ptr<_1a77278d3_TypeKind> _field_val_kind = jule::Ptr<_1a77278d3_TypeKind>();
	jule::Slice<jule::Ptr<_1a686bb49_KeyValPairExprModel>> _field_entries = jule::Slice<jule::Ptr<_1a686bb49_KeyValPairExprModel>>();
	

	_1a686bd36_MapExprModel(void) = default;

	inline bool operator==(_1a686bd36_MapExprModel _other) {
		return 
			this->_field_key_kind == _other._field_key_kind &&
			this->_field_val_kind == _other._field_val_kind &&
			this->_field_entries == _other._field_entries;
	}

	inline bool operator!=(_1a686bd36_MapExprModel _other) { return !this->operator==(_other); }


};
struct _1a686c023_SlicingExprModel {
	jule::Ptr<_1a527737a_Token> _field_token = jule::Ptr<_1a527737a_Token>();
	jule::Any _field_expr = jule::Any();
	jule::Any _field_left = jule::Any();
	jule::Any _field_right = jule::Any();
	

	_1a686c023_SlicingExprModel(void) = default;

	inline bool operator==(_1a686c023_SlicingExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_left == _other._field_left &&
			this->_field_right == _other._field_right;
	}

	inline bool operator!=(_1a686c023_SlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1a686c210_TraitSubIdentExprModel {
	jule::Ptr<_1a527737a_Token> _field_token = jule::Ptr<_1a527737a_Token>();
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_1a68709c7_Fn> _field_method = jule::Ptr<_1a68709c7_Fn>();
	jule::Ptr<_1a68d46b7_Trait> _field_trt = jule::Ptr<_1a68d46b7_Trait>();
	

	_1a686c210_TraitSubIdentExprModel(void) = default;

	inline bool operator==(_1a686c210_TraitSubIdentExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_method == _other._field_method &&
			this->_field_trt == _other._field_trt;
	}

	inline bool operator!=(_1a686c210_TraitSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1a686c62d_StructSubIdentExprModel {
	jule::Ptr<_1a527737a_Token> _field_token = jule::Ptr<_1a527737a_Token>();
	jule::Ptr<_1a76edda4_Data> _field_expr = jule::Ptr<_1a76edda4_Data>();
	jule::Ptr<_1a77278d3_TypeKind> _field_expr_kind = jule::Ptr<_1a77278d3_TypeKind>();
	jule::Ptr<_1a6872c93_FnIns> _field_method = jule::Ptr<_1a6872c93_FnIns>();
	jule::Ptr<_1a6830899_FieldIns> _field_field = jule::Ptr<_1a6830899_FieldIns>();
	

	_1a686c62d_StructSubIdentExprModel(void) = default;

	inline bool operator==(_1a686c62d_StructSubIdentExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_expr_kind == _other._field_expr_kind &&
			this->_field_method == _other._field_method &&
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1a686c62d_StructSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1a686c81a_StructStaticIdentExprModel {
	jule::Ptr<_1a6836a48_StructIns> _field_structure = jule::Ptr<_1a6836a48_StructIns>();
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_1a6872c93_FnIns> _field_method = jule::Ptr<_1a6872c93_FnIns>();
	

	_1a686c81a_StructStaticIdentExprModel(void) = default;

	inline bool operator==(_1a686c81a_StructStaticIdentExprModel _other) {
		return 
			this->_field_structure == _other._field_structure &&
			this->_field_expr == _other._field_expr &&
			this->_field_method == _other._field_method;
	}

	inline bool operator!=(_1a686c81a_StructStaticIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1a686ca07_ArrayExprModel {
	jule::Ptr<_1a773324b_Arr> _field_kind = jule::Ptr<_1a773324b_Arr>();
	jule::Slice<jule::Any> _field_elems = jule::Slice<jule::Any>();
	

	_1a686ca07_ArrayExprModel(void) = default;

	inline bool operator==(_1a686ca07_ArrayExprModel _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_elems == _other._field_elems;
	}

	inline bool operator!=(_1a686ca07_ArrayExprModel _other) { return !this->operator==(_other); }


};
struct _1a686cbe4_CommonIdentExprModel {
	jule::Str _field_ident = jule::Str();
	

	_1a686cbe4_CommonIdentExprModel(void) = default;

	inline bool operator==(_1a686cbe4_CommonIdentExprModel _other) {
		return 
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1a686cbe4_CommonIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1a686cdd1_CommonSubIdentExprModel {
	jule::Ptr<_1a77278d3_TypeKind> _field_expr_kind = jule::Ptr<_1a77278d3_TypeKind>();
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_1a527737a_Token> _field_token = jule::Ptr<_1a527737a_Token>();
	jule::Str _field_ident = jule::Str();
	

	_1a686cdd1_CommonSubIdentExprModel(void) = default;

	inline bool operator==(_1a686cdd1_CommonSubIdentExprModel _other) {
		return 
			this->_field_expr_kind == _other._field_expr_kind &&
			this->_field_expr == _other._field_expr &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1a686cdd1_CommonSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1a686d0bd_TupleExprModel {
	jule::Slice<jule::Ptr<_1a76edda4_Data>> _field_datas = jule::Slice<jule::Ptr<_1a76edda4_Data>>();
	

	_1a686d0bd_TupleExprModel(void) = default;

	inline bool operator==(_1a686d0bd_TupleExprModel _other) {
		return 
			this->_field_datas == _other._field_datas;
	}

	inline bool operator!=(_1a686d0bd_TupleExprModel _other) { return !this->operator==(_other); }


};
struct _1a686d2aa_BuiltinOutCallExprModel {
	jule::Any _field_expr = jule::Any();
	jule::Bool _field_debug = jule::Bool();
	

	_1a686d2aa_BuiltinOutCallExprModel(void) = default;

	inline bool operator==(_1a686d2aa_BuiltinOutCallExprModel _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_debug == _other._field_debug;
	}

	inline bool operator!=(_1a686d2aa_BuiltinOutCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a686d497_BuiltinOutlnCallExprModel {
	jule::Any _field_expr = jule::Any();
	jule::Bool _field_debug = jule::Bool();
	

	_1a686d497_BuiltinOutlnCallExprModel(void) = default;

	inline bool operator==(_1a686d497_BuiltinOutlnCallExprModel _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_debug == _other._field_debug;
	}

	inline bool operator!=(_1a686d497_BuiltinOutlnCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a686d684_BuiltinCloneCallExprModel {
	jule::Any _field_expr = jule::Any();
	

	_1a686d684_BuiltinCloneCallExprModel(void) = default;

	inline bool operator==(_1a686d684_BuiltinCloneCallExprModel _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1a686d684_BuiltinCloneCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a686d871_BuiltinNewCallExprModel {
	jule::Ptr<_1a77278d3_TypeKind> _field_kind = jule::Ptr<_1a77278d3_TypeKind>();
	jule::Any _field_init = jule::Any();
	

	_1a686d871_BuiltinNewCallExprModel(void) = default;

	inline bool operator==(_1a686d871_BuiltinNewCallExprModel _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_init == _other._field_init;
	}

	inline bool operator!=(_1a686d871_BuiltinNewCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a686da5d_BuiltinPanicCallExprModel {
	jule::Ptr<_1a527737a_Token> _field_token = jule::Ptr<_1a527737a_Token>();
	jule::Any _field_expr = jule::Any();
	

	_1a686da5d_BuiltinPanicCallExprModel(void) = default;

	inline bool operator==(_1a686da5d_BuiltinPanicCallExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1a686da5d_BuiltinPanicCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a686dc4a_BuiltinAssertCallExprModel {
	jule::Ptr<_1a527737a_Token> _field_token = jule::Ptr<_1a527737a_Token>();
	jule::Any _field_expr = jule::Any();
	jule::Str _field_log = jule::Str();
	

	_1a686dc4a_BuiltinAssertCallExprModel(void) = default;

	inline bool operator==(_1a686dc4a_BuiltinAssertCallExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_log == _other._field_log;
	}

	inline bool operator!=(_1a686dc4a_BuiltinAssertCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a686de37_BuiltinMakeCallExprModel {
	jule::Ptr<_1a77278d3_TypeKind> _field_kind = jule::Ptr<_1a77278d3_TypeKind>();
	jule::Any _field_len = jule::Any();
	jule::Any _field_cap = jule::Any();
	

	_1a686de37_BuiltinMakeCallExprModel(void) = default;

	inline bool operator==(_1a686de37_BuiltinMakeCallExprModel _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_len == _other._field_len &&
			this->_field_cap == _other._field_cap;
	}

	inline bool operator!=(_1a686de37_BuiltinMakeCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a686e124_BuiltinAppendCallExprModel {
	jule::Any _field_dest = jule::Any();
	jule::Any _field_elements = jule::Any();
	

	_1a686e124_BuiltinAppendCallExprModel(void) = default;

	inline bool operator==(_1a686e124_BuiltinAppendCallExprModel _other) {
		return 
			this->_field_dest == _other._field_dest &&
			this->_field_elements == _other._field_elements;
	}

	inline bool operator!=(_1a686e124_BuiltinAppendCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a686e311_BuiltinCopyCallExprModel {
	jule::Ptr<_1a76edda4_Data> _field_dest = jule::Ptr<_1a76edda4_Data>();
	jule::Ptr<_1a76edda4_Data> _field_src = jule::Ptr<_1a76edda4_Data>();
	

	_1a686e311_BuiltinCopyCallExprModel(void) = default;

	inline bool operator==(_1a686e311_BuiltinCopyCallExprModel _other) {
		return 
			this->_field_dest == _other._field_dest &&
			this->_field_src == _other._field_src;
	}

	inline bool operator!=(_1a686e311_BuiltinCopyCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a686e4ed_BuiltinErrorCallExprModel {
	jule::Ptr<_1a6872c93_FnIns> _field_func = jule::Ptr<_1a6872c93_FnIns>();
	jule::Any _field_err = jule::Any();
	

	_1a686e4ed_BuiltinErrorCallExprModel(void) = default;

	inline bool operator==(_1a686e4ed_BuiltinErrorCallExprModel _other) {
		return 
			this->_field_func == _other._field_func &&
			this->_field_err == _other._field_err;
	}

	inline bool operator!=(_1a686e4ed_BuiltinErrorCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a686c3ec_SizeofExprModel {
	jule::Any _field_expr = jule::Any();
	

	_1a686c3ec_SizeofExprModel(void) = default;

	inline bool operator==(_1a686c3ec_SizeofExprModel _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1a686c3ec_SizeofExprModel _other) { return !this->operator==(_other); }


};
struct _1a686eb5d_AlignofExprModel {
	jule::Any _field_expr = jule::Any();
	

	_1a686eb5d_AlignofExprModel(void) = default;

	inline bool operator==(_1a686eb5d_AlignofExprModel _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1a686eb5d_AlignofExprModel _other) { return !this->operator==(_other); }


};
struct _1a686ed4a_RuneExprModel {
	jule::I32 _field_code = jule::I32();
	

	_1a686ed4a_RuneExprModel(void) = default;

	inline bool operator==(_1a686ed4a_RuneExprModel _other) {
		return 
			this->_field_code == _other._field_code;
	}

	inline bool operator!=(_1a686ed4a_RuneExprModel _other) { return !this->operator==(_other); }


};
struct _1a6870037_IntegratedToStrExprModel {
	jule::Any _field_expr = jule::Any();
	

	_1a6870037_IntegratedToStrExprModel(void) = default;

	inline bool operator==(_1a6870037_IntegratedToStrExprModel _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1a6870037_IntegratedToStrExprModel _other) { return !this->operator==(_other); }


};
struct _1a6870224_BackendEmitExprModel {
	jule::Str _field_code = jule::Str();
	jule::Slice<jule::Any> _field_exprs = jule::Slice<jule::Any>();
	

	_1a6870224_BackendEmitExprModel(void) = default;

	inline bool operator==(_1a6870224_BackendEmitExprModel _other) {
		return 
			this->_field_code == _other._field_code &&
			this->_field_exprs == _other._field_exprs;
	}

	inline bool operator!=(_1a6870224_BackendEmitExprModel _other) { return !this->operator==(_other); }


};
struct _1a6870411_FreeExprModel {
	jule::Any _field_expr = jule::Any();
	

	_1a6870411_FreeExprModel(void) = default;

	inline bool operator==(_1a6870411_FreeExprModel _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1a6870411_FreeExprModel _other) { return !this->operator==(_other); }


};
struct _1a68705ed_RetType {
	jule::Ptr<_1a772b772_TypeSymbol> _field_kind = jule::Ptr<_1a772b772_TypeSymbol>();
	jule::Slice<jule::Ptr<_1a527737a_Token>> _field_idents = jule::Slice<jule::Ptr<_1a527737a_Token>>();
	

	_1a68705ed_RetType(void) = default;

	inline bool operator==(_1a68705ed_RetType _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_idents == _other._field_idents;
	}

	inline bool operator!=(_1a68705ed_RetType _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a6871e07_ParamIns> _1a6847383_instance(jule::Ptr<_1a68707da_Param>);
inline jule::Bool _1a68491ed_is_self(_1a68707da_Param*);
inline jule::Bool _1a6831ba8_is_ref(_1a68707da_Param*);
struct _1a68707da_Param {
	jule::Ptr<_1a527737a_Token> _field_token = jule::Ptr<_1a527737a_Token>();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_variadic = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Ptr<_1a772b772_TypeSymbol> _field_kind = jule::Ptr<_1a772b772_TypeSymbol>();
	jule::Str _field_ident = jule::Str();
	

	_1a68707da_Param(void) = default;

	inline bool operator==(_1a68707da_Param _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_variadic == _other._field_variadic &&
			this->_field_reference == _other._field_reference &&
			this->_field_kind == _other._field_kind &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1a68707da_Param _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a6847eee_is_void(_1a68709c7_Fn*);
inline jule::Bool _1a684ce27_is_method(_1a68709c7_Fn*);
inline jule::Bool _1a6844209_is_entry_point(_1a68709c7_Fn*);
inline jule::Bool _1a6870c91_is_init(_1a68709c7_Fn*);
inline jule::Bool _1a6871005_is_anon(_1a68709c7_Fn*);
inline jule::Bool _1a6871269_any_var(_1a68709c7_Fn*);
inline jule::Ptr<_1a6872c93_FnIns> _1a68714cd_instance_force(jule::Ptr<_1a68709c7_Fn>);
inline jule::Ptr<_1a6872c93_FnIns> _1a6871742_instance(jule::Ptr<_1a68709c7_Fn>);
inline jule::Ptr<_1a6872c93_FnIns> _1a6871a50_append_instance(_1a68709c7_Fn*, jule::Ptr<_1a6872c93_FnIns>&);
struct _1a68709c7_Fn {
	jule::Ptr<_1a768cc22_Sema> _field_sema = jule::Ptr<_1a768cc22_Sema>();
	jule::Ptr<_1a527737a_Token> _field_token = jule::Ptr<_1a527737a_Token>();
	jule::Bool _field_global = jule::Bool();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_statically = jule::Bool();
	jule::Bool _field_exceptional = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_1a6852525_Directive>> _field_directives = jule::Slice<jule::Ptr<_1a6852525_Directive>>();
	jule::Ptr<_1a686070e_ScopeTree> _field_scope = jule::Ptr<_1a686070e_ScopeTree>();
	jule::Slice<jule::Ptr<_1a685d960_GenericDecl>> _field_generics = jule::Slice<jule::Ptr<_1a685d960_GenericDecl>>();
	jule::Ptr<_1a68705ed_RetType> _field_result = jule::Ptr<_1a68705ed_RetType>();
	jule::Slice<jule::Ptr<_1a68707da_Param>> _field_params = jule::Slice<jule::Ptr<_1a68707da_Param>>();
	jule::Ptr<_1a6826829_Struct> _field_owner = jule::Ptr<_1a6826829_Struct>();
	jule::Slice<jule::Ptr<_1a6872c93_FnIns>> _field_instances = jule::Slice<jule::Ptr<_1a6872c93_FnIns>>();
	

	_1a68709c7_Fn(void) = default;

	inline bool operator==(_1a68709c7_Fn _other) {
		return 
			this->_field_sema == _other._field_sema &&
			this->_field_token == _other._field_token &&
			this->_field_global == _other._field_global &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_statically == _other._field_statically &&
			this->_field_exceptional == _other._field_exceptional &&
			this->_field_ident == _other._field_ident &&
			this->_field_directives == _other._field_directives &&
			this->_field_scope == _other._field_scope &&
			this->_field_generics == _other._field_generics &&
			this->_field_result == _other._field_result &&
			this->_field_params == _other._field_params &&
			this->_field_owner == _other._field_owner &&
			this->_field_instances == _other._field_instances;
	}

	inline bool operator!=(_1a68709c7_Fn _other) { return !this->operator==(_other); }


};
inline jule::Str _1a68722d1_to_str(_1a6871e07_ParamIns*);
struct _1a6871e07_ParamIns {
	jule::Ptr<_1a68707da_Param> _field_decl = jule::Ptr<_1a68707da_Param>();
	jule::Ptr<_1a77278d3_TypeKind> _field_kind = jule::Ptr<_1a77278d3_TypeKind>();
	

	_1a6871e07_ParamIns(void) = default;

	inline bool operator==(_1a6871e07_ParamIns _other) {
		return 
			this->_field_decl == _other._field_decl &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1a6871e07_ParamIns _other) { return !this->operator==(_other); }


};
inline jule::Str _1a6873106_to_str(_1a6872c93_FnIns*);
inline jule::Bool _1a6873414_equals(jule::Ptr<_1a6872c93_FnIns>, jule::Ptr<_1a77278d3_TypeKind>);
inline jule::Slice<jule::Ptr<_1a77278d3_TypeKind>> _1a68737aa_types(_1a6872c93_FnIns*);
inline jule::Bool _1a6873a1e_is_builtin(_1a6872c93_FnIns*);
inline jule::Bool _1a6873c83_is_anon(_1a6872c93_FnIns*);
inline jule::Bool _1a6874091_same(_1a6872c93_FnIns*, jule::Ptr<_1a6872c93_FnIns>);
inline jule::Str _1a687439e_get_kind_str(_1a6872c93_FnIns*, jule::Bool);
struct _1a6872c93_FnIns {
	jule::Ptr<_1a6836a48_StructIns> _field_owner = jule::Ptr<_1a6836a48_StructIns>();
	jule::Ptr<_1a68709c7_Fn> _field_decl = jule::Ptr<_1a68709c7_Fn>();
	jule::Slice<jule::Ptr<_1a77278d3_TypeKind>> _field_generics = jule::Slice<jule::Ptr<_1a77278d3_TypeKind>>();
	jule::Slice<jule::Ptr<_1a6871e07_ParamIns>> _field_params = jule::Slice<jule::Ptr<_1a6871e07_ParamIns>>();
	jule::Ptr<_1a77278d3_TypeKind> _field_result = jule::Ptr<_1a77278d3_TypeKind>();
	jule::Ptr<_1a7658803_Scope> _field_scope = jule::Ptr<_1a7658803_Scope>();
	jule::Ptr<_1a6875988_ReferenceStack> _field_refers = jule::Ptr<_1a6875988_ReferenceStack>();
	jule::Bool _field_anon = jule::Bool();
	jule::Fn<jule::Ptr<_1a76edda4_Data>(jule::Ptr<_1a7700922_Eval>&,jule::Ptr<_1a6859e12_FnCallExpr>&,jule::Ptr<_1a76edda4_Data>&)> _field_caller = jule::Fn<jule::Ptr<_1a76edda4_Data>(jule::Ptr<_1a7700922_Eval>&,jule::Ptr<_1a6859e12_FnCallExpr>&,jule::Ptr<_1a76edda4_Data>&)>();
	jule::Bool _field_reloaded = jule::Bool();
	

	_1a6872c93_FnIns(void) = default;

	inline bool operator==(_1a6872c93_FnIns _other) {
		return 
			this->_field_owner == _other._field_owner &&
			this->_field_decl == _other._field_decl &&
			this->_field_generics == _other._field_generics &&
			this->_field_params == _other._field_params &&
			this->_field_result == _other._field_result &&
			this->_field_scope == _other._field_scope &&
			this->_field_refers == _other._field_refers &&
			this->_field_anon == _other._field_anon &&
			this->_field_caller == _other._field_caller &&
			this->_field_reloaded == _other._field_reloaded;
	}

	inline bool operator!=(_1a6872c93_FnIns _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a6875988_ReferenceStack> static__1a6875c96_new(void);
inline jule::I64 _1a687612b_len(_1a6875988_ReferenceStack*);
inline jule::Any _1a6876439_at(_1a6875988_ReferenceStack*, jule::I64);
inline void _1a68766ae_push(_1a6875988_ReferenceStack*, jule::Any);
inline jule::Bool _1a9d89592_exist(_1a6875988_ReferenceStack*, jule::Ptr<_1a6872c93_FnIns>);
inline jule::Bool _1a9da108c_exist(_1a6875988_ReferenceStack*, jule::Ptr<_1a76a7720_Var>);
inline jule::Bool _1a9e41627_exist(_1a6875988_ReferenceStack*, jule::Ptr<_1a6836a48_StructIns>);
struct _1a6875988_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer = jule::Slice<jule::Any>();
	

	_1a6875988_ReferenceStack(void) = default;

	inline bool operator==(_1a6875988_ReferenceStack _other) {
		return 
			this->_field_buffer == _other._field_buffer;
	}

	inline bool operator!=(_1a6875988_ReferenceStack _other) { return !this->operator==(_other); }


};
struct _1a6876d74_Pass {
	jule::Ptr<_1a527737a_Token> _field_token = jule::Ptr<_1a527737a_Token>();
	jule::Str _field_text = jule::Str();
	

	_1a6876d74_Pass(void) = default;

	inline bool operator==(_1a6876d74_Pass _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_text == _other._field_text;
	}

	inline bool operator!=(_1a6876d74_Pass _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a687a927_SymbolBuilder> _1a687aedd_get_root(jule::Ptr<_1a687a927_SymbolBuilder>);
inline void _1a687b3a6_push_err(_1a687a927_SymbolBuilder*, jule::Ptr<_1a527737a_Token>&, jule::Str, jule::Slice<jule::Any>);
inline void _1a687b76e_push_err_text(_1a687a927_SymbolBuilder*, jule::Ptr<_1a527737a_Token>&, jule::Str, jule::Slice<jule::Any>);
inline void _1a687ba8d_push_suggestion(_1a687a927_SymbolBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1a687be67_check_cpp_use_decl_path(_1a687a927_SymbolBuilder*, jule::Ptr<_1a6867d43_UseDecl>&, jule::Str);
inline jule::Ptr<_1a7685038_ImportInfo> _1a687c275_build_cpp_header_import(_1a687a927_SymbolBuilder*, jule::Ptr<_1a6867d43_UseDecl>&);
inline jule::Ptr<_1a7685038_ImportInfo> _1a687c594_build_std_import(_1a687a927_SymbolBuilder*, jule::Ptr<_1a6867d43_UseDecl>&);
inline jule::Ptr<_1a7685038_ImportInfo> _1a687c8a2_build_ident_import(jule::Ptr<_1a687a927_SymbolBuilder>, jule::Ptr<_1a6867d43_UseDecl>&);
inline jule::Ptr<_1a7685038_ImportInfo> _1a687cbb0_build_import(jule::Ptr<_1a687a927_SymbolBuilder>, jule::Ptr<_1a6867d43_UseDecl>&);
inline jule::Bool _1a687cee0_check_duplicate_use_decl(_1a687a927_SymbolBuilder*, jule::Ptr<_1a7685038_ImportInfo>&);
inline void _1a687d320_impl_import_selections(_1a687a927_SymbolBuilder*, jule::Ptr<_1a7685038_ImportInfo>&, jule::Ptr<_1a6867d43_UseDecl>&);
inline jule::Str _1a687d62d_get_as_link_path(jule::Ptr<_1a687a927_SymbolBuilder>, jule::Str);
inline void _1a687d9e6_push_cycle_error(jule::Ptr<_1a687a927_SymbolBuilder>, jule::Ptr<_1a687a927_SymbolBuilder>&, jule::Str, jule::Str&);
inline void _1a687ddae_push_cross_cycle_error(jule::Ptr<_1a687a927_SymbolBuilder>, jule::Ptr<_1a687a927_SymbolBuilder>&, jule::Ptr<_1a7685038_ImportInfo>&, jule::Ptr<_1a527737a_Token>&);
inline jule::Bool _1a687e266_check_import_cycles(jule::Ptr<_1a687a927_SymbolBuilder>, jule::Ptr<_1a7685038_ImportInfo>, jule::Ptr<_1a6867d43_UseDecl>&);
inline void _1a687e651_check_package_accessibility(_1a687a927_SymbolBuilder*, jule::Ptr<_1a6867d43_UseDecl>&, jule::Str&, jule::Str&);
inline jule::Bool _1a687ea19_import_package(jule::Ptr<_1a687a927_SymbolBuilder>, jule::Ptr<_1a7685038_ImportInfo>&, jule::Ptr<_1a6867d43_UseDecl>&);
inline jule::Ptr<_1a7685038_ImportInfo> _1a687ed27_import_use_decl(jule::Ptr<_1a687a927_SymbolBuilder>, jule::Ptr<_1a6867d43_UseDecl>&);
inline void _1a6880003_import_use_decls(jule::Ptr<_1a687a927_SymbolBuilder>);
inline void _1a6880278_append_node(_1a687a927_SymbolBuilder*, _1a6821934_Node&);
inline void _1a6880454_append_nodes(_1a687a927_SymbolBuilder*);
inline void _1a68806c9_push_directive_pass(_1a687a927_SymbolBuilder*, jule::Ptr<_1a6852525_Directive>&);
inline void _1a68808a5_append_top_directives(_1a687a927_SymbolBuilder*);
inline void _1a6880a81_build(jule::Ptr<_1a687a927_SymbolBuilder>);
struct _1a687a927_SymbolBuilder {
	jule::Ptr<_1a687a927_SymbolBuilder> _field_owner = jule::Ptr<_1a687a927_SymbolBuilder>();
	jule::Trait<_1a7682bc3_Importer> _field_importer = jule::Trait<_1a7682bc3_Importer>();
	jule::Slice<_1a43349cc_Log> _field_errors = jule::Slice<_1a43349cc_Log>();
	jule::Ptr<_1a6820cc9_Ast> _field_ast = jule::Ptr<_1a6820cc9_Ast>();
	jule::Ptr<_1a76e8e26_SymbolTable> _field_table = jule::Ptr<_1a76e8e26_SymbolTable>();
	

	_1a687a927_SymbolBuilder(void) = default;

	inline bool operator==(_1a687a927_SymbolBuilder _other) {
		return 
			this->_field_owner == _other._field_owner &&
			this->_field_importer == _other._field_importer &&
			this->_field_errors == _other._field_errors &&
			this->_field_ast == _other._field_ast &&
			this->_field_table == _other._field_table;
	}

	inline bool operator!=(_1a687a927_SymbolBuilder _other) { return !this->operator==(_other); }


};
inline jule::Str _1a68d629b_to_str(_1a68d46b7_Trait*);
inline jule::Bool _1a68d7cd6_equals(jule::Ptr<_1a68d46b7_Trait>, jule::Ptr<_1a77278d3_TypeKind>);
inline jule::Bool _1a69114a2_is_builtin(_1a68d46b7_Trait*);
inline jule::Ptr<_1a68709c7_Fn> _1a6911a68_find_method(_1a68d46b7_Trait*, jule::Str);
struct _1a68d46b7_Trait {
	jule::Ptr<_1a527737a_Token> _field_token = jule::Ptr<_1a527737a_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Slice<jule::Ptr<_1a68709c7_Fn>> _field_methods = jule::Slice<jule::Ptr<_1a68709c7_Fn>>();
	jule::Slice<jule::Ptr<_1a6826829_Struct>> _field_implemented = jule::Slice<jule::Ptr<_1a6826829_Struct>>();
	

	_1a68d46b7_Trait(void) = default;

	inline bool operator==(_1a68d46b7_Trait _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_public == _other._field_public &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_methods == _other._field_methods &&
			this->_field_implemented == _other._field_implemented;
	}

	inline bool operator!=(_1a68d46b7_Trait _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a6933ccc_auto_expr(_1a693b6b9_EnumItem*);
struct _1a693b6b9_EnumItem {
	jule::Ptr<_1a527737a_Token> _field_token = jule::Ptr<_1a527737a_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1a76eee2c_Value> _field_value = jule::Ptr<_1a76eee2c_Value>();
	

	_1a693b6b9_EnumItem(void) = default;

	inline bool operator==(_1a693b6b9_EnumItem _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_value == _other._field_value;
	}

	inline bool operator!=(_1a693b6b9_EnumItem _other) { return !this->operator==(_other); }


};
inline jule::Str _1a696655c_to_str(_1a6982435_Enum*);
inline jule::Bool _1a6aadc9d_equals(jule::Ptr<_1a6982435_Enum>, jule::Ptr<_1a77278d3_TypeKind>);
inline jule::Ptr<_1a693b6b9_EnumItem> _1a6b19b0b_find_item(_1a6982435_Enum*, jule::Str);
struct _1a6982435_Enum {
	jule::Ptr<_1a527737a_Token> _field_token = jule::Ptr<_1a527737a_Token>();
	jule::Bool _field_public = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1a772b772_TypeSymbol> _field_kind = jule::Ptr<_1a772b772_TypeSymbol>();
	jule::Slice<jule::Ptr<_1a693b6b9_EnumItem>> _field_items = jule::Slice<jule::Ptr<_1a693b6b9_EnumItem>>();
	

	_1a6982435_Enum(void) = default;

	inline bool operator==(_1a6982435_Enum _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_public == _other._field_public &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind &&
			this->_field_items == _other._field_items;
	}

	inline bool operator!=(_1a6982435_Enum _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a6b1a788_is_trait_impl(_1a6c31b02_Impl*);
inline jule::Bool _1a6b3234e_is_struct_impl(_1a6c31b02_Impl*);
struct _1a6c31b02_Impl {
	jule::Ptr<_1a68529cb_TypeDecl> _field_base = jule::Ptr<_1a68529cb_TypeDecl>();
	jule::Ptr<_1a68529cb_TypeDecl> _field_dest = jule::Ptr<_1a68529cb_TypeDecl>();
	jule::Slice<jule::Ptr<_1a68709c7_Fn>> _field_methods = jule::Slice<jule::Ptr<_1a68709c7_Fn>>();
	jule::Slice<jule::Ptr<_1a76a7720_Var>> _field_statics = jule::Slice<jule::Ptr<_1a76a7720_Var>>();
	

	_1a6c31b02_Impl(void) = default;

	inline bool operator==(_1a6c31b02_Impl _other) {
		return 
			this->_field_base == _other._field_base &&
			this->_field_dest == _other._field_dest &&
			this->_field_methods == _other._field_methods &&
			this->_field_statics == _other._field_statics;
	}

	inline bool operator!=(_1a6c31b02_Impl _other) { return !this->operator==(_other); }


};
struct _1a7658803_Scope {
	jule::Ptr<_1a7658803_Scope> _field_parent = jule::Ptr<_1a7658803_Scope>();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_deferred = jule::Bool();
	jule::Slice<jule::Any> _field_stmts = jule::Slice<jule::Any>();
	

	_1a7658803_Scope(void) = default;

	inline bool operator==(_1a7658803_Scope _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_deferred == _other._field_deferred &&
			this->_field_stmts == _other._field_stmts;
	}

	inline bool operator!=(_1a7658803_Scope _other) { return !this->operator==(_other); }


};
struct _1a7660200_If {
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_1a7658803_Scope> _field_scope = jule::Ptr<_1a7658803_Scope>();
	

	_1a7660200_If(void) = default;

	inline bool operator==(_1a7660200_If _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1a7660200_If _other) { return !this->operator==(_other); }


};
struct _1a7609c7c_Else {
	jule::Ptr<_1a7658803_Scope> _field_scope = jule::Ptr<_1a7658803_Scope>();
	

	_1a7609c7c_Else(void) = default;

	inline bool operator==(_1a7609c7c_Else _other) {
		return 
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1a7609c7c_Else _other) { return !this->operator==(_other); }


};
struct _1a7609e69_Conditional {
	jule::Slice<jule::Ptr<_1a7660200_If>> _field_elifs = jule::Slice<jule::Ptr<_1a7660200_If>>();
	jule::Ptr<_1a7609c7c_Else> _field_default = jule::Ptr<_1a7609c7c_Else>();
	

	_1a7609e69_Conditional(void) = default;

	inline bool operator==(_1a7609e69_Conditional _other) {
		return 
			this->_field_elifs == _other._field_elifs &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1a7609e69_Conditional _other) { return !this->operator==(_other); }


};
struct _1a761aa90_InfIter {
	jule::Ptr<_1a7658803_Scope> _field_scope = jule::Ptr<_1a7658803_Scope>();
	

	_1a761aa90_InfIter(void) = default;

	inline bool operator==(_1a761aa90_InfIter _other) {
		return 
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1a761aa90_InfIter _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a764999d_is_while_next(_1a761ac7c_WhileIter*);
struct _1a761ac7c_WhileIter {
	jule::Any _field_expr = jule::Any();
	jule::Any _field_next = jule::Any();
	jule::Ptr<_1a7658803_Scope> _field_scope = jule::Ptr<_1a7658803_Scope>();
	

	_1a761ac7c_WhileIter(void) = default;

	inline bool operator==(_1a761ac7c_WhileIter _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_next == _other._field_next &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1a761ac7c_WhileIter _other) { return !this->operator==(_other); }


};
struct _1a7648b23_RangeIter {
	jule::Ptr<_1a76edda4_Data> _field_expr = jule::Ptr<_1a76edda4_Data>();
	jule::Ptr<_1a7658803_Scope> _field_scope = jule::Ptr<_1a7658803_Scope>();
	jule::Ptr<_1a76a7720_Var> _field_key_a = jule::Ptr<_1a76a7720_Var>();
	jule::Ptr<_1a76a7720_Var> _field_key_b = jule::Ptr<_1a76a7720_Var>();
	

	_1a7648b23_RangeIter(void) = default;

	inline bool operator==(_1a7648b23_RangeIter _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_scope == _other._field_scope &&
			this->_field_key_a == _other._field_key_a &&
			this->_field_key_b == _other._field_key_b;
	}

	inline bool operator!=(_1a7648b23_RangeIter _other) { return !this->operator==(_other); }


};
struct _1a7648d10_ContSt {
	jule::Uintptr _field_it = jule::Uintptr();
	

	_1a7648d10_ContSt(void) = default;

	inline bool operator==(_1a7648d10_ContSt _other) {
		return 
			this->_field_it == _other._field_it;
	}

	inline bool operator!=(_1a7648d10_ContSt _other) { return !this->operator==(_other); }


};
struct _1a766c839_BreakSt {
	jule::Uintptr _field_it = jule::Uintptr();
	jule::Uintptr _field_mtch = jule::Uintptr();
	

	_1a766c839_BreakSt(void) = default;

	inline bool operator==(_1a766c839_BreakSt _other) {
		return 
			this->_field_it == _other._field_it &&
			this->_field_mtch == _other._field_mtch;
	}

	inline bool operator!=(_1a766c839_BreakSt _other) { return !this->operator==(_other); }


};
struct _1a766ca26_Label {
	jule::Str _field_ident = jule::Str();
	

	_1a766ca26_Label(void) = default;

	inline bool operator==(_1a766ca26_Label _other) {
		return 
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1a766ca26_Label _other) { return !this->operator==(_other); }


};
struct _1a766cc13_GotoSt {
	jule::Str _field_ident = jule::Str();
	

	_1a766cc13_GotoSt(void) = default;

	inline bool operator==(_1a766cc13_GotoSt _other) {
		return 
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1a766cc13_GotoSt _other) { return !this->operator==(_other); }


};
struct _1a766ce00_Postfix {
	jule::Any _field_expr = jule::Any();
	jule::Str _field_op = jule::Str();
	

	_1a766ce00_Postfix(void) = default;

	inline bool operator==(_1a766ce00_Postfix _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1a766ce00_Postfix _other) { return !this->operator==(_other); }


};
struct _1a766d0dc_Assign {
	jule::Ptr<_1a68382db_OperandExprModel> _field_l = jule::Ptr<_1a68382db_OperandExprModel>();
	jule::Ptr<_1a68382db_OperandExprModel> _field_r = jule::Ptr<_1a68382db_OperandExprModel>();
	jule::Ptr<_1a527737a_Token> _field_op = jule::Ptr<_1a527737a_Token>();
	

	_1a766d0dc_Assign(void) = default;

	inline bool operator==(_1a766d0dc_Assign _other) {
		return 
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1a766d0dc_Assign _other) { return !this->operator==(_other); }


};
struct _1a766d2c9_MultiAssign {
	jule::Slice<jule::Any> _field_l = jule::Slice<jule::Any>();
	jule::Any _field_r = jule::Any();
	

	_1a766d2c9_MultiAssign(void) = default;

	inline bool operator==(_1a766d2c9_MultiAssign _other) {
		return 
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r;
	}

	inline bool operator!=(_1a766d2c9_MultiAssign _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a764a95a_is_generic_type_match(_1a766d4b6_Match*);
struct _1a766d4b6_Match {
	jule::Ptr<_1a76edda4_Data> _field_expr = jule::Ptr<_1a76edda4_Data>();
	jule::Bool _field_type_match = jule::Bool();
	jule::Slice<jule::Ptr<_1a766d8d4_Case>> _field_cases = jule::Slice<jule::Ptr<_1a766d8d4_Case>>();
	jule::Ptr<_1a766d8d4_Case> _field_default = jule::Ptr<_1a766d8d4_Case>();
	

	_1a766d4b6_Match(void) = default;

	inline bool operator==(_1a766d4b6_Match _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_type_match == _other._field_type_match &&
			this->_field_cases == _other._field_cases &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1a766d4b6_Match _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a764b1db_is_default(_1a766d8d4_Case*);
struct _1a766d8d4_Case {
	jule::Ptr<_1a766d4b6_Match> _field_owner = jule::Ptr<_1a766d4b6_Match>();
	jule::Ptr<_1a7658803_Scope> _field_scope = jule::Ptr<_1a7658803_Scope>();
	jule::Slice<jule::Ptr<_1a76edda4_Data>> _field_exprs = jule::Slice<jule::Ptr<_1a76edda4_Data>>();
	jule::Ptr<_1a766d8d4_Case> _field_next = jule::Ptr<_1a766d8d4_Case>();
	

	_1a766d8d4_Case(void) = default;

	inline bool operator==(_1a766d8d4_Case _other) {
		return 
			this->_field_owner == _other._field_owner &&
			this->_field_scope == _other._field_scope &&
			this->_field_exprs == _other._field_exprs &&
			this->_field_next == _other._field_next;
	}

	inline bool operator!=(_1a766d8d4_Case _other) { return !this->operator==(_other); }


};
struct _1a766dac1_FallSt {
	jule::Uintptr _field_dest_case = jule::Uintptr();
	

	_1a766dac1_FallSt(void) = default;

	inline bool operator==(_1a766dac1_FallSt _other) {
		return 
			this->_field_dest_case == _other._field_dest_case;
	}

	inline bool operator!=(_1a766dac1_FallSt _other) { return !this->operator==(_other); }


};
struct _1a766dcad_RetSt {
	jule::Ptr<_1a6872c93_FnIns> _field_func = jule::Ptr<_1a6872c93_FnIns>();
	jule::Slice<jule::Ptr<_1a76a7720_Var>> _field_vars = jule::Slice<jule::Ptr<_1a76a7720_Var>>();
	jule::Any _field_expr = jule::Any();
	

	_1a766dcad_RetSt(void) = default;

	inline bool operator==(_1a766dcad_RetSt _other) {
		return 
			this->_field_func == _other._field_func &&
			this->_field_vars == _other._field_vars &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1a766dcad_RetSt _other) { return !this->operator==(_other); }


};
struct _1a766de9a_ScopeLabel {
	jule::Ptr<_1a527737a_Token> _field_token = jule::Ptr<_1a527737a_Token>();
	jule::Ptr<_1a766ca26_Label> _field_label = jule::Ptr<_1a766ca26_Label>();
	jule::I64 _field_pos = jule::I64();
	jule::Ptr<_1a766e374_ScopeChecker> _field_scope = jule::Ptr<_1a766e374_ScopeChecker>();
	jule::Bool _field_used = jule::Bool();
	

	_1a766de9a_ScopeLabel(void) = default;

	inline bool operator==(_1a766de9a_ScopeLabel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label &&
			this->_field_pos == _other._field_pos &&
			this->_field_scope == _other._field_scope &&
			this->_field_used == _other._field_used;
	}

	inline bool operator!=(_1a766de9a_ScopeLabel _other) { return !this->operator==(_other); }


};
struct _1a766e187_ScopeGoto {
	jule::Ptr<_1a685e1be_GotoSt> _field_gt = jule::Ptr<_1a685e1be_GotoSt>();
	jule::Ptr<_1a766e374_ScopeChecker> _field_scope = jule::Ptr<_1a766e374_ScopeChecker>();
	jule::I64 _field_pos = jule::I64();
	

	_1a766e187_ScopeGoto(void) = default;

	inline bool operator==(_1a766e187_ScopeGoto _other) {
		return 
			this->_field_gt == _other._field_gt &&
			this->_field_scope == _other._field_scope &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_1a766e187_ScopeGoto _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a7685038_ImportInfo> _1a75eda73_find_package(_1a766e374_ScopeChecker*, jule::Str);
inline jule::Ptr<_1a7685038_ImportInfo> _1a75db247_select_package(_1a766e374_ScopeChecker*, jule::Fn<jule::Bool(jule::Ptr<_1a7685038_ImportInfo>)>);
inline jule::Ptr<_1a76a7720_Var> _1a7638393_find_var(_1a766e374_ScopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1a7726b9b_TypeAlias> _1a766e7d6_find_type_alias(_1a766e374_ScopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1a6826829_Struct> _1a766eb8d_find_struct(_1a766e374_ScopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1a68709c7_Fn> _1a7670045_find_fn(_1a766e374_ScopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1a68d46b7_Trait> _1a7670353_find_trait(_1a766e374_ScopeChecker*, jule::Str);
inline jule::Ptr<_1a6982435_Enum> _1a7670661_find_enum(_1a766e374_ScopeChecker*, jule::Str);
inline jule::Bool _1a7670991_is_unsafe(jule::Ptr<_1a766e374_ScopeChecker>);
inline jule::Bool _1a7670c05_is_root(_1a766e374_ScopeChecker*);
inline void _1a7670dd1_stop(_1a766e374_ScopeChecker*);
inline jule::Bool _1a7671145_stopped(_1a766e374_ScopeChecker*);
inline jule::Bool _1a76713a9_is_deferred(jule::Ptr<_1a766e374_ScopeChecker>);
inline jule::Ptr<_1a766e374_ScopeChecker> _1a767161d_get_root(jule::Ptr<_1a766e374_ScopeChecker>);
inline jule::Ptr<_1a766e374_ScopeChecker> _1a7671882_get_hard_root(jule::Ptr<_1a766e374_ScopeChecker>);
inline jule::Ptr<_1a766ca26_Label> _1a7671b90_find_label(_1a766e374_ScopeChecker*, jule::Str);
inline jule::Ptr<_1a766de9a_ScopeLabel> _1a7671e9d_find_label_scope(jule::Ptr<_1a766e374_ScopeChecker>, jule::Str);
inline jule::Ptr<_1a766de9a_ScopeLabel> _1a76722ab_find_label_all(_1a766e374_ScopeChecker*, jule::Str);
inline jule::Bool _1a7672663_is_duplicated_ident(_1a766e374_ScopeChecker*, jule::Uintptr, jule::Str);
inline void _1a76728d8_check_var_decl(jule::Ptr<_1a766e374_ScopeChecker>, jule::Ptr<_1a68631d4_VarDecl>);
inline void _1a7672b5d_check_type_alias_decl(jule::Ptr<_1a766e374_ScopeChecker>, jule::Ptr<_1a6866957_TypeAliasDecl>);
inline jule::Ptr<_1a7658803_Scope> _1a7672dc2_get_child(_1a766e374_ScopeChecker*);
inline void _1a767328a_check_child_ssc(jule::Ptr<_1a766e374_ScopeChecker>, jule::Ptr<_1a686070e_ScopeTree>&, jule::Ptr<_1a7658803_Scope>&, jule::Ptr<_1a766e374_ScopeChecker>&);
inline jule::Ptr<_1a7658803_Scope> _1a7673642_check_child_sc(jule::Ptr<_1a766e374_ScopeChecker>, jule::Ptr<_1a686070e_ScopeTree>&, jule::Ptr<_1a766e374_ScopeChecker>&);
inline jule::Ptr<_1a7658803_Scope> _1a7673950_check_child(jule::Ptr<_1a766e374_ScopeChecker>, jule::Ptr<_1a686070e_ScopeTree>&);
inline void _1a7673bc5_check_anon_scope(jule::Ptr<_1a766e374_ScopeChecker>, jule::Ptr<_1a686070e_ScopeTree>);
inline void _1a7673ee4_process_error_call(jule::Ptr<_1a766e374_ScopeChecker>, jule::Ptr<_1a686e4ed_BuiltinErrorCallExprModel>&, jule::Ptr<_1a527737a_Token>);
inline void _1a7674269_check_expr(jule::Ptr<_1a766e374_ScopeChecker>, jule::Ptr<_1a6855e41_Expr>);
inline void _1a76744de_check_co_expr(jule::Ptr<_1a766e374_ScopeChecker>, jule::Ptr<_1a685766d_CoExpr>);
inline jule::Ptr<_1a7660200_If> _1a76747ec_check_if(jule::Ptr<_1a766e374_ScopeChecker>, jule::Ptr<_1a6865956_If>);
inline jule::Ptr<_1a7609c7c_Else> _1a7674b0a_check_else(jule::Ptr<_1a766e374_ScopeChecker>, jule::Ptr<_1a6865d0d_Else>);
inline void _1a7674d80_check_conditional(jule::Ptr<_1a766e374_ScopeChecker>, jule::Ptr<_1a6866281_Conditional>);
inline void _1a76752e2_check_iter_scope_ssc(jule::Ptr<_1a766e374_ScopeChecker>, jule::Uintptr, jule::Ptr<_1a686070e_ScopeTree>, jule::Ptr<_1a7658803_Scope>&, jule::Ptr<_1a766e374_ScopeChecker>);
inline jule::Ptr<_1a7658803_Scope> _1a7675743_check_iter_scope_sc(jule::Ptr<_1a766e374_ScopeChecker>, jule::Uintptr, jule::Ptr<_1a686070e_ScopeTree>, jule::Ptr<_1a766e374_ScopeChecker>);
inline jule::Ptr<_1a7658803_Scope> _1a7675aea_check_iter_scope(jule::Ptr<_1a766e374_ScopeChecker>, jule::Uintptr, jule::Ptr<_1a686070e_ScopeTree>&);
inline void _1a7675d70_check_inf_iter(jule::Ptr<_1a766e374_ScopeChecker>, jule::Ptr<_1a6863b0d_Iter>&);
inline void _1a76760e5_check_while_iter(jule::Ptr<_1a766e374_ScopeChecker>, jule::Ptr<_1a6863b0d_Iter>&);
inline void _1a767636a_check_range_iter(jule::Ptr<_1a766e374_ScopeChecker>, jule::Ptr<_1a6863b0d_Iter>&);
inline void _1a76765e0_check_iter(jule::Ptr<_1a766e374_ScopeChecker>, jule::Ptr<_1a6863b0d_Iter>);
inline jule::Bool _1a76768ed_check_valid_cont_label(jule::Ptr<_1a766e374_ScopeChecker>, jule::Uintptr);
inline jule::Bool _1a7676c2d_check_valid_break_label(jule::Ptr<_1a766e374_ScopeChecker>, jule::Uintptr);
inline jule::Ptr<_1a7648d10_ContSt> _1a767704c_check_cont_valid_scope(jule::Ptr<_1a766e374_ScopeChecker>, jule::Ptr<_1a68654d3_ContSt>);
inline void _1a76772c2_check_cont(jule::Ptr<_1a766e374_ScopeChecker>, jule::Ptr<_1a68654d3_ContSt>);
inline void _1a7677547_check_label(jule::Ptr<_1a766e374_ScopeChecker>, jule::Ptr<_1a685dd17_LabelSt>);
inline void _1a76777bc_push_goto(jule::Ptr<_1a766e374_ScopeChecker>, jule::Ptr<_1a685e1be_GotoSt>);
inline void _1a7677a42_check_postfix(jule::Ptr<_1a766e374_ScopeChecker>, jule::Ptr<_1a6860104_AssignSt>);
inline jule::Bool _1a7677d50_is_new_assign_ident(_1a766e374_ScopeChecker*, jule::Str);
inline jule::Bool _1a76782c3_check_structure_assign_op(jule::Ptr<_1a766e374_ScopeChecker>, jule::Ptr<_1a6836a48_StructIns>&, jule::Ptr<_1a6860104_AssignSt>&, jule::Ptr<_1a76edda4_Data>&);
inline void _1a7678559_check_single_assign(jule::Ptr<_1a766e374_ScopeChecker>, jule::Ptr<_1a6860104_AssignSt>&);
inline void _1a7678a98___process_end_part_of_multi_assign(_1a766e374_ScopeChecker*, jule::Ptr<_1a766d2c9_MultiAssign>, jule::Ptr<_1a6860104_AssignSt>, jule::Ptr<_1a685eab5_AssignLeft>, jule::Ptr<_1a76edda4_Data>, jule::Ptr<_1a76edda4_Data>);
inline void _1a7678d1d_check_ret_multi_assign(jule::Ptr<_1a766e374_ScopeChecker>, jule::Ptr<_1a6860104_AssignSt>&);
inline void _1a7679093_check_multi_assign(jule::Ptr<_1a766e374_ScopeChecker>, jule::Ptr<_1a6860104_AssignSt>&);
inline void _1a7679318_check_assign_st(jule::Ptr<_1a766e374_ScopeChecker>, jule::Ptr<_1a6860104_AssignSt>);
inline jule::Ptr<_1a7658803_Scope> _1a76796c0_check_case_scope(jule::Ptr<_1a766e374_ScopeChecker>, jule::Ptr<_1a766d8d4_Case>&, jule::Ptr<_1a686070e_ScopeTree>&);
inline jule::Ptr<_1a766d8d4_Case> _1a7679bba_check_case(jule::Ptr<_1a766e374_ScopeChecker>, jule::Ptr<_1a766d4b6_Match>, jule::I64, jule::Ptr<_1a6866dca_Case>, jule::Ptr<_1a76edda4_Data>);
inline void _1a767a083_check_cases(jule::Ptr<_1a766e374_ScopeChecker>, jule::Ptr<_1a68675a1_MatchCase>&, jule::Ptr<_1a766d4b6_Match>, jule::Ptr<_1a76edda4_Data>);
inline jule::Ptr<_1a766d8d4_Case> _1a767a43a_check_default(jule::Ptr<_1a766e374_ScopeChecker>, jule::Ptr<_1a766d4b6_Match>, jule::Ptr<_1a6865d0d_Else>);
inline void _1a767a6b0_check_comptime_panic(_1a766e374_ScopeChecker*, jule::Ptr<_1a7658803_Scope>&);
inline void _1a767a9ce_push_type_match(jule::Ptr<_1a766e374_ScopeChecker>, jule::Ptr<_1a766d4b6_Match>, jule::Ptr<_1a68675a1_MatchCase>&);
inline void _1a767ac54_check_type_match(jule::Ptr<_1a766e374_ScopeChecker>, jule::Ptr<_1a68675a1_MatchCase>&);
inline void _1a767aec9_check_common_match(jule::Ptr<_1a766e374_ScopeChecker>, jule::Ptr<_1a68675a1_MatchCase>&);
inline void _1a767b24e_check_match(jule::Ptr<_1a766e374_ScopeChecker>, jule::Ptr<_1a68675a1_MatchCase>);
inline void _1a767b4c4_check_fall(jule::Ptr<_1a766e374_ScopeChecker>, jule::Ptr<_1a685e4aa_FallSt>);
inline jule::Ptr<_1a766c839_BreakSt> _1a767b7d2_check_break_with_label(jule::Ptr<_1a766e374_ScopeChecker>, jule::Ptr<_1a686512b_BreakSt>);
inline jule::Ptr<_1a766c839_BreakSt> _1a767bae0_check_plain_break(jule::Ptr<_1a766e374_ScopeChecker>, jule::Ptr<_1a686512b_BreakSt>);
inline void _1a767bd65_check_break(jule::Ptr<_1a766e374_ScopeChecker>, jule::Ptr<_1a686512b_BreakSt>);
inline void _1a767c0da_check_ret(jule::Ptr<_1a766e374_ScopeChecker>, jule::Ptr<_1a686358b_RetSt>);
inline void _1a767c360_check_use_expr(jule::Ptr<_1a766e374_ScopeChecker>, jule::Ptr<_1a68562e8_UseExpr>);
inline void _1a767c5d5_check_node(jule::Ptr<_1a766e374_ScopeChecker>, jule::Any&);
inline void _1a767c7b1_check_result(jule::Ptr<_1a766e374_ScopeChecker>);
inline void _1a767c98c_check_tree(jule::Ptr<_1a766e374_ScopeChecker>);
inline void _1a767ccab_check_goto(_1a766e374_ScopeChecker*, jule::Ptr<_1a766e187_ScopeGoto>&, jule::Ptr<_1a766de9a_ScopeLabel>&);
inline void _1a767ce87_check_gotos(_1a766e374_ScopeChecker*);
inline void _1a767d163_check_labels(_1a766e374_ScopeChecker*);
inline void _1a767d33e_check_vars(_1a766e374_ScopeChecker*);
inline void _1a767d51a_check_aliases(_1a766e374_ScopeChecker*);
inline void _1a767d839_check(jule::Ptr<_1a766e374_ScopeChecker>, jule::Ptr<_1a686070e_ScopeTree>&, jule::Ptr<_1a7658803_Scope>&);
inline jule::Ptr<_1a766e374_ScopeChecker> _1a767da9d_new_child_checker(jule::Ptr<_1a766e374_ScopeChecker>);
struct _1a766e374_ScopeChecker {
	jule::Ptr<_1a527737a_Token> _field_called_from = jule::Ptr<_1a527737a_Token>();
	jule::Ptr<_1a768cc22_Sema> _field_s = jule::Ptr<_1a768cc22_Sema>();
	jule::Ptr<_1a6872c93_FnIns> _field_owner = jule::Ptr<_1a6872c93_FnIns>();
	jule::Ptr<_1a766e374_ScopeChecker> _field_parent = jule::Ptr<_1a766e374_ScopeChecker>();
	jule::I64 _field_child_index = jule::I64();
	jule::Ptr<_1a76e8e26_SymbolTable> _field_table = jule::Ptr<_1a76e8e26_SymbolTable>();
	jule::Ptr<_1a7658803_Scope> _field_scope = jule::Ptr<_1a7658803_Scope>();
	jule::Ptr<_1a686070e_ScopeTree> _field_tree = jule::Ptr<_1a686070e_ScopeTree>();
	jule::Ptr<_1a6872c93_FnIns> _field_result = jule::Ptr<_1a6872c93_FnIns>();
	jule::Uintptr _field_it = jule::Uintptr();
	jule::Uintptr _field_cse = jule::Uintptr();
	jule::Ptr<jule::Slice<jule::Ptr<_1a766de9a_ScopeLabel>>> _field_labels = jule::Ptr<jule::Slice<jule::Ptr<_1a766de9a_ScopeLabel>>>();
	jule::Ptr<jule::Slice<jule::Ptr<_1a766e187_ScopeGoto>>> _field_gotos = jule::Ptr<jule::Slice<jule::Ptr<_1a766e187_ScopeGoto>>>();
	jule::I64 _field_i = jule::I64();
	

	_1a766e374_ScopeChecker(void) = default;

	inline bool operator==(_1a766e374_ScopeChecker _other) {
		return 
			this->_field_called_from == _other._field_called_from &&
			this->_field_s == _other._field_s &&
			this->_field_owner == _other._field_owner &&
			this->_field_parent == _other._field_parent &&
			this->_field_child_index == _other._field_child_index &&
			this->_field_table == _other._field_table &&
			this->_field_scope == _other._field_scope &&
			this->_field_tree == _other._field_tree &&
			this->_field_result == _other._field_result &&
			this->_field_it == _other._field_it &&
			this->_field_cse == _other._field_cse &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1a766e374_ScopeChecker _other) { return !this->operator==(_other); }


};
inline void _1a767eb48_check_cdef(_1a767e708_DirectiveChecker*, jule::Ptr<_1a6852525_Directive>&);
inline void _1a767edbd_check_typedef(_1a767e708_DirectiveChecker*, jule::Ptr<_1a6852525_Directive>&);
inline void _1a7680143_check_derive(_1a767e708_DirectiveChecker*, jule::Ptr<_1a6852525_Directive>&);
inline void _1a76803b8_check_namespace(_1a767e708_DirectiveChecker*, jule::Ptr<_1a6852525_Directive>&);
inline void _1a768063d_check_deprecated(_1a767e708_DirectiveChecker*, jule::Ptr<_1a6852525_Directive>&);
inline void _1a76808b3_check_test(_1a767e708_DirectiveChecker*, jule::Ptr<_1a6852525_Directive>&);
inline void _1a7680b38_check_directive(_1a767e708_DirectiveChecker*, jule::Ptr<_1a6852525_Directive>&);
inline void _1a7680d14_check(_1a767e708_DirectiveChecker*);
struct _1a767e708_DirectiveChecker {
	jule::Ptr<_1a768cc22_Sema> _field_s = jule::Ptr<_1a768cc22_Sema>();
	jule::Ptr<jule::Slice<jule::Ptr<_1a6852525_Directive>>> _field_d = jule::Ptr<jule::Slice<jule::Ptr<_1a6852525_Directive>>>();
	jule::Any _field_o = jule::Any();
	

	_1a767e708_DirectiveChecker(void) = default;

	inline bool operator==(_1a767e708_DirectiveChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_d == _other._field_d &&
			this->_field_o == _other._field_o;
	}

	inline bool operator!=(_1a767e708_DirectiveChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a7685038_ImportInfo> _1a7685544_find_package(_1a7685038_ImportInfo*, jule::Str);
inline jule::Ptr<_1a7685038_ImportInfo> _1a7685852_select_package(_1a7685038_ImportInfo*, jule::Fn<jule::Bool(jule::Ptr<_1a7685038_ImportInfo>)>);
inline jule::Ptr<_1a76a7720_Var> _1a7685c09_find_var(_1a7685038_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1a7726b9b_TypeAlias> _1a76860b1_find_type_alias(_1a7685038_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1a6826829_Struct> _1a7686468_find_struct(_1a7685038_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1a68709c7_Fn> _1a7686820_find_fn(_1a7685038_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1a68d46b7_Trait> _1a7686b2d_find_trait(_1a7685038_ImportInfo*, jule::Str);
inline jule::Ptr<_1a6982435_Enum> _1a7686e3b_find_enum(_1a7685038_ImportInfo*, jule::Str);
inline jule::Bool _1a7687359_is_lookupable(_1a7685038_ImportInfo*, jule::Str);
inline jule::Bool _1a7687667_exist_ident(_1a7685038_ImportInfo*, jule::Str);
inline jule::Bool _1a76878ed_is_accessible_via_selection(_1a7685038_ImportInfo*);
struct _1a7685038_ImportInfo {
	jule::Ptr<_1a527737a_Token> _field_token = jule::Ptr<_1a527737a_Token>();
	jule::Str _field_path = jule::Str();
	jule::Str _field_link_path = jule::Str();
	jule::Str _field_ident = jule::Str();
	jule::Str _field_alias = jule::Str();
	jule::Bool _field_duplicate = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_std = jule::Bool();
	jule::Bool _field_import_all = jule::Bool();
	jule::Slice<jule::Ptr<_1a527737a_Token>> _field_selected = jule::Slice<jule::Ptr<_1a527737a_Token>>();
	jule::Ptr<_1a7687bea_Package> _field_package = jule::Ptr<_1a7687bea_Package>();
	jule::I64 _field_mod_id = jule::I64();
	

	_1a7685038_ImportInfo(void) = default;

	inline bool operator==(_1a7685038_ImportInfo _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_path == _other._field_path &&
			this->_field_link_path == _other._field_link_path &&
			this->_field_ident == _other._field_ident &&
			this->_field_alias == _other._field_alias &&
			this->_field_duplicate == _other._field_duplicate &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_std == _other._field_std &&
			this->_field_import_all == _other._field_import_all &&
			this->_field_selected == _other._field_selected &&
			this->_field_package == _other._field_package &&
			this->_field_mod_id == _other._field_mod_id;
	}

	inline bool operator!=(_1a7685038_ImportInfo _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a7685038_ImportInfo> _1a76881b2_find_package(_1a7687bea_Package*, jule::Str);
inline jule::Ptr<_1a7685038_ImportInfo> _1a76884c0_select_package(_1a7687bea_Package*, jule::Fn<jule::Bool(jule::Ptr<_1a7685038_ImportInfo>)>);
inline jule::Ptr<_1a76a7720_Var> _1a7688877_find_var(_1a7687bea_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1a7726b9b_TypeAlias> _1a7688c2e_find_type_alias(_1a7687bea_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1a6826829_Struct> _1a76890d6_find_struct(_1a7687bea_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1a68709c7_Fn> _1a768948d_find_fn(_1a7687bea_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1a68d46b7_Trait> _1a768979b_find_trait(_1a7687bea_Package*, jule::Str);
inline jule::Ptr<_1a6982435_Enum> _1a7689aa9_find_enum(_1a7687bea_Package*, jule::Str);
struct _1a7687bea_Package {
	jule::Slice<jule::Ptr<_1a76e8e26_SymbolTable>> _field_files = jule::Slice<jule::Ptr<_1a76e8e26_SymbolTable>>();
	

	_1a7687bea_Package(void) = default;

	inline bool operator==(_1a7687bea_Package _other) {
		return 
			this->_field_files == _other._field_files;
	}

	inline bool operator!=(_1a7687bea_Package _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a7685038_ImportInfo> _1a768d22d_find_package(_1a768cc22_Sema*, jule::Str);
inline jule::Ptr<_1a7685038_ImportInfo> _1a768d53b_select_package(_1a768cc22_Sema*, jule::Fn<jule::Bool(jule::Ptr<_1a7685038_ImportInfo>)>);
inline jule::Ptr<_1a76a7720_Var> _1a768d8e3_find_var(_1a768cc22_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1a7726b9b_TypeAlias> _1a768dc9a_find_type_alias(_1a768cc22_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1a6826829_Struct> _1a768e152_find_struct(_1a768cc22_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1a68709c7_Fn> _1a768e509_find_fn(_1a768cc22_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1a68d46b7_Trait> _1a768e817_find_trait(_1a768cc22_Sema*, jule::Str);
inline jule::Ptr<_1a6982435_Enum> _1a768eb25_find_enum(_1a768cc22_Sema*, jule::Str);
inline jule::Bool _1a768eeee_is_flag(_1a768cc22_Sema*, jule::I64);
inline void _1a7690274_set_current_file(_1a768cc22_Sema*, jule::Ptr<_1a76e8e26_SymbolTable>);
inline void _1a769063c_push_err(_1a768cc22_Sema*, jule::Ptr<_1a527737a_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1a769095b_push_suggestion(_1a768cc22_Sema*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1a7690d13_is_accessible_define(_1a768cc22_Sema*, jule::Bool, jule::Ptr<_1a527737a_Token>);
inline jule::Bool _1a7691264_is_duplicated_ident(_1a768cc22_Sema*, jule::Uintptr, jule::Str, jule::Bool);
inline void _1a7691583_check_directives(jule::Ptr<_1a768cc22_Sema>, jule::Slice<jule::Ptr<_1a6852525_Directive>>&, jule::Any);
inline jule::Bool _1a76919d4_check_generic_quantity(_1a768cc22_Sema*, jule::I64, jule::I64, jule::Ptr<_1a527737a_Token>);
inline jule::Bool _1a7691dad_is_duplicated_import_selection(_1a768cc22_Sema*, jule::Uintptr, jule::Str);
inline jule::Any _1a7692276_get_import_def(_1a768cc22_Sema*, jule::Str, jule::Ptr<_1a7685038_ImportInfo>&);
inline jule::Bool _1a76925a6_check_import_selections(_1a768cc22_Sema*, jule::Ptr<_1a7685038_ImportInfo>&);
inline jule::Bool _1a76928e7_is_use_alias_duplication(_1a768cc22_Sema*, jule::Ptr<_1a7685038_ImportInfo>&);
inline jule::Bool _1a7692c16_check_import(_1a768cc22_Sema*, jule::Ptr<_1a7685038_ImportInfo>&);
inline void _1a7692de2_check_imports(_1a768cc22_Sema*);
inline void _1a76930bd_impl_file_impls(jule::Ptr<_1a768cc22_Sema>);
inline void _1a7693299_impl_impls(jule::Ptr<_1a768cc22_Sema>);
inline void _1a7693475_check_enums(jule::Ptr<_1a768cc22_Sema>);
inline jule::Bool _1a76938c6_check_type_with_refers(jule::Ptr<_1a768cc22_Sema>, jule::Ptr<_1a772b772_TypeSymbol>&, jule::Trait<_1a7741e19_Lookup>, jule::Ptr<_1a7734aee_Referencer>);
inline jule::Bool _1a7693c7d_check_type(jule::Ptr<_1a768cc22_Sema>, jule::Ptr<_1a772b772_TypeSymbol>&, jule::Trait<_1a7741e19_Lookup>);
inline jule::Ptr<_1a77278d3_TypeKind> _1a7694201_build_type_with_generics(jule::Ptr<_1a768cc22_Sema>, jule::Ptr<_1a68529cb_TypeDecl>&, jule::Slice<jule::Ptr<_1a7726b9b_TypeAlias>>, jule::Ptr<_1a6875988_ReferenceStack>);
inline jule::Ptr<_1a77278d3_TypeKind> _1a7694520_build_type(jule::Ptr<_1a768cc22_Sema>, jule::Ptr<_1a68529cb_TypeDecl>&);
inline jule::Ptr<_1a77278d3_TypeKind> _1a769482d_select_type(jule::Ptr<_1a768cc22_Sema>, jule::Ptr<_1a68529cb_TypeDecl>&);
inline jule::Ptr<_1a7700922_Eval> _1a7694c7e_evalpd(jule::Ptr<_1a768cc22_Sema>, jule::Trait<_1a7741e19_Lookup>, jule::Ptr<_1a77278d3_TypeKind>, jule::Ptr<_1a76a7720_Var>);
inline jule::Ptr<_1a7700922_Eval> _1a7695136_evalp(jule::Ptr<_1a768cc22_Sema>, jule::Trait<_1a7741e19_Lookup>, jule::Ptr<_1a77278d3_TypeKind>);
inline jule::Ptr<_1a7700922_Eval> _1a7695444_eval(jule::Ptr<_1a768cc22_Sema>, jule::Trait<_1a7741e19_Lookup>);
inline jule::Bool _1a769593e_check_assign_type(jule::Ptr<_1a768cc22_Sema>, jule::Bool, jule::Ptr<_1a77278d3_TypeKind>&, jule::Ptr<_1a76edda4_Data>&, jule::Ptr<_1a527737a_Token>);
inline jule::Bool _1a7695db2_check_type_compatibility(jule::Ptr<_1a768cc22_Sema>, jule::Ptr<_1a77278d3_TypeKind>&, jule::Ptr<_1a77278d3_TypeKind>&, jule::Ptr<_1a527737a_Token>&);
inline jule::Ptr<_1a77278d3_TypeKind> _1a769629c_build_non_generic_type_kind(jule::Ptr<_1a768cc22_Sema>, jule::Ptr<_1a68529cb_TypeDecl>&, jule::Slice<jule::Ptr<_1a685d960_GenericDecl>>&);
inline void _1a7696555_build_fn_non_generic_type_kinds(jule::Ptr<_1a768cc22_Sema>, jule::Ptr<_1a6872c93_FnIns>&);
inline jule::Ptr<_1a6872c93_FnIns> _1a7696896_get_trait_check_fn_kind(jule::Ptr<_1a768cc22_Sema>, jule::Ptr<_1a68709c7_Fn>&);
inline jule::Bool _1a7696bb5_reload_fn_ins_types(jule::Ptr<_1a768cc22_Sema>, jule::Ptr<_1a6872c93_FnIns>&);
inline jule::Bool _1a7697149_check_ref_validity_for_init_expr(jule::Ptr<_1a768cc22_Sema>, jule::Bool, jule::Ptr<_1a76edda4_Data>&, jule::Ptr<_1a527737a_Token>&);
inline jule::Bool _1a7697743_check_validity_for_init_expr(jule::Ptr<_1a768cc22_Sema>, jule::Bool, jule::Bool, jule::Ptr<_1a77278d3_TypeKind>&, jule::Ptr<_1a76edda4_Data>&, jule::Ptr<_1a527737a_Token>&);
inline jule::Bool _1a7697aea_check_type_alias_decl_kind(jule::Ptr<_1a768cc22_Sema>, jule::Ptr<_1a7726b9b_TypeAlias>&, jule::Trait<_1a7741e19_Lookup>);
inline void _1a7697e2a_check_type_alias_decl(jule::Ptr<_1a768cc22_Sema>, jule::Ptr<_1a7726b9b_TypeAlias>&, jule::Trait<_1a7741e19_Lookup>);
inline void _1a76981c2_check_type_alias_decl_dup(jule::Ptr<_1a768cc22_Sema>, jule::Ptr<_1a7726b9b_TypeAlias>&);
inline jule::Bool _1a7698447_check_type_alias_decls(jule::Ptr<_1a768cc22_Sema>);
inline void _1a76986bc_check_enum_items_dup(_1a768cc22_Sema*, jule::Ptr<_1a6982435_Enum>);
inline void _1a7698942_check_enum_items_str(jule::Ptr<_1a768cc22_Sema>, jule::Ptr<_1a6982435_Enum>&);
inline void _1a7698bb7_check_enum_items_int(jule::Ptr<_1a768cc22_Sema>, jule::Ptr<_1a6982435_Enum>&);
inline void _1a7698e3c_check_enum_decl(jule::Ptr<_1a768cc22_Sema>, jule::Ptr<_1a6982435_Enum>&);
inline jule::Bool _1a76991a1_check_enum_decls(jule::Ptr<_1a768cc22_Sema>);
inline jule::Bool _1a76994ae_check_decl_generics(_1a768cc22_Sema*, jule::Slice<jule::Ptr<_1a685d960_GenericDecl>>&);
inline jule::Bool _1a76997de_check_fn_decl_params_dup(_1a768cc22_Sema*, jule::Ptr<_1a68709c7_Fn>&);
inline jule::Bool _1a7699b30_check_fn_decl_result_dup(_1a768cc22_Sema*, jule::Ptr<_1a68709c7_Fn>&);
inline void _1a7699dd8_check_fn_decl_prototype(jule::Ptr<_1a768cc22_Sema>, jule::Ptr<_1a68709c7_Fn>&);
inline void _1a769a191_check_trait_decl_method(jule::Ptr<_1a768cc22_Sema>, jule::Ptr<_1a68709c7_Fn>&);
inline void _1a769a449_check_trait_decl_methods(jule::Ptr<_1a768cc22_Sema>, jule::Ptr<_1a68d46b7_Trait>&);
inline void _1a769a6d0_check_trait_decl(jule::Ptr<_1a768cc22_Sema>, jule::Ptr<_1a68d46b7_Trait>&);
inline jule::Bool _1a769a944_check_trait_decls(jule::Ptr<_1a768cc22_Sema>);
inline jule::Bool _1a769ad1d_check_trait_impl_methods(_1a768cc22_Sema*, jule::Ptr<_1a68d46b7_Trait>&, jule::Ptr<_1a6c31b02_Impl>&);
inline jule::Bool _1a769b1d6_impl_to_struct(jule::Ptr<_1a768cc22_Sema>, jule::Ptr<_1a6826829_Struct>&, jule::Ptr<_1a6c31b02_Impl>&);
inline void _1a769b45b_impl_trait(jule::Ptr<_1a768cc22_Sema>, jule::Ptr<_1a6c31b02_Impl>&);
inline void _1a769b6d1_impl_struct(jule::Ptr<_1a768cc22_Sema>, jule::Ptr<_1a6c31b02_Impl>&);
inline void _1a769b956_impl_impl(jule::Ptr<_1a768cc22_Sema>, jule::Ptr<_1a6c31b02_Impl>&);
inline void _1a769bc75_check_var_decl(jule::Ptr<_1a768cc22_Sema>, jule::Ptr<_1a76a7720_Var>&, jule::Trait<_1a7741e19_Lookup>);
inline void _1a769beea_check_global_var_decl(jule::Ptr<_1a768cc22_Sema>, jule::Ptr<_1a76a7720_Var>&);
inline jule::Bool _1a769c25e_check_global_decls(jule::Ptr<_1a768cc22_Sema>);
inline jule::Bool _1a769c638_check_struct_trait_impl(jule::Ptr<_1a768cc22_Sema>, jule::Ptr<_1a6826829_Struct>&, jule::Ptr<_1a68d46b7_Trait>&);
inline jule::Bool _1a769c957_check_struct_impls(jule::Ptr<_1a768cc22_Sema>, jule::Ptr<_1a6826829_Struct>&);
inline jule::Bool _1a769cc65_check_struct_fields(jule::Ptr<_1a768cc22_Sema>, jule::Ptr<_1a6826829_Struct>&);
inline void _1a769ceda_check_struct_decl(jule::Ptr<_1a768cc22_Sema>, jule::Ptr<_1a6826829_Struct>&);
inline jule::Bool _1a769d24e_check_struct_decls(jule::Ptr<_1a768cc22_Sema>);
inline void _1a769d4c4_check_fn_decl(jule::Ptr<_1a768cc22_Sema>, jule::Ptr<_1a68709c7_Fn>&);
inline jule::Bool _1a769d738_check_fn_decls(jule::Ptr<_1a768cc22_Sema>);
inline void _1a769db01_push_cycle_error(_1a768cc22_Sema*, jule::Ptr<_1a6826829_Struct>&, jule::Ptr<_1a6826829_Struct>&, jule::Str&);
inline jule::Bool _1a769e052_check_cross_cycle(_1a768cc22_Sema*, jule::Ptr<_1a6826829_Struct>&, jule::Ptr<_1a6826829_Struct>&, jule::Str&);
inline jule::Bool _1a769e4d6_check_struct_derive_illegal_cycles(_1a768cc22_Sema*, jule::Str, jule::Ptr<_1a6826829_Struct>&, jule::Ptr<_1a77278d3_TypeKind>&);
inline jule::Bool _1a769e816_check_struct_ins_derive_clone(_1a768cc22_Sema*, jule::Ptr<_1a6836a48_StructIns>);
inline void _1a769ea03_check_package_decls(jule::Ptr<_1a768cc22_Sema>);
inline void _1a769ed44_check_data_for_type_inference(_1a768cc22_Sema*, jule::Ptr<_1a76edda4_Data>&, jule::Ptr<_1a527737a_Token>&);
inline void _1a76a00ca_check_var(jule::Ptr<_1a768cc22_Sema>, jule::Ptr<_1a76a7720_Var>&);
inline void _1a76a03e9_check_type_var(jule::Ptr<_1a768cc22_Sema>, jule::Ptr<_1a76a7720_Var>&, jule::Trait<_1a7741e19_Lookup>);
inline void _1a76a05c5_check_global_types(jule::Ptr<_1a768cc22_Sema>);
inline jule::Ptr<_1a6872c93_FnIns> _1a76a097c_ready_to_check_fn(jule::Ptr<_1a768cc22_Sema>, jule::Ptr<_1a6836a48_StructIns>&, jule::Ptr<_1a68709c7_Fn>&);
inline void _1a76a0c9b_check_type_method(jule::Ptr<_1a768cc22_Sema>, jule::Ptr<_1a6836a48_StructIns>&, jule::Ptr<_1a68709c7_Fn>&);
inline jule::Ptr<_1a6872c93_FnIns> _1a76a11ec_check_struct_ins_op(jule::Ptr<_1a768cc22_Sema>, jule::Ptr<_1a6836a48_StructIns>&, jule::Ptr<_1a68709c7_Fn>&, jule::Fn<jule::Bool(jule::Ptr<_1a68709c7_Fn>)>);
inline jule::Bool _1a76a150a_check_fields(jule::Ptr<_1a768cc22_Sema>, jule::Ptr<_1a6836a48_StructIns>&);
inline void _1a76a1780_precheck_struct_ins(jule::Ptr<_1a768cc22_Sema>, jule::Ptr<_1a6836a48_StructIns>&);
inline void _1a76a1a05_check_struct_ins(jule::Ptr<_1a768cc22_Sema>, jule::Ptr<_1a6836a48_StructIns>&);
inline void _1a76a1c7a_check_type_struct(jule::Ptr<_1a768cc22_Sema>, jule::Ptr<_1a6826829_Struct>&);
inline void _1a76a1e56_check_struct_types(jule::Ptr<_1a768cc22_Sema>);
inline void _1a76a21ed_check_struct_ins_operators(jule::Ptr<_1a768cc22_Sema>, jule::Ptr<_1a6836a48_StructIns>);
inline void _1a76a2484_precheck_struct_type(jule::Ptr<_1a768cc22_Sema>, jule::Ptr<_1a6826829_Struct>&);
inline void _1a76a2660_precheck_struct_types(jule::Ptr<_1a768cc22_Sema>);
inline void _1a76a28d5_check_rets(_1a768cc22_Sema*, jule::Ptr<_1a6872c93_FnIns>&);
inline void _1a76a2c04_check_fn_ins_sc(_1a768cc22_Sema*, jule::Ptr<_1a6872c93_FnIns>&, jule::Ptr<_1a766e374_ScopeChecker>&);
inline void _1a76a3023_check_fn_ins_caller(jule::Ptr<_1a768cc22_Sema>, jule::Ptr<_1a6872c93_FnIns>&, jule::Ptr<_1a527737a_Token>);
inline void _1a76a3298_check_fn_ins(jule::Ptr<_1a768cc22_Sema>, jule::Ptr<_1a6872c93_FnIns>&);
inline void _1a76a351d_check_type_fn(jule::Ptr<_1a768cc22_Sema>, jule::Ptr<_1a68709c7_Fn>&);
inline void _1a76a3793_check_test_fn(_1a768cc22_Sema*, jule::Ptr<_1a6872c93_FnIns>&);
inline void _1a76a3a18_precheck_type_fn(jule::Ptr<_1a768cc22_Sema>, jule::Ptr<_1a68709c7_Fn>&);
inline void _1a76a3be4_precheck_fn_types(jule::Ptr<_1a768cc22_Sema>);
inline void _1a76a3dc0_check_fn_types(jule::Ptr<_1a768cc22_Sema>);
inline void _1a76a409b_check_package_types(jule::Ptr<_1a768cc22_Sema>);
inline void _1a76a4277_set_file_sema_fields(jule::Ptr<_1a768cc22_Sema>);
inline void _1a76a4453_set_sema_fields(jule::Ptr<_1a768cc22_Sema>);
inline void _1a76a46c8_check(jule::Ptr<_1a768cc22_Sema>, jule::Slice<jule::Ptr<_1a76e8e26_SymbolTable>>&);
struct _1a768cc22_Sema {
	jule::Slice<_1a43349cc_Log> _field_errors = jule::Slice<_1a43349cc_Log>();
	jule::Slice<jule::Ptr<_1a76e8e26_SymbolTable>> _field_files = jule::Slice<jule::Ptr<_1a76e8e26_SymbolTable>>();
	jule::Ptr<_1a76e8e26_SymbolTable> _field_file = jule::Ptr<_1a76e8e26_SymbolTable>();
	jule::I64 _field_flags = 0LL;
	

	_1a768cc22_Sema(void) = default;

	inline bool operator==(_1a768cc22_Sema _other) {
		return 
			this->_field_errors == _other._field_errors &&
			this->_field_files == _other._field_files &&
			this->_field_file == _other._field_file &&
			this->_field_flags == _other._field_flags;
	}

	inline bool operator!=(_1a768cc22_Sema _other) { return !this->operator==(_other); }


};
inline _1a76a4a80_MissingRetChecker static__1a76a4e48_new(void);
inline jule::Bool _1a76a5223_check_conditional(_1a76a4a80_MissingRetChecker*, jule::Ptr<_1a7609e69_Conditional>);
inline jule::Bool _1a76a5531_check_match(_1a76a4a80_MissingRetChecker*, jule::Ptr<_1a766d4b6_Match>);
inline jule::Bool _1a76a583e_check_inf_iter(_1a76a4a80_MissingRetChecker*, jule::Ptr<_1a761aa90_InfIter>);
inline jule::Bool _1a76a5b4c_check_scope(_1a76a4a80_MissingRetChecker*, jule::Ptr<_1a7658803_Scope>);
inline jule::Bool _1a76a5e5a_check(_1a76a4a80_MissingRetChecker*, jule::Ptr<_1a7658803_Scope>);
struct _1a76a4a80_MissingRetChecker {
	jule::Slice<jule::Uintptr> _field_breaked = jule::Slice<jule::Uintptr>();
	jule::Bool _field_falled = jule::Bool();
	

	_1a76a4a80_MissingRetChecker(void) = default;

	inline bool operator==(_1a76a4a80_MissingRetChecker _other) {
		return 
			this->_field_breaked == _other._field_breaked &&
			this->_field_falled == _other._field_falled;
	}

	inline bool operator!=(_1a76a4a80_MissingRetChecker _other) { return !this->operator==(_other); }


};
struct _1a76a6752_IterRelation {
	jule::Ptr<_1a76a7720_Var> _field_range = jule::Ptr<_1a76a7720_Var>();
	

	_1a76a6752_IterRelation(void) = default;

	inline bool operator==(_1a76a6752_IterRelation _other) {
		return 
			this->_field_range == _other._field_range;
	}

	inline bool operator!=(_1a76a6752_IterRelation _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a76a7ac7_is_initialized(_1a76a7720_Var*);
inline jule::Bool _1a76a7d3b_is_type_inferred(_1a76a7720_Var*);
struct _1a76a7720_Var {
	jule::Ptr<_1a7658803_Scope> _field_scope = jule::Ptr<_1a7658803_Scope>();
	jule::Ptr<_1a527737a_Token> _field_token = jule::Ptr<_1a527737a_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_constant = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_used = jule::Bool();
	jule::Bool _field_statically = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Ptr<_1a772b772_TypeSymbol> _field_kind = jule::Ptr<_1a772b772_TypeSymbol>();
	jule::Ptr<_1a76eee2c_Value> _field_value = jule::Ptr<_1a76eee2c_Value>();
	jule::Ptr<_1a6875988_ReferenceStack> _field_refers = jule::Ptr<_1a6875988_ReferenceStack>();
	jule::Slice<jule::Ptr<_1a6852525_Directive>> _field_directives = jule::Slice<jule::Ptr<_1a6852525_Directive>>();
	jule::Ptr<_1a76a6752_IterRelation> _field_iter_relation = jule::Ptr<_1a76a6752_IterRelation>();
	jule::Slice<jule::Ptr<_1a76a7720_Var>> _field_depends = jule::Slice<jule::Ptr<_1a76a7720_Var>>();
	

	_1a76a7720_Var(void) = default;

	inline bool operator==(_1a76a7720_Var _other) {
		return 
			this->_field_scope == _other._field_scope &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_constant == _other._field_constant &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_public == _other._field_public &&
			this->_field_used == _other._field_used &&
			this->_field_statically == _other._field_statically &&
			this->_field_reference == _other._field_reference &&
			this->_field_kind == _other._field_kind &&
			this->_field_value == _other._field_value &&
			this->_field_refers == _other._field_refers &&
			this->_field_directives == _other._field_directives &&
			this->_field_iter_relation == _other._field_iter_relation &&
			this->_field_depends == _other._field_depends;
	}

	inline bool operator!=(_1a76a7720_Var _other) { return !this->operator==(_other); }


};
inline jule::Bool static__1a76a8897_dispose(jule::Ptr<_1a68709c7_Fn>);
inline jule::Bool static__1a76a8b3e_to_str(jule::Ptr<_1a68709c7_Fn>);
inline jule::Bool static__1a76a8e80_logical(jule::Ptr<_1a68709c7_Fn>&, jule::Str);
inline jule::Bool static__1a76a9227_eq(jule::Ptr<_1a68709c7_Fn>);
inline jule::Bool static__1a76a94be_gt(jule::Ptr<_1a68709c7_Fn>);
inline jule::Bool static__1a76a9766_gt_eq(jule::Ptr<_1a68709c7_Fn>);
inline jule::Bool static__1a76a9a0d_lt(jule::Ptr<_1a68709c7_Fn>);
inline jule::Bool static__1a76a9ca5_lt_eq(jule::Ptr<_1a68709c7_Fn>);
inline jule::Bool static__1a76aa0e6_result(jule::Ptr<_1a68709c7_Fn>&, jule::Str);
inline jule::Bool static__1a76aa38d_shl(jule::Ptr<_1a68709c7_Fn>);
inline jule::Bool static__1a76aa635_shr(jule::Ptr<_1a68709c7_Fn>);
inline jule::Bool static__1a76aa8cc_add(jule::Ptr<_1a68709c7_Fn>);
inline jule::Bool static__1a76aab74_sub(jule::Ptr<_1a68709c7_Fn>);
inline jule::Bool static__1a76aae1b_div(jule::Ptr<_1a68709c7_Fn>);
inline jule::Bool static__1a76ab1b3_mul(jule::Ptr<_1a68709c7_Fn>);
inline jule::Bool static__1a76ab45a_mod(jule::Ptr<_1a68709c7_Fn>);
inline jule::Bool static__1a76ab702_bit_and(jule::Ptr<_1a68709c7_Fn>);
inline jule::Bool static__1a76ab999_bit_or(jule::Ptr<_1a68709c7_Fn>);
inline jule::Bool static__1a76abc41_bit_xor(jule::Ptr<_1a68709c7_Fn>);
inline jule::Bool static__1a76ac082_unary(jule::Ptr<_1a68709c7_Fn>&, jule::Str);
inline jule::Bool static__1a76ac329_neg(jule::Ptr<_1a68709c7_Fn>);
inline jule::Bool static__1a76ac5c1_pos(jule::Ptr<_1a68709c7_Fn>);
inline jule::Bool static__1a76ac868_bit_not(jule::Ptr<_1a68709c7_Fn>);
inline jule::Bool static__1a76acba9_assign(jule::Ptr<_1a68709c7_Fn>&, jule::Str);
inline jule::Bool static__1a76ace51_add_assign(jule::Ptr<_1a68709c7_Fn>);
inline jule::Bool static__1a76ad1e8_sub_assign(jule::Ptr<_1a68709c7_Fn>);
inline jule::Bool static__1a76ad490_div_assign(jule::Ptr<_1a68709c7_Fn>);
inline jule::Bool static__1a76ad737_mul_assign(jule::Ptr<_1a68709c7_Fn>);
inline jule::Bool static__1a76ad9ce_mod_assign(jule::Ptr<_1a68709c7_Fn>);
inline jule::Bool static__1a76adc76_shl_assign(jule::Ptr<_1a68709c7_Fn>);
inline jule::Bool static__1a76ae01d_shr_assign(jule::Ptr<_1a68709c7_Fn>);
inline jule::Bool static__1a76ae2b5_bit_or_assign(jule::Ptr<_1a68709c7_Fn>);
inline jule::Bool static__1a76ae55c_bit_and_assign(jule::Ptr<_1a68709c7_Fn>);
inline jule::Bool static__1a76ae804_bit_xor_assign(jule::Ptr<_1a68709c7_Fn>);
struct _1a76a8226_FuncPattern {
	

	_1a76a8226_FuncPattern(void) = default;

	inline bool operator==(_1a76a8226_FuncPattern _other) { return true; }

	inline bool operator!=(_1a76a8226_FuncPattern _other) { return !this->operator==(_other); }


};
inline void _1a76da4bc_push_err(_1a76da104_TypeCompatibilityChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1a76da731_check_trait(_1a76da104_TypeCompatibilityChecker*);
inline jule::Bool _1a76da995_check_ptr(_1a76da104_TypeCompatibilityChecker*);
inline jule::Bool _1a76dac09_check_prim(_1a76da104_TypeCompatibilityChecker*);
inline jule::Bool _1a76dae6d_check(_1a76da104_TypeCompatibilityChecker*);
struct _1a76da104_TypeCompatibilityChecker {
	jule::Ptr<_1a768cc22_Sema> _field_s = jule::Ptr<_1a768cc22_Sema>();
	jule::Ptr<_1a77278d3_TypeKind> _field_dest = jule::Ptr<_1a77278d3_TypeKind>();
	jule::Ptr<_1a77278d3_TypeKind> _field_src = jule::Ptr<_1a77278d3_TypeKind>();
	jule::Ptr<_1a527737a_Token> _field_error_token = jule::Ptr<_1a527737a_Token>();
	

	_1a76da104_TypeCompatibilityChecker(void) = default;

	inline bool operator==(_1a76da104_TypeCompatibilityChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_src == _other._field_src &&
			this->_field_error_token == _other._field_error_token;
	}

	inline bool operator!=(_1a76da104_TypeCompatibilityChecker _other) { return !this->operator==(_other); }


};
inline void _1a76db91e_push_err(_1a76db4ac_AssignTypeChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1a76dbb83_check_validity(_1a76db4ac_AssignTypeChecker*);
inline jule::Bool _1a76dbde7_check_const(_1a76db4ac_AssignTypeChecker*);
inline jule::Bool _1a76dc15b_is_prim(_1a76db4ac_AssignTypeChecker*);
inline jule::Bool _1a76dc3c0_check_compatibility(_1a76db4ac_AssignTypeChecker*);
inline jule::Bool _1a76dc634_check(_1a76db4ac_AssignTypeChecker*);
struct _1a76db4ac_AssignTypeChecker {
	jule::Ptr<_1a768cc22_Sema> _field_s = jule::Ptr<_1a768cc22_Sema>();
	jule::Ptr<_1a77278d3_TypeKind> _field_dest = jule::Ptr<_1a77278d3_TypeKind>();
	jule::Ptr<_1a76edda4_Data> _field_d = jule::Ptr<_1a76edda4_Data>();
	jule::Ptr<_1a527737a_Token> _field_error_token = jule::Ptr<_1a527737a_Token>();
	

	_1a76db4ac_AssignTypeChecker(void) = default;

	inline bool operator==(_1a76db4ac_AssignTypeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_d == _other._field_d &&
			this->_field_error_token == _other._field_error_token;
	}

	inline bool operator!=(_1a76db4ac_AssignTypeChecker _other) { return !this->operator==(_other); }


};
inline void _1a76dd38d_push_generic(_1a76dcd0a_DynamicTypeAnnotation*, jule::Ptr<_1a77278d3_TypeKind>&, jule::I64);
inline jule::Bool _1a76dd668_annotate_prim(_1a76dcd0a_DynamicTypeAnnotation*, jule::Ptr<_1a77278d3_TypeKind>&);
inline jule::Bool _1a76dd976_annotate_slc(_1a76dcd0a_DynamicTypeAnnotation*, jule::Ptr<_1a77278d3_TypeKind>&);
inline jule::Bool _1a76ddd2d_check_map_key(_1a76dcd0a_DynamicTypeAnnotation*, jule::Ptr<_1a77278d3_TypeKind>*, jule::Ptr<_1a77278d3_TypeKind>&);
inline jule::Bool _1a76de13b_annotate_map(_1a76dcd0a_DynamicTypeAnnotation*, jule::Ptr<_1a77278d3_TypeKind>&);
inline jule::Bool _1a76de449_annotate_fn(_1a76dcd0a_DynamicTypeAnnotation*, jule::Ptr<_1a77278d3_TypeKind>&);
inline jule::Bool _1a76de757_annotate_ptr(_1a76dcd0a_DynamicTypeAnnotation*, jule::Ptr<_1a77278d3_TypeKind>&);
inline jule::Bool _1a76dea65_annotate_sptr(_1a76dcd0a_DynamicTypeAnnotation*, jule::Ptr<_1a77278d3_TypeKind>&);
inline jule::Bool _1a76ded73_annotate_any(_1a76dcd0a_DynamicTypeAnnotation*, jule::Ptr<_1a77278d3_TypeKind>&);
inline jule::Bool _1a76e0181_annotate_kind(_1a76dcd0a_DynamicTypeAnnotation*, jule::Ptr<_1a77278d3_TypeKind>&);
inline jule::Bool _1a76e03e5_annotate(_1a76dcd0a_DynamicTypeAnnotation*);
struct _1a76dcd0a_DynamicTypeAnnotation {
	jule::Ptr<_1a7700922_Eval> _field_e = jule::Ptr<_1a7700922_Eval>();
	jule::Ptr<_1a6872c93_FnIns> _field_f = jule::Ptr<_1a6872c93_FnIns>();
	jule::Ptr<_1a6871e07_ParamIns> _field_p = jule::Ptr<_1a6871e07_ParamIns>();
	jule::Ptr<_1a76edda4_Data> _field_a = jule::Ptr<_1a76edda4_Data>();
	jule::Ptr<_1a527737a_Token> _field_error_token = jule::Ptr<_1a527737a_Token>();
	jule::Ptr<_1a77278d3_TypeKind>* _field_k = nullptr;
	

	_1a76dcd0a_DynamicTypeAnnotation(void) = default;

	inline bool operator==(_1a76dcd0a_DynamicTypeAnnotation _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_f == _other._field_f &&
			this->_field_p == _other._field_p &&
			this->_field_a == _other._field_a &&
			this->_field_error_token == _other._field_error_token &&
			this->_field_k == _other._field_k;
	}

	inline bool operator!=(_1a76dcd0a_DynamicTypeAnnotation _other) { return !this->operator==(_other); }


};
inline void _1a76e111b_push_err_token(_1a76e0abb_FnCallArgChecker*, jule::Ptr<_1a527737a_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1a76e143a_push_err(_1a76e0abb_FnCallArgChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1a6871e07_ParamIns>> _1a76e169e_get_params(_1a76e0abb_FnCallArgChecker*);
inline jule::Bool _1a76e19ac_check_counts(_1a76e0abb_FnCallArgChecker*, jule::Slice<jule::Ptr<_1a6871e07_ParamIns>>&);
inline jule::Bool _1a76e1e0d_check_arg(_1a76e0abb_FnCallArgChecker*, jule::Ptr<_1a6871e07_ParamIns>&, jule::Ptr<_1a76edda4_Data>&, jule::Ptr<_1a527737a_Token>&);
inline jule::Bool _1a76e22b5_push(_1a76e0abb_FnCallArgChecker*, jule::Ptr<_1a6871e07_ParamIns>&, jule::Ptr<_1a6855e41_Expr>);
inline jule::Bool _1a76e266c_push_variadic(_1a76e0abb_FnCallArgChecker*, jule::Ptr<_1a6871e07_ParamIns>&, jule::I64);
inline jule::Bool _1a76e297a_check_args(_1a76e0abb_FnCallArgChecker*, jule::Slice<jule::Ptr<_1a6871e07_ParamIns>>&);
inline jule::Bool _1a76e2c11_check_dynamic_type_annotation(_1a76e0abb_FnCallArgChecker*);
inline jule::Bool _1a76e2e86_check(_1a76e0abb_FnCallArgChecker*);
struct _1a76e0abb_FnCallArgChecker {
	jule::Ptr<_1a7700922_Eval> _field_e = jule::Ptr<_1a7700922_Eval>();
	jule::Slice<jule::Ptr<_1a6855e41_Expr>> _field_args = jule::Slice<jule::Ptr<_1a6855e41_Expr>>();
	jule::Ptr<_1a527737a_Token> _field_error_token = jule::Ptr<_1a527737a_Token>();
	jule::Ptr<_1a6872c93_FnIns> _field_f = jule::Ptr<_1a6872c93_FnIns>();
	jule::Bool _field_dynamic_annotation = jule::Bool();
	jule::Slice<jule::Any> _field_arg_models = jule::Slice<jule::Any>();
	

	_1a76e0abb_FnCallArgChecker(void) = default;

	inline bool operator==(_1a76e0abb_FnCallArgChecker _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_args == _other._field_args &&
			this->_field_error_token == _other._field_error_token &&
			this->_field_f == _other._field_f &&
			this->_field_dynamic_annotation == _other._field_dynamic_annotation &&
			this->_field_arg_models == _other._field_arg_models;
	}

	inline bool operator!=(_1a76e0abb_FnCallArgChecker _other) { return !this->operator==(_other); }


};
inline void _1a76e39d1_push_err(_1a76e34c5_StructLitChecker*, jule::Ptr<_1a527737a_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1a76e3d00_push_suggestion(_1a76e34c5_StructLitChecker*, jule::Str, jule::Slice<jule::Any>);
inline void _1a76e41b8_push_match(_1a76e34c5_StructLitChecker*, jule::Ptr<_1a6830899_FieldIns>&, jule::Ptr<_1a76edda4_Data>&, jule::Ptr<_1a527737a_Token>&);
inline void _1a76e44d7_check_pair(_1a76e34c5_StructLitChecker*, jule::Ptr<_1a685a929_FieldExprPair>&, jule::Slice<jule::Ptr<_1a6855e41_Expr>>&);
inline jule::Bool _1a76e47e5_ready_exprs(_1a76e34c5_StructLitChecker*, jule::Slice<jule::Ptr<_1a6855e41_Expr>>&);
inline void _1a76e4a6a_check(_1a76e34c5_StructLitChecker*, jule::Slice<jule::Ptr<_1a6855e41_Expr>>&);
struct _1a76e34c5_StructLitChecker {
	jule::Ptr<_1a7700922_Eval> _field_e = jule::Ptr<_1a7700922_Eval>();
	jule::Ptr<_1a527737a_Token> _field_error_token = jule::Ptr<_1a527737a_Token>();
	jule::Ptr<_1a6836a48_StructIns> _field_s = jule::Ptr<_1a6836a48_StructIns>();
	jule::Slice<jule::Ptr<_1a6827e8a_StructArgExprModel>> _field_args = jule::Slice<jule::Ptr<_1a6827e8a_StructArgExprModel>>();
	

	_1a76e34c5_StructLitChecker(void) = default;

	inline bool operator==(_1a76e34c5_StructLitChecker _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_error_token == _other._field_error_token &&
			this->_field_s == _other._field_s &&
			this->_field_args == _other._field_args;
	}

	inline bool operator!=(_1a76e34c5_StructLitChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a76a7720_Var> _1a76e554e_build_var(_1a76e50a9_RangeChecker*, jule::Ptr<_1a68631d4_VarDecl>&);
inline void _1a76e572a_set_size_key(_1a76e50a9_RangeChecker*);
inline void _1a76e5b15_check_range_expr_validity(_1a76e50a9_RangeChecker*, jule::Ptr<_1a76edda4_Data>&, jule::Ptr<_1a76a7720_Var>&, jule::Ptr<_1a77278d3_TypeKind>&);
inline void _1a76e5d02_check_slice(_1a76e50a9_RangeChecker*);
inline void _1a76e5ecd_check_array(_1a76e50a9_RangeChecker*);
inline void _1a76e61a9_check_map_key_a(_1a76e50a9_RangeChecker*);
inline void _1a76e6385_check_map_key_b(_1a76e50a9_RangeChecker*);
inline void _1a76e6561_check_map(_1a76e50a9_RangeChecker*);
inline void _1a76e673c_check_str(_1a76e50a9_RangeChecker*);
inline jule::Bool _1a76e69a1_check(_1a76e50a9_RangeChecker*);
struct _1a76e50a9_RangeChecker {
	jule::Ptr<_1a766e374_ScopeChecker> _field_sc = jule::Ptr<_1a766e374_ScopeChecker>();
	jule::Ptr<_1a6864c74_RangeKind> _field_rang = jule::Ptr<_1a6864c74_RangeKind>();
	jule::Ptr<_1a7648b23_RangeIter> _field_kind = jule::Ptr<_1a7648b23_RangeIter>();
	jule::Ptr<_1a76edda4_Data> _field_d = jule::Ptr<_1a76edda4_Data>();
	

	_1a76e50a9_RangeChecker(void) = default;

	inline bool operator==(_1a76e50a9_RangeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_rang == _other._field_rang &&
			this->_field_kind == _other._field_kind &&
			this->_field_d == _other._field_d;
	}

	inline bool operator!=(_1a76e50a9_RangeChecker _other) { return !this->operator==(_other); }


};
inline void _1a76e76e9_prepare_types(_1a76e7243_RetTypeChecker*);
inline void _1a76e796e_prepare_exprs(_1a76e7243_RetTypeChecker*, jule::Ptr<_1a6855e41_Expr>&);
inline void _1a76e7b4a_ret_vars(_1a76e7243_RetTypeChecker*);
inline void _1a76e7d26_check_exprs(_1a76e7243_RetTypeChecker*);
inline jule::Bool _1a76e8134_check(_1a76e7243_RetTypeChecker*, jule::Ptr<_1a6855e41_Expr>&);
struct _1a76e7243_RetTypeChecker {
	jule::Ptr<_1a766e374_ScopeChecker> _field_sc = jule::Ptr<_1a766e374_ScopeChecker>();
	jule::Ptr<_1a6872c93_FnIns> _field_f = jule::Ptr<_1a6872c93_FnIns>();
	jule::Slice<jule::Ptr<_1a77278d3_TypeKind>> _field_types = jule::Slice<jule::Ptr<_1a77278d3_TypeKind>>();
	jule::Slice<jule::Ptr<_1a6855e41_Expr>> _field_exprs = jule::Slice<jule::Ptr<_1a6855e41_Expr>>();
	jule::Slice<jule::Ptr<_1a76a7720_Var>> _field_vars = jule::Slice<jule::Ptr<_1a76a7720_Var>>();
	jule::Ptr<_1a527737a_Token> _field_error_token = jule::Ptr<_1a527737a_Token>();
	jule::Any _field_model = jule::Any();
	

	_1a76e7243_RetTypeChecker(void) = default;

	inline bool operator==(_1a76e7243_RetTypeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_f == _other._field_f &&
			this->_field_types == _other._field_types &&
			this->_field_exprs == _other._field_exprs &&
			this->_field_vars == _other._field_vars &&
			this->_field_error_token == _other._field_error_token &&
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_1a76e7243_RetTypeChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a7685038_ImportInfo> _1a76e9432_find_package(_1a76e8e26_SymbolTable*, jule::Str);
inline jule::Ptr<_1a7685038_ImportInfo> _1a76e9740_select_package(_1a76e8e26_SymbolTable*, jule::Fn<jule::Bool(jule::Ptr<_1a7685038_ImportInfo>)>);
inline jule::Ptr<_1a76a7720_Var> _1a76e9ae7_find_var(_1a76e8e26_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1a7726b9b_TypeAlias> _1a76e9e9e_find_type_alias(_1a76e8e26_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1a6826829_Struct> _1a76ea356_find_struct(_1a76e8e26_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1a68709c7_Fn> _1a76ea70d_find_fn(_1a76e8e26_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1a68d46b7_Trait> _1a76eaa1b_find_trait(_1a76e8e26_SymbolTable*, jule::Str);
inline jule::Ptr<_1a6982435_Enum> _1a76ead29_find_enum(_1a76e8e26_SymbolTable*, jule::Str);
inline jule::Ptr<_1a76a7720_Var> _1a76eb39b___find_var(_1a76e8e26_SymbolTable*, jule::Str, jule::Bool, jule::Bool);
inline jule::Ptr<_1a7726b9b_TypeAlias> _1a76eb7ec___find_type_alias(_1a76e8e26_SymbolTable*, jule::Str, jule::Bool, jule::Bool);
inline jule::Any _1a76ebba4_def_by_ident(_1a76e8e26_SymbolTable*, jule::Str, jule::Bool);
inline jule::Bool _1a76ec105_is_duplicated_ident(_1a76e8e26_SymbolTable*, jule::Uintptr, jule::Str, jule::Bool);
struct _1a76e8e26_SymbolTable {
	jule::Ptr<_1a527c76a_File> _field_file = jule::Ptr<_1a527c76a_File>();
	jule::Slice<_1a6876d74_Pass> _field_passes = jule::Slice<_1a6876d74_Pass>();
	jule::Slice<jule::Ptr<_1a7685038_ImportInfo>> _field_imports = jule::Slice<jule::Ptr<_1a7685038_ImportInfo>>();
	jule::Slice<jule::Ptr<_1a76a7720_Var>> _field_vars = jule::Slice<jule::Ptr<_1a76a7720_Var>>();
	jule::Slice<jule::Ptr<_1a7726b9b_TypeAlias>> _field_type_aliases = jule::Slice<jule::Ptr<_1a7726b9b_TypeAlias>>();
	jule::Slice<jule::Ptr<_1a6826829_Struct>> _field_structs = jule::Slice<jule::Ptr<_1a6826829_Struct>>();
	jule::Slice<jule::Ptr<_1a68709c7_Fn>> _field_funcs = jule::Slice<jule::Ptr<_1a68709c7_Fn>>();
	jule::Slice<jule::Ptr<_1a68d46b7_Trait>> _field_traits = jule::Slice<jule::Ptr<_1a68d46b7_Trait>>();
	jule::Slice<jule::Ptr<_1a6982435_Enum>> _field_enums = jule::Slice<jule::Ptr<_1a6982435_Enum>>();
	jule::Slice<jule::Ptr<_1a6c31b02_Impl>> _field_impls = jule::Slice<jule::Ptr<_1a6c31b02_Impl>>();
	

	_1a76e8e26_SymbolTable(void) = default;

	inline bool operator==(_1a76e8e26_SymbolTable _other) {
		return 
			this->_field_file == _other._field_file &&
			this->_field_passes == _other._field_passes &&
			this->_field_imports == _other._field_imports &&
			this->_field_vars == _other._field_vars &&
			this->_field_type_aliases == _other._field_type_aliases &&
			this->_field_structs == _other._field_structs &&
			this->_field_funcs == _other._field_funcs &&
			this->_field_traits == _other._field_traits &&
			this->_field_enums == _other._field_enums &&
			this->_field_impls == _other._field_impls;
	}

	inline bool operator!=(_1a76e8e26_SymbolTable _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a76ee28e_is_nil(_1a76edda4_Data*);
inline jule::Bool _1a76ee503_is_void(_1a76edda4_Data*);
inline jule::Bool _1a76ee767_is_const(_1a76edda4_Data*);
inline jule::Bool _1a76eea75_good_operand(_1a76edda4_Data*, jule::Ptr<_1a76edda4_Data>&);
struct _1a76edda4_Data {
	jule::Ptr<_1a77278d3_TypeKind> _field_kind = jule::Ptr<_1a77278d3_TypeKind>();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Bool _field_lvalue = jule::Bool();
	jule::Bool _field_is_rune = jule::Bool();
	jule::Any _field_model = jule::Any();
	jule::Bool _field_decl = jule::Bool();
	jule::Ptr<_1a75c3251_Const> _field_constant = jule::Ptr<_1a75c3251_Const>();
	

	_1a76edda4_Data(void) = default;

	inline bool operator==(_1a76edda4_Data _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_reference == _other._field_reference &&
			this->_field_lvalue == _other._field_lvalue &&
			this->_field_is_rune == _other._field_is_rune &&
			this->_field_model == _other._field_model &&
			this->_field_decl == _other._field_decl &&
			this->_field_constant == _other._field_constant;
	}

	inline bool operator!=(_1a76edda4_Data _other) { return !this->operator==(_other); }


};
struct _1a76eee2c_Value {
	jule::Ptr<_1a6855e41_Expr> _field_expr = jule::Ptr<_1a6855e41_Expr>();
	jule::Ptr<_1a76edda4_Data> _field_data = jule::Ptr<_1a76edda4_Data>();
	

	_1a76eee2c_Value(void) = default;

	inline bool operator==(_1a76eee2c_Value _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1a76eee2c_Value _other) { return !this->operator==(_other); }


};
inline void _1a7700dea_push_err(_1a7700922_Eval*, jule::Ptr<_1a527737a_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1a7701219_push_suggestion(_1a7700922_Eval*, jule::Str, jule::Slice<jule::Any>);
inline void _1a77013e5_allow_builtin(_1a7700922_Eval*);
inline void _1a77015c1_disallow_builtin(_1a7700922_Eval*);
inline jule::Bool _1a7701835_is_unsafe(_1a7700922_Eval*);
inline jule::Bool _1a7701a99_is_global(_1a7700922_Eval*);
inline jule::Bool _1a7701da7_apply_numeric_prefix(_1a7700922_Eval*, jule::Ptr<_1a76edda4_Data>&);
inline jule::Ptr<_1a76edda4_Data> _1a770211b_lit_nil(_1a7700922_Eval*);
inline jule::Ptr<_1a76edda4_Data> _1a7702429_lit_str(_1a7700922_Eval*, jule::Ptr<_1a6856aac_LitExpr>&);
inline jule::Ptr<_1a76edda4_Data> _1a7702737_lit_bool(_1a7700922_Eval*, jule::Ptr<_1a6856aac_LitExpr>&);
inline jule::Ptr<_1a76edda4_Data> _1a7702a45_lit_rune(_1a7700922_Eval*, jule::Ptr<_1a6856aac_LitExpr>&);
inline jule::Ptr<_1a76edda4_Data> _1a7702d53_lit_float(_1a7700922_Eval*, jule::Ptr<_1a6856aac_LitExpr>&);
inline jule::Ptr<_1a76edda4_Data> _1a7703161_lit_int(_1a7700922_Eval*, jule::Ptr<_1a6856aac_LitExpr>&);
inline jule::Ptr<_1a76edda4_Data> _1a770346e_lit_num(_1a7700922_Eval*, jule::Ptr<_1a6856aac_LitExpr>&);
inline jule::Ptr<_1a76edda4_Data> _1a770377c_eval_lit(_1a7700922_Eval*, jule::Ptr<_1a6856aac_LitExpr>);
inline jule::Any _1a7703a8a_find_builtins(_1a7700922_Eval*, jule::Str);
inline jule::Any _1a7703e42_get_def(_1a7700922_Eval*, jule::Str, jule::Bool);
inline void _1a9d86e1e_push_reference(_1a7700922_Eval*, jule::Ptr<_1a6872c93_FnIns>&);
inline void _1a9d99eed_push_reference(_1a7700922_Eval*, jule::Ptr<_1a76a7720_Var>&);
inline void _1a9e3deb5_push_reference(_1a7700922_Eval*, jule::Ptr<_1a6836a48_StructIns>&);
inline jule::Ptr<_1a76edda4_Data> _1a77044c5___eval_enum(_1a7700922_Eval*, jule::Ptr<_1a6982435_Enum>);
inline jule::Ptr<_1a76edda4_Data> _1a770487c_eval_enum(_1a7700922_Eval*, jule::Ptr<_1a6982435_Enum>, jule::Ptr<_1a527737a_Token>);
inline jule::Ptr<_1a76edda4_Data> _1a7704b8a___eval_struct(_1a7700922_Eval*, jule::Ptr<_1a6836a48_StructIns>);
inline jule::Ptr<_1a76edda4_Data> _1a7705042_eval_struct(_1a7700922_Eval*, jule::Ptr<_1a6836a48_StructIns>, jule::Ptr<_1a527737a_Token>);
inline jule::Ptr<_1a76edda4_Data> _1a7705350_eval_fn_ins(_1a7700922_Eval*, jule::Ptr<_1a6872c93_FnIns>);
inline void _1a770566e_check_deprecated(_1a7700922_Eval*, jule::Slice<jule::Ptr<_1a6852525_Directive>>&, jule::Ptr<_1a527737a_Token>);
inline jule::Ptr<_1a76edda4_Data> _1a7705a26_eval_fn(_1a7700922_Eval*, jule::Ptr<_1a68709c7_Fn>, jule::Ptr<_1a527737a_Token>);
inline void _1a7705e11_push_illegal_cycle_error(_1a7700922_Eval*, jule::Ptr<_1a76a7720_Var>&, jule::Ptr<_1a76a7720_Var>&, jule::Str&);
inline jule::Bool _1a77062c9_check_cross_cycle(_1a7700922_Eval*, jule::Ptr<_1a76a7720_Var>&, jule::Str&);
inline jule::Bool _1a7706681_check_illegal_cycles(_1a7700922_Eval*, jule::Ptr<_1a76a7720_Var>&, jule::Ptr<_1a527737a_Token>);
inline jule::Ptr<_1a76edda4_Data> _1a7706a38_eval_var(_1a7700922_Eval*, jule::Ptr<_1a76a7720_Var>, jule::Ptr<_1a527737a_Token>);
inline jule::Ptr<_1a76edda4_Data> _1a7706de0_eval_type_alias(_1a7700922_Eval*, jule::Ptr<_1a7726b9b_TypeAlias>, jule::Ptr<_1a527737a_Token>);
inline jule::Ptr<_1a76edda4_Data> _1a7707297_eval_def(_1a7700922_Eval*, jule::Any, jule::Ptr<_1a527737a_Token>);
inline jule::Ptr<_1a76edda4_Data> _1a77075a5_eval_ident(_1a7700922_Eval*, jule::Ptr<_1a6857ae1_IdentExpr>);
inline jule::Ptr<_1a76edda4_Data> _1a77078b3_eval_unary(jule::Ptr<_1a7700922_Eval>, jule::Ptr<_1a68582ea_UnaryExpr>);
inline jule::Ptr<_1a76edda4_Data> _1a7707bc1_eval_variadic(jule::Ptr<_1a7700922_Eval>, jule::Ptr<_1a68586a2_VariadicExpr>);
inline jule::Ptr<_1a76edda4_Data> _1a7707ece_eval_unsafe(jule::Ptr<_1a7700922_Eval>, jule::Ptr<_1a68572b6_UnsafeExpr>);
inline jule::Ptr<_1a76edda4_Data> _1a77082dc_eval_arr(jule::Ptr<_1a7700922_Eval>, jule::Ptr<_1a685c3ba_SliceExpr>);
inline jule::Ptr<_1a76edda4_Data> _1a7708694_eval_exp_slc(jule::Ptr<_1a7700922_Eval>, jule::Ptr<_1a685c3ba_SliceExpr>, jule::Ptr<_1a77278d3_TypeKind>);
inline jule::Ptr<_1a76edda4_Data> _1a77089a2_eval_slice_expr(jule::Ptr<_1a7700922_Eval>, jule::Ptr<_1a685c3ba_SliceExpr>);
inline void _1a7708ce3_check_integer_indexing_by_data(_1a7700922_Eval*, jule::Ptr<_1a76edda4_Data>&, jule::Ptr<_1a527737a_Token>);
inline void _1a77091bc_indexing_ptr(_1a7700922_Eval*, jule::Ptr<_1a76edda4_Data>&, jule::Ptr<_1a76edda4_Data>&, jule::Ptr<_1a685ce9d_IndexingExpr>&);
inline void _1a7709585_indexing_arr(_1a7700922_Eval*, jule::Ptr<_1a76edda4_Data>&, jule::Ptr<_1a76edda4_Data>&, jule::Ptr<_1a685ce9d_IndexingExpr>&);
inline void _1a770994d_indexing_slc(_1a7700922_Eval*, jule::Ptr<_1a76edda4_Data>&, jule::Ptr<_1a76edda4_Data>&, jule::Ptr<_1a685ce9d_IndexingExpr>&);
inline void _1a7709d16_indexing_map(_1a7700922_Eval*, jule::Ptr<_1a76edda4_Data>&, jule::Ptr<_1a76edda4_Data>&, jule::Ptr<_1a685ce9d_IndexingExpr>&);
inline void _1a770a1ce_indexing_str(_1a7700922_Eval*, jule::Ptr<_1a76edda4_Data>&, jule::Ptr<_1a76edda4_Data>&, jule::Ptr<_1a685ce9d_IndexingExpr>&);
inline void _1a770a597_to_indexing(_1a7700922_Eval*, jule::Ptr<_1a76edda4_Data>&, jule::Ptr<_1a76edda4_Data>&, jule::Ptr<_1a685ce9d_IndexingExpr>&);
inline jule::Bool _1a770a971_push_generics_from_index_data(jule::Ptr<_1a7700922_Eval>, jule::Ptr<_1a685305e_IdentTypeDecl>&, jule::Ptr<_1a685ce9d_IndexingExpr>&);
inline jule::Ptr<_1a76edda4_Data> _1a770ad5b_eval_ident_decl_from_indexing(jule::Ptr<_1a7700922_Eval>, jule::Ptr<_1a76edda4_Data>&, jule::Ptr<_1a685ce9d_IndexingExpr>&);
inline jule::Ptr<_1a76edda4_Data> _1a770b17a_eval_indexing(jule::Ptr<_1a7700922_Eval>, jule::Ptr<_1a685ce9d_IndexingExpr>);
inline std::tuple<jule::Ptr<_1a76edda4_Data>,jule::Ptr<_1a76edda4_Data>> _1a770b488_eval_slicing_exprs(jule::Ptr<_1a7700922_Eval>, jule::Ptr<_1a685d5a8_SlicingExpr>&);
inline void _1a770b70d_slicing_arr(_1a7700922_Eval*, jule::Ptr<_1a76edda4_Data>&);
inline void _1a770bac6_slicing_str(_1a7700922_Eval*, jule::Ptr<_1a76edda4_Data>&, jule::Ptr<_1a76edda4_Data>&, jule::Ptr<_1a76edda4_Data>&);
inline void _1a770c038_check_slicing(_1a7700922_Eval*, jule::Ptr<_1a76edda4_Data>&, jule::Ptr<_1a76edda4_Data>&, jule::Ptr<_1a76edda4_Data>&, jule::Ptr<_1a685d5a8_SlicingExpr>&);
inline jule::Ptr<_1a76edda4_Data> _1a770c346_eval_slicing(jule::Ptr<_1a7700922_Eval>, jule::Ptr<_1a685d5a8_SlicingExpr>);
inline void _1a770c70e_cast_ptr(_1a7700922_Eval*, jule::Ptr<_1a77278d3_TypeKind>, jule::Ptr<_1a76edda4_Data>, jule::Ptr<_1a527737a_Token>);
inline void _1a770cac7_cast_struct(_1a7700922_Eval*, jule::Ptr<_1a77278d3_TypeKind>, jule::Ptr<_1a76edda4_Data>, jule::Ptr<_1a527737a_Token>);
inline void _1a770ce90_cast_ref(_1a7700922_Eval*, jule::Ptr<_1a77278d3_TypeKind>, jule::Ptr<_1a76edda4_Data>, jule::Ptr<_1a527737a_Token>);
inline void _1a770d358_cast_slc(_1a7700922_Eval*, jule::Ptr<_1a77278d3_TypeKind>, jule::Ptr<_1a76edda4_Data>, jule::Ptr<_1a527737a_Token>);
inline void _1a770d677_cast_str(_1a7700922_Eval*, jule::Ptr<_1a76edda4_Data>, jule::Ptr<_1a527737a_Token>);
inline void _1a770da40_cast_int(_1a7700922_Eval*, jule::Ptr<_1a77278d3_TypeKind>, jule::Ptr<_1a76edda4_Data>, jule::Ptr<_1a527737a_Token>);
inline void _1a770de08_cast_num(_1a7700922_Eval*, jule::Ptr<_1a77278d3_TypeKind>, jule::Ptr<_1a76edda4_Data>, jule::Ptr<_1a527737a_Token>);
inline void _1a770e2c1_cast_prim(_1a7700922_Eval*, jule::Ptr<_1a77278d3_TypeKind>, jule::Ptr<_1a76edda4_Data>, jule::Ptr<_1a527737a_Token>);
inline void _1a770e5e0_cast_constant(_1a7700922_Eval*, jule::Ptr<_1a77278d3_TypeKind>&, jule::Ptr<_1a76edda4_Data>&);
inline jule::Ptr<_1a76edda4_Data> _1a770ea63_eval_cast_by_type_n_data(_1a7700922_Eval*, jule::Ptr<_1a77278d3_TypeKind>, jule::Ptr<_1a76edda4_Data>, jule::Ptr<_1a527737a_Token>);
inline jule::Ptr<_1a76edda4_Data> _1a770ed82_eval_cast(jule::Ptr<_1a7700922_Eval>, jule::Ptr<_1a6858a59_CastExpr>);
inline jule::Ptr<_1a76edda4_Data> _1a7710190_eval_ns_selection(_1a7700922_Eval*, jule::Ptr<_1a6858e11_NsSelectionExpr>);
inline jule::Ptr<_1a76edda4_Data> _1a7710613_eval_struct_lit_explicit(jule::Ptr<_1a7700922_Eval>, jule::Ptr<_1a6836a48_StructIns>, jule::Slice<jule::Ptr<_1a6855e41_Expr>>, jule::Ptr<_1a527737a_Token>);
inline jule::Ptr<_1a76edda4_Data> _1a7710932_eval_struct_lit(jule::Ptr<_1a7700922_Eval>, jule::Ptr<_1a685b1ee_StructLit>);
inline jule::Ptr<_1a76edda4_Data> _1a7710c40_eval_type(_1a7700922_Eval*, jule::Ptr<_1a68529cb_TypeDecl>);
inline void _1a771105e_call_type_fn(jule::Ptr<_1a7700922_Eval>, jule::Ptr<_1a6859e12_FnCallExpr>&, jule::Ptr<_1a76edda4_Data>&);
inline std::tuple<jule::Bool,jule::Bool> _1a7711416_check_fn_call_generics(_1a7700922_Eval*, jule::Ptr<_1a6872c93_FnIns>, jule::Ptr<_1a6859e12_FnCallExpr>);
inline void _1a7711735_call_builtin_fn(jule::Ptr<_1a7700922_Eval>, jule::Ptr<_1a6859e12_FnCallExpr>&, jule::Ptr<_1a76edda4_Data>&);
inline void _1a7711a76_check_fn_of_concurrent_call(_1a7700922_Eval*, jule::Ptr<_1a6872c93_FnIns>&, jule::Ptr<_1a527737a_Token>);
inline void _1a7711e72_process_exceptional_handler(_1a7700922_Eval*, jule::Ptr<_1a6872c93_FnIns>&, jule::Ptr<_1a6859e12_FnCallExpr>&, jule::Ptr<_1a76edda4_Data>&);
inline void _1a77122a2_call_fn(jule::Ptr<_1a7700922_Eval>, jule::Ptr<_1a6859e12_FnCallExpr>&, jule::Ptr<_1a76edda4_Data>&);
inline jule::Ptr<_1a76edda4_Data> _1a77125b0_eval_fn_call(jule::Ptr<_1a7700922_Eval>, jule::Ptr<_1a6859e12_FnCallExpr>);
inline jule::Ptr<_1a76edda4_Data> _1a7712967_eval_enum_static(_1a7700922_Eval*, jule::Ptr<_1a6982435_Enum>, jule::Ptr<_1a527737a_Token>);
inline jule::Ptr<_1a76edda4_Data> _1a7712d1e_eval_struct_static(_1a7700922_Eval*, jule::Ptr<_1a6836a48_StructIns>, jule::Ptr<_1a527737a_Token>);
inline jule::Ptr<_1a76edda4_Data> _1a7713270_eval_trait_sub_ident(_1a7700922_Eval*, jule::Ptr<_1a76edda4_Data>, jule::Ptr<_1a68d46b7_Trait>, jule::Ptr<_1a527737a_Token>);
inline jule::Ptr<_1a76edda4_Data> _1a771376a_eval_struct_sub_ident(_1a7700922_Eval*, jule::Ptr<_1a76edda4_Data>, jule::Ptr<_1a6836a48_StructIns>, jule::Ptr<_1a6859384_SubIdentExpr>, jule::Bool);
inline jule::Ptr<_1a76edda4_Data> _1a7713b22_eval_slice_sub_ident(_1a7700922_Eval*, jule::Ptr<_1a76edda4_Data>, jule::Ptr<_1a527737a_Token>);
inline jule::Ptr<_1a76edda4_Data> _1a7713ec9_eval_array_sub_ident(_1a7700922_Eval*, jule::Ptr<_1a76edda4_Data>, jule::Ptr<_1a527737a_Token>);
inline jule::Ptr<_1a76edda4_Data> _1a7714381_eval_map_sub_ident(_1a7700922_Eval*, jule::Ptr<_1a76edda4_Data>, jule::Ptr<_1a527737a_Token>);
inline jule::Ptr<_1a76edda4_Data> _1a7714738_eval_str_sub_ident(_1a7700922_Eval*, jule::Ptr<_1a76edda4_Data>, jule::Ptr<_1a527737a_Token>);
inline jule::Ptr<_1a76edda4_Data> _1a7714a46_eval_int_type_static(_1a7700922_Eval*, jule::Ptr<_1a527737a_Token>);
inline jule::Ptr<_1a76edda4_Data> _1a7714d54_eval_uint_type_static(_1a7700922_Eval*, jule::Ptr<_1a527737a_Token>);
inline jule::Ptr<_1a76edda4_Data> _1a7715162_eval_i8_type_static(_1a7700922_Eval*, jule::Ptr<_1a527737a_Token>);
inline jule::Ptr<_1a76edda4_Data> _1a7715470_eval_i16_type_static(_1a7700922_Eval*, jule::Ptr<_1a527737a_Token>);
inline jule::Ptr<_1a76edda4_Data> _1a771577d_eval_i32_type_static(_1a7700922_Eval*, jule::Ptr<_1a527737a_Token>);
inline jule::Ptr<_1a76edda4_Data> _1a7715a8b_eval_i64_type_static(_1a7700922_Eval*, jule::Ptr<_1a527737a_Token>);
inline jule::Ptr<_1a76edda4_Data> _1a7715d99_eval_u8_type_static(_1a7700922_Eval*, jule::Ptr<_1a527737a_Token>);
inline jule::Ptr<_1a76edda4_Data> _1a77161a7_eval_u16_type_static(_1a7700922_Eval*, jule::Ptr<_1a527737a_Token>);
inline jule::Ptr<_1a76edda4_Data> _1a77164b5_eval_u32_type_static(_1a7700922_Eval*, jule::Ptr<_1a527737a_Token>);
inline jule::Ptr<_1a76edda4_Data> _1a77167c3_eval_u64_type_static(_1a7700922_Eval*, jule::Ptr<_1a527737a_Token>);
inline jule::Ptr<_1a76edda4_Data> _1a7716ad1_eval_f32_type_tatic(_1a7700922_Eval*, jule::Ptr<_1a527737a_Token>);
inline jule::Ptr<_1a76edda4_Data> _1a7716dde_eval_f64_type_static(_1a7700922_Eval*, jule::Ptr<_1a527737a_Token>);
inline jule::Ptr<_1a76edda4_Data> _1a7717296_eval_prim_static(_1a7700922_Eval*, jule::Str, jule::Ptr<_1a527737a_Token>);
inline jule::Ptr<_1a76edda4_Data> _1a771764d_eval_type_static(_1a7700922_Eval*, jule::Ptr<_1a76edda4_Data>, jule::Ptr<_1a6859384_SubIdentExpr>);
inline jule::Ptr<_1a76edda4_Data> _1a7717a05_eval_obj_sub_ident(_1a7700922_Eval*, jule::Ptr<_1a76edda4_Data>, jule::Ptr<_1a6859384_SubIdentExpr>);
inline jule::Ptr<_1a76edda4_Data> _1a7717d13_eval_sub_ident(jule::Ptr<_1a7700922_Eval>, jule::Ptr<_1a6859384_SubIdentExpr>);
inline jule::Ptr<_1a76edda4_Data> _1a7718121_eval_tuple(jule::Ptr<_1a7700922_Eval>, jule::Ptr<_1a68565d4_TupleExpr>);
inline jule::Ptr<_1a76edda4_Data> _1a77184c8_eval_map(jule::Ptr<_1a7700922_Eval>, jule::Ptr<_1a7732657_Map>, jule::Ptr<_1a685b672_BraceLit>);
inline jule::Ptr<_1a76edda4_Data> _1a77187d6_eval_brace_lit(jule::Ptr<_1a7700922_Eval>, jule::Ptr<_1a685b672_BraceLit>);
inline jule::Ptr<_1a76edda4_Data> _1a7718ae4_eval_anon_fn(_1a7700922_Eval*, jule::Ptr<_1a6862205_FnDecl>);
inline jule::Ptr<_1a76edda4_Data> _1a7718e02_eval_binop(jule::Ptr<_1a7700922_Eval>, jule::Ptr<_1a6859807_BinopExpr>);
inline jule::Ptr<_1a76edda4_Data> _1a7719210_eval_expr_kind(jule::Ptr<_1a7700922_Eval>, jule::Any);
inline jule::Ptr<_1a76edda4_Data> _1a771951d_eval(jule::Ptr<_1a7700922_Eval>, jule::Ptr<_1a6855e41_Expr>);
inline jule::Ptr<_1a76edda4_Data> _1a771982b_eval_expr(jule::Ptr<_1a7700922_Eval>, jule::Ptr<_1a6855e41_Expr>);
struct _1a7700922_Eval {
	jule::Ptr<_1a768cc22_Sema> _field_s = jule::Ptr<_1a768cc22_Sema>();
	jule::Trait<_1a7741e19_Lookup> _field_lookup = jule::Trait<_1a7741e19_Lookup>();
	jule::Ptr<_1a77278d3_TypeKind> _field_prefix = jule::Ptr<_1a77278d3_TypeKind>();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_immutable = jule::Bool();
	jule::Bool _field_ignored = jule::Bool();
	jule::Bool _field_dis_builtin = jule::Bool();
	jule::Ptr<_1a76a7720_Var> _field_owner = jule::Ptr<_1a76a7720_Var>();
	jule::Ptr<_1a6830899_FieldIns> _field_field = jule::Ptr<_1a6830899_FieldIns>();
	jule::Bool _field_arg = jule::Bool();
	

	_1a7700922_Eval(void) = default;

	inline bool operator==(_1a7700922_Eval _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_prefix == _other._field_prefix &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_immutable == _other._field_immutable &&
			this->_field_ignored == _other._field_ignored &&
			this->_field_dis_builtin == _other._field_dis_builtin &&
			this->_field_owner == _other._field_owner &&
			this->_field_field == _other._field_field &&
			this->_field_arg == _other._field_arg;
	}

	inline bool operator!=(_1a7700922_Eval _other) { return !this->operator==(_other); }


};
inline _1a7719c9e_UnaryEval static__1a771a255_new(jule::Ptr<_1a7700922_Eval>);
inline void _1a771a431_minus(_1a7719c9e_UnaryEval*);
inline void _1a771a60c_plus(_1a7719c9e_UnaryEval*);
inline void _1a771a7d8_caret(_1a7719c9e_UnaryEval*);
inline void _1a771a9b4_excl(_1a7719c9e_UnaryEval*);
inline void _1a771ab90_star(_1a7719c9e_UnaryEval*);
inline void _1a771ad6b_amper(_1a7719c9e_UnaryEval*);
inline void _1a771b047_type_decl(_1a7719c9e_UnaryEval*);
inline void _1a771b223_eval_data(_1a7719c9e_UnaryEval*);
inline jule::Ptr<_1a76edda4_Data> _1a771b4ed_eval(_1a7719c9e_UnaryEval*, jule::Ptr<_1a68582ea_UnaryExpr>);
struct _1a7719c9e_UnaryEval {
	jule::Ptr<_1a7700922_Eval> _field_e = jule::Ptr<_1a7700922_Eval>();
	jule::Ptr<_1a76edda4_Data> _field_d = jule::Ptr<_1a76edda4_Data>();
	jule::Ptr<_1a68582ea_UnaryExpr> _field_u = jule::Ptr<_1a68582ea_UnaryExpr>();
	

	_1a7719c9e_UnaryEval(void) = default;

	inline bool operator==(_1a7719c9e_UnaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_d == _other._field_d &&
			this->_field_u == _other._field_u;
	}

	inline bool operator!=(_1a7719c9e_UnaryEval _other) { return !this->operator==(_other); }


};
inline _1a771ba3c_BinaryEval static__1a771c0e2_new_plain(jule::Ptr<_1a7700922_Eval>);
inline _1a771ba3c_BinaryEval static__1a771c433_new(jule::Ptr<_1a7700922_Eval>, jule::Ptr<_1a527737a_Token>);
inline jule::Bool _1a771c6b9_check_type_compatibility(_1a771ba3c_BinaryEval*);
inline jule::Bool _1a771c972_check_struct_common_operator_compatibility(_1a771ba3c_BinaryEval*);
inline jule::Ptr<_1a76edda4_Data> _1a771cc19_eval_nil(_1a771ba3c_BinaryEval*);
inline jule::Ptr<_1a76edda4_Data> _1a771ce7d_eval_enum(_1a771ba3c_BinaryEval*);
inline jule::Ptr<_1a76edda4_Data> _1a771d1e2_eval_sptr(_1a771ba3c_BinaryEval*);
inline jule::Ptr<_1a76edda4_Data> _1a771d456_eval_ptr(_1a771ba3c_BinaryEval*);
inline jule::Ptr<_1a76edda4_Data> _1a771d6ba_eval_arr(_1a771ba3c_BinaryEval*);
inline jule::Ptr<_1a76edda4_Data> _1a771d92e_eval_slc(_1a771ba3c_BinaryEval*);
inline jule::Ptr<_1a76edda4_Data> _1a771db93_eval_fn(_1a771ba3c_BinaryEval*);
inline jule::Ptr<_1a76edda4_Data> _1a771de07_eval_struct(_1a771ba3c_BinaryEval*);
inline jule::Ptr<_1a76edda4_Data> _1a771e16b_eval_trait(_1a771ba3c_BinaryEval*);
inline jule::Ptr<_1a76edda4_Data> _1a771e3d0_eval_any(_1a771ba3c_BinaryEval*);
inline jule::Ptr<_1a76edda4_Data> _1a771e644_eval_bool(_1a771ba3c_BinaryEval*);
inline jule::Ptr<_1a76edda4_Data> _1a771e8a8_eval_str(_1a771ba3c_BinaryEval*);
inline void _1a771ea84_set_type_to_greater(_1a771ba3c_BinaryEval*);
inline void _1a771ecc6_check_mod_data(_1a771ba3c_BinaryEval*, jule::Ptr<_1a76edda4_Data>&);
inline void _1a771eea2_mod(_1a771ba3c_BinaryEval*);
inline jule::Bool _1a772037b_numbers_are_compatibile(_1a771ba3c_BinaryEval*, jule::Str&, jule::Str&);
inline jule::Ptr<_1a76edda4_Data> _1a7720601_eval_float(_1a771ba3c_BinaryEval*);
inline jule::Ptr<_1a76edda4_Data> _1a7720865_eval_int(_1a771ba3c_BinaryEval*);
inline jule::Ptr<_1a76edda4_Data> _1a7720ac9_eval_prim(_1a771ba3c_BinaryEval*);
inline jule::Ptr<_1a76edda4_Data> _1a7720d3d_eval_op(_1a771ba3c_BinaryEval*);
inline void _1a77210b3_eval_const(_1a771ba3c_BinaryEval*, jule::Ptr<_1a76edda4_Data>&);
inline void _1a7721338_check_data(_1a771ba3c_BinaryEval*, jule::Ptr<_1a76edda4_Data>&);
inline void _1a7721514_check_datas(_1a771ba3c_BinaryEval*);
inline void _1a7721789_set_model(_1a771ba3c_BinaryEval*, jule::Ptr<_1a76edda4_Data>&);
inline void _1a7721a0e_post_eval(_1a771ba3c_BinaryEval*, jule::Ptr<_1a76edda4_Data>&);
inline jule::Ptr<_1a76edda4_Data> _1a7721db6_solve_explicit(_1a771ba3c_BinaryEval*, jule::Ptr<_1a76edda4_Data>&, jule::Ptr<_1a76edda4_Data>&);
inline jule::Ptr<_1a76edda4_Data> _1a77221c4_eval(_1a771ba3c_BinaryEval*, jule::Ptr<_1a6859807_BinopExpr>&);
struct _1a771ba3c_BinaryEval {
	jule::Ptr<_1a7700922_Eval> _field_e = jule::Ptr<_1a7700922_Eval>();
	jule::Ptr<_1a76edda4_Data> _field_l = jule::Ptr<_1a76edda4_Data>();
	jule::Ptr<_1a76edda4_Data> _field_r = jule::Ptr<_1a76edda4_Data>();
	jule::Ptr<_1a527737a_Token> _field_op = jule::Ptr<_1a527737a_Token>();
	

	_1a771ba3c_BinaryEval(void) = default;

	inline bool operator==(_1a771ba3c_BinaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1a771ba3c_BinaryEval _other) { return !this->operator==(_other); }


};
struct _1a7726b9b_TypeAlias {
	jule::Ptr<_1a686070e_ScopeTree> _field_scope = jule::Ptr<_1a686070e_ScopeTree>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_used = jule::Bool();
	jule::Bool _field_generic = jule::Bool();
	jule::Ptr<_1a527737a_Token> _field_token = jule::Ptr<_1a527737a_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1a772b772_TypeSymbol> _field_kind = jule::Ptr<_1a772b772_TypeSymbol>();
	jule::Slice<jule::Any> _field_refers = jule::Slice<jule::Any>();
	jule::Slice<jule::Ptr<_1a7726b9b_TypeAlias>> _field_generics = jule::Slice<jule::Ptr<_1a7726b9b_TypeAlias>>();
	

	_1a7726b9b_TypeAlias(void) = default;

	inline bool operator==(_1a7726b9b_TypeAlias _other) {
		return 
			this->_field_scope == _other._field_scope &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_used == _other._field_used &&
			this->_field_generic == _other._field_generic &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind &&
			this->_field_refers == _other._field_refers &&
			this->_field_generics == _other._field_generics;
	}

	inline bool operator!=(_1a7726b9b_TypeAlias _other) { return !this->operator==(_other); }


};
inline jule::Str _1a7727c8a_to_str(_1a77278d3_TypeKind*);
inline jule::Bool _1a7728098_equals(jule::Ptr<_1a77278d3_TypeKind>, jule::Ptr<_1a77278d3_TypeKind>);
inline jule::Bool _1a772853d_cpp_linked(_1a77278d3_TypeKind*);
inline jule::Bool _1a77287a2_is_nil(_1a77278d3_TypeKind*);
inline jule::Bool _1a7728a16_void(_1a77278d3_TypeKind*);
inline jule::Bool _1a7728c7a_mutable(_1a77278d3_TypeKind*);
inline jule::Bool _1a7728ede_nil_compatible(_1a77278d3_TypeKind*);
inline jule::Bool _1a7729253_performs_rc(_1a77278d3_TypeKind*);
inline jule::Bool _1a77294b7_supports_cloning(_1a77278d3_TypeKind*);
inline jule::Bool _1a772972b_variadicable(_1a77278d3_TypeKind*);
inline jule::Ptr<_1a772c135_Prim> _1a7729990_prim(_1a77278d3_TypeKind*);
inline jule::Ptr<_1a7730644_Sptr> _1a7729c04_sptr(_1a77278d3_TypeKind*);
inline jule::Ptr<_1a7733ba8_Ptr> _1a7729e68_ptr(_1a77278d3_TypeKind*);
inline jule::Ptr<_1a6982435_Enum> _1a772a1cc_enm(_1a77278d3_TypeKind*);
inline jule::Ptr<_1a773324b_Arr> _1a772a441_arr(_1a77278d3_TypeKind*);
inline jule::Ptr<_1a77310a1_Slc> _1a772a6a5_slc(_1a77278d3_TypeKind*);
inline jule::Ptr<_1a6872c93_FnIns> _1a772a919_fnc(_1a77278d3_TypeKind*);
inline jule::Ptr<_1a6836a48_StructIns> _1a772ab7d_strct(_1a77278d3_TypeKind*);
inline jule::Ptr<_1a68d46b7_Trait> _1a772ade2_trt(_1a77278d3_TypeKind*);
inline jule::Ptr<_1a7732657_Map> _1a772b156_map(_1a77278d3_TypeKind*);
inline jule::Ptr<_1a7731a96_Tuple> _1a772b3ba_tup(_1a77278d3_TypeKind*);
struct _1a77278d3_TypeKind {
	jule::Str _field_cpp_ident = jule::Str();
	jule::Bool _field_generic = jule::Bool();
	jule::Bool _field_variadic = jule::Bool();
	jule::Trait<_1a77274a4_Kind> _field_kind = jule::Trait<_1a77274a4_Kind>();
	

	_1a77278d3_TypeKind(void) = default;

	inline bool operator==(_1a77278d3_TypeKind _other) {
		return 
			this->_field_cpp_ident == _other._field_cpp_ident &&
			this->_field_generic == _other._field_generic &&
			this->_field_variadic == _other._field_variadic &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1a77278d3_TypeKind _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a772bb6d_checked(_1a772b772_TypeSymbol*);
inline void _1a772bd49_remove_kind(_1a772b772_TypeSymbol*);
struct _1a772b772_TypeSymbol {
	jule::Ptr<_1a68529cb_TypeDecl> _field_decl = jule::Ptr<_1a68529cb_TypeDecl>();
	jule::Ptr<_1a77278d3_TypeKind> _field_kind = jule::Ptr<_1a77278d3_TypeKind>();
	

	_1a772b772_TypeSymbol(void) = default;

	inline bool operator==(_1a772b772_TypeSymbol _other) {
		return 
			this->_field_decl == _other._field_decl &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1a772b772_TypeSymbol _other) { return !this->operator==(_other); }


};
inline jule::Str _1a772c498_to_str(_1a772c135_Prim*);
inline jule::Bool _1a772c7a6_equals(jule::Ptr<_1a772c135_Prim>, jule::Ptr<_1a77278d3_TypeKind>);
inline jule::Bool _1a772cc18_is_i8(_1a772c135_Prim*);
inline jule::Bool _1a772ce7c_is_i16(_1a772c135_Prim*);
inline jule::Bool _1a772d1e1_is_i32(_1a772c135_Prim*);
inline jule::Bool _1a772d455_is_i64(_1a772c135_Prim*);
inline jule::Bool _1a772d6b9_is_u8(_1a772c135_Prim*);
inline jule::Bool _1a772d92d_is_u16(_1a772c135_Prim*);
inline jule::Bool _1a772db92_is_u32(_1a772c135_Prim*);
inline jule::Bool _1a772de06_is_u64(_1a772c135_Prim*);
inline jule::Bool _1a772e16a_is_f32(_1a772c135_Prim*);
inline jule::Bool _1a772e3ce_is_f64(_1a772c135_Prim*);
inline jule::Bool _1a772e643_is_int(_1a772c135_Prim*);
inline jule::Bool _1a772e8a7_is_uint(_1a772c135_Prim*);
inline jule::Bool _1a772eb1b_is_uintptr(_1a772c135_Prim*);
inline jule::Bool _1a772ed80_is_bool(_1a772c135_Prim*);
inline jule::Bool _1a77300e4_is_str(_1a772c135_Prim*);
inline jule::Bool _1a7730358_is_any(_1a772c135_Prim*);
struct _1a772c135_Prim {
	jule::Str _field_kind = jule::Str();
	

	_1a772c135_Prim(void) = default;

	inline bool operator==(_1a772c135_Prim _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1a772c135_Prim _other) { return !this->operator==(_other); }


};
inline jule::Str _1a77309a7_to_str(_1a7730644_Sptr*);
inline jule::Bool _1a7730cb5_equals(jule::Ptr<_1a7730644_Sptr>, jule::Ptr<_1a77278d3_TypeKind>);
struct _1a7730644_Sptr {
	jule::Ptr<_1a77278d3_TypeKind> _field_elem = jule::Ptr<_1a77278d3_TypeKind>();
	

	_1a7730644_Sptr(void) = default;

	inline bool operator==(_1a7730644_Sptr _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1a7730644_Sptr _other) { return !this->operator==(_other); }


};
inline jule::Str _1a7731524_to_str(_1a77310a1_Slc*);
inline jule::Bool _1a7731832_equals(jule::Ptr<_1a77310a1_Slc>, jule::Ptr<_1a77278d3_TypeKind>);
struct _1a77310a1_Slc {
	jule::Ptr<_1a77278d3_TypeKind> _field_elem = jule::Ptr<_1a77278d3_TypeKind>();
	

	_1a77310a1_Slc(void) = default;

	inline bool operator==(_1a77310a1_Slc _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1a77310a1_Slc _other) { return !this->operator==(_other); }


};
inline jule::Str _1a7731e92_to_str(_1a7731a96_Tuple*);
inline jule::Bool _1a77322a0_equals(jule::Ptr<_1a7731a96_Tuple>, jule::Ptr<_1a77278d3_TypeKind>);
struct _1a7731a96_Tuple {
	jule::Slice<jule::Ptr<_1a77278d3_TypeKind>> _field_types = jule::Slice<jule::Ptr<_1a77278d3_TypeKind>>();
	

	_1a7731a96_Tuple(void) = default;

	inline bool operator==(_1a7731a96_Tuple _other) {
		return 
			this->_field_types == _other._field_types;
	}

	inline bool operator!=(_1a7731a96_Tuple _other) { return !this->operator==(_other); }


};
inline jule::Str _1a77329ba_to_str(_1a7732657_Map*);
inline jule::Bool _1a7732cc8_equals(jule::Ptr<_1a7732657_Map>, jule::Ptr<_1a77278d3_TypeKind>);
struct _1a7732657_Map {
	jule::Ptr<_1a77278d3_TypeKind> _field_key = jule::Ptr<_1a77278d3_TypeKind>();
	jule::Ptr<_1a77278d3_TypeKind> _field_val = jule::Ptr<_1a77278d3_TypeKind>();
	

	_1a7732657_Map(void) = default;

	inline bool operator==(_1a7732657_Map _other) {
		return 
			this->_field_key == _other._field_key &&
			this->_field_val == _other._field_val;
	}

	inline bool operator!=(_1a7732657_Map _other) { return !this->operator==(_other); }


};
inline jule::Str _1a77335ae_to_str(_1a773324b_Arr*);
inline jule::Bool _1a77338bc_equals(jule::Ptr<_1a773324b_Arr>, jule::Ptr<_1a77278d3_TypeKind>);
struct _1a773324b_Arr {
	jule::Bool _field_auto = jule::Bool();
	jule::I64 _field_n = jule::I64();
	jule::Ptr<_1a77278d3_TypeKind> _field_elem = jule::Ptr<_1a77278d3_TypeKind>();
	

	_1a773324b_Arr(void) = default;

	inline bool operator==(_1a773324b_Arr _other) {
		return 
			this->_field_auto == _other._field_auto &&
			this->_field_n == _other._field_n &&
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1a773324b_Arr _other) { return !this->operator==(_other); }


};
inline jule::Str _1a773401b_to_str(_1a7733ba8_Ptr*);
inline jule::Bool _1a7734329_equals(jule::Ptr<_1a7733ba8_Ptr>, jule::Ptr<_1a77278d3_TypeKind>);
inline jule::Bool _1a773467b_is_unsafe(_1a7733ba8_Ptr*);
struct _1a7733ba8_Ptr {
	jule::Ptr<_1a77278d3_TypeKind> _field_elem = jule::Ptr<_1a77278d3_TypeKind>();
	

	_1a7733ba8_Ptr(void) = default;

	inline bool operator==(_1a7733ba8_Ptr _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1a7733ba8_Ptr _other) { return !this->operator==(_other); }


};
struct _1a7734aee_Referencer {
	jule::Str _field_ident = jule::Str();
	jule::Any _field_owner = jule::Any();
	jule::Slice<jule::Any>* _field_refs = nullptr;
	

	_1a7734aee_Referencer(void) = default;

	inline bool operator==(_1a7734aee_Referencer _other) {
		return 
			this->_field_ident == _other._field_ident &&
			this->_field_owner == _other._field_owner &&
			this->_field_refs == _other._field_refs;
	}

	inline bool operator!=(_1a7734aee_Referencer _other) { return !this->operator==(_other); }


};
inline void _1a773601d_push_err(_1a7735847_TypeChecker*, jule::Ptr<_1a527737a_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1a77361e9_allow_builtin(_1a7735847_TypeChecker*);
inline void _1a77363c5_disallow_builtin(_1a7735847_TypeChecker*);
inline jule::Ptr<_1a772c135_Prim> _1a77366d3_build_prim(_1a7735847_TypeChecker*, jule::Ptr<_1a685305e_IdentTypeDecl>&);
inline void _1aa248962_push_reference(_1a7735847_TypeChecker*, jule::Ptr<_1a6836a48_StructIns>&);
inline void _1a7736d21_push_cycle_error(_1a7735847_TypeChecker*, jule::Any, jule::Any, jule::Str&);
inline jule::Bool _1a77371c8_check_cross_cycle(_1a7735847_TypeChecker*, jule::Any, jule::Str&);
inline jule::Bool _1a7737580_check_illegal_cycles(_1a7735847_TypeChecker*, jule::Ptr<_1a685305e_IdentTypeDecl>&, jule::Any);
inline jule::Trait<_1a77274a4_Kind> _1a7737937_from_type_alias(_1a7735847_TypeChecker*, jule::Ptr<_1a685305e_IdentTypeDecl>&, jule::Ptr<_1a7726b9b_TypeAlias>&);
inline jule::Ptr<_1a6982435_Enum> _1a7737cde_from_enum(_1a7735847_TypeChecker*, jule::Ptr<_1a685305e_IdentTypeDecl>&, jule::Ptr<_1a6982435_Enum>&);
inline jule::Ptr<_1a68d46b7_Trait> _1a7738196_from_trait(_1a7735847_TypeChecker*, jule::Ptr<_1a685305e_IdentTypeDecl>&, jule::Ptr<_1a68d46b7_Trait>&);
inline jule::Bool _1a773854d_check_struct_ins(_1a7735847_TypeChecker*, jule::Ptr<_1a6836a48_StructIns>&, jule::Ptr<_1a527737a_Token>&);
inline void _1a77387e5_append_used_struct_reference(_1a7735847_TypeChecker*, jule::Ptr<_1a6826829_Struct>&);
inline jule::Ptr<_1a6836a48_StructIns> _1a7738bad_build_struct_instance(_1a7735847_TypeChecker*, jule::Ptr<_1a685305e_IdentTypeDecl>&, jule::Ptr<_1a6826829_Struct>&);
inline jule::Ptr<_1a6836a48_StructIns> _1a7739065_from_struct(_1a7735847_TypeChecker*, jule::Ptr<_1a685305e_IdentTypeDecl>&, jule::Ptr<_1a6826829_Struct>&);
inline jule::Trait<_1a77274a4_Kind> _1a773941c_get_def(_1a7735847_TypeChecker*, jule::Trait<_1a7741e19_Lookup>, jule::Ptr<_1a685305e_IdentTypeDecl>&);
inline jule::Trait<_1a77274a4_Kind> _1a773972a_build_ident(_1a7735847_TypeChecker*, jule::Ptr<_1a685305e_IdentTypeDecl>);
inline jule::Ptr<_1a7730644_Sptr> _1a7739a38_build_sptr_from_type(_1a7735847_TypeChecker*, jule::Ptr<_1a77278d3_TypeKind>&);
inline jule::Ptr<_1a7730644_Sptr> _1a7739d46_build_sptr(_1a7735847_TypeChecker*, jule::Ptr<_1a6853a54_SptrTypeDecl>);
inline jule::Ptr<_1a7733ba8_Ptr> _1a773a154_build_ptr_from_type(_1a7735847_TypeChecker*, jule::Ptr<_1a77278d3_TypeKind>&);
inline jule::Ptr<_1a7733ba8_Ptr> _1a773a462_build_ptr(_1a7735847_TypeChecker*, jule::Ptr<_1a68544a0_PtrTypeDecl>);
inline jule::Ptr<_1a77310a1_Slc> _1a773a770_build_slc(_1a7735847_TypeChecker*, jule::Ptr<_1a6853d40_SlcTypeDecl>);
inline jule::Ptr<_1a773324b_Arr> _1a773aa7d_build_arr(_1a7735847_TypeChecker*, jule::Ptr<_1a6854bed_ArrTypeDecl>);
inline jule::Ptr<_1a7732657_Map> _1a773ad8b_build_map(_1a7735847_TypeChecker*, jule::Ptr<_1a6855407_MapTypeDecl>);
inline jule::Ptr<_1a7731a96_Tuple> _1a773b199_build_tuple(_1a7735847_TypeChecker*, jule::Ptr<_1a68541b4_TupleTypeDecl>);
inline jule::Bool _1a773b4a7_check_fn_types(_1a7735847_TypeChecker*, jule::Ptr<_1a6872c93_FnIns>&);
inline jule::Ptr<_1a6872c93_FnIns> _1a773b7b5_build_fn(_1a7735847_TypeChecker*, jule::Ptr<_1a6862205_FnDecl>);
inline jule::Trait<_1a77274a4_Kind> _1a773bac3_build_by_namespace(_1a7735847_TypeChecker*, jule::Ptr<_1a6853768_NamespaceTypeDecl>);
inline jule::Ptr<_1a77278d3_TypeKind> _1a773bdd1_build(_1a7735847_TypeChecker*, jule::Any&);
inline jule::Ptr<_1a77278d3_TypeKind> _1a773c1de_check_decl(_1a7735847_TypeChecker*, jule::Ptr<_1a68529cb_TypeDecl>&);
inline void _1a773c464_check(_1a7735847_TypeChecker*, jule::Ptr<_1a772b772_TypeSymbol>&);
struct _1a7735847_TypeChecker {
	jule::Ptr<_1a768cc22_Sema> _field_s = jule::Ptr<_1a768cc22_Sema>();
	jule::Trait<_1a7741e19_Lookup> _field_lookup = jule::Trait<_1a7741e19_Lookup>();
	jule::Ptr<_1a7734aee_Referencer> _field_referencer = jule::Ptr<_1a7734aee_Referencer>();
	jule::Ptr<_1a6875988_ReferenceStack> _field_refers = jule::Ptr<_1a6875988_ReferenceStack>();
	jule::Ptr<_1a527737a_Token> _field_error_token = jule::Ptr<_1a527737a_Token>();
	jule::Slice<jule::Ptr<_1a685d960_GenericDecl>> _field_ignore_generics = jule::Slice<jule::Ptr<_1a685d960_GenericDecl>>();
	jule::Slice<jule::Ptr<_1a7726b9b_TypeAlias>> _field_use_generics = jule::Slice<jule::Ptr<_1a7726b9b_TypeAlias>>();
	jule::Bool _field_not_plain = jule::Bool();
	jule::Bool _field_dis_builtin = jule::Bool();
	jule::Bool _field_selection = jule::Bool();
	jule::Ptr<_1a7726b9b_TypeAlias> _field_owner_alias = jule::Ptr<_1a7726b9b_TypeAlias>();
	jule::Slice<jule::Ptr<_1a7726b9b_TypeAlias>> _field_banned_generics = jule::Slice<jule::Ptr<_1a7726b9b_TypeAlias>>();
	jule::Bool _field_inscatch = jule::Bool();
	

	_1a7735847_TypeChecker(void) = default;

	inline bool operator==(_1a7735847_TypeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_referencer == _other._field_referencer &&
			this->_field_refers == _other._field_refers &&
			this->_field_error_token == _other._field_error_token &&
			this->_field_ignore_generics == _other._field_ignore_generics &&
			this->_field_use_generics == _other._field_use_generics &&
			this->_field_not_plain == _other._field_not_plain &&
			this->_field_dis_builtin == _other._field_dis_builtin &&
			this->_field_selection == _other._field_selection &&
			this->_field_owner_alias == _other._field_owner_alias &&
			this->_field_banned_generics == _other._field_banned_generics &&
			this->_field_inscatch == _other._field_inscatch;
	}

	inline bool operator!=(_1a7735847_TypeChecker _other) { return !this->operator==(_other); }


};
inline jule::Bool static__1a773cab3_exist(jule::Str&, jule::Any&);
struct _1a773c684_IdentTypeLookup {
	

	_1a773c684_IdentTypeLookup(void) = default;

	inline bool operator==(_1a773c684_IdentTypeLookup _other) { return true; }

	inline bool operator!=(_1a773c684_IdentTypeLookup _other) { return !this->operator==(_other); }


};
struct _1a7d89286_FileInfo {
	jule::Ptr<_1a6820cc9_Ast> _field_ast = jule::Ptr<_1a6820cc9_Ast>();
	jule::Slice<_1a43349cc_Log> _field_errors = jule::Slice<_1a43349cc_Log>();
	

	_1a7d89286_FileInfo(void) = default;

	inline bool operator==(_1a7d89286_FileInfo _other) {
		return 
			this->_field_ast == _other._field_ast &&
			this->_field_errors == _other._field_errors;
	}

	inline bool operator!=(_1a7d89286_FileInfo _other) { return !this->operator==(_other); }


};
struct _1a7dd1575_Stmt {
	jule::Slice<jule::Ptr<_1a527737a_Token>> _field_tokens = jule::Slice<jule::Ptr<_1a527737a_Token>>();
	jule::Bool _field_terminated = jule::Bool();
	

	_1a7dd1575_Stmt(void) = default;

	inline bool operator==(_1a7dd1575_Stmt _other) {
		return 
			this->_field_tokens == _other._field_tokens &&
			this->_field_terminated == _other._field_terminated;
	}

	inline bool operator!=(_1a7dd1575_Stmt _other) { return !this->operator==(_other); }


};
inline void _1a7dd2532_stop(_1a7dd1da0_ScopeParser*);
inline jule::Bool _1a7dd2796_stopped(_1a7dd1da0_ScopeParser*);
inline jule::Bool _1a7dd2a0a_finished(_1a7dd1da0_ScopeParser*);
inline jule::Bool _1a7dd2c6e_is_last_st(_1a7dd1da0_ScopeParser*);
inline void _1a7dd308d_push_err(_1a7dd1da0_ScopeParser*, jule::Ptr<_1a527737a_Token>, jule::Str);
inline void _1a7dd33ac_push_suggestion(_1a7dd1da0_ScopeParser*, jule::Str, jule::Slice<jule::Any>);
inline void _1a7dd3632_insert_as_next(_1a7dd1da0_ScopeParser*, jule::Slice<jule::Ptr<_1a527737a_Token>>&);
inline jule::Ptr<_1a7dd1575_Stmt> _1a7dd3896_next(_1a7dd1da0_ScopeParser*);
inline jule::Ptr<_1a686070e_ScopeTree> _1a7dd3c4d_build_scope(_1a7dd1da0_ScopeParser*, jule::Slice<jule::Ptr<_1a527737a_Token>>&, jule::Ptr<_1a527737a_Token>);
inline jule::Any _1a7dd405b_build_var_st(_1a7dd1da0_ScopeParser*, jule::Slice<jule::Ptr<_1a527737a_Token>>&);
inline jule::Any _1a7dd4369_build_ret_st(_1a7dd1da0_ScopeParser*, jule::Slice<jule::Ptr<_1a527737a_Token>>);
inline jule::Any _1a7dd4677_build_while_next_iter(_1a7dd1da0_ScopeParser*, jule::Ptr<_1a7dd1575_Stmt>&);
inline jule::Ptr<_1a68643d3_WhileKind> _1a7dd4985_build_while_iter_kind(_1a7dd1da0_ScopeParser*, jule::Slice<jule::Ptr<_1a527737a_Token>>&);
inline jule::Slice<jule::Slice<jule::Ptr<_1a527737a_Token>>> _1a7dd4cb5_get_range_kind_keys_tokens(_1a7dd1da0_ScopeParser*, jule::Slice<jule::Ptr<_1a527737a_Token>>&);
inline jule::Ptr<_1a68631d4_VarDecl> _1a7dd50d4_build_range_kind_key(_1a7dd1da0_ScopeParser*, jule::Slice<jule::Ptr<_1a527737a_Token>>&);
inline jule::Slice<jule::Ptr<_1a68631d4_VarDecl>> _1a7dd53e2_build_range_kind_keys(_1a7dd1da0_ScopeParser*, jule::Slice<jule::Slice<jule::Ptr<_1a527737a_Token>>>&);
inline void _1a7dd5733_setup_range_kind_keys_plain(_1a7dd1da0_ScopeParser*, jule::Ptr<_1a6864c74_RangeKind>&, jule::Slice<jule::Ptr<_1a527737a_Token>>&);
inline void _1a7dd5a85_setup_range_kind_keys_explicit(_1a7dd1da0_ScopeParser*, jule::Ptr<_1a6864c74_RangeKind>&, jule::Slice<jule::Ptr<_1a527737a_Token>>&);
inline void _1a7dd5db5_setup_range_kind_keys(_1a7dd1da0_ScopeParser*, jule::Ptr<_1a6864c74_RangeKind>&, jule::Slice<jule::Ptr<_1a527737a_Token>>&);
inline jule::Ptr<_1a6864c74_RangeKind> _1a7dd6316_build_range_iter_kind(_1a7dd1da0_ScopeParser*, jule::Slice<jule::Ptr<_1a527737a_Token>>&, jule::Slice<jule::Ptr<_1a527737a_Token>>&, jule::Ptr<_1a527737a_Token>&);
inline jule::Any _1a7dd66bd_build_common_iter_kind(_1a7dd1da0_ScopeParser*, jule::Slice<jule::Ptr<_1a527737a_Token>>&, jule::Ptr<_1a527737a_Token>&);
inline jule::Any _1a7dd69cb_build_common_iter(_1a7dd1da0_ScopeParser*, jule::Slice<jule::Ptr<_1a527737a_Token>>);
inline jule::Any _1a7dd6cd9_build_iter_st(_1a7dd1da0_ScopeParser*, jule::Ptr<_1a7dd1575_Stmt>&);
inline jule::Any _1a7dd70e7_build_break_st(_1a7dd1da0_ScopeParser*, jule::Slice<jule::Ptr<_1a527737a_Token>>&);
inline jule::Any _1a7dd7405_build_cont_st(_1a7dd1da0_ScopeParser*, jule::Slice<jule::Ptr<_1a527737a_Token>>&);
inline jule::Ptr<_1a6865956_If> _1a7dd7713_build_if(_1a7dd1da0_ScopeParser*, jule::Slice<jule::Ptr<_1a527737a_Token>>&);
inline jule::Ptr<_1a6865d0d_Else> _1a7dd7a21_build_else(_1a7dd1da0_ScopeParser*, jule::Slice<jule::Ptr<_1a527737a_Token>>&);
inline jule::Any _1a7dd7d2e_build_if_else_chain(_1a7dd1da0_ScopeParser*, jule::Slice<jule::Ptr<_1a527737a_Token>>);
inline jule::Any _1a7dd813c_build_co_call_st(_1a7dd1da0_ScopeParser*, jule::Slice<jule::Ptr<_1a527737a_Token>>);
inline jule::Any _1a7dd844a_build_goto_st(_1a7dd1da0_ScopeParser*, jule::Slice<jule::Ptr<_1a527737a_Token>>&);
inline jule::Any _1a7dd8758_build_fall_st(_1a7dd1da0_ScopeParser*, jule::Slice<jule::Ptr<_1a527737a_Token>>&);
inline jule::Any _1a7dd8a66_build_type_alias_st(_1a7dd1da0_ScopeParser*, jule::Slice<jule::Ptr<_1a527737a_Token>>&);
inline void _1a7dd8ec8_push_case_expr(_1a7dd1da0_ScopeParser*, jule::Slice<jule::Ptr<_1a527737a_Token>>, jule::Ptr<_1a527737a_Token>, jule::Bool, jule::Slice<jule::Ptr<_1a6855e41_Expr>>&);
inline jule::Slice<jule::Ptr<_1a6855e41_Expr>> _1a7dd9380_build_case_exprs(_1a7dd1da0_ScopeParser*, jule::Slice<jule::Ptr<_1a527737a_Token>>&, jule::Bool);
inline jule::Ptr<_1a686070e_ScopeTree> _1a7dd968d_build_case_scope(_1a7dd1da0_ScopeParser*, jule::Slice<jule::Ptr<_1a527737a_Token>>&);
inline std::tuple<jule::Ptr<_1a6866dca_Case>,jule::Bool> _1a7dd9a45_build_case(_1a7dd1da0_ScopeParser*, jule::Slice<jule::Ptr<_1a527737a_Token>>&, jule::Bool);
inline std::tuple<jule::Slice<jule::Ptr<_1a6866dca_Case>>,jule::Ptr<_1a6865d0d_Else>> _1a7dd9dec_build_cases(_1a7dd1da0_ScopeParser*, jule::Slice<jule::Ptr<_1a527737a_Token>>, jule::Bool);
inline jule::Ptr<_1a68675a1_MatchCase> _1a7dda20a_build_match_case(_1a7dd1da0_ScopeParser*, jule::Slice<jule::Ptr<_1a527737a_Token>>);
inline jule::Ptr<_1a686070e_ScopeTree> _1a7dda518_build_scope_st(_1a7dd1da0_ScopeParser*, jule::Slice<jule::Ptr<_1a527737a_Token>>);
inline jule::Ptr<_1a685dd17_LabelSt> _1a7dda826_build_label_st(_1a7dd1da0_ScopeParser*, jule::Slice<jule::Ptr<_1a527737a_Token>>&);
inline std::tuple<jule::Any,jule::Bool> _1a7ddab34_build_id_st(_1a7dd1da0_ScopeParser*, jule::Slice<jule::Ptr<_1a527737a_Token>>&);
inline jule::Ptr<_1a7de9eea_AssignInfo> _1a7ddae42_build_assign_info(_1a7dd1da0_ScopeParser*, jule::Slice<jule::Ptr<_1a527737a_Token>>&);
inline jule::Ptr<_1a685eab5_AssignLeft> _1a7ddb250_build_assign_l(_1a7dd1da0_ScopeParser*, jule::Slice<jule::Ptr<_1a527737a_Token>>&);
inline jule::Slice<jule::Ptr<_1a685eab5_AssignLeft>> _1a7ddb55d_build_assign_ls(_1a7dd1da0_ScopeParser*, jule::Slice<jule::Slice<jule::Ptr<_1a527737a_Token>>>&);
inline std::tuple<jule::Ptr<_1a6860104_AssignSt>,jule::Bool> _1a7ddb86b_build_plain_assign(_1a7dd1da0_ScopeParser*, jule::Slice<jule::Ptr<_1a527737a_Token>>&);
inline std::tuple<jule::Ptr<_1a6860104_AssignSt>,jule::Bool> _1a7ddbb79_build_decl_assign(_1a7dd1da0_ScopeParser*, jule::Slice<jule::Ptr<_1a527737a_Token>>);
inline std::tuple<jule::Ptr<_1a6860104_AssignSt>,jule::Bool> _1a7ddbe87_build_assign_st(_1a7dd1da0_ScopeParser*, jule::Slice<jule::Ptr<_1a527737a_Token>>&);
inline jule::Any _1a7ddc295_build_use_expr(_1a7dd1da0_ScopeParser*, jule::Slice<jule::Ptr<_1a527737a_Token>>&);
inline jule::Any _1a7ddc5a3_build_st(_1a7dd1da0_ScopeParser*, jule::Ptr<_1a7dd1575_Stmt>&);
inline void _1a7ddc8c2_build(_1a7dd1da0_ScopeParser*, jule::Slice<jule::Ptr<_1a527737a_Token>>&, jule::Ptr<_1a686070e_ScopeTree>&);
struct _1a7dd1da0_ScopeParser {
	jule::Ptr<_1a7ded52b_Parser> _field_p = jule::Ptr<_1a7ded52b_Parser>();
	jule::Ptr<_1a686070e_ScopeTree> _field_s = jule::Ptr<_1a686070e_ScopeTree>();
	jule::Slice<jule::Ptr<_1a7dd1575_Stmt>> _field_stmts = jule::Slice<jule::Ptr<_1a7dd1575_Stmt>>();
	jule::I64 _field_pos = jule::I64();
	

	_1a7dd1da0_ScopeParser(void) = default;

	inline bool operator==(_1a7dd1da0_ScopeParser _other) {
		return 
			this->_field_p == _other._field_p &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_1a7dd1da0_ScopeParser _other) { return !this->operator==(_other); }


};
struct _1a7ddd76e_CallData {
	jule::Slice<jule::Ptr<_1a527737a_Token>> _field_expr_tokens = jule::Slice<jule::Ptr<_1a527737a_Token>>();
	jule::Slice<jule::Ptr<_1a527737a_Token>> _field_args_tokens = jule::Slice<jule::Ptr<_1a527737a_Token>>();
	jule::Slice<jule::Ptr<_1a527737a_Token>> _field_generics_tokens = jule::Slice<jule::Ptr<_1a527737a_Token>>();
	

	_1a7ddd76e_CallData(void) = default;

	inline bool operator==(_1a7ddd76e_CallData _other) {
		return 
			this->_field_expr_tokens == _other._field_expr_tokens &&
			this->_field_args_tokens == _other._field_args_tokens &&
			this->_field_generics_tokens == _other._field_generics_tokens;
	}

	inline bool operator!=(_1a7ddd76e_CallData _other) { return !this->operator==(_other); }


};
inline void _1a7de04b8_push_err(_1a7ddebc1_ExprBuilder*, jule::Ptr<_1a527737a_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1a7de07d7_push_suggestion(_1a7ddebc1_ExprBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1a68565d4_TupleExpr> _1a7de0ae5_build_tuple(_1a7ddebc1_ExprBuilder*, jule::Slice<jule::Slice<jule::Ptr<_1a527737a_Token>>>&);
inline jule::Ptr<_1a6856aac_LitExpr> _1a7de0e03_build_lit(_1a7ddebc1_ExprBuilder*, jule::Ptr<_1a527737a_Token>);
inline jule::Ptr<_1a68529cb_TypeDecl> _1a7de1211_build_primitive_type(_1a7ddebc1_ExprBuilder*, jule::Ptr<_1a527737a_Token>&);
inline jule::Any _1a7de151e_build_single(_1a7ddebc1_ExprBuilder*, jule::Ptr<_1a527737a_Token>);
inline jule::Ptr<_1a6857ae1_IdentExpr> _1a7de182c_build_cpp_linked_ident(_1a7ddebc1_ExprBuilder*, jule::Slice<jule::Ptr<_1a527737a_Token>>&);
inline jule::Ptr<_1a68582ea_UnaryExpr> _1a7de1b3a_build_unary(_1a7ddebc1_ExprBuilder*, jule::Slice<jule::Ptr<_1a527737a_Token>>);
inline jule::Ptr<_1a6859384_SubIdentExpr> _1a7de1e48_build_obj_sub_ident(_1a7ddebc1_ExprBuilder*, jule::Slice<jule::Ptr<_1a527737a_Token>>);
inline jule::Ptr<_1a6858e11_NsSelectionExpr> _1a7de2256_build_ns_sub_ident(_1a7ddebc1_ExprBuilder*, jule::Slice<jule::Ptr<_1a527737a_Token>>&);
inline jule::Ptr<_1a68529cb_TypeDecl> _1a7de2564_build_type(_1a7ddebc1_ExprBuilder*, jule::Slice<jule::Ptr<_1a527737a_Token>>&);
inline jule::Any _1a7de2872_build_sub_ident(_1a7ddebc1_ExprBuilder*, jule::Slice<jule::Ptr<_1a527737a_Token>>&);
inline jule::Ptr<_1a68586a2_VariadicExpr> _1a7de2b80_build_variadic(_1a7ddebc1_ExprBuilder*, jule::Slice<jule::Ptr<_1a527737a_Token>>);
inline jule::Any _1a7de2e8d_build_op_right(_1a7ddebc1_ExprBuilder*, jule::Slice<jule::Ptr<_1a527737a_Token>>&);
inline jule::Ptr<_1a6855e41_Expr> _1a7de32bd_build_between_parentheses(_1a7ddebc1_ExprBuilder*, jule::Slice<jule::Ptr<_1a527737a_Token>>);
inline jule::Ptr<_1a6858a59_CastExpr> _1a7de35dc_try_build_cast(_1a7ddebc1_ExprBuilder*, jule::Slice<jule::Ptr<_1a527737a_Token>>&);
inline void _1a7de39a5_push_arg(_1a7ddebc1_ExprBuilder*, jule::Slice<jule::Ptr<_1a6855e41_Expr>>&, jule::Slice<jule::Ptr<_1a527737a_Token>>, jule::Ptr<_1a527737a_Token>);
inline jule::Slice<jule::Ptr<_1a6855e41_Expr>> _1a7de3cb3_build_args(_1a7ddebc1_ExprBuilder*, jule::Slice<jule::Ptr<_1a527737a_Token>>);
inline jule::Slice<jule::Ptr<_1a68529cb_TypeDecl>> _1a7de40c1_build_call_generics(_1a7ddebc1_ExprBuilder*, jule::Slice<jule::Ptr<_1a527737a_Token>>);
inline jule::Ptr<_1a6859e12_FnCallExpr> _1a7de4478_build_fn_call(_1a7ddebc1_ExprBuilder*, jule::Ptr<_1a527737a_Token>&, jule::Ptr<_1a7ddd76e_CallData>&);
inline jule::Any _1a7de47a8_build_parentheses_range(_1a7ddebc1_ExprBuilder*, jule::Slice<jule::Ptr<_1a527737a_Token>>&);
inline jule::Ptr<_1a68572b6_UnsafeExpr> _1a7de4ac7_build_unsafe_expr(_1a7ddebc1_ExprBuilder*, jule::Slice<jule::Ptr<_1a527737a_Token>>);
inline jule::Ptr<_1a6862205_FnDecl> _1a7de4dd5_build_anon_fn(_1a7ddebc1_ExprBuilder*, jule::Slice<jule::Ptr<_1a527737a_Token>>&);
inline jule::Any _1a7de51e3_build_unsafe(_1a7ddebc1_ExprBuilder*, jule::Slice<jule::Ptr<_1a527737a_Token>>&);
inline void _1a7de55ab_push_range_lit_part(_1a7ddebc1_ExprBuilder*, jule::Slice<jule::Ptr<_1a527737a_Token>>, jule::Ptr<_1a527737a_Token>, jule::Slice<jule::Slice<jule::Ptr<_1a527737a_Token>>>&);
inline jule::Slice<jule::Slice<jule::Ptr<_1a527737a_Token>>> _1a7de58db_get_brace_range_lit_expr_parts(_1a7ddebc1_ExprBuilder*, jule::Slice<jule::Ptr<_1a527737a_Token>>);
inline jule::Ptr<_1a685a929_FieldExprPair> _1a7de5c0a_build_field_expr_pair(_1a7ddebc1_ExprBuilder*, jule::Slice<jule::Ptr<_1a527737a_Token>>);
inline jule::Ptr<_1a6855e41_Expr> _1a7de6018_build_struct_lit_expr(_1a7ddebc1_ExprBuilder*, jule::Slice<jule::Ptr<_1a527737a_Token>>&);
inline jule::Slice<jule::Ptr<_1a6855e41_Expr>> _1a7de6326_build_struct_lit_exprs(_1a7ddebc1_ExprBuilder*, jule::Slice<jule::Ptr<_1a527737a_Token>>&);
inline jule::Ptr<_1a685b1ee_StructLit> _1a7de6656_build_typed_struct_literal(_1a7ddebc1_ExprBuilder*, jule::Slice<jule::Ptr<_1a527737a_Token>>);
inline jule::Ptr<_1a6855e41_Expr> _1a7de6975_build_brace_lit_part(_1a7ddebc1_ExprBuilder*, jule::Slice<jule::Ptr<_1a527737a_Token>>&);
inline jule::Ptr<_1a685b672_BraceLit> _1a7de6c83_build_brace_lit(_1a7ddebc1_ExprBuilder*, jule::Slice<jule::Ptr<_1a527737a_Token>>&);
inline jule::Any _1a7de7091_build_brace_range(_1a7ddebc1_ExprBuilder*, jule::Slice<jule::Ptr<_1a527737a_Token>>&);
inline jule::Slice<jule::Slice<jule::Ptr<_1a527737a_Token>>> _1a7de739e_get_enumerable_parts(_1a7ddebc1_ExprBuilder*, jule::Slice<jule::Ptr<_1a527737a_Token>>);
inline jule::Ptr<_1a685c3ba_SliceExpr> _1a7de76ac_build_slice(_1a7ddebc1_ExprBuilder*, jule::Slice<jule::Ptr<_1a527737a_Token>>);
inline jule::Ptr<_1a685ce9d_IndexingExpr> _1a7de7b0d_build_indexing(_1a7ddebc1_ExprBuilder*, jule::Slice<jule::Ptr<_1a527737a_Token>>, jule::Slice<jule::Ptr<_1a527737a_Token>>, jule::Ptr<_1a527737a_Token>);
inline jule::Ptr<_1a685d5a8_SlicingExpr> _1a7de81a2_build_slicing(_1a7ddebc1_ExprBuilder*, jule::Slice<jule::Ptr<_1a527737a_Token>>&, jule::Slice<jule::Ptr<_1a527737a_Token>>&, jule::I64&, jule::Ptr<_1a527737a_Token>&, jule::Ptr<_1a527737a_Token>);
inline jule::Any _1a7de84b0_build_bracket_range(_1a7ddebc1_ExprBuilder*, jule::Slice<jule::Ptr<_1a527737a_Token>>);
inline jule::Any _1a7de87bd_build_data(_1a7ddebc1_ExprBuilder*, jule::Slice<jule::Ptr<_1a527737a_Token>>&);
inline jule::Ptr<_1a6859807_BinopExpr> _1a7de8b75_build_binop(_1a7ddebc1_ExprBuilder*, jule::Slice<jule::Ptr<_1a527737a_Token>>&, jule::I64);
inline jule::Any _1a7de8e83_build(_1a7ddebc1_ExprBuilder*, jule::Slice<jule::Ptr<_1a527737a_Token>>&);
inline jule::Any _1a7de9291_build_kind(_1a7ddebc1_ExprBuilder*, jule::Slice<jule::Ptr<_1a527737a_Token>>&);
inline jule::Ptr<_1a6855e41_Expr> _1a7de959e_build_from_tokens(_1a7ddebc1_ExprBuilder*, jule::Slice<jule::Ptr<_1a527737a_Token>>);
struct _1a7ddebc1_ExprBuilder {
	jule::Ptr<_1a7ded52b_Parser> _field_p = jule::Ptr<_1a7ded52b_Parser>();
	

	_1a7ddebc1_ExprBuilder(void) = default;

	inline bool operator==(_1a7ddebc1_ExprBuilder _other) {
		return 
			this->_field_p == _other._field_p;
	}

	inline bool operator!=(_1a7ddebc1_ExprBuilder _other) { return !this->operator==(_other); }


};
struct _1a7de9eea_AssignInfo {
	jule::Slice<jule::Ptr<_1a527737a_Token>> _field_l = jule::Slice<jule::Ptr<_1a527737a_Token>>();
	jule::Slice<jule::Ptr<_1a527737a_Token>> _field_r = jule::Slice<jule::Ptr<_1a527737a_Token>>();
	jule::Ptr<_1a527737a_Token> _field_setter = jule::Ptr<_1a527737a_Token>();
	jule::Bool _field_ok = jule::Bool();
	

	_1a7de9eea_AssignInfo(void) = default;

	inline bool operator==(_1a7de9eea_AssignInfo _other) {
		return 
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_setter == _other._field_setter &&
			this->_field_ok == _other._field_ok;
	}

	inline bool operator!=(_1a7de9eea_AssignInfo _other) { return !this->operator==(_other); }


};
inline void _1a7ded85b_stop(_1a7ded52b_Parser*);
inline jule::Bool _1a7dedac0_stopped(_1a7ded52b_Parser*);
inline void _1a7dede88_push_err(_1a7ded52b_Parser*, jule::Ptr<_1a527737a_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1a7dee2a7_push_suggestion(_1a7ded52b_Parser*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1a6855e41_Expr> _1a7dee5b5_build_expr(jule::Ptr<_1a7ded52b_Parser>, jule::Slice<jule::Ptr<_1a527737a_Token>>&);
inline jule::Ptr<_1a6852525_Directive> _1a7dee8c3_build_directive(_1a7ded52b_Parser*, jule::Slice<jule::Ptr<_1a527737a_Token>>);
inline void _1a7deeb48_push_directive(_1a7ded52b_Parser*, jule::Ptr<_1a6852525_Directive>);
inline jule::Ptr<_1a686070e_ScopeTree> _1a7e00000_build_scope(jule::Ptr<_1a7ded52b_Parser>, jule::Slice<jule::Ptr<_1a527737a_Token>>&, jule::Ptr<_1a527737a_Token>);
inline std::tuple<jule::Ptr<_1a68529cb_TypeDecl>,jule::Bool> _1a7e00451___build_type(jule::Ptr<_1a7ded52b_Parser>, jule::Slice<jule::Ptr<_1a527737a_Token>>&, jule::I64*, jule::Bool);
inline std::tuple<jule::Ptr<_1a68529cb_TypeDecl>,jule::Bool> _1a7e008a2_build_type(jule::Ptr<_1a7ded52b_Parser>, jule::Slice<jule::Ptr<_1a527737a_Token>>&, jule::I64*, jule::Bool);
inline jule::Ptr<_1a6866957_TypeAliasDecl> _1a7e00bb0_build_type_alias_decl(jule::Ptr<_1a7ded52b_Parser>, jule::Slice<jule::Ptr<_1a527737a_Token>>&);
inline void _1a7e01001_build_var_type_and_expr(jule::Ptr<_1a7ded52b_Parser>, jule::Ptr<_1a68631d4_VarDecl>&, jule::Slice<jule::Ptr<_1a527737a_Token>>&);
inline void _1a7e01331_build_var_common(jule::Ptr<_1a7ded52b_Parser>, jule::Ptr<_1a68631d4_VarDecl>&, jule::Slice<jule::Ptr<_1a527737a_Token>>);
inline void _1a7e016e9_build_var_begin(_1a7ded52b_Parser*, jule::Ptr<_1a68631d4_VarDecl>&, jule::Ptr<jule::I64>, jule::Slice<jule::Ptr<_1a527737a_Token>>&);
inline jule::Ptr<_1a68631d4_VarDecl> _1a7e01a07_build_var(jule::Ptr<_1a7ded52b_Parser>, jule::Slice<jule::Ptr<_1a527737a_Token>>);
inline jule::Ptr<_1a685d960_GenericDecl> _1a7e01d15_build_generic(_1a7ded52b_Parser*, jule::Slice<jule::Ptr<_1a527737a_Token>>&);
inline jule::Slice<jule::Ptr<_1a685d960_GenericDecl>> _1a7e021bc_build_generics(_1a7ded52b_Parser*, jule::Slice<jule::Ptr<_1a527737a_Token>>&, jule::Ptr<_1a527737a_Token>&);
inline jule::Ptr<_1a6860dd5_ParamDecl> _1a7e024ca_build_self_param(_1a7ded52b_Parser*, jule::Slice<jule::Ptr<_1a527737a_Token>>);
inline void _1a7e02893_param_type_begin(_1a7ded52b_Parser*, jule::Ptr<_1a6860dd5_ParamDecl>&, jule::I64&, jule::Slice<jule::Ptr<_1a527737a_Token>>&);
inline void _1a7e02bb2_build_param_type(jule::Ptr<_1a7ded52b_Parser>, jule::Ptr<_1a6860dd5_ParamDecl>&, jule::Slice<jule::Ptr<_1a527737a_Token>>&);
inline void _1a7e0307a_build_param_body(jule::Ptr<_1a7ded52b_Parser>, jule::Ptr<_1a6860dd5_ParamDecl>&, jule::Ptr<jule::I64>, jule::Slice<jule::Ptr<_1a527737a_Token>>);
inline jule::Ptr<_1a6860dd5_ParamDecl> _1a7e03388_build_param(jule::Ptr<_1a7ded52b_Parser>, jule::Slice<jule::Ptr<_1a527737a_Token>>);
inline void _1a7e0360d_check_params(_1a7ded52b_Parser*, jule::Slice<jule::Ptr<_1a6860dd5_ParamDecl>>&);
inline jule::Slice<jule::Ptr<_1a6860dd5_ParamDecl>> _1a7e039b5_build_params(jule::Ptr<_1a7ded52b_Parser>, jule::Slice<jule::Ptr<_1a527737a_Token>>&, jule::Bool);
inline std::tuple<jule::Ptr<_1a68557ae_RetTypeDecl>,jule::Bool> _1a7e03d6c_build_multi_ret_type(jule::Ptr<_1a7ded52b_Parser>, jule::Slice<jule::Ptr<_1a527737a_Token>>&, jule::I64&);
inline std::tuple<jule::Ptr<_1a68557ae_RetTypeDecl>,jule::Bool> _1a7e04224_build_ret_type(jule::Ptr<_1a7ded52b_Parser>, jule::Slice<jule::Ptr<_1a527737a_Token>>&, jule::I64&);
inline jule::Ptr<_1a6862205_FnDecl> _1a7e04675_build_fn_prototype(jule::Ptr<_1a7ded52b_Parser>, jule::Slice<jule::Ptr<_1a527737a_Token>>&, jule::I64&, jule::Bool);
inline jule::Ptr<_1a6862205_FnDecl> _1a7e04ac6_build_fn(jule::Ptr<_1a7ded52b_Parser>, jule::Slice<jule::Ptr<_1a527737a_Token>>&, jule::Bool, jule::Bool);
inline jule::Slice<jule::Ptr<_1a527737a_Token>> _1a7e04dd4_get_use_decl_selectors(_1a7ded52b_Parser*, jule::Slice<jule::Ptr<_1a527737a_Token>>);
inline void _1a7e05203_build_cpp_use_decl(_1a7ded52b_Parser*, jule::Ptr<_1a6867d43_UseDecl>&, jule::Slice<jule::Ptr<_1a527737a_Token>>&);
inline void _1a7e05522_build_std_use_decl(_1a7ded52b_Parser*, jule::Ptr<_1a6867d43_UseDecl>&, jule::Slice<jule::Ptr<_1a527737a_Token>>);
inline void _1a7e05841_build_ident_use_decl(_1a7ded52b_Parser*, jule::Ptr<_1a6867d43_UseDecl>&, jule::Slice<jule::Ptr<_1a527737a_Token>>);
inline void _1a7e05b60_parse_use_decl(_1a7ded52b_Parser*, jule::Ptr<_1a6867d43_UseDecl>&, jule::Slice<jule::Ptr<_1a527737a_Token>>);
inline jule::Ptr<_1a6867d43_UseDecl> _1a7e06017_build_use_decl(_1a7ded52b_Parser*, jule::Slice<jule::Ptr<_1a527737a_Token>>, jule::Bool);
inline jule::Ptr<_1a6855e41_Expr> _1a7e063be_build_enum_item_expr(jule::Ptr<_1a7ded52b_Parser>, jule::Ptr<jule::I64>, jule::Slice<jule::Ptr<_1a527737a_Token>>&);
inline jule::Slice<jule::Ptr<_1a68682b6_EnumItemDecl>> _1a7e066cc_build_enum_items(jule::Ptr<_1a7ded52b_Parser>, jule::Slice<jule::Ptr<_1a527737a_Token>>&);
inline jule::Ptr<_1a6868e10_EnumDecl> _1a7e069da_build_enum_decl(jule::Ptr<_1a7ded52b_Parser>, jule::Slice<jule::Ptr<_1a527737a_Token>>&);
inline jule::Ptr<_1a6869938_FieldDecl> _1a7e06ce8_build_field(jule::Ptr<_1a7ded52b_Parser>, jule::Slice<jule::Ptr<_1a527737a_Token>>);
inline jule::Slice<jule::Ptr<_1a6869938_FieldDecl>> _1a7e07128_build_struct_decl_fields(jule::Ptr<_1a7ded52b_Parser>, jule::Slice<jule::Ptr<_1a527737a_Token>>);
inline jule::Ptr<_1a686a296_StructDecl> _1a7e07447_build_struct_decl(jule::Ptr<_1a7ded52b_Parser>, jule::Slice<jule::Ptr<_1a527737a_Token>>&);
inline void _1a7e076bc_check_method_receiver(_1a7ded52b_Parser*, jule::Ptr<_1a6862205_FnDecl>&);
inline jule::Slice<jule::Ptr<_1a6862205_FnDecl>> _1a7e079ca_build_trait_methods(jule::Ptr<_1a7ded52b_Parser>, jule::Slice<jule::Ptr<_1a527737a_Token>>);
inline jule::Ptr<_1a686a8a1_TraitDecl> _1a7e07cd8_build_trait_decl(jule::Ptr<_1a7ded52b_Parser>, jule::Slice<jule::Ptr<_1a527737a_Token>>&);
inline jule::Ptr<_1a6862205_FnDecl> _1a7e080e6_build_cpp_link_fn(jule::Ptr<_1a7ded52b_Parser>, jule::Slice<jule::Ptr<_1a527737a_Token>>);
inline jule::Ptr<_1a68631d4_VarDecl> _1a7e08404_build_cpp_link_var(jule::Ptr<_1a7ded52b_Parser>, jule::Slice<jule::Ptr<_1a527737a_Token>>);
inline jule::Ptr<_1a686a296_StructDecl> _1a7e08712_build_cpp_link_struct(jule::Ptr<_1a7ded52b_Parser>, jule::Slice<jule::Ptr<_1a527737a_Token>>);
inline jule::Ptr<_1a6866957_TypeAliasDecl> _1a7e08a42_build_cpp_link_type_alias(jule::Ptr<_1a7ded52b_Parser>, jule::Slice<jule::Ptr<_1a527737a_Token>>);
inline jule::Ptr<_1a6867d43_UseDecl> _1a7e08d61_build_cpp_link_use(jule::Ptr<_1a7ded52b_Parser>, jule::Slice<jule::Ptr<_1a527737a_Token>>);
inline jule::Any _1a7e0916e_build_cpp_link(jule::Ptr<_1a7ded52b_Parser>, jule::Slice<jule::Ptr<_1a527737a_Token>>&);
inline jule::Ptr<_1a6862205_FnDecl> _1a7e0947c_get_method(jule::Ptr<_1a7ded52b_Parser>, jule::Slice<jule::Ptr<_1a527737a_Token>>&);
inline void _1a7e0979b_parse_impl_body(jule::Ptr<_1a7ded52b_Parser>, jule::Ptr<_1a686aeab_Impl>&, jule::Slice<jule::Ptr<_1a527737a_Token>>&);
inline jule::Ptr<_1a686aeab_Impl> _1a7e09aa9_build_impl(jule::Ptr<_1a7ded52b_Parser>, jule::Slice<jule::Ptr<_1a527737a_Token>>);
inline jule::Any _1a7e09db7_build_node_data(jule::Ptr<_1a7ded52b_Parser>, jule::Slice<jule::Ptr<_1a527737a_Token>>&);
inline void _1a7e0a13c_check_directive(_1a7ded52b_Parser*, _1a6821934_Node&);
inline void _1a7e0a45b_apply_fn_meta(_1a7ded52b_Parser*, jule::Ptr<_1a6862205_FnDecl>&, jule::Bool);
inline void _1a7e0a77a_apply_meta(_1a7ded52b_Parser*, _1a6821934_Node&, jule::Bool);
inline void _1a7e0aa00_check_use_decl(_1a7ded52b_Parser*, _1a6821934_Node&);
inline std::tuple<jule::Bool,jule::Any> _1a7e0ad30_build_general_scope_node_data(jule::Ptr<_1a7ded52b_Parser>, jule::Slice<jule::Ptr<_1a527737a_Token>>);
inline _1a6821934_Node _1a7e0b14e_parse_node(jule::Ptr<_1a7ded52b_Parser>, jule::Slice<jule::Ptr<_1a527737a_Token>>&);
inline void _1a7e0b3c4_append_node(jule::Ptr<_1a7ded52b_Parser>, jule::Slice<jule::Ptr<_1a527737a_Token>>&);
inline void _1a7e0b836_remove_range(_1a7ded52b_Parser*, jule::I64, jule::Str, jule::Slice<jule::Ptr<_1a527737a_Token>>&, jule::Slice<jule::I64>&);
inline void _1a7e0bc21_push_wrong_order_close_err(_1a7ded52b_Parser*, jule::Ptr<_1a527737a_Token>&, jule::Slice<jule::Ptr<_1a527737a_Token>>&, jule::Slice<jule::I64>&);
inline void _1a7e0c194_push_range_close(_1a7ded52b_Parser*, jule::Ptr<_1a527737a_Token>, jule::Str, jule::Slice<jule::Ptr<_1a527737a_Token>>&, jule::Slice<jule::I64>&);
inline void _1a7e0c419_check_ranges(_1a7ded52b_Parser*, jule::Slice<jule::Ptr<_1a527737a_Token>>&);
inline void _1a7e0c68e_parse(jule::Ptr<_1a7ded52b_Parser>, jule::Ptr<_1a527c76a_File>&);
struct _1a7ded52b_Parser {
	jule::Ptr<_1a6820cc9_Ast> _field_ast = jule::Ptr<_1a6820cc9_Ast>();
	jule::Slice<jule::Ptr<_1a6852525_Directive>> _field_directives = jule::Slice<jule::Ptr<_1a6852525_Directive>>();
	jule::Slice<_1a43349cc_Log> _field_errors = jule::Slice<_1a43349cc_Log>();
	

	_1a7ded52b_Parser(void) = default;

	inline bool operator==(_1a7ded52b_Parser _other) {
		return 
			this->_field_ast == _other._field_ast &&
			this->_field_directives == _other._field_directives &&
			this->_field_errors == _other._field_errors;
	}

	inline bool operator!=(_1a7ded52b_Parser _other) { return !this->operator==(_other); }


};
inline void _1a7e0e3e9_push_err(_1a7e0dd22_TypeBuilder*, jule::Ptr<_1a527737a_Token>, jule::Str);
inline void _1a7e0e718_push_suggestion(_1a7e0dd22_TypeBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1a68529cb_TypeDecl> _1a7e0e97c_build_prim(_1a7e0dd22_TypeBuilder*);
inline jule::Ptr<_1a68529cb_TypeDecl> _1a7e0ebe1_build_namespace(_1a7e0dd22_TypeBuilder*);
inline jule::Slice<jule::Ptr<_1a68529cb_TypeDecl>> _1a7e0ee55_build_generics(_1a7e0dd22_TypeBuilder*);
inline jule::Slice<jule::Slice<jule::Ptr<_1a527737a_Token>>> _1a7e101b9_ident_generics(_1a7e0dd22_TypeBuilder*);
inline jule::Ptr<_1a68529cb_TypeDecl> _1a7e1042d_build_ident(_1a7e0dd22_TypeBuilder*);
inline jule::Ptr<_1a68529cb_TypeDecl> _1a7e10692_build_cpp_link(_1a7e0dd22_TypeBuilder*);
inline jule::Ptr<_1a68529cb_TypeDecl> _1a7e10906_build_fn(_1a7e0dd22_TypeBuilder*);
inline jule::Ptr<_1a68529cb_TypeDecl> _1a7e10b6a_build_ptr(_1a7e0dd22_TypeBuilder*);
inline jule::Ptr<_1a68529cb_TypeDecl> _1a7e10dce_build_sptr(_1a7e0dd22_TypeBuilder*);
inline jule::Ptr<_1a68529cb_TypeDecl> _1a7e11143_build_op(_1a7e0dd22_TypeBuilder*);
inline jule::Ptr<_1a68529cb_TypeDecl> _1a7e113a7_build_slc(_1a7e0dd22_TypeBuilder*);
inline jule::Ptr<_1a68529cb_TypeDecl> _1a7e1161b_build_arr(_1a7e0dd22_TypeBuilder*);
inline jule::Ptr<_1a68529cb_TypeDecl> _1a7e119c3_build_map(_1a7e0dd22_TypeBuilder*, jule::I64, jule::Slice<jule::Ptr<_1a527737a_Token>>&);
inline jule::Ptr<_1a68529cb_TypeDecl> _1a7e11c37_build_enumerable(_1a7e0dd22_TypeBuilder*);
inline jule::Ptr<_1a68529cb_TypeDecl> _1a7e11e9b_step(_1a7e0dd22_TypeBuilder*);
inline std::tuple<jule::Ptr<_1a68529cb_TypeDecl>,jule::Bool> _1a7e12210_build(_1a7e0dd22_TypeBuilder*);
struct _1a7e0dd22_TypeBuilder {
	jule::Ptr<_1a7ded52b_Parser> _field_p = jule::Ptr<_1a7ded52b_Parser>();
	jule::Slice<jule::Ptr<_1a527737a_Token>> _field_tokens = jule::Slice<jule::Ptr<_1a527737a_Token>>();
	jule::I64* _field_i = nullptr;
	jule::Bool _field_err = jule::Bool();
	

	_1a7e0dd22_TypeBuilder(void) = default;

	inline bool operator==(_1a7e0dd22_TypeBuilder _other) {
		return 
			this->_field_p == _other._field_p &&
			this->_field_tokens == _other._field_tokens &&
			this->_field_i == _other._field_i &&
			this->_field_err == _other._field_err;
	}

	inline bool operator!=(_1a7e0dd22_TypeBuilder _other) { return !this->operator==(_other); }


};
struct _1a7817495_CompileInfo {
	jule::Bool _field_prod = jule::Bool();
	jule::Bool _field_test = jule::Bool();
	jule::Str _field_compiler = jule::Str("clang", 5);
	jule::Str _field_cpp_std = jule::Str("cpp14", 5);
	

	_1a7817495_CompileInfo(void) = default;

	inline bool operator==(_1a7817495_CompileInfo _other) {
		return 
			this->_field_prod == _other._field_prod &&
			this->_field_test == _other._field_test &&
			this->_field_compiler == _other._field_compiler &&
			this->_field_cpp_std == _other._field_cpp_std;
	}

	inline bool operator!=(_1a7817495_CompileInfo _other) { return !this->operator==(_other); }


};
inline void _1a7818e8b_push_err(_1a781893b_DirectiveEval*, jule::Ptr<_1a527737a_Token>, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Slice<jule::Ptr<_1a527737a_Token>>> _1a7819343_split_operans(_1a781893b_DirectiveEval*, jule::Str, jule::Slice<jule::Ptr<_1a527737a_Token>>&);
inline jule::Bool _1a7819651_eval_directive_ident(_1a781893b_DirectiveEval*, jule::Str);
inline jule::Bool _1a781995e_eval_directive_part(_1a781893b_DirectiveEval*, jule::Slice<jule::Ptr<_1a527737a_Token>>);
inline jule::Bool _1a7819bc3_eval(_1a781893b_DirectiveEval*);
struct _1a781893b_DirectiveEval {
	jule::Slice<_1a43349cc_Log> _field_logs = jule::Slice<_1a43349cc_Log>();
	jule::Ptr<_1a6852525_Directive> _field_d = jule::Ptr<_1a6852525_Directive>();
	jule::Slice<jule::Str> _field_vars = jule::Slice<jule::Str>();
	

	_1a781893b_DirectiveEval(void) = default;

	inline bool operator==(_1a781893b_DirectiveEval _other) {
		return 
			this->_field_logs == _other._field_logs &&
			this->_field_d == _other._field_d &&
			this->_field_vars == _other._field_vars;
	}

	inline bool operator!=(_1a781893b_DirectiveEval _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a7ceea26_JuleImporter> static__1d509ac40_new(_1a7817495_CompileInfo);
inline jule::Slice<jule::Ptr<_1a7685038_ImportInfo>> _1d50b46a4_all_packages(_1a7ceea26_JuleImporter*);
inline void _1d50c54d9_set_mod_path(_1a7ceea26_JuleImporter*, jule::Str);
inline jule::Str _1d50d3e10_get_mod_path(_1a7ceea26_JuleImporter*);
inline jule::Str _1d50d682a_mod_by_id(_1a7ceea26_JuleImporter*, jule::I64);
inline jule::Ptr<_1a7685038_ImportInfo> _1d5133921_get_import(_1a7ceea26_JuleImporter*, jule::Str);
inline std::tuple<jule::Slice<jule::Ptr<_1a6820cc9_Ast>>,jule::Slice<_1a43349cc_Log>> _1a7d14e9d_import_package(_1a7ceea26_JuleImporter*, jule::Str, jule::Bool);
inline void _1a7d1729c_imported(_1a7ceea26_JuleImporter*, jule::Ptr<_1a7685038_ImportInfo>);
inline std::tuple<jule::Bool,jule::Slice<_1a43349cc_Log>> _1a7d18446_is_pass_build_directives(_1a7ceea26_JuleImporter*, jule::Ptr<_1a6820cc9_Ast>&);
struct _1a7ceea26_JuleImporter {
	jule::Slice<jule::Str> _field_mods = jule::Slice<jule::Str>();
	jule::Str _field_mod = jule::Str();
	jule::Slice<jule::Ptr<_1a7685038_ImportInfo>> _field_pkgs = jule::Slice<jule::Ptr<_1a7685038_ImportInfo>>();
	jule::Slice<jule::Str> _field_vars = jule::Slice<jule::Str>();
	

	_1a7ceea26_JuleImporter(void) = default;

	inline bool operator==(_1a7ceea26_JuleImporter _other) {
		return 
			this->_field_mods == _other._field_mods &&
			this->_field_mod == _other._field_mod &&
			this->_field_pkgs == _other._field_pkgs &&
			this->_field_vars == _other._field_vars;
	}

	inline bool operator!=(_1a7ceea26_JuleImporter _other) { return !this->operator==(_other); }


};
struct _1a7dbbcd0_OrderedDefines {
	jule::Slice<jule::Ptr<_1a6826829_Struct>> _field_structs = jule::Slice<jule::Ptr<_1a6826829_Struct>>();
	jule::Slice<jule::Ptr<_1a76a7720_Var>> _field_globals = jule::Slice<jule::Ptr<_1a76a7720_Var>>();
	

	_1a7dbbcd0_OrderedDefines(void) = default;

	inline bool operator==(_1a7dbbcd0_OrderedDefines _other) {
		return 
			this->_field_structs == _other._field_structs &&
			this->_field_globals == _other._field_globals;
	}

	inline bool operator!=(_1a7dbbcd0_OrderedDefines _other) { return !this->operator==(_other); }


};
inline jule::Bool _1aa7ad1b3_is_common_ordered(jule::Slice<jule::Ptr<_1a6826829_Struct>>&, jule::Ptr<_1a6826829_Struct>);
inline jule::Bool _1aa7b5e13_is_common_ordered(jule::Slice<jule::Ptr<_1a76a7720_Var>>&, jule::Ptr<_1a76a7720_Var>);
inline void _1aa7a9610_order_common(jule::Slice<jule::Ptr<_1a6826829_Struct>>&);
inline void _1aa7acd3e_order_common(jule::Slice<jule::Ptr<_1a76a7720_Var>>&);
inline void static__1d5166cb7_order_structures(jule::Slice<jule::Ptr<_1a6826829_Struct>>&);
inline void static__1a7d21817_order_vars(jule::Slice<jule::Ptr<_1a76a7720_Var>>&);
struct _1a7d8135a_DefineOrderer {
	

	_1a7d8135a_DefineOrderer(void) = default;

	inline bool operator==(_1a7d8135a_DefineOrderer _other) { return true; }

	inline bool operator!=(_1a7d8135a_DefineOrderer _other) { return !this->operator==(_other); }


};
struct _1a7ed0a1a_LiveTable {
	jule::Slice<jule::Ptr<_1a76a7720_Var>> _field_vars = jule::Slice<jule::Ptr<_1a76a7720_Var>>();
	jule::Slice<jule::Ptr<_1a6872c93_FnIns>> _field_fns = jule::Slice<jule::Ptr<_1a6872c93_FnIns>>();
	jule::Slice<jule::Ptr<_1a6836a48_StructIns>> _field_structs = jule::Slice<jule::Ptr<_1a6836a48_StructIns>>();
	

	_1a7ed0a1a_LiveTable(void) = default;

	inline bool operator==(_1a7ed0a1a_LiveTable _other) {
		return 
			this->_field_vars == _other._field_vars &&
			this->_field_fns == _other._field_fns &&
			this->_field_structs == _other._field_structs;
	}

	inline bool operator!=(_1a7ed0a1a_LiveTable _other) { return !this->operator==(_other); }


};
inline void _1a8015478_optimize_child(jule::Ptr<_1a801508d_ScopeDeadCode>, jule::Ptr<_1a7658803_Scope>&);
inline void _1a80156ed_optimize_body_child(jule::Ptr<_1a801508d_ScopeDeadCode>, jule::Ptr<_1a7658803_Scope>&);
inline void _1a8015973_optimize_expr_model(jule::Ptr<_1a801508d_ScopeDeadCode>, jule::Any&);
inline void _1a8015b4e_eliminate_followed(_1a801508d_ScopeDeadCode*);
inline void _1a8015dc4_push_goto(jule::Ptr<_1a801508d_ScopeDeadCode>, jule::Ptr<_1a766cc13_GotoSt>);
inline void _1a8016149_push_label(jule::Ptr<_1a801508d_ScopeDeadCode>, jule::Ptr<_1a766ca26_Label>);
inline void _1a80163be_optimize_range_iter(jule::Ptr<_1a801508d_ScopeDeadCode>, jule::Ptr<_1a7648b23_RangeIter>);
inline void _1a8016644_optimize_while_iter(jule::Ptr<_1a801508d_ScopeDeadCode>, jule::Ptr<_1a761ac7c_WhileIter>);
inline void _1a80168b9_optimize_inf_iter(jule::Ptr<_1a801508d_ScopeDeadCode>, jule::Ptr<_1a761aa90_InfIter>);
inline void _1a8016b3e_optimize_conditional(jule::Ptr<_1a801508d_ScopeDeadCode>, jule::Ptr<_1a7609e69_Conditional>);
inline void _1a8016db4_optimize_match(jule::Ptr<_1a801508d_ScopeDeadCode>, jule::Ptr<_1a766d4b6_Match>);
inline void _1a8017139_optimize_assign(jule::Ptr<_1a801508d_ScopeDeadCode>, jule::Ptr<_1a766d0dc_Assign>);
inline void _1a80173ae_optimize_multi_assign(jule::Ptr<_1a801508d_ScopeDeadCode>, jule::Ptr<_1a766d2c9_MultiAssign>);
inline void _1a8017634_optimize_stmt(jule::Ptr<_1a801508d_ScopeDeadCode>, jule::Any);
inline void _1a8017810_optimize_stmts(jule::Ptr<_1a801508d_ScopeDeadCode>);
struct _1a801508d_ScopeDeadCode {
	jule::Ptr<_1a801508d_ScopeDeadCode> _field_parent = jule::Ptr<_1a801508d_ScopeDeadCode>();
	jule::Ptr<_1a7658803_Scope> _field_s = jule::Ptr<_1a7658803_Scope>();
	jule::Slice<jule::Any>* _field_stmts = nullptr;
	jule::I64 _field_i = jule::I64();
	jule::Ptr<jule::Slice<jule::Ptr<_1a766ca26_Label>>> _field_labels = jule::Ptr<jule::Slice<jule::Ptr<_1a766ca26_Label>>>();
	jule::Ptr<jule::Slice<jule::Ptr<_1a766cc13_GotoSt>>> _field_gotos = jule::Ptr<jule::Slice<jule::Ptr<_1a766cc13_GotoSt>>>();
	

	_1a801508d_ScopeDeadCode(void) = default;

	inline bool operator==(_1a801508d_ScopeDeadCode _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_i == _other._field_i &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos;
	}

	inline bool operator!=(_1a801508d_ScopeDeadCode _other) { return !this->operator==(_other); }


};
inline _1a8018b41_ExprDeadCode static__1a80196e1_new(jule::Ptr<_1a801508d_ScopeDeadCode>&);
inline void _1a8019966_binary(_1a8018b41_ExprDeadCode*, jule::Ptr<_1a684b145_BinopExprModel>);
inline void _1a8019bdb_unary(_1a8018b41_ExprDeadCode*, jule::Ptr<_1a6849e79_UnaryExprModel>);
inline void _1a8019e61_structure_lit(_1a8018b41_ExprDeadCode*, jule::Ptr<_1a682b752_StructLitExprModel>);
inline void _1a801a1d6_alloc_structure(_1a8018b41_ExprDeadCode*, jule::Ptr<_1a68225b1_AllocStructLitExprModel>);
inline void _1a801a45b_casting(_1a8018b41_ExprDeadCode*, jule::Ptr<_1a684003a_CastingExprModel>);
inline void _1a801a6d1_args(_1a8018b41_ExprDeadCode*, jule::Slice<jule::Any>&);
inline void _1a801a956_func_call(_1a8018b41_ExprDeadCode*, jule::Ptr<_1a6845150_FnCallExprModel>);
inline void _1a801abcb_slice(_1a8018b41_ExprDeadCode*, jule::Ptr<_1a684533c_SliceExprModel>);
inline void _1a801ae51_array(_1a8018b41_ExprDeadCode*, jule::Ptr<_1a686ca07_ArrayExprModel>);
inline void _1a801b1c6_indexing(_1a8018b41_ExprDeadCode*, jule::Ptr<_1a686b770_IndexingExprModel>);
inline void _1a801b44b_anon_func(_1a8018b41_ExprDeadCode*, jule::Ptr<_1a686b95c_AnonFnExprModel>);
inline void _1a801b6c1_map(_1a8018b41_ExprDeadCode*, jule::Ptr<_1a686bd36_MapExprModel>);
inline void _1a801b946_slicing(_1a8018b41_ExprDeadCode*, jule::Ptr<_1a686c023_SlicingExprModel>);
inline void _1a801bbbb_trait_sub(_1a8018b41_ExprDeadCode*, jule::Ptr<_1a686c210_TraitSubIdentExprModel>);
inline void _1a801be41_structure_sub(_1a8018b41_ExprDeadCode*, jule::Ptr<_1a686c62d_StructSubIdentExprModel>);
inline void _1a801c1b6_common_sub(_1a8018b41_ExprDeadCode*, jule::Ptr<_1a686cdd1_CommonSubIdentExprModel>);
inline void _1a801c43b_tuple(_1a8018b41_ExprDeadCode*, jule::Ptr<_1a686d0bd_TupleExprModel>);
inline void _1a801c6b1_new_call(_1a8018b41_ExprDeadCode*, jule::Ptr<_1a686d871_BuiltinNewCallExprModel>);
inline void _1a801c936_out_call(_1a8018b41_ExprDeadCode*, jule::Ptr<_1a686d2aa_BuiltinOutCallExprModel>);
inline void _1a801cbab_outln_call(_1a8018b41_ExprDeadCode*, jule::Ptr<_1a686d497_BuiltinOutlnCallExprModel>);
inline void _1a801ce31_panic_call(_1a8018b41_ExprDeadCode*, jule::Ptr<_1a686da5d_BuiltinPanicCallExprModel>);
inline void _1a801d1a6_assert_call(_1a8018b41_ExprDeadCode*, jule::Ptr<_1a686dc4a_BuiltinAssertCallExprModel>);
inline void _1a801d42b_error_call(_1a8018b41_ExprDeadCode*, jule::Ptr<_1a686e4ed_BuiltinErrorCallExprModel>);
inline void _1a801d6a1_make_call(_1a8018b41_ExprDeadCode*, jule::Ptr<_1a686de37_BuiltinMakeCallExprModel>);
inline void _1a801d926_append_call(_1a8018b41_ExprDeadCode*, jule::Ptr<_1a686e124_BuiltinAppendCallExprModel>);
inline void _1a801db9b_clone_call(_1a8018b41_ExprDeadCode*, jule::Ptr<_1a686d684_BuiltinCloneCallExprModel>);
inline void _1a801de21_sizeof(_1a8018b41_ExprDeadCode*, jule::Ptr<_1a686c3ec_SizeofExprModel>);
inline void _1a801e196_alignof(_1a8018b41_ExprDeadCode*, jule::Ptr<_1a686eb5d_AlignofExprModel>);
inline void _1a801e41b_integrated_to_str(_1a8018b41_ExprDeadCode*, jule::Ptr<_1a6870037_IntegratedToStrExprModel>);
inline void _1a801e691_free(_1a8018b41_ExprDeadCode*, jule::Ptr<_1a6870411_FreeExprModel>);
inline void _1a801e916_backend_emit(_1a8018b41_ExprDeadCode*, jule::Ptr<_1a6870224_BackendEmitExprModel>);
inline void _1a801eb8b_optimize(_1a8018b41_ExprDeadCode*, jule::Any&);
struct _1a8018b41_ExprDeadCode {
	jule::Ptr<_1a801508d_ScopeDeadCode> _field_s = jule::Ptr<_1a801508d_ScopeDeadCode>();
	

	_1a8018b41_ExprDeadCode(void) = default;

	inline bool operator==(_1a8018b41_ExprDeadCode _other) {
		return 
			this->_field_s == _other._field_s;
	}

	inline bool operator!=(_1a8018b41_ExprDeadCode _other) { return !this->operator==(_other); }


};
struct _1a52de106_UnsafeBinopExprModel {
	jule::Ptr<_1a684b145_BinopExprModel> _field_node = jule::Ptr<_1a684b145_BinopExprModel>();
	

	_1a52de106_UnsafeBinopExprModel(void) = default;

	inline bool operator==(_1a52de106_UnsafeBinopExprModel _other) {
		return 
			this->_field_node == _other._field_node;
	}

	inline bool operator!=(_1a52de106_UnsafeBinopExprModel _other) { return !this->operator==(_other); }


};
struct _1a55c5695_UnsafeIndexingExprModel {
	jule::Ptr<_1a686b770_IndexingExprModel> _field_node = jule::Ptr<_1a686b770_IndexingExprModel>();
	

	_1a55c5695_UnsafeIndexingExprModel(void) = default;

	inline bool operator==(_1a55c5695_UnsafeIndexingExprModel _other) {
		return 
			this->_field_node == _other._field_node;
	}

	inline bool operator!=(_1a55c5695_UnsafeIndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1a55c2263_PushToSliceExprModel {
	jule::Any _field_dest = jule::Any();
	jule::Ptr<_1a684533c_SliceExprModel> _field_elems = jule::Ptr<_1a684533c_SliceExprModel>();
	

	_1a55c2263_PushToSliceExprModel(void) = default;

	inline bool operator==(_1a55c2263_PushToSliceExprModel _other) {
		return 
			this->_field_dest == _other._field_dest &&
			this->_field_elems == _other._field_elems;
	}

	inline bool operator!=(_1a55c2263_PushToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _1a65b8764_MutSlicingExprModel {
	jule::Ptr<_1a527737a_Token> _field_token = jule::Ptr<_1a527737a_Token>();
	jule::Any _field_expr = jule::Any();
	jule::Any _field_left = jule::Any();
	jule::Any _field_right = jule::Any();
	

	_1a65b8764_MutSlicingExprModel(void) = default;

	inline bool operator==(_1a65b8764_MutSlicingExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_left == _other._field_left &&
			this->_field_right == _other._field_right;
	}

	inline bool operator!=(_1a65b8764_MutSlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1a534733a_StrInsertBeginExprModel {
	jule::Any _field_dest = jule::Any();
	jule::Any _field_expr = jule::Any();
	

	_1a534733a_StrInsertBeginExprModel(void) = default;

	inline bool operator==(_1a534733a_StrInsertBeginExprModel _other) {
		return 
			this->_field_dest == _other._field_dest &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1a534733a_StrInsertBeginExprModel _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a55c39a1_ScopeOptimizer> static__1a52ac46a_new(jule::Ptr<_1a7658803_Scope>);
inline void _1a52aeb10_set_current_stmt(_1a55c39a1_ScopeOptimizer*, jule::Any);
inline void _1a52b0c32_optimize_data(_1a55c39a1_ScopeOptimizer*, jule::Ptr<_1a76edda4_Data>);
inline void _1a52b1c99_optimize_var(_1a55c39a1_ScopeOptimizer*, jule::Ptr<_1a76a7720_Var>);
inline void _1a52c11e8_optimize_conditional(_1a55c39a1_ScopeOptimizer*, jule::Ptr<_1a7609e69_Conditional>);
inline void _1a52c2749_build_default_constat_true_case(_1a55c39a1_ScopeOptimizer*, jule::Ptr<_1a766d8d4_Case>, jule::I64&, jule::Ptr<_1a766d4b6_Match>&);
inline void _1a52d950d_optimize_match(_1a55c39a1_ScopeOptimizer*, jule::Ptr<_1a766d4b6_Match>);
inline void _1a52dad4a_optimize_range_iter(_1a55c39a1_ScopeOptimizer*, jule::Ptr<_1a7648b23_RangeIter>);
inline void _1a52dd8ca_optimize_while_iter(_1a55c39a1_ScopeOptimizer*, jule::Ptr<_1a761ac7c_WhileIter>);
inline jule::Bool _1a52e035a_substr(_1a55c39a1_ScopeOptimizer*, jule::Ptr<_1a766d0dc_Assign>);
inline jule::Bool _1a52e0d94_str_insert(_1a55c39a1_ScopeOptimizer*, jule::Ptr<_1a766d0dc_Assign>);
inline jule::Bool _1a52e1845_str_assign(_1a55c39a1_ScopeOptimizer*, jule::Ptr<_1a766d0dc_Assign>);
inline void _1a52de898_optimize_assign(_1a55c39a1_ScopeOptimizer*, jule::Ptr<_1a766d0dc_Assign>);
inline void _1a52deba6_optimize_multi_assign(_1a55c39a1_ScopeOptimizer*, jule::Ptr<_1a766d2c9_MultiAssign>);
inline void _1a52e5805_optimize_ret(_1a55c39a1_ScopeOptimizer*, jule::Ptr<_1a766dcad_RetSt>);
inline void _1a52e6064_optimize_stmt(_1a55c39a1_ScopeOptimizer*, jule::Any);
inline void _1a532757e_optimize_child(_1a55c39a1_ScopeOptimizer*, jule::Ptr<_1a7658803_Scope>);
inline void _1a53c9961_optimize(_1a55c39a1_ScopeOptimizer*);
struct _1a55c39a1_ScopeOptimizer {
	jule::I64 _field_i = jule::I64();
	jule::Ptr<_1a7658803_Scope> _field_scope = jule::Ptr<_1a7658803_Scope>();
	

	_1a55c39a1_ScopeOptimizer(void) = default;

	inline bool operator==(_1a55c39a1_ScopeOptimizer _other) {
		return 
			this->_field_i == _other._field_i &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1a55c39a1_ScopeOptimizer _other) { return !this->operator==(_other); }


};
inline void static__1a541dac6_optimize(jule::Any&);
inline jule::Bool _1a5422e0a_str_cond(_1a5775218_ExprOptimizer*, jule::Ptr<_1a684b145_BinopExprModel>);
inline void _1a55b1b48_binary(_1a5775218_ExprOptimizer*, jule::Ptr<_1a684b145_BinopExprModel>);
inline void _1a55bdaab_unary(_1a5775218_ExprOptimizer*, jule::Ptr<_1a6849e79_UnaryExprModel>);
inline void _1a55c0c45_structure_lit(_1a5775218_ExprOptimizer*, jule::Ptr<_1a682b752_StructLitExprModel>);
inline void _1a55ad2c6_alloc_structure(_1a5775218_ExprOptimizer*, jule::Ptr<_1a68225b1_AllocStructLitExprModel>);
inline void _1a55c27e6_casting(_1a5775218_ExprOptimizer*, jule::Ptr<_1a684003a_CastingExprModel>);
inline void _1a55c30cc_args(_1a5775218_ExprOptimizer*, jule::Slice<jule::Any>&);
inline void _1a55c430e_scope(_1a5775218_ExprOptimizer*, jule::Ptr<_1a7658803_Scope>&);
inline void _1a55c5233_func_call(_1a5775218_ExprOptimizer*, jule::Ptr<_1a6845150_FnCallExprModel>);
inline void _1a55c8ba4_slice(_1a5775218_ExprOptimizer*, jule::Ptr<_1a684533c_SliceExprModel>);
inline void _1a55d6e9d_array(_1a5775218_ExprOptimizer*, jule::Ptr<_1a686ca07_ArrayExprModel>);
inline void _1a55dc05d_indexing(_1a5775218_ExprOptimizer*, jule::Ptr<_1a686b770_IndexingExprModel>);
inline void _1a55e2b79_anon_func(_1a5775218_ExprOptimizer*, jule::Ptr<_1a686b95c_AnonFnExprModel>);
inline void _1a5621658_map(_1a5775218_ExprOptimizer*, jule::Ptr<_1a686bd36_MapExprModel>);
inline void _1a562596a_slicing(_1a5775218_ExprOptimizer*, jule::Ptr<_1a686c023_SlicingExprModel>);
inline void _1a560553d_trait_sub(_1a5775218_ExprOptimizer*, jule::Ptr<_1a686c210_TraitSubIdentExprModel>);
inline void _1a5661ce7_structure_sub(_1a5775218_ExprOptimizer*, jule::Ptr<_1a686c62d_StructSubIdentExprModel>);
inline void _1a569dd45_common_sub(_1a5775218_ExprOptimizer*, jule::Ptr<_1a686cdd1_CommonSubIdentExprModel>);
inline void _1a56a060a_tuple(_1a5775218_ExprOptimizer*, jule::Ptr<_1a686d0bd_TupleExprModel>);
inline void _1a56a1012_new_call(_1a5775218_ExprOptimizer*, jule::Ptr<_1a686d871_BuiltinNewCallExprModel>);
inline void _1a56b0c58_out_call(_1a5775218_ExprOptimizer*, jule::Ptr<_1a686d2aa_BuiltinOutCallExprModel>);
inline void _1a56b2485_outln_call(_1a5775218_ExprOptimizer*, jule::Ptr<_1a686d497_BuiltinOutlnCallExprModel>);
inline void _1a56b6203_panic_call(_1a5775218_ExprOptimizer*, jule::Ptr<_1a686da5d_BuiltinPanicCallExprModel>);
inline void _1a56ba68b_assert_call(_1a5775218_ExprOptimizer*, jule::Ptr<_1a686dc4a_BuiltinAssertCallExprModel>);
inline void _1a574abd3_error_call(_1a5775218_ExprOptimizer*, jule::Ptr<_1a686e4ed_BuiltinErrorCallExprModel>);
inline void _1a574d6b9_make_call(_1a5775218_ExprOptimizer*, jule::Ptr<_1a686de37_BuiltinMakeCallExprModel>);
inline void _1a5795e5e_append_call(_1a5775218_ExprOptimizer*, jule::Ptr<_1a686e124_BuiltinAppendCallExprModel>);
inline void _1a57992d6_clone_call(_1a5775218_ExprOptimizer*, jule::Ptr<_1a686d684_BuiltinCloneCallExprModel>);
inline void _1a579c44e_sizeof(_1a5775218_ExprOptimizer*, jule::Ptr<_1a686c3ec_SizeofExprModel>);
inline void _1a57ae5e8_alignof(_1a5775218_ExprOptimizer*, jule::Ptr<_1a686eb5d_AlignofExprModel>);
inline void _1a57b061b_integrated_to_str(_1a5775218_ExprOptimizer*, jule::Ptr<_1a6870037_IntegratedToStrExprModel>);
inline void _1a57b3bc4_free(_1a5775218_ExprOptimizer*, jule::Ptr<_1a6870411_FreeExprModel>);
inline void _1a57b638b_backend_emit(_1a5775218_ExprOptimizer*, jule::Ptr<_1a6870224_BackendEmitExprModel>);
inline void _1a57b1a29_do(_1a5775218_ExprOptimizer*);
struct _1a5775218_ExprOptimizer {
	jule::Ptr<jule::Any> _field_model = jule::Ptr<jule::Any>();
	

	_1a5775218_ExprOptimizer(void) = default;

	inline bool operator==(_1a5775218_ExprOptimizer _other) {
		return 
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_1a5775218_ExprOptimizer _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a7ea9043_Optimizer> static__1a7e54cad_new(jule::Ptr<_1d5090729_IR>&);
inline void _1a7e7d512_optimize_global(_1a7ea9043_Optimizer*, jule::Ptr<_1a76a7720_Var>&);
inline void _1a7e8a80a_optimize_function(_1a7ea9043_Optimizer*, jule::Ptr<_1a68709c7_Fn>&);
inline void _1a7e8ce6c_optimize_struct(_1a7ea9043_Optimizer*, jule::Ptr<_1a6826829_Struct>&);
inline void _1a7e8d104_optimize_globals(_1a7ea9043_Optimizer*, jule::Ptr<_1a7687bea_Package>&);
inline void _1a7e913d2_optimize_functions(_1a7ea9043_Optimizer*, jule::Ptr<_1a7687bea_Package>&);
inline void _1a7e94171_optimize_structs(_1a7ea9043_Optimizer*, jule::Ptr<_1a7687bea_Package>&);
inline void _1a7ea0688_optimize_package(_1a7ea9043_Optimizer*, jule::Ptr<_1a7687bea_Package>&);
inline void _1a7ea4912_optimize(_1a7ea9043_Optimizer*);
struct _1a7ea9043_Optimizer {
	jule::Ptr<_1d5090729_IR> _field_ir = jule::Ptr<_1d5090729_IR>();
	

	_1a7ea9043_Optimizer(void) = default;

	inline bool operator==(_1a7ea9043_Optimizer _other) {
		return 
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_1a7ea9043_Optimizer _other) { return !this->operator==(_other); }


};
inline void static__1a8036334_reset(void);
inline void static__1a8036466_print(jule::Str, jule::Str);
struct _1a8036147_AnsiEscape {
	

	_1a8036147_AnsiEscape(void) = default;

	inline bool operator==(_1a8036147_AnsiEscape _other) { return true; }

	inline bool operator!=(_1a8036147_AnsiEscape _other) { return !this->operator==(_other); }


};
inline void static__1a8037720_log_flat(_1a43349cc_Log&);
inline void static__1a803792e_log_error(_1a43349cc_Log&);
inline void static__1a8037b3d_log(_1a43349cc_Log&);
inline void static__1a8037d4c_print_logs(jule::Slice<_1a43349cc_Log>&);
struct _1a8037478_Logger {
	

	_1a8037478_Logger(void) = default;

	inline bool operator==(_1a8037478_Logger _other) { return true; }

	inline bool operator!=(_1a8037478_Logger _other) { return !this->operator==(_other); }


};
inline jule::U64 _1a864cc36_unix(_1a864c84b_AbsTime*);
struct _1a864c84b_AbsTime {
	jule::U64 _field_day = jule::U64();
	jule::U64 _field_week_day = jule::U64();
	jule::U64 _field_year_day = jule::U64();
	jule::U64 _field_month = jule::U64();
	jule::U64 _field_year = jule::U64();
	jule::U64 _field_second = jule::U64();
	jule::U64 _field_minute = jule::U64();
	jule::U64 _field_hour = jule::U64();
	

	_1a864c84b_AbsTime(void) = default;

	inline bool operator==(_1a864c84b_AbsTime _other) {
		return 
			this->_field_day == _other._field_day &&
			this->_field_week_day == _other._field_week_day &&
			this->_field_year_day == _other._field_year_day &&
			this->_field_month == _other._field_month &&
			this->_field_year == _other._field_year &&
			this->_field_second == _other._field_second &&
			this->_field_minute == _other._field_minute &&
			this->_field_hour == _other._field_hour;
	}

	inline bool operator!=(_1a864c84b_AbsTime _other) { return !this->operator==(_other); }


};
inline _1a864d022_Time static__1a864d3b8_unix(jule::U64);
inline _1a864d022_Time static__1a864d5b6_now(void);
inline jule::U64 _1a864da17_unix(_1a864d022_Time*);
inline jule::U64 _1a864dc7b_day(_1a864d022_Time*);
inline jule::U64 _1a864dee0_month(_1a864d022_Time*);
inline jule::U64 _1a864e254_year(_1a864d022_Time*);
inline jule::U64 _1a864e4b8_second(_1a864d022_Time*);
inline jule::U64 _1a864e72c_minute(_1a864d022_Time*);
inline jule::U64 _1a864e991_hour(_1a864d022_Time*);
inline _1a864c84b_AbsTime _1a864ec05_abs(_1a864d022_Time*);
struct _1a864d022_Time {
	jule::U64 _field_sec = jule::U64();
	

	_1a864d022_Time(void) = default;

	inline bool operator==(_1a864d022_Time _other) {
		return 
			this->_field_sec == _other._field_sec;
	}

	inline bool operator!=(_1a864d022_Time _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a85be05e_ScopeCoder> static__1a85be46b_new(jule::Ptr<_1a8615281_ObjectCoder>&);
inline void _1a85be669_range_index_iter(jule::Ptr<_1a85be05e_ScopeCoder>, jule::Ptr<_1a7648b23_RangeIter>&);
inline void _1a85be8de_range_hashmap_iter(jule::Ptr<_1a85be05e_ScopeCoder>, jule::Ptr<_1a7648b23_RangeIter>&);
inline void _1a85beb64_if_case(jule::Ptr<_1a85be05e_ScopeCoder>, jule::Ptr<_1a7660200_If>);
inline void _1a85bedd9_conditional(jule::Ptr<_1a85be05e_ScopeCoder>, jule::Ptr<_1a7609e69_Conditional>);
inline void _1a85c015e_inf_iter(jule::Ptr<_1a85be05e_ScopeCoder>, jule::Ptr<_1a761aa90_InfIter>);
inline void _1a85c03d4_while_iter(jule::Ptr<_1a85be05e_ScopeCoder>, jule::Ptr<_1a761ac7c_WhileIter>);
inline void _1a85c0659_range_iter(jule::Ptr<_1a85be05e_ScopeCoder>, jule::Ptr<_1a7648b23_RangeIter>);
inline void _1a85c08ce_cont(jule::Ptr<_1a85be05e_ScopeCoder>, jule::Ptr<_1a7648d10_ContSt>);
inline void _1a85c0b54_label(jule::Ptr<_1a85be05e_ScopeCoder>, jule::Ptr<_1a766ca26_Label>);
inline void _1a85c0dc9_goto_st(jule::Ptr<_1a85be05e_ScopeCoder>, jule::Ptr<_1a766cc13_GotoSt>);
inline void _1a85c114e_postfix(jule::Ptr<_1a85be05e_ScopeCoder>, jule::Ptr<_1a766ce00_Postfix>);
inline void _1a85c13c4_assign(jule::Ptr<_1a85be05e_ScopeCoder>, jule::Ptr<_1a766d0dc_Assign>);
inline void _1a85c1649_multi_assign(jule::Ptr<_1a85be05e_ScopeCoder>, jule::Ptr<_1a766d2c9_MultiAssign>);
inline jule::Fn<void(void)> _1a85c1957_match_expr(jule::Ptr<_1a85be05e_ScopeCoder>, jule::Ptr<_1a766d4b6_Match>);
inline void _1a85c1c76_case(jule::Ptr<_1a85be05e_ScopeCoder>, jule::Ptr<_1a766d4b6_Match>, jule::Ptr<_1a766d8d4_Case>);
inline void _1a85c1eeb_match_st(jule::Ptr<_1a85be05e_ScopeCoder>, jule::Ptr<_1a766d4b6_Match>);
inline void _1a85c2271_fall_st(jule::Ptr<_1a85be05e_ScopeCoder>, jule::Ptr<_1a766dac1_FallSt>);
inline void _1a85c24e6_break_st(jule::Ptr<_1a85be05e_ScopeCoder>, jule::Ptr<_1a766c839_BreakSt>);
inline void _1a85c276b_ret_with_vars(jule::Ptr<_1a85be05e_ScopeCoder>, jule::Ptr<_1a766dcad_RetSt>);
inline void _1a85c29e1_ret_tuple(jule::Ptr<_1a85be05e_ScopeCoder>, jule::Ptr<_1a766dcad_RetSt>);
inline void _1a85c2c66_ret_with_exprs(jule::Ptr<_1a85be05e_ScopeCoder>, jule::Ptr<_1a766dcad_RetSt>);
inline void _1a85c2edb_ret_st(jule::Ptr<_1a85be05e_ScopeCoder>, jule::Ptr<_1a766dcad_RetSt>);
inline void _1a85c34d6_var(jule::Ptr<_1a85be05e_ScopeCoder>, jule::Ptr<_1a76a7720_Var>);
inline void _1a85c375b_st(jule::Ptr<_1a85be05e_ScopeCoder>, jule::Any);
inline void _1a85c39d1_scope_stmts(jule::Ptr<_1a85be05e_ScopeCoder>, jule::Ptr<_1a7658803_Scope>&);
inline void _1a85c3c56_scope(jule::Ptr<_1a85be05e_ScopeCoder>, jule::Ptr<_1a7658803_Scope>);
inline void _1a85c3ecb_func_scope(jule::Ptr<_1a85be05e_ScopeCoder>, jule::Ptr<_1a6872c93_FnIns>);
struct _1a85be05e_ScopeCoder {
	jule::Ptr<_1a8615281_ObjectCoder> _field_oc = jule::Ptr<_1a8615281_ObjectCoder>();
	

	_1a85be05e_ScopeCoder(void) = default;

	inline bool operator==(_1a85be05e_ScopeCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1a85be05e_ScopeCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a85c6a06_ExprCoder> static__1a85c6e02_new(jule::Ptr<_1a8615281_ObjectCoder>&);
inline void _1a85c7177_string(jule::Ptr<_1a85c6a06_ExprCoder>, jule::Ptr<_1a75c3251_Const>&);
inline void _1a85c73ec_boolean(jule::Ptr<_1a85c6a06_ExprCoder>, jule::Ptr<_1a75c3251_Const>&);
inline void _1a85c75c8_nil_lit(jule::Ptr<_1a85c6a06_ExprCoder>);
inline jule::Bool _1a85c78d6_ftoa_special_cases(jule::Ptr<_1a85c6a06_ExprCoder>, jule::F64&);
inline void _1a85c7b5b_float32(jule::Ptr<_1a85c6a06_ExprCoder>, jule::Ptr<_1a75c3251_Const>&);
inline void _1a85c7dd1_float64(jule::Ptr<_1a85c6a06_ExprCoder>, jule::Ptr<_1a75c3251_Const>&);
inline void _1a85c8200_constant(jule::Ptr<_1a85c6a06_ExprCoder>, jule::Ptr<_1a75c3251_Const>, jule::Bool);
inline void _1a85c85b8_div_by_zero_binary(jule::Ptr<_1a85c6a06_ExprCoder>, jule::Ptr<_1a527737a_Token>&, jule::Ptr<_1a68382db_OperandExprModel>&, jule::Ptr<_1a68382db_OperandExprModel>&);
inline void _1a85c883d_unsafe_binary(jule::Ptr<_1a85c6a06_ExprCoder>, jule::Ptr<_1a684b145_BinopExprModel>);
inline void _1a85c8ab3_binary(jule::Ptr<_1a85c6a06_ExprCoder>, jule::Ptr<_1a684b145_BinopExprModel>);
inline void _1a85c8d38_var(jule::Ptr<_1a85c6a06_ExprCoder>, jule::Ptr<_1a76a7720_Var>);
inline void _1a85c90ad_structure(jule::Ptr<_1a85c6a06_ExprCoder>, jule::Ptr<_1a6826829_Struct>);
inline void _1a85c9333_structure_ins(jule::Ptr<_1a85c6a06_ExprCoder>, jule::Ptr<_1a6836a48_StructIns>);
inline void _1a85c95a8_unary(jule::Ptr<_1a85c6a06_ExprCoder>, jule::Ptr<_1a6849e79_UnaryExprModel>);
inline void _1a85c982d_structure_lit(jule::Ptr<_1a85c6a06_ExprCoder>, jule::Ptr<_1a682b752_StructLitExprModel>);
inline void _1a85c9aa3_alloc_structure(jule::Ptr<_1a85c6a06_ExprCoder>, jule::Ptr<_1a68225b1_AllocStructLitExprModel>);
inline void _1a85c9d28_casting(jule::Ptr<_1a85c6a06_ExprCoder>, jule::Ptr<_1a684003a_CastingExprModel>);
inline void _1a85ca09d_args(jule::Ptr<_1a85c6a06_ExprCoder>, jule::Slice<jule::Any>);
inline void _1a85ca323_model_for_call(jule::Ptr<_1a85c6a06_ExprCoder>, jule::Any);
inline void _1a85ca598_push_call_inf(jule::Ptr<_1a85c6a06_ExprCoder>, jule::Ptr<_1a6845150_FnCallExprModel>&);
inline jule::Bool _1a85ca8a6_is_wrapped(jule::Ptr<_1a85c6a06_ExprCoder>, jule::Ptr<_1a6845150_FnCallExprModel>&);
inline void _1a85cab2b_pure_func_call(jule::Ptr<_1a85c6a06_ExprCoder>, jule::Ptr<_1a6845150_FnCallExprModel>&);
inline void _1a85cada1_func_call(jule::Ptr<_1a85c6a06_ExprCoder>, jule::Ptr<_1a6845150_FnCallExprModel>);
inline void _1a85cb126_slice(jule::Ptr<_1a85c6a06_ExprCoder>, jule::Ptr<_1a684533c_SliceExprModel>);
inline void _1a85cb39b_indexing(jule::Ptr<_1a85c6a06_ExprCoder>, jule::Ptr<_1a686b770_IndexingExprModel>);
inline void _1a85cb621_unsafe_indexing(jule::Ptr<_1a85c6a06_ExprCoder>, jule::Ptr<_1a55c5695_UnsafeIndexingExprModel>);
inline void _1a85cb896_anon_func(jule::Ptr<_1a85c6a06_ExprCoder>, jule::Ptr<_1a686b95c_AnonFnExprModel>);
inline void _1a85cbb1b_map(jule::Ptr<_1a85c6a06_ExprCoder>, jule::Ptr<_1a686bd36_MapExprModel>);
inline void _1a85cbd91_slicing(jule::Ptr<_1a85c6a06_ExprCoder>, jule::Ptr<_1a686c023_SlicingExprModel>);
inline void _1a85cc116_trait_sub(jule::Ptr<_1a85c6a06_ExprCoder>, jule::Ptr<_1a686c210_TraitSubIdentExprModel>);
inline void _1a85cc38b_structure_sub(jule::Ptr<_1a85c6a06_ExprCoder>, jule::Ptr<_1a686c62d_StructSubIdentExprModel>);
inline void _1a85cc611_common_ident(jule::Ptr<_1a85c6a06_ExprCoder>, jule::Ptr<_1a686cbe4_CommonIdentExprModel>);
inline void _1a85cc886_common_sub(jule::Ptr<_1a85c6a06_ExprCoder>, jule::Ptr<_1a686cdd1_CommonSubIdentExprModel>);
inline void _1a85ccb0b_array(jule::Ptr<_1a85c6a06_ExprCoder>, jule::Ptr<_1a686ca07_ArrayExprModel>);
inline void _1a85ccd81_func_ins_common(jule::Ptr<_1a85c6a06_ExprCoder>, jule::Ptr<_1a6872c93_FnIns>);
inline void _1a85cd106_func_ins(jule::Ptr<_1a85c6a06_ExprCoder>, jule::Ptr<_1a6872c93_FnIns>);
inline void _1a85cd37b_tuple(jule::Ptr<_1a85c6a06_ExprCoder>, jule::Ptr<_1a686d0bd_TupleExprModel>);
inline void _1a85cd601_new_call(jule::Ptr<_1a85c6a06_ExprCoder>, jule::Ptr<_1a686d871_BuiltinNewCallExprModel>);
inline void _1a85cd876_out_call(jule::Ptr<_1a85c6a06_ExprCoder>, jule::Ptr<_1a686d2aa_BuiltinOutCallExprModel>);
inline void _1a85cdaeb_outln_call(jule::Ptr<_1a85c6a06_ExprCoder>, jule::Ptr<_1a686d497_BuiltinOutlnCallExprModel>);
inline void _1a85cdd71_panic_call(jule::Ptr<_1a85c6a06_ExprCoder>, jule::Ptr<_1a686da5d_BuiltinPanicCallExprModel>);
inline void _1a85ce0e6_assert_call(jule::Ptr<_1a85c6a06_ExprCoder>, jule::Ptr<_1a686dc4a_BuiltinAssertCallExprModel>);
inline void _1a85ce36b_error_call(jule::Ptr<_1a85c6a06_ExprCoder>, jule::Ptr<_1a686e4ed_BuiltinErrorCallExprModel>);
inline void _1a85ce5e1_copy_call(jule::Ptr<_1a85c6a06_ExprCoder>, jule::Ptr<_1a686e311_BuiltinCopyCallExprModel>);
inline void _1a85ce866_make_call_slice(jule::Ptr<_1a85c6a06_ExprCoder>, jule::Ptr<_1a686de37_BuiltinMakeCallExprModel>&);
inline void _1a85ceadb_make_call_str(jule::Ptr<_1a85c6a06_ExprCoder>, jule::Ptr<_1a686de37_BuiltinMakeCallExprModel>&);
inline void _1a85ced61_make_call(jule::Ptr<_1a85c6a06_ExprCoder>, jule::Ptr<_1a686de37_BuiltinMakeCallExprModel>);
inline void _1a85d00d6_push_to_slice(jule::Ptr<_1a85c6a06_ExprCoder>, jule::Ptr<_1a55c2263_PushToSliceExprModel>);
inline void _1a85d035b_append_call(jule::Ptr<_1a85c6a06_ExprCoder>, jule::Ptr<_1a686e124_BuiltinAppendCallExprModel>);
inline void _1a85d05d1_clone_call(jule::Ptr<_1a85c6a06_ExprCoder>, jule::Ptr<_1a686d684_BuiltinCloneCallExprModel>);
inline void _1a85d0856_sizeof(jule::Ptr<_1a85c6a06_ExprCoder>, jule::Ptr<_1a686c3ec_SizeofExprModel>);
inline void _1a85d0acb_alignof(jule::Ptr<_1a85c6a06_ExprCoder>, jule::Ptr<_1a686eb5d_AlignofExprModel>);
inline jule::Str _1a85d0dd9_rune_lit(jule::Ptr<_1a85c6a06_ExprCoder>, jule::Ptr<_1a686ed4a_RuneExprModel>);
inline void _1a85d115e_structure_static(jule::Ptr<_1a85c6a06_ExprCoder>, jule::Ptr<_1a686c81a_StructStaticIdentExprModel>);
inline void _1a85d13d4_integrated_to_str(jule::Ptr<_1a85c6a06_ExprCoder>, jule::Ptr<_1a6870037_IntegratedToStrExprModel>);
inline void _1a85d1659_backend_emit(jule::Ptr<_1a85c6a06_ExprCoder>, jule::Ptr<_1a6870224_BackendEmitExprModel>);
inline void _1a85d18ce_free(jule::Ptr<_1a85c6a06_ExprCoder>, jule::Ptr<_1a6870411_FreeExprModel>);
inline void _1a85d1b54_mut_slicing(jule::Ptr<_1a85c6a06_ExprCoder>, jule::Ptr<_1a65b8764_MutSlicingExprModel>);
inline void _1a85d1dc9_str_insert_begin(jule::Ptr<_1a85c6a06_ExprCoder>, jule::Ptr<_1a534733a_StrInsertBeginExprModel>);
inline void _1a85d214e_model(jule::Ptr<_1a85c6a06_ExprCoder>, jule::Any);
inline void _1a85d23c4_expr(jule::Ptr<_1a85c6a06_ExprCoder>, jule::Any);
inline void _1a85d2649_val(jule::Ptr<_1a85c6a06_ExprCoder>, jule::Ptr<_1a76eee2c_Value>);
inline void _1a85d28be_init_expr(jule::Ptr<_1a85c6a06_ExprCoder>, jule::Ptr<_1a77278d3_TypeKind>);
struct _1a85c6a06_ExprCoder {
	jule::Ptr<_1a8615281_ObjectCoder> _field_oc = jule::Ptr<_1a8615281_ObjectCoder>();
	

	_1a85c6a06_ExprCoder(void) = default;

	inline bool operator==(_1a85c6a06_ExprCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1a85c6a06_ExprCoder _other) { return !this->operator==(_other); }


};
inline jule::Str static__1a85d4e54_clone_func_decl(jule::Ptr<_1a6826829_Struct>&);
inline jule::Str static__1a85d51eb_clone_func_def(jule::Ptr<_1a6826829_Struct>&);
struct _1a85d4b02_DeriveCoder {
	

	_1a85d4b02_DeriveCoder(void) = default;

	inline bool operator==(_1a85d4b02_DeriveCoder _other) { return true; }

	inline bool operator!=(_1a85d4b02_DeriveCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a85d61ca_TestCoder> static__1a85d664d_new(jule::Ptr<_1a8615281_ObjectCoder>&);
inline jule::Ptr<_1a7685038_ImportInfo> _1a85d68b2_find_testing_package(jule::Ptr<_1a85d61ca_TestCoder>);
inline void _1a85d6b37_append_test(jule::Ptr<_1a85d61ca_TestCoder>, jule::Ptr<_1a6872c93_FnIns>);
inline void _1a85d6dac_append_package_tests(jule::Ptr<_1a85d61ca_TestCoder>, jule::Ptr<_1a7687bea_Package>&);
inline jule::Bool _1a85d7121_ready_testing_package(jule::Ptr<_1a85d61ca_TestCoder>);
inline void _1a85d72ec_call_tm_reset(jule::Ptr<_1a85d61ca_TestCoder>);
inline void _1a85d74c8_call_tm_failed(jule::Ptr<_1a85d61ca_TestCoder>);
inline void _1a85d76a4_call_tm_skipped(jule::Ptr<_1a85d61ca_TestCoder>);
inline void _1a85d7880_serialize(jule::Ptr<_1a85d61ca_TestCoder>);
struct _1a85d61ca_TestCoder {
	jule::Ptr<_1a6836a48_StructIns> _field_t = jule::Ptr<_1a6836a48_StructIns>();
	jule::Ptr<_1a68709c7_Fn> _field_tm_reset = jule::Ptr<_1a68709c7_Fn>();
	jule::Ptr<_1a68709c7_Fn> _field_tm_failed = jule::Ptr<_1a68709c7_Fn>();
	jule::Ptr<_1a68709c7_Fn> _field_tm_skipped = jule::Ptr<_1a68709c7_Fn>();
	jule::Ptr<_1a8615281_ObjectCoder> _field_oc = jule::Ptr<_1a8615281_ObjectCoder>();
	

	_1a85d61ca_TestCoder(void) = default;

	inline bool operator==(_1a85d61ca_TestCoder _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_tm_reset == _other._field_tm_reset &&
			this->_field_tm_failed == _other._field_tm_failed &&
			this->_field_tm_skipped == _other._field_tm_skipped &&
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1a85d61ca_TestCoder _other) { return !this->operator==(_other); }


};
inline jule::Str static__1a85d8e58_to_out(jule::Str&, jule::Uintptr);
inline jule::Str static__1a85d9343_to_local(jule::I64, jule::I64, jule::Str&);
inline jule::Str static__1a85d95da_func(jule::Ptr<_1a68709c7_Fn>&);
inline jule::Str static__1a85d9882_func_ins(jule::Ptr<_1a6872c93_FnIns>&);
inline jule::Str static__1a85d9b29_trait_decl(jule::Ptr<_1a68d46b7_Trait>);
inline jule::Str static__1a85d9dc1_param(jule::Ptr<_1a68707da_Param>&);
inline jule::Str static__1a85da168_structure(jule::Ptr<_1a6826829_Struct>&);
inline jule::Str static__1a85da410_structure_ins(jule::Ptr<_1a6836a48_StructIns>&);
inline jule::Str static__1a85da6a7_field(jule::Ptr<_1a6844a23_Field>&);
inline jule::Str static__1a85da94e_var(jule::Ptr<_1a76a7720_Var>);
inline jule::Str static__1a85dabe6_iter_begin(jule::Uintptr);
inline jule::Str static__1a85dae8d_iter_end(jule::Uintptr);
inline jule::Str static__1a85db235_iter_next(jule::Uintptr);
inline jule::Str static__1a85db4cc_label(jule::Str&);
inline jule::Str static__1a85db774_match_end(jule::Uintptr);
inline jule::Str static__1a85dba1b_case_begin(jule::Uintptr);
struct _1a85d894c_IdentCoder {
	

	_1a85d894c_IdentCoder(void) = default;

	inline bool operator==(_1a85d894c_IdentCoder _other) { return true; }

	inline bool operator!=(_1a85d894c_IdentCoder _other) { return !this->operator==(_other); }


};
struct _1a8621743_SerializationInfo {
	jule::Str _field_compiler = jule::Str();
	jule::Str _field_compiler_command = jule::Str();
	

	_1a8621743_SerializationInfo(void) = default;

	inline bool operator==(_1a8621743_SerializationInfo _other) {
		return 
			this->_field_compiler == _other._field_compiler &&
			this->_field_compiler_command == _other._field_compiler_command;
	}

	inline bool operator!=(_1a8621743_SerializationInfo _other) { return !this->operator==(_other); }


};
struct _1a8615094_TraitHash {
	jule::Ptr<_1a68d46b7_Trait> _field_t = jule::Ptr<_1a68d46b7_Trait>();
	jule::Ptr<_1a6836a48_StructIns> _field_s = jule::Ptr<_1a6836a48_StructIns>();
	jule::I64 _field_i = jule::I64();
	

	_1a8615094_TraitHash(void) = default;

	inline bool operator==(_1a8615094_TraitHash _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_s == _other._field_s &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1a8615094_TraitHash _other) { return !this->operator==(_other); }


};
inline jule::Str _1a8658ba9_to_str(_1a86588bd_CustomType*);
inline jule::Bool _1a8658eb7_equals(jule::Ptr<_1a86588bd_CustomType>, jule::Ptr<_1a77278d3_TypeKind>);
struct _1a86588bd_CustomType {
	jule::Str _field_kind = jule::Str();
	

	_1a86588bd_CustomType(void) = default;

	inline bool operator==(_1a86588bd_CustomType _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1a86588bd_CustomType _other) { return !this->operator==(_other); }


};
inline jule::Str static__1a8659704_to_type(jule::Str);
inline jule::Str static__1a865999b_prim(jule::Ptr<_1a772c135_Prim>);
inline jule::Str static__1a8659c43_tuple(jule::Ptr<_1a7731a96_Tuple>);
inline jule::Str static__1a8659eda_as_sptr(jule::Str);
inline jule::Str static__1a865a282_as_ptr(jule::Str);
inline jule::Str static__1a865a529_sptr(jule::Ptr<_1a7730644_Sptr>);
inline jule::Str static__1a865a7c1_ptr(jule::Ptr<_1a7733ba8_Ptr>);
inline jule::Str static__1a865aa68_enum_decl(jule::Ptr<_1a6982435_Enum>);
inline jule::Str static__1a865ad10_as_slice(jule::Ptr<_1a77278d3_TypeKind>);
inline jule::Str static__1a865b0a7_slice(jule::Ptr<_1a77310a1_Slc>);
inline jule::Str static__1a865b34e_map(jule::Ptr<_1a7732657_Map>);
inline jule::Str static__1a865b5e6_trait_ident(jule::Str);
inline jule::Str static__1a865b88d_trait_decl(jule::Ptr<_1a68d46b7_Trait>);
inline jule::Str static__1a865bb35_structure(jule::Ptr<_1a6826829_Struct>);
inline jule::Str static__1a865bdcc_structure_ins(jule::Ptr<_1a6836a48_StructIns>);
inline jule::Str static__1a865c174_array(jule::Ptr<_1a773324b_Arr>);
inline jule::Str static__1a865c6b3_param_ins(jule::Ptr<_1a6871e07_ParamIns>&);
inline jule::Str static__1a865cc02_func_ins_result(jule::Ptr<_1a6872c93_FnIns>&);
inline jule::Str static__1a865ce99_anon_func(jule::Ptr<_1a6872c93_FnIns>);
inline jule::Str static__1a865d241_func(jule::Ptr<_1a6872c93_FnIns>);
inline jule::Str static__1a865d4d8_kind(jule::Ptr<_1a77278d3_TypeKind>);
struct _1a86591d7_TypeCoder {
	

	_1a86591d7_TypeCoder(void) = default;

	inline bool operator==(_1a86591d7_TypeCoder _other) { return true; }

	inline bool operator!=(_1a86591d7_TypeCoder _other) { return !this->operator==(_other); }


};
inline jule::Str _1aad0e318_name(_1aad0e02c_Flag*);
inline jule::Str _1aad0e45b_what(_1aad0e02c_Flag*);
inline void _1aad0e59e_reset(_1aad0e02c_Flag*);
inline jule::I32 _1aad0e6e2_short(_1aad0e02c_Flag*);
struct _1aad0e02c_Flag {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::I64 _field__default = jule::I64();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::I64> _field__data = jule::Ptr<jule::I64>();
	

	_1aad0e02c_Flag(void) = default;

	inline bool operator==(_1aad0e02c_Flag _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_1aad0e02c_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1aad1211d_name(_1aad12a8b_Flag*);
inline jule::Str _1aad12717_what(_1aad12a8b_Flag*);
inline void _1aad12d55_reset(_1aad12a8b_Flag*);
inline jule::I32 _1aad12e87_short(_1aad12a8b_Flag*);
struct _1aad12a8b_Flag {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::U64 _field__default = jule::U64();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::U64> _field__data = jule::Ptr<jule::U64>();
	

	_1aad12a8b_Flag(void) = default;

	inline bool operator==(_1aad12a8b_Flag _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_1aad12a8b_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1aad156c6_name(_1aad16144_Flag*);
inline jule::Str _1aad15cc0_what(_1aad16144_Flag*);
inline void _1aad1640d_reset(_1aad16144_Flag*);
inline jule::I32 _1aad16540_short(_1aad16144_Flag*);
struct _1aad16144_Flag {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::F64 _field__default = jule::F64();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::F64> _field__data = jule::Ptr<jule::F64>();
	

	_1aad16144_Flag(void) = default;

	inline bool operator==(_1aad16144_Flag _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_1aad16144_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1aad18cc3_name(_1aad19741_Flag*);
inline jule::Str _1aad193bc_what(_1aad19741_Flag*);
inline void _1aad19a0a_reset(_1aad19741_Flag*);
inline jule::I32 _1aad19b3c_short(_1aad19741_Flag*);
struct _1aad19741_Flag {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::Bool _field__default = jule::Bool();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::Bool> _field__data = jule::Ptr<jule::Bool>();
	

	_1aad19741_Flag(void) = default;

	inline bool operator==(_1aad19741_Flag _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_1aad19741_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1aad1c37b_name(_1aad1cce9_Flag*);
inline jule::Str _1aad1c975_what(_1aad1cce9_Flag*);
inline void _1aad1d0b3_reset(_1aad1cce9_Flag*);
inline jule::I32 _1aad1d1e5_short(_1aad1cce9_Flag*);
struct _1aad1cce9_Flag {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::Str _field__default = jule::Str();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::Str> _field__data = jule::Ptr<jule::Str>();
	

	_1aad1cce9_Flag(void) = default;

	inline bool operator==(_1aad1cce9_Flag _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_1aad1cce9_Flag _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a8690680_FlagSet> static__1a869096b_new(void);
inline jule::Trait<_1a8588039_CommonFlag> _1a8690e33_find_flag(_1a8690680_FlagSet*, jule::Str);
inline jule::Trait<_1a8588039_CommonFlag> _1a8691241_find_flag_short(_1a8690680_FlagSet*, jule::I32);
inline jule::Slice<jule::Trait<_1a8588039_CommonFlag>> _1a86914a5_flags(_1a8690680_FlagSet*);
inline jule::Exceptional<jule::Slice<jule::Str>> _1a86917b3_parse(_1a8690680_FlagSet*, jule::Slice<jule::Str>);
inline void _1a869198e_reset(_1a8690680_FlagSet*);
inline jule::Ptr<_1aad1cce9_Flag> _1aad95107_add_flag_common(_1a8690680_FlagSet*, jule::Str, jule::I32, jule::Str);
inline jule::Ptr<_1aad19741_Flag> _1aad9e2ba_add_flag_common(_1a8690680_FlagSet*, jule::Str, jule::I32, jule::Str);
inline void _1aad92962_add_var(_1a8690680_FlagSet*, jule::Ptr<jule::Str>, jule::Str, jule::I32, jule::Str);
inline void _1aad9bb58_add_var(_1a8690680_FlagSet*, jule::Ptr<jule::Bool>, jule::Str, jule::I32, jule::Str);
struct _1a8690680_FlagSet {
	jule::Slice<jule::Trait<_1a8588039_CommonFlag>> _field__flags = jule::Slice<jule::Trait<_1a8588039_CommonFlag>>();
	

	_1a8690680_FlagSet(void) = default;

	inline bool operator==(_1a8690680_FlagSet _other) {
		return 
			this->_field__flags == _other._field__flags;
	}

	inline bool operator!=(_1a8690680_FlagSet _other) { return !this->operator==(_other); }


};
inline std::tuple<jule::Ptr<_1d5090729_IR>,jule::Slice<_1a43349cc_Log>> static__1a7d2d978_build(jule::Str, jule::I64);
inline void _1a7d81e71_append_structs(_1d5090729_IR*, jule::Ptr<_1a7687bea_Package>&, jule::Slice<jule::Ptr<_1a6826829_Struct>>&);
inline jule::Slice<jule::Ptr<_1a6826829_Struct>> _1d5113703_get_all_structures(_1d5090729_IR*);
inline void _1a7d83060_append_globals(_1d5090729_IR*, jule::Ptr<_1a7687bea_Package>&, jule::Slice<jule::Ptr<_1a76a7720_Var>>&);
inline jule::Slice<jule::Ptr<_1a76a7720_Var>> _1d5180000_get_all_globals(_1d5090729_IR*);
inline void _1d519670e_order(_1d5090729_IR*);
struct _1d5090729_IR {
	jule::Str _field_root = jule::Str();
	jule::Slice<jule::Str> _field_passes = jule::Slice<jule::Str>();
	jule::Ptr<_1a7687bea_Package> _field_main = jule::Ptr<_1a7687bea_Package>();
	jule::Slice<jule::Ptr<_1a7685038_ImportInfo>> _field_used = jule::Slice<jule::Ptr<_1a7685038_ImportInfo>>();
	_1a7dbbcd0_OrderedDefines _field_ordered = _1a7dbbcd0_OrderedDefines();
	

	_1d5090729_IR(void) = default;

	inline bool operator==(_1d5090729_IR _other) {
		return 
			this->_field_root == _other._field_root &&
			this->_field_passes == _other._field_passes &&
			this->_field_main == _other._field_main &&
			this->_field_used == _other._field_used &&
			this->_field_ordered == _other._field_ordered;
	}

	inline bool operator!=(_1d5090729_IR _other) { return !this->operator==(_other); }


};
inline jule::Str _1a683ac7d_to_str(_1a6836a48_StructIns*);
inline jule::Bool _1a682a641_equals(jule::Ptr<_1a6836a48_StructIns>, jule::Ptr<_1a77278d3_TypeKind>);
inline jule::Bool _1a68459ad_same(_1a6836a48_StructIns*, jule::Ptr<_1a6836a48_StructIns>);
inline jule::Ptr<_1a68709c7_Fn> _1a6846bbd_find_method(_1a6836a48_StructIns*, jule::Str, jule::Bool);
inline jule::Ptr<_1a6830899_FieldIns> _1a6832ea6_find_field(_1a6836a48_StructIns*, jule::Str);
struct _1a6836a48_StructIns {
	jule::Bool _field_checked = jule::Bool();
	jule::Ptr<_1a6826829_Struct> _field_decl = jule::Ptr<_1a6826829_Struct>();
	jule::Slice<jule::Ptr<_1a77278d3_TypeKind>> _field_generics = jule::Slice<jule::Ptr<_1a77278d3_TypeKind>>();
	jule::Slice<jule::Ptr<_1a6830899_FieldIns>> _field_fields = jule::Slice<jule::Ptr<_1a6830899_FieldIns>>();
	jule::Slice<jule::Ptr<_1a68709c7_Fn>> _field_methods = jule::Slice<jule::Ptr<_1a68709c7_Fn>>();
	jule::Bool _field_mutable = jule::Bool();
	jule::Ptr<_1a6875988_ReferenceStack> _field_refers = jule::Ptr<_1a6875988_ReferenceStack>();
	_1a683aed1_Operators _field_operators = _1a683aed1_Operators();
	

	_1a6836a48_StructIns(void) = default;

	inline bool operator==(_1a6836a48_StructIns _other) {
		return 
			this->_field_checked == _other._field_checked &&
			this->_field_decl == _other._field_decl &&
			this->_field_generics == _other._field_generics &&
			this->_field_fields == _other._field_fields &&
			this->_field_methods == _other._field_methods &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_refers == _other._field_refers &&
			this->_field_operators == _other._field_operators;
	}

	inline bool operator!=(_1a6836a48_StructIns _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a7ed11d0_ObjectDeadCode> static__1a7ed1631_new(jule::Ptr<_1d5090729_IR>&);
inline jule::Bool _1aa7c3728_is_live(jule::Ptr<_1a7ed11d0_ObjectDeadCode>, jule::Ptr<_1a6872c93_FnIns>&);
inline jule::Bool _1aa7c8277_is_live(jule::Ptr<_1a7ed11d0_ObjectDeadCode>, jule::Ptr<_1a6836a48_StructIns>&);
inline jule::Bool _1aa7d05e2_is_live(jule::Ptr<_1a7ed11d0_ObjectDeadCode>, jule::Ptr<_1a76a7720_Var>&);
inline void _1aa7c64a6_push_live(jule::Ptr<_1a7ed11d0_ObjectDeadCode>, jule::Ptr<_1a6836a48_StructIns>);
inline void _1aa7cbe18_push_live(jule::Ptr<_1a7ed11d0_ObjectDeadCode>, jule::Ptr<_1a6872c93_FnIns>);
inline void _1aa7d15c1_push_live(jule::Ptr<_1a7ed11d0_ObjectDeadCode>, jule::Ptr<_1a76a7720_Var>);
inline void _1a8012783_set_references_as_live(jule::Ptr<_1a7ed11d0_ObjectDeadCode>, jule::Ptr<_1a6875988_ReferenceStack>&);
inline void _1a8012a08_inits(jule::Ptr<_1a7ed11d0_ObjectDeadCode>, jule::Ptr<_1a7687bea_Package>&);
inline void _1a8012bd4_collect_live(jule::Ptr<_1a7ed11d0_ObjectDeadCode>);
inline void _1a8012e59_remove_dead_globals(jule::Ptr<_1a7ed11d0_ObjectDeadCode>, jule::Slice<jule::Ptr<_1a76a7720_Var>>&);
inline void _1a80131ce_remove_dead_fns(jule::Ptr<_1a7ed11d0_ObjectDeadCode>, jule::Slice<jule::Ptr<_1a68709c7_Fn>>&);
inline void _1a8013454_remove_dead_structs(jule::Ptr<_1a7ed11d0_ObjectDeadCode>, jule::Slice<jule::Ptr<_1a6826829_Struct>>&);
inline void _1a80136c9_remove_deads_file(jule::Ptr<_1a7ed11d0_ObjectDeadCode>, jule::Ptr<_1a76e8e26_SymbolTable>&);
inline void _1a801394e_remove_deads_package(jule::Ptr<_1a7ed11d0_ObjectDeadCode>, jule::Ptr<_1a7687bea_Package>&);
inline void _1a8013b2a_remove_deads(jule::Ptr<_1a7ed11d0_ObjectDeadCode>);
inline void _1a8013d06_elimanate(jule::Ptr<_1a7ed11d0_ObjectDeadCode>);
struct _1a7ed11d0_ObjectDeadCode {
	_1a7ed0a1a_LiveTable _field_live = _1a7ed0a1a_LiveTable();
	jule::Ptr<_1d5090729_IR> _field_ir = jule::Ptr<_1d5090729_IR>();
	

	_1a7ed11d0_ObjectDeadCode(void) = default;

	inline bool operator==(_1a7ed11d0_ObjectDeadCode _other) {
		return 
			this->_field_live == _other._field_live &&
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_1a7ed11d0_ObjectDeadCode _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a8615281_ObjectCoder> static__1a863637e_new(jule::Ptr<_1d5090729_IR>&, _1a8621743_SerializationInfo);
inline void _1a861e169_write(jule::Ptr<_1a8615281_ObjectCoder>, jule::Str);
inline void _1a861e90b_add_indent(jule::Ptr<_1a8615281_ObjectCoder>);
inline void _1a86200e3_done_indent(jule::Ptr<_1a8615281_ObjectCoder>);
inline void _1a862080d_indent(jule::Ptr<_1a8615281_ObjectCoder>);
inline jule::I64 _1a8621028_find_type_offset(_1a8615281_ObjectCoder*, jule::Ptr<_1a68d46b7_Trait>, jule::Ptr<_1a77278d3_TypeKind>);
inline void _1a8622568_loc_info(jule::Ptr<_1a8615281_ObjectCoder>, jule::Ptr<_1a527737a_Token>&);
inline void _1a862239d_head(jule::Ptr<_1a8615281_ObjectCoder>);
inline void _1a8617041_links(jule::Ptr<_1a8615281_ObjectCoder>);
inline void _1a8637b55_prepare_structures(jule::Ptr<_1a8615281_ObjectCoder>);
inline void _1a86532ad_iter_packages(jule::Ptr<_1a8615281_ObjectCoder>, jule::Fn<void(jule::Ptr<_1a7687bea_Package>&)>);
inline void _1a86533e0_build_trait_map(jule::Ptr<_1a8615281_ObjectCoder>);
inline void _1a8653522_trait_decls(jule::Ptr<_1a8615281_ObjectCoder>);
inline void _1a8653654_structure_plain_decl(jule::Ptr<_1a8615281_ObjectCoder>, jule::Ptr<_1a6826829_Struct>&);
inline void _1a8653786_structure_plain_decls(jule::Ptr<_1a8615281_ObjectCoder>);
inline void _1a86538b8_field_decl(jule::Ptr<_1a8615281_ObjectCoder>, jule::Ptr<_1a6830899_FieldIns>&);
inline void _1a86539ea_structure_destructor(jule::Ptr<_1a8615281_ObjectCoder>, jule::Ptr<_1a6836a48_StructIns>&);
inline void _1a8653b2c_structure_derive_defs_decls(jule::Ptr<_1a8615281_ObjectCoder>, jule::Ptr<_1a6836a48_StructIns>&);
inline void _1a8653c5e_structure_operator_eq(jule::Ptr<_1a8615281_ObjectCoder>, jule::Str&, jule::Ptr<_1a6836a48_StructIns>&);
inline void _1a8653d91_structure_operator_not_eq(jule::Ptr<_1a8615281_ObjectCoder>, jule::Str&, jule::Ptr<_1a6836a48_StructIns>&);
inline void _1a8653ec3_structure_operator(jule::Ptr<_1a8615281_ObjectCoder>, jule::Str&, jule::Ptr<_1a6872c93_FnIns>&, jule::Str);
inline void _1a8654105_structure_operators(jule::Ptr<_1a8615281_ObjectCoder>, jule::Ptr<_1a6836a48_StructIns>&);
inline void _1a8654237_structure_ins_decl(jule::Ptr<_1a8615281_ObjectCoder>, jule::Ptr<_1a6836a48_StructIns>&);
inline void _1a8654369_structure_decl(jule::Ptr<_1a8615281_ObjectCoder>, jule::Ptr<_1a6826829_Struct>&);
inline void _1a865449b_structure_decls(jule::Ptr<_1a8615281_ObjectCoder>);
inline void _1a86545cd_params_decls(jule::Ptr<_1a8615281_ObjectCoder>, jule::Slice<jule::Ptr<_1a6871e07_ParamIns>>&);
inline void _1a8654710_func_head(jule::Ptr<_1a8615281_ObjectCoder>, jule::Ptr<_1a6872c93_FnIns>&, jule::Bool);
inline void _1a8654842_func_decl(jule::Ptr<_1a8615281_ObjectCoder>, jule::Ptr<_1a68709c7_Fn>&, jule::Bool);
inline void _1a8654974_func_decls(jule::Ptr<_1a8615281_ObjectCoder>);
inline void _1a8654aa6_trait_data_types(jule::Ptr<_1a8615281_ObjectCoder>);
inline void _1a8654bd8_param_ins(jule::Ptr<_1a8615281_ObjectCoder>, jule::Ptr<_1a6871e07_ParamIns>&);
inline void _1a8654d1a_params_ins(jule::Ptr<_1a8615281_ObjectCoder>, jule::Slice<jule::Ptr<_1a6871e07_ParamIns>>&);
inline void _1a8654e4c_var_init_expr(jule::Ptr<_1a8615281_ObjectCoder>, jule::Ptr<_1a76a7720_Var>&, jule::Fn<void(void)>);
inline void _1a865507e_var(jule::Ptr<_1a8615281_ObjectCoder>, jule::Ptr<_1a76a7720_Var>);
inline void _1a86551b1_func(jule::Ptr<_1a8615281_ObjectCoder>, jule::Ptr<_1a68709c7_Fn>&);
inline void _1a86552e3_trait_wrappers(jule::Ptr<_1a8615281_ObjectCoder>);
inline void _1a8655425_trait_datas(jule::Ptr<_1a8615281_ObjectCoder>);
inline void _1a8655557_globals(jule::Ptr<_1a8615281_ObjectCoder>);
inline void _1a8655689_decls(jule::Ptr<_1a8615281_ObjectCoder>);
inline void _1a86557bb_structure_methods(jule::Ptr<_1a8615281_ObjectCoder>, jule::Ptr<_1a6836a48_StructIns>&);
inline void _1a86559ec_structure_derive_defs(jule::Ptr<_1a8615281_ObjectCoder>, jule::Ptr<_1a6836a48_StructIns>&);
inline void _1a8655c72_structure_ostream(jule::Ptr<_1a8615281_ObjectCoder>, jule::Ptr<_1a6836a48_StructIns>&);
inline void _1a8655ee7_structure_ins(jule::Ptr<_1a8615281_ObjectCoder>, jule::Ptr<_1a6836a48_StructIns>&);
inline void _1a865626c_structure(jule::Ptr<_1a8615281_ObjectCoder>, jule::Ptr<_1a6826829_Struct>&);
inline void _1a8656448_structures(jule::Ptr<_1a8615281_ObjectCoder>);
inline void _1a8656624_funcs(jule::Ptr<_1a8615281_ObjectCoder>);
inline void _1a8656899_push_init(jule::Ptr<_1a8615281_ObjectCoder>, jule::Ptr<_1a7687bea_Package>&);
inline void _1a8656a75_init_caller(jule::Ptr<_1a8615281_ObjectCoder>);
inline void _1a8656c51_end(jule::Ptr<_1a8615281_ObjectCoder>);
inline void _1a8656e2c_serialize_head(jule::Ptr<_1a8615281_ObjectCoder>);
inline void _1a8657108_serialize(jule::Ptr<_1a8615281_ObjectCoder>);
struct _1a8615281_ObjectCoder {
	jule::Str _field_obj = jule::Str();
	jule::Ptr<_1d5090729_IR> _field_ir = jule::Ptr<_1d5090729_IR>();
	_1a8621743_SerializationInfo _field_info = _1a8621743_SerializationInfo();
	jule::Slice<jule::Ptr<_1a8615094_TraitHash>> _field_tmap = jule::Slice<jule::Ptr<_1a8615094_TraitHash>>();
	jule::Str _field_indent_buffer = jule::Str();
	jule::Ptr<_1a85c6a06_ExprCoder> _field_ec = jule::Ptr<_1a85c6a06_ExprCoder>();
	jule::Ptr<_1a85be05e_ScopeCoder> _field_sc = jule::Ptr<_1a85be05e_ScopeCoder>();
	

	_1a8615281_ObjectCoder(void) = default;

	inline bool operator==(_1a8615281_ObjectCoder _other) {
		return 
			this->_field_obj == _other._field_obj &&
			this->_field_ir == _other._field_ir &&
			this->_field_info == _other._field_info &&
			this->_field_tmap == _other._field_tmap &&
			this->_field_indent_buffer == _other._field_indent_buffer &&
			this->_field_ec == _other._field_ec &&
			this->_field_sc == _other._field_sc;
	}

	inline bool operator!=(_1a8615281_ObjectCoder _other) { return !this->operator==(_other); }


};
inline std::tuple<jule::I64,jule::Bool> _1aad2e7bc_parse_integer(_1a8692d8b_ArgParser*, jule::Str&, jule::Fn<std::tuple<jule::I64,jule::Bool>(jule::Str,jule::I64)>);
inline std::tuple<jule::U64,jule::Bool> _1aad38100_parse_integer(_1a8692d8b_ArgParser*, jule::Str&, jule::Fn<std::tuple<jule::U64,jule::Bool>(jule::Str,jule::I64)>);
inline jule::Str _1a8693650_get_data(_1a8692d8b_ArgParser*);
inline jule::VoidExceptional _1a86938c5_process_flag(_1a8692d8b_ArgParser*, jule::Trait<_1a8588039_CommonFlag>&);
inline jule::VoidExceptional _1a8693b4a_single_dash(_1a8692d8b_ArgParser*, jule::Str&);
inline jule::VoidExceptional _1a8693dc0_double_dash(_1a8692d8b_ArgParser*, jule::Str&);
inline jule::VoidExceptional _1a869409b_try_arg(_1a8692d8b_ArgParser*);
inline jule::VoidExceptional _1a8694277_parse(_1a8692d8b_ArgParser*);
struct _1a8692d8b_ArgParser {
	_1a8690680_FlagSet _field_set = _1a8690680_FlagSet();
	jule::Slice<jule::Str> _field_args = jule::Slice<jule::Str>();
	jule::Slice<jule::Str> _field_content = jule::Slice<jule::Str>();
	jule::I64 _field_i = jule::I64();
	

	_1a8692d8b_ArgParser(void) = default;

	inline bool operator==(_1a8692d8b_ArgParser _other) {
		return 
			this->_field_set == _other._field_set &&
			this->_field_args == _other._field_args &&
			this->_field_content == _other._field_content &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1a8692d8b_ArgParser _other) { return !this->operator==(_other); }


};
inline void _1d4e50b8e_free(void*);
inline jule::Str _1d4e7084b_byte_ptr_to_str(jule::U8*);
inline jule::I64 _1d4e264a0_get_last_errno(void);
inline jule::I64 _1d4e7ae83_stat(jule::U8*, struct stat*);
inline jule::I64 _1d4e7b0b5_open(jule::U8*, jule::I64, jule::I64);
inline jule::U8* _1d4e7b1e7_getcwd(jule::U8*, jule::U64);
inline DIR* _1d4e7b329_opendir(jule::U8*);
inline struct dirent* _1d4e7b45b_readdir(DIR*);
inline jule::I64 _1d4e7b7be_closedir(DIR*);
inline jule::I64 _1d4e7bb65_mkdir(jule::U8*, jule::I64);
inline jule::I64 _1d4e7bc97_rmdir(jule::U8*);
inline jule::I64 _1d4e7bdc9_unlink(jule::U8*);
inline jule::I64 _1d4e7db12_seek(jule::I64, jule::I64, jule::I64);
inline jule::I64 _1d4e7deec_read(jule::I64, void*, jule::U64);
inline jule::I64 _1d4e7e32c_close(jule::I64);
inline jule::I64 _1d4e7e717_write(jule::I64, void*, jule::U64);
inline void _1d4e7e926_exit(jule::I64);
inline jule::I64 _1d502b93a_get_last_os_error(void);
inline jule::Slice<jule::Str> _1d504d6b5_args(void);
inline jule::Exceptional<jule::Str> _1d504db05_working_dir(void);
inline jule::Exceptional<jule::Str> _1d504e4b8___getwd(void);
inline jule::Slice<jule::U8> _1d5248a25_stobs(jule::Str&);
inline jule::Bool _1a4171550_is_letter(jule::I32);
inline jule::Bool _1a41c99b5_is16(jule::Slice<_1a41c7d7b_Range16>, jule::U16);
inline jule::Bool _1a41c9d06_is32(jule::Slice<_1a41c8343_Range32>, jule::U32);
inline jule::Bool _1a41ca521_is_excluding_latin(jule::Ptr<_1a41c87b6_RangeTable>, jule::I32);
inline std::tuple<jule::I32,jule::I64> _1a4291670_decode_rune(jule::Slice<jule::U8>);
inline std::tuple<jule::I32,jule::I64> _1a4291c03_decode_last_rune(jule::Slice<jule::U8>);
inline jule::Slice<jule::U8> _1a429295c_append_rune(jule::Slice<jule::U8>, jule::I32);
inline jule::Slice<jule::U8> _1a4292c9d_append_rune_non_ascii(jule::Slice<jule::U8>, jule::I32);
inline jule::I64 _1a42932dc_rune_count_str(jule::Str);
inline jule::Bool _1a4293584_rune_start(jule::U8);
inline jule::Str _1a4222117_repeat(jule::Str, jule::I64);
inline jule::Bool _1a4255414__has_prefix(jule::Str&, jule::Str&, jule::I64);
inline jule::Bool _1a4221d2b_has_prefix(jule::Str, jule::Str);
inline jule::Bool _1a4294101__has_suffix(jule::Str&, jule::Str&, jule::I64);
inline jule::Bool _1a4294233_has_suffix(jule::Str, jule::Str);
inline jule::I64 _1a4294365_find_at(jule::Str, jule::Str, jule::I64);
inline jule::I64 _1a42946d9_find_last_at(jule::Str, jule::Str, jule::I64);
inline jule::I64 _1a429481b_find_last(jule::Str, jule::Str);
inline jule::I64 _1a4294e26__find_rune(jule::Slice<jule::U8>&, jule::I32);
inline jule::I64 _1a42953bb_find_last_byte(jule::Str, jule::U8);
inline jule::I64 _1a4295894_find_any(jule::Str, jule::Str);
inline jule::Slice<jule::Str> _1a4295b08_split(jule::Str, jule::Str, jule::I64);
inline jule::Bool _1a4295c3a_contains(jule::Str, jule::Str);
inline jule::Bool _1a429619c_contains_any(jule::Str, jule::Str);
inline jule::Str _1a4296972_replace(jule::Str, jule::Str, jule::Str, jule::I64);
inline void _1a42978b8__trim_left(jule::Slice<jule::U8>&, jule::Slice<jule::U8>&);
inline jule::Str _1a4297b3d_trim_left(jule::Str, jule::Str);
inline void _1a4297de6__trim_right(jule::Slice<jule::U8>&, jule::Slice<jule::U8>&);
inline jule::Str _1a4298578_trim(jule::Str, jule::Str);
inline jule::Str _1a4299e92_clean(jule::Str);
inline jule::Str _1a429a525_from_slash(jule::Str);
inline jule::Str _1a429a811_join(jule::Slice<jule::Str>);
inline jule::Str _1a429aaa8_ext(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _1a429ad50_abs(jule::Str);
inline jule::Str _1a429b0e7_base(jule::Str);
inline jule::Str _1a429b427_dir(jule::Str);
inline jule::Str _1a429b6be_volume_name(jule::Str);
inline jule::Bool _1a429c4e4_is_path_sep(jule::U8);
inline jule::Bool _1a429c7d0_is_abs(jule::Str);
inline jule::I64 _1a429ca77_volume_name_len(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _1a429cd63___abs(jule::Str);
inline jule::Str _1a429d1a4_str_join(jule::Slice<jule::Str>, jule::Str);
inline jule::Str _1a429d44b___join(jule::Slice<jule::Str>);
inline jule::I64 _1d4e243d2_get_last_fs_error(void);
inline jule::I64 _1a43819a2_get_last_process_error(void);
inline jule::Slice<char*> _1a4384a71_str_slice_to_cstr_slice(jule::Slice<jule::Str>);
inline jule::I64 _1a4384e5b_execvp(jule::Str, jule::Slice<jule::Str>);
inline jule::I64 _1a4385346_execve(jule::Str, jule::Slice<jule::Str>, jule::Slice<jule::Str>);
inline void _1a4385eb2_exit(jule::I64);
inline jule::Str _1a43861b0_executable(void);
inline jule::Bool _1a4327e54_is_std_header_path(jule::Str);
inline jule::Bool _1a4328240_is_valid_header_ext(jule::Str);
inline jule::Bool _1a43284d7_is_valid_cpp_ext(jule::Str);
inline jule::Str _1a4334e1c_logf(jule::Str, jule::Slice<jule::Any>);
inline jule::Str _1a4335208_arg_to_str(jule::Any);
inline jule::I64 _1a43354a0_find_next_fmt(jule::Str);
inline jule::Str _1a4335835_apply_fmt(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1a4336825_is_top_directive(jule::Str);
inline jule::Bool _1a4338261_is_windows(jule::Str);
inline jule::Bool _1a433854c_is_darwin(jule::Str);
inline jule::Bool _1a43387e4_is_linux(jule::Str);
inline jule::Bool _1a4338ad0_is_i386(jule::Str);
inline jule::Bool _1a4338d77_is_amd64(jule::Str);
inline jule::Bool _1a433911e_is_arm64(jule::Str);
inline jule::Bool _1a43393b6_is_unix(jule::Str);
inline jule::Bool _1a43396e6_is_32bit(jule::Str);
inline jule::Bool _1a433998d_is_64bit(jule::Str);
inline void _1a4375a2e_init(void);
inline jule::Bool _1a5277ab7_is_unary_op(jule::Str);
inline jule::Bool _1a5277da3_is_bin_op(jule::Str);
inline jule::Bool _1a5278436_is_str(jule::Str);
inline jule::Bool _1a52786cd_is_raw_str(jule::Str);
inline jule::Bool _1a5278975_is_rune(jule::Str);
inline jule::Bool _1a527904c_is_bool(jule::Str);
inline jule::Bool _1a52792e4_is_float(jule::Str);
inline jule::Bool _1a527958b_is_num(jule::Str);
inline jule::Bool _1a5279aca_is_ignore_ident(jule::Str);
inline jule::Bool _1a5279d72_is_anon_ident(jule::Str);
inline jule::Bool _1a527a3b1_is_space(jule::I32);
inline jule::Bool _1a527a779_is_letter(jule::I32);
inline jule::Bool _1a527acb8_is_decimal(jule::U8);
inline jule::Bool _1a527b060_is_binary(jule::U8);
inline jule::Bool _1a527b307_is_octal(jule::U8);
inline jule::Bool _1a527b59e_is_hex(jule::U8);
inline jule::Bool _1a527b846_is_assign(jule::U64);
inline jule::Bool _1a527badd_is_postfix_op(jule::Str);
inline jule::Bool _1a527bd85_is_assign_op(jule::Str);
inline jule::Ptr<_1a527c76a_File> _1a527dc99_new_file_set(jule::Str);
inline _1a43349cc_Log _1a52804c6_make_err(jule::I64, jule::I64, jule::Ptr<_1a527c76a_File>&, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1a528085b_bytes_has_prefix(jule::Slice<jule::U8>&, jule::Str);
inline jule::Str _1a5280b9c_float_fmt_e(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1a5281032_float_fmt_p(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1a5281373_float_fmt_dotnp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1a52816b4_float_fmt_dotfp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1a5281a05_float_fmt_dotp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1a5281dce_float_num(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1a5282176_common_num(jule::Slice<jule::U8>&);
inline jule::Str _1a528241d_binary_num(jule::Slice<jule::U8>&);
inline jule::Bool _1a528275e_is_float_fmt_e(jule::U8, jule::I64);
inline jule::Bool _1a5282aa0_is_float_fmt_p(jule::U8, jule::I64);
inline jule::Bool _1a5282de1_is_float_fmt_dotnp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Bool _1a5283232_is_float_fmt_dotp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Bool _1a5283573_is_float_fmt_dotfp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1a528393b_octal_num(jule::Slice<jule::U8>&);
inline jule::Str _1a5283bd3_hex_num(jule::Slice<jule::U8>&);
inline jule::Str _1a5284024_hex_escape(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1a52842dd_big_unicode_point_escape(jule::Slice<jule::U8>&);
inline jule::Str _1a52845b8_little_unicode_point_escape(jule::Slice<jule::U8>&);
inline jule::Str _1a5284871_hex_byte_escape(jule::Slice<jule::U8>&);
inline jule::Str _1a5284b18_byte_escape(jule::Slice<jule::U8>&);
inline jule::Slice<_1a43349cc_Log> _1a5289612_lex(jule::Ptr<_1a527c76a_File>, jule::I64);
inline jule::I64 _1a7501811_leading_zeros64(jule::U64);
inline jule::I64 _1a75025c0_trailing_zeros(jule::U64);
inline jule::I64 _1a7502e3e_trailing_zeros32(jule::U32);
inline jule::I64 _1a75031d6_trailing_zeros64(jule::U64);
inline jule::I64 _1a750864d_len32(jule::U32);
inline jule::I64 _1a75088e5_len64(jule::U64);
inline std::tuple<jule::U64,jule::U64> _1a75095a5_add64(jule::U64, jule::U64, jule::U64);
inline std::tuple<jule::U64,jule::U64> _1a750ac38_mul64(jule::U64, jule::U64);
inline jule::U32 _1a741e025_f32_bits(jule::F32);
inline jule::F32 _1a741e311_f32_from_bits(jule::U32);
inline jule::U64 _1a741e5a8_f64_bits(jule::F64);
inline jule::F64 _1a741e894_f64_from_bits(jule::U64);
inline std::tuple<jule::F64,jule::I64> _1a7421b71_frexp(jule::F64);
inline jule::F64 _1a7494c6b_nan(void);
inline jule::Bool _1a746d030_is_nan(jule::F64);
inline jule::F64 _1a746ea6a_inf(jule::I64);
inline jule::Bool _1a748033e_is_inf(jule::F64, jule::I64);
inline std::tuple<jule::F64,jule::I64> _1a74a5d9d_normalize(jule::F64);
inline jule::F64 _1a750eb0a_log(jule::F64);
inline jule::F64 _1a75101d2_abs(jule::F64);
inline std::tuple<jule::F64,jule::F64> _1a75128dd_modf(jule::F64);
inline jule::F64 _1a7512e0a_log2(jule::F64);
inline jule::Str _1a6d3c290_fmt_float(jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _1a6d611e8_generic_ftoa(jule::Slice<jule::U8>, jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _1a6d70449_big_ftoa(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _1a72b4cde_FloatInfo&);
inline jule::Slice<jule::U8> _1a6e02dc2_fmt_digits(jule::Slice<jule::U8>, jule::Bool, jule::Bool, _1a6d11bc1_DecimalSlice, jule::I64, jule::U8);
inline void _1a70035dd_round_shortest(_1a753776a_Decimal&, jule::U64, jule::I64, _1a72b4cde_FloatInfo&);
inline jule::Slice<jule::U8> _1a70382c1_fmt_e(jule::Slice<jule::U8>, jule::Bool, _1a6d11bc1_DecimalSlice, jule::I64, jule::U8);
inline jule::Slice<jule::U8> _1a703a081_fmt_f(jule::Slice<jule::U8>, jule::Bool, _1a6d11bc1_DecimalSlice, jule::I64);
inline jule::Slice<jule::U8> _1a706a6aa_fmt_b(jule::Slice<jule::U8>, jule::Bool, jule::U64, jule::I64, _1a72b4cde_FloatInfo&);
inline jule::Slice<jule::U8> _1a70d9d45_fmt_x(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _1a72b4cde_FloatInfo&);
inline jule::I64 _1a71a2bee_min(jule::I64, jule::I64);
inline jule::I64 _1a72b6791_max(jule::I64, jule::I64);
inline jule::U8 _1a7306b99_lower(jule::U8);
inline std::tuple<jule::U64,jule::I64> _1a7403647___parse_uint(jule::Str, jule::I64, jule::I64);
inline jule::Exceptional<jule::U64> _1a6dbe0e1_parse_uint(jule::Str, jule::I64, jule::I64);
inline jule::Exceptional<jule::I64> _1a6e009a2_parse_int(jule::Str, jule::I64, jule::I64);
inline std::tuple<jule::F64,jule::Bool> _1a7306858_eisel_lemire64(jule::U64, jule::I64, jule::Bool);
inline std::tuple<jule::F32,jule::Bool> _1a6e38db4_eisel_lemire32(jule::U64, jule::I64, jule::Bool);
inline jule::I64 _1a7106cc9_common_prefix_len_ignore_case(jule::Str, jule::Str);
inline std::tuple<jule::F64,jule::I64,jule::Bool> _1a71ce9b7_special(jule::Str);
inline std::tuple<jule::U64,jule::I64,jule::Bool,jule::Bool,jule::Bool,jule::I64,jule::Bool> _1a7039921_read_float(jule::Str);
inline std::tuple<jule::F64,jule::Bool> _1a7159777_atof64exact(jule::U64, jule::I64, jule::Bool);
inline std::tuple<jule::F32,jule::Bool> _1a71598a9_atof32exact(jule::U64, jule::I64, jule::Bool);
inline std::tuple<jule::F64,jule::I64> _1a6d0d5d5_atof_hex(jule::Str, _1a72b4cde_FloatInfo&, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline std::tuple<jule::F32,jule::I64,jule::I64> _1a6d0d717_atof32(jule::Str);
inline std::tuple<jule::F64,jule::I64,jule::I64> _1a6d0d849_atof64(jule::Str);
inline std::tuple<jule::F64,jule::I64,jule::I64> _1a7010540_parse_float_prefix(jule::Str, jule::I64);
inline jule::Exceptional<jule::F64> _1a7010672_parse_float(jule::Str, jule::I64);
inline void _1a70e658d_ryu_ftoa_fixed32(_1a6d11bc1_DecimalSlice&, jule::U32, jule::I64, jule::I64);
inline void _1a70e66c0_ryu_ftoa_fixed64(_1a6d11bc1_DecimalSlice&, jule::U64, jule::I64, jule::I64);
inline void _1a70e6802_format_decimal(_1a6d11bc1_DecimalSlice&, jule::U64, jule::Bool, jule::Bool, jule::I64);
inline void _1a75366ae_ryu_ftoa_shortest(_1a6d11bc1_DecimalSlice&, jule::U64, jule::I64, _1a72b4cde_FloatInfo&);
inline jule::I64 _1a75367e1_mul_by_log2_log10(jule::I64);
inline jule::I64 _1a7536923_mul_by_log10_log2(jule::I64);
inline std::tuple<jule::U64,jule::U64,jule::U64,jule::I64> _1a7536a55_compute_bounds(jule::U64, jule::I64, _1a72b4cde_FloatInfo&);
inline void _1a7536b87_ryu_digits(_1a6d11bc1_DecimalSlice&, jule::U64, jule::U64, jule::U64, jule::Bool, jule::Bool);
inline void _1a7536cb9_ryu_digits32(_1a6d11bc1_DecimalSlice&, jule::U32, jule::U32, jule::U32, jule::Bool, jule::Bool, jule::I64);
inline std::tuple<jule::U32,jule::I64,jule::Bool> _1a7536deb_mult64bit_pow10(jule::U32, jule::I64, jule::I64);
inline std::tuple<jule::U64,jule::I64,jule::Bool> _1a753702d_mult128bit_pow10(jule::U64, jule::I64, jule::I64);
inline jule::Bool _1a7537160_divisible_by_pow5(jule::U64, jule::I64);
inline std::tuple<jule::U32,jule::U32> _1a7537292_divmod1e9(jule::U64);
inline void _1a75382c6_trim(_1a753776a_Decimal&);
inline void _1a7538408_right_shift(_1a753776a_Decimal&, jule::U64);
inline jule::Bool _1a753853a_prefix_is_less_than(jule::Array<jule::U8,800>, jule::I64, jule::Str);
inline void _1a753866c_left_shift(_1a753776a_Decimal&, jule::U64);
inline jule::Bool _1a753879e_should_round_up(_1a753776a_Decimal&, jule::I64);
inline jule::Str _1a7538a8a_fmt_uint(jule::U64, jule::I64);
inline jule::Str _1a7538bbc_fmt_int(jule::I64, jule::I64);
inline jule::Str _1a7538cee_itoa(jule::I64);
inline jule::Str _1a7538e31_small(jule::I64);
inline jule::Bool _1a7539063_is_power_of_two(jule::I64);
inline std::tuple<jule::Slice<jule::U8>,jule::Str> _1a7539195_fmt_bits(jule::Slice<jule::U8>, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline void _1a75cb402_lshift_unsig(_1a75c3251_Const&, _1a75c3251_Const&);
inline void _1a75cb6ee_rshift_unsig(_1a75c3251_Const&, _1a75c3251_Const&);
inline jule::Str _1a7661025_real_kind_of(jule::Str);
inline jule::I64 _1a76612bc_bitsize_of(jule::Str);
inline jule::Str _1a76615a8_int_from_bits(jule::I64);
inline jule::Str _1a7661850_uint_from_bits(jule::I64);
inline jule::Str _1a7661ae7_float_from_bits(jule::I64);
inline jule::Bool _1a7662653_check_bit_float(jule::Str, jule::I64);
inline jule::I64 _1a76628ea_bitsize_of_float(jule::F64);
inline jule::I64 _1a7662b92_bitsize_of_int(jule::I64);
inline jule::I64 _1a7662e39_bitsize_of_uint(jule::U64);
inline void _1a766309e_update_target(void);
inline void _1a7663214_init(void);
inline jule::F64 _1a7666646_min(jule::Str);
inline jule::F64 _1a7666932_max(jule::Str);
inline jule::Bool _1a7666d94_is_i8_compatible(jule::Str);
inline jule::Bool _1a7667180_is_i16_compatible(jule::Str);
inline jule::Bool _1a7667427_is_i32_compatible(jule::Str);
inline jule::Bool _1a7667713_is_i64_compatible(jule::Str);
inline jule::Bool _1a76679aa_is_u8_compatible(jule::Str);
inline jule::Bool _1a7667c52_is_u16_compatible(jule::Str);
inline jule::Bool _1a7667ee9_is_u32_compatible(jule::Str);
inline jule::Bool _1a7668329_is_u64_compatible(jule::Str);
inline jule::Bool _1a76685c1_is_f32_compatible(jule::Str);
inline jule::Bool _1a7668868_is_f64_compatible(jule::Str);
inline jule::Bool _1a7668ba9_types_are_compatible(jule::Str, jule::Str);
inline jule::Bool _1a7668e51_is_i16_greater(jule::Str);
inline jule::Bool _1a76691e8_is_i32_greater(jule::Str);
inline jule::Bool _1a7669490_is_i64_greater(jule::Str);
inline jule::Bool _1a7669737_is_u16_greater(jule::Str);
inline jule::Bool _1a7669b00_is_u32_greater(jule::Str);
inline jule::Bool _1a7669d97_is_u64_greater(jule::Str);
inline jule::Bool _1a766a13e_is_f32_greater(jule::Str);
inline jule::Bool _1a766a3d6_is_f64_greater(jule::Str);
inline jule::Bool _1a766a727_is_greater(jule::Str, jule::Str);
inline jule::Bool _1a766b849_is_sig_int(jule::Str);
inline jule::Bool _1a766bb35_is_unsig_int(jule::Str);
inline jule::Bool _1a766bdcc_is_int(jule::Str);
inline jule::Bool _1a766c1b8_is_float(jule::Str);
inline jule::Bool _1a766c460_is_num(jule::Str);
inline jule::Bool _1a76d7244_is_ascii(jule::I32);
inline jule::I32 _1a76d8c18_to_rune(jule::Slice<jule::U8>);
inline jule::Str _1a76d8d4a_to_raw_str(jule::Slice<jule::U8>);
inline jule::Str _1a76d90d1_to_str(jule::Slice<jule::U8>);
inline std::tuple<jule::U8,jule::Bool> _1a76d9378_try_btoa_common_esq(jule::Slice<jule::U8>);
inline jule::I32 _1a76d96b9_rune_from_esq_seq(jule::Slice<jule::U8>, jule::I64&);
inline jule::Slice<jule::U8> _1a76d9a0a_str_esq_seq(jule::Slice<jule::U8>, jule::I64&);
inline jule::I64 _1a77c9bb6_find_format_prefix(jule::Slice<jule::U8>&, jule::I64&);
inline jule::Slice<jule::U8> _1a77c63dd_get_format_range(jule::I64&, jule::Slice<jule::U8>&);
inline jule::Slice<jule::U8> _1a7795a94_fmt_by_default(jule::Any&);
inline jule::Slice<jule::U8> _1a77ad826_apply_fmt_by_default(jule::I64&, jule::Slice<jule::Any>&);
inline jule::Slice<jule::U8> _1a4298a95_apply_fmt(jule::Slice<jule::U8>&, jule::I64&, jule::Slice<jule::Any>&);
inline jule::Slice<jule::U8> _1a77a5ee4_format_bytes(jule::Str, jule::Slice<jule::Any>);
inline jule::Str _1a77a6126_format(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1a68747bc_parameter_uses_generics(jule::Ptr<_1a68707da_Param>&, jule::Slice<jule::Ptr<_1a685d960_GenericDecl>>&);
inline jule::Ptr<_1a772b772_TypeSymbol> _1a68771c6_build_type(jule::Ptr<_1a68529cb_TypeDecl>);
inline jule::Ptr<_1a76eee2c_Value> _1a68774b2_build_expr(jule::Ptr<_1a6855e41_Expr>);
inline jule::Ptr<_1a7726b9b_TypeAlias> _1a6877759_build_type_alias(jule::Ptr<_1a6866957_TypeAliasDecl>);
inline jule::Ptr<_1a6844a23_Field> _1a6877a45_build_field(jule::Ptr<_1a6869938_FieldDecl>);
inline jule::Slice<jule::Ptr<_1a6844a23_Field>> _1a6877cdc_build_fields(jule::Slice<jule::Ptr<_1a6869938_FieldDecl>>&);
inline jule::Ptr<_1a6826829_Struct> _1a6878084_build_struct(jule::Ptr<_1a686a296_StructDecl>);
inline jule::Ptr<_1a68707da_Param> _1a687832b_build_param(jule::Ptr<_1a6860dd5_ParamDecl>);
inline jule::Slice<jule::Ptr<_1a68707da_Param>> _1a687865b_build_params(jule::Slice<jule::Ptr<_1a6860dd5_ParamDecl>>&);
inline jule::Ptr<_1a68705ed_RetType> _1a6878903_build_ret_type(jule::Ptr<_1a68557ae_RetTypeDecl>);
inline jule::Ptr<_1a68709c7_Fn> _1a6878b9a_build_fn(jule::Ptr<_1a6862205_FnDecl>);
inline jule::Slice<jule::Ptr<_1a68709c7_Fn>> _1a6878e42_build_methods(jule::Slice<jule::Ptr<_1a6862205_FnDecl>>&);
inline jule::Ptr<_1a68d46b7_Trait> _1a68791d9_build_trait(jule::Ptr<_1a686a8a1_TraitDecl>);
inline jule::Ptr<_1a693b6b9_EnumItem> _1a6879481_build_enum_item(jule::Ptr<_1a68682b6_EnumItemDecl>);
inline jule::Slice<jule::Ptr<_1a693b6b9_EnumItem>> _1a6879728_build_enum_items(jule::Slice<jule::Ptr<_1a68682b6_EnumItemDecl>>&);
inline jule::Ptr<_1a6982435_Enum> _1a68799c0_build_enum(jule::Ptr<_1a6868e10_EnumDecl>);
inline jule::Ptr<_1a76a7720_Var> _1a6879d88_build_var(jule::Ptr<_1a68631d4_VarDecl>);
inline jule::Slice<jule::Ptr<_1a76a7720_Var>> _1a687a130_build_vars(jule::Slice<jule::Ptr<_1a68631d4_VarDecl>>);
inline jule::Ptr<_1a6c31b02_Impl> _1a687a3c7_build_impl(jule::Ptr<_1a686aeab_Impl>);
inline jule::Ptr<_1a766e374_ScopeChecker> _1a75dc116_new_scope_checker_base(jule::Ptr<_1a768cc22_Sema>&, jule::Ptr<_1a6872c93_FnIns>);
inline jule::Ptr<_1a766e374_ScopeChecker> _1a75e3826_new_scope_checker(jule::Ptr<_1a768cc22_Sema>&, jule::Ptr<_1a6872c93_FnIns>);
inline jule::Ptr<_1a766de9a_ScopeLabel> _1a7636ea7_find_label_parent(jule::Str, jule::Ptr<_1a766e374_ScopeChecker>);
inline jule::Bool _1a76396c4_model_is_goto_scope(jule::Any&, jule::Ptr<_1a7658803_Scope>&);
inline jule::Bool _1a7639e55_stmt_is_goto_scope(jule::Any&, jule::Ptr<_1a7658803_Scope>&);
inline jule::I64 _1a763aa8d_count_match_type(jule::Ptr<_1a766d4b6_Match>&, jule::Ptr<_1a77278d3_TypeKind>&);
inline jule::Slice<jule::Ptr<_1a76edda4_Data>> _1a763cead_get_datas_from_tuple_data(jule::Ptr<_1a76edda4_Data>&);
inline jule::Slice<jule::Any> _1a763d73e_get_expr_models(jule::Any&);
inline jule::Bool _1a763ded1_check_mut(jule::Ptr<_1a768cc22_Sema>&, jule::Ptr<_1a76edda4_Data>&, jule::Ptr<_1a76edda4_Data>, jule::Ptr<_1a527737a_Token>);
inline jule::Bool _1a7646060_check_assign(jule::Ptr<_1a768cc22_Sema>&, jule::Ptr<_1a76edda4_Data>&, jule::Ptr<_1a76edda4_Data>, jule::Ptr<_1a527737a_Token>);
inline jule::Bool _1a764679c_is_valid_ast_st_for_next_st(jule::Any&);
inline jule::Bool _1a76473d5_is_valid_st_for_next_st(jule::Any&);
inline jule::Bool _1a7648392_st_is_def(jule::Any&);
inline jule::Ptr<_1a76a7720_Var> _1a7683058_find_var_in_package(jule::Slice<jule::Ptr<_1a76e8e26_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_1a7726b9b_TypeAlias> _1a76834a9_find_type_alias_in_package(jule::Slice<jule::Ptr<_1a76e8e26_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_1a6826829_Struct> _1a76838a5_find_struct_in_package(jule::Slice<jule::Ptr<_1a76e8e26_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_1a68709c7_Fn> _1a7683cd4_find_fn_in_package(jule::Slice<jule::Ptr<_1a76e8e26_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_1a68d46b7_Trait> _1a7684125_find_trait_in_package(jule::Slice<jule::Ptr<_1a76e8e26_SymbolTable>>&, jule::Str);
inline jule::Ptr<_1a6982435_Enum> _1a7684466_find_enum_in_package(jule::Slice<jule::Ptr<_1a76e8e26_SymbolTable>>&, jule::Str);
inline jule::Bool _1a7689ea5_is_std_package(jule::Str, jule::Str);
inline jule::Bool _1a768adda_is_valid_model_for_ref(jule::Any&);
inline _1a43349cc_Log _1a768b380_compiler_err(jule::Ptr<_1a527737a_Token>&, jule::Bool, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1a768b6c1_imp_is_lookupable(jule::Ptr<_1a7685038_ImportInfo>&, jule::Str);
inline void _1a768b9bd_append_ret_vars(jule::Slice<jule::Ptr<_1a76a7720_Var>>&, jule::Ptr<_1a6872c93_FnIns>&);
inline void _1a768bc76_append_param_vars(jule::Slice<jule::Ptr<_1a76a7720_Var>>&, jule::Ptr<_1a6872c93_FnIns>&);
inline void _1a768c051_append_generic_type_aliases(jule::Slice<jule::Ptr<_1a7726b9b_TypeAlias>>&, jule::Ptr<_1a6872c93_FnIns>&);
inline jule::Ptr<_1a76e8e26_SymbolTable> _1a768c3a3_find_file(jule::Slice<jule::Ptr<_1a76e8e26_SymbolTable>>&, jule::Ptr<_1a527c76a_File>&);
inline void _1a768c78d_push_suggestion(_1a43349cc_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1a76d8a09_trait_has_reference_receiver(jule::Ptr<_1a68d46b7_Trait>&);
inline jule::Bool _1a76c100d_float_assignable(jule::Str, jule::Ptr<_1a76edda4_Data>&);
inline jule::Bool _1a76d9c5d_sig_assignable(jule::Str, jule::Ptr<_1a76edda4_Data>&);
inline jule::Bool _1a76d9d90_unsig_assignable(jule::Str, jule::Ptr<_1a76edda4_Data>&);
inline jule::Bool _1a76d9ec2_int_assignable(jule::Str, jule::Ptr<_1a76edda4_Data>&);
inline jule::Ptr<_1a6852525_Directive> _1a77225c0_find_directive(jule::Slice<jule::Ptr<_1a6852525_Directive>>&, jule::Str);
inline jule::Any _1a7722955_find_builtins_import(jule::Str, jule::Ptr<_1a7685038_ImportInfo>);
inline void _1a7722b64_fit_bitsize(jule::Ptr<_1a76edda4_Data>&);
inline void _1a7722e61_make_struct_lit_alloc(jule::Ptr<_1a76edda4_Data>&, jule::Ptr<_1a682b752_StructLitExprModel>&);
inline jule::Ptr<_1a76a7720_Var> _1a77232a2_build_error_var(jule::Ptr<_1a7658803_Scope>&, jule::Ptr<_1a6859e12_FnCallExpr>&);
inline jule::Any _1a77235e3_find_builtins_sema(jule::Str, jule::Ptr<_1a768cc22_Sema>);
inline jule::Bool _1a772388a_is_ok_for_shifting(jule::Ptr<_1a76edda4_Data>&);
inline jule::Bool _1a7723bba_is_instanced_struct(jule::Ptr<_1a6836a48_StructIns>);
inline jule::Bool _1a7723e95_is_ptr_arithmetic_compatible_int(jule::Ptr<_1a76edda4_Data>&);
inline void _1a772424d_apply_cast_kind_model(jule::Ptr<_1a76edda4_Data>&, jule::Ptr<_1a77278d3_TypeKind>&);
inline void _1a7724506_apply_cast_kind(jule::Ptr<_1a76edda4_Data>&, jule::Ptr<_1a77278d3_TypeKind>&);
inline jule::Ptr<_1a76edda4_Data> _1a7724704_build_void_data(void);
inline jule::Str _1a77249bd_check_data_for_integer_indexing(jule::Ptr<_1a76edda4_Data>&);
inline void _1a7724ca9_apply_cast_model_by_enum(jule::Ptr<_1a76edda4_Data>&, jule::Ptr<_1a6982435_Enum>);
inline void _1a7725073_cast_const_by_type(jule::Str&, jule::Ptr<_1a76edda4_Data>&);
inline void _1a772546e_update_model_to_generic_ins(jule::Ptr<_1a6845150_FnCallExprModel>&, jule::Ptr<_1a6872c93_FnIns>&);
inline jule::Bool _1a773ceae_kind_uses_generics(jule::Any&, jule::Slice<jule::Ptr<_1a685d960_GenericDecl>>&);
inline jule::Bool _1a773d344_has_directive(jule::Slice<jule::Ptr<_1a6852525_Directive>>&, jule::Str);
inline jule::Bool _1a773d5db_can_get_ptr(jule::Ptr<_1a76edda4_Data>&);
inline jule::Bool _1a773d8c7_is_valid_for_sptr_type(jule::Ptr<_1a77278d3_TypeKind>&);
inline jule::Bool _1a773db6e_is_valid_for_ref(jule::Ptr<_1a77278d3_TypeKind>&);
inline jule::Bool _1a773de38_is_builtin_str_convertable(jule::Ptr<_1a77278d3_TypeKind>&);
inline jule::Str _1a773e213_build_link_path_by_tokens(jule::Slice<jule::Ptr<_1a527737a_Token>>&);
inline jule::Ptr<_1a772c135_Prim> _1a773e554_build_prim_type(jule::Str);
inline jule::Ptr<_1a6826829_Struct> _1a773e7eb_get_struct_from_kind(jule::Ptr<_1a77278d3_TypeKind>);
inline jule::Bool _1a773ea93_is_prim(jule::Str);
inline void _1a773ed4b_apply_implicit_cast(jule::Ptr<_1a77278d3_TypeKind>&, jule::Ptr<_1a76edda4_Data>&);
inline std::tuple<jule::Ptr<_1a76e8e26_SymbolTable>,jule::Slice<_1a43349cc_Log>> _1a77429db_build_symbols(jule::Ptr<_1a6820cc9_Ast>&, jule::Trait<_1a7682bc3_Importer>&, jule::Ptr<_1a687a927_SymbolBuilder>);
inline std::tuple<jule::Ptr<_1a7687bea_Package>,jule::Slice<_1a43349cc_Log>> _1a7742e1a___analyze_package(jule::Slice<jule::Ptr<_1a6820cc9_Ast>>&, jule::Trait<_1a7682bc3_Importer>&, jule::I64&);
inline std::tuple<jule::Ptr<_1a7687bea_Package>,jule::Slice<_1a43349cc_Log>> _1a7743305_analyze_package(jule::Slice<jule::Ptr<_1a6820cc9_Ast>>, jule::Trait<_1a7682bc3_Importer>, jule::I64);
inline jule::Ptr<_1a6872c93_FnIns> _1a774c012_find_builtin_fn(jule::Str);
inline jule::Ptr<_1a7726b9b_TypeAlias> _1a774cd9d_find_builtin_type_alias(jule::Str);
inline jule::Ptr<_1a68d46b7_Trait> _1a774e1e0_find_builtin_trait(jule::Str);
inline jule::Any _1a7780c6b_find_builtin_def(jule::Str);
inline jule::Any _1a774a9a0_find_builtin_def_std_debug(jule::Str);
inline jule::Any _1a7753139_find_builtin_def_std_mem(jule::Str);
inline jule::Any _1a778a1c6_find_builtin_def_std_jule_integrated(jule::Str);
inline jule::Any _1a776c3a6_find_package_builtin_def(jule::Str, jule::Str);
inline jule::Ptr<_1a76edda4_Data> _1a776c4d8_builtin_caller_common_plain(jule::Ptr<_1a7700922_Eval>&, jule::Ptr<_1a6859e12_FnCallExpr>&, jule::Ptr<_1a76edda4_Data>&);
inline jule::Ptr<_1a76edda4_Data> _1a77a570d_builtin_caller_common(jule::Ptr<_1a7700922_Eval>&, jule::Ptr<_1a6859e12_FnCallExpr>&, jule::Ptr<_1a76edda4_Data>&);
inline jule::Ptr<_1a76edda4_Data> _1a77a5840_builtin_caller_common_mut(jule::Ptr<_1a7700922_Eval>&, jule::Ptr<_1a6859e12_FnCallExpr>&, jule::Ptr<_1a76edda4_Data>&);
inline jule::Ptr<_1a76edda4_Data> _1a77a5972_builtin_caller_error(jule::Ptr<_1a7700922_Eval>&, jule::Ptr<_1a6859e12_FnCallExpr>&);
inline jule::Ptr<_1a76edda4_Data> _1a77a66cb_builtin_caller_out(jule::Ptr<_1a7700922_Eval>&, jule::Ptr<_1a6859e12_FnCallExpr>&, jule::Ptr<_1a76edda4_Data>&);
inline jule::Ptr<_1a76edda4_Data> _1a77a680d_builtin_caller_outln(jule::Ptr<_1a7700922_Eval>&, jule::Ptr<_1a6859e12_FnCallExpr>&, jule::Ptr<_1a76edda4_Data>&);
inline jule::Ptr<_1a76edda4_Data> _1a77a6940_builtin_caller_new(jule::Ptr<_1a7700922_Eval>&, jule::Ptr<_1a6859e12_FnCallExpr>&, jule::Ptr<_1a76edda4_Data>&);
inline jule::Ptr<_1a76edda4_Data> _1a77d7179_builtin_caller_panic(jule::Ptr<_1a7700922_Eval>&, jule::Ptr<_1a6859e12_FnCallExpr>&, jule::Ptr<_1a76edda4_Data>&);
inline jule::Ptr<_1a76edda4_Data> _1a77d72ab_builtin_caller_make(jule::Ptr<_1a7700922_Eval>&, jule::Ptr<_1a6859e12_FnCallExpr>&, jule::Ptr<_1a76edda4_Data>&);
inline jule::Ptr<_1a76edda4_Data> _1a77d73dd_builtin_caller_append(jule::Ptr<_1a7700922_Eval>&, jule::Ptr<_1a6859e12_FnCallExpr>&, jule::Ptr<_1a76edda4_Data>&);
inline jule::Ptr<_1a76edda4_Data> _1a77d7520_caller_copy_slice(jule::Ptr<_1a76edda4_Data>&, jule::Ptr<_1a7700922_Eval>&, jule::Ptr<_1a6859e12_FnCallExpr>&, jule::Ptr<_1a76edda4_Data>&);
inline jule::Ptr<_1a76edda4_Data> _1a77d7652_caller_copy_str(jule::Ptr<_1a76edda4_Data>&, jule::Ptr<_1a7700922_Eval>&, jule::Ptr<_1a6859e12_FnCallExpr>&, jule::Ptr<_1a76edda4_Data>&);
inline jule::Ptr<_1a76edda4_Data> _1a77d7784_builtin_caller_copy(jule::Ptr<_1a7700922_Eval>&, jule::Ptr<_1a6859e12_FnCallExpr>&, jule::Ptr<_1a76edda4_Data>&);
inline jule::Ptr<_1a76edda4_Data> _1a77d78b6_builtin_caller_clone(jule::Ptr<_1a7700922_Eval>&, jule::Ptr<_1a6859e12_FnCallExpr>&, jule::Ptr<_1a76edda4_Data>&);
inline jule::Ptr<_1a76edda4_Data> _1a77d79e8_builtin_caller_assert(jule::Ptr<_1a7700922_Eval>&, jule::Ptr<_1a6859e12_FnCallExpr>&, jule::Ptr<_1a76edda4_Data>&);
inline jule::Ptr<_1a76edda4_Data> _1a77d7b2a_builtin_caller_std_mem_size_of(jule::Ptr<_1a7700922_Eval>&, jule::Ptr<_1a6859e12_FnCallExpr>&, jule::Ptr<_1a76edda4_Data>&);
inline jule::Ptr<_1a76edda4_Data> _1a77d7c5c_builtin_caller_std_mem_align_of(jule::Ptr<_1a7700922_Eval>&, jule::Ptr<_1a6859e12_FnCallExpr>&, jule::Ptr<_1a76edda4_Data>&);
inline jule::Ptr<_1a76edda4_Data> _1a77d7d8e_builtin_caller_std_mem_free(jule::Ptr<_1a7700922_Eval>&, jule::Ptr<_1a6859e12_FnCallExpr>&, jule::Ptr<_1a76edda4_Data>&);
inline jule::Ptr<_1a76edda4_Data> _1a77d7ec1_builtin_caller_std_jule_integrated_to_str(jule::Ptr<_1a7700922_Eval>&, jule::Ptr<_1a6859e12_FnCallExpr>&, jule::Ptr<_1a76edda4_Data>&);
inline jule::Ptr<_1a76edda4_Data> _1a77d81e1_builtin_caller_std_jule_integrated_emit(jule::Ptr<_1a7700922_Eval>&, jule::Ptr<_1a6859e12_FnCallExpr>&, jule::Ptr<_1a76edda4_Data>&);
inline jule::Ptr<_1a76edda4_Data> _1a77d85ed_builtin_caller_std_debug_out(jule::Ptr<_1a7700922_Eval>&, jule::Ptr<_1a6859e12_FnCallExpr>&, jule::Ptr<_1a76edda4_Data>&);
inline jule::Ptr<_1a76edda4_Data> _1a77d8a1b_builtin_caller_std_debug_outln(jule::Ptr<_1a7700922_Eval>&, jule::Ptr<_1a6859e12_FnCallExpr>&, jule::Ptr<_1a76edda4_Data>&);
inline jule::Bool _1a7828d14_find_module_file(jule::Slice<jule::Ptr<_1d4e9e836_DirEntry>>&);
inline jule::Str _1a78290ab_find_module_file_deep(jule::Str);
inline jule::Slice<_1a43349cc_Log> _1a7829353_check_module_file(jule::Str);
inline jule::Ptr<_1a7d89286_FileInfo> _1a7dce188_parse_file(jule::Ptr<_1a527c76a_File>);
inline std::tuple<jule::Ptr<_1a6820cc9_Ast>,jule::Slice<_1a43349cc_Log>> _1a7dce71b_parse_fileset(jule::Ptr<_1a527c76a_File>);
inline jule::Ptr<_1a686070e_ScopeTree> _1a7dd0453_new_scope(void);
inline std::tuple<jule::Bool,jule::Bool> _1a7dd072d_is_st(jule::Ptr<_1a527737a_Token>, jule::Ptr<_1a527737a_Token>);
inline jule::Bool _1a7dd0a91_prev_is_incomplete_expr(jule::Slice<jule::Ptr<_1a527737a_Token>>&, jule::I64&);
inline std::tuple<jule::I64,jule::Bool> _1a7dd0e37_next_st_pos(jule::Slice<jule::Ptr<_1a527737a_Token>>&, jule::I64);
inline std::tuple<jule::Slice<jule::Ptr<_1a527737a_Token>>,jule::Bool> _1a7dd1278_skip_st(jule::I64&, jule::Slice<jule::Ptr<_1a527737a_Token>>);
inline jule::Slice<jule::Ptr<_1a7dd1575_Stmt>> _1a7dd191b_split_stmts(jule::Slice<jule::Ptr<_1a527737a_Token>>&);
inline jule::Ptr<_1a7ddd76e_CallData> _1a7dddad2_get_call_data(jule::Slice<jule::Ptr<_1a527737a_Token>>&);
inline jule::Slice<jule::Ptr<_1a527737a_Token>> _1a7ddddbd_get_block_expr(jule::Slice<jule::Ptr<_1a527737a_Token>>&);
inline std::tuple<jule::Slice<jule::Ptr<_1a527737a_Token>>,jule::Slice<jule::Ptr<_1a527737a_Token>>> _1a7dde165_split_colon(jule::Slice<jule::Ptr<_1a527737a_Token>>&);
inline jule::I64 _1a7dde451_find_lowest_prec_op(jule::Slice<jule::Ptr<_1a527737a_Token>>&);
inline jule::Ptr<_1a6857ae1_IdentExpr> _1a7dde6e8_build_ident_expr(jule::Ptr<_1a527737a_Token>&);
inline std::tuple<jule::Slice<jule::Ptr<_1a527737a_Token>>,jule::I64> _1a7dde990_get_range_expr_tokens(jule::Slice<jule::Ptr<_1a527737a_Token>>&);
inline jule::Bool _1a7dea391_check_assign_tokens(jule::Slice<jule::Ptr<_1a527737a_Token>>&);
inline _1a43349cc_Log _1a7deb6a0_make_err(jule::I64, jule::I64, jule::Ptr<_1a527c76a_File>&, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1a527737a_Token>> _1a7debb45_range(jule::I64&, jule::Str, jule::Str, jule::Slice<jule::Ptr<_1a527737a_Token>>&);
inline std::tuple<jule::Slice<jule::Ptr<_1a527737a_Token>>,jule::Slice<jule::Ptr<_1a527737a_Token>>> _1a7debddc_range_last(jule::Slice<jule::Ptr<_1a527737a_Token>>&);
inline std::tuple<jule::Slice<jule::Slice<jule::Ptr<_1a527737a_Token>>>,jule::Slice<_1a43349cc_Log>> _1a7dec31b_parts(jule::Slice<jule::Ptr<_1a527737a_Token>>&, jule::U64, jule::Bool);
inline jule::Str _1a7dec5d5_get_close_kind_of_brace(jule::Str);
inline _1a43349cc_Log _1a7dec9d1_compiler_err(jule::Ptr<_1a527737a_Token>&, jule::Str&, jule::Slice<jule::Any>);
inline void _1a7decd33_push_suggestion(_1a43349cc_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Str _1a7ded163_tokstoa(jule::Slice<jule::Ptr<_1a527737a_Token>>&);
inline jule::Ptr<_1a68529cb_TypeDecl> _1a7e0d2b6_build_void_type(void);
inline jule::Ptr<_1a68529cb_TypeDecl> _1a7e0d508_build_prim_type(jule::Ptr<_1a527737a_Token>);
inline std::tuple<jule::Slice<jule::Ptr<_1a527737a_Token>>,jule::I64> _1a7e0d849_split_map_range(jule::Slice<jule::Ptr<_1a527737a_Token>>&, jule::I64&);
inline std::tuple<jule::Bool,jule::Bool> _1a77ec0d4_check_os(jule::Str);
inline std::tuple<jule::Bool,jule::Bool> _1a7816593_check_arch(jule::Str);
inline jule::Bool _1a78166c5_is_pass_file_annotation(jule::Str);
inline void _1a78177a3_set_os_vars(jule::Slice<jule::Str>&);
inline void _1a7817a06_set_arch_vars(jule::Slice<jule::Str>&);
inline void _1a7817cae_init_vars(jule::Slice<jule::Str>&, _1a7817495_CompileInfo&);
inline jule::Slice<jule::U8> _1d508c836_read_buff(jule::Str);
inline _1a43349cc_Log _1d508e816_flat_compiler_err(jule::Str);
inline void _1a7db0ec2_push_passes(jule::Ptr<_1a7687bea_Package>&, jule::Slice<jule::Str>&);
inline jule::Slice<jule::Str> _1d5083442_get_all_unique_passes(jule::Ptr<_1a7687bea_Package>&, jule::Slice<jule::Ptr<_1a7685038_ImportInfo>>);
inline _1a7817495_CompileInfo _1d5096873_build_compile_info(void);
inline void _1a80140c0_eliminate_defines(jule::Ptr<_1d5090729_IR>&);
inline void _1a8017aeb_eliminate_dead_code_of_scope(jule::Ptr<_1a7658803_Scope>);
inline void _1a8017d82_eliminate_scope_functions(jule::Slice<jule::Ptr<_1a68709c7_Fn>>&);
inline void _1a80180d5_eliminate_functions_scope_package(jule::Ptr<_1a7687bea_Package>&);
inline void _1a801835a_eliminate_scope_package(jule::Ptr<_1a7687bea_Package>&);
inline void _1a801857a_eliminate_scopes(jule::Ptr<_1d5090729_IR>&);
inline jule::Bool _1a53d114e_is_std_package(jule::Str, jule::Str);
inline jule::Bool _1a53db3e0_is_constant_valid_conditional_case(jule::Ptr<_1a7660200_If>&);
inline jule::Bool _1a53e3d43_is_unreachable_expr(jule::Any&);
inline jule::Bool _1a54008aa_is_constant_valid_match_case(jule::Ptr<_1a766d8d4_Case>&);
inline jule::Bool _1a54150a6_is_unreachable_conditional_case(jule::Ptr<_1a7660200_If>&);
inline jule::Bool _1a541b6ea_is_unreachable_match_case(jule::Ptr<_1a766d8d4_Case>&);
inline std::tuple<jule::Bool,jule::U64> _1a59738ab_check_for_bit_shift_opt(jule::Ptr<_1a68382db_OperandExprModel>&, jule::Ptr<_1a68382db_OperandExprModel>&);
inline void _1a5975ec9_push_opt_level(jule::I64);
inline void _1a7edeed0_detect_enabled(void);
inline void _1a80386dd_throw(jule::Str);
inline jule::U64 _1a86525ba_unix(void);
inline jule::U64 _1a865290b_unix_year_to_seconds(jule::U64, jule::Bool&);
inline jule::U64 _1a8652c91_unix_month_to_seconds(jule::U64, jule::Bool);
inline jule::Bool _1a85c432d_is_copy_optimizable(jule::Ptr<_1a76edda4_Data>&);
inline jule::Bool _1a85c46d5_is_iter_copy_optimizable(jule::Ptr<_1a76edda4_Data>&, jule::Ptr<_1a76a7720_Var>&);
inline jule::Str _1a85d2c21_decompose_common_esq(jule::U8);
inline jule::Str _1a85d300c_sbtoa(jule::U8);
inline jule::Str _1a85d32a4_cstr_bytes(jule::Slice<jule::U8>);
inline jule::Str _1a85d3590_cstr_lit(jule::Slice<jule::U8>);
inline jule::Str _1a85d38d1_ftoa(jule::F64, jule::I64);
inline jule::Str _1a85d3b78_itoa(jule::I64);
inline jule::Str _1a85d3e20_utoa(jule::U64);
inline jule::Bool _1a85d4250_is_forwarded(jule::Ptr<_1a7658803_Scope>&);
inline jule::Bool _1a85d4519_is_builtin_call_has_debuginf(jule::Ptr<_1a6845150_FnCallExprModel>&);
inline void _1a865746b_iter_files(jule::Ptr<_1a7687bea_Package>&, jule::Fn<void(jule::Ptr<_1a76e8e26_SymbolTable>&)>);
inline void _1a86576be_prepare_structure(jule::Ptr<_1a6826829_Struct>&);
inline jule::Str _1a8657966_concat_all_parts(jule::Slice<jule::Ptr<_1a527737a_Token>>);
inline jule::Ptr<_1a6852525_Directive> _1a866030e_find_directive(jule::Slice<jule::Ptr<_1a6852525_Directive>>&, jule::Str);
inline jule::Bool _1a8660694_has_directive(jule::Slice<jule::Ptr<_1a6852525_Directive>>&, jule::Str);
inline void _1a42aba53_print_error_message(jule::Str);
inline void _1a4301614_help(jule::Slice<jule::Str>&);
inline void _1a4313cec_version(jule::Slice<jule::Str>&);
inline void _1a43153e7_tool_distos(void);
inline void _1a4315b89_tool_distarch(void);
inline void _1a431642b_tool(jule::Slice<jule::Str>&);
inline void _1a4316bbd_julenv(jule::Slice<jule::Str>&);
inline void _1a4317460_mod(jule::Slice<jule::Str>&);
inline jule::Bool _1a432721c_process_command(jule::Slice<jule::Str>&);
inline void _1a42eda84_show_info(void);
void entry_point(void);
inline void _1a850db80_init(void);
inline jule::Ptr<_1d4ea035e_File> _1a8388b2b_open_output(jule::Str&);
inline void _1a8483b8d_clear_objects(void);
inline void _1a8667d1c_compile_ir(jule::Str, jule::Str);
inline jule::Bool _1a8676d4d_is_cpp_source_file(jule::Str);
inline void _1a8664335_push_comp_cmd_clang(jule::Str&);
inline void _1a866e1a8_push_comp_cmd_gcc(jule::Str&);
inline std::tuple<jule::Str,jule::Str> _1a850dd28_gen_compile_cmd(jule::Str, jule::Ptr<_1d5090729_IR>&);
inline jule::Str _1a8661d05_get_compile_path(void);
inline void _1a8587be8_apply_target_independent_optimizations(jule::Ptr<_1d5090729_IR>&);
inline void _1a8665a84_check_compiler_flag(void);
inline void _1a866119a_check_target_arch(jule::Str);
inline void _1a86612cc_check_target_os(jule::Str);
inline void _1a8694497_check_target_flag(jule::Str&);
inline void _1a86945c9_check_opt_flag(jule::Str&);
inline void _1a869493c_check_cpp_std_flag(void);
inline jule::Slice<jule::Str> _1a8694a6e_check_flags(jule::Slice<jule::Str>&);
inline void _1a8694ba1_setup_sema_flags(jule::I64&);
inline jule::Ptr<_1d5090729_IR> _1a8694cd3_build_ir(jule::Slice<jule::Str>&);
inline void _1a8694e15_compile_command(jule::Slice<jule::Str>&);


struct _1a77d1162_ReaderMptrData {
	jule::Exceptional<jule::I64>(*_1a77d101e_read)(jule::Trait<_1a77d1162_Reader>, jule::Slice<jule::U8>);
};

struct _1a77d1591_WriterMptrData {
	jule::Exceptional<jule::I64>(*_1a77d144d_write)(jule::Trait<_1a77d1591_Writer>, jule::Slice<jule::U8>);
};

struct _1a77d1b68_WriterCloserMptrData {
	jule::Exceptional<jule::I64>(*_1a77d1849_write)(jule::Trait<_1a77d1b68_WriterCloser>, jule::Slice<jule::U8>);
	jule::VoidExceptional(*_1a77d1a25_close)(jule::Trait<_1a77d1b68_WriterCloser>);
};

struct _1a77d23b6_StreamMptrData {
	jule::Exceptional<jule::I64>(*_1a77d1e65_read)(jule::Trait<_1a77d23b6_Stream>, jule::Slice<jule::U8>);
	jule::Exceptional<jule::I64>(*_1a77d2273_write)(jule::Trait<_1a77d23b6_Stream>, jule::Slice<jule::U8>);
};

struct _1a7682bc3_ImporterMptrData {
	void(*_1a7681ac3_set_mod_path)(jule::Trait<_1a7682bc3_Importer>, jule::Str);
	jule::Str(*_1a7681d37_get_mod_path)(jule::Trait<_1a7682bc3_Importer>);
	jule::Str(*_1a7682145_mod_by_id)(jule::Trait<_1a7682bc3_Importer>, jule::I64);
	jule::Ptr<_1a7685038_ImportInfo>(*_1a7682453_get_import)(jule::Trait<_1a7682bc3_Importer>, jule::Str);
	std::tuple<jule::Slice<jule::Ptr<_1a6820cc9_Ast>>,jule::Slice<_1a43349cc_Log>>(*_1a768280a_import_package)(jule::Trait<_1a7682bc3_Importer>, jule::Str, jule::Bool);
	void(*_1a7682a80_imported)(jule::Trait<_1a7682bc3_Importer>, jule::Ptr<_1a7685038_ImportInfo>);
};

struct _1a77274a4_KindMptrData {
	jule::Str(*_1a7727053_to_str)(jule::Trait<_1a77274a4_Kind>);
	jule::Bool(*_1a7727361_equals)(jule::Trait<_1a77274a4_Kind>, jule::Ptr<_1a77278d3_TypeKind>);
};

struct _1a7741e19_LookupMptrData {
	jule::Ptr<_1a7685038_ImportInfo>(*_1a77403ce_find_package)(jule::Trait<_1a7741e19_Lookup>, jule::Str);
	jule::Ptr<_1a7685038_ImportInfo>(*_1a77406dc_select_package)(jule::Trait<_1a7741e19_Lookup>, jule::Fn<jule::Bool(jule::Ptr<_1a7685038_ImportInfo>)>);
	jule::Ptr<_1a76a7720_Var>(*_1a7740a94_find_var)(jule::Trait<_1a7741e19_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1a7726b9b_TypeAlias>(*_1a7740e4b_find_type_alias)(jule::Trait<_1a7741e19_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1a6826829_Struct>(*_1a7741303_find_struct)(jule::Trait<_1a7741e19_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1a68709c7_Fn>(*_1a77416aa_find_fn)(jule::Trait<_1a7741e19_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1a68d46b7_Trait>(*_1a77419b8_find_trait)(jule::Trait<_1a7741e19_Lookup>, jule::Str);
	jule::Ptr<_1a6982435_Enum>(*_1a7741cc6_find_enum)(jule::Trait<_1a7741e19_Lookup>, jule::Str);
};

struct _1a8588039_CommonFlagMptrData {
	jule::Str(*_1a868dc77_name)(jule::Trait<_1a8588039_CommonFlag>);
	jule::I32(*_1a868dda9_short)(jule::Trait<_1a8588039_CommonFlag>);
	jule::Str(*_1a868dedb_what)(jule::Trait<_1a8588039_CommonFlag>);
	void(*_1a868e11d_reset)(jule::Trait<_1a8588039_CommonFlag>);
};



inline jule::Exceptional<jule::I64> _1a77d1849_write_0(jule::Trait<_1a77d1b68_WriterCloser> _self_, jule::Slice<jule::U8> _1728_buff)  { jule::panic(__JULE_ERROR__INVALID_MEMORY); }
inline jule::VoidExceptional _1a77d1a25_close_0(jule::Trait<_1a77d1b68_WriterCloser> _self_)  { jule::panic(__JULE_ERROR__INVALID_MEMORY); }
inline void _1a7681ac3_set_mod_path_0(jule::Trait<_1a7682bc3_Importer> _self_, jule::Str _1735_path) {
	_1d50c54d9_set_mod_path(_self_.safe_ptr<_1a7ceea26_JuleImporter>(), _1735_path);
}
inline jule::Str _1a7681d37_get_mod_path_0(jule::Trait<_1a7682bc3_Importer> _self_) {
	return _1d50d3e10_get_mod_path(_self_.safe_ptr<_1a7ceea26_JuleImporter>());
}
inline jule::Str _1a7682145_mod_by_id_0(jule::Trait<_1a7682bc3_Importer> _self_, jule::I64 _2528_id) {
	return _1d50d682a_mod_by_id(_self_.safe_ptr<_1a7ceea26_JuleImporter>(), _2528_id);
}
inline jule::Ptr<_1a7685038_ImportInfo> _1a7682453_get_import_0(jule::Trait<_1a7682bc3_Importer> _self_, jule::Str _3133_path) {
	return _1d5133921_get_import(_self_.safe_ptr<_1a7ceea26_JuleImporter>(), _3133_path);
}
inline std::tuple<jule::Slice<jule::Ptr<_1a6820cc9_Ast>>,jule::Slice<_1a43349cc_Log>> _1a768280a_import_package_0(jule::Trait<_1a7682bc3_Importer> _self_, jule::Str _3737_path, jule::Bool _3748_update_mod) {
	return _1a7d14e9d_import_package(_self_.safe_ptr<_1a7ceea26_JuleImporter>(), _3737_path, _3748_update_mod);
}
inline void _1a7682a80_imported_0(jule::Trait<_1a7682bc3_Importer> _self_, jule::Ptr<_1a7685038_ImportInfo> _4135__0) {
	_1a7d1729c_imported(_self_.safe_ptr<_1a7ceea26_JuleImporter>(), _4135__0);
}
inline jule::Str _1a7727053_to_str_0(jule::Trait<_1a77274a4_Kind> _self_) {
	return _1a683ac7d_to_str(_self_.safe_ptr<_1a6836a48_StructIns>());
}
inline jule::Bool _1a7727361_equals_0(jule::Trait<_1a77274a4_Kind> _self_, jule::Ptr<_1a77278d3_TypeKind> _4926_other) {
	return _1a682a641_equals(_self_.data.as<_1a6836a48_StructIns>(), _4926_other);
}
inline jule::Str _1a7727053_to_str_1(jule::Trait<_1a77274a4_Kind> _self_) {
	return _1a6873106_to_str(_self_.safe_ptr<_1a6872c93_FnIns>());
}
inline jule::Bool _1a7727361_equals_1(jule::Trait<_1a77274a4_Kind> _self_, jule::Ptr<_1a77278d3_TypeKind> _4926_other) {
	return _1a6873414_equals(_self_.data.as<_1a6872c93_FnIns>(), _4926_other);
}
inline jule::Str _1a7727053_to_str_2(jule::Trait<_1a77274a4_Kind> _self_) {
	return _1a68d629b_to_str(_self_.safe_ptr<_1a68d46b7_Trait>());
}
inline jule::Bool _1a7727361_equals_2(jule::Trait<_1a77274a4_Kind> _self_, jule::Ptr<_1a77278d3_TypeKind> _4926_other) {
	return _1a68d7cd6_equals(_self_.data.as<_1a68d46b7_Trait>(), _4926_other);
}
inline jule::Str _1a7727053_to_str_3(jule::Trait<_1a77274a4_Kind> _self_) {
	return _1a696655c_to_str(_self_.safe_ptr<_1a6982435_Enum>());
}
inline jule::Bool _1a7727361_equals_3(jule::Trait<_1a77274a4_Kind> _self_, jule::Ptr<_1a77278d3_TypeKind> _4926_other) {
	return _1a6aadc9d_equals(_self_.data.as<_1a6982435_Enum>(), _4926_other);
}
inline jule::Str _1a7727053_to_str_4(jule::Trait<_1a77274a4_Kind> _self_) {
	return _1a7727c8a_to_str(_self_.safe_ptr<_1a77278d3_TypeKind>());
}
inline jule::Bool _1a7727361_equals_4(jule::Trait<_1a77274a4_Kind> _self_, jule::Ptr<_1a77278d3_TypeKind> _4926_other) {
	return _1a7728098_equals(_self_.data.as<_1a77278d3_TypeKind>(), _4926_other);
}
inline jule::Str _1a7727053_to_str_5(jule::Trait<_1a77274a4_Kind> _self_) {
	return _1a772c498_to_str(_self_.safe_ptr<_1a772c135_Prim>());
}
inline jule::Bool _1a7727361_equals_5(jule::Trait<_1a77274a4_Kind> _self_, jule::Ptr<_1a77278d3_TypeKind> _4926_other) {
	return _1a772c7a6_equals(_self_.data.as<_1a772c135_Prim>(), _4926_other);
}
inline jule::Str _1a7727053_to_str_6(jule::Trait<_1a77274a4_Kind> _self_) {
	return _1a77309a7_to_str(_self_.safe_ptr<_1a7730644_Sptr>());
}
inline jule::Bool _1a7727361_equals_6(jule::Trait<_1a77274a4_Kind> _self_, jule::Ptr<_1a77278d3_TypeKind> _4926_other) {
	return _1a7730cb5_equals(_self_.data.as<_1a7730644_Sptr>(), _4926_other);
}
inline jule::Str _1a7727053_to_str_7(jule::Trait<_1a77274a4_Kind> _self_) {
	return _1a7731524_to_str(_self_.safe_ptr<_1a77310a1_Slc>());
}
inline jule::Bool _1a7727361_equals_7(jule::Trait<_1a77274a4_Kind> _self_, jule::Ptr<_1a77278d3_TypeKind> _4926_other) {
	return _1a7731832_equals(_self_.data.as<_1a77310a1_Slc>(), _4926_other);
}
inline jule::Str _1a7727053_to_str_8(jule::Trait<_1a77274a4_Kind> _self_) {
	return _1a7731e92_to_str(_self_.safe_ptr<_1a7731a96_Tuple>());
}
inline jule::Bool _1a7727361_equals_8(jule::Trait<_1a77274a4_Kind> _self_, jule::Ptr<_1a77278d3_TypeKind> _4926_other) {
	return _1a77322a0_equals(_self_.data.as<_1a7731a96_Tuple>(), _4926_other);
}
inline jule::Str _1a7727053_to_str_9(jule::Trait<_1a77274a4_Kind> _self_) {
	return _1a77329ba_to_str(_self_.safe_ptr<_1a7732657_Map>());
}
inline jule::Bool _1a7727361_equals_9(jule::Trait<_1a77274a4_Kind> _self_, jule::Ptr<_1a77278d3_TypeKind> _4926_other) {
	return _1a7732cc8_equals(_self_.data.as<_1a7732657_Map>(), _4926_other);
}
inline jule::Str _1a7727053_to_str_10(jule::Trait<_1a77274a4_Kind> _self_) {
	return _1a77335ae_to_str(_self_.safe_ptr<_1a773324b_Arr>());
}
inline jule::Bool _1a7727361_equals_10(jule::Trait<_1a77274a4_Kind> _self_, jule::Ptr<_1a77278d3_TypeKind> _4926_other) {
	return _1a77338bc_equals(_self_.data.as<_1a773324b_Arr>(), _4926_other);
}
inline jule::Str _1a7727053_to_str_11(jule::Trait<_1a77274a4_Kind> _self_) {
	return _1a773401b_to_str(_self_.safe_ptr<_1a7733ba8_Ptr>());
}
inline jule::Bool _1a7727361_equals_11(jule::Trait<_1a77274a4_Kind> _self_, jule::Ptr<_1a77278d3_TypeKind> _4926_other) {
	return _1a7734329_equals(_self_.data.as<_1a7733ba8_Ptr>(), _4926_other);
}
inline jule::Str _1a7727053_to_str_12(jule::Trait<_1a77274a4_Kind> _self_) {
	return _1a8658ba9_to_str(_self_.safe_ptr<_1a86588bd_CustomType>());
}
inline jule::Bool _1a7727361_equals_12(jule::Trait<_1a77274a4_Kind> _self_, jule::Ptr<_1a77278d3_TypeKind> _4926_other) {
	return _1a8658eb7_equals(_self_.data.as<_1a86588bd_CustomType>(), _4926_other);
}
inline jule::Ptr<_1a7685038_ImportInfo> _1a77403ce_find_package_0(jule::Trait<_1a7741e19_Lookup> _self_, jule::Str _935_ident) {
	return _1a75eda73_find_package(_self_.safe_ptr<_1a766e374_ScopeChecker>(), _935_ident);
}
inline jule::Ptr<_1a7685038_ImportInfo> _1a77406dc_select_package_0(jule::Trait<_1a7741e19_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1a7685038_ImportInfo>)> _1337_selector) {
	return _1a75db247_select_package(_self_.safe_ptr<_1a766e374_ScopeChecker>(), _1337_selector);
}
inline jule::Ptr<_1a76a7720_Var> _1a7740a94_find_var_0(jule::Trait<_1a7741e19_Lookup> _self_, jule::Str _1731_ident, jule::Bool _1743_cpp_linked) {
	return _1a7638393_find_var(_self_.safe_ptr<_1a766e374_ScopeChecker>(), _1731_ident, _1743_cpp_linked);
}
inline jule::Ptr<_1a7726b9b_TypeAlias> _1a7740e4b_find_type_alias_0(jule::Trait<_1a7741e19_Lookup> _self_, jule::Str _2138_ident, jule::Bool _2150_cpp_linked) {
	return _1a766e7d6_find_type_alias(_self_.safe_ptr<_1a766e374_ScopeChecker>(), _2138_ident, _2150_cpp_linked);
}
inline jule::Ptr<_1a6826829_Struct> _1a7741303_find_struct_0(jule::Trait<_1a7741e19_Lookup> _self_, jule::Str _2534_ident, jule::Bool _2546_cpp_linked) {
	return _1a766eb8d_find_struct(_self_.safe_ptr<_1a766e374_ScopeChecker>(), _2534_ident, _2546_cpp_linked);
}
inline jule::Ptr<_1a68709c7_Fn> _1a77416aa_find_fn_0(jule::Trait<_1a7741e19_Lookup> _self_, jule::Str _2930_ident, jule::Bool _2942_cpp_linked) {
	return _1a7670045_find_fn(_self_.safe_ptr<_1a766e374_ScopeChecker>(), _2930_ident, _2942_cpp_linked);
}
inline jule::Ptr<_1a68d46b7_Trait> _1a77419b8_find_trait_0(jule::Trait<_1a7741e19_Lookup> _self_, jule::Str _3333_ident) {
	return _1a7670353_find_trait(_self_.safe_ptr<_1a766e374_ScopeChecker>(), _3333_ident);
}
inline jule::Ptr<_1a6982435_Enum> _1a7741cc6_find_enum_0(jule::Trait<_1a7741e19_Lookup> _self_, jule::Str _3732_ident) {
	return _1a7670661_find_enum(_self_.safe_ptr<_1a766e374_ScopeChecker>(), _3732_ident);
}
inline jule::Ptr<_1a7685038_ImportInfo> _1a77403ce_find_package_1(jule::Trait<_1a7741e19_Lookup> _self_, jule::Str _935_ident) {
	return _1a7685544_find_package(_self_.safe_ptr<_1a7685038_ImportInfo>(), _935_ident);
}
inline jule::Ptr<_1a7685038_ImportInfo> _1a77406dc_select_package_1(jule::Trait<_1a7741e19_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1a7685038_ImportInfo>)> _1337_selector) {
	return _1a7685852_select_package(_self_.safe_ptr<_1a7685038_ImportInfo>(), _1337_selector);
}
inline jule::Ptr<_1a76a7720_Var> _1a7740a94_find_var_1(jule::Trait<_1a7741e19_Lookup> _self_, jule::Str _1731_ident, jule::Bool _1743_cpp_linked) {
	return _1a7685c09_find_var(_self_.safe_ptr<_1a7685038_ImportInfo>(), _1731_ident, _1743_cpp_linked);
}
inline jule::Ptr<_1a7726b9b_TypeAlias> _1a7740e4b_find_type_alias_1(jule::Trait<_1a7741e19_Lookup> _self_, jule::Str _2138_ident, jule::Bool _2150_cpp_linked) {
	return _1a76860b1_find_type_alias(_self_.safe_ptr<_1a7685038_ImportInfo>(), _2138_ident, _2150_cpp_linked);
}
inline jule::Ptr<_1a6826829_Struct> _1a7741303_find_struct_1(jule::Trait<_1a7741e19_Lookup> _self_, jule::Str _2534_ident, jule::Bool _2546_cpp_linked) {
	return _1a7686468_find_struct(_self_.safe_ptr<_1a7685038_ImportInfo>(), _2534_ident, _2546_cpp_linked);
}
inline jule::Ptr<_1a68709c7_Fn> _1a77416aa_find_fn_1(jule::Trait<_1a7741e19_Lookup> _self_, jule::Str _2930_ident, jule::Bool _2942_cpp_linked) {
	return _1a7686820_find_fn(_self_.safe_ptr<_1a7685038_ImportInfo>(), _2930_ident, _2942_cpp_linked);
}
inline jule::Ptr<_1a68d46b7_Trait> _1a77419b8_find_trait_1(jule::Trait<_1a7741e19_Lookup> _self_, jule::Str _3333_ident) {
	return _1a7686b2d_find_trait(_self_.safe_ptr<_1a7685038_ImportInfo>(), _3333_ident);
}
inline jule::Ptr<_1a6982435_Enum> _1a7741cc6_find_enum_1(jule::Trait<_1a7741e19_Lookup> _self_, jule::Str _3732_ident) {
	return _1a7686e3b_find_enum(_self_.safe_ptr<_1a7685038_ImportInfo>(), _3732_ident);
}
inline jule::Ptr<_1a7685038_ImportInfo> _1a77403ce_find_package_2(jule::Trait<_1a7741e19_Lookup> _self_, jule::Str _935_ident) {
	return _1a76881b2_find_package(_self_.safe_ptr<_1a7687bea_Package>(), _935_ident);
}
inline jule::Ptr<_1a7685038_ImportInfo> _1a77406dc_select_package_2(jule::Trait<_1a7741e19_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1a7685038_ImportInfo>)> _1337_selector) {
	return _1a76884c0_select_package(_self_.safe_ptr<_1a7687bea_Package>(), _1337_selector);
}
inline jule::Ptr<_1a76a7720_Var> _1a7740a94_find_var_2(jule::Trait<_1a7741e19_Lookup> _self_, jule::Str _1731_ident, jule::Bool _1743_cpp_linked) {
	return _1a7688877_find_var(_self_.safe_ptr<_1a7687bea_Package>(), _1731_ident, _1743_cpp_linked);
}
inline jule::Ptr<_1a7726b9b_TypeAlias> _1a7740e4b_find_type_alias_2(jule::Trait<_1a7741e19_Lookup> _self_, jule::Str _2138_ident, jule::Bool _2150_cpp_linked) {
	return _1a7688c2e_find_type_alias(_self_.safe_ptr<_1a7687bea_Package>(), _2138_ident, _2150_cpp_linked);
}
inline jule::Ptr<_1a6826829_Struct> _1a7741303_find_struct_2(jule::Trait<_1a7741e19_Lookup> _self_, jule::Str _2534_ident, jule::Bool _2546_cpp_linked) {
	return _1a76890d6_find_struct(_self_.safe_ptr<_1a7687bea_Package>(), _2534_ident, _2546_cpp_linked);
}
inline jule::Ptr<_1a68709c7_Fn> _1a77416aa_find_fn_2(jule::Trait<_1a7741e19_Lookup> _self_, jule::Str _2930_ident, jule::Bool _2942_cpp_linked) {
	return _1a768948d_find_fn(_self_.safe_ptr<_1a7687bea_Package>(), _2930_ident, _2942_cpp_linked);
}
inline jule::Ptr<_1a68d46b7_Trait> _1a77419b8_find_trait_2(jule::Trait<_1a7741e19_Lookup> _self_, jule::Str _3333_ident) {
	return _1a768979b_find_trait(_self_.safe_ptr<_1a7687bea_Package>(), _3333_ident);
}
inline jule::Ptr<_1a6982435_Enum> _1a7741cc6_find_enum_2(jule::Trait<_1a7741e19_Lookup> _self_, jule::Str _3732_ident) {
	return _1a7689aa9_find_enum(_self_.safe_ptr<_1a7687bea_Package>(), _3732_ident);
}
inline jule::Ptr<_1a7685038_ImportInfo> _1a77403ce_find_package_3(jule::Trait<_1a7741e19_Lookup> _self_, jule::Str _935_ident) {
	return _1a768d22d_find_package(_self_.safe_ptr<_1a768cc22_Sema>(), _935_ident);
}
inline jule::Ptr<_1a7685038_ImportInfo> _1a77406dc_select_package_3(jule::Trait<_1a7741e19_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1a7685038_ImportInfo>)> _1337_selector) {
	return _1a768d53b_select_package(_self_.safe_ptr<_1a768cc22_Sema>(), _1337_selector);
}
inline jule::Ptr<_1a76a7720_Var> _1a7740a94_find_var_3(jule::Trait<_1a7741e19_Lookup> _self_, jule::Str _1731_ident, jule::Bool _1743_cpp_linked) {
	return _1a768d8e3_find_var(_self_.safe_ptr<_1a768cc22_Sema>(), _1731_ident, _1743_cpp_linked);
}
inline jule::Ptr<_1a7726b9b_TypeAlias> _1a7740e4b_find_type_alias_3(jule::Trait<_1a7741e19_Lookup> _self_, jule::Str _2138_ident, jule::Bool _2150_cpp_linked) {
	return _1a768dc9a_find_type_alias(_self_.safe_ptr<_1a768cc22_Sema>(), _2138_ident, _2150_cpp_linked);
}
inline jule::Ptr<_1a6826829_Struct> _1a7741303_find_struct_3(jule::Trait<_1a7741e19_Lookup> _self_, jule::Str _2534_ident, jule::Bool _2546_cpp_linked) {
	return _1a768e152_find_struct(_self_.safe_ptr<_1a768cc22_Sema>(), _2534_ident, _2546_cpp_linked);
}
inline jule::Ptr<_1a68709c7_Fn> _1a77416aa_find_fn_3(jule::Trait<_1a7741e19_Lookup> _self_, jule::Str _2930_ident, jule::Bool _2942_cpp_linked) {
	return _1a768e509_find_fn(_self_.safe_ptr<_1a768cc22_Sema>(), _2930_ident, _2942_cpp_linked);
}
inline jule::Ptr<_1a68d46b7_Trait> _1a77419b8_find_trait_3(jule::Trait<_1a7741e19_Lookup> _self_, jule::Str _3333_ident) {
	return _1a768e817_find_trait(_self_.safe_ptr<_1a768cc22_Sema>(), _3333_ident);
}
inline jule::Ptr<_1a6982435_Enum> _1a7741cc6_find_enum_3(jule::Trait<_1a7741e19_Lookup> _self_, jule::Str _3732_ident) {
	return _1a768eb25_find_enum(_self_.safe_ptr<_1a768cc22_Sema>(), _3732_ident);
}
inline jule::Ptr<_1a7685038_ImportInfo> _1a77403ce_find_package_4(jule::Trait<_1a7741e19_Lookup> _self_, jule::Str _935_ident) {
	return _1a76e9432_find_package(_self_.safe_ptr<_1a76e8e26_SymbolTable>(), _935_ident);
}
inline jule::Ptr<_1a7685038_ImportInfo> _1a77406dc_select_package_4(jule::Trait<_1a7741e19_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1a7685038_ImportInfo>)> _1337_selector) {
	return _1a76e9740_select_package(_self_.safe_ptr<_1a76e8e26_SymbolTable>(), _1337_selector);
}
inline jule::Ptr<_1a76a7720_Var> _1a7740a94_find_var_4(jule::Trait<_1a7741e19_Lookup> _self_, jule::Str _1731_ident, jule::Bool _1743_cpp_linked) {
	return _1a76e9ae7_find_var(_self_.safe_ptr<_1a76e8e26_SymbolTable>(), _1731_ident, _1743_cpp_linked);
}
inline jule::Ptr<_1a7726b9b_TypeAlias> _1a7740e4b_find_type_alias_4(jule::Trait<_1a7741e19_Lookup> _self_, jule::Str _2138_ident, jule::Bool _2150_cpp_linked) {
	return _1a76e9e9e_find_type_alias(_self_.safe_ptr<_1a76e8e26_SymbolTable>(), _2138_ident, _2150_cpp_linked);
}
inline jule::Ptr<_1a6826829_Struct> _1a7741303_find_struct_4(jule::Trait<_1a7741e19_Lookup> _self_, jule::Str _2534_ident, jule::Bool _2546_cpp_linked) {
	return _1a76ea356_find_struct(_self_.safe_ptr<_1a76e8e26_SymbolTable>(), _2534_ident, _2546_cpp_linked);
}
inline jule::Ptr<_1a68709c7_Fn> _1a77416aa_find_fn_4(jule::Trait<_1a7741e19_Lookup> _self_, jule::Str _2930_ident, jule::Bool _2942_cpp_linked) {
	return _1a76ea70d_find_fn(_self_.safe_ptr<_1a76e8e26_SymbolTable>(), _2930_ident, _2942_cpp_linked);
}
inline jule::Ptr<_1a68d46b7_Trait> _1a77419b8_find_trait_4(jule::Trait<_1a7741e19_Lookup> _self_, jule::Str _3333_ident) {
	return _1a76eaa1b_find_trait(_self_.safe_ptr<_1a76e8e26_SymbolTable>(), _3333_ident);
}
inline jule::Ptr<_1a6982435_Enum> _1a7741cc6_find_enum_4(jule::Trait<_1a7741e19_Lookup> _self_, jule::Str _3732_ident) {
	return _1a76ead29_find_enum(_self_.safe_ptr<_1a76e8e26_SymbolTable>(), _3732_ident);
}
inline jule::Str _1a868dc77_name_0(jule::Trait<_1a8588039_CommonFlag> _self_) {
	return _1aad0e318_name(_self_.safe_ptr<_1aad0e02c_Flag>());
}
inline jule::I32 _1a868dda9_short_0(jule::Trait<_1a8588039_CommonFlag> _self_) {
	return _1aad0e6e2_short(_self_.safe_ptr<_1aad0e02c_Flag>());
}
inline jule::Str _1a868dedb_what_0(jule::Trait<_1a8588039_CommonFlag> _self_) {
	return _1aad0e45b_what(_self_.safe_ptr<_1aad0e02c_Flag>());
}
inline void _1a868e11d_reset_0(jule::Trait<_1a8588039_CommonFlag> _self_) {
	_1aad0e59e_reset(_self_.safe_ptr<_1aad0e02c_Flag>());
}
inline jule::Str _1a868dc77_name_1(jule::Trait<_1a8588039_CommonFlag> _self_) {
	return _1aad1211d_name(_self_.safe_ptr<_1aad12a8b_Flag>());
}
inline jule::I32 _1a868dda9_short_1(jule::Trait<_1a8588039_CommonFlag> _self_) {
	return _1aad12e87_short(_self_.safe_ptr<_1aad12a8b_Flag>());
}
inline jule::Str _1a868dedb_what_1(jule::Trait<_1a8588039_CommonFlag> _self_) {
	return _1aad12717_what(_self_.safe_ptr<_1aad12a8b_Flag>());
}
inline void _1a868e11d_reset_1(jule::Trait<_1a8588039_CommonFlag> _self_) {
	_1aad12d55_reset(_self_.safe_ptr<_1aad12a8b_Flag>());
}
inline jule::Str _1a868dc77_name_2(jule::Trait<_1a8588039_CommonFlag> _self_) {
	return _1aad156c6_name(_self_.safe_ptr<_1aad16144_Flag>());
}
inline jule::I32 _1a868dda9_short_2(jule::Trait<_1a8588039_CommonFlag> _self_) {
	return _1aad16540_short(_self_.safe_ptr<_1aad16144_Flag>());
}
inline jule::Str _1a868dedb_what_2(jule::Trait<_1a8588039_CommonFlag> _self_) {
	return _1aad15cc0_what(_self_.safe_ptr<_1aad16144_Flag>());
}
inline void _1a868e11d_reset_2(jule::Trait<_1a8588039_CommonFlag> _self_) {
	_1aad1640d_reset(_self_.safe_ptr<_1aad16144_Flag>());
}
inline jule::Str _1a868dc77_name_3(jule::Trait<_1a8588039_CommonFlag> _self_) {
	return _1aad18cc3_name(_self_.safe_ptr<_1aad19741_Flag>());
}
inline jule::I32 _1a868dda9_short_3(jule::Trait<_1a8588039_CommonFlag> _self_) {
	return _1aad19b3c_short(_self_.safe_ptr<_1aad19741_Flag>());
}
inline jule::Str _1a868dedb_what_3(jule::Trait<_1a8588039_CommonFlag> _self_) {
	return _1aad193bc_what(_self_.safe_ptr<_1aad19741_Flag>());
}
inline void _1a868e11d_reset_3(jule::Trait<_1a8588039_CommonFlag> _self_) {
	_1aad19a0a_reset(_self_.safe_ptr<_1aad19741_Flag>());
}
inline jule::Str _1a868dc77_name_4(jule::Trait<_1a8588039_CommonFlag> _self_) {
	return _1aad1c37b_name(_self_.safe_ptr<_1aad1cce9_Flag>());
}
inline jule::I32 _1a868dda9_short_4(jule::Trait<_1a8588039_CommonFlag> _self_) {
	return _1aad1d1e5_short(_self_.safe_ptr<_1aad1cce9_Flag>());
}
inline jule::Str _1a868dedb_what_4(jule::Trait<_1a8588039_CommonFlag> _self_) {
	return _1aad1c975_what(_self_.safe_ptr<_1aad1cce9_Flag>());
}
inline void _1a868e11d_reset_4(jule::Trait<_1a8588039_CommonFlag> _self_) {
	_1aad1d0b3_reset(_self_.safe_ptr<_1aad1cce9_Flag>());
}


static _1a77d1b68_WriterCloserMptrData _1a77d1b68_WriterCloser_mptr_data[] = {
	{
		._1a77d1849_write=_1a77d1849_write_0,
		._1a77d1a25_close=_1a77d1a25_close_0,
	},
};
static _1a7682bc3_ImporterMptrData _1a7682bc3_Importer_mptr_data[] = {
	{
		._1a7681ac3_set_mod_path=_1a7681ac3_set_mod_path_0,
		._1a7681d37_get_mod_path=_1a7681d37_get_mod_path_0,
		._1a7682145_mod_by_id=_1a7682145_mod_by_id_0,
		._1a7682453_get_import=_1a7682453_get_import_0,
		._1a768280a_import_package=_1a768280a_import_package_0,
		._1a7682a80_imported=_1a7682a80_imported_0,
	},
};
static _1a77274a4_KindMptrData _1a77274a4_Kind_mptr_data[] = {
	{
		._1a7727053_to_str=_1a7727053_to_str_0,
		._1a7727361_equals=_1a7727361_equals_0,
	},
	{
		._1a7727053_to_str=_1a7727053_to_str_1,
		._1a7727361_equals=_1a7727361_equals_1,
	},
	{
		._1a7727053_to_str=_1a7727053_to_str_2,
		._1a7727361_equals=_1a7727361_equals_2,
	},
	{
		._1a7727053_to_str=_1a7727053_to_str_3,
		._1a7727361_equals=_1a7727361_equals_3,
	},
	{
		._1a7727053_to_str=_1a7727053_to_str_4,
		._1a7727361_equals=_1a7727361_equals_4,
	},
	{
		._1a7727053_to_str=_1a7727053_to_str_5,
		._1a7727361_equals=_1a7727361_equals_5,
	},
	{
		._1a7727053_to_str=_1a7727053_to_str_6,
		._1a7727361_equals=_1a7727361_equals_6,
	},
	{
		._1a7727053_to_str=_1a7727053_to_str_7,
		._1a7727361_equals=_1a7727361_equals_7,
	},
	{
		._1a7727053_to_str=_1a7727053_to_str_8,
		._1a7727361_equals=_1a7727361_equals_8,
	},
	{
		._1a7727053_to_str=_1a7727053_to_str_9,
		._1a7727361_equals=_1a7727361_equals_9,
	},
	{
		._1a7727053_to_str=_1a7727053_to_str_10,
		._1a7727361_equals=_1a7727361_equals_10,
	},
	{
		._1a7727053_to_str=_1a7727053_to_str_11,
		._1a7727361_equals=_1a7727361_equals_11,
	},
	{
		._1a7727053_to_str=_1a7727053_to_str_12,
		._1a7727361_equals=_1a7727361_equals_12,
	},
};
static _1a7741e19_LookupMptrData _1a7741e19_Lookup_mptr_data[] = {
	{
		._1a77403ce_find_package=_1a77403ce_find_package_0,
		._1a77406dc_select_package=_1a77406dc_select_package_0,
		._1a7740a94_find_var=_1a7740a94_find_var_0,
		._1a7740e4b_find_type_alias=_1a7740e4b_find_type_alias_0,
		._1a7741303_find_struct=_1a7741303_find_struct_0,
		._1a77416aa_find_fn=_1a77416aa_find_fn_0,
		._1a77419b8_find_trait=_1a77419b8_find_trait_0,
		._1a7741cc6_find_enum=_1a7741cc6_find_enum_0,
	},
	{
		._1a77403ce_find_package=_1a77403ce_find_package_1,
		._1a77406dc_select_package=_1a77406dc_select_package_1,
		._1a7740a94_find_var=_1a7740a94_find_var_1,
		._1a7740e4b_find_type_alias=_1a7740e4b_find_type_alias_1,
		._1a7741303_find_struct=_1a7741303_find_struct_1,
		._1a77416aa_find_fn=_1a77416aa_find_fn_1,
		._1a77419b8_find_trait=_1a77419b8_find_trait_1,
		._1a7741cc6_find_enum=_1a7741cc6_find_enum_1,
	},
	{
		._1a77403ce_find_package=_1a77403ce_find_package_2,
		._1a77406dc_select_package=_1a77406dc_select_package_2,
		._1a7740a94_find_var=_1a7740a94_find_var_2,
		._1a7740e4b_find_type_alias=_1a7740e4b_find_type_alias_2,
		._1a7741303_find_struct=_1a7741303_find_struct_2,
		._1a77416aa_find_fn=_1a77416aa_find_fn_2,
		._1a77419b8_find_trait=_1a77419b8_find_trait_2,
		._1a7741cc6_find_enum=_1a7741cc6_find_enum_2,
	},
	{
		._1a77403ce_find_package=_1a77403ce_find_package_3,
		._1a77406dc_select_package=_1a77406dc_select_package_3,
		._1a7740a94_find_var=_1a7740a94_find_var_3,
		._1a7740e4b_find_type_alias=_1a7740e4b_find_type_alias_3,
		._1a7741303_find_struct=_1a7741303_find_struct_3,
		._1a77416aa_find_fn=_1a77416aa_find_fn_3,
		._1a77419b8_find_trait=_1a77419b8_find_trait_3,
		._1a7741cc6_find_enum=_1a7741cc6_find_enum_3,
	},
	{
		._1a77403ce_find_package=_1a77403ce_find_package_4,
		._1a77406dc_select_package=_1a77406dc_select_package_4,
		._1a7740a94_find_var=_1a7740a94_find_var_4,
		._1a7740e4b_find_type_alias=_1a7740e4b_find_type_alias_4,
		._1a7741303_find_struct=_1a7741303_find_struct_4,
		._1a77416aa_find_fn=_1a77416aa_find_fn_4,
		._1a77419b8_find_trait=_1a77419b8_find_trait_4,
		._1a7741cc6_find_enum=_1a7741cc6_find_enum_4,
	},
};
static _1a8588039_CommonFlagMptrData _1a8588039_CommonFlag_mptr_data[] = {
	{
		._1a868dc77_name=_1a868dc77_name_0,
		._1a868dda9_short=_1a868dda9_short_0,
		._1a868dedb_what=_1a868dedb_what_0,
		._1a868e11d_reset=_1a868e11d_reset_0,
	},
	{
		._1a868dc77_name=_1a868dc77_name_1,
		._1a868dda9_short=_1a868dda9_short_1,
		._1a868dedb_what=_1a868dedb_what_1,
		._1a868e11d_reset=_1a868e11d_reset_1,
	},
	{
		._1a868dc77_name=_1a868dc77_name_2,
		._1a868dda9_short=_1a868dda9_short_2,
		._1a868dedb_what=_1a868dedb_what_2,
		._1a868e11d_reset=_1a868e11d_reset_2,
	},
	{
		._1a868dc77_name=_1a868dc77_name_3,
		._1a868dda9_short=_1a868dda9_short_3,
		._1a868dedb_what=_1a868dedb_what_3,
		._1a868e11d_reset=_1a868e11d_reset_3,
	},
	{
		._1a868dc77_name=_1a868dc77_name_4,
		._1a868dda9_short=_1a868dda9_short_4,
		._1a868dedb_what=_1a868dedb_what_4,
		._1a868e11d_reset=_1a868e11d_reset_4,
	},
};


jule::Str _1a8665545_OUT_DIR = jule::Str("dist", 4);
jule::Str _1a866cd99_OUT_NAME = jule::Str("ir.cpp", 6);
jule::Str _1a866e8b2_OUT = jule::Str();
jule::Str _1e0ca1b38_COMPILER = jule::Str();
jule::Str _1e0ca1ce2_COMPILER_PATH = jule::Str();
jule::Str _1e0ca1e9b_CPP_STD = jule::Str("cpp17", 5);
jule::Bool _1e0ca2155_SHADOWING = false;
jule::Bool _1e0ca230e_TRANSPILATION = false;
jule::Bool _1e0ca24b8_TEST = false;
jule::Bool _1e0ca26c7_RC = true;
jule::Bool _1e0ca29b3_SAFETY = true;
jule::Bool _1e0ca2c16_PRODUCTION = false;
jule::Ptr<_1a41c87b6_RangeTable> _1a4173310__L = jule::new_ptr<_1a41c87b6_RangeTable>(_1a41c87b6_RangeTable{._field_r16=jule::Slice<_1a41c7d7b_Range16>::make({_1a41c7d7b_Range16{._field_lo=65LLU, ._field_hi=90LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=97LLU, ._field_hi=122LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=170LLU, ._field_hi=181LLU, ._field_stride=11LLU},_1a41c7d7b_Range16{._field_lo=186LLU, ._field_hi=192LLU, ._field_stride=6LLU},_1a41c7d7b_Range16{._field_lo=193LLU, ._field_hi=214LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=216LLU, ._field_hi=246LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=248LLU, ._field_hi=705LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=710LLU, ._field_hi=721LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=736LLU, ._field_hi=740LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=748LLU, ._field_hi=750LLU, ._field_stride=2LLU},_1a41c7d7b_Range16{._field_lo=880LLU, ._field_hi=884LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=886LLU, ._field_hi=887LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=890LLU, ._field_hi=893LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=895LLU, ._field_hi=902LLU, ._field_stride=7LLU},_1a41c7d7b_Range16{._field_lo=904LLU, ._field_hi=906LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=908LLU, ._field_hi=910LLU, ._field_stride=2LLU},_1a41c7d7b_Range16{._field_lo=911LLU, ._field_hi=929LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=931LLU, ._field_hi=1013LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=1015LLU, ._field_hi=1153LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=1162LLU, ._field_hi=1327LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=1329LLU, ._field_hi=1366LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=1369LLU, ._field_hi=1376LLU, ._field_stride=7LLU},_1a41c7d7b_Range16{._field_lo=1377LLU, ._field_hi=1416LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=1488LLU, ._field_hi=1514LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=1519LLU, ._field_hi=1522LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=1568LLU, ._field_hi=1610LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=1646LLU, ._field_hi=1647LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=1649LLU, ._field_hi=1747LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=1749LLU, ._field_hi=1765LLU, ._field_stride=16LLU},_1a41c7d7b_Range16{._field_lo=1766LLU, ._field_hi=1774LLU, ._field_stride=8LLU},_1a41c7d7b_Range16{._field_lo=1775LLU, ._field_hi=1786LLU, ._field_stride=11LLU},_1a41c7d7b_Range16{._field_lo=1787LLU, ._field_hi=1788LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=1791LLU, ._field_hi=1808LLU, ._field_stride=17LLU},_1a41c7d7b_Range16{._field_lo=1810LLU, ._field_hi=1839LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=1869LLU, ._field_hi=1957LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=1969LLU, ._field_hi=1994LLU, ._field_stride=25LLU},_1a41c7d7b_Range16{._field_lo=1995LLU, ._field_hi=2026LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=2036LLU, ._field_hi=2037LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=2042LLU, ._field_hi=2048LLU, ._field_stride=6LLU},_1a41c7d7b_Range16{._field_lo=2049LLU, ._field_hi=2069LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=2074LLU, ._field_hi=2084LLU, ._field_stride=10LLU},_1a41c7d7b_Range16{._field_lo=2088LLU, ._field_hi=2112LLU, ._field_stride=24LLU},_1a41c7d7b_Range16{._field_lo=2113LLU, ._field_hi=2136LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=2144LLU, ._field_hi=2154LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=2160LLU, ._field_hi=2183LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=2185LLU, ._field_hi=2190LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=2208LLU, ._field_hi=2249LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=2308LLU, ._field_hi=2361LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=2365LLU, ._field_hi=2384LLU, ._field_stride=19LLU},_1a41c7d7b_Range16{._field_lo=2392LLU, ._field_hi=2401LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=2417LLU, ._field_hi=2432LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=2437LLU, ._field_hi=2444LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=2447LLU, ._field_hi=2448LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=2451LLU, ._field_hi=2472LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=2474LLU, ._field_hi=2480LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=2482LLU, ._field_hi=2486LLU, ._field_stride=4LLU},_1a41c7d7b_Range16{._field_lo=2487LLU, ._field_hi=2489LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=2493LLU, ._field_hi=2510LLU, ._field_stride=17LLU},_1a41c7d7b_Range16{._field_lo=2524LLU, ._field_hi=2525LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=2527LLU, ._field_hi=2529LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=2544LLU, ._field_hi=2545LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=2556LLU, ._field_hi=2565LLU, ._field_stride=9LLU},_1a41c7d7b_Range16{._field_lo=2566LLU, ._field_hi=2570LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=2575LLU, ._field_hi=2576LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=2579LLU, ._field_hi=2600LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=2602LLU, ._field_hi=2608LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=2610LLU, ._field_hi=2611LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=2613LLU, ._field_hi=2614LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=2616LLU, ._field_hi=2617LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=2649LLU, ._field_hi=2652LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=2654LLU, ._field_hi=2674LLU, ._field_stride=20LLU},_1a41c7d7b_Range16{._field_lo=2675LLU, ._field_hi=2676LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=2693LLU, ._field_hi=2701LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=2703LLU, ._field_hi=2705LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=2707LLU, ._field_hi=2728LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=2730LLU, ._field_hi=2736LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=2738LLU, ._field_hi=2739LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=2741LLU, ._field_hi=2745LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=2749LLU, ._field_hi=2768LLU, ._field_stride=19LLU},_1a41c7d7b_Range16{._field_lo=2784LLU, ._field_hi=2785LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=2809LLU, ._field_hi=2821LLU, ._field_stride=12LLU},_1a41c7d7b_Range16{._field_lo=2822LLU, ._field_hi=2828LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=2831LLU, ._field_hi=2832LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=2835LLU, ._field_hi=2856LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=2858LLU, ._field_hi=2864LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=2866LLU, ._field_hi=2867LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=2869LLU, ._field_hi=2873LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=2877LLU, ._field_hi=2908LLU, ._field_stride=31LLU},_1a41c7d7b_Range16{._field_lo=2909LLU, ._field_hi=2911LLU, ._field_stride=2LLU},_1a41c7d7b_Range16{._field_lo=2912LLU, ._field_hi=2913LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=2929LLU, ._field_hi=2947LLU, ._field_stride=18LLU},_1a41c7d7b_Range16{._field_lo=2949LLU, ._field_hi=2954LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=2958LLU, ._field_hi=2960LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=2962LLU, ._field_hi=2965LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=2969LLU, ._field_hi=2970LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=2972LLU, ._field_hi=2974LLU, ._field_stride=2LLU},_1a41c7d7b_Range16{._field_lo=2975LLU, ._field_hi=2979LLU, ._field_stride=4LLU},_1a41c7d7b_Range16{._field_lo=2980LLU, ._field_hi=2984LLU, ._field_stride=4LLU},_1a41c7d7b_Range16{._field_lo=2985LLU, ._field_hi=2986LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=2990LLU, ._field_hi=3001LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=3024LLU, ._field_hi=3077LLU, ._field_stride=53LLU},_1a41c7d7b_Range16{._field_lo=3078LLU, ._field_hi=3084LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=3086LLU, ._field_hi=3088LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=3090LLU, ._field_hi=3112LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=3114LLU, ._field_hi=3129LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=3133LLU, ._field_hi=3160LLU, ._field_stride=27LLU},_1a41c7d7b_Range16{._field_lo=3161LLU, ._field_hi=3162LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=3165LLU, ._field_hi=3168LLU, ._field_stride=3LLU},_1a41c7d7b_Range16{._field_lo=3169LLU, ._field_hi=3200LLU, ._field_stride=31LLU},_1a41c7d7b_Range16{._field_lo=3205LLU, ._field_hi=3212LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=3214LLU, ._field_hi=3216LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=3218LLU, ._field_hi=3240LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=3242LLU, ._field_hi=3251LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=3253LLU, ._field_hi=3257LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=3261LLU, ._field_hi=3293LLU, ._field_stride=32LLU},_1a41c7d7b_Range16{._field_lo=3294LLU, ._field_hi=3296LLU, ._field_stride=2LLU},_1a41c7d7b_Range16{._field_lo=3297LLU, ._field_hi=3313LLU, ._field_stride=16LLU},_1a41c7d7b_Range16{._field_lo=3314LLU, ._field_hi=3332LLU, ._field_stride=18LLU},_1a41c7d7b_Range16{._field_lo=3333LLU, ._field_hi=3340LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=3342LLU, ._field_hi=3344LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=3346LLU, ._field_hi=3386LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=3389LLU, ._field_hi=3406LLU, ._field_stride=17LLU},_1a41c7d7b_Range16{._field_lo=3412LLU, ._field_hi=3414LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=3423LLU, ._field_hi=3425LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=3450LLU, ._field_hi=3455LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=3461LLU, ._field_hi=3478LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=3482LLU, ._field_hi=3505LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=3507LLU, ._field_hi=3515LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=3517LLU, ._field_hi=3520LLU, ._field_stride=3LLU},_1a41c7d7b_Range16{._field_lo=3521LLU, ._field_hi=3526LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=3585LLU, ._field_hi=3632LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=3634LLU, ._field_hi=3635LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=3648LLU, ._field_hi=3654LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=3713LLU, ._field_hi=3714LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=3716LLU, ._field_hi=3718LLU, ._field_stride=2LLU},_1a41c7d7b_Range16{._field_lo=3719LLU, ._field_hi=3722LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=3724LLU, ._field_hi=3747LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=3749LLU, ._field_hi=3751LLU, ._field_stride=2LLU},_1a41c7d7b_Range16{._field_lo=3752LLU, ._field_hi=3760LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=3762LLU, ._field_hi=3763LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=3773LLU, ._field_hi=3776LLU, ._field_stride=3LLU},_1a41c7d7b_Range16{._field_lo=3777LLU, ._field_hi=3780LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=3782LLU, ._field_hi=3804LLU, ._field_stride=22LLU},_1a41c7d7b_Range16{._field_lo=3805LLU, ._field_hi=3807LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=3840LLU, ._field_hi=3904LLU, ._field_stride=64LLU},_1a41c7d7b_Range16{._field_lo=3905LLU, ._field_hi=3911LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=3913LLU, ._field_hi=3948LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=3976LLU, ._field_hi=3980LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=4096LLU, ._field_hi=4138LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=4159LLU, ._field_hi=4176LLU, ._field_stride=17LLU},_1a41c7d7b_Range16{._field_lo=4177LLU, ._field_hi=4181LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=4186LLU, ._field_hi=4189LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=4193LLU, ._field_hi=4197LLU, ._field_stride=4LLU},_1a41c7d7b_Range16{._field_lo=4198LLU, ._field_hi=4206LLU, ._field_stride=8LLU},_1a41c7d7b_Range16{._field_lo=4207LLU, ._field_hi=4208LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=4213LLU, ._field_hi=4225LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=4238LLU, ._field_hi=4256LLU, ._field_stride=18LLU},_1a41c7d7b_Range16{._field_lo=4257LLU, ._field_hi=4293LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=4295LLU, ._field_hi=4301LLU, ._field_stride=6LLU},_1a41c7d7b_Range16{._field_lo=4304LLU, ._field_hi=4346LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=4348LLU, ._field_hi=4680LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=4682LLU, ._field_hi=4685LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=4688LLU, ._field_hi=4694LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=4696LLU, ._field_hi=4698LLU, ._field_stride=2LLU},_1a41c7d7b_Range16{._field_lo=4699LLU, ._field_hi=4701LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=4704LLU, ._field_hi=4744LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=4746LLU, ._field_hi=4749LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=4752LLU, ._field_hi=4784LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=4786LLU, ._field_hi=4789LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=4792LLU, ._field_hi=4798LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=4800LLU, ._field_hi=4802LLU, ._field_stride=2LLU},_1a41c7d7b_Range16{._field_lo=4803LLU, ._field_hi=4805LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=4808LLU, ._field_hi=4822LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=4824LLU, ._field_hi=4880LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=4882LLU, ._field_hi=4885LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=4888LLU, ._field_hi=4954LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=4992LLU, ._field_hi=5007LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=5024LLU, ._field_hi=5109LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=5112LLU, ._field_hi=5117LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=5121LLU, ._field_hi=5740LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=5743LLU, ._field_hi=5759LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=5761LLU, ._field_hi=5786LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=5792LLU, ._field_hi=5866LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=5873LLU, ._field_hi=5880LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=5888LLU, ._field_hi=5905LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=5919LLU, ._field_hi=5937LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=5952LLU, ._field_hi=5969LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=5984LLU, ._field_hi=5996LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=5998LLU, ._field_hi=6000LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=6016LLU, ._field_hi=6067LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=6103LLU, ._field_hi=6108LLU, ._field_stride=5LLU},_1a41c7d7b_Range16{._field_lo=6176LLU, ._field_hi=6264LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=6272LLU, ._field_hi=6276LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=6279LLU, ._field_hi=6312LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=6314LLU, ._field_hi=6320LLU, ._field_stride=6LLU},_1a41c7d7b_Range16{._field_lo=6321LLU, ._field_hi=6389LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=6400LLU, ._field_hi=6430LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=6480LLU, ._field_hi=6509LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=6512LLU, ._field_hi=6516LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=6528LLU, ._field_hi=6571LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=6576LLU, ._field_hi=6601LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=6656LLU, ._field_hi=6678LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=6688LLU, ._field_hi=6740LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=6823LLU, ._field_hi=6917LLU, ._field_stride=94LLU},_1a41c7d7b_Range16{._field_lo=6918LLU, ._field_hi=6963LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=6981LLU, ._field_hi=6988LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=7043LLU, ._field_hi=7072LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=7086LLU, ._field_hi=7087LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=7098LLU, ._field_hi=7141LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=7168LLU, ._field_hi=7203LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=7245LLU, ._field_hi=7247LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=7258LLU, ._field_hi=7293LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=7296LLU, ._field_hi=7304LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=7312LLU, ._field_hi=7354LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=7357LLU, ._field_hi=7359LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=7401LLU, ._field_hi=7404LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=7406LLU, ._field_hi=7411LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=7413LLU, ._field_hi=7414LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=7418LLU, ._field_hi=7424LLU, ._field_stride=6LLU},_1a41c7d7b_Range16{._field_lo=7425LLU, ._field_hi=7615LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=7680LLU, ._field_hi=7957LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=7960LLU, ._field_hi=7965LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=7968LLU, ._field_hi=8005LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=8008LLU, ._field_hi=8013LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=8016LLU, ._field_hi=8023LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=8025LLU, ._field_hi=8031LLU, ._field_stride=2LLU},_1a41c7d7b_Range16{._field_lo=8032LLU, ._field_hi=8061LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=8064LLU, ._field_hi=8116LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=8118LLU, ._field_hi=8124LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=8126LLU, ._field_hi=8130LLU, ._field_stride=4LLU},_1a41c7d7b_Range16{._field_lo=8131LLU, ._field_hi=8132LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=8134LLU, ._field_hi=8140LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=8144LLU, ._field_hi=8147LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=8150LLU, ._field_hi=8155LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=8160LLU, ._field_hi=8172LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=8178LLU, ._field_hi=8180LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=8182LLU, ._field_hi=8188LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=8305LLU, ._field_hi=8319LLU, ._field_stride=14LLU},_1a41c7d7b_Range16{._field_lo=8336LLU, ._field_hi=8348LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=8450LLU, ._field_hi=8455LLU, ._field_stride=5LLU},_1a41c7d7b_Range16{._field_lo=8458LLU, ._field_hi=8467LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=8469LLU, ._field_hi=8473LLU, ._field_stride=4LLU},_1a41c7d7b_Range16{._field_lo=8474LLU, ._field_hi=8477LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=8484LLU, ._field_hi=8490LLU, ._field_stride=2LLU},_1a41c7d7b_Range16{._field_lo=8491LLU, ._field_hi=8493LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=8495LLU, ._field_hi=8505LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=8508LLU, ._field_hi=8511LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=8517LLU, ._field_hi=8521LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=8526LLU, ._field_hi=8579LLU, ._field_stride=53LLU},_1a41c7d7b_Range16{._field_lo=8580LLU, ._field_hi=11264LLU, ._field_stride=2684LLU},_1a41c7d7b_Range16{._field_lo=11265LLU, ._field_hi=11492LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=11499LLU, ._field_hi=11502LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=11506LLU, ._field_hi=11507LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=11520LLU, ._field_hi=11557LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=11559LLU, ._field_hi=11565LLU, ._field_stride=6LLU},_1a41c7d7b_Range16{._field_lo=11568LLU, ._field_hi=11623LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=11631LLU, ._field_hi=11648LLU, ._field_stride=17LLU},_1a41c7d7b_Range16{._field_lo=11649LLU, ._field_hi=11670LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=11680LLU, ._field_hi=11686LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=11688LLU, ._field_hi=11694LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=11696LLU, ._field_hi=11702LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=11704LLU, ._field_hi=11710LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=11712LLU, ._field_hi=11718LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=11720LLU, ._field_hi=11726LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=11728LLU, ._field_hi=11734LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=11736LLU, ._field_hi=11742LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=11823LLU, ._field_hi=12293LLU, ._field_stride=470LLU},_1a41c7d7b_Range16{._field_lo=12294LLU, ._field_hi=12337LLU, ._field_stride=43LLU},_1a41c7d7b_Range16{._field_lo=12338LLU, ._field_hi=12341LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=12347LLU, ._field_hi=12348LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=12353LLU, ._field_hi=12438LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=12445LLU, ._field_hi=12447LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=12449LLU, ._field_hi=12538LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=12540LLU, ._field_hi=12543LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=12549LLU, ._field_hi=12591LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=12593LLU, ._field_hi=12686LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=12704LLU, ._field_hi=12735LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=12784LLU, ._field_hi=12799LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=13312LLU, ._field_hi=19903LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=19968LLU, ._field_hi=42124LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=42192LLU, ._field_hi=42237LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=42240LLU, ._field_hi=42508LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=42512LLU, ._field_hi=42527LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=42538LLU, ._field_hi=42539LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=42560LLU, ._field_hi=42606LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=42623LLU, ._field_hi=42653LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=42656LLU, ._field_hi=42725LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=42775LLU, ._field_hi=42783LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=42786LLU, ._field_hi=42888LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=42891LLU, ._field_hi=42954LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=42960LLU, ._field_hi=42961LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=42963LLU, ._field_hi=42965LLU, ._field_stride=2LLU},_1a41c7d7b_Range16{._field_lo=42966LLU, ._field_hi=42969LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=42994LLU, ._field_hi=43009LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=43011LLU, ._field_hi=43013LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=43015LLU, ._field_hi=43018LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=43020LLU, ._field_hi=43042LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=43072LLU, ._field_hi=43123LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=43138LLU, ._field_hi=43187LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=43250LLU, ._field_hi=43255LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=43259LLU, ._field_hi=43261LLU, ._field_stride=2LLU},_1a41c7d7b_Range16{._field_lo=43262LLU, ._field_hi=43274LLU, ._field_stride=12LLU},_1a41c7d7b_Range16{._field_lo=43275LLU, ._field_hi=43301LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=43312LLU, ._field_hi=43334LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=43360LLU, ._field_hi=43388LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=43396LLU, ._field_hi=43442LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=43471LLU, ._field_hi=43488LLU, ._field_stride=17LLU},_1a41c7d7b_Range16{._field_lo=43489LLU, ._field_hi=43492LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=43494LLU, ._field_hi=43503LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=43514LLU, ._field_hi=43518LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=43520LLU, ._field_hi=43560LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=43584LLU, ._field_hi=43586LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=43588LLU, ._field_hi=43595LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=43616LLU, ._field_hi=43638LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=43642LLU, ._field_hi=43646LLU, ._field_stride=4LLU},_1a41c7d7b_Range16{._field_lo=43647LLU, ._field_hi=43695LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=43697LLU, ._field_hi=43701LLU, ._field_stride=4LLU},_1a41c7d7b_Range16{._field_lo=43702LLU, ._field_hi=43705LLU, ._field_stride=3LLU},_1a41c7d7b_Range16{._field_lo=43706LLU, ._field_hi=43709LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=43712LLU, ._field_hi=43714LLU, ._field_stride=2LLU},_1a41c7d7b_Range16{._field_lo=43739LLU, ._field_hi=43741LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=43744LLU, ._field_hi=43754LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=43762LLU, ._field_hi=43764LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=43777LLU, ._field_hi=43782LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=43785LLU, ._field_hi=43790LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=43793LLU, ._field_hi=43798LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=43808LLU, ._field_hi=43814LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=43816LLU, ._field_hi=43822LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=43824LLU, ._field_hi=43866LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=43868LLU, ._field_hi=43881LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=43888LLU, ._field_hi=44002LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=44032LLU, ._field_hi=55203LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=55216LLU, ._field_hi=55238LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=55243LLU, ._field_hi=55291LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=63744LLU, ._field_hi=64109LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=64112LLU, ._field_hi=64217LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=64256LLU, ._field_hi=64262LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=64275LLU, ._field_hi=64279LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=64285LLU, ._field_hi=64287LLU, ._field_stride=2LLU},_1a41c7d7b_Range16{._field_lo=64288LLU, ._field_hi=64296LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=64298LLU, ._field_hi=64310LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=64312LLU, ._field_hi=64316LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=64318LLU, ._field_hi=64320LLU, ._field_stride=2LLU},_1a41c7d7b_Range16{._field_lo=64321LLU, ._field_hi=64323LLU, ._field_stride=2LLU},_1a41c7d7b_Range16{._field_lo=64324LLU, ._field_hi=64326LLU, ._field_stride=2LLU},_1a41c7d7b_Range16{._field_lo=64327LLU, ._field_hi=64433LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=64467LLU, ._field_hi=64829LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=64848LLU, ._field_hi=64911LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=64914LLU, ._field_hi=64967LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=65008LLU, ._field_hi=65019LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=65136LLU, ._field_hi=65140LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=65142LLU, ._field_hi=65276LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=65313LLU, ._field_hi=65338LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=65345LLU, ._field_hi=65370LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=65382LLU, ._field_hi=65470LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=65474LLU, ._field_hi=65479LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=65482LLU, ._field_hi=65487LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=65490LLU, ._field_hi=65495LLU, ._field_stride=1LLU},_1a41c7d7b_Range16{._field_lo=65498LLU, ._field_hi=65500LLU, ._field_stride=1LLU}}), ._field_r32=jule::Slice<_1a41c8343_Range32>::make({_1a41c8343_Range32{._field_lo=65536LLU, ._field_hi=65547LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=65549LLU, ._field_hi=65574LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=65576LLU, ._field_hi=65594LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=65596LLU, ._field_hi=65597LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=65599LLU, ._field_hi=65613LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=65616LLU, ._field_hi=65629LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=65664LLU, ._field_hi=65786LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=66176LLU, ._field_hi=66204LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=66208LLU, ._field_hi=66256LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=66304LLU, ._field_hi=66335LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=66349LLU, ._field_hi=66368LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=66370LLU, ._field_hi=66377LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=66384LLU, ._field_hi=66421LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=66432LLU, ._field_hi=66461LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=66464LLU, ._field_hi=66499LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=66504LLU, ._field_hi=66511LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=66560LLU, ._field_hi=66717LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=66736LLU, ._field_hi=66771LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=66776LLU, ._field_hi=66811LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=66816LLU, ._field_hi=66855LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=66864LLU, ._field_hi=66915LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=66928LLU, ._field_hi=66938LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=66940LLU, ._field_hi=66954LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=66956LLU, ._field_hi=66962LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=66964LLU, ._field_hi=66965LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=66967LLU, ._field_hi=66977LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=66979LLU, ._field_hi=66993LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=66995LLU, ._field_hi=67001LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=67003LLU, ._field_hi=67004LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=67072LLU, ._field_hi=67382LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=67392LLU, ._field_hi=67413LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=67424LLU, ._field_hi=67431LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=67456LLU, ._field_hi=67461LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=67463LLU, ._field_hi=67504LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=67506LLU, ._field_hi=67514LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=67584LLU, ._field_hi=67589LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=67592LLU, ._field_hi=67594LLU, ._field_stride=2LLU},_1a41c8343_Range32{._field_lo=67595LLU, ._field_hi=67637LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=67639LLU, ._field_hi=67640LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=67644LLU, ._field_hi=67647LLU, ._field_stride=3LLU},_1a41c8343_Range32{._field_lo=67648LLU, ._field_hi=67669LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=67680LLU, ._field_hi=67702LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=67712LLU, ._field_hi=67742LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=67808LLU, ._field_hi=67826LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=67828LLU, ._field_hi=67829LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=67840LLU, ._field_hi=67861LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=67872LLU, ._field_hi=67897LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=67968LLU, ._field_hi=68023LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=68030LLU, ._field_hi=68031LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=68096LLU, ._field_hi=68112LLU, ._field_stride=16LLU},_1a41c8343_Range32{._field_lo=68113LLU, ._field_hi=68115LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=68117LLU, ._field_hi=68119LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=68121LLU, ._field_hi=68149LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=68192LLU, ._field_hi=68220LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=68224LLU, ._field_hi=68252LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=68288LLU, ._field_hi=68295LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=68297LLU, ._field_hi=68324LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=68352LLU, ._field_hi=68405LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=68416LLU, ._field_hi=68437LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=68448LLU, ._field_hi=68466LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=68480LLU, ._field_hi=68497LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=68608LLU, ._field_hi=68680LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=68736LLU, ._field_hi=68786LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=68800LLU, ._field_hi=68850LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=68864LLU, ._field_hi=68899LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=69248LLU, ._field_hi=69289LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=69296LLU, ._field_hi=69297LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=69376LLU, ._field_hi=69404LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=69415LLU, ._field_hi=69424LLU, ._field_stride=9LLU},_1a41c8343_Range32{._field_lo=69425LLU, ._field_hi=69445LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=69488LLU, ._field_hi=69505LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=69552LLU, ._field_hi=69572LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=69600LLU, ._field_hi=69622LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=69635LLU, ._field_hi=69687LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=69745LLU, ._field_hi=69746LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=69749LLU, ._field_hi=69763LLU, ._field_stride=14LLU},_1a41c8343_Range32{._field_lo=69764LLU, ._field_hi=69807LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=69840LLU, ._field_hi=69864LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=69891LLU, ._field_hi=69926LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=69956LLU, ._field_hi=69959LLU, ._field_stride=3LLU},_1a41c8343_Range32{._field_lo=69968LLU, ._field_hi=70002LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=70006LLU, ._field_hi=70019LLU, ._field_stride=13LLU},_1a41c8343_Range32{._field_lo=70020LLU, ._field_hi=70066LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=70081LLU, ._field_hi=70084LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=70106LLU, ._field_hi=70108LLU, ._field_stride=2LLU},_1a41c8343_Range32{._field_lo=70144LLU, ._field_hi=70161LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=70163LLU, ._field_hi=70187LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=70207LLU, ._field_hi=70208LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=70272LLU, ._field_hi=70278LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=70280LLU, ._field_hi=70282LLU, ._field_stride=2LLU},_1a41c8343_Range32{._field_lo=70283LLU, ._field_hi=70285LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=70287LLU, ._field_hi=70301LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=70303LLU, ._field_hi=70312LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=70320LLU, ._field_hi=70366LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=70405LLU, ._field_hi=70412LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=70415LLU, ._field_hi=70416LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=70419LLU, ._field_hi=70440LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=70442LLU, ._field_hi=70448LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=70450LLU, ._field_hi=70451LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=70453LLU, ._field_hi=70457LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=70461LLU, ._field_hi=70480LLU, ._field_stride=19LLU},_1a41c8343_Range32{._field_lo=70493LLU, ._field_hi=70497LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=70656LLU, ._field_hi=70708LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=70727LLU, ._field_hi=70730LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=70751LLU, ._field_hi=70753LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=70784LLU, ._field_hi=70831LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=70852LLU, ._field_hi=70853LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=70855LLU, ._field_hi=71040LLU, ._field_stride=185LLU},_1a41c8343_Range32{._field_lo=71041LLU, ._field_hi=71086LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=71128LLU, ._field_hi=71131LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=71168LLU, ._field_hi=71215LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=71236LLU, ._field_hi=71296LLU, ._field_stride=60LLU},_1a41c8343_Range32{._field_lo=71297LLU, ._field_hi=71338LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=71352LLU, ._field_hi=71424LLU, ._field_stride=72LLU},_1a41c8343_Range32{._field_lo=71425LLU, ._field_hi=71450LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=71488LLU, ._field_hi=71494LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=71680LLU, ._field_hi=71723LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=71840LLU, ._field_hi=71903LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=71935LLU, ._field_hi=71942LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=71945LLU, ._field_hi=71948LLU, ._field_stride=3LLU},_1a41c8343_Range32{._field_lo=71949LLU, ._field_hi=71955LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=71957LLU, ._field_hi=71958LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=71960LLU, ._field_hi=71983LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=71999LLU, ._field_hi=72001LLU, ._field_stride=2LLU},_1a41c8343_Range32{._field_lo=72096LLU, ._field_hi=72103LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=72106LLU, ._field_hi=72144LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=72161LLU, ._field_hi=72163LLU, ._field_stride=2LLU},_1a41c8343_Range32{._field_lo=72192LLU, ._field_hi=72203LLU, ._field_stride=11LLU},_1a41c8343_Range32{._field_lo=72204LLU, ._field_hi=72242LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=72250LLU, ._field_hi=72272LLU, ._field_stride=22LLU},_1a41c8343_Range32{._field_lo=72284LLU, ._field_hi=72329LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=72349LLU, ._field_hi=72368LLU, ._field_stride=19LLU},_1a41c8343_Range32{._field_lo=72369LLU, ._field_hi=72440LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=72704LLU, ._field_hi=72712LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=72714LLU, ._field_hi=72750LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=72768LLU, ._field_hi=72818LLU, ._field_stride=50LLU},_1a41c8343_Range32{._field_lo=72819LLU, ._field_hi=72847LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=72960LLU, ._field_hi=72966LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=72968LLU, ._field_hi=72969LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=72971LLU, ._field_hi=73008LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=73030LLU, ._field_hi=73056LLU, ._field_stride=26LLU},_1a41c8343_Range32{._field_lo=73057LLU, ._field_hi=73061LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=73063LLU, ._field_hi=73064LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=73066LLU, ._field_hi=73097LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=73112LLU, ._field_hi=73440LLU, ._field_stride=328LLU},_1a41c8343_Range32{._field_lo=73441LLU, ._field_hi=73458LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=73474LLU, ._field_hi=73476LLU, ._field_stride=2LLU},_1a41c8343_Range32{._field_lo=73477LLU, ._field_hi=73488LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=73490LLU, ._field_hi=73523LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=73648LLU, ._field_hi=73728LLU, ._field_stride=80LLU},_1a41c8343_Range32{._field_lo=73729LLU, ._field_hi=74649LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=74880LLU, ._field_hi=75075LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=77712LLU, ._field_hi=77808LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=77824LLU, ._field_hi=78895LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=78913LLU, ._field_hi=78918LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=82944LLU, ._field_hi=83526LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=92160LLU, ._field_hi=92728LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=92736LLU, ._field_hi=92766LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=92784LLU, ._field_hi=92862LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=92880LLU, ._field_hi=92909LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=92928LLU, ._field_hi=92975LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=92992LLU, ._field_hi=92995LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=93027LLU, ._field_hi=93047LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=93053LLU, ._field_hi=93071LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=93760LLU, ._field_hi=93823LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=93952LLU, ._field_hi=94026LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=94032LLU, ._field_hi=94099LLU, ._field_stride=67LLU},_1a41c8343_Range32{._field_lo=94100LLU, ._field_hi=94111LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=94176LLU, ._field_hi=94177LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=94179LLU, ._field_hi=94208LLU, ._field_stride=29LLU},_1a41c8343_Range32{._field_lo=94209LLU, ._field_hi=100343LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=100352LLU, ._field_hi=101589LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=101632LLU, ._field_hi=101640LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=110576LLU, ._field_hi=110579LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=110581LLU, ._field_hi=110587LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=110589LLU, ._field_hi=110590LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=110592LLU, ._field_hi=110882LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=110898LLU, ._field_hi=110928LLU, ._field_stride=30LLU},_1a41c8343_Range32{._field_lo=110929LLU, ._field_hi=110930LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=110933LLU, ._field_hi=110948LLU, ._field_stride=15LLU},_1a41c8343_Range32{._field_lo=110949LLU, ._field_hi=110951LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=110960LLU, ._field_hi=111355LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=113664LLU, ._field_hi=113770LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=113776LLU, ._field_hi=113788LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=113792LLU, ._field_hi=113800LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=113808LLU, ._field_hi=113817LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=119808LLU, ._field_hi=119892LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=119894LLU, ._field_hi=119964LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=119966LLU, ._field_hi=119967LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=119970LLU, ._field_hi=119973LLU, ._field_stride=3LLU},_1a41c8343_Range32{._field_lo=119974LLU, ._field_hi=119977LLU, ._field_stride=3LLU},_1a41c8343_Range32{._field_lo=119978LLU, ._field_hi=119980LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=119982LLU, ._field_hi=119993LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=119995LLU, ._field_hi=119997LLU, ._field_stride=2LLU},_1a41c8343_Range32{._field_lo=119998LLU, ._field_hi=120003LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=120005LLU, ._field_hi=120069LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=120071LLU, ._field_hi=120074LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=120077LLU, ._field_hi=120084LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=120086LLU, ._field_hi=120092LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=120094LLU, ._field_hi=120121LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=120123LLU, ._field_hi=120126LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=120128LLU, ._field_hi=120132LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=120134LLU, ._field_hi=120138LLU, ._field_stride=4LLU},_1a41c8343_Range32{._field_lo=120139LLU, ._field_hi=120144LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=120146LLU, ._field_hi=120485LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=120488LLU, ._field_hi=120512LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=120514LLU, ._field_hi=120538LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=120540LLU, ._field_hi=120570LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=120572LLU, ._field_hi=120596LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=120598LLU, ._field_hi=120628LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=120630LLU, ._field_hi=120654LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=120656LLU, ._field_hi=120686LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=120688LLU, ._field_hi=120712LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=120714LLU, ._field_hi=120744LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=120746LLU, ._field_hi=120770LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=120772LLU, ._field_hi=120779LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=122624LLU, ._field_hi=122654LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=122661LLU, ._field_hi=122666LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=122928LLU, ._field_hi=122989LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=123136LLU, ._field_hi=123180LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=123191LLU, ._field_hi=123197LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=123214LLU, ._field_hi=123536LLU, ._field_stride=322LLU},_1a41c8343_Range32{._field_lo=123537LLU, ._field_hi=123565LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=123584LLU, ._field_hi=123627LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=124112LLU, ._field_hi=124139LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=124896LLU, ._field_hi=124902LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=124904LLU, ._field_hi=124907LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=124909LLU, ._field_hi=124910LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=124912LLU, ._field_hi=124926LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=124928LLU, ._field_hi=125124LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=125184LLU, ._field_hi=125251LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=125259LLU, ._field_hi=126464LLU, ._field_stride=1205LLU},_1a41c8343_Range32{._field_lo=126465LLU, ._field_hi=126467LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=126469LLU, ._field_hi=126495LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=126497LLU, ._field_hi=126498LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=126500LLU, ._field_hi=126503LLU, ._field_stride=3LLU},_1a41c8343_Range32{._field_lo=126505LLU, ._field_hi=126514LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=126516LLU, ._field_hi=126519LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=126521LLU, ._field_hi=126523LLU, ._field_stride=2LLU},_1a41c8343_Range32{._field_lo=126530LLU, ._field_hi=126535LLU, ._field_stride=5LLU},_1a41c8343_Range32{._field_lo=126537LLU, ._field_hi=126541LLU, ._field_stride=2LLU},_1a41c8343_Range32{._field_lo=126542LLU, ._field_hi=126543LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=126545LLU, ._field_hi=126546LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=126548LLU, ._field_hi=126551LLU, ._field_stride=3LLU},_1a41c8343_Range32{._field_lo=126553LLU, ._field_hi=126561LLU, ._field_stride=2LLU},_1a41c8343_Range32{._field_lo=126562LLU, ._field_hi=126564LLU, ._field_stride=2LLU},_1a41c8343_Range32{._field_lo=126567LLU, ._field_hi=126570LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=126572LLU, ._field_hi=126578LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=126580LLU, ._field_hi=126583LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=126585LLU, ._field_hi=126588LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=126590LLU, ._field_hi=126592LLU, ._field_stride=2LLU},_1a41c8343_Range32{._field_lo=126593LLU, ._field_hi=126601LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=126603LLU, ._field_hi=126619LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=126625LLU, ._field_hi=126627LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=126629LLU, ._field_hi=126633LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=126635LLU, ._field_hi=126651LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=131072LLU, ._field_hi=173791LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=173824LLU, ._field_hi=177977LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=177984LLU, ._field_hi=178205LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=178208LLU, ._field_hi=183969LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=183984LLU, ._field_hi=191456LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=194560LLU, ._field_hi=195101LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=196608LLU, ._field_hi=201546LLU, ._field_stride=1LLU},_1a41c8343_Range32{._field_lo=201552LLU, ._field_hi=205743LLU, ._field_stride=1LLU}}), ._field_latin_offset=6LL});
jule::Array<jule::Str,4> _1a429ea79_CPP_HEADER_EXTS = jule::Array<jule::Str,4>({jule::Str(".h", 2),jule::Str(".hpp", 4),jule::Str(".hxx", 4),jule::Str(".hh", 3)});
jule::Array<jule::Str,3> _1a4326518_CPP_EXTS = jule::Array<jule::Str,3>({jule::Str(".cpp", 4),jule::Str(".cc", 3),jule::Str(".cxx", 4)});
jule::Array<jule::Str,1> _1a42a06c3_OBJECTIVE_CPP_EXTS = jule::Array<jule::Str,1>({jule::Str(".mm", 3)});
jule::Array<jule::Str,3> _1a4337c33_DISTOS = jule::Array<jule::Str,3>({jule::Str("windows", 7),jule::Str("linux", 5),jule::Str("darwin", 6)});
jule::Array<jule::Str,3> _1a433800d_DISTARCH = jule::Array<jule::Str,3>({jule::Str("arm64", 5),jule::Str("amd64", 5),jule::Str("i386", 4)});
jule::Str _1a43483c5_PATH_STDLIB = jule::Str();
jule::Str _1a434776a_PATH_EXEC = jule::Str();
jule::Str _1a436ea06_PATH_WD = jule::Str();
jule::Str _1a43815a6_PATH_API = jule::Str();
jule::Array<jule::I32,5> _1a51c3d43_SPACES = jule::Array<jule::I32,5>({' ','\t','\v','\r','\n'});
jule::Array<jule::Str,6> _1a51c3eec_UNARY_OPS = jule::Array<jule::Str,6>({jule::Str("-", 1),jule::Str("+", 1),jule::Str("^", 1),jule::Str("!", 1),jule::Str("*", 1),jule::Str("&", 1)});
jule::Array<jule::Str,12> _1a51c4272_BIN_OPS = jule::Array<jule::Str,12>({jule::Str("+", 1),jule::Str("-", 1),jule::Str("*", 1),jule::Str("/", 1),jule::Str("%", 1),jule::Str("&", 1),jule::Str("|", 1),jule::Str("^", 1),jule::Str("<", 1),jule::Str(">", 1),jule::Str("&&", 2),jule::Str("||", 2)});
jule::Array<jule::Str,2> _1a527194b_POSTFIX_OPS = jule::Array<jule::Str,2>({jule::Str("++", 2),jule::Str("--", 2)});
jule::Array<jule::Str,11> _1a5271bc1_ASSING_OPS = jule::Array<jule::Str,11>({jule::Str("=", 1),jule::Str("+=", 2),jule::Str("-=", 2),jule::Str("/=", 2),jule::Str("*=", 2),jule::Str("%=", 2),jule::Str(">>=", 3),jule::Str("<<=", 3),jule::Str("|=", 2),jule::Str("&=", 2),jule::Str("^=", 2)});
jule::Array<_1a527e838_KindPair,47> _1a527ec12_KEYWORDS = jule::Array<_1a527e838_KindPair,47>({_1a527e838_KindPair{._field_kind=jule::Str("i8", 2), ._field_id=static_cast<jule::U64>(1LLU)},_1a527e838_KindPair{._field_kind=jule::Str("i16", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1a527e838_KindPair{._field_kind=jule::Str("i32", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1a527e838_KindPair{._field_kind=jule::Str("i64", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1a527e838_KindPair{._field_kind=jule::Str("u8", 2), ._field_id=static_cast<jule::U64>(1LLU)},_1a527e838_KindPair{._field_kind=jule::Str("u16", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1a527e838_KindPair{._field_kind=jule::Str("u32", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1a527e838_KindPair{._field_kind=jule::Str("u64", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1a527e838_KindPair{._field_kind=jule::Str("f32", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1a527e838_KindPair{._field_kind=jule::Str("f64", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1a527e838_KindPair{._field_kind=jule::Str("uint", 4), ._field_id=static_cast<jule::U64>(1LLU)},_1a527e838_KindPair{._field_kind=jule::Str("int", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1a527e838_KindPair{._field_kind=jule::Str("uintptr", 7), ._field_id=static_cast<jule::U64>(1LLU)},_1a527e838_KindPair{._field_kind=jule::Str("bool", 4), ._field_id=static_cast<jule::U64>(1LLU)},_1a527e838_KindPair{._field_kind=jule::Str("str", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1a527e838_KindPair{._field_kind=jule::Str("any", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1a527e838_KindPair{._field_kind=jule::Str("true", 4), ._field_id=static_cast<jule::U64>(6LLU)},_1a527e838_KindPair{._field_kind=jule::Str("false", 5), ._field_id=static_cast<jule::U64>(6LLU)},_1a527e838_KindPair{._field_kind=jule::Str("nil", 3), ._field_id=static_cast<jule::U64>(6LLU)},_1a527e838_KindPair{._field_kind=jule::Str("const", 5), ._field_id=static_cast<jule::U64>(9LLU)},_1a527e838_KindPair{._field_kind=jule::Str("ret", 3), ._field_id=static_cast<jule::U64>(4LLU)},_1a527e838_KindPair{._field_kind=jule::Str("type", 4), ._field_id=static_cast<jule::U64>(10LLU)},_1a527e838_KindPair{._field_kind=jule::Str("for", 3), ._field_id=static_cast<jule::U64>(12LLU)},_1a527e838_KindPair{._field_kind=jule::Str("break", 5), ._field_id=static_cast<jule::U64>(13LLU)},_1a527e838_KindPair{._field_kind=jule::Str("continue", 8), ._field_id=static_cast<jule::U64>(14LLU)},_1a527e838_KindPair{._field_kind=jule::Str("in", 2), ._field_id=static_cast<jule::U64>(15LLU)},_1a527e838_KindPair{._field_kind=jule::Str("if", 2), ._field_id=static_cast<jule::U64>(16LLU)},_1a527e838_KindPair{._field_kind=jule::Str("else", 4), ._field_id=static_cast<jule::U64>(17LLU)},_1a527e838_KindPair{._field_kind=jule::Str("use", 3), ._field_id=static_cast<jule::U64>(19LLU)},_1a527e838_KindPair{._field_kind=jule::Str("pub", 3), ._field_id=static_cast<jule::U64>(21LLU)},_1a527e838_KindPair{._field_kind=jule::Str("goto", 4), ._field_id=static_cast<jule::U64>(22LLU)},_1a527e838_KindPair{._field_kind=jule::Str("enum", 4), ._field_id=static_cast<jule::U64>(24LLU)},_1a527e838_KindPair{._field_kind=jule::Str("struct", 6), ._field_id=static_cast<jule::U64>(25LLU)},_1a527e838_KindPair{._field_kind=jule::Str("co", 2), ._field_id=static_cast<jule::U64>(26LLU)},_1a527e838_KindPair{._field_kind=jule::Str("match", 5), ._field_id=static_cast<jule::U64>(27LLU)},_1a527e838_KindPair{._field_kind=jule::Str("self", 4), ._field_id=static_cast<jule::U64>(28LLU)},_1a527e838_KindPair{._field_kind=jule::Str("trait", 5), ._field_id=static_cast<jule::U64>(29LLU)},_1a527e838_KindPair{._field_kind=jule::Str("impl", 4), ._field_id=static_cast<jule::U64>(30LLU)},_1a527e838_KindPair{._field_kind=jule::Str("cpp", 3), ._field_id=static_cast<jule::U64>(31LLU)},_1a527e838_KindPair{._field_kind=jule::Str("fall", 4), ._field_id=static_cast<jule::U64>(32LLU)},_1a527e838_KindPair{._field_kind=jule::Str("fn", 2), ._field_id=static_cast<jule::U64>(33LLU)},_1a527e838_KindPair{._field_kind=jule::Str("let", 3), ._field_id=static_cast<jule::U64>(34LLU)},_1a527e838_KindPair{._field_kind=jule::Str("unsafe", 6), ._field_id=static_cast<jule::U64>(35LLU)},_1a527e838_KindPair{._field_kind=jule::Str("mut", 3), ._field_id=static_cast<jule::U64>(36LLU)},_1a527e838_KindPair{._field_kind=jule::Str("defer", 5), ._field_id=static_cast<jule::U64>(37LLU)},_1a527e838_KindPair{._field_kind=jule::Str("static", 6), ._field_id=static_cast<jule::U64>(38LLU)},_1a527e838_KindPair{._field_kind=jule::Str("error", 5), ._field_id=static_cast<jule::U64>(40LLU)}});
jule::Array<_1a527e838_KindPair,39> _1a527eedc_BASIC_OPS = jule::Array<_1a527e838_KindPair,39>({_1a527e838_KindPair{._field_kind=jule::Str("::", 2), ._field_id=static_cast<jule::U64>(23LLU)},_1a527e838_KindPair{._field_kind=jule::Str(":", 1), ._field_id=static_cast<jule::U64>(11LLU)},_1a527e838_KindPair{._field_kind=jule::Str(";", 1), ._field_id=static_cast<jule::U64>(5LLU)},_1a527e838_KindPair{._field_kind=jule::Str(",", 1), ._field_id=static_cast<jule::U64>(8LLU)},_1a527e838_KindPair{._field_kind=jule::Str("...", 3), ._field_id=static_cast<jule::U64>(7LLU)},_1a527e838_KindPair{._field_kind=jule::Str(".", 1), ._field_id=static_cast<jule::U64>(20LLU)},_1a527e838_KindPair{._field_kind=jule::Str("+=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1a527e838_KindPair{._field_kind=jule::Str("-=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1a527e838_KindPair{._field_kind=jule::Str("*=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1a527e838_KindPair{._field_kind=jule::Str("/=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1a527e838_KindPair{._field_kind=jule::Str("%=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1a527e838_KindPair{._field_kind=jule::Str("<<=", 3), ._field_id=static_cast<jule::U64>(7LLU)},_1a527e838_KindPair{._field_kind=jule::Str(">>=", 3), ._field_id=static_cast<jule::U64>(7LLU)},_1a527e838_KindPair{._field_kind=jule::Str("^=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1a527e838_KindPair{._field_kind=jule::Str("&=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1a527e838_KindPair{._field_kind=jule::Str("|=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1a527e838_KindPair{._field_kind=jule::Str("==", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1a527e838_KindPair{._field_kind=jule::Str("!=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1a527e838_KindPair{._field_kind=jule::Str(">=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1a527e838_KindPair{._field_kind=jule::Str("<=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1a527e838_KindPair{._field_kind=jule::Str("&&", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1a527e838_KindPair{._field_kind=jule::Str("||", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1a527e838_KindPair{._field_kind=jule::Str("<<", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1a527e838_KindPair{._field_kind=jule::Str(">>", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1a527e838_KindPair{._field_kind=jule::Str("++", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1a527e838_KindPair{._field_kind=jule::Str("--", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1a527e838_KindPair{._field_kind=jule::Str("+", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1a527e838_KindPair{._field_kind=jule::Str("-", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1a527e838_KindPair{._field_kind=jule::Str("*", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1a527e838_KindPair{._field_kind=jule::Str("/", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1a527e838_KindPair{._field_kind=jule::Str("%", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1a527e838_KindPair{._field_kind=jule::Str("&", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1a527e838_KindPair{._field_kind=jule::Str("|", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1a527e838_KindPair{._field_kind=jule::Str("^", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1a527e838_KindPair{._field_kind=jule::Str("!", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1a527e838_KindPair{._field_kind=jule::Str("<", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1a527e838_KindPair{._field_kind=jule::Str(">", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1a527e838_KindPair{._field_kind=jule::Str("=", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1a527e838_KindPair{._field_kind=jule::Str("#", 1), ._field_id=static_cast<jule::U64>(39LLU)}});
jule::Array<jule::U8,32> _1a7501d83_DE_BRUIJN32_TAB = jule::Array<jule::U8,32>({0LLU,1LLU,28LLU,2LLU,29LLU,14LLU,24LLU,3LLU,30LLU,22LLU,20LLU,15LLU,25LLU,17LLU,4LLU,8LLU,31LLU,27LLU,13LLU,23LLU,21LLU,19LLU,16LLU,7LLU,26LLU,12LLU,18LLU,6LLU,11LLU,5LLU,10LLU,9LLU});
jule::Array<jule::U8,64> _1a750236c_DE_BRUIJN64_TAB = jule::Array<jule::U8,64>({0LLU,1LLU,56LLU,2LLU,57LLU,49LLU,28LLU,3LLU,61LLU,58LLU,42LLU,50LLU,38LLU,29LLU,17LLU,4LLU,62LLU,47LLU,59LLU,36LLU,45LLU,43LLU,51LLU,22LLU,53LLU,39LLU,33LLU,30LLU,24LLU,18LLU,12LLU,5LLU,63LLU,55LLU,48LLU,27LLU,60LLU,41LLU,37LLU,16LLU,46LLU,35LLU,44LLU,21LLU,52LLU,32LLU,23LLU,11LLU,54LLU,26LLU,40LLU,15LLU,34LLU,20LLU,31LLU,10LLU,25LLU,14LLU,19LLU,9LLU,13LLU,8LLU,7LLU,6LLU});
_1a72b4cde_FloatInfo _1a6d119e5_F32_INFO = _1a72b4cde_FloatInfo{._field_mantbits=23LLU, ._field_expbits=8LLU, ._field_bias=-127LL};
_1a72b4cde_FloatInfo _1a6d26983_F64_INFO = _1a72b4cde_FloatInfo{._field_mantbits=52LLU, ._field_expbits=11LLU, ._field_bias=-1023LL};
jule::Array<jule::Array<jule::U64,2>,696> _1a6d9c18a_DETAILED_POWS_OF_TEN = jule::Array<jule::Array<jule::U64,2>,696>({jule::Array<jule::U64,2>({1671618768450675795LLU,18054884314459144840LLU}),jule::Array<jule::U64,2>({1044761730281672372LLU,11284302696536965525LLU}),jule::Array<jule::U64,2>({5917638181279478369LLU,14105378370671206906LLU}),jule::Array<jule::U64,2>({16620419763454123769LLU,17631722963339008632LLU}),jule::Array<jule::U64,2>({10387762352158827356LLU,11019826852086880395LLU}),jule::Array<jule::U64,2>({8373016921771146291LLU,13774783565108600494LLU}),jule::Array<jule::U64,2>({1242899115359157055LLU,17218479456385750618LLU}),jule::Array<jule::U64,2>({5388497965526861063LLU,10761549660241094136LLU}),jule::Array<jule::U64,2>({6735622456908576329LLU,13451937075301367670LLU}),jule::Array<jule::U64,2>({17642900107990496220LLU,16814921344126709587LLU}),jule::Array<jule::U64,2>({8720969558280366185LLU,10509325840079193492LLU}),jule::Array<jule::U64,2>({10901211947850457732LLU,13136657300098991865LLU}),jule::Array<jule::U64,2>({18238200953240460069LLU,16420821625123739831LLU}),jule::Array<jule::U64,2>({18316404623416369399LLU,10263013515702337394LLU}),jule::Array<jule::U64,2>({13672133742415685941LLU,12828766894627921743LLU}),jule::Array<jule::U64,2>({12478481159592219522LLU,16035958618284902179LLU}),jule::Array<jule::U64,2>({5493207715531443249LLU,10022474136428063862LLU}),jule::Array<jule::U64,2>({16089881681269079869LLU,12528092670535079827LLU}),jule::Array<jule::U64,2>({15500666083158961933LLU,15660115838168849784LLU}),jule::Array<jule::U64,2>({9687916301974351208LLU,9787572398855531115LLU}),jule::Array<jule::U64,2>({7498209359040551106LLU,12234465498569413894LLU}),jule::Array<jule::U64,2>({149389661945913074LLU,15293081873211767368LLU}),jule::Array<jule::U64,2>({93368538716195671LLU,9558176170757354605LLU}),jule::Array<jule::U64,2>({4728396691822632493LLU,11947720213446693256LLU}),jule::Array<jule::U64,2>({5910495864778290617LLU,14934650266808366570LLU}),jule::Array<jule::U64,2>({8305745933913819539LLU,9334156416755229106LLU}),jule::Array<jule::U64,2>({1158810380537498616LLU,11667695520944036383LLU}),jule::Array<jule::U64,2>({15283571030954036982LLU,14584619401180045478LLU}),jule::Array<jule::U64,2>({9881091751837770420LLU,18230774251475056848LLU}),jule::Array<jule::U64,2>({6175682344898606512LLU,11394233907171910530LLU}),jule::Array<jule::U64,2>({16942974967978033949LLU,14242792383964888162LLU}),jule::Array<jule::U64,2>({11955346673117766628LLU,17803490479956110203LLU}),jule::Array<jule::U64,2>({5166248661484910190LLU,11127181549972568877LLU}),jule::Array<jule::U64,2>({11069496845283525642LLU,13908976937465711096LLU}),jule::Array<jule::U64,2>({13836871056604407053LLU,17386221171832138870LLU}),jule::Array<jule::U64,2>({4036358391950366504LLU,10866388232395086794LLU}),jule::Array<jule::U64,2>({14268820026792733938LLU,13582985290493858492LLU}),jule::Array<jule::U64,2>({17836025033490917422LLU,16978731613117323115LLU}),jule::Array<jule::U64,2>({8841672636718129437LLU,10611707258198326947LLU}),jule::Array<jule::U64,2>({6440404777470273892LLU,13264634072747908684LLU}),jule::Array<jule::U64,2>({8050505971837842365LLU,16580792590934885855LLU}),jule::Array<jule::U64,2>({11949095260039733334LLU,10362995369334303659LLU}),jule::Array<jule::U64,2>({10324683056622278764LLU,12953744211667879574LLU}),jule::Array<jule::U64,2>({3682481783923072647LLU,16192180264584849468LLU}),jule::Array<jule::U64,2>({11524923151806696212LLU,10120112665365530917LLU}),jule::Array<jule::U64,2>({571095884476206553LLU,12650140831706913647LLU}),jule::Array<jule::U64,2>({14548927910877421904LLU,15812676039633642058LLU}),jule::Array<jule::U64,2>({13704765962725776594LLU,9882922524771026286LLU}),jule::Array<jule::U64,2>({7907585416552444934LLU,12353653155963782858LLU}),jule::Array<jule::U64,2>({661109733835780360LLU,15442066444954728573LLU}),jule::Array<jule::U64,2>({2719036592861056677LLU,9651291528096705358LLU}),jule::Array<jule::U64,2>({12622167777931096654LLU,12064114410120881697LLU}),jule::Array<jule::U64,2>({1942651667131707105LLU,15080143012651102122LLU}),jule::Array<jule::U64,2>({5825843310384704845LLU,9425089382906938826LLU}),jule::Array<jule::U64,2>({16505676174835656864LLU,11781361728633673532LLU}),jule::Array<jule::U64,2>({2185351144835019464LLU,14726702160792091916LLU}),jule::Array<jule::U64,2>({2731688931043774330LLU,18408377700990114895LLU}),jule::Array<jule::U64,2>({8624834609543440812LLU,11505236063118821809LLU}),jule::Array<jule::U64,2>({15392729280356688919LLU,14381545078898527261LLU}),jule::Array<jule::U64,2>({5405853545163697437LLU,17976931348623159077LLU}),jule::Array<jule::U64,2>({5684501474941004850LLU,11235582092889474423LLU}),jule::Array<jule::U64,2>({2493940825248868159LLU,14044477616111843029LLU}),jule::Array<jule::U64,2>({7729112049988473103LLU,17555597020139803786LLU}),jule::Array<jule::U64,2>({9442381049670183593LLU,10972248137587377366LLU}),jule::Array<jule::U64,2>({2579604275232953683LLU,13715310171984221708LLU}),jule::Array<jule::U64,2>({3224505344041192104LLU,17144137714980277135LLU}),jule::Array<jule::U64,2>({8932844867666826921LLU,10715086071862673209LLU}),jule::Array<jule::U64,2>({15777742103010921555LLU,13393857589828341511LLU}),jule::Array<jule::U64,2>({15110491610336264040LLU,16742321987285426889LLU}),jule::Array<jule::U64,2>({2526528228819083169LLU,10463951242053391806LLU}),jule::Array<jule::U64,2>({12381532322878629770LLU,13079939052566739757LLU}),jule::Array<jule::U64,2>({1641857348316123500LLU,16349923815708424697LLU}),jule::Array<jule::U64,2>({12555375888766046947LLU,10218702384817765435LLU}),jule::Array<jule::U64,2>({11082533842530170780LLU,12773377981022206794LLU}),jule::Array<jule::U64,2>({4629795266307937667LLU,15966722476277758493LLU}),jule::Array<jule::U64,2>({5199465050656154994LLU,9979201547673599058LLU}),jule::Array<jule::U64,2>({15722703350174969551LLU,12474001934591998822LLU}),jule::Array<jule::U64,2>({10430007150863936130LLU,15592502418239998528LLU}),jule::Array<jule::U64,2>({6518754469289960081LLU,9745314011399999080LLU}),jule::Array<jule::U64,2>({8148443086612450102LLU,12181642514249998850LLU}),jule::Array<jule::U64,2>({962181821410786819LLU,15227053142812498563LLU}),jule::Array<jule::U64,2>({16742264702877599426LLU,9516908214257811601LLU}),jule::Array<jule::U64,2>({7092772823314835570LLU,11896135267822264502LLU}),jule::Array<jule::U64,2>({18089338065998320271LLU,14870169084777830627LLU}),jule::Array<jule::U64,2>({8999993282035256217LLU,9293855677986144142LLU}),jule::Array<jule::U64,2>({2026619565689294464LLU,11617319597482680178LLU}),jule::Array<jule::U64,2>({11756646493966393888LLU,14521649496853350222LLU}),jule::Array<jule::U64,2>({5472436080603216552LLU,18152061871066687778LLU}),jule::Array<jule::U64,2>({8031958568804398249LLU,11345038669416679861LLU}),jule::Array<jule::U64,2>({14651634229432885715LLU,14181298336770849826LLU}),jule::Array<jule::U64,2>({9091170749936331336LLU,17726622920963562283LLU}),jule::Array<jule::U64,2>({3376138709496513133LLU,11079139325602226427LLU}),jule::Array<jule::U64,2>({18055231442152805128LLU,13848924157002783033LLU}),jule::Array<jule::U64,2>({8733981247408842698LLU,17311155196253478792LLU}),jule::Array<jule::U64,2>({5458738279630526686LLU,10819471997658424245LLU}),jule::Array<jule::U64,2>({11435108867965546262LLU,13524339997073030306LLU}),jule::Array<jule::U64,2>({5070514048102157020LLU,16905424996341287883LLU}),jule::Array<jule::U64,2>({863228270850154185LLU,10565890622713304927LLU}),jule::Array<jule::U64,2>({14914093393844856443LLU,13207363278391631158LLU}),jule::Array<jule::U64,2>({9419244705451294746LLU,16509204097989538948LLU}),jule::Array<jule::U64,2>({15110399977761835024LLU,10318252561243461842LLU}),jule::Array<jule::U64,2>({9664627935347517973LLU,12897815701554327303LLU}),jule::Array<jule::U64,2>({7469098900757009562LLU,16122269626942909129LLU}),jule::Array<jule::U64,2>({16197401859041600736LLU,10076418516839318205LLU}),jule::Array<jule::U64,2>({6411694268519837208LLU,12595523146049147757LLU}),jule::Array<jule::U64,2>({12626303854077184414LLU,15744403932561434696LLU}),jule::Array<jule::U64,2>({7891439908798240259LLU,9840252457850896685LLU}),jule::Array<jule::U64,2>({14475985904425188227LLU,12300315572313620856LLU}),jule::Array<jule::U64,2>({18094982380531485284LLU,15375394465392026070LLU}),jule::Array<jule::U64,2>({6697677969404790399LLU,9609621540870016294LLU}),jule::Array<jule::U64,2>({17595469498610763806LLU,12012026926087520367LLU}),jule::Array<jule::U64,2>({17382650854836066854LLU,15015033657609400459LLU}),jule::Array<jule::U64,2>({8558313775058847832LLU,9384396036005875287LLU}),jule::Array<jule::U64,2>({6086206200396171886LLU,11730495045007344109LLU}),jule::Array<jule::U64,2>({12219443768922602761LLU,14663118806259180136LLU}),jule::Array<jule::U64,2>({15274304711153253452LLU,18328898507823975170LLU}),jule::Array<jule::U64,2>({14158126462898171311LLU,11455561567389984481LLU}),jule::Array<jule::U64,2>({3862600023340550427LLU,14319451959237480602LLU}),jule::Array<jule::U64,2>({14051622066030463842LLU,17899314949046850752LLU}),jule::Array<jule::U64,2>({8782263791269039901LLU,11187071843154281720LLU}),jule::Array<jule::U64,2>({10977829739086299876LLU,13983839803942852150LLU}),jule::Array<jule::U64,2>({4498915137003099037LLU,17479799754928565188LLU}),jule::Array<jule::U64,2>({12035193997481712706LLU,10924874846830353242LLU}),jule::Array<jule::U64,2>({5820620459997365075LLU,13656093558537941553LLU}),jule::Array<jule::U64,2>({11887461593424094248LLU,17070116948172426941LLU}),jule::Array<jule::U64,2>({9735506505103752857LLU,10668823092607766838LLU}),jule::Array<jule::U64,2>({2946011094524915263LLU,13336028865759708548LLU}),jule::Array<jule::U64,2>({3682513868156144079LLU,16670036082199635685LLU}),jule::Array<jule::U64,2>({4607414176811284001LLU,10418772551374772303LLU}),jule::Array<jule::U64,2>({1147581702586717097LLU,13023465689218465379LLU}),jule::Array<jule::U64,2>({15269535183515560084LLU,16279332111523081723LLU}),jule::Array<jule::U64,2>({7237616480483531100LLU,10174582569701926077LLU}),jule::Array<jule::U64,2>({13658706619031801779LLU,12718228212127407596LLU}),jule::Array<jule::U64,2>({17073383273789752224LLU,15897785265159259495LLU}),jule::Array<jule::U64,2>({17588393573759676996LLU,9936115790724537184LLU}),jule::Array<jule::U64,2>({3538747893490044629LLU,12420144738405671481LLU}),jule::Array<jule::U64,2>({9035120885289943691LLU,15525180923007089351LLU}),jule::Array<jule::U64,2>({12564479580947296663LLU,9703238076879430844LLU}),jule::Array<jule::U64,2>({15705599476184120828LLU,12129047596099288555LLU}),jule::Array<jule::U64,2>({15020313326802763131LLU,15161309495124110694LLU}),jule::Array<jule::U64,2>({4776009810824339053LLU,9475818434452569184LLU}),jule::Array<jule::U64,2>({5970012263530423816LLU,11844773043065711480LLU}),jule::Array<jule::U64,2>({7462515329413029771LLU,14805966303832139350LLU}),jule::Array<jule::U64,2>({52386062455755702LLU,9253728939895087094LLU}),jule::Array<jule::U64,2>({9288854614924470436LLU,11567161174868858867LLU}),jule::Array<jule::U64,2>({6999382250228200141LLU,14458951468586073584LLU}),jule::Array<jule::U64,2>({8749227812785250177LLU,18073689335732591980LLU}),jule::Array<jule::U64,2>({14691639419845557168LLU,11296055834832869987LLU}),jule::Array<jule::U64,2>({13752863256379558556LLU,14120069793541087484LLU}),jule::Array<jule::U64,2>({17191079070474448196LLU,17650087241926359355LLU}),jule::Array<jule::U64,2>({8438581409832836170LLU,11031304526203974597LLU}),jule::Array<jule::U64,2>({15159912780718433117LLU,13789130657754968246LLU}),jule::Array<jule::U64,2>({9726518939043265588LLU,17236413322193710308LLU}),jule::Array<jule::U64,2>({15302446373756816800LLU,10772758326371068942LLU}),jule::Array<jule::U64,2>({9904685930341245193LLU,13465947907963836178LLU}),jule::Array<jule::U64,2>({3157485376071780683LLU,16832434884954795223LLU}),jule::Array<jule::U64,2>({8890957387685944783LLU,10520271803096747014LLU}),jule::Array<jule::U64,2>({1890324697752655170LLU,13150339753870933768LLU}),jule::Array<jule::U64,2>({2362905872190818963LLU,16437924692338667210LLU}),jule::Array<jule::U64,2>({6088502188546649756LLU,10273702932711667006LLU}),jule::Array<jule::U64,2>({16833999772538088003LLU,12842128665889583757LLU}),jule::Array<jule::U64,2>({7207441660390446292LLU,16052660832361979697LLU}),jule::Array<jule::U64,2>({16033866083812498692LLU,10032913020226237310LLU}),jule::Array<jule::U64,2>({10818960567910847557LLU,12541141275282796638LLU}),jule::Array<jule::U64,2>({4300328673033783639LLU,15676426594103495798LLU}),jule::Array<jule::U64,2>({16522763475928278486LLU,9797766621314684873LLU}),jule::Array<jule::U64,2>({6818396289628184396LLU,12247208276643356092LLU}),jule::Array<jule::U64,2>({8522995362035230495LLU,15309010345804195115LLU}),jule::Array<jule::U64,2>({3021029092058325107LLU,9568131466127621947LLU}),jule::Array<jule::U64,2>({17611344420355070096LLU,11960164332659527433LLU}),jule::Array<jule::U64,2>({8179122470161673908LLU,14950205415824409292LLU}),jule::Array<jule::U64,2>({14335323580705822000LLU,9343878384890255807LLU}),jule::Array<jule::U64,2>({13307468457454889596LLU,11679847981112819759LLU}),jule::Array<jule::U64,2>({12022649553391224092LLU,14599809976391024699LLU}),jule::Array<jule::U64,2>({10416625923311642211LLU,18249762470488780874LLU}),jule::Array<jule::U64,2>({11122077220497164286LLU,11406101544055488046LLU}),jule::Array<jule::U64,2>({4679224488766679549LLU,14257626930069360058LLU}),jule::Array<jule::U64,2>({15072402647813125244LLU,17822033662586700072LLU}),jule::Array<jule::U64,2>({9420251654883203278LLU,11138771039116687545LLU}),jule::Array<jule::U64,2>({16387000587031392001LLU,13923463798895859431LLU}),jule::Array<jule::U64,2>({15872064715361852097LLU,17404329748619824289LLU}),jule::Array<jule::U64,2>({3002511419460075705LLU,10877706092887390181LLU}),jule::Array<jule::U64,2>({8364825292752482535LLU,13597132616109237726LLU}),jule::Array<jule::U64,2>({1232659579085827361LLU,16996415770136547158LLU}),jule::Array<jule::U64,2>({14605470292210805812LLU,10622759856335341973LLU}),jule::Array<jule::U64,2>({4421779809981343554LLU,13278449820419177467LLU}),jule::Array<jule::U64,2>({915538744049291538LLU,16598062275523971834LLU}),jule::Array<jule::U64,2>({5183897733458195115LLU,10373788922202482396LLU}),jule::Array<jule::U64,2>({6479872166822743894LLU,12967236152753102995LLU}),jule::Array<jule::U64,2>({3488154190101041964LLU,16209045190941378744LLU}),jule::Array<jule::U64,2>({2180096368813151227LLU,10130653244338361715LLU}),jule::Array<jule::U64,2>({16560178516298602746LLU,12663316555422952143LLU}),jule::Array<jule::U64,2>({16088537126945865529LLU,15829145694278690179LLU}),jule::Array<jule::U64,2>({7749492695127472003LLU,9893216058924181362LLU}),jule::Array<jule::U64,2>({463493832054564196LLU,12366520073655226703LLU}),jule::Array<jule::U64,2>({14414425345350368957LLU,15458150092069033378LLU}),jule::Array<jule::U64,2>({13620701859271368502LLU,9661343807543145861LLU}),jule::Array<jule::U64,2>({3190819268807046916LLU,12076679759428932327LLU}),jule::Array<jule::U64,2>({17823582141290972357LLU,15095849699286165408LLU}),jule::Array<jule::U64,2>({11139738838306857723LLU,9434906062053853380LLU}),jule::Array<jule::U64,2>({13924673547883572154LLU,11793632577567316725LLU}),jule::Array<jule::U64,2>({3570783879572301480LLU,14742040721959145907LLU}),jule::Array<jule::U64,2>({18298537904747540562LLU,18427550902448932383LLU}),jule::Array<jule::U64,2>({18354115218108294707LLU,11517219314030582739LLU}),jule::Array<jule::U64,2>({18330958004207980480LLU,14396524142538228424LLU}),jule::Array<jule::U64,2>({4466953431550423984LLU,17995655178172785531LLU}),jule::Array<jule::U64,2>({486002885505321038LLU,11247284486357990957LLU}),jule::Array<jule::U64,2>({5219189625309039202LLU,14059105607947488696LLU}),jule::Array<jule::U64,2>({6523987031636299002LLU,17573882009934360870LLU}),jule::Array<jule::U64,2>({17912549950054850588LLU,10983676256208975543LLU}),jule::Array<jule::U64,2>({17779001419141175331LLU,13729595320261219429LLU}),jule::Array<jule::U64,2>({8388693718644305452LLU,17161994150326524287LLU}),jule::Array<jule::U64,2>({12160462601793772764LLU,10726246343954077679LLU}),jule::Array<jule::U64,2>({10588892233814828051LLU,13407807929942597099LLU}),jule::Array<jule::U64,2>({8624429273841147159LLU,16759759912428246374LLU}),jule::Array<jule::U64,2>({778582277723329070LLU,10474849945267653984LLU}),jule::Array<jule::U64,2>({973227847154161338LLU,13093562431584567480LLU}),jule::Array<jule::U64,2>({1216534808942701673LLU,16366953039480709350LLU}),jule::Array<jule::U64,2>({14595392310871352257LLU,10229345649675443343LLU}),jule::Array<jule::U64,2>({13632554370161802418LLU,12786682062094304179LLU}),jule::Array<jule::U64,2>({12429006944274865118LLU,15983352577617880224LLU}),jule::Array<jule::U64,2>({7768129340171790699LLU,9989595361011175140LLU}),jule::Array<jule::U64,2>({9710161675214738374LLU,12486994201263968925LLU}),jule::Array<jule::U64,2>({16749388112445810871LLU,15608742751579961156LLU}),jule::Array<jule::U64,2>({1244995533423855986LLU,9755464219737475723LLU}),jule::Array<jule::U64,2>({15391302472061983695LLU,12194330274671844653LLU}),jule::Array<jule::U64,2>({5404070034795315907LLU,15242912843339805817LLU}),jule::Array<jule::U64,2>({14906758817815542202LLU,9526820527087378635LLU}),jule::Array<jule::U64,2>({14021762503842039848LLU,11908525658859223294LLU}),jule::Array<jule::U64,2>({8303831092947774002LLU,14885657073574029118LLU}),jule::Array<jule::U64,2>({578208414664970847LLU,9303535670983768199LLU}),jule::Array<jule::U64,2>({14557818573613377271LLU,11629419588729710248LLU}),jule::Array<jule::U64,2>({18197273217016721589LLU,14536774485912137810LLU}),jule::Array<jule::U64,2>({13523219484416126178LLU,18170968107390172263LLU}),jule::Array<jule::U64,2>({15369541205401160717LLU,11356855067118857664LLU}),jule::Array<jule::U64,2>({765182433041899281LLU,14196068833898572081LLU}),jule::Array<jule::U64,2>({5568164059729762005LLU,17745086042373215101LLU}),jule::Array<jule::U64,2>({5785945546544795205LLU,11090678776483259438LLU}),jule::Array<jule::U64,2>({16455803970035769814LLU,13863348470604074297LLU}),jule::Array<jule::U64,2>({6734696907262548556LLU,17329185588255092872LLU}),jule::Array<jule::U64,2>({4209185567039092847LLU,10830740992659433045LLU}),jule::Array<jule::U64,2>({9873167977226253963LLU,13538426240824291306LLU}),jule::Array<jule::U64,2>({3118087934678041646LLU,16923032801030364133LLU}),jule::Array<jule::U64,2>({4254647968387469981LLU,10576895500643977583LLU}),jule::Array<jule::U64,2>({706623942056949572LLU,13221119375804971979LLU}),jule::Array<jule::U64,2>({14718337982853350677LLU,16526399219756214973LLU}),jule::Array<jule::U64,2>({11504804248497038125LLU,10328999512347634358LLU}),jule::Array<jule::U64,2>({5157633273766521849LLU,12911249390434542948LLU}),jule::Array<jule::U64,2>({6447041592208152311LLU,16139061738043178685LLU}),jule::Array<jule::U64,2>({6335244004343789146LLU,10086913586276986678LLU}),jule::Array<jule::U64,2>({17142427042284512241LLU,12608641982846233347LLU}),jule::Array<jule::U64,2>({16816347784428252397LLU,15760802478557791684LLU}),jule::Array<jule::U64,2>({1286845328412881940LLU,9850501549098619803LLU}),jule::Array<jule::U64,2>({15443614715798266137LLU,12313126936373274753LLU}),jule::Array<jule::U64,2>({5469460339465668959LLU,15391408670466593442LLU}),jule::Array<jule::U64,2>({8030098730593431003LLU,9619630419041620901LLU}),jule::Array<jule::U64,2>({14649309431669176658LLU,12024538023802026126LLU}),jule::Array<jule::U64,2>({9088264752731695015LLU,15030672529752532658LLU}),jule::Array<jule::U64,2>({10291851488884697288LLU,9394170331095332911LLU}),jule::Array<jule::U64,2>({8253128342678483706LLU,11742712913869166139LLU}),jule::Array<jule::U64,2>({5704724409920716729LLU,14678391142336457674LLU}),jule::Array<jule::U64,2>({16354277549255671720LLU,18347988927920572092LLU}),jule::Array<jule::U64,2>({998051431430019017LLU,11467493079950357558LLU}),jule::Array<jule::U64,2>({10470936326142299579LLU,14334366349937946947LLU}),jule::Array<jule::U64,2>({8476984389250486570LLU,17917957937422433684LLU}),jule::Array<jule::U64,2>({14521487280136329914LLU,11198723710889021052LLU}),jule::Array<jule::U64,2>({18151859100170412392LLU,13998404638611276315LLU}),jule::Array<jule::U64,2>({18078137856785627587LLU,17498005798264095394LLU}),jule::Array<jule::U64,2>({15910522178918405146LLU,10936253623915059621LLU}),jule::Array<jule::U64,2>({6053094668365842720LLU,13670317029893824527LLU}),jule::Array<jule::U64,2>({2954682317029915496LLU,17087896287367280659LLU}),jule::Array<jule::U64,2>({17987577512639554849LLU,10679935179604550411LLU}),jule::Array<jule::U64,2>({17872785872372055657LLU,13349918974505688014LLU}),jule::Array<jule::U64,2>({13117610303610293764LLU,16687398718132110018LLU}),jule::Array<jule::U64,2>({12810192458183821506LLU,10429624198832568761LLU}),jule::Array<jule::U64,2>({2177682517447613171LLU,13037030248540710952LLU}),jule::Array<jule::U64,2>({2722103146809516464LLU,16296287810675888690LLU}),jule::Array<jule::U64,2>({6313000485183335694LLU,10185179881672430431LLU}),jule::Array<jule::U64,2>({3279564588051781713LLU,12731474852090538039LLU}),jule::Array<jule::U64,2>({17934513790346890853LLU,15914343565113172548LLU}),jule::Array<jule::U64,2>({1985699082112030975LLU,9946464728195732843LLU}),jule::Array<jule::U64,2>({16317181907922202431LLU,12433080910244666053LLU}),jule::Array<jule::U64,2>({6561419329620589327LLU,15541351137805832567LLU}),jule::Array<jule::U64,2>({11018416108653950185LLU,9713344461128645354LLU}),jule::Array<jule::U64,2>({4549648098962661924LLU,12141680576410806693LLU}),jule::Array<jule::U64,2>({10298746142130715309LLU,15177100720513508366LLU}),jule::Array<jule::U64,2>({1825030320404309164LLU,9485687950320942729LLU}),jule::Array<jule::U64,2>({6892973918932774359LLU,11857109937901178411LLU}),jule::Array<jule::U64,2>({4004531380238580045LLU,14821387422376473014LLU}),jule::Array<jule::U64,2>({16337890167931276240LLU,9263367138985295633LLU}),jule::Array<jule::U64,2>({6587304654631931588LLU,11579208923731619542LLU}),jule::Array<jule::U64,2>({17457502855144690293LLU,14474011154664524427LLU}),jule::Array<jule::U64,2>({17210192550503474962LLU,18092513943330655534LLU}),jule::Array<jule::U64,2>({6144684325637283947LLU,11307821214581659709LLU}),jule::Array<jule::U64,2>({12292541425473992838LLU,14134776518227074636LLU}),jule::Array<jule::U64,2>({15365676781842491048LLU,17668470647783843295LLU}),jule::Array<jule::U64,2>({16521077016292638761LLU,11042794154864902059LLU}),jule::Array<jule::U64,2>({16039660251938410547LLU,13803492693581127574LLU}),jule::Array<jule::U64,2>({10826203278068237376LLU,17254365866976409468LLU}),jule::Array<jule::U64,2>({15989749085647424168LLU,10783978666860255917LLU}),jule::Array<jule::U64,2>({6152128301777116498LLU,13479973333575319897LLU}),jule::Array<jule::U64,2>({12301846395648783526LLU,16849966666969149871LLU}),jule::Array<jule::U64,2>({14606183024921571560LLU,10531229166855718669LLU}),jule::Array<jule::U64,2>({4422670725869800738LLU,13164036458569648337LLU}),jule::Array<jule::U64,2>({10140024425764638826LLU,16455045573212060421LLU}),jule::Array<jule::U64,2>({8643358275316593218LLU,10284403483257537763LLU}),jule::Array<jule::U64,2>({6192511825718353619LLU,12855504354071922204LLU}),jule::Array<jule::U64,2>({7740639782147942024LLU,16069380442589902755LLU}),jule::Array<jule::U64,2>({2532056854628769813LLU,10043362776618689222LLU}),jule::Array<jule::U64,2>({12388443105140738074LLU,12554203470773361527LLU}),jule::Array<jule::U64,2>({10873867862998534689LLU,15692754338466701909LLU}),jule::Array<jule::U64,2>({9102010423587778132LLU,9807971461541688693LLU}),jule::Array<jule::U64,2>({15989199047912110569LLU,12259964326927110866LLU}),jule::Array<jule::U64,2>({10763126773035362404LLU,15324955408658888583LLU}),jule::Array<jule::U64,2>({13644483260788183358LLU,9578097130411805364LLU}),jule::Array<jule::U64,2>({17055604075985229198LLU,11972621413014756705LLU}),jule::Array<jule::U64,2>({7484447039699372786LLU,14965776766268445882LLU}),jule::Array<jule::U64,2>({9289465418239495895LLU,9353610478917778676LLU}),jule::Array<jule::U64,2>({11611831772799369869LLU,11692013098647223345LLU}),jule::Array<jule::U64,2>({679731660717048624LLU,14615016373309029182LLU}),jule::Array<jule::U64,2>({10073036612751086588LLU,18268770466636286477LLU}),jule::Array<jule::U64,2>({8601490892183123069LLU,11417981541647679048LLU}),jule::Array<jule::U64,2>({10751863615228903837LLU,14272476927059598810LLU}),jule::Array<jule::U64,2>({4216457482181353988LLU,17840596158824498513LLU}),jule::Array<jule::U64,2>({14164500972431816002LLU,11150372599265311570LLU}),jule::Array<jule::U64,2>({8482254178684994195LLU,13937965749081639463LLU}),jule::Array<jule::U64,2>({5991131704928854840LLU,17422457186352049329LLU}),jule::Array<jule::U64,2>({15273672361649004035LLU,10889035741470030830LLU}),jule::Array<jule::U64,2>({9868718415206479236LLU,13611294676837538538LLU}),jule::Array<jule::U64,2>({3112525982153323237LLU,17014118346046923173LLU}),jule::Array<jule::U64,2>({4251171748059520975LLU,10633823966279326983LLU}),jule::Array<jule::U64,2>({702278666647013314LLU,13292279957849158729LLU}),jule::Array<jule::U64,2>({5489534351736154547LLU,16615349947311448411LLU}),jule::Array<jule::U64,2>({1125115960621402640LLU,10384593717069655257LLU}),jule::Array<jule::U64,2>({6018080969204141204LLU,12980742146337069071LLU}),jule::Array<jule::U64,2>({2910915193077788601LLU,16225927682921336339LLU}),jule::Array<jule::U64,2>({17960223060169475539LLU,10141204801825835211LLU}),jule::Array<jule::U64,2>({17838592806784456520LLU,12676506002282294014LLU}),jule::Array<jule::U64,2>({13074868971625794843LLU,15845632502852867518LLU}),jule::Array<jule::U64,2>({3560107088838733872LLU,9903520314283042199LLU}),jule::Array<jule::U64,2>({18285191916330581053LLU,12379400392853802748LLU}),jule::Array<jule::U64,2>({4409745821703674700LLU,15474250491067253436LLU}),jule::Array<jule::U64,2>({11979463175419572495LLU,9671406556917033397LLU}),jule::Array<jule::U64,2>({1139270913992301907LLU,12089258196146291747LLU}),jule::Array<jule::U64,2>({15259146697772541096LLU,15111572745182864683LLU}),jule::Array<jule::U64,2>({7231123676894144233LLU,9444732965739290427LLU}),jule::Array<jule::U64,2>({4427218577690292387LLU,11805916207174113034LLU}),jule::Array<jule::U64,2>({14757395258967641292LLU,14757395258967641292LLU}),jule::Array<jule::U64,2>({0LLU,9223372036854775808LLU}),jule::Array<jule::U64,2>({0LLU,11529215046068469760LLU}),jule::Array<jule::U64,2>({0LLU,14411518807585587200LLU}),jule::Array<jule::U64,2>({0LLU,18014398509481984000LLU}),jule::Array<jule::U64,2>({0LLU,11258999068426240000LLU}),jule::Array<jule::U64,2>({0LLU,14073748835532800000LLU}),jule::Array<jule::U64,2>({0LLU,17592186044416000000LLU}),jule::Array<jule::U64,2>({0LLU,10995116277760000000LLU}),jule::Array<jule::U64,2>({0LLU,13743895347200000000LLU}),jule::Array<jule::U64,2>({0LLU,17179869184000000000LLU}),jule::Array<jule::U64,2>({0LLU,10737418240000000000LLU}),jule::Array<jule::U64,2>({0LLU,13421772800000000000LLU}),jule::Array<jule::U64,2>({0LLU,16777216000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10485760000000000000LLU}),jule::Array<jule::U64,2>({0LLU,13107200000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16384000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10240000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12800000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12500000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,15625000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,9765625000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12207031250000000000LLU}),jule::Array<jule::U64,2>({0LLU,15258789062500000000LLU}),jule::Array<jule::U64,2>({0LLU,9536743164062500000LLU}),jule::Array<jule::U64,2>({0LLU,11920928955078125000LLU}),jule::Array<jule::U64,2>({0LLU,14901161193847656250LLU}),jule::Array<jule::U64,2>({4611686018427387904LLU,9313225746154785156LLU}),jule::Array<jule::U64,2>({5764607523034234880LLU,11641532182693481445LLU}),jule::Array<jule::U64,2>({11817445422220181504LLU,14551915228366851806LLU}),jule::Array<jule::U64,2>({5548434740920451072LLU,18189894035458564758LLU}),jule::Array<jule::U64,2>({17302829768357445632LLU,11368683772161602973LLU}),jule::Array<jule::U64,2>({7793479155164643328LLU,14210854715202003717LLU}),jule::Array<jule::U64,2>({14353534962383192064LLU,17763568394002504646LLU}),jule::Array<jule::U64,2>({4359273333062107136LLU,11102230246251565404LLU}),jule::Array<jule::U64,2>({5449091666327633920LLU,13877787807814456755LLU}),jule::Array<jule::U64,2>({2199678564482154496LLU,17347234759768070944LLU}),jule::Array<jule::U64,2>({1374799102801346560LLU,10842021724855044340LLU}),jule::Array<jule::U64,2>({1718498878501683200LLU,13552527156068805425LLU}),jule::Array<jule::U64,2>({6759809616554491904LLU,16940658945086006781LLU}),jule::Array<jule::U64,2>({6530724019560251392LLU,10587911840678754238LLU}),jule::Array<jule::U64,2>({17386777061305090048LLU,13234889800848442797LLU}),jule::Array<jule::U64,2>({7898413271349198848LLU,16543612251060553497LLU}),jule::Array<jule::U64,2>({16465723340661719040LLU,10339757656912845935LLU}),jule::Array<jule::U64,2>({15970468157399760896LLU,12924697071141057419LLU}),jule::Array<jule::U64,2>({15351399178322313216LLU,16155871338926321774LLU}),jule::Array<jule::U64,2>({4982938468024057856LLU,10097419586828951109LLU}),jule::Array<jule::U64,2>({10840359103457460224LLU,12621774483536188886LLU}),jule::Array<jule::U64,2>({4327076842467049472LLU,15777218104420236108LLU}),jule::Array<jule::U64,2>({11927795063396681728LLU,9860761315262647567LLU}),jule::Array<jule::U64,2>({10298057810818464256LLU,12325951644078309459LLU}),jule::Array<jule::U64,2>({8260886245095692416LLU,15407439555097886824LLU}),jule::Array<jule::U64,2>({5163053903184807760LLU,9629649721936179265LLU}),jule::Array<jule::U64,2>({11065503397408397604LLU,12037062152420224081LLU}),jule::Array<jule::U64,2>({18443565265187884909LLU,15046327690525280101LLU}),jule::Array<jule::U64,2>({13833071299956122020LLU,9403954806578300063LLU}),jule::Array<jule::U64,2>({12679653106517764621LLU,11754943508222875079LLU}),jule::Array<jule::U64,2>({11237880364719817872LLU,14693679385278593849LLU}),jule::Array<jule::U64,2>({212292400617608628LLU,18367099231598242312LLU}),jule::Array<jule::U64,2>({132682750386005392LLU,11479437019748901445LLU}),jule::Array<jule::U64,2>({4777539456409894645LLU,14349296274686126806LLU}),jule::Array<jule::U64,2>({15195296357367144114LLU,17936620343357658507LLU}),jule::Array<jule::U64,2>({7191217214140771119LLU,11210387714598536567LLU}),jule::Array<jule::U64,2>({4377335499248575995LLU,14012984643248170709LLU}),jule::Array<jule::U64,2>({10083355392488107898LLU,17516230804060213386LLU}),jule::Array<jule::U64,2>({10913783138732455340LLU,10947644252537633366LLU}),jule::Array<jule::U64,2>({4418856886560793367LLU,13684555315672041708LLU}),jule::Array<jule::U64,2>({5523571108200991709LLU,17105694144590052135LLU}),jule::Array<jule::U64,2>({10369760970266701674LLU,10691058840368782584LLU}),jule::Array<jule::U64,2>({12962201212833377092LLU,13363823550460978230LLU}),jule::Array<jule::U64,2>({6979379479186945558LLU,16704779438076222788LLU}),jule::Array<jule::U64,2>({13585484211346616781LLU,10440487148797639242LLU}),jule::Array<jule::U64,2>({7758483227328495169LLU,13050608935997049053LLU}),jule::Array<jule::U64,2>({14309790052588006865LLU,16313261169996311316LLU}),jule::Array<jule::U64,2>({18166990819722280098LLU,10195788231247694572LLU}),jule::Array<jule::U64,2>({4261994450943298507LLU,12744735289059618216LLU}),jule::Array<jule::U64,2>({5327493063679123134LLU,15930919111324522770LLU}),jule::Array<jule::U64,2>({7941369183226839863LLU,9956824444577826731LLU}),jule::Array<jule::U64,2>({5315025460606161924LLU,12446030555722283414LLU}),jule::Array<jule::U64,2>({15867153862612478214LLU,15557538194652854267LLU}),jule::Array<jule::U64,2>({7611128154919104931LLU,9723461371658033917LLU}),jule::Array<jule::U64,2>({14125596212076269068LLU,12154326714572542396LLU}),jule::Array<jule::U64,2>({17656995265095336336LLU,15192908393215677995LLU}),jule::Array<jule::U64,2>({8729779031470891258LLU,9495567745759798747LLU}),jule::Array<jule::U64,2>({6300537770911226168LLU,11869459682199748434LLU}),jule::Array<jule::U64,2>({17099044250493808518LLU,14836824602749685542LLU}),jule::Array<jule::U64,2>({6075216638131242420LLU,9273015376718553464LLU}),jule::Array<jule::U64,2>({7594020797664053025LLU,11591269220898191830LLU}),jule::Array<jule::U64,2>({269153960225290473LLU,14489086526122739788LLU}),jule::Array<jule::U64,2>({336442450281613091LLU,18111358157653424735LLU}),jule::Array<jule::U64,2>({7127805559067090038LLU,11319598848533390459LLU}),jule::Array<jule::U64,2>({4298070930406474644LLU,14149498560666738074LLU}),jule::Array<jule::U64,2>({14595960699862869113LLU,17686873200833422592LLU}),jule::Array<jule::U64,2>({9122475437414293195LLU,11054295750520889120LLU}),jule::Array<jule::U64,2>({11403094296767866494LLU,13817869688151111400LLU}),jule::Array<jule::U64,2>({14253867870959833118LLU,17272337110188889250LLU}),jule::Array<jule::U64,2>({13520353437777283602LLU,10795210693868055781LLU}),jule::Array<jule::U64,2>({3065383741939440791LLU,13494013367335069727LLU}),jule::Array<jule::U64,2>({17666787732706464701LLU,16867516709168837158LLU}),jule::Array<jule::U64,2>({6430056314514152534LLU,10542197943230523224LLU}),jule::Array<jule::U64,2>({8037570393142690668LLU,13177747429038154030LLU}),jule::Array<jule::U64,2>({823590954573587527LLU,16472184286297692538LLU}),jule::Array<jule::U64,2>({5126430365035880108LLU,10295115178936057836LLU}),jule::Array<jule::U64,2>({6408037956294850135LLU,12868893973670072295LLU}),jule::Array<jule::U64,2>({3398361426941174765LLU,16086117467087590369LLU}),jule::Array<jule::U64,2>({13653190937906703988LLU,10053823416929743980LLU}),jule::Array<jule::U64,2>({17066488672383379985LLU,12567279271162179975LLU}),jule::Array<jule::U64,2>({16721424822051837077LLU,15709099088952724969LLU}),jule::Array<jule::U64,2>({3533361486141316317LLU,9818186930595453106LLU}),jule::Array<jule::U64,2>({13640073894531421205LLU,12272733663244316382LLU}),jule::Array<jule::U64,2>({7826720331309500698LLU,15340917079055395478LLU}),jule::Array<jule::U64,2>({280014188641050032LLU,9588073174409622174LLU}),jule::Array<jule::U64,2>({9573389772656088348LLU,11985091468012027717LLU}),jule::Array<jule::U64,2>({16578423234247498339LLU,14981364335015034646LLU}),jule::Array<jule::U64,2>({5749828502977298558LLU,9363352709384396654LLU}),jule::Array<jule::U64,2>({16410657665576399005LLU,11704190886730495817LLU}),jule::Array<jule::U64,2>({6678264026688335045LLU,14630238608413119772LLU}),jule::Array<jule::U64,2>({8347830033360418806LLU,18287798260516399715LLU}),jule::Array<jule::U64,2>({2911550761636567802LLU,11429873912822749822LLU}),jule::Array<jule::U64,2>({12862810488900485560LLU,14287342391028437277LLU}),jule::Array<jule::U64,2>({2243455055843443238LLU,17859177988785546597LLU}),jule::Array<jule::U64,2>({3708002419115845976LLU,11161986242990966623LLU}),jule::Array<jule::U64,2>({23317005467419566LLU,13952482803738708279LLU}),jule::Array<jule::U64,2>({13864204312116438170LLU,17440603504673385348LLU}),jule::Array<jule::U64,2>({17888499731927549664LLU,10900377190420865842LLU}),jule::Array<jule::U64,2>({13137252628054661272LLU,13625471488026082303LLU}),jule::Array<jule::U64,2>({11809879766640938686LLU,17031839360032602879LLU}),jule::Array<jule::U64,2>({14298703881791668535LLU,10644899600020376799LLU}),jule::Array<jule::U64,2>({13261693833812197764LLU,13306124500025470999LLU}),jule::Array<jule::U64,2>({11965431273837859301LLU,16632655625031838749LLU}),jule::Array<jule::U64,2>({9784237555362356015LLU,10395409765644899218LLU}),jule::Array<jule::U64,2>({3006924907348169211LLU,12994262207056124023LLU}),jule::Array<jule::U64,2>({17593714189467375226LLU,16242827758820155028LLU}),jule::Array<jule::U64,2>({1772699331562333708LLU,10151767349262596893LLU}),jule::Array<jule::U64,2>({6827560182880305039LLU,12689709186578246116LLU}),jule::Array<jule::U64,2>({8534450228600381299LLU,15862136483222807645LLU}),jule::Array<jule::U64,2>({7639874402088932264LLU,9913835302014254778LLU}),jule::Array<jule::U64,2>({326470965756389522LLU,12392294127517818473LLU}),jule::Array<jule::U64,2>({5019774725622874806LLU,15490367659397273091LLU}),jule::Array<jule::U64,2>({831516194300602802LLU,9681479787123295682LLU}),jule::Array<jule::U64,2>({10262767279730529310LLU,12101849733904119602LLU}),jule::Array<jule::U64,2>({3605087062808385830LLU,15127312167380149503LLU}),jule::Array<jule::U64,2>({9170708441896323000LLU,9454570104612593439LLU}),jule::Array<jule::U64,2>({6851699533943015846LLU,11818212630765741799LLU}),jule::Array<jule::U64,2>({3952938399001381903LLU,14772765788457177249LLU}),jule::Array<jule::U64,2>({13999801545444333449LLU,9232978617785735780LLU}),jule::Array<jule::U64,2>({17499751931805416812LLU,11541223272232169725LLU}),jule::Array<jule::U64,2>({8039631859474607303LLU,14426529090290212157LLU}),jule::Array<jule::U64,2>({14661225842770647033LLU,18033161362862765196LLU}),jule::Array<jule::U64,2>({18386638188586430203LLU,11270725851789228247LLU}),jule::Array<jule::U64,2>({18371611717305649850LLU,14088407314736535309LLU}),jule::Array<jule::U64,2>({9129456591349898601LLU,17610509143420669137LLU}),jule::Array<jule::U64,2>({17235125415662156385LLU,11006568214637918210LLU}),jule::Array<jule::U64,2>({12320534732722919674LLU,13758210268297397763LLU}),jule::Array<jule::U64,2>({10788982397476261688LLU,17197762835371747204LLU}),jule::Array<jule::U64,2>({15966486035277439363LLU,10748601772107342002LLU}),jule::Array<jule::U64,2>({10734735507242023396LLU,13435752215134177503LLU}),jule::Array<jule::U64,2>({8806733365625141341LLU,16794690268917721879LLU}),jule::Array<jule::U64,2>({12421737381156795194LLU,10496681418073576174LLU}),jule::Array<jule::U64,2>({6303799689591218185LLU,13120851772591970218LLU}),jule::Array<jule::U64,2>({17103121648843798539LLU,16401064715739962772LLU}),jule::Array<jule::U64,2>({1466078993672598279LLU,10250665447337476733LLU}),jule::Array<jule::U64,2>({6444284760518135752LLU,12813331809171845916LLU}),jule::Array<jule::U64,2>({8055355950647669691LLU,16016664761464807395LLU}),jule::Array<jule::U64,2>({2728754459941099604LLU,10010415475915504622LLU}),jule::Array<jule::U64,2>({12634315111781150314LLU,12513019344894380777LLU}),jule::Array<jule::U64,2>({1957835834444274180LLU,15641274181117975972LLU}),jule::Array<jule::U64,2>({10447019433382447170LLU,9775796363198734982LLU}),jule::Array<jule::U64,2>({3835402254873283155LLU,12219745453998418728LLU}),jule::Array<jule::U64,2>({4794252818591603944LLU,15274681817498023410LLU}),jule::Array<jule::U64,2>({7608094030047140369LLU,9546676135936264631LLU}),jule::Array<jule::U64,2>({4898431519131537557LLU,11933345169920330789LLU}),jule::Array<jule::U64,2>({10734725417341809851LLU,14916681462400413486LLU}),jule::Array<jule::U64,2>({2097517367411243253LLU,9322925914000258429LLU}),jule::Array<jule::U64,2>({7233582727691441970LLU,11653657392500323036LLU}),jule::Array<jule::U64,2>({9041978409614302462LLU,14567071740625403795LLU}),jule::Array<jule::U64,2>({6690786993590490174LLU,18208839675781754744LLU}),jule::Array<jule::U64,2>({4181741870994056359LLU,11380524797363596715LLU}),jule::Array<jule::U64,2>({615491320315182544LLU,14225655996704495894LLU}),jule::Array<jule::U64,2>({9992736187248753989LLU,17782069995880619867LLU}),jule::Array<jule::U64,2>({3939617107816777291LLU,11113793747425387417LLU}),jule::Array<jule::U64,2>({9536207403198359517LLU,13892242184281734271LLU}),jule::Array<jule::U64,2>({7308573235570561493LLU,17365302730352167839LLU}),jule::Array<jule::U64,2>({11485387299872682789LLU,10853314206470104899LLU}),jule::Array<jule::U64,2>({9745048106413465582LLU,13566642758087631124LLU}),jule::Array<jule::U64,2>({12181310133016831978LLU,16958303447609538905LLU}),jule::Array<jule::U64,2>({695789805494438130LLU,10598939654755961816LLU}),jule::Array<jule::U64,2>({869737256868047663LLU,13248674568444952270LLU}),jule::Array<jule::U64,2>({10310543607939835386LLU,16560843210556190337LLU}),jule::Array<jule::U64,2>({17973304801030866876LLU,10350527006597618960LLU}),jule::Array<jule::U64,2>({4019886927579031980LLU,12938158758247023701LLU}),jule::Array<jule::U64,2>({9636544677901177879LLU,16172698447808779626LLU}),jule::Array<jule::U64,2>({10634526442115624078LLU,10107936529880487266LLU}),jule::Array<jule::U64,2>({4069786015789754290LLU,12634920662350609083LLU}),jule::Array<jule::U64,2>({475546501309804958LLU,15793650827938261354LLU}),jule::Array<jule::U64,2>({4908902581746016003LLU,9871031767461413346LLU}),jule::Array<jule::U64,2>({15359500264037295811LLU,12338789709326766682LLU}),jule::Array<jule::U64,2>({9976003293191843956LLU,15423487136658458353LLU}),jule::Array<jule::U64,2>({17764217104313372233LLU,9639679460411536470LLU}),jule::Array<jule::U64,2>({12981899343536939483LLU,12049599325514420588LLU}),jule::Array<jule::U64,2>({16227374179421174354LLU,15061999156893025735LLU}),jule::Array<jule::U64,2>({17059637889779315827LLU,9413749473058141084LLU}),jule::Array<jule::U64,2>({2877803288514593168LLU,11767186841322676356LLU}),jule::Array<jule::U64,2>({3597254110643241460LLU,14708983551653345445LLU}),jule::Array<jule::U64,2>({9108253656731439729LLU,18386229439566681806LLU}),jule::Array<jule::U64,2>({1080972517029761926LLU,11491393399729176129LLU}),jule::Array<jule::U64,2>({5962901664714590312LLU,14364241749661470161LLU}),jule::Array<jule::U64,2>({12065313099320625794LLU,17955302187076837701LLU}),jule::Array<jule::U64,2>({9846663696289085073LLU,11222063866923023563LLU}),jule::Array<jule::U64,2>({7696643601933968437LLU,14027579833653779454LLU}),jule::Array<jule::U64,2>({397432465562684739LLU,17534474792067224318LLU}),jule::Array<jule::U64,2>({14083453346258841674LLU,10959046745042015198LLU}),jule::Array<jule::U64,2>({8380944645968776284LLU,13698808431302518998LLU}),jule::Array<jule::U64,2>({1252808770606194547LLU,17123510539128148748LLU}),jule::Array<jule::U64,2>({10006377518483647400LLU,10702194086955092967LLU}),jule::Array<jule::U64,2>({7896285879677171346LLU,13377742608693866209LLU}),jule::Array<jule::U64,2>({14482043368023852087LLU,16722178260867332761LLU}),jule::Array<jule::U64,2>({2133748077373825698LLU,10451361413042082976LLU}),jule::Array<jule::U64,2>({2667185096717282123LLU,13064201766302603720LLU}),jule::Array<jule::U64,2>({3333981370896602653LLU,16330252207878254650LLU}),jule::Array<jule::U64,2>({6695424375237764562LLU,10206407629923909156LLU}),jule::Array<jule::U64,2>({8369280469047205703LLU,12758009537404886445LLU}),jule::Array<jule::U64,2>({15073286604736395033LLU,15947511921756108056LLU}),jule::Array<jule::U64,2>({9420804127960246895LLU,9967194951097567535LLU}),jule::Array<jule::U64,2>({7164319141522920715LLU,12458993688871959419LLU}),jule::Array<jule::U64,2>({4343712908476262990LLU,15573742111089949274LLU}),jule::Array<jule::U64,2>({7326506586225052273LLU,9733588819431218296LLU}),jule::Array<jule::U64,2>({9158133232781315341LLU,12166986024289022870LLU}),jule::Array<jule::U64,2>({2224294504121868368LLU,15208732530361278588LLU}),jule::Array<jule::U64,2>({10613556101930943538LLU,9505457831475799117LLU}),jule::Array<jule::U64,2>({17878631145841067327LLU,11881822289344748896LLU}),jule::Array<jule::U64,2>({3901544858591782542LLU,14852277861680936121LLU}),jule::Array<jule::U64,2>({13967680582688333849LLU,9282673663550585075LLU}),jule::Array<jule::U64,2>({12847914709933029407LLU,11603342079438231344LLU}),jule::Array<jule::U64,2>({16059893387416286759LLU,14504177599297789180LLU}),jule::Array<jule::U64,2>({1628122660560806833LLU,18130221999122236476LLU}),jule::Array<jule::U64,2>({10240948699705280078LLU,11331388749451397797LLU}),jule::Array<jule::U64,2>({17412871893058988002LLU,14164235936814247246LLU}),jule::Array<jule::U64,2>({12542717829468959195LLU,17705294921017809058LLU}),jule::Array<jule::U64,2>({12450884661845487401LLU,11065809325636130661LLU}),jule::Array<jule::U64,2>({1728547772024695539LLU,13832261657045163327LLU}),jule::Array<jule::U64,2>({15995742770313033136LLU,17290327071306454158LLU}),jule::Array<jule::U64,2>({5385653213018257806LLU,10806454419566533849LLU}),jule::Array<jule::U64,2>({11343752534700210161LLU,13508068024458167311LLU}),jule::Array<jule::U64,2>({9568004649947874797LLU,16885085030572709139LLU}),jule::Array<jule::U64,2>({3674159897003727796LLU,10553178144107943212LLU}),jule::Array<jule::U64,2>({4592699871254659745LLU,13191472680134929015LLU}),jule::Array<jule::U64,2>({1129188820640936778LLU,16489340850168661269LLU}),jule::Array<jule::U64,2>({3011586022114279438LLU,10305838031355413293LLU}),jule::Array<jule::U64,2>({8376168546070237202LLU,12882297539194266616LLU}),jule::Array<jule::U64,2>({10470210682587796502LLU,16102871923992833270LLU}),jule::Array<jule::U64,2>({1932195658189984910LLU,10064294952495520794LLU}),jule::Array<jule::U64,2>({11638616609592256945LLU,12580368690619400992LLU}),jule::Array<jule::U64,2>({14548270761990321182LLU,15725460863274251240LLU}),jule::Array<jule::U64,2>({9092669226243950738LLU,9828413039546407025LLU}),jule::Array<jule::U64,2>({15977522551232326327LLU,12285516299433008781LLU}),jule::Array<jule::U64,2>({6136845133758244197LLU,15356895374291260977LLU}),jule::Array<jule::U64,2>({15364743254667372383LLU,9598059608932038110LLU}),jule::Array<jule::U64,2>({9982557031479439671LLU,11997574511165047638LLU}),jule::Array<jule::U64,2>({3254824252494523781LLU,14996968138956309548LLU}),jule::Array<jule::U64,2>({11257637194663853171LLU,9373105086847693467LLU}),jule::Array<jule::U64,2>({9460360474902428559LLU,11716381358559616834LLU}),jule::Array<jule::U64,2>({2602078556773259891LLU,14645476698199521043LLU}),jule::Array<jule::U64,2>({17087656251248738576LLU,18306845872749401303LLU}),jule::Array<jule::U64,2>({17597314184671543466LLU,11441778670468375814LLU}),jule::Array<jule::U64,2>({12773270693984653525LLU,14302223338085469768LLU}),jule::Array<jule::U64,2>({15966588367480816906LLU,17877779172606837210LLU}),jule::Array<jule::U64,2>({14590803748102898470LLU,11173611982879273256LLU}),jule::Array<jule::U64,2>({18238504685128623088LLU,13967014978599091570LLU}),jule::Array<jule::U64,2>({13574758819556003052LLU,17458768723248864463LLU}),jule::Array<jule::U64,2>({15401753289863583763LLU,10911730452030540289LLU}),jule::Array<jule::U64,2>({5417133557047315992LLU,13639663065038175362LLU}),jule::Array<jule::U64,2>({15994788983163920798LLU,17049578831297719202LLU}),jule::Array<jule::U64,2>({14608429132904838403LLU,10655986769561074501LLU}),jule::Array<jule::U64,2>({4425478360848884291LLU,13319983461951343127LLU}),jule::Array<jule::U64,2>({920161932633717460LLU,16649979327439178909LLU}),jule::Array<jule::U64,2>({2880944217109767365LLU,10406237079649486818LLU}),jule::Array<jule::U64,2>({12824552308241985014LLU,13007796349561858522LLU}),jule::Array<jule::U64,2>({6807318348447705459LLU,16259745436952323153LLU}),jule::Array<jule::U64,2>({15783789013848285672LLU,10162340898095201970LLU}),jule::Array<jule::U64,2>({10506364230455581282LLU,12702926122619002463LLU}),jule::Array<jule::U64,2>({8521269269642088699LLU,15878657653273753079LLU}),jule::Array<jule::U64,2>({12243322321167387293LLU,9924161033296095674LLU}),jule::Array<jule::U64,2>({6080780864604458308LLU,12405201291620119593LLU}),jule::Array<jule::U64,2>({12212662099182960789LLU,15506501614525149491LLU}),jule::Array<jule::U64,2>({5327070802775656541LLU,9691563509078218432LLU}),jule::Array<jule::U64,2>({6658838503469570676LLU,12114454386347773040LLU}),jule::Array<jule::U64,2>({8323548129336963345LLU,15143067982934716300LLU}),jule::Array<jule::U64,2>({14425589617690377899LLU,9464417489334197687LLU}),jule::Array<jule::U64,2>({13420301003685584469LLU,11830521861667747109LLU}),jule::Array<jule::U64,2>({2940318199324816875LLU,14788152327084683887LLU}),jule::Array<jule::U64,2>({8755227902219092403LLU,9242595204427927429LLU}),jule::Array<jule::U64,2>({15555720896201253407LLU,11553244005534909286LLU}),jule::Array<jule::U64,2>({10221279083396790951LLU,14441555006918636608LLU}),jule::Array<jule::U64,2>({12776598854245988689LLU,18051943758648295760LLU}),jule::Array<jule::U64,2>({7985374283903742931LLU,11282464849155184850LLU}),jule::Array<jule::U64,2>({758345818024902856LLU,14103081061443981063LLU}),jule::Array<jule::U64,2>({14782990327813292282LLU,17628851326804976328LLU}),jule::Array<jule::U64,2>({9239368954883307676LLU,11018032079253110205LLU}),jule::Array<jule::U64,2>({16160897212031522499LLU,13772540099066387756LLU}),jule::Array<jule::U64,2>({1754377441329851508LLU,17215675123832984696LLU}),jule::Array<jule::U64,2>({1096485900831157192LLU,10759796952395615435LLU}),jule::Array<jule::U64,2>({15205665431321110202LLU,13449746190494519293LLU}),jule::Array<jule::U64,2>({5172023733869224041LLU,16812182738118149117LLU}),jule::Array<jule::U64,2>({5538357842881958977LLU,10507614211323843198LLU}),jule::Array<jule::U64,2>({16146319340457224530LLU,13134517764154803997LLU}),jule::Array<jule::U64,2>({6347841120289366950LLU,16418147205193504997LLU}),jule::Array<jule::U64,2>({6273243709394548296LLU,10261342003245940623LLU}),jule::Array<jule::U64,2>({3229868618315797466LLU,12826677504057425779LLU}),jule::Array<jule::U64,2>({17872393828176910545LLU,16033346880071782223LLU}),jule::Array<jule::U64,2>({18087775170251650946LLU,10020841800044863889LLU}),jule::Array<jule::U64,2>({8774660907532399971LLU,12526052250056079862LLU}),jule::Array<jule::U64,2>({1744954097560724156LLU,15657565312570099828LLU}),jule::Array<jule::U64,2>({10313968347830228405LLU,9785978320356312392LLU}),jule::Array<jule::U64,2>({12892460434787785506LLU,12232472900445390490LLU}),jule::Array<jule::U64,2>({6892203506629956075LLU,15290591125556738113LLU}),jule::Array<jule::U64,2>({15836842237712192307LLU,9556619453472961320LLU}),jule::Array<jule::U64,2>({1349308723430688768LLU,11945774316841201651LLU}),jule::Array<jule::U64,2>({15521693959570524672LLU,14932217896051502063LLU}),jule::Array<jule::U64,2>({16618587752372659776LLU,9332636185032188789LLU}),jule::Array<jule::U64,2>({6938176635183661008LLU,11665795231290235987LLU}),jule::Array<jule::U64,2>({4061034775552188356LLU,14582244039112794984LLU}),jule::Array<jule::U64,2>({5076293469440235445LLU,18227805048890993730LLU}),jule::Array<jule::U64,2>({7784369436827535057LLU,11392378155556871081LLU}),jule::Array<jule::U64,2>({14342147814461806725LLU,14240472694446088851LLU}),jule::Array<jule::U64,2>({13315998749649870503LLU,17800590868057611064LLU}),jule::Array<jule::U64,2>({8322499218531169064LLU,11125369292536006915LLU}),jule::Array<jule::U64,2>({5791438004736573426LLU,13906711615670008644LLU}),jule::Array<jule::U64,2>({7239297505920716783LLU,17383389519587510805LLU}),jule::Array<jule::U64,2>({6830403950414141941LLU,10864618449742194253LLU}),jule::Array<jule::U64,2>({13149690956445065330LLU,13580773062177742816LLU}),jule::Array<jule::U64,2>({16437113695556331663LLU,16975966327722178520LLU}),jule::Array<jule::U64,2>({10273196059722707289LLU,10609978954826361575LLU}),jule::Array<jule::U64,2>({8229809056225996208LLU,13262473693532951969LLU}),jule::Array<jule::U64,2>({14898947338709883164LLU,16578092116916189961LLU}),jule::Array<jule::U64,2>({2394313059052595121LLU,10361307573072618726LLU}),jule::Array<jule::U64,2>({12216263360670519709LLU,12951634466340773407LLU}),jule::Array<jule::U64,2>({10658643182410761733LLU,16189543082925966759LLU}),jule::Array<jule::U64,2>({13579181016647807939LLU,10118464426828729224LLU}),jule::Array<jule::U64,2>({16973976270809759924LLU,12648080533535911530LLU}),jule::Array<jule::U64,2>({11994098301657424097LLU,15810100666919889413LLU}),jule::Array<jule::U64,2>({9802154447749584012LLU,9881312916824930883LLU}),jule::Array<jule::U64,2>({7641007041259592112LLU,12351641146031163604LLU}),jule::Array<jule::U64,2>({9551258801574490140LLU,15439551432538954505LLU}),jule::Array<jule::U64,2>({17498751797052526097LLU,9649719645336846565LLU}),jule::Array<jule::U64,2>({8038381691033493909LLU,12062149556671058207LLU}),jule::Array<jule::U64,2>({5436291095364479483LLU,15077686945838822759LLU})});
jule::Slice<jule::I64> _1a6dddc04_POWTAB = jule::Slice<jule::I64>::make({1LL,3LL,6LL,9LL,13LL,16LL,19LL,23LL,26LL});
jule::Slice<jule::F64> _1a6de0970_F64_POW10 = jule::Slice<jule::F64>::make({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0});
jule::Slice<jule::F32> _1a6e00353_F32_POW10 = jule::Slice<jule::F32>::make({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL});
jule::Array<jule::U64,20> _1a6e37357_U64_POW10 = jule::Array<jule::U64,20>({1LLU,10LLU,100LLU,1000LLU,10000LLU,100000LLU,1000000LLU,10000000LLU,100000000LLU,1000000000LLU,10000000000LLU,100000000000LLU,1000000000000LLU,10000000000000LLU,100000000000000LLU,1000000000000000LLU,10000000000000000LLU,100000000000000000LLU,1000000000000000000LLU,10000000000000000000LLU});
jule::Slice<_1a753757d_LeftCheat> _1a7013257_LEFTCHEATS = jule::Slice<_1a753757d_LeftCheat>::make({_1a753757d_LeftCheat{._field_delta=0LL, ._field_cutoff=jule::Str()},_1a753757d_LeftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("5", 1)},_1a753757d_LeftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("25", 2)},_1a753757d_LeftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("125", 3)},_1a753757d_LeftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("625", 3)},_1a753757d_LeftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("3125", 4)},_1a753757d_LeftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("15625", 5)},_1a753757d_LeftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("78125", 5)},_1a753757d_LeftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("390625", 6)},_1a753757d_LeftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("1953125", 7)},_1a753757d_LeftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("9765625", 7)},_1a753757d_LeftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("48828125", 8)},_1a753757d_LeftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("244140625", 9)},_1a753757d_LeftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("1220703125", 10)},_1a753757d_LeftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("6103515625", 10)},_1a753757d_LeftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("30517578125", 11)},_1a753757d_LeftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("152587890625", 12)},_1a753757d_LeftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("762939453125", 12)},_1a753757d_LeftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("3814697265625", 13)},_1a753757d_LeftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("19073486328125", 14)},_1a753757d_LeftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("95367431640625", 14)},_1a753757d_LeftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("476837158203125", 15)},_1a753757d_LeftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("2384185791015625", 16)},_1a753757d_LeftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("11920928955078125", 17)},_1a753757d_LeftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("59604644775390625", 17)},_1a753757d_LeftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("298023223876953125", 18)},_1a753757d_LeftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("1490116119384765625", 19)},_1a753757d_LeftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("7450580596923828125", 19)},_1a753757d_LeftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("37252902984619140625", 20)},_1a753757d_LeftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("186264514923095703125", 21)},_1a753757d_LeftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("931322574615478515625", 21)},_1a753757d_LeftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("4656612873077392578125", 22)},_1a753757d_LeftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("23283064365386962890625", 23)},_1a753757d_LeftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("116415321826934814453125", 24)},_1a753757d_LeftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("582076609134674072265625", 24)},_1a753757d_LeftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("2910383045673370361328125", 25)},_1a753757d_LeftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("14551915228366851806640625", 26)},_1a753757d_LeftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("72759576141834259033203125", 26)},_1a753757d_LeftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("363797880709171295166015625", 27)},_1a753757d_LeftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("1818989403545856475830078125", 28)},_1a753757d_LeftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("9094947017729282379150390625", 28)},_1a753757d_LeftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("45474735088646411895751953125", 29)},_1a753757d_LeftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("227373675443232059478759765625", 30)},_1a753757d_LeftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("1136868377216160297393798828125", 31)},_1a753757d_LeftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("5684341886080801486968994140625", 31)},_1a753757d_LeftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("28421709430404007434844970703125", 32)},_1a753757d_LeftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("142108547152020037174224853515625", 33)},_1a753757d_LeftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("710542735760100185871124267578125", 33)},_1a753757d_LeftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("3552713678800500929355621337890625", 34)},_1a753757d_LeftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("17763568394002504646778106689453125", 35)},_1a753757d_LeftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("88817841970012523233890533447265625", 35)},_1a753757d_LeftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("444089209850062616169452667236328125", 36)},_1a753757d_LeftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("2220446049250313080847263336181640625", 37)},_1a753757d_LeftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("11102230246251565404236316680908203125", 38)},_1a753757d_LeftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("55511151231257827021181583404541015625", 38)},_1a753757d_LeftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("277555756156289135105907917022705078125", 39)},_1a753757d_LeftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("1387778780781445675529539585113525390625", 40)},_1a753757d_LeftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("6938893903907228377647697925567626953125", 40)},_1a753757d_LeftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("34694469519536141888238489627838134765625", 41)},_1a753757d_LeftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("173472347597680709441192448139190673828125", 42)},_1a753757d_LeftCheat{._field_delta=19LL, ._field_cutoff=jule::Str("867361737988403547205962240695953369140625", 42)}});
jule::I64 _1a76606a6_BIT_SIZE = 0LL;
jule::Str _1a7660860_SYS_INT = jule::Str();
jule::Str _1a7660a19_SYS_UINT = jule::Str();
jule::Bool _1a52b4c58_COPY = false;
jule::Bool _1a52b78d7_DEADCODE = false;
jule::Bool _1a52b7a3b_APPEND = false;
jule::Bool _1a52ba951_MATH = false;
jule::Bool _1a52db92d_ACCESS = false;
jule::Bool _1a532149b_INLINE = false;
jule::Bool _1a532205c_PTR = false;
jule::Bool _1a532569d_COND = false;
jule::Bool _1a7e2b207_expr_enabled = false;
jule::Bool _1a7e2e12d_scope_enabled = false;
jule::Array<jule::U64,12> _1a864bd9a_MDAYS = jule::Array<jule::U64,12>({31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,29LLU});
jule::Str _1a4380770_OS = jule::Str("linux", 5);
jule::Str _1a4346cb9_ARCH = jule::Str("arm64", 5);
jule::Array<_1a4290a37_accept_range,16> _1a4290d89_ACCEPT_RANGES = jule::Array<_1a4290a37_accept_range,16>({_1a4290a37_accept_range{._field_lo=128LLU, ._field_hi=191LLU},_1a4290a37_accept_range{._field_lo=160LLU, ._field_hi=191LLU},_1a4290a37_accept_range{._field_lo=128LLU, ._field_hi=159LLU},_1a4290a37_accept_range{._field_lo=144LLU, ._field_hi=191LLU},_1a4290a37_accept_range{._field_lo=128LLU, ._field_hi=143LLU}});
jule::Array<jule::Array<jule::Str,2>,5> _1a4307ab0_HELP_MAP = jule::Array<jule::Array<jule::Str,2>,5>({jule::Array<jule::Str,2>({jule::Str("help", 4),jule::Str("Show help", 9)}),jule::Array<jule::Str,2>({jule::Str("version", 7),jule::Str("Show version", 12)}),jule::Array<jule::Str,2>({jule::Str("tool", 4),jule::Str("Tools for effective Jule", 24)}),jule::Array<jule::Str,2>({jule::Str("julenv", 6),jule::Str("Show information about native jule environment", 46)}),jule::Array<jule::Str,2>({jule::Str("mod", 3),jule::Str("Module management", 17)})});
jule::Ptr<_1a41c87b6_RangeTable> _1a41793d2_LETTER = _1a4173310__L;
jule::Array<jule::U8,256> _1a42904b5_FIRST = jule::Array<jule::U8,256>({});
jule::Array<jule::U8,256> _1a41c2c88__PROPERTIES = jule::Array<jule::U8,256>({1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,144LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,130LLU,130LLU,136LLU,136LLU,136LLU,130LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,130LLU,130LLU,130LLU,136LLU,130LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,130LLU,136LLU,130LLU,136LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,16LLU,130LLU,136LLU,136LLU,136LLU,136LLU,136LLU,130LLU,136LLU,136LLU,224LLU,130LLU,136LLU,0LLU,136LLU,136LLU,136LLU,136LLU,132LLU,132LLU,136LLU,192LLU,130LLU,130LLU,136LLU,132LLU,224LLU,130LLU,132LLU,132LLU,132LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,136LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU});





std::ostream &operator<<(std::ostream &_Stream, _1a41c7d7b_Range16 _Src) {
	_Stream << "Range16{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi << ", ";
	_Stream << "stride:" << _Src._field_stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a41c8343_Range32 _Src) {
	_Stream << "Range32{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi << ", ";
	_Stream << "stride:" << _Src._field_stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a41c87b6_RangeTable _Src) {
	_Stream << "RangeTable{";
	_Stream << "r16:" << _Src._field_r16 << ", ";
	_Stream << "r32:" << _Src._field_r32 << ", ";
	_Stream << "latin_offset:" << _Src._field_latin_offset;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a4290a37_accept_range _Src) {
	_Stream << "accept_range{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _1a4299656_index(_1a42991d3_LazyBuff* _self_, jule::I64 _5424_i) {
	if (((*_self_)._field_buff != nullptr)) {
		return (*_self_)._field_buff[_5424_i];
	};
	return (*_self_)._field_path[_5424_i];
}



inline void _1a42998cb_append(_1a42991d3_LazyBuff* _self_, jule::U8 _6125_c) {
	if (((*_self_)._field_buff == nullptr)) {
		if ((((*_self_)._field_w < (*_self_)._field_path.len()) && ((*_self_)._field_path[(*_self_)._field_w] == _6125_c))) {
			((*_self_)._field_w)++;
			return;;
		};
		(*_self_)._field_buff=jule::Slice<jule::U8>::alloc((*_self_)._field_path.len());
		jule::copy(((*_self_)._field_buff), (static_cast<jule::Slice<jule::U8>>((*_self_)._field_path.slice(0LL,(*_self_)._field_w))));
	};
	(*_self_)._field_buff[(*_self_)._field_w]=_6125_c;
	((*_self_)._field_w)++;
}



inline jule::Str _1a4299b40_string(_1a42991d3_LazyBuff* _self_) {
	if (((*_self_)._field_buff == nullptr)) {
		return (*_self_)._field_vol_and_path.slice(0LL,((*_self_)._field_vol_len + (*_self_)._field_w));
	};
	return ((*_self_)._field_vol_and_path.slice(0LL,(*_self_)._field_vol_len) + static_cast<jule::Str>((*_self_)._field_buff.slice(0LL,(*_self_)._field_w)));
}







std::ostream &operator<<(std::ostream &_Stream, _1a42991d3_LazyBuff _Src) {
	_Stream << "LazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "vol_and_path:" << _Src._field_vol_and_path << ", ";
	_Stream << "vol_len:" << _Src._field_vol_len;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d4e9e836_DirEntry _Src) {
	_Stream << "DirEntry{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "stat:" << _Src._field_stat;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Slice<jule::Ptr<_1d4e9e836_DirEntry>>> static__1a429d9ce_read(jule::Str _1524_path) {
	jule::Slice<jule::Ptr<_1d4e9e836_DirEntry>> _1538_dirents = jule::Slice<jule::Ptr<_1d4e9e836_DirEntry>>();
	DIR* _1617_dir = _1d4e7b329_opendir((&(_1524_path[0LL])));;
	if ((_1617_dir == nullptr)) {
		return jule::Exceptional<jule::Slice<jule::Ptr<_1d4e9e836_DirEntry>>>(_1d4e243d2_get_last_fs_error());
	};
	for (;;) {
		{
			struct dirent* _2117_dirent = _1d4e7b45b_readdir(_1617_dir);;
			if ((_2117_dirent == nullptr)) {
				goto _iter_end_1a8d69023;
			};
			jule::Str _2517_name = _1d4e7084b_byte_ptr_to_str(((jule::U8*)(_2117_dirent->d_name)));;
			jule::Ptr<_1d4ea101e_Status> _2621_stat = ({
				auto except = static__1d4e9edb9_of(_1a429a811_join(jule::Slice<jule::Str>::make({_1524_path,_2517_name})));
				(except.ok()) ? (except.result) : ({{
					return jule::Exceptional<jule::Slice<jule::Ptr<_1d4e9e836_DirEntry>>>(except.error);
				} jule::Ptr<_1d4ea101e_Status>();});
			});;
			_1538_dirents = jule::alloc_for_append(_1538_dirents,1);_1538_dirents.__push(jule::new_ptr<_1d4e9e836_DirEntry>(_1d4e9e836_DirEntry{._field_name=_2517_name, ._field_stat=_2621_stat}));;
		}
	_iter_next_1a8d69023:;
	}
	_iter_end_1a8d69023:;;
	_1d4e7b7be_closedir(_1617_dir);
	return jule::Exceptional<jule::Slice<jule::Ptr<_1d4e9e836_DirEntry>>>(jule::Any(), _1538_dirents);
}



inline jule::VoidExceptional static__1a429dbdd_create(jule::Str _3926_path) {
	if ((_1d4e7bb65_mkdir((&(_3926_path[0LL])),448LL) != 0LL)) {
		return jule::VoidExceptional(_1d4e243d2_get_last_fs_error());
	};
 return jule::VoidExceptional();
}



inline jule::VoidExceptional static__1a429ddec_remove(jule::Str _5126_path) {
	if ((_1d4e7bc97_rmdir((&(_5126_path[0LL]))) != 0LL)) {
		return jule::VoidExceptional(_1d4e243d2_get_last_fs_error());
	};
 return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _1d4e9ea23_Directory _Src) {
	_Stream << "Directory{";
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Ptr<_1d4ea035e_File>> static__1d4e051d7_open(jule::Str _1824_path, jule::I64 _1835_flag, jule::I64 _1848_mode) {
	jule::I64 _1913_handle = _1d4e7b0b5_open((&(_1824_path[0LL])),static_cast<jule::I64>(_1835_flag),_1848_mode);;
	if ((_1913_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_1d4ea035e_File>>(_1d4e243d2_get_last_fs_error());
	};
	return jule::Exceptional<jule::Ptr<_1d4ea035e_File>>(jule::Any(),static__1d4ea054b_new(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_1913_handle))));
}



inline jule::VoidExceptional static__1d4e061a5_remove(jule::Str _3026_path) {
	if ((_1d4e7bdc9_unlink((&(_3026_path[0LL]))) != 0LL)) {
		return jule::VoidExceptional(_1d4e243d2_get_last_fs_error());
	};
 return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _1d4e24d61_write(_1d4ea035e_File* _self_, jule::Slice<jule::U8> _4428_buff) {
	jule::I64 _4445_n = jule::I64();
	if ((_4428_buff.len() == 0LL)) {
		_4445_n = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(),_4445_n);
	};
	_4445_n=static_cast<jule::I64>(_1d4e7e717_write(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),(&(_4428_buff[0LL])),static_cast<jule::U64>(static_cast<jule::U64>(_4428_buff.len()))));
	if ((_4445_n == -1LL)) {
		return jule::Exceptional<jule::I64>(_1d4e243d2_get_last_fs_error());
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_4445_n);
}



inline jule::Exceptional<jule::I64> _1d4e9e54a_read(_1d4ea035e_File* _self_, jule::Slice<jule::U8> _6531_buff) {
	jule::I64 _6548_n = jule::I64();
	if ((_6531_buff.len() == 0LL)) {
		_6548_n = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(),_6548_n);
	};
	_6548_n=static_cast<jule::I64>(_1d4e7deec_read(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),(&(_6531_buff[0LL])),static_cast<jule::U64>(static_cast<jule::U64>(_6531_buff.len()))));
	if ((_6548_n == -1LL)) {
		return jule::Exceptional<jule::I64>(_1d4e243d2_get_last_fs_error());
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_6548_n);
}



inline jule::Ptr<_1d4ea035e_File> static__1d4ea054b_new(jule::Uintptr _4523_handle) {
	return jule::new_ptr<_1d4ea035e_File>(_1d4ea035e_File{._field_handle=_4523_handle});
}



inline jule::Exceptional<jule::Ptr<_1d4ea035e_File>> static__1d4ea067d_create(jule::Str _5526_path) {
	return jule::Exceptional<jule::Ptr<_1d4ea035e_File>>(jule::Any(),({
		auto except = static__1d4e051d7_open(_5526_path,((static_cast<jule::I64>(578LL) | 578LL) | 578LL),438LL);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Ptr<_1d4ea035e_File>>(except.error);
		} jule::Ptr<_1d4ea035e_File>();});
	}));
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__1d4ea07b0_read(jule::Str _6724_path) {
	jule::Ptr<_1d4ea101e_Status> _6813_s = ({
		auto except = static__1d4e9edb9_of(_6724_path);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_1d4ea101e_Status>();});
	});;
	if ((!(_1d4ea133d_is_reg(_6813_s.ptr())))) {
		return jule::Exceptional<jule::Slice<jule::U8>>(static_cast<jule::I64>(14LL));
	};
	if ((_6813_s.get()._field_size == 0LLU)) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(),jule::Slice<jule::U8>::alloc(0LL));
	};
	jule::Ptr<_1d4ea035e_File> _7817_f = ({
		auto except = static__1d4e051d7_open(_6724_path,static_cast<jule::I64>(0LL),0LL);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_1d4ea035e_File>();});
	});;
	__JULE_DEFER({
		({
			auto except = _1d4ea0b56_close(_7817_f.ptr());
			if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/fs/file.jule:79:17"));
		});
	});;
	jule::Slice<jule::U8> _8117_buff = jule::Slice<jule::U8>::alloc(static_cast<jule::I64>(_6813_s.get()._field_size));;
	jule::I64 _8213_n = ({
		auto except = _1d4e9e54a_read(_7817_f.ptr(), _8117_buff);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::I64();});
	});;
	return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(),_8117_buff.slice(0LL,_8213_n));
}



inline jule::VoidExceptional static__1d4ea08e2_write(jule::Str _9125_path, jule::Slice<jule::U8> _9136_data, jule::I64 _9150_perm) {
	jule::Ptr<_1d4ea035e_File> _9217_f = ({
		auto except = static__1d4e051d7_open(_9125_path,((static_cast<jule::I64>(577LL) | 577LL) | 577LL),_9150_perm);
		(except.ok()) ? (except.result) : ({{
			return jule::VoidExceptional(except.error);
		} jule::Ptr<_1d4ea035e_File>();});
	});;
	({
		auto except = _1d4e24d61_write(_9217_f.ptr(), _9136_data);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	({
		auto except = _1d4ea0b56_close(_9217_f.ptr());
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
 return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _1d4ea0a24_seek(_1d4ea035e_File* _self_, jule::I64 _10527_offset, jule::I64 _10540_origin) {
	jule::I64 _10613_pos = _1d4e7db12_seek(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),_10527_offset,static_cast<jule::I64>(_10540_origin));;
	if ((_10613_pos == -1LL)) {
		return jule::Exceptional<jule::I64>(_1d4e243d2_get_last_fs_error());
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_10613_pos);
}



inline jule::VoidExceptional _1d4ea0b56_close(_1d4ea035e_File* _self_) {
	if ((_1d4e7e32c_close(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle))) == -1LL)) {
		return jule::VoidExceptional(_1d4e243d2_get_last_fs_error());
	};
 return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _1d4ea035e_File _Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Ptr<_1d4ea101e_Status>> static__1d4e9edb9_of(jule::Str _1122_path) {
	if (_1122_path.empty()) {
		return jule::Exceptional<jule::Ptr<_1d4ea101e_Status>>(static_cast<jule::I64>(4LL));
	};
	struct stat _1517_handle = (struct stat){};;
	jule::I64 _1613_code = _1d4e7ae83_stat((&(_1122_path[0LL])),(&(_1517_handle)));;
	if ((_1613_code != -1LL)) {
		return jule::Exceptional<jule::Ptr<_1d4ea101e_Status>>(jule::Any(),jule::new_ptr<_1d4ea101e_Status>(_1d4ea101e_Status{._field_mode=static_cast<jule::U64>(static_cast<jule::U64>(_1517_handle.st_mode)), ._field_size=static_cast<jule::U64>(static_cast<jule::U64>(_1517_handle.st_size))}));
	};
	return jule::Exceptional<jule::Ptr<_1d4ea101e_Status>>(_1d4e243d2_get_last_fs_error());
}



inline jule::Bool _1d4ea120b_is_dir(_1d4ea101e_Status* _self_) {
	return (((*_self_)._field_mode & 16384LLU) == 16384LLU);
}



inline jule::Bool _1d4ea133d_is_reg(_1d4ea101e_Status* _self_) {
	return (((*_self_)._field_mode & 32768LLU) == 32768LLU);
}







std::ostream &operator<<(std::ostream &_Stream, _1d4ea101e_Status _Src) {
	_Stream << "Status{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a4382211_Cmd> static__1a4382640_new(jule::Str _2023_path) {
	return jule::new_ptr<_1a4382211_Cmd>(_1a4382211_Cmd{._field_path=_2023_path, });
}



inline jule::Exceptional<jule::I64> _1a43828a4_spawn(_1a4382211_Cmd* _self_) {
	return jule::Exceptional<jule::I64>(jule::Any(),static_cast<jule::I64>(({
		auto except = _1a4385632___spawn(&(*_self_));
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::I64>(except.error);
		} jule::I64();});
	})));
}



inline jule::Exceptional<jule::I64> _1a4385632___spawn(_1a4382211_Cmd* _self_) {
	if ((*_self_)._field_path.empty()) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(3LL));
	};
	jule::I64 _4913_pid = fork();;
	{
		auto &_match_expr{ _4913_pid };
		
		if (_match_expr == -1LL) {
			_case_begin_1a8d93080:;
			{
				return jule::Exceptional<jule::I64>(static_cast<jule::I64>(12LL));
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1a8d922c1:;
			{
				jule::I64 _5421_status = 0LL;;
				if (((*_self_)._field_env == nullptr)) {
					_5421_status=static_cast<jule::I64>(_1a4384e5b_execvp((*_self_)._field_path,(*_self_)._field_args));
				} else {
					_5421_status=static_cast<jule::I64>(_1a4385346_execve((*_self_)._field_path,(*_self_)._field_args,(*_self_)._field_env));
				};
				if ((_5421_status == -1LL)) {
					kill(static_cast<jule::I64>(getpid()),SIGTERM);
				};
				_1a4385eb2_exit(255LL);
			}
		}
		_match_end_1a8d92ea3:;
	};
	jule::I64 _6513_status = 0LL;;
	if ((waitpid(_4913_pid,((signed*)((&(_6513_status)))),WUNTRACED) == -1LL)) {
		return jule::Exceptional<jule::I64>(_1a43819a2_get_last_process_error());
	};
	if (WIFSIGNALED(_6513_status)) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(12LL));
	};
	return jule::Exceptional<jule::I64>(jule::Any(),static_cast<jule::I64>(WEXITSTATUS(_6513_status)));
}







std::ostream &operator<<(std::ostream &_Stream, _1a4382211_Cmd _Src) {
	_Stream << "Cmd{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "env:" << _Src._field_env;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a43349cc_Log _Src) {
	_Stream << "Log{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "text:" << _Src._field_text << ", ";
	_Stream << "line:" << _Src._field_line << ", ";
	_Stream << "suggestion:" << _Src._field_suggestion;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _1a5277765_prec(_1a527737a_Token* _self_) {
	if (((*_self_)._field_id != static_cast<jule::U64>(7LLU))) {
		return 0LLU;
	};
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("%", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str(">>", 2) || _match_expr == jule::Str("<<", 2) || _match_expr == jule::Str("&", 1)) {
			_case_begin_1a8e1ec33:;
			{
				return 5LLU;
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1a8e1ea57:;
			{
				return 4LLU;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("=", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_1a8e1eabd:;
			{
				return 3LLU;
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1a8e1e8d1:;
			{
				return 2LLU;
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_1a8e1e947:;
			{
				return 1LLU;
			}
		}
		else {
			_case_begin_1a8e1e381:;
			{
				return 0LLU;
			}
		}
		_match_end_1a8e1deb8:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a527737a_Token _Src) {
	_Stream << "Token{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a527cb77_is_ok(_1a527c76a_File* _self_) {
	({
		auto except = static__1d4e9edb9_of((*_self_)._field_path);
		(except.ok()) ? (except.result) : ({{
			return false;
		} jule::Ptr<_1d4ea101e_Status>();});
	});
	return true;
}



inline void _1a527cdec_fill(_1a527c76a_File* _self_, jule::Slice<jule::U8> _2331_data) {
	(*_self_)._field_data=_2331_data;
}



inline jule::Str _1a527d161_dir(_1a527c76a_File* _self_) {
	return _1a429b427_dir((*_self_)._field_path);
}



inline jule::Str _1a527d3c5_name(_1a527c76a_File* _self_) {
	return _1a429b0e7_base((*_self_)._field_path);
}



inline jule::Uintptr _1a527d639_addr(_1a527c76a_File* _self_) {
	return static_cast<jule::Uintptr>(((jule::Uintptr)((&((*_self_))))));
}



inline jule::Str _1a527d947_get_row(_1a527c76a_File* _self_, jule::I64 _4426_row) {
	jule::I64 _4517_n = 0LL;;
	jule::I64 _4617_line_start = 0LL;;
	jule::I64 _4717_i = 0LL;;
	for (; (_4717_i < (*_self_)._field_data.len()); (_4717_i)++) {
		{
			if (((*_self_)._field_data[_4717_i] != '\n')) {
				goto _iter_next_1a8e3adc5;
			};
			(_4517_n)++;
			if ((_4517_n == _4426_row)) {
				return static_cast<jule::Str>((*_self_)._field_data.slice(_4617_line_start,_4717_i));
			};
			_4617_line_start=static_cast<jule::I64>((_4717_i + 1LL));
		}
	_iter_next_1a8e3adc5:;
	}
	_iter_end_1a8e3adc5:;;
	return jule::Str();
}







std::ostream &operator<<(std::ostream &_Stream, _1a527c76a_File _Src) {
	_Stream << "File{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "data:" << _Src._field_data << ", ";
	_Stream << "tokens:" << _Src._field_tokens;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a527e838_KindPair _Src) {
	_Stream << "KindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline void _1a5285894_push_err(_1a5285300_Lex* _self_, jule::Str _45827_fmt, jule::Slice<jule::Any> _45840_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1a52804c6_make_err((*_self_)._field_row,(*_self_)._field_column,(*_self_)._field_file,_45827_fmt,jule::Any(_45840_args)));;
}



inline void _1a5285bb3_push_err_tok(_1a5285300_Lex* _self_, jule::Ptr<_1a527737a_Token>& _46332_token, jule::Str _46347_fmt) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1a52804c6_make_err(_46332_token.get()._field_row,_46332_token.get()._field_column,(*_self_)._field_file,_46347_fmt,jule::Slice<jule::Any>()));;
}



inline void _1a5285d8e_lex(_1a5285300_Lex* _self_) {
	(*_self_)._field_errors=nullptr;
	_1a5287d91_new_line(&(*_self_));
	while (((*_self_)._field_pos < (*_self_)._field_file.get()._field_data.len())) {
		{
			jule::Ptr<_1a527737a_Token> _47321_token = _1a5289216_token(&(*_self_));;
			if ((_47321_token.get()._field_id != static_cast<jule::U64>(0LLU))) {
				(*_self_)._field_tokens = jule::alloc_for_append((*_self_)._field_tokens,1);(*_self_)._field_tokens.__push(_47321_token);;
			};
		}
	_iter_next_1a8e4122c:;
	}
	_iter_end_1a8e4122c:;;
}



inline jule::Str _1a528619c_id(_1a5285300_Lex* _self_, jule::Slice<jule::U8>& _48222_ln) {
	if ((_48222_ln.len() == 0LL)) {
		return jule::Str();
	};
	jule::I32 _48614_r;;
	jule::I64 _48621_i;;
	std::tie(_48614_r,_48621_i) = _1a4291670_decode_rune(_48222_ln);
	if (((_48614_r != '_') && (!(_1a527a779_is_letter(_48614_r))))) {
		return jule::Str();
	};
	while ((_48621_i < _48222_ln.len())) {
		{
			jule::I32 _49218_pr;;
			jule::I64 _49222_n;;
			std::tie(_49218_pr,_49222_n) = _1a4291670_decode_rune(_48222_ln.slice(_48621_i));
			if ((((_49218_pr != '_') && (!(_1a527acb8_is_decimal(static_cast<jule::U8>(static_cast<jule::U8>(_49218_pr)))))) && (!(_1a527a779_is_letter(_49218_pr))))) {
				(*_self_)._field_pos+=_48621_i;
				return static_cast<jule::Str>(_48222_ln.slice(0LL,_48621_i));
			};
			_48621_i+=_49222_n;
		}
	_iter_next_1a8e44a8d:;
	}
	_iter_end_1a8e44a8d:;;
	(*_self_)._field_pos+=_48222_ln.len();
	return static_cast<jule::Str>(_48222_ln);
}



inline jule::Slice<jule::U8> _1a5286411_resume(_1a5285300_Lex* _self_) {
	jule::I64 _50717_i = (*_self_)._field_pos;;
	for (; (_50717_i < (*_self_)._field_file.get()._field_data.len()); (_50717_i)++) {
		{
			jule::I32 _50917_r = static_cast<jule::I32>((*_self_)._field_file.get()._field_data[_50717_i]);;
			if (_1a527a3b1_is_space(_50917_r)) {
				;
				((*_self_)._field_pos)++;
				{
					auto &_match_expr{ _50917_r };
					
					if (_match_expr == '\n') {
						_case_begin_1a8e49d29:;
						{
							_1a5287d91_new_line(&(*_self_));
						}
					}
					else if (_match_expr == '\t') {
						_case_begin_1a8e49ac6:;
						{
							(*_self_)._field_column+=8LL;
						}
					}
					else {
						_case_begin_1a8e491e1:;
						{
							((*_self_)._field_column)++;
						}
					}
					_match_end_1a8e496b9:;
				};
				goto _iter_next_1a8e47d16;
			};
			jule::I64 _52421_j = _50717_i;;
			for (; (_52421_j < (*_self_)._field_file.get()._field_data.len()); (_52421_j)++) {
				{
					if (((*_self_)._field_file.get()._field_data[_52421_j] == '\n')) {
						goto _iter_end_1a8e48ab4;
					};
				}
			_iter_next_1a8e48ab4:;
			}
			_iter_end_1a8e48ab4:;;
			return (*_self_)._field_file.get()._field_data.slice(_50717_i,_52421_j);
		}
	_iter_next_1a8e47d16:;
	}
	_iter_end_1a8e47d16:;;
	return nullptr;
}



inline void _1a5286686_lex_line_comment(_1a5285300_Lex* _self_, jule::Ptr<_1a527737a_Token>& _53640_token) {
	jule::I64 _53713_start = (*_self_)._field_pos;;
	(*_self_)._field_pos+=2LL;
	for (; ((*_self_)._field_pos < (*_self_)._field_file.get()._field_data.len()); ((*_self_)._field_pos)++) {
		{
			jule::U8 _54017_r = (*_self_)._field_file.get()._field_data[(*_self_)._field_pos];;
			if (((_54017_r == '\n') || (_54017_r == '\r'))) {
				goto _iter_end_1a8e4c931;
			};
		}
	_iter_next_1a8e4c931:;
	}
	_iter_end_1a8e4c931:;;
	if ((((*_self_)._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
		_53640_token.get()._field_id=static_cast<jule::U64>(18LLU);
		_53640_token.get()._field_kind=static_cast<jule::Str>((*_self_)._field_file.get()._field_data.slice(_53713_start,(*_self_)._field_pos));
	};
}



inline void _1a528690b_lex_range_comment(_1a5285300_Lex* _self_, jule::Ptr<_1a527737a_Token>& _55141_token) {
	jule::I64 _55213_start = (*_self_)._field_pos;;
	(*_self_)._field_pos+=2LL;
	for (; ((*_self_)._field_pos < (*_self_)._field_file.get()._field_data.len()); ((*_self_)._field_pos)++) {
		{
			jule::U8 _55517_r = (*_self_)._field_file.get()._field_data[(*_self_)._field_pos];;
			if ((_55517_r == '\r')) {
				goto _iter_next_1a8e5114e;
			};
			if ((_55517_r == '\n')) {
				_1a5287d91_new_line(&(*_self_));
				goto _iter_next_1a8e5114e;
			};
			(*_self_)._field_column+=1LL;
			if ((((((*_self_)._field_pos + 1LL) < (*_self_)._field_file.get()._field_data.len()) && (_55517_r == '*')) && ((*_self_)._field_file.get()._field_data[((*_self_)._field_pos + 1LL)] == '/'))) {
				(*_self_)._field_column+=2LL;
				(*_self_)._field_pos+=2LL;
				if ((((*_self_)._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
					_55141_token.get()._field_id=static_cast<jule::U64>(18LLU);
					_55141_token.get()._field_kind=static_cast<jule::Str>((*_self_)._field_file.get()._field_data.slice(_55213_start,(*_self_)._field_pos));
				};
				return;;
			};
		}
	_iter_next_1a8e5114e:;
	}
	_iter_end_1a8e5114e:;;
	_1a5285894_push_err(&(*_self_), jule::Str("missing block comment close", 27),jule::Slice<jule::Any>());
}



inline jule::Str _1a5286c19_num(_1a5285300_Lex* _self_, jule::Slice<jule::U8>& _57923_txt) {
	jule::Str _57938_lit = jule::Str();
	if ((_57923_txt[0LL] == '_')) {
		_57938_lit = jule::Str();
		return _57938_lit;
	};
	_57938_lit=_1a5283bd3_hex_num(_57923_txt);
	if ((!(_57938_lit.empty()))) {
		goto _julec_label_end;
	};
	_57938_lit=_1a528393b_octal_num(_57923_txt);
	if ((!(_57938_lit.empty()))) {
		goto _julec_label_end;
	};
	_57938_lit=_1a528241d_binary_num(_57923_txt);
	if ((!(_57938_lit.empty()))) {
		goto _julec_label_end;
	};
	_57938_lit=_1a5282176_common_num(_57923_txt);
	_julec_label_end:;
	(*_self_)._field_pos+=_57938_lit.len();
	return _57938_lit;
}



inline jule::Str _1a5287027_escape_seq(_1a5285300_Lex* _self_, jule::Slice<jule::U8>& _60130_txt) {
	jule::Str _60217_seq = jule::Str();;
	if ((_60130_txt.len() < 2LL)) {
		goto _julec_label_end;
	};
	{
		auto &_match_expr{ _60130_txt[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_1a8e5bce7:;
			{
				(*_self_)._field_pos+=2LL;
				return static_cast<jule::Str>(_60130_txt.slice(0LL,2LL));
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1a8e5bb1b:;
			{
				_60217_seq=_1a52842dd_big_unicode_point_escape(_60130_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_1a8e5b841:;
			{
				_60217_seq=_1a52845b8_little_unicode_point_escape(_60130_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1a8e5b8a7:;
			{
				_60217_seq=_1a5284871_hex_byte_escape(_60130_txt);
			}
		}
		else {
			_case_begin_1a8e5b445:;
			{
				_60217_seq=_1a5284b18_byte_escape(_60130_txt);
			}
		}
		_match_end_1a8e5b764:;
	};
	_julec_label_end:;
	if (_60217_seq.empty()) {
		((*_self_)._field_pos)++;
		_1a5285894_push_err(&(*_self_), jule::Str("invalid escape sequence", 23),jule::Slice<jule::Any>());
		return jule::Str();
	};
	(*_self_)._field_pos+=_60217_seq.len();
	return _60217_seq;
}



inline jule::Str _1a52873ce_get_rune(_1a5285300_Lex* _self_, jule::Slice<jule::U8>& _63128_txt, jule::Bool _63141_raw) {
	if (((!(_63141_raw)) && (_63128_txt[0LL] == '\\'))) {
		return _1a5287027_escape_seq(&(*_self_), _63128_txt);
	};
	jule::I32 _63614_r;;
	jule::I64 _63617_n;;
	std::tie(_63614_r,_63617_n) = _1a4291670_decode_rune(_63128_txt);
	(*_self_)._field_pos+=_63617_n;
	return static_cast<jule::Str>(_63614_r);
}



inline jule::Str _1a52876dc_lex_rune(_1a5285300_Lex* _self_, jule::Slice<jule::U8>& _64128_txt) {
	jule::Str _64217_run = jule::Str("'", 1);;
	((*_self_)._field_column)++;
	jule::I64 _64417_n = 0LL;;
	jule::I64 _64517_i = 1LL;;
	for (; (_64517_i < _64128_txt.len()); (_64517_i)++) {
		{
			if ((_64128_txt[_64517_i] == '\r')) {
				goto _iter_next_1a8e645d5;
			};
			if ((_64128_txt[_64517_i] == '\n')) {
				_1a5285894_push_err(&(*_self_), jule::Str("rune is not finished", 20),jule::Slice<jule::Any>());
				((*_self_)._field_pos)++;
				_1a5287d91_new_line(&(*_self_));
				return jule::Str();
			};
			jule::Slice<jule::U8> _65717_part = _64128_txt.slice(_64517_i);;
			jule::Str _65817_r = _1a52873ce_get_rune(&(*_self_), _65717_part,false);;
			_64217_run+=_65817_r;
			(*_self_)._field_column+=_1a42932dc_rune_count_str(_65817_r);
			if ((_65817_r == jule::Str("'", 1))) {
				((*_self_)._field_pos)++;
				goto _iter_end_1a8e645d5;
			};
			if ((_65817_r.len() > 1LL)) {
				_64517_i+=(_65817_r.len() - 1LL);
			};
			(_64417_n)++;
		}
	_iter_next_1a8e645d5:;
	}
	_iter_end_1a8e645d5:;;
	if ((_64417_n == 0LL)) {
		_1a5285894_push_err(&(*_self_), jule::Str("rune is cannot empty", 20),jule::Slice<jule::Any>());
	} else if ((_64417_n > 1LL)) {
		_1a5285894_push_err(&(*_self_), jule::Str("rune is should be single", 24),jule::Slice<jule::Any>());
	};
	return _64217_run;
}



inline jule::Str _1a5287951_lex_str(_1a5285300_Lex* _self_) {
	jule::Str _68117_s = jule::Str();;
	jule::U8 _68213_mark = (*_self_)._field_file.get()._field_data[(*_self_)._field_pos];;
	((*_self_)._field_pos)++;
	jule::Bool _68413_raw = (_68213_mark == '`');;
	_68117_s+=static_cast<jule::Str>(_68213_mark);
	((*_self_)._field_column)++;
	while (((*_self_)._field_pos < (*_self_)._field_file.get()._field_data.len())) {
		{
			jule::U8 _68917_ch = (*_self_)._field_file.get()._field_data[(*_self_)._field_pos];;
			if ((_68917_ch == '\r')) {
				goto _iter_next_1a8e6abe6;
			};
			if ((_68917_ch == '\n')) {
				_1a5287d91_new_line(&(*_self_));
				if ((!(_68413_raw))) {
					_1a5285894_push_err(&(*_self_), jule::Str("string is not finished", 22),jule::Slice<jule::Any>());
					((*_self_)._field_pos)++;
					return jule::Str();
				};
			};
			jule::Slice<jule::U8> _70121_part = (*_self_)._field_file.get()._field_data.slice((*_self_)._field_pos);;
			jule::Str _70217_r = _1a52873ce_get_rune(&(*_self_), _70121_part,_68413_raw);;
			_68117_s+=_70217_r;
			(*_self_)._field_column+=_1a42932dc_rune_count_str(_70217_r);
			if ((_68917_ch == _68213_mark)) {
				goto _iter_end_1a8e6abe6;
			};
		}
	_iter_next_1a8e6abe6:;
	}
	_iter_end_1a8e6abe6:;;
	return _68117_s;
}



inline jule::Bool _1a5287bb5_is_first_token_of_line(_1a5285300_Lex* _self_) {
	return ((*_self_)._field_column == 1LL);
}



inline void _1a5287d91_new_line(_1a5285300_Lex* _self_) {
	((*_self_)._field_row)++;
	(*_self_)._field_column=1LL;
}



inline jule::Bool _1a528838b_is_op(_1a5285300_Lex* _self_, jule::Slice<jule::U8>& _72225_txt, jule::Str _72238_kind, jule::U64 _72249_id, jule::Ptr<_1a527737a_Token>& _72267_t) {
	if ((!(_1a528085b_bytes_has_prefix(_72225_txt,_72238_kind)))) {
		return false;
	};
	_72267_t.get()._field_kind=_72238_kind;
	_72267_t.get()._field_id=_72249_id;
	(*_self_)._field_pos+=_72238_kind.len();
	return true;
}



inline jule::Bool _1a5288743_lex_basic_ops(_1a5285300_Lex* _self_, jule::Slice<jule::U8> _73332_txt, jule::Ptr<_1a527737a_Token>& _73350_tok) {
	{
		auto &expr = _1a527eedc_BASIC_OPS;
		auto it = expr.begin();
		_iter_begin_1a8e7365a:;
		if (it != expr.end()) {
			_1a527e838_KindPair &_73416_pair = *it;
			{
				if (_1a528838b_is_op(&(*_self_), _73332_txt,_73416_pair._field_kind,_73416_pair._field_id,_73350_tok)) {
					return true;
				};
			}
			_iter_next_1a8e7365a:;
			++it;
			goto _iter_begin_1a8e7365a;
		}
		_iter_end_1a8e7365a:;
	};
	return false;
}



inline jule::Bool _1a5288aea_lex_id(_1a5285300_Lex* _self_, jule::Slice<jule::U8>& _74326_txt, jule::Ptr<_1a527737a_Token>& _74344_t) {
	jule::Str _74413_lex = _1a528619c_id(&(*_self_), _74326_txt);;
	if (_74413_lex.empty()) {
		return false;
	};
	_74344_t.get()._field_kind=_74413_lex;
	_74344_t.get()._field_id=static_cast<jule::U64>(2LLU);
	return true;
}



inline jule::Bool _1a5288ea2_lex_num(_1a5285300_Lex* _self_, jule::Slice<jule::U8>& _75427_txt, jule::Ptr<_1a527737a_Token>& _75445_t) {
	jule::Str _75513_lex = _1a5286c19_num(&(*_self_), _75427_txt);;
	if (_75513_lex.empty()) {
		return false;
	};
	_75445_t.get()._field_kind=_75513_lex;
	_75445_t.get()._field_id=static_cast<jule::U64>(6LLU);
	return true;
}



inline jule::Ptr<_1a527737a_Token> _1a5289216_token(_1a5285300_Lex* _self_) {
	jule::Ptr<_1a527737a_Token> _76717_t = jule::new_ptr<_1a527737a_Token>(_1a527737a_Token{._field_file=(*_self_)._field_file, ._field_id=static_cast<jule::U64>(0LLU)});;
	jule::Slice<jule::U8> _77213_txt = _1a5286411_resume(&(*_self_));;
	if ((_77213_txt == nullptr)) {
		return _76717_t;
	};
	_76717_t.get()._field_column=(*_self_)._field_column;
	_76717_t.get()._field_row=(*_self_)._field_row;
	{
		
		if (_1a5288ea2_lex_num(&(*_self_), _77213_txt,_76717_t)) {
			_case_begin_1a8e81190:;
			{
				goto _match_end_1a8e7e9a7;
			}
		}
		else if ((_77213_txt[0LL] == '\'')) {
			_case_begin_1a8e80678:;
			{
				_76717_t.get()._field_kind=_1a52876dc_lex_rune(&(*_self_), _77213_txt);
				_76717_t.get()._field_id=static_cast<jule::U64>(6LLU);
				return _76717_t;
			}
		}
		else if (((_77213_txt[0LL] == '\"') || (_77213_txt[0LL] == '`'))) {
			_case_begin_1a8e7eb1c:;
			{
				_76717_t.get()._field_kind=_1a5287951_lex_str(&(*_self_));
				_76717_t.get()._field_id=static_cast<jule::U64>(6LLU);
				return _76717_t;
			}
		}
		else if (_1a528085b_bytes_has_prefix(_77213_txt,jule::Str("//", 2))) {
			_case_begin_1a8e7eb83:;
			{
				_1a5286686_lex_line_comment(&(*_self_), _76717_t);
				return _76717_t;
			}
		}
		else if (_1a528085b_bytes_has_prefix(_77213_txt,jule::Str("/*", 2))) {
			_case_begin_1a8e7ebe9:;
			{
				_1a528690b_lex_range_comment(&(*_self_), _76717_t);
				return _76717_t;
			}
		}
		else if (_1a528838b_is_op(&(*_self_), _77213_txt,jule::Str("(", 1),static_cast<jule::U64>(3LLU),_76717_t) || _1a528838b_is_op(&(*_self_), _77213_txt,jule::Str(")", 1),static_cast<jule::U64>(3LLU),_76717_t) || _1a528838b_is_op(&(*_self_), _77213_txt,jule::Str("{", 1),static_cast<jule::U64>(3LLU),_76717_t) || _1a528838b_is_op(&(*_self_), _77213_txt,jule::Str("}", 1),static_cast<jule::U64>(3LLU),_76717_t) || _1a528838b_is_op(&(*_self_), _77213_txt,jule::Str("[", 1),static_cast<jule::U64>(3LLU),_76717_t) || _1a528838b_is_op(&(*_self_), _77213_txt,jule::Str("]", 1),static_cast<jule::U64>(3LLU),_76717_t) || _1a5288743_lex_basic_ops(&(*_self_), _77213_txt,_76717_t)) {
			_case_begin_1a8e7ec60:;
			{
				goto _match_end_1a8e7e9a7;
			}
		}
		else if (_1a5288aea_lex_id(&(*_self_), _77213_txt,_76717_t)) {
			_case_begin_1a8e81327:;
			{
				{
					auto &expr = _1a527ec12_KEYWORDS;
					auto it = expr.begin();
					_iter_begin_1a8e87aae:;
					if (it != expr.end()) {
						_1a527e838_KindPair &_81020_pair = *it;
						{
							if ((_81020_pair._field_kind == _76717_t.get()._field_kind)) {
								_76717_t.get()._field_id=_81020_pair._field_id;
								goto _iter_end_1a8e87aae;
							};
						}
						_iter_next_1a8e87aae:;
						++it;
						goto _iter_begin_1a8e87aae;
					}
					_iter_end_1a8e87aae:;
				};
			}
		}
		else {
			_case_begin_1a8e7eaa6:;
			{
				jule::I32 _81718_r;;
				jule::I64 _81721_sz;;
				std::tie(_81718_r,_81721_sz) = _1a4291670_decode_rune(_77213_txt);
				_1a5285894_push_err(&(*_self_), jule::Str("undefined token: @", 18),jule::Slice<jule::Any>::make({jule::Any(_81718_r)}));
				((*_self_)._field_column)++;
				(*_self_)._field_pos+=_81721_sz;
				return _76717_t;
			}
		}
		_match_end_1a8e7e9a7:;
	};
	(*_self_)._field_column+=_1a42932dc_rune_count_str(_76717_t.get()._field_kind);
	return _76717_t;
}







std::ostream &operator<<(std::ostream &_Stream, _1a5285300_Lex _Src) {
	_Stream << "Lex{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a6820cc9_Ast _Src) {
	_Stream << "Ast{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "top_directives:" << _Src._field_top_directives << ", ";
	_Stream << "use_decls:" << _Src._field_use_decls << ", ";
	_Stream << "nodes:" << _Src._field_nodes;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a6821d52_is_decl(_1a6821934_Node* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1a6868e10_EnumDecl>>() || _match_expr.type_is<jule::Ptr<_1a6862205_FnDecl>>() || _match_expr.type_is<jule::Ptr<_1a686a296_StructDecl>>() || _match_expr.type_is<jule::Ptr<_1a686a8a1_TraitDecl>>() || _match_expr.type_is<jule::Ptr<_1a6866957_TypeAliasDecl>>() || _match_expr.type_is<jule::Ptr<_1a6869938_FieldDecl>>() || _match_expr.type_is<jule::Ptr<_1a6867d43_UseDecl>>() || _match_expr.type_is<jule::Ptr<_1a68631d4_VarDecl>>() || _match_expr.type_is<jule::Ptr<_1a68529cb_TypeDecl>>()) {
			_case_begin_1a8ee7a0e:;
			{
				return true;
			}
		}
		else {
			_case_begin_1a8ee7c62:;
			{
				return false;
			}
		}
		_match_end_1a8ee7c0c:;
	};
}



inline jule::Bool _1a68220b6_is_directive(_1a6821934_Node* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1a6852525_Directive>>()) {
			_case_begin_1a8ee9703:;
			{
				return true;
			}
		}
		else {
			_case_begin_1a8ee9945:;
			{
				return false;
			}
		}
		_match_end_1a8ee98e0:;
	};
}



inline jule::Bool _1a682232a_is_impl(_1a6821934_Node* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1a686aeab_Impl>>()) {
			_case_begin_1a8eea649:;
			{
				return true;
			}
		}
		else {
			_case_begin_1a8eea89c:;
			{
				return false;
			}
		}
		_match_end_1a8eea847:;
	};
}



inline jule::Bool _1a685216d_is_use_decl(_1a6821934_Node* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1a6867d43_UseDecl>>()) {
			_case_begin_1a8eeb5c3:;
			{
				return true;
			}
		}
		else {
			_case_begin_1a8eeb826:;
			{
				return false;
			}
		}
		_match_end_1a8eeb7c1:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a6821934_Node _Src) {
	_Stream << "Node{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a6852525_Directive _Src) {
	_Stream << "Directive{";
	_Stream << "tag:" << _Src._field_tag << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a68529cb_TypeDecl _Src) {
	_Stream << "TypeDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a68533b1_is_prim(_1a685305e_IdentTypeDecl* _self_) {
	return ((*_self_)._field_token.get()._field_id == static_cast<jule::U64>(1LLU));
}







std::ostream &operator<<(std::ostream &_Stream, _1a685305e_IdentTypeDecl _Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "generics:" << _Src._field_generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a6853768_NamespaceTypeDecl _Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "idents:" << _Src._field_idents << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a6853a54_SptrTypeDecl _Src) {
	_Stream << "SptrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a6853d40_SlcTypeDecl _Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a68541b4_TupleTypeDecl _Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "types:" << _Src._field_types;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a6854879_is_unsafe(_1a68544a0_PtrTypeDecl* _self_) {
	return ((*_self_)._field_elem == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1a68544a0_PtrTypeDecl _Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a6855050_auto_sized(_1a6854bed_ArrTypeDecl* _self_) {
	return ((*_self_)._field_size == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1a6854bed_ArrTypeDecl _Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a6855407_MapTypeDecl _Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a68557ae_RetTypeDecl _Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "idents:" << _Src._field_idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a6855e41_Expr _Src) {
	_Stream << "Expr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "range:" << _Src._field_range << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a68562e8_UseExpr _Src) {
	_Stream << "UseExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a68565d4_TupleExpr _Src) {
	_Stream << "TupleExpr{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a6856e0e_is_nil(_1a6856aac_LitExpr* _self_) {
	return ((*_self_)._field_value == jule::Str("nil", 3));
}







std::ostream &operator<<(std::ostream &_Stream, _1a6856aac_LitExpr _Src) {
	_Stream << "LitExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "value:" << _Src._field_value;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a68572b6_UnsafeExpr _Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a685766d_CoExpr _Src) {
	_Stream << "CoExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a6857e43_is_self(_1a6857ae1_IdentExpr* _self_) {
	return ((*_self_)._field_ident == jule::Str("self", 4));
}







std::ostream &operator<<(std::ostream &_Stream, _1a6857ae1_IdentExpr _Src) {
	_Stream << "IdentExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a68582ea_UnaryExpr _Src) {
	_Stream << "UnaryExpr{";
	_Stream << "op:" << _Src._field_op << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a68586a2_VariadicExpr _Src) {
	_Stream << "VariadicExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a6858a59_CastExpr _Src) {
	_Stream << "CastExpr{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a6858e11_NsSelectionExpr _Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "ns:" << _Src._field_ns << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a6859384_SubIdentExpr _Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "is_self:" << _Src._field_is_self << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a6859807_BinopExpr _Src) {
	_Stream << "BinopExpr{";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a685a385_unhandled(_1a6859e12_FnCallExpr* _self_) {
	return ((*_self_)._field_exception == nullptr);
}



inline jule::Bool _1a685a5e9_ignored(_1a6859e12_FnCallExpr* _self_) {
	return (((*_self_)._field_exception != nullptr) && (*_self_)._field_exception.get()._field_deferred);
}







std::ostream &operator<<(std::ostream &_Stream, _1a6859e12_FnCallExpr _Src) {
	_Stream << "FnCallExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "exception:" << _Src._field_exception;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a685ac7b_is_targeted(_1a685a929_FieldExprPair* _self_) {
	return ((*_self_)._field_field != nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1a685a929_FieldExprPair _Src) {
	_Stream << "FieldExprPair{";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a685b1ee_StructLit _Src) {
	_Stream << "StructLit{";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a685b9c4_is_empty(_1a685b672_BraceLit* _self_) {
	return ((*_self_)._field_exprs.len() == 0LL);
}







std::ostream &operator<<(std::ostream &_Stream, _1a685b672_BraceLit _Src) {
	_Stream << "BraceLit{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a685be47_KeyValPair _Src) {
	_Stream << "KeyValPair{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val << ", ";
	_Stream << "colon:" << _Src._field_colon;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a685ca3b_is_empty(_1a685c3ba_SliceExpr* _self_) {
	return ((*_self_)._field_exprs.len() == 0LL);
}







std::ostream &operator<<(std::ostream &_Stream, _1a685c3ba_SliceExpr _Src) {
	_Stream << "SliceExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a685ce9d_IndexingExpr _Src) {
	_Stream << "IndexingExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "index:" << _Src._field_index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a685d5a8_SlicingExpr _Src) {
	_Stream << "SlicingExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "start:" << _Src._field_start << ", ";
	_Stream << "to:" << _Src._field_to;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a685d960_GenericDecl _Src) {
	_Stream << "GenericDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a685dd17_LabelSt _Src) {
	_Stream << "LabelSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a685e1be_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a685e4aa_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "token:" << _Src._field_token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a685eab5_AssignLeft _Src) {
	_Stream << "AssignLeft{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a6860104_AssignSt _Src) {
	_Stream << "AssignSt{";
	_Stream << "declarative:" << _Src._field_declarative << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a686070e_ScopeTree _Src) {
	_Stream << "ScopeTree{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "deferred:" << _Src._field_deferred << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "end:" << _Src._field_end;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a6861248_is_self(_1a6860dd5_ParamDecl* _self_) {
	return (((*_self_)._field_ident == jule::Str("&self", 5)) || ((*_self_)._field_ident == jule::Str("self", 4)));
}







std::ostream &operator<<(std::ostream &_Stream, _1a6860dd5_ParamDecl _Src) {
	_Stream << "ParamDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "variadic:" << _Src._field_variadic << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a6862557_is_anon(_1a6862205_FnDecl* _self_) {
	return ((*_self_)._field_ident == jule::Str("<anonymous>", 11));
}







std::ostream &operator<<(std::ostream &_Stream, _1a6862205_FnDecl _Src) {
	_Stream << "FnDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "global:" << _Src._field_global << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "exceptional:" << _Src._field_exceptional << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "params:" << _Src._field_params;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a68631d4_VarDecl _Src) {
	_Stream << "VarDecl{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "constant:" << _Src._field_constant << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a686358b_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a6863e60_is_inf(_1a6863b0d_Iter* _self_) {
	return ((*_self_)._field_kind == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1a6863b0d_Iter _Src) {
	_Stream << "Iter{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a6864735_is_while_next(_1a68643d3_WhileKind* _self_) {
	return ((*_self_)._field_next != nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1a68643d3_WhileKind _Src) {
	_Stream << "WhileKind{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "next:" << _Src._field_next << ", ";
	_Stream << "next_token:" << _Src._field_next_token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a6864c74_RangeKind _Src) {
	_Stream << "RangeKind{";
	_Stream << "in_token:" << _Src._field_in_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "key_a:" << _Src._field_key_a << ", ";
	_Stream << "key_b:" << _Src._field_key_b;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a686512b_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a68654d3_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a6865956_If _Src) {
	_Stream << "If{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a6865d0d_Else _Src) {
	_Stream << "Else{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a6866281_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "head:" << _Src._field_head << ", ";
	_Stream << "tail:" << _Src._field_tail << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a6866957_TypeAliasDecl _Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a6866dca_Case _Src) {
	_Stream << "Case{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a68675a1_MatchCase _Src) {
	_Stream << "MatchCase{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "type_match:" << _Src._field_type_match << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "cases:" << _Src._field_cases << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a6867d43_UseDecl _Src) {
	_Stream << "UseDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "link_path:" << _Src._field_link_path << ", ";
	_Stream << "alias:" << _Src._field_alias << ", ";
	_Stream << "full:" << _Src._field_full << ", ";
	_Stream << "selected:" << _Src._field_selected << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "std:" << _Src._field_std;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a6868849_auto_expr(_1a68682b6_EnumItemDecl* _self_) {
	return ((*_self_)._field_expr == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1a68682b6_EnumItemDecl _Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a6869262_default_typed(_1a6868e10_EnumDecl* _self_) {
	return ((*_self_)._field_kind == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1a6868e10_EnumDecl _Src) {
	_Stream << "EnumDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "items:" << _Src._field_items << ", ";
	_Stream << "end:" << _Src._field_end;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a6869938_FieldDecl _Src) {
	_Stream << "FieldDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a686a296_StructDecl _Src) {
	_Stream << "StructDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "fields:" << _Src._field_fields << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "generics:" << _Src._field_generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a686a8a1_TraitDecl _Src) {
	_Stream << "TraitDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "methods:" << _Src._field_methods;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a686b31e_is_trait_impl(_1a686aeab_Impl* _self_) {
	return ((*_self_)._field_base != nullptr);
}



inline jule::Bool _1a686b583_is_struct_impl(_1a686aeab_Impl* _self_) {
	return ((*_self_)._field_base == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1a686aeab_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "base:" << _Src._field_base << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "statics:" << _Src._field_statics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a72b4cde_FloatInfo _Src) {
	_Stream << "FloatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a6d11bc1_DecimalSlice _Src) {
	_Stream << "DecimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a753757d_LeftCheat _Src) {
	_Stream << "LeftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a7303756_set(_1a753776a_Decimal* _self_, jule::Str _23322_s) {
	jule::Bool _23332_ok = jule::Bool();
	jule::I64 _23417_i = 0LL;;
	(*_self_)._field_neg=false;
	(*_self_)._field_trunc=false;
	if ((_23417_i >= _23322_s.len())) {
		return _23332_ok;
	};
	{
		
		if ((_23322_s[_23417_i] == '+')) {
			_case_begin_1a94ee235:;
			{
				(_23417_i)++;
			}
		}
		else if ((_23322_s[_23417_i] == '-')) {
			_case_begin_1a94ee433:;
			{
				(*_self_)._field_neg=true;
				(_23417_i)++;
			}
		}
		_match_end_1a94ede8d:;
	};
	jule::Bool _25117_sawdot = false;;
	jule::Bool _25217_sawdigits = false;;
	for (; (_23417_i < _23322_s.len()); (_23417_i)++) {
		{
			{
				
				if ((_23322_s[_23417_i] == '_')) {
					_case_begin_1a9501325:;
					{
						goto _iter_next_1a9500a61;
					}
				}
				else if ((_23322_s[_23417_i] == '.')) {
					_case_begin_1a950139c:;
					{
						if (_25117_sawdot) {
							return _23332_ok;
						};
						_25117_sawdot=true;
						(*_self_)._field_dp=(*_self_)._field_nd;
						goto _iter_next_1a9500a61;
					}
				}
				else if ((('0' <= _23322_s[_23417_i]) && (_23322_s[_23417_i] <= '9'))) {
					_case_begin_1a9501424:;
					{
						_25217_sawdigits=true;
						if (((_23322_s[_23417_i] == '0') && ((*_self_)._field_nd == 0LL))) {
							((*_self_)._field_dp)--;
							goto _iter_next_1a9500a61;
						};
						if (((*_self_)._field_nd < 800LL)) {
							(*_self_)._field_d[(*_self_)._field_nd]=_23322_s[_23417_i];
							((*_self_)._field_nd)++;
						} else if ((_23322_s[_23417_i] != '0')) {
							(*_self_)._field_trunc=true;
						};
						goto _iter_next_1a9500a61;
					}
				}
				_match_end_1a9501204:;
			};
			goto _iter_end_1a9500a61;
		}
	_iter_next_1a9500a61:;
	}
	_iter_end_1a9500a61:;;
	if ((!(_25217_sawdigits))) {
		return _23332_ok;
	};
	if ((!(_25117_sawdot))) {
		(*_self_)._field_dp=(*_self_)._field_nd;
	};
	if (((_23417_i < _23322_s.len()) && (_1a7306b99_lower(_23322_s[_23417_i]) == 'e'))) {
		(_23417_i)++;
		if ((_23417_i >= _23322_s.len())) {
			return _23332_ok;
		};
		jule::I64 _29721_esign = 1LL;;
		if ((_23322_s[_23417_i] == '+')) {
			(_23417_i)++;
		} else if ((_23322_s[_23417_i] == '-')) {
			(_23417_i)++;
			_29721_esign=-1LL;
		};
		if ((((_23417_i >= _23322_s.len()) || (_23322_s[_23417_i] < '0')) || (_23322_s[_23417_i] > '9'))) {
			return _23332_ok;
		};
		jule::I64 _30721_e = 0LL;;
		for (; ((_23417_i < _23322_s.len()) && ((('0' <= _23322_s[_23417_i]) && (_23322_s[_23417_i] <= '9')) || (_23322_s[_23417_i] == '_'))); (_23417_i)++) {
			{
				if ((_23322_s[_23417_i] == '_')) {
					goto _iter_next_1a950d9a3;
				};
				if ((_30721_e < 10000LL)) {
					_30721_e=static_cast<jule::I64>((((_30721_e * 10LL) + static_cast<jule::I64>(_23322_s[_23417_i])) - '0'));
				};
			}
		_iter_next_1a950d9a3:;
		}
		_iter_end_1a950d9a3:;;
		(*_self_)._field_dp+=(_30721_e * _29721_esign);
	};
	if ((_23417_i != _23322_s.len())) {
		return _23332_ok;
	};
	_23332_ok=true;
	return _23332_ok;
}



inline std::tuple<jule::U64,jule::Bool> _1a715606a_float_bits(_1a753776a_Decimal* _self_, _1a72b4cde_FloatInfo& _32730_flt) {
	jule::U64 _32748_b = jule::U64();
	jule::Bool _32756_overflow = jule::Bool();
	jule::I64 _32817_exp = 0LL;;
	jule::U64 _32917_mant = 0LLU;;
	if (((*_self_)._field_nd == 0LL)) {
		_32917_mant=0LLU;
		_32817_exp=_32730_flt._field_bias;
		goto _julec_label_out;
	};
	if (((*_self_)._field_dp > 310LL)) {
		goto _julec_label_overflow;
	};
	if (((*_self_)._field_dp < -330LL)) {
		_32917_mant=0LLU;
		_32817_exp=_32730_flt._field_bias;
		goto _julec_label_out;
	};
	_32817_exp=0LL;
	while (((*_self_)._field_dp > 0LL)) {
		{
			jule::I64 _35421_n = 0LL;;
			if (((*_self_)._field_dp >= _1a6dddc04_POWTAB.len())) {
				_35421_n=27LL;
			} else {
				_35421_n=_1a6dddc04_POWTAB[(*_self_)._field_dp];
			};
			_1a7537a89_shift(&(*_self_), static_cast<jule::I64>((-(_35421_n))));
			_32817_exp+=_35421_n;
		}
	_iter_next_1a951537d:;
	}
	_iter_end_1a951537d:;;
	while ((((*_self_)._field_dp < 0LL) || (((*_self_)._field_dp == 0LL) && ((*_self_)._field_d[0LL] < '5')))) {
		{
			jule::I64 _36421_n = 0LL;;
			if (((-((*_self_)._field_dp)) >= _1a6dddc04_POWTAB.len())) {
				_36421_n=27LL;
			} else {
				_36421_n=_1a6dddc04_POWTAB[(-((*_self_)._field_dp))];
			};
			_1a7537a89_shift(&(*_self_), _36421_n);
			_32817_exp-=_36421_n;
		}
	_iter_next_1a9517094:;
	}
	_iter_end_1a9517094:;;
	(_32817_exp)--;
	if ((_32817_exp < (_32730_flt._field_bias + 1LL))) {
		jule::I64 _38117_n = ((_32730_flt._field_bias + 1LL) - _32817_exp);;
		_1a7537a89_shift(&(*_self_), static_cast<jule::I64>((-(_38117_n))));
		_32817_exp+=_38117_n;
	};
	if (((_32817_exp - _32730_flt._field_bias) >= static_cast<jule::I64>(((1LL << _32730_flt._field_expbits) - 1LL)))) {
		goto _julec_label_overflow;
	};
	_1a7537a89_shift(&(*_self_), static_cast<jule::I64>(static_cast<jule::I64>((1LL + _32730_flt._field_mantbits))));
	_32917_mant=static_cast<jule::U64>(_1a7538062_rounded_integer(&(*_self_)));
	if ((_32917_mant == (2LLU << _32730_flt._field_mantbits))) {
		_32917_mant>>=1LLU;
		(_32817_exp)++;
		if (((_32817_exp - _32730_flt._field_bias) >= static_cast<jule::I64>(((1LL << _32730_flt._field_expbits) - 1LL)))) {
			goto _julec_label_overflow;
		};
	};
	if (((_32917_mant & (1LLU << _32730_flt._field_mantbits)) == 0LLU)) {
		_32817_exp=_32730_flt._field_bias;
	};
	goto _julec_label_out;
	_julec_label_overflow:;
	_32917_mant=0LLU;
	_32817_exp=static_cast<jule::I64>(static_cast<jule::I64>((((static_cast<jule::U64>(1LLU) << _32730_flt._field_expbits) - 1LLU) + static_cast<jule::U64>(_32730_flt._field_bias))));
	_32756_overflow=true;
	_julec_label_out:;
	jule::U64 _41717_bits = (_32917_mant & ((1LLU << _32730_flt._field_mantbits) - 1LLU));;
	_41717_bits|=(static_cast<jule::U64>(((_32817_exp - _32730_flt._field_bias) & static_cast<jule::I64>(((1LL << _32730_flt._field_expbits) - 1LL)))) << _32730_flt._field_mantbits);
	if ((*_self_)._field_neg) {
		_41717_bits|=((1LLU << _32730_flt._field_mantbits) << _32730_flt._field_expbits);
	};
	_32748_b = _41717_bits;
	return std::make_tuple(_32748_b,_32756_overflow);
}



inline void _1a7537957_assign(_1a753776a_Decimal* _self_, jule::U64 _21029_v) {
	jule::Array<jule::U8,24> _21117_buf = jule::Array<jule::U8,24>();;
	jule::I64 _21417_n = 0LL;;
	while ((_21029_v > 0LLU)) {
		{
			jule::U64 _21617_v1 = (_21029_v / 10LLU);;
			_21029_v-=(10LLU * _21617_v1);
			_21117_buf[_21417_n]=static_cast<jule::U8>(static_cast<jule::U8>((_21029_v + '0')));
			(_21417_n)++;
			_21029_v=_21617_v1;
		}
	_iter_next_1a9523644:;
	}
	_iter_end_1a9523644:;;
	(*_self_)._field_nd=0LL;
	(_21417_n)--;
	for (; (_21417_n >= 0LL); (_21417_n)--) {
		{
			(*_self_)._field_d[(*_self_)._field_nd]=_21117_buf[_21417_n];
			((*_self_)._field_nd)++;
		}
	_iter_next_1a9524348:;
	}
	_iter_end_1a9524348:;;
	(*_self_)._field_dp=(*_self_)._field_nd;
	_1a75382c6_trim((*_self_));
}



inline void _1a7537a89_shift(_1a753776a_Decimal* _self_, jule::I64 _23528_k) {
	{
		
		if (((*_self_)._field_nd == 0LL)) {
			_case_begin_1a952613b:;
		}
		else if ((_23528_k > 0LL)) {
			_case_begin_1a95261b3:;
			{
				while ((_23528_k > 60LL)) {
					{
						_1a753866c_left_shift((*_self_),60LLU);
						_23528_k-=60LL;
					}
				_iter_next_1a952689a:;
				}
				_iter_end_1a952689a:;;
				_1a753866c_left_shift((*_self_),static_cast<jule::U64>(static_cast<jule::U64>(_23528_k)));
			}
		}
		else if ((_23528_k < 0LL)) {
			_case_begin_1a952623a:;
			{
				while ((_23528_k < -60LL)) {
					{
						_1a7538408_right_shift((*_self_),60LLU);
						_23528_k+=60LL;
					}
				_iter_next_1a95277be:;
				}
				_iter_end_1a95277be:;;
				_1a7538408_right_shift((*_self_),static_cast<jule::U64>(static_cast<jule::U64>((-(_23528_k)))));
			}
		}
		_match_end_1a952601a:;
	};
}



inline void _1a7537bbb_round_down(_1a753776a_Decimal* _self_, jule::I64 _25529_nd) {
	if (((_25529_nd < 0LL) || (_25529_nd >= (*_self_)._field_nd))) {
		return;;
	};
	(*_self_)._field_nd=_25529_nd;
	_1a75382c6_trim((*_self_));
}



inline void _1a7537ced_round_up(_1a753776a_Decimal* _self_, jule::I64 _26427_nd) {
	if (((_26427_nd < 0LL) || (_26427_nd >= (*_self_)._field_nd))) {
		return;;
	};
	jule::I64 _27017_i = (_26427_nd - 1LL);;
	for (; (_27017_i >= 0LL); (_27017_i)--) {
		{
			jule::U8 _27217_c = (*_self_)._field_d[_27017_i];;
			if ((_27217_c < '9')) {
				((*_self_)._field_d[_27017_i])++;
				(*_self_)._field_nd=static_cast<jule::I64>((_27017_i + 1LL));
				return;;
			};
		}
	_iter_next_1a9529a68:;
	}
	_iter_end_1a9529a68:;;
	(*_self_)._field_d[0LL]='1';
	(*_self_)._field_nd=1LL;
	((*_self_)._field_dp)++;
}



inline void _1a7537e30_round(_1a753776a_Decimal* _self_, jule::I64 _29124_nd) {
	if (((_29124_nd < 0LL) || (_29124_nd >= (*_self_)._field_nd))) {
		return;;
	};
	if (_1a753879e_should_round_up((*_self_),_29124_nd)) {
		_1a7537ced_round_up(&(*_self_), _29124_nd);
	} else {
		_1a7537bbb_round_down(&(*_self_), _29124_nd);
	};
}



inline jule::U64 _1a7538062_rounded_integer(_1a753776a_Decimal* _self_) {
	if (((*_self_)._field_dp > 20LL)) {
		return jule::MAX_U64;
	};
	jule::I64 _30817_i = 0LL;;
	jule::U64 _30917_n = 0LLU;;
	for (; ((_30817_i < (*_self_)._field_dp) && (_30817_i < (*_self_)._field_nd)); (_30817_i)++) {
		{
			_30917_n=static_cast<jule::U64>(((_30917_n * 10LLU) + static_cast<jule::U64>(((*_self_)._field_d[_30817_i] - '0'))));
		}
	_iter_next_1a952e221:;
	}
	_iter_end_1a952e221:;;
	for (; (_30817_i < (*_self_)._field_dp); (_30817_i)++) {
		{
			_30917_n*=10LLU;
		}
	_iter_next_1a9531531:;
	}
	_iter_end_1a9531531:;;
	if (_1a753879e_should_round_up((*_self_),(*_self_)._field_dp)) {
		(_30917_n)++;
	};
	return _30917_n;
}







std::ostream &operator<<(std::ostream &_Stream, _1a753776a_Decimal _Src) {
	_Stream << "Decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a75c3251_Const> static__1a75c2250_new_i64(jule::I64 _1327_x) {
	return jule::new_ptr<_1a75c3251_Const>(_1a75c3251_Const{._field_data=jule::Any(_1327_x)});
}



inline jule::Ptr<_1a75c3251_Const> static__1a75c343d_new_u64(jule::U64 _1627_x) {
	return jule::new_ptr<_1a75c3251_Const>(_1a75c3251_Const{._field_data=jule::Any(_1627_x)});
}



inline jule::Ptr<_1a75c3251_Const> static__1a75c3691_new_bool(jule::Bool _1928_x) {
	return jule::new_ptr<_1a75c3251_Const>(_1a75c3251_Const{._field_data=jule::Any(_1928_x)});
}



inline jule::Ptr<_1a75c3251_Const> static__1a75c3938_new_str(jule::Str _2227_x) {
	return jule::new_ptr<_1a75c3251_Const>(_1a75c3251_Const{._field_data=jule::Any(_2227_x)});
}



inline jule::Ptr<_1a75c3251_Const> static__1a75c3bd0_new_f64(jule::F64 _2527_x) {
	return jule::new_ptr<_1a75c3251_Const>(_1a75c3251_Const{._field_data=jule::Any(_2527_x)});
}



inline jule::Ptr<_1a75c3251_Const> static__1a75c3dcd_new_nil(void) {
	return jule::new_ptr<_1a75c3251_Const>(_1a75c3251_Const{._field_data=nullptr});
}



inline jule::I64 _1a75c44c7_read_i64(_1a75c3251_Const* _self_) {
	if ((!(_1a75c6870_is_i64(&(*_self_))))) {
		return 0LL;
	};
	return static_cast<jule::I64>((*_self_)._field_data.operator jule::I64());
}



inline jule::U64 _1a75c473b_read_u64(_1a75c3251_Const* _self_) {
	if ((!(_1a75c6ad4_is_u64(&(*_self_))))) {
		return 0LLU;
	};
	return static_cast<jule::U64>((*_self_)._field_data.operator jule::U64());
}



inline jule::Bool _1a75c49a0_read_bool(_1a75c3251_Const* _self_) {
	if ((!(_1a75c6d48_is_bool(&(*_self_))))) {
		return false;
	};
	return (*_self_)._field_data.operator jule::Bool();
}



inline jule::Str _1a75c4c14_read_str(_1a75c3251_Const* _self_) {
	if ((!(_1a75c70ac_is_str(&(*_self_))))) {
		return jule::Str();
	};
	return (*_self_)._field_data.operator jule::Str();
}



inline jule::F64 _1a75c4e78_read_f64(_1a75c3251_Const* _self_) {
	if ((!(_1a75c7321_is_f64(&(*_self_))))) {
		return 0LL;
	};
	return static_cast<jule::F64>((*_self_)._field_data.operator jule::F64());
}



inline jule::I64 _1a75c51dc_as_i64(_1a75c3251_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1a957194a:;
			{
				return static_cast<jule::I64>((*_self_)._field_data.operator jule::I64());
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1a95719b1:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_data.operator jule::U64()));
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1a9571b9d:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_data.operator jule::F64()));
			}
		}
		else {
			_case_begin_1a957150a:;
			{
				return 0LL;
			}
		}
		_match_end_1a95714a5:;
	};
}



inline jule::U64 _1a75c5451_as_u64(_1a75c3251_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1a957385e:;
			{
				return static_cast<jule::U64>((*_self_)._field_data.operator jule::U64());
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1a95738c5:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*_self_)._field_data.operator jule::I64()));
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1a9573ab2:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*_self_)._field_data.operator jule::F64()));
			}
		}
		else {
			_case_begin_1a957341e:;
			{
				return 0LLU;
			}
		}
		_match_end_1a95733b9:;
	};
}



inline jule::F64 _1a75c56b5_as_f64(_1a75c3251_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1a9575773:;
			{
				return static_cast<jule::F64>((*_self_)._field_data.operator jule::F64());
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1a95757d9:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*_self_)._field_data.operator jule::I64()));
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1a95759c6:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*_self_)._field_data.operator jule::U64()));
			}
		}
		else {
			_case_begin_1a9575333:;
			{
				return 0LL;
			}
		}
		_match_end_1a95752cd:;
	};
}



inline void _1a75c593a_set_i64(_1a75c3251_Const* _self_, jule::I64 _13530_x) {
	(*_self_)._field_data=jule::Any(_13530_x);
}



inline void _1a75c5bb0_set_u64(_1a75c3251_Const* _self_, jule::U64 _13830_x) {
	(*_self_)._field_data=jule::Any(_13830_x);
}



inline void _1a75c5e35_set_bool(_1a75c3251_Const* _self_, jule::Bool _14131_x) {
	(*_self_)._field_data=jule::Any(_14131_x);
}



inline void _1a75c61aa_set_str(_1a75c3251_Const* _self_, jule::Str _14430_x) {
	(*_self_)._field_data=jule::Any(_14430_x);
}



inline void _1a75c6430_set_f64(_1a75c3251_Const* _self_, jule::F64 _14730_x) {
	(*_self_)._field_data=jule::Any(_14730_x);
}



inline void _1a75c660b_set_nil(_1a75c3251_Const* _self_) {
	(*_self_)._field_data=nullptr;
}



inline jule::Bool _1a75c6870_is_i64(_1a75c3251_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1a957b070:;
			{
				return true;
			}
		}
		else {
			_case_begin_1a957b306:;
			{
				return false;
			}
		}
		_match_end_1a957b2a1:;
	};
}



inline jule::Bool _1a75c6ad4_is_u64(_1a75c3251_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1a957bd0c:;
			{
				return true;
			}
		}
		else {
			_case_begin_1a957b757:;
			{
				return false;
			}
		}
		_match_end_1a957b702:;
	};
}



inline jule::Bool _1a75c6d48_is_bool(_1a75c3251_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Bool>()) {
			_case_begin_1a957c7ad:;
			{
				return true;
			}
		}
		else {
			_case_begin_1a957c208:;
			{
				return false;
			}
		}
		_match_end_1a957c1a3:;
	};
}



inline jule::Bool _1a75c70ac_is_str(_1a75c3251_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Str>()) {
			_case_begin_1a957d25e:;
			{
				return true;
			}
		}
		else {
			_case_begin_1a957cba9:;
			{
				return false;
			}
		}
		_match_end_1a957cb54:;
	};
}



inline jule::Bool _1a75c7321_is_f64(_1a75c3251_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1a957dc10:;
			{
				return true;
			}
		}
		else {
			_case_begin_1a957d65a:;
			{
				return false;
			}
		}
		_match_end_1a957d605:;
	};
}



inline jule::Bool _1a75c7585_is_nil(_1a75c3251_Const* _self_) {
	return ((*_self_)._field_data == nullptr);
}



inline jule::Bool _1a75c7893_are_same_types(_1a75c3251_Const* _self_, _1a75c3251_Const _21033_x) {
	{
		
		if ((_1a75c6870_is_i64(&(*_self_)) == _1a75c6870_is_i64(&_21033_x))) {
			_case_begin_1a9580d99:;
			{
				return true;
			}
		}
		else if ((_1a75c6ad4_is_u64(&(*_self_)) == _1a75c6ad4_is_u64(&_21033_x))) {
			_case_begin_1a9580e54:;
			{
				return true;
			}
		}
		else if ((_1a75c7321_is_f64(&(*_self_)) == _1a75c7321_is_f64(&_21033_x))) {
			_case_begin_1a9580ecb:;
			{
				return true;
			}
		}
		else if ((_1a75c6d48_is_bool(&(*_self_)) == _1a75c6d48_is_bool(&_21033_x))) {
			_case_begin_1a9580bac:;
			{
				return true;
			}
		}
		else if ((_1a75c70ac_is_str(&(*_self_)) == _1a75c70ac_is_str(&_21033_x))) {
			_case_begin_1a9580c34:;
			{
				return true;
			}
		}
		else if ((_1a75c7585_is_nil(&(*_self_)) == _1a75c7585_is_nil(&_21033_x))) {
			_case_begin_1a95807b1:;
			{
				return true;
			}
		}
		else {
			_case_begin_1a958074a:;
			{
				return false;
			}
		}
		_match_end_1a958067e:;
	};
}



inline jule::Bool _1a75c7ba1_and(_1a75c3251_Const* _self_, _1a75c3251_Const _23522_x) {
	{
		
		if ((_1a75c6d48_is_bool(&(*_self_)) && _1a75c6d48_is_bool(&_23522_x))) {
			_case_begin_1a95846d8:;
			{
				return (_1a75c49a0_read_bool(&(*_self_)) && _1a75c49a0_read_bool(&_23522_x));
			}
		}
		else {
			_case_begin_1a95840de:;
			{
				return false;
			}
		}
		_match_end_1a9584023:;
	};
}



inline jule::Bool _1a75c7eae_or(_1a75c3251_Const* _self_, _1a75c3251_Const _24621_x) {
	{
		
		if ((_1a75c6d48_is_bool(&(*_self_)) && _1a75c6d48_is_bool(&_24621_x))) {
			_case_begin_1a95860e1:;
			{
				return (_1a75c49a0_read_bool(&(*_self_)) || _1a75c49a0_read_bool(&_24621_x));
			}
		}
		else {
			_case_begin_1a95859e7:;
			{
				return false;
			}
		}
		_match_end_1a958592b:;
	};
}



inline jule::Bool _1a75c82bc_eq(_1a75c3251_Const* _self_, _1a75c3251_Const _25721_x) {
	{
		
		if (_1a75c7585_is_nil(&(*_self_))) {
			_case_begin_1a9587510:;
			{
				return _1a75c7585_is_nil(&_25721_x);
			}
		}
		else if (_1a75c6d48_is_bool(&(*_self_))) {
			_case_begin_1a95875a9:;
			{
				return (_1a75c6d48_is_bool(&_25721_x) && (_1a75c49a0_read_bool(&(*_self_)) == _1a75c49a0_read_bool(&_25721_x)));
			}
		}
		else if (_1a75c70ac_is_str(&(*_self_))) {
			_case_begin_1a9587620:;
			{
				return (_1a75c70ac_is_str(&_25721_x) && (_1a75c4c14_read_str(&(*_self_)) == _1a75c4c14_read_str(&_25721_x)));
			}
		}
		else if (_1a75c6870_is_i64(&(*_self_))) {
			_case_begin_1a9587323:;
			{
				return (_1a75c44c7_read_i64(&(*_self_)) == _1a75c51dc_as_i64(&_25721_x));
			}
		}
		else if (_1a75c6ad4_is_u64(&(*_self_))) {
			_case_begin_1a9587389:;
			{
				return (_1a75c473b_read_u64(&(*_self_)) == _1a75c5451_as_u64(&_25721_x));
			}
		}
		else if (_1a75c7321_is_f64(&(*_self_))) {
			_case_begin_1a9587400:;
			{
				return (_1a75c4e78_read_f64(&(*_self_)) == _1a75c56b5_as_f64(&_25721_x));
			}
		}
		else {
			_case_begin_1a95865a8:;
			{
				return false;
			}
		}
		_match_end_1a95864dc:;
	};
}



inline jule::Bool _1a75c85ca_lt(_1a75c3251_Const* _self_, _1a75c3251_Const _28421_x) {
	{
		
		if (_1a75c70ac_is_str(&(*_self_))) {
			_case_begin_1a958b6ce:;
			{
				return (_1a75c70ac_is_str(&_28421_x) && (_1a75c4c14_read_str(&(*_self_)) < _1a75c4c14_read_str(&_28421_x)));
			}
		}
		else if (_1a75c6870_is_i64(&(*_self_))) {
			_case_begin_1a958b79a:;
			{
				return (_1a75c44c7_read_i64(&(*_self_)) < _1a75c51dc_as_i64(&_28421_x));
			}
		}
		else if (_1a75c6ad4_is_u64(&(*_self_))) {
			_case_begin_1a958b811:;
			{
				return (_1a75c473b_read_u64(&(*_self_)) < _1a75c5451_as_u64(&_28421_x));
			}
		}
		else if (_1a75c7321_is_f64(&(*_self_))) {
			_case_begin_1a958b514:;
			{
				return (_1a75c4e78_read_f64(&(*_self_)) < _1a75c56b5_as_f64(&_28421_x));
			}
		}
		else {
			_case_begin_1a95878b7:;
			{
				return false;
			}
		}
		_match_end_1a95877eb:;
	};
}



inline jule::Bool _1a75c88d8_lt_eq(_1a75c3251_Const* _self_, _1a75c3251_Const _30724_x) {
	{
		
		if (_1a75c70ac_is_str(&(*_self_))) {
			_case_begin_1a958e69e:;
			{
				return (_1a75c70ac_is_str(&_30724_x) && (_1a75c4c14_read_str(&(*_self_)) <= _1a75c4c14_read_str(&_30724_x)));
			}
		}
		else if (_1a75c6870_is_i64(&(*_self_))) {
			_case_begin_1a958e76a:;
			{
				return (_1a75c44c7_read_i64(&(*_self_)) <= _1a75c51dc_as_i64(&_30724_x));
			}
		}
		else if (_1a75c6ad4_is_u64(&(*_self_))) {
			_case_begin_1a958e7d1:;
			{
				return (_1a75c473b_read_u64(&(*_self_)) <= _1a75c5451_as_u64(&_30724_x));
			}
		}
		else if (_1a75c7321_is_f64(&(*_self_))) {
			_case_begin_1a958e4d4:;
			{
				return (_1a75c4e78_read_f64(&(*_self_)) <= _1a75c56b5_as_f64(&_30724_x));
			}
		}
		else {
			_case_begin_1a958b987:;
			{
				return false;
			}
		}
		_match_end_1a958b8bb:;
	};
}



inline jule::Bool _1a75c8be6_gt(_1a75c3251_Const* _self_, _1a75c3251_Const _33021_x) {
	{
		
		if (_1a75c70ac_is_str(&(*_self_))) {
			_case_begin_1a959266e:;
			{
				return (_1a75c70ac_is_str(&_33021_x) && (_1a75c4c14_read_str(&(*_self_)) > _1a75c4c14_read_str(&_33021_x)));
			}
		}
		else if (_1a75c6870_is_i64(&(*_self_))) {
			_case_begin_1a959273a:;
			{
				return (_1a75c44c7_read_i64(&(*_self_)) > _1a75c51dc_as_i64(&_33021_x));
			}
		}
		else if (_1a75c6ad4_is_u64(&(*_self_))) {
			_case_begin_1a95927a1:;
			{
				return (_1a75c473b_read_u64(&(*_self_)) > _1a75c5451_as_u64(&_33021_x));
			}
		}
		else if (_1a75c7321_is_f64(&(*_self_))) {
			_case_begin_1a95924a4:;
			{
				return (_1a75c4e78_read_f64(&(*_self_)) > _1a75c56b5_as_f64(&_33021_x));
			}
		}
		else {
			_case_begin_1a958e957:;
			{
				return false;
			}
		}
		_match_end_1a958e88b:;
	};
}



inline jule::Bool _1a75c9004_gt_eq(_1a75c3251_Const* _self_, _1a75c3251_Const _35324_x) {
	{
		
		if (_1a75c70ac_is_str(&(*_self_))) {
			_case_begin_1a959563e:;
			{
				return (_1a75c70ac_is_str(&_35324_x) && (_1a75c4c14_read_str(&(*_self_)) >= _1a75c4c14_read_str(&_35324_x)));
			}
		}
		else if (_1a75c6870_is_i64(&(*_self_))) {
			_case_begin_1a959570a:;
			{
				return (_1a75c44c7_read_i64(&(*_self_)) >= _1a75c51dc_as_i64(&_35324_x));
			}
		}
		else if (_1a75c6ad4_is_u64(&(*_self_))) {
			_case_begin_1a9595771:;
			{
				return (_1a75c473b_read_u64(&(*_self_)) >= _1a75c5451_as_u64(&_35324_x));
			}
		}
		else if (_1a75c7321_is_f64(&(*_self_))) {
			_case_begin_1a9595474:;
			{
				return (_1a75c4e78_read_f64(&(*_self_)) >= _1a75c56b5_as_f64(&_35324_x));
			}
		}
		else {
			_case_begin_1a9592927:;
			{
				return false;
			}
		}
		_match_end_1a959285b:;
	};
}



inline jule::Bool _1a75c9312_add(_1a75c3251_Const* _self_, _1a75c3251_Const _37426_x) {
	{
		
		if (_1a75c70ac_is_str(&(*_self_))) {
			_case_begin_1a959860e:;
			{
				if ((!(_1a75c70ac_is_str(&_37426_x)))) {
					return false;
				};
				_1a75c61aa_set_str(&(*_self_), (_1a75c4c14_read_str(&(*_self_)) + _1a75c4c14_read_str(&_37426_x)));
			}
		}
		else if (_1a75c7321_is_f64(&(*_self_))) {
			_case_begin_1a95986ca:;
			{
				_1a75c6430_set_f64(&(*_self_), static_cast<jule::F64>((_1a75c4e78_read_f64(&(*_self_)) + _1a75c56b5_as_f64(&_37426_x))));
			}
		}
		else if (_1a75c6870_is_i64(&(*_self_))) {
			_case_begin_1a9598741:;
			{
				if (_1a75c7321_is_f64(&_37426_x)) {
					_1a75c6430_set_f64(&(*_self_), static_cast<jule::F64>((_1a75c56b5_as_f64(&(*_self_)) + _1a75c4e78_read_f64(&_37426_x))));
				} else {
					_1a75c593a_set_i64(&(*_self_), static_cast<jule::I64>((_1a75c44c7_read_i64(&(*_self_)) + _1a75c51dc_as_i64(&_37426_x))));
				};
			}
		}
		else if (_1a75c6ad4_is_u64(&(*_self_))) {
			_case_begin_1a9598444:;
			{
				if (_1a75c7321_is_f64(&_37426_x)) {
					_1a75c6430_set_f64(&(*_self_), static_cast<jule::F64>((_1a75c56b5_as_f64(&(*_self_)) + _1a75c4e78_read_f64(&_37426_x))));
				} else {
					_1a75c5bb0_set_u64(&(*_self_), static_cast<jule::U64>((_1a75c473b_read_u64(&(*_self_)) + _1a75c5451_as_u64(&_37426_x))));
				};
			}
		}
		else {
			_case_begin_1a95958e7:;
			{
				return false;
			}
		}
		_match_end_1a959582b:;
	};
	return true;
}



inline jule::Bool _1a75c9620_sub(_1a75c3251_Const* _self_, _1a75c3251_Const _40326_x) {
	{
		
		if (_1a75c7321_is_f64(&(*_self_))) {
			_case_begin_1a959e071:;
			{
				_1a75c6430_set_f64(&(*_self_), static_cast<jule::F64>((_1a75c4e78_read_f64(&(*_self_)) - _1a75c56b5_as_f64(&_40326_x))));
			}
		}
		else if (_1a75c6870_is_i64(&(*_self_))) {
			_case_begin_1a959e14d:;
			{
				if (_1a75c7321_is_f64(&_40326_x)) {
					_1a75c6430_set_f64(&(*_self_), static_cast<jule::F64>((_1a75c56b5_as_f64(&(*_self_)) - _1a75c4e78_read_f64(&_40326_x))));
				} else {
					_1a75c593a_set_i64(&(*_self_), static_cast<jule::I64>((_1a75c44c7_read_i64(&(*_self_)) - _1a75c51dc_as_i64(&_40326_x))));
				};
			}
		}
		else if (_1a75c6ad4_is_u64(&(*_self_))) {
			_case_begin_1a959e1b4:;
			{
				if (_1a75c7321_is_f64(&_40326_x)) {
					_1a75c6430_set_f64(&(*_self_), static_cast<jule::F64>((_1a75c56b5_as_f64(&(*_self_)) - _1a75c4e78_read_f64(&_40326_x))));
				} else {
					_1a75c5bb0_set_u64(&(*_self_), static_cast<jule::U64>((_1a75c473b_read_u64(&(*_self_)) - _1a75c5451_as_u64(&_40326_x))));
				};
			}
		}
		else {
			_case_begin_1a959d988:;
			{
				return false;
			}
		}
		_match_end_1a959d05e:;
	};
	return true;
}



inline jule::Bool _1a75c992d_mul(_1a75c3251_Const* _self_, _1a75c3251_Const _42726_x) {
	{
		
		if (_1a75c7321_is_f64(&(*_self_))) {
			_case_begin_1a95a38b1:;
			{
				_1a75c6430_set_f64(&(*_self_), static_cast<jule::F64>((_1a75c4e78_read_f64(&(*_self_)) * _1a75c56b5_as_f64(&_42726_x))));
			}
		}
		else if (_1a75c6870_is_i64(&(*_self_))) {
			_case_begin_1a95a398d:;
			{
				if (_1a75c7321_is_f64(&_42726_x)) {
					_1a75c6430_set_f64(&(*_self_), static_cast<jule::F64>((_1a75c56b5_as_f64(&(*_self_)) * _1a75c4e78_read_f64(&_42726_x))));
				} else {
					_1a75c593a_set_i64(&(*_self_), static_cast<jule::I64>((_1a75c44c7_read_i64(&(*_self_)) * _1a75c51dc_as_i64(&_42726_x))));
				};
			}
		}
		else if (_1a75c6ad4_is_u64(&(*_self_))) {
			_case_begin_1a95a3a04:;
			{
				if (_1a75c7321_is_f64(&_42726_x)) {
					_1a75c6430_set_f64(&(*_self_), static_cast<jule::F64>((_1a75c56b5_as_f64(&(*_self_)) * _1a75c4e78_read_f64(&_42726_x))));
				} else {
					_1a75c5bb0_set_u64(&(*_self_), static_cast<jule::U64>((_1a75c473b_read_u64(&(*_self_)) * _1a75c5451_as_u64(&_42726_x))));
				};
			}
		}
		else {
			_case_begin_1a95a32c8:;
			{
				return false;
			}
		}
		_match_end_1a95a28c1:;
	};
	return true;
}



inline jule::Bool _1a75c9c3b_div(_1a75c3251_Const* _self_, _1a75c3251_Const _45526_x) {
	{
		
		if (_1a75c7321_is_f64(&(*_self_))) {
			_case_begin_1a95a8201:;
			{
				jule::F64 _45817_l = _1a75c56b5_as_f64(&_45526_x);;
				if ((_45817_l == 0LL)) {
					return false;
				};
				_1a75c6430_set_f64(&(*_self_), static_cast<jule::F64>(jule::div(_1a75c4e78_read_f64(&(*_self_)),_45817_l)));
			}
		}
		else if (_1a75c6870_is_i64(&(*_self_))) {
			_case_begin_1a95a82cd:;
			{
				jule::F64 _46417_l = _1a75c56b5_as_f64(&_45526_x);;
				if ((_46417_l == 0LL)) {
					return false;
				};
				_1a75c6430_set_f64(&(*_self_), static_cast<jule::F64>(jule::div(_1a75c56b5_as_f64(&(*_self_)),_46417_l)));
			}
		}
		else if (_1a75c6ad4_is_u64(&(*_self_))) {
			_case_begin_1a95a8344:;
			{
				jule::F64 _47017_l = _1a75c56b5_as_f64(&_45526_x);;
				if ((_47017_l == 0LL)) {
					return false;
				};
				_1a75c6430_set_f64(&(*_self_), static_cast<jule::F64>(jule::div(_1a75c56b5_as_f64(&(*_self_)),_47017_l)));
			}
		}
		else {
			_case_begin_1a95a7b18:;
			{
				return false;
			}
		}
		_match_end_1a95a7211:;
	};
	return true;
}



inline jule::Bool _1a75ca049_mod(_1a75c3251_Const* _self_, _1a75c3251_Const _48426_x) {
	{
		
		if (_1a75c6870_is_i64(&(*_self_))) {
			_case_begin_1a95ac7dd:;
			{
				jule::I64 _48717_l = _1a75c51dc_as_i64(&_48426_x);;
				if ((_48717_l == 0LL)) {
					return false;
				};
				_1a75c593a_set_i64(&(*_self_), static_cast<jule::I64>(jule::mod(_1a75c44c7_read_i64(&(*_self_)),_48717_l)));
			}
		}
		else if (_1a75c6ad4_is_u64(&(*_self_))) {
			_case_begin_1a95ac8cb:;
			{
				jule::U64 _49317_l = _1a75c5451_as_u64(&_48426_x);;
				if ((_49317_l == 0LLU)) {
					return false;
				};
				_1a75c5bb0_set_u64(&(*_self_), static_cast<jule::U64>(jule::mod(_1a75c473b_read_u64(&(*_self_)),_49317_l)));
			}
		}
		else {
			_case_begin_1a95ac1d3:;
			{
				return false;
			}
		}
		_match_end_1a95ac117:;
	};
	return true;
}



inline jule::Bool _1a75ca357_bitwise_and(_1a75c3251_Const* _self_, _1a75c3251_Const _50634_x) {
	{
		
		if (_1a75c6870_is_i64(&(*_self_))) {
			_case_begin_1a95b1094:;
			{
				_1a75c593a_set_i64(&(*_self_), static_cast<jule::I64>((_1a75c44c7_read_i64(&(*_self_)) & _1a75c51dc_as_i64(&_50634_x))));
			}
		}
		else if (_1a75c6ad4_is_u64(&(*_self_))) {
			_case_begin_1a95b1182:;
			{
				_1a75c5bb0_set_u64(&(*_self_), static_cast<jule::U64>((_1a75c473b_read_u64(&(*_self_)) & _1a75c5451_as_u64(&_50634_x))));
			}
		}
		else {
			_case_begin_1a95b0989:;
			{
				return false;
			}
		}
		_match_end_1a95b08bd:;
	};
	return true;
}



inline jule::Bool _1a75ca665_bitwise_or(_1a75c3251_Const* _self_, _1a75c3251_Const _52033_x) {
	{
		
		if (_1a75c6870_is_i64(&(*_self_))) {
			_case_begin_1a95b38c1:;
			{
				_1a75c593a_set_i64(&(*_self_), static_cast<jule::I64>((_1a75c44c7_read_i64(&(*_self_)) | _1a75c51dc_as_i64(&_52033_x))));
			}
		}
		else if (_1a75c6ad4_is_u64(&(*_self_))) {
			_case_begin_1a95b39ae:;
			{
				_1a75c5bb0_set_u64(&(*_self_), static_cast<jule::U64>((_1a75c473b_read_u64(&(*_self_)) | _1a75c5451_as_u64(&_52033_x))));
			}
		}
		else {
			_case_begin_1a95b32b6:;
			{
				return false;
			}
		}
		_match_end_1a95b31ea:;
	};
	return true;
}



inline jule::Bool _1a75ca973_xor(_1a75c3251_Const* _self_, _1a75c3251_Const _53426_x) {
	{
		
		if (_1a75c6870_is_i64(&(*_self_))) {
			_case_begin_1a95b61ed:;
			{
				_1a75c593a_set_i64(&(*_self_), static_cast<jule::I64>((_1a75c44c7_read_i64(&(*_self_)) ^ _1a75c51dc_as_i64(&_53426_x))));
			}
		}
		else if (_1a75c6ad4_is_u64(&(*_self_))) {
			_case_begin_1a95b62db:;
			{
				_1a75c5bb0_set_u64(&(*_self_), static_cast<jule::U64>((_1a75c473b_read_u64(&(*_self_)) ^ _1a75c5451_as_u64(&_53426_x))));
			}
		}
		else {
			_case_begin_1a95b5ae3:;
			{
				return false;
			}
		}
		_match_end_1a95b5a27:;
	};
	return true;
}



inline jule::Bool _1a75cac81_lshift(_1a75c3251_Const* _self_, _1a75c3251_Const _54829_x) {
	{
		
		if (_1a75c6870_is_i64(&(*_self_))) {
			_case_begin_1a95b8a2a:;
			{
				jule::I64 _55117_l = _1a75c51dc_as_i64(&(*_self_));;
				if ((_55117_l < 0LL)) {
					jule::U64 _55321_r = _1a75c5451_as_u64(&_54829_x);;
					_1a75c593a_set_i64(&(*_self_), static_cast<jule::I64>((_55117_l << _55321_r)));
				} else {
					_1a75cb402_lshift_unsig((*_self_),_54829_x);
				};
			}
		}
		else if (_1a75c6ad4_is_u64(&(*_self_))) {
			_case_begin_1a95b8b18:;
			{
				_1a75cb402_lshift_unsig((*_self_),_54829_x);
			}
		}
		else {
			_case_begin_1a95b8420:;
			{
				return false;
			}
		}
		_match_end_1a95b8354:;
	};
	return true;
}



inline jule::Bool _1a75cb08e_rshift(_1a75c3251_Const* _self_, _1a75c3251_Const _56829_x) {
	{
		
		if (_1a75c6870_is_i64(&(*_self_))) {
			_case_begin_1a95bbbc6:;
			{
				jule::I64 _57117_l = _1a75c51dc_as_i64(&(*_self_));;
				if ((_57117_l < 0LL)) {
					jule::U64 _57321_r = _1a75c5451_as_u64(&_56829_x);;
					_1a75c593a_set_i64(&(*_self_), static_cast<jule::I64>((_57117_l >> _57321_r)));
				} else {
					_1a75cb6ee_rshift_unsig((*_self_),_56829_x);
				};
			}
		}
		else if (_1a75c6ad4_is_u64(&(*_self_))) {
			_case_begin_1a95bbcb4:;
			{
				_1a75cb6ee_rshift_unsig((*_self_),_56829_x);
			}
		}
		else {
			_case_begin_1a95bb5bb:;
			{
				return false;
			}
		}
		_match_end_1a95bb500:;
	};
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _1a75c3251_Const _Src) {
	_Stream << "Const{";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a6830899_FieldIns> _1a67ddc0e_instance(jule::Ptr<_1a6844a23_Field> _self_) {
	return jule::new_ptr<_1a6830899_FieldIns>(_1a6830899_FieldIns{._field_decl=_self_, });
}







std::ostream &operator<<(std::ostream &_Stream, _1a6844a23_Field _Src) {
	_Stream << "Field{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a683aed1_Operators _Src) {
	_Stream << "Operators{";
	_Stream << "eq:" << _Src._field_eq << ", ";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "gt_eq:" << _Src._field_gt_eq << ", ";
	_Stream << "lt:" << _Src._field_lt << ", ";
	_Stream << "lt_eq:" << _Src._field_lt_eq << ", ";
	_Stream << "shl:" << _Src._field_shl << ", ";
	_Stream << "shr:" << _Src._field_shr << ", ";
	_Stream << "add:" << _Src._field_add << ", ";
	_Stream << "sub:" << _Src._field_sub << ", ";
	_Stream << "div:" << _Src._field_div << ", ";
	_Stream << "mul:" << _Src._field_mul << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "bit_and:" << _Src._field_bit_and << ", ";
	_Stream << "bit_or:" << _Src._field_bit_or << ", ";
	_Stream << "bit_xor:" << _Src._field_bit_xor << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "bit_not:" << _Src._field_bit_not << ", ";
	_Stream << "add_assign:" << _Src._field_add_assign << ", ";
	_Stream << "sub_assign:" << _Src._field_sub_assign << ", ";
	_Stream << "div_assign:" << _Src._field_div_assign << ", ";
	_Stream << "mul_assign:" << _Src._field_mul_assign << ", ";
	_Stream << "mod_assign:" << _Src._field_mod_assign << ", ";
	_Stream << "shl_assign:" << _Src._field_shl_assign << ", ";
	_Stream << "shr_assign:" << _Src._field_shr_assign << ", ";
	_Stream << "bit_or_assign:" << _Src._field_bit_or_assign << ", ";
	_Stream << "bit_and_assign:" << _Src._field_bit_and_assign << ", ";
	_Stream << "bit_xor_assign:" << _Src._field_bit_xor_assign;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a6836a48_StructIns> _1a6829387_instance(jule::Ptr<_1a6826829_Struct> _self_) {
	if (((_self_.get()._field_generics.len() == 0LL) && (_self_.get()._field_instances.len() == 1LL))) {
		return _self_.get()._field_instances[0LL];
	};
	jule::Ptr<_1a6836a48_StructIns> _9917_ins = jule::new_ptr<_1a6836a48_StructIns>(_1a6836a48_StructIns{._field_decl=_self_, ._field_fields=jule::Slice<jule::Ptr<_1a6830899_FieldIns>>::alloc(0LL,_self_.get()._field_fields.len()), ._field_refers=static__1a6875c96_new(), });;
	{
		auto &expr = _self_.get()._field_fields;
		auto it = expr.begin();
		_iter_begin_1a9727590:;
		if (it != expr.end()) {
			jule::Ptr<_1a6844a23_Field> _10521_f = *it;
			{
				_9917_ins.get()._field_fields = jule::alloc_for_append(_9917_ins.get()._field_fields,1);_9917_ins.get()._field_fields.__push(_1a67ddc0e_instance(_10521_f));;
				if ((((!(_10521_f.get()._field_mutable)) && (_10521_f.get()._field_kind.get()._field_kind != nullptr)) && _1a7728c7a_mutable(_10521_f.get()._field_kind.get()._field_kind.ptr()))) {
					_9917_ins.get()._field_mutable=true;
				};
			}
			_iter_next_1a9727590:;
			++it;
			goto _iter_begin_1a9727590;
		}
		_iter_end_1a9727590:;
	};
	if ((_self_.get()._field_generics.len() == 0LL)) {
		_9917_ins.get()._field_methods=_self_.get()._field_methods;
	} else {
		_9917_ins.get()._field_methods=jule::Slice<jule::Ptr<_1a68709c7_Fn>>::alloc(0LL,_self_.get()._field_methods.len());
		{
			auto &expr = _self_.get()._field_methods;
			auto it = expr.begin();
			_iter_begin_1a972a76e:;
			if (it != expr.end()) {
				jule::Ptr<_1a68709c7_Fn> _11625_f = *it;
				{
					jule::Ptr<_1a68709c7_Fn> _11725_fins = jule::new_ptr<_1a68709c7_Fn>((*(_11625_f)));;
					_11725_fins.get()._field_instances=nullptr;
					_9917_ins.get()._field_methods = jule::alloc_for_append(_9917_ins.get()._field_methods,1);_9917_ins.get()._field_methods.__push(_11725_fins);;
				}
				_iter_next_1a972a76e:;
				++it;
				goto _iter_begin_1a972a76e;
			}
			_iter_end_1a972a76e:;
		};
	};
	return _9917_ins;
}



inline jule::Ptr<_1a6836a48_StructIns> _1a682984e_append_instance(_1a6826829_Struct* _self_, jule::Ptr<_1a6836a48_StructIns>& _12839_ins) {
	if ((((*_self_)._field_generics.len() == 0LL) && ((*_self_)._field_instances.len() == 1LL))) {
		return (*_self_)._field_instances[0LL];
	};
	{
		auto &expr = (*_self_)._field_instances;
		auto it = expr.begin();
		_iter_begin_1a972d112:;
		if (it != expr.end()) {
			jule::Ptr<_1a6836a48_StructIns> _13421_ains = *it;
			{
				if (_1a68459ad_same(_13421_ains.ptr(), _12839_ins)) {
					return _13421_ains;
				};
			}
			_iter_next_1a972d112:;
			++it;
			goto _iter_begin_1a972d112;
		}
		_iter_end_1a972d112:;
	};
	(*_self_)._field_instances = jule::alloc_for_append((*_self_)._field_instances,1);(*_self_)._field_instances.__push(_12839_ins);;
	return nullptr;
}



inline jule::Ptr<_1a68709c7_Fn> _1a682ae16_find_method(_1a6826829_Struct* _self_, jule::Str _14634_ident, jule::Bool _14646_statically) {
	{
		auto &expr = (*_self_)._field_methods;
		auto it = expr.begin();
		_iter_begin_1a9730411:;
		if (it != expr.end()) {
			jule::Ptr<_1a68709c7_Fn> _14721_f = *it;
			{
				if (((_14721_f.get()._field_statically == _14646_statically) && (_14721_f.get()._field_ident == _14634_ident))) {
					return _14721_f;
				};
			}
			_iter_next_1a9730411:;
			++it;
			goto _iter_begin_1a9730411;
		}
		_iter_end_1a9730411:;
	};
	return nullptr;
}



inline jule::Ptr<_1a76a7720_Var> _1a682be6c_find_static(_1a6826829_Struct* _self_, jule::Str _15734_ident) {
	{
		auto &expr = (*_self_)._field_statics;
		auto it = expr.begin();
		_iter_begin_1a9731b4e:;
		if (it != expr.end()) {
			jule::Ptr<_1a76a7720_Var> _15821_v = *it;
			{
				if ((_15821_v.get()._field_ident == _15734_ident)) {
					return _15821_v;
				};
			}
			_iter_next_1a9731b4e:;
			++it;
			goto _iter_begin_1a9731b4e;
		}
		_iter_end_1a9731b4e:;
	};
	return nullptr;
}



inline jule::Ptr<_1a6844a23_Field> _1a682d6dd_find_field(_1a6826829_Struct* _self_, jule::Str _16833_ident) {
	{
		auto &expr = (*_self_)._field_fields;
		auto it = expr.begin();
		_iter_begin_1a97330b2:;
		if (it != expr.end()) {
			jule::Ptr<_1a6844a23_Field> _16921_f = *it;
			{
				if ((_16921_f.get()._field_ident == _16833_ident)) {
					return _16921_f;
				};
			}
			_iter_next_1a97330b2:;
			++it;
			goto _iter_begin_1a97330b2;
		}
		_iter_end_1a97330b2:;
	};
	return nullptr;
}



inline jule::Bool _1a682e8cb_is_implements(_1a6826829_Struct* _self_, jule::Ptr<_1a68d46b7_Trait> _17832_t) {
	{
		auto &expr = (*_self_)._field_implements;
		auto it = expr.begin();
		_iter_begin_1a9734525:;
		if (it != expr.end()) {
			jule::Ptr<_1a68d46b7_Trait> &_17916_it = *it;
			{
				if ((_17832_t == _17916_it)) {
					return true;
				};
			}
			_iter_next_1a9734525:;
			++it;
			goto _iter_begin_1a9734525;
		}
		_iter_end_1a9734525:;
	};
	return false;
}



inline jule::Bool _1a68312c3_is_derives(_1a6826829_Struct* _self_, jule::Str _18829_ident) {
	{
		auto &expr = (*_self_)._field_directives;
		auto it = expr.begin();
		_iter_begin_1a9735889:;
		if (it != expr.end()) {
			jule::Ptr<_1a6852525_Directive> &_18916_d = *it;
			{
				if ((_18916_d.get()._field_tag.get()._field_kind == jule::Str("derive", 6))) {
					if (((_18916_d.get()._field_args.len() == 1LL) && (_18916_d.get()._field_args[0LL].get()._field_kind == _18829_ident))) {
						return true;
					};
				};
			}
			_iter_next_1a9735889:;
			++it;
			goto _iter_begin_1a9735889;
		}
		_iter_end_1a9735889:;
	};
	return false;
}



inline jule::Bool _1a682b378_is_uses(_1a6826829_Struct* _self_, jule::Ptr<_1a6826829_Struct> _20026_s) {
	{
		auto &expr = (*_self_)._field_uses;
		auto it = expr.begin();
		_iter_begin_1a9737b88:;
		if (it != expr.end()) {
			jule::Ptr<_1a6826829_Struct> &_20116_u = *it;
			{
				while ((_20026_s == _20116_u)) {
					{
						return true;
					}
				_iter_next_1a9738260:;
				}
				_iter_end_1a9738260:;;
			}
			_iter_next_1a9737b88:;
			++it;
			goto _iter_begin_1a9737b88;
		}
		_iter_end_1a9737b88:;
	};
	return false;
}



inline jule::Bool _1a6838c04_has_ref_accessible(_1a6826829_Struct* _self_) {
	{
		auto &expr = (*_self_)._field_methods;
		auto it = expr.begin();
		_iter_begin_1a9738bde:;
		if (it != expr.end()) {
			jule::Ptr<_1a68709c7_Fn> &_21116_m = *it;
			{
				if (((_21116_m.get()._field_params.len() > 0LL) && _1a6831ba8_is_ref(_21116_m.get()._field_params[0LL].ptr()))) {
					return true;
				};
			}
			_iter_next_1a9738bde:;
			++it;
			goto _iter_begin_1a9738bde;
		}
		_iter_end_1a9738bde:;
	};
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1a6826829_Struct _Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "depends:" << _Src._field_depends << ", ";
	_Stream << "uses:" << _Src._field_uses << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "fields:" << _Src._field_fields << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "statics:" << _Src._field_statics << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "implements:" << _Src._field_implements << ", ";
	_Stream << "instances:" << _Src._field_instances;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a6830899_FieldIns _Src) {
	_Stream << "FieldIns{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a68382db_OperandExprModel _Src) {
	_Stream << "OperandExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a684b145_BinopExprModel _Src) {
	_Stream << "BinopExprModel{";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a6849e79_UnaryExprModel _Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a6827e8a_StructArgExprModel _Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a682b752_StructLitExprModel _Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "strct:" << _Src._field_strct << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a68225b1_AllocStructLitExprModel _Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "lit:" << _Src._field_lit;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a684003a_CastingExprModel _Src) {
	_Stream << "CastingExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr_kind:" << _Src._field_expr_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a6845150_FnCallExprModel _Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "is_co:" << _Src._field_is_co << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "except:" << _Src._field_except << ", ";
	_Stream << "assigned:" << _Src._field_assigned;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a684533c_SliceExprModel _Src) {
	_Stream << "SliceExprModel{";
	_Stream << "elem_kind:" << _Src._field_elem_kind << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a686b770_IndexingExprModel _Src) {
	_Stream << "IndexingExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "index:" << _Src._field_index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a686b95c_AnonFnExprModel _Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "global:" << _Src._field_global;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a686bb49_KeyValPairExprModel _Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a686bd36_MapExprModel _Src) {
	_Stream << "MapExprModel{";
	_Stream << "key_kind:" << _Src._field_key_kind << ", ";
	_Stream << "val_kind:" << _Src._field_val_kind << ", ";
	_Stream << "entries:" << _Src._field_entries;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a686c023_SlicingExprModel _Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a686c210_TraitSubIdentExprModel _Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "method:" << _Src._field_method << ", ";
	_Stream << "trt:" << _Src._field_trt;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a686c62d_StructSubIdentExprModel _Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "expr_kind:" << _Src._field_expr_kind << ", ";
	_Stream << "method:" << _Src._field_method << ", ";
	_Stream << "field:" << _Src._field_field;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a686c81a_StructStaticIdentExprModel _Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "structure:" << _Src._field_structure << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "method:" << _Src._field_method;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a686ca07_ArrayExprModel _Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a686cbe4_CommonIdentExprModel _Src) {
	_Stream << "CommonIdentExprModel{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a686cdd1_CommonSubIdentExprModel _Src) {
	_Stream << "CommonSubIdentExprModel{";
	_Stream << "expr_kind:" << _Src._field_expr_kind << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a686d0bd_TupleExprModel _Src) {
	_Stream << "TupleExprModel{";
	_Stream << "datas:" << _Src._field_datas;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a686d2aa_BuiltinOutCallExprModel _Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "debug:" << _Src._field_debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a686d497_BuiltinOutlnCallExprModel _Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "debug:" << _Src._field_debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a686d684_BuiltinCloneCallExprModel _Src) {
	_Stream << "BuiltinCloneCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a686d871_BuiltinNewCallExprModel _Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "init:" << _Src._field_init;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a686da5d_BuiltinPanicCallExprModel _Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a686dc4a_BuiltinAssertCallExprModel _Src) {
	_Stream << "BuiltinAssertCallExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "log:" << _Src._field_log;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a686de37_BuiltinMakeCallExprModel _Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "len:" << _Src._field_len << ", ";
	_Stream << "cap:" << _Src._field_cap;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a686e124_BuiltinAppendCallExprModel _Src) {
	_Stream << "BuiltinAppendCallExprModel{";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "elements:" << _Src._field_elements;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a686e311_BuiltinCopyCallExprModel _Src) {
	_Stream << "BuiltinCopyCallExprModel{";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a686e4ed_BuiltinErrorCallExprModel _Src) {
	_Stream << "BuiltinErrorCallExprModel{";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a686c3ec_SizeofExprModel _Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a686eb5d_AlignofExprModel _Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a686ed4a_RuneExprModel _Src) {
	_Stream << "RuneExprModel{";
	_Stream << "code:" << _Src._field_code;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a6870037_IntegratedToStrExprModel _Src) {
	_Stream << "IntegratedToStrExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a6870224_BackendEmitExprModel _Src) {
	_Stream << "BackendEmitExprModel{";
	_Stream << "code:" << _Src._field_code << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a6870411_FreeExprModel _Src) {
	_Stream << "FreeExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a68705ed_RetType _Src) {
	_Stream << "RetType{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "idents:" << _Src._field_idents;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a6871e07_ParamIns> _1a6847383_instance(jule::Ptr<_1a68707da_Param> _self_) {
	return jule::new_ptr<_1a6871e07_ParamIns>(_1a6871e07_ParamIns{._field_decl=_self_, });
}



inline jule::Bool _1a68491ed_is_self(_1a68707da_Param* _self_) {
	return (((*_self_)._field_ident == jule::Str("&self", 5)) || ((*_self_)._field_ident == jule::Str("self", 4)));
}



inline jule::Bool _1a6831ba8_is_ref(_1a68707da_Param* _self_) {
	return ((!((*_self_)._field_ident.empty())) && ((*_self_)._field_ident[0LL] == '&'));
}







std::ostream &operator<<(std::ostream &_Stream, _1a68707da_Param _Src) {
	_Stream << "Param{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "variadic:" << _Src._field_variadic << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a6847eee_is_void(_1a68709c7_Fn* _self_) {
	return ((*_self_)._field_result == nullptr);
}



inline jule::Bool _1a684ce27_is_method(_1a68709c7_Fn* _self_) {
	return ((*_self_)._field_owner != nullptr);
}



inline jule::Bool _1a6844209_is_entry_point(_1a68709c7_Fn* _self_) {
	return ((*_self_)._field_ident == jule::Str("main", 4));
}



inline jule::Bool _1a6870c91_is_init(_1a68709c7_Fn* _self_) {
	return ((*_self_)._field_ident == jule::Str("init", 4));
}



inline jule::Bool _1a6871005_is_anon(_1a68709c7_Fn* _self_) {
	return _1a5279d72_is_anon_ident((*_self_)._field_ident);
}



inline jule::Bool _1a6871269_any_var(_1a68709c7_Fn* _self_) {
	return (((*_self_)._field_result != nullptr) && ((*_self_)._field_result.get()._field_idents.len() > 0LL));
}



inline jule::Ptr<_1a6872c93_FnIns> _1a68714cd_instance_force(jule::Ptr<_1a68709c7_Fn> _self_) {
	jule::Ptr<_1a6872c93_FnIns> _10017_ins = jule::new_ptr<_1a6872c93_FnIns>(_1a6872c93_FnIns{._field_decl=_self_, ._field_scope=jule::new_ptr<_1a7658803_Scope>(), ._field_refers=static__1a6875c96_new(), });;
	_10017_ins.get()._field_params=jule::Slice<jule::Ptr<_1a6871e07_ParamIns>>::alloc(0LL,_self_.get()._field_params.len());
	{
		auto &expr = _self_.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1a9750d16:;
		if (it != expr.end()) {
			jule::Ptr<_1a68707da_Param> _10721_p = *it;
			{
				_10017_ins.get()._field_params = jule::alloc_for_append(_10017_ins.get()._field_params,1);_10017_ins.get()._field_params.__push(_1a6847383_instance(_10721_p));;
			}
			_iter_next_1a9750d16:;
			++it;
			goto _iter_begin_1a9750d16;
		}
		_iter_end_1a9750d16:;
	};
	if ((_10017_ins.get()._field_decl.get()._field_result != nullptr)) {
		_10017_ins.get()._field_result=_10017_ins.get()._field_decl.get()._field_result.get()._field_kind.get()._field_kind;
	};
	return _10017_ins;
}



inline jule::Ptr<_1a6872c93_FnIns> _1a6871742_instance(jule::Ptr<_1a68709c7_Fn> _self_) {
	if (((_self_.get()._field_generics.len() == 0LL) && (_self_.get()._field_instances.len() == 1LL))) {
		return _self_.get()._field_instances[0LL];
	};
	return _1a68714cd_instance_force(_self_);
}



inline jule::Ptr<_1a6872c93_FnIns> _1a6871a50_append_instance(_1a68709c7_Fn* _self_, jule::Ptr<_1a6872c93_FnIns>& _12839_ins) {
	if (((*_self_)._field_generics.len() == 0LL)) {
		if (((*_self_)._field_instances.len() == 1LL)) {
			return (*_self_)._field_instances[0LL];
		};
		(*_self_)._field_instances = jule::alloc_for_append((*_self_)._field_instances,1);(*_self_)._field_instances.__push(_12839_ins);;
		return nullptr;
	};
	if (((*_self_)._field_instances.len() == 0LL)) {
		(*_self_)._field_instances = jule::alloc_for_append((*_self_)._field_instances,1);(*_self_)._field_instances.__push(_12839_ins);;
		return nullptr;
	};
	{
		auto &expr = (*_self_)._field_instances;
		auto it = expr.begin();
		_iter_begin_1a975639e:;
		if (it != expr.end()) {
			jule::Ptr<_1a6872c93_FnIns> _14421_ains = *it;
			{
				if (_1a6874091_same(_14421_ains.ptr(), _12839_ins)) {
					return _14421_ains;
				};
			}
			_iter_next_1a975639e:;
			++it;
			goto _iter_begin_1a975639e;
		}
		_iter_end_1a975639e:;
	};
	(*_self_)._field_instances = jule::alloc_for_append((*_self_)._field_instances,1);(*_self_)._field_instances.__push(_12839_ins);;
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1a68709c7_Fn _Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "global:" << _Src._field_global << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "exceptional:" << _Src._field_exceptional << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "params:" << _Src._field_params << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "instances:" << _Src._field_instances;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a68722d1_to_str(_1a6871e07_ParamIns* _self_) {
	jule::Str _16617_s = jule::Str();;
	if ((*_self_)._field_decl.get()._field_mutable) {
		_16617_s+=jule::Str("mut ", 4);
	};
	if ((*_self_)._field_decl.get()._field_reference) {
		_16617_s+=jule::Str("&_:", 3);
	};
	if (_1a68491ed_is_self((*_self_)._field_decl.ptr())) {
		if (_1a6831ba8_is_ref((*_self_)._field_decl.ptr())) {
			_16617_s+=jule::Str("&", 1);
		};
		_16617_s+=jule::Str("self", 4);
		return _16617_s;
	};
	if ((*_self_)._field_decl.get()._field_variadic) {
		_16617_s+=jule::Str("...", 3);
	};
	if (((*_self_)._field_kind != nullptr)) {
		_16617_s+=_1a7727c8a_to_str((*_self_)._field_kind.ptr());
	};
	return _16617_s;
}







std::ostream &operator<<(std::ostream &_Stream, _1a6871e07_ParamIns _Src) {
	_Stream << "ParamIns{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a6873106_to_str(_1a6872c93_FnIns* _self_) {
	;
	return _1a687439e_get_kind_str(&(*_self_), false);
}



inline jule::Bool _1a6873414_equals(jule::Ptr<_1a6872c93_FnIns> _self_, jule::Ptr<_1a77278d3_TypeKind> _21726_other) {
	jule::Ptr<_1a6872c93_FnIns> _21813_f = _1a772a919_fnc(_21726_other.ptr());;
	if ((_21813_f == nullptr)) {
		return false;
	};
	if ((_self_.get()._field_decl.get()._field_exceptional != _21813_f.get()._field_decl.get()._field_exceptional)) {
		return false;
	};
	if ((_self_.get()._field_decl.get()._field_unsafety != _21813_f.get()._field_decl.get()._field_unsafety)) {
		return false;
	};
	if ((_self_.get()._field_generics.len() != _21813_f.get()._field_generics.len())) {
		return false;
	};
	if ((_1a6847eee_is_void(_self_.get()._field_decl.ptr()) != _1a6847eee_is_void(_21813_f.get()._field_decl.ptr()))) {
		return false;
	};
	jule::I64 _23917_i = 0LL;;
	for (; (_23917_i < _self_.get()._field_generics.len()); (_23917_i)++) {
		{
			if ((!(_1a7728098_equals(_self_.get()._field_generics[_23917_i], _21813_f.get()._field_generics[_23917_i])))) {
				return false;
			};
		}
	_iter_next_1a975e1ed:;
	}
	_iter_end_1a975e1ed:;;
	jule::Fn<jule::Bool(jule::Ptr<_1a6871e07_ParamIns>,jule::Ptr<_1a6871e07_ParamIns>)> _24613_check_params = jule::Fn<jule::Bool(jule::Ptr<_1a6871e07_ParamIns>,jule::Ptr<_1a6871e07_ParamIns>)>([=](jule::Ptr<_1a6871e07_ParamIns> _24631_p1, jule::Ptr<_1a6871e07_ParamIns> _24646_p2) mutable -> jule::Bool {
		if ((_24631_p1.get()._field_decl.get()._field_mutable != _24646_p2.get()._field_decl.get()._field_mutable)) {
			return false;
		};
		if (_1a68491ed_is_self(_24631_p1.get()._field_decl.ptr())) {
			if ((!(_1a68491ed_is_self(_24646_p2.get()._field_decl.ptr())))) {
				return false;
			};
			if ((_1a6831ba8_is_ref(_24631_p1.get()._field_decl.ptr()) != _1a6831ba8_is_ref(_24646_p2.get()._field_decl.ptr()))) {
				return false;
			};
			return true;
		};
		if ((_24631_p1.get()._field_decl.get()._field_reference != _24646_p2.get()._field_decl.get()._field_reference)) {
			return false;
		};
		if ((_24631_p1.get()._field_decl.get()._field_variadic != _24646_p2.get()._field_decl.get()._field_variadic)) {
			return false;
		};
		return _1a7728098_equals(_24631_p1.get()._field_kind, _24646_p2.get()._field_kind);
	});;
	if ((_21813_f.get()._field_params.len() != _self_.get()._field_params.len())) {
		return false;
	};
	_23917_i=0LL;
	for (; (_23917_i < _self_.get()._field_params.len()); (_23917_i)++) {
		{
			if ((!(_24613_check_params(_self_.get()._field_params[_23917_i],_21813_f.get()._field_params[_23917_i])))) {
				return false;
			};
		}
	_iter_next_1a9766997:;
	}
	_iter_end_1a9766997:;;
	if ((!(_1a6847eee_is_void(_self_.get()._field_decl.ptr())))) {
		if ((!(_1a7728098_equals(_self_.get()._field_result, _21813_f.get()._field_result)))) {
			return false;
		};
	};
	return true;
}



inline jule::Slice<jule::Ptr<_1a77278d3_TypeKind>> _1a68737aa_types(_1a6872c93_FnIns* _self_) {
	{
		
		if (((*_self_)._field_result == nullptr)) {
			_case_begin_1a97692e6:;
			{
				return nullptr;
			}
		}
		else if ((_1a772b3ba_tup((*_self_)._field_result.ptr()) == nullptr)) {
			_case_begin_1a976935c:;
			{
				return jule::Slice<jule::Ptr<_1a77278d3_TypeKind>>::make({(*_self_)._field_result});
			}
		}
		else {
			_case_begin_1a9769280:;
			{
				return _1a772b3ba_tup((*_self_)._field_result.ptr()).get()._field_types;
			}
		}
		_match_end_1a97691b4:;
	};
}



inline jule::Bool _1a6873a1e_is_builtin(_1a6872c93_FnIns* _self_) {
	return ((*_self_)._field_caller != nullptr);
}



inline jule::Bool _1a6873c83_is_anon(_1a6872c93_FnIns* _self_) {
	return ((*_self_)._field_anon || (((*_self_)._field_decl != nullptr) && _1a6871005_is_anon((*_self_)._field_decl.ptr())));
}



inline jule::Bool _1a6874091_same(_1a6872c93_FnIns* _self_, jule::Ptr<_1a6872c93_FnIns> _32323_f) {
	if ((((*_self_)._field_decl != _32323_f.get()._field_decl) || (_32323_f.get()._field_generics.len() != (*_self_)._field_generics.len()))) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_generics;
		auto it = expr.begin();
		_iter_begin_1a976d9d2:;
		if (it != expr.end()) {
			jule::I64 _32813_i = it - expr.begin();
			jule::Ptr<_1a77278d3_TypeKind> &_32816_g = *it;
			{
				if ((!(_1a7728098_equals(_32816_g, _32323_f.get()._field_generics[_32813_i])))) {
					return false;
				};
			}
			_iter_next_1a976d9d2:;
			++it;
			_32813_i++;
			goto _iter_begin_1a976d9d2;
		}
		_iter_end_1a976d9d2:;
	};
	return true;
}



inline jule::Str _1a687439e_get_kind_str(_1a6872c93_FnIns* _self_, jule::Bool _33931_ident) {
	jule::Str _34017_s = jule::Str();;
	if ((*_self_)._field_decl.get()._field_unsafety) {
		_34017_s+=jule::Str("unsafe ", 7);
	};
	_34017_s+=jule::Str("fn", 2);
	if ((_33931_ident && ((*_self_)._field_decl != nullptr))) {
		_34017_s+=(jule::Str(" ", 1) + (*_self_)._field_decl.get()._field_ident);
	};
	if (((*_self_)._field_generics.len() > 0LL)) {
		_34017_s+=jule::Str("[", 1);
		{
			auto &expr = (*_self_)._field_generics;
			auto it = expr.begin();
			_iter_begin_1a9771d6a:;
			if (it != expr.end()) {
				jule::I64 _35417_i = it - expr.begin();
				jule::Ptr<_1a77278d3_TypeKind> &_35420_t = *it;
				{
					_34017_s+=_1a7727c8a_to_str(_35420_t.ptr());
					if (((_35417_i + 1LL) < (*_self_)._field_generics.len())) {
						_34017_s+=jule::Str(",", 1);
					};
				}
				_iter_next_1a9771d6a:;
				++it;
				_35417_i++;
				goto _iter_begin_1a9771d6a;
			}
			_iter_end_1a9771d6a:;
		};
		_34017_s+=jule::Str("]", 1);
	} else if (((*_self_)._field_decl.get()._field_generics.len() > 0LL)) {
		_34017_s+=jule::Str("[", 1);
		{
			auto &expr = (*_self_)._field_decl.get()._field_generics;
			auto it = expr.begin();
			_iter_begin_1a9773ad6:;
			if (it != expr.end()) {
				jule::I64 _36317_i = it - expr.begin();
				jule::Ptr<_1a685d960_GenericDecl> &_36320_g = *it;
				{
					_34017_s+=_36320_g.get()._field_ident;
					if (((_36317_i + 1LL) < (*_self_)._field_decl.get()._field_generics.len())) {
						_34017_s+=jule::Str(",", 1);
					};
				}
				_iter_next_1a9773ad6:;
				++it;
				_36317_i++;
				goto _iter_begin_1a9773ad6;
			}
			_iter_end_1a9773ad6:;
		};
		_34017_s+=jule::Str("]", 1);
	};
	_34017_s+=jule::Str("(", 1);
	jule::I64 _37313_n = (*_self_)._field_params.len();;
	if ((_37313_n > 0LL)) {
		{
			auto &expr = (*_self_)._field_params;
			auto it = expr.begin();
			_iter_begin_1a9775e3a:;
			if (it != expr.end()) {
				jule::Ptr<_1a6871e07_ParamIns> &_37520_p = *it;
				{
					_34017_s+=_1a68722d1_to_str(_37520_p.ptr());
					_34017_s+=jule::Str(",", 1);
				}
				_iter_next_1a9775e3a:;
				++it;
				goto _iter_begin_1a9775e3a;
			}
			_iter_end_1a9775e3a:;
		};
		(_34017_s).mut_slice(0LL,(_34017_s.len() - 1LL));;
	};
	_34017_s+=jule::Str(")", 1);
	if ((*_self_)._field_decl.get()._field_exceptional) {
		_34017_s+=jule::Str("!", 1);
	};
	if ((!(_1a6847eee_is_void((*_self_)._field_decl.ptr())))) {
		_34017_s+=jule::Str(":", 1);
		_34017_s+=_1a7727c8a_to_str((*_self_)._field_result.ptr());
	};
	return _34017_s;
}







std::ostream &operator<<(std::ostream &_Stream, _1a6872c93_FnIns _Src) {
	_Stream << _1a6873106_to_str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1a6875988_ReferenceStack> static__1a6875c96_new(void) {
	return jule::new_ptr<_1a6875988_ReferenceStack>(_1a6875988_ReferenceStack{._field_buffer=jule::Slice<jule::Any>::alloc(0LL,10LL)});
}



inline jule::I64 _1a687612b_len(_1a6875988_ReferenceStack* _self_) {
	return static_cast<jule::I64>((*_self_)._field_buffer.len());
}



inline jule::Any _1a6876439_at(_1a6875988_ReferenceStack* _self_, jule::I64 _6025_i) {
	return jule::Any((*_self_)._field_buffer[_6025_i]);
}



inline void _1a68766ae_push(_1a6875988_ReferenceStack* _self_, jule::Any _6531_ref) {
	(*_self_)._field_buffer = jule::alloc_for_append((*_self_)._field_buffer,1);(*_self_)._field_buffer.__push(jule::Any(_6531_ref));;
}



inline jule::Bool _1a9d89592_exist(_1a6875988_ReferenceStack* _self_, jule::Ptr<_1a6872c93_FnIns> _7027_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1a9d8a7b3:;
		if (it != expr.end()) {
			jule::Any &_7116_ref = *it;
			{
				if ((_7116_ref == _7027_t)) {
					return true;
				};
			}
			_iter_next_1a9d8a7b3:;
			++it;
			goto _iter_begin_1a9d8a7b3;
		}
		_iter_end_1a9d8a7b3:;
	};
	return false;
}

inline jule::Bool _1a9da108c_exist(_1a6875988_ReferenceStack* _self_, jule::Ptr<_1a76a7720_Var> _7027_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1a9da2269:;
		if (it != expr.end()) {
			jule::Any &_7116_ref = *it;
			{
				if ((_7116_ref == _7027_t)) {
					return true;
				};
			}
			_iter_next_1a9da2269:;
			++it;
			goto _iter_begin_1a9da2269;
		}
		_iter_end_1a9da2269:;
	};
	return false;
}

inline jule::Bool _1a9e41627_exist(_1a6875988_ReferenceStack* _self_, jule::Ptr<_1a6836a48_StructIns> _7027_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1a9e42848:;
		if (it != expr.end()) {
			jule::Any &_7116_ref = *it;
			{
				if ((_7116_ref == _7027_t)) {
					return true;
				};
			}
			_iter_next_1a9e42848:;
			++it;
			goto _iter_begin_1a9e42848;
		}
		_iter_end_1a9e42848:;
	};
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1a6875988_ReferenceStack _Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a6876d74_Pass _Src) {
	_Stream << "Pass{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "text:" << _Src._field_text;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a687a927_SymbolBuilder> _1a687aedd_get_root(jule::Ptr<_1a687a927_SymbolBuilder> _self_) {
	jule::Ptr<_1a687a927_SymbolBuilder> _28317_root = _self_;;
	while ((_28317_root.get()._field_owner != nullptr)) {
		{
			_28317_root=_28317_root.get()._field_owner;
		}
	_iter_next_1a977c1e9:;
	}
	_iter_end_1a977c1e9:;;
	return _28317_root;
}



inline void _1a687b3a6_push_err(_1a687a927_SymbolBuilder* _self_, jule::Ptr<_1a527737a_Token>& _29028_token, jule::Str _29043_fmt, jule::Slice<jule::Any> _29056_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1a768b380_compiler_err(_29028_token,true,_29043_fmt,jule::Any(_29056_args)));;
}



inline void _1a687b76e_push_err_text(_1a687a927_SymbolBuilder* _self_, jule::Ptr<_1a527737a_Token>& _29433_token, jule::Str _29448_fmt, jule::Slice<jule::Any> _29461_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1a768b380_compiler_err(_29433_token,false,_29448_fmt,jule::Any(_29461_args)));;
}



inline void _1a687ba8d_push_suggestion(_1a687a927_SymbolBuilder* _self_, jule::Str _29934_fmt, jule::Slice<jule::Any> _29947_args) {
	{
		_1a768c78d_push_suggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_29934_fmt,jule::Any(_29947_args));
	};
}



inline jule::Bool _1a687be67_check_cpp_use_decl_path(_1a687a927_SymbolBuilder* _self_, jule::Ptr<_1a6867d43_UseDecl>& _30343_decl, jule::Str _30359_path) {
	jule::Bool _30372_ok = jule::Bool();
	jule::Str _30413_ext = _1a429aaa8_ext(_30359_path);;
	if (((!(_1a4328240_is_valid_header_ext(_30413_ext))) && (!(_1a43284d7_is_valid_cpp_ext(_30413_ext))))) {
		_1a687b3a6_push_err(&(*_self_), _30343_decl.get()._field_token,jule::Str("invalid C++ extension: @", 24),jule::Slice<jule::Any>::make({jule::Any(_30413_ext)}));
		_30372_ok = false;
		return _30372_ok;
	};
	jule::Ptr<_1d4ea101e_Status> _31113_info = ({
		auto except = static__1d4e9edb9_of(_30359_path);
		(except.ok()) ? (except.result) : ({{
			_1a687b3a6_push_err(&(*_self_), _30343_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_30343_decl.get()._field_link_path)}));
			_30372_ok = false;
			return _30372_ok;
		} jule::Ptr<_1d4ea101e_Status>();});
	});;
	if (_1d4ea120b_is_dir(_31113_info.ptr())) {
		_1a687b3a6_push_err(&(*_self_), _30343_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_30343_decl.get()._field_link_path)}));
		_30372_ok = false;
		return _30372_ok;
	};
	_30372_ok = true;
	return _30372_ok;
}



inline jule::Ptr<_1a7685038_ImportInfo> _1a687c275_build_cpp_header_import(_1a687a927_SymbolBuilder* _self_, jule::Ptr<_1a6867d43_UseDecl>& _32347_decl) {
	jule::Str _32417_path = _32347_decl.get()._field_link_path;;
	if ((!(_1a4327e54_is_std_header_path(_32347_decl.get()._field_link_path)))) {
		_32417_path=_1a429a811_join(jule::Slice<jule::Str>::make({_1a527d161_dir(_32347_decl.get()._field_token.get()._field_file.ptr()),_32347_decl.get()._field_link_path}));
		jule::Bool _32821_ok = _1a687be67_check_cpp_use_decl_path(&(*_self_), _32347_decl,_32417_path);;
		if ((!(_32821_ok))) {
			return nullptr;
		};
		std::tie(_32417_path,_32821_ok) = _1a429ad50_abs(_32417_path);
		if ((!(_32821_ok))) {
			_1a687b3a6_push_err(&(*_self_), _32347_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_32347_decl.get()._field_link_path)}));
		};
	};
	return jule::new_ptr<_1a7685038_ImportInfo>(_1a7685038_ImportInfo{._field_token=_32347_decl.get()._field_token, ._field_path=_32417_path, ._field_link_path=_32347_decl.get()._field_link_path, ._field_ident=jule::Str(), ._field_cpp_linked=true, ._field_std=false, ._field_package=nullptr, });
}



inline jule::Ptr<_1a7685038_ImportInfo> _1a687c594_build_std_import(_1a687a927_SymbolBuilder* _self_, jule::Ptr<_1a6867d43_UseDecl>& _35140_decl) {
	jule::Str _35217_path = _35140_decl.get()._field_link_path.slice(5LL);;
	_35217_path=_1a4296972_replace(_35217_path,jule::Str("::", 2),static_cast<jule::Str>(47LL),-1LL);
	_35217_path=_1a429a811_join(jule::Slice<jule::Str>::make({_1a43483c5_PATH_STDLIB,_35217_path}));
	jule::Bool _35520_ok;;
	std::tie(_35217_path,_35520_ok) = _1a429ad50_abs(_35217_path);
	if ((!(_35520_ok))) {
		_1a687b3a6_push_err(&(*_self_), _35140_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_35140_decl.get()._field_link_path)}));
		return nullptr;
	};
	jule::Ptr<_1d4ea101e_Status> _36213_info = ({
		auto except = static__1d4e9edb9_of(_35217_path);
		(except.ok()) ? (except.result) : ({{
			_1a687b3a6_push_err(&(*_self_), _35140_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_35140_decl.get()._field_link_path)}));
			return nullptr;
		} jule::Ptr<_1d4ea101e_Status>();});
	});;
	if ((!(_1d4ea120b_is_dir(_36213_info.ptr())))) {
		_1a687b3a6_push_err(&(*_self_), _35140_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_35140_decl.get()._field_link_path)}));
		return nullptr;
	};
	jule::I64 _37213_i = (_1a429481b_find_last(_35140_decl.get()._field_link_path,jule::Str("::", 2)) + 1LL);;
	jule::Str _37313_ident = _35140_decl.get()._field_link_path.slice(_37213_i);;
	return jule::new_ptr<_1a7685038_ImportInfo>(_1a7685038_ImportInfo{._field_token=_35140_decl.get()._field_token, ._field_path=_35217_path, ._field_link_path=_35140_decl.get()._field_link_path, ._field_ident=_37313_ident, ._field_alias=_35140_decl.get()._field_alias, ._field_cpp_linked=false, ._field_std=true, ._field_import_all=_35140_decl.get()._field_full, ._field_package=jule::new_ptr<_1a7687bea_Package>(_1a7687bea_Package{._field_files=nullptr}), });
}



inline jule::Ptr<_1a7685038_ImportInfo> _1a687c8a2_build_ident_import(jule::Ptr<_1a687a927_SymbolBuilder> _self_, jule::Ptr<_1a6867d43_UseDecl>& _39043_decl) {
	jule::Str _39113_mod_path = _1a7682bc3_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a7681d37_get_mod_path(_self_.get()._field_importer);;
	if ((_39113_mod_path.len() == 0LL)) {
		_1a687b3a6_push_err(_self_.ptr(), _39043_decl.get()._field_token,jule::Str("no module file found in current directory or any parent directory", 65),jule::Slice<jule::Any>());
		_1a687ba8d_push_suggestion(_self_.ptr(), jule::Str("use \"julec mod init\" command to initialize module", 49),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Str _39817_path = _39043_decl.get()._field_link_path;;
	_39817_path=_1a4296972_replace(_39817_path,jule::Str("::", 2),static_cast<jule::Str>(47LL),-1LL);
	_39817_path=_1a429a811_join(jule::Slice<jule::Str>::make({_39113_mod_path,_39817_path}));
	jule::Bool _40220_ok;;
	std::tie(_39817_path,_40220_ok) = _1a429ad50_abs(_39817_path);
	if ((!(_40220_ok))) {
		_1a687b3a6_push_err(_self_.ptr(), _39043_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_39043_decl.get()._field_link_path)}));
		return nullptr;
	};
	jule::Ptr<_1d4ea101e_Status> _40913_info = ({
		auto except = static__1d4e9edb9_of(_39817_path);
		(except.ok()) ? (except.result) : ({{
			_1a687b3a6_push_err(_self_.ptr(), _39043_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_39043_decl.get()._field_link_path)}));
			return nullptr;
		} jule::Ptr<_1d4ea101e_Status>();});
	});;
	if ((!(_1d4ea120b_is_dir(_40913_info.ptr())))) {
		_1a687b3a6_push_err(_self_.ptr(), _39043_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_39043_decl.get()._field_link_path)}));
		return nullptr;
	};
	jule::I64 _41913_i = (_1a429481b_find_last(_39043_decl.get()._field_link_path,jule::Str("::", 2)) + 1LL);;
	jule::Str _42013_ident = _39043_decl.get()._field_link_path.slice(_41913_i);;
	return jule::new_ptr<_1a7685038_ImportInfo>(_1a7685038_ImportInfo{._field_token=_39043_decl.get()._field_token, ._field_path=_39817_path, ._field_link_path=_39043_decl.get()._field_link_path, ._field_ident=_42013_ident, ._field_alias=_39043_decl.get()._field_alias, ._field_cpp_linked=false, ._field_std=false, ._field_import_all=_39043_decl.get()._field_full, ._field_package=jule::new_ptr<_1a7687bea_Package>(_1a7687bea_Package{._field_files=nullptr}), });
}



inline jule::Ptr<_1a7685038_ImportInfo> _1a687cbb0_build_import(jule::Ptr<_1a687a927_SymbolBuilder> _self_, jule::Ptr<_1a6867d43_UseDecl>& _43737_decl) {
	{
		
		if (_43737_decl.get()._field_cpp_linked) {
			_case_begin_1a979b05e:;
			{
				return _1a687c275_build_cpp_header_import(_self_.ptr(), _43737_decl);
			}
		}
		else if (_43737_decl.get()._field_std) {
			_case_begin_1a979b0c5:;
			{
				return _1a687c594_build_std_import(_self_.ptr(), _43737_decl);
			}
		}
		else {
			_case_begin_1a979a514:;
			{
				return _1a687c8a2_build_ident_import(_self_, _43737_decl);
			}
		}
		_match_end_1a979a448:;
	};
}



inline jule::Bool _1a687cee0_check_duplicate_use_decl(_1a687a927_SymbolBuilder* _self_, jule::Ptr<_1a7685038_ImportInfo>& _44844_pkg) {
	jule::Bool _44864_ok = jule::Bool();
	jule::Ptr<_1a7685038_ImportInfo> _45013_lpkg = _1a76e9740_select_package((*_self_)._field_table.ptr(), jule::Fn<jule::Bool(jule::Ptr<_1a7685038_ImportInfo>)>([=](jule::Ptr<_1a7685038_ImportInfo> _45049_spkg) mutable -> jule::Bool {
		return (_44844_pkg.get()._field_path == _45049_spkg.get()._field_path);
	}));;
	if ((_45013_lpkg == nullptr)) {
		_44864_ok = true;
		return _44864_ok;
	};
	_1a687b3a6_push_err(&(*_self_), _44844_pkg.get()._field_token,jule::Str("use declaration duplication: @ is already used above", 52),jule::Slice<jule::Any>::make({jule::Any(_44844_pkg.get()._field_link_path)}));
	_1a687ba8d_push_suggestion(&(*_self_), jule::Str("remove this use declaration, already used, it is safe", 53),jule::Slice<jule::Any>());
	_44864_ok = false;
	return _44864_ok;
}



inline void _1a687d320_impl_import_selections(_1a687a927_SymbolBuilder* _self_, jule::Ptr<_1a7685038_ImportInfo>& _46246_imp, jule::Ptr<_1a6867d43_UseDecl>& _46269_decl) {
	{
		auto &expr = _46269_decl.get()._field_selected;
		auto it = expr.begin();
		_iter_begin_1a97a18a0:;
		if (it != expr.end()) {
			jule::Ptr<_1a527737a_Token> _46321_ident = *it;
			{
				if (_1a7687667_exist_ident(_46246_imp.ptr(), _46321_ident.get()._field_kind)) {
					_1a687b3a6_push_err(&(*_self_), _46321_ident,jule::Str("duplicated selection: @ is already selected", 43),jule::Slice<jule::Any>::make({jule::Any(_46321_ident.get()._field_kind)}));
					_1a687ba8d_push_suggestion(&(*_self_), jule::Str("remove this use selection, already selected, it is safe", 55),jule::Slice<jule::Any>());
					goto _iter_next_1a97a18a0;
				};
				_46246_imp.get()._field_selected = jule::alloc_for_append(_46246_imp.get()._field_selected,1);_46246_imp.get()._field_selected.__push(_46321_ident);;
			}
			_iter_next_1a97a18a0:;
			++it;
			goto _iter_begin_1a97a18a0;
		}
		_iter_end_1a97a18a0:;
	};
}



inline jule::Str _1a687d62d_get_as_link_path(jule::Ptr<_1a687a927_SymbolBuilder> _self_, jule::Str _47440_path) {
	if (_1a4221d2b_has_prefix(_47440_path,_1a43483c5_PATH_STDLIB)) {
		(_47440_path).mut_slice(_1a43483c5_PATH_STDLIB.len());;
		return (jule::Str("std", 3) + _1a4296972_replace(_47440_path,static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL));
	};
	jule::Str _48014_root;;
	std::tie(_48014_root,std::ignore) = _1a429ad50_abs(_1a7682bc3_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a7681d37_get_mod_path(_self_.get()._field_importer));
	(_47440_path).mut_slice(_48014_root.len());;
	if ((_47440_path[0LL] == 47LLU)) {
		(_47440_path).mut_slice(1LL);;
	};
	return _1a4296972_replace(_47440_path,static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL);
}



inline void _1a687d9e6_push_cycle_error(jule::Ptr<_1a687a927_SymbolBuilder> _self_, jule::Ptr<_1a687a927_SymbolBuilder>& _48837_sb, jule::Str _48857_path, jule::Str& _48873_message) {
	;
	jule::Str _49113_refers_to = _1a4334e1c_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_1a687d62d_get_as_link_path(_self_, _1a527d161_dir(_48837_sb.get()._field_table.get()._field_file.ptr()))),jule::Any(_1a687d62d_get_as_link_path(_self_, _48857_path))}));;
	(_48873_message).buffer.insert(0, (((_1a4222117_repeat(jule::Str(" ", 1),4LL) + _49113_refers_to) + jule::Str("\n", 1))));;
}



inline void _1a687ddae_push_cross_cycle_error(jule::Ptr<_1a687a927_SymbolBuilder> _self_, jule::Ptr<_1a687a927_SymbolBuilder>& _49843_target, jule::Ptr<_1a7685038_ImportInfo>& _49868_imp, jule::Ptr<_1a527737a_Token>& _49887_error_token) {
	jule::Str _49917_message = jule::Str();;
	_1a687d9e6_push_cycle_error(_self_, _self_,_49868_imp.get()._field_path,_49917_message);
	jule::Ptr<_1a687a927_SymbolBuilder> _50317_owner = _self_.get()._field_owner;;
	jule::Ptr<_1a687a927_SymbolBuilder> _50417_old = _self_;;
	while ((_50317_owner.get()._field_owner != nullptr)) {
		{
			_1a687d9e6_push_cycle_error(_self_, _50417_old.get()._field_owner,_1a527d161_dir(_50417_old.get()._field_table.get()._field_file.ptr()),_49917_message);
			if ((_50317_owner.get()._field_owner == _49843_target)) {
				_1a687d9e6_push_cycle_error(_self_, _49843_target,_1a527d161_dir(_50317_owner.get()._field_table.get()._field_file.ptr()),_49917_message);
				goto _iter_end_1a97aaa1e;
			};
			_50417_old=_50317_owner;
			_50317_owner=_50317_owner.get()._field_owner;
		}
	_iter_next_1a97aaa1e:;
	}
	_iter_end_1a97aaa1e:;;
	_1a687b3a6_push_err(_self_.ptr(), _49887_error_token,jule::Str("illegal cross cycle in use declarations;\n@", 42),jule::Slice<jule::Any>::make({jule::Any(_49917_message)}));
}



inline jule::Bool _1a687e266_check_import_cycles(jule::Ptr<_1a687a927_SymbolBuilder> _self_, jule::Ptr<_1a7685038_ImportInfo> _52139_imp, jule::Ptr<_1a6867d43_UseDecl>& _52158_decl) {
	if ((_52139_imp.get()._field_path == _1a527d161_dir(_self_.get()._field_table.get()._field_file.ptr()))) {
		_1a687b3a6_push_err(_self_.ptr(), _52158_decl.get()._field_token,jule::Str("illegal cycle in use declaration, package @ refers to itself", 60),jule::Slice<jule::Any>::make({jule::Any(_1a687d62d_get_as_link_path(_self_, _52139_imp.get()._field_path))}));
		return false;
	};
	if ((_self_.get()._field_owner == nullptr)) {
		return true;
	};
	if ((_1a527d161_dir(_self_.get()._field_owner.get()._field_table.get()._field_file.ptr()) == _52139_imp.get()._field_path)) {
		_1a687ddae_push_cross_cycle_error(_self_, _self_.get()._field_owner,_52139_imp,_52158_decl.get()._field_token);
		return false;
	};
	jule::Ptr<_1a687a927_SymbolBuilder> _53617_owner = _self_.get()._field_owner;;
	_julec_label_iter:;
	if ((_1a527d161_dir(_53617_owner.get()._field_table.get()._field_file.ptr()) == _52139_imp.get()._field_path)) {
		_1a687ddae_push_cross_cycle_error(_self_, _53617_owner,_52139_imp,_52158_decl.get()._field_token);
		return false;
	};
	if ((_53617_owner.get()._field_owner != nullptr)) {
		_53617_owner=_53617_owner.get()._field_owner;
		goto _julec_label_iter;
	};
	return true;
}



inline void _1a687e651_check_package_accessibility(_1a687a927_SymbolBuilder* _self_, jule::Ptr<_1a6867d43_UseDecl>& _55747_decl, jule::Str& _55764_mod, jule::Str& _55775_path) {
	if (((_1a7682bc3_Importer_mptr_data[((*_self_)._field_importer).type_offset]._1a7681d37_get_mod_path((*_self_)._field_importer) != _55764_mod) && _1a4295c3a_contains(_55775_path,jule::Str("internal", 8)))) {
		_1a687b3a6_push_err(&(*_self_), _55747_decl.get()._field_token,jule::Str("you cannot access to internal packages", 38),jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1a687ea19_import_package(jule::Ptr<_1a687a927_SymbolBuilder> _self_, jule::Ptr<_1a7685038_ImportInfo>& _56339_imp, jule::Ptr<_1a6867d43_UseDecl>& _56362_decl) {
	jule::Bool _56380_ok = jule::Bool();
	if (_56339_imp.get()._field_cpp_linked) {
		_56380_ok = true;
		return _56380_ok;
	};
	jule::Ptr<_1a7685038_ImportInfo> _56817_port = _1a7682bc3_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a7682453_get_import(_self_.get()._field_importer, _56339_imp.get()._field_path);;
	if ((_56817_port != nullptr)) {
		_56339_imp.get()._field_package=_56817_port.get()._field_package;
		_56339_imp.get()._field_duplicate=true;
		jule::Str _57317_old_mod = _1a7682bc3_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a7681d37_get_mod_path(_self_.get()._field_importer);;
		_1a7682bc3_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a7681ac3_set_mod_path(_self_.get()._field_importer, _1a7682bc3_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a7682145_mod_by_id(_self_.get()._field_importer, _56339_imp.get()._field_mod_id));
		_1a687e651_check_package_accessibility(_self_.ptr(), _56362_decl,_57317_old_mod,_56817_port.get()._field_path);
		_1a7682bc3_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a7681ac3_set_mod_path(_self_.get()._field_importer, _57317_old_mod);
	} else {
		if ((!(_1a687e266_check_import_cycles(_self_, _56339_imp,_56362_decl)))) {
			_56380_ok = false;
			return _56380_ok;
		};
		jule::Str _58217_old_mod = _1a7682bc3_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a7681d37_get_mod_path(_self_.get()._field_importer);;
		__JULE_DEFER({
			_1a7682bc3_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a7681ac3_set_mod_path(_self_.get()._field_importer, _58217_old_mod);
		});;
		if (_56339_imp.get()._field_std) {
			_1a7682bc3_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a7681ac3_set_mod_path(_self_.get()._field_importer, _1a43483c5_PATH_STDLIB);
		};
		jule::Slice<jule::Ptr<_1a6820cc9_Ast>> _58722_asts;;
		jule::Slice<_1a43349cc_Log> _58732_errors;;
		std::tie(_58722_asts,_58732_errors) = _1a7682bc3_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a768280a_import_package(_self_.get()._field_importer, _56339_imp.get()._field_path,(!(_56339_imp.get()._field_std)));
		if ((_58732_errors.len() > 0LL)) {
			_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_58732_errors);
			_56380_ok = false;
			return _56380_ok;
		};
		_1a687e651_check_package_accessibility(_self_.ptr(), _56362_decl,_58217_old_mod,_56339_imp.get()._field_path);
		{
			auto &expr = _58722_asts;
			auto it = expr.begin();
			_iter_begin_1a97c3b69:;
			if (it != expr.end()) {
				jule::Ptr<_1a6820cc9_Ast> _59525_ast = *it;
				{
					jule::Ptr<_1a76e8e26_SymbolTable> _59625_table = nullptr;;
					std::tie(_59625_table,_58732_errors) = _1a77429db_build_symbols(_59525_ast,_self_.get()._field_importer,_self_);
					if ((_58732_errors.len() > 0LL)) {
						_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_58732_errors);
						_1a687b76e_push_err_text(_self_.ptr(), _56339_imp.get()._field_token,jule::Str("used package has errors: @", 26),jule::Slice<jule::Any>::make({jule::Any(_56339_imp.get()._field_link_path)}));
						_56380_ok = false;
						return _56380_ok;
					};
					_56339_imp.get()._field_package.get()._field_files = jule::alloc_for_append(_56339_imp.get()._field_package.get()._field_files,1);_56339_imp.get()._field_package.get()._field_files.__push(_59625_table);;
				}
				_iter_next_1a97c3b69:;
				++it;
				goto _iter_begin_1a97c3b69;
			}
			_iter_end_1a97c3b69:;
		};
	};
	_1a687d320_impl_import_selections(_self_.ptr(), _56339_imp,_56362_decl);
	_56380_ok = true;
	return _56380_ok;
}



inline jule::Ptr<_1a7685038_ImportInfo> _1a687ed27_import_use_decl(jule::Ptr<_1a687a927_SymbolBuilder> _self_, jule::Ptr<_1a6867d43_UseDecl>& _61540_decl) {
	jule::Ptr<_1a7685038_ImportInfo> _61617_imp = _1a687cbb0_build_import(_self_, _61540_decl);;
	if ((_61617_imp == nullptr)) {
		return nullptr;
	};
	jule::Bool _62217_ok = _1a687cee0_check_duplicate_use_decl(_self_.ptr(), _61617_imp);;
	if ((!(_62217_ok))) {
		return nullptr;
	};
	_62217_ok=_1a687ea19_import_package(_self_, _61617_imp,_61540_decl);
	_self_.get()._field_table.get()._field_imports = jule::alloc_for_append(_self_.get()._field_table.get()._field_imports,1);_self_.get()._field_table.get()._field_imports.__push(_61617_imp);;
	if (_62217_ok) {
		_1a7682bc3_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a7682a80_imported(_self_.get()._field_importer, _61617_imp);
		return _61617_imp;
	};
	return nullptr;
}



inline void _1a6880003_import_use_decls(jule::Ptr<_1a687a927_SymbolBuilder> _self_) {
	{
		auto &expr = _self_.get()._field_ast.get()._field_use_decls;
		auto it = expr.begin();
		_iter_begin_1a97caad8:;
		if (it != expr.end()) {
			jule::Ptr<_1a6867d43_UseDecl> _63721_decl = *it;
			{
				_1a687ed27_import_use_decl(_self_, _63721_decl);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					goto _iter_end_1a97caad8;
				};
			}
			_iter_next_1a97caad8:;
			++it;
			goto _iter_begin_1a97caad8;
		}
		_iter_end_1a97caad8:;
	};
}



inline void _1a6880278_append_node(_1a687a927_SymbolBuilder* _self_, _1a6821934_Node& _64735_node) {
	{
		auto &_match_expr{ _64735_node._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1a686aeab_Impl>>()) {
			_case_begin_1a97cc3e2:;
			{
				(*_self_)._field_table.get()._field_impls = jule::alloc_for_append((*_self_)._field_table.get()._field_impls,1);(*_self_)._field_table.get()._field_impls.__push(_1a687a3c7_build_impl(_64735_node._field_data.operator jule::Ptr<_1a686aeab_Impl>()));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6866957_TypeAliasDecl>>()) {
			_case_begin_1a97cc458:;
			{
				jule::Ptr<_1a7726b9b_TypeAlias> _65221_ta = _1a6877759_build_type_alias(_64735_node._field_data.operator jule::Ptr<_1a6866957_TypeAliasDecl>());;
				(*_self_)._field_table.get()._field_type_aliases = jule::alloc_for_append((*_self_)._field_table.get()._field_type_aliases,1);(*_self_)._field_table.get()._field_type_aliases.__push(_65221_ta);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a686a296_StructDecl>>()) {
			_case_begin_1a97cc4be:;
			{
				jule::Ptr<_1a6826829_Struct> _65521_srct = _1a6878084_build_struct(_64735_node._field_data.operator jule::Ptr<_1a686a296_StructDecl>());;
				(*_self_)._field_table.get()._field_structs = jule::alloc_for_append((*_self_)._field_table.get()._field_structs,1);(*_self_)._field_table.get()._field_structs.__push(_65521_srct);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6862205_FnDecl>>()) {
			_case_begin_1a97cc535:;
			{
				jule::Ptr<_1a68709c7_Fn> _65821_f = _1a6878b9a_build_fn(_64735_node._field_data.operator jule::Ptr<_1a6862205_FnDecl>());;
				(*_self_)._field_table.get()._field_funcs = jule::alloc_for_append((*_self_)._field_table.get()._field_funcs,1);(*_self_)._field_table.get()._field_funcs.__push(_65821_f);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a686a8a1_TraitDecl>>()) {
			_case_begin_1a97ccdc6:;
			{
				jule::Ptr<_1a68d46b7_Trait> _66121_t = _1a68791d9_build_trait(_64735_node._field_data.operator jule::Ptr<_1a686a8a1_TraitDecl>());;
				(*_self_)._field_table.get()._field_traits = jule::alloc_for_append((*_self_)._field_table.get()._field_traits,1);(*_self_)._field_table.get()._field_traits.__push(_66121_t);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a68631d4_VarDecl>>()) {
			_case_begin_1a97cce3c:;
			{
				jule::Ptr<_1a76a7720_Var> _66421_v = _1a6879d88_build_var(_64735_node._field_data.operator jule::Ptr<_1a68631d4_VarDecl>());;
				(*_self_)._field_table.get()._field_vars = jule::alloc_for_append((*_self_)._field_table.get()._field_vars,1);(*_self_)._field_table.get()._field_vars.__push(_66421_v);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6868e10_EnumDecl>>()) {
			_case_begin_1a97ccea3:;
			{
				jule::Ptr<_1a6982435_Enum> _66721_e = _1a68799c0_build_enum(_64735_node._field_data.operator jule::Ptr<_1a6868e10_EnumDecl>());;
				(*_self_)._field_table.get()._field_enums = jule::alloc_for_append((*_self_)._field_table.get()._field_enums,1);(*_self_)._field_table.get()._field_enums.__push(_66721_e);;
			}
		}
		else {
			_case_begin_1a97cc315:;
			{
				_1a687b3a6_push_err(&(*_self_), _64735_node._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1a97cc2b0:;
	};
}



inline void _1a6880454_append_nodes(_1a687a927_SymbolBuilder* _self_) {
	{
		auto &expr = (*_self_)._field_ast.get()._field_nodes;
		auto it = expr.begin();
		_iter_begin_1a97d52a7:;
		if (it != expr.end()) {
			_1a6821934_Node _67521_node = *it;
			{
				_1a6880278_append_node(&(*_self_), _67521_node);
			}
			_iter_next_1a97d52a7:;
			++it;
			goto _iter_begin_1a97d52a7;
		}
		_iter_end_1a97d52a7:;
	};
}



inline void _1a68806c9_push_directive_pass(_1a687a927_SymbolBuilder* _self_, jule::Ptr<_1a6852525_Directive>& _68043_d) {
	if ((_68043_d.get()._field_args.len() == 0LL)) {
		_1a687b3a6_push_err(&(*_self_), _68043_d.get()._field_tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return;;
	} else if ((_68043_d.get()._field_args.len() > 1LL)) {
		jule::Ptr<_1a527737a_Token> _68517_arg = _68043_d.get()._field_args[1LL];;
		_1a687b3a6_push_err(&(*_self_), _68517_arg,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a527737a_Token> _68913_arg = _68043_d.get()._field_args[0LL];;
	if ((_68913_arg.get()._field_id != static_cast<jule::U64>(6LLU))) {
		_1a687b3a6_push_err(&(*_self_), _68913_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	if ((_68913_arg.get()._field_kind[0LL] != '\"')) {
		_1a687b3a6_push_err(&(*_self_), _68913_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	(*_self_)._field_table.get()._field_passes = jule::alloc_for_append((*_self_)._field_table.get()._field_passes,1);(*_self_)._field_table.get()._field_passes.__push(_1a6876d74_Pass{._field_token=_68043_d.get()._field_tag, ._field_text=_68913_arg.get()._field_kind.slice(1LL,(_68913_arg.get()._field_kind.len() - 1LL))});;
}



inline void _1a68808a5_append_top_directives(_1a687a927_SymbolBuilder* _self_) {
	{
		auto &expr = (*_self_)._field_ast.get()._field_top_directives;
		auto it = expr.begin();
		_iter_begin_1a97dae39:;
		if (it != expr.end()) {
			jule::Ptr<_1a6852525_Directive> _70721_d = *it;
			{
				{
					auto &_match_expr{ _70721_d.get()._field_tag.get()._field_kind };
					
					if (_match_expr == jule::Str("pass", 4)) {
						_case_begin_1a97dc721:;
						{
							_1a68806c9_push_directive_pass(&(*_self_), _70721_d);
						}
					}
					_match_end_1a97dc666:;
				};
			}
			_iter_next_1a97dae39:;
			++it;
			goto _iter_begin_1a97dae39;
		}
		_iter_end_1a97dae39:;
	};
}



inline void _1a6880a81_build(jule::Ptr<_1a687a927_SymbolBuilder> _self_) {
	_self_.get()._field_table=jule::new_ptr<_1a76e8e26_SymbolTable>(_1a76e8e26_SymbolTable{._field_file=_self_.get()._field_ast.get()._field_file, });
	_1a68808a5_append_top_directives(_self_.ptr());
	_1a6880003_import_use_decls(_self_);
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	_1a6880454_append_nodes(_self_.ptr());
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a687a927_SymbolBuilder _Src) {
	_Stream << "SymbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a68d629b_to_str(_1a68d46b7_Trait* _self_) {
	return (*_self_)._field_ident;
}



inline jule::Bool _1a68d7cd6_equals(jule::Ptr<_1a68d46b7_Trait> _self_, jule::Ptr<_1a77278d3_TypeKind> _2626_other) {
	jule::Ptr<_1a68d46b7_Trait> _2713_trt = _1a772ade2_trt(_2626_other.ptr());;
	return (_self_ == _2713_trt);
}



inline jule::Bool _1a69114a2_is_builtin(_1a68d46b7_Trait* _self_) {
	return ((*_self_)._field_token == nullptr);
}



inline jule::Ptr<_1a68709c7_Fn> _1a6911a68_find_method(_1a68d46b7_Trait* _self_, jule::Str _4034_ident) {
	{
		auto &expr = (*_self_)._field_methods;
		auto it = expr.begin();
		_iter_begin_1a98054d6:;
		if (it != expr.end()) {
			jule::Ptr<_1a68709c7_Fn> _4121_f = *it;
			{
				if ((_4121_f.get()._field_ident == _4034_ident)) {
					return _4121_f;
				};
			}
			_iter_next_1a98054d6:;
			++it;
			goto _iter_begin_1a98054d6;
		}
		_iter_end_1a98054d6:;
	};
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1a68d46b7_Trait _Src) {
	_Stream << _1a68d629b_to_str(&_Src);
	return _Stream;
}



inline jule::Bool _1a6933ccc_auto_expr(_1a693b6b9_EnumItem* _self_) {
	return ((*_self_)._field_value == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1a693b6b9_EnumItem _Src) {
	_Stream << "EnumItem{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "value:" << _Src._field_value;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a696655c_to_str(_1a6982435_Enum* _self_) {
	return (*_self_)._field_ident;
}



inline jule::Bool _1a6aadc9d_equals(jule::Ptr<_1a6982435_Enum> _self_, jule::Ptr<_1a77278d3_TypeKind> _3826_other) {
	jule::Ptr<_1a6982435_Enum> _3913_enm = _1a772a1cc_enm(_3826_other.ptr());;
	return (_self_ == _3913_enm);
}



inline jule::Ptr<_1a693b6b9_EnumItem> _1a6b19b0b_find_item(_1a6982435_Enum* _self_, jule::Str _4732_ident) {
	{
		auto &expr = (*_self_)._field_items;
		auto it = expr.begin();
		_iter_begin_1a9809683:;
		if (it != expr.end()) {
			jule::Ptr<_1a693b6b9_EnumItem> _4821_item = *it;
			{
				if ((_4821_item.get()._field_ident == _4732_ident)) {
					return _4821_item;
				};
			}
			_iter_next_1a9809683:;
			++it;
			goto _iter_begin_1a9809683;
		}
		_iter_end_1a9809683:;
	};
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1a6982435_Enum _Src) {
	_Stream << _1a696655c_to_str(&_Src);
	return _Stream;
}



inline jule::Bool _1a6b1a788_is_trait_impl(_1a6c31b02_Impl* _self_) {
	return ((*_self_)._field_base != nullptr);
}



inline jule::Bool _1a6b3234e_is_struct_impl(_1a6c31b02_Impl* _self_) {
	return ((*_self_)._field_base == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1a6c31b02_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "base:" << _Src._field_base << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "statics:" << _Src._field_statics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a7658803_Scope _Src) {
	_Stream << "Scope{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "deferred:" << _Src._field_deferred << ", ";
	_Stream << "stmts:" << _Src._field_stmts;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a7660200_If _Src) {
	_Stream << "If{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a7609c7c_Else _Src) {
	_Stream << "Else{";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a7609e69_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "elifs:" << _Src._field_elifs << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a761aa90_InfIter _Src) {
	_Stream << "InfIter{";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a764999d_is_while_next(_1a761ac7c_WhileIter* _self_) {
	return ((*_self_)._field_next != nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1a761ac7c_WhileIter _Src) {
	_Stream << "WhileIter{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "next:" << _Src._field_next << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a7648b23_RangeIter _Src) {
	_Stream << "RangeIter{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "key_a:" << _Src._field_key_a << ", ";
	_Stream << "key_b:" << _Src._field_key_b;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a7648d10_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "it:" << _Src._field_it;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a766c839_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "mtch:" << _Src._field_mtch;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a766ca26_Label _Src) {
	_Stream << "Label{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a766cc13_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a766ce00_Postfix _Src) {
	_Stream << "Postfix{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a766d0dc_Assign _Src) {
	_Stream << "Assign{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a766d2c9_MultiAssign _Src) {
	_Stream << "MultiAssign{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a764a95a_is_generic_type_match(_1a766d4b6_Match* _self_) {
	return (((*_self_)._field_type_match && ((*_self_)._field_expr != nullptr)) && (*_self_)._field_expr.get()._field_kind.get()._field_generic);
}







std::ostream &operator<<(std::ostream &_Stream, _1a766d4b6_Match _Src) {
	_Stream << "Match{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "type_match:" << _Src._field_type_match << ", ";
	_Stream << "cases:" << _Src._field_cases << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a764b1db_is_default(_1a766d8d4_Case* _self_) {
	return ((*_self_)._field_exprs == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1a766d8d4_Case _Src) {
	_Stream << "Case{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "next:" << _Src._field_next;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a766dac1_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "dest_case:" << _Src._field_dest_case;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a766dcad_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a766de9a_ScopeLabel _Src) {
	_Stream << "ScopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a766e187_ScopeGoto _Src) {
	_Stream << "ScopeGoto{";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a7685038_ImportInfo> _1a75eda73_find_package(_1a766e374_ScopeChecker* _self_, jule::Str _43935_ident) {
	return _1a768d22d_find_package((*_self_)._field_s.ptr(), _43935_ident);
}



inline jule::Ptr<_1a7685038_ImportInfo> _1a75db247_select_package(_1a766e374_ScopeChecker* _self_, jule::Fn<jule::Bool(jule::Ptr<_1a7685038_ImportInfo>)> _44937_selector) {
	return _1a768d53b_select_package((*_self_)._field_s.ptr(), _44937_selector);
}



inline jule::Ptr<_1a76a7720_Var> _1a7638393_find_var(_1a766e374_ScopeChecker* _self_, jule::Str _46031_ident, jule::Bool _46043_cpp_linked) {
	;
	jule::Ptr<_1a76a7720_Var> _46317_v = _1a76eb39b___find_var((*_self_)._field_table.ptr(), _46031_ident,_46043_cpp_linked,true);;
	if ((_46317_v != nullptr)) {
		return _46317_v;
	};
	jule::Ptr<_1a766e374_ScopeChecker> _46817_parent = (*_self_)._field_parent;;
	while ((_46817_parent != nullptr)) {
		{
			_46317_v=_1a76eb39b___find_var(_46817_parent.get()._field_table.ptr(), _46031_ident,_46043_cpp_linked,true);
			if ((_46317_v != nullptr)) {
				return _46317_v;
			};
			_46817_parent=_46817_parent.get()._field_parent;
		}
	_iter_next_1a9814b55:;
	}
	_iter_end_1a9814b55:;;
	return _1a768d8e3_find_var((*_self_)._field_s.ptr(), _46031_ident,_46043_cpp_linked);
}



inline jule::Ptr<_1a7726b9b_TypeAlias> _1a766e7d6_find_type_alias(_1a766e374_ScopeChecker* _self_, jule::Str _48738_ident, jule::Bool _48750_cpp_linked) {
	;
	jule::Ptr<_1a7726b9b_TypeAlias> _49017_ta = _1a76eb7ec___find_type_alias((*_self_)._field_table.ptr(), _48738_ident,_48750_cpp_linked,true);;
	if ((_49017_ta != nullptr)) {
		return _49017_ta;
	};
	jule::Ptr<_1a766e374_ScopeChecker> _49517_parent = (*_self_)._field_parent;;
	while ((_49517_parent != nullptr)) {
		{
			_49017_ta=_1a76eb7ec___find_type_alias(_49517_parent.get()._field_table.ptr(), _48738_ident,_48750_cpp_linked,true);
			if ((_49017_ta != nullptr)) {
				return _49017_ta;
			};
			_49517_parent=_49517_parent.get()._field_parent;
		}
	_iter_next_1a9819165:;
	}
	_iter_end_1a9819165:;;
	return _1a768dc9a_find_type_alias((*_self_)._field_s.ptr(), _48738_ident,_48750_cpp_linked);
}



inline jule::Ptr<_1a6826829_Struct> _1a766eb8d_find_struct(_1a766e374_ScopeChecker* _self_, jule::Str _51234_ident, jule::Bool _51246_cpp_linked) {
	return _1a768e152_find_struct((*_self_)._field_s.ptr(), _51234_ident,_51246_cpp_linked);
}



inline jule::Ptr<_1a68709c7_Fn> _1a7670045_find_fn(_1a766e374_ScopeChecker* _self_, jule::Str _52130_ident, jule::Bool _52142_cpp_linked) {
	return _1a768e509_find_fn((*_self_)._field_s.ptr(), _52130_ident,_52142_cpp_linked);
}



inline jule::Ptr<_1a68d46b7_Trait> _1a7670353_find_trait(_1a766e374_ScopeChecker* _self_, jule::Str _53033_ident) {
	return _1a768e817_find_trait((*_self_)._field_s.ptr(), _53033_ident);
}



inline jule::Ptr<_1a6982435_Enum> _1a7670661_find_enum(_1a766e374_ScopeChecker* _self_, jule::Str _53932_ident) {
	return _1a768eb25_find_enum((*_self_)._field_s.ptr(), _53932_ident);
}



inline jule::Bool _1a7670991_is_unsafe(jule::Ptr<_1a766e374_ScopeChecker> _self_) {
	jule::Ptr<_1a766e374_ScopeChecker> _54717_scope = _self_;;
	_julec_label_iter:;
	if (_54717_scope.get()._field_scope.get()._field_unsafety) {
		return true;
	};
	if ((_54717_scope.get()._field_parent != nullptr)) {
		_54717_scope=_54717_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;
}



inline jule::Bool _1a7670c05_is_root(_1a766e374_ScopeChecker* _self_) {
	return (((*_self_)._field_parent == nullptr) || ((*_self_)._field_owner != nullptr));
}



inline void _1a7670dd1_stop(_1a766e374_ScopeChecker* _self_) {
	(*_self_)._field_i=-1LL;
}



inline jule::Bool _1a7671145_stopped(_1a766e374_ScopeChecker* _self_) {
	return ((*_self_)._field_i == -1LL);
}



inline jule::Bool _1a76713a9_is_deferred(jule::Ptr<_1a766e374_ScopeChecker> _self_) {
	jule::Ptr<_1a766e374_ScopeChecker> _58017_scope = _self_;;
	_julec_label_iter:;
	if (_58017_scope.get()._field_scope.get()._field_deferred) {
		return true;
	};
	if ((_58017_scope.get()._field_parent != nullptr)) {
		_58017_scope=_58017_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;
}



inline jule::Ptr<_1a766e374_ScopeChecker> _1a767161d_get_root(jule::Ptr<_1a766e374_ScopeChecker> _self_) {
	jule::Ptr<_1a766e374_ScopeChecker> _59817_root = _self_;;
	while (((_59817_root.get()._field_parent != nullptr) && (_59817_root.get()._field_owner == nullptr))) {
		{
			_59817_root=_59817_root.get()._field_parent;
		}
	_iter_next_1a98287e5:;
	}
	_iter_end_1a98287e5:;;
	return _59817_root;
}



inline jule::Ptr<_1a766e374_ScopeChecker> _1a7671882_get_hard_root(jule::Ptr<_1a766e374_ScopeChecker> _self_) {
	jule::Ptr<_1a766e374_ScopeChecker> _60817_root = _self_;;
	while ((_60817_root.get()._field_parent != nullptr)) {
		{
			_60817_root=_60817_root.get()._field_parent;
		}
	_iter_next_1a9829ede:;
	}
	_iter_end_1a9829ede:;;
	return _60817_root;
}



inline jule::Ptr<_1a766ca26_Label> _1a7671b90_find_label(_1a766e374_ScopeChecker* _self_, jule::Str _61829_ident) {
	{
		auto &expr = (*_self_)._field_scope.get()._field_stmts;
		auto it = expr.begin();
		_iter_begin_1a982b496:;
		if (it != expr.end()) {
			jule::Any _61921_st = *it;
			{
				{
					auto &_match_expr{ _61921_st };
					
					if (_match_expr.type_is<jule::Ptr<_1a766ca26_Label>>()) {
						_case_begin_1a982bc16:;
						{
							jule::Ptr<_1a766ca26_Label> _62225_label = _61921_st.operator jule::Ptr<_1a766ca26_Label>();;
							if ((_62225_label.get()._field_ident == _61829_ident)) {
								return _62225_label;
							};
						}
					}
					_match_end_1a982bbb1:;
				};
			}
			_iter_next_1a982b496:;
			++it;
			goto _iter_begin_1a982b496;
		}
		_iter_end_1a982b496:;
	};
	return nullptr;
}



inline jule::Ptr<_1a766de9a_ScopeLabel> _1a7671e9d_find_label_scope(jule::Ptr<_1a766e374_ScopeChecker> _self_, jule::Str _63436_ident) {
	jule::Ptr<_1a766de9a_ScopeLabel> _63517_label = _1a76722ab_find_label_all(_self_.ptr(), _63436_ident);;
	if (((_63517_label != nullptr) && (_63517_label.get()._field_scope == _self_))) {
		return _63517_label;
	};
	return nullptr;
}



inline jule::Ptr<_1a766de9a_ScopeLabel> _1a76722ab_find_label_all(_1a766e374_ScopeChecker* _self_, jule::Str _64633_ident) {
	{
		auto &expr = (*((*_self_)._field_labels));
		auto it = expr.begin();
		_iter_begin_1a982ed6d:;
		if (it != expr.end()) {
			jule::Ptr<_1a766de9a_ScopeLabel> _64721_lbl = *it;
			{
				if ((_64721_lbl.get()._field_label.get()._field_ident == _64633_ident)) {
					return _64721_lbl;
				};
			}
			_iter_next_1a982ed6d:;
			++it;
			goto _iter_begin_1a982ed6d;
		}
		_iter_end_1a982ed6d:;
	};
	return nullptr;
}



inline jule::Bool _1a7672663_is_duplicated_ident(_1a766e374_ScopeChecker* _self_, jule::Uintptr _65838_itself, jule::Str _65855_ident) {
	jule::Ptr<_1a76a7720_Var> _65913_v = _1a7638393_find_var(&(*_self_), _65855_ident,false);;
	if (((_65913_v != nullptr) && (static_cast<jule::Uintptr>(_65913_v) != _65838_itself))) {
		if ((_65913_v.get()._field_scope == nullptr)) {
			return false;
		};
		return ((_65913_v.get()._field_scope == (*_self_)._field_scope) || (!(_1a768eeee_is_flag((*_self_)._field_s.ptr(), static_cast<jule::I64>(1LL)))));
	};
	jule::Ptr<_1a7726b9b_TypeAlias> _66713_ta = _1a766e7d6_find_type_alias(&(*_self_), _65855_ident,false);;
	if (((_66713_ta != nullptr) && (static_cast<jule::Uintptr>(_66713_ta) != _65838_itself))) {
		if ((_66713_ta.get()._field_scope == nullptr)) {
			return false;
		};
		return ((_66713_ta.get()._field_scope == (*_self_)._field_tree) || (!(_1a768eeee_is_flag((*_self_)._field_s.ptr(), static_cast<jule::I64>(1LL)))));
	};
	return false;
}



inline void _1a76728d8_check_var_decl(jule::Ptr<_1a766e374_ScopeChecker> _self_, jule::Ptr<_1a68631d4_VarDecl> _67838_decl) {
	jule::Ptr<_1a76a7720_Var> _67917_v = _1a6879d88_build_var(_67838_decl);;
	_67917_v.get()._field_scope=_self_.get()._field_scope;
	__JULE_DEFER({
		_self_.get()._field_table.get()._field_vars = jule::alloc_for_append(_self_.get()._field_table.get()._field_vars,1);_self_.get()._field_table.get()._field_vars.__push(_67917_v);;
		_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_67917_v));;
	});;
	if (_1a7672663_is_duplicated_ident(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_67917_v)),_67917_v.get()._field_ident)) {
		_1a769063c_push_err(_self_.get()._field_s.ptr(), _67917_v.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_67917_v.get()._field_ident)}));
		_1a769095b_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		_1a7670dd1_stop(_self_.ptr());
		return;;
	};
	_1a769bc75_check_var_decl(_self_.get()._field_s, _67917_v,jule::Trait<_1a7741e19_Lookup>(_self_, 0));
	if (((!(_1a76a7d3b_is_type_inferred(_67917_v.ptr()))) && ((_67917_v.get()._field_kind == nullptr) || (_67917_v.get()._field_kind.get()._field_kind == nullptr)))) {
		return;;
	};
	_1a76a03e9_check_type_var(_self_.get()._field_s, _67917_v,jule::Trait<_1a7741e19_Lookup>(_self_, 0));
}



inline void _1a7672b5d_check_type_alias_decl(jule::Ptr<_1a766e374_ScopeChecker> _self_, jule::Ptr<_1a6866957_TypeAliasDecl> _70245_decl) {
	jule::Ptr<_1a7726b9b_TypeAlias> _70317_ta = _1a6877759_build_type_alias(_70245_decl);;
	if (_1a7672663_is_duplicated_ident(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_70317_ta)),_70317_ta.get()._field_ident)) {
		_1a769063c_push_err(_self_.get()._field_s.ptr(), _70317_ta.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_70317_ta.get()._field_ident)}));
		_1a769095b_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		_1a7670dd1_stop(_self_.ptr());
		return;;
	};
	_1a7697e2a_check_type_alias_decl(_self_.get()._field_s, _70317_ta,jule::Trait<_1a7741e19_Lookup>(_self_, 0));
	_self_.get()._field_table.get()._field_type_aliases = jule::alloc_for_append(_self_.get()._field_table.get()._field_type_aliases,1);_self_.get()._field_table.get()._field_type_aliases.__push(_70317_ta);;
	if ((_70317_ta.get()._field_kind.get()._field_kind == nullptr)) {
		_1a7670dd1_stop(_self_.ptr());
	};
}



inline jule::Ptr<_1a7658803_Scope> _1a7672dc2_get_child(_1a766e374_ScopeChecker* _self_) {
	return jule::new_ptr<_1a7658803_Scope>(_1a7658803_Scope{._field_parent=(*_self_)._field_scope, });
}



inline void _1a767328a_check_child_ssc(jule::Ptr<_1a766e374_ScopeChecker> _self_, jule::Ptr<_1a686070e_ScopeTree>& _72640_tree, jule::Ptr<_1a7658803_Scope>& _72663_s, jule::Ptr<_1a766e374_ScopeChecker>& _72679_ssc) {
	_72679_ssc.get()._field_parent=_self_;
	_1a767d839_check(_72679_ssc, _72640_tree,_72663_s);
}



inline jule::Ptr<_1a7658803_Scope> _1a7673642_check_child_sc(jule::Ptr<_1a766e374_ScopeChecker> _self_, jule::Ptr<_1a686070e_ScopeTree>& _73139_tree, jule::Ptr<_1a766e374_ScopeChecker>& _73162_ssc) {
	jule::Ptr<_1a7658803_Scope> _73217_s = _1a7672dc2_get_child(_self_.ptr());;
	_1a767328a_check_child_ssc(_self_, _73139_tree,_73217_s,_73162_ssc);
	return _73217_s;
}



inline jule::Ptr<_1a7658803_Scope> _1a7673950_check_child(jule::Ptr<_1a766e374_ScopeChecker> _self_, jule::Ptr<_1a686070e_ScopeTree>& _73736_tree) {
	jule::Ptr<_1a766e374_ScopeChecker> _73817_ssc = _1a767da9d_new_child_checker(_self_);;
	return _1a7673642_check_child_sc(_self_, _73736_tree,_73817_ssc);
}



inline void _1a7673bc5_check_anon_scope(jule::Ptr<_1a766e374_ScopeChecker> _self_, jule::Ptr<_1a686070e_ScopeTree> _74240_tree) {
	jule::Ptr<_1a7658803_Scope> _74317_s = _1a7673950_check_child(_self_, _74240_tree);;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_74317_s));;
}



inline void _1a7673ee4_process_error_call(jule::Ptr<_1a766e374_ScopeChecker> _self_, jule::Ptr<_1a686e4ed_BuiltinErrorCallExprModel>& _74743_m, jule::Ptr<_1a527737a_Token> _74774_err) {
	if (_1a76713a9_is_deferred(_self_)) {
		_1a769063c_push_err(_self_.get()._field_s.ptr(), _74774_err,jule::Str("deferred scopes are not supports error calls", 44),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a766e374_ScopeChecker> _75217_root = _1a767161d_get_root(_self_);;
	if ((!(_75217_root.get()._field_owner.get()._field_decl.get()._field_exceptional))) {
		_1a769063c_push_err(_self_.get()._field_s.ptr(), _74774_err,jule::Str("error call can only useable for exceptional functions", 53),jule::Slice<jule::Any>());
		_1a769095b_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("you can declare an exceptional function with \"!\" operator", 57),jule::Slice<jule::Any>());
	};
	_74743_m.get()._field_func=_75217_root.get()._field_owner;
}



inline void _1a7674269_check_expr(jule::Ptr<_1a766e374_ScopeChecker> _self_, jule::Ptr<_1a6855e41_Expr> _76034_expr) {
	jule::Ptr<_1a7700922_Eval> _76117_eval = _1a7695444_eval(_self_.get()._field_s, jule::Trait<_1a7741e19_Lookup>(_self_, 0));;
	_76117_eval.get()._field_ignored=true;
	jule::Ptr<_1a76edda4_Data> _76317_d = _1a771982b_eval_expr(_76117_eval, _76034_expr);;
	if ((_76317_d == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _76317_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1a686e4ed_BuiltinErrorCallExprModel>>()) {
			_case_begin_1a9851026:;
			{
				jule::Ptr<_1a686e4ed_BuiltinErrorCallExprModel> _77021_m = _76317_d.get()._field_model.operator jule::Ptr<_1a686e4ed_BuiltinErrorCallExprModel>();;
				_1a7673ee4_process_error_call(_self_, _77021_m,_76034_expr.get()._field_token);
				_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_76317_d));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6870224_BackendEmitExprModel>>() || _match_expr.type_is<jule::Ptr<_1a686e124_BuiltinAppendCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1a686d684_BuiltinCloneCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1a686d2aa_BuiltinOutCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1a686d497_BuiltinOutlnCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1a686da5d_BuiltinPanicCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1a686dc4a_BuiltinAssertCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1a686e311_BuiltinCopyCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1a6870411_FreeExprModel>>() || _match_expr.type_is<jule::Ptr<_1a6845150_FnCallExprModel>>()) {
			_case_begin_1a98512bd:;
			{
				_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_76317_d));;
			}
		}
		else {
			_case_begin_1a985117a:;
			{
				_1a769063c_push_err(_self_.get()._field_s.ptr(), _76034_expr.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1a9850de4:;
	};
}



inline void _1a76744de_check_co_expr(jule::Ptr<_1a766e374_ScopeChecker> _self_, jule::Ptr<_1a685766d_CoExpr> _78937_expr) {
	jule::Ptr<_1a7700922_Eval> _79017_eval = _1a7695444_eval(_self_.get()._field_s, jule::Trait<_1a7741e19_Lookup>(_self_, 0));;
	_79017_eval.get()._field_ignored=true;
	jule::Ptr<_1a76edda4_Data> _79217_d = _1a771982b_eval_expr(_79017_eval, _78937_expr.get()._field_expr);;
	if ((_79217_d == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _79217_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1a6845150_FnCallExprModel>>()) {
			_case_begin_1a9857769:;
			{
				jule::Ptr<_1a6845150_FnCallExprModel> _79921_model = _79217_d.get()._field_model.operator jule::Ptr<_1a6845150_FnCallExprModel>();;
				if (_79921_model.get()._field_func.get()._field_decl.get()._field_exceptional) {
					_1a769063c_push_err(_self_.get()._field_s.ptr(), _78937_expr.get()._field_token,jule::Str("concurrent calls not supports exceptionals", 42),jule::Slice<jule::Any>());
					_1a769095b_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("handle exceptional in a separate function or anonymous function", 63),jule::Slice<jule::Any>());
				};
				_79921_model.get()._field_is_co=true;
				_1a7711a76_check_fn_of_concurrent_call(_79017_eval.ptr(), _79921_model.get()._field_func,_78937_expr.get()._field_expr.get()._field_token);
				_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_79217_d));;
			}
		}
		else {
			_case_begin_1a9856aba:;
			{
				_1a769063c_push_err(_self_.get()._field_s.ptr(), _78937_expr.get()._field_token,jule::Str("statement must have function call expression", 44),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1a9856801:;
	};
}



inline jule::Ptr<_1a7660200_If> _1a76747ec_check_if(jule::Ptr<_1a766e374_ScopeChecker> _self_, jule::Ptr<_1a6865956_If> _81332_i) {
	jule::Ptr<_1a7658803_Scope> _81417_s = _1a7673950_check_child(_self_, _81332_i.get()._field_scope);;
	jule::Ptr<_1a76edda4_Data> _81617_d = _1a771982b_eval_expr(_1a7695444_eval(_self_.get()._field_s, jule::Trait<_1a7741e19_Lookup>(_self_, 0)), _81332_i.get()._field_expr);;
	if ((_81617_d == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1a772c135_Prim> _82117_prim = _1a7729990_prim(_81617_d.get()._field_kind.ptr());;
	if (((_82117_prim == nullptr) || (!(_1a772ed80_is_bool(_82117_prim.ptr()))))) {
		_1a769063c_push_err(_self_.get()._field_s.ptr(), _81332_i.get()._field_expr.get()._field_token,jule::Str("if conditions must be have boolean expression", 45),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1a7660200_If>(_1a7660200_If{._field_expr=jule::Any(_81617_d.get()._field_model), ._field_scope=_81417_s});
}



inline jule::Ptr<_1a7609c7c_Else> _1a7674b0a_check_else(jule::Ptr<_1a766e374_ScopeChecker> _self_, jule::Ptr<_1a6865d0d_Else> _83334_e) {
	return jule::new_ptr<_1a7609c7c_Else>(_1a7609c7c_Else{._field_scope=_1a7673950_check_child(_self_, _83334_e.get()._field_scope)});
}



inline void _1a7674d80_check_conditional(jule::Ptr<_1a766e374_ScopeChecker> _self_, jule::Ptr<_1a6866281_Conditional> _83941_conditional) {
	jule::Ptr<_1a7609e69_Conditional> _84017_c = jule::new_ptr<_1a7609e69_Conditional>(_1a7609e69_Conditional{});;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_84017_c));;
	_84017_c.get()._field_elifs=jule::Slice<jule::Ptr<_1a7660200_If>>::alloc(0LL,(_83941_conditional.get()._field_tail.len() + 1LL));
	_84017_c.get()._field_elifs = jule::alloc_for_append(_84017_c.get()._field_elifs,1);_84017_c.get()._field_elifs.__push(_1a76747ec_check_if(_self_, _83941_conditional.get()._field_head));;
	{
		auto &expr = _83941_conditional.get()._field_tail;
		auto it = expr.begin();
		_iter_begin_1a9861de4:;
		if (it != expr.end()) {
			jule::Ptr<_1a6865956_If> _84621_elif = *it;
			{
				_84017_c.get()._field_elifs = jule::alloc_for_append(_84017_c.get()._field_elifs,1);_84017_c.get()._field_elifs.__push(_1a76747ec_check_if(_self_, _84621_elif));;
			}
			_iter_next_1a9861de4:;
			++it;
			goto _iter_begin_1a9861de4;
		}
		_iter_end_1a9861de4:;
	};
	if ((_83941_conditional.get()._field_default != nullptr)) {
		_84017_c.get()._field_default=_1a7674b0a_check_else(_self_, _83941_conditional.get()._field_default);
	};
}



inline void _1a76752e2_check_iter_scope_ssc(jule::Ptr<_1a766e374_ScopeChecker> _self_, jule::Uintptr _85540_it, jule::Ptr<_1a686070e_ScopeTree> _85557_tree, jule::Ptr<_1a7658803_Scope>& _85580_s, jule::Ptr<_1a766e374_ScopeChecker> _85595_ssc) {
	_85595_ssc.get()._field_it=_85540_it;
	_1a767328a_check_child_ssc(_self_, _85557_tree,_85580_s,_85595_ssc);
}



inline jule::Ptr<_1a7658803_Scope> _1a7675743_check_iter_scope_sc(jule::Ptr<_1a766e374_ScopeChecker> _self_, jule::Uintptr _86039_it, jule::Ptr<_1a686070e_ScopeTree> _86056_tree, jule::Ptr<_1a766e374_ScopeChecker> _86078_ssc) {
	jule::Ptr<_1a7658803_Scope> _86117_scope = _1a7672dc2_get_child(_self_.ptr());;
	_1a76752e2_check_iter_scope_ssc(_self_, _86039_it,_86056_tree,_86117_scope,_86078_ssc);
	return _86117_scope;
}



inline jule::Ptr<_1a7658803_Scope> _1a7675aea_check_iter_scope(jule::Ptr<_1a766e374_ScopeChecker> _self_, jule::Uintptr _86636_it, jule::Ptr<_1a686070e_ScopeTree>& _86654_tree) {
	jule::Ptr<_1a766e374_ScopeChecker> _86717_ssc = _1a767da9d_new_child_checker(_self_);;
	return _1a7675743_check_iter_scope_sc(_self_, _86636_it,_86654_tree,_86717_ssc);
}



inline void _1a7675d70_check_inf_iter(jule::Ptr<_1a766e374_ScopeChecker> _self_, jule::Ptr<_1a6863b0d_Iter>& _87139_it) {
	jule::Ptr<_1a761aa90_InfIter> _87217_kind = jule::new_ptr<_1a761aa90_InfIter>();;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_87217_kind));;
	_87217_kind.get()._field_scope=_1a7675aea_check_iter_scope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_87217_kind)),_87139_it.get()._field_scope);
}



inline void _1a76760e5_check_while_iter(jule::Ptr<_1a766e374_ScopeChecker> _self_, jule::Ptr<_1a6863b0d_Iter>& _87741_it) {
	jule::Ptr<_1a68643d3_WhileKind> _87817_wh = _87741_it.get()._field_kind.operator jule::Ptr<_1a68643d3_WhileKind>();;
	if (((_87817_wh.get()._field_expr == nullptr) && (_87817_wh.get()._field_next == nullptr))) {
		_1a7675d70_check_inf_iter(_self_, _87741_it);
		return;;
	};
	jule::Ptr<_1a761ac7c_WhileIter> _88417_kind = jule::new_ptr<_1a761ac7c_WhileIter>();;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_88417_kind));;
	_88417_kind.get()._field_scope=_1a7675aea_check_iter_scope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_88417_kind)),_87741_it.get()._field_scope);
	if ((_87817_wh.get()._field_expr != nullptr)) {
		jule::Ptr<_1a76edda4_Data> _88921_d = _1a771982b_eval_expr(_1a7695444_eval(_self_.get()._field_s, jule::Trait<_1a7741e19_Lookup>(_self_, 0)), _87817_wh.get()._field_expr);;
		if ((_88921_d == nullptr)) {
			return;;
		};
		jule::Ptr<_1a772c135_Prim> _89417_prim = _1a7729990_prim(_88921_d.get()._field_kind.ptr());;
		if ((_89417_prim == nullptr)) {
			_1a769063c_push_err(_self_.get()._field_s.ptr(), _87741_it.get()._field_token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>());
			return;;
		};
		if ((!(_1a772ed80_is_bool(_89417_prim.ptr())))) {
			_1a769063c_push_err(_self_.get()._field_s.ptr(), _87741_it.get()._field_token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>());
			return;;
		};
		_88417_kind.get()._field_expr=jule::Any(_88921_d.get()._field_model);
	};
	if (_1a6864735_is_while_next(_87817_wh.ptr())) {
		if ((!(_1a764679c_is_valid_ast_st_for_next_st(_87817_wh.get()._field_next)))) {
			_1a769063c_push_err(_self_.get()._field_s.ptr(), _87817_wh.get()._field_next_token,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>());
			return;;
		};
		jule::I64 _91417_n = _self_.get()._field_scope.get()._field_stmts.len();;
		_1a767c5d5_check_node(_self_, _87817_wh.get()._field_next);
		if ((_91417_n < _self_.get()._field_scope.get()._field_stmts.len())) {
			jule::Any _91725_st = _self_.get()._field_scope.get()._field_stmts[_91417_n];;
			_self_.get()._field_scope.get()._field_stmts=_self_.get()._field_scope.get()._field_stmts.slice(0LL,_91417_n);
			if ((!(_1a76473d5_is_valid_st_for_next_st(_91725_st)))) {
				_1a769063c_push_err(_self_.get()._field_s.ptr(), _87817_wh.get()._field_next_token,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>());
			};
			_88417_kind.get()._field_next=jule::Any(_91725_st);
		};
	};
}



inline void _1a767636a_check_range_iter(jule::Ptr<_1a766e374_ScopeChecker> _self_, jule::Ptr<_1a6863b0d_Iter>& _92841_it) {
	jule::Ptr<_1a6864c74_RangeKind> _92917_rang = _92841_it.get()._field_kind.operator jule::Ptr<_1a6864c74_RangeKind>();;
	jule::Ptr<_1a76edda4_Data> _93117_d = _1a771982b_eval_expr(_1a7695444_eval(_self_.get()._field_s, jule::Trait<_1a7741e19_Lookup>(_self_, 0)), _92917_rang.get()._field_expr);;
	if ((_93117_d == nullptr)) {
		return;;
	};
	jule::Ptr<_1a7648b23_RangeIter> _93617_kind = jule::new_ptr<_1a7648b23_RangeIter>(_1a7648b23_RangeIter{._field_expr=_93117_d, });;
	_1a76e50a9_RangeChecker _94017_rc = _1a76e50a9_RangeChecker{._field_sc=_self_, ._field_rang=_92917_rang, ._field_kind=_93617_kind, ._field_d=_93117_d};;
	jule::Bool _94613_ok = _1a76e69a1_check(&_94017_rc);;
	if ((!(_94613_ok))) {
		return;;
	};
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_93617_kind));;
	jule::Ptr<_1a766e374_ScopeChecker> _95317_ssc = _1a767da9d_new_child_checker(_self_);;
	jule::Ptr<_1a7658803_Scope> _95417_scope = _1a7672dc2_get_child(_self_.ptr());;
	if ((_93617_kind.get()._field_key_a != nullptr)) {
		if (((!(_1a768eeee_is_flag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1a7672663_is_duplicated_ident(_self_.ptr(), 0LLU,_93617_kind.get()._field_key_a.get()._field_ident))) {
			_1a769063c_push_err(_self_.get()._field_s.ptr(), _93617_kind.get()._field_key_a.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_93617_kind.get()._field_key_a.get()._field_ident)}));
			_1a769095b_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		};
		_93617_kind.get()._field_key_a.get()._field_scope=_95417_scope;
		_95317_ssc.get()._field_table.get()._field_vars = jule::alloc_for_append(_95317_ssc.get()._field_table.get()._field_vars,1);_95317_ssc.get()._field_table.get()._field_vars.__push(_93617_kind.get()._field_key_a);;
	};
	if ((_93617_kind.get()._field_key_b != nullptr)) {
		if (((!(_1a768eeee_is_flag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1a7672663_is_duplicated_ident(_self_.ptr(), 0LLU,_93617_kind.get()._field_key_b.get()._field_ident))) {
			_1a769063c_push_err(_self_.get()._field_s.ptr(), _93617_kind.get()._field_key_b.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_93617_kind.get()._field_key_b.get()._field_ident)}));
			_1a769095b_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		};
		_93617_kind.get()._field_key_b.get()._field_scope=_95417_scope;
		_95317_ssc.get()._field_table.get()._field_vars = jule::alloc_for_append(_95317_ssc.get()._field_table.get()._field_vars,1);_95317_ssc.get()._field_table.get()._field_vars.__push(_93617_kind.get()._field_key_b);;
	};
	_1a76752e2_check_iter_scope_ssc(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_93617_kind)),_92841_it.get()._field_scope,_95417_scope,_95317_ssc);
	_93617_kind.get()._field_scope=_95417_scope;
}



inline void _1a76765e0_check_iter(jule::Ptr<_1a766e374_ScopeChecker> _self_, jule::Ptr<_1a6863b0d_Iter> _97834_it) {
	if (_1a6863e60_is_inf(_97834_it.ptr())) {
		_1a7675d70_check_inf_iter(_self_, _97834_it);
		return;;
	};
	{
		auto &_match_expr{ _97834_it.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a68643d3_WhileKind>>()) {
			_case_begin_1a9884de5:;
			{
				_1a76760e5_check_while_iter(_self_, _97834_it);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6864c74_RangeKind>>()) {
			_case_begin_1a988570e:;
			{
				_1a767636a_check_range_iter(_self_, _97834_it);
			}
		}
		else {
			_case_begin_1a9885027:;
			{
				jule::outln(jule::Str("error <unimplemented iteration kind>", 36));
			}
		}
		_match_end_1a9884ec2:;
	};
}



inline jule::Bool _1a76768ed_check_valid_cont_label(jule::Ptr<_1a766e374_ScopeChecker> _self_, jule::Uintptr _99442_it) {
	jule::Ptr<_1a766e374_ScopeChecker> _99517_scope = _self_;;
	_julec_label_iter:;
	if ((_99517_scope.get()._field_it == _99442_it)) {
		return true;
	};
	if ((_99517_scope.get()._field_parent != nullptr)) {
		_99517_scope=_99517_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;
}



inline jule::Bool _1a7676c2d_check_valid_break_label(jule::Ptr<_1a766e374_ScopeChecker> _self_, jule::Uintptr _101043_ptr) {
	jule::Ptr<_1a766e374_ScopeChecker> _101117_scope = _self_;;
	_julec_label_iter:;
	if ((_101117_scope.get()._field_it == _101043_ptr)) {
		return true;
	};
	if ((_101117_scope.get()._field_cse != 0LLU)) {
		jule::Uintptr _101917_mtch = static_cast<jule::Uintptr>(((_1a766d8d4_Case*)(_101117_scope.get()._field_cse))->_field_owner);;
		if ((_101917_mtch == _101043_ptr)) {
			return true;
		};
	};
	if ((_101117_scope.get()._field_parent != nullptr)) {
		_101117_scope=_101117_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;
}



inline jule::Ptr<_1a7648d10_ContSt> _1a767704c_check_cont_valid_scope(jule::Ptr<_1a766e374_ScopeChecker> _self_, jule::Ptr<_1a68654d3_ContSt> _103342_c) {
	if (_1a76713a9_is_deferred(_self_)) {
		_1a769063c_push_err(_self_.get()._field_s.ptr(), _103342_c.get()._field_token,jule::Str("continue keyword is cannot used at out of iteration", 51),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_103342_c.get()._field_label != nullptr)) {
		return jule::new_ptr<_1a7648d10_ContSt>();
	};
	jule::Ptr<_1a766e374_ScopeChecker> _104317_scope = _self_;;
	_julec_label_iter:;
	{
		
		if ((((_104317_scope.get()._field_it == 0LLU) && (_104317_scope.get()._field_parent != nullptr)) && (_104317_scope.get()._field_owner == nullptr))) {
			_case_begin_1a988dc45:;
			{
				_104317_scope=_104317_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_104317_scope.get()._field_it != 0LLU)) {
			_case_begin_1a988dcbc:;
			{
				return jule::new_ptr<_1a7648d10_ContSt>(_1a7648d10_ContSt{._field_it=_104317_scope.get()._field_it});
			}
		}
		_match_end_1a988db79:;
	};
	_1a769063c_push_err(_self_.get()._field_s.ptr(), _103342_c.get()._field_token,jule::Str("continue keyword is cannot used at out of iteration", 51),jule::Slice<jule::Any>());
	return nullptr;
}



inline void _1a76772c2_check_cont(jule::Ptr<_1a766e374_ScopeChecker> _self_, jule::Ptr<_1a68654d3_ContSt> _105730_c) {
	jule::Ptr<_1a7648d10_ContSt> _105817_cont = _1a767704c_check_cont_valid_scope(_self_, _105730_c);;
	if ((_105817_cont == nullptr)) {
		return;;
	};
	if ((_105730_c.get()._field_label != nullptr)) {
		jule::Ptr<_1a766de9a_ScopeLabel> _106421_label = _1a7636ea7_find_label_parent(_105730_c.get()._field_label.get()._field_kind,_self_.get()._field_parent);;
		if ((_106421_label == nullptr)) {
			_1a769063c_push_err(_self_.get()._field_s.ptr(), _105730_c.get()._field_label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>::make({jule::Any(_105730_c.get()._field_label.get()._field_kind)}));
			return;;
		};
		_106421_label.get()._field_used=true;
		if (((_106421_label.get()._field_pos + 1LL) >= _106421_label.get()._field_scope.get()._field_scope.get()._field_stmts.len())) {
			_1a769063c_push_err(_self_.get()._field_s.ptr(), _105730_c.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_105730_c.get()._field_label.get()._field_kind)}));
			return;;
		};
		jule::I64 _107717_i = (_106421_label.get()._field_pos + 1LL);;
		if ((_107717_i >= _106421_label.get()._field_scope.get()._field_scope.get()._field_stmts.len())) {
			_1a769063c_push_err(_self_.get()._field_s.ptr(), _105730_c.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>());
		} else {
			jule::Any _108125_st = _106421_label.get()._field_scope.get()._field_scope.get()._field_stmts[_107717_i];;
			{
				auto &_match_expr{ _108125_st };
				
				if (_match_expr.type_is<jule::Ptr<_1a761aa90_InfIter>>()) {
					_case_begin_1a9896621:;
					{
						_105817_cont.get()._field_it=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_108125_st.operator jule::Ptr<_1a761aa90_InfIter>()));
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_1a7648b23_RangeIter>>()) {
					_case_begin_1a9897e3b:;
					{
						_105817_cont.get()._field_it=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_108125_st.operator jule::Ptr<_1a7648b23_RangeIter>()));
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_1a761ac7c_WhileIter>>()) {
					_case_begin_1a9897ea2:;
					{
						_105817_cont.get()._field_it=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_108125_st.operator jule::Ptr<_1a761ac7c_WhileIter>()));
					}
				}
				else {
					_case_begin_1a9897cb5:;
					{
						_1a769063c_push_err(_self_.get()._field_s.ptr(), _105730_c.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_105730_c.get()._field_label.get()._field_kind)}));
					}
				}
				_match_end_1a9897c60:;
			};
		};
	};
	if ((_105817_cont.get()._field_it != 0LLU)) {
		if ((!(_1a76768ed_check_valid_cont_label(_self_, _105817_cont.get()._field_it)))) {
			_1a769063c_push_err(_self_.get()._field_s.ptr(), _105730_c.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_105730_c.get()._field_label.get()._field_kind)}));
		};
	};
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_105817_cont));;
}



inline void _1a7677547_check_label(jule::Ptr<_1a766e374_ScopeChecker> _self_, jule::Ptr<_1a685dd17_LabelSt> _110435_l) {
	if ((_1a7671b90_find_label(_self_.ptr(), _110435_l.get()._field_ident) != nullptr)) {
		_1a769063c_push_err(_self_.get()._field_s.ptr(), _110435_l.get()._field_token,jule::Str("label is already exist in this identifier: @", 44),jule::Slice<jule::Any>::make({jule::Any(_110435_l.get()._field_ident)}));
		return;;
	};
	jule::Ptr<_1a766ca26_Label> _111017_label = jule::new_ptr<_1a766ca26_Label>(_1a766ca26_Label{._field_ident=_110435_l.get()._field_ident});;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_111017_label));;
	(*(_self_.get()._field_labels))=jule::append((*(_self_.get()._field_labels)),jule::Slice<jule::Ptr<_1a766de9a_ScopeLabel>>::make({jule::new_ptr<_1a766de9a_ScopeLabel>(_1a766de9a_ScopeLabel{._field_token=_110435_l.get()._field_token, ._field_label=_111017_label, ._field_pos=static_cast<jule::I64>((_self_.get()._field_scope.get()._field_stmts.len() - 1LL)), ._field_scope=_self_, })}));
}



inline void _1a76777bc_push_goto(jule::Ptr<_1a766e374_ScopeChecker> _self_, jule::Ptr<_1a685e1be_GotoSt> _112333_gt) {
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(jule::new_ptr<_1a766cc13_GotoSt>(_1a766cc13_GotoSt{._field_ident=_112333_gt.get()._field_label.get()._field_kind})));;
	(*(_self_.get()._field_gotos))=jule::append((*(_self_.get()._field_gotos)),jule::Slice<jule::Ptr<_1a766e187_ScopeGoto>>::make({jule::new_ptr<_1a766e187_ScopeGoto>(_1a766e187_ScopeGoto{._field_gt=_112333_gt, ._field_scope=_self_, ._field_pos=static_cast<jule::I64>((_self_.get()._field_scope.get()._field_stmts.len() - 1LL))})}));
}



inline void _1a7677a42_check_postfix(jule::Ptr<_1a766e374_ScopeChecker> _self_, jule::Ptr<_1a6860104_AssignSt> _113537_a) {
	if ((_113537_a.get()._field_left.len() > 1LL)) {
		_1a769063c_push_err(_self_.get()._field_s.ptr(), _113537_a.get()._field_setter,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a6855e41_Expr> _114117_expr = _113537_a.get()._field_left[0LL].get()._field_expr;;
	jule::Ptr<_1a76edda4_Data> _114217_d = _1a771982b_eval_expr(_1a7695444_eval(_self_.get()._field_s, jule::Trait<_1a7741e19_Lookup>(_self_, 0)), _114117_expr);;
	if ((_114217_d == nullptr)) {
		return;;
	};
	_1a7646060_check_assign(_self_.get()._field_s,_114217_d,nullptr,_113537_a.get()._field_setter);
	if ((_1a7729e68_ptr(_114217_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1a7733ba8_Ptr> _115021_ptr = _1a7729e68_ptr(_114217_d.get()._field_kind.ptr());;
		if (_1a773467b_is_unsafe(_115021_ptr.ptr())) {
			_1a769063c_push_err(_self_.get()._field_s.ptr(), _113537_a.get()._field_setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_113537_a.get()._field_setter.get()._field_kind),jule::Any(_1a7727c8a_to_str(_114217_d.get()._field_kind.ptr()))}));
			return;;
		};
	} else {
		if (((_1a7729990_prim(_114217_d.get()._field_kind.ptr()) == nullptr) || (!(_1a766c460_is_num(_1a7729990_prim(_114217_d.get()._field_kind.ptr()).get()._field_kind))))) {
			_1a769063c_push_err(_self_.get()._field_s.ptr(), _113537_a.get()._field_setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_113537_a.get()._field_setter.get()._field_kind),jule::Any(_1a7727c8a_to_str(_114217_d.get()._field_kind.ptr()))}));
			return;;
		};
	};
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(jule::new_ptr<_1a766ce00_Postfix>(_1a766ce00_Postfix{._field_expr=jule::Any(_114217_d.get()._field_model), ._field_op=_113537_a.get()._field_setter.get()._field_kind})));;
}



inline jule::Bool _1a7677d50_is_new_assign_ident(_1a766e374_ScopeChecker* _self_, jule::Str _116838_ident) {
	if ((_1a5279aca_is_ignore_ident(_116838_ident) || _116838_ident.empty())) {
		return false;
	};
	return (_1a76ebba4_def_by_ident((*_self_)._field_table.ptr(), _116838_ident,false) == nullptr);
}



inline jule::Bool _1a76782c3_check_structure_assign_op(jule::Ptr<_1a766e374_ScopeChecker> _self_, jule::Ptr<_1a6836a48_StructIns>& _117650_s, jule::Ptr<_1a6860104_AssignSt>& _117670_a, jule::Ptr<_1a76edda4_Data>& _117689_r) {
	jule::Ptr<_1a6872c93_FnIns> _117917_overload = nullptr;;
	{
		auto &_match_expr{ _117670_a.get()._field_setter.get()._field_kind };
		
		if (_match_expr == jule::Str("+=", 2)) {
			_case_begin_1a98ae8c0:;
			{
				_117917_overload=_117650_s.get()._field_operators._field_add_assign;
			}
		}
		else if (_match_expr == jule::Str("-=", 2)) {
			_case_begin_1a98b07c2:;
			{
				_117917_overload=_117650_s.get()._field_operators._field_sub_assign;
			}
		}
		else if (_match_expr == jule::Str("/=", 2)) {
			_case_begin_1a98b0838:;
			{
				_117917_overload=_117650_s.get()._field_operators._field_div_assign;
			}
		}
		else if (_match_expr == jule::Str("*=", 2)) {
			_case_begin_1a98b089e:;
			{
				_117917_overload=_117650_s.get()._field_operators._field_mul_assign;
			}
		}
		else if (_match_expr == jule::Str("%=", 2)) {
			_case_begin_1a98ae5d4:;
			{
				_117917_overload=_117650_s.get()._field_operators._field_mod_assign;
			}
		}
		else if (_match_expr == jule::Str("<<=", 3)) {
			_case_begin_1a98ae64a:;
			{
				_117917_overload=_117650_s.get()._field_operators._field_shl_assign;
			}
		}
		else if (_match_expr == jule::Str(">>=", 3)) {
			_case_begin_1a98ae6b1:;
			{
				_117917_overload=_117650_s.get()._field_operators._field_shr_assign;
			}
		}
		else if (_match_expr == jule::Str("|=", 2)) {
			_case_begin_1a98ae727:;
			{
				_117917_overload=_117650_s.get()._field_operators._field_bit_or_assign;
			}
		}
		else if (_match_expr == jule::Str("&=", 2)) {
			_case_begin_1a98b0a9c:;
			{
				_117917_overload=_117650_s.get()._field_operators._field_bit_and_assign;
			}
		}
		else if (_match_expr == jule::Str("^=", 2)) {
			_case_begin_1a98b0b13:;
			{
				_117917_overload=_117650_s.get()._field_operators._field_bit_xor_assign;
			}
		}
		else {
			_case_begin_1a98ae12d:;
			{
				_1a769063c_push_err(_self_.get()._field_s.ptr(), _117670_a.get()._field_setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_117670_a.get()._field_setter.get()._field_kind),jule::Any(_1a683ac7d_to_str(_117650_s.ptr()))}));
				return false;
			}
		}
		_match_end_1a98ae56d:;
	};
	if ((_117917_overload == nullptr)) {
		_1a769063c_push_err(_self_.get()._field_s.ptr(), _117670_a.get()._field_setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_117670_a.get()._field_setter.get()._field_kind),jule::Any(_1a683ac7d_to_str(_117650_s.ptr()))}));
		return false;
	};
	jule::Ptr<_1a6871e07_ParamIns> _121117_p = _117917_overload.get()._field_params[1LL];;
	return _1a769593e_check_assign_type(_self_.get()._field_s, _121117_p.get()._field_decl.get()._field_reference,_121117_p.get()._field_kind,_117689_r,_117670_a.get()._field_setter);
}



inline void _1a7678559_check_single_assign(jule::Ptr<_1a766e374_ScopeChecker> _self_, jule::Ptr<_1a6860104_AssignSt>& _121544_a) {
	jule::Ptr<_1a76edda4_Data> _121617_l = nullptr;;
	if ((!(_1a5279aca_is_ignore_ident(_121544_a.get()._field_left[0LL].get()._field_ident)))) {
		jule::Ptr<_1a6855e41_Expr> _121921_expr = _121544_a.get()._field_left[0LL].get()._field_expr;;
		_121617_l=_1a771982b_eval_expr(_1a7695444_eval(_self_.get()._field_s, jule::Trait<_1a7741e19_Lookup>(_self_, 0)), _121921_expr);
		if ((_121617_l == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1a7700922_Eval> _122617_eval = nullptr;;
	if ((_121617_l != nullptr)) {
		_122617_eval=_1a7695136_evalp(_self_.get()._field_s, jule::Trait<_1a7741e19_Lookup>(_self_, 0),_121617_l.get()._field_kind);
	} else {
		_122617_eval=_1a7695444_eval(_self_.get()._field_s, jule::Trait<_1a7741e19_Lookup>(_self_, 0));
	};
	_122617_eval.get()._field_unsafety=_1a7670991_is_unsafe(_self_);
	jule::Ptr<_1a76edda4_Data> _123317_r = _1a771982b_eval_expr(_122617_eval, _121544_a.get()._field_right);;
	if ((_123317_r == nullptr)) {
		return;;
	};
	if ((_121617_l == nullptr)) {
		if (_1a7728a16_void(_123317_r.get()._field_kind.ptr())) {
			_1a769063c_push_err(_self_.get()._field_s.ptr(), _121544_a.get()._field_right.get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		};
		_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_123317_r));;
		return;;
	};
	if ((!(_1a7646060_check_assign(_self_.get()._field_s,_121617_l,_123317_r,_121544_a.get()._field_setter)))) {
		return;;
	};
	if ((_1a772b3ba_tup(_123317_r.get()._field_kind.ptr()) != nullptr)) {
		_1a769063c_push_err(_self_.get()._field_s.ptr(), _121544_a.get()._field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a68382db_OperandExprModel> _125517_lm = jule::new_ptr<_1a68382db_OperandExprModel>(_1a68382db_OperandExprModel{._field_kind=_121617_l.get()._field_kind, ._field_model=jule::Any(_121617_l.get()._field_model)});;
	jule::Ptr<_1a68382db_OperandExprModel> _125917_rm = jule::new_ptr<_1a68382db_OperandExprModel>(_1a68382db_OperandExprModel{._field_kind=_123317_r.get()._field_kind, ._field_model=jule::Any(_123317_r.get()._field_model)});;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(jule::new_ptr<_1a766d0dc_Assign>(_1a766d0dc_Assign{._field_l=_125517_lm, ._field_r=_125917_rm, ._field_op=_121544_a.get()._field_setter})));;
	if ((_121544_a.get()._field_setter.get()._field_kind != jule::Str("=", 1))) {
		jule::Ptr<_1a6836a48_StructIns> _126621_strct = _1a772ab7d_strct(_121617_l.get()._field_kind.ptr());;
		if ((_126621_strct != nullptr)) {
			_1a76782c3_check_structure_assign_op(_self_, _126621_strct,_121544_a,_123317_r);
			return;;
		};
		_121544_a.get()._field_setter.get()._field_kind=_121544_a.get()._field_setter.get()._field_kind.slice(0LL,(_121544_a.get()._field_setter.get()._field_kind.len() - 1LL));
		_1a771ba3c_BinaryEval _127321_solver = static__1a771c433_new(_122617_eval,_121544_a.get()._field_setter);;
		_123317_r=_1a7721db6_solve_explicit(&_127321_solver, _121617_l,_123317_r);
		if ((_123317_r == nullptr)) {
			return;;
		};
		_121544_a.get()._field_setter.get()._field_kind+=jule::Str("=", 1);
		return;;
	};
	_1a76db4ac_AssignTypeChecker _128217_checker = _1a76db4ac_AssignTypeChecker{._field_s=_self_.get()._field_s, ._field_dest=_121617_l.get()._field_kind, ._field_d=_123317_r, ._field_error_token=_121544_a.get()._field_setter};;
	if (_1a76dc634_check(&_128217_checker)) {
		_125917_rm.get()._field_model=jule::Any(_123317_r.get()._field_model);
		_125517_lm.get()._field_model=jule::Any(_121617_l.get()._field_model);
	};
}



inline void _1a7678a98___process_end_part_of_multi_assign(_1a766e374_ScopeChecker* _self_, jule::Ptr<_1a766d2c9_MultiAssign> _129457_st, jule::Ptr<_1a6860104_AssignSt> _129513_a, jule::Ptr<_1a685eab5_AssignLeft> _129531_lexpr, jule::Ptr<_1a76edda4_Data> _129555_l, jule::Ptr<_1a76edda4_Data> _129569_r) {
	if (_1a5279aca_is_ignore_ident(_129531_lexpr.get()._field_ident)) {
		if (_1a7728a16_void(_129569_r.get()._field_kind.ptr())) {
			_1a769063c_push_err((*_self_)._field_s.ptr(), _129513_a.get()._field_right.get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		};
		_129457_st.get()._field_l = jule::alloc_for_append(_129457_st.get()._field_l,1);_129457_st.get()._field_l.__push(nullptr);;
		return;;
	};
	if ((_129513_a.get()._field_declarative && _1a7677d50_is_new_assign_ident(&(*_self_), _129531_lexpr.get()._field_ident))) {
		if (_1a7672663_is_duplicated_ident(&(*_self_), 0LLU,_129531_lexpr.get()._field_ident)) {
			_1a769063c_push_err((*_self_)._field_s.ptr(), _129531_lexpr.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_129531_lexpr.get()._field_ident)}));
			_1a769095b_push_suggestion((*_self_)._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
			_1a7670dd1_stop(&(*_self_));
			return;;
		};
		jule::Ptr<_1a76a7720_Var> _131321_v = jule::new_ptr<_1a76a7720_Var>(_1a76a7720_Var{._field_scope=(*_self_)._field_scope, ._field_token=_129531_lexpr.get()._field_token, ._field_ident=_129531_lexpr.get()._field_ident, ._field_mutable=_129531_lexpr.get()._field_mutable, ._field_reference=_129531_lexpr.get()._field_reference, ._field_value=jule::new_ptr<_1a76eee2c_Value>(_1a76eee2c_Value{._field_expr=_129513_a.get()._field_right, ._field_data=_129569_r}), });;
		_1a76a00ca_check_var((*_self_)._field_s, _131321_v);
		_129457_st.get()._field_l = jule::alloc_for_append(_129457_st.get()._field_l,1);_129457_st.get()._field_l.__push(jule::Any(_131321_v));;
		(*_self_)._field_table.get()._field_vars = jule::alloc_for_append((*_self_)._field_table.get()._field_vars,1);(*_self_)._field_table.get()._field_vars.__push(_131321_v);;
		(*_self_)._field_scope.get()._field_stmts = jule::alloc_for_append((*_self_)._field_scope.get()._field_stmts,1);(*_self_)._field_scope.get()._field_stmts.__push(jule::Any(_131321_v));;
		return;;
	};
	if ((_129531_lexpr.get()._field_mutable || _129531_lexpr.get()._field_reference)) {
		_1a769063c_push_err((*_self_)._field_s.ptr(), _129531_lexpr.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_129531_lexpr.get()._field_ident)}));
		_1a769095b_push_suggestion((*_self_)._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((!(_1a7646060_check_assign((*_self_)._field_s,_129555_l,_129569_r,_129513_a.get()._field_setter)))) {
		return;;
	};
	;
	_1a7697743_check_validity_for_init_expr((*_self_)._field_s, _129555_l.get()._field_mutable,false,_129555_l.get()._field_kind,_129569_r,_129513_a.get()._field_setter);
	_1a76db4ac_AssignTypeChecker _134817_checker = _1a76db4ac_AssignTypeChecker{._field_s=(*_self_)._field_s, ._field_dest=_129555_l.get()._field_kind, ._field_d=_129569_r, ._field_error_token=_129513_a.get()._field_setter};;
	_1a76dc634_check(&_134817_checker);
	_129457_st.get()._field_l = jule::alloc_for_append(_129457_st.get()._field_l,1);_129457_st.get()._field_l.__push(jule::Any(_129555_l.get()._field_model));;
}



inline void _1a7678d1d_check_ret_multi_assign(jule::Ptr<_1a766e374_ScopeChecker> _self_, jule::Ptr<_1a6860104_AssignSt>& _135947_a) {
	jule::Ptr<_1a76edda4_Data> _136017_rd = _1a771982b_eval_expr(_1a7695444_eval(_self_.get()._field_s, jule::Trait<_1a7741e19_Lookup>(_self_, 0)), _135947_a.get()._field_right);;
	if ((_136017_rd == nullptr)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1a76edda4_Data>> _136517_r = _1a763cead_get_datas_from_tuple_data(_136017_rd);;
	{
		
		if ((_135947_a.get()._field_left.len() > _136517_r.len())) {
			_case_begin_1a98d7112:;
			{
				_1a769063c_push_err(_self_.get()._field_s.ptr(), _135947_a.get()._field_setter,jule::Str("overflow multi assignment identifers", 36),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((_135947_a.get()._field_left.len() < _136517_r.len())) {
			_case_begin_1a98d7189:;
			{
				_1a769063c_push_err(_self_.get()._field_s.ptr(), _135947_a.get()._field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1a98d709b:;
	};
	jule::Ptr<_1a766d2c9_MultiAssign> _137617_st = jule::new_ptr<_1a766d2c9_MultiAssign>(_1a766d2c9_MultiAssign{._field_r=jule::Any(_136017_rd.get()._field_model)});;
	if ((_1a772b3ba_tup(_136017_rd.get()._field_kind.ptr()) == nullptr)) {
		_137617_st.get()._field_r=jule::Any(jule::new_ptr<_1a686d0bd_TupleExprModel>(_1a686d0bd_TupleExprModel{._field_datas=_136517_r}));
	};
	{
		auto &expr = _135947_a.get()._field_left;
		auto it = expr.begin();
		_iter_begin_1a98da313:;
		if (it != expr.end()) {
			jule::I64 _138413_i = it - expr.begin();
			{
				jule::Ptr<_1a685eab5_AssignLeft> _138521_lexpr = _135947_a.get()._field_left[_138413_i];;
				jule::Ptr<_1a76edda4_Data> _138621_l = nullptr;;
				if (((!(_1a5279aca_is_ignore_ident(_138521_lexpr.get()._field_ident))) && ((!(_135947_a.get()._field_declarative)) || (!(_1a7677d50_is_new_assign_ident(_self_.ptr(), _138521_lexpr.get()._field_ident)))))) {
					_138621_l=_1a771982b_eval_expr(_1a7695444_eval(_self_.get()._field_s, jule::Trait<_1a7741e19_Lookup>(_self_, 0)), _138521_lexpr.get()._field_expr);
					if ((_138621_l == nullptr)) {
						goto _iter_next_1a98da313;
					};
				};
				_1a7678a98___process_end_part_of_multi_assign(_self_.ptr(), _137617_st,_135947_a,_138521_lexpr,_138621_l,_136517_r[_138413_i]);
			}
			_iter_next_1a98da313:;
			++it;
			_138413_i++;
			goto _iter_begin_1a98da313;
		}
		_iter_end_1a98da313:;
	};
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_137617_st));;
}



inline void _1a7679093_check_multi_assign(jule::Ptr<_1a766e374_ScopeChecker> _self_, jule::Ptr<_1a6860104_AssignSt>& _140243_a) {
	{
		auto &_match_expr{ _140243_a.get()._field_right.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a6859e12_FnCallExpr>>()) {
			_case_begin_1a98de78a:;
			{
				_1a7678d1d_check_ret_multi_assign(_self_, _140243_a);
				return;;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a68572b6_UnsafeExpr>>()) {
			_case_begin_1a98de801:;
			{
				{
					auto &_match_expr{ _140243_a.get()._field_right.get()._field_kind.operator jule::Ptr<_1a68572b6_UnsafeExpr>().get()._field_expr.get()._field_kind };
					
					if (_match_expr.type_is<jule::Ptr<_1a6859e12_FnCallExpr>>()) {
						_case_begin_1a98e0b76:;
						{
							_1a7678d1d_check_ret_multi_assign(_self_, _140243_a);
							return;;
						}
					}
					_match_end_1a98e0b10:;
				};
			}
		}
		_match_end_1a98de6d0:;
	};
	jule::Slice<jule::Any> _141517_right = _1a763d73e_get_expr_models(_140243_a.get()._field_right.get()._field_kind);;
	{
		
		if ((_140243_a.get()._field_left.len() > _141517_right.len())) {
			_case_begin_1a98e1913:;
			{
				_1a769063c_push_err(_self_.get()._field_s.ptr(), _140243_a.get()._field_setter,jule::Str("overflow multi assignment identifers", 36),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((_140243_a.get()._field_left.len() < _141517_right.len())) {
			_case_begin_1a98e198a:;
			{
				_1a769063c_push_err(_self_.get()._field_s.ptr(), _140243_a.get()._field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1a98e1825:;
	};
	jule::Ptr<_1a686d0bd_TupleExprModel> _142617_right_tuple = jule::new_ptr<_1a686d0bd_TupleExprModel>();;
	jule::Ptr<_1a766d2c9_MultiAssign> _142817_st = jule::new_ptr<_1a766d2c9_MultiAssign>(_1a766d2c9_MultiAssign{._field_r=jule::Any(_142617_right_tuple)});;
	{
		auto &expr = _140243_a.get()._field_left;
		auto it = expr.begin();
		_iter_begin_1a98e4493:;
		if (it != expr.end()) {
			jule::I64 _143213_i = it - expr.begin();
			{
				jule::Ptr<_1a685eab5_AssignLeft> _143321_lexpr = _140243_a.get()._field_left[_143213_i];;
				jule::Ptr<_1a76edda4_Data> _143421_l = nullptr;;
				if (((!(_1a5279aca_is_ignore_ident(_143321_lexpr.get()._field_ident))) && ((!(_140243_a.get()._field_declarative)) || (!(_1a7677d50_is_new_assign_ident(_self_.ptr(), _143321_lexpr.get()._field_ident)))))) {
					_143421_l=_1a771982b_eval_expr(_1a7695444_eval(_self_.get()._field_s, jule::Trait<_1a7741e19_Lookup>(_self_, 0)), _143321_lexpr.get()._field_expr);
					if ((_143421_l == nullptr)) {
						goto _iter_next_1a98e4493;
					};
				};
				jule::Ptr<_1a6855e41_Expr> _144421_expr = jule::new_ptr<_1a6855e41_Expr>(_1a6855e41_Expr{._field_token=_140243_a.get()._field_right.get()._field_token, ._field_kind=jule::Any(_141517_right[_143213_i])});;
				jule::Ptr<_1a7700922_Eval> _144821_eval = nullptr;;
				if ((_143421_l != nullptr)) {
					_144821_eval=_1a7695136_evalp(_self_.get()._field_s, jule::Trait<_1a7741e19_Lookup>(_self_, 0),_143421_l.get()._field_kind);
				} else {
					_144821_eval=_1a7695444_eval(_self_.get()._field_s, jule::Trait<_1a7741e19_Lookup>(_self_, 0));
				};
				jule::Ptr<_1a76edda4_Data> _145421_r = _1a771982b_eval_expr(_144821_eval, _144421_expr);;
				if ((_145421_r == nullptr)) {
					goto _iter_next_1a98e4493;
				};
				_142617_right_tuple.get()._field_datas = jule::alloc_for_append(_142617_right_tuple.get()._field_datas,1);_142617_right_tuple.get()._field_datas.__push(_145421_r);;
				_1a7678a98___process_end_part_of_multi_assign(_self_.ptr(), _142817_st,_140243_a,_143321_lexpr,_143421_l,_145421_r);
			}
			_iter_next_1a98e4493:;
			++it;
			_143213_i++;
			goto _iter_begin_1a98e4493;
		}
		_iter_end_1a98e4493:;
	};
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_142817_st));;
}



inline void _1a7679318_check_assign_st(jule::Ptr<_1a766e374_ScopeChecker> _self_, jule::Ptr<_1a6860104_AssignSt> _146739_a) {
	{
		
		if (_1a527badd_is_postfix_op(_146739_a.get()._field_setter.get()._field_kind)) {
			_case_begin_1a98eb7ca:;
			{
				_1a7677a42_check_postfix(_self_, _146739_a);
			}
		}
		else if (((_146739_a.get()._field_left.len() == 1LL) && (!(_146739_a.get()._field_declarative)))) {
			_case_begin_1a98eb4bc:;
			{
				_1a7678559_check_single_assign(_self_, _146739_a);
			}
		}
		else {
			_case_begin_1a98eb456:;
			{
				_1a7679093_check_multi_assign(_self_, _146739_a);
			}
		}
		_match_end_1a98eb38a:;
	};
}



inline jule::Ptr<_1a7658803_Scope> _1a76796c0_check_case_scope(jule::Ptr<_1a766e374_ScopeChecker> _self_, jule::Ptr<_1a766d8d4_Case>& _147837_c, jule::Ptr<_1a686070e_ScopeTree>& _147852_tree) {
	jule::Ptr<_1a766e374_ScopeChecker> _147917_ssc = _1a767da9d_new_child_checker(_self_);;
	_147917_ssc.get()._field_cse=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_147837_c));
	return _1a7673642_check_child_sc(_self_, _147852_tree,_147917_ssc);
}



inline jule::Ptr<_1a766d8d4_Case> _1a7679bba_check_case(jule::Ptr<_1a766e374_ScopeChecker> _self_, jule::Ptr<_1a766d4b6_Match> _148434_m, jule::I64 _148445_i, jule::Ptr<_1a6866dca_Case> _148457_c, jule::Ptr<_1a76edda4_Data> _148487_expr) {
	jule::Ptr<_1a766d8d4_Case> _148517__case = _148434_m.get()._field_cases[_148445_i];;
	_148517__case.get()._field_exprs=jule::Slice<jule::Ptr<_1a76edda4_Data>>::alloc(0LL,_148457_c.get()._field_exprs.len());
	jule::Bool _148717_generic_matched = false;;
	jule::Ptr<_1a7700922_Eval> _148817_eval = _1a7695444_eval(_self_.get()._field_s, jule::Trait<_1a7741e19_Lookup>(_self_, 0));;
	{
		auto &expr = _148457_c.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1a9902b66:;
		if (it != expr.end()) {
			jule::Ptr<_1a6855e41_Expr> _148921_e = *it;
			{
				jule::Ptr<_1a76edda4_Data> _149021_d = _1a7719210_eval_expr_kind(_148817_eval, jule::Any(_148921_e.get()._field_kind));;
				if ((_149021_d == nullptr)) {
					goto _iter_next_1a9902b66;
				};
				if (_148434_m.get()._field_type_match) {
					_148517__case.get()._field_exprs = jule::alloc_for_append(_148517__case.get()._field_exprs,1);_148517__case.get()._field_exprs.__push(_149021_d);;
					if ((_1a763aa8d_count_match_type(_148434_m,_149021_d.get()._field_kind) > 1LL)) {
						_1a769063c_push_err(_self_.get()._field_s.ptr(), _148921_e.get()._field_token,jule::Str("duplicated pattern: type @ is already matched", 45),jule::Slice<jule::Any>::make({jule::Any(_1a7727c8a_to_str(_149021_d.get()._field_kind.ptr()))}));
					};
					if (_148487_expr.get()._field_kind.get()._field_generic) {
						_148717_generic_matched=(_148717_generic_matched || _1a7728098_equals(_148487_expr.get()._field_kind, _149021_d.get()._field_kind));
					} else {
						jule::Ptr<_1a68d46b7_Trait> _150225_trt = _1a772ade2_trt(_148487_expr.get()._field_kind.ptr());;
						if ((_150225_trt != nullptr)) {
							_1a7695db2_check_type_compatibility(_self_.get()._field_s, _148487_expr.get()._field_kind,_149021_d.get()._field_kind,_148921_e.get()._field_token);
						};
					};
					goto _iter_next_1a9902b66;
				};
				if (_149021_d.get()._field_decl) {
					_1a769063c_push_err(_self_.get()._field_s.ptr(), _148921_e.get()._field_token,jule::Str("expecting expression, found type declaration", 44),jule::Slice<jule::Any>());
					_1a769095b_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("you can use type-match if you want to match types", 49),jule::Slice<jule::Any>());
					goto _iter_next_1a9902b66;
				};
				_148517__case.get()._field_exprs = jule::alloc_for_append(_148517__case.get()._field_exprs,1);_148517__case.get()._field_exprs.__push(_149021_d);;
				_1a76db4ac_AssignTypeChecker _151921_checker = _1a76db4ac_AssignTypeChecker{._field_s=_self_.get()._field_s, ._field_dest=_148487_expr.get()._field_kind, ._field_d=_149021_d, ._field_error_token=_148921_e.get()._field_token};;
				_1a76dc634_check(&_151921_checker);
			}
			_iter_next_1a9902b66:;
			++it;
			goto _iter_begin_1a9902b66;
		}
		_iter_end_1a9902b66:;
	};
	if ((((!(_148434_m.get()._field_type_match)) || (!(_148487_expr.get()._field_kind.get()._field_generic))) || _148717_generic_matched)) {
		_148517__case.get()._field_scope=_1a76796c0_check_case_scope(_self_, _148517__case,_148457_c.get()._field_scope);
	};
	return _148517__case;
}



inline void _1a767a083_check_cases(jule::Ptr<_1a766e374_ScopeChecker> _self_, jule::Ptr<_1a68675a1_MatchCase>& _153336_m, jule::Ptr<_1a766d4b6_Match> _153355_rm, jule::Ptr<_1a76edda4_Data> _153371_expr) {
	_153355_rm.get()._field_cases=jule::Slice<jule::Ptr<_1a766d8d4_Case>>::alloc(0LL,_153336_m.get()._field_cases.len());
	{
		auto &expr = _153336_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1a990c49a:;
		if (it != expr.end()) {
			jule::I64 _153513_i = it - expr.begin();
			{
				jule::Ptr<_1a766d8d4_Case> _153621__case = jule::new_ptr<_1a766d8d4_Case>(_1a766d8d4_Case{._field_owner=_153355_rm, });;
				if ((_153513_i > 0LL)) {
					_153355_rm.get()._field_cases[(_153513_i - 1LL)].get()._field_next=_153621__case;
				};
				_153355_rm.get()._field_cases = jule::alloc_for_append(_153355_rm.get()._field_cases,1);_153355_rm.get()._field_cases.__push(_153621__case);;
			}
			_iter_next_1a990c49a:;
			++it;
			_153513_i++;
			goto _iter_begin_1a990c49a;
		}
		_iter_end_1a990c49a:;
	};
	if (((_153355_rm.get()._field_default != nullptr) && (_153336_m.get()._field_cases.len() > 0LL))) {
		_153355_rm.get()._field_cases[(_153355_rm.get()._field_cases.len() - 1LL)].get()._field_next=_153355_rm.get()._field_default;
	};
	{
		auto &expr = _153336_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1a9910844:;
		if (it != expr.end()) {
			jule::I64 _154914_i = it - expr.begin();
			jule::Ptr<_1a6866dca_Case> _154921_c = *it;
			{
				_1a7679bba_check_case(_self_, _153355_rm,_154914_i,_154921_c,_153371_expr);
			}
			_iter_next_1a9910844:;
			++it;
			_154914_i++;
			goto _iter_begin_1a9910844;
		}
		_iter_end_1a9910844:;
	};
}



inline jule::Ptr<_1a766d8d4_Case> _1a767a43a_check_default(jule::Ptr<_1a766e374_ScopeChecker> _self_, jule::Ptr<_1a766d4b6_Match> _155437_m, jule::Ptr<_1a6865d0d_Else> _155452_d) {
	jule::Ptr<_1a766d8d4_Case> _155517_def = jule::new_ptr<_1a766d8d4_Case>(_1a766d8d4_Case{._field_owner=_155437_m, });;
	_155517_def.get()._field_scope=_1a76796c0_check_case_scope(_self_, _155517_def,_155452_d.get()._field_scope);
	return _155517_def;
}



inline void _1a767a6b0_check_comptime_panic(_1a766e374_ScopeChecker* _self_, jule::Ptr<_1a7658803_Scope>& _156240_s) {
	if ((_156240_s.get()._field_stmts.len() != 1LL)) {
		return;;
	};
	jule::Any _156713_stmt = _156240_s.get()._field_stmts[0LL];;
	{
		auto &_match_expr{ _156713_stmt };
		
		if (_match_expr.type_is<jule::Ptr<_1a76edda4_Data>>()) {
			_case_begin_1a99148d1:;
			{
				jule::Ptr<_1a76edda4_Data> _157017_d = _156713_stmt.operator jule::Ptr<_1a76edda4_Data>();;
				{
					auto &_match_expr{ _157017_d.get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1a686da5d_BuiltinPanicCallExprModel>>()) {
						_case_begin_1a99156b2:;
						{
							jule::Ptr<_1a686da5d_BuiltinPanicCallExprModel> _157321_m = _157017_d.get()._field_model.operator jule::Ptr<_1a686da5d_BuiltinPanicCallExprModel>();;
							{
								auto &_match_expr{ _157321_m.get()._field_expr };
								
								if (_match_expr.type_is<jule::Ptr<_1a75c3251_Const>>()) {
									_case_begin_1a9916581:;
									{
										jule::Ptr<_1a75c3251_Const> _157625_c = _157321_m.get()._field_expr.operator jule::Ptr<_1a75c3251_Const>();;
										if (_1a75c70ac_is_str(_157625_c.ptr())) {
											_1a769063c_push_err((*_self_)._field_s.ptr(), (*_self_)._field_called_from,jule::Str("compile-time panic: @", 21),jule::Slice<jule::Any>::make({jule::Any(_1a75c4c14_read_str(_157625_c.ptr()))}));
										};
									}
								}
								_match_end_1a99164e8:;
							};
						}
					}
					_match_end_1a9915629:;
				};
			}
		}
		_match_end_1a991487b:;
	};
}



inline void _1a767a9ce_push_type_match(jule::Ptr<_1a766e374_ScopeChecker> _self_, jule::Ptr<_1a766d4b6_Match> _158539_tm, jule::Ptr<_1a68675a1_MatchCase>& _158556_m) {
	if (_158539_tm.get()._field_expr.get()._field_kind.get()._field_generic) {
		{
			auto &expr = _158539_tm.get()._field_cases;
			auto it = expr.begin();
			_iter_begin_1a991886e:;
			if (it != expr.end()) {
				jule::Ptr<_1a766d8d4_Case> _158925_c = *it;
				{
					if ((_158925_c.get()._field_scope != nullptr)) {
						_1a767a6b0_check_comptime_panic(_self_.ptr(), _158925_c.get()._field_scope);
						_158539_tm.get()._field_default=_158925_c;
						_158539_tm.get()._field_cases=nullptr;
						goto _julec_label_push;
					};
				}
				_iter_next_1a991886e:;
				++it;
				goto _iter_begin_1a991886e;
			}
			_iter_end_1a991886e:;
		};
		if ((_158556_m.get()._field_default != nullptr)) {
			_158539_tm.get()._field_cases=nullptr;
			_158539_tm.get()._field_default=_1a767a43a_check_default(_self_, _158539_tm,_158556_m.get()._field_default);
			if ((_158539_tm.get()._field_default != nullptr)) {
				_1a767a6b0_check_comptime_panic(_self_.ptr(), _158539_tm.get()._field_default.get()._field_scope);
			};
		};
	};
	_julec_label_push:;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_158539_tm));;
}



inline void _1a767ac54_check_type_match(jule::Ptr<_1a766e374_ScopeChecker> _self_, jule::Ptr<_1a68675a1_MatchCase>& _160941_m) {
	jule::Ptr<_1a76edda4_Data> _161017_d = _1a771951d_eval(_1a7695444_eval(_self_.get()._field_s, jule::Trait<_1a7741e19_Lookup>(_self_, 0)), _160941_m.get()._field_expr);;
	if ((_161017_d == nullptr)) {
		return;;
	};
	if (((!(_161017_d.get()._field_kind.get()._field_generic)) && (!((((_1a7729990_prim(_161017_d.get()._field_kind.ptr()) != nullptr) && _1a7730358_is_any(_1a7729990_prim(_161017_d.get()._field_kind.ptr()).ptr())) || (_1a772ade2_trt(_161017_d.get()._field_kind.ptr()) != nullptr)))))) {
		_1a769063c_push_err(_self_.get()._field_s.ptr(), _160941_m.get()._field_expr.get()._field_token,jule::Str("type-match must be have <any>, <trait> or <generic> typed expression", 68),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a766d4b6_Match> _162117_tm = jule::new_ptr<_1a766d4b6_Match>(_1a766d4b6_Match{._field_expr=_161017_d, ._field_type_match=true, });;
	if (((!(_162117_tm.get()._field_expr.get()._field_kind.get()._field_generic)) && (_160941_m.get()._field_default != nullptr))) {
		_162117_tm.get()._field_default=_1a767a43a_check_default(_self_, _162117_tm,_160941_m.get()._field_default);
	};
	_1a767a083_check_cases(_self_, _160941_m,_162117_tm,_161017_d);
	_1a767a9ce_push_type_match(_self_, _162117_tm,_160941_m);
}



inline void _1a767aec9_check_common_match(jule::Ptr<_1a766e374_ScopeChecker> _self_, jule::Ptr<_1a68675a1_MatchCase>& _163443_m) {
	jule::Ptr<_1a76edda4_Data> _163517_d = nullptr;;
	if ((_163443_m.get()._field_expr == nullptr)) {
		_163517_d=jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_1a773e554_build_prim_type(jule::Str("bool", 4)), 5)}), ._field_constant=static__1a75c3691_new_bool(true)});
		_163517_d.get()._field_model=jule::Any(_163517_d.get()._field_constant);
	} else {
		_163517_d=_1a771982b_eval_expr(_1a7695444_eval(_self_.get()._field_s, jule::Trait<_1a7741e19_Lookup>(_self_, 0)), _163443_m.get()._field_expr);
		if ((_163517_d == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1a766d4b6_Match> _164917_mc = jule::new_ptr<_1a766d4b6_Match>(_1a766d4b6_Match{._field_expr=_163517_d, });;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_164917_mc));;
	if ((_163443_m.get()._field_default != nullptr)) {
		_164917_mc.get()._field_default=_1a767a43a_check_default(_self_, _164917_mc,_163443_m.get()._field_default);
	};
	_1a767a083_check_cases(_self_, _163443_m,_164917_mc,_163517_d);
}



inline void _1a767b24e_check_match(jule::Ptr<_1a766e374_ScopeChecker> _self_, jule::Ptr<_1a68675a1_MatchCase> _166135_m) {
	if (_166135_m.get()._field_type_match) {
		_1a767ac54_check_type_match(_self_, _166135_m);
		return;;
	};
	_1a767aec9_check_common_match(_self_, _166135_m);
}



inline void _1a767b4c4_check_fall(jule::Ptr<_1a766e374_ScopeChecker> _self_, jule::Ptr<_1a685e4aa_FallSt> _166930_f) {
	if ((((_self_.get()._field_cse == 0LLU) || ((_self_.get()._field_scope.get()._field_stmts.len() + 1LL) < _self_.get()._field_scope.get()._field_stmts.len())) || _1a76713a9_is_deferred(_self_))) {
		_1a769063c_push_err(_self_.get()._field_s.ptr(), _166930_f.get()._field_token,jule::Str("fall keyword can only useable at end of the case scopes", 55),jule::Slice<jule::Any>());
		return;;
	};
	_1a766d8d4_Case* _167717__case = ((_1a766d8d4_Case*)(_self_.get()._field_cse));;
	if ((_167717__case->_field_next == nullptr)) {
		_1a769063c_push_err(_self_.get()._field_s.ptr(), _166930_f.get()._field_token,jule::Str("fall cannot useable at final case", 33),jule::Slice<jule::Any>());
		_1a769095b_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("remove \"fall\" keyword", 21),jule::Slice<jule::Any>());
		return;;
	};
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(jule::new_ptr<_1a766dac1_FallSt>(_1a766dac1_FallSt{._field_dest_case=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_167717__case->_field_next))})));;
}



inline jule::Ptr<_1a766c839_BreakSt> _1a767b7d2_check_break_with_label(jule::Ptr<_1a766e374_ScopeChecker> _self_, jule::Ptr<_1a686512b_BreakSt> _168942_b) {
	jule::Ptr<_1a766c839_BreakSt> _169017_brk = _1a767bae0_check_plain_break(_self_, _168942_b);;
	if ((_169017_brk == nullptr)) {
		return nullptr;
	};
	_169017_brk.get()._field_it=0LLU;
	_169017_brk.get()._field_mtch=0LLU;
	jule::Ptr<_1a766de9a_ScopeLabel> _170017_label = _1a7636ea7_find_label_parent(_168942_b.get()._field_label.get()._field_kind,_self_.get()._field_parent);;
	if ((_170017_label == nullptr)) {
		_1a769063c_push_err(_self_.get()._field_s.ptr(), _168942_b.get()._field_label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>::make({jule::Any(_168942_b.get()._field_label.get()._field_kind)}));
		return nullptr;
	};
	_170017_label.get()._field_used=true;
	if (((_170017_label.get()._field_pos + 1LL) >= _170017_label.get()._field_scope.get()._field_scope.get()._field_stmts.len())) {
		_1a769063c_push_err(_self_.get()._field_s.ptr(), _168942_b.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_168942_b.get()._field_label.get()._field_kind)}));
		return nullptr;
	};
	jule::I64 _171313_i = (_170017_label.get()._field_pos + 1LL);;
	if ((_171313_i >= _170017_label.get()._field_scope.get()._field_scope.get()._field_stmts.len())) {
		_1a769063c_push_err(_self_.get()._field_s.ptr(), _168942_b.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_168942_b.get()._field_label.get()._field_kind)}));
	} else {
		jule::Any _171721_st = _170017_label.get()._field_scope.get()._field_scope.get()._field_stmts[_171313_i];;
		{
			auto &_match_expr{ _171721_st };
			
			if (_match_expr.type_is<jule::Ptr<_1a761aa90_InfIter>>()) {
				_case_begin_1a993a264:;
				{
					_169017_brk.get()._field_it=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_171721_st.operator jule::Ptr<_1a761aa90_InfIter>()));
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1a7648b23_RangeIter>>()) {
				_case_begin_1a993bd59:;
				{
					_169017_brk.get()._field_it=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_171721_st.operator jule::Ptr<_1a7648b23_RangeIter>()));
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1a761ac7c_WhileIter>>()) {
				_case_begin_1a993bdc0:;
				{
					_169017_brk.get()._field_it=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_171721_st.operator jule::Ptr<_1a761ac7c_WhileIter>()));
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1a766d4b6_Match>>()) {
				_case_begin_1a993be36:;
				{
					_169017_brk.get()._field_mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_171721_st.operator jule::Ptr<_1a766d4b6_Match>()));
				}
			}
			else {
				_case_begin_1a99300e4:;
				{
					_1a769063c_push_err(_self_.get()._field_s.ptr(), _168942_b.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_168942_b.get()._field_label.get()._field_kind)}));
				}
			}
			_match_end_1a993008e:;
		};
	};
	if ((_169017_brk.get()._field_it != 0LLU)) {
		if ((!(_1a7676c2d_check_valid_break_label(_self_, _169017_brk.get()._field_it)))) {
			_1a769063c_push_err(_self_.get()._field_s.ptr(), _168942_b.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_168942_b.get()._field_label.get()._field_kind)}));
		};
	};
	if ((_169017_brk.get()._field_mtch != 0LLU)) {
		if ((!(_1a7676c2d_check_valid_break_label(_self_, _169017_brk.get()._field_mtch)))) {
			_1a769063c_push_err(_self_.get()._field_s.ptr(), _168942_b.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_168942_b.get()._field_label.get()._field_kind)}));
		};
	};
	return _169017_brk;
}



inline jule::Ptr<_1a766c839_BreakSt> _1a767bae0_check_plain_break(jule::Ptr<_1a766e374_ScopeChecker> _self_, jule::Ptr<_1a686512b_BreakSt> _174737_b) {
	if (_1a76713a9_is_deferred(_self_)) {
		_1a769063c_push_err(_self_.get()._field_s.ptr(), _174737_b.get()._field_token,jule::Str("break keyword is cannot used at out of iteration and match cases", 64),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1a766e374_ScopeChecker> _175317_scope = _self_;;
	_julec_label_iter:;
	{
		
		if (((((_175317_scope.get()._field_it == 0LLU) && (_175317_scope.get()._field_cse == 0LLU)) && (_175317_scope.get()._field_parent != nullptr)) && (_175317_scope.get()._field_owner == nullptr))) {
			_case_begin_1a9943635:;
			{
				_175317_scope=_175317_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_175317_scope.get()._field_it != 0LLU)) {
			_case_begin_1a99436ac:;
			{
				return jule::new_ptr<_1a766c839_BreakSt>(_1a766c839_BreakSt{._field_it=_175317_scope.get()._field_it, });
			}
		}
		else if ((_175317_scope.get()._field_cse != 0LLU)) {
			_case_begin_1a9943734:;
			{
				return jule::new_ptr<_1a766c839_BreakSt>(_1a766c839_BreakSt{._field_mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(((_1a766d8d4_Case*)(_175317_scope.get()._field_cse))->_field_owner))});
			}
		}
		_match_end_1a9943558:;
	};
	_1a769063c_push_err(_self_.get()._field_s.ptr(), _174737_b.get()._field_token,jule::Str("break keyword is cannot used at out of iteration and match cases", 64),jule::Slice<jule::Any>());
	return nullptr;
}



inline void _1a767bd65_check_break(jule::Ptr<_1a766e374_ScopeChecker> _self_, jule::Ptr<_1a686512b_BreakSt> _176931_b) {
	if ((_176931_b.get()._field_label != nullptr)) {
		jule::Ptr<_1a766c839_BreakSt> _177121_brk = _1a767b7d2_check_break_with_label(_self_, _176931_b);;
		_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_177121_brk));;
		return;;
	};
	jule::Ptr<_1a766c839_BreakSt> _177617_brk = _1a767bae0_check_plain_break(_self_, _176931_b);;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_177617_brk));;
}



inline void _1a767c0da_check_ret(jule::Ptr<_1a766e374_ScopeChecker> _self_, jule::Ptr<_1a686358b_RetSt> _178033_r) {
	if (_1a76713a9_is_deferred(_self_)) {
		_1a769063c_push_err(_self_.get()._field_s.ptr(), _178033_r.get()._field_token,jule::Str("deferred scopes are not supports return statements", 50),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a766dcad_RetSt> _178517_rt = jule::new_ptr<_1a766dcad_RetSt>(_1a766dcad_RetSt{._field_func=_1a767161d_get_root(_self_).get()._field_owner, });;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_178517_rt));;
	jule::Ptr<_1a76e7243_RetTypeChecker> _179017_rtc = jule::new_ptr<_1a76e7243_RetTypeChecker>(_1a76e7243_RetTypeChecker{._field_sc=_self_, ._field_f=_178517_rt.get()._field_func, ._field_error_token=_178033_r.get()._field_token, });;
	jule::Bool _179513_ok = _1a76e8134_check(_179017_rtc.ptr(), _178033_r.get()._field_expr);;
	if ((!(_179513_ok))) {
		return;;
	};
	if (((_178033_r.get()._field_expr == nullptr) && (_179017_rtc.get()._field_vars.len() == 0LL))) {
		return;;
	};
	_178517_rt.get()._field_vars=_179017_rtc.get()._field_vars;
	if ((_178033_r.get()._field_expr != nullptr)) {
		_178517_rt.get()._field_expr=jule::Any(_179017_rtc.get()._field_model);
	};
}



inline void _1a767c360_check_use_expr(jule::Ptr<_1a766e374_ScopeChecker> _self_, jule::Ptr<_1a68562e8_UseExpr> _181134_ue) {
	if ((_self_.get()._field_result == nullptr)) {
		_1a769063c_push_err(_self_.get()._field_s.ptr(), _181134_ue.get()._field_token,jule::Str("use expressions cannot useable out of exceptional handler scopes", 64),jule::Slice<jule::Any>());
		return;;
	};
	if (_1a76713a9_is_deferred(_self_)) {
		_1a769063c_push_err(_self_.get()._field_s.ptr(), _181134_ue.get()._field_token,jule::Str("use expressions cannot useable in deferred scopes", 49),jule::Slice<jule::Any>());
	};
	if (((_self_.get()._field_i + 1LL) < _self_.get()._field_tree.get()._field_stmts.len())) {
		_1a769063c_push_err(_self_.get()._field_s.ptr(), _181134_ue.get()._field_token,jule::Str("use expressions must be last statement of scope", 47),jule::Slice<jule::Any>());
	};
}



inline void _1a767c5d5_check_node(jule::Ptr<_1a766e374_ScopeChecker> _self_, jule::Any& _182735_node) {
	{
		auto &_match_expr{ _182735_node };
		
		if (_match_expr.type_is<jule::Ptr<_1a686070e_ScopeTree>>()) {
			_case_begin_1a99538dc:;
			{
				_1a7673bc5_check_anon_scope(_self_, _182735_node.operator jule::Ptr<_1a686070e_ScopeTree>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a68631d4_VarDecl>>()) {
			_case_begin_1a995349c:;
			{
				_1a76728d8_check_var_decl(_self_, _182735_node.operator jule::Ptr<_1a68631d4_VarDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6866957_TypeAliasDecl>>()) {
			_case_begin_1a9953c1c:;
			{
				_1a7672b5d_check_type_alias_decl(_self_, _182735_node.operator jule::Ptr<_1a6866957_TypeAliasDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6855e41_Expr>>()) {
			_case_begin_1a9953a30:;
			{
				_1a7674269_check_expr(_self_, _182735_node.operator jule::Ptr<_1a6855e41_Expr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a685766d_CoExpr>>()) {
			_case_begin_1a9953db5:;
			{
				_1a76744de_check_co_expr(_self_, _182735_node.operator jule::Ptr<_1a685766d_CoExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6866281_Conditional>>()) {
			_case_begin_1a9953e2b:;
			{
				_1a7674d80_check_conditional(_self_, _182735_node.operator jule::Ptr<_1a6866281_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6863b0d_Iter>>()) {
			_case_begin_1a9953e92:;
			{
				_1a76765e0_check_iter(_self_, _182735_node.operator jule::Ptr<_1a6863b0d_Iter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a68654d3_ContSt>>()) {
			_case_begin_1a9954008:;
			{
				_1a76772c2_check_cont(_self_, _182735_node.operator jule::Ptr<_1a68654d3_ContSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a685dd17_LabelSt>>()) {
			_case_begin_1a995406e:;
			{
				_1a7677547_check_label(_self_, _182735_node.operator jule::Ptr<_1a685dd17_LabelSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a685e1be_GotoSt>>()) {
			_case_begin_1a99540d5:;
			{
				_1a76777bc_push_goto(_self_, _182735_node.operator jule::Ptr<_1a685e1be_GotoSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6860104_AssignSt>>()) {
			_case_begin_1a995414b:;
			{
				_1a7679318_check_assign_st(_self_, _182735_node.operator jule::Ptr<_1a6860104_AssignSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a68675a1_MatchCase>>()) {
			_case_begin_1a99541b2:;
			{
				_1a767b24e_check_match(_self_, _182735_node.operator jule::Ptr<_1a68675a1_MatchCase>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a685e4aa_FallSt>>()) {
			_case_begin_1a9954228:;
			{
				_1a767b4c4_check_fall(_self_, _182735_node.operator jule::Ptr<_1a685e4aa_FallSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a686512b_BreakSt>>()) {
			_case_begin_1a995428e:;
			{
				_1a767bd65_check_break(_self_, _182735_node.operator jule::Ptr<_1a686512b_BreakSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a686358b_RetSt>>()) {
			_case_begin_1a9954305:;
			{
				_1a767c0da_check_ret(_self_, _182735_node.operator jule::Ptr<_1a686358b_RetSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a68562e8_UseExpr>>()) {
			_case_begin_1a995436b:;
			{
				_1a767c360_check_use_expr(_self_, _182735_node.operator jule::Ptr<_1a68562e8_UseExpr>());
			}
		}
		else {
			_case_begin_1a9953656:;
			{
				jule::outln(jule::Str("error <unimplemented scope node>", 32));
			}
		}
		_match_end_1a9953601:;
	};
}



inline void _1a767c7b1_check_result(jule::Ptr<_1a766e374_ScopeChecker> _self_) {
	_1a6821934_Node _186717_stmt = _self_.get()._field_tree.get()._field_stmts[(_self_.get()._field_tree.get()._field_stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _186717_stmt._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1a68562e8_UseExpr>>()) {
			_case_begin_1a995e156:;
			{
				jule::Ptr<_1a68562e8_UseExpr> _187021_ue = _186717_stmt._field_data.operator jule::Ptr<_1a68562e8_UseExpr>();;
				jule::Ptr<_1a76edda4_Data> _187121_d = _1a771982b_eval_expr(_1a7695444_eval(_self_.get()._field_s, jule::Trait<_1a7741e19_Lookup>(_self_, 0)), _187021_ue.get()._field_expr);;
				if ((_187121_d == nullptr)) {
					return;;
				};
				_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_187121_d));;
				jule::Ptr<_1a76e7243_RetTypeChecker> _187621_rtc = jule::new_ptr<_1a76e7243_RetTypeChecker>(_1a76e7243_RetTypeChecker{._field_sc=_self_, ._field_types=_1a68737aa_types(_self_.get()._field_result.ptr()), ._field_error_token=_187021_ue.get()._field_expr.get()._field_token, });;
				_1a76e8134_check(_187621_rtc.ptr(), _187021_ue.get()._field_expr);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6855e41_Expr>>()) {
			_case_begin_1a995e1bc:;
			{
				jule::Ptr<_1a6855e41_Expr> _188321_expr = _186717_stmt._field_data.operator jule::Ptr<_1a6855e41_Expr>();;
				jule::Ptr<_1a76edda4_Data> _188421_d = _1a771982b_eval_expr(_1a7695444_eval(_self_.get()._field_s, jule::Trait<_1a7741e19_Lookup>(_self_, 0)), _188321_expr);;
				if ((_188421_d == nullptr)) {
					return;;
				};
				{
					auto &_match_expr{ _188421_d.get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1a686e4ed_BuiltinErrorCallExprModel>>()) {
						_case_begin_1a996380e:;
						{
							jule::Ptr<_1a686e4ed_BuiltinErrorCallExprModel> _189025_m = _188421_d.get()._field_model.operator jule::Ptr<_1a686e4ed_BuiltinErrorCallExprModel>();;
							_1a7673ee4_process_error_call(_self_, _189025_m,_188321_expr.get()._field_token);
							_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_188421_d));;
						}
					}
					else {
						_case_begin_1a9963941:;
						{
							return;;
						}
					}
					_match_end_1a99636bb:;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a685e1be_GotoSt>>() || _match_expr.type_is<jule::Ptr<_1a686512b_BreakSt>>() || _match_expr.type_is<jule::Ptr<_1a68654d3_ContSt>>() || _match_expr.type_is<jule::Ptr<_1a686358b_RetSt>>()) {
			_case_begin_1a995d84d:;
			{
				_1a767c5d5_check_node(_self_, _186717_stmt._field_data);
			}
		}
		else {
			_case_begin_1a995d793:;
			{
				_1a767c5d5_check_node(_self_, _186717_stmt._field_data);
				return;;
			}
		}
		_match_end_1a995d73d:;
	};
	_self_.get()._field_result=nullptr;
}



inline void _1a767c98c_check_tree(jule::Ptr<_1a766e374_ScopeChecker> _self_) {
	_self_.get()._field_i=0LL;
	jule::I64 _191217_n = _self_.get()._field_tree.get()._field_stmts.len();;
	if ((_self_.get()._field_result != nullptr)) {
		(_191217_n)--;
	};
	for (; (_self_.get()._field_i < _191217_n); (_self_.get()._field_i)++) {
		{
			_1a6821934_Node _192021_stmt = _self_.get()._field_tree.get()._field_stmts[_self_.get()._field_i];;
			_1a767c5d5_check_node(_self_, _192021_stmt._field_data);
			if (_1a7671145_stopped(_self_.ptr())) {
				return;;
			};
		}
	_iter_next_1a99671e7:;
	}
	_iter_end_1a99671e7:;;
	if (((_self_.get()._field_result != nullptr) && (_self_.get()._field_tree.get()._field_stmts.len() != 0LL))) {
		_1a767c7b1_check_result(_self_);
	};
}



inline void _1a767ccab_check_goto(_1a766e374_ScopeChecker* _self_, jule::Ptr<_1a766e187_ScopeGoto>& _193134_gt, jule::Ptr<_1a766de9a_ScopeLabel>& _193155_label) {
	jule::Ptr<_1a766e374_ScopeChecker> _193217_gtsc = _193134_gt.get()._field_scope;;
	while (((_193217_gtsc.get()._field_child_index - 1LL) > _193155_label.get()._field_scope.get()._field_child_index)) {
		{
			_193217_gtsc=_193217_gtsc.get()._field_parent;
		}
	_iter_next_1a996a30a:;
	}
	_iter_end_1a996a30a:;;
	jule::I64 _193717_n = 0LL;;
	if ((_193217_gtsc.get()._field_scope == _193155_label.get()._field_scope.get()._field_scope)) {
		if ((_193134_gt.get()._field_pos > _193155_label.get()._field_pos)) {
			return;;
		};
		_193717_n=_193134_gt.get()._field_pos;
	};
	jule::I64 _195017_i = (_193155_label.get()._field_pos - 1LL);;
	if ((_193717_n == 0LL)) {
		{
			auto &expr = _193155_label.get()._field_scope.get()._field_scope.get()._field_stmts;
			auto it = expr.begin();
			_iter_begin_1a996cb59:;
			if (it != expr.end()) {
				jule::I64 _195317_j = it - expr.begin();
				jule::Any _195320_stmt = *it;
				{
					if (_1a7639e55_stmt_is_goto_scope(_195320_stmt,_193217_gtsc.get()._field_scope)) {
						_193717_n=_195317_j;
						goto _iter_end_1a996cb59;
					};
				}
				_iter_next_1a996cb59:;
				++it;
				_195317_j++;
				goto _iter_begin_1a996cb59;
			}
			_iter_end_1a996cb59:;
		};
	};
	for (; (_195017_i >= _193717_n); (_195017_i)--) {
		{
			jule::Any _196321_stmt = _193155_label.get()._field_scope.get()._field_scope.get()._field_stmts[_195017_i];;
			if (_1a7648392_st_is_def(_196321_stmt)) {
				_1a769063c_push_err((*_self_)._field_s.ptr(), _193134_gt.get()._field_gt.get()._field_token,jule::Str("goto @ jumps over declaration(s)", 32),jule::Slice<jule::Any>::make({jule::Any(_193134_gt.get()._field_gt.get()._field_label.get()._field_kind)}));
				return;;
			};
		}
	_iter_next_1a996c54e:;
	}
	_iter_end_1a996c54e:;;
}



inline void _1a767ce87_check_gotos(_1a766e374_ScopeChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_gotos));
		auto it = expr.begin();
		_iter_begin_1a9970bb2:;
		if (it != expr.end()) {
			jule::Ptr<_1a766e187_ScopeGoto> _197221_gt = *it;
			{
				jule::Ptr<_1a766de9a_ScopeLabel> _197321_label = _1a76722ab_find_label_all(&(*_self_), _197221_gt.get()._field_gt.get()._field_label.get()._field_kind);;
				if ((_197321_label == nullptr)) {
					_1a769063c_push_err((*_self_)._field_s.ptr(), _197221_gt.get()._field_gt.get()._field_token,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>::make({jule::Any(_197221_gt.get()._field_gt.get()._field_label.get()._field_kind)}));
					goto _iter_next_1a9970bb2;
				};
				_197321_label.get()._field_used=true;
				_1a767ccab_check_goto(&(*_self_), _197221_gt,_197321_label);
			}
			_iter_next_1a9970bb2:;
			++it;
			goto _iter_begin_1a9970bb2;
		}
		_iter_end_1a9970bb2:;
	};
}



inline void _1a767d163_check_labels(_1a766e374_ScopeChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_labels));
		auto it = expr.begin();
		_iter_begin_1a9973863:;
		if (it != expr.end()) {
			jule::Ptr<_1a766de9a_ScopeLabel> _198516_l = *it;
			{
				if ((!(_198516_l.get()._field_used))) {
					_1a769063c_push_err((*_self_)._field_s.ptr(), _198516_l.get()._field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>::make({jule::Any(_198516_l.get()._field_label.get()._field_ident)}));
				};
			}
			_iter_next_1a9973863:;
			++it;
			goto _iter_begin_1a9973863;
		}
		_iter_end_1a9973863:;
	};
}



inline void _1a767d33e_check_vars(_1a766e374_ScopeChecker* _self_) {
	{
		auto &expr = (*_self_)._field_table.get()._field_vars;
		auto it = expr.begin();
		_iter_begin_1a9975337:;
		if (it != expr.end()) {
			jule::Ptr<_1a76a7720_Var> _199316_v = *it;
			{
				if (((((!(_199316_v.get()._field_used)) && (!(_1a5279aca_is_ignore_ident(_199316_v.get()._field_ident)))) && (!(_1a5279d72_is_anon_ident(_199316_v.get()._field_ident)))) && (_199316_v.get()._field_ident != jule::Str("self", 4)))) {
					_1a769063c_push_err((*_self_)._field_s.ptr(), _199316_v.get()._field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>::make({jule::Any(_199316_v.get()._field_ident)}));
				};
			}
			_iter_next_1a9975337:;
			++it;
			goto _iter_begin_1a9975337;
		}
		_iter_end_1a9975337:;
	};
}



inline void _1a767d51a_check_aliases(_1a766e374_ScopeChecker* _self_) {
	{
		auto &expr = (*_self_)._field_table.get()._field_type_aliases;
		auto it = expr.begin();
		_iter_begin_1a99778de:;
		if (it != expr.end()) {
			jule::Ptr<_1a7726b9b_TypeAlias> _200116_a = *it;
			{
				if ((((!(_200116_a.get()._field_used)) && (!(_1a5279aca_is_ignore_ident(_200116_a.get()._field_ident)))) && (!(_1a5279d72_is_anon_ident(_200116_a.get()._field_ident))))) {
					_1a769063c_push_err((*_self_)._field_s.ptr(), _200116_a.get()._field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>::make({jule::Any(_200116_a.get()._field_ident)}));
				};
			}
			_iter_next_1a99778de:;
			++it;
			goto _iter_begin_1a99778de;
		}
		_iter_end_1a99778de:;
	};
}



inline void _1a767d839_check(jule::Ptr<_1a766e374_ScopeChecker> _self_, jule::Ptr<_1a686070e_ScopeTree>& _200930_tree, jule::Ptr<_1a7658803_Scope>& _200953_s) {
	_200953_s.get()._field_deferred=_200930_tree.get()._field_deferred;
	_200953_s.get()._field_unsafety=_200930_tree.get()._field_unsafety;
	jule::I64 _201313_errors = _self_.get()._field_s.get()._field_errors.len();;
	_self_.get()._field_tree=_200930_tree;
	_self_.get()._field_scope=_200953_s;
	_1a767c98c_check_tree(_self_);
	if ((_201313_errors == _self_.get()._field_s.get()._field_errors.len())) {
		_1a767d33e_check_vars(_self_.ptr());
		_1a767d51a_check_aliases(_self_.ptr());
		if (_1a7670c05_is_root(_self_.ptr())) {
			_1a767ce87_check_gotos(_self_.ptr());
			_1a767d163_check_labels(_self_.ptr());
		};
	};
}



inline jule::Ptr<_1a766e374_ScopeChecker> _1a767da9d_new_child_checker(jule::Ptr<_1a766e374_ScopeChecker> _self_) {
	jule::Ptr<_1a766e374_ScopeChecker> _203317_base = _1a75dc116_new_scope_checker_base(_self_.get()._field_s,nullptr);;
	_203317_base.get()._field_parent=_self_;
	_203317_base.get()._field_labels=_self_.get()._field_labels;
	_203317_base.get()._field_gotos=_self_.get()._field_gotos;
	_203317_base.get()._field_child_index=static_cast<jule::I64>((_self_.get()._field_child_index + 1LL));
	return _203317_base;
}







std::ostream &operator<<(std::ostream &_Stream, _1a766e374_ScopeChecker _Src) {
	_Stream << "ScopeChecker{";
	_Stream << "called_from:" << _Src._field_called_from << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "child_index:" << _Src._field_child_index << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _1a767eb48_check_cdef(_1a767e708_DirectiveChecker* _self_, jule::Ptr<_1a6852525_Directive>& _1630_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1a68709c7_Fn>>()) {
			_case_begin_1a99a2793:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1a68709c7_Fn>().get()._field_cpp_linked) {
					goto _match_end_1a99a29b3;
				};
				goto _case_begin_1a99a2a18;
			}
		}
		else {
			_case_begin_1a99a2a18:;
			{
				_1a769063c_push_err((*_self_)._field_s.ptr(), _1630_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_1630_d.get()._field_tag.get()._field_kind)}));
			}
		}
		_match_end_1a99a29b3:;
	};
	if ((_1630_d.get()._field_args.len() > 0LL)) {
		_1a769063c_push_err((*_self_)._field_s.ptr(), _1630_d.get()._field_args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1a767edbd_check_typedef(_1a767e708_DirectiveChecker* _self_, jule::Ptr<_1a6852525_Directive>& _3233_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1a6826829_Struct>>()) {
			_case_begin_1a99a571e:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1a6826829_Struct>().get()._field_cpp_linked) {
					goto _match_end_1a99a593e;
				};
				goto _case_begin_1a99a5994;
			}
		}
		else {
			_case_begin_1a99a5994:;
			{
				_1a769063c_push_err((*_self_)._field_s.ptr(), _3233_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_3233_d.get()._field_tag.get()._field_kind)}));
			}
		}
		_match_end_1a99a593e:;
	};
	if ((_3233_d.get()._field_args.len() > 0LL)) {
		_1a769063c_push_err((*_self_)._field_s.ptr(), _3233_d.get()._field_args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1a7680143_check_derive(_1a767e708_DirectiveChecker* _self_, jule::Ptr<_1a6852525_Directive>& _4832_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1a6826829_Struct>>()) {
			_case_begin_1a99a869a:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_1a6826829_Struct>().get()._field_cpp_linked))) {
					goto _match_end_1a99a88ba;
				};
				goto _case_begin_1a99a8920;
			}
		}
		else {
			_case_begin_1a99a8920:;
			{
				_1a769063c_push_err((*_self_)._field_s.ptr(), _4832_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>());
			}
		}
		_match_end_1a99a88ba:;
	};
	if ((_4832_d.get()._field_args.len() == 0LL)) {
		_1a769063c_push_err((*_self_)._field_s.ptr(), _4832_d.get()._field_tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		_1a769095b_push_suggestion((*_self_)._field_s.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;;
	} else if ((_4832_d.get()._field_args.len() > 1LL)) {
		_1a769063c_push_err((*_self_)._field_s.ptr(), _4832_d.get()._field_args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	{
		auto &_match_expr{ _4832_d.get()._field_args[0LL].get()._field_kind };
		
		if (_match_expr == jule::Str("Clone", 5)) {
			_case_begin_1a99ac748:;
		}
		else {
			_case_begin_1a99abdb8:;
			{
				_1a769063c_push_err((*_self_)._field_s.ptr(), _4832_d.get()._field_args[0LL],jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_4832_d.get()._field_args[0LL].get()._field_kind)}));
			}
		}
		_match_end_1a99ac380:;
	};
}



inline void _1a76803b8_check_namespace(_1a767e708_DirectiveChecker* _self_, jule::Ptr<_1a6852525_Directive>& _7439_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1a6826829_Struct>>()) {
			_case_begin_1a99adeec:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_1a6826829_Struct>().get()._field_cpp_linked))) {
					_1a769063c_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7439_d.get()._field_tag.get()._field_kind)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a68709c7_Fn>>()) {
			_case_begin_1a99ae371:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_1a68709c7_Fn>().get()._field_cpp_linked))) {
					_1a769063c_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7439_d.get()._field_tag.get()._field_kind)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a76a7720_Var>>()) {
			_case_begin_1a99ae3d7:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_1a76a7720_Var>().get()._field_cpp_linked))) {
					_1a769063c_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7439_d.get()._field_tag.get()._field_kind)}));
				};
			}
		}
		else {
			_case_begin_1a99ae272:;
			{
				_1a769063c_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7439_d.get()._field_tag.get()._field_kind)}));
			}
		}
		_match_end_1a99ae21c:;
	};
	if ((_7439_d.get()._field_args.len() == 0LL)) {
		_1a769063c_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return;;
	} else if ((_7439_d.get()._field_args.len() > 1LL)) {
		_1a769063c_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a527737a_Token> _9913_arg = _7439_d.get()._field_args[0LL];;
	if ((_9913_arg.get()._field_id != static_cast<jule::U64>(6LLU))) {
		_1a769063c_push_err((*_self_)._field_s.ptr(), _9913_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	if ((_9913_arg.get()._field_kind[0LL] != '\"')) {
		_1a769063c_push_err((*_self_)._field_s.ptr(), _9913_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	_7439_d.get()._field_args[0LL].get()._field_kind=_9913_arg.get()._field_kind.slice(1LL,(_9913_arg.get()._field_kind.len() - 1LL));
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1a6826829_Struct>>()) {
			_case_begin_1a99b829d:;
			{
				if ((_1a77225c0_find_directive((*((*_self_)._field_d)),jule::Str("typedef", 7)) == nullptr)) {
					jule::Ptr<_1a6852525_Directive> _11625_typedef = jule::new_ptr<_1a6852525_Directive>(_1a6852525_Directive{._field_tag=_7439_d.get()._field_tag, });;
					_11625_typedef.get()._field_tag.get()._field_kind=jule::Str("typedef", 7);
					(*((*_self_)._field_d))=jule::append((*((*_self_)._field_d)),jule::Slice<jule::Ptr<_1a6852525_Directive>>::make({_11625_typedef}));
				};
			}
		}
		_match_end_1a99b8248:;
	};
}



inline void _1a768063d_check_deprecated(_1a767e708_DirectiveChecker* _self_, jule::Ptr<_1a6852525_Directive>& _12540_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1a6826829_Struct>>()) {
			_case_begin_1a99ba635:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1a6826829_Struct>().get()._field_cpp_linked) {
					_1a769063c_push_err((*_self_)._field_s.ptr(), _12540_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12540_d.get()._field_tag.get()._field_kind)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a68709c7_Fn>>()) {
			_case_begin_1a99ba9a9:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1a68709c7_Fn>().get()._field_cpp_linked) {
					_1a769063c_push_err((*_self_)._field_s.ptr(), _12540_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12540_d.get()._field_tag.get()._field_kind)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a76a7720_Var>>()) {
			_case_begin_1a99baa20:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1a76a7720_Var>().get()._field_cpp_linked) {
					_1a769063c_push_err((*_self_)._field_s.ptr(), _12540_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12540_d.get()._field_tag.get()._field_kind)}));
				};
			}
		}
		else {
			_case_begin_1a99ba8aa:;
			{
				_1a769063c_push_err((*_self_)._field_s.ptr(), _12540_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12540_d.get()._field_tag.get()._field_kind)}));
			}
		}
		_match_end_1a99ba855:;
	};
	if ((_12540_d.get()._field_args.len() == 0LL)) {
		return;;
	};
	if ((_12540_d.get()._field_args.len() > 1LL)) {
		_1a769063c_push_err((*_self_)._field_s.ptr(), _12540_d.get()._field_args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a527737a_Token> _15013_arg = _12540_d.get()._field_args[0LL];;
	if ((_15013_arg.get()._field_id != static_cast<jule::U64>(6LLU))) {
		_1a769063c_push_err((*_self_)._field_s.ptr(), _15013_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	if ((_15013_arg.get()._field_kind[0LL] != '\"')) {
		_1a769063c_push_err((*_self_)._field_s.ptr(), _15013_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	_12540_d.get()._field_args[0LL].get()._field_kind=_15013_arg.get()._field_kind.slice(1LL,(_15013_arg.get()._field_kind.len() - 1LL));
}



inline void _1a76808b3_check_test(_1a767e708_DirectiveChecker* _self_, jule::Ptr<_1a6852525_Directive>& _16430_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1a68709c7_Fn>>()) {
			_case_begin_1a99c46b6:;
			{
				jule::Ptr<_1a68709c7_Fn> _16717_f = (*_self_)._field_o.operator jule::Ptr<_1a68709c7_Fn>();;
				if ((((!(_16717_f.get()._field_cpp_linked)) && (!(_1a6870c91_is_init(_16717_f.ptr())))) && (!(_1a6844209_is_entry_point(_16717_f.ptr()))))) {
					goto _match_end_1a99c48d6;
				};
				if (_1a684ce27_is_method(_16717_f.ptr())) {
					_1a769063c_push_err((*_self_)._field_s.ptr(), _16717_f.get()._field_token,jule::Str("you cannot declare test methods", 31),jule::Slice<jule::Any>());
					goto _match_end_1a99c48d6;
				};
				goto _case_begin_1a99c493b;
			}
		}
		else {
			_case_begin_1a99c493b:;
			{
				_1a769063c_push_err((*_self_)._field_s.ptr(), _16430_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_16430_d.get()._field_tag.get()._field_kind)}));
			}
		}
		_match_end_1a99c48d6:;
	};
	if ((_16430_d.get()._field_args.len() > 0LL)) {
		_1a769063c_push_err((*_self_)._field_s.ptr(), _16430_d.get()._field_args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1a7680b38_check_directive(_1a767e708_DirectiveChecker* _self_, jule::Ptr<_1a6852525_Directive>& _18539_d) {
	{
		auto &_match_expr{ _18539_d.get()._field_tag.get()._field_kind };
		
		if (_match_expr == jule::Str("cdef", 4)) {
			_case_begin_1a99c9754:;
			{
				_1a767eb48_check_cdef(&(*_self_), _18539_d);
			}
		}
		else if (_match_expr == jule::Str("typedef", 7)) {
			_case_begin_1a99c9149:;
			{
				_1a767edbd_check_typedef(&(*_self_), _18539_d);
			}
		}
		else if (_match_expr == jule::Str("derive", 6)) {
			_case_begin_1a99c91b0:;
			{
				_1a7680143_check_derive(&(*_self_), _18539_d);
			}
		}
		else if (_match_expr == jule::Str("namespace", 9)) {
			_case_begin_1a99c9226:;
			{
				_1a76803b8_check_namespace(&(*_self_), _18539_d);
			}
		}
		else if (_match_expr == jule::Str("deprecated", 10)) {
			_case_begin_1a99c928c:;
			{
				_1a768063d_check_deprecated(&(*_self_), _18539_d);
			}
		}
		else if (_match_expr == jule::Str("test", 4)) {
			_case_begin_1a99ca090:;
			{
				_1a76808b3_check_test(&(*_self_), _18539_d);
			}
		}
		else if (_match_expr == jule::Str("build", 5) || _match_expr == jule::Str("pass", 4)) {
			_case_begin_1a99ca117:;
			{
				_1a769063c_push_err((*_self_)._field_s.ptr(), _18539_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_18539_d.get()._field_tag.get()._field_kind)}));
			}
		}
		else {
			_case_begin_1a99c8cb4:;
			{
				_1a769063c_push_err((*_self_)._field_s.ptr(), _18539_d.get()._field_tag,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_18539_d.get()._field_tag.get()._field_kind)}));
			}
		}
		_match_end_1a99c908e:;
	};
}



inline void _1a7680d14_check(_1a767e708_DirectiveChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_d));
		auto it = expr.begin();
		_iter_begin_1a99cdb76:;
		if (it != expr.end()) {
			jule::Ptr<_1a6852525_Directive> _20821_d = *it;
			{
				_1a7680b38_check_directive(&(*_self_), _20821_d);
			}
			_iter_next_1a99cdb76:;
			++it;
			goto _iter_begin_1a99cdb76;
		}
		_iter_end_1a99cdb76:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a767e708_DirectiveChecker _Src) {
	_Stream << "DirectiveChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "o:" << _Src._field_o;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a7685038_ImportInfo> _1a7685544_find_package(_1a7685038_ImportInfo* _self_, jule::Str ) {
	return nullptr;
}



inline jule::Ptr<_1a7685038_ImportInfo> _1a7685852_select_package(_1a7685038_ImportInfo* _self_, jule::Fn<jule::Bool(jule::Ptr<_1a7685038_ImportInfo>)> ) {
	return nullptr;
}



inline jule::Ptr<_1a76a7720_Var> _1a7685c09_find_var(_1a7685038_ImportInfo* _self_, jule::Str _16931_ident, jule::Bool _16943_cpp_linked) {
	if ((!(_1a7687359_is_lookupable(&(*_self_), _16931_ident)))) {
		return nullptr;
	};
	return _1a7683058_find_var_in_package((*_self_)._field_package.get()._field_files,_16931_ident,false);
}



inline jule::Ptr<_1a7726b9b_TypeAlias> _1a76860b1_find_type_alias(_1a7685038_ImportInfo* _self_, jule::Str _18238_ident, jule::Bool _18250_cpp_linked) {
	if ((!(_1a7687359_is_lookupable(&(*_self_), _18238_ident)))) {
		return nullptr;
	};
	return _1a76834a9_find_type_alias_in_package((*_self_)._field_package.get()._field_files,_18238_ident,false);
}



inline jule::Ptr<_1a6826829_Struct> _1a7686468_find_struct(_1a7685038_ImportInfo* _self_, jule::Str _19534_ident, jule::Bool _19546_cpp_linked) {
	if ((!(_1a7687359_is_lookupable(&(*_self_), _19534_ident)))) {
		return nullptr;
	};
	return _1a76838a5_find_struct_in_package((*_self_)._field_package.get()._field_files,_19534_ident,false);
}



inline jule::Ptr<_1a68709c7_Fn> _1a7686820_find_fn(_1a7685038_ImportInfo* _self_, jule::Str _20830_ident, jule::Bool _20842_cpp_linked) {
	if ((!(_1a7687359_is_lookupable(&(*_self_), _20830_ident)))) {
		return nullptr;
	};
	return _1a7683cd4_find_fn_in_package((*_self_)._field_package.get()._field_files,_20830_ident,false);
}



inline jule::Ptr<_1a68d46b7_Trait> _1a7686b2d_find_trait(_1a7685038_ImportInfo* _self_, jule::Str _22033_ident) {
	if ((!(_1a7687359_is_lookupable(&(*_self_), _22033_ident)))) {
		return nullptr;
	};
	return _1a7684125_find_trait_in_package((*_self_)._field_package.get()._field_files,_22033_ident);
}



inline jule::Ptr<_1a6982435_Enum> _1a7686e3b_find_enum(_1a7685038_ImportInfo* _self_, jule::Str _23232_ident) {
	if ((!(_1a7687359_is_lookupable(&(*_self_), _23232_ident)))) {
		return nullptr;
	};
	return _1a7684466_find_enum_in_package((*_self_)._field_package.get()._field_files,_23232_ident);
}



inline jule::Bool _1a7687359_is_lookupable(_1a7685038_ImportInfo* _self_, jule::Str _24228_ident) {
	if ((*_self_)._field_cpp_linked) {
		return false;
	};
	if ((!((*_self_)._field_import_all))) {
		if ((((*_self_)._field_alias.len() != 0LL) || _1a7687667_exist_ident(&(*_self_), jule::Str("self", 4)))) {
			return true;
		};
		if (((*_self_)._field_selected.len() > 0LL)) {
			if ((!(_1a7687667_exist_ident(&(*_self_), _24228_ident)))) {
				return false;
			};
		};
	};
	return true;
}



inline jule::Bool _1a7687667_exist_ident(_1a7685038_ImportInfo* _self_, jule::Str _26226_ident) {
	{
		auto &expr = (*_self_)._field_selected;
		auto it = expr.begin();
		_iter_begin_1a99dc26c:;
		if (it != expr.end()) {
			jule::Ptr<_1a527737a_Token> &_26316_sident = *it;
			{
				if ((_26316_sident.get()._field_kind == _26226_ident)) {
					return true;
				};
			}
			_iter_next_1a99dc26c:;
			++it;
			goto _iter_begin_1a99dc26c;
		}
		_iter_end_1a99dc26c:;
	};
	return false;
}



inline jule::Bool _1a76878ed_is_accessible_via_selection(_1a7685038_ImportInfo* _self_) {
	return (((*_self_)._field_import_all || ((*_self_)._field_selected.len() == 0LL)) || _1a7687667_exist_ident(&(*_self_), jule::Str("self", 4)));
}







std::ostream &operator<<(std::ostream &_Stream, _1a7685038_ImportInfo _Src) {
	_Stream << "ImportInfo{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "link_path:" << _Src._field_link_path << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "alias:" << _Src._field_alias << ", ";
	_Stream << "duplicate:" << _Src._field_duplicate << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "std:" << _Src._field_std << ", ";
	_Stream << "import_all:" << _Src._field_import_all << ", ";
	_Stream << "selected:" << _Src._field_selected << ", ";
	_Stream << "package:" << _Src._field_package << ", ";
	_Stream << "mod_id:" << _Src._field_mod_id;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a7685038_ImportInfo> _1a76881b2_find_package(_1a7687bea_Package* _self_, jule::Str ) {
	return nullptr;
}



inline jule::Ptr<_1a7685038_ImportInfo> _1a76884c0_select_package(_1a7687bea_Package* _self_, jule::Fn<jule::Bool(jule::Ptr<_1a7685038_ImportInfo>)> ) {
	return nullptr;
}



inline jule::Ptr<_1a76a7720_Var> _1a7688877_find_var(_1a7687bea_Package* _self_, jule::Str _29231_ident, jule::Bool _29243_cpp_linked) {
	return _1a7683058_find_var_in_package((*_self_)._field_files,_29231_ident,_29243_cpp_linked);
}



inline jule::Ptr<_1a7726b9b_TypeAlias> _1a7688c2e_find_type_alias(_1a7687bea_Package* _self_, jule::Str _29838_ident, jule::Bool _29850_cpp_linked) {
	return _1a76834a9_find_type_alias_in_package((*_self_)._field_files,_29838_ident,_29850_cpp_linked);
}



inline jule::Ptr<_1a6826829_Struct> _1a76890d6_find_struct(_1a7687bea_Package* _self_, jule::Str _30434_ident, jule::Bool _30446_cpp_linked) {
	return _1a76838a5_find_struct_in_package((*_self_)._field_files,_30434_ident,_30446_cpp_linked);
}



inline jule::Ptr<_1a68709c7_Fn> _1a768948d_find_fn(_1a7687bea_Package* _self_, jule::Str _31030_ident, jule::Bool _31042_cpp_linked) {
	return _1a7683cd4_find_fn_in_package((*_self_)._field_files,_31030_ident,_31042_cpp_linked);
}



inline jule::Ptr<_1a68d46b7_Trait> _1a768979b_find_trait(_1a7687bea_Package* _self_, jule::Str _31633_ident) {
	return _1a7684125_find_trait_in_package((*_self_)._field_files,_31633_ident);
}



inline jule::Ptr<_1a6982435_Enum> _1a7689aa9_find_enum(_1a7687bea_Package* _self_, jule::Str _32232_ident) {
	return _1a7684466_find_enum_in_package((*_self_)._field_files,_32232_ident);
}







std::ostream &operator<<(std::ostream &_Stream, _1a7687bea_Package _Src) {
	_Stream << "Package{";
	_Stream << "files:" << _Src._field_files;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a7685038_ImportInfo> _1a768d22d_find_package(_1a768cc22_Sema* _self_, jule::Str _22435_ident) {
	return _1a76e9432_find_package((*_self_)._field_file.ptr(), _22435_ident);
}



inline jule::Ptr<_1a7685038_ImportInfo> _1a768d53b_select_package(_1a768cc22_Sema* _self_, jule::Fn<jule::Bool(jule::Ptr<_1a7685038_ImportInfo>)> _23437_selector) {
	return _1a76e9740_select_package((*_self_)._field_file.ptr(), _23437_selector);
}



inline jule::Ptr<_1a76a7720_Var> _1a768d8e3_find_var(_1a768cc22_Sema* _self_, jule::Str _24431_ident, jule::Bool _24443_cpp_linked) {
	jule::Ptr<_1a76a7720_Var> _24617_v = _1a7683058_find_var_in_package((*_self_)._field_files,_24431_ident,_24443_cpp_linked);;
	if ((_24617_v != nullptr)) {
		return _24617_v;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1a9a04d12:;
		if (it != expr.end()) {
			jule::Ptr<_1a7685038_ImportInfo> _25221_imp = *it;
			{
				if ((!(_1a768b6c1_imp_is_lookupable(_25221_imp,_24431_ident)))) {
					goto _iter_next_1a9a04d12;
				};
				_24617_v=_1a7685c09_find_var(_25221_imp.ptr(), _24431_ident,_24443_cpp_linked);
				if (((_24617_v != nullptr) && _1a7690d13_is_accessible_define(&(*_self_), _24617_v.get()._field_public,_24617_v.get()._field_token))) {
					return _24617_v;
				};
			}
			_iter_next_1a9a04d12:;
			++it;
			goto _iter_begin_1a9a04d12;
		}
		_iter_end_1a9a04d12:;
	};
	return nullptr;
}



inline jule::Ptr<_1a7726b9b_TypeAlias> _1a768dc9a_find_type_alias(_1a768cc22_Sema* _self_, jule::Str _27138_ident, jule::Bool _27150_cpp_linked) {
	jule::Ptr<_1a7726b9b_TypeAlias> _27317_ta = _1a76834a9_find_type_alias_in_package((*_self_)._field_files,_27138_ident,_27150_cpp_linked);;
	if ((_27317_ta != nullptr)) {
		return _27317_ta;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1a9a0819a:;
		if (it != expr.end()) {
			jule::Ptr<_1a7685038_ImportInfo> _27921_imp = *it;
			{
				if ((!(_1a768b6c1_imp_is_lookupable(_27921_imp,_27138_ident)))) {
					goto _iter_next_1a9a0819a;
				};
				_27317_ta=_1a76860b1_find_type_alias(_27921_imp.ptr(), _27138_ident,_27150_cpp_linked);
				if (((_27317_ta != nullptr) && _1a7690d13_is_accessible_define(&(*_self_), _27317_ta.get()._field_public,_27317_ta.get()._field_token))) {
					return _27317_ta;
				};
			}
			_iter_next_1a9a0819a:;
			++it;
			goto _iter_begin_1a9a0819a;
		}
		_iter_end_1a9a0819a:;
	};
	return nullptr;
}



inline jule::Ptr<_1a6826829_Struct> _1a768e152_find_struct(_1a768cc22_Sema* _self_, jule::Str _29834_ident, jule::Bool _29846_cpp_linked) {
	jule::Ptr<_1a6826829_Struct> _30017_s = _1a76838a5_find_struct_in_package((*_self_)._field_files,_29834_ident,_29846_cpp_linked);;
	if ((_30017_s != nullptr)) {
		return _30017_s;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1a9a0ad4b:;
		if (it != expr.end()) {
			jule::Ptr<_1a7685038_ImportInfo> _30621_imp = *it;
			{
				if ((!(_1a768b6c1_imp_is_lookupable(_30621_imp,_29834_ident)))) {
					goto _iter_next_1a9a0ad4b;
				};
				_30017_s=_1a7686468_find_struct(_30621_imp.ptr(), _29834_ident,_29846_cpp_linked);
				if (((_30017_s != nullptr) && _1a7690d13_is_accessible_define(&(*_self_), _30017_s.get()._field_public,_30017_s.get()._field_token))) {
					return _30017_s;
				};
			}
			_iter_next_1a9a0ad4b:;
			++it;
			goto _iter_begin_1a9a0ad4b;
		}
		_iter_end_1a9a0ad4b:;
	};
	return nullptr;
}



inline jule::Ptr<_1a68709c7_Fn> _1a768e509_find_fn(_1a768cc22_Sema* _self_, jule::Str _32530_ident, jule::Bool _32542_cpp_linked) {
	jule::Ptr<_1a68709c7_Fn> _32717_f = _1a7683cd4_find_fn_in_package((*_self_)._field_files,_32530_ident,_32542_cpp_linked);;
	if ((_32717_f != nullptr)) {
		return _32717_f;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1a9a0d9ec:;
		if (it != expr.end()) {
			jule::Ptr<_1a7685038_ImportInfo> _33321_imp = *it;
			{
				if ((!(_1a768b6c1_imp_is_lookupable(_33321_imp,_32530_ident)))) {
					goto _iter_next_1a9a0d9ec;
				};
				_32717_f=_1a7686820_find_fn(_33321_imp.ptr(), _32530_ident,_32542_cpp_linked);
				if (((_32717_f != nullptr) && _1a7690d13_is_accessible_define(&(*_self_), _32717_f.get()._field_public,_32717_f.get()._field_token))) {
					return _32717_f;
				};
			}
			_iter_next_1a9a0d9ec:;
			++it;
			goto _iter_begin_1a9a0d9ec;
		}
		_iter_end_1a9a0d9ec:;
	};
	return nullptr;
}



inline jule::Ptr<_1a68d46b7_Trait> _1a768e817_find_trait(_1a768cc22_Sema* _self_, jule::Str _35233_ident) {
	jule::Ptr<_1a68d46b7_Trait> _35417_t = _1a7684125_find_trait_in_package((*_self_)._field_files,_35233_ident);;
	if ((_35417_t != nullptr)) {
		return _35417_t;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1a9a11406:;
		if (it != expr.end()) {
			jule::Ptr<_1a7685038_ImportInfo> _36021_imp = *it;
			{
				if ((!(_1a768b6c1_imp_is_lookupable(_36021_imp,_35233_ident)))) {
					goto _iter_next_1a9a11406;
				};
				_35417_t=_1a7686b2d_find_trait(_36021_imp.ptr(), _35233_ident);
				if (((_35417_t != nullptr) && _1a7690d13_is_accessible_define(&(*_self_), _35417_t.get()._field_public,_35417_t.get()._field_token))) {
					return _35417_t;
				};
			}
			_iter_next_1a9a11406:;
			++it;
			goto _iter_begin_1a9a11406;
		}
		_iter_end_1a9a11406:;
	};
	return nullptr;
}



inline jule::Ptr<_1a6982435_Enum> _1a768eb25_find_enum(_1a768cc22_Sema* _self_, jule::Str _37932_ident) {
	jule::Ptr<_1a6982435_Enum> _38117_e = _1a7684466_find_enum_in_package((*_self_)._field_files,_37932_ident);;
	if ((_38117_e != nullptr)) {
		return _38117_e;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1a9a13c88:;
		if (it != expr.end()) {
			jule::Ptr<_1a7685038_ImportInfo> _38721_imp = *it;
			{
				if ((!(_1a768b6c1_imp_is_lookupable(_38721_imp,_37932_ident)))) {
					goto _iter_next_1a9a13c88;
				};
				_38117_e=_1a7686e3b_find_enum(_38721_imp.ptr(), _37932_ident);
				if (((_38117_e != nullptr) && _1a7690d13_is_accessible_define(&(*_self_), _38117_e.get()._field_public,_38117_e.get()._field_token))) {
					return _38117_e;
				};
			}
			_iter_next_1a9a13c88:;
			++it;
			goto _iter_begin_1a9a13c88;
		}
		_iter_end_1a9a13c88:;
	};
	return nullptr;
}



inline jule::Bool _1a768eeee_is_flag(_1a768cc22_Sema* _self_, jule::I64 _40322_flags) {
	return (((*_self_)._field_flags & _40322_flags) == _40322_flags);
}



inline void _1a7690274_set_current_file(_1a768cc22_Sema* _self_, jule::Ptr<_1a76e8e26_SymbolTable> _40539_f) {
	(*_self_)._field_file=_40539_f;
}



inline void _1a769063c_push_err(_1a768cc22_Sema* _self_, jule::Ptr<_1a527737a_Token> _40727_token, jule::Str _40742_fmt, jule::Slice<jule::Any> _40755_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1a768b380_compiler_err(_40727_token,true,_40742_fmt,jule::Any(_40755_args)));;
}



inline void _1a769095b_push_suggestion(_1a768cc22_Sema* _self_, jule::Str _41234_fmt, jule::Slice<jule::Any> _41247_args) {
	{
		_1a768c78d_push_suggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_41234_fmt,jule::Any(_41247_args));
	};
}



inline jule::Bool _1a7690d13_is_accessible_define(_1a768cc22_Sema* _self_, jule::Bool _41735_public, jule::Ptr<_1a527737a_Token> _41749_token) {
	return ((_41735_public || (_41749_token.get()._field_file == nullptr)) || (_1a527d161_dir((*_self_)._field_file.get()._field_file.ptr()) == _1a527d161_dir(_41749_token.get()._field_file.ptr())));
}



inline jule::Bool _1a7691264_is_duplicated_ident(_1a768cc22_Sema* _self_, jule::Uintptr _42434_itself, jule::Str _42451_ident, jule::Bool _42463_cpp_linked) {
	{
		auto &expr = (*_self_)._field_files;
		auto it = expr.begin();
		_iter_begin_1a9a1bb4d:;
		if (it != expr.end()) {
			jule::Ptr<_1a76e8e26_SymbolTable> &_42516_f = *it;
			{
				if (_1a76ec105_is_duplicated_ident(_42516_f.ptr(), _42434_itself,_42451_ident,_42463_cpp_linked)) {
					return true;
				};
				{
					auto &expr = _42516_f.get()._field_imports;
					auto it = expr.begin();
					_iter_begin_1a9a1d3ad:;
					if (it != expr.end()) {
						jule::Ptr<_1a7685038_ImportInfo> &_43020_imp = *it;
						{
							{
								auto &expr = _43020_imp.get()._field_selected;
								auto it = expr.begin();
								_iter_begin_1a9a1daea:;
								if (it != expr.end()) {
									jule::Ptr<_1a527737a_Token> &_43124_selected = *it;
									{
										if ((_43124_selected.get()._field_kind == _42451_ident)) {
											return true;
										};
									}
									_iter_next_1a9a1daea:;
									++it;
									goto _iter_begin_1a9a1daea;
								}
								_iter_end_1a9a1daea:;
							};
						}
						_iter_next_1a9a1d3ad:;
						++it;
						goto _iter_begin_1a9a1d3ad;
					}
					_iter_end_1a9a1d3ad:;
				};
			}
			_iter_next_1a9a1bb4d:;
			++it;
			goto _iter_begin_1a9a1bb4d;
		}
		_iter_end_1a9a1bb4d:;
	};
	return false;
}



inline void _1a7691583_check_directives(jule::Ptr<_1a768cc22_Sema> _self_, jule::Slice<jule::Ptr<_1a6852525_Directive>>& _44141_d, jule::Any _44167_o) {
	_1a767e708_DirectiveChecker _44217_dc = _1a767e708_DirectiveChecker{._field_s=_self_, ._field_d=((jule::Ptr<jule::Slice<jule::Ptr<_1a6852525_Directive>>>)((&(_44141_d)))), ._field_o=jule::Any(_44167_o)};;
	_1a7680d14_check(&_44217_dc);
}



inline jule::Bool _1a76919d4_check_generic_quantity(_1a768cc22_Sema* _self_, jule::I64 _45041_required, jule::I64 _45056_given, jule::Ptr<_1a527737a_Token> _45068_token) {
	jule::Bool _45085_ok = jule::Bool();
	{
		
		if (((_45041_required == 0LL) && (_45056_given > 0LL))) {
			_case_begin_1a9a224d3:;
			{
				_1a769063c_push_err(&(*_self_), _45068_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
				_45085_ok = false;
				return _45085_ok;
			}
		}
		else if (((_45041_required > 0LL) && (_45056_given == 0LL))) {
			_case_begin_1a9a2257c:;
			{
				_1a769063c_push_err(&(*_self_), _45068_token,jule::Str("define has generics", 19),jule::Slice<jule::Any>());
				_45085_ok = false;
				return _45085_ok;
			}
		}
		else if ((_45041_required < _45056_given)) {
			_case_begin_1a9a225e3:;
			{
				_1a769063c_push_err(&(*_self_), _45068_token,jule::Str("overflow generics", 17),jule::Slice<jule::Any>());
				_45085_ok = false;
				return _45085_ok;
			}
		}
		else if ((_45041_required > _45056_given)) {
			_case_begin_1a9a222b3:;
			{
				_1a769063c_push_err(&(*_self_), _45068_token,jule::Str("missing generics", 16),jule::Slice<jule::Any>());
				_45085_ok = false;
				return _45085_ok;
			}
		}
		else {
			_case_begin_1a9a21d51:;
			{
				_45085_ok = true;
				return _45085_ok;
			}
		}
		_match_end_1a9a21c96:;
	};
}



inline jule::Bool _1a7691dad_is_duplicated_import_selection(_1a768cc22_Sema* _self_, jule::Uintptr _46945_itself, jule::Str _46962_ident) {
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1a9a26196:;
		if (it != expr.end()) {
			jule::Ptr<_1a7685038_ImportInfo> &_47016_imp = *it;
			{
				if ((static_cast<jule::Uintptr>(_47016_imp) == _46945_itself)) {
					goto _iter_end_1a9a26196;
				};
				if (_1a7687667_exist_ident(_47016_imp.ptr(), _46962_ident)) {
					return true;
				};
			}
			_iter_next_1a9a26196:;
			++it;
			goto _iter_begin_1a9a26196;
		}
		_iter_end_1a9a26196:;
	};
	return false;
}



inline jule::Any _1a7692276_get_import_def(_1a768cc22_Sema* _self_, jule::Str _48429_ident, jule::Ptr<_1a7685038_ImportInfo>& _48446_imp) {
	if ((_1a776c3a6_find_package_builtin_def(_48446_imp.get()._field_link_path,_48429_ident) != nullptr)) {
		return jule::Any(true);
	};
	{
		auto &expr = _48446_imp.get()._field_package.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1a9a2882a:;
		if (it != expr.end()) {
			jule::Ptr<_1a76e8e26_SymbolTable> _48921_f = *it;
			{
				;
				jule::Any _49121_def = _1a76ebba4_def_by_ident(_48921_f.ptr(), _48429_ident,false);;
				if ((_49121_def != nullptr)) {
					return jule::Any(_49121_def);
				};
			}
			_iter_next_1a9a2882a:;
			++it;
			goto _iter_begin_1a9a2882a;
		}
		_iter_end_1a9a2882a:;
	};
	return nullptr;
}



inline jule::Bool _1a76925a6_check_import_selections(_1a768cc22_Sema* _self_, jule::Ptr<_1a7685038_ImportInfo>& _50047_imp) {
	jule::Bool _50067_ok = jule::Bool();
	_50067_ok=true;
	{
		auto &expr = _50047_imp.get()._field_selected;
		auto it = expr.begin();
		_iter_begin_1a9a2a9d6:;
		if (it != expr.end()) {
			jule::Ptr<_1a527737a_Token> _50216_ident = *it;
			{
				if ((_50216_ident.get()._field_kind == jule::Str("self", 4))) {
					goto _iter_next_1a9a2a9d6;
				};
				if (_1a7691dad_is_duplicated_import_selection(&(*_self_), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_50047_imp)),_50216_ident.get()._field_kind)) {
					_1a769063c_push_err(&(*_self_), _50216_ident,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_50216_ident.get()._field_kind)}));
					_1a769095b_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
					_50067_ok=false;
					goto _iter_next_1a9a2a9d6;
				};
				jule::Any _51421_def = _1a7692276_get_import_def(&(*_self_), _50216_ident.get()._field_kind,_50047_imp);;
				{
					auto &_match_expr{ _51421_def };
					
					if (_match_expr.type_is<jule::Bool>()) {
						_case_begin_1a9a2e303:;
						{
							goto _iter_next_1a9a2a9d6;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1a76a7720_Var>>()) {
						_case_begin_1a9a2d7b9:;
						{
							jule::Ptr<_1a76a7720_Var> _52025_v = _51421_def.operator jule::Ptr<_1a76a7720_Var>();;
							if (_1a7690d13_is_accessible_define(&(*_self_), _52025_v.get()._field_public,_52025_v.get()._field_token)) {
								goto _iter_next_1a9a2a9d6;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1a7726b9b_TypeAlias>>()) {
						_case_begin_1a9a2d830:;
						{
							jule::Ptr<_1a7726b9b_TypeAlias> _52525_ta = _51421_def.operator jule::Ptr<_1a7726b9b_TypeAlias>();;
							if (_1a7690d13_is_accessible_define(&(*_self_), _52525_ta.get()._field_public,_52525_ta.get()._field_token)) {
								goto _iter_next_1a9a2a9d6;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1a6826829_Struct>>()) {
						_case_begin_1a9a2e446:;
						{
							jule::Ptr<_1a6826829_Struct> _53025_strct = _51421_def.operator jule::Ptr<_1a6826829_Struct>();;
							if (_1a7690d13_is_accessible_define(&(*_self_), _53025_strct.get()._field_public,_53025_strct.get()._field_token)) {
								goto _iter_next_1a9a2a9d6;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1a68d46b7_Trait>>()) {
						_case_begin_1a9a2e4ac:;
						{
							jule::Ptr<_1a68d46b7_Trait> _53525_t = _51421_def.operator jule::Ptr<_1a68d46b7_Trait>();;
							if (_1a7690d13_is_accessible_define(&(*_self_), _53525_t.get()._field_public,_53525_t.get()._field_token)) {
								goto _iter_next_1a9a2a9d6;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1a6982435_Enum>>()) {
						_case_begin_1a9a2e523:;
						{
							jule::Ptr<_1a6982435_Enum> _54025_e = _51421_def.operator jule::Ptr<_1a6982435_Enum>();;
							if (_1a7690d13_is_accessible_define(&(*_self_), _54025_e.get()._field_public,_54025_e.get()._field_token)) {
								goto _iter_next_1a9a2a9d6;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1a68709c7_Fn>>()) {
						_case_begin_1a9a2e589:;
						{
							jule::Ptr<_1a68709c7_Fn> _54525_f = _51421_def.operator jule::Ptr<_1a68709c7_Fn>();;
							if (_1a7690d13_is_accessible_define(&(*_self_), _54525_f.get()._field_public,_54525_f.get()._field_token)) {
								goto _iter_next_1a9a2a9d6;
							};
						}
					}
					else {
						_case_begin_1a9a2d5aa:;
						{
							_1a769063c_push_err(&(*_self_), _50216_ident,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_50216_ident.get()._field_kind)}));
							_50067_ok=false;
							goto _iter_next_1a9a2a9d6;
						}
					}
					_match_end_1a9a2d555:;
				};
				_1a769063c_push_err(&(*_self_), _50216_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_50216_ident.get()._field_kind)}));
				_1a769095b_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
				_50067_ok=false;
			}
			_iter_next_1a9a2a9d6:;
			++it;
			goto _iter_begin_1a9a2a9d6;
		}
		_iter_end_1a9a2a9d6:;
	};
	return _50067_ok;
}



inline jule::Bool _1a76928e7_is_use_alias_duplication(_1a768cc22_Sema* _self_, jule::Ptr<_1a7685038_ImportInfo>& _56244_imp) {
	if ((_56244_imp.get()._field_alias.len() == 0LL)) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1a9a36c23:;
		if (it != expr.end()) {
			jule::Ptr<_1a7685038_ImportInfo> _56721_imp2 = *it;
			{
				if ((_56721_imp2 == _56244_imp)) {
					goto _iter_end_1a9a36c23;
				};
				if ((_56721_imp2.get()._field_alias == _56244_imp.get()._field_alias)) {
					return true;
				};
				if (((_56721_imp2.get()._field_ident == _56721_imp2.get()._field_link_path) && (_56721_imp2.get()._field_ident == _56244_imp.get()._field_alias))) {
					return true;
				};
			}
			_iter_next_1a9a36c23:;
			++it;
			goto _iter_begin_1a9a36c23;
		}
		_iter_end_1a9a36c23:;
	};
	return false;
}



inline jule::Bool _1a7692c16_check_import(_1a768cc22_Sema* _self_, jule::Ptr<_1a7685038_ImportInfo>& _58336_imp) {
	if ((_58336_imp.get()._field_cpp_linked || (_58336_imp.get()._field_package.get()._field_files.len() == 0LL))) {
		return true;
	};
	if (_1a76928e7_is_use_alias_duplication(&(*_self_), _58336_imp)) {
		_1a769063c_push_err(&(*_self_), _58336_imp.get()._field_token,jule::Str("identifier duplication: @ is already used for another use declaration above", 75),jule::Slice<jule::Any>::make({jule::Any(_58336_imp.get()._field_alias)}));
		_1a769095b_push_suggestion(&(*_self_), jule::Str("rename alias for this use declaration to avoid duplication", 58),jule::Slice<jule::Any>());
	};
	if ((!(_58336_imp.get()._field_duplicate))) {
		jule::Ptr<_1a768cc22_Sema> _59421_sema = jule::new_ptr<_1a768cc22_Sema>(_1a768cc22_Sema{._field_flags=(*_self_)._field_flags});;
		_1a76a46c8_check(_59421_sema, _58336_imp.get()._field_package.get()._field_files);
		if ((_59421_sema.get()._field_errors.len() != 0LL)) {
			(*_self_)._field_errors=jule::append((*_self_)._field_errors,_59421_sema.get()._field_errors);
			_59421_sema.get()._field_errors=nullptr;
			return false;
		};
	};
	return _1a76925a6_check_import_selections(&(*_self_), _58336_imp);
}



inline void _1a7692de2_check_imports(_1a768cc22_Sema* _self_) {
	{
		auto &expr = (*_self_)._field_files;
		auto it = expr.begin();
		_iter_begin_1a9a3db70:;
		if (it != expr.end()) {
			jule::Ptr<_1a76e8e26_SymbolTable> _60821_file = *it;
			{
				_1a7690274_set_current_file(&(*_self_), _60821_file);
				{
					auto &expr = _60821_file.get()._field_imports;
					auto it = expr.begin();
					_iter_begin_1a9a3e852:;
					if (it != expr.end()) {
						jule::Ptr<_1a7685038_ImportInfo> _61125_imp = *it;
						{
							jule::Bool _61221_ok = _1a7692c16_check_import(&(*_self_), _61125_imp);;
							if ((!(_61221_ok))) {
								_1a769063c_push_err(&(*_self_), _61125_imp.get()._field_token,jule::Str("used package has errors: @", 26),jule::Slice<jule::Any>::make({jule::Any(_61125_imp.get()._field_link_path)}));
								return;;
							};
						}
						_iter_next_1a9a3e852:;
						++it;
						goto _iter_begin_1a9a3e852;
					}
					_iter_end_1a9a3e852:;
				};
			}
			_iter_next_1a9a3db70:;
			++it;
			goto _iter_begin_1a9a3db70;
		}
		_iter_end_1a9a3db70:;
	};
}



inline void _1a76930bd_impl_file_impls(jule::Ptr<_1a768cc22_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_impls;
		auto it = expr.begin();
		_iter_begin_1a9a4148b:;
		if (it != expr.end()) {
			jule::Ptr<_1a6c31b02_Impl> _62421_imp = *it;
			{
				_1a769b956_impl_impl(_self_, _62421_imp);
			}
			_iter_next_1a9a4148b:;
			++it;
			goto _iter_begin_1a9a4148b;
		}
		_iter_end_1a9a4148b:;
	};
}



inline void _1a7693299_impl_impls(jule::Ptr<_1a768cc22_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1a9a42aec:;
		if (it != expr.end()) {
			jule::Ptr<_1a76e8e26_SymbolTable> _63021_file = *it;
			{
				_1a7690274_set_current_file(_self_.ptr(), _63021_file);
				_1a76930bd_impl_file_impls(_self_);
			}
			_iter_next_1a9a42aec:;
			++it;
			goto _iter_begin_1a9a42aec;
		}
		_iter_end_1a9a42aec:;
	};
}



inline void _1a7693475_check_enums(jule::Ptr<_1a768cc22_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1a9a43e94:;
		if (it != expr.end()) {
			jule::Ptr<_1a76e8e26_SymbolTable> _63721_file = *it;
			{
				_1a7690274_set_current_file(_self_.ptr(), _63721_file);
				_1a76991a1_check_enum_decls(_self_);
			}
			_iter_next_1a9a43e94:;
			++it;
			goto _iter_begin_1a9a43e94;
		}
		_iter_end_1a9a43e94:;
	};
}



inline jule::Bool _1a76938c6_check_type_with_refers(jule::Ptr<_1a768cc22_Sema> _self_, jule::Ptr<_1a772b772_TypeSymbol>& _64547_t, jule::Trait<_1a7741e19_Lookup> _64613_l, jule::Ptr<_1a7734aee_Referencer> _64628_referencer) {
	jule::Bool _64655_ok = jule::Bool();
	if (_1a772bb6d_checked(_64547_t.ptr())) {
		_64655_ok = true;
		return _64655_ok;
	};
	_1a7735847_TypeChecker _65017_tc = _1a7735847_TypeChecker{._field_s=_self_, ._field_lookup=_64613_l, ._field_referencer=_64628_referencer, };;
	if (((_64628_referencer != nullptr) && (_64628_referencer.get()._field_refs != nullptr))) {
		_65017_tc._field_owner_alias=_64628_referencer.get()._field_owner.operator jule::Ptr<_1a7726b9b_TypeAlias>();
	};
	_1a773c464_check(&_65017_tc, _64547_t);
	_64655_ok = _1a772bb6d_checked(_64547_t.ptr());
	return _64655_ok;
}



inline jule::Bool _1a7693c7d_check_type(jule::Ptr<_1a768cc22_Sema> _self_, jule::Ptr<_1a772b772_TypeSymbol>& _66935_t, jule::Trait<_1a7741e19_Lookup> _66955_l) {
	return _1a76938c6_check_type_with_refers(_self_, _66935_t,_66955_l,nullptr);
}



inline jule::Ptr<_1a77278d3_TypeKind> _1a7694201_build_type_with_generics(jule::Ptr<_1a768cc22_Sema> _self_, jule::Ptr<_1a68529cb_TypeDecl>& _67549_t, jule::Slice<jule::Ptr<_1a7726b9b_TypeAlias>> _67613_generics, jule::Ptr<_1a6875988_ReferenceStack> _67641_refers) {
	jule::Ptr<_1a7735847_TypeChecker> _67717_tc = jule::new_ptr<_1a7735847_TypeChecker>(_1a7735847_TypeChecker{._field_s=_self_, ._field_lookup=jule::Trait<_1a7741e19_Lookup>(_self_, 3), ._field_refers=_67641_refers, ._field_use_generics=_67613_generics, });;
	return _1a773c1de_check_decl(_67717_tc.ptr(), _67549_t);
}



inline jule::Ptr<_1a77278d3_TypeKind> _1a7694520_build_type(jule::Ptr<_1a768cc22_Sema> _self_, jule::Ptr<_1a68529cb_TypeDecl>& _68735_t) {
	return _1a7694201_build_type_with_generics(_self_, _68735_t,nullptr,nullptr);
}



inline jule::Ptr<_1a77278d3_TypeKind> _1a769482d_select_type(jule::Ptr<_1a768cc22_Sema> _self_, jule::Ptr<_1a68529cb_TypeDecl>& _69236_t) {
	jule::Ptr<_1a7735847_TypeChecker> _69317_tc = jule::new_ptr<_1a7735847_TypeChecker>(_1a7735847_TypeChecker{._field_s=_self_, ._field_lookup=jule::Trait<_1a7741e19_Lookup>(_self_, 3), ._field_selection=true, });;
	return _1a773c1de_check_decl(_69317_tc.ptr(), _69236_t);
}



inline jule::Ptr<_1a7700922_Eval> _1a7694c7e_evalpd(jule::Ptr<_1a768cc22_Sema> _self_, jule::Trait<_1a7741e19_Lookup> _70330_l, jule::Ptr<_1a77278d3_TypeKind> _70345_p, jule::Ptr<_1a76a7720_Var> _70363_owner) {
	jule::Ptr<_1a7700922_Eval> _70417_e = jule::new_ptr<_1a7700922_Eval>(_1a7700922_Eval{._field_s=_self_, ._field_lookup=_70330_l, ._field_owner=_70363_owner, });;
	{
		auto &_match_expr{ _70330_l };
		
		if (_match_expr.type_is<jule::Ptr<_1a766e374_ScopeChecker>>()) {
			_case_begin_1a9a516cc:;
			{
				_70417_e.get()._field_unsafety=_1a7670991_is_unsafe(_70330_l.operator jule::Ptr<_1a766e374_ScopeChecker>());
			}
		}
		_match_end_1a9a51655:;
	};
	_70417_e.get()._field_prefix=_70345_p;
	return _70417_e;
}



inline jule::Ptr<_1a7700922_Eval> _1a7695136_evalp(jule::Ptr<_1a768cc22_Sema> _self_, jule::Trait<_1a7741e19_Lookup> _72129_l, jule::Ptr<_1a77278d3_TypeKind> _72144_p) {
	return _1a7694c7e_evalpd(_self_, _72129_l,_72144_p,nullptr);
}



inline jule::Ptr<_1a7700922_Eval> _1a7695444_eval(jule::Ptr<_1a768cc22_Sema> _self_, jule::Trait<_1a7741e19_Lookup> _72628_l) {
	return _1a7695136_evalp(_self_, _72628_l,nullptr);
}



inline jule::Bool _1a769593e_check_assign_type(jule::Ptr<_1a768cc22_Sema> _self_, jule::Bool _73037_dest_is_ref, jule::Ptr<_1a77278d3_TypeKind>& _73061_dest, jule::Ptr<_1a76edda4_Data>& _73114_d, jule::Ptr<_1a527737a_Token> _73128_error_token) {
	if (_73114_d.get()._field_decl) {
		_1a769063c_push_err(_self_.ptr(), _73128_error_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return false;
	};
	if (_73037_dest_is_ref) {
		if ((!(_1a7728098_equals(_73061_dest, _73114_d.get()._field_kind)))) {
			_1a769063c_push_err(_self_.ptr(), _73128_error_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1a7727c8a_to_str(_73061_dest.ptr())),jule::Any(_1a7727c8a_to_str(_73114_d.get()._field_kind.ptr()))}));
			return false;
		};
	} else {
		jule::Ptr<_1a76db4ac_AssignTypeChecker> _74221_atc = jule::new_ptr<_1a76db4ac_AssignTypeChecker>(_1a76db4ac_AssignTypeChecker{._field_s=_self_, ._field_dest=_73061_dest, ._field_d=_73114_d, ._field_error_token=_73128_error_token});;
		jule::Bool _74817_ok = _1a76dc634_check(_74221_atc.ptr());;
		if ((!(_74817_ok))) {
			return false;
		};
	};
	if (((!(_1a76ee767_is_const(_73114_d.ptr()))) || (_1a7729990_prim(_73061_dest.ptr()) == nullptr))) {
		return true;
	};
	jule::Str _75817_kind = _1a7729990_prim(_73061_dest.ptr()).get()._field_kind;;
	{
		
		if (_1a766b849_is_sig_int(_75817_kind)) {
			_case_begin_1a9a5843c:;
			{
				_1a75c593a_set_i64(_73114_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1a75c51dc_as_i64(_73114_d.get()._field_constant.ptr())));
			}
		}
		else if (_1a766bb35_is_unsig_int(_75817_kind)) {
			_case_begin_1a9a584b4:;
			{
				_1a75c5bb0_set_u64(_73114_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1a75c5451_as_u64(_73114_d.get()._field_constant.ptr())));
			}
		}
		else if (_1a766c1b8_is_float(_75817_kind)) {
			_case_begin_1a9a5853b:;
			{
				_1a75c6430_set_f64(_73114_d.get()._field_constant.ptr(), static_cast<jule::F64>(_1a75c56b5_as_f64(_73114_d.get()._field_constant.ptr())));
			}
		}
		_match_end_1a9a58360:;
	};
	return true;
}



inline jule::Bool _1a7695db2_check_type_compatibility(jule::Ptr<_1a768cc22_Sema> _self_, jule::Ptr<_1a77278d3_TypeKind>& _77249_dest, jule::Ptr<_1a77278d3_TypeKind>& _77314_src, jule::Ptr<_1a527737a_Token>& _77335_error_token) {
	if ((_77314_src == nullptr)) {
		_1a769063c_push_err(_self_.ptr(), _77335_error_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1a7727c8a_to_str(_77249_dest.ptr())),jule::Any(_1a7727c8a_to_str(_77314_src.ptr()))}));
		return false;
	};
	if ((_1a772b3ba_tup(_77314_src.ptr()) != nullptr)) {
		_1a769063c_push_err(_self_.ptr(), _77335_error_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1a7727c8a_to_str(_77249_dest.ptr())),jule::Any(_1a7727c8a_to_str(_77314_src.ptr()))}));
		return false;
	};
	_1a76da104_TypeCompatibilityChecker _78717_tcc = _1a76da104_TypeCompatibilityChecker{._field_s=_self_, ._field_dest=_77249_dest, ._field_src=_77314_src, ._field_error_token=_77335_error_token};;
	if (_1a76dae6d_check(&_78717_tcc)) {
		return true;
	};
	_1a769063c_push_err(_self_.ptr(), _77335_error_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1a7727c8a_to_str(_77249_dest.ptr())),jule::Any(_1a7727c8a_to_str(_77314_src.ptr()))}));
	return false;
}



inline jule::Ptr<_1a77278d3_TypeKind> _1a769629c_build_non_generic_type_kind(jule::Ptr<_1a768cc22_Sema> _self_, jule::Ptr<_1a68529cb_TypeDecl>& _80852_ast, jule::Slice<jule::Ptr<_1a685d960_GenericDecl>>& _80914_generics) {
	jule::Ptr<_1a7735847_TypeChecker> _81017_tc = jule::new_ptr<_1a7735847_TypeChecker>(_1a7735847_TypeChecker{._field_s=_self_, ._field_lookup=jule::Trait<_1a7741e19_Lookup>(_self_, 3), ._field_ignore_generics=_80914_generics, });;
	return _1a773c1de_check_decl(_81017_tc.ptr(), _80852_ast);
}



inline void _1a7696555_build_fn_non_generic_type_kinds(jule::Ptr<_1a768cc22_Sema> _self_, jule::Ptr<_1a6872c93_FnIns>& _81856_f) {
	jule::Slice<jule::Ptr<_1a685d960_GenericDecl>> _81917_generics = nullptr;;
	if (_1a684ce27_is_method(_81856_f.get()._field_decl.ptr())) {
		_81917_generics=jule::append(_81856_f.get()._field_decl.get()._field_generics,_81856_f.get()._field_decl.get()._field_owner.get()._field_generics);
	} else {
		_81917_generics=_81856_f.get()._field_decl.get()._field_generics;
	};
	{
		auto &expr = _81856_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1a9a6307e:;
		if (it != expr.end()) {
			jule::Ptr<_1a6871e07_ParamIns> _82621_p = *it;
			{
				if ((!(_1a68491ed_is_self(_82621_p.get()._field_decl.ptr())))) {
					_82621_p.get()._field_kind=_1a769629c_build_non_generic_type_kind(_self_, _82621_p.get()._field_decl.get()._field_kind.get()._field_decl,_81917_generics);
				};
			}
			_iter_next_1a9a6307e:;
			++it;
			goto _iter_begin_1a9a6307e;
		}
		_iter_end_1a9a6307e:;
	};
	if ((!(_1a6847eee_is_void(_81856_f.get()._field_decl.ptr())))) {
		_81856_f.get()._field_result=_1a769629c_build_non_generic_type_kind(_self_, _81856_f.get()._field_decl.get()._field_result.get()._field_kind.get()._field_decl,_81917_generics);
	};
}



inline jule::Ptr<_1a6872c93_FnIns> _1a7696896_get_trait_check_fn_kind(jule::Ptr<_1a768cc22_Sema> _self_, jule::Ptr<_1a68709c7_Fn>& _83648_f) {
	if ((_83648_f.get()._field_instances.len() == 1LL)) {
		return _83648_f.get()._field_instances[0LL];
	};
	jule::Ptr<_1a6872c93_FnIns> _84017_ins = _1a68714cd_instance_force(_83648_f);;
	jule::Ptr<_1a7735847_TypeChecker> _84217_tc = jule::new_ptr<_1a7735847_TypeChecker>(_1a7735847_TypeChecker{._field_s=_self_, ._field_lookup=jule::Trait<_1a7741e19_Lookup>(_self_, 3), });;
	{
		auto &expr = _84017_ins.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1a9a67b33:;
		if (it != expr.end()) {
			jule::Ptr<_1a6871e07_ParamIns> _84621_p = *it;
			{
				if ((!(_1a68491ed_is_self(_84621_p.get()._field_decl.ptr())))) {
					_84621_p.get()._field_kind=_1a773c1de_check_decl(_84217_tc.ptr(), _84621_p.get()._field_decl.get()._field_kind.get()._field_decl);
				};
			}
			_iter_next_1a9a67b33:;
			++it;
			goto _iter_begin_1a9a67b33;
		}
		_iter_end_1a9a67b33:;
	};
	if ((!(_1a6847eee_is_void(_83648_f.ptr())))) {
		_84017_ins.get()._field_result=_1a773c1de_check_decl(_84217_tc.ptr(), _83648_f.get()._field_result.get()._field_kind.get()._field_decl);
	};
	return _84017_ins;
}



inline jule::Bool _1a7696bb5_reload_fn_ins_types(jule::Ptr<_1a768cc22_Sema> _self_, jule::Ptr<_1a6872c93_FnIns>& _85844_f) {
	jule::Bool _85857_ok = jule::Bool();
	if ((_1a6873a1e_is_builtin(_85844_f.ptr()) || _1a6873c83_is_anon(_85844_f.ptr()))) {
		_85857_ok = true;
		return _85857_ok;
	};
	jule::Ptr<_1a768cc22_Sema> _86317_sema = _85844_f.get()._field_decl.get()._field_sema;;
	jule::Ptr<_1a76e8e26_SymbolTable> _86517_old = _85844_f.get()._field_decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_1a7690274_set_current_file(_85844_f.get()._field_decl.get()._field_sema.ptr(), _86517_old);
	});;
	jule::Ptr<_1a76e8e26_SymbolTable> _86717_file = _1a768c3a3_find_file(_85844_f.get()._field_decl.get()._field_sema.get()._field_files,_85844_f.get()._field_decl.get()._field_token.get()._field_file);;
	if ((_86717_file != nullptr)) {
		_1a7690274_set_current_file(_85844_f.get()._field_decl.get()._field_sema.ptr(), _86717_file);
	};
	jule::I64 _87217_size = _85844_f.get()._field_generics.len();;
	if (((_85844_f.get()._field_decl != nullptr) && (_85844_f.get()._field_decl.get()._field_owner != nullptr))) {
		_87217_size+=_85844_f.get()._field_decl.get()._field_owner.get()._field_generics.len();
	};
	jule::Slice<jule::Ptr<_1a7726b9b_TypeAlias>> _87717_generics = jule::Slice<jule::Ptr<_1a7726b9b_TypeAlias>>::alloc(0LL,_87217_size);;
	{
		auto &expr = _85844_f.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1a9a6ede3:;
		if (it != expr.end()) {
			jule::I64 _87914_i = it - expr.begin();
			jule::Ptr<_1a77278d3_TypeKind> _87921_g = *it;
			{
				_87717_generics = jule::alloc_for_append(_87717_generics,1);_87717_generics.__push(jule::new_ptr<_1a7726b9b_TypeAlias>(_1a7726b9b_TypeAlias{._field_ident=_85844_f.get()._field_decl.get()._field_generics[_87914_i].get()._field_ident, ._field_kind=jule::new_ptr<_1a772b772_TypeSymbol>(_1a772b772_TypeSymbol{._field_kind=_87921_g}), }));;
			}
			_iter_next_1a9a6ede3:;
			++it;
			_87914_i++;
			goto _iter_begin_1a9a6ede3;
		}
		_iter_end_1a9a6ede3:;
	};
	if (((_85844_f.get()._field_decl != nullptr) && (_85844_f.get()._field_decl.get()._field_owner != nullptr))) {
		jule::Ptr<_1a6836a48_StructIns> _88921_owner = _85844_f.get()._field_owner;;
		{
			auto &expr = _88921_owner.get()._field_generics;
			auto it = expr.begin();
			_iter_begin_1a9a71a82:;
			if (it != expr.end()) {
				jule::I64 _89018_i = it - expr.begin();
				jule::Ptr<_1a77278d3_TypeKind> _89025_g = *it;
				{
					_87717_generics = jule::alloc_for_append(_87717_generics,1);_87717_generics.__push(jule::new_ptr<_1a7726b9b_TypeAlias>(_1a7726b9b_TypeAlias{._field_ident=_88921_owner.get()._field_decl.get()._field_generics[_89018_i].get()._field_ident, ._field_kind=jule::new_ptr<_1a772b772_TypeSymbol>(_1a772b772_TypeSymbol{._field_kind=_89025_g}), }));;
				}
				_iter_next_1a9a71a82:;
				++it;
				_89018_i++;
				goto _iter_begin_1a9a71a82;
			}
			_iter_end_1a9a71a82:;
		};
	};
	_85857_ok=true;
	{
		auto &expr = _85844_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1a9a733e1:;
		if (it != expr.end()) {
			jule::Ptr<_1a6871e07_ParamIns> _90121_p = *it;
			{
				if (_1a68491ed_is_self(_90121_p.get()._field_decl.ptr())) {
					if (_1a6831ba8_is_ref(_90121_p.get()._field_decl.ptr())) {
						_90121_p.get()._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(jule::new_ptr<_1a7730644_Sptr>(_1a7730644_Sptr{._field_elem=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_85844_f.get()._field_owner, 0)})}), 6)});
					} else {
						_90121_p.get()._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_85844_f.get()._field_owner, 0)});
					};
				} else {
					_90121_p.get()._field_kind=_1a7694201_build_type_with_generics(_86317_sema, _90121_p.get()._field_decl.get()._field_kind.get()._field_decl,_87717_generics,_85844_f.get()._field_refers);
					if ((_90121_p.get()._field_kind != nullptr)) {
						_90121_p.get()._field_kind.get()._field_variadic=_90121_p.get()._field_decl.get()._field_variadic;
						if ((_90121_p.get()._field_decl.get()._field_reference && (!(_1a773db6e_is_valid_for_ref(_90121_p.get()._field_kind))))) {
							_1a769063c_push_err(_self_.ptr(), _90121_p.get()._field_decl.get()._field_token,jule::Str("references cannot points to type @", 34),jule::Slice<jule::Any>::make({jule::Any(_1a7727c8a_to_str(_90121_p.get()._field_kind.ptr()))}));
						};
					} else {
						_85857_ok=false;
					};
				};
			}
			_iter_next_1a9a733e1:;
			++it;
			goto _iter_begin_1a9a733e1;
		}
		_iter_end_1a9a733e1:;
	};
	if ((!(_1a6847eee_is_void(_85844_f.get()._field_decl.ptr())))) {
		_85844_f.get()._field_result=_1a7694201_build_type_with_generics(_86317_sema, _85844_f.get()._field_decl.get()._field_result.get()._field_kind.get()._field_decl,_87717_generics,_85844_f.get()._field_refers);
		_85857_ok=((_85844_f.get()._field_result != nullptr) && _85857_ok);
	};
	if ((_86317_sema != _self_)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_86317_sema.get()._field_errors);
		_86317_sema.get()._field_errors=nullptr;
	};
	return _85857_ok;
}



inline jule::Bool _1a7697149_check_ref_validity_for_init_expr(jule::Ptr<_1a768cc22_Sema> _self_, jule::Bool _94252_left_mut, jule::Ptr<_1a76edda4_Data>& _94273_d, jule::Ptr<_1a527737a_Token>& _94288_error_token) {
	{
		auto &_match_expr{ _94273_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1a76a7720_Var>>()) {
			_case_begin_1a9a7b905:;
			{
				goto _match_end_1a9a7ad99;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a686c210_TraitSubIdentExprModel>>()) {
			_case_begin_1a9a7b96b:;
			{
				jule::Ptr<_1a686c210_TraitSubIdentExprModel> _94721_model = _94273_d.get()._field_model.operator jule::Ptr<_1a686c210_TraitSubIdentExprModel>();;
				if ((!(_1a768adda_is_valid_model_for_ref(_94721_model.get()._field_expr)))) {
					_1a769063c_push_err(_self_.ptr(), _94288_error_token,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>::make({jule::Any(_94721_model.get()._field_method.get()._field_ident)}));
					return false;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a686c62d_StructSubIdentExprModel>>()) {
			_case_begin_1a9a7b9e3:;
			{
				jule::Ptr<_1a686c62d_StructSubIdentExprModel> _95321_model = _94273_d.get()._field_model.operator jule::Ptr<_1a686c62d_StructSubIdentExprModel>();;
				if ((!(_1a768adda_is_valid_model_for_ref(_95321_model.get()._field_expr.get()._field_model)))) {
					_1a769063c_push_err(_self_.ptr(), _94288_error_token,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>::make({jule::Any(_95321_model.get()._field_field.get()._field_decl.get()._field_ident)}));
					return false;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a686cbe4_CommonIdentExprModel>>() || _match_expr.type_is<jule::Ptr<_1a686cdd1_CommonSubIdentExprModel>>()) {
			_case_begin_1a9a7ba59:;
			{
				_1a769063c_push_err(_self_.ptr(), _94288_error_token,jule::Str("built-in defines cannot pass to references", 42),jule::Slice<jule::Any>());
				return false;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6849e79_UnaryExprModel>>()) {
			_case_begin_1a9a7bb14:;
			{
				jule::Ptr<_1a6849e79_UnaryExprModel> _96321_unary = _94273_d.get()._field_model.operator jule::Ptr<_1a6849e79_UnaryExprModel>();;
				if ((_96321_unary.get()._field_op.get()._field_kind == jule::Str("*", 1))) {
					if ((!(_1a768adda_is_valid_model_for_ref(_94273_d.get()._field_model)))) {
						_1a769063c_push_err(_self_.ptr(), _94288_error_token,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>::make({jule::Any(jule::Str("address from * &T", 17))}));
						return false;
					};
					goto _match_end_1a9a7ad99;
				};
				goto _case_begin_1a9a7adee;
			}
		}
		else {
			_case_begin_1a9a7adee:;
			{
				_1a769063c_push_err(_self_.ptr(), _94288_error_token,jule::Str("references requires variable for assignment", 43),jule::Slice<jule::Any>());
				return false;
			}
		}
		_match_end_1a9a7ad99:;
	};
	if ((_94252_left_mut && (!(_94273_d.get()._field_mutable)))) {
		_1a769063c_push_err(_self_.ptr(), _94288_error_token,jule::Str("mutable reference cannot point to immutable data", 48),jule::Slice<jule::Any>());
		return false;
	};
	return true;
}



inline jule::Bool _1a7697743_check_validity_for_init_expr(jule::Ptr<_1a768cc22_Sema> _self_, jule::Bool _98448_left_mut, jule::Bool _98464_left_ref, jule::Ptr<_1a77278d3_TypeKind>& _98510_left_kind, jule::Ptr<_1a76edda4_Data>& _98537_d, jule::Ptr<_1a527737a_Token>& _98552_error_token) {
	if (((_98448_left_mut && (!(_98537_d.get()._field_mutable))) && _1a7728c7a_mutable(_98537_d.get()._field_kind.ptr()))) {
		_1a769063c_push_err(_self_.ptr(), _98552_error_token,jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82),jule::Slice<jule::Any>::make({jule::Any(_1a7727c8a_to_str(_98537_d.get()._field_kind.ptr()))}));
		return false;
	};
	if (_98464_left_ref) {
		if ((!(_1a7697149_check_ref_validity_for_init_expr(_self_, _98448_left_mut,_98537_d,_98552_error_token)))) {
			return false;
		};
	};
	jule::Ptr<_1a76db4ac_AssignTypeChecker> _99617_atc = jule::new_ptr<_1a76db4ac_AssignTypeChecker>(_1a76db4ac_AssignTypeChecker{._field_s=_self_, ._field_d=_98537_d, ._field_error_token=_98552_error_token});;
	return _1a76dbb83_check_validity(_99617_atc.ptr());
}



inline jule::Bool _1a7697aea_check_type_alias_decl_kind(jule::Ptr<_1a768cc22_Sema> _self_, jule::Ptr<_1a7726b9b_TypeAlias>& _100451_ta, jule::Trait<_1a7741e19_Lookup> _100471_l) {
	jule::Bool _100484_ok = jule::Bool();
	jule::Ptr<_1a76e8e26_SymbolTable> _100517_old = _self_.get()._field_file;;
	__JULE_DEFER({
		_1a7690274_set_current_file(_self_.ptr(), _100517_old);
	});;
	if ((_100451_ta.get()._field_token != nullptr)) {
		jule::Ptr<_1a76e8e26_SymbolTable> _101021_file = _1a768c3a3_find_file(_self_.get()._field_files,_100451_ta.get()._field_token.get()._field_file);;
		if ((_101021_file != nullptr)) {
			_1a7690274_set_current_file(_self_.ptr(), _101021_file);
		};
	};
	_100484_ok=_1a76938c6_check_type_with_refers(_self_, _100451_ta.get()._field_kind,_100471_l,jule::new_ptr<_1a7734aee_Referencer>(_1a7734aee_Referencer{._field_ident=_100451_ta.get()._field_ident, ._field_owner=jule::Any(_100451_ta), ._field_refs=(&(_100451_ta.get()._field_refers))}));
	if (((_100484_ok && (_1a772a441_arr(_100451_ta.get()._field_kind.get()._field_kind.ptr()) != nullptr)) && _1a772a441_arr(_100451_ta.get()._field_kind.get()._field_kind.ptr()).get()._field_auto)) {
		_1a769063c_push_err(_self_.ptr(), _100451_ta.get()._field_kind.get()._field_decl.get()._field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
		_100484_ok=false;
	};
	return _100484_ok;
}



inline void _1a7697e2a_check_type_alias_decl(jule::Ptr<_1a768cc22_Sema> _self_, jule::Ptr<_1a7726b9b_TypeAlias>& _102746_ta, jule::Trait<_1a7741e19_Lookup> _102766_l) {
	if (_1a5279aca_is_ignore_ident(_102746_ta.get()._field_ident)) {
		_1a769063c_push_err(_self_.ptr(), _102746_ta.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	_1a7697aea_check_type_alias_decl_kind(_self_, _102746_ta,_102766_l);
}



inline void _1a76981c2_check_type_alias_decl_dup(jule::Ptr<_1a768cc22_Sema> _self_, jule::Ptr<_1a7726b9b_TypeAlias>& _103550_ta) {
	if (_1a7691264_is_duplicated_ident(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_103550_ta)),_103550_ta.get()._field_ident,_103550_ta.get()._field_cpp_linked)) {
		_1a769063c_push_err(_self_.ptr(), _103550_ta.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_103550_ta.get()._field_ident)}));
		_1a769095b_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	_1a7697aea_check_type_alias_decl_kind(_self_, _103550_ta,jule::Trait<_1a7741e19_Lookup>(_self_, 3));
}



inline jule::Bool _1a7698447_check_type_alias_decls(jule::Ptr<_1a768cc22_Sema> _self_) {
	jule::Bool _104444_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_type_aliases;
		auto it = expr.begin();
		_iter_begin_1a9a966ab:;
		if (it != expr.end()) {
			jule::Ptr<_1a7726b9b_TypeAlias> _104521_ta = *it;
			{
				_1a76981c2_check_type_alias_decl_dup(_self_, _104521_ta);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_104444_ok = false;
					return _104444_ok;
				};
			}
			_iter_next_1a9a966ab:;
			++it;
			goto _iter_begin_1a9a966ab;
		}
		_iter_end_1a9a966ab:;
	};
	_104444_ok = true;
	return _104444_ok;
}



inline void _1a76986bc_check_enum_items_dup(_1a768cc22_Sema* _self_, jule::Ptr<_1a6982435_Enum> _105639_e) {
	{
		auto &expr = _105639_e.get()._field_items;
		auto it = expr.begin();
		_iter_begin_1a9a98180:;
		if (it != expr.end()) {
			jule::Ptr<_1a693b6b9_EnumItem> &_105716_item = *it;
			{
				if (_1a5279aca_is_ignore_ident(_105716_item.get()._field_ident)) {
					_1a769063c_push_err(&(*_self_), _105716_item.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
				} else {
					{
						auto &expr = _105639_e.get()._field_items;
						auto it = expr.begin();
						_iter_begin_1a9a99879:;
						if (it != expr.end()) {
							jule::Ptr<_1a693b6b9_EnumItem> &_106124_citem = *it;
							{
								if ((_105716_item == _106124_citem)) {
									goto _iter_end_1a9a99879;
								} else if ((_105716_item.get()._field_ident == _106124_citem.get()._field_ident)) {
									_1a769063c_push_err(&(*_self_), _105716_item.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_105716_item.get()._field_ident)}));
									_1a769095b_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
									goto _iter_end_1a9a99879;
								};
							}
							_iter_next_1a9a99879:;
							++it;
							goto _iter_begin_1a9a99879;
						}
						_iter_end_1a9a99879:;
					};
				};
			}
			_iter_next_1a9a98180:;
			++it;
			goto _iter_begin_1a9a98180;
		}
		_iter_end_1a9a98180:;
	};
}



inline void _1a7698942_check_enum_items_str(jule::Ptr<_1a768cc22_Sema> _self_, jule::Ptr<_1a6982435_Enum>& _107445_e) {
	{
		auto &expr = _107445_e.get()._field_items;
		auto it = expr.begin();
		_iter_begin_1a9a9b7d2:;
		if (it != expr.end()) {
			jule::Ptr<_1a693b6b9_EnumItem> _107521_item = *it;
			{
				if (_1a6933ccc_auto_expr(_107521_item.ptr())) {
					_107521_item.get()._field_value=jule::new_ptr<_1a76eee2c_Value>(_1a76eee2c_Value{._field_data=jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_constant=static__1a75c3938_new_str(_107521_item.get()._field_ident)})});
					_107521_item.get()._field_value.get()._field_data.get()._field_model=jule::Any(_107521_item.get()._field_value.get()._field_data.get()._field_constant);
				} else {
					jule::Ptr<_1a76edda4_Data> _108425_d = _1a771982b_eval_expr(_1a7695444_eval(_self_, jule::Trait<_1a7741e19_Lookup>(_self_, 3)), _107521_item.get()._field_value.get()._field_expr);;
					if ((_108425_d == nullptr)) {
						goto _iter_next_1a9a9b7d2;
					};
					if ((!(_1a76ee767_is_const(_108425_d.ptr())))) {
						_1a769063c_push_err(_self_.ptr(), _107521_item.get()._field_value.get()._field_expr.get()._field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
					};
					_1a769593e_check_assign_type(_self_, false,_107445_e.get()._field_kind.get()._field_kind,_108425_d,_107521_item.get()._field_token);
					_107521_item.get()._field_value.get()._field_data=_108425_d;
				};
			}
			_iter_next_1a9a9b7d2:;
			++it;
			goto _iter_begin_1a9a9b7d2;
		}
		_iter_end_1a9a9b7d2:;
	};
}



inline void _1a7698bb7_check_enum_items_int(jule::Ptr<_1a768cc22_Sema> _self_, jule::Ptr<_1a6982435_Enum>& _109945_e) {
	jule::Ptr<_1a772c135_Prim> _110013_prim = _1a7729990_prim(_109945_e.get()._field_kind.get()._field_kind.ptr());;
	jule::U64 _110117_max = static_cast<jule::U64>(_1a7666932_max(_1a772c498_to_str(_110013_prim.ptr())));;
	{
		auto &expr = _109945_e.get()._field_items;
		auto it = expr.begin();
		_iter_begin_1a9aa282c:;
		if (it != expr.end()) {
			jule::I64 _110214_i = it - expr.begin();
			jule::Ptr<_1a693b6b9_EnumItem> _110221_item = *it;
			{
				if ((_110117_max == 0LLU)) {
					_1a769063c_push_err(_self_.ptr(), _110221_item.get()._field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
				} else {
					(_110117_max)--;
				};
				if (_1a6933ccc_auto_expr(_110221_item.ptr())) {
					_110221_item.get()._field_value=jule::new_ptr<_1a76eee2c_Value>(_1a76eee2c_Value{._field_data=jule::new_ptr<_1a76edda4_Data>()});
					{
						
						if (_1a766b849_is_sig_int(_1a772c498_to_str(_110013_prim.ptr()))) {
							_case_begin_1a9aa4cc4:;
							{
								_110221_item.get()._field_value.get()._field_data.get()._field_constant=static__1a75c2250_new_i64(static_cast<jule::I64>(static_cast<jule::I64>((_110117_max - (_110117_max - static_cast<jule::U64>(_110214_i))))));
							}
						}
						else {
							_case_begin_1a9aa4961:;
							{
								_110221_item.get()._field_value.get()._field_data.get()._field_constant=static__1a75c343d_new_u64(static_cast<jule::U64>((_110117_max - (_110117_max - static_cast<jule::U64>(_110214_i)))));
							}
						}
						_match_end_1a9aa490b:;
					};
					_110221_item.get()._field_value.get()._field_data.get()._field_model=jule::Any(_110221_item.get()._field_value.get()._field_data.get()._field_constant);
				} else {
					jule::Ptr<_1a76edda4_Data> _112025_d = _1a771982b_eval_expr(_1a7695444_eval(_self_, jule::Trait<_1a7741e19_Lookup>(_self_, 3)), _110221_item.get()._field_value.get()._field_expr);;
					if ((_112025_d == nullptr)) {
						goto _iter_next_1a9aa282c;
					};
					if ((!(_1a76ee767_is_const(_112025_d.ptr())))) {
						_1a769063c_push_err(_self_.ptr(), _110221_item.get()._field_value.get()._field_expr.get()._field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
					};
					_1a769593e_check_assign_type(_self_, false,_109945_e.get()._field_kind.get()._field_kind,_112025_d,_110221_item.get()._field_token);
					_110221_item.get()._field_value.get()._field_data=_112025_d;
				};
			}
			_iter_next_1a9aa282c:;
			++it;
			_110214_i++;
			goto _iter_begin_1a9aa282c;
		}
		_iter_end_1a9aa282c:;
	};
}



inline void _1a7698e3c_check_enum_decl(jule::Ptr<_1a768cc22_Sema> _self_, jule::Ptr<_1a6982435_Enum>& _113540_e) {
	if (_1a5279aca_is_ignore_ident(_113540_e.get()._field_ident)) {
		_1a769063c_push_err(_self_.ptr(), _113540_e.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_1a7691264_is_duplicated_ident(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_113540_e)),_113540_e.get()._field_ident,false)) {
		_1a769063c_push_err(_self_.ptr(), _113540_e.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_113540_e.get()._field_ident)}));
		_1a769095b_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((_113540_e.get()._field_items.len() == 0LL)) {
		_1a769063c_push_err(_self_.ptr(), _113540_e.get()._field_token,jule::Str("enum @ have no field", 20),jule::Slice<jule::Any>::make({jule::Any(_113540_e.get()._field_ident)}));
	};
	_1a76986bc_check_enum_items_dup(_self_.ptr(), _113540_e);
	if ((_113540_e.get()._field_kind != nullptr)) {
		if ((!(_1a7693c7d_check_type(_self_, _113540_e.get()._field_kind,jule::Trait<_1a7741e19_Lookup>(_self_, 3))))) {
			return;;
		};
	} else {
		_113540_e.get()._field_kind=jule::new_ptr<_1a772b772_TypeSymbol>(_1a772b772_TypeSymbol{._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_1a773e554_build_prim_type(jule::Str("int", 3)), 5)})});
	};
	jule::Ptr<_1a772c135_Prim> _116217_t = _1a7729990_prim(_113540_e.get()._field_kind.get()._field_kind.ptr());;
	if ((_116217_t == nullptr)) {
		_1a769063c_push_err(_self_.ptr(), _113540_e.get()._field_token,jule::Str("invalid type source", 19),jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if (_1a77300e4_is_str(_116217_t.ptr())) {
			_case_begin_1a9ab0ad2:;
			{
				_1a7698942_check_enum_items_str(_self_, _113540_e);
			}
		}
		else if (_1a766bdcc_is_int(_1a772c498_to_str(_116217_t.ptr()))) {
			_case_begin_1a9ab084b:;
			{
				_1a7698bb7_check_enum_items_int(_self_, _113540_e);
			}
		}
		else {
			_case_begin_1a9aaebe1:;
			{
				_1a769063c_push_err(_self_.ptr(), _113540_e.get()._field_token,jule::Str("invalid type source", 19),jule::Slice<jule::Any>());
			}
		}
		_match_end_1a9aaeb47:;
	};
}



inline jule::Bool _1a76991a1_check_enum_decls(jule::Ptr<_1a768cc22_Sema> _self_) {
	jule::Bool _118038_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_enums;
		auto it = expr.begin();
		_iter_begin_1a9ab2c27:;
		if (it != expr.end()) {
			jule::Ptr<_1a6982435_Enum> _118121_e = *it;
			{
				_1a7698e3c_check_enum_decl(_self_, _118121_e);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_118038_ok = false;
					return _118038_ok;
				};
			}
			_iter_next_1a9ab2c27:;
			++it;
			goto _iter_begin_1a9ab2c27;
		}
		_iter_end_1a9ab2c27:;
	};
	_118038_ok = true;
	return _118038_ok;
}



inline jule::Bool _1a76994ae_check_decl_generics(_1a768cc22_Sema* _self_, jule::Slice<jule::Ptr<_1a685d960_GenericDecl>>& _119239_generics) {
	jule::Bool _119272_ok = jule::Bool();
	_119272_ok=true;
	{
		auto &expr = _119239_generics;
		auto it = expr.begin();
		_iter_begin_1a9ab4a4d:;
		if (it != expr.end()) {
			jule::I64 _119413_i = it - expr.begin();
			jule::Ptr<_1a685d960_GenericDecl> &_119416_g = *it;
			{
				if (_1a5279aca_is_ignore_ident(_119416_g.get()._field_ident)) {
					_1a769063c_push_err(&(*_self_), _119416_g.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
					_119272_ok=false;
					goto _iter_next_1a9ab4a4d;
				};
				_julec_label_duplication_lookup:;
				{
					auto &expr = _119239_generics;
					auto it = expr.begin();
					_iter_begin_1a9ab5697:;
					if (it != expr.end()) {
						jule::I64 _120317_j = it - expr.begin();
						jule::Ptr<_1a685d960_GenericDecl> &_120320_ct = *it;
						{
							{
								
								if ((_120317_j >= _119413_i)) {
									_case_begin_1a9ab71c1:;
									{
										goto _iter_end_1a9ab5697;
									}
								}
								else if ((_119416_g.get()._field_ident == _120320_ct.get()._field_ident)) {
									_case_begin_1a9ab7248:;
									{
										_1a769063c_push_err(&(*_self_), _119416_g.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_119416_g.get()._field_ident)}));
										_1a769095b_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										_119272_ok=false;
										goto _iter_end_1a9ab5697;
									}
								}
								_match_end_1a9ab70b1:;
							};
						}
						_iter_next_1a9ab5697:;
						++it;
						_120317_j++;
						goto _iter_begin_1a9ab5697;
					}
					_iter_end_1a9ab5697:;
				};
			}
			_iter_next_1a9ab4a4d:;
			++it;
			_119413_i++;
			goto _iter_begin_1a9ab4a4d;
		}
		_iter_end_1a9ab4a4d:;
	};
	return _119272_ok;
}



inline jule::Bool _1a76997de_check_fn_decl_params_dup(_1a768cc22_Sema* _self_, jule::Ptr<_1a68709c7_Fn>& _121944_f) {
	jule::Bool _121954_ok = jule::Bool();
	_121954_ok=true;
	_julec_label_check:;
	{
		auto &expr = _121944_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1a9ab9ee8:;
		if (it != expr.end()) {
			jule::I64 _122213_i = it - expr.begin();
			jule::Ptr<_1a68707da_Param> &_122216_p = *it;
			{
				{
					auto &expr = _121944_f.get()._field_generics;
					auto it = expr.begin();
					_iter_begin_1a9abaaa9:;
					if (it != expr.end()) {
						jule::Ptr<_1a685d960_GenericDecl> &_122420_g = *it;
						{
							if ((_122216_p.get()._field_ident == _122420_g.get()._field_ident)) {
								_121954_ok=false;
								_1a769063c_push_err(&(*_self_), _122216_p.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_122216_p.get()._field_ident)}));
								_1a769095b_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
								goto _iter_next_1a9ab9ee8;
							};
						}
						_iter_next_1a9abaaa9:;
						++it;
						goto _iter_begin_1a9abaaa9;
					}
					_iter_end_1a9abaaa9:;
				};
				_julec_label_params_lookup:;
				{
					auto &expr = _121944_f.get()._field_params;
					auto it = expr.begin();
					_iter_begin_1a9abadea:;
					if (it != expr.end()) {
						jule::I64 _123417_j = it - expr.begin();
						jule::Ptr<_1a68707da_Param> &_123420_jp = *it;
						{
							{
								
								if ((_123417_j >= _122213_i)) {
									_case_begin_1a9abd260:;
									{
										goto _iter_end_1a9abadea;
									}
								}
								else if ((_1a5279d72_is_anon_ident(_122216_p.get()._field_ident) || _1a5279d72_is_anon_ident(_123420_jp.get()._field_ident))) {
									_case_begin_1a9abd2d7:;
									{
										goto _iter_end_1a9abadea;
									}
								}
								else if ((_122216_p.get()._field_ident == _123420_jp.get()._field_ident)) {
									_case_begin_1a9abd35e:;
									{
										_121954_ok=false;
										_1a769063c_push_err(&(*_self_), _122216_p.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_122216_p.get()._field_ident)}));
										_1a769095b_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										goto _iter_next_1a9ab9ee8;
									}
								}
								_match_end_1a9abd13e:;
							};
						}
						_iter_next_1a9abadea:;
						++it;
						_123417_j++;
						goto _iter_begin_1a9abadea;
					}
					_iter_end_1a9abadea:;
				};
			}
			_iter_next_1a9ab9ee8:;
			++it;
			_122213_i++;
			goto _iter_begin_1a9ab9ee8;
		}
		_iter_end_1a9ab9ee8:;
	};
	return _121954_ok;
}



inline jule::Bool _1a7699b30_check_fn_decl_result_dup(_1a768cc22_Sema* _self_, jule::Ptr<_1a68709c7_Fn>& _125344_f) {
	jule::Bool _125354_ok = jule::Bool();
	_125354_ok=true;
	if (_1a6847eee_is_void(_125344_f.ptr())) {
		return _125354_ok;
	};
	{
		auto &expr = _125344_f.get()._field_result.get()._field_idents;
		auto it = expr.begin();
		_iter_begin_1a9ac1bae:;
		if (it != expr.end()) {
			jule::I64 _126013_i = it - expr.begin();
			jule::Ptr<_1a527737a_Token> &_126016_v = *it;
			{
				if ((_1a5279aca_is_ignore_ident(_126016_v.get()._field_kind) || _1a5279d72_is_anon_ident(_126016_v.get()._field_kind))) {
					goto _iter_next_1a9ac1bae;
				};
				{
					auto &expr = _125344_f.get()._field_generics;
					auto it = expr.begin();
					_iter_begin_1a9ac3056:;
					if (it != expr.end()) {
						jule::Ptr<_1a685d960_GenericDecl> &_126520_g = *it;
						{
							if ((_126016_v.get()._field_kind == _126520_g.get()._field_ident)) {
								goto _julec_label_exist;
							};
						}
						_iter_next_1a9ac3056:;
						++it;
						goto _iter_begin_1a9ac3056;
					}
					_iter_end_1a9ac3056:;
				};
				{
					auto &expr = _125344_f.get()._field_params;
					auto it = expr.begin();
					_iter_begin_1a9ac4123:;
					if (it != expr.end()) {
						jule::Ptr<_1a68707da_Param> &_127120_p = *it;
						{
							if ((_126016_v.get()._field_kind == _127120_p.get()._field_ident)) {
								goto _julec_label_exist;
							};
						}
						_iter_next_1a9ac4123:;
						++it;
						goto _iter_begin_1a9ac4123;
					}
					_iter_end_1a9ac4123:;
				};
				_julec_label_itself_lookup:;
				{
					auto &expr = _125344_f.get()._field_result.get()._field_idents;
					auto it = expr.begin();
					_iter_begin_1a9ac5300:;
					if (it != expr.end()) {
						jule::I64 _127917_j = it - expr.begin();
						jule::Ptr<_1a527737a_Token> &_127920_jv = *it;
						{
							{
								
								if ((_127917_j >= _126013_i)) {
									_case_begin_1a9ac5db1:;
									{
										goto _iter_end_1a9ac5300;
									}
								}
								else if ((_127920_jv.get()._field_kind == _126016_v.get()._field_kind)) {
									_case_begin_1a9ac5e38:;
									{
										goto _julec_label_exist;
									}
								}
								_match_end_1a9ac5ca1:;
							};
						}
						_iter_next_1a9ac5300:;
						++it;
						_127917_j++;
						goto _iter_begin_1a9ac5300;
					}
					_iter_end_1a9ac5300:;
				};
				goto _iter_next_1a9ac1bae;
				_julec_label_exist:;
				_1a769063c_push_err(&(*_self_), _126016_v,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_126016_v.get()._field_kind)}));
				_1a769095b_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
				_125354_ok=false;
			}
			_iter_next_1a9ac1bae:;
			++it;
			_126013_i++;
			goto _iter_begin_1a9ac1bae;
		}
		_iter_end_1a9ac1bae:;
	};
	return _125354_ok;
}



inline void _1a7699dd8_check_fn_decl_prototype(jule::Ptr<_1a768cc22_Sema> _self_, jule::Ptr<_1a68709c7_Fn>& _130048_f) {
	if ((_130048_f.get()._field_exceptional && _130048_f.get()._field_cpp_linked)) {
		_1a769063c_push_err(_self_.ptr(), _130048_f.get()._field_token,jule::Str("cpp-linked defines cannot be exceptional", 40),jule::Slice<jule::Any>());
		return;;
	};
	if (_130048_f.get()._field_exceptional) {
		if (_1a6844209_is_entry_point(_130048_f.ptr())) {
			_1a769063c_push_err(_self_.ptr(), _130048_f.get()._field_token,jule::Str("entry point cannot be exceptional", 33),jule::Slice<jule::Any>());
		} else if (_1a6870c91_is_init(_130048_f.ptr())) {
			_1a769063c_push_err(_self_.ptr(), _130048_f.get()._field_token,jule::Str("initializer function cannot be exceptional", 42),jule::Slice<jule::Any>());
		};
	};
	{
		
		if ((!(_1a76994ae_check_decl_generics(_self_.ptr(), _130048_f.get()._field_generics)))) {
			_case_begin_1a9ac9b73:;
		}
		else if ((!(_1a76997de_check_fn_decl_params_dup(_self_.ptr(), _130048_f)))) {
			_case_begin_1a9ac9bea:;
		}
		else if ((!(_1a7699b30_check_fn_decl_result_dup(_self_.ptr(), _130048_f)))) {
			_case_begin_1a9acb339:;
		}
		_match_end_1a9ac9a52:;
	};
}



inline void _1a769a191_check_trait_decl_method(jule::Ptr<_1a768cc22_Sema> _self_, jule::Ptr<_1a68709c7_Fn>& _132148_f) {
	if (_1a5279aca_is_ignore_ident(_132148_f.get()._field_ident)) {
		_1a769063c_push_err(_self_.ptr(), _132148_f.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	_132148_f.get()._field_sema=_self_;
	_1a7699dd8_check_fn_decl_prototype(_self_, _132148_f);
	jule::Ptr<_1a6872c93_FnIns> _132817_ins = _1a6871742_instance(_132148_f);;
	_1a7696bb5_reload_fn_ins_types(_self_, _132817_ins);
	_132817_ins.get()._field_reloaded=true;
	_1a6871a50_append_instance(_132148_f.ptr(), _132817_ins);
}



inline void _1a769a449_check_trait_decl_methods(jule::Ptr<_1a768cc22_Sema> _self_, jule::Ptr<_1a68d46b7_Trait>& _133449_t) {
	{
		auto &expr = _133449_t.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1a9ad0a36:;
		if (it != expr.end()) {
			jule::I64 _133514_i = it - expr.begin();
			jule::Ptr<_1a68709c7_Fn> _133521_f = *it;
			{
				_1a769a191_check_trait_decl_method(_self_, _133521_f);
				_133449_t.get()._field_mutable=(_133449_t.get()._field_mutable || _133521_f.get()._field_params[0LL].get()._field_mutable);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					return;;
				};
				_julec_label_duplicate_lookup:;
				{
					auto &expr = _133449_t.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_1a9ad23a6:;
					if (it != expr.end()) {
						jule::I64 _134617_j = it - expr.begin();
						jule::Ptr<_1a68709c7_Fn> _134620_jf = *it;
						{
							{
								
								if ((_134617_j >= _133514_i)) {
									_case_begin_1a9ad34d9:;
									{
										goto _iter_end_1a9ad23a6;
									}
								}
								else if ((_133521_f.get()._field_ident == _134620_jf.get()._field_ident)) {
									_case_begin_1a9ad3561:;
									{
										_1a769063c_push_err(_self_.ptr(), _133521_f.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_133521_f.get()._field_ident)}));
										_1a769095b_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										goto _iter_end_1a9ad23a6;
									}
								}
								_match_end_1a9ad33c9:;
							};
						}
						_iter_next_1a9ad23a6:;
						++it;
						_134617_j++;
						goto _iter_begin_1a9ad23a6;
					}
					_iter_end_1a9ad23a6:;
				};
			}
			_iter_next_1a9ad0a36:;
			++it;
			_133514_i++;
			goto _iter_begin_1a9ad0a36;
		}
		_iter_end_1a9ad0a36:;
	};
}



inline void _1a769a6d0_check_trait_decl(jule::Ptr<_1a768cc22_Sema> _self_, jule::Ptr<_1a68d46b7_Trait>& _136541_t) {
	if (_1a5279aca_is_ignore_ident(_136541_t.get()._field_ident)) {
		_1a769063c_push_err(_self_.ptr(), _136541_t.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_1a7691264_is_duplicated_ident(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_136541_t)),_136541_t.get()._field_ident,false)) {
		_1a769063c_push_err(_self_.ptr(), _136541_t.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_136541_t.get()._field_ident)}));
		_1a769095b_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	_1a769a449_check_trait_decl_methods(_self_, _136541_t);
}



inline jule::Bool _1a769a944_check_trait_decls(jule::Ptr<_1a768cc22_Sema> _self_) {
	jule::Bool _137739_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_traits;
		auto it = expr.begin();
		_iter_begin_1a9ad8b0a:;
		if (it != expr.end()) {
			jule::Ptr<_1a68d46b7_Trait> _137821_t = *it;
			{
				_1a769a6d0_check_trait_decl(_self_, _137821_t);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_137739_ok = false;
					return _137739_ok;
				};
			}
			_iter_next_1a9ad8b0a:;
			++it;
			goto _iter_begin_1a9ad8b0a;
		}
		_iter_end_1a9ad8b0a:;
	};
	_137739_ok = true;
	return _137739_ok;
}



inline jule::Bool _1a769ad1d_check_trait_impl_methods(_1a768cc22_Sema* _self_, jule::Ptr<_1a68d46b7_Trait>& _138948_base, jule::Ptr<_1a6c31b02_Impl>& _138963_ipl) {
	jule::Bool _138977_ok = jule::Bool();
	_138977_ok=true;
	{
		auto &expr = _138963_ipl.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1a9adadc6:;
		if (it != expr.end()) {
			jule::Ptr<_1a68709c7_Fn> &_139116_f = *it;
			{
				if ((_1a6911a68_find_method(_138948_base.ptr(), _139116_f.get()._field_ident) == nullptr)) {
					_1a769063c_push_err(&(*_self_), _139116_f.get()._field_token,jule::Str("undefined identifier: trait @ has no define @", 45),jule::Slice<jule::Any>::make({jule::Any(_138948_base.get()._field_ident),jule::Any(_139116_f.get()._field_ident)}));
					_138977_ok=false;
				};
			}
			_iter_next_1a9adadc6:;
			++it;
			goto _iter_begin_1a9adadc6;
		}
		_iter_end_1a9adadc6:;
	};
	return _138977_ok;
}



inline jule::Bool _1a769b1d6_impl_to_struct(jule::Ptr<_1a768cc22_Sema> _self_, jule::Ptr<_1a6826829_Struct>& _140039_dest, jule::Ptr<_1a6c31b02_Impl>& _140059_ipl) {
	jule::Bool _140073_ok = jule::Bool();
	_140073_ok=true;
	{
		auto &expr = _140059_ipl.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1a9adda55:;
		if (it != expr.end()) {
			jule::Ptr<_1a68709c7_Fn> _140421_f = *it;
			{
				if (((_1a682ae16_find_method(_140039_dest.ptr(), _140421_f.get()._field_ident,_140421_f.get()._field_statically) != nullptr) || (_1a682d6dd_find_field(_140039_dest.ptr(), _140421_f.get()._field_ident) != nullptr))) {
					_1a769063c_push_err(_self_.ptr(), _140421_f.get()._field_token,jule::Str("identifier duplication: struct @ already have define @", 54),jule::Slice<jule::Any>::make({jule::Any(_140039_dest.get()._field_ident),jule::Any(_140421_f.get()._field_ident)}));
					_140073_ok=false;
					goto _iter_next_1a9adda55;
				};
				if (((_140039_dest.get()._field_generics.len() > 0LL) && (_140421_f.get()._field_generics.len() > 0LL))) {
					{
						auto &expr = _140421_f.get()._field_generics;
						auto it = expr.begin();
						_iter_begin_1a9ae13d7:;
						if (it != expr.end()) {
							jule::Ptr<_1a685d960_GenericDecl> _141224_fg = *it;
							{
								{
									auto &expr = _140039_dest.get()._field_generics;
									auto it = expr.begin();
									_iter_begin_1a9ae1b68:;
									if (it != expr.end()) {
										jule::Ptr<_1a685d960_GenericDecl> _141328_dg = *it;
										{
											if ((_141224_fg.get()._field_ident == _141328_dg.get()._field_ident)) {
												_1a769063c_push_err(_self_.ptr(), _141224_fg.get()._field_token,jule::Str("methods cannot have same generic identifier with owner same time", 64),jule::Slice<jule::Any>());
												_140073_ok=false;
											};
										}
										_iter_next_1a9ae1b68:;
										++it;
										goto _iter_begin_1a9ae1b68;
									}
									_iter_end_1a9ae1b68:;
								};
							}
							_iter_next_1a9ae13d7:;
							++it;
							goto _iter_begin_1a9ae13d7;
						}
						_iter_end_1a9ae13d7:;
					};
				};
				_1a7691583_check_directives(_self_, _140421_f.get()._field_directives,jule::Any(_140421_f));
				_140421_f.get()._field_sema=_self_;
				_140421_f.get()._field_owner=_140039_dest;
				_140039_dest.get()._field_methods = jule::alloc_for_append(_140039_dest.get()._field_methods,1);_140039_dest.get()._field_methods.__push(_140421_f);;
			}
			_iter_next_1a9adda55:;
			++it;
			goto _iter_begin_1a9adda55;
		}
		_iter_end_1a9adda55:;
	};
	{
		auto &expr = _140059_ipl.get()._field_statics;
		auto it = expr.begin();
		_iter_begin_1a9ae4572:;
		if (it != expr.end()) {
			jule::Ptr<_1a76a7720_Var> _142921_v = *it;
			{
				;
				if (((_1a682ae16_find_method(_140039_dest.ptr(), _142921_v.get()._field_ident,true) != nullptr) || (_1a682be6c_find_static(_140039_dest.ptr(), _142921_v.get()._field_ident) != nullptr))) {
					_1a769063c_push_err(_self_.ptr(), _142921_v.get()._field_token,jule::Str("identifier duplication: struct @ already have define @", 54),jule::Slice<jule::Any>::make({jule::Any(_140039_dest.get()._field_ident),jule::Any(_142921_v.get()._field_ident)}));
					_140073_ok=false;
					goto _iter_next_1a9ae4572;
				};
				_1a769bc75_check_var_decl(_self_, _142921_v,jule::Trait<_1a7741e19_Lookup>(_self_, 3));
				_1a76a03e9_check_type_var(_self_, _142921_v,jule::Trait<_1a7741e19_Lookup>(_self_, 3));
				_140039_dest.get()._field_statics = jule::alloc_for_append(_140039_dest.get()._field_statics,1);_140039_dest.get()._field_statics.__push(_142921_v);;
			}
			_iter_next_1a9ae4572:;
			++it;
			goto _iter_begin_1a9ae4572;
		}
		_iter_end_1a9ae4572:;
	};
	return _140073_ok;
}



inline void _1a769b45b_impl_trait(jule::Ptr<_1a768cc22_Sema> _self_, jule::Ptr<_1a6c31b02_Impl>& _144535_decl) {
	jule::Ptr<_1a77278d3_TypeKind> _144617_base_t = _1a769482d_select_type(_self_, _144535_decl.get()._field_base);;
	if ((_144617_base_t == nullptr)) {
		return;;
	};
	jule::Ptr<_1a68d46b7_Trait> _145017_base = _1a772ade2_trt(_144617_base_t.ptr());;
	if ((_145017_base == nullptr)) {
		_1a769063c_push_err(_self_.ptr(), _144535_decl.get()._field_base.get()._field_token,jule::Str("invalid base type for impl: @", 29),jule::Slice<jule::Any>::make({jule::Any(_1a7727c8a_to_str(_144617_base_t.ptr()))}));
		_1a769095b_push_suggestion(_self_.ptr(), jule::Str("expected trait, use a trait", 27),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a77278d3_TypeKind> _145717_dest_t = _1a769482d_select_type(_self_, _144535_decl.get()._field_dest);;
	if ((_145717_dest_t == nullptr)) {
		return;;
	};
	jule::Ptr<_1a6836a48_StructIns> _146117_dest_s = _1a772ab7d_strct(_145717_dest_t.ptr());;
	if ((_146117_dest_s == nullptr)) {
		_1a769063c_push_err(_self_.ptr(), _144535_decl.get()._field_dest.get()._field_token,jule::Str("invalid destination type for impl: @", 36),jule::Slice<jule::Any>::make({jule::Any(_1a7727c8a_to_str(_145717_dest_t.ptr()))}));
		_1a769095b_push_suggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a6826829_Struct> _146817_dest = _146117_dest_s.get()._field_decl;;
	if ((_1a527d161_dir(_146817_dest.get()._field_token.get()._field_file.ptr()) != _1a527d161_dir(_self_.get()._field_file.get()._field_file.ptr()))) {
		_1a769063c_push_err(_self_.ptr(), _144535_decl.get()._field_dest.get()._field_token,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>());
		return;;
	};
	_145017_base.get()._field_implemented = jule::alloc_for_append(_145017_base.get()._field_implemented,1);_145017_base.get()._field_implemented.__push(_146817_dest);;
	_146817_dest.get()._field_implements = jule::alloc_for_append(_146817_dest.get()._field_implements,1);_146817_dest.get()._field_implements.__push(_145017_base);;
	if ((_144535_decl.get()._field_statics.len() > 0LL)) {
		_1a769063c_push_err(_self_.ptr(), _144535_decl.get()._field_statics[0LL].get()._field_token,jule::Str("trait implementations cannot implement static field", 51),jule::Slice<jule::Any>());
	};
	{
		
		if ((!(_1a769ad1d_check_trait_impl_methods(_self_.ptr(), _145017_base,_144535_decl)))) {
			_case_begin_1a9b005c2:;
			{
				return;;
			}
		}
		else if ((!(_1a769b1d6_impl_to_struct(_self_, _146817_dest,_144535_decl)))) {
			_case_begin_1a9b00638:;
			{
				return;;
			}
		}
		_match_end_1a9b0035d:;
	};
}



inline void _1a769b6d1_impl_struct(jule::Ptr<_1a768cc22_Sema> _self_, jule::Ptr<_1a6c31b02_Impl>& _149036_decl) {
	jule::Ptr<_1a77278d3_TypeKind> _149117_dest_t = _1a769482d_select_type(_self_, _149036_decl.get()._field_dest);;
	if ((_149117_dest_t == nullptr)) {
		return;;
	};
	jule::Ptr<_1a6836a48_StructIns> _149517_dest_s = _1a772ab7d_strct(_149117_dest_t.ptr());;
	if ((_149517_dest_s == nullptr)) {
		_1a769063c_push_err(_self_.ptr(), _149036_decl.get()._field_dest.get()._field_token,jule::Str("invalid destination type for impl: @", 36),jule::Slice<jule::Any>::make({jule::Any(_1a7727c8a_to_str(_149117_dest_t.ptr()))}));
		_1a769095b_push_suggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a6826829_Struct> _150217_dest = _149517_dest_s.get()._field_decl;;
	if ((_1a527d161_dir(_150217_dest.get()._field_token.get()._field_file.ptr()) != _1a527d161_dir(_self_.get()._field_file.get()._field_file.ptr()))) {
		_1a769063c_push_err(_self_.ptr(), _149036_decl.get()._field_dest.get()._field_token,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if ((!(_1a769b1d6_impl_to_struct(_self_, _150217_dest,_149036_decl)))) {
			_case_begin_1a9b02cde:;
			{
				return;;
			}
		}
		_match_end_1a9b05220:;
	};
}



inline void _1a769b956_impl_impl(jule::Ptr<_1a768cc22_Sema> _self_, jule::Ptr<_1a6c31b02_Impl>& _151534_decl) {
	{
		
		if (_1a6b1a788_is_trait_impl(_151534_decl.ptr())) {
			_case_begin_1a9b06782:;
			{
				_1a769b45b_impl_trait(_self_, _151534_decl);
			}
		}
		else if (_1a6b3234e_is_struct_impl(_151534_decl.ptr())) {
			_case_begin_1a9b06809:;
			{
				_1a769b6d1_impl_struct(_self_, _151534_decl);
			}
		}
		_match_end_1a9b06672:;
	};
}



inline void _1a769bc75_check_var_decl(jule::Ptr<_1a768cc22_Sema> _self_, jule::Ptr<_1a76a7720_Var>& _152639_decl, jule::Trait<_1a7741e19_Lookup> _152655_l) {
	if (_1a5279aca_is_ignore_ident(_152639_decl.get()._field_ident)) {
		_1a769063c_push_err(_self_.ptr(), _152639_decl.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	if (_1a76a7d3b_is_type_inferred(_152639_decl.ptr())) {
		if ((!(_1a76a7ac7_is_initialized(_152639_decl.ptr())))) {
			_1a769063c_push_err(_self_.ptr(), _152639_decl.get()._field_token,jule::Str("type inferred declarations should have a initializer expression", 63),jule::Slice<jule::Any>());
		};
	} else {
		_1a7693c7d_check_type(_self_, _152639_decl.get()._field_kind,_152655_l);
	};
	if ((_152639_decl.get()._field_constant && _152639_decl.get()._field_reference)) {
		_1a769063c_push_err(_self_.ptr(), _152639_decl.get()._field_token,jule::Str("references cannot be constant", 29),jule::Slice<jule::Any>());
	};
	if ((!(_1a76a7ac7_is_initialized(_152639_decl.ptr())))) {
		if (_152639_decl.get()._field_constant) {
			_1a769063c_push_err(_self_.ptr(), _152639_decl.get()._field_token,jule::Str("missing expression for constant variable initialization", 55),jule::Slice<jule::Any>());
		};
		if (_152639_decl.get()._field_statically) {
			_1a769063c_push_err(_self_.ptr(), _152639_decl.get()._field_token,jule::Str("static variables must be have initialize expression", 51),jule::Slice<jule::Any>());
		};
		if (_152639_decl.get()._field_reference) {
			_1a769063c_push_err(_self_.ptr(), _152639_decl.get()._field_token,jule::Str("reference variables must be have lvalue initialize expression", 61),jule::Slice<jule::Any>());
		};
	};
}



inline void _1a769beea_check_global_var_decl(jule::Ptr<_1a768cc22_Sema> _self_, jule::Ptr<_1a76a7720_Var>& _156046_decl) {
	if (_1a7691264_is_duplicated_ident(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_156046_decl)),_156046_decl.get()._field_ident,_156046_decl.get()._field_cpp_linked)) {
		_1a769063c_push_err(_self_.ptr(), _156046_decl.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_156046_decl.get()._field_ident)}));
		_1a769095b_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((_156046_decl.get()._field_cpp_linked && _156046_decl.get()._field_constant)) {
		_1a769063c_push_err(_self_.ptr(), _156046_decl.get()._field_token,jule::Str("cpp linked variables cannot be constant", 39),jule::Slice<jule::Any>());
	};
	if ((((!(_156046_decl.get()._field_cpp_linked)) && (!(_156046_decl.get()._field_constant))) && (!(_156046_decl.get()._field_statically)))) {
		_1a769063c_push_err(_self_.ptr(), _156046_decl.get()._field_token,jule::Str("global variables must be static", 31),jule::Slice<jule::Any>());
		_1a769095b_push_suggestion(_self_.ptr(), jule::Str("use \"static\" keyword to define", 30),jule::Slice<jule::Any>());
	};
	_1a7691583_check_directives(_self_, _156046_decl.get()._field_directives,jule::Any(_156046_decl));
	_1a769bc75_check_var_decl(_self_, _156046_decl,jule::Trait<_1a7741e19_Lookup>(_self_, 3));
}



inline jule::Bool _1a769c25e_check_global_decls(jule::Ptr<_1a768cc22_Sema> _self_) {
	jule::Bool _157940_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_vars;
		auto it = expr.begin();
		_iter_begin_1a9b138e3:;
		if (it != expr.end()) {
			jule::Ptr<_1a76a7720_Var> _158021_decl = *it;
			{
				_1a769beea_check_global_var_decl(_self_, _158021_decl);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_157940_ok = false;
					return _157940_ok;
				};
			}
			_iter_next_1a9b138e3:;
			++it;
			goto _iter_begin_1a9b138e3;
		}
		_iter_end_1a9b138e3:;
	};
	_157940_ok = true;
	return _157940_ok;
}



inline jule::Bool _1a769c638_check_struct_trait_impl(jule::Ptr<_1a768cc22_Sema> _self_, jule::Ptr<_1a6826829_Struct>& _159148_strct, jule::Ptr<_1a68d46b7_Trait>& _159169_trt) {
	jule::Bool _159184_ok = jule::Bool();
	{
		auto &expr = _159169_trt.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1a9b15ad2:;
		if (it != expr.end()) {
			jule::Ptr<_1a68709c7_Fn> _159221_tf = *it;
			{
				jule::Bool _159321_exist = false;;
				jule::Ptr<_1a68709c7_Fn> _159421_sf = _1a682ae16_find_method(_159148_strct.ptr(), _159221_tf.get()._field_ident,_159221_tf.get()._field_statically);;
				jule::Ptr<_1a6872c93_FnIns> _159517_tf_k = _1a7696896_get_trait_check_fn_kind(_self_, _159221_tf);;
				if ((_159421_sf != nullptr)) {
					jule::Ptr<_1a6872c93_FnIns> _159725_sf_k = _1a7696896_get_trait_check_fn_kind(_self_, _159421_sf);;
					_159321_exist=(((_159517_tf_k.get()._field_decl.get()._field_public == _159725_sf_k.get()._field_decl.get()._field_public) && (_159517_tf_k.get()._field_decl.get()._field_ident == _159725_sf_k.get()._field_decl.get()._field_ident)) && _1a6873414_equals(_159517_tf_k, jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_159725_sf_k, 1)})));
				};
				if (_159321_exist) {
					jule::Ptr<_1a6852525_Directive> _160321_d = _1a77225c0_find_directive(_159421_sf.get()._field_directives,jule::Str("deprecated", 10));;
					if ((_160321_d != nullptr)) {
						_1a769063c_push_err(_self_.ptr(), _160321_d.get()._field_tag,jule::Str("trait implementations cannot have deprecated code", 49),jule::Slice<jule::Any>());
					};
					_159184_ok=false;
				} else {
					;
					jule::Str _161025_s = _1a687439e_get_kind_str(_159517_tf_k.ptr(), true);;
					if (_159221_tf.get()._field_public) {
						(_161025_s).buffer.insert(0, (jule::Str("pub ", 4)));;
					};
					_1a769063c_push_err(_self_.ptr(), _159148_strct.get()._field_token,jule::Str("trait @ derived but not implemented define @", 44),jule::Slice<jule::Any>::make({jule::Any(_159169_trt.get()._field_ident),jule::Any(_161025_s)}));
					_159184_ok=false;
				};
			}
			_iter_next_1a9b15ad2:;
			++it;
			goto _iter_begin_1a9b15ad2;
		}
		_iter_end_1a9b15ad2:;
	};
	return _159184_ok;
}



inline jule::Bool _1a769c957_check_struct_impls(jule::Ptr<_1a768cc22_Sema> _self_, jule::Ptr<_1a6826829_Struct>& _162143_s) {
	jule::Bool _162157_ok = jule::Bool();
	_162157_ok=true;
	{
		auto &expr = _162143_s.get()._field_implements;
		auto it = expr.begin();
		_iter_begin_1a9b1d1b1:;
		if (it != expr.end()) {
			jule::Ptr<_1a68d46b7_Trait> _162321_trt = *it;
			{
				_162157_ok=(_1a769c638_check_struct_trait_impl(_self_, _162143_s,_162321_trt) && _162157_ok);
			}
			_iter_next_1a9b1d1b1:;
			++it;
			goto _iter_begin_1a9b1d1b1;
		}
		_iter_end_1a9b1d1b1:;
	};
	return _162157_ok;
}



inline jule::Bool _1a769cc65_check_struct_fields(jule::Ptr<_1a768cc22_Sema> _self_, jule::Ptr<_1a6826829_Struct>& _162944_st) {
	jule::Bool _162959_ok = jule::Bool();
	_162959_ok=true;
	{
		auto &expr = _162944_st.get()._field_fields;
		auto it = expr.begin();
		_iter_begin_1a9b1ec40:;
		if (it != expr.end()) {
			jule::Ptr<_1a6844a23_Field> _163121_f = *it;
			{
				_163121_f.get()._field_owner=_162944_st;
				{
					auto &expr = _162944_st.get()._field_fields;
					auto it = expr.begin();
					_iter_begin_1a9b20713:;
					if (it != expr.end()) {
						jule::Ptr<_1a6844a23_Field> _163320_cf = *it;
						{
							if ((_163121_f == _163320_cf)) {
								goto _iter_end_1a9b20713;
							} else if ((_163121_f.get()._field_ident == _163320_cf.get()._field_ident)) {
								_1a769063c_push_err(_self_.ptr(), _163121_f.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_163121_f.get()._field_ident)}));
								_1a769095b_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
								_162959_ok=false;
							};
						}
						_iter_next_1a9b20713:;
						++it;
						goto _iter_begin_1a9b20713;
					}
					_iter_end_1a9b20713:;
				};
			}
			_iter_next_1a9b1ec40:;
			++it;
			goto _iter_begin_1a9b1ec40;
		}
		_iter_end_1a9b1ec40:;
	};
	return _162959_ok;
}



inline void _1a769ceda_check_struct_decl(jule::Ptr<_1a768cc22_Sema> _self_, jule::Ptr<_1a6826829_Struct>& _164642_s) {
	if (_1a5279aca_is_ignore_ident(_164642_s.get()._field_ident)) {
		_1a769063c_push_err(_self_.ptr(), _164642_s.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_1a7691264_is_duplicated_ident(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_164642_s)),_164642_s.get()._field_ident,_164642_s.get()._field_cpp_linked)) {
		_1a769063c_push_err(_self_.ptr(), _164642_s.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_164642_s.get()._field_ident)}));
		_1a769095b_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	_1a7691583_check_directives(_self_, _164642_s.get()._field_directives,jule::Any(_164642_s));
	{
		
		if ((!(_1a76994ae_check_decl_generics(_self_.ptr(), _164642_s.get()._field_generics)))) {
			_case_begin_1a9b253e9:;
		}
		else if ((!(_1a769cc65_check_struct_fields(_self_, _164642_s)))) {
			_case_begin_1a9b25471:;
		}
		else if ((!(_1a769c957_check_struct_impls(_self_, _164642_s)))) {
			_case_begin_1a9b254e8:;
		}
		_match_end_1a9b22d31:;
	};
}



inline jule::Bool _1a769d24e_check_struct_decls(jule::Ptr<_1a768cc22_Sema> _self_) {
	jule::Bool _166440_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_structs;
		auto it = expr.begin();
		_iter_begin_1a9b271ed:;
		if (it != expr.end()) {
			jule::Ptr<_1a6826829_Struct> _166521_s = *it;
			{
				_1a769ceda_check_struct_decl(_self_, _166521_s);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_166440_ok = false;
					return _166440_ok;
				};
			}
			_iter_next_1a9b271ed:;
			++it;
			goto _iter_begin_1a9b271ed;
		}
		_iter_end_1a9b271ed:;
	};
	_166440_ok = true;
	return _166440_ok;
}



inline void _1a769d4c4_check_fn_decl(jule::Ptr<_1a768cc22_Sema> _self_, jule::Ptr<_1a68709c7_Fn>& _167738_f) {
	if (_1a5279aca_is_ignore_ident(_167738_f.get()._field_ident)) {
		_1a769063c_push_err(_self_.ptr(), _167738_f.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	_1a7691583_check_directives(_self_, _167738_f.get()._field_directives,jule::Any(_167738_f));
	_167738_f.get()._field_sema=_self_;
	_1a7699dd8_check_fn_decl_prototype(_self_, _167738_f);
	if (_1a7691264_is_duplicated_ident(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_167738_f)),_167738_f.get()._field_ident,_167738_f.get()._field_cpp_linked)) {
		if ((_167738_f.get()._field_ident == jule::Str("init", 4))) {
			jule::Ptr<_1a68709c7_Fn> _168921_init = _1a768e509_find_fn(_self_.ptr(), jule::Str("init", 4),false);;
			if ((_168921_init != nullptr)) {
				return;;
			};
		};
		_1a769063c_push_err(_self_.ptr(), _167738_f.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_167738_f.get()._field_ident)}));
		_1a769095b_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1a769d738_check_fn_decls(jule::Ptr<_1a768cc22_Sema> _self_) {
	jule::Bool _170036_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_funcs;
		auto it = expr.begin();
		_iter_begin_1a9b2d754:;
		if (it != expr.end()) {
			jule::Ptr<_1a68709c7_Fn> _170121_f = *it;
			{
				_1a769d4c4_check_fn_decl(_self_, _170121_f);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_170036_ok = false;
					return _170036_ok;
				};
			}
			_iter_next_1a9b2d754:;
			++it;
			goto _iter_begin_1a9b2d754;
		}
		_iter_end_1a9b2d754:;
	};
	_170036_ok = true;
	return _170036_ok;
}



inline void _1a769db01_push_cycle_error(_1a768cc22_Sema* _self_, jule::Ptr<_1a6826829_Struct>& _171232_st1, jule::Ptr<_1a6826829_Struct>& _171247_st2, jule::Str& _171266_message) {
	;
	jule::Str _171513_refers_to = _1a4334e1c_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_171232_st1.get()._field_ident),jule::Any(_171247_st2.get()._field_ident)}));;
	(_171266_message).buffer.insert(0, (((_1a4222117_repeat(jule::Str(" ", 1),4LL) + _171513_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _1a769e052_check_cross_cycle(_1a768cc22_Sema* _self_, jule::Ptr<_1a6826829_Struct>& _171933_st1, jule::Ptr<_1a6826829_Struct>& _171948_st2, jule::Str& _171967_message) {
	{
		auto &expr = _171948_st2.get()._field_uses;
		auto it = expr.begin();
		_iter_begin_1a9b32d30:;
		if (it != expr.end()) {
			jule::Ptr<_1a6826829_Struct> &_172016_u = *it;
			{
				if ((_172016_u == _171933_st1)) {
					_1a769db01_push_cycle_error(&(*_self_), _171948_st2,_172016_u,_171967_message);
					return false;
				};
				if ((!(_1a769e052_check_cross_cycle(&(*_self_), _171933_st1,_172016_u,_171967_message)))) {
					_1a769db01_push_cycle_error(&(*_self_), _171948_st2,_172016_u,_171967_message);
					return false;
				};
			}
			_iter_next_1a9b32d30:;
			++it;
			goto _iter_begin_1a9b32d30;
		}
		_iter_end_1a9b32d30:;
	};
	return true;
}



inline jule::Bool _1a769e4d6_check_struct_derive_illegal_cycles(_1a768cc22_Sema* _self_, jule::Str _173553_derive, jule::Ptr<_1a6826829_Struct>& _173567_st1, jule::Ptr<_1a77278d3_TypeKind>& _173586_k) {
	jule::Bool _1735102_ok = jule::Bool();
	jule::Ptr<_1a6826829_Struct> _173617_st2 = _1a773e7eb_get_struct_from_kind(_173586_k);;
	if ((_173617_st2 == nullptr)) {
		_1735102_ok = true;
		return _1735102_ok;
	};
	if ((_173567_st1 == _173617_st2)) {
		_1a769063c_push_err(&(*_self_), _173567_st1.get()._field_token,jule::Str("illegal cycle for derive @, struct @ refers to itself", 53),jule::Slice<jule::Any>::make({jule::Any(_173553_derive),jule::Any(_173567_st1.get()._field_ident)}));
		_1735102_ok = false;
		return _1735102_ok;
	};
	jule::Str _174817_message = jule::Str();;
	if ((!(_1a769e052_check_cross_cycle(&(*_self_), _173567_st1,_173617_st2,_174817_message)))) {
		jule::Str _175121_err_msg = _174817_message;;
		_174817_message=jule::Str();
		_1a769db01_push_cycle_error(&(*_self_), _173567_st1,_173617_st2,_174817_message);
		_175121_err_msg=(_175121_err_msg + _174817_message);
		_1a769063c_push_err(&(*_self_), _173567_st1.get()._field_token,jule::Str("illegal cross cycle for derive @;\n@", 35),jule::Slice<jule::Any>::make({jule::Any(_173553_derive),jule::Any(_175121_err_msg)}));
		_1735102_ok = false;
		return _1735102_ok;
	};
	_1735102_ok = true;
	return _1735102_ok;
}



inline jule::Bool _1a769e816_check_struct_ins_derive_clone(_1a768cc22_Sema* _self_, jule::Ptr<_1a6836a48_StructIns> _176252_st) {
	jule::Bool _176270_ok = jule::Bool();
	if ((!(_1a68312c3_is_derives(_176252_st.get()._field_decl.ptr(), jule::Str("Clone", 5))))) {
		_176270_ok = true;
		return _176270_ok;
	};
	{
		auto &expr = _176252_st.get()._field_fields;
		auto it = expr.begin();
		_iter_begin_1a9b3a9a3:;
		if (it != expr.end()) {
			jule::Ptr<_1a6830899_FieldIns> _176721_f = *it;
			{
				if ((_176721_f.get()._field_kind == nullptr)) {
					goto _iter_next_1a9b3a9a3;
				};
				if ((!(_1a77294b7_supports_cloning(_176721_f.get()._field_kind.ptr())))) {
					_1a769063c_push_err(&(*_self_), _176252_st.get()._field_decl.get()._field_token,jule::Str("type @ is not compatible to derive @", 36),jule::Slice<jule::Any>::make({jule::Any(_1a7727c8a_to_str(_176721_f.get()._field_kind.ptr())),jule::Any(jule::Str("Clone", 5))}));
					_176270_ok = false;
					return _176270_ok;
				};
				if ((!(_1a769e4d6_check_struct_derive_illegal_cycles(&(*_self_), jule::Str("Clone", 5),_176252_st.get()._field_decl,_176721_f.get()._field_kind)))) {
					_176270_ok = false;
					return _176270_ok;
				};
			}
			_iter_next_1a9b3a9a3:;
			++it;
			goto _iter_begin_1a9b3a9a3;
		}
		_iter_end_1a9b3a9a3:;
	};
	_176270_ok = true;
	return _176270_ok;
}



inline void _1a769ea03_check_package_decls(jule::Ptr<_1a768cc22_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1a9b3dd6e:;
		if (it != expr.end()) {
			jule::Ptr<_1a76e8e26_SymbolTable> _178821_f = *it;
			{
				_1a7690274_set_current_file(_self_.ptr(), _178821_f);
				if ((!(_1a7698447_check_type_alias_decls(_self_)))) {
					return;;
				};
			}
			_iter_next_1a9b3dd6e:;
			++it;
			goto _iter_begin_1a9b3dd6e;
		}
		_iter_end_1a9b3dd6e:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1a9b3e974:;
		if (it != expr.end()) {
			jule::Ptr<_1a76e8e26_SymbolTable> _179521_f = *it;
			{
				_1a7690274_set_current_file(_self_.ptr(), _179521_f);
				if ((!(_1a769a944_check_trait_decls(_self_)))) {
					return;;
				};
			}
			_iter_next_1a9b3e974:;
			++it;
			goto _iter_begin_1a9b3e974;
		}
		_iter_end_1a9b3e974:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1a9b40744:;
		if (it != expr.end()) {
			jule::Ptr<_1a76e8e26_SymbolTable> _180221_f = *it;
			{
				_1a7690274_set_current_file(_self_.ptr(), _180221_f);
				if ((!(_1a769c25e_check_global_decls(_self_)))) {
					return;;
				};
			}
			_iter_next_1a9b40744:;
			++it;
			goto _iter_begin_1a9b40744;
		}
		_iter_end_1a9b40744:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1a9b41547:;
		if (it != expr.end()) {
			jule::Ptr<_1a76e8e26_SymbolTable> _180921_f = *it;
			{
				_1a7690274_set_current_file(_self_.ptr(), _180921_f);
				{
					
					if ((!(_1a769d738_check_fn_decls(_self_)))) {
						_case_begin_1a9b423e4:;
					}
					else if ((!(_1a769d24e_check_struct_decls(_self_)))) {
						_case_begin_1a9b4246b:;
					}
					else {
						_case_begin_1a9b4234a:;
						{
							goto _iter_next_1a9b41547;
						}
					}
					_match_end_1a9b422c3:;
				};
				return;;
			}
			_iter_next_1a9b41547:;
			++it;
			goto _iter_begin_1a9b41547;
		}
		_iter_end_1a9b41547:;
	};
}



inline void _1a769ed44_check_data_for_type_inference(_1a768cc22_Sema* _self_, jule::Ptr<_1a76edda4_Data>& _182149_d, jule::Ptr<_1a527737a_Token>& _182160_err_token) {
	{
		
		if (_1a76ee28e_is_nil(_182149_d.ptr())) {
			_case_begin_1a9b43b32:;
			{
				_1a769063c_push_err(&(*_self_), _182160_err_token,jule::Str("nil is cannot use with type inferred definitions", 48),jule::Slice<jule::Any>());
			}
		}
		else if (_1a76ee503_is_void(_182149_d.ptr())) {
			_case_begin_1a9b43ba9:;
			{
				_1a769063c_push_err(&(*_self_), _182160_err_token,jule::Str("void data is cannot use for type inferred definitions", 53),jule::Slice<jule::Any>());
			}
		}
		else if (_182149_d.get()._field_kind.get()._field_variadic) {
			_case_begin_1a9b43c31:;
			{
				_1a769063c_push_err(&(*_self_), _182160_err_token,jule::Str("invalid expression for type inference", 37),jule::Slice<jule::Any>());
			}
		}
		_match_end_1a9b43a22:;
	};
}



inline void _1a76a00ca_check_var(jule::Ptr<_1a768cc22_Sema> _self_, jule::Ptr<_1a76a7720_Var>& _183234_v) {
	if (_183234_v.get()._field_cpp_linked) {
		return;;
	};
	if (_1a76a7d3b_is_type_inferred(_183234_v.ptr())) {
		_183234_v.get()._field_kind=jule::new_ptr<_1a772b772_TypeSymbol>(_1a772b772_TypeSymbol{._field_kind=_183234_v.get()._field_value.get()._field_data.get()._field_kind});
		_1a769ed44_check_data_for_type_inference(_self_.ptr(), _183234_v.get()._field_value.get()._field_data,_183234_v.get()._field_value.get()._field_expr.get()._field_token);
	} else {
		jule::Ptr<_1a773324b_Arr> _184321_arr = _1a772a441_arr(_183234_v.get()._field_kind.get()._field_kind.ptr());;
		if ((_184321_arr != nullptr)) {
			if (_184321_arr.get()._field_auto) {
				jule::Ptr<_1a773324b_Arr> _184625_data_arr = _1a772a441_arr(_183234_v.get()._field_value.get()._field_data.get()._field_kind.ptr());;
				if ((_184625_data_arr != nullptr)) {
					_184321_arr.get()._field_n=_184625_data_arr.get()._field_n;
				};
			};
		};
		_1a769593e_check_assign_type(_self_, _183234_v.get()._field_reference,_183234_v.get()._field_kind.get()._field_kind,_183234_v.get()._field_value.get()._field_data,_183234_v.get()._field_value.get()._field_expr.get()._field_token);
	};
	if ((_183234_v.get()._field_reference && (!(_1a773db6e_is_valid_for_ref(_183234_v.get()._field_kind.get()._field_kind))))) {
		_1a769063c_push_err(_self_.ptr(), _183234_v.get()._field_token,jule::Str("references cannot points to type @", 34),jule::Slice<jule::Any>::make({jule::Any(_1a7727c8a_to_str(_183234_v.get()._field_kind.get()._field_kind.ptr()))}));
	};
	_1a7697743_check_validity_for_init_expr(_self_, _183234_v.get()._field_mutable,_183234_v.get()._field_reference,_183234_v.get()._field_kind.get()._field_kind,_183234_v.get()._field_value.get()._field_data,_183234_v.get()._field_value.get()._field_expr.get()._field_token);
	if (_183234_v.get()._field_constant) {
		if ((!(_1a76ee767_is_const(_183234_v.get()._field_value.get()._field_data.ptr())))) {
			_1a769063c_push_err(_self_.ptr(), _183234_v.get()._field_value.get()._field_expr.get()._field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
		};
	} else {
		_183234_v.get()._field_value.get()._field_data.get()._field_constant=nullptr;
	};
	if ((_1a772b3ba_tup(_183234_v.get()._field_kind.get()._field_kind.ptr()) != nullptr)) {
		_183234_v.get()._field_kind.get()._field_kind=nullptr;
	};
}



inline void _1a76a03e9_check_type_var(jule::Ptr<_1a768cc22_Sema> _self_, jule::Ptr<_1a76a7720_Var>& _188139_decl, jule::Trait<_1a7741e19_Lookup> _188155_l) {
	if ((_188139_decl.get()._field_cpp_linked || (!(_1a76a7ac7_is_initialized(_188139_decl.ptr()))))) {
		return;;
	};
	jule::Ptr<_1a7700922_Eval> _188617_eval = nullptr;;
	if ((_188139_decl.get()._field_kind != nullptr)) {
		_188617_eval=_1a7694c7e_evalpd(_self_, _188155_l,_188139_decl.get()._field_kind.get()._field_kind,_188139_decl);
	} else {
		_188617_eval=_1a7694c7e_evalpd(_self_, _188155_l,nullptr,_188139_decl);
	};
	_188617_eval.get()._field_immutable=(!(_188139_decl.get()._field_mutable));
	_188139_decl.get()._field_value.get()._field_data=_1a771982b_eval_expr(_188617_eval, _188139_decl.get()._field_value.get()._field_expr);
	if ((_188139_decl.get()._field_value.get()._field_data == nullptr)) {
		return;;
	};
	_1a76a00ca_check_var(_self_, _188139_decl);
}



inline void _1a76a05c5_check_global_types(jule::Ptr<_1a768cc22_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_vars;
		auto it = expr.begin();
		_iter_begin_1a9b53b64:;
		if (it != expr.end()) {
			jule::Ptr<_1a76a7720_Var> _190321_decl = *it;
			{
				if (((_1a76a7ac7_is_initialized(_190321_decl.ptr()) && (_190321_decl.get()._field_value.get()._field_data == nullptr)) || (_1a76a7d3b_is_type_inferred(_190321_decl.ptr()) && (_190321_decl.get()._field_kind.get()._field_kind == nullptr)))) {
					_1a76a03e9_check_type_var(_self_, _190321_decl,jule::Trait<_1a7741e19_Lookup>(_self_, 3));
				};
			}
			_iter_next_1a9b53b64:;
			++it;
			goto _iter_begin_1a9b53b64;
		}
		_iter_end_1a9b53b64:;
	};
}



inline jule::Ptr<_1a6872c93_FnIns> _1a76a097c_ready_to_check_fn(jule::Ptr<_1a768cc22_Sema> _self_, jule::Ptr<_1a6836a48_StructIns>& _191342_s, jule::Ptr<_1a68709c7_Fn>& _191362_f) {
	jule::Ptr<_1a6872c93_FnIns> _191417_ins = _1a6871742_instance(_191362_f);;
	if ((_191362_f.get()._field_instances.len() != 0LL)) {
		return _191417_ins;
	};
	_191417_ins.get()._field_owner=_191342_s;
	_1a6871a50_append_instance(_191362_f.ptr(), _191417_ins);
	_1a7696bb5_reload_fn_ins_types(_self_, _191417_ins);
	_191417_ins.get()._field_reloaded=true;
	return _191417_ins;
}



inline void _1a76a0c9b_check_type_method(jule::Ptr<_1a768cc22_Sema> _self_, jule::Ptr<_1a6836a48_StructIns>& _192542_s, jule::Ptr<_1a68709c7_Fn>& _192562_f) {
	if (_192562_f.get()._field_cpp_linked) {
		return;;
	};
	if ((_192562_f.get()._field_generics.len() > 0LL)) {
		return;;
	};
	_1a76a097c_ready_to_check_fn(_self_, _192542_s,_192562_f);
	{
		auto &expr = _192562_f.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1a9b5996c:;
		if (it != expr.end()) {
			jule::Ptr<_1a6872c93_FnIns> _193621_ins = *it;
			{
				if ((_193621_ins.get()._field_scope.get()._field_stmts.len() > 0LL)) {
					goto _iter_next_1a9b5996c;
				};
				_1a76a3298_check_fn_ins(_self_, _193621_ins);
			}
			_iter_next_1a9b5996c:;
			++it;
			goto _iter_begin_1a9b5996c;
		}
		_iter_end_1a9b5996c:;
	};
}



inline jule::Ptr<_1a6872c93_FnIns> _1a76a11ec_check_struct_ins_op(jule::Ptr<_1a768cc22_Sema> _self_, jule::Ptr<_1a6836a48_StructIns>& _194544_s, jule::Ptr<_1a68709c7_Fn>& _194564_f, jule::Fn<jule::Bool(jule::Ptr<_1a68709c7_Fn>)> _194572_p) {
	if (((_194564_f == nullptr) || (_194564_f.get()._field_generics.len() > 0LL))) {
		return nullptr;
	};
	jule::Ptr<_1a6872c93_FnIns> _194917_ins = _1a76a097c_ready_to_check_fn(_self_, _194544_s,_194564_f);;
	if (_194572_p(_194564_f)) {
		return _194917_ins;
	};
	return nullptr;
}



inline jule::Bool _1a76a150a_check_fields(jule::Ptr<_1a768cc22_Sema> _self_, jule::Ptr<_1a6836a48_StructIns>& _195637_s) {
	jule::Bool _195654_ok = jule::Bool();
	_1a7735847_TypeChecker _195717_tc = _1a7735847_TypeChecker{._field_s=_195637_s.get()._field_decl.get()._field_sema, ._field_lookup=jule::Trait<_1a7741e19_Lookup>(_195637_s.get()._field_decl.get()._field_sema, 3), ._field_referencer=jule::new_ptr<_1a7734aee_Referencer>(_1a7734aee_Referencer{._field_ident=_195637_s.get()._field_decl.get()._field_ident, ._field_owner=jule::Any(_195637_s.get()._field_decl), }), ._field_refers=_195637_s.get()._field_refers, };;
	if ((_195637_s.get()._field_generics.len() > 0LL)) {
		_195717_tc._field_use_generics=jule::Slice<jule::Ptr<_1a7726b9b_TypeAlias>>::alloc(0LL,_195637_s.get()._field_generics.len());
		{
			auto &expr = _195637_s.get()._field_generics;
			auto it = expr.begin();
			_iter_begin_1a9b60ec3:;
			if (it != expr.end()) {
				jule::I64 _196918_i = it - expr.begin();
				jule::Ptr<_1a77278d3_TypeKind> _196925_g = *it;
				{
					_195717_tc._field_use_generics = jule::alloc_for_append(_195717_tc._field_use_generics,1);_195717_tc._field_use_generics.__push(jule::new_ptr<_1a7726b9b_TypeAlias>(_1a7726b9b_TypeAlias{._field_ident=_195637_s.get()._field_decl.get()._field_generics[_196918_i].get()._field_ident, ._field_kind=jule::new_ptr<_1a772b772_TypeSymbol>(_1a772b772_TypeSymbol{._field_kind=_196925_g}), }));;
				}
				_iter_next_1a9b60ec3:;
				++it;
				_196918_i++;
				goto _iter_begin_1a9b60ec3;
			}
			_iter_end_1a9b60ec3:;
		};
	};
	jule::Ptr<_1a76e8e26_SymbolTable> _197917_old_file = _self_.get()._field_file;;
	__JULE_DEFER({
		_1a7690274_set_current_file(_self_.ptr(), _197917_old_file);
	});;
	if ((_self_.get()._field_file.get()._field_file != _195637_s.get()._field_decl.get()._field_token.get()._field_file)) {
		jule::Ptr<_1a76e8e26_SymbolTable> _198321_file = _1a768c3a3_find_file(_self_.get()._field_files,_195637_s.get()._field_decl.get()._field_token.get()._field_file);;
		if ((_198321_file != nullptr)) {
			_1a7690274_set_current_file(_self_.ptr(), _198321_file);
		};
	};
	jule::Ptr<_1a7700922_Eval> _198917_eval = _1a7695444_eval(_self_, jule::Trait<_1a7741e19_Lookup>(_self_, 3));;
	{
		auto &expr = _195637_s.get()._field_fields;
		auto it = expr.begin();
		_iter_begin_1a9b652e6:;
		if (it != expr.end()) {
			jule::Ptr<_1a6830899_FieldIns> _199021_f = *it;
			{
				jule::Ptr<_1a77278d3_TypeKind> _199121_kind = _1a773c1de_check_decl(&_195717_tc, _199021_f.get()._field_decl.get()._field_kind.get()._field_decl);;
				_195654_ok=((_199121_kind != nullptr) && _195654_ok);
				if ((_199121_kind == nullptr)) {
					if (((_self_ != _195637_s.get()._field_decl.get()._field_sema) && (_195637_s.get()._field_decl.get()._field_sema.get()._field_errors.len() > 0LL))) {
						_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_195637_s.get()._field_decl.get()._field_sema.get()._field_errors);
						_195637_s.get()._field_decl.get()._field_sema.get()._field_errors=nullptr;
					};
					goto _iter_next_1a9b652e6;
				};
				_199021_f.get()._field_kind=_199121_kind;
				_195637_s.get()._field_mutable=(_195637_s.get()._field_mutable || ((!(_199021_f.get()._field_decl.get()._field_mutable)) && _1a7728c7a_mutable(_199021_f.get()._field_kind.ptr())));
				_1a769e816_check_struct_ins_derive_clone(_self_.ptr(), _195637_s);
				if ((_199021_f.get()._field_decl.get()._field_default == nullptr)) {
					goto _iter_next_1a9b652e6;
				};
				_198917_eval.get()._field_prefix=_199021_f.get()._field_kind;
				_198917_eval.get()._field_field=_199021_f;
				_199021_f.get()._field_default=_1a771982b_eval_expr(_198917_eval, _199021_f.get()._field_decl.get()._field_default);
				if ((_199021_f.get()._field_default == nullptr)) {
					goto _iter_next_1a9b652e6;
				};
				;
				_1a769593e_check_assign_type(_self_, false,_199021_f.get()._field_kind,_199021_f.get()._field_default,_199021_f.get()._field_decl.get()._field_default.get()._field_token);
			}
			_iter_next_1a9b652e6:;
			++it;
			goto _iter_begin_1a9b652e6;
		}
		_iter_end_1a9b652e6:;
	};
	return _195654_ok;
}



inline void _1a76a1780_precheck_struct_ins(jule::Ptr<_1a768cc22_Sema> _self_, jule::Ptr<_1a6836a48_StructIns>& _202444_s) {
	_1a76a150a_check_fields(_self_, _202444_s);
}



inline void _1a76a1a05_check_struct_ins(jule::Ptr<_1a768cc22_Sema> _self_, jule::Ptr<_1a6836a48_StructIns>& _202841_s) {
	{
		auto &expr = _202841_s.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1a9b6ce14:;
		if (it != expr.end()) {
			jule::Ptr<_1a68709c7_Fn> _202921_f = *it;
			{
				_1a76a0c9b_check_type_method(_self_, _202841_s,_202921_f);
			}
			_iter_next_1a9b6ce14:;
			++it;
			goto _iter_begin_1a9b6ce14;
		}
		_iter_end_1a9b6ce14:;
	};
}



inline void _1a76a1c7a_check_type_struct(jule::Ptr<_1a768cc22_Sema> _self_, jule::Ptr<_1a6826829_Struct>& _203442_s) {
	if (_203442_s.get()._field_cpp_linked) {
		return;;
	};
	if ((_203442_s.get()._field_generics.len() > 0LL)) {
		return;;
	};
	{
		auto &expr = _203442_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1a9b6ecc3:;
		if (it != expr.end()) {
			jule::Ptr<_1a6836a48_StructIns> _204721_ins = *it;
			{
				_1a76a1a05_check_struct_ins(_self_, _204721_ins);
			}
			_iter_next_1a9b6ecc3:;
			++it;
			goto _iter_begin_1a9b6ecc3;
		}
		_iter_end_1a9b6ecc3:;
	};
}



inline void _1a76a1e56_check_struct_types(jule::Ptr<_1a768cc22_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_structs;
		auto it = expr.begin();
		_iter_begin_1a9b70e39:;
		if (it != expr.end()) {
			jule::Ptr<_1a6826829_Struct> _205321_s = *it;
			{
				_1a76a1c7a_check_type_struct(_self_, _205321_s);
			}
			_iter_next_1a9b70e39:;
			++it;
			goto _iter_begin_1a9b70e39;
		}
		_iter_end_1a9b70e39:;
	};
}



inline void _1a76a21ed_check_struct_ins_operators(jule::Ptr<_1a768cc22_Sema> _self_, jule::Ptr<_1a6836a48_StructIns> _205850_s) {
	{
		auto &expr = _205850_s.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1a9b72325:;
		if (it != expr.end()) {
			jule::Ptr<_1a68709c7_Fn> _205921_m = *it;
			{
				{
					auto &_match_expr{ _205921_m.get()._field_ident };
					
					if (_match_expr == jule::Str("eq", 2)) {
						_case_begin_1a9b72bb6:;
						{
							_205850_s.get()._field_operators._field_eq=_1a76a11ec_check_struct_ins_op(_self_, _205850_s,_205921_m,jule::Fn<jule::Bool(jule::Ptr<_1a68709c7_Fn>)>([=](jule::Ptr<_1a68709c7_Fn> _206268_f) mutable -> jule::Bool {
								return static__1a76a9227_eq(_206268_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("gt", 2)) {
						_case_begin_1a9b7290d:;
						{
							_205850_s.get()._field_operators._field_gt=_1a76a11ec_check_struct_ins_op(_self_, _205850_s,_205921_m,jule::Fn<jule::Bool(jule::Ptr<_1a68709c7_Fn>)>([=](jule::Ptr<_1a68709c7_Fn> _206468_f) mutable -> jule::Bool {
								return static__1a76a94be_gt(_206468_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("gt_eq", 5)) {
						_case_begin_1a9b72e3b:;
						{
							_205850_s.get()._field_operators._field_gt_eq=_1a76a11ec_check_struct_ins_op(_self_, _205850_s,_205921_m,jule::Fn<jule::Bool(jule::Ptr<_1a68709c7_Fn>)>([=](jule::Ptr<_1a68709c7_Fn> _206671_f) mutable -> jule::Bool {
								return static__1a76a9766_gt_eq(_206671_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("lt", 2)) {
						_case_begin_1a9b72eb3:;
						{
							_205850_s.get()._field_operators._field_lt=_1a76a11ec_check_struct_ins_op(_self_, _205850_s,_205921_m,jule::Fn<jule::Bool(jule::Ptr<_1a68709c7_Fn>)>([=](jule::Ptr<_1a68709c7_Fn> _206868_f) mutable -> jule::Bool {
								return static__1a76a9a0d_lt(_206868_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("lt_eq", 5)) {
						_case_begin_1a9b7303a:;
						{
							_205850_s.get()._field_operators._field_lt_eq=_1a76a11ec_check_struct_ins_op(_self_, _205850_s,_205921_m,jule::Fn<jule::Bool(jule::Ptr<_1a68709c7_Fn>)>([=](jule::Ptr<_1a68709c7_Fn> _207071_f) mutable -> jule::Bool {
								return static__1a76a9ca5_lt_eq(_207071_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("shl", 3)) {
						_case_begin_1a9b730b2:;
						{
							_205850_s.get()._field_operators._field_shl=_1a76a11ec_check_struct_ins_op(_self_, _205850_s,_205921_m,jule::Fn<jule::Bool(jule::Ptr<_1a68709c7_Fn>)>([=](jule::Ptr<_1a68709c7_Fn> _207269_f) mutable -> jule::Bool {
								return static__1a76aa38d_shl(_207269_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("shr", 3)) {
						_case_begin_1a9b73139:;
						{
							_205850_s.get()._field_operators._field_shr=_1a76a11ec_check_struct_ins_op(_self_, _205850_s,_205921_m,jule::Fn<jule::Bool(jule::Ptr<_1a68709c7_Fn>)>([=](jule::Ptr<_1a68709c7_Fn> _207469_f) mutable -> jule::Bool {
								return static__1a76aa635_shr(_207469_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("add", 3)) {
						_case_begin_1a9b731b1:;
						{
							_205850_s.get()._field_operators._field_add=_1a76a11ec_check_struct_ins_op(_self_, _205850_s,_205921_m,jule::Fn<jule::Bool(jule::Ptr<_1a68709c7_Fn>)>([=](jule::Ptr<_1a68709c7_Fn> _207669_f) mutable -> jule::Bool {
								return static__1a76aa8cc_add(_207669_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("sub", 3)) {
						_case_begin_1a9b73238:;
						{
							_205850_s.get()._field_operators._field_sub=_1a76a11ec_check_struct_ins_op(_self_, _205850_s,_205921_m,jule::Fn<jule::Bool(jule::Ptr<_1a68709c7_Fn>)>([=](jule::Ptr<_1a68709c7_Fn> _207869_f) mutable -> jule::Bool {
								return static__1a76aab74_sub(_207869_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("div", 3)) {
						_case_begin_1a9b732b0:;
						{
							_205850_s.get()._field_operators._field_div=_1a76a11ec_check_struct_ins_op(_self_, _205850_s,_205921_m,jule::Fn<jule::Bool(jule::Ptr<_1a68709c7_Fn>)>([=](jule::Ptr<_1a68709c7_Fn> _208069_f) mutable -> jule::Bool {
								return static__1a76aae1b_div(_208069_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("mul", 3)) {
						_case_begin_1a9b73337:;
						{
							_205850_s.get()._field_operators._field_mul=_1a76a11ec_check_struct_ins_op(_self_, _205850_s,_205921_m,jule::Fn<jule::Bool(jule::Ptr<_1a68709c7_Fn>)>([=](jule::Ptr<_1a68709c7_Fn> _208269_f) mutable -> jule::Bool {
								return static__1a76ab1b3_mul(_208269_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("mod", 3)) {
						_case_begin_1a9b733ae:;
						{
							_205850_s.get()._field_operators._field_mod=_1a76a11ec_check_struct_ins_op(_self_, _205850_s,_205921_m,jule::Fn<jule::Bool(jule::Ptr<_1a68709c7_Fn>)>([=](jule::Ptr<_1a68709c7_Fn> _208469_f) mutable -> jule::Bool {
								return static__1a76ab45a_mod(_208469_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_and", 7)) {
						_case_begin_1a9b73436:;
						{
							_205850_s.get()._field_operators._field_bit_and=_1a76a11ec_check_struct_ins_op(_self_, _205850_s,_205921_m,jule::Fn<jule::Bool(jule::Ptr<_1a68709c7_Fn>)>([=](jule::Ptr<_1a68709c7_Fn> _208673_f) mutable -> jule::Bool {
								return static__1a76ab702_bit_and(_208673_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_or", 6)) {
						_case_begin_1a9b734ad:;
						{
							_205850_s.get()._field_operators._field_bit_or=_1a76a11ec_check_struct_ins_op(_self_, _205850_s,_205921_m,jule::Fn<jule::Bool(jule::Ptr<_1a68709c7_Fn>)>([=](jule::Ptr<_1a68709c7_Fn> _208872_f) mutable -> jule::Bool {
								return static__1a76ab999_bit_or(_208872_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_xor", 7)) {
						_case_begin_1a9b73535:;
						{
							_205850_s.get()._field_operators._field_bit_xor=_1a76a11ec_check_struct_ins_op(_self_, _205850_s,_205921_m,jule::Fn<jule::Bool(jule::Ptr<_1a68709c7_Fn>)>([=](jule::Ptr<_1a68709c7_Fn> _209073_f) mutable -> jule::Bool {
								return static__1a76abc41_bit_xor(_209073_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("neg", 3)) {
						_case_begin_1a9b735ac:;
						{
							_205850_s.get()._field_operators._field_neg=_1a76a11ec_check_struct_ins_op(_self_, _205850_s,_205921_m,jule::Fn<jule::Bool(jule::Ptr<_1a68709c7_Fn>)>([=](jule::Ptr<_1a68709c7_Fn> _209269_f) mutable -> jule::Bool {
								return static__1a76ac329_neg(_209269_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("pos", 3)) {
						_case_begin_1a9b73634:;
						{
							_205850_s.get()._field_operators._field_pos=_1a76a11ec_check_struct_ins_op(_self_, _205850_s,_205921_m,jule::Fn<jule::Bool(jule::Ptr<_1a68709c7_Fn>)>([=](jule::Ptr<_1a68709c7_Fn> _209469_f) mutable -> jule::Bool {
								return static__1a76ac5c1_pos(_209469_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_not", 7)) {
						_case_begin_1a9b736ab:;
						{
							_205850_s.get()._field_operators._field_bit_not=_1a76a11ec_check_struct_ins_op(_self_, _205850_s,_205921_m,jule::Fn<jule::Bool(jule::Ptr<_1a68709c7_Fn>)>([=](jule::Ptr<_1a68709c7_Fn> _209673_f) mutable -> jule::Bool {
								return static__1a76ac868_bit_not(_209673_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("add_assign", 10)) {
						_case_begin_1a9b73733:;
						{
							_205850_s.get()._field_operators._field_add_assign=_1a76a11ec_check_struct_ins_op(_self_, _205850_s,_205921_m,jule::Fn<jule::Bool(jule::Ptr<_1a68709c7_Fn>)>([=](jule::Ptr<_1a68709c7_Fn> _209876_f) mutable -> jule::Bool {
								return static__1a76ace51_add_assign(_209876_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("sub_assign", 10)) {
						_case_begin_1a9b737aa:;
						{
							_205850_s.get()._field_operators._field_sub_assign=_1a76a11ec_check_struct_ins_op(_self_, _205850_s,_205921_m,jule::Fn<jule::Bool(jule::Ptr<_1a68709c7_Fn>)>([=](jule::Ptr<_1a68709c7_Fn> _210076_f) mutable -> jule::Bool {
								return static__1a76ad1e8_sub_assign(_210076_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("div_assign", 10)) {
						_case_begin_1a9b73832:;
						{
							_205850_s.get()._field_operators._field_div_assign=_1a76a11ec_check_struct_ins_op(_self_, _205850_s,_205921_m,jule::Fn<jule::Bool(jule::Ptr<_1a68709c7_Fn>)>([=](jule::Ptr<_1a68709c7_Fn> _210276_f) mutable -> jule::Bool {
								return static__1a76ad490_div_assign(_210276_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("mul_assign", 10)) {
						_case_begin_1a9b738a9:;
						{
							_205850_s.get()._field_operators._field_mul_assign=_1a76a11ec_check_struct_ins_op(_self_, _205850_s,_205921_m,jule::Fn<jule::Bool(jule::Ptr<_1a68709c7_Fn>)>([=](jule::Ptr<_1a68709c7_Fn> _210476_f) mutable -> jule::Bool {
								return static__1a76ad737_mul_assign(_210476_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("mod_assign", 10)) {
						_case_begin_1a9b73931:;
						{
							_205850_s.get()._field_operators._field_mod_assign=_1a76a11ec_check_struct_ins_op(_self_, _205850_s,_205921_m,jule::Fn<jule::Bool(jule::Ptr<_1a68709c7_Fn>)>([=](jule::Ptr<_1a68709c7_Fn> _210676_f) mutable -> jule::Bool {
								return static__1a76ad9ce_mod_assign(_210676_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("shl_assign", 10)) {
						_case_begin_1a9b739a8:;
						{
							_205850_s.get()._field_operators._field_shl_assign=_1a76a11ec_check_struct_ins_op(_self_, _205850_s,_205921_m,jule::Fn<jule::Bool(jule::Ptr<_1a68709c7_Fn>)>([=](jule::Ptr<_1a68709c7_Fn> _210876_f) mutable -> jule::Bool {
								return static__1a76adc76_shl_assign(_210876_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("shr_assign", 10)) {
						_case_begin_1a9b73a30:;
						{
							_205850_s.get()._field_operators._field_shr_assign=_1a76a11ec_check_struct_ins_op(_self_, _205850_s,_205921_m,jule::Fn<jule::Bool(jule::Ptr<_1a68709c7_Fn>)>([=](jule::Ptr<_1a68709c7_Fn> _211076_f) mutable -> jule::Bool {
								return static__1a76ae01d_shr_assign(_211076_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_or_assign", 13)) {
						_case_begin_1a9b73aa7:;
						{
							_205850_s.get()._field_operators._field_bit_or_assign=_1a76a11ec_check_struct_ins_op(_self_, _205850_s,_205921_m,jule::Fn<jule::Bool(jule::Ptr<_1a68709c7_Fn>)>([=](jule::Ptr<_1a68709c7_Fn> _211279_f) mutable -> jule::Bool {
								return static__1a76ae2b5_bit_or_assign(_211279_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_and_assign", 14)) {
						_case_begin_1a9b73b2e:;
						{
							_205850_s.get()._field_operators._field_bit_and_assign=_1a76a11ec_check_struct_ins_op(_self_, _205850_s,_205921_m,jule::Fn<jule::Bool(jule::Ptr<_1a68709c7_Fn>)>([=](jule::Ptr<_1a68709c7_Fn> _211480_f) mutable -> jule::Bool {
								return static__1a76ae55c_bit_and_assign(_211480_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_xor_assign", 14)) {
						_case_begin_1a9b73ba6:;
						{
							_205850_s.get()._field_operators._field_bit_xor_assign=_1a76a11ec_check_struct_ins_op(_self_, _205850_s,_205921_m,jule::Fn<jule::Bool(jule::Ptr<_1a68709c7_Fn>)>([=](jule::Ptr<_1a68709c7_Fn> _211680_f) mutable -> jule::Bool {
								return static__1a76ae804_bit_xor_assign(_211680_f);
							}));
						}
					}
					_match_end_1a9b72aea:;
				};
			}
			_iter_next_1a9b72325:;
			++it;
			goto _iter_begin_1a9b72325;
		}
		_iter_end_1a9b72325:;
	};
}



inline void _1a76a2484_precheck_struct_type(jule::Ptr<_1a768cc22_Sema> _self_, jule::Ptr<_1a6826829_Struct>& _212145_s) {
	if (_212145_s.get()._field_cpp_linked) {
		return;;
	};
	if ((_212145_s.get()._field_generics.len() > 0LL)) {
		return;;
	};
	if ((_212145_s.get()._field_instances.len() == 0LL)) {
		jule::Ptr<_1a6836a48_StructIns> _213221_ins = _1a6829387_instance(_212145_s);;
		_213221_ins.get()._field_checked=true;
		_1a682984e_append_instance(_212145_s.ptr(), _213221_ins);
		_1a76a1780_precheck_struct_ins(_self_, _213221_ins);
	};
	_1a76a21ed_check_struct_ins_operators(_self_, _212145_s.get()._field_instances[0LL]);
}



inline void _1a76a2660_precheck_struct_types(jule::Ptr<_1a768cc22_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_structs;
		auto it = expr.begin();
		_iter_begin_1a9ba1871:;
		if (it != expr.end()) {
			jule::Ptr<_1a6826829_Struct> _214221_s = *it;
			{
				_1a76a2484_precheck_struct_type(_self_, _214221_s);
			}
			_iter_next_1a9ba1871:;
			++it;
			goto _iter_begin_1a9ba1871;
		}
		_iter_end_1a9ba1871:;
	};
}



inline void _1a76a28d5_check_rets(_1a768cc22_Sema* _self_, jule::Ptr<_1a6872c93_FnIns>& _214734_f) {
	if (_1a6847eee_is_void(_214734_f.get()._field_decl.ptr())) {
		return;;
	};
	_1a76a4a80_MissingRetChecker _215113_mrc = static__1a76a4e48_new();;
	jule::Bool _215213_ok = _1a76a5e5a_check(&_215113_mrc, _214734_f.get()._field_scope);;
	if ((!(_215213_ok))) {
		_1a769063c_push_err(&(*_self_), _214734_f.get()._field_decl.get()._field_token,jule::Str("missing return at end of function", 33),jule::Slice<jule::Any>());
	};
}



inline void _1a76a2c04_check_fn_ins_sc(_1a768cc22_Sema* _self_, jule::Ptr<_1a6872c93_FnIns>& _215839_f, jule::Ptr<_1a766e374_ScopeChecker>& _215855_sc) {
	if (_215839_f.get()._field_decl.get()._field_cpp_linked) {
		return;;
	};
	_1a768b9bd_append_ret_vars(_215855_sc.get()._field_table.get()._field_vars,_215839_f);
	_1a768bc76_append_param_vars(_215855_sc.get()._field_table.get()._field_vars,_215839_f);
	_1a768c051_append_generic_type_aliases(_215855_sc.get()._field_table.get()._field_type_aliases,_215839_f);
	_1a767d839_check(_215855_sc, _215839_f.get()._field_decl.get()._field_scope,_215839_f.get()._field_scope);
	if ((!(_1a7671145_stopped(_215855_sc.ptr())))) {
		_1a76a28d5_check_rets(&(*_self_), _215839_f);
	};
}



inline void _1a76a3023_check_fn_ins_caller(jule::Ptr<_1a768cc22_Sema> _self_, jule::Ptr<_1a6872c93_FnIns>& _217544_f, jule::Ptr<_1a527737a_Token> _217559_caller) {
	if (_217544_f.get()._field_decl.get()._field_cpp_linked) {
		return;;
	};
	jule::Ptr<_1a76e8e26_SymbolTable> _218017_old = _217544_f.get()._field_decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_1a7690274_set_current_file(_217544_f.get()._field_decl.get()._field_sema.ptr(), _218017_old);
	});;
	jule::Ptr<_1a76e8e26_SymbolTable> _218217_file = _1a768c3a3_find_file(_217544_f.get()._field_decl.get()._field_sema.get()._field_files,_217544_f.get()._field_decl.get()._field_token.get()._field_file);;
	if ((_218217_file != nullptr)) {
		_1a7690274_set_current_file(_217544_f.get()._field_decl.get()._field_sema.ptr(), _218217_file);
	};
	jule::Ptr<_1a766e374_ScopeChecker> _218717_sc = _1a75e3826_new_scope_checker(_217544_f.get()._field_decl.get()._field_sema,_217544_f);;
	_218717_sc.get()._field_called_from=_217559_caller;
	_1a76a2c04_check_fn_ins_sc(_self_.ptr(), _217544_f,_218717_sc);
	if ((_217544_f.get()._field_decl.get()._field_sema != _self_)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_217544_f.get()._field_decl.get()._field_sema.get()._field_errors);
		_217544_f.get()._field_decl.get()._field_sema.get()._field_errors=nullptr;
	};
}



inline void _1a76a3298_check_fn_ins(jule::Ptr<_1a768cc22_Sema> _self_, jule::Ptr<_1a6872c93_FnIns>& _219737_f) {
	_1a76a3023_check_fn_ins_caller(_self_, _219737_f,nullptr);
}



inline void _1a76a351d_check_type_fn(jule::Ptr<_1a768cc22_Sema> _self_, jule::Ptr<_1a68709c7_Fn>& _220138_f) {
	if (_220138_f.get()._field_cpp_linked) {
		return;;
	};
	if ((_220138_f.get()._field_generics.len() > 0LL)) {
		return;;
	};
	{
		auto &expr = _220138_f.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1a9bb04a6:;
		if (it != expr.end()) {
			jule::Ptr<_1a6872c93_FnIns> _221121_ins = *it;
			{
				_1a76a3298_check_fn_ins(_self_, _221121_ins);
			}
			_iter_next_1a9bb04a6:;
			++it;
			goto _iter_begin_1a9bb04a6;
		}
		_iter_end_1a9bb04a6:;
	};
}



inline void _1a76a3793_check_test_fn(_1a768cc22_Sema* _self_, jule::Ptr<_1a6872c93_FnIns>& _221637_f) {
	if (_221637_f.get()._field_decl.get()._field_public) {
		_1a769063c_push_err(&(*_self_), _221637_f.get()._field_decl.get()._field_token,jule::Str("test function cannot be public", 30),jule::Slice<jule::Any>());
		_1a769095b_push_suggestion(&(*_self_), jule::Str("remove \"pub\" modifier", 21),jule::Slice<jule::Any>());
		return;;
	};
	if (((_221637_f.get()._field_params.len() != 1LL) || (_221637_f.get()._field_result != nullptr))) {
		_1a769063c_push_err(&(*_self_), _221637_f.get()._field_decl.get()._field_token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_1a769095b_push_suggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a7730644_Sptr> _222917_sptr = _1a7729c04_sptr(_221637_f.get()._field_params[0LL].get()._field_kind.ptr());;
	if ((_222917_sptr == nullptr)) {
		_1a769063c_push_err(&(*_self_), _221637_f.get()._field_decl.get()._field_token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_1a769095b_push_suggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a6836a48_StructIns> _223613_s = _1a772ab7d_strct(_222917_sptr.get()._field_elem.ptr());;
	if (((_223613_s == nullptr) || (!(_1a7689ea5_is_std_package(_223613_s.get()._field_decl.get()._field_token.get()._field_file.get()._field_path,jule::Str("testing", 7)))))) {
		_1a769063c_push_err(&(*_self_), _221637_f.get()._field_decl.get()._field_token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_1a769095b_push_suggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1a76a3a18_precheck_type_fn(jule::Ptr<_1a768cc22_Sema> _self_, jule::Ptr<_1a68709c7_Fn>& _224441_f) {
	if (_224441_f.get()._field_cpp_linked) {
		return;;
	};
	if ((_224441_f.get()._field_generics.len() > 0LL)) {
		return;;
	};
	if ((_224441_f.get()._field_instances.len() == 0LL)) {
		jule::Ptr<_1a6872c93_FnIns> _225521_ins = _1a6871742_instance(_224441_f);;
		_224441_f.get()._field_instances = jule::alloc_for_append(_224441_f.get()._field_instances,1);_224441_f.get()._field_instances.__push(_225521_ins);;
		_1a7696bb5_reload_fn_ins_types(_self_, _225521_ins);
		_225521_ins.get()._field_reloaded=true;
		if (_1a773d344_has_directive(_224441_f.get()._field_directives,jule::Str("test", 4))) {
			_1a76a3793_check_test_fn(_self_.ptr(), _225521_ins);
		};
	};
}



inline void _1a76a3be4_precheck_fn_types(jule::Ptr<_1a768cc22_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_traits;
		auto it = expr.begin();
		_iter_begin_1a9bbbc21:;
		if (it != expr.end()) {
			jule::Ptr<_1a68d46b7_Trait> _226821_decl = *it;
			{
				{
					auto &expr = _226821_decl.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_1a9bbc4d5:;
					if (it != expr.end()) {
						jule::Ptr<_1a68709c7_Fn> _226925_m = *it;
						{
							_1a76a3a18_precheck_type_fn(_self_, _226925_m);
						}
						_iter_next_1a9bbc4d5:;
						++it;
						goto _iter_begin_1a9bbc4d5;
					}
					_iter_end_1a9bbc4d5:;
				};
			}
			_iter_next_1a9bbbc21:;
			++it;
			goto _iter_begin_1a9bbbc21;
		}
		_iter_end_1a9bbbc21:;
	};
	{
		auto &expr = _self_.get()._field_file.get()._field_funcs;
		auto it = expr.begin();
		_iter_begin_1a9bbc1c7:;
		if (it != expr.end()) {
			jule::Ptr<_1a68709c7_Fn> _227321_decl = *it;
			{
				_1a76a3a18_precheck_type_fn(_self_, _227321_decl);
			}
			_iter_next_1a9bbc1c7:;
			++it;
			goto _iter_begin_1a9bbc1c7;
		}
		_iter_end_1a9bbc1c7:;
	};
}



inline void _1a76a3dc0_check_fn_types(jule::Ptr<_1a768cc22_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_funcs;
		auto it = expr.begin();
		_iter_begin_1a9bbdcab:;
		if (it != expr.end()) {
			jule::Ptr<_1a68709c7_Fn> _228021_decl = *it;
			{
				_1a76a351d_check_type_fn(_self_, _228021_decl);
			}
			_iter_next_1a9bbdcab:;
			++it;
			goto _iter_begin_1a9bbdcab;
		}
		_iter_end_1a9bbdcab:;
	};
}



inline void _1a76a409b_check_package_types(jule::Ptr<_1a768cc22_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1a9bbed9a:;
		if (it != expr.end()) {
			jule::Ptr<_1a76e8e26_SymbolTable> _228821_f = *it;
			{
				_1a7690274_set_current_file(_self_.ptr(), _228821_f);
				_1a76a05c5_check_global_types(_self_);
				_1a76a3be4_precheck_fn_types(_self_);
				_1a76a2660_precheck_struct_types(_self_);
			}
			_iter_next_1a9bbed9a:;
			++it;
			goto _iter_begin_1a9bbed9a;
		}
		_iter_end_1a9bbed9a:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1a9bc01ec:;
		if (it != expr.end()) {
			jule::Ptr<_1a76e8e26_SymbolTable> _229721_f = *it;
			{
				_1a7690274_set_current_file(_self_.ptr(), _229721_f);
				_1a76a1e56_check_struct_types(_self_);
				_1a76a3dc0_check_fn_types(_self_);
			}
			_iter_next_1a9bc01ec:;
			++it;
			goto _iter_begin_1a9bc01ec;
		}
		_iter_end_1a9bc01ec:;
	};
}



inline void _1a76a4277_set_file_sema_fields(jule::Ptr<_1a768cc22_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_funcs;
		auto it = expr.begin();
		_iter_begin_1a9bc2881:;
		if (it != expr.end()) {
			jule::Ptr<_1a68709c7_Fn> _230521_f = *it;
			{
				_230521_f.get()._field_sema=_self_;
			}
			_iter_next_1a9bc2881:;
			++it;
			goto _iter_begin_1a9bc2881;
		}
		_iter_end_1a9bc2881:;
	};
	{
		auto &expr = _self_.get()._field_file.get()._field_structs;
		auto it = expr.begin();
		_iter_begin_1a9bc2c49:;
		if (it != expr.end()) {
			jule::Ptr<_1a6826829_Struct> _230921_st = *it;
			{
				_230921_st.get()._field_sema=_self_;
			}
			_iter_next_1a9bc2c49:;
			++it;
			goto _iter_begin_1a9bc2c49;
		}
		_iter_end_1a9bc2c49:;
	};
}



inline void _1a76a4453_set_sema_fields(jule::Ptr<_1a768cc22_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1a9bc3ee2:;
		if (it != expr.end()) {
			jule::Ptr<_1a76e8e26_SymbolTable> _231521_file = *it;
			{
				_1a7690274_set_current_file(_self_.ptr(), _231521_file);
				_1a76a4277_set_file_sema_fields(_self_);
			}
			_iter_next_1a9bc3ee2:;
			++it;
			goto _iter_begin_1a9bc3ee2;
		}
		_iter_end_1a9bc3ee2:;
	};
}



inline void _1a76a46c8_check(jule::Ptr<_1a768cc22_Sema> _self_, jule::Slice<jule::Ptr<_1a76e8e26_SymbolTable>>& _232130_files) {
	_self_.get()._field_files=_232130_files;
	_1a7692de2_check_imports(_self_.ptr());
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1a7693475_check_enums(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1a76a4453_set_sema_fields(_self_);
	_1a7693299_impl_impls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1a769ea03_check_package_decls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1a76a409b_check_package_types(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1a768cc22_Sema _Src) {
	_Stream << "Sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline _1a76a4a80_MissingRetChecker static__1a76a4e48_new(void) {
	return _1a76a4a80_MissingRetChecker{._field_breaked=jule::Slice<jule::Uintptr>::alloc(16LL), };
}



inline jule::Bool _1a76a5223_check_conditional(_1a76a4a80_MissingRetChecker* _self_, jule::Ptr<_1a7609e69_Conditional> _236936_c) {
	{
		auto &expr = _236936_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_1a9bc8bd9:;
		if (it != expr.end()) {
			jule::Ptr<_1a7660200_If> _237021_elif = *it;
			{
				if ((_237021_elif == nullptr)) {
					return false;
				};
				if ((!(_1a76a5b4c_check_scope(&(*_self_), _237021_elif.get()._field_scope)))) {
					return false;
				};
			}
			_iter_next_1a9bc8bd9:;
			++it;
			goto _iter_begin_1a9bc8bd9;
		}
		_iter_end_1a9bc8bd9:;
	};
	return ((_236936_c.get()._field_default != nullptr) && _1a76a5b4c_check_scope(&(*_self_), _236936_c.get()._field_default.get()._field_scope));
}



inline jule::Bool _1a76a5531_check_match(_1a76a4a80_MissingRetChecker* _self_, jule::Ptr<_1a766d4b6_Match> _238130_m) {
	{
		auto &expr = _238130_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1a9bcb604:;
		if (it != expr.end()) {
			jule::Ptr<_1a766d8d4_Case> _238221_c = *it;
			{
				if ((_238221_c == nullptr)) {
					return false;
				};
				jule::I64 _238617_n = (*_self_)._field_breaked.len();;
				jule::Bool _238717_ok = _1a76a5b4c_check_scope(&(*_self_), _238221_c.get()._field_scope);;
				{
					
					if ((_238617_n != (*_self_)._field_breaked.len())) {
						_case_begin_1a9bcd01d:;
						{
							return false;
						}
					}
					else if ((!(_238717_ok))) {
						_case_begin_1a9bcd095:;
						{
							if ((!((*_self_)._field_falled))) {
								return false;
							};
							goto _case_begin_1a9bcd11c;
						}
					}
					else if ((*_self_)._field_falled) {
						_case_begin_1a9bcd11c:;
						{
							(*_self_)._field_falled=false;
							if ((_238221_c.get()._field_next == nullptr)) {
								return false;
							};
							goto _iter_next_1a9bcb604;
						}
					}
					_match_end_1a9bcce41:;
				};
			}
			_iter_next_1a9bcb604:;
			++it;
			goto _iter_begin_1a9bcb604;
		}
		_iter_end_1a9bcb604:;
	};
	return ((_238130_m.get()._field_default != nullptr) && _1a76a5b4c_check_scope(&(*_self_), _238130_m.get()._field_default.get()._field_scope));
}



inline jule::Bool _1a76a583e_check_inf_iter(_1a76a4a80_MissingRetChecker* _self_, jule::Ptr<_1a761aa90_InfIter> _240733_it) {
	jule::I64 _240813_n = (*_self_)._field_breaked.len();;
	if (_1a76a5b4c_check_scope(&(*_self_), _240733_it.get()._field_scope)) {
		(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_240813_n);
		return true;
	};
	if ((_240813_n != (*_self_)._field_breaked.len())) {
		jule::Uintptr _241417_itaddr = static_cast<jule::Uintptr>(_240733_it);;
		{
			auto expr = (*_self_)._field_breaked.slice(_240813_n);
			auto it = expr.begin();
			_iter_begin_1a9bd240c:;
			if (it != expr.end()) {
				jule::Uintptr _241520_addr = *it;
				{
					if ((_241417_itaddr == _241520_addr)) {
						(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_240813_n);
						return false;
					};
				}
				_iter_next_1a9bd240c:;
				++it;
				goto _iter_begin_1a9bd240c;
			}
			_iter_end_1a9bd240c:;
		};
		(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_240813_n);
	};
	return true;
}



inline jule::Bool _1a76a5b4c_check_scope(_1a76a4a80_MissingRetChecker* _self_, jule::Ptr<_1a7658803_Scope> _242630_s) {
	if ((_242630_s == nullptr)) {
		return false;
	};
	{
		auto &expr = _242630_s.get()._field_stmts;
		auto it = expr.begin();
		_iter_begin_1a9bd383c:;
		if (it != expr.end()) {
			jule::Any _243021_st = *it;
			{
				{
					auto &_match_expr{ _243021_st };
					
					if (_match_expr.type_is<jule::Ptr<_1a766dac1_FallSt>>()) {
						_case_begin_1a9bd45a7:;
						{
							(*_self_)._field_falled=true;
							return false;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1a766c839_BreakSt>>()) {
						_case_begin_1a9bd4651:;
						{
							jule::Uintptr _243621_addr = _243021_st.operator jule::Ptr<_1a766c839_BreakSt>().get()._field_it;;
							if ((_243621_addr != 0LLU)) {
								(*_self_)._field_breaked = jule::alloc_for_append((*_self_)._field_breaked,1);(*_self_)._field_breaked.__push(_243621_addr);;
							};
							return false;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1a7648d10_ContSt>>()) {
						_case_begin_1a9bd46b7:;
						{
							return false;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1a761aa90_InfIter>>()) {
						_case_begin_1a9bd472d:;
						{
							if (_1a76a583e_check_inf_iter(&(*_self_), _243021_st.operator jule::Ptr<_1a761aa90_InfIter>())) {
								return true;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1a766dcad_RetSt>>()) {
						_case_begin_1a9bd4794:;
						{
							return true;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1a7658803_Scope>>()) {
						_case_begin_1a9bd480a:;
						{
							if (_1a76a5b4c_check_scope(&(*_self_), _243021_st.operator jule::Ptr<_1a7658803_Scope>())) {
								return true;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1a76edda4_Data>>()) {
						_case_begin_1a9bd4882:;
						{
							{
								auto &_match_expr{ _243021_st.operator jule::Ptr<_1a76edda4_Data>().get()._field_model };
								
								if (_match_expr.type_is<jule::Ptr<_1a686da5d_BuiltinPanicCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1a686e4ed_BuiltinErrorCallExprModel>>()) {
									_case_begin_1a9bd839c:;
									{
										return true;
									}
								}
								_match_end_1a9bd8347:;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1a7609e69_Conditional>>()) {
						_case_begin_1a9bd4909:;
						{
							if (_1a76a5223_check_conditional(&(*_self_), _243021_st.operator jule::Ptr<_1a7609e69_Conditional>())) {
								return true;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1a766d4b6_Match>>()) {
						_case_begin_1a9bd4981:;
						{
							if (_1a76a5531_check_match(&(*_self_), _243021_st.operator jule::Ptr<_1a766d4b6_Match>())) {
								return true;
							};
						}
					}
					_match_end_1a9bd4497:;
				};
			}
			_iter_next_1a9bd383c:;
			++it;
			goto _iter_begin_1a9bd383c;
		}
		_iter_end_1a9bd383c:;
	};
	return false;
}



inline jule::Bool _1a76a5e5a_check(_1a76a4a80_MissingRetChecker* _self_, jule::Ptr<_1a7658803_Scope> _247224_s) {
	return _1a76a5b4c_check_scope(&(*_self_), _247224_s);
}







std::ostream &operator<<(std::ostream &_Stream, _1a76a4a80_MissingRetChecker _Src) {
	_Stream << "MissingRetChecker{";
	_Stream << "breaked:" << _Src._field_breaked << ", ";
	_Stream << "falled:" << _Src._field_falled;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a76a6752_IterRelation _Src) {
	_Stream << "IterRelation{";
	_Stream << "range:" << _Src._field_range;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a76a7ac7_is_initialized(_1a76a7720_Var* _self_) {
	return ((*_self_)._field_value != nullptr);
}



inline jule::Bool _1a76a7d3b_is_type_inferred(_1a76a7720_Var* _self_) {
	return (((*_self_)._field_kind == nullptr) || ((*_self_)._field_kind.get()._field_decl == nullptr));
}







std::ostream &operator<<(std::ostream &_Stream, _1a76a7720_Var _Src) {
	_Stream << "Var{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "constant:" << _Src._field_constant << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "value:" << _Src._field_value << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "iter_relation:" << _Src._field_iter_relation << ", ";
	_Stream << "depends:" << _Src._field_depends;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1a76a8897_dispose(jule::Ptr<_1a68709c7_Fn> _1027_f) {
	return (((((((((((_1027_f != nullptr) && (_1027_f.get()._field_owner != nullptr)) && (_1027_f.get()._field_ident == jule::Str("dispose", 7))) && (!(_1027_f.get()._field_statically))) && (!(_1027_f.get()._field_unsafety))) && _1027_f.get()._field_public) && _1a6847eee_is_void(_1027_f.ptr())) && (_1027_f.get()._field_generics.len() == 0LL)) && (_1027_f.get()._field_params.len() == 1LL)) && _1027_f.get()._field_params[0LL].get()._field_mutable) && (!(_1a6831ba8_is_ref(_1027_f.get()._field_params[0LL].ptr()))));
}



inline jule::Bool static__1a76a8b3e_to_str(jule::Ptr<_1a68709c7_Fn> _2526_f) {
	if ((((((((((((_2526_f == nullptr) || (_2526_f.get()._field_owner == nullptr)) || (_2526_f.get()._field_ident != jule::Str("to_str", 6))) || _2526_f.get()._field_statically) || _2526_f.get()._field_unsafety) || (!(_2526_f.get()._field_public))) || _1a6847eee_is_void(_2526_f.ptr())) || (_2526_f.get()._field_generics.len() != 0LL)) || (_2526_f.get()._field_params.len() != 1LL)) || _2526_f.get()._field_params[0LL].get()._field_mutable) || _1a6831ba8_is_ref(_2526_f.get()._field_params[0LL].ptr()))) {
		return false;
	};
	jule::Ptr<_1a6872c93_FnIns> _4017_ins = _2526_f.get()._field_instances[0LL];;
	jule::Ptr<_1a772c135_Prim> _4113_prim = _1a7729990_prim(_4017_ins.get()._field_result.ptr());;
	if ((_4113_prim == nullptr)) {
		return false;
	};
	return _1a77300e4_is_str(_4113_prim.ptr());
}



inline jule::Bool static__1a76a8e80_logical(jule::Ptr<_1a68709c7_Fn>& _4824_f, jule::Str _4832_ident) {
	if (((((((((((((((_4824_f == nullptr) || (_4824_f.get()._field_ident != _4832_ident)) || (_4824_f.get()._field_owner == nullptr)) || (_4824_f.get()._field_instances.len() == 0LL)) || _4824_f.get()._field_statically) || _4824_f.get()._field_unsafety) || (!(_4824_f.get()._field_public))) || _1a6847eee_is_void(_4824_f.ptr())) || (_4824_f.get()._field_generics.len() != 0LL)) || (_4824_f.get()._field_params.len() != 2LL)) || _4824_f.get()._field_params[0LL].get()._field_mutable) || _1a6831ba8_is_ref(_4824_f.get()._field_params[0LL].ptr())) || _4824_f.get()._field_params[1LL].get()._field_mutable) || _4824_f.get()._field_params[1LL].get()._field_reference)) {
		return false;
	};
	jule::Ptr<_1a6872c93_FnIns> _6617_ins = _4824_f.get()._field_instances[0LL];;
	jule::Ptr<_1a772c135_Prim> _6713_prim = _1a7729990_prim(_6617_ins.get()._field_result.ptr());;
	if (((_6713_prim == nullptr) || (!(_1a772ed80_is_bool(_6713_prim.ptr()))))) {
		return false;
	};
	return (_6617_ins.get()._field_owner == _1a772ab7d_strct(_6617_ins.get()._field_params[1LL].get()._field_kind.ptr()));
}



inline jule::Bool static__1a76a9227_eq(jule::Ptr<_1a68709c7_Fn> _7522_f) {
	return static__1a76a8e80_logical(_7522_f,jule::Str("eq", 2));
}



inline jule::Bool static__1a76a94be_gt(jule::Ptr<_1a68709c7_Fn> _8022_f) {
	return static__1a76a8e80_logical(_8022_f,jule::Str("gt", 2));
}



inline jule::Bool static__1a76a9766_gt_eq(jule::Ptr<_1a68709c7_Fn> _8525_f) {
	return static__1a76a8e80_logical(_8525_f,jule::Str("gt_eq", 5));
}



inline jule::Bool static__1a76a9a0d_lt(jule::Ptr<_1a68709c7_Fn> _9022_f) {
	return static__1a76a8e80_logical(_9022_f,jule::Str("lt", 2));
}



inline jule::Bool static__1a76a9ca5_lt_eq(jule::Ptr<_1a68709c7_Fn> _9525_f) {
	return static__1a76a8e80_logical(_9525_f,jule::Str("lt_eq", 5));
}



inline jule::Bool static__1a76aa0e6_result(jule::Ptr<_1a68709c7_Fn>& _9923_f, jule::Str _9931_ident) {
	if (((((((((((((((_9923_f == nullptr) || (_9923_f.get()._field_ident != _9931_ident)) || (_9923_f.get()._field_owner == nullptr)) || (_9923_f.get()._field_instances.len() == 0LL)) || _9923_f.get()._field_statically) || _9923_f.get()._field_unsafety) || (!(_9923_f.get()._field_public))) || _1a6847eee_is_void(_9923_f.ptr())) || (_9923_f.get()._field_generics.len() != 0LL)) || (_9923_f.get()._field_params.len() != 2LL)) || _9923_f.get()._field_params[0LL].get()._field_mutable) || _1a6831ba8_is_ref(_9923_f.get()._field_params[0LL].ptr())) || _9923_f.get()._field_params[1LL].get()._field_mutable) || _9923_f.get()._field_params[1LL].get()._field_reference)) {
		return false;
	};
	jule::Ptr<_1a6872c93_FnIns> _11717_ins = _9923_f.get()._field_instances[0LL];;
	return (_1a772ab7d_strct(_11717_ins.get()._field_result.ptr()) == _11717_ins.get()._field_owner);
}



inline jule::Bool static__1a76aa38d_shl(jule::Ptr<_1a68709c7_Fn> _12223_f) {
	return static__1a76aa0e6_result(_12223_f,jule::Str("shl", 3));
}



inline jule::Bool static__1a76aa635_shr(jule::Ptr<_1a68709c7_Fn> _12723_f) {
	return static__1a76aa0e6_result(_12723_f,jule::Str("shr", 3));
}



inline jule::Bool static__1a76aa8cc_add(jule::Ptr<_1a68709c7_Fn> _13223_f) {
	return static__1a76aa0e6_result(_13223_f,jule::Str("add", 3));
}



inline jule::Bool static__1a76aab74_sub(jule::Ptr<_1a68709c7_Fn> _13723_f) {
	return static__1a76aa0e6_result(_13723_f,jule::Str("sub", 3));
}



inline jule::Bool static__1a76aae1b_div(jule::Ptr<_1a68709c7_Fn> _14223_f) {
	return static__1a76aa0e6_result(_14223_f,jule::Str("div", 3));
}



inline jule::Bool static__1a76ab1b3_mul(jule::Ptr<_1a68709c7_Fn> _14723_f) {
	return static__1a76aa0e6_result(_14723_f,jule::Str("mul", 3));
}



inline jule::Bool static__1a76ab45a_mod(jule::Ptr<_1a68709c7_Fn> _15223_f) {
	return static__1a76aa0e6_result(_15223_f,jule::Str("mod", 3));
}



inline jule::Bool static__1a76ab702_bit_and(jule::Ptr<_1a68709c7_Fn> _15727_f) {
	return static__1a76aa0e6_result(_15727_f,jule::Str("bit_and", 7));
}



inline jule::Bool static__1a76ab999_bit_or(jule::Ptr<_1a68709c7_Fn> _16226_f) {
	return static__1a76aa0e6_result(_16226_f,jule::Str("bit_or", 6));
}



inline jule::Bool static__1a76abc41_bit_xor(jule::Ptr<_1a68709c7_Fn> _16727_f) {
	return static__1a76aa0e6_result(_16727_f,jule::Str("bit_xor", 7));
}



inline jule::Bool static__1a76ac082_unary(jule::Ptr<_1a68709c7_Fn>& _17122_f, jule::Str _17130_ident) {
	if (((((((((((((_17122_f == nullptr) || (_17122_f.get()._field_ident != _17130_ident)) || (_17122_f.get()._field_owner == nullptr)) || (_17122_f.get()._field_instances.len() == 0LL)) || _17122_f.get()._field_statically) || _17122_f.get()._field_unsafety) || (!(_17122_f.get()._field_public))) || _1a6847eee_is_void(_17122_f.ptr())) || (_17122_f.get()._field_generics.len() != 0LL)) || (_17122_f.get()._field_params.len() != 1LL)) || _17122_f.get()._field_params[0LL].get()._field_mutable) || _1a6831ba8_is_ref(_17122_f.get()._field_params[0LL].ptr()))) {
		return false;
	};
	jule::Ptr<_1a6872c93_FnIns> _18717_ins = _17122_f.get()._field_instances[0LL];;
	return (_1a772ab7d_strct(_18717_ins.get()._field_result.ptr()) == _18717_ins.get()._field_owner);
}



inline jule::Bool static__1a76ac329_neg(jule::Ptr<_1a68709c7_Fn> _19223_f) {
	return static__1a76ac082_unary(_19223_f,jule::Str("neg", 3));
}



inline jule::Bool static__1a76ac5c1_pos(jule::Ptr<_1a68709c7_Fn> _19723_f) {
	return static__1a76ac082_unary(_19723_f,jule::Str("pos", 3));
}



inline jule::Bool static__1a76ac868_bit_not(jule::Ptr<_1a68709c7_Fn> _20227_f) {
	return static__1a76ac082_unary(_20227_f,jule::Str("bit_not", 7));
}



inline jule::Bool static__1a76acba9_assign(jule::Ptr<_1a68709c7_Fn>& _20623_f, jule::Str _20631_ident) {
	if (((((((((((((((_20623_f == nullptr) || (_20623_f.get()._field_ident != _20631_ident)) || (_20623_f.get()._field_owner == nullptr)) || (_20623_f.get()._field_instances.len() == 0LL)) || _20623_f.get()._field_statically) || _20623_f.get()._field_unsafety) || (!(_20623_f.get()._field_public))) || (!(_1a6847eee_is_void(_20623_f.ptr())))) || (_20623_f.get()._field_generics.len() != 0LL)) || (_20623_f.get()._field_params.len() != 2LL)) || (!(_20623_f.get()._field_params[0LL].get()._field_mutable))) || _1a6831ba8_is_ref(_20623_f.get()._field_params[0LL].ptr())) || _20623_f.get()._field_params[1LL].get()._field_mutable) || _20623_f.get()._field_params[1LL].get()._field_reference)) {
		return false;
	};
	return true;
}



inline jule::Bool static__1a76ace51_add_assign(jule::Ptr<_1a68709c7_Fn> _22730_f) {
	return static__1a76acba9_assign(_22730_f,jule::Str("add_assign", 10));
}



inline jule::Bool static__1a76ad1e8_sub_assign(jule::Ptr<_1a68709c7_Fn> _23230_f) {
	return static__1a76acba9_assign(_23230_f,jule::Str("sub_assign", 10));
}



inline jule::Bool static__1a76ad490_div_assign(jule::Ptr<_1a68709c7_Fn> _23730_f) {
	return static__1a76acba9_assign(_23730_f,jule::Str("div_assign", 10));
}



inline jule::Bool static__1a76ad737_mul_assign(jule::Ptr<_1a68709c7_Fn> _24230_f) {
	return static__1a76acba9_assign(_24230_f,jule::Str("mul_assign", 10));
}



inline jule::Bool static__1a76ad9ce_mod_assign(jule::Ptr<_1a68709c7_Fn> _24730_f) {
	return static__1a76acba9_assign(_24730_f,jule::Str("mod_assign", 10));
}



inline jule::Bool static__1a76adc76_shl_assign(jule::Ptr<_1a68709c7_Fn> _25230_f) {
	return static__1a76acba9_assign(_25230_f,jule::Str("shl_assign", 10));
}



inline jule::Bool static__1a76ae01d_shr_assign(jule::Ptr<_1a68709c7_Fn> _25730_f) {
	return static__1a76acba9_assign(_25730_f,jule::Str("shr_assign", 10));
}



inline jule::Bool static__1a76ae2b5_bit_or_assign(jule::Ptr<_1a68709c7_Fn> _26233_f) {
	return static__1a76acba9_assign(_26233_f,jule::Str("bit_or_assign", 13));
}



inline jule::Bool static__1a76ae55c_bit_and_assign(jule::Ptr<_1a68709c7_Fn> _26734_f) {
	return static__1a76acba9_assign(_26734_f,jule::Str("bit_and_assign", 14));
}



inline jule::Bool static__1a76ae804_bit_xor_assign(jule::Ptr<_1a68709c7_Fn> _27234_f) {
	return static__1a76acba9_assign(_27234_f,jule::Str("bit_xor_assign", 14));
}







std::ostream &operator<<(std::ostream &_Stream, _1a76a8226_FuncPattern _Src) {
	_Stream << "FuncPattern{";
	_Stream << "}";
	return _Stream;
}



inline void _1a76da4bc_push_err(_1a76da104_TypeCompatibilityChecker* _self_, jule::Str _11727_fmt, jule::Slice<jule::Any> _11740_args) {
	_1a769063c_push_err((*_self_)._field_s.ptr(), (*_self_)._field_error_token,_11727_fmt,jule::Any(_11740_args));
}



inline jule::Bool _1a76da731_check_trait(_1a76da104_TypeCompatibilityChecker* _self_) {
	jule::Bool _12132_ok = jule::Bool();
	if (_1a77287a2_is_nil((*_self_)._field_src.ptr())) {
		_12132_ok = true;
		return _12132_ok;
	};
	jule::Ptr<_1a68d46b7_Trait> _12613_trt = _1a772ade2_trt((*_self_)._field_dest.ptr());;
	jule::Bool _12717_ref = false;;
	{
		
		if ((_1a7729c04_sptr((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_1a9c37e57:;
			{
				_12717_ref=true;
				(*_self_)._field_src=_1a7729c04_sptr((*_self_)._field_src.ptr()).get()._field_elem;
				if ((_1a772ab7d_strct((*_self_)._field_src.ptr()) == nullptr)) {
					_12132_ok = false;
					return _12132_ok;
				};
				goto _case_begin_1a9c38012;
			}
		}
		else if ((_1a772ab7d_strct((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_1a9c38012:;
			{
				jule::Ptr<_1a6836a48_StructIns> _13717_s = _1a772ab7d_strct((*_self_)._field_src.ptr());;
				if ((!(_1a682e8cb_is_implements(_13717_s.get()._field_decl.ptr(), _12613_trt)))) {
					_12132_ok = false;
					return _12132_ok;
				};
				if (((!(_12717_ref)) && _1a76d8a09_trait_has_reference_receiver(_12613_trt))) {
					_1a76da4bc_push_err(&(*_self_), jule::Str("trait has reference receiver parameter used method, cannot assign non-reference instance", 88),jule::Slice<jule::Any>());
					_12132_ok = false;
					return _12132_ok;
				};
				_12132_ok = true;
				return _12132_ok;
			}
		}
		else if ((_1a772ade2_trt((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_1a9c38078:;
			{
				_12132_ok = (_12613_trt == _1a772ade2_trt((*_self_)._field_src.ptr()));
				return _12132_ok;
			}
		}
		else {
			_case_begin_1a9c377d6:;
			{
				_12132_ok = false;
				return _12132_ok;
			}
		}
		_match_end_1a9c37770:;
	};
}



inline jule::Bool _1a76da995_check_ptr(_1a76da104_TypeCompatibilityChecker* _self_) {
	jule::Bool _15530_ok = jule::Bool();
	if (_1a77287a2_is_nil((*_self_)._field_src.ptr())) {
		_15530_ok = true;
		return _15530_ok;
	};
	jule::Ptr<_1a7733ba8_Ptr> _16017_dest = _1a7729e68_ptr((*_self_)._field_dest.ptr());;
	if (_1a773467b_is_unsafe(_16017_dest.ptr())) {
		_15530_ok = true;
		return _15530_ok;
	};
	_15530_ok = _1a7728098_equals((*_self_)._field_dest, (*_self_)._field_src);
	return _15530_ok;
}



inline jule::Bool _1a76dac09_check_prim(_1a76da104_TypeCompatibilityChecker* _self_) {
	jule::Bool _16931_ok = jule::Bool();
	if ((!((*_self_)._field_dest.get()._field_variadic))) {
		jule::Ptr<_1a772c135_Prim> _17117_prim = _1a7729990_prim((*_self_)._field_dest.ptr());;
		if (((_17117_prim != nullptr) && _1a7730358_is_any(_17117_prim.ptr()))) {
			_16931_ok = true;
			return _16931_ok;
		};
	};
	_16931_ok = _1a7728098_equals((*_self_)._field_dest, (*_self_)._field_src);
	return _16931_ok;
}



inline jule::Bool _1a76dae6d_check(_1a76da104_TypeCompatibilityChecker* _self_) {
	jule::Bool _17926_ok = jule::Bool();
	if ((_1a7729e68_ptr((*_self_)._field_dest.ptr()) != nullptr)) {
		_17926_ok = _1a76da995_check_ptr(&(*_self_));
		return _17926_ok;
	};
	if (_1a7728ede_nil_compatible((*_self_)._field_dest.ptr())) {
		if (_1a77287a2_is_nil((*_self_)._field_src.ptr())) {
			_17926_ok = true;
			return _17926_ok;
		};
	};
	{
		
		if ((_1a7729990_prim((*_self_)._field_dest.ptr()) != nullptr)) {
			_case_begin_1a9c43627:;
			{
				_17926_ok = _1a76dac09_check_prim(&(*_self_));
				return _17926_ok;
			}
		}
		else if ((_1a772ade2_trt((*_self_)._field_dest.ptr()) != nullptr)) {
			_case_begin_1a9c4302d:;
			{
				_17926_ok = _1a76da731_check_trait(&(*_self_));
				return _17926_ok;
			}
		}
		else {
			_case_begin_1a9c42989:;
			{
				_17926_ok = _1a7728098_equals((*_self_)._field_dest, (*_self_)._field_src);
				return _17926_ok;
			}
		}
		_match_end_1a9c428ac:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a76da104_TypeCompatibilityChecker _Src) {
	_Stream << "TypeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "error_token:" << _Src._field_error_token;
	_Stream << "}";
	return _Stream;
}



inline void _1a76db91e_push_err(_1a76db4ac_AssignTypeChecker* _self_, jule::Str _20927_fmt, jule::Slice<jule::Any> _20940_args) {
	_1a769063c_push_err((*_self_)._field_s.ptr(), (*_self_)._field_error_token,_20927_fmt,jule::Any(_20940_args));
}



inline jule::Bool _1a76dbb83_check_validity(_1a76db4ac_AssignTypeChecker* _self_) {
	jule::Bool _21417_valid = true;;
	{
		
		if ((_1a772a919_fnc((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a9c461b8:;
			{
				jule::Ptr<_1a6872c93_FnIns> _21717_f = _1a772a919_fnc((*_self_)._field_d.get()._field_kind.ptr());;
				{
					
					if (_1a6873a1e_is_builtin(_21717_f.ptr())) {
						_case_begin_1a9c476b4:;
						{
							_1a76db91e_push_err(&(*_self_), jule::Str("builtin define cannot use as anonymous function", 47),jule::Slice<jule::Any>());
							_21417_valid=false;
						}
					}
					else if (_21717_f.get()._field_decl.get()._field_cpp_linked) {
						_case_begin_1a9c4773b:;
						{
							_1a76db91e_push_err(&(*_self_), jule::Str("cpp-linked functions cannot use as anonymous function", 53),jule::Slice<jule::Any>());
							_21417_valid=false;
						}
					}
					else if (_1a684ce27_is_method(_21717_f.get()._field_decl.ptr())) {
						_case_begin_1a9c477b3:;
						{
							_1a76db91e_push_err(&(*_self_), jule::Str("methods cannot use as anonymous function", 40),jule::Slice<jule::Any>());
							_21417_valid=false;
						}
					}
					else if ((_21717_f.get()._field_decl.get()._field_generics.len() > 0LL)) {
						_case_begin_1a9c4783a:;
						{
							_1a76db91e_push_err(&(*_self_), jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>());
							_21417_valid=false;
						}
					}
					_match_end_1a9c475c6:;
				};
			}
		}
		else if ((_1a772b3ba_tup((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a9c46240:;
			{
				_1a76db91e_push_err(&(*_self_), jule::Str("tuples cannot assign to single define in same time", 50),jule::Slice<jule::Any>());
				_21417_valid=false;
			}
		}
		_match_end_1a9c460ec:;
	};
	return _21417_valid;
}



inline jule::Bool _1a76dbde7_check_const(_1a76db4ac_AssignTypeChecker* _self_) {
	if (((((!(_1a76ee767_is_const((*_self_)._field_d.ptr()))) || (_1a7729990_prim((*_self_)._field_dest.ptr()) == nullptr)) || (_1a7729990_prim((*_self_)._field_d.get()._field_kind.ptr()) == nullptr)) || (!(_1a766c460_is_num(_1a7729990_prim((*_self_)._field_d.get()._field_kind.ptr()).get()._field_kind))))) {
		return false;
	};
	if (((*_self_)._field_d.get()._field_model != (*_self_)._field_d.get()._field_constant)) {
		return false;
	};
	jule::Str _25313_kind = _1a7729990_prim((*_self_)._field_dest.ptr()).get()._field_kind;;
	{
		
		if (_1a766c1b8_is_float(_25313_kind)) {
			_case_begin_1a9c4e952:;
			{
				if ((!(_1a76c100d_float_assignable(_25313_kind,(*_self_)._field_d)))) {
					_1a76db91e_push_err(&(*_self_), jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
					return false;
				};
			}
		}
		else if (_1a766bdcc_is_int(_25313_kind)) {
			_case_begin_1a9c4ea40:;
			{
				if ((!(_1a76d9ec2_int_assignable(_25313_kind,(*_self_)._field_d)))) {
					_1a76db91e_push_err(&(*_self_), jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
					return false;
				};
			}
		}
		else {
			_case_begin_1a9c4e347:;
			{
				return false;
			}
		}
		_match_end_1a9c4e2d1:;
	};
	return true;
}



inline jule::Bool _1a76dc15b_is_prim(_1a76db4ac_AssignTypeChecker* _self_) {
	if (((*_self_)._field_dest.get()._field_variadic || (*_self_)._field_d.get()._field_kind.get()._field_variadic)) {
		return false;
	};
	if ((_1a772853d_cpp_linked((*_self_)._field_dest.ptr()) || _1a772853d_cpp_linked((*_self_)._field_d.get()._field_kind.ptr()))) {
		return false;
	};
	return ((_1a7729990_prim((*_self_)._field_dest.ptr()) != nullptr) && (_1a7729990_prim((*_self_)._field_d.get()._field_kind.ptr()) != nullptr));
}



inline jule::Bool _1a76dc3c0_check_compatibility(_1a76db4ac_AssignTypeChecker* _self_) {
	{
		
		if (((*_self_)._field_d == nullptr)) {
			_case_begin_1a9c54858:;
			{
				return false;
			}
		}
		else if ((!(_1a76dbb83_check_validity(&(*_self_))))) {
			_case_begin_1a9c548d0:;
			{
				return false;
			}
		}
		else if (_1a76dbde7_check_const(&(*_self_))) {
			_case_begin_1a9c54957:;
			{
				return true;
			}
		}
		else if ((_1a772a1cc_enm((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a9c549ce:;
			{
				jule::Ptr<_1a77278d3_TypeKind> _29521_dkind = (*_self_)._field_dest;;
				if ((_1a772a1cc_enm((*_self_)._field_dest.ptr()) != nullptr)) {
					_29521_dkind=_1a772a1cc_enm((*_self_)._field_dest.ptr()).get()._field_kind.get()._field_kind;
				} else if ((_1a7729990_prim((*_self_)._field_dest.ptr()) == nullptr)) {
					goto _match_end_1a9c54715;
				};
				if (_1a7668ba9_types_are_compatible(_1a7729990_prim(_1a772a1cc_enm((*_self_)._field_d.get()._field_kind.ptr()).get()._field_kind.get()._field_kind.ptr()).get()._field_kind,_1a7729990_prim(_29521_dkind.ptr()).get()._field_kind)) {
					return true;
				};
			}
		}
		else if (_1a76dc15b_is_prim(&(*_self_))) {
			_case_begin_1a9c54a56:;
			{
				jule::Ptr<_1a772c135_Prim> _30517_dest = _1a7729990_prim((*_self_)._field_dest.ptr());;
				if (_1a7730358_is_any(_30517_dest.ptr())) {
					return true;
				};
				jule::Ptr<_1a772c135_Prim> _30921_src = _1a7729990_prim((*_self_)._field_d.get()._field_kind.ptr());;
				if (_1a7668ba9_types_are_compatible(_30517_dest.get()._field_kind,_30921_src.get()._field_kind)) {
					return true;
				};
			}
		}
		_match_end_1a9c54715:;
	};
	return _1a7695db2_check_type_compatibility((*_self_)._field_s, (*_self_)._field_dest,(*_self_)._field_d.get()._field_kind,(*_self_)._field_error_token);
}



inline jule::Bool _1a76dc634_check(_1a76db4ac_AssignTypeChecker* _self_) {
	jule::Bool _31813_ok = _1a76dc3c0_check_compatibility(&(*_self_));;
	if (_31813_ok) {
		_1a773ed4b_apply_implicit_cast((*_self_)._field_dest,(*_self_)._field_d);
	};
	return _31813_ok;
}







std::ostream &operator<<(std::ostream &_Stream, _1a76db4ac_AssignTypeChecker _Src) {
	_Stream << "AssignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "error_token:" << _Src._field_error_token;
	_Stream << "}";
	return _Stream;
}



inline void _1a76dd38d_push_generic(_1a76dcd0a_DynamicTypeAnnotation* _self_, jule::Ptr<_1a77278d3_TypeKind>& _33636_k, jule::I64 _33650_i) {
	(*_self_)._field_f.get()._field_generics[_33650_i]=_33636_k;
}



inline jule::Bool _1a76dd668_annotate_prim(_1a76dcd0a_DynamicTypeAnnotation* _self_, jule::Ptr<_1a77278d3_TypeKind>& _34044_k) {
	jule::Bool _34060_ok = jule::Bool();
	jule::Str _34113_kind = _1a7727c8a_to_str((*((*_self_)._field_k)).ptr());;
	{
		auto &expr = (*_self_)._field_f.get()._field_decl.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1a9c5e29c:;
		if (it != expr.end()) {
			jule::I64 _34213_i = it - expr.begin();
			jule::Ptr<_1a685d960_GenericDecl> _34216_g = *it;
			{
				if ((_34113_kind != _34216_g.get()._field_ident)) {
					goto _iter_next_1a9c5e29c;
				};
				jule::Ptr<_1a77278d3_TypeKind> _34717_t = (*_self_)._field_f.get()._field_generics[_34213_i];;
				{
					
					if ((_34717_t == nullptr)) {
						_case_begin_1a9c60886:;
						{
							_1a76dd38d_push_generic(&(*_self_), _34044_k,_34213_i);
						}
					}
					else if ((!(_1a7728098_equals(_34717_t, _34044_k)))) {
						_case_begin_1a9c6090d:;
						{
							_34060_ok = false;
							return _34060_ok;
						}
					}
					_match_end_1a9c60776:;
				};
				(*((*_self_)._field_k)).get()._field_kind=_34044_k.get()._field_kind;
				_34060_ok = true;
				return _34060_ok;
			}
			_iter_next_1a9c5e29c:;
			++it;
			_34213_i++;
			goto _iter_begin_1a9c5e29c;
		}
		_iter_end_1a9c5e29c:;
	};
	_34060_ok = false;
	return _34060_ok;
}



inline jule::Bool _1a76dd976_annotate_slc(_1a76dcd0a_DynamicTypeAnnotation* _self_, jule::Ptr<_1a77278d3_TypeKind>& _36343_k) {
	jule::Bool _36359_ok = jule::Bool();
	jule::Ptr<_1a77310a1_Slc> _36417_pslc = _1a772a6a5_slc((*((*_self_)._field_k)).ptr());;
	if ((_36417_pslc == nullptr)) {
		_36359_ok = false;
		return _36359_ok;
	};
	jule::Ptr<_1a77310a1_Slc> _36917_slc = _1a772a6a5_slc(_36343_k.ptr());;
	(*_self_)._field_k=(&(_36417_pslc.get()._field_elem));
	_36359_ok = _1a76e0181_annotate_kind(&(*_self_), _36917_slc.get()._field_elem);
	return _36359_ok;
}



inline jule::Bool _1a76ddd2d_check_map_key(_1a76dcd0a_DynamicTypeAnnotation* _self_, jule::Ptr<_1a77278d3_TypeKind>* _37443_k, jule::Ptr<_1a77278d3_TypeKind>& _37463_ck) {
	jule::Bool _37480_ok = jule::Bool();
	jule::Ptr<_1a77278d3_TypeKind>* _37517_old = (*_self_)._field_k;;
	(*_self_)._field_k=_37443_k;
	_37480_ok=_1a76e0181_annotate_kind(&(*_self_), _37463_ck);
	(*_self_)._field_k=_37517_old;
	return _37480_ok;
}



inline jule::Bool _1a76de13b_annotate_map(_1a76dcd0a_DynamicTypeAnnotation* _self_, jule::Ptr<_1a77278d3_TypeKind>& _38243_k) {
	jule::Bool _38259_ok = jule::Bool();
	jule::Ptr<_1a7732657_Map> _38317_pmap = _1a772b156_map((*((*_self_)._field_k)).ptr());;
	if ((_38317_pmap == nullptr)) {
		_38259_ok = false;
		return _38259_ok;
	};
	jule::Ptr<_1a7732657_Map> _38817_m = _1a772b156_map(_38243_k.ptr());;
	_38259_ok = (_1a76ddd2d_check_map_key(&(*_self_), (&(_38317_pmap.get()._field_key)),_38817_m.get()._field_key) && _1a76ddd2d_check_map_key(&(*_self_), (&(_38317_pmap.get()._field_val)),_38817_m.get()._field_val));
	return _38259_ok;
}



inline jule::Bool _1a76de449_annotate_fn(_1a76dcd0a_DynamicTypeAnnotation* _self_, jule::Ptr<_1a77278d3_TypeKind>& _39442_k) {
	jule::Bool _39458_ok = jule::Bool();
	jule::Ptr<_1a6872c93_FnIns> _39517_pf = _1a772a919_fnc((*((*_self_)._field_k)).ptr());;
	if ((_39517_pf == nullptr)) {
		_39458_ok = false;
		return _39458_ok;
	};
	jule::Ptr<_1a6872c93_FnIns> _39917_f = _1a772a919_fnc(_39442_k.ptr());;
	{
		
		if ((_39517_pf.get()._field_params.len() != _39917_f.get()._field_params.len())) {
			_case_begin_1a9c6b881:;
			{
				_39458_ok = false;
				return _39458_ok;
			}
		}
		else if ((_1a6847eee_is_void(_39517_pf.get()._field_decl.ptr()) != _1a6847eee_is_void(_39917_f.get()._field_decl.ptr()))) {
			_case_begin_1a9c6b908:;
			{
				_39458_ok = false;
				return _39458_ok;
			}
		}
		_match_end_1a9c6b7b5:;
	};
	_39458_ok=true;
	jule::Ptr<_1a77278d3_TypeKind>* _40817_old = (*_self_)._field_k;;
	{
		auto &expr = _39917_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1a9c6d399:;
		if (it != expr.end()) {
			jule::I64 _40914_i = it - expr.begin();
			jule::Ptr<_1a6871e07_ParamIns> _40921_fp = *it;
			{
				(*_self_)._field_k=(&(_39517_pf.get()._field_params[_40914_i].get()._field_kind));
				_39458_ok=(_1a76e0181_annotate_kind(&(*_self_), _40921_fp.get()._field_kind) && _39458_ok);
			}
			_iter_next_1a9c6d399:;
			++it;
			_40914_i++;
			goto _iter_begin_1a9c6d399;
		}
		_iter_end_1a9c6d399:;
	};
	if ((!(_1a6847eee_is_void(_39517_pf.get()._field_decl.ptr())))) {
		(*_self_)._field_k=(&(_39517_pf.get()._field_result));
		_39458_ok=(_1a76e0181_annotate_kind(&(*_self_), _39917_f.get()._field_result) && _39458_ok);
	};
	(*_self_)._field_k=_40817_old;
	return _39458_ok;
}



inline jule::Bool _1a76de757_annotate_ptr(_1a76dcd0a_DynamicTypeAnnotation* _self_, jule::Ptr<_1a77278d3_TypeKind>& _42343_k) {
	jule::Bool _42359_ok = jule::Bool();
	jule::Ptr<_1a7733ba8_Ptr> _42417_pptr = _1a7729e68_ptr((*((*_self_)._field_k)).ptr());;
	if ((_42417_pptr == nullptr)) {
		_42359_ok = false;
		return _42359_ok;
	};
	jule::Ptr<_1a7733ba8_Ptr> _42917_ptr = _1a7729e68_ptr(_42343_k.ptr());;
	(*_self_)._field_k=(&(_42417_pptr.get()._field_elem));
	_42359_ok = _1a76e0181_annotate_kind(&(*_self_), _42917_ptr.get()._field_elem);
	return _42359_ok;
}



inline jule::Bool _1a76dea65_annotate_sptr(_1a76dcd0a_DynamicTypeAnnotation* _self_, jule::Ptr<_1a77278d3_TypeKind>& _43444_k) {
	jule::Bool _43460_ok = jule::Bool();
	jule::Ptr<_1a7730644_Sptr> _43517_ssptr = _1a7729c04_sptr((*((*_self_)._field_k)).ptr());;
	if ((_43517_ssptr == nullptr)) {
		_43460_ok = false;
		return _43460_ok;
	};
	jule::Ptr<_1a7730644_Sptr> _44017_sptr = _1a7729c04_sptr(_43444_k.ptr());;
	(*_self_)._field_k=(&(_43517_ssptr.get()._field_elem));
	_43460_ok = _1a76e0181_annotate_kind(&(*_self_), _44017_sptr.get()._field_elem);
	return _43460_ok;
}



inline jule::Bool _1a76ded73_annotate_any(_1a76dcd0a_DynamicTypeAnnotation* _self_, jule::Ptr<_1a77278d3_TypeKind>& _44543_k) {
	jule::Bool _44559_ok = jule::Bool();
	jule::Str _44613_kind = _1a7727c8a_to_str((*((*_self_)._field_k)).ptr());;
	{
		auto &expr = (*_self_)._field_f.get()._field_decl.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1a9c76913:;
		if (it != expr.end()) {
			jule::I64 _44713_i = it - expr.begin();
			jule::Ptr<_1a685d960_GenericDecl> _44716_g = *it;
			{
				if ((_44613_kind != _44716_g.get()._field_ident)) {
					goto _iter_next_1a9c76913;
				};
				jule::Ptr<_1a77278d3_TypeKind> _45217_t = (*_self_)._field_f.get()._field_generics[_44713_i];;
				{
					
					if ((_45217_t == nullptr)) {
						_case_begin_1a9c77eec:;
						{
							_1a76dd38d_push_generic(&(*_self_), _44543_k,_44713_i);
						}
					}
					else if ((!(_1a7728098_equals(_45217_t, _44543_k)))) {
						_case_begin_1a9c78074:;
						{
							_44559_ok = false;
							return _44559_ok;
						}
					}
					_match_end_1a9c77ddc:;
				};
				(*((*_self_)._field_k)).get()._field_kind=_44543_k.get()._field_kind;
				_44559_ok = true;
				return _44559_ok;
			}
			_iter_next_1a9c76913:;
			++it;
			_44713_i++;
			goto _iter_begin_1a9c76913;
		}
		_iter_end_1a9c76913:;
	};
	_44559_ok = false;
	return _44559_ok;
}



inline jule::Bool _1a76e0181_annotate_kind(_1a76dcd0a_DynamicTypeAnnotation* _self_, jule::Ptr<_1a77278d3_TypeKind>& _46844_k) {
	jule::Bool _46860_ok = jule::Bool();
	if ((((*_self_)._field_k == nullptr) || ((*((*_self_)._field_k)) == nullptr))) {
		return _46860_ok;
	};
	{
		
		if (_1a76ded73_annotate_any(&(*_self_), _46844_k)) {
			_case_begin_1a9c7ab8c:;
			{
				_46860_ok = true;
				return _46860_ok;
			}
		}
		else if ((_1a7729990_prim(_46844_k.ptr()) != nullptr)) {
			_case_begin_1a9c7ac03:;
			{
				_46860_ok = _1a76dd668_annotate_prim(&(*_self_), _46844_k);
				return _46860_ok;
			}
		}
		else if ((_1a772a6a5_slc(_46844_k.ptr()) != nullptr)) {
			_case_begin_1a9c7a8c3:;
			{
				_46860_ok = _1a76dd976_annotate_slc(&(*_self_), _46844_k);
				return _46860_ok;
			}
		}
		else if ((_1a772b156_map(_46844_k.ptr()) != nullptr)) {
			_case_begin_1a9c7a939:;
			{
				_46860_ok = _1a76de13b_annotate_map(&(*_self_), _46844_k);
				return _46860_ok;
			}
		}
		else if ((_1a772a919_fnc(_46844_k.ptr()) != nullptr)) {
			_case_begin_1a9c7a9a0:;
			{
				_46860_ok = _1a76de449_annotate_fn(&(*_self_), _46844_k);
				return _46860_ok;
			}
		}
		else if ((_1a7729e68_ptr(_46844_k.ptr()) != nullptr)) {
			_case_begin_1a9c7a4e9:;
			{
				_46860_ok = _1a76de757_annotate_ptr(&(*_self_), _46844_k);
				return _46860_ok;
			}
		}
		else if ((_1a7729c04_sptr(_46844_k.ptr()) != nullptr)) {
			_case_begin_1a9c7a560:;
			{
				_46860_ok = _1a76dea65_annotate_sptr(&(*_self_), _46844_k);
				return _46860_ok;
			}
		}
		else {
			_case_begin_1a9c7a483:;
			{
				_46860_ok = false;
				return _46860_ok;
			}
		}
		_match_end_1a9c7a42d:;
	};
}



inline jule::Bool _1a76e03e5_annotate(_1a76dcd0a_DynamicTypeAnnotation* _self_) {
	jule::Bool _49336_ok = jule::Bool();
	(*_self_)._field_k=(&((*_self_)._field_p.get()._field_kind));
	_49336_ok = _1a76e0181_annotate_kind(&(*_self_), (*_self_)._field_a.get()._field_kind);
	return _49336_ok;
}







std::ostream &operator<<(std::ostream &_Stream, _1a76dcd0a_DynamicTypeAnnotation _Src) {
	_Stream << "DynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "k:" << _Src._field_k;
	_Stream << "}";
	return _Stream;
}



inline void _1a76e111b_push_err_token(_1a76e0abb_FnCallArgChecker* _self_, jule::Ptr<_1a527737a_Token> _50933_token, jule::Str _50948_fmt, jule::Slice<jule::Any> _50961_args) {
	_1a769063c_push_err((*_self_)._field_e.get()._field_s.ptr(), _50933_token,_50948_fmt,jule::Any(_50961_args));
}



inline void _1a76e143a_push_err(_1a76e0abb_FnCallArgChecker* _self_, jule::Str _51327_fmt, jule::Slice<jule::Any> _51340_args) {
	_1a76e111b_push_err_token(&(*_self_), (*_self_)._field_error_token,_51327_fmt,jule::Any(_51340_args));
}



inline jule::Slice<jule::Ptr<_1a6871e07_ParamIns>> _1a76e169e_get_params(_1a76e0abb_FnCallArgChecker* _self_) {
	if (((((*_self_)._field_f.get()._field_params.len() > 0LL) && ((*_self_)._field_f.get()._field_params[0LL].get()._field_decl != nullptr)) && _1a68491ed_is_self((*_self_)._field_f.get()._field_params[0LL].get()._field_decl.ptr()))) {
		return (*_self_)._field_f.get()._field_params.slice(1LL);
	};
	return (*_self_)._field_f.get()._field_params;
}



inline jule::Bool _1a76e19ac_check_counts(_1a76e0abb_FnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1a6871e07_ParamIns>>& _52632_params) {
	jule::Bool _52655_ok = jule::Bool();
	jule::I64 _52717_n = _52632_params.len();;
	if (((_52717_n > 0LL) && _1a68491ed_is_self(_52632_params[0LL].get()._field_decl.ptr()))) {
		(_52717_n)--;
	};
	jule::I64 _53217_diff = (_52717_n - (*_self_)._field_args.len());;
	{
		
		if ((_53217_diff == 0LL)) {
			_case_begin_1a9c880b7:;
			{
				_52655_ok = true;
				return _52655_ok;
			}
		}
		else if (((_52717_n > 0LL) && _52632_params[(_52717_n - 1LL)].get()._field_decl.get()._field_variadic)) {
			_case_begin_1a9c8813e:;
			{
				_52655_ok = true;
				return _52655_ok;
			}
		}
		else if (((_53217_diff < 0LL) || (_53217_diff > _52632_params.len()))) {
			_case_begin_1a9c881b6:;
			{
				_1a76e143a_push_err(&(*_self_), jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
				_52655_ok = false;
				return _52655_ok;
			}
		}
		_match_end_1a9c87eda:;
	};
	jule::Str _54317_idents = jule::Str();;
	for (; (_53217_diff > 0LL); (_53217_diff)--) {
		{
			_54317_idents+=(jule::Str(", ", 2) + _52632_params[(_52717_n - _53217_diff)].get()._field_decl.get()._field_ident);
		}
	_iter_next_1a9c88271:;
	}
	_iter_end_1a9c88271:;;
	(_54317_idents).mut_slice(2LL);;
	_1a76e143a_push_err(&(*_self_), jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(_54317_idents)}));
	_52655_ok = false;
	return _52655_ok;
}



inline jule::Bool _1a76e1e0d_check_arg(_1a76e0abb_FnCallArgChecker* _self_, jule::Ptr<_1a6871e07_ParamIns>& _55333_p, jule::Ptr<_1a76edda4_Data>& _55352_arg, jule::Ptr<_1a527737a_Token>& _55369_error_token) {
	jule::Bool _55392_ok = jule::Bool();
	if (((*_self_)._field_dynamic_annotation && _1a68747bc_parameter_uses_generics(_55333_p.get()._field_decl,(*_self_)._field_f.get()._field_decl.get()._field_generics))) {
		_55392_ok=(!(_55333_p.get()._field_decl.get()._field_variadic));
		if (_55392_ok) {
			_1a76dcd0a_DynamicTypeAnnotation _55725_dta = _1a76dcd0a_DynamicTypeAnnotation{._field_e=(*_self_)._field_e, ._field_f=(*_self_)._field_f, ._field_p=_55333_p, ._field_a=_55352_arg, ._field_error_token=_55369_error_token, };;
			_55392_ok=_1a76e03e5_annotate(&_55725_dta);
		};
		if ((!(_55392_ok))) {
			_1a76e111b_push_err_token(&(*_self_), _55369_error_token,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
			_55392_ok = false;
			return _55392_ok;
		};
	};
	if (_1a7697743_check_validity_for_init_expr((*_self_)._field_e.get()._field_s, _55333_p.get()._field_decl.get()._field_mutable,_55333_p.get()._field_decl.get()._field_reference,_55333_p.get()._field_kind,_55352_arg,_55369_error_token)) {
		_1a769593e_check_assign_type((*_self_)._field_e.get()._field_s, _55333_p.get()._field_decl.get()._field_reference,_55333_p.get()._field_kind,_55352_arg,_55369_error_token);
	};
	_55392_ok = true;
	return _55392_ok;
}



inline jule::Bool _1a76e22b5_push(_1a76e0abb_FnCallArgChecker* _self_, jule::Ptr<_1a6871e07_ParamIns>& _58028_p, jule::Ptr<_1a6855e41_Expr> _58046_arg) {
	jule::Bool _58060_ok = jule::Bool();
	jule::Ptr<_1a77278d3_TypeKind> _58117_old = (*_self_)._field_e.get()._field_prefix;;
	jule::Bool _58213_old_immut = (*_self_)._field_e.get()._field_immutable;;
	jule::Ptr<_1a76edda4_Data> _58317_d = nullptr;;
	(*_self_)._field_e.get()._field_immutable=(!(_58028_p.get()._field_decl.get()._field_mutable));
	if (((!((*_self_)._field_dynamic_annotation)) && (!(_58028_p.get()._field_decl.get()._field_variadic)))) {
		(*_self_)._field_e.get()._field_prefix=_58028_p.get()._field_kind;
	} else {
		(*_self_)._field_e.get()._field_prefix=nullptr;
	};
	_58317_d=_1a7719210_eval_expr_kind((*_self_)._field_e, jule::Any(_58046_arg.get()._field_kind));
	(*_self_)._field_e.get()._field_prefix=_58117_old;
	(*_self_)._field_e.get()._field_immutable=_58213_old_immut;
	if ((_58317_d == nullptr)) {
		_58060_ok = false;
		return _58060_ok;
	};
	(*_self_)._field_arg_models = jule::alloc_for_append((*_self_)._field_arg_models,1);(*_self_)._field_arg_models.__push(jule::Any(_58317_d));;
	_58060_ok = _1a76e1e0d_check_arg(&(*_self_), _58028_p,_58317_d,_58046_arg.get()._field_token);
	return _58060_ok;
}



inline jule::Bool _1a76e266c_push_variadic(_1a76e0abb_FnCallArgChecker* _self_, jule::Ptr<_1a6871e07_ParamIns>& _60437_p, jule::I64 _60455_i) {
	jule::Bool _60465_ok = jule::Bool();
	_60465_ok=true;
	jule::Bool _60617_variadiced = false;;
	jule::Bool _60713_more = ((_60455_i + 1LL) < (*_self_)._field_args.len());;
	jule::Ptr<_1a684533c_SliceExprModel> _60817_model = jule::new_ptr<_1a684533c_SliceExprModel>(_1a684533c_SliceExprModel{._field_elem_kind=_60437_p.get()._field_kind, });;
	jule::Ptr<_1a77278d3_TypeKind> _61217_old = (*_self_)._field_e.get()._field_prefix;;
	jule::Bool _61713_variadic = _60437_p.get()._field_kind.get()._field_variadic;;
	_60437_p.get()._field_kind.get()._field_variadic=false;
	__JULE_DEFER({
		_60437_p.get()._field_kind.get()._field_variadic=_61713_variadic;
	});;
	for (; (_60455_i < (*_self_)._field_args.len()); (_60455_i)++) {
		{
			jule::Ptr<_1a6855e41_Expr> _62421_arg = (*_self_)._field_args[_60455_i];;
			{
				auto &_match_expr{ _62421_arg.get()._field_kind };
				
				if (_match_expr.type_is<jule::Ptr<_1a68586a2_VariadicExpr>>()) {
					_case_begin_1a9c9a3e8:;
					{
						(*_self_)._field_e.get()._field_prefix=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(jule::new_ptr<_1a77310a1_Slc>(_1a77310a1_Slc{._field_elem=_60437_p.get()._field_kind}), 7)});
					}
				}
				else {
					_case_begin_1a9c9a959:;
					{
						(*_self_)._field_e.get()._field_prefix=_60437_p.get()._field_kind;
					}
				}
				_match_end_1a9c9a904:;
			};
			jule::Ptr<_1a76edda4_Data> _63721_d = _1a771951d_eval((*_self_)._field_e, _62421_arg);;
			if ((_63721_d == nullptr)) {
				_60465_ok=false;
				goto _iter_next_1a9c9a0b8;
			};
			if (_63721_d.get()._field_kind.get()._field_variadic) {
				_60617_variadiced=true;
				{
					auto &_match_expr{ _63721_d.get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1a684533c_SliceExprModel>>()) {
						_case_begin_1a9c9cb7b:;
						{
							_60817_model=_63721_d.get()._field_model.operator jule::Ptr<_1a684533c_SliceExprModel>();
							_60817_model.get()._field_elem_kind=_60437_p.get()._field_kind;
						}
					}
					else {
						_case_begin_1a9c9d0aa:;
						{
							_60817_model=nullptr;
							(*_self_)._field_arg_models = jule::alloc_for_append((*_self_)._field_arg_models,1);(*_self_)._field_arg_models.__push(jule::Any(_63721_d));;
						}
					}
					_match_end_1a9c9d055:;
				};
				_60437_p.get()._field_kind.get()._field_variadic=true;
				_60465_ok=(_60465_ok && _1a76e1e0d_check_arg(&(*_self_), _60437_p,_63721_d,_62421_arg.get()._field_token));
				(_60455_i)++;
				goto _iter_end_1a9c9a0b8;
			};
			_60465_ok=(_60465_ok && _1a76e1e0d_check_arg(&(*_self_), _60437_p,_63721_d,_62421_arg.get()._field_token));
			_60817_model.get()._field_elems = jule::alloc_for_append(_60817_model.get()._field_elems,1);_60817_model.get()._field_elems.__push(jule::Any(_63721_d.get()._field_model));;
		}
	_iter_next_1a9c9a0b8:;
	}
	_iter_end_1a9c9a0b8:;;
	(*_self_)._field_e.get()._field_prefix=_61217_old;
	if ((_60617_variadiced && _60713_more)) {
		_1a76e111b_push_err_token(&(*_self_), (*_self_)._field_args[_60455_i].get()._field_token,jule::Str("variadic argument can't use with more argument", 46),jule::Slice<jule::Any>());
	};
	if ((_60817_model != nullptr)) {
		(*_self_)._field_arg_models = jule::alloc_for_append((*_self_)._field_arg_models,1);(*_self_)._field_arg_models.__push(jule::Any(_60817_model));;
	};
	return _60465_ok;
}



inline jule::Bool _1a76e297a_check_args(_1a76e0abb_FnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1a6871e07_ParamIns>>& _68334_params) {
	jule::Bool _68357_ok = jule::Bool();
	jule::Bool _68413_arg = (*_self_)._field_e.get()._field_arg;;
	(*_self_)._field_e.get()._field_arg=true;
	_68357_ok=true;
	jule::I64 _68817_i = 0LL;;
	if (((_68334_params.len() > 0LL) && _1a68491ed_is_self(_68334_params[0LL].get()._field_decl.ptr()))) {
		(_68817_i)++;
	};
	_julec_label_iter:;
	while ((_68817_i < _68334_params.len())) {
		{
			jule::Ptr<_1a6871e07_ParamIns> _69521_p = _68334_params[_68817_i];;
			{
				
				if (_69521_p.get()._field_decl.get()._field_variadic) {
					_case_begin_1a9ca613a:;
					{
						_68357_ok=(_1a76e266c_push_variadic(&(*_self_), _69521_p,_68817_i) && _68357_ok);
						goto _iter_end_1a9ca408e;
					}
				}
				else if (((*_self_)._field_args.len() <= _68817_i)) {
					_case_begin_1a9ca5766:;
					{
						_68357_ok=false;
						goto _iter_end_1a9ca408e;
					}
				}
				else {
					_case_begin_1a9ca53e2:;
					{
						_68357_ok=(_1a76e22b5_push(&(*_self_), _69521_p,(*_self_)._field_args[_68817_i]) && _68357_ok);
					}
				}
				_match_end_1a9ca537b:;
			};
			(_68817_i)++;
		}
	_iter_next_1a9ca408e:;
	}
	_iter_end_1a9ca408e:;;
	(*_self_)._field_e.get()._field_arg=_68413_arg;
	return _68357_ok;
}



inline jule::Bool _1a76e2c11_check_dynamic_type_annotation(_1a76e0abb_FnCallArgChecker* _self_) {
	jule::Bool _71450_ok = jule::Bool();
	{
		auto &expr = (*_self_)._field_f.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1a9ca8109:;
		if (it != expr.end()) {
			jule::Ptr<_1a77278d3_TypeKind> _71516_g = *it;
			{
				if ((_71516_g == nullptr)) {
					_1a76e143a_push_err(&(*_self_), jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
					_71450_ok = false;
					return _71450_ok;
				};
			}
			_iter_next_1a9ca8109:;
			++it;
			goto _iter_begin_1a9ca8109;
		}
		_iter_end_1a9ca8109:;
	};
	_71450_ok = true;
	return _71450_ok;
}



inline jule::Bool _1a76e2e86_check(_1a76e0abb_FnCallArgChecker* _self_) {
	jule::Bool _72426_ok = jule::Bool();
	jule::Slice<jule::Ptr<_1a6871e07_ParamIns>> _72517_params = _1a76e169e_get_params(&(*_self_));;
	_72426_ok=_1a76e19ac_check_counts(&(*_self_), _72517_params);
	if ((!(_72426_ok))) {
		_72426_ok = false;
		return _72426_ok;
	};
	_72426_ok=_1a76e297a_check_args(&(*_self_), _72517_params);
	if ((_72426_ok && (*_self_)._field_dynamic_annotation)) {
		_72426_ok=_1a76e2c11_check_dynamic_type_annotation(&(*_self_));
	};
	return _72426_ok;
}







std::ostream &operator<<(std::ostream &_Stream, _1a76e0abb_FnCallArgChecker _Src) {
	_Stream << "FnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamic_annotation:" << _Src._field_dynamic_annotation << ", ";
	_Stream << "arg_models:" << _Src._field_arg_models;
	_Stream << "}";
	return _Stream;
}



inline void _1a76e39d1_push_err(_1a76e34c5_StructLitChecker* _self_, jule::Ptr<_1a527737a_Token> _74827_token, jule::Str _74842_fmt, jule::Slice<jule::Any> _74855_args) {
	_1a7700dea_push_err((*_self_)._field_e.ptr(), _74827_token,_74842_fmt,jule::Any(_74855_args));
}



inline void _1a76e3d00_push_suggestion(_1a76e34c5_StructLitChecker* _self_, jule::Str _75334_fmt, jule::Slice<jule::Any> _75347_args) {
	_1a7701219_push_suggestion((*_self_)._field_e.ptr(), _75334_fmt,jule::Any(_75347_args));
}



inline void _1a76e41b8_push_match(_1a76e34c5_StructLitChecker* _self_, jule::Ptr<_1a6830899_FieldIns>& _75734_f, jule::Ptr<_1a76edda4_Data>& _75753_d, jule::Ptr<_1a527737a_Token>& _75768_error_token) {
	;
	if (_1a7697743_check_validity_for_init_expr((*_self_)._field_e.get()._field_s, (!((*_self_)._field_e.get()._field_immutable)),false,_75734_f.get()._field_kind,_75753_d,_75768_error_token)) {
		_1a769593e_check_assign_type((*_self_)._field_e.get()._field_s, false,_75734_f.get()._field_kind,_75753_d,_75768_error_token);
	};
	(*_self_)._field_args = jule::alloc_for_append((*_self_)._field_args,1);(*_self_)._field_args.__push(jule::new_ptr<_1a6827e8a_StructArgExprModel>(_1a6827e8a_StructArgExprModel{._field_field=_75734_f, ._field_expr=jule::Any(_75753_d.get()._field_model)}));;
}



inline void _1a76e44d7_check_pair(_1a76e34c5_StructLitChecker* _self_, jule::Ptr<_1a685a929_FieldExprPair>& _77034_pair, jule::Slice<jule::Ptr<_1a6855e41_Expr>>& _77061_exprs) {
	jule::Ptr<_1a6830899_FieldIns> _77217_f = _1a6832ea6_find_field((*_self_)._field_s.ptr(), _77034_pair.get()._field_field.get()._field_kind);;
	if ((_77217_f == nullptr)) {
		_1a76e39d1_push_err(&(*_self_), _77034_pair.get()._field_field,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_77034_pair.get()._field_field.get()._field_kind)}));
		return;;
	};
	if ((!(_1a7690d13_is_accessible_define((*_self_)._field_e.get()._field_s.ptr(), _77217_f.get()._field_decl.get()._field_public,_77217_f.get()._field_decl.get()._field_token)))) {
		_1a76e39d1_push_err(&(*_self_), _77034_pair.get()._field_field,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_77034_pair.get()._field_field.get()._field_kind)}));
		_1a76e3d00_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
	};
	_julec_label_dup_lookup:;
	{
		auto &expr = _77061_exprs;
		auto it = expr.begin();
		_iter_begin_1a9cb6b62:;
		if (it != expr.end()) {
			jule::Ptr<_1a6855e41_Expr> _78421_expr = *it;
			{
				{
					auto &_match_expr{ _78421_expr.get()._field_kind };
					
					if (_match_expr.type_is<jule::Ptr<_1a685a929_FieldExprPair>>()) {
						_case_begin_1a9cb7569:;
						{
							jule::Ptr<_1a685a929_FieldExprPair> _78725_dpair = _78421_expr.get()._field_kind.operator jule::Ptr<_1a685a929_FieldExprPair>();;
							{
								
								if ((_77034_pair == _78725_dpair)) {
									_case_begin_1a9cb836c:;
									{
										goto _iter_end_1a9cb6b62;
									}
								}
								else if ((_77034_pair.get()._field_field.get()._field_kind == _78725_dpair.get()._field_field.get()._field_kind)) {
									_case_begin_1a9cb83e4:;
									{
										_1a76e39d1_push_err(&(*_self_), _77034_pair.get()._field_field,jule::Str("@ already has expression", 24),jule::Slice<jule::Any>::make({jule::Any(_77034_pair.get()._field_field.get()._field_kind)}));
										goto _iter_end_1a9cb6b62;
									}
								}
								_match_end_1a9cb82b2:;
							};
						}
					}
					_match_end_1a9cb2333:;
				};
			}
			_iter_next_1a9cb6b62:;
			++it;
			goto _iter_begin_1a9cb6b62;
		}
		_iter_end_1a9cb6b62:;
	};
	jule::Ptr<_1a77278d3_TypeKind> _79817_prefix = (*_self_)._field_e.get()._field_prefix;;
	__JULE_DEFER({
		(*_self_)._field_e.get()._field_prefix=_79817_prefix;
	});;
	(*_self_)._field_e.get()._field_prefix=_77217_f.get()._field_kind;
	jule::Ptr<_1a76edda4_Data> _80217_d = _1a7719210_eval_expr_kind((*_self_)._field_e, jule::Any(_77034_pair.get()._field_expr));;
	if ((_80217_d == nullptr)) {
		return;;
	};
	_1a76e41b8_push_match(&(*_self_), _77217_f,_80217_d,_77034_pair.get()._field_field);
}



inline jule::Bool _1a76e47e5_ready_exprs(_1a76e34c5_StructLitChecker* _self_, jule::Slice<jule::Ptr<_1a6855e41_Expr>>& _80935_exprs) {
	jule::Bool _81017_ok = true;;
	{
		auto &expr = _80935_exprs;
		auto it = expr.begin();
		_iter_begin_1a9cbc54c:;
		if (it != expr.end()) {
			jule::I64 _81114_i = it - expr.begin();
			jule::Ptr<_1a6855e41_Expr> _81121_expr = *it;
			{
				{
					auto &_match_expr{ _81121_expr.get()._field_kind };
					
					if (_match_expr.type_is<jule::Ptr<_1a685be47_KeyValPair>>()) {
						_case_begin_1a9cbd152:;
						{
							jule::Ptr<_1a685be47_KeyValPair> _81425_pair = _81121_expr.get()._field_kind.operator jule::Ptr<_1a685be47_KeyValPair>();;
							{
								auto &_match_expr{ _81425_pair.get()._field_key.get()._field_kind };
								
								if (_match_expr.type_is<jule::Ptr<_1a6857ae1_IdentExpr>>()) {
									_case_begin_1a9cbecad:;
									{
										goto _match_end_1a9cbe087;
									}
								}
								else {
									_case_begin_1a9cbe10e:;
									{
										_1a76e39d1_push_err(&(*_self_), _81425_pair.get()._field_colon,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
										_81017_ok=false;
										goto _iter_next_1a9cbc54c;
									}
								}
								_match_end_1a9cbe087:;
							};
							_80935_exprs[_81114_i].get()._field_kind=jule::Any(jule::new_ptr<_1a685a929_FieldExprPair>(_1a685a929_FieldExprPair{._field_field=_81425_pair.get()._field_key.get()._field_token, ._field_expr=_81425_pair.get()._field_val}));
						}
					}
					_match_end_1a9cbd0b9:;
				};
			}
			_iter_next_1a9cbc54c:;
			++it;
			_81114_i++;
			goto _iter_begin_1a9cbc54c;
		}
		_iter_end_1a9cbc54c:;
	};
	return _81017_ok;
}



inline void _1a76e4a6a_check(_1a76e34c5_StructLitChecker* _self_, jule::Slice<jule::Ptr<_1a6855e41_Expr>>& _83329_exprs) {
	if ((_83329_exprs.len() == 0LL)) {
		return;;
	};
	if ((!(_1a76e47e5_ready_exprs(&(*_self_), _83329_exprs)))) {
		return;;
	};
	jule::Bool _84217_paired = false;;
	{
		auto &expr = _83329_exprs;
		auto it = expr.begin();
		_iter_begin_1a9cc1c49:;
		if (it != expr.end()) {
			jule::I64 _84314_i = it - expr.begin();
			jule::Ptr<_1a6855e41_Expr> _84321_expr = *it;
			{
				{
					auto &_match_expr{ _84321_expr.get()._field_kind };
					
					if (_match_expr.type_is<jule::Ptr<_1a685a929_FieldExprPair>>()) {
						_case_begin_1a9cc7799:;
						{
							jule::Ptr<_1a685a929_FieldExprPair> _84625_pair = _84321_expr.get()._field_kind.operator jule::Ptr<_1a685a929_FieldExprPair>();;
							if (((_84314_i > 0LL) && (!(_84217_paired)))) {
								_1a76e39d1_push_err(&(*_self_), _84625_pair.get()._field_field,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							};
							_84217_paired=true;
							_1a76e44d7_check_pair(&(*_self_), _84625_pair,_83329_exprs);
						}
					}
					else {
						_case_begin_1a9cc280a:;
						{
							if (_84217_paired) {
								_1a76e39d1_push_err(&(*_self_), _84321_expr.get()._field_token,jule::Str("argument must target to field", 29),jule::Slice<jule::Any>());
							};
							if ((_84314_i >= (*_self_)._field_s.get()._field_fields.len())) {
								_1a76e39d1_push_err(&(*_self_), _84321_expr.get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
								goto _iter_next_1a9cc1c49;
							};
							jule::Ptr<_1a6830899_FieldIns> _86125_field = (*_self_)._field_s.get()._field_fields[_84314_i];;
							if ((!(_1a7690d13_is_accessible_define((*_self_)._field_e.get()._field_s.ptr(), _86125_field.get()._field_decl.get()._field_public,_86125_field.get()._field_decl.get()._field_token)))) {
								_1a76e39d1_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("structure cannot instantiating because it has non-public fields", 63),jule::Slice<jule::Any>());
								_1a76e3d00_push_suggestion(&(*_self_), jule::Str("use field:expression pairs to instantiate", 41),jule::Slice<jule::Any>());
								return;;
							};
							jule::Ptr<_1a77278d3_TypeKind> _86925_prefix = (*_self_)._field_e.get()._field_prefix;;
							__JULE_DEFER({
								(*_self_)._field_e.get()._field_prefix=_86925_prefix;
							});;
							(*_self_)._field_e.get()._field_prefix=_86125_field.get()._field_kind;
							jule::Ptr<_1a76edda4_Data> _87325_d = _1a7719210_eval_expr_kind((*_self_)._field_e, jule::Any(_84321_expr.get()._field_kind));;
							if ((_87325_d == nullptr)) {
								goto _iter_next_1a9cc1c49;
							};
							_1a76e41b8_push_match(&(*_self_), _86125_field,_87325_d,_84321_expr.get()._field_token);
						}
					}
					_match_end_1a9cc27a5:;
				};
			}
			_iter_next_1a9cc1c49:;
			++it;
			_84314_i++;
			goto _iter_begin_1a9cc1c49;
		}
		_iter_end_1a9cc1c49:;
	};
	if ((!(_84217_paired))) {
		jule::I64 _88417_n = (*_self_)._field_s.get()._field_fields.len();;
		jule::I64 _88521_diff = (_88417_n - _83329_exprs.len());;
		{
			
			if ((_88521_diff <= 0LL)) {
				_case_begin_1a9cca857:;
				{
					return;;
				}
			}
			_match_end_1a9cca747:;
		};
		jule::Str _89121_idents = jule::Str();;
		for (; (_88521_diff > 0LL); (_88521_diff)--) {
			{
				_89121_idents+=(jule::Str(", ", 2) + (*_self_)._field_s.get()._field_fields[(_88417_n - _88521_diff)].get()._field_decl.get()._field_ident);
			}
		_iter_next_1a9cc250d:;
		}
		_iter_end_1a9cc250d:;;
		(_89121_idents).mut_slice(2LL);;
		_1a76e39d1_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(_89121_idents)}));
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a76e34c5_StructLitChecker _Src) {
	_Stream << "StructLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a76a7720_Var> _1a76e554e_build_var(_1a76e50a9_RangeChecker* _self_, jule::Ptr<_1a68631d4_VarDecl>& _91029_decl) {
	jule::Ptr<_1a76a7720_Var> _91117_v = _1a6879d88_build_var(_91029_decl);;
	return _91117_v;
}



inline void _1a76e572a_set_size_key(_1a76e50a9_RangeChecker* _self_) {
	if ((((*_self_)._field_rang.get()._field_key_a == nullptr) || _1a5279aca_is_ignore_ident((*_self_)._field_rang.get()._field_key_a.get()._field_ident))) {
		return;;
	};
	(*_self_)._field_kind.get()._field_key_a=_1a76e554e_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_a);
	(*_self_)._field_kind.get()._field_key_a.get()._field_kind=jule::new_ptr<_1a772b772_TypeSymbol>(_1a772b772_TypeSymbol{._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_1a773e554_build_prim_type(jule::Str("int", 3)), 5)})});
	{
		auto &_match_expr{ (*_self_)._field_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1a76a7720_Var>>()) {
			_case_begin_1a9cd0a7c:;
			{
				(*_self_)._field_kind.get()._field_key_a.get()._field_iter_relation=jule::new_ptr<_1a76a6752_IterRelation>(_1a76a6752_IterRelation{._field_range=(*_self_)._field_d.get()._field_model.operator jule::Ptr<_1a76a7720_Var>()});
			}
		}
		_match_end_1a9cd09e4:;
	};
}



inline void _1a76e5b15_check_range_expr_validity(_1a76e50a9_RangeChecker* _self_, jule::Ptr<_1a76edda4_Data>& _94149_d, jule::Ptr<_1a76a7720_Var>& _94160_key, jule::Ptr<_1a77278d3_TypeKind>& _94176_k) {
	jule::Bool _94217__mut = _94160_key.get()._field_mutable;;
	if ((_94217__mut && (!(_1a7728c7a_mutable(_94176_k.ptr()))))) {
		_94217__mut=false;
	};
	_1a7697743_check_validity_for_init_expr((*_self_)._field_sc.get()._field_s, _94217__mut,_94160_key.get()._field_reference,_94160_key.get()._field_kind.get()._field_kind,_94149_d,(*_self_)._field_rang.get()._field_in_token);
}



inline void _1a76e5d02_check_slice(_1a76e50a9_RangeChecker* _self_) {
	_1a76e572a_set_size_key(&(*_self_));
	if ((((*_self_)._field_rang.get()._field_key_b == nullptr) || _1a5279aca_is_ignore_ident((*_self_)._field_rang.get()._field_key_b.get()._field_ident))) {
		return;;
	};
	jule::Ptr<_1a77310a1_Slc> _96017_slc = _1a772a6a5_slc((*_self_)._field_d.get()._field_kind.ptr());;
	(*_self_)._field_kind.get()._field_key_b=_1a76e554e_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_b);
	(*_self_)._field_kind.get()._field_key_b.get()._field_kind=jule::new_ptr<_1a772b772_TypeSymbol>(_1a772b772_TypeSymbol{._field_kind=_96017_slc.get()._field_elem});
	_1a76e5b15_check_range_expr_validity(&(*_self_), (*_self_)._field_d,(*_self_)._field_kind.get()._field_key_b,_96017_slc.get()._field_elem);
}



inline void _1a76e5ecd_check_array(_1a76e50a9_RangeChecker* _self_) {
	_1a76e572a_set_size_key(&(*_self_));
	if ((((*_self_)._field_rang.get()._field_key_b == nullptr) || _1a5279aca_is_ignore_ident((*_self_)._field_rang.get()._field_key_b.get()._field_ident))) {
		return;;
	};
	jule::Ptr<_1a773324b_Arr> _97317_arr = _1a772a441_arr((*_self_)._field_d.get()._field_kind.ptr());;
	(*_self_)._field_kind.get()._field_key_b=_1a76e554e_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_b);
	(*_self_)._field_kind.get()._field_key_b.get()._field_kind=jule::new_ptr<_1a772b772_TypeSymbol>(_1a772b772_TypeSymbol{._field_kind=_97317_arr.get()._field_elem});
	_1a76e5b15_check_range_expr_validity(&(*_self_), (*_self_)._field_d,(*_self_)._field_kind.get()._field_key_b,_97317_arr.get()._field_elem);
}



inline void _1a76e61a9_check_map_key_a(_1a76e50a9_RangeChecker* _self_) {
	if ((((*_self_)._field_rang.get()._field_key_a == nullptr) || _1a5279aca_is_ignore_ident((*_self_)._field_rang.get()._field_key_a.get()._field_ident))) {
		return;;
	};
	jule::Ptr<_1a7732657_Map> _98517_m = _1a772b156_map((*_self_)._field_d.get()._field_kind.ptr());;
	(*_self_)._field_kind.get()._field_key_a=_1a76e554e_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_a);
	(*_self_)._field_kind.get()._field_key_a.get()._field_kind=jule::new_ptr<_1a772b772_TypeSymbol>(_1a772b772_TypeSymbol{._field_kind=_98517_m.get()._field_key});
	jule::Ptr<_1a76edda4_Data> _98917_d = jule::new_ptr<_1a76edda4_Data>((*((*_self_)._field_d)));;
	_98917_d.get()._field_kind=_98517_m.get()._field_key;
	_1a76e5b15_check_range_expr_validity(&(*_self_), _98917_d,(*_self_)._field_kind.get()._field_key_a,_98517_m.get()._field_key);
}



inline void _1a76e6385_check_map_key_b(_1a76e50a9_RangeChecker* _self_) {
	if ((((*_self_)._field_rang.get()._field_key_b == nullptr) || _1a5279aca_is_ignore_ident((*_self_)._field_rang.get()._field_key_b.get()._field_ident))) {
		return;;
	};
	jule::Ptr<_1a7732657_Map> _100017_m = _1a772b156_map((*_self_)._field_d.get()._field_kind.ptr());;
	(*_self_)._field_kind.get()._field_key_b=_1a76e554e_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_b);
	(*_self_)._field_kind.get()._field_key_b.get()._field_kind=jule::new_ptr<_1a772b772_TypeSymbol>(_1a772b772_TypeSymbol{._field_kind=_100017_m.get()._field_val});
	jule::Ptr<_1a76edda4_Data> _100417_d = jule::new_ptr<_1a76edda4_Data>((*((*_self_)._field_d)));;
	_100417_d.get()._field_kind=_100017_m.get()._field_val;
	_1a76e5b15_check_range_expr_validity(&(*_self_), _100417_d,(*_self_)._field_kind.get()._field_key_b,_100017_m.get()._field_val);
}



inline void _1a76e6561_check_map(_1a76e50a9_RangeChecker* _self_) {
	_1a76e61a9_check_map_key_a(&(*_self_));
	_1a76e6385_check_map_key_b(&(*_self_));
}



inline void _1a76e673c_check_str(_1a76e50a9_RangeChecker* _self_) {
	_1a76e572a_set_size_key(&(*_self_));
	if ((((*_self_)._field_rang.get()._field_key_b == nullptr) || _1a5279aca_is_ignore_ident((*_self_)._field_rang.get()._field_key_b.get()._field_ident))) {
		return;;
	};
	(*_self_)._field_kind.get()._field_key_b=_1a76e554e_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_b);
	(*_self_)._field_kind.get()._field_key_b.get()._field_kind=jule::new_ptr<_1a772b772_TypeSymbol>(_1a772b772_TypeSymbol{._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_1a773e554_build_prim_type(jule::Str("u8", 2)), 5)})});
}



inline jule::Bool _1a76e69a1_check(_1a76e50a9_RangeChecker* _self_) {
	{
		
		if ((*_self_)._field_d.get()._field_kind.get()._field_variadic) {
			_case_begin_1a9ce60e2:;
		}
		else if ((_1a772a6a5_slc((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a9ce6158:;
			{
				_1a76e5d02_check_slice(&(*_self_));
				return true;
			}
		}
		else if ((_1a772a441_arr((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a9ce61be:;
			{
				_1a76e5ecd_check_array(&(*_self_));
				return true;
			}
		}
		else if ((_1a772b156_map((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a9ce6235:;
			{
				_1a76e6561_check_map(&(*_self_));
				return true;
			}
		}
		else {
			_case_begin_1a9ce607b:;
			{
				jule::Ptr<_1a772c135_Prim> _104317_prim = _1a7729990_prim((*_self_)._field_d.get()._field_kind.ptr());;
				if (((_104317_prim != nullptr) && _1a77300e4_is_str(_104317_prim.ptr()))) {
					_1a76e673c_check_str(&(*_self_));
					return true;
				};
			}
		}
		_match_end_1a9ce5eb0:;
	};
	_1a769063c_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_rang.get()._field_in_token,jule::Str("range iterations must be have enumerable expression", 51),jule::Slice<jule::Any>());
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1a76e50a9_RangeChecker _Src) {
	_Stream << "RangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline void _1a76e76e9_prepare_types(_1a76e7243_RetTypeChecker* _self_) {
	if (((*_self_)._field_f != nullptr)) {
		(*_self_)._field_types=_1a68737aa_types((*_self_)._field_f.ptr());
	};
}



inline void _1a76e796e_prepare_exprs(_1a76e7243_RetTypeChecker* _self_, jule::Ptr<_1a6855e41_Expr>& _107237_e) {
	if ((_107237_e == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _107237_e.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a68565d4_TupleExpr>>()) {
			_case_begin_1a9cec46c:;
			{
				(*_self_)._field_exprs=_107237_e.get()._field_kind.operator jule::Ptr<_1a68565d4_TupleExpr>().get()._field_expr;
			}
		}
		else {
			_case_begin_1a9cec5c1:;
			{
				(*_self_)._field_exprs = jule::alloc_for_append((*_self_)._field_exprs,1);(*_self_)._field_exprs.__push(_107237_e);;
			}
		}
		_match_end_1a9cec24c:;
	};
}



inline void _1a76e7b4a_ret_vars(_1a76e7243_RetTypeChecker* _self_) {
	if ((((*_self_)._field_f == nullptr) || _1a6847eee_is_void((*_self_)._field_f.get()._field_decl.ptr()))) {
		return;;
	};
	(*_self_)._field_vars=jule::Slice<jule::Ptr<_1a76a7720_Var>>::alloc(0LL,(*_self_)._field_f.get()._field_decl.get()._field_result.get()._field_idents.len());
	jule::Ptr<_1a766e374_ScopeChecker> _109017_root_scope = _1a767161d_get_root((*_self_)._field_sc);;
	jule::I64 _109217_j = 0LL;;
	{
		auto &expr = (*_self_)._field_f.get()._field_decl.get()._field_result.get()._field_idents;
		auto it = expr.begin();
		_iter_begin_1a9d00b57:;
		if (it != expr.end()) {
			jule::I64 _109313_i = it - expr.begin();
			jule::Ptr<_1a527737a_Token> _109316_ident = *it;
			{
				if (((!(_1a5279aca_is_ignore_ident(_109316_ident.get()._field_kind))) && (!(_1a5279d72_is_anon_ident(_109316_ident.get()._field_kind))))) {
					(*_self_)._field_vars = jule::alloc_for_append((*_self_)._field_vars,1);(*_self_)._field_vars.__push(_109017_root_scope.get()._field_table.get()._field_vars[_109217_j]);;
					(_109217_j)++;
				} else {
					(*_self_)._field_vars = jule::alloc_for_append((*_self_)._field_vars,1);(*_self_)._field_vars.__push(jule::new_ptr<_1a76a7720_Var>(_1a76a7720_Var{._field_ident=jule::Str("_", 1), ._field_kind=jule::new_ptr<_1a772b772_TypeSymbol>(_1a772b772_TypeSymbol{._field_kind=(*_self_)._field_types[_109313_i]}), }));;
				};
			}
			_iter_next_1a9d00b57:;
			++it;
			_109313_i++;
			goto _iter_begin_1a9d00b57;
		}
		_iter_end_1a9d00b57:;
	};
	if ((_109217_j == 0LL)) {
		(*_self_)._field_vars=nullptr;
	};
}



inline void _1a76e7d26_check_exprs(_1a76e7243_RetTypeChecker* _self_) {
	if (((*_self_)._field_exprs.len() == 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1a76edda4_Data>> _111617_datas = jule::Slice<jule::Ptr<_1a76edda4_Data>>::alloc(0LL,(*_self_)._field_exprs.len());;
	{
		auto &expr = (*_self_)._field_exprs;
		auto it = expr.begin();
		_iter_begin_1a9d04b06:;
		if (it != expr.end()) {
			jule::I64 _111814_i = it - expr.begin();
			jule::Ptr<_1a6855e41_Expr> _111821_expr = *it;
			{
				if ((_111814_i >= (*_self_)._field_types.len())) {
					goto _iter_end_1a9d04b06;
				};
				jule::Ptr<_1a77278d3_TypeKind> _112321_t = (*_self_)._field_types[_111814_i];;
				jule::Ptr<_1a76edda4_Data> _112521_d = _1a771982b_eval_expr(_1a7695136_evalp((*_self_)._field_sc.get()._field_s, jule::Trait<_1a7741e19_Lookup>((*_self_)._field_sc, 0),_112321_t), _111821_expr);;
				if ((_112521_d == nullptr)) {
					goto _iter_next_1a9d04b06;
				};
				_111617_datas = jule::alloc_for_append(_111617_datas,1);_111617_datas.__push(_112521_d);;
				if (((!(_112521_d.get()._field_mutable)) && _1a7728c7a_mutable(_112521_d.get()._field_kind.ptr()))) {
					_1a769063c_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_error_token,jule::Str("mutable typed return expressions should be mutable", 50),jule::Slice<jule::Any>());
					return;;
				};
				_1a76db4ac_AssignTypeChecker _113721_ac = _1a76db4ac_AssignTypeChecker{._field_s=(*_self_)._field_sc.get()._field_s, ._field_dest=_112321_t, ._field_d=_112521_d, ._field_error_token=(*_self_)._field_error_token};;
				_1a76dc634_check(&_113721_ac);
			}
			_iter_next_1a9d04b06:;
			++it;
			_111814_i++;
			goto _iter_begin_1a9d04b06;
		}
		_iter_end_1a9d04b06:;
	};
	if ((_111617_datas.len() > 1LL)) {
		(*_self_)._field_model=jule::Any(jule::new_ptr<_1a686d0bd_TupleExprModel>(_1a686d0bd_TupleExprModel{._field_datas=_111617_datas}));
	} else if ((_111617_datas.len() == 1LL)) {
		(*_self_)._field_model=jule::Any(_111617_datas[0LL].get()._field_model);
	};
}



inline jule::Bool _1a76e8134_check(_1a76e7243_RetTypeChecker* _self_, jule::Ptr<_1a6855e41_Expr>& _115629_e) {
	_1a76e76e9_prepare_types(&(*_self_));
	_1a76e796e_prepare_exprs(&(*_self_), _115629_e);
	_1a76e7b4a_ret_vars(&(*_self_));
	jule::I64 _116113_n = (*_self_)._field_exprs.len();;
	if (((_116113_n == 0LL) && ((*_self_)._field_types.len() > 0LL))) {
		if ((!(_1a6871269_any_var((*_self_)._field_f.get()._field_decl.ptr())))) {
			_1a769063c_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_error_token,jule::Str("return statements of non-void functions should have return expression", 69),jule::Slice<jule::Any>());
			return false;
		};
		return true;
	};
	if ((((_116113_n > 0LL) && ((*_self_)._field_f != nullptr)) && _1a6847eee_is_void((*_self_)._field_f.get()._field_decl.ptr()))) {
		_1a769063c_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_error_token,jule::Str("void functions is cannot returns any value", 42),jule::Slice<jule::Any>());
		return false;
	};
	if ((_116113_n > (*_self_)._field_types.len())) {
		_1a769063c_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_error_token,jule::Str("overflow return expressions", 27),jule::Slice<jule::Any>());
	} else if ((_116113_n < (*_self_)._field_types.len())) {
		_1a769063c_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_error_token,jule::Str("missing return expressions for multi-return", 43),jule::Slice<jule::Any>());
	};
	_1a76e7d26_check_exprs(&(*_self_));
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _1a76e7243_RetTypeChecker _Src) {
	_Stream << "RetTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a7685038_ImportInfo> _1a76e9432_find_package(_1a76e8e26_SymbolTable* _self_, jule::Str _2535_ident) {
	{
		auto &expr = (*_self_)._field_imports;
		auto it = expr.begin();
		_iter_begin_1a9d1eb54:;
		if (it != expr.end()) {
			jule::Ptr<_1a7685038_ImportInfo> _2621_pkg = *it;
			{
				if ((_2621_pkg.get()._field_ident == _2535_ident)) {
					return _2621_pkg;
				};
			}
			_iter_next_1a9d1eb54:;
			++it;
			goto _iter_begin_1a9d1eb54;
		}
		_iter_end_1a9d1eb54:;
	};
	return nullptr;
}



inline jule::Ptr<_1a7685038_ImportInfo> _1a76e9740_select_package(_1a76e8e26_SymbolTable* _self_, jule::Fn<jule::Bool(jule::Ptr<_1a7685038_ImportInfo>)> _3737_selector) {
	if ((_3737_selector == nullptr)) {
		return nullptr;
	};
	{
		auto &expr = (*_self_)._field_imports;
		auto it = expr.begin();
		_iter_begin_1a9d20cdc:;
		if (it != expr.end()) {
			jule::Ptr<_1a7685038_ImportInfo> _4221_pkg = *it;
			{
				if (_3737_selector(_4221_pkg)) {
					return _4221_pkg;
				};
			}
			_iter_next_1a9d20cdc:;
			++it;
			goto _iter_begin_1a9d20cdc;
		}
		_iter_end_1a9d20cdc:;
	};
	return nullptr;
}



inline jule::Ptr<_1a76a7720_Var> _1a76e9ae7_find_var(_1a76e8e26_SymbolTable* _self_, jule::Str _5231_ident, jule::Bool _5243_cpp_linked) {
	return _1a76eb39b___find_var(&(*_self_), _5231_ident,_5243_cpp_linked,false);
}



inline jule::Ptr<_1a7726b9b_TypeAlias> _1a76e9e9e_find_type_alias(_1a76e8e26_SymbolTable* _self_, jule::Str _5838_ident, jule::Bool _5850_cpp_linked) {
	return _1a76eb7ec___find_type_alias(&(*_self_), _5838_ident,_5850_cpp_linked,false);
}



inline jule::Ptr<_1a6826829_Struct> _1a76ea356_find_struct(_1a76e8e26_SymbolTable* _self_, jule::Str _6434_ident, jule::Bool _6446_cpp_linked) {
	{
		auto &expr = (*_self_)._field_structs;
		auto it = expr.begin();
		_iter_begin_1a9d24571:;
		if (it != expr.end()) {
			jule::Ptr<_1a6826829_Struct> _6521_s = *it;
			{
				if (((_6521_s.get()._field_ident == _6434_ident) && (_6521_s.get()._field_cpp_linked == _6446_cpp_linked))) {
					return _6521_s;
				};
			}
			_iter_next_1a9d24571:;
			++it;
			goto _iter_begin_1a9d24571;
		}
		_iter_end_1a9d24571:;
	};
	return nullptr;
}



inline jule::Ptr<_1a68709c7_Fn> _1a76ea70d_find_fn(_1a76e8e26_SymbolTable* _self_, jule::Str _7530_ident, jule::Bool _7542_cpp_linked) {
	{
		auto &expr = (*_self_)._field_funcs;
		auto it = expr.begin();
		_iter_begin_1a9d2593a:;
		if (it != expr.end()) {
			jule::Ptr<_1a68709c7_Fn> _7621_f = *it;
			{
				if (((_7621_f.get()._field_ident == _7530_ident) && (_7621_f.get()._field_cpp_linked == _7542_cpp_linked))) {
					return _7621_f;
				};
			}
			_iter_next_1a9d2593a:;
			++it;
			goto _iter_begin_1a9d2593a;
		}
		_iter_end_1a9d2593a:;
	};
	return nullptr;
}



inline jule::Ptr<_1a68d46b7_Trait> _1a76eaa1b_find_trait(_1a76e8e26_SymbolTable* _self_, jule::Str _8633_ident) {
	{
		auto &expr = (*_self_)._field_traits;
		auto it = expr.begin();
		_iter_begin_1a9d26ae5:;
		if (it != expr.end()) {
			jule::Ptr<_1a68d46b7_Trait> _8721_t = *it;
			{
				if ((_8721_t.get()._field_ident == _8633_ident)) {
					return _8721_t;
				};
			}
			_iter_next_1a9d26ae5:;
			++it;
			goto _iter_begin_1a9d26ae5;
		}
		_iter_end_1a9d26ae5:;
	};
	return nullptr;
}



inline jule::Ptr<_1a6982435_Enum> _1a76ead29_find_enum(_1a76e8e26_SymbolTable* _self_, jule::Str _9732_ident) {
	{
		auto &expr = (*_self_)._field_enums;
		auto it = expr.begin();
		_iter_begin_1a9d27013:;
		if (it != expr.end()) {
			jule::Ptr<_1a6982435_Enum> _9821_e = *it;
			{
				if ((_9821_e.get()._field_ident == _9732_ident)) {
					return _9821_e;
				};
			}
			_iter_next_1a9d27013:;
			++it;
			goto _iter_begin_1a9d27013;
		}
		_iter_end_1a9d27013:;
	};
	return nullptr;
}



inline jule::Ptr<_1a76a7720_Var> _1a76eb39b___find_var(_1a76e8e26_SymbolTable* _self_, jule::Str _10829_ident, jule::Bool _10841_cpp_linked, jule::Bool _10859_reverse) {
	if (_10859_reverse) {
		jule::I64 _11021_i = ((*_self_)._field_vars.len() - 1LL);;
		for (; (_11021_i >= 0LL); (_11021_i)--) {
			{
				jule::Ptr<_1a76a7720_Var> _11225_v = (*_self_)._field_vars[_11021_i];;
				if (((_11225_v.get()._field_ident == _10829_ident) && (_11225_v.get()._field_cpp_linked == _10841_cpp_linked))) {
					return _11225_v;
				};
			}
		_iter_next_1a9d2917a:;
		}
		_iter_end_1a9d2917a:;;
	} else {
		{
			auto &expr = (*_self_)._field_vars;
			auto it = expr.begin();
			_iter_begin_1a9d2aa94:;
			if (it != expr.end()) {
				jule::Ptr<_1a76a7720_Var> _11825_v = *it;
				{
					if (((_11825_v.get()._field_ident == _10829_ident) && (_11825_v.get()._field_cpp_linked == _10841_cpp_linked))) {
						return _11825_v;
					};
				}
				_iter_next_1a9d2aa94:;
				++it;
				goto _iter_begin_1a9d2aa94;
			}
			_iter_end_1a9d2aa94:;
		};
	};
	return nullptr;
}



inline jule::Ptr<_1a7726b9b_TypeAlias> _1a76eb7ec___find_type_alias(_1a76e8e26_SymbolTable* _self_, jule::Str _12736_ident, jule::Bool _12748_cpp_linked, jule::Bool _12766_reverse) {
	if (_12766_reverse) {
		jule::I64 _12921_i = ((*_self_)._field_type_aliases.len() - 1LL);;
		for (; (_12921_i >= 0LL); (_12921_i)--) {
			{
				jule::Ptr<_1a7726b9b_TypeAlias> _13125_ta = (*_self_)._field_type_aliases[_12921_i];;
				if (((_13125_ta.get()._field_ident == _12736_ident) && (_13125_ta.get()._field_cpp_linked == _12748_cpp_linked))) {
					return _13125_ta;
				};
			}
		_iter_next_1a9d2c18e:;
		}
		_iter_end_1a9d2c18e:;;
	} else {
		{
			auto &expr = (*_self_)._field_type_aliases;
			auto it = expr.begin();
			_iter_begin_1a9d2daa8:;
			if (it != expr.end()) {
				jule::Ptr<_1a7726b9b_TypeAlias> _13725_ta = *it;
				{
					if (((_13725_ta.get()._field_ident == _12736_ident) && (_13725_ta.get()._field_cpp_linked == _12748_cpp_linked))) {
						return _13725_ta;
					};
				}
				_iter_next_1a9d2daa8:;
				++it;
				goto _iter_begin_1a9d2daa8;
			}
			_iter_end_1a9d2daa8:;
		};
	};
	return nullptr;
}



inline jule::Any _1a76ebba4_def_by_ident(_1a76e8e26_SymbolTable* _self_, jule::Str _14831_ident, jule::Bool _14843_cpp_linked) {
	{
		auto &expr = (*_self_)._field_vars;
		auto it = expr.begin();
		_iter_begin_1a9d2eaba:;
		if (it != expr.end()) {
			jule::Ptr<_1a76a7720_Var> _14921_v = *it;
			{
				if (((_14921_v.get()._field_ident == _14831_ident) && (_14921_v.get()._field_cpp_linked == _14843_cpp_linked))) {
					return jule::Any(_14921_v);
				};
			}
			_iter_next_1a9d2eaba:;
			++it;
			goto _iter_begin_1a9d2eaba;
		}
		_iter_end_1a9d2eaba:;
	};
	{
		auto &expr = (*_self_)._field_type_aliases;
		auto it = expr.begin();
		_iter_begin_1a9d3046c:;
		if (it != expr.end()) {
			jule::Ptr<_1a7726b9b_TypeAlias> _15521_ta = *it;
			{
				if (((_15521_ta.get()._field_ident == _14831_ident) && (_15521_ta.get()._field_cpp_linked == _14843_cpp_linked))) {
					return jule::Any(_15521_ta);
				};
			}
			_iter_next_1a9d3046c:;
			++it;
			goto _iter_begin_1a9d3046c;
		}
		_iter_end_1a9d3046c:;
	};
	{
		auto &expr = (*_self_)._field_structs;
		auto it = expr.begin();
		_iter_begin_1a9d3111b:;
		if (it != expr.end()) {
			jule::Ptr<_1a6826829_Struct> _16121_s = *it;
			{
				if (((_16121_s.get()._field_ident == _14831_ident) && (_16121_s.get()._field_cpp_linked == _14843_cpp_linked))) {
					return jule::Any(_16121_s);
				};
			}
			_iter_next_1a9d3111b:;
			++it;
			goto _iter_begin_1a9d3111b;
		}
		_iter_end_1a9d3111b:;
	};
	{
		auto &expr = (*_self_)._field_funcs;
		auto it = expr.begin();
		_iter_begin_1a9d31d97:;
		if (it != expr.end()) {
			jule::Ptr<_1a68709c7_Fn> _16721_f = *it;
			{
				if (((_16721_f.get()._field_ident == _14831_ident) && (_16721_f.get()._field_cpp_linked == _14843_cpp_linked))) {
					return jule::Any(_16721_f);
				};
			}
			_iter_next_1a9d31d97:;
			++it;
			goto _iter_begin_1a9d31d97;
		}
		_iter_end_1a9d31d97:;
	};
	if (_14843_cpp_linked) {
		return nullptr;
	};
	{
		auto &expr = (*_self_)._field_traits;
		auto it = expr.begin();
		_iter_begin_1a9d32ae0:;
		if (it != expr.end()) {
			jule::Ptr<_1a68d46b7_Trait> _17721_t = *it;
			{
				if ((_17721_t.get()._field_ident == _14831_ident)) {
					return jule::Any(_17721_t);
				};
			}
			_iter_next_1a9d32ae0:;
			++it;
			goto _iter_begin_1a9d32ae0;
		}
		_iter_end_1a9d32ae0:;
	};
	{
		auto &expr = (*_self_)._field_enums;
		auto it = expr.begin();
		_iter_begin_1a9d3410d:;
		if (it != expr.end()) {
			jule::Ptr<_1a6982435_Enum> _18321_e = *it;
			{
				if ((_18321_e.get()._field_ident == _14831_ident)) {
					return jule::Any(_18321_e);
				};
			}
			_iter_next_1a9d3410d:;
			++it;
			goto _iter_begin_1a9d3410d;
		}
		_iter_end_1a9d3410d:;
	};
	return nullptr;
}



inline jule::Bool _1a76ec105_is_duplicated_ident(_1a76e8e26_SymbolTable* _self_, jule::Uintptr _19534_itself, jule::Str _19551_ident, jule::Bool _19563_cpp_linked) {
	{
		auto &expr = (*_self_)._field_vars;
		auto it = expr.begin();
		_iter_begin_1a9d34e55:;
		if (it != expr.end()) {
			jule::Ptr<_1a76a7720_Var> &_19616_v = *it;
			{
				if ((((static_cast<jule::Uintptr>(_19616_v) != _19534_itself) && (_19616_v.get()._field_ident == _19551_ident)) && (_19616_v.get()._field_cpp_linked == _19563_cpp_linked))) {
					return true;
				};
			}
			_iter_next_1a9d34e55:;
			++it;
			goto _iter_begin_1a9d34e55;
		}
		_iter_end_1a9d34e55:;
	};
	{
		auto &expr = (*_self_)._field_type_aliases;
		auto it = expr.begin();
		_iter_begin_1a9d36363:;
		if (it != expr.end()) {
			jule::Ptr<_1a7726b9b_TypeAlias> &_20216_ta = *it;
			{
				if ((((static_cast<jule::Uintptr>(_20216_ta) != _19534_itself) && (_20216_ta.get()._field_ident == _19551_ident)) && (_20216_ta.get()._field_cpp_linked == _19563_cpp_linked))) {
					return true;
				};
			}
			_iter_next_1a9d36363:;
			++it;
			goto _iter_begin_1a9d36363;
		}
		_iter_end_1a9d36363:;
	};
	{
		auto &expr = (*_self_)._field_structs;
		auto it = expr.begin();
		_iter_begin_1a9d354c7:;
		if (it != expr.end()) {
			jule::Ptr<_1a6826829_Struct> &_20816_s = *it;
			{
				if ((((static_cast<jule::Uintptr>(_20816_s) != _19534_itself) && (_20816_s.get()._field_ident == _19551_ident)) && (_20816_s.get()._field_cpp_linked == _19563_cpp_linked))) {
					return true;
				};
			}
			_iter_next_1a9d354c7:;
			++it;
			goto _iter_begin_1a9d354c7;
		}
		_iter_end_1a9d354c7:;
	};
	{
		auto &expr = (*_self_)._field_funcs;
		auto it = expr.begin();
		_iter_begin_1a9d38442:;
		if (it != expr.end()) {
			jule::Ptr<_1a68709c7_Fn> &_21416_f = *it;
			{
				if ((((static_cast<jule::Uintptr>(_21416_f) != _19534_itself) && (_21416_f.get()._field_ident == _19551_ident)) && (_21416_f.get()._field_cpp_linked == _19563_cpp_linked))) {
					return true;
				};
			}
			_iter_next_1a9d38442:;
			++it;
			goto _iter_begin_1a9d38442;
		}
		_iter_end_1a9d38442:;
	};
	if (_19563_cpp_linked) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_traits;
		auto it = expr.begin();
		_iter_begin_1a9d397a6:;
		if (it != expr.end()) {
			jule::Ptr<_1a68d46b7_Trait> &_22416_t = *it;
			{
				if (((static_cast<jule::Uintptr>(_22416_t) != _19534_itself) && (_22416_t.get()._field_ident == _19551_ident))) {
					return true;
				};
			}
			_iter_next_1a9d397a6:;
			++it;
			goto _iter_begin_1a9d397a6;
		}
		_iter_end_1a9d397a6:;
	};
	{
		auto &expr = (*_self_)._field_enums;
		auto it = expr.begin();
		_iter_begin_1a9d3860c:;
		if (it != expr.end()) {
			jule::Ptr<_1a6982435_Enum> &_23016_e = *it;
			{
				if (((static_cast<jule::Uintptr>(_23016_e) != _19534_itself) && (_23016_e.get()._field_ident == _19551_ident))) {
					return true;
				};
			}
			_iter_next_1a9d3860c:;
			++it;
			goto _iter_begin_1a9d3860c;
		}
		_iter_end_1a9d3860c:;
	};
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1a76e8e26_SymbolTable _Src) {
	_Stream << "SymbolTable{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "passes:" << _Src._field_passes << ", ";
	_Stream << "imports:" << _Src._field_imports << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "type_aliases:" << _Src._field_type_aliases << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "funcs:" << _Src._field_funcs << ", ";
	_Stream << "traits:" << _Src._field_traits << ", ";
	_Stream << "enums:" << _Src._field_enums << ", ";
	_Stream << "impls:" << _Src._field_impls;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a76ee28e_is_nil(_1a76edda4_Data* _self_) {
	return _1a77287a2_is_nil((*_self_)._field_kind.ptr());
}



inline jule::Bool _1a76ee503_is_void(_1a76edda4_Data* _self_) {
	return _1a7728a16_void((*_self_)._field_kind.ptr());
}



inline jule::Bool _1a76ee767_is_const(_1a76edda4_Data* _self_) {
	return ((*_self_)._field_constant != nullptr);
}



inline jule::Bool _1a76eea75_good_operand(_1a76edda4_Data* _self_, jule::Ptr<_1a76edda4_Data>& _9436_other) {
	return ((((_1a7729990_prim(_9436_other.get()._field_kind.ptr()) == nullptr) || (!(_1a7730358_is_any(_1a7729990_prim(_9436_other.get()._field_kind.ptr()).ptr())))) && (_1a772ade2_trt(_9436_other.get()._field_kind.ptr()) == nullptr)) && (!(_1a77287a2_is_nil((*_self_)._field_kind.ptr()))));
}







std::ostream &operator<<(std::ostream &_Stream, _1a76edda4_Data _Src) {
	_Stream << "Data{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "lvalue:" << _Src._field_lvalue << ", ";
	_Stream << "is_rune:" << _Src._field_is_rune << ", ";
	_Stream << "model:" << _Src._field_model << ", ";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "constant:" << _Src._field_constant;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a76eee2c_Value _Src) {
	_Stream << "Value{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline void _1a7700dea_push_err(_1a7700922_Eval* _self_, jule::Ptr<_1a527737a_Token> _12227_token, jule::Str _12242_fmt, jule::Slice<jule::Any> _12255_args) {
	_1a769063c_push_err((*_self_)._field_s.ptr(), _12227_token,_12242_fmt,jule::Any(_12255_args));
}



inline void _1a7701219_push_suggestion(_1a7700922_Eval* _self_, jule::Str _12734_fmt, jule::Slice<jule::Any> _12747_args) {
	_1a769095b_push_suggestion((*_self_)._field_s.ptr(), _12734_fmt,jule::Any(_12747_args));
}



inline void _1a77013e5_allow_builtin(_1a7700922_Eval* _self_) {
	(*_self_)._field_dis_builtin=false;
}



inline void _1a77015c1_disallow_builtin(_1a7700922_Eval* _self_) {
	(*_self_)._field_dis_builtin=true;
}



inline jule::Bool _1a7701835_is_unsafe(_1a7700922_Eval* _self_) {
	return (*_self_)._field_unsafety;
}



inline jule::Bool _1a7701a99_is_global(_1a7700922_Eval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1a768cc22_Sema>>()) {
			_case_begin_1a9d4322c:;
			{
				return true;
			}
		}
		else {
			_case_begin_1a9d434a2:;
			{
				return false;
			}
		}
		_match_end_1a9d4344c:;
	};
}



inline jule::Bool _1a7701da7_apply_numeric_prefix(_1a7700922_Eval* _self_, jule::Ptr<_1a76edda4_Data>& _15444_d) {
	if (((((_15444_d == nullptr) || (!(_1a76ee767_is_const(_15444_d.ptr())))) || (_1a7729990_prim(_15444_d.get()._field_kind.ptr()) == nullptr)) || ((*_self_)._field_prefix == nullptr))) {
		return false;
	};
	jule::Ptr<_1a772c135_Prim> _16113_prim = _1a7729990_prim((*_self_)._field_prefix.ptr());;
	if ((_16113_prim == nullptr)) {
		return false;
	};
	{
		
		if (_1a766c1b8_is_float(_1a772c498_to_str(_16113_prim.ptr()))) {
			_case_begin_1a9d45e77:;
			{
				_15444_d.get()._field_kind=jule::new_ptr<_1a77278d3_TypeKind>((*((*_self_)._field_prefix)));
				_1a75c6430_set_f64(_15444_d.get()._field_constant.ptr(), static_cast<jule::F64>(_1a75c56b5_as_f64(_15444_d.get()._field_constant.ptr())));
			}
		}
		else if (_1a766b849_is_sig_int(_1a772c498_to_str(_16113_prim.ptr()))) {
			_case_begin_1a9d45edd:;
			{
				if ((!(_1a76d9c5d_sig_assignable(_1a772c498_to_str(_16113_prim.ptr()),_15444_d)))) {
					return false;
				};
				_15444_d.get()._field_kind=jule::new_ptr<_1a77278d3_TypeKind>((*((*_self_)._field_prefix)));
				_1a75c593a_set_i64(_15444_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1a75c51dc_as_i64(_15444_d.get()._field_constant.ptr())));
			}
		}
		else if (_1a766bb35_is_unsig_int(_1a772c498_to_str(_16113_prim.ptr()))) {
			_case_begin_1a9d46054:;
			{
				if ((!(_1a76d9d90_unsig_assignable(_1a772c498_to_str(_16113_prim.ptr()),_15444_d)))) {
					return false;
				};
				_15444_d.get()._field_kind=jule::new_ptr<_1a77278d3_TypeKind>((*((*_self_)._field_prefix)));
				_1a75c5bb0_set_u64(_15444_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1a75c5451_as_u64(_15444_d.get()._field_constant.ptr())));
			}
		}
		_match_end_1a9d46263:;
	};
	return true;
}



inline jule::Ptr<_1a76edda4_Data> _1a770211b_lit_nil(_1a7700922_Eval* _self_) {
	jule::Ptr<_1a75c3251_Const> _19017_constant = static__1a75c3dcd_new_nil();;
	return jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=nullptr}), ._field_mutable=false, ._field_lvalue=false, ._field_model=jule::Any(_19017_constant), ._field_decl=false, ._field_constant=_19017_constant});
}



inline jule::Ptr<_1a76edda4_Data> _1a7702429_lit_str(_1a7700922_Eval* _self_, jule::Ptr<_1a6856aac_LitExpr>& _20123_l) {
	jule::Str _20217_s = _20123_l.get()._field_value.slice(1LL,(_20123_l.get()._field_value.len() - 1LL));;
	if (_1a52786cd_is_raw_str(_20123_l.get()._field_value)) {
		_20217_s=_1a76d8d4a_to_raw_str(static_cast<jule::Slice<jule::U8>>(_20217_s));
	} else {
		_20217_s=_1a76d90d1_to_str(static_cast<jule::Slice<jule::U8>>(_20217_s));
	};
	jule::Ptr<_1a75c3251_Const> _20817_constant = static__1a75c3938_new_str(_20217_s);;
	return jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_1a773e554_build_prim_type(jule::Str("str", 3)), 5)}), ._field_mutable=false, ._field_lvalue=false, ._field_model=jule::Any(_20817_constant), ._field_decl=false, ._field_constant=_20817_constant});
}



inline jule::Ptr<_1a76edda4_Data> _1a7702737_lit_bool(_1a7700922_Eval* _self_, jule::Ptr<_1a6856aac_LitExpr>& _22224_l) {
	jule::Ptr<_1a75c3251_Const> _22317_constant = static__1a75c3691_new_bool((_22224_l.get()._field_value == jule::Str("true", 4)));;
	return jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_1a773e554_build_prim_type(jule::Str("bool", 4)), 5)}), ._field_mutable=false, ._field_lvalue=false, ._field_model=jule::Any(_22317_constant), ._field_decl=false, ._field_constant=_22317_constant});
}



inline jule::Ptr<_1a76edda4_Data> _1a7702a45_lit_rune(_1a7700922_Eval* _self_, jule::Ptr<_1a6856aac_LitExpr>& _23624_l) {
	;
	;
	jule::Str _24013_lt = _23624_l.get()._field_value.slice(1LL,(_23624_l.get()._field_value.len() - 1LL));;
	jule::I32 _24113_r = _1a76d8c18_to_rune(static_cast<jule::Slice<jule::U8>>(_24013_lt));;
	jule::Ptr<_1a76edda4_Data> _24217_data = jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_mutable=false, ._field_lvalue=false, ._field_decl=false, ._field_constant=static__1a75c2250_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_24113_r)))});;
	jule::Bool _25013_is_ascii = _1a76d7244_is_ascii(_24113_r);;
	if (_25013_is_ascii) {
		_24217_data.get()._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_1a773e554_build_prim_type(jule::Str("u8", 2)), 5)});
	} else {
		_24217_data.get()._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_1a773e554_build_prim_type(jule::Str("i32", 3)), 5)});
	};
	_24217_data.get()._field_model=jule::Any(jule::new_ptr<_1a686ed4a_RuneExprModel>(_1a686ed4a_RuneExprModel{._field_code=_24113_r}));
	_24217_data.get()._field_is_rune=true;
	return _24217_data;
}



inline jule::Ptr<_1a76edda4_Data> _1a7702d53_lit_float(_1a7700922_Eval* _self_, jule::Ptr<_1a6856aac_LitExpr>& _26625_l) {
	;
	jule::F64 _26913_f = ({
		auto except = _1a7010672_parse_float(_26625_l.get()._field_value,64LL);
		(except.ok()) ? (except.result) : ({
			jule::MAX_F64;
		});
	});;
	jule::Ptr<_1a75c3251_Const> _27017_constant = static__1a75c3bd0_new_f64(_26913_f);;
	return jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_1a773e554_build_prim_type(jule::Str("f64", 3)), 5)}), ._field_mutable=false, ._field_lvalue=false, ._field_model=jule::Any(_27017_constant), ._field_decl=false, ._field_constant=_27017_constant});
}



inline jule::Ptr<_1a76edda4_Data> _1a7703161_lit_int(_1a7700922_Eval* _self_, jule::Ptr<_1a6856aac_LitExpr>& _28427_l) {
	;
	jule::Str _28717_lit = _28427_l.get()._field_value;;
	jule::I64 _28817_base = 0LL;;
	{
		
		if (_1a4221d2b_has_prefix(_28717_lit,jule::Str("0x", 2))) {
			_case_begin_1a9d5ee91:;
			{
				(_28717_lit).mut_slice(2LL);;
				_28817_base=16LL;
			}
		}
		else if (_1a4221d2b_has_prefix(_28717_lit,jule::Str("0b", 2))) {
			_case_begin_1a9d602b0:;
			{
				(_28717_lit).mut_slice(2LL);;
				_28817_base=2LL;
			}
		}
		else if (_1a4221d2b_has_prefix(_28717_lit,jule::Str("0o", 2))) {
			_case_begin_1a9d5eb83:;
			{
				(_28717_lit).mut_slice(2LL);;
				_28817_base=8LL;
			}
		}
		else if (((_28717_lit[0LL] == '0') && (_28717_lit.len() > 1LL))) {
			_case_begin_1a9d5ebe9:;
			{
				(_28717_lit).mut_slice(1LL);;
				_28817_base=8LL;
			}
		}
		else {
			_case_begin_1a9d5eb1c:;
			{
				_28817_base=10LL;
			}
		}
		_match_end_1a9d5eaa6:;
	};
	jule::Ptr<_1a76edda4_Data> _30817_d = jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_mutable=false, ._field_lvalue=false, ._field_decl=false, });;
	jule::Bool _31417_ok = true;;
	jule::I64 _31513_sig = ({
		auto except = _1a6e009a2_parse_int(_28717_lit,_28817_base,64LL);
		(except.ok()) ? (except.result) : ({
			_31417_ok=false;
			0LL;
		});
	});;
	if (_31417_ok) {
		_30817_d.get()._field_constant=static__1a75c2250_new_i64(_31513_sig);
		_30817_d.get()._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_1a773e554_build_prim_type(jule::Str("int", 3)), 5)});
	} else {
		jule::U64 _32517_unsig = ({
			auto except = _1a6dbe0e1_parse_uint(_28717_lit,_28817_base,64LL);
			(except.ok()) ? (except.result) : ({
				_1a7700dea_push_err(&(*_self_), _28427_l.get()._field_token,jule::Str("arithmetic value overflow: this value too big", 45),jule::Slice<jule::Any>());
				_1a7701219_push_suggestion(&(*_self_), jule::Str("floating-point literals may solve your problem", 46),jule::Slice<jule::Any>());
				jule::MAX_U64;
			});
		});;
		_30817_d.get()._field_constant=static__1a75c343d_new_u64(_32517_unsig);
		_30817_d.get()._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_1a773e554_build_prim_type(jule::Str("uint", 4)), 5)});
	};
	_30817_d.get()._field_model=jule::Any(_30817_d.get()._field_constant);
	if ((!(_1a7701da7_apply_numeric_prefix(&(*_self_), _30817_d)))) {
		_1a7722b64_fit_bitsize(_30817_d);
	};
	return _30817_d;
}



inline jule::Ptr<_1a76edda4_Data> _1a770346e_lit_num(_1a7700922_Eval* _self_, jule::Ptr<_1a6856aac_LitExpr>& _34627_l) {
	{
		
		if (_1a52792e4_is_float(_34627_l.get()._field_value)) {
			_case_begin_1a9d69176:;
			{
				return _1a7702d53_lit_float(&(*_self_), _34627_l);
			}
		}
		else {
			_case_begin_1a9d6862b:;
			{
				return _1a7703161_lit_int(&(*_self_), _34627_l);
			}
		}
		_match_end_1a9d68560:;
	};
}



inline jule::Ptr<_1a76edda4_Data> _1a770377c_eval_lit(_1a7700922_Eval* _self_, jule::Ptr<_1a6856aac_LitExpr> _35527_lit) {
	{
		
		if (_1a6856e0e_is_nil(_35527_lit.ptr())) {
			_case_begin_1a9d6a73d:;
			{
				return _1a770211b_lit_nil(&(*_self_));
			}
		}
		else if (_1a5278436_is_str(_35527_lit.get()._field_value)) {
			_case_begin_1a9d6a7a4:;
			{
				return _1a7702429_lit_str(&(*_self_), _35527_lit);
			}
		}
		else if (_1a527904c_is_bool(_35527_lit.get()._field_value)) {
			_case_begin_1a9d6a4c9:;
			{
				return _1a7702737_lit_bool(&(*_self_), _35527_lit);
			}
		}
		else if (_1a5278975_is_rune(_35527_lit.get()._field_value)) {
			_case_begin_1a9d6a540:;
			{
				return _1a7702a45_lit_rune(&(*_self_), _35527_lit);
			}
		}
		else if (_1a527958b_is_num(_35527_lit.get()._field_value)) {
			_case_begin_1a9d6a5a6:;
			{
				return _1a770346e_lit_num(&(*_self_), _35527_lit);
			}
		}
		else {
			_case_begin_1a9d6a067:;
			{
				return nullptr;
			}
		}
		_match_end_1a9d69e9b:;
	};
}



inline jule::Any _1a7703a8a_find_builtins(_1a7700922_Eval* _self_, jule::Str _37232_ident) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1a7685038_ImportInfo>>()) {
			_case_begin_1a9d6d5ed:;
			{
				jule::Any _37521_def = _1a7722955_find_builtins_import(_37232_ident,(*_self_)._field_lookup.operator jule::Ptr<_1a7685038_ImportInfo>());;
				if ((_37521_def != nullptr)) {
					return jule::Any(_37521_def);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a768cc22_Sema>>()) {
			_case_begin_1a9d6d6a8:;
			{
				jule::Any _38021_def = _1a77235e3_find_builtins_sema(_37232_ident,(*_self_)._field_lookup.operator jule::Ptr<_1a768cc22_Sema>());;
				if ((_38021_def != nullptr)) {
					return jule::Any(_38021_def);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a766e374_ScopeChecker>>()) {
			_case_begin_1a9d6d71e:;
			{
				jule::Any _38521_def = _1a77235e3_find_builtins_sema(_37232_ident,(*_self_)._field_lookup.operator jule::Ptr<_1a766e374_ScopeChecker>().get()._field_s);;
				if ((_38521_def != nullptr)) {
					return jule::Any(_38521_def);
				};
			}
		}
		_match_end_1a9d6d554:;
	};
	if ((*_self_)._field_dis_builtin) {
		return nullptr;
	};
	return jule::Any(_1a7780c6b_find_builtin_def(_37232_ident));
}



inline jule::Any _1a7703e42_get_def(_1a7700922_Eval* _self_, jule::Str _39626_ident, jule::Bool _39638_cpp_linked) {
	if ((!(_39638_cpp_linked))) {
		jule::Ptr<_1a6982435_Enum> _39821_enm = _1a7741e19_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1a7741cc6_find_enum((*_self_)._field_lookup, _39626_ident);;
		if ((_39821_enm != nullptr)) {
			return jule::Any(_39821_enm);
		};
	};
	jule::Ptr<_1a76a7720_Var> _40417_v = _1a7741e19_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1a7740a94_find_var((*_self_)._field_lookup, _39626_ident,_39638_cpp_linked);;
	if ((_40417_v != nullptr)) {
		return jule::Any(_40417_v);
	};
	jule::Ptr<_1a68709c7_Fn> _40917_f = _1a7741e19_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1a77416aa_find_fn((*_self_)._field_lookup, _39626_ident,_39638_cpp_linked);;
	if ((_40917_f != nullptr)) {
		return jule::Any(_40917_f);
	};
	jule::Ptr<_1a6826829_Struct> _41417_s = _1a7741e19_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1a7741303_find_struct((*_self_)._field_lookup, _39626_ident,_39638_cpp_linked);;
	if ((_41417_s != nullptr)) {
		return jule::Any(_41417_s);
	};
	jule::Ptr<_1a7726b9b_TypeAlias> _41917_ta = _1a7741e19_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1a7740e4b_find_type_alias((*_self_)._field_lookup, _39626_ident,_39638_cpp_linked);;
	if ((_41917_ta != nullptr)) {
		return jule::Any(_41917_ta);
	};
	return jule::Any(_1a7703a8a_find_builtins(&(*_self_), _39626_ident));
}



inline void _1a9d86e1e_push_reference(_1a7700922_Eval* _self_, jule::Ptr<_1a6872c93_FnIns>& _42741_ref) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1a766e374_ScopeChecker>>()) {
			_case_begin_1a9d888b0:;
			{
				jule::Ptr<_1a766e374_ScopeChecker> _43021_sc = _1a7671882_get_hard_root((*_self_)._field_lookup.operator jule::Ptr<_1a766e374_ScopeChecker>());;
				if ((!(_1a9d89592_exist(_43021_sc.get()._field_owner.get()._field_refers.ptr(), _42741_ref)))) {
					_1a68766ae_push(_43021_sc.get()._field_owner.get()._field_refers.ptr(), jule::Any(_42741_ref));
				};
			}
		}
		else {
			_case_begin_1a9d881a6:;
			{
				if ((((*_self_)._field_owner != nullptr) && (!(_1a9d89592_exist((*_self_)._field_owner.get()._field_refers.ptr(), _42741_ref))))) {
					_1a68766ae_push((*_self_)._field_owner.get()._field_refers.ptr(), jule::Any(_42741_ref));
				};
			}
		}
		_match_end_1a9d88151:;
	};
}

inline void _1a9d99eed_push_reference(_1a7700922_Eval* _self_, jule::Ptr<_1a76a7720_Var>& _42741_ref) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1a766e374_ScopeChecker>>()) {
			_case_begin_1a9da03cc:;
			{
				jule::Ptr<_1a766e374_ScopeChecker> _43021_sc = _1a7671882_get_hard_root((*_self_)._field_lookup.operator jule::Ptr<_1a766e374_ScopeChecker>());;
				if ((!(_1a9da108c_exist(_43021_sc.get()._field_owner.get()._field_refers.ptr(), _42741_ref)))) {
					_1a68766ae_push(_43021_sc.get()._field_owner.get()._field_refers.ptr(), jule::Any(_42741_ref));
				};
			}
		}
		else {
			_case_begin_1a9d9ebc3:;
			{
				if ((((*_self_)._field_owner != nullptr) && (!(_1a9da108c_exist((*_self_)._field_owner.get()._field_refers.ptr(), _42741_ref))))) {
					_1a68766ae_push((*_self_)._field_owner.get()._field_refers.ptr(), jule::Any(_42741_ref));
				};
			}
		}
		_match_end_1a9d9eb6d:;
	};
}

inline void _1a9e3deb5_push_reference(_1a7700922_Eval* _self_, jule::Ptr<_1a6836a48_StructIns>& _42741_ref) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1a766e374_ScopeChecker>>()) {
			_case_begin_1a9e40967:;
			{
				jule::Ptr<_1a766e374_ScopeChecker> _43021_sc = _1a7671882_get_hard_root((*_self_)._field_lookup.operator jule::Ptr<_1a766e374_ScopeChecker>());;
				if ((!(_1a9e41627_exist(_43021_sc.get()._field_owner.get()._field_refers.ptr(), _42741_ref)))) {
					_1a68766ae_push(_43021_sc.get()._field_owner.get()._field_refers.ptr(), jule::Any(_42741_ref));
				};
			}
		}
		else {
			_case_begin_1a9e4025d:;
			{
				if ((((*_self_)._field_owner != nullptr) && (!(_1a9e41627_exist((*_self_)._field_owner.get()._field_refers.ptr(), _42741_ref))))) {
					_1a68766ae_push((*_self_)._field_owner.get()._field_refers.ptr(), jule::Any(_42741_ref));
				};
			}
		}
		_match_end_1a9e40208:;
	};
}



inline jule::Ptr<_1a76edda4_Data> _1a77044c5___eval_enum(_1a7700922_Eval* _self_, jule::Ptr<_1a6982435_Enum> _44130_enm) {
	return jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_44130_enm, 3)}), ._field_mutable=false, ._field_lvalue=false, ._field_decl=true, ._field_constant=nullptr});
}



inline jule::Ptr<_1a76edda4_Data> _1a770487c_eval_enum(_1a7700922_Eval* _self_, jule::Ptr<_1a6982435_Enum> _45332_enm, jule::Ptr<_1a527737a_Token> _45344_error_token) {
	if ((!(_1a7690d13_is_accessible_define((*_self_)._field_s.ptr(), _45332_enm.get()._field_public,_45332_enm.get()._field_token)))) {
		_1a7700dea_push_err(&(*_self_), _45344_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_45332_enm.get()._field_ident)}));
		_1a7701219_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	return _1a77044c5___eval_enum(&(*_self_), _45332_enm);
}



inline jule::Ptr<_1a76edda4_Data> _1a7704b8a___eval_struct(_1a7700922_Eval* _self_, jule::Ptr<_1a6836a48_StructIns> _46332_s) {
	return jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_46332_s, 0)}), ._field_mutable=false, ._field_lvalue=false, ._field_model=jule::Any(_46332_s), ._field_decl=true, ._field_constant=nullptr});
}



inline jule::Ptr<_1a76edda4_Data> _1a7705042_eval_struct(_1a7700922_Eval* _self_, jule::Ptr<_1a6836a48_StructIns> _47634_s, jule::Ptr<_1a527737a_Token> _47649_error_token) {
	if ((!(_1a7690d13_is_accessible_define((*_self_)._field_s.ptr(), _47634_s.get()._field_decl.get()._field_public,_47634_s.get()._field_decl.get()._field_token)))) {
		_1a7700dea_push_err(&(*_self_), _47649_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_47634_s.get()._field_decl.get()._field_ident)}));
		_1a7701219_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	_1a770566e_check_deprecated(&(*_self_), _47634_s.get()._field_decl.get()._field_directives,_47649_error_token);
	return _1a7704b8a___eval_struct(&(*_self_), _47634_s);
}



inline jule::Ptr<_1a76edda4_Data> _1a7705350_eval_fn_ins(_1a7700922_Eval* _self_, jule::Ptr<_1a6872c93_FnIns> _48830_f) {
	return jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_48830_f, 1)}), ._field_mutable=false, ._field_lvalue=false, ._field_model=jule::Any(_48830_f), ._field_decl=false, ._field_constant=nullptr});
}



inline void _1a770566e_check_deprecated(_1a7700922_Eval* _self_, jule::Slice<jule::Ptr<_1a6852525_Directive>>& _50140_directives, jule::Ptr<_1a527737a_Token> _50182_tok) {
	if (_1a7701835_is_unsafe(&(*_self_))) {
		return;;
	};
	jule::Ptr<_1a6852525_Directive> _50613_d = _1a77225c0_find_directive(_50140_directives,jule::Str("deprecated", 10));;
	if ((_50613_d != nullptr)) {
		if ((_50613_d.get()._field_args.len() == 0LL)) {
			_1a7700dea_push_err(&(*_self_), _50182_tok,jule::Str("deprecated usage: @", 19),jule::Slice<jule::Any>::make({jule::Any(jule::Str("this code is deprecated", 23))}));
		} else {
			_1a7700dea_push_err(&(*_self_), _50182_tok,jule::Str("deprecated usage: @", 19),jule::Slice<jule::Any>::make({jule::Any(_50613_d.get()._field_args[0LL].get()._field_kind)}));
		};
		_1a7701219_push_suggestion(&(*_self_), jule::Str("use Unsafe Jule for deprecated codes or replace to successor", 60),jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1a76edda4_Data> _1a7705a26_eval_fn(_1a7700922_Eval* _self_, jule::Ptr<_1a68709c7_Fn> _51730_f, jule::Ptr<_1a527737a_Token> _51738_error_token) {
	if ((!(_1a7690d13_is_accessible_define((*_self_)._field_s.ptr(), _51730_f.get()._field_public,_51730_f.get()._field_token)))) {
		_1a7700dea_push_err(&(*_self_), _51738_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_51730_f.get()._field_ident)}));
		_1a7701219_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	_1a770566e_check_deprecated(&(*_self_), _51730_f.get()._field_directives,_51738_error_token);
	jule::Ptr<_1a6872c93_FnIns> _52617_ins = _1a6871742_instance(_51730_f);;
	_1a9d86e1e_push_reference(&(*_self_), _52617_ins);
	return _1a7705350_eval_fn_ins(&(*_self_), _52617_ins);
}



inline void _1a7705e11_push_illegal_cycle_error(_1a7700922_Eval* _self_, jule::Ptr<_1a76a7720_Var>& _53144_v1, jule::Ptr<_1a76a7720_Var>& _53155_v2, jule::Str& _53170_message) {
	;
	jule::Str _53413_refers_to = _1a4334e1c_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_53144_v1.get()._field_ident),jule::Any(_53155_v2.get()._field_ident)}));;
	(_53170_message).buffer.insert(0, (((_1a4222117_repeat(jule::Str(" ", 1),4LL) + _53413_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _1a77062c9_check_cross_cycle(_1a7700922_Eval* _self_, jule::Ptr<_1a76a7720_Var>& _53837_v, jule::Str& _53851_message) {
	{
		auto &expr = _53837_v.get()._field_depends;
		auto it = expr.begin();
		_iter_begin_1a9d90620:;
		if (it != expr.end()) {
			jule::Ptr<_1a76a7720_Var> &_53916_d = *it;
			{
				if ((_53916_d == (*_self_)._field_owner)) {
					_1a7705e11_push_illegal_cycle_error(&(*_self_), _53837_v,_53916_d,_53851_message);
					return false;
				};
				if ((!(_1a77062c9_check_cross_cycle(&(*_self_), _53916_d,_53851_message)))) {
					_1a7705e11_push_illegal_cycle_error(&(*_self_), _53837_v,_53916_d,_53851_message);
					return false;
				};
			}
			_iter_next_1a9d90620:;
			++it;
			goto _iter_begin_1a9d90620;
		}
		_iter_end_1a9d90620:;
	};
	return true;
}



inline jule::Bool _1a7706681_check_illegal_cycles(_1a7700922_Eval* _self_, jule::Ptr<_1a76a7720_Var>& _55744_v, jule::Ptr<_1a527737a_Token> _55753_decl_token) {
	jule::Bool _55775_ok = jule::Bool();
	if (((*_self_)._field_owner == nullptr)) {
		_55775_ok = true;
		return _55775_ok;
	};
	if (((*_self_)._field_owner == _55744_v)) {
		_1a7700dea_push_err(&(*_self_), (*_self_)._field_owner.get()._field_token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_owner.get()._field_ident)}));
		_55775_ok = false;
		return _55775_ok;
	};
	jule::Str _56917_message = jule::Str();;
	if ((!(_1a77062c9_check_cross_cycle(&(*_self_), _55744_v,_56917_message)))) {
		jule::Str _57221_err_msg = _56917_message;;
		_56917_message=jule::Str();
		_1a7705e11_push_illegal_cycle_error(&(*_self_), (*_self_)._field_owner,_55744_v,_56917_message);
		_57221_err_msg=(_57221_err_msg + _56917_message);
		_1a7700dea_push_err(&(*_self_), _55753_decl_token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>::make({jule::Any(_57221_err_msg)}));
		_55775_ok = false;
		return _55775_ok;
	};
	(*_self_)._field_owner.get()._field_depends = jule::alloc_for_append((*_self_)._field_owner.get()._field_depends,1);(*_self_)._field_owner.get()._field_depends.__push(_55744_v);;
	_55775_ok = true;
	return _55775_ok;
}



inline jule::Ptr<_1a76edda4_Data> _1a7706a38_eval_var(_1a7700922_Eval* _self_, jule::Ptr<_1a76a7720_Var> _58431_v, jule::Ptr<_1a527737a_Token> _58440_error_token) {
	if ((!(_1a7690d13_is_accessible_define((*_self_)._field_s.ptr(), _58431_v.get()._field_public,_58431_v.get()._field_token)))) {
		_1a7700dea_push_err(&(*_self_), _58440_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_58431_v.get()._field_ident)}));
		_1a7701219_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	_1a770566e_check_deprecated(&(*_self_), _58431_v.get()._field_directives,_58440_error_token);
	_58431_v.get()._field_used=true;
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1a768cc22_Sema>>()) {
			_case_begin_1a9d99a7a:;
			{
				jule::Bool _59817_ok = _1a7706681_check_illegal_cycles(&(*_self_), _58431_v,_58440_error_token);;
				if ((!(_59817_ok))) {
					return nullptr;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a766e374_ScopeChecker>>()) {
			_case_begin_1a9d99ae1:;
			{
				if (((!(_58431_v.get()._field_reference)) || _1a7701835_is_unsafe(&(*_self_)))) {
					goto _match_end_1a9d999e2;
				};
				jule::Ptr<_1a766e374_ScopeChecker> _60621_s = (*_self_)._field_lookup.operator jule::Ptr<_1a766e374_ScopeChecker>();;
				while (((_60621_s.get()._field_owner == nullptr) && (_60621_s.get()._field_parent != nullptr))) {
					{
						_60621_s=_60621_s.get()._field_parent;
					}
				_iter_next_1a9d9a9b0:;
				}
				_iter_end_1a9d9a9b0:;;
				if ((((_60621_s.get()._field_owner != nullptr) && _60621_s.get()._field_owner.get()._field_anon) && (_58431_v.get()._field_scope != _60621_s.get()._field_owner.get()._field_scope))) {
					_1a7700dea_push_err(&(*_self_), _58440_error_token,jule::Str("anonymous functions cannot access to reference definition @ of parent scope", 75),jule::Slice<jule::Any>::make({jule::Any(_58431_v.get()._field_ident)}));
				};
			}
		}
		_match_end_1a9d999e2:;
	};
	_1a9d99eed_push_reference(&(*_self_), _58431_v);
	if (((!(_58431_v.get()._field_cpp_linked)) && ((_58431_v.get()._field_value == nullptr) || (_58431_v.get()._field_value.get()._field_data == nullptr)))) {
		if (_58431_v.get()._field_constant) {
			_1a76a03e9_check_type_var((*_self_)._field_s, _58431_v,jule::Trait<_1a7741e19_Lookup>((*_self_)._field_s, 3));
			if ((_58431_v.get()._field_value.get()._field_data == nullptr)) {
				return nullptr;
			};
		};
	};
	if (((_58431_v.get()._field_kind == nullptr) || (_58431_v.get()._field_kind.get()._field_kind == nullptr))) {
		if ((_58431_v.get()._field_scope != nullptr)) {
			return nullptr;
		};
		_1a76a03e9_check_type_var((*_self_)._field_s, _58431_v,(*_self_)._field_lookup);
		if (((_58431_v.get()._field_kind == nullptr) || (_58431_v.get()._field_kind.get()._field_kind == nullptr))) {
			return nullptr;
		};
	};
	jule::Ptr<_1a76edda4_Data> _64617_d = jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_kind=_58431_v.get()._field_kind.get()._field_kind, ._field_mutable=_58431_v.get()._field_mutable, ._field_reference=_58431_v.get()._field_reference, ._field_lvalue=(!(_58431_v.get()._field_constant)), ._field_model=jule::Any(_58431_v), });;
	if ((((!(_58431_v.get()._field_cpp_linked)) && _1a76a7ac7_is_initialized(_58431_v.ptr())) && (_58431_v.get()._field_value.get()._field_data != nullptr))) {
		_64617_d.get()._field_is_rune=_58431_v.get()._field_value.get()._field_data.get()._field_is_rune;
	};
	if ((_58431_v.get()._field_constant && (_58431_v.get()._field_value.get()._field_data.get()._field_constant != nullptr))) {
		_64617_d.get()._field_constant=jule::new_ptr<_1a75c3251_Const>((*(_58431_v.get()._field_value.get()._field_data.get()._field_constant)));
		_64617_d.get()._field_model=jule::Any(_64617_d.get()._field_constant);
	};
	if (_1a76ee767_is_const(_64617_d.ptr())) {
		_1a7701da7_apply_numeric_prefix(&(*_self_), _64617_d);
	};
	return _64617_d;
}



inline jule::Ptr<_1a76edda4_Data> _1a7706de0_eval_type_alias(_1a7700922_Eval* _self_, jule::Ptr<_1a7726b9b_TypeAlias> _67038_ta, jule::Ptr<_1a527737a_Token> _67054_error_token) {
	if ((!(_1a7690d13_is_accessible_define((*_self_)._field_s.ptr(), _67038_ta.get()._field_public,_67038_ta.get()._field_token)))) {
		_1a7700dea_push_err(&(*_self_), _67054_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_67038_ta.get()._field_ident)}));
		_1a7701219_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	_67038_ta.get()._field_used=true;
	jule::Trait<_1a77274a4_Kind> _67917_kind = _67038_ta.get()._field_kind.get()._field_kind.get()._field_kind;;
	jule::Ptr<_1a76edda4_Data> _68017_d = nullptr;;
	{
		auto &_match_expr{ _67917_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a6836a48_StructIns>>()) {
			_case_begin_1a9db0475:;
			{
				_68017_d=_1a7704b8a___eval_struct(&(*_self_), _67917_kind.operator jule::Ptr<_1a6836a48_StructIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6982435_Enum>>()) {
			_case_begin_1a9dae09a:;
			{
				_68017_d=_1a77044c5___eval_enum(&(*_self_), _67917_kind.operator jule::Ptr<_1a6982435_Enum>());
			}
		}
		else {
			_case_begin_1a9dade24:;
			{
				_68017_d=jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=_67038_ta.get()._field_kind.get()._field_kind.get()._field_kind}), ._field_decl=true, });
				if (_67038_ta.get()._field_cpp_linked) {
					_68017_d.get()._field_kind.get()._field_cpp_ident=_67038_ta.get()._field_ident;
				} else {
					_68017_d.get()._field_kind.get()._field_cpp_ident=_67038_ta.get()._field_kind.get()._field_kind.get()._field_cpp_ident;
				};
				_68017_d.get()._field_model=jule::Any(_68017_d.get()._field_kind);
			}
		}
		_match_end_1a9daddbe:;
	};
	_68017_d.get()._field_kind.get()._field_generic=_67038_ta.get()._field_generic;
	return _68017_d;
}



inline jule::Ptr<_1a76edda4_Data> _1a7707297_eval_def(_1a7700922_Eval* _self_, jule::Any _70431_def, jule::Ptr<_1a527737a_Token> _70441_ident) {
	{
		auto &_match_expr{ _70431_def };
		
		if (_match_expr.type_is<jule::Ptr<_1a76a7720_Var>>()) {
			_case_begin_1a9db2d07:;
			{
				return _1a7706a38_eval_var(&(*_self_), _70431_def.operator jule::Ptr<_1a76a7720_Var>(),_70441_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6982435_Enum>>()) {
			_case_begin_1a9db2d6d:;
			{
				return _1a770487c_eval_enum(&(*_self_), _70431_def.operator jule::Ptr<_1a6982435_Enum>(),_70441_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6826829_Struct>>()) {
			_case_begin_1a9db2e17:;
			{
				return _1a7705042_eval_struct(&(*_self_), _1a6829387_instance(_70431_def.operator jule::Ptr<_1a6826829_Struct>()),_70441_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a68709c7_Fn>>()) {
			_case_begin_1a9db2e7d:;
			{
				jule::Ptr<_1a68709c7_Fn> _71321_f = _70431_def.operator jule::Ptr<_1a68709c7_Fn>();;
				if ((_71321_f.get()._field_ident != jule::Str("init", 4))) {
					return _1a7705a26_eval_fn(&(*_self_), _71321_f,_70441_ident);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6872c93_FnIns>>()) {
			_case_begin_1a9db2ee4:;
			{
				return _1a7705350_eval_fn_ins(&(*_self_), _70431_def.operator jule::Ptr<_1a6872c93_FnIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a7726b9b_TypeAlias>>()) {
			_case_begin_1a9db305a:;
			{
				return _1a7706de0_eval_type_alias(&(*_self_), _70431_def.operator jule::Ptr<_1a7726b9b_TypeAlias>(),_70441_ident);
			}
		}
		_match_end_1a9db2c2a:;
	};
	_1a7700dea_push_err(&(*_self_), _70441_ident,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_70441_ident.get()._field_kind)}));
	return nullptr;
}



inline jule::Ptr<_1a76edda4_Data> _1a77075a5_eval_ident(_1a7700922_Eval* _self_, jule::Ptr<_1a6857ae1_IdentExpr> _72629_ident) {
	jule::Any _72717_def = _1a7703e42_get_def(&(*_self_), _72629_ident.get()._field_ident,_72629_ident.get()._field_cpp_linked);;
	return _1a7707297_eval_def(&(*_self_), jule::Any(_72717_def),_72629_ident.get()._field_token);
}



inline jule::Ptr<_1a76edda4_Data> _1a77078b3_eval_unary(jule::Ptr<_1a7700922_Eval> _self_, jule::Ptr<_1a68582ea_UnaryExpr> _73134_u) {
	_1a7719c9e_UnaryEval _73217_unary = static__1a771a255_new(_self_);;
	return _1a771b4ed_eval(&_73217_unary, _73134_u);
}



inline jule::Ptr<_1a76edda4_Data> _1a7707bc1_eval_variadic(jule::Ptr<_1a7700922_Eval> _self_, jule::Ptr<_1a68586a2_VariadicExpr> _73637_v) {
	if ((_73637_v.get()._field_expr == nullptr)) {
		_1a7700dea_push_err(_self_.ptr(), _73637_v.get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1a77278d3_TypeKind> _74217_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_74217_prefix;
	});;
	jule::Ptr<_1a76edda4_Data> _74617_d = _1a7719210_eval_expr_kind(_self_, jule::Any(_73637_v.get()._field_expr));;
	if ((_74617_d == nullptr)) {
		return nullptr;
	};
	if ((!(_1a772972b_variadicable(_74617_d.get()._field_kind.ptr())))) {
		_1a7700dea_push_err(_self_.ptr(), _73637_v.get()._field_token,jule::Str("type @ is not variadicable", 26),jule::Slice<jule::Any>::make({jule::Any(_1a7727c8a_to_str(_74617_d.get()._field_kind.ptr()))}));
		return nullptr;
	};
	jule::Ptr<_1a77310a1_Slc> _75613_slc = _1a772a6a5_slc(_74617_d.get()._field_kind.ptr());;
	_74617_d.get()._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_cpp_ident=_75613_slc.get()._field_elem.get()._field_cpp_ident, ._field_generic=_75613_slc.get()._field_elem.get()._field_generic, ._field_variadic=true, ._field_kind=_75613_slc.get()._field_elem.get()._field_kind});
	return _74617_d;
}



inline jule::Ptr<_1a76edda4_Data> _1a7707ece_eval_unsafe(jule::Ptr<_1a7700922_Eval> _self_, jule::Ptr<_1a68572b6_UnsafeExpr> _76635_u) {
	jule::Bool _76713_unsafety = _self_.get()._field_unsafety;;
	_self_.get()._field_unsafety=true;
	jule::Ptr<_1a76edda4_Data> _77017_d = _1a7719210_eval_expr_kind(_self_, jule::Any(_76635_u.get()._field_expr));;
	_self_.get()._field_unsafety=_76713_unsafety;
	return _77017_d;
}



inline jule::Ptr<_1a76edda4_Data> _1a77082dc_eval_arr(jule::Ptr<_1a7700922_Eval> _self_, jule::Ptr<_1a685c3ba_SliceExpr> _77732_s) {
	jule::Ptr<_1a773324b_Arr> _77917_pt = _1a772a441_arr(_self_.get()._field_prefix.ptr());;
	jule::Ptr<_1a773324b_Arr> _78117_arr = jule::new_ptr<_1a773324b_Arr>(_1a773324b_Arr{._field_auto=false, ._field_n=0LL, ._field_elem=_77917_pt.get()._field_elem});;
	jule::Bool _78717_filled = false;;
	if ((_77732_s.get()._field_exprs.len() == 2LL)) {
		{
			auto &_match_expr{ _77732_s.get()._field_exprs[1LL].get()._field_kind };
			
			if (_match_expr.type_is<jule::Ptr<_1a68586a2_VariadicExpr>>()) {
				_case_begin_1a9dc5688:;
				{
					if ((_77732_s.get()._field_exprs[1LL].get()._field_kind.operator jule::Ptr<_1a68586a2_VariadicExpr>().get()._field_expr != nullptr)) {
						goto _match_end_1a9dc5622;
					};
					if (_77917_pt.get()._field_auto) {
						_1a7700dea_push_err(_self_.ptr(), _77732_s.get()._field_token,jule::Str("auto-sized arrays cannot filled", 31),jule::Slice<jule::Any>());
						return nullptr;
					};
					_78717_filled=true;
					_77732_s.get()._field_exprs=_77732_s.get()._field_exprs.slice(0LL,1LL);
				}
			}
			_match_end_1a9dc5622:;
		};
	};
	_78117_arr.get()._field_n=static_cast<jule::I64>(_77732_s.get()._field_exprs.len());
	if ((!(_77917_pt.get()._field_auto))) {
		if ((_78117_arr.get()._field_n > _77917_pt.get()._field_n)) {
			_1a7700dea_push_err(_self_.ptr(), _77732_s.get()._field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
		} else if ((_78117_arr.get()._field_n < _77917_pt.get()._field_n)) {
			_78117_arr.get()._field_n=_77917_pt.get()._field_n;
		};
	};
	jule::Ptr<_1a686ca07_ArrayExprModel> _81617_model = jule::new_ptr<_1a686ca07_ArrayExprModel>(_1a686ca07_ArrayExprModel{._field_kind=_78117_arr, });;
	if (_78717_filled) {
		_81617_model.get()._field_elems=jule::Slice<jule::Any>::alloc(0LL,2LL);
	} else {
		_81617_model.get()._field_elems=jule::Slice<jule::Any>::alloc(0LL,_77732_s.get()._field_exprs.len());
	};
	jule::Ptr<_1a77278d3_TypeKind> _82517_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=_78117_arr.get()._field_elem;
	{
		auto &expr = _77732_s.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1a9dcaa9a:;
		if (it != expr.end()) {
			jule::Ptr<_1a6855e41_Expr> _82721_elem = *it;
			{
				jule::Ptr<_1a76edda4_Data> _82821_d = _1a7719210_eval_expr_kind(_self_, jule::Any(_82721_elem));;
				if ((_82821_d == nullptr)) {
					goto _iter_next_1a9dcaa9a;
				};
				_1a769593e_check_assign_type(_self_.get()._field_s, false,_78117_arr.get()._field_elem,_82821_d,_77732_s.get()._field_token);
				_81617_model.get()._field_elems = jule::alloc_for_append(_81617_model.get()._field_elems,1);_81617_model.get()._field_elems.__push(jule::Any(_82821_d.get()._field_model));;
			}
			_iter_next_1a9dcaa9a:;
			++it;
			goto _iter_begin_1a9dcaa9a;
		}
		_iter_end_1a9dcaa9a:;
	};
	_self_.get()._field_prefix=_82517_prefix;
	if (_78717_filled) {
		_81617_model.get()._field_elems = jule::alloc_for_append(_81617_model.get()._field_elems,1);_81617_model.get()._field_elems.__push(nullptr);;
	};
	return jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_78117_arr, 10)}), ._field_mutable=true, ._field_model=jule::Any(_81617_model), });
}



inline jule::Ptr<_1a76edda4_Data> _1a7708694_eval_exp_slc(jule::Ptr<_1a7700922_Eval> _self_, jule::Ptr<_1a685c3ba_SliceExpr> _85236_s, jule::Ptr<_1a77278d3_TypeKind> _85255_elem_type) {
	jule::Ptr<_1a77310a1_Slc> _85317_slc = jule::new_ptr<_1a77310a1_Slc>(_1a77310a1_Slc{._field_elem=_85255_elem_type});;
	jule::Ptr<_1a684533c_SliceExprModel> _85717_model = jule::new_ptr<_1a684533c_SliceExprModel>(_1a684533c_SliceExprModel{._field_elem_kind=_85255_elem_type, ._field_elems=jule::Slice<jule::Any>::alloc(0LL,_85236_s.get()._field_exprs.len())});;
	jule::Ptr<_1a77278d3_TypeKind> _86217_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=_85317_slc.get()._field_elem;
	{
		auto &expr = _85236_s.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1a9dd0a8e:;
		if (it != expr.end()) {
			jule::Ptr<_1a6855e41_Expr> _86421_elem = *it;
			{
				jule::Ptr<_1a76edda4_Data> _86521_d = _1a7719210_eval_expr_kind(_self_, jule::Any(_86421_elem));;
				if ((_86521_d == nullptr)) {
					goto _iter_next_1a9dd0a8e;
				};
				_1a769593e_check_assign_type(_self_.get()._field_s, false,_85317_slc.get()._field_elem,_86521_d,_85236_s.get()._field_token);
				_85717_model.get()._field_elems = jule::alloc_for_append(_85717_model.get()._field_elems,1);_85717_model.get()._field_elems.__push(jule::Any(_86521_d.get()._field_model));;
			}
			_iter_next_1a9dd0a8e:;
			++it;
			goto _iter_begin_1a9dd0a8e;
		}
		_iter_end_1a9dd0a8e:;
	};
	_self_.get()._field_prefix=_86217_prefix;
	return jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_85317_slc, 7)}), ._field_mutable=true, ._field_model=jule::Any(_85717_model), });
}



inline jule::Ptr<_1a76edda4_Data> _1a77089a2_eval_slice_expr(jule::Ptr<_1a7700922_Eval> _self_, jule::Ptr<_1a685c3ba_SliceExpr> _88339_s) {
	if ((_self_.get()._field_prefix != nullptr)) {
		{
			
			if ((_1a772a441_arr(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_1a9dd417a:;
				{
					return _1a77082dc_eval_arr(_self_, _88339_s);
				}
			}
			else if ((_1a772a6a5_slc(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_1a9dd4202:;
				{
					jule::Ptr<_1a77310a1_Slc> _88925_pt = _1a772a6a5_slc(_self_.get()._field_prefix.ptr());;
					return _1a7708694_eval_exp_slc(_self_, _88339_s,_88925_pt.get()._field_elem);
				}
			}
			_match_end_1a9dd406a:;
		};
	};
	jule::Ptr<_1a77278d3_TypeKind> _89417_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	if ((_88339_s.get()._field_exprs.len() == 0LL)) {
		_1a7700dea_push_err(_self_.ptr(), _88339_s.get()._field_token,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1a76edda4_Data> _90217_first_elem = _1a7719210_eval_expr_kind(_self_, jule::Any(_88339_s.get()._field_exprs[0LL]));;
	if ((_90217_first_elem == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1a76edda4_Data> _90717_d = _1a7708694_eval_exp_slc(_self_, _88339_s,_90217_first_elem.get()._field_kind);;
	_self_.get()._field_prefix=_89417_prefix;
	return _90717_d;
}



inline void _1a7708ce3_check_integer_indexing_by_data(_1a7700922_Eval* _self_, jule::Ptr<_1a76edda4_Data>& _91354_d, jule::Ptr<_1a527737a_Token> _91364_token) {
	jule::Str _91413_err_key = _1a77249bd_check_data_for_integer_indexing(_91354_d);;
	{
		auto &_match_expr{ _91413_err_key };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1a9dda00a:;
			{
				return;;
			}
		}
		else if (_match_expr == jule::Str("type @ is invalid for indexing", 30)) {
			_case_begin_1a9dda071:;
			{
				_1a7700dea_push_err(&(*_self_), _91364_token,_91413_err_key,jule::Slice<jule::Any>::make({jule::Any(_1a7727c8a_to_str(_91354_d.get()._field_kind.ptr()))}));
			}
		}
		else {
			_case_begin_1a9dd9911:;
			{
				_1a7700dea_push_err(&(*_self_), _91364_token,_91413_err_key,jule::Slice<jule::Any>());
			}
		}
		_match_end_1a9dd9d2e:;
	};
}



inline void _1a77091bc_indexing_ptr(_1a7700922_Eval* _self_, jule::Ptr<_1a76edda4_Data>& _92536_d, jule::Ptr<_1a76edda4_Data>& _92551_index, jule::Ptr<_1a685ce9d_IndexingExpr>& _92566_i) {
	_1a7708ce3_check_integer_indexing_by_data(&(*_self_), _92551_index,_92566_i.get()._field_token);
	jule::Ptr<_1a7733ba8_Ptr> _92817_ptr = _1a7729e68_ptr(_92536_d.get()._field_kind.ptr());;
	{
		
		if (_1a773467b_is_unsafe(_92817_ptr.ptr())) {
			_case_begin_1a9ddd1a6:;
			{
				_1a7700dea_push_err(&(*_self_), _92566_i.get()._field_token,jule::Str("unsafe pointers are not supports indexing", 41),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((!(_1a7701835_is_unsafe(&(*_self_))))) {
			_case_begin_1a9ddd22d:;
			{
				_1a7700dea_push_err(&(*_self_), _92566_i.get()._field_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
			}
		}
		_match_end_1a9ddd096:;
	};
	_92536_d.get()._field_kind=_92817_ptr.get()._field_elem;
}



inline void _1a7709585_indexing_arr(_1a7700922_Eval* _self_, jule::Ptr<_1a76edda4_Data>& _94036_d, jule::Ptr<_1a76edda4_Data>& _94051_index, jule::Ptr<_1a685ce9d_IndexingExpr>& _94066_i) {
	jule::Ptr<_1a773324b_Arr> _94117_arr = _1a772a441_arr(_94036_d.get()._field_kind.ptr());;
	_94036_d.get()._field_kind=_94117_arr.get()._field_elem;
	_1a7708ce3_check_integer_indexing_by_data(&(*_self_), _94051_index,_94066_i.get()._field_token);
	if ((_1a76ee767_is_const(_94051_index.ptr()) && (_1a75c56b5_as_f64(_94051_index.get()._field_constant.ptr()) >= static_cast<jule::F64>(_94117_arr.get()._field_n)))) {
		_1a7700dea_push_err(&(*_self_), _94066_i.get()._field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
	};
}



inline void _1a770994d_indexing_slc(_1a7700922_Eval* _self_, jule::Ptr<_1a76edda4_Data>& _94936_d, jule::Ptr<_1a76edda4_Data>& _94951_index, jule::Ptr<_1a685ce9d_IndexingExpr>& _94966_i) {
	jule::Ptr<_1a77310a1_Slc> _95017_slc = _1a772a6a5_slc(_94936_d.get()._field_kind.ptr());;
	_94936_d.get()._field_kind=_95017_slc.get()._field_elem;
	_1a7708ce3_check_integer_indexing_by_data(&(*_self_), _94951_index,_94966_i.get()._field_token);
	if ((!(_1a76ee767_is_const(_94951_index.ptr())))) {
		return;;
	};
	{
		auto &_match_expr{ _94936_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1a684533c_SliceExprModel>>()) {
			_case_begin_1a9de5411:;
			{
				jule::Ptr<_1a684533c_SliceExprModel> _96021_m = _94936_d.get()._field_model.operator jule::Ptr<_1a684533c_SliceExprModel>();;
				jule::F64 _96117_indx = _1a75c56b5_as_f64(_94951_index.get()._field_constant.ptr());;
				if ((_96117_indx >= static_cast<jule::F64>(_96021_m.get()._field_elems.len()))) {
					_1a7700dea_push_err(&(*_self_), _94966_i.get()._field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
				} else {
					_94936_d.get()._field_model=jule::Any(_96021_m.get()._field_elems[static_cast<jule::I64>(static_cast<jule::U64>(_96117_indx))]);
					_94936_d.get()._field_decl=true;
				};
			}
		}
		_match_end_1a9de53ab:;
	};
}



inline void _1a7709d16_indexing_map(_1a7700922_Eval* _self_, jule::Ptr<_1a76edda4_Data>& _97136_d, jule::Ptr<_1a76edda4_Data>& _97151_index, jule::Ptr<_1a685ce9d_IndexingExpr>& _97170_i) {
	if ((_97151_index == nullptr)) {
		return;;
	};
	jule::Ptr<_1a7732657_Map> _97617_m = _1a772b156_map(_97136_d.get()._field_kind.ptr());;
	_1a76db4ac_AssignTypeChecker _97717_atc = _1a76db4ac_AssignTypeChecker{._field_s=(*_self_)._field_s, ._field_dest=_97617_m.get()._field_key, ._field_d=_97151_index, ._field_error_token=_97170_i.get()._field_token};;
	_1a76dc634_check(&_97717_atc);
	_97136_d.get()._field_kind=_97617_m.get()._field_val;
}



inline void _1a770a1ce_indexing_str(_1a7700922_Eval* _self_, jule::Ptr<_1a76edda4_Data>& _98836_d, jule::Ptr<_1a76edda4_Data>& _98851_index, jule::Ptr<_1a685ce9d_IndexingExpr>& _98866_i) {
	;
	_98836_d.get()._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_1a773e554_build_prim_type(jule::Str("u8", 2)), 5)});
	if ((_98851_index == nullptr)) {
		return;;
	};
	_1a7708ce3_check_integer_indexing_by_data(&(*_self_), _98851_index,_98866_i.get()._field_token);
	if ((!(_1a76ee767_is_const(_98851_index.ptr())))) {
		_98836_d.get()._field_constant=nullptr;
		return;;
	};
	if (_1a76ee767_is_const(_98836_d.ptr())) {
		jule::Ptr<_1a527737a_Token> _100417_error_token = _98866_i.get()._field_token;;
		jule::I64 _100517_j = _1a75c51dc_as_i64(_98851_index.get()._field_constant.ptr());;
		jule::Str _100617_s = _1a75c4c14_read_str(_98836_d.get()._field_constant.ptr());;
		if ((static_cast<jule::I64>(_100517_j) >= _100617_s.len())) {
			_1a7700dea_push_err(&(*_self_), _100417_error_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
		} else {
			_1a75c5bb0_set_u64(_98836_d.get()._field_constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_100617_s[_100517_j])));
		};
	};
}



inline void _1a770a597_to_indexing(_1a7700922_Eval* _self_, jule::Ptr<_1a76edda4_Data>& _101535_d, jule::Ptr<_1a76edda4_Data>& _101550_index, jule::Ptr<_1a685ce9d_IndexingExpr>& _101569_i) {
	{
		
		if ((_1a7729e68_ptr(_101535_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a9e01c03:;
			{
				_1a77091bc_indexing_ptr(&(*_self_), _101535_d,_101550_index,_101569_i);
				return;;
			}
		}
		else if ((_1a772a441_arr(_101535_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a9e01c7a:;
			{
				_1a7709585_indexing_arr(&(*_self_), _101535_d,_101550_index,_101569_i);
				return;;
			}
		}
		else if ((_1a772a6a5_slc(_101535_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a9e01d02:;
			{
				_1a770994d_indexing_slc(&(*_self_), _101535_d,_101550_index,_101569_i);
				return;;
			}
		}
		else if ((_1a772b156_map(_101535_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a9e01d79:;
			{
				_1a7709d16_indexing_map(&(*_self_), _101535_d,_101550_index,_101569_i);
				return;;
			}
		}
		else if ((_1a7729990_prim(_101535_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a9e01e01:;
			{
				jule::Ptr<_1a772c135_Prim> _103017_prim = _1a7729990_prim(_101535_d.get()._field_kind.ptr());;
				{
					
					if (_1a77300e4_is_str(_103017_prim.ptr())) {
						_case_begin_1a9e062ce:;
						{
							_1a770a1ce_indexing_str(&(*_self_), _101535_d,_101550_index,_101569_i);
							return;;
						}
					}
					_match_end_1a9e06224:;
				};
			}
		}
		_match_end_1a9e01ac1:;
	};
	_1a7700dea_push_err(&(*_self_), _101569_i.get()._field_token,jule::Str("type @ is not support indexing", 30),jule::Slice<jule::Any>::make({jule::Any(_1a7727c8a_to_str(_101535_d.get()._field_kind.ptr()))}));
}



inline jule::Bool _1a770a971_push_generics_from_index_data(jule::Ptr<_1a7700922_Eval> _self_, jule::Ptr<_1a685305e_IdentTypeDecl>& _104154_decl, jule::Ptr<_1a685ce9d_IndexingExpr>& _104181_i) {
	{
		auto &_match_expr{ _104181_i.get()._field_index.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a68582ea_UnaryExpr>>()) {
			_case_begin_1a9e090c3:;
			{
				jule::Ptr<_1a76edda4_Data> _104621_d = _1a77078b3_eval_unary(_self_, _104181_i.get()._field_index.get()._field_kind.operator jule::Ptr<_1a68582ea_UnaryExpr>());;
				if ((!(_104621_d.get()._field_decl))) {
					_1a7700dea_push_err(_self_.ptr(), _104181_i.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return false;
				};
				_104154_decl.get()._field_generics = jule::alloc_for_append(_104154_decl.get()._field_generics,1);_104154_decl.get()._field_generics.__push(jule::new_ptr<_1a68529cb_TypeDecl>(_1a68529cb_TypeDecl{._field_kind=jule::Any(_104621_d.get()._field_kind)}));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a68529cb_TypeDecl>>()) {
			_case_begin_1a9e09139:;
			{
				_104154_decl.get()._field_generics = jule::alloc_for_append(_104154_decl.get()._field_generics,1);_104154_decl.get()._field_generics.__push(_104181_i.get()._field_index.get()._field_kind.operator jule::Ptr<_1a68529cb_TypeDecl>());;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6857ae1_IdentExpr>>()) {
			_case_begin_1a9e091b1:;
			{
				jule::Ptr<_1a6857ae1_IdentExpr> _105721_expr = _104181_i.get()._field_index.get()._field_kind.operator jule::Ptr<_1a6857ae1_IdentExpr>();;
				_104154_decl.get()._field_generics = jule::alloc_for_append(_104154_decl.get()._field_generics,1);_104154_decl.get()._field_generics.__push(jule::new_ptr<_1a68529cb_TypeDecl>(_1a68529cb_TypeDecl{._field_kind=jule::Any(jule::new_ptr<_1a685305e_IdentTypeDecl>(_1a685305e_IdentTypeDecl{._field_token=_105721_expr.get()._field_token, ._field_ident=_105721_expr.get()._field_ident, }))}));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a68565d4_TupleExpr>>()) {
			_case_begin_1a9e09227:;
			{
				{
					auto &expr = _104181_i.get()._field_index.get()._field_kind.operator jule::Ptr<_1a68565d4_TupleExpr>().get()._field_expr;
					auto it = expr.begin();
					_iter_begin_1a9e0d6e3:;
					if (it != expr.end()) {
						jule::Ptr<_1a6855e41_Expr> _106525_expr = *it;
						{
							{
								auto &_match_expr{ _106525_expr.get()._field_kind };
								
								if (_match_expr.type_is<jule::Ptr<_1a68529cb_TypeDecl>>()) {
									_case_begin_1a9e0e13e:;
									{
										_104154_decl.get()._field_generics = jule::alloc_for_append(_104154_decl.get()._field_generics,1);_104154_decl.get()._field_generics.__push(_106525_expr.get()._field_kind.operator jule::Ptr<_1a68529cb_TypeDecl>());;
									}
								}
								else if (_match_expr.type_is<jule::Ptr<_1a6857ae1_IdentExpr>>()) {
									_case_begin_1a9e0e1a5:;
									{
										jule::Ptr<_1a6857ae1_IdentExpr> _107029_idexpr = _106525_expr.get()._field_kind.operator jule::Ptr<_1a6857ae1_IdentExpr>();;
										_104154_decl.get()._field_generics = jule::alloc_for_append(_104154_decl.get()._field_generics,1);_104154_decl.get()._field_generics.__push(jule::new_ptr<_1a68529cb_TypeDecl>(_1a68529cb_TypeDecl{._field_kind=jule::Any(jule::new_ptr<_1a685305e_IdentTypeDecl>(_1a685305e_IdentTypeDecl{._field_token=_107029_idexpr.get()._field_token, ._field_ident=_107029_idexpr.get()._field_ident, }))}));;
									}
								}
								_match_end_1a9e00eaa:;
							};
						}
						_iter_next_1a9e0d6e3:;
						++it;
						goto _iter_begin_1a9e0d6e3;
					}
					_iter_end_1a9e0d6e3:;
				};
			}
		}
		else {
			_case_begin_1a9e08567:;
			{
				_1a7700dea_push_err(_self_.ptr(), _104181_i.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return false;
			}
		}
		_match_end_1a9e084bd:;
	};
	return true;
}



inline jule::Ptr<_1a76edda4_Data> _1a770ad5b_eval_ident_decl_from_indexing(jule::Ptr<_1a7700922_Eval> _self_, jule::Ptr<_1a76edda4_Data>& _108654_d, jule::Ptr<_1a685ce9d_IndexingExpr>& _108669_i) {
	jule::Ptr<_1a68529cb_TypeDecl> _108717_tdecl = jule::new_ptr<_1a68529cb_TypeDecl>(_1a68529cb_TypeDecl{});;
	jule::Ptr<_1a685305e_IdentTypeDecl> _108817_decl = nullptr;;
	{
		auto &_match_expr{ _108669_i.get()._field_expr.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a6857ae1_IdentExpr>>()) {
			_case_begin_1a9e13110:;
			{
				jule::Ptr<_1a6857ae1_IdentExpr> _109121_expr = _108669_i.get()._field_expr.get()._field_kind.operator jule::Ptr<_1a6857ae1_IdentExpr>();;
				_108817_decl=jule::new_ptr<_1a685305e_IdentTypeDecl>(_1a685305e_IdentTypeDecl{._field_token=_109121_expr.get()._field_token, ._field_ident=_109121_expr.get()._field_ident, });
				_108717_tdecl.get()._field_kind=jule::Any(_108817_decl);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6858e11_NsSelectionExpr>>()) {
			_case_begin_1a9e13011:;
			{
				jule::Ptr<_1a6858e11_NsSelectionExpr> _109821_expr = _108669_i.get()._field_expr.get()._field_kind.operator jule::Ptr<_1a6858e11_NsSelectionExpr>();;
				_108817_decl=jule::new_ptr<_1a685305e_IdentTypeDecl>(_1a685305e_IdentTypeDecl{._field_token=_109821_expr.get()._field_ident, ._field_ident=_109821_expr.get()._field_ident.get()._field_kind, });
				_108717_tdecl.get()._field_kind=jule::Any(jule::new_ptr<_1a6853768_NamespaceTypeDecl>(_1a6853768_NamespaceTypeDecl{._field_idents=_109821_expr.get()._field_ns, ._field_kind=_108817_decl}));
			}
		}
		else {
			_case_begin_1a9e12472:;
			{
				_1a7700dea_push_err(_self_.ptr(), _108669_i.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1a9e123ea:;
	};
	if ((!(_1a770a971_push_generics_from_index_data(_self_, _108817_decl,_108669_i)))) {
		return nullptr;
	};
	return _1a7710c40_eval_type(_self_.ptr(), _108717_tdecl);
}



inline jule::Ptr<_1a76edda4_Data> _1a770b17a_eval_indexing(jule::Ptr<_1a7700922_Eval> _self_, jule::Ptr<_1a685ce9d_IndexingExpr> _111737_i) {
	jule::Ptr<_1a77278d3_TypeKind> _111817_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_111817_prefix;
	});;
	jule::Ptr<_1a76edda4_Data> _112217_d = _1a7719210_eval_expr_kind(_self_, jule::Any(_111737_i.get()._field_expr));;
	if ((_112217_d == nullptr)) {
		return nullptr;
	};
	if (_112217_d.get()._field_decl) {
		return _1a770ad5b_eval_ident_decl_from_indexing(_self_, _112217_d,_111737_i);
	};
	_1a76edda4_Data _113217_old_d = (*(_112217_d));;
	jule::Ptr<_1a76edda4_Data> _113417_index = _1a7719210_eval_expr_kind(_self_, jule::Any(_111737_i.get()._field_index));;
	if ((_113417_index == nullptr)) {
		return nullptr;
	};
	_112217_d.get()._field_decl=false;
	_1a770a597_to_indexing(_self_.ptr(), _112217_d,_113417_index,_111737_i);
	if (_1a76ee767_is_const(_112217_d.ptr())) {
		_112217_d.get()._field_decl=false;
		_112217_d.get()._field_model=jule::Any(_112217_d.get()._field_constant);
	} else if (_112217_d.get()._field_decl) {
		_112217_d.get()._field_decl=false;
	} else {
		_112217_d.get()._field_model=jule::Any(jule::new_ptr<_1a686b770_IndexingExprModel>(_1a686b770_IndexingExprModel{._field_token=_111737_i.get()._field_token, ._field_expr=jule::new_ptr<_1a76edda4_Data>(_113217_old_d), ._field_index=_113417_index}));
	};
	return _112217_d;
}



inline std::tuple<jule::Ptr<_1a76edda4_Data>,jule::Ptr<_1a76edda4_Data>> _1a770b488_eval_slicing_exprs(jule::Ptr<_1a7700922_Eval> _self_, jule::Ptr<_1a685d5a8_SlicingExpr>& _116543_s) {
	jule::Ptr<_1a77278d3_TypeKind> _116617_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_116617_prefix;
	});;
	jule::Ptr<_1a76edda4_Data> _117017_l = nullptr;;
	jule::Ptr<_1a76edda4_Data> _117117_r = nullptr;;
	if ((_116543_s.get()._field_start != nullptr)) {
		_117017_l=_1a7719210_eval_expr_kind(_self_, jule::Any(_116543_s.get()._field_start));
		if ((_117017_l != nullptr)) {
			_1a7708ce3_check_integer_indexing_by_data(_self_.ptr(), _117017_l,_116543_s.get()._field_token);
		} else {
			return std::make_tuple(nullptr,nullptr);
		};
	} else {
		_117017_l=jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_1a773e554_build_prim_type(jule::Str("int", 3)), 5)}), ._field_constant=static__1a75c2250_new_i64(0LL)});
		_117017_l.get()._field_model=jule::Any(_117017_l.get()._field_constant);
	};
	if ((_116543_s.get()._field_to != nullptr)) {
		_117117_r=_1a7719210_eval_expr_kind(_self_, jule::Any(_116543_s.get()._field_to));
		if ((_117117_r != nullptr)) {
			_1a7708ce3_check_integer_indexing_by_data(_self_.ptr(), _117117_r,_116543_s.get()._field_token);
		} else {
			return std::make_tuple(nullptr,nullptr);
		};
	};
	return std::make_tuple(_117017_l,_117117_r);
}



inline void _1a770b70d_slicing_arr(_1a7700922_Eval* _self_, jule::Ptr<_1a76edda4_Data>& _120031_d) {
	jule::Ptr<_1a77278d3_TypeKind> _120117_elem_type = _1a772a441_arr(_120031_d.get()._field_kind.ptr()).get()._field_elem;;
	_120031_d.get()._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(jule::new_ptr<_1a77310a1_Slc>(_1a77310a1_Slc{._field_elem=_120117_elem_type}), 7)});
	_120031_d.get()._field_lvalue=false;
	_120031_d.get()._field_mutable=(_120031_d.get()._field_mutable || (!(_1a7728c7a_mutable(_120117_elem_type.ptr()))));
}



inline void _1a770bac6_slicing_str(_1a7700922_Eval* _self_, jule::Ptr<_1a76edda4_Data>& _121531_d, jule::Ptr<_1a76edda4_Data>& _121542_l, jule::Ptr<_1a76edda4_Data>& _121553_r) {
	_121531_d.get()._field_lvalue=false;
	_121531_d.get()._field_mutable=true;
	if ((!(_1a76ee767_is_const(_121531_d.ptr())))) {
		return;;
	};
	if (((_121542_l == nullptr) || (_121553_r == nullptr))) {
		_121531_d.get()._field_constant=nullptr;
		return;;
	};
	if ((_1a76ee767_is_const(_121542_l.ptr()) && _1a76ee767_is_const(_121553_r.ptr()))) {
		jule::I64 _122817_left = _1a75c51dc_as_i64(_121542_l.get()._field_constant.ptr());;
		if ((_122817_left < 0LL)) {
			return;;
		};
		jule::Str _123317_s = _1a75c4c14_read_str(_121531_d.get()._field_constant.ptr());;
		jule::I64 _123421_right = 0LL;;
		if ((_121553_r == nullptr)) {
			_123421_right=static_cast<jule::I64>(static_cast<jule::I64>(_123317_s.len()));
		} else {
			_123421_right=static_cast<jule::I64>(_1a75c51dc_as_i64(_121553_r.get()._field_constant.ptr()));
		};
		if ((_122817_left > _123421_right)) {
			return;;
		};
		_1a75c61aa_set_str(_121531_d.get()._field_constant.ptr(), _123317_s.slice(_122817_left,_123421_right));
		_121531_d.get()._field_decl=true;
	} else {
		_121531_d.get()._field_constant=nullptr;
	};
}



inline void _1a770c038_check_slicing(_1a7700922_Eval* _self_, jule::Ptr<_1a76edda4_Data>& _125137_d, jule::Ptr<_1a76edda4_Data>& _125148_l, jule::Ptr<_1a76edda4_Data>& _125159_r, jule::Ptr<_1a685d5a8_SlicingExpr>& _125170_s) {
	{
		
		if ((_1a772a441_arr(_125137_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a9e2b9a8:;
			{
				_1a770b70d_slicing_arr(&(*_self_), _125137_d);
				return;;
			}
		}
		else if ((_1a772a6a5_slc(_125137_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a9e2ba30:;
			{
				return;;
			}
		}
		else if ((_1a7729990_prim(_125137_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a9e2baa7:;
			{
				jule::Ptr<_1a772c135_Prim> _125917_prim = _1a7729990_prim(_125137_d.get()._field_kind.ptr());;
				{
					
					if (_1a77300e4_is_str(_125917_prim.ptr())) {
						_case_begin_1a9e2dea5:;
						{
							_1a770bac6_slicing_str(&(*_self_), _125137_d,_125148_l,_125159_r);
							return;;
						}
					}
					_match_end_1a9e2ddea:;
				};
			}
		}
		_match_end_1a9e2b898:;
	};
	_1a7700dea_push_err(&(*_self_), _125170_s.get()._field_token,jule::Str("type @ is not support slicing", 29),jule::Slice<jule::Any>::make({jule::Any(_1a7727c8a_to_str(_125137_d.get()._field_kind.ptr()))}));
}



inline jule::Ptr<_1a76edda4_Data> _1a770c346_eval_slicing(jule::Ptr<_1a7700922_Eval> _self_, jule::Ptr<_1a685d5a8_SlicingExpr> _127036_s) {
	jule::Ptr<_1a76edda4_Data> _127117_d = _1a7719210_eval_expr_kind(_self_, jule::Any(_127036_s.get()._field_expr));;
	if ((_127117_d == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1a76edda4_Data> _127618_l;;
	jule::Ptr<_1a76edda4_Data> _127625_r;;
	std::tie(_127618_l,_127625_r) = _1a770b488_eval_slicing_exprs(_self_, _127036_s);
	if ((_127618_l == nullptr)) {
		return _127117_d;
	};
	_127117_d.get()._field_decl=false;
	_1a770c038_check_slicing(_self_.ptr(), _127117_d,_127618_l,_127625_r,_127036_s);
	if (_1a76ee767_is_const(_127117_d.ptr())) {
		_127117_d.get()._field_decl=false;
		_127117_d.get()._field_model=jule::Any(_127117_d.get()._field_constant);
	} else if (_127117_d.get()._field_decl) {
		_127117_d.get()._field_decl=false;
	} else {
		jule::Ptr<_1a686c023_SlicingExprModel> _129421_model = jule::new_ptr<_1a686c023_SlicingExprModel>(_1a686c023_SlicingExprModel{._field_token=_127036_s.get()._field_token, ._field_expr=jule::Any(_127117_d.get()._field_model), ._field_left=jule::Any(_127618_l.get()._field_model), });;
		if ((_127625_r != nullptr)) {
			_129421_model.get()._field_right=jule::Any(_127625_r.get()._field_model);
		};
		_127117_d.get()._field_model=jule::Any(_129421_model);
	};
	return _127117_d;
}



inline void _1a770c70e_cast_ptr(_1a7700922_Eval* _self_, jule::Ptr<_1a77278d3_TypeKind> _130731_t, jule::Ptr<_1a76edda4_Data> _130749_d, jule::Ptr<_1a527737a_Token> _130759_error_token) {
	jule::Ptr<_1a7730644_Sptr> _130813_sptr = _1a7729c04_sptr(_130749_d.get()._field_kind.ptr());;
	if ((_130813_sptr != nullptr)) {
		if ((!(_1a7728098_equals(_1a7729e68_ptr(_130731_t.ptr()).get()._field_elem, _130813_sptr.get()._field_elem)))) {
			_1a7700dea_push_err(&(*_self_), _130759_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1a7727c8a_to_str(_130749_d.get()._field_kind.ptr())),jule::Any(_1a7727c8a_to_str(_130731_t.ptr()))}));
		};
		return;;
	};
	if ((!(_1a7701835_is_unsafe(&(*_self_))))) {
		_1a7700dea_push_err(&(*_self_), _130759_error_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a772c135_Prim> _132113_prim = _1a7729990_prim(_130749_d.get()._field_kind.ptr());;
	if (((_1a7729e68_ptr(_130749_d.get()._field_kind.ptr()) == nullptr) && ((_132113_prim == nullptr) || (!(_1a766bdcc_is_int(_1a772c498_to_str(_132113_prim.ptr()))))))) {
		_1a7700dea_push_err(&(*_self_), _130759_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1a7727c8a_to_str(_130749_d.get()._field_kind.ptr())),jule::Any(_1a7727c8a_to_str(_130731_t.ptr()))}));
	};
	_130749_d.get()._field_constant=nullptr;
}



inline void _1a770cac7_cast_struct(_1a7700922_Eval* _self_, jule::Ptr<_1a77278d3_TypeKind> _132934_t, jule::Ptr<_1a76edda4_Data> _132952_d, jule::Ptr<_1a527737a_Token> _132962_error_token) {
	jule::Ptr<_1a68d46b7_Trait> _133017_tr = _1a772ade2_trt(_132952_d.get()._field_kind.ptr());;
	if ((_133017_tr == nullptr)) {
		_1a7700dea_push_err(&(*_self_), _132962_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1a7727c8a_to_str(_132952_d.get()._field_kind.ptr())),jule::Any(_1a7727c8a_to_str(_132934_t.ptr()))}));
		return;;
	};
	jule::Ptr<_1a6836a48_StructIns> _133617_s = _1a772ab7d_strct(_132934_t.ptr());;
	_1a9e3deb5_push_reference(&(*_self_), _133617_s);
	if ((!(_1a682e8cb_is_implements(_133617_s.get()._field_decl.ptr(), _133017_tr)))) {
		_1a7700dea_push_err(&(*_self_), _132962_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1a7727c8a_to_str(_132952_d.get()._field_kind.ptr())),jule::Any(_1a7727c8a_to_str(_132934_t.ptr()))}));
	};
}



inline void _1a770ce90_cast_ref(_1a7700922_Eval* _self_, jule::Ptr<_1a77278d3_TypeKind> _134431_t, jule::Ptr<_1a76edda4_Data> _134449_d, jule::Ptr<_1a527737a_Token> _134459_error_token) {
	jule::Ptr<_1a7730644_Sptr> _134517_sptr = _1a7729c04_sptr(_134431_t.ptr());;
	jule::Ptr<_1a7733ba8_Ptr> _134717_ptr = _1a7729e68_ptr(_134449_d.get()._field_kind.ptr());;
	if (((_134717_ptr != nullptr) && _1a7728098_equals(_134517_sptr.get()._field_elem, _134717_ptr.get()._field_elem))) {
		if ((!(_1a7701835_is_unsafe(&(*_self_))))) {
			_1a7700dea_push_err(&(*_self_), _134459_error_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_1a772ab7d_strct(_134517_sptr.get()._field_elem.ptr()) != nullptr)) {
		_1a770cac7_cast_struct(&(*_self_), _134517_sptr.get()._field_elem,_134449_d,_134459_error_token);
		return;;
	};
	_1a7700dea_push_err(&(*_self_), _134459_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1a7727c8a_to_str(_134449_d.get()._field_kind.ptr())),jule::Any(_1a7727c8a_to_str(_134431_t.ptr()))}));
}



inline void _1a770d358_cast_slc(_1a7700922_Eval* _self_, jule::Ptr<_1a77278d3_TypeKind> _136631_t, jule::Ptr<_1a76edda4_Data> _136649_d, jule::Ptr<_1a527737a_Token> _136659_error_token) {
	if ((_1a772a1cc_enm(_136649_d.get()._field_kind.ptr()) != nullptr)) {
		if (((_1a7729990_prim(_1a772a1cc_enm(_136649_d.get()._field_kind.ptr()).get()._field_kind.get()._field_kind.ptr()) == nullptr) || (!(_1a77300e4_is_str(_1a7729990_prim(_1a772a1cc_enm(_136649_d.get()._field_kind.ptr()).get()._field_kind.get()._field_kind.ptr()).ptr()))))) {
			_1a7700dea_push_err(&(*_self_), _136659_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1a7727c8a_to_str(_136649_d.get()._field_kind.ptr())),jule::Any(_1a7727c8a_to_str(_136631_t.ptr()))}));
			return;;
		};
	} else if (((_1a7729990_prim(_136649_d.get()._field_kind.ptr()) == nullptr) || (!(_1a77300e4_is_str(_1a7729990_prim(_136649_d.get()._field_kind.ptr()).ptr()))))) {
		_1a7700dea_push_err(&(*_self_), _136659_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1a7727c8a_to_str(_136649_d.get()._field_kind.ptr())),jule::Any(_1a7727c8a_to_str(_136631_t.ptr()))}));
		return;;
	};
	_136631_t=_1a772a6a5_slc(_136631_t.ptr()).get()._field_elem;
	jule::Ptr<_1a772c135_Prim> _137813_prim = _1a7729990_prim(_136631_t.ptr());;
	if (((_137813_prim == nullptr) || ((!(_1a772d6b9_is_u8(_137813_prim.ptr()))) && (!(_1a772d1e1_is_i32(_137813_prim.ptr())))))) {
		_1a7700dea_push_err(&(*_self_), _136659_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1a7727c8a_to_str(_136649_d.get()._field_kind.ptr())),jule::Any(_1a7727c8a_to_str(_136631_t.ptr()))}));
	};
}



inline void _1a770d677_cast_str(_1a7700922_Eval* _self_, jule::Ptr<_1a76edda4_Data> _138431_d, jule::Ptr<_1a527737a_Token> _138441_error_token) {
	if ((_1a772a1cc_enm(_138431_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1a6982435_Enum> _138621_e = _1a772a1cc_enm(_138431_d.get()._field_kind.ptr());;
		if (((_1a7729990_prim(_138621_e.get()._field_kind.get()._field_kind.ptr()) != nullptr) && _1a77300e4_is_str(_1a7729990_prim(_138621_e.get()._field_kind.get()._field_kind.ptr()).ptr()))) {
			return;;
		};
	};
	if ((_1a7729990_prim(_138431_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1a772c135_Prim> _139317_prim = _1a7729990_prim(_138431_d.get()._field_kind.ptr());;
		if (((!(_1a772d6b9_is_u8(_139317_prim.ptr()))) && (!(_1a772d1e1_is_i32(_139317_prim.ptr()))))) {
			_1a7700dea_push_err(&(*_self_), _138441_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_1a7727c8a_to_str(_138431_d.get()._field_kind.ptr()))}));
		};
		return;;
	};
	if ((_1a772a6a5_slc(_138431_d.get()._field_kind.ptr()) == nullptr)) {
		_1a7700dea_push_err(&(*_self_), _138441_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_1a7727c8a_to_str(_138431_d.get()._field_kind.ptr()))}));
		return;;
	};
	jule::Ptr<_1a77278d3_TypeKind> _140517_t = _1a772a6a5_slc(_138431_d.get()._field_kind.ptr()).get()._field_elem;;
	jule::Ptr<_1a772c135_Prim> _140613_prim = _1a7729990_prim(_140517_t.ptr());;
	if (((_140613_prim == nullptr) || ((!(_1a772d6b9_is_u8(_140613_prim.ptr()))) && (!(_1a772d1e1_is_i32(_140613_prim.ptr())))))) {
		_1a7700dea_push_err(&(*_self_), _138441_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_1a7727c8a_to_str(_138431_d.get()._field_kind.ptr()))}));
	};
}



inline void _1a770da40_cast_int(_1a7700922_Eval* _self_, jule::Ptr<_1a77278d3_TypeKind> _141231_t, jule::Ptr<_1a76edda4_Data> _141249_d, jule::Ptr<_1a527737a_Token> _141259_error_token) {
	if (_1a76ee767_is_const(_141249_d.ptr())) {
		jule::Ptr<_1a772c135_Prim> _141417_prim = _1a7729990_prim(_141231_t.ptr());;
		{
			
			if (_1a766b849_is_sig_int(_141417_prim.get()._field_kind)) {
				_case_begin_1a9e5b7b8:;
				{
					_1a75c593a_set_i64(_141249_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1a75c51dc_as_i64(_141249_d.get()._field_constant.ptr())));
				}
			}
			else if (_1a766bb35_is_unsig_int(_141417_prim.get()._field_kind)) {
				_case_begin_1a9e5b840:;
				{
					_1a75c5bb0_set_u64(_141249_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1a75c5451_as_u64(_141249_d.get()._field_constant.ptr())));
				}
			}
			_match_end_1a9e5b6ec:;
		};
	};
	if ((_1a772a1cc_enm(_141249_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1a6982435_Enum> _142417_e = _1a772a1cc_enm(_141249_d.get()._field_kind.ptr());;
		if (_1a766c460_is_num(_1a7727c8a_to_str(_142417_e.get()._field_kind.get()._field_kind.ptr()))) {
			return;;
		};
	};
	if ((_1a7729c04_sptr(_141249_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1a772c135_Prim> _143117_prim = _1a7729990_prim(_141231_t.ptr());;
		if ((!(_1a772eb1b_is_uintptr(_143117_prim.ptr())))) {
			_1a7700dea_push_err(&(*_self_), _141259_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1a7727c8a_to_str(_141249_d.get()._field_kind.ptr())),jule::Any(_1a7727c8a_to_str(_141231_t.ptr()))}));
		};
		return;;
	};
	if ((_1a7729e68_ptr(_141249_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1a772c135_Prim> _143817_prim = _1a7729990_prim(_141231_t.ptr());;
		if (_1a772eb1b_is_uintptr(_143817_prim.ptr())) {
		} else if ((!(_1a7701835_is_unsafe(&(*_self_))))) {
			_1a7700dea_push_err(&(*_self_), _141259_error_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		} else if ((((((!(_1a772d1e1_is_i32(_143817_prim.ptr()))) && (!(_1a772d455_is_i64(_143817_prim.ptr())))) && (!(_1a772d92d_is_u16(_143817_prim.ptr())))) && (!(_1a772db92_is_u32(_143817_prim.ptr())))) && (!(_1a772de06_is_u64(_143817_prim.ptr()))))) {
			_1a7700dea_push_err(&(*_self_), _141259_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1a7727c8a_to_str(_141249_d.get()._field_kind.ptr())),jule::Any(_1a7727c8a_to_str(_141231_t.ptr()))}));
		};
		return;;
	};
	jule::Ptr<_1a772c135_Prim> _144913_prim = _1a7729990_prim(_141249_d.get()._field_kind.ptr());;
	if (((_144913_prim != nullptr) && _1a766c460_is_num(_1a772c498_to_str(_144913_prim.ptr())))) {
		return;;
	};
	_1a7700dea_push_err(&(*_self_), _141259_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1a7727c8a_to_str(_141249_d.get()._field_kind.ptr())),jule::Any(_1a7727c8a_to_str(_141231_t.ptr()))}));
}



inline void _1a770de08_cast_num(_1a7700922_Eval* _self_, jule::Ptr<_1a77278d3_TypeKind> _145731_t, jule::Ptr<_1a76edda4_Data> _145749_d, jule::Ptr<_1a527737a_Token> _145759_error_token) {
	if (_1a76ee767_is_const(_145749_d.ptr())) {
		jule::Ptr<_1a772c135_Prim> _145917_prim = _1a7729990_prim(_145731_t.ptr());;
		{
			
			if (_1a766c1b8_is_float(_145917_prim.get()._field_kind)) {
				_case_begin_1a9e69540:;
				{
					_1a75c6430_set_f64(_145749_d.get()._field_constant.ptr(), static_cast<jule::F64>(_1a75c56b5_as_f64(_145749_d.get()._field_constant.ptr())));
				}
			}
			else if (_1a766b849_is_sig_int(_145917_prim.get()._field_kind)) {
				_case_begin_1a9e695b7:;
				{
					_1a75c593a_set_i64(_145749_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1a75c51dc_as_i64(_145749_d.get()._field_constant.ptr())));
				}
			}
			else if (_1a766bb35_is_unsig_int(_145917_prim.get()._field_kind)) {
				_case_begin_1a9e6963e:;
				{
					_1a75c5bb0_set_u64(_145749_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1a75c5451_as_u64(_145749_d.get()._field_constant.ptr())));
				}
			}
			_match_end_1a9e69463:;
		};
	};
	if ((_1a772a1cc_enm(_145749_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1a6982435_Enum> _147117_e = _1a772a1cc_enm(_145749_d.get()._field_kind.ptr());;
		if (_1a766c460_is_num(_1a7727c8a_to_str(_147117_e.get()._field_kind.get()._field_kind.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1a772c135_Prim> _147713_prim = _1a7729990_prim(_145749_d.get()._field_kind.ptr());;
	if (((_147713_prim != nullptr) && _1a766c460_is_num(_1a772c498_to_str(_147713_prim.ptr())))) {
		return;;
	};
	_1a7700dea_push_err(&(*_self_), _145759_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1a7727c8a_to_str(_145749_d.get()._field_kind.ptr())),jule::Any(_1a7727c8a_to_str(_145731_t.ptr()))}));
}



inline void _1a770e2c1_cast_prim(_1a7700922_Eval* _self_, jule::Ptr<_1a77278d3_TypeKind> _148532_t, jule::Ptr<_1a76edda4_Data> _148550_d, jule::Ptr<_1a527737a_Token> _148560_error_token) {
	jule::Ptr<_1a772c135_Prim> _148613_prim = _1a7729990_prim(_148532_t.ptr());;
	{
		
		if (_1a7730358_is_any(_148613_prim.ptr())) {
			_case_begin_1a9e71503:;
		}
		else if (_1a77300e4_is_str(_148613_prim.ptr())) {
			_case_begin_1a9e711e5:;
			{
				_1a770d677_cast_str(&(*_self_), _148550_d,_148560_error_token);
			}
		}
		else if (_1a766bdcc_is_int(_1a772c498_to_str(_148613_prim.ptr()))) {
			_case_begin_1a9e7125b:;
			{
				_1a770da40_cast_int(&(*_self_), _148532_t,_148550_d,_148560_error_token);
			}
		}
		else if (_1a766c460_is_num(_1a772c498_to_str(_148613_prim.ptr()))) {
			_case_begin_1a9e712c2:;
			{
				_1a770de08_cast_num(&(*_self_), _148532_t,_148550_d,_148560_error_token);
			}
		}
		else {
			_case_begin_1a9e7117e:;
			{
				_1a7700dea_push_err(&(*_self_), _148560_error_token,jule::Str("type @ not supports casting", 27),jule::Slice<jule::Any>::make({jule::Any(_1a7727c8a_to_str(_148532_t.ptr()))}));
			}
		}
		_match_end_1a9e71107:;
	};
}



inline void _1a770e5e0_cast_constant(_1a7700922_Eval* _self_, jule::Ptr<_1a77278d3_TypeKind>& _150137_t, jule::Ptr<_1a76edda4_Data>& _150156_d) {
	if (((_150156_d == nullptr) || (!(_1a76ee767_is_const(_150156_d.ptr()))))) {
		return;;
	};
	jule::Ptr<_1a772c135_Prim> _150513_prim = _1a7729990_prim(_150137_t.ptr());;
	_1a7725073_cast_const_by_type(_150513_prim.get()._field_kind,_150156_d);
	_150156_d.get()._field_model=jule::Any(_150156_d.get()._field_constant);
}



inline jule::Ptr<_1a76edda4_Data> _1a770ea63_eval_cast_by_type_n_data(_1a7700922_Eval* _self_, jule::Ptr<_1a77278d3_TypeKind> _151047_t, jule::Ptr<_1a76edda4_Data> _151065_d, jule::Ptr<_1a527737a_Token> _151079_error_token) {
	if (((_151065_d != nullptr) && _151065_d.get()._field_decl)) {
		_1a7700dea_push_err(&(*_self_), _151079_error_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	{
		
		if (((_1a7729990_prim(_151065_d.get()._field_kind.ptr()) != nullptr) && _1a7730358_is_any(_1a7729990_prim(_151065_d.get()._field_kind.ptr()).ptr()))) {
			_case_begin_1a9e77d9a:;
			{
				if ((_1a772a1cc_enm(_151047_t.ptr()) != nullptr)) {
					_1a7700dea_push_err(&(*_self_), _151079_error_token,jule::Str("enum cannot casted from any type", 32),jule::Slice<jule::Any>());
					_1a7701219_push_suggestion(&(*_self_), jule::Str("try cast to type of enum fields instead of enum", 47),jule::Slice<jule::Any>());
				};
			}
		}
		else if ((_1a7729e68_ptr(_151047_t.ptr()) != nullptr)) {
			_case_begin_1a9e77e11:;
			{
				_1a770c70e_cast_ptr(&(*_self_), _151047_t,_151065_d,_151079_error_token);
			}
		}
		else if ((_1a7729c04_sptr(_151047_t.ptr()) != nullptr)) {
			_case_begin_1a9e77e77:;
			{
				_1a770ce90_cast_ref(&(*_self_), _151047_t,_151065_d,_151079_error_token);
			}
		}
		else if ((_1a772a6a5_slc(_151047_t.ptr()) != nullptr)) {
			_case_begin_1a9e77edd:;
			{
				_1a770d358_cast_slc(&(*_self_), _151047_t,_151065_d,_151079_error_token);
			}
		}
		else if ((_1a772ab7d_strct(_151047_t.ptr()) != nullptr)) {
			_case_begin_1a9e78d24:;
			{
				_1a770cac7_cast_struct(&(*_self_), _151047_t,_151065_d,_151079_error_token);
			}
		}
		else if ((_1a7729990_prim(_151047_t.ptr()) != nullptr)) {
			_case_begin_1a9e78d8a:;
			{
				_1a770e2c1_cast_prim(&(*_self_), _151047_t,_151065_d,_151079_error_token);
				_1a770e5e0_cast_constant(&(*_self_), _151047_t,_151065_d);
			}
		}
		else {
			_case_begin_1a9e77d34:;
			{
				_1a7700dea_push_err(&(*_self_), _151079_error_token,jule::Str("type @ not supports casting", 27),jule::Slice<jule::Any>::make({jule::Any(_1a7727c8a_to_str(_151047_t.ptr()))}));
				_151065_d=nullptr;
			}
		}
		_match_end_1a9e771eb:;
	};
	if ((_151065_d == nullptr)) {
		return nullptr;
	};
	_151065_d.get()._field_mutable=(_151065_d.get()._field_mutable || ((!(_1a7728c7a_mutable(_151065_d.get()._field_kind.ptr()))) && _1a7728c7a_mutable(_151047_t.ptr())));
	_151065_d.get()._field_lvalue=false;
	_151065_d.get()._field_decl=false;
	if (((_1a772a1cc_enm(_151065_d.get()._field_kind.ptr()) == nullptr) || (!(_1a7728098_equals(_1a772a1cc_enm(_151065_d.get()._field_kind.ptr()).get()._field_kind.get()._field_kind, _151047_t))))) {
		_1a7724506_apply_cast_kind(_151065_d,_151047_t);
		_151065_d.get()._field_model.operator jule::Ptr<_1a684003a_CastingExprModel>().get()._field_token=_151079_error_token;
	} else {
		_151065_d.get()._field_kind=_151047_t;
	};
	return _151065_d;
}



inline jule::Ptr<_1a76edda4_Data> _1a770ed82_eval_cast(jule::Ptr<_1a7700922_Eval> _self_, jule::Ptr<_1a6858a59_CastExpr> _155933_c) {
	jule::Ptr<_1a772b772_TypeSymbol> _156017_t = _1a68771c6_build_type(_155933_c.get()._field_kind);;
	jule::Bool _156113_ok = _1a7693c7d_check_type(_self_.get()._field_s, _156017_t,_self_.get()._field_lookup);;
	if ((!(_156113_ok))) {
		return nullptr;
	};
	jule::Ptr<_1a77278d3_TypeKind> _156617_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_156617_prefix;
	});;
	jule::Ptr<_1a76edda4_Data> _157017_d = _1a7719210_eval_expr_kind(_self_, jule::Any(_155933_c.get()._field_expr));;
	if ((_157017_d == nullptr)) {
		return nullptr;
	};
	return _1a770ea63_eval_cast_by_type_n_data(_self_.ptr(), _156017_t.get()._field_kind,_157017_d,_155933_c.get()._field_kind.get()._field_token);
}



inline jule::Ptr<_1a76edda4_Data> _1a7710190_eval_ns_selection(_1a7700922_Eval* _self_, jule::Ptr<_1a6858e11_NsSelectionExpr> _157836_s) {
	jule::Str _157913_path = _1a773e213_build_link_path_by_tokens(_157836_s.get()._field_ns);;
	jule::Ptr<_1a7685038_ImportInfo> _158017_imp = _1a7741e19_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1a77406dc_select_package((*_self_)._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1a7685038_ImportInfo>)>([=](jule::Ptr<_1a7685038_ImportInfo> _158053_imp) mutable -> jule::Bool {
		if (((_157836_s.get()._field_ns.len() == 1LL) && (_158053_imp.get()._field_alias == _157913_path))) {
			return true;
		};
		return ((_158053_imp.get()._field_link_path == _157913_path) && _1a76878ed_is_accessible_via_selection(_158053_imp.ptr()));
	}));;
	if ((_158017_imp == nullptr)) {
		_1a7700dea_push_err(&(*_self_), _157836_s.get()._field_ident,jule::Str("undefined namespace: @", 22),jule::Slice<jule::Any>::make({jule::Any(_157913_path)}));
		return nullptr;
	};
	jule::Trait<_1a7741e19_Lookup> _159217_lookup = (*_self_)._field_lookup;;
	(*_self_)._field_lookup=jule::Trait<_1a7741e19_Lookup>(_158017_imp, 1);
	;
	_1a77015c1_disallow_builtin(&(*_self_));
	jule::Any _159717_def = _1a7703e42_get_def(&(*_self_), _157836_s.get()._field_ident.get()._field_kind,false);;
	_1a77013e5_allow_builtin(&(*_self_));
	(*_self_)._field_lookup=_159217_lookup;
	jule::Ptr<_1a76edda4_Data> _160117_d = _1a7707297_eval_def(&(*_self_), jule::Any(_159717_def),_157836_s.get()._field_ident);;
	return _160117_d;
}



inline jule::Ptr<_1a76edda4_Data> _1a7710613_eval_struct_lit_explicit(jule::Ptr<_1a7700922_Eval> _self_, jule::Ptr<_1a6836a48_StructIns> _160648_s, jule::Slice<jule::Ptr<_1a6855e41_Expr>> _160713_exprs, jule::Ptr<_1a527737a_Token> _160733_error_token) {
	jule::Bool _160813_ok = _1a76919d4_check_generic_quantity(_self_.get()._field_s.ptr(), static_cast<jule::I64>(_160648_s.get()._field_decl.get()._field_generics.len()),static_cast<jule::I64>(_160648_s.get()._field_generics.len()),_160733_error_token);;
	if ((!(_160813_ok))) {
		return nullptr;
	};
	if (((_self_.get()._field_field != nullptr) && (_self_.get()._field_field.get()._field_decl.get()._field_owner == _160648_s.get()._field_decl))) {
		_1a7700dea_push_err(_self_.ptr(), _160733_error_token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any(_160648_s.get()._field_decl.get()._field_ident)}));
	};
	_1a9e3deb5_push_reference(_self_.ptr(), _160648_s);
	_1a770566e_check_deprecated(_self_.ptr(), _160648_s.get()._field_decl.get()._field_directives,_160733_error_token);
	_1a76e34c5_StructLitChecker _162117_slc = _1a76e34c5_StructLitChecker{._field_e=_self_, ._field_error_token=_160733_error_token, ._field_s=_160648_s, };;
	_1a76e4a6a_check(&_162117_slc, _160713_exprs);
	return jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_160648_s, 0)}), ._field_mutable=(!(_self_.get()._field_immutable)), ._field_model=jule::Any(jule::new_ptr<_1a682b752_StructLitExprModel>(_1a682b752_StructLitExprModel{._field_strct=_160648_s, ._field_args=_162117_slc._field_args})), });
}



inline jule::Ptr<_1a76edda4_Data> _1a7710932_eval_struct_lit(jule::Ptr<_1a7700922_Eval> _self_, jule::Ptr<_1a685b1ee_StructLit> _164039_lit) {
	jule::Ptr<_1a772b772_TypeSymbol> _164117_t = _1a68771c6_build_type(_164039_lit.get()._field_kind);;
	jule::Bool _164213_ok = _1a7693c7d_check_type(_self_.get()._field_s, _164117_t,_self_.get()._field_lookup);;
	if ((!(_164213_ok))) {
		return nullptr;
	};
	jule::Ptr<_1a6836a48_StructIns> _164717_s = _1a772ab7d_strct(_164117_t.get()._field_kind.ptr());;
	if ((_164717_s == nullptr)) {
		if ((_1a7729c04_sptr(_164117_t.get()._field_kind.ptr()) != nullptr)) {
			_164717_s=_1a772ab7d_strct(_1a7729c04_sptr(_164117_t.get()._field_kind.ptr()).get()._field_elem.ptr());
			if ((_164717_s != nullptr)) {
				goto _julec_label_eval;
			};
		};
		_1a7700dea_push_err(_self_.ptr(), _164039_lit.get()._field_kind.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_julec_label_eval:;
	jule::Ptr<_1a76edda4_Data> _166017_d = _1a7710613_eval_struct_lit_explicit(_self_, _164717_s,_164039_lit.get()._field_exprs,_164039_lit.get()._field_kind.get()._field_token);;
	if ((_1a7729c04_sptr(_164117_t.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1a682b752_StructLitExprModel> _166221_model = _166017_d.get()._field_model.operator jule::Ptr<_1a682b752_StructLitExprModel>();;
		_1a7722e61_make_struct_lit_alloc(_166017_d,_166221_model);
	};
	return _166017_d;
}



inline jule::Ptr<_1a76edda4_Data> _1a7710c40_eval_type(_1a7700922_Eval* _self_, jule::Ptr<_1a68529cb_TypeDecl> _166832_t) {
	jule::Ptr<_1a772b772_TypeSymbol> _166917_tk = _1a68771c6_build_type(_166832_t);;
	jule::Bool _167013_ok = _1a7693c7d_check_type((*_self_)._field_s, _166917_tk,(*_self_)._field_lookup);;
	if ((!(_167013_ok))) {
		return nullptr;
	};
	return jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_kind=_166917_tk.get()._field_kind, ._field_model=jule::Any(_166917_tk.get()._field_kind), ._field_decl=true, });
}



inline void _1a771105e_call_type_fn(jule::Ptr<_1a7700922_Eval> _self_, jule::Ptr<_1a6859e12_FnCallExpr>& _168137_fc, jule::Ptr<_1a76edda4_Data>& _168159_d) {
	if ((_168137_fc.get()._field_generics.len() > 0LL)) {
		_1a7700dea_push_err(_self_.ptr(), _168137_fc.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_1a7727c8a_to_str(_168159_d.get()._field_kind.ptr()))}));
	} else if ((_168137_fc.get()._field_args.len() < 1LL)) {
		_1a7700dea_push_err(_self_.ptr(), _168137_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1))}));
	} else if ((_168137_fc.get()._field_args.len() > 1LL)) {
		_1a7700dea_push_err(_self_.ptr(), _168137_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	if ((_168137_fc.get()._field_args.len() > 0LL)) {
		jule::Ptr<_1a77278d3_TypeKind> _169121_prefix = _self_.get()._field_prefix;;
		_self_.get()._field_prefix=nullptr;
		jule::Ptr<_1a76edda4_Data> _169321_arg = _1a7719210_eval_expr_kind(_self_, jule::Any(_168137_fc.get()._field_args[0LL].get()._field_kind));;
		_self_.get()._field_prefix=_169121_prefix;
		if ((_169321_arg != nullptr)) {
			_168159_d=_1a770ea63_eval_cast_by_type_n_data(_self_.ptr(), _168159_d.get()._field_kind,_169321_arg,_168137_fc.get()._field_args[0LL].get()._field_token);
		};
	};
	if ((_168159_d != nullptr)) {
		_168159_d.get()._field_decl=false;
	};
}



inline std::tuple<jule::Bool,jule::Bool> _1a7711416_check_fn_call_generics(_1a7700922_Eval* _self_, jule::Ptr<_1a6872c93_FnIns> _170545_f, jule::Ptr<_1a6859e12_FnCallExpr> _170613_fc) {
	jule::Bool _170632_ok = jule::Bool();
	jule::Bool _170642_dynamic_annotation = jule::Bool();
	{
		
		if ((((_170545_f.get()._field_decl.get()._field_generics.len() > 0LL) && (_170613_fc.get()._field_generics.len() == 0LL)) && (_170545_f.get()._field_params.len() > 0LL))) {
			_case_begin_1a9eac066:;
			{
				_170642_dynamic_annotation=true;
				_170545_f.get()._field_generics=jule::Slice<jule::Ptr<_1a77278d3_TypeKind>>::alloc(_170545_f.get()._field_decl.get()._field_generics.len());
				_170632_ok = true;
				_170642_dynamic_annotation = true;
				return std::make_tuple(_170632_ok,_170642_dynamic_annotation);
			}
		}
		else if ((!(_1a76919d4_check_generic_quantity((*_self_)._field_s.ptr(), static_cast<jule::I64>(_170545_f.get()._field_decl.get()._field_generics.len()),static_cast<jule::I64>(_170613_fc.get()._field_generics.len()),_170613_fc.get()._field_token)))) {
			_case_begin_1a9eac0cc:;
			{
				_170632_ok = false;
				_170642_dynamic_annotation = false;
				return std::make_tuple(_170632_ok,_170642_dynamic_annotation);
			}
		}
		else {
			_case_begin_1a9ea9052:;
			{
				_170545_f.get()._field_generics=jule::Slice<jule::Ptr<_1a77278d3_TypeKind>>::alloc(0LL,_170545_f.get()._field_decl.get()._field_generics.len());
				{
					auto &expr = _170613_fc.get()._field_generics;
					auto it = expr.begin();
					_iter_begin_1a9ea943c:;
					if (it != expr.end()) {
						jule::Ptr<_1a68529cb_TypeDecl> _171825_g = *it;
						{
							jule::Ptr<_1a772b772_TypeSymbol> _171925_k = _1a68771c6_build_type(_171825_g);;
							_170632_ok=_1a7693c7d_check_type((*_self_)._field_s, _171925_k,(*_self_)._field_lookup);
							if ((!(_170632_ok))) {
								_170632_ok = false;
								_170642_dynamic_annotation = false;
								return std::make_tuple(_170632_ok,_170642_dynamic_annotation);
							};
							_170545_f.get()._field_generics = jule::alloc_for_append(_170545_f.get()._field_generics,1);_170545_f.get()._field_generics.__push(_171925_k.get()._field_kind);;
						}
						_iter_next_1a9ea943c:;
						++it;
						goto _iter_begin_1a9ea943c;
					}
					_iter_end_1a9ea943c:;
				};
				_170632_ok = true;
				_170642_dynamic_annotation = false;
				return std::make_tuple(_170632_ok,_170642_dynamic_annotation);
			}
		}
		_match_end_1a9ea8e97:;
	};
}



inline void _1a7711735_call_builtin_fn(jule::Ptr<_1a7700922_Eval> _self_, jule::Ptr<_1a6859e12_FnCallExpr>& _173140_fc, jule::Ptr<_1a76edda4_Data>& _173162_d) {
	_173162_d=_1a772a919_fnc(_173162_d.get()._field_kind.ptr()).get()._field_caller(_self_,_173140_fc,_173162_d);
	if ((_173162_d == nullptr)) {
		return;;
	};
	_173162_d.get()._field_mutable=true;
}



inline void _1a7711a76_check_fn_of_concurrent_call(_1a7700922_Eval* _self_, jule::Ptr<_1a6872c93_FnIns>& _173947_f, jule::Ptr<_1a527737a_Token> _173958_error_token) {
	if (_1a7701835_is_unsafe(&(*_self_))) {
		return;;
	};
	{
		auto &expr = _173947_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1a9eb25bb:;
		if (it != expr.end()) {
			jule::Ptr<_1a6871e07_ParamIns> &_174416_p = *it;
			{
				if (_174416_p.get()._field_decl.get()._field_reference) {
					_1a7700dea_push_err(&(*_self_), _173958_error_token,jule::Str("concurrent calls does not support functions which is has reference parameter(s)", 79),jule::Slice<jule::Any>());
					return;;
				};
			}
			_iter_next_1a9eb25bb:;
			++it;
			goto _iter_begin_1a9eb25bb;
		}
		_iter_end_1a9eb25bb:;
	};
}



inline void _1a7711e72_process_exceptional_handler(_1a7700922_Eval* _self_, jule::Ptr<_1a6872c93_FnIns>& _175251_f, jule::Ptr<_1a6859e12_FnCallExpr>& _175267_fc, jule::Ptr<_1a76edda4_Data>& _175289_d) {
	jule::Bool _175313_result_needed = ((!(_1a6847eee_is_void(_175251_f.get()._field_decl.ptr()))) && ((*_self_)._field_arg || (!((*_self_)._field_ignored))));;
	jule::Ptr<_1a766e374_ScopeChecker> _175417_csc = nullptr;;
	jule::Ptr<_1a7658803_Scope> _175517_ch = nullptr;;
	jule::Ptr<_1a6845150_FnCallExprModel> _175717_model = _175289_d.get()._field_model.operator jule::Ptr<_1a6845150_FnCallExprModel>();;
	jule::Ptr<_1a766e374_ScopeChecker> _176117_sc = (*_self_)._field_lookup.operator jule::Ptr<_1a766e374_ScopeChecker>();;
	_175417_csc=_1a767da9d_new_child_checker(_176117_sc);
	if (_175313_result_needed) {
		_175417_csc.get()._field_result=_175251_f;
	};
	_175517_ch=_1a7672dc2_get_child(_176117_sc.ptr());
	_175267_fc.get()._field_exception.get()._field_parent=_176117_sc.get()._field_tree;
	_175417_csc.get()._field_table.get()._field_vars = jule::alloc_for_append(_175417_csc.get()._field_table.get()._field_vars,1);_175417_csc.get()._field_table.get()._field_vars.__push(_1a77232a2_build_error_var(_175517_ch,_175267_fc));;
	_1a767328a_check_child_ssc(_176117_sc, _175267_fc.get()._field_exception,_175517_ch,_175417_csc);
	_175717_model.get()._field_assigned=_175313_result_needed;
	_175717_model.get()._field_except=_175517_ch;
	if ((_175313_result_needed && (_175417_csc.get()._field_result != nullptr))) {
		_1a7700dea_push_err(&(*_self_), _175267_fc.get()._field_token,jule::Str("assignments requires expression", 31),jule::Slice<jule::Any>());
	};
}



inline void _1a77122a2_call_fn(jule::Ptr<_1a7700922_Eval> _self_, jule::Ptr<_1a6859e12_FnCallExpr>& _177932_fc, jule::Ptr<_1a76edda4_Data>& _177954_d) {
	jule::Ptr<_1a6872c93_FnIns> _178017_f = _1a772a919_fnc(_177954_d.get()._field_kind.ptr());;
	if ((_1a7701a99_is_global(_self_.ptr()) && _178017_f.get()._field_decl.get()._field_exceptional)) {
		_1a7700dea_push_err(_self_.ptr(), _177932_fc.get()._field_token,jule::Str("exceptionals are not allowed in global scope", 44),jule::Slice<jule::Any>());
		_1a7701219_push_suggestion(_self_.ptr(), jule::Str("wrap exceptional with a non-exceptional function", 48),jule::Slice<jule::Any>());
		_177954_d=nullptr;
		return;;
	};
	if (_1a6873a1e_is_builtin(_178017_f.ptr())) {
		_1a7711735_call_builtin_fn(_self_, _177932_fc,_177954_d);
		return;;
	};
	if (((!(_1a684ce27_is_method(_178017_f.get()._field_decl.ptr()))) && _1a773d344_has_directive(_178017_f.get()._field_decl.get()._field_directives,jule::Str("test", 4)))) {
		_1a7700dea_push_err(_self_.ptr(), _177932_fc.get()._field_token,jule::Str("you cannot call test functions", 30),jule::Slice<jule::Any>());
		_177954_d=nullptr;
		return;;
	};
	if (((((!(_177954_d.get()._field_mutable)) && _1a684ce27_is_method(_178017_f.get()._field_decl.ptr())) && (!(_178017_f.get()._field_decl.get()._field_statically))) && _178017_f.get()._field_decl.get()._field_params[0LL].get()._field_mutable)) {
		_1a7700dea_push_err(_self_.ptr(), _177932_fc.get()._field_token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	} else if (((!(_1a7701835_is_unsafe(_self_.ptr()))) && _178017_f.get()._field_decl.get()._field_unsafety)) {
		_1a7700dea_push_err(_self_.ptr(), _177932_fc.get()._field_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
	};
	jule::Bool _180518_ok;;
	jule::Bool _180522_dynamic_annotation;;
	std::tie(_180518_ok,_180522_dynamic_annotation) = _1a7711416_check_fn_call_generics(_self_.ptr(), _178017_f,_177932_fc);
	if ((!(_180518_ok))) {
		_177954_d=nullptr;
		return;;
	};
	jule::Ptr<_1a768cc22_Sema> _181117_old = _self_.get()._field_s;;
	if ((_178017_f.get()._field_decl.get()._field_owner != nullptr)) {
		_self_.get()._field_s=_178017_f.get()._field_decl.get()._field_owner.get()._field_sema;
	};
	__JULE_DEFER({
		if ((_181117_old != _self_.get()._field_s)) {
			_181117_old.get()._field_errors=jule::append(_181117_old.get()._field_errors,_self_.get()._field_s.get()._field_errors);
			_self_.get()._field_s.get()._field_errors=nullptr;
		};
		_self_.get()._field_s=_181117_old;
	});;
	if ((!(_180522_dynamic_annotation))) {
		if ((!(_178017_f.get()._field_reloaded))) {
			_180518_ok=_1a7696bb5_reload_fn_ins_types(_self_.get()._field_s, _178017_f);
			if ((!(_180518_ok))) {
				_177954_d=nullptr;
				return;;
			};
			_178017_f.get()._field_reloaded=true;
		};
	} else if ((_178017_f.get()._field_generics.len() > 0LL)) {
		_1a7696555_build_fn_non_generic_type_kinds(_self_.get()._field_s, _178017_f);
	};
	_1a76e0abb_FnCallArgChecker _183717_fcac = _1a76e0abb_FnCallArgChecker{._field_e=_self_, ._field_args=_177932_fc.get()._field_args, ._field_error_token=_177932_fc.get()._field_token, ._field_f=_178017_f, ._field_dynamic_annotation=_180522_dynamic_annotation, };;
	if ((_178017_f.get()._field_decl.get()._field_owner != nullptr)) {
		std::tie(_181117_old,_self_.get()._field_s) = std::make_tuple(_self_.get()._field_s,_181117_old);
		_180518_ok=_1a76e2e86_check(&_183717_fcac);
		std::tie(_181117_old,_self_.get()._field_s) = std::make_tuple(_self_.get()._field_s,_181117_old);
	} else {
		_180518_ok=_1a76e2e86_check(&_183717_fcac);
	};
	if (((!(_180518_ok)) && _180522_dynamic_annotation)) {
		_177954_d=nullptr;
		return;;
	};
	if (_180522_dynamic_annotation) {
		_180518_ok=_1a7696bb5_reload_fn_ins_types(_self_.get()._field_s, _178017_f);
		if ((!(_180518_ok))) {
			_177954_d=nullptr;
			return;;
		};
		_178017_f.get()._field_reloaded=true;
	};
	jule::Ptr<_1a6872c93_FnIns> _186617_exist_instance = _1a6871a50_append_instance(_178017_f.get()._field_decl.ptr(), _178017_f);;
	if ((_186617_exist_instance != nullptr)) {
		_178017_f=_186617_exist_instance;
	};
	jule::Any _187117_call_model = _177954_d.get()._field_model;;
	if (_1a6847eee_is_void(_178017_f.get()._field_decl.ptr())) {
		_177954_d=_1a7724704_build_void_data();
	} else {
		_177954_d.get()._field_kind=_178017_f.get()._field_result;
		_177954_d.get()._field_lvalue=false;
	};
	jule::Ptr<_1a6845150_FnCallExprModel> _188017_model = jule::new_ptr<_1a6845150_FnCallExprModel>(_1a6845150_FnCallExprModel{._field_token=_177932_fc.get()._field_token, ._field_func=_178017_f, ._field_expr=jule::Any(_187117_call_model), ._field_args=_183717_fcac._field_arg_models, });;
	_177954_d.get()._field_model=jule::Any(_188017_model);
	_177954_d.get()._field_mutable=true;
	if (_178017_f.get()._field_decl.get()._field_exceptional) {
		{
			
			if (_1a685a385_unhandled(_177932_fc.ptr())) {
				_case_begin_1a9ecbb46:;
				{
					_1a7700dea_push_err(_self_.ptr(), _177932_fc.get()._field_token,jule::Str("exceptionals must be handled", 28),jule::Slice<jule::Any>());
					_1a7701219_push_suggestion(_self_.ptr(), jule::Str("use \"!\" operator after exceptional to handle it", 47),jule::Slice<jule::Any>());
				}
			}
			else if (_1a685a5e9_ignored(_177932_fc.ptr())) {
				_case_begin_1a9ecb838:;
				{
					goto _match_end_1a9ecb706;
				}
			}
			else {
				_case_begin_1a9ecb7c2:;
				{
					_1a7711e72_process_exceptional_handler(_self_.ptr(), _178017_f,_177932_fc,_177954_d);
				}
			}
			_match_end_1a9ecb706:;
		};
	} else if ((!(_1a685a385_unhandled(_177932_fc.ptr())))) {
		_1a7700dea_push_err(_self_.ptr(), _177932_fc.get()._field_token,jule::Str("non-exceptionals cannot handled like exceptionals", 49),jule::Slice<jule::Any>());
	};
	if ((_178017_f.get()._field_generics.len() > 0LL)) {
		if ((_186617_exist_instance != nullptr)) {
			_1a772546e_update_model_to_generic_ins(_188017_model,_178017_f);
		} else {
			_1a76a3023_check_fn_ins_caller(_self_.get()._field_s, _178017_f,_177932_fc.get()._field_token);
		};
	};
}



inline jule::Ptr<_1a76edda4_Data> _1a77125b0_eval_fn_call(jule::Ptr<_1a7700922_Eval> _self_, jule::Ptr<_1a6859e12_FnCallExpr> _191936_fc) {
	jule::Ptr<_1a77278d3_TypeKind> _192017_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_192017_prefix;
	});;
	{
		auto &_match_expr{ _191936_fc.get()._field_expr.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a6857ae1_IdentExpr>>()) {
			_case_begin_1a9ed14a8:;
			{
				if ((_191936_fc.get()._field_expr.get()._field_token.get()._field_kind == jule::Str("error", 5))) {
					return _1a77a5972_builtin_caller_error(_self_,_191936_fc);
				};
			}
		}
		_match_end_1a9ed1453:;
	};
	jule::Ptr<_1a76edda4_Data> _193317_d = _1a7719210_eval_expr_kind(_self_, jule::Any(_191936_fc.get()._field_expr.get()._field_kind));;
	if ((_193317_d == nullptr)) {
		return nullptr;
	};
	if (_193317_d.get()._field_decl) {
		_1a771105e_call_type_fn(_self_, _191936_fc,_193317_d);
		return _193317_d;
	};
	if ((_1a772a919_fnc(_193317_d.get()._field_kind.ptr()) == nullptr)) {
		_1a7700dea_push_err(_self_.ptr(), _191936_fc.get()._field_token,jule::Str("attempting to call a non-function", 33),jule::Slice<jule::Any>());
		return nullptr;
	};
	_1a77122a2_call_fn(_self_, _191936_fc,_193317_d);
	return _193317_d;
}



inline jule::Ptr<_1a76edda4_Data> _1a7712967_eval_enum_static(_1a7700922_Eval* _self_, jule::Ptr<_1a6982435_Enum> _195239_enm, jule::Ptr<_1a527737a_Token> _195251_ident) {
	jule::Ptr<_1a76edda4_Data> _195317_d = jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_195239_enm, 3)}), ._field_mutable=false, ._field_lvalue=false, ._field_decl=false, });;
	jule::Ptr<_1a693b6b9_EnumItem> _196217_item = _1a6b19b0b_find_item(_195239_enm.ptr(), _195251_ident.get()._field_kind);;
	if ((_196217_item == nullptr)) {
		_1a7700dea_push_err(&(*_self_), _195251_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_195239_enm.get()._field_ident),jule::Any(_195251_ident.get()._field_kind)}));
	} else {
		_195317_d.get()._field_constant=jule::new_ptr<_1a75c3251_Const>((*(_196217_item.get()._field_value.get()._field_data.get()._field_constant)));
		_195317_d.get()._field_model=jule::Any(_195317_d.get()._field_constant);
		_1a7724ca9_apply_cast_model_by_enum(_195317_d,_195239_enm);
	};
	return _195317_d;
}



inline jule::Ptr<_1a76edda4_Data> _1a7712d1e_eval_struct_static(_1a7700922_Eval* _self_, jule::Ptr<_1a6836a48_StructIns> _197441_s, jule::Ptr<_1a527737a_Token> _197456_ident) {
	jule::Ptr<_1a76edda4_Data> _197517_d = jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_mutable=false, ._field_lvalue=false, ._field_decl=false, });;
	;
	jule::Ptr<_1a68709c7_Fn> _198317_method = _1a6846bbd_find_method(_197441_s.ptr(), _197456_ident.get()._field_kind,true);;
	if ((_198317_method != nullptr)) {
		if ((!(_1a7690d13_is_accessible_define((*_self_)._field_s.ptr(), _198317_method.get()._field_public,_198317_method.get()._field_token)))) {
			_1a7700dea_push_err(&(*_self_), _197456_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_197456_ident.get()._field_kind)}));
			_1a7701219_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		};
		jule::Ptr<_1a6872c93_FnIns> _199021_ins = _1a6871742_instance(_198317_method);;
		_199021_ins.get()._field_owner=_197441_s;
		_1a9d86e1e_push_reference(&(*_self_), _199021_ins);
		_197517_d.get()._field_model=jule::Any(jule::new_ptr<_1a686c81a_StructStaticIdentExprModel>(_1a686c81a_StructStaticIdentExprModel{._field_structure=_197441_s, ._field_expr=jule::Any(_197517_d.get()._field_model), ._field_method=_199021_ins}));
		_197517_d.get()._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_199021_ins, 1)});
		return _197517_d;
	};
	jule::Ptr<_1a76a7720_Var> _200417_sttc = _1a682be6c_find_static(_197441_s.get()._field_decl.ptr(), _197456_ident.get()._field_kind);;
	if ((_200417_sttc != nullptr)) {
		return _1a7706a38_eval_var(&(*_self_), _200417_sttc,_197456_ident);
	};
	_1a7700dea_push_err(&(*_self_), _197456_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_197441_s.get()._field_decl.get()._field_ident),jule::Any(_197456_ident.get()._field_kind)}));
	return nullptr;
}



inline jule::Ptr<_1a76edda4_Data> _1a7713270_eval_trait_sub_ident(_1a7700922_Eval* _self_, jule::Ptr<_1a76edda4_Data> _201343_d, jule::Ptr<_1a68d46b7_Trait> _201357_trt, jule::Ptr<_1a527737a_Token> _201374_ident) {
	jule::Ptr<_1a68709c7_Fn> _201417_f = _1a6911a68_find_method(_201357_trt.ptr(), _201374_ident.get()._field_kind);;
	if ((_201417_f == nullptr)) {
		_1a7700dea_push_err(&(*_self_), _201374_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_201357_trt.get()._field_ident),jule::Any(_201374_ident.get()._field_kind)}));
		return nullptr;
	};
	return jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_1a6871742_instance(_201417_f), 1)}), ._field_mutable=false, ._field_lvalue=false, ._field_model=jule::Any(jule::new_ptr<_1a686c210_TraitSubIdentExprModel>(_1a686c210_TraitSubIdentExprModel{._field_token=_201374_ident, ._field_expr=jule::Any(_201343_d.get()._field_model), ._field_method=_201417_f, ._field_trt=_201357_trt})), ._field_decl=false, });
}



inline jule::Ptr<_1a76edda4_Data> _1a771376a_eval_struct_sub_ident(_1a7700922_Eval* _self_, jule::Ptr<_1a76edda4_Data> _203644_d, jule::Ptr<_1a6836a48_StructIns> _203658_s, jule::Ptr<_1a6859384_SubIdentExpr> _203677_si, jule::Bool _203696_ref) {
	jule::Ptr<_1a6830899_FieldIns> _203717_f = _1a6832ea6_find_field(_203658_s.ptr(), _203677_si.get()._field_ident.get()._field_kind);;
	if ((_203717_f != nullptr)) {
		if ((!(_1a7690d13_is_accessible_define((*_self_)._field_s.ptr(), _203717_f.get()._field_decl.get()._field_public,_203717_f.get()._field_decl.get()._field_token)))) {
			_1a7700dea_push_err(&(*_self_), _203677_si.get()._field_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_203717_f.get()._field_decl.get()._field_ident)}));
			_1a7701219_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		};
		jule::Ptr<_1a686c62d_StructSubIdentExprModel> _204421_model = jule::new_ptr<_1a686c62d_StructSubIdentExprModel>(_1a686c62d_StructSubIdentExprModel{._field_token=_203677_si.get()._field_ident, ._field_expr=jule::new_ptr<_1a76edda4_Data>((*(_203644_d))), ._field_expr_kind=_203644_d.get()._field_kind, ._field_field=_203717_f});;
		_203644_d.get()._field_model=jule::Any(_204421_model);
		_203644_d.get()._field_kind=_203717_f.get()._field_kind;
		_203644_d.get()._field_lvalue=true;
		if ((_203717_f.get()._field_decl.get()._field_mutable && (!(_203644_d.get()._field_mutable)))) {
			{
				auto &_match_expr{ (*_self_)._field_lookup };
				
				if (_match_expr.type_is<jule::Ptr<_1a766e374_ScopeChecker>>()) {
					_case_begin_1a9ee934a:;
					{
						jule::Ptr<_1a766e374_ScopeChecker> _205825_scope = _1a767161d_get_root((*_self_)._field_lookup.operator jule::Ptr<_1a766e374_ScopeChecker>());;
						_203644_d.get()._field_mutable=((_205825_scope.get()._field_owner != nullptr) && (_205825_scope.get()._field_owner.get()._field_owner == _203658_s));
					}
				}
				_match_end_1a9ee92e5:;
			};
		};
		return _203644_d;
	};
	;
	jule::Ptr<_1a68709c7_Fn> _206717_m = _1a6846bbd_find_method(_203658_s.ptr(), _203677_si.get()._field_ident.get()._field_kind,false);;
	if ((_206717_m == nullptr)) {
		_1a7700dea_push_err(&(*_self_), _203677_si.get()._field_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_203658_s.get()._field_decl.get()._field_ident),jule::Any(_203677_si.get()._field_ident.get()._field_kind)}));
		return nullptr;
	};
	if ((!(_1a7690d13_is_accessible_define((*_self_)._field_s.ptr(), _206717_m.get()._field_public,_206717_m.get()._field_token)))) {
		_1a7700dea_push_err(&(*_self_), _203677_si.get()._field_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_206717_m.get()._field_ident)}));
		_1a7701219_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
	};
	if ((_1a6831ba8_is_ref(_206717_m.get()._field_params[0LL].ptr()) && (!(_203696_ref)))) {
		_1a7700dea_push_err(&(*_self_), _203677_si.get()._field_ident,jule::Str("reference method cannot use with non-reference instance", 55),jule::Slice<jule::Any>());
	};
	_1a770566e_check_deprecated(&(*_self_), _206717_m.get()._field_directives,_203677_si.get()._field_ident);
	jule::Ptr<_1a6872c93_FnIns> _208317_ins = _1a6871742_instance(_206717_m);;
	_208317_ins.get()._field_owner=_203658_s;
	_1a9d86e1e_push_reference(&(*_self_), _208317_ins);
	jule::Ptr<_1a76edda4_Data> _208617_model = jule::new_ptr<_1a76edda4_Data>((*(_203644_d)));;
	_203644_d.get()._field_model=jule::Any(jule::new_ptr<_1a686c62d_StructSubIdentExprModel>(_1a686c62d_StructSubIdentExprModel{._field_token=_203677_si.get()._field_ident, ._field_expr=_208617_model, ._field_expr_kind=_203644_d.get()._field_kind, ._field_method=_208317_ins, }));
	_203644_d.get()._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_208317_ins, 1)});
	return _203644_d;
}



inline jule::Ptr<_1a76edda4_Data> _1a7713b22_eval_slice_sub_ident(_1a7700922_Eval* _self_, jule::Ptr<_1a76edda4_Data> _209743_d, jule::Ptr<_1a527737a_Token> _209757_ident) {
	{
		auto &_match_expr{ _209757_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1aa003a6e:;
			{
				return jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_1a773e554_build_prim_type(jule::Str("int", 3)), 5)}), ._field_mutable=false, ._field_model=jule::Any(jule::new_ptr<_1a686cdd1_CommonSubIdentExprModel>(_1a686cdd1_CommonSubIdentExprModel{._field_expr_kind=_209743_d.get()._field_kind, ._field_expr=jule::Any(_209743_d.get()._field_model), ._field_token=_209757_ident, ._field_ident=jule::Str("len()", 5)})), });
			}
		}
		else if (_match_expr == jule::Str("cap", 3)) {
			_case_begin_1aa0048e9:;
			{
				return jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_1a773e554_build_prim_type(jule::Str("int", 3)), 5)}), ._field_mutable=false, ._field_model=jule::Any(jule::new_ptr<_1a686cdd1_CommonSubIdentExprModel>(_1a686cdd1_CommonSubIdentExprModel{._field_expr_kind=_209743_d.get()._field_kind, ._field_expr=jule::Any(_209743_d.get()._field_model), ._field_token=_209757_ident, ._field_ident=jule::Str("cap()", 5)})), });
			}
		}
		else if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_1aa004960:;
			{
				return jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(jule::new_ptr<_1a6872c93_FnIns>(_1a6872c93_FnIns{._field_params=jule::Slice<jule::Ptr<_1a6871e07_ParamIns>>::make({jule::new_ptr<_1a6871e07_ParamIns>(_1a6871e07_ParamIns{._field_decl=jule::new_ptr<_1a68707da_Param>(_1a68707da_Param{._field_ident=jule::Str("i", 1)}), ._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_1a773e554_build_prim_type(jule::Str("int", 3)), 5)})}),jule::new_ptr<_1a6871e07_ParamIns>(_1a6871e07_ParamIns{._field_decl=jule::new_ptr<_1a68707da_Param>(_1a68707da_Param{._field_ident=jule::Str("j", 1)}), ._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_1a773e554_build_prim_type(jule::Str("int", 3)), 5)})})}), ._field_caller=jule::Fn<jule::Ptr<_1a76edda4_Data>(jule::Ptr<_1a7700922_Eval>&,jule::Ptr<_1a6859e12_FnCallExpr>&,jule::Ptr<_1a76edda4_Data>&)>(_1a77a5840_builtin_caller_common_mut), }), 1)}), ._field_mutable=_209743_d.get()._field_mutable, ._field_model=jule::Any(jule::new_ptr<_1a686cdd1_CommonSubIdentExprModel>(_1a686cdd1_CommonSubIdentExprModel{._field_expr_kind=_209743_d.get()._field_kind, ._field_expr=jule::Any(_209743_d.get()._field_model), ._field_token=_209757_ident, ._field_ident=jule::Str("swap", 4)})), });
			}
		}
		else {
			_case_begin_1aa0034a8:;
			{
				_1a7700dea_push_err(&(*_self_), _209757_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_1a7727c8a_to_str(_209743_d.get()._field_kind.ptr())),jule::Any(_209757_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1aa003695:;
	};
}



inline jule::Ptr<_1a76edda4_Data> _1a7713ec9_eval_array_sub_ident(_1a7700922_Eval* _self_, jule::Ptr<_1a76edda4_Data> _215643_d, jule::Ptr<_1a527737a_Token> _215657_ident) {
	{
		auto &_match_expr{ _215657_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1aa009998:;
			{
				jule::Ptr<_1a75c3251_Const> _215921_c = static__1a75c2250_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_1a772a441_arr(_215643_d.get()._field_kind.ptr()).get()._field_n)));;
				return jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_1a773e554_build_prim_type(jule::Str("int", 3)), 5)}), ._field_mutable=false, ._field_model=jule::Any(_215921_c), ._field_constant=_215921_c});
			}
		}
		else if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_1aa00a823:;
			{
				return jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(jule::new_ptr<_1a6872c93_FnIns>(_1a6872c93_FnIns{._field_params=jule::Slice<jule::Ptr<_1a6871e07_ParamIns>>::make({jule::new_ptr<_1a6871e07_ParamIns>(_1a6871e07_ParamIns{._field_decl=jule::new_ptr<_1a68707da_Param>(_1a68707da_Param{._field_ident=jule::Str("i", 1)}), ._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_1a773e554_build_prim_type(jule::Str("int", 3)), 5)})}),jule::new_ptr<_1a6871e07_ParamIns>(_1a6871e07_ParamIns{._field_decl=jule::new_ptr<_1a68707da_Param>(_1a68707da_Param{._field_ident=jule::Str("j", 1)}), ._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_1a773e554_build_prim_type(jule::Str("int", 3)), 5)})})}), ._field_caller=jule::Fn<jule::Ptr<_1a76edda4_Data>(jule::Ptr<_1a7700922_Eval>&,jule::Ptr<_1a6859e12_FnCallExpr>&,jule::Ptr<_1a76edda4_Data>&)>(_1a77a5840_builtin_caller_common_mut), }), 1)}), ._field_mutable=_215643_d.get()._field_mutable, ._field_model=jule::Any(jule::new_ptr<_1a686cdd1_CommonSubIdentExprModel>(_1a686cdd1_CommonSubIdentExprModel{._field_expr_kind=_215643_d.get()._field_kind, ._field_expr=jule::Any(_215643_d.get()._field_model), ._field_token=_215657_ident, ._field_ident=jule::Str("swap", 4)})), });
			}
		}
		else {
			_case_begin_1aa0093d2:;
			{
				_1a7700dea_push_err(&(*_self_), _215657_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_1a7727c8a_to_str(_215643_d.get()._field_kind.ptr())),jule::Any(_215657_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1aa0095be:;
	};
}



inline jule::Ptr<_1a76edda4_Data> _1a7714381_eval_map_sub_ident(_1a7700922_Eval* _self_, jule::Ptr<_1a76edda4_Data> _220141_d, jule::Ptr<_1a527737a_Token> _220155_ident) {
	jule::Ptr<_1a7732657_Map> _220217_map_kind = _1a772b156_map(_220141_d.get()._field_kind.ptr());;
	{
		auto &_match_expr{ _220155_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1aa0115c6:;
			{
				return jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_1a773e554_build_prim_type(jule::Str("int", 3)), 5)}), ._field_mutable=false, ._field_model=jule::Any(jule::new_ptr<_1a686cdd1_CommonSubIdentExprModel>(_1a686cdd1_CommonSubIdentExprModel{._field_expr_kind=_220141_d.get()._field_kind, ._field_expr=jule::Any(_220141_d.get()._field_model), ._field_token=_220155_ident, ._field_ident=jule::Str("len()", 5)})), });
			}
		}
		else if (_match_expr == jule::Str("clear", 5)) {
			_case_begin_1aa01163c:;
			{
				return jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(jule::new_ptr<_1a6872c93_FnIns>(_1a6872c93_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a76edda4_Data>(jule::Ptr<_1a7700922_Eval>&,jule::Ptr<_1a6859e12_FnCallExpr>&,jule::Ptr<_1a76edda4_Data>&)>(_1a77a5840_builtin_caller_common_mut), }), 1)}), ._field_mutable=_220141_d.get()._field_mutable, ._field_model=jule::Any(jule::new_ptr<_1a686cdd1_CommonSubIdentExprModel>(_1a686cdd1_CommonSubIdentExprModel{._field_expr_kind=_220141_d.get()._field_kind, ._field_expr=jule::Any(_220141_d.get()._field_model), ._field_token=_220155_ident, ._field_ident=jule::Str("clear", 5)})), });
			}
		}
		else if (_match_expr == jule::Str("keys", 4)) {
			_case_begin_1aa01143e:;
			{
				return jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(jule::new_ptr<_1a6872c93_FnIns>(_1a6872c93_FnIns{._field_result=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(jule::new_ptr<_1a77310a1_Slc>(_1a77310a1_Slc{._field_elem=_220217_map_kind.get()._field_key}), 7)}), ._field_caller=jule::Fn<jule::Ptr<_1a76edda4_Data>(jule::Ptr<_1a7700922_Eval>&,jule::Ptr<_1a6859e12_FnCallExpr>&,jule::Ptr<_1a76edda4_Data>&)>(_1a77a5840_builtin_caller_common_mut), }), 1)}), ._field_mutable=_220141_d.get()._field_mutable, ._field_model=jule::Any(jule::new_ptr<_1a686cdd1_CommonSubIdentExprModel>(_1a686cdd1_CommonSubIdentExprModel{._field_expr_kind=_220141_d.get()._field_kind, ._field_expr=jule::Any(_220141_d.get()._field_model), ._field_token=_220155_ident, ._field_ident=jule::Str("keys", 4)})), });
			}
		}
		else if (_match_expr == jule::Str("values", 6)) {
			_case_begin_1aa0114a5:;
			{
				return jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(jule::new_ptr<_1a6872c93_FnIns>(_1a6872c93_FnIns{._field_result=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(jule::new_ptr<_1a77310a1_Slc>(_1a77310a1_Slc{._field_elem=_220217_map_kind.get()._field_val}), 7)}), ._field_caller=jule::Fn<jule::Ptr<_1a76edda4_Data>(jule::Ptr<_1a7700922_Eval>&,jule::Ptr<_1a6859e12_FnCallExpr>&,jule::Ptr<_1a76edda4_Data>&)>(_1a77a5840_builtin_caller_common_mut), }), 1)}), ._field_mutable=_220141_d.get()._field_mutable, ._field_model=jule::Any(jule::new_ptr<_1a686cdd1_CommonSubIdentExprModel>(_1a686cdd1_CommonSubIdentExprModel{._field_expr_kind=_220141_d.get()._field_kind, ._field_expr=jule::Any(_220141_d.get()._field_model), ._field_token=_220155_ident, ._field_ident=jule::Str("values", 6)})), });
			}
		}
		else if (_match_expr == jule::Str("has", 3)) {
			_case_begin_1aa01151b:;
			{
				return jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(jule::new_ptr<_1a6872c93_FnIns>(_1a6872c93_FnIns{._field_params=jule::Slice<jule::Ptr<_1a6871e07_ParamIns>>::make({jule::new_ptr<_1a6871e07_ParamIns>(_1a6871e07_ParamIns{._field_decl=jule::new_ptr<_1a68707da_Param>(_1a68707da_Param{._field_ident=jule::Str("key", 3)}), ._field_kind=_220217_map_kind.get()._field_key})}), ._field_result=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_1a773e554_build_prim_type(jule::Str("bool", 4)), 5)}), ._field_caller=jule::Fn<jule::Ptr<_1a76edda4_Data>(jule::Ptr<_1a7700922_Eval>&,jule::Ptr<_1a6859e12_FnCallExpr>&,jule::Ptr<_1a76edda4_Data>&)>(_1a77a570d_builtin_caller_common), }), 1)}), ._field_mutable=_220141_d.get()._field_mutable, ._field_model=jule::Any(jule::new_ptr<_1a686cdd1_CommonSubIdentExprModel>(_1a686cdd1_CommonSubIdentExprModel{._field_expr_kind=_220141_d.get()._field_kind, ._field_expr=jule::Any(_220141_d.get()._field_model), ._field_token=_220155_ident, ._field_ident=jule::Str("has", 3)})), });
			}
		}
		else if (_match_expr == jule::Str("del", 3)) {
			_case_begin_1aa010130:;
			{
				return jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(jule::new_ptr<_1a6872c93_FnIns>(_1a6872c93_FnIns{._field_params=jule::Slice<jule::Ptr<_1a6871e07_ParamIns>>::make({jule::new_ptr<_1a6871e07_ParamIns>(_1a6871e07_ParamIns{._field_decl=jule::new_ptr<_1a68707da_Param>(_1a68707da_Param{._field_ident=jule::Str("key", 3)}), ._field_kind=_220217_map_kind.get()._field_key})}), ._field_caller=jule::Fn<jule::Ptr<_1a76edda4_Data>(jule::Ptr<_1a7700922_Eval>&,jule::Ptr<_1a6859e12_FnCallExpr>&,jule::Ptr<_1a76edda4_Data>&)>(_1a77a5840_builtin_caller_common_mut), }), 1)}), ._field_mutable=_220141_d.get()._field_mutable, ._field_model=jule::Any(jule::new_ptr<_1a686cdd1_CommonSubIdentExprModel>(_1a686cdd1_CommonSubIdentExprModel{._field_expr_kind=_220141_d.get()._field_kind, ._field_expr=jule::Any(_220141_d.get()._field_model), ._field_token=_220155_ident, ._field_ident=jule::Str("del", 3)})), });
			}
		}
		else {
			_case_begin_1aa00e96a:;
			{
				_1a7700dea_push_err(&(*_self_), _220155_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_1a77329ba_to_str(_220217_map_kind.ptr())),jule::Any(_220155_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1aa00eeed:;
	};
}



inline jule::Ptr<_1a76edda4_Data> _1a7714738_eval_str_sub_ident(_1a7700922_Eval* _self_, jule::Ptr<_1a76edda4_Data> _232441_d, jule::Ptr<_1a527737a_Token> _232455_ident) {
	jule::Ptr<_1a77278d3_TypeKind> _232517_str_kind = jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_1a773e554_build_prim_type(jule::Str("str", 3)), 5)});;
	{
		auto &_match_expr{ _232455_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1aa01aaec:;
			{
				jule::Ptr<_1a76edda4_Data> _232821_sd = jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_1a773e554_build_prim_type(jule::Str("int", 3)), 5)}), });;
				if (_1a76ee767_is_const(_232441_d.ptr())) {
					_232821_sd.get()._field_constant=static__1a75c2250_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_1a75c4c14_read_str(_232441_d.get()._field_constant.ptr()).len())));
					_232821_sd.get()._field_model=jule::Any(_232821_sd.get()._field_constant);
				} else {
					_232821_sd.get()._field_model=jule::Any(jule::new_ptr<_1a686cdd1_CommonSubIdentExprModel>(_1a686cdd1_CommonSubIdentExprModel{._field_expr_kind=_232441_d.get()._field_kind, ._field_expr=jule::Any(_232441_d.get()._field_model), ._field_token=_232455_ident, ._field_ident=jule::Str("len()", 5)}));
				};
				return _232821_sd;
			}
		}
		else if (_match_expr == jule::Str("cap", 3)) {
			_case_begin_1aa01b889:;
			{
				jule::Ptr<_1a76edda4_Data> _234421_sd = jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_1a773e554_build_prim_type(jule::Str("int", 3)), 5)}), });;
				if (_1a76ee767_is_const(_232441_d.ptr())) {
					_234421_sd.get()._field_constant=static__1a75c2250_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_1a75c4c14_read_str(_232441_d.get()._field_constant.ptr()).cap())));
					_234421_sd.get()._field_model=jule::Any(_234421_sd.get()._field_constant);
				} else {
					_234421_sd.get()._field_model=jule::Any(jule::new_ptr<_1a686cdd1_CommonSubIdentExprModel>(_1a686cdd1_CommonSubIdentExprModel{._field_expr_kind=_232441_d.get()._field_kind, ._field_expr=jule::Any(_232441_d.get()._field_model), ._field_token=_232455_ident, ._field_ident=jule::Str("cap()", 5)}));
				};
				return _234421_sd;
			}
		}
		else {
			_case_begin_1aa019e5e:;
			{
				_1a7700dea_push_err(&(*_self_), _232455_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_1a7727c8a_to_str(_232517_str_kind.ptr())),jule::Any(_232455_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1aa01a734:;
	};
}



inline jule::Ptr<_1a76edda4_Data> _1a7714a46_eval_int_type_static(_1a7700922_Eval* _self_, jule::Ptr<_1a527737a_Token> _236539_ident) {
	;
	{
		auto &_match_expr{ _236539_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1aa0226e7:;
			{
				jule::Ptr<_1a75c3251_Const> _237021_c = static__1a75c2250_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_1a7666932_max(jule::Str("int", 3)))));;
				return jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_1a773e554_build_prim_type(jule::Str("int", 3)), 5)}), ._field_model=jule::Any(_237021_c), ._field_constant=_237021_c});
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1aa023385:;
			{
				jule::Ptr<_1a75c3251_Const> _237721_c = static__1a75c2250_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_1a7666646_min(jule::Str("int", 3)))));;
				return jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_1a773e554_build_prim_type(jule::Str("int", 3)), 5)}), ._field_model=jule::Any(_237721_c), ._field_constant=_237721_c});
			}
		}
		else {
			_case_begin_1aa0220ed:;
			{
				_1a7700dea_push_err(&(*_self_), _236539_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("int", 3)),jule::Any(_236539_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1aa022384:;
	};
}



inline jule::Ptr<_1a76edda4_Data> _1a7714d54_eval_uint_type_static(_1a7700922_Eval* _self_, jule::Ptr<_1a527737a_Token> _238940_ident) {
	;
	{
		auto &_match_expr{ _238940_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1aa026960:;
			{
				jule::Ptr<_1a75c3251_Const> _239421_c = static__1a75c343d_new_u64(static_cast<jule::U64>(static_cast<jule::U64>(_1a7666932_max(jule::Str("uint", 4)))));;
				return jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_1a773e554_build_prim_type(jule::Str("uint", 4)), 5)}), ._field_model=jule::Any(_239421_c), ._field_constant=_239421_c});
			}
		}
		else {
			_case_begin_1aa026366:;
			{
				_1a7700dea_push_err(&(*_self_), _238940_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("uint", 4)),jule::Any(_238940_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1aa0265ec:;
	};
}



inline jule::Ptr<_1a76edda4_Data> _1a7715162_eval_i8_type_static(_1a7700922_Eval* _self_, jule::Ptr<_1a527737a_Token> _240638_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _240638_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1aa02a17d:;
			{
				jule::Ptr<_1a75c3251_Const> _241321_c = static__1a75c2250_new_i64(127LL);;
				return jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_1a773e554_build_prim_type(jule::Str("i8", 2)), 5)}), ._field_model=jule::Any(_241321_c), ._field_constant=_241321_c});
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1aa02ad2c:;
			{
				jule::Ptr<_1a75c3251_Const> _242021_c = static__1a75c2250_new_i64(-128LL);;
				return jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_1a773e554_build_prim_type(jule::Str("i8", 2)), 5)}), ._field_model=jule::Any(_242021_c), ._field_constant=_242021_c});
			}
		}
		else {
			_case_begin_1aa029a1d:;
			{
				_1a7700dea_push_err(&(*_self_), _240638_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i8", 2)),jule::Any(_240638_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1aa029d4d:;
	};
}



inline jule::Ptr<_1a76edda4_Data> _1a7715470_eval_i16_type_static(_1a7700922_Eval* _self_, jule::Ptr<_1a527737a_Token> _243239_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _243239_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1aa02e5a0:;
			{
				jule::Ptr<_1a75c3251_Const> _243921_c = static__1a75c2250_new_i64(32767LL);;
				return jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_1a773e554_build_prim_type(jule::Str("i16", 3)), 5)}), ._field_model=jule::Any(_243921_c), ._field_constant=_243921_c});
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1aa03024e:;
			{
				jule::Ptr<_1a75c3251_Const> _244621_c = static__1a75c2250_new_i64(-32768LL);;
				return jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_1a773e554_build_prim_type(jule::Str("i16", 3)), 5)}), ._field_model=jule::Any(_244621_c), ._field_constant=_244621_c});
			}
		}
		else {
			_case_begin_1aa02de40:;
			{
				_1a7700dea_push_err(&(*_self_), _243239_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i16", 3)),jule::Any(_243239_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1aa02e270:;
	};
}



inline jule::Ptr<_1a76edda4_Data> _1a771577d_eval_i32_type_static(_1a7700922_Eval* _self_, jule::Ptr<_1a527737a_Token> _245839_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _245839_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1aa0339c2:;
			{
				jule::Ptr<_1a75c3251_Const> _246521_c = static__1a75c2250_new_i64(2147483647LL);;
				return jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_1a773e554_build_prim_type(jule::Str("i32", 3)), 5)}), ._field_model=jule::Any(_246521_c), ._field_constant=_246521_c});
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1aa034671:;
			{
				jule::Ptr<_1a75c3251_Const> _247221_c = static__1a75c2250_new_i64(-2147483648LL);;
				return jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_1a773e554_build_prim_type(jule::Str("i32", 3)), 5)}), ._field_model=jule::Any(_247221_c), ._field_constant=_247221_c});
			}
		}
		else {
			_case_begin_1aa033362:;
			{
				_1a7700dea_push_err(&(*_self_), _245839_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i32", 3)),jule::Any(_245839_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1aa033692:;
	};
}



inline jule::Ptr<_1a76edda4_Data> _1a7715a8b_eval_i64_type_static(_1a7700922_Eval* _self_, jule::Ptr<_1a527737a_Token> _248439_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _248439_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1aa037de4:;
			{
				jule::Ptr<_1a75c3251_Const> _249121_c = static__1a75c2250_new_i64(jule::MAX_I64);;
				return jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_1a773e554_build_prim_type(jule::Str("i64", 3)), 5)}), ._field_model=jule::Any(_249121_c), ._field_constant=_249121_c});
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1aa038a93:;
			{
				jule::Ptr<_1a75c3251_Const> _249821_c = static__1a75c2250_new_i64(jule::MIN_I64);;
				return jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_1a773e554_build_prim_type(jule::Str("i64", 3)), 5)}), ._field_model=jule::Any(_249821_c), ._field_constant=_249821_c});
			}
		}
		else {
			_case_begin_1aa037784:;
			{
				_1a7700dea_push_err(&(*_self_), _248439_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i64", 3)),jule::Any(_248439_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1aa037ab4:;
	};
}



inline jule::Ptr<_1a76edda4_Data> _1a7715d99_eval_u8_type_static(_1a7700922_Eval* _self_, jule::Ptr<_1a527737a_Token> _251038_ident) {
	;
	;
	{
		auto &_match_expr{ _251038_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1aa03bed6:;
			{
				jule::Ptr<_1a75c3251_Const> _251621_c = static__1a75c343d_new_u64(255LLU);;
				return jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_1a773e554_build_prim_type(jule::Str("u8", 2)), 5)}), ._field_model=jule::Any(_251621_c), ._field_constant=_251621_c});
			}
		}
		else {
			_case_begin_1aa03b3e2:;
			{
				_1a7700dea_push_err(&(*_self_), _251038_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u8", 2)),jule::Any(_251038_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1aa03bb1d:;
	};
}



inline jule::Ptr<_1a76edda4_Data> _1a77161a7_eval_u16_type_static(_1a7700922_Eval* _self_, jule::Ptr<_1a527737a_Token> _252839_ident) {
	;
	;
	{
		auto &_match_expr{ _252839_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1aa040160:;
			{
				jule::Ptr<_1a75c3251_Const> _253421_c = static__1a75c343d_new_u64(65535LLU);;
				return jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_1a773e554_build_prim_type(jule::Str("u16", 3)), 5)}), ._field_model=jule::Any(_253421_c), ._field_constant=_253421_c});
			}
		}
		else {
			_case_begin_1aa03e527:;
			{
				_1a7700dea_push_err(&(*_self_), _252839_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u16", 3)),jule::Any(_252839_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1aa03ec53:;
	};
}



inline jule::Ptr<_1a76edda4_Data> _1a77164b5_eval_u32_type_static(_1a7700922_Eval* _self_, jule::Ptr<_1a527737a_Token> _254639_ident) {
	;
	;
	{
		auto &_match_expr{ _254639_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1aa043295:;
			{
				jule::Ptr<_1a75c3251_Const> _255221_c = static__1a75c343d_new_u64(4294967295LLU);;
				return jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_1a773e554_build_prim_type(jule::Str("u32", 3)), 5)}), ._field_model=jule::Any(_255221_c), ._field_constant=_255221_c});
			}
		}
		else {
			_case_begin_1aa04265c:;
			{
				_1a7700dea_push_err(&(*_self_), _254639_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u32", 3)),jule::Any(_254639_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1aa042d88:;
	};
}



inline jule::Ptr<_1a76edda4_Data> _1a77167c3_eval_u64_type_static(_1a7700922_Eval* _self_, jule::Ptr<_1a527737a_Token> _256439_ident) {
	;
	;
	{
		auto &_match_expr{ _256439_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1aa046386:;
			{
				jule::Ptr<_1a75c3251_Const> _257021_c = static__1a75c343d_new_u64(jule::MAX_U64);;
				return jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_1a773e554_build_prim_type(jule::Str("u64", 3)), 5)}), ._field_model=jule::Any(_257021_c), ._field_constant=_257021_c});
			}
		}
		else {
			_case_begin_1aa045792:;
			{
				_1a7700dea_push_err(&(*_self_), _256439_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u64", 3)),jule::Any(_256439_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1aa045ebd:;
	};
}



inline jule::Ptr<_1a76edda4_Data> _1a7716ad1_eval_f32_type_tatic(_1a7700922_Eval* _self_, jule::Ptr<_1a527737a_Token> _258238_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ _258238_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1aa04a753:;
			{
				jule::Ptr<_1a75c3251_Const> _259021_c = static__1a75c3bd0_new_f64(340282346638528860000000000000000000000.0);;
				return jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_1a773e554_build_prim_type(jule::Str("f32", 3)), 5)}), ._field_model=jule::Any(_259021_c), ._field_constant=_259021_c});
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1aa04a7b9:;
			{
				jule::Ptr<_1a75c3251_Const> _259721_c = static__1a75c3bd0_new_f64(-340282346638528860000000000000000000000.0);;
				return jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_1a773e554_build_prim_type(jule::Str("f32", 3)), 5)}), ._field_model=jule::Any(_259721_c), ._field_constant=_259721_c});
			}
		}
		else if (_match_expr == jule::Str("SMALLEST_NON_ZERO", 17)) {
			_case_begin_1aa04a5bb:;
			{
				jule::Ptr<_1a75c3251_Const> _260421_c = static__1a75c3bd0_new_f64(0.000000000000000000000000000000000000000000001401298464324817);;
				return jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_1a773e554_build_prim_type(jule::Str("f32", 3)), 5)}), ._field_model=jule::Any(_260421_c), ._field_constant=_260421_c});
			}
		}
		else {
			_case_begin_1aa049114:;
			{
				_1a7700dea_push_err(&(*_self_), _258238_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("f32", 3)),jule::Any(_258238_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1aa049752:;
	};
}



inline jule::Ptr<_1a76edda4_Data> _1a7716dde_eval_f64_type_static(_1a7700922_Eval* _self_, jule::Ptr<_1a527737a_Token> _261639_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ _261639_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1aa050db8:;
			{
				jule::Ptr<_1a75c3251_Const> _262421_c = static__1a75c3bd0_new_f64(jule::MAX_F64);;
				return jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_1a773e554_build_prim_type(jule::Str("f64", 3)), 5)}), ._field_model=jule::Any(_262421_c), ._field_constant=_262421_c});
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1aa050e2e:;
			{
				jule::Ptr<_1a75c3251_Const> _263121_c = static__1a75c3bd0_new_f64(jule::MIN_F64);;
				return jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_1a773e554_build_prim_type(jule::Str("f64", 3)), 5)}), ._field_model=jule::Any(_263121_c), ._field_constant=_263121_c});
			}
		}
		else if (_match_expr == jule::Str("SMALLEST_NON_ZERO", 17)) {
			_case_begin_1aa050c31:;
			{
				jule::Ptr<_1a75c3251_Const> _263821_c = static__1a75c3bd0_new_f64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);;
				return jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_1a773e554_build_prim_type(jule::Str("f64", 3)), 5)}), ._field_model=jule::Any(_263821_c), ._field_constant=_263821_c});
			}
		}
		else {
			_case_begin_1aa04e779:;
			{
				_1a7700dea_push_err(&(*_self_), _261639_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("f64", 3)),jule::Any(_261639_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1aa04edb7:;
	};
}



inline jule::Ptr<_1a76edda4_Data> _1a7717296_eval_prim_static(_1a7700922_Eval* _self_, jule::Str _265035_kind, jule::Ptr<_1a527737a_Token> _265046_ident) {
	{
		auto &_match_expr{ _265035_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1aa05562b:;
			{
				return _1a7714a46_eval_int_type_static(&(*_self_), _265046_ident);
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1aa055692:;
			{
				return _1a7714d54_eval_uint_type_static(&(*_self_), _265046_ident);
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1aa055708:;
			{
				return _1a7715162_eval_i8_type_static(&(*_self_), _265046_ident);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1aa0549c1:;
			{
				return _1a7715470_eval_i16_type_static(&(*_self_), _265046_ident);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1aa054a37:;
			{
				return _1a771577d_eval_i32_type_static(&(*_self_), _265046_ident);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1aa054a9d:;
			{
				return _1a7715a8b_eval_i64_type_static(&(*_self_), _265046_ident);
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1aa054b14:;
			{
				return _1a7715d99_eval_u8_type_static(&(*_self_), _265046_ident);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1aa054b7a:;
			{
				return _1a77161a7_eval_u16_type_static(&(*_self_), _265046_ident);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1aa055890:;
			{
				return _1a77164b5_eval_u32_type_static(&(*_self_), _265046_ident);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1aa055906:;
			{
				return _1a77167c3_eval_u64_type_static(&(*_self_), _265046_ident);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1aa05597d:;
			{
				return _1a7716ad1_eval_f32_type_tatic(&(*_self_), _265046_ident);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1aa055a05:;
			{
				return _1a7716dde_eval_f64_type_static(&(*_self_), _265046_ident);
			}
		}
		else {
			_case_begin_1aa0546b3:;
			{
				_1a7700dea_push_err(&(*_self_), _265046_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_265035_kind),jule::Any(_265046_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1aa0547d4:;
	};
}



inline jule::Ptr<_1a76edda4_Data> _1a771764d_eval_type_static(_1a7700922_Eval* _self_, jule::Ptr<_1a76edda4_Data> _268239_d, jule::Ptr<_1a6859384_SubIdentExpr> _268253_si) {
	{
		
		if ((_1a7729990_prim(_268239_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aa05b09e:;
			{
				return _1a7717296_eval_prim_static(&(*_self_), _1a772c498_to_str(_1a7729990_prim(_268239_d.get()._field_kind.ptr()).ptr()),_268253_si.get()._field_ident);
			}
		}
		else if ((_1a772a1cc_enm(_268239_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aa05bc4d:;
			{
				return _1a7712967_eval_enum_static(&(*_self_), _1a772a1cc_enm(_268239_d.get()._field_kind.ptr()),_268253_si.get()._field_ident);
			}
		}
		else if ((_1a772ab7d_strct(_268239_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aa05bcb4:;
			{
				return _1a7712d1e_eval_struct_static(&(*_self_), _1a772ab7d_strct(_268239_d.get()._field_kind.ptr()),_268253_si.get()._field_ident);
			}
		}
		else {
			_case_begin_1aa05ac2a:;
			{
				_1a7700dea_push_err(&(*_self_), _268253_si.get()._field_ident,jule::Str("type @ is not supports sub-defines", 34),jule::Slice<jule::Any>::make({jule::Any(_1a7727c8a_to_str(_268239_d.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1aa05ab70:;
	};
}



inline jule::Ptr<_1a76edda4_Data> _1a7717a05_eval_obj_sub_ident(_1a7700922_Eval* _self_, jule::Ptr<_1a76edda4_Data> _269641_d, jule::Ptr<_1a6859384_SubIdentExpr> _269655_si) {
	if (_1a5279aca_is_ignore_ident(_269655_si.get()._field_ident.get()._field_kind)) {
		_1a7700dea_push_err(&(*_self_), _269655_si.get()._field_ident,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1a77278d3_TypeKind> _270217_kind = _269641_d.get()._field_kind;;
	{
		
		if ((_1a7729e68_ptr(_269641_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aa061868:;
			{
				jule::Ptr<_1a7733ba8_Ptr> _270517_ptr = _1a7729e68_ptr(_269641_d.get()._field_kind.ptr());;
				if (_1a773467b_is_unsafe(_270517_ptr.ptr())) {
					goto _match_end_1aa06178b;
				};
				if (((!(_269655_si.get()._field_is_self)) && (!(_1a7701835_is_unsafe(&(*_self_)))))) {
					_1a7700dea_push_err(&(*_self_), _269655_si.get()._field_ident,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
				};
				_270217_kind=_1a7729e68_ptr(_269641_d.get()._field_kind.ptr()).get()._field_elem;
			}
		}
		else if ((_1a7729c04_sptr(_269641_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aa0618ce:;
			{
				_270217_kind=_1a7729c04_sptr(_269641_d.get()._field_kind.ptr()).get()._field_elem;
			}
		}
		_match_end_1aa06178b:;
	};
	{
		
		if ((_1a772ade2_trt(_269641_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aa064508:;
			{
				return _1a7713270_eval_trait_sub_ident(&(*_self_), _269641_d,_1a772ade2_trt(_269641_d.get()._field_kind.ptr()),_269655_si.get()._field_ident);
			}
		}
		else if ((_1a772ab7d_strct(_270217_kind.ptr()) != nullptr)) {
			_case_begin_1aa064580:;
			{
				jule::Ptr<_1a6836a48_StructIns> _272117_s = _1a772ab7d_strct(_270217_kind.ptr());;
				if (_1a7723bba_is_instanced_struct(_272117_s)) {
					jule::Bool _272325_used_reference_elem = (_1a7729c04_sptr(_269641_d.get()._field_kind.ptr()) != nullptr);;
					return _1a771376a_eval_struct_sub_ident(&(*_self_), _269641_d,_1a772ab7d_strct(_270217_kind.ptr()),_269655_si,_272325_used_reference_elem);
				};
			}
		}
		else if ((_1a772a6a5_slc(_270217_kind.ptr()) != nullptr)) {
			_case_begin_1aa064607:;
			{
				return _1a7713b22_eval_slice_sub_ident(&(*_self_), _269641_d,_269655_si.get()._field_ident);
			}
		}
		else if ((_1a772a441_arr(_270217_kind.ptr()) != nullptr)) {
			_case_begin_1aa06467e:;
			{
				return _1a7713ec9_eval_array_sub_ident(&(*_self_), _269641_d,_269655_si.get()._field_ident);
			}
		}
		else if ((_1a772b156_map(_270217_kind.ptr()) != nullptr)) {
			_case_begin_1aa064706:;
			{
				return _1a7714381_eval_map_sub_ident(&(*_self_), _269641_d,_269655_si.get()._field_ident);
			}
		}
		else if ((_1a7729990_prim(_270217_kind.ptr()) != nullptr)) {
			_case_begin_1aa064c34:;
			{
				jule::Ptr<_1a772c135_Prim> _273317_p = _1a7729990_prim(_270217_kind.ptr());;
				{
					auto &_match_expr{ _273317_p.get()._field_kind };
					
					if (_match_expr == jule::Str("str", 3)) {
						_case_begin_1aa06a8e9:;
						{
							return _1a7714738_eval_str_sub_ident(&(*_self_), _269641_d,_269655_si.get()._field_ident);
						}
					}
					_match_end_1aa06a883:;
				};
			}
		}
		_match_end_1aa06442b:;
	};
	_1a7700dea_push_err(&(*_self_), _269655_si.get()._field_ident,jule::Str("object @ is not supports sub-defines", 36),jule::Slice<jule::Any>::make({jule::Any(_1a7727c8a_to_str(_269641_d.get()._field_kind.ptr()))}));
	return nullptr;
}



inline jule::Ptr<_1a76edda4_Data> _1a7717d13_eval_sub_ident(jule::Ptr<_1a7700922_Eval> _self_, jule::Ptr<_1a6859384_SubIdentExpr> _274338_si) {
	jule::Ptr<_1a77278d3_TypeKind> _274417_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_274417_prefix;
	});;
	jule::Ptr<_1a76edda4_Data> _274817_d = _1a7719210_eval_expr_kind(_self_, jule::Any(_274338_si.get()._field_expr));;
	if ((_274817_d == nullptr)) {
		return nullptr;
	};
	if (_274817_d.get()._field_decl) {
		return _1a771764d_eval_type_static(_self_.ptr(), _274817_d,_274338_si);
	};
	return _1a7717a05_eval_obj_sub_ident(_self_.ptr(), _274817_d,_274338_si);
}



inline jule::Ptr<_1a76edda4_Data> _1a7718121_eval_tuple(jule::Ptr<_1a7700922_Eval> _self_, jule::Ptr<_1a68565d4_TupleExpr> _276034_tup) {
	jule::Ptr<_1a7731a96_Tuple> _276117_tup_t = jule::new_ptr<_1a7731a96_Tuple>(_1a7731a96_Tuple{});;
	_276117_tup_t.get()._field_types=jule::Slice<jule::Ptr<_1a77278d3_TypeKind>>::alloc(0LL,_276034_tup.get()._field_expr.len());
	jule::Ptr<_1a686d0bd_TupleExprModel> _276417_model = jule::new_ptr<_1a686d0bd_TupleExprModel>(_1a686d0bd_TupleExprModel{._field_datas=jule::Slice<jule::Ptr<_1a76edda4_Data>>::alloc(0LL,_276034_tup.get()._field_expr.len())});;
	jule::Bool _276817_ok = true;;
	{
		auto &expr = _276034_tup.get()._field_expr;
		auto it = expr.begin();
		_iter_begin_1aa071a54:;
		if (it != expr.end()) {
			jule::Ptr<_1a6855e41_Expr> _276921_expr = *it;
			{
				jule::Ptr<_1a76edda4_Data> _277021_d = _1a7719210_eval_expr_kind(_self_, jule::Any(_276921_expr.get()._field_kind));;
				if ((_277021_d == nullptr)) {
					_276817_ok=false;
					goto _iter_next_1aa071a54;
				};
				_276117_tup_t.get()._field_types = jule::alloc_for_append(_276117_tup_t.get()._field_types,1);_276117_tup_t.get()._field_types.__push(_277021_d.get()._field_kind);;
				_276417_model.get()._field_datas = jule::alloc_for_append(_276417_model.get()._field_datas,1);_276417_model.get()._field_datas.__push(_277021_d);;
			}
			_iter_next_1aa071a54:;
			++it;
			goto _iter_begin_1aa071a54;
		}
		_iter_end_1aa071a54:;
	};
	if ((!(_276817_ok))) {
		return nullptr;
	};
	return jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_276117_tup_t, 8)}), ._field_model=jule::Any(_276417_model), });
}



inline jule::Ptr<_1a76edda4_Data> _1a77184c8_eval_map(jule::Ptr<_1a7700922_Eval> _self_, jule::Ptr<_1a7732657_Map> _278932_m, jule::Ptr<_1a685b672_BraceLit> _278945_lit) {
	jule::Ptr<_1a686bd36_MapExprModel> _279017_model = jule::new_ptr<_1a686bd36_MapExprModel>(_1a686bd36_MapExprModel{._field_key_kind=_278932_m.get()._field_key, ._field_val_kind=_278932_m.get()._field_val, });;
	{
		auto &expr = _278945_lit.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1aa075706:;
		if (it != expr.end()) {
			jule::Ptr<_1a6855e41_Expr> _279521_expr = *it;
			{
				{
					auto &_match_expr{ _279521_expr.get()._field_kind };
					
					if (_match_expr.type_is<jule::Ptr<_1a685be47_KeyValPair>>()) {
						_case_begin_1aa075c9a:;
						{
							goto _match_end_1aa075e87;
						}
					}
					else {
						_case_begin_1aa075edc:;
						{
							_1a7700dea_push_err(_self_.ptr(), _278945_lit.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							return nullptr;
						}
					}
					_match_end_1aa075e87:;
				};
				jule::Ptr<_1a685be47_KeyValPair> _280521_pair = _279521_expr.get()._field_kind.operator jule::Ptr<_1a685be47_KeyValPair>();;
				jule::Ptr<_1a76edda4_Data> _280721_key = _1a7719210_eval_expr_kind(_self_, jule::Any(_280521_pair.get()._field_key));;
				if ((_280721_key == nullptr)) {
					return nullptr;
				};
				jule::Ptr<_1a76edda4_Data> _281221_val = _1a7719210_eval_expr_kind(_self_, jule::Any(_280521_pair.get()._field_val));;
				if ((_281221_val == nullptr)) {
					return nullptr;
				};
				_1a769593e_check_assign_type(_self_.get()._field_s, false,_278932_m.get()._field_key,_280721_key,_280521_pair.get()._field_colon);
				_1a769593e_check_assign_type(_self_.get()._field_s, false,_278932_m.get()._field_val,_281221_val,_280521_pair.get()._field_colon);
				_279017_model.get()._field_entries = jule::alloc_for_append(_279017_model.get()._field_entries,1);_279017_model.get()._field_entries.__push(jule::new_ptr<_1a686bb49_KeyValPairExprModel>(_1a686bb49_KeyValPairExprModel{._field_key=jule::Any(_280721_key.get()._field_model), ._field_val=jule::Any(_281221_val.get()._field_model)}));;
			}
			_iter_next_1aa075706:;
			++it;
			goto _iter_begin_1aa075706;
		}
		_iter_end_1aa075706:;
	};
	return jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_278932_m, 9)}), ._field_mutable=true, ._field_model=jule::Any(_279017_model), });
}



inline jule::Ptr<_1a76edda4_Data> _1a77187d6_eval_brace_lit(jule::Ptr<_1a7700922_Eval> _self_, jule::Ptr<_1a685b672_BraceLit> _283338_lit) {
	{
		
		if ((_self_.get()._field_prefix == nullptr)) {
			_case_begin_1aa07c0d1:;
			{
				_1a7700dea_push_err(_self_.ptr(), _283338_lit.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		else if ((_1a772b156_map(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_1aa07bed2:;
			{
				return _1a77184c8_eval_map(_self_, _1a772b156_map(_self_.get()._field_prefix.ptr()),_283338_lit);
			}
		}
		else if ((_1a772ab7d_strct(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_1aa07c048:;
			{
				return _1a7710613_eval_struct_lit_explicit(_self_, _1a772ab7d_strct(_self_.get()._field_prefix.ptr()),_283338_lit.get()._field_exprs,_283338_lit.get()._field_token);
			}
		}
		else {
			_case_begin_1aa07b377:;
			{
				_1a7700dea_push_err(_self_.ptr(), _283338_lit.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1aa07b2ab:;
	};
}



inline jule::Ptr<_1a76edda4_Data> _1a7718ae4_eval_anon_fn(_1a7700922_Eval* _self_, jule::Ptr<_1a6862205_FnDecl> _284835_decl) {
	_1a7735847_TypeChecker _284917_tc = _1a7735847_TypeChecker{._field_s=(*_self_)._field_s, ._field_lookup=(*_self_)._field_lookup, };;
	jule::Ptr<_1a6872c93_FnIns> _285317_ins = _1a773b7b5_build_fn(&_284917_tc, _284835_decl);;
	_285317_ins.get()._field_anon=true;
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1a766e374_ScopeChecker>>()) {
			_case_begin_1aa080348:;
			{
				jule::Ptr<_1a766e374_ScopeChecker> _285821_sc = (*_self_)._field_lookup.operator jule::Ptr<_1a766e374_ScopeChecker>();;
				jule::Ptr<_1a766e374_ScopeChecker> _285921_scc = _1a767da9d_new_child_checker(_285821_sc);;
				_285921_scc.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1a766de9a_ScopeLabel>>>(nullptr);
				_285921_scc.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1a766e187_ScopeGoto>>>(nullptr);
				_285921_scc.get()._field_owner=nullptr;
				_285921_scc.get()._field_child_index=0LL;
				_285921_scc.get()._field_it=0LLU;
				_285921_scc.get()._field_cse=0LLU;
				_285921_scc.get()._field_owner=_285317_ins;
				_1a76a2c04_check_fn_ins_sc((*_self_)._field_s.ptr(), _285317_ins,_285921_scc);
			}
		}
		else {
			_case_begin_1aa081a64:;
			{
				_1a76a3298_check_fn_ins((*_self_)._field_s, _285317_ins);
			}
		}
		_match_end_1aa081a0e:;
	};
	return jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_285317_ins, 1)}), ._field_model=jule::Any(jule::new_ptr<_1a686b95c_AnonFnExprModel>(_1a686b95c_AnonFnExprModel{._field_func=_285317_ins, ._field_global=_1a7701a99_is_global(&(*_self_))})), });
}



inline jule::Ptr<_1a76edda4_Data> _1a7718e02_eval_binop(jule::Ptr<_1a7700922_Eval> _self_, jule::Ptr<_1a6859807_BinopExpr> _288134_op) {
	_1a771ba3c_BinaryEval _288217_bs = static__1a771c0e2_new_plain(_self_);;
	if ((_self_.get()._field_prefix != nullptr)) {
		jule::Ptr<_1a772c135_Prim> _288617_prim = _1a7729990_prim(_self_.get()._field_prefix.ptr());;
		if (((_288617_prim == nullptr) || (!(_1a766c460_is_num(_1a772c498_to_str(_288617_prim.ptr())))))) {
			jule::Ptr<_1a77278d3_TypeKind> _288825_prefix = _self_.get()._field_prefix;;
			_self_.get()._field_prefix=nullptr;
			__JULE_DEFER({
				_self_.get()._field_prefix=_288825_prefix;
			});;
			return _1a77221c4_eval(&_288217_bs, _288134_op);
		};
	};
	return _1a77221c4_eval(&_288217_bs, _288134_op);
}



inline jule::Ptr<_1a76edda4_Data> _1a7719210_eval_expr_kind(jule::Ptr<_1a7700922_Eval> _self_, jule::Any _289838_kind) {
	jule::Ptr<_1a76edda4_Data> _289917_d = nullptr;;
	{
		auto &_match_expr{ _289838_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a6855e41_Expr>>()) {
			_case_begin_1aa08a2cb:;
			{
				_289917_d=_1a7719210_eval_expr_kind(_self_, jule::Any(_289838_kind.operator jule::Ptr<_1a6855e41_Expr>().get()._field_kind));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6856aac_LitExpr>>()) {
			_case_begin_1aa08a342:;
			{
				_289917_d=_1a770377c_eval_lit(_self_.ptr(), _289838_kind.operator jule::Ptr<_1a6856aac_LitExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6857ae1_IdentExpr>>()) {
			_case_begin_1aa08a3a8:;
			{
				_289917_d=_1a77075a5_eval_ident(_self_.ptr(), _289838_kind.operator jule::Ptr<_1a6857ae1_IdentExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a68582ea_UnaryExpr>>()) {
			_case_begin_1aa08a430:;
			{
				_289917_d=_1a77078b3_eval_unary(_self_, _289838_kind.operator jule::Ptr<_1a68582ea_UnaryExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a68586a2_VariadicExpr>>()) {
			_case_begin_1aa08a4a7:;
			{
				_289917_d=_1a7707bc1_eval_variadic(_self_, _289838_kind.operator jule::Ptr<_1a68586a2_VariadicExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a68572b6_UnsafeExpr>>()) {
			_case_begin_1aa08a52e:;
			{
				_289917_d=_1a7707ece_eval_unsafe(_self_, _289838_kind.operator jule::Ptr<_1a68572b6_UnsafeExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a685c3ba_SliceExpr>>()) {
			_case_begin_1aa08a5a6:;
			{
				_289917_d=_1a77089a2_eval_slice_expr(_self_, _289838_kind.operator jule::Ptr<_1a685c3ba_SliceExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a685ce9d_IndexingExpr>>()) {
			_case_begin_1aa08a62d:;
			{
				_289917_d=_1a770b17a_eval_indexing(_self_, _289838_kind.operator jule::Ptr<_1a685ce9d_IndexingExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a685d5a8_SlicingExpr>>()) {
			_case_begin_1aa08a6a5:;
			{
				_289917_d=_1a770c346_eval_slicing(_self_, _289838_kind.operator jule::Ptr<_1a685d5a8_SlicingExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6858a59_CastExpr>>()) {
			_case_begin_1aa08a72c:;
			{
				_289917_d=_1a770ed82_eval_cast(_self_, _289838_kind.operator jule::Ptr<_1a6858a59_CastExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6858e11_NsSelectionExpr>>()) {
			_case_begin_1aa08a7a4:;
			{
				_289917_d=_1a7710190_eval_ns_selection(_self_.ptr(), _289838_kind.operator jule::Ptr<_1a6858e11_NsSelectionExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a685b1ee_StructLit>>()) {
			_case_begin_1aa08a82b:;
			{
				_289917_d=_1a7710932_eval_struct_lit(_self_, _289838_kind.operator jule::Ptr<_1a685b1ee_StructLit>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a68529cb_TypeDecl>>()) {
			_case_begin_1aa08a8a3:;
			{
				_289917_d=_1a7710c40_eval_type(_self_.ptr(), _289838_kind.operator jule::Ptr<_1a68529cb_TypeDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6859e12_FnCallExpr>>()) {
			_case_begin_1aa08a92a:;
			{
				_289917_d=_1a77125b0_eval_fn_call(_self_, _289838_kind.operator jule::Ptr<_1a6859e12_FnCallExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6859384_SubIdentExpr>>()) {
			_case_begin_1aa08a9a2:;
			{
				_289917_d=_1a7717d13_eval_sub_ident(_self_, _289838_kind.operator jule::Ptr<_1a6859384_SubIdentExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a68565d4_TupleExpr>>()) {
			_case_begin_1aa08aa29:;
			{
				_289917_d=_1a7718121_eval_tuple(_self_, _289838_kind.operator jule::Ptr<_1a68565d4_TupleExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a685b672_BraceLit>>()) {
			_case_begin_1aa08aaa1:;
			{
				_289917_d=_1a77187d6_eval_brace_lit(_self_, _289838_kind.operator jule::Ptr<_1a685b672_BraceLit>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6862205_FnDecl>>()) {
			_case_begin_1aa08ab28:;
			{
				_289917_d=_1a7718ae4_eval_anon_fn(_self_.ptr(), _289838_kind.operator jule::Ptr<_1a6862205_FnDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6859807_BinopExpr>>()) {
			_case_begin_1aa08aba0:;
			{
				_289917_d=_1a7718e02_eval_binop(_self_, _289838_kind.operator jule::Ptr<_1a6859807_BinopExpr>());
			}
		}
		_match_end_1aa08a111:;
	};
	return _289917_d;
}



inline jule::Ptr<_1a76edda4_Data> _1a771951d_eval(jule::Ptr<_1a7700922_Eval> _self_, jule::Ptr<_1a6855e41_Expr> _294528_expr) {
	jule::Ptr<_1a76edda4_Data> _294617_d = _1a7719210_eval_expr_kind(_self_, jule::Any(_294528_expr.get()._field_kind));;
	if (((_294617_d == nullptr) || (_294617_d.get()._field_kind == nullptr))) {
		return nullptr;
	};
	{
		
		if ((_1a772a919_fnc(_294617_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aa0969d0:;
			{
				jule::Ptr<_1a6872c93_FnIns> _295321_f = _1a772a919_fnc(_294617_d.get()._field_kind.ptr());;
				if (_1a6873a1e_is_builtin(_295321_f.ptr())) {
					goto _match_end_1aa096903;
				};
				if ((_295321_f.get()._field_generics.len() != _295321_f.get()._field_decl.get()._field_generics.len())) {
					_1a769063c_push_err(_self_.get()._field_s.ptr(), _294528_expr.get()._field_token,jule::Str("define has generics", 19),jule::Slice<jule::Any>());
				};
				if (_1a684ce27_is_method(_295321_f.get()._field_decl.ptr())) {
					_1a769063c_push_err(_self_.get()._field_s.ptr(), _294528_expr.get()._field_token,jule::Str("methods should be invoked", 25),jule::Slice<jule::Any>());
				};
			}
		}
		_match_end_1aa096903:;
	};
	return _294617_d;
}



inline jule::Ptr<_1a76edda4_Data> _1a771982b_eval_expr(jule::Ptr<_1a7700922_Eval> _self_, jule::Ptr<_1a6855e41_Expr> _297133_expr) {
	jule::Ptr<_1a76edda4_Data> _297217_d = _1a771951d_eval(_self_, _297133_expr);;
	{
		
		if ((_297217_d == nullptr)) {
			_case_begin_1aa09aad3:;
			{
				return nullptr;
			}
		}
		else if (_297217_d.get()._field_decl) {
			_case_begin_1aa09a929:;
			{
				_1a7700dea_push_err(_self_.ptr(), _297133_expr.get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		else {
			_case_begin_1aa09a4b7:;
			{
				return _297217_d;
			}
		}
		_match_end_1aa09a440:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a7700922_Eval _Src) {
	_Stream << "Eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "immutable:" << _Src._field_immutable << ", ";
	_Stream << "ignored:" << _Src._field_ignored << ", ";
	_Stream << "dis_builtin:" << _Src._field_dis_builtin << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "arg:" << _Src._field_arg;
	_Stream << "}";
	return _Stream;
}



inline _1a7719c9e_UnaryEval static__1a771a255_new(jule::Ptr<_1a7700922_Eval> _299223_e) {
	return _1a7719c9e_UnaryEval{._field_e=_299223_e, };
}



inline void _1a771a431_minus(_1a7719c9e_UnaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_kind == nullptr)) {
			_case_begin_1aa09c5c9:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		else if ((_1a7729990_prim((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aa09ca2a:;
			{
				if ((!(_1a766c460_is_num(_1a7727c8a_to_str((*_self_)._field_d.get()._field_kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1a772ab7d_strct((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aa09ca91:;
			{
				if ((_1a772ab7d_strct((*_self_)._field_d.get()._field_kind.ptr()).get()._field_operators._field_neg == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1aa09c255:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1aa09c189:;
	};
	if (_1a76ee767_is_const((*_self_)._field_d.ptr())) {
		{
			
			if (_1a75c7321_is_f64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1aa0a0b71:;
				{
					_1a75c6430_set_f64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::F64>((-(_1a75c4e78_read_f64((*_self_)._field_d.get()._field_constant.ptr())))));
				}
			}
			else if (_1a75c6870_is_i64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1aa0a0be8:;
				{
					_1a75c593a_set_i64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::I64>((-(_1a75c44c7_read_i64((*_self_)._field_d.get()._field_constant.ptr())))));
				}
			}
			else if (_1a75c6ad4_is_u64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1aa0a0c70:;
				{
					_1a75c593a_set_i64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::I64>((-(_1a75c51dc_as_i64((*_self_)._field_d.get()._field_constant.ptr())))));
				}
			}
			_match_end_1aa0a092e:;
		};
	};
	(*_self_)._field_d.get()._field_lvalue=false;
	(*_self_)._field_d.get()._field_model=jule::Any(jule::new_ptr<_1a6849e79_UnaryExprModel>(_1a6849e79_UnaryExprModel{._field_expr=jule::new_ptr<_1a76edda4_Data>((*((*_self_)._field_d))), ._field_op=(*_self_)._field_u.get()._field_op}));
}



inline void _1a771a60c_plus(_1a7719c9e_UnaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_kind == nullptr)) {
			_case_begin_1aa0a5637:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		else if ((_1a7729990_prim((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aa0a5a88:;
			{
				if ((!(_1a766c460_is_num(_1a7727c8a_to_str((*_self_)._field_d.get()._field_kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1a772ab7d_strct((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aa0a5aee:;
			{
				if ((_1a772ab7d_strct((*_self_)._field_d.get()._field_kind.ptr()).get()._field_operators._field_pos == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1aa0a52b3:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1aa0a51e7:;
	};
	if (_1a76ee767_is_const((*_self_)._field_d.ptr())) {
		{
			
			if (_1a75c7321_is_f64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1aa0a8bce:;
				{
					_1a75c6430_set_f64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::F64>((+(_1a75c4e78_read_f64((*_self_)._field_d.get()._field_constant.ptr())))));
				}
			}
			else if (_1a75c6870_is_i64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1aa0a8c56:;
				{
					_1a75c593a_set_i64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::I64>((+(_1a75c44c7_read_i64((*_self_)._field_d.get()._field_constant.ptr())))));
				}
			}
			else if (_1a75c6ad4_is_u64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1aa0a8ccd:;
				{
					_1a75c593a_set_i64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::I64>((+(_1a75c51dc_as_i64((*_self_)._field_d.get()._field_constant.ptr())))));
				}
			}
			_match_end_1aa0a898c:;
		};
	};
	(*_self_)._field_d.get()._field_lvalue=false;
	(*_self_)._field_d.get()._field_model=jule::Any(jule::new_ptr<_1a6849e79_UnaryExprModel>(_1a6849e79_UnaryExprModel{._field_expr=jule::new_ptr<_1a76edda4_Data>((*((*_self_)._field_d))), ._field_op=(*_self_)._field_u.get()._field_op}));
}



inline void _1a771a7d8_caret(_1a7719c9e_UnaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_kind == nullptr)) {
			_case_begin_1aa0ad695:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		else if ((_1a7729990_prim((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aa0adae6:;
			{
				if ((!(_1a766bdcc_is_int(_1a7727c8a_to_str((*_self_)._field_d.get()._field_kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1a772ab7d_strct((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aa0adb5c:;
			{
				if ((_1a772ab7d_strct((*_self_)._field_d.get()._field_kind.ptr()).get()._field_operators._field_bit_not == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1aa0ad321:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1aa0ad255:;
	};
	if (_1a76ee767_is_const((*_self_)._field_d.ptr())) {
		{
			
			if (_1a75c6870_is_i64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1aa0b1c2b:;
				{
					_1a75c593a_set_i64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::I64>((~(_1a75c44c7_read_i64((*_self_)._field_d.get()._field_constant.ptr())))));
				}
			}
			else if (_1a75c6ad4_is_u64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1aa0b1ca3:;
				{
					_1a75c5bb0_set_u64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::U64>((~(_1a75c473b_read_u64((*_self_)._field_d.get()._field_constant.ptr())))));
				}
			}
			_match_end_1aa0b19ea:;
		};
	};
	(*_self_)._field_d.get()._field_lvalue=false;
	(*_self_)._field_d.get()._field_model=jule::Any(jule::new_ptr<_1a6849e79_UnaryExprModel>(_1a6849e79_UnaryExprModel{._field_expr=jule::new_ptr<_1a76edda4_Data>((*((*_self_)._field_d))), ._field_op=(*_self_)._field_u.get()._field_op}));
}



inline void _1a771a9b4_excl(_1a7719c9e_UnaryEval* _self_) {
	jule::Ptr<_1a772c135_Prim> _311113_t = _1a7729990_prim((*_self_)._field_d.get()._field_kind.ptr());;
	if (((_311113_t == nullptr) || (!(_1a772ed80_is_bool(_311113_t.ptr()))))) {
		(*_self_)._field_d=nullptr;
		return;;
	};
	if (_1a76ee767_is_const((*_self_)._field_d.ptr())) {
		{
			
			if (_1a75c6d48_is_bool((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1aa0b6967:;
				{
					_1a75c5e35_set_bool((*_self_)._field_d.get()._field_constant.ptr(), (!(_1a75c49a0_read_bool((*_self_)._field_d.get()._field_constant.ptr()))));
				}
			}
			_match_end_1aa0b6868:;
		};
	};
	(*_self_)._field_d.get()._field_lvalue=false;
	(*_self_)._field_d.get()._field_model=jule::Any(jule::new_ptr<_1a6849e79_UnaryExprModel>(_1a6849e79_UnaryExprModel{._field_expr=jule::new_ptr<_1a76edda4_Data>((*((*_self_)._field_d))), ._field_op=(*_self_)._field_u.get()._field_op}));
}



inline void _1a771ab90_star(_1a7719c9e_UnaryEval* _self_) {
	(*_self_)._field_d.get()._field_model=jule::Any(jule::new_ptr<_1a6849e79_UnaryExprModel>(_1a6849e79_UnaryExprModel{._field_expr=jule::new_ptr<_1a76edda4_Data>((*((*_self_)._field_d))), ._field_op=(*_self_)._field_u.get()._field_op}));
	{
		
		if ((_1a7729e68_ptr((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aa0b9cab:;
			{
				if ((!(_1a7701835_is_unsafe((*_self_)._field_e.ptr())))) {
					_1a7700dea_push_err((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_op,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
				};
				jule::Ptr<_1a7733ba8_Ptr> _314321_t = _1a7729e68_ptr((*_self_)._field_d.get()._field_kind.ptr());;
				if (_1a773467b_is_unsafe(_314321_t.ptr())) {
					(*_self_)._field_d=nullptr;
					return;;
				};
				(*_self_)._field_d.get()._field_kind=_314321_t.get()._field_elem;
			}
		}
		else if ((_1a7729c04_sptr((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aa0ba1eb:;
			{
				(*_self_)._field_d.get()._field_kind=_1a7729c04_sptr((*_self_)._field_d.get()._field_kind.ptr()).get()._field_elem;
			}
		}
		else {
			_case_begin_1aa0b9959:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1aa0b9904:;
	};
	(*_self_)._field_d.get()._field_constant=nullptr;
	(*_self_)._field_d.get()._field_lvalue=true;
}



inline void _1a771ad6b_amper(_1a7719c9e_UnaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1a682b752_StructLitExprModel>>()) {
			_case_begin_1aa0c0388:;
			{
				jule::Ptr<_1a682b752_StructLitExprModel> _316321_lit = (*_self_)._field_d.get()._field_model.operator jule::Ptr<_1a682b752_StructLitExprModel>();;
				_1a7722e61_make_struct_lit_alloc((*_self_)._field_d,_316321_lit);
			}
		}
		else {
			_case_begin_1aa0be552:;
			{
				{
					
					if (_1a773d5db_can_get_ptr((*_self_)._field_d)) {
						_case_begin_1aa0c0135:;
						{
							(*_self_)._field_d.get()._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(jule::new_ptr<_1a7733ba8_Ptr>(_1a7733ba8_Ptr{._field_elem=(*_self_)._field_d.get()._field_kind}), 11)});
							(*_self_)._field_d.get()._field_model=jule::Any(jule::new_ptr<_1a6849e79_UnaryExprModel>(_1a6849e79_UnaryExprModel{._field_expr=jule::new_ptr<_1a76edda4_Data>((*((*_self_)._field_d))), ._field_op=(*_self_)._field_u.get()._field_op}));
						}
					}
					else {
						_case_begin_1aa0bea08:;
						{
							(*_self_)._field_d=nullptr;
						}
					}
					_match_end_1aa0be95e:;
				};
			}
		}
		_match_end_1aa0be497:;
	};
	if (((*_self_)._field_d != nullptr)) {
		(*_self_)._field_d.get()._field_constant=nullptr;
		(*_self_)._field_d.get()._field_lvalue=false;
	};
}



inline void _1a771b047_type_decl(_1a7719c9e_UnaryEval* _self_) {
	_1a7735847_TypeChecker _318717_tc = _1a7735847_TypeChecker{._field_s=(*_self_)._field_e.get()._field_s, ._field_lookup=(*_self_)._field_e.get()._field_lookup, ._field_error_token=(*_self_)._field_u.get()._field_op, };;
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1aa0c5b41:;
			{
				(*_self_)._field_d.get()._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_1a773a154_build_ptr_from_type(&_318717_tc, (*_self_)._field_d.get()._field_kind), 11)});
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1aa0c5ba7:;
			{
				(*_self_)._field_d.get()._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_1a7739a38_build_sptr_from_type(&_318717_tc, (*_self_)._field_d.get()._field_kind), 6)});
			}
		}
		else {
			_case_begin_1aa0c3622:;
			{
				_1a7700dea_push_err((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_op,jule::Str("unary operator @ is not defined for type @", 42),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_u.get()._field_op.get()._field_kind),jule::Any(_1a7727c8a_to_str((*_self_)._field_d.get()._field_kind.ptr()))}));
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1aa0c4359:;
	};
	(*_self_)._field_d.get()._field_decl=true;
}



inline void _1a771b223_eval_data(_1a7719c9e_UnaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("&", 1)) {
			_case_begin_1aa0c912d:;
			{
				jule::Ptr<_1a77278d3_TypeKind> _320921_prefix = (*_self_)._field_e.get()._field_prefix;;
				(*_self_)._field_e.get()._field_prefix=nullptr;
				(*_self_)._field_d=_1a7719210_eval_expr_kind((*_self_)._field_e, jule::Any((*_self_)._field_u.get()._field_expr));
				(*_self_)._field_e.get()._field_prefix=_320921_prefix;
			}
		}
		else {
			_case_begin_1aa0c88d0:;
			{
				(*_self_)._field_d=_1a7719210_eval_expr_kind((*_self_)._field_e, jule::Any((*_self_)._field_u.get()._field_expr));
			}
		}
		_match_end_1aa0c8c98:;
	};
}



inline jule::Ptr<_1a76edda4_Data> _1a771b4ed_eval(_1a7719c9e_UnaryEval* _self_, jule::Ptr<_1a68582ea_UnaryExpr> _321827_u) {
	(*_self_)._field_u=_321827_u;
	_1a771b223_eval_data(&(*_self_));
	if (((*_self_)._field_d == nullptr)) {
		return nullptr;
	};
	if ((*_self_)._field_d.get()._field_decl) {
		_1a771b047_type_decl(&(*_self_));
		return (*_self_)._field_d;
	};
	jule::Ptr<_1a77278d3_TypeKind> _322913_kind = (*_self_)._field_d.get()._field_kind;;
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1aa0cd440:;
			{
				_1a771a431_minus(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1aa0ccdac:;
			{
				_1a771a60c_plus(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1aa0cce23:;
			{
				_1a771a7d8_caret(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("!", 1)) {
			_case_begin_1aa0cce89:;
			{
				_1a771a9b4_excl(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1aa0cd000:;
			{
				_1a771ab90_star(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1aa0cd5c7:;
			{
				_1a771ad6b_amper(&(*_self_));
			}
		}
		else {
			_case_begin_1aa0cb87d:;
			{
				(*_self_)._field_d=nullptr;
			}
		}
		_match_end_1aa0ccd57:;
	};
	{
		
		if (((*_self_)._field_d == nullptr)) {
			_case_begin_1aa0ca063:;
			{
				_1a7700dea_push_err((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_op,jule::Str("unary operator @ is not defined for type @", 42),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_u.get()._field_op.get()._field_kind),jule::Any(_1a7727c8a_to_str(_322913_kind.ptr()))}));
				return nullptr;
			}
		}
		else if (_1a76ee767_is_const((*_self_)._field_d.ptr())) {
			_case_begin_1aa0cda17:;
			{
				(*_self_)._field_d.get()._field_model=jule::Any((*_self_)._field_d.get()._field_constant);
			}
		}
		_match_end_1aa0cd9b2:;
	};
	(*_self_)._field_d.get()._field_mutable=true;
	return (*_self_)._field_d;
}







std::ostream &operator<<(std::ostream &_Stream, _1a7719c9e_UnaryEval _Src) {
	_Stream << "UnaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "u:" << _Src._field_u;
	_Stream << "}";
	return _Stream;
}



inline _1a771ba3c_BinaryEval static__1a771c0e2_new_plain(jule::Ptr<_1a7700922_Eval> _326729_e) {
	return _1a771ba3c_BinaryEval{._field_e=_326729_e, };
}



inline _1a771ba3c_BinaryEval static__1a771c433_new(jule::Ptr<_1a7700922_Eval> _327323_e, jule::Ptr<_1a527737a_Token> _327337_op) {
	return _1a771ba3c_BinaryEval{._field_e=_327323_e, ._field_op=_327337_op};
}



inline jule::Bool _1a771c6b9_check_type_compatibility(_1a771ba3c_BinaryEval* _self_) {
	return _1a7695db2_check_type_compatibility((*_self_)._field_e.get()._field_s, (*_self_)._field_l.get()._field_kind,(*_self_)._field_r.get()._field_kind,(*_self_)._field_op);
}



inline jule::Bool _1a771c972_check_struct_common_operator_compatibility(_1a771ba3c_BinaryEval* _self_) {
	jule::Ptr<_1a6872c93_FnIns> _328717_overload = nullptr;;
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_1aa0d5a0d:;
			{
				_328717_overload=_1a772ab7d_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_shl;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_1aa0d6a86:;
			{
				_328717_overload=_1a772ab7d_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_shr;
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1aa0d6aec:;
			{
				_328717_overload=_1a772ab7d_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_add;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1aa0d6b63:;
			{
				_328717_overload=_1a772ab7d_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_sub;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1aa0d5777:;
			{
				_328717_overload=_1a772ab7d_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_div;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1aa0d57dd:;
			{
				_328717_overload=_1a772ab7d_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_mul;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1aa0d5854:;
			{
				_328717_overload=_1a772ab7d_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_mod;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1aa0d58ba:;
			{
				_328717_overload=_1a772ab7d_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_bit_and;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_1aa0d6d50:;
			{
				_328717_overload=_1a772ab7d_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_bit_or;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1aa0d6db6:;
			{
				_328717_overload=_1a772ab7d_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_bit_xor;
			}
		}
		else {
			_case_begin_1aa0d526b:;
			{
				_1a7700dea_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1a7727c8a_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return false;
			}
		}
		_match_end_1aa0d56bc:;
	};
	if ((_328717_overload == nullptr)) {
		_1a7700dea_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1a7727c8a_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
		return false;
	};
	jule::Ptr<_1a6871e07_ParamIns> _331917_p = _328717_overload.get()._field_params[1LL];;
	return _1a769593e_check_assign_type((*_self_)._field_e.get()._field_s, _331917_p.get()._field_decl.get()._field_reference,_331917_p.get()._field_kind,(*_self_)._field_r,(*_self_)._field_op);
}



inline jule::Ptr<_1a76edda4_Data> _1a771cc19_eval_nil(_1a771ba3c_BinaryEval* _self_) {
	if ((!(_1a7728ede_nil_compatible((*_self_)._field_r.get()._field_kind.ptr())))) {
		_1a7700dea_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("nil", 3)),jule::Any(_1a7727c8a_to_str((*_self_)._field_r.get()._field_kind.ptr()))}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1aa0e193c:;
			{
				return jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_1a773e554_build_prim_type(jule::Str("bool", 4)), 5)}), });
			}
		}
		else {
			_case_begin_1aa0e0254:;
			{
				_1a7700dea_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(jule::Str("nil", 3))}));
				return nullptr;
			}
		}
		_match_end_1aa0e15a7:;
	};
}



inline jule::Ptr<_1a76edda4_Data> _1a771ce7d_eval_enum(_1a771ba3c_BinaryEval* _self_) {
	jule::Ptr<_1a6982435_Enum> _334417_enm = _1a772a1cc_enm((*_self_)._field_l.get()._field_kind.ptr());;
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1aa0e371e:;
			{
				jule::Ptr<_1a77278d3_TypeKind> _334821_rkind = (*_self_)._field_r.get()._field_kind;;
				if ((_1a772a1cc_enm((*_self_)._field_r.get()._field_kind.ptr()) != nullptr)) {
					_334821_rkind=_1a772a1cc_enm((*_self_)._field_r.get()._field_kind.ptr()).get()._field_kind.get()._field_kind;
				};
				if ((!(_1a7695db2_check_type_compatibility((*_self_)._field_e.get()._field_s, _334417_enm.get()._field_kind.get()._field_kind,_334821_rkind,(*_self_)._field_op)))) {
					return nullptr;
				};
				return jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_1a773e554_build_prim_type(jule::Str("bool", 4)), 5)}), });
			}
		}
		_match_end_1aa0e3e4a:;
	};
	if (((_1a772a1cc_enm((*_self_)._field_r.get()._field_kind.ptr()) == nullptr) || (_334417_enm != _1a772a1cc_enm((*_self_)._field_r.get()._field_kind.ptr())))) {
		_1a7700dea_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_334417_enm.get()._field_ident),jule::Any(_1a7727c8a_to_str((*_self_)._field_r.get()._field_kind.ptr()))}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1aa0e8966:;
			{
				if ((!(_1a766c460_is_num(_1a7727c8a_to_str(_334417_enm.get()._field_kind.get()._field_kind.ptr()))))) {
					_1a7700dea_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_334417_enm.get()._field_ident)}));
					return nullptr;
				};
				return jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_1a773e554_build_prim_type(jule::Str("bool", 4)), 5)}), });
			}
		}
		else if (_match_expr == jule::Str("&", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1aa0e989b:;
			{
				if (((_1a7729990_prim(_334417_enm.get()._field_kind.get()._field_kind.ptr()) == nullptr) || (!(_1a766bdcc_is_int(_1a772c498_to_str(_1a7729990_prim(_334417_enm.get()._field_kind.get()._field_kind.ptr()).ptr())))))) {
					_1a7700dea_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_334417_enm.get()._field_ident)}));
				};
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_1aa0e7bb8:;
			{
				_1a7700dea_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_334417_enm.get()._field_ident)}));
				return nullptr;
			}
		}
		_match_end_1aa0e85d1:;
	};
}



inline jule::Ptr<_1a76edda4_Data> _1a771d1e2_eval_sptr(_1a771ba3c_BinaryEval* _self_) {
	if ((!(_1a771c6b9_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1aa0eeb26:;
			{
				return jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_1a773e554_build_prim_type(jule::Str("bool", 4)), 5)}), });
			}
		}
		else {
			_case_begin_1aa0ee5d7:;
			{
				_1a7700dea_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1a7727c8a_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1aa0ee1db:;
	};
}



inline jule::Ptr<_1a76edda4_Data> _1a771d456_eval_ptr(_1a771ba3c_BinaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_1aa10209b:;
			{
				if ((!(_1a771c6b9_check_type_compatibility(&(*_self_))))) {
					return nullptr;
				};
				return jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_1a773e554_build_prim_type(jule::Str("bool", 4)), 5)}), });
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1)) {
			_case_begin_1aa1032ab:;
			{
				if ((_1a7729e68_ptr((*_self_)._field_l.get()._field_kind.ptr()) == nullptr)) {
					std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				};
				if (_1a773467b_is_unsafe(_1a7729e68_ptr((*_self_)._field_l.get()._field_kind.ptr()).ptr())) {
					_1a7700dea_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1a7727c8a_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				};
				if ((!(_1a7723e95_is_ptr_arithmetic_compatible_int((*_self_)._field_r)))) {
					_1a7700dea_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("type @ is incompatible to use for pointer arithmetic", 52),jule::Slice<jule::Any>::make({jule::Any(_1a7727c8a_to_str((*_self_)._field_r.get()._field_kind.ptr()))}));
					return nullptr;
				};
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_1aa100e13:;
			{
				_1a7700dea_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1a7727c8a_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1aa101c16:;
	};
}



inline jule::Ptr<_1a76edda4_Data> _1a771d6ba_eval_arr(_1a771ba3c_BinaryEval* _self_) {
	if ((!(_1a771c6b9_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1aa108e4e:;
			{
				return jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_1a773e554_build_prim_type(jule::Str("bool", 4)), 5)}), });
			}
		}
		else {
			_case_begin_1aa108624:;
			{
				_1a7700dea_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1a7727c8a_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1aa1085be:;
	};
}



inline jule::Ptr<_1a76edda4_Data> _1a771d92e_eval_slc(_1a771ba3c_BinaryEval* _self_) {
	if ((!(_1a771c6b9_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1aa10b8be:;
			{
				return jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_1a773e554_build_prim_type(jule::Str("bool", 4)), 5)}), });
			}
		}
		else {
			_case_begin_1aa10b094:;
			{
				_1a7700dea_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1a7727c8a_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1aa10b03e:;
	};
}



inline jule::Ptr<_1a76edda4_Data> _1a771db93_eval_fn(_1a771ba3c_BinaryEval* _self_) {
	if ((!(_1a771c6b9_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1aa11419b:;
			{
				return jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_1a773e554_build_prim_type(jule::Str("bool", 4)), 5)}), });
			}
		}
		else {
			_case_begin_1aa113871:;
			{
				_1a7700dea_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1a7727c8a_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1aa11381b:;
	};
}



inline jule::Ptr<_1a76edda4_Data> _1a771de07_eval_struct(_1a771ba3c_BinaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str(">", 1)) {
			_case_begin_1aa116368:;
			{
				if ((_1a772ab7d_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_gt == nullptr)) {
					_1a7700dea_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1a7727c8a_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
					return nullptr;
				};
				return jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_1a773e554_build_prim_type(jule::Str("bool", 4)), 5)}), });
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_1aa1163ce:;
			{
				if ((_1a772ab7d_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_gt_eq == nullptr)) {
					_1a7700dea_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1a7727c8a_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
					return nullptr;
				};
				return jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_1a773e554_build_prim_type(jule::Str("bool", 4)), 5)}), });
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_1aa116445:;
			{
				if ((_1a772ab7d_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_lt == nullptr)) {
					_1a7700dea_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1a7727c8a_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
					return nullptr;
				};
				return jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_1a773e554_build_prim_type(jule::Str("bool", 4)), 5)}), });
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_1aa1164bc:;
			{
				if ((_1a772ab7d_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_lt_eq == nullptr)) {
					_1a7700dea_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1a7727c8a_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
					return nullptr;
				};
				return jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_1a773e554_build_prim_type(jule::Str("bool", 4)), 5)}), });
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1aa116544:;
			{
				if ((!(_1a771c6b9_check_type_compatibility(&(*_self_))))) {
					return nullptr;
				};
				return jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_1a773e554_build_prim_type(jule::Str("bool", 4)), 5)}), });
			}
		}
		_match_end_1aa1162ad:;
	};
	if ((!(_1a771c972_check_struct_common_operator_compatibility(&(*_self_))))) {
		return nullptr;
	};
	return (*_self_)._field_l;
}



inline jule::Ptr<_1a76edda4_Data> _1a771e16b_eval_trait(_1a771ba3c_BinaryEval* _self_) {
	if ((!(_1a771c6b9_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1aa121c36:;
			{
				return jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_1a773e554_build_prim_type(jule::Str("bool", 4)), 5)}), });
			}
		}
		else {
			_case_begin_1aa12173b:;
			{
				_1a7700dea_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1a7727c8a_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1aa121384:;
	};
}



inline jule::Ptr<_1a76edda4_Data> _1a771e3d0_eval_any(_1a771ba3c_BinaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1aa1241cd:;
			{
				return jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_1a773e554_build_prim_type(jule::Str("bool", 4)), 5)}), });
			}
		}
		else {
			_case_begin_1aa1233a8:;
			{
				_1a7700dea_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(jule::Str("any", 3))}));
				return nullptr;
			}
		}
		_match_end_1aa123d48:;
	};
}



inline jule::Ptr<_1a76edda4_Data> _1a771e644_eval_bool(_1a771ba3c_BinaryEval* _self_) {
	if ((!(_1a771c6b9_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("&&", 2) || _match_expr == jule::Str("||", 2)) {
			_case_begin_1aa1268ea:;
			{
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_1aa1260c0:;
			{
				_1a7700dea_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1a7727c8a_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1aa12606a:;
	};
}



inline jule::Ptr<_1a76edda4_Data> _1a771e8a8_eval_str(_1a771ba3c_BinaryEval* _self_) {
	jule::Str _361717_rk = _1a7727c8a_to_str((*_self_)._field_r.get()._field_kind.ptr());;
	if ((_361717_rk != jule::Str("str", 3))) {
		_1a7700dea_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_361717_rk)}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1aa129e92:;
			{
				return (*_self_)._field_l;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1aa12a008:;
			{
				return jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_1a773e554_build_prim_type(jule::Str("bool", 4)), 5)}), });
			}
		}
		else {
			_case_begin_1aa128cc6:;
			{
				_1a7700dea_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(jule::Str("str", 3))}));
				return nullptr;
			}
		}
		_match_end_1aa129d4e:;
	};
}



inline void _1a771ea84_set_type_to_greater(_1a771ba3c_BinaryEval* _self_) {
	if (_1a76ee767_is_const((*_self_)._field_l.ptr())) {
		if ((!(_1a76ee767_is_const((*_self_)._field_r.ptr())))) {
			(*_self_)._field_l.get()._field_kind=(*_self_)._field_r.get()._field_kind;
			return;;
		};
		goto _julec_label_set;
	};
	if (_1a76ee767_is_const((*_self_)._field_r.ptr())) {
		return;;
	};
	_julec_label_set:;
	if (_1a766a727_is_greater(_1a7729990_prim((*_self_)._field_r.get()._field_kind.ptr()).get()._field_kind,_1a7729990_prim((*_self_)._field_l.get()._field_kind.ptr()).get()._field_kind)) {
		(*_self_)._field_l.get()._field_kind=(*_self_)._field_r.get()._field_kind;
	};
}



inline void _1a771ecc6_check_mod_data(_1a771ba3c_BinaryEval* _self_, jule::Ptr<_1a76edda4_Data>& _366038_d) {
	if ((!(_1a76ee767_is_const(_366038_d.ptr())))) {
		if (((_1a7729990_prim(_366038_d.get()._field_kind.ptr()) == nullptr) || (!(_1a766bdcc_is_int(_1a7729990_prim(_366038_d.get()._field_kind.ptr()).get()._field_kind))))) {
			_1a7700dea_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>());
		};
		return;;
	};
	{
		
		if (_1a76d9c5d_sig_assignable(jule::Str("i64", 3),_366038_d)) {
			_case_begin_1aa132c69:;
			{
				_1a75c593a_set_i64(_366038_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1a75c51dc_as_i64(_366038_d.get()._field_constant.ptr())));
			}
		}
		else if (_1a76d9d90_unsig_assignable(jule::Str("u64", 3),_366038_d)) {
			_case_begin_1aa13298e:;
			{
				_1a75c5bb0_set_u64(_366038_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1a75c5451_as_u64(_366038_d.get()._field_constant.ptr())));
			}
		}
		else {
			_case_begin_1aa132928:;
			{
				_1a7700dea_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>());
			}
		}
		_match_end_1aa131064:;
	};
}



inline void _1a771eea2_mod(_1a771ba3c_BinaryEval* _self_) {
	_1a771ecc6_check_mod_data(&(*_self_), (*_self_)._field_l);
	_1a771ecc6_check_mod_data(&(*_self_), (*_self_)._field_r);
}



inline jule::Bool _1a772037b_numbers_are_compatibile(_1a771ba3c_BinaryEval* _self_, jule::Str& _368239_lk, jule::Str& _368249_rk) {
	if ((!(_1a766c460_is_num(_368249_rk)))) {
		return false;
	};
	if (_1a76ee767_is_const((*_self_)._field_l.ptr())) {
		return true;
	};
	if ((_368239_lk == jule::Str("f32", 3))) {
		if (_1a76ee767_is_const((*_self_)._field_r.ptr())) {
			return true;
		};
		return (_368249_rk == jule::Str("f32", 3));
	};
	if ((_368239_lk == jule::Str("f64", 3))) {
		if (_1a76ee767_is_const((*_self_)._field_r.ptr())) {
			return true;
		};
		return (_368249_rk == jule::Str("f64", 3));
	};
	if (_1a76ee767_is_const((*_self_)._field_r.ptr())) {
		return true;
	};
	return (_368239_lk == _368249_rk);
}



inline jule::Ptr<_1a76edda4_Data> _1a7720601_eval_float(_1a771ba3c_BinaryEval* _self_) {
	jule::Str _371213_lk = _1a7729990_prim((*_self_)._field_l.get()._field_kind.ptr()).get()._field_kind;;
	jule::Str _371313_rk = _1a7729990_prim((*_self_)._field_r.get()._field_kind.ptr()).get()._field_kind;;
	if ((!(_1a772037b_numbers_are_compatibile(&(*_self_), _371213_lk,_371313_rk)))) {
		_1a7700dea_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_371213_lk),jule::Any(_371313_rk)}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_1aa13a535:;
			{
				if (((!(_1a76ee767_is_const((*_self_)._field_l.ptr()))) || (!(_1a76d9ec2_int_assignable(jule::Str("i64", 3),(*_self_)._field_l))))) {
					_1a7700dea_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_371213_lk),jule::Any(_371313_rk)}));
					return nullptr;
				};
				if (((!(_1a76ee767_is_const((*_self_)._field_r.ptr()))) || (!(_1a76d9ec2_int_assignable(jule::Str("u64", 3),(*_self_)._field_r))))) {
					_1a7700dea_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_371213_lk),jule::Any(_371313_rk)}));
					return nullptr;
				};
				_1a75c593a_set_i64((*_self_)._field_l.get()._field_constant.ptr(), static_cast<jule::I64>(_1a75c51dc_as_i64((*_self_)._field_l.get()._field_constant.ptr())));
				_1a75c5bb0_set_u64((*_self_)._field_r.get()._field_constant.ptr(), static_cast<jule::U64>(_1a75c5451_as_u64((*_self_)._field_r.get()._field_constant.ptr())));
				if ((!(_1a772388a_is_ok_for_shifting((*_self_)._field_r)))) {
					_1a7700dea_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>());
					return nullptr;
				};
				return (*_self_)._field_l;
			}
		}
		_match_end_1aa13b68a:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1aa141cab:;
			{
				return jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_1a773e554_build_prim_type(jule::Str("bool", 4)), 5)}), });
			}
		}
		_match_end_1aa140e53:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1)) {
			_case_begin_1aa143cad:;
			{
				_1a771ea84_set_type_to_greater(&(*_self_));
				return (*_self_)._field_l;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1aa143bc0:;
			{
				if ((!(_1a766bdcc_is_int(_371313_rk)))) {
					_1a7700dea_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_371213_lk),jule::Any(_371313_rk)}));
					return nullptr;
				};
				_1a771eea2_mod(&(*_self_));
				return (*_self_)._field_r;
			}
		}
		else {
			_case_begin_1aa141dcc:;
			{
				_1a7700dea_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for floating-point type(s)", 52),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1aa14252b:;
	};
}



inline jule::Ptr<_1a76edda4_Data> _1a7720865_eval_int(_1a771ba3c_BinaryEval* _self_) {
	jule::Str _377613_lk = _1a7729990_prim((*_self_)._field_l.get()._field_kind.ptr()).get()._field_kind;;
	jule::Str _377713_rk = _1a7729990_prim((*_self_)._field_r.get()._field_kind.ptr()).get()._field_kind;;
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_1aa146b18:;
			{
				if (((!(_1a766bdcc_is_int(_377613_lk))) || (!(_1a766bdcc_is_int(_377713_rk))))) {
					_1a7700dea_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_377613_lk),jule::Any(_377713_rk)}));
					return nullptr;
				};
				if ((!(_1a772388a_is_ok_for_shifting((*_self_)._field_r)))) {
					_1a7700dea_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>());
					return nullptr;
				};
				return (*_self_)._field_l;
			}
		}
		_match_end_1aa147388:;
	};
	if ((!(_1a772037b_numbers_are_compatibile(&(*_self_), _377613_lk,_377713_rk)))) {
		_1a7700dea_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_377613_lk),jule::Any(_377713_rk)}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1aa14ab50:;
			{
				return jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_1a773e554_build_prim_type(jule::Str("bool", 4)), 5)}), });
			}
		}
		_match_end_1aa14aad9:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str("&", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1aa14ce4e:;
			{
				_1a771ea84_set_type_to_greater(&(*_self_));
				return (*_self_)._field_l;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1aa14cd61:;
			{
				_1a771eea2_mod(&(*_self_));
				_1a771ea84_set_type_to_greater(&(*_self_));
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_1aa14ac60:;
			{
				_1a7700dea_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for integer type(s)", 45),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1aa14b8ed:;
	};
}



inline jule::Ptr<_1a76edda4_Data> _1a7720ac9_eval_prim(_1a771ba3c_BinaryEval* _self_) {
	jule::Ptr<_1a772c135_Prim> _383513_prim = _1a7729990_prim((*_self_)._field_l.get()._field_kind.ptr());;
	{
		
		if (_1a772ed80_is_bool(_383513_prim.ptr())) {
			_case_begin_1aa15047e:;
			{
				return _1a771e644_eval_bool(&(*_self_));
			}
		}
		else if (_1a77300e4_is_str(_383513_prim.ptr())) {
			_case_begin_1aa150506:;
			{
				return _1a771e8a8_eval_str(&(*_self_));
			}
		}
		_match_end_1aa1503b3:;
	};
	if ((_1a7729990_prim((*_self_)._field_r.get()._field_kind.ptr()) == nullptr)) {
		_1a7700dea_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1a772c498_to_str(_383513_prim.ptr())),jule::Any(_1a7727c8a_to_str((*_self_)._field_r.get()._field_kind.ptr()))}));
		return nullptr;
	};
	{
		
		if (_1a766c1b8_is_float(_383513_prim.get()._field_kind)) {
			_case_begin_1aa1530b9:;
			{
				return _1a7720601_eval_float(&(*_self_));
			}
		}
		else if (_1a766bdcc_is_int(_383513_prim.get()._field_kind)) {
			_case_begin_1aa153174:;
			{
				return _1a7720865_eval_int(&(*_self_));
			}
		}
		else {
			_case_begin_1aa1512c6:;
			{
				return nullptr;
			}
		}
		_match_end_1aa152915:;
	};
}



inline jule::Ptr<_1a76edda4_Data> _1a7720d3d_eval_op(_1a771ba3c_BinaryEval* _self_) {
	{
		
		if (_1a7728a16_void((*_self_)._field_l.get()._field_kind.ptr())) {
			_case_begin_1aa1549c2:;
			{
				_1a7700dea_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(jule::Str("void", 4))}));
				return nullptr;
			}
		}
		else if (((_1a7729990_prim((*_self_)._field_r.get()._field_kind.ptr()) != nullptr) && _1a7730358_is_any(_1a7729990_prim((*_self_)._field_r.get()._field_kind.ptr()).ptr()))) {
			_case_begin_1aa154ab0:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1aa154b26;
			}
		}
		else if (((_1a7729990_prim((*_self_)._field_l.get()._field_kind.ptr()) != nullptr) && _1a7730358_is_any(_1a7729990_prim((*_self_)._field_l.get()._field_kind.ptr()).ptr()))) {
			_case_begin_1aa154b26:;
			{
				return _1a771e3d0_eval_any(&(*_self_));
			}
		}
		else if (_1a77287a2_is_nil((*_self_)._field_l.get()._field_kind.ptr())) {
			_case_begin_1aa154450:;
			{
				return _1a771cc19_eval_nil(&(*_self_));
			}
		}
		else if ((_1a772a1cc_enm((*_self_)._field_r.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aa1544b6:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1aa15452c;
			}
		}
		else if ((_1a772a1cc_enm((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aa15452c:;
			{
				return _1a771ce7d_eval_enum(&(*_self_));
			}
		}
		else if ((_1a7729c04_sptr((*_self_)._field_r.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aa154593:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1aa154b9d;
			}
		}
		else if ((_1a7729c04_sptr((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aa154b9d:;
			{
				return _1a771d1e2_eval_sptr(&(*_self_));
			}
		}
		else if ((_1a7729e68_ptr((*_self_)._field_r.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aa154c14:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1aa154c7a;
			}
		}
		else if ((_1a7729e68_ptr((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aa154c7a:;
			{
				return _1a771d456_eval_ptr(&(*_self_));
			}
		}
		else if ((_1a772a441_arr((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aa154ce1:;
			{
				return _1a771d6ba_eval_arr(&(*_self_));
			}
		}
		else if ((_1a772a6a5_slc((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aa154d68:;
			{
				return _1a771d92e_eval_slc(&(*_self_));
			}
		}
		else if ((_1a772a919_fnc((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aa154de0:;
			{
				return _1a771db93_eval_fn(&(*_self_));
			}
		}
		else if ((_1a772ade2_trt((*_self_)._field_r.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aa154e67:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1aa154ede;
			}
		}
		else if ((_1a772ade2_trt((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aa154ede:;
			{
				return _1a771e16b_eval_trait(&(*_self_));
			}
		}
		else if ((_1a772ab7d_strct((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aa155066:;
			{
				return _1a771de07_eval_struct(&(*_self_));
			}
		}
		else if ((_1a7729990_prim((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aa1550dd:;
			{
				return _1a7720ac9_eval_prim(&(*_self_));
			}
		}
		else {
			_case_begin_1aa1543d9:;
			{
				return nullptr;
			}
		}
		_match_end_1aa15431d:;
	};
}



inline void _1a77210b3_eval_const(_1a771ba3c_BinaryEval* _self_, jule::Ptr<_1a76edda4_Data>& _390534_d) {
	{
		
		if ((_390534_d == nullptr)) {
			_case_begin_1aa1637c2:;
			{
				return;;
			}
		}
		else if ((!(_1a76ee767_is_const((*_self_)._field_l.ptr()))) || (!(_1a76ee767_is_const((*_self_)._field_r.ptr())))) {
			_case_begin_1aa163849:;
			{
				_390534_d.get()._field_constant=nullptr;
				return;;
			}
		}
		_match_end_1aa1636b2:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_1aa164817:;
			{
				_390534_d.get()._field_constant=static__1a75c3691_new_bool(((*((*_self_)._field_l.get()._field_constant)) == (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_1aa1648d3:;
			{
				_390534_d.get()._field_constant=static__1a75c3691_new_bool(((*((*_self_)._field_l.get()._field_constant)) != (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_1aa164dcd:;
			{
				_390534_d.get()._field_constant=static__1a75c3691_new_bool(_1a75c7eae_or((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1aa164e44:;
			{
				_390534_d.get()._field_constant=static__1a75c3691_new_bool(_1a75c7ba1_and((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str(">", 1)) {
			_case_begin_1aa164eaa:;
			{
				_390534_d.get()._field_constant=static__1a75c3691_new_bool(((*((*_self_)._field_l.get()._field_constant)) > (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_1aa165021:;
			{
				_390534_d.get()._field_constant=static__1a75c3691_new_bool(((*((*_self_)._field_l.get()._field_constant)) < (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_1aa165098:;
			{
				_390534_d.get()._field_constant=static__1a75c3691_new_bool(((*((*_self_)._field_l.get()._field_constant)) >= (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_1aa165120:;
			{
				_390534_d.get()._field_constant=static__1a75c3691_new_bool(((*((*_self_)._field_l.get()._field_constant)) <= (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1aa165197:;
			{
				_1a75c9312_add((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_390534_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1aa16521e:;
			{
				_1a75c9620_sub((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_390534_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1aa165296:;
			{
				_1a75c992d_mul((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_390534_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1aa16531d:;
			{
				jule::Bool _394217_ok = _1a75c9c3b_div((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));;
				if (((!(_394217_ok)) && (_1a75c56b5_as_f64((*_self_)._field_r.get()._field_constant.ptr()) == 0LL))) {
					_1a7700dea_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>());
				};
				_390534_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
				jule::Ptr<_1a772c135_Prim> _394721_prim = _1a7729990_prim(_390534_d.get()._field_kind.ptr());;
				{
					
					if (_1a766b849_is_sig_int(_394721_prim.get()._field_kind)) {
						_case_begin_1aa172281:;
						{
							_1a75c593a_set_i64(_390534_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1a75c51dc_as_i64(_390534_d.get()._field_constant.ptr())));
						}
					}
					else if (_1a766bb35_is_unsig_int(_394721_prim.get()._field_kind)) {
						_case_begin_1aa172308:;
						{
							_1a75c5bb0_set_u64(_390534_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1a75c5451_as_u64(_390534_d.get()._field_constant.ptr())));
						}
					}
					_match_end_1aa1721b5:;
				};
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1aa165395:;
			{
				jule::Bool _395517_ok = _1a75ca049_mod((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));;
				if (((!(_395517_ok)) && (_1a75c56b5_as_f64((*_self_)._field_r.get()._field_constant.ptr()) == 0LL))) {
					_1a7700dea_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>());
				};
				_390534_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_1aa16541c:;
			{
				_1a75ca665_bitwise_or((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_390534_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1aa165494:;
			{
				_1a75ca357_bitwise_and((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_390534_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1aa16551b:;
			{
				_1a75ca973_xor((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_390534_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_1aa165593:;
			{
				_1a75cac81_lshift((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_390534_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_1aa16561a:;
			{
				_1a75cb08e_rshift((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_390534_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		_match_end_1aa16465d:;
	};
	_1a7724ca9_apply_cast_model_by_enum(_390534_d,_1a772a1cc_enm(_390534_d.get()._field_kind.ptr()));
	jule::Ptr<_1a772c135_Prim> _397917_prim = _1a7729990_prim(_390534_d.get()._field_kind.ptr());;
	if (((_397917_prim == nullptr) || (!(_1a766c460_is_num(_1a772c498_to_str(_397917_prim.ptr())))))) {
		_390534_d.get()._field_model=jule::Any(_390534_d.get()._field_constant);
		return;;
	};
	if ((((*_self_)._field_op.get()._field_kind != jule::Str("<<", 2)) && ((*_self_)._field_op.get()._field_kind != jule::Str(">>", 2)))) {
		if ((((*_self_)._field_l.get()._field_model == (*_self_)._field_l.get()._field_constant) && ((*_self_)._field_r.get()._field_model != (*_self_)._field_r.get()._field_constant))) {
			_390534_d.get()._field_kind=(*_self_)._field_r.get()._field_kind;
			_397917_prim=_1a7729990_prim(_390534_d.get()._field_kind.ptr());
		};
	};
	_1a7722b64_fit_bitsize(_390534_d);
	_1a7725073_cast_const_by_type(_397917_prim.get()._field_kind,_390534_d);
}



inline void _1a7721338_check_data(_1a771ba3c_BinaryEval* _self_, jule::Ptr<_1a76edda4_Data>& _399534_d) {
	jule::Ptr<_1a6872c93_FnIns> _399613_f = _1a772a919_fnc(_399534_d.get()._field_kind.ptr());;
	if ((((_399613_f != nullptr) && (_399613_f.get()._field_decl != nullptr)) && _1a684ce27_is_method(_399613_f.get()._field_decl.ptr()))) {
		_1a7700dea_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("invalid expression used for binary operation", 44),jule::Slice<jule::Any>());
	};
}



inline void _1a7721514_check_datas(_1a771ba3c_BinaryEval* _self_) {
	_1a7721338_check_data(&(*_self_), (*_self_)._field_l);
	_1a7721338_check_data(&(*_self_), (*_self_)._field_r);
}



inline void _1a7721789_set_model(_1a771ba3c_BinaryEval* _self_, jule::Ptr<_1a76edda4_Data>& _400733_d) {
	if (_1a76ee767_is_const(_400733_d.ptr())) {
		if ((((*_self_)._field_l.get()._field_model == (*_self_)._field_l.get()._field_constant) && ((*_self_)._field_r.get()._field_model == (*_self_)._field_r.get()._field_constant))) {
			return;;
		};
	};
	jule::Ptr<_1a76edda4_Data> _401518_l = (*_self_)._field_l;;
	jule::Ptr<_1a76edda4_Data> _401525_r = (*_self_)._field_r;;
	std::tie(_401518_l,_401525_r) = std::make_tuple((*_self_)._field_l,(*_self_)._field_r);
	if ((!(_1a76eea75_good_operand(_401518_l.ptr(), _401525_r)))) {
		std::tie(_401518_l,_401525_r) = std::make_tuple(_401525_r,_401518_l);
	};
	_400733_d.get()._field_model=jule::Any(jule::new_ptr<_1a684b145_BinopExprModel>(_1a684b145_BinopExprModel{._field_left=jule::new_ptr<_1a68382db_OperandExprModel>(_1a68382db_OperandExprModel{._field_kind=_401518_l.get()._field_kind, ._field_model=jule::Any(_401518_l.get()._field_model)}), ._field_right=jule::new_ptr<_1a68382db_OperandExprModel>(_1a68382db_OperandExprModel{._field_kind=_401525_r.get()._field_kind, ._field_model=jule::Any(_401525_r.get()._field_model)}), ._field_op=(*_self_)._field_op}));
}



inline void _1a7721a0e_post_eval(_1a771ba3c_BinaryEval* _self_, jule::Ptr<_1a76edda4_Data>& _403333_d) {
	_403333_d.get()._field_lvalue=false;
	_1a7721789_set_model(&(*_self_), _403333_d);
}



inline jule::Ptr<_1a76edda4_Data> _1a7721db6_solve_explicit(_1a771ba3c_BinaryEval* _self_, jule::Ptr<_1a76edda4_Data>& _403838_l, jule::Ptr<_1a76edda4_Data>& _403853_r) {
	std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple(_403838_l,_403853_r);
	_1a7721514_check_datas(&(*_self_));
	jule::Ptr<_1a76edda4_Data> _404317_d = _1a7720d3d_eval_op(&(*_self_));;
	std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple(_403838_l,_403853_r);
	_1a77210b3_eval_const(&(*_self_), _404317_d);
	if ((_404317_d != nullptr)) {
		_404317_d.get()._field_mutable=true;
		_1a7721a0e_post_eval(&(*_self_), _404317_d);
	};
	return _404317_d;
}



inline jule::Ptr<_1a76edda4_Data> _1a77221c4_eval(_1a771ba3c_BinaryEval* _self_, jule::Ptr<_1a6859807_BinopExpr>& _405828_op) {
	if ((_405828_op.get()._field_op.get()._field_kind == jule::Str("=", 1))) {
		_1a7700dea_push_err((*_self_)._field_e.ptr(), _405828_op.get()._field_op,jule::Str("assignments not available for expressions", 41),jule::Slice<jule::Any>());
		_1a7701219_push_suggestion((*_self_)._field_e.ptr(), jule::Str("use clear imperative approach, comes relevant assignment statement before the expression", 88),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1a76edda4_Data> _406517_l = _1a7719210_eval_expr_kind((*_self_)._field_e, jule::Any(_405828_op.get()._field_left));;
	if (((_406517_l == nullptr) || (_406517_l.get()._field_kind == nullptr))) {
		return nullptr;
	};
	jule::Ptr<_1a77278d3_TypeKind> _407017_prefix = (*_self_)._field_e.get()._field_prefix;;
	(*_self_)._field_e.get()._field_prefix=_406517_l.get()._field_kind;
	__JULE_DEFER({
		(*_self_)._field_e.get()._field_prefix=_407017_prefix;
	});;
	jule::Ptr<_1a76edda4_Data> _407317_r = _1a7719210_eval_expr_kind((*_self_)._field_e, jule::Any(_405828_op.get()._field_right));;
	if (((_407317_r == nullptr) || (_407317_r.get()._field_kind == nullptr))) {
		return nullptr;
	};
	(*_self_)._field_op=_405828_op.get()._field_op;
	jule::Ptr<_1a76edda4_Data> _408017_d = _1a7721db6_solve_explicit(&(*_self_), _406517_l,_407317_r);;
	if ((((_408017_d != nullptr) && _406517_l.get()._field_is_rune) && _407317_r.get()._field_is_rune)) {
		_408017_d.get()._field_is_rune=true;
	};
	return _408017_d;
}







std::ostream &operator<<(std::ostream &_Stream, _1a771ba3c_BinaryEval _Src) {
	_Stream << "BinaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a7726b9b_TypeAlias _Src) {
	_Stream << "TypeAlias{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "generic:" << _Src._field_generic << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "generics:" << _Src._field_generics;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a7727c8a_to_str(_1a77278d3_TypeKind* _self_) {
	if (_1a77287a2_is_nil(&(*_self_))) {
		return jule::Str("nil", 3);
	};
	jule::Str _6717_kind = jule::Str();;
	if ((*_self_)._field_variadic) {
		_6717_kind+=jule::Str("...", 3);
	};
	if (_1a772853d_cpp_linked(&(*_self_))) {
		_6717_kind+=jule::Str("cpp.", 4);
		_6717_kind+=(*_self_)._field_cpp_ident;
	} else {
		_6717_kind+=_1a77274a4_Kind_mptr_data[((*_self_)._field_kind).type_offset]._1a7727053_to_str((*_self_)._field_kind);
	};
	return _6717_kind;
}



inline jule::Bool _1a7728098_equals(jule::Ptr<_1a77278d3_TypeKind> _self_, jule::Ptr<_1a77278d3_TypeKind> _8326_other) {
	if (_1a77287a2_is_nil(_self_.ptr())) {
		return _1a77287a2_is_nil(_8326_other.ptr());
	};
	if (_1a772853d_cpp_linked(_self_.ptr())) {
		return (_1a772853d_cpp_linked(_8326_other.ptr()) && (_self_.get()._field_cpp_ident == _8326_other.get()._field_cpp_ident));
	};
	return _1a77274a4_Kind_mptr_data[(_self_.get()._field_kind).type_offset]._1a7727361_equals(_self_.get()._field_kind, _8326_other);
}



inline jule::Bool _1a772853d_cpp_linked(_1a77278d3_TypeKind* _self_) {
	return ((*_self_)._field_cpp_ident.len() != 0LL);
}



inline jule::Bool _1a77287a2_is_nil(_1a77278d3_TypeKind* _self_) {
	return ((*_self_)._field_kind == nullptr);
}



inline jule::Bool _1a7728a16_void(_1a77278d3_TypeKind* _self_) {
	jule::Ptr<_1a772c135_Prim> _10613_prim = _1a7729990_prim(&(*_self_));;
	return ((_10613_prim != nullptr) && (_10613_prim.get()._field_kind == jule::Str("void", 4)));
}



inline jule::Bool _1a7728c7a_mutable(_1a77278d3_TypeKind* _self_) {
	{
		_1a77278d3_TypeKind* _11321__self = (&((*_self_)));;
		if ((_1a772ab7d_strct(_11321__self) != nullptr)) {
			return _1a772ab7d_strct(_11321__self).get()._field_mutable;
		};
		if ((_1a772ade2_trt(_11321__self) != nullptr)) {
			return _1a772ade2_trt(_11321__self).get()._field_mutable;
		};
		if ((_1a7729990_prim(_11321__self) != nullptr)) {
			jule::Ptr<_1a772c135_Prim> _12221_p = _1a7729990_prim(_11321__self);;
			return _1a7730358_is_any(_12221_p.ptr());
		};
		if ((_1a772a441_arr(_11321__self) != nullptr)) {
			return _1a7728c7a_mutable(_1a772a441_arr(_11321__self).get()._field_elem.ptr());
		};
		return (((_1a772a6a5_slc(_11321__self) != nullptr) || (_1a7729e68_ptr(_11321__self) != nullptr)) || (_1a7729c04_sptr(_11321__self) != nullptr));
	};
}



inline jule::Bool _1a7728ede_nil_compatible(_1a77278d3_TypeKind* _self_) {
	{
		_1a77278d3_TypeKind* _13721__self = (&((*_self_)));;
		jule::Ptr<_1a772c135_Prim> _13917_prim = _1a7729990_prim(_13721__self);;
		if (((_13917_prim != nullptr) && _1a7730358_is_any(_13917_prim.ptr()))) {
			return true;
		};
		return ((((((_1a77287a2_is_nil(_13721__self) || (_1a772a919_fnc(_13721__self) != nullptr)) || (_1a7729c04_sptr(_13721__self) != nullptr)) || (_1a7729e68_ptr(_13721__self) != nullptr)) || (_1a772ade2_trt(_13721__self) != nullptr)) || (_1a772a6a5_slc(_13721__self) != nullptr)) || (_1a772b156_map(_13721__self) != nullptr));
	};
}



inline jule::Bool _1a7729253_performs_rc(_1a77278d3_TypeKind* _self_) {
	{
		_1a77278d3_TypeKind* _15721__self = (&((*_self_)));;
		return (((_1a7729c04_sptr(_15721__self) != nullptr) || (_1a772a6a5_slc(_15721__self) != nullptr)) || (_1a772ade2_trt(_15721__self) != nullptr));
	};
}



inline jule::Bool _1a77294b7_supports_cloning(_1a77278d3_TypeKind* _self_) {
	{
		_1a77278d3_TypeKind* _16521__self = (&((*_self_)));;
		{
			
			if ((_1a7729990_prim(_16521__self) != nullptr)) {
				_case_begin_1aa1c6637:;
				{
					return (!(_1a7730358_is_any(_1a7729990_prim(_16521__self).ptr())));
				}
			}
			else if ((_1a772a1cc_enm(_16521__self) != nullptr)) {
				_case_begin_1aa1c669d:;
				{
					return true;
				}
			}
			else if ((_1a772a919_fnc(_16521__self) != nullptr)) {
				_case_begin_1aa1c63a1:;
				{
					return true;
				}
			}
			else if ((_1a7729e68_ptr(_16521__self) != nullptr)) {
				_case_begin_1aa1c6417:;
				{
					return true;
				}
			}
			else if ((_1a772a6a5_slc(_16521__self) != nullptr)) {
				_case_begin_1aa1c647d:;
				{
					return _1a77294b7_supports_cloning(_1a772a6a5_slc(_16521__self).get()._field_elem.ptr());
				}
			}
			else if ((_1a772b156_map(_16521__self) != nullptr)) {
				_case_begin_1aa1c5ea5:;
				{
					jule::Ptr<_1a7732657_Map> _17821_m = _1a772b156_map(_16521__self);;
					return (_1a77294b7_supports_cloning(_17821_m.get()._field_key.ptr()) && _1a77294b7_supports_cloning(_17821_m.get()._field_val.ptr()));
				}
			}
			else if ((_1a772a441_arr(_16521__self) != nullptr)) {
				_case_begin_1aa1c601b:;
				{
					return _1a77294b7_supports_cloning(_1a772a441_arr(_16521__self).get()._field_elem.ptr());
				}
			}
			else if ((_1a7729c04_sptr(_16521__self) != nullptr)) {
				_case_begin_1aa1c6082:;
				{
					return _1a77294b7_supports_cloning(_1a7729c04_sptr(_16521__self).get()._field_elem.ptr());
				}
			}
			else if ((_1a772ab7d_strct(_16521__self) != nullptr)) {
				_case_begin_1aa1c6109:;
				{
					jule::Ptr<_1a6836a48_StructIns> _18525_s = _1a772ab7d_strct(_16521__self);;
					return (((_18525_s.get()._field_decl != nullptr) && (!(_18525_s.get()._field_decl.get()._field_cpp_linked))) && _1a68312c3_is_derives(_18525_s.get()._field_decl.ptr(), jule::Str("Clone", 5)));
				}
			}
			else {
				_case_begin_1aa1c5e3e:;
				{
					return false;
				}
			}
			_match_end_1aa1c5db7:;
		};
	};
}



inline jule::Bool _1a772972b_variadicable(_1a77278d3_TypeKind* _self_) {
	{
		_1a77278d3_TypeKind* _19821__self = (&((*_self_)));;
		return (_1a772a6a5_slc(_19821__self) != nullptr);
	};
}



inline jule::Ptr<_1a772c135_Prim> _1a7729990_prim(_1a77278d3_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a772c135_Prim>>()) {
			_case_begin_1aa1cd892:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1a772c135_Prim>();
			}
		}
		else {
			_case_begin_1aa1c3db5:;
			{
				return nullptr;
			}
		}
		_match_end_1aa1c3d60:;
	};
}



inline jule::Ptr<_1a7730644_Sptr> _1a7729c04_sptr(_1a77278d3_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a7730644_Sptr>>()) {
			_case_begin_1aa1c3e2b:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1a7730644_Sptr>();
			}
		}
		else {
			_case_begin_1aa1ce167:;
			{
				return nullptr;
			}
		}
		_match_end_1aa1ce112:;
	};
}



inline jule::Ptr<_1a7733ba8_Ptr> _1a7729e68_ptr(_1a77278d3_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a7733ba8_Ptr>>()) {
			_case_begin_1aa1ceb6d:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1a7733ba8_Ptr>();
			}
		}
		else {
			_case_begin_1aa1ced6b:;
			{
				return nullptr;
			}
		}
		_match_end_1aa1ced16:;
	};
}



inline jule::Ptr<_1a6982435_Enum> _1a772a1cc_enm(_1a77278d3_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a6982435_Enum>>()) {
			_case_begin_1aa1cedd2:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1a6982435_Enum>();
			}
		}
		else {
			_case_begin_1aa1d0a70:;
			{
				return nullptr;
			}
		}
		_match_end_1aa1d0a1a:;
	};
}



inline jule::Ptr<_1a773324b_Arr> _1a772a441_arr(_1a77278d3_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a773324b_Arr>>()) {
			_case_begin_1aa1d0ad6:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1a773324b_Arr>();
			}
		}
		else {
			_case_begin_1aa1d1774:;
			{
				return nullptr;
			}
		}
		_match_end_1aa1d171e:;
	};
}



inline jule::Ptr<_1a77310a1_Slc> _1a772a6a5_slc(_1a77278d3_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a77310a1_Slc>>()) {
			_case_begin_1aa1d17da:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1a77310a1_Slc>();
			}
		}
		else {
			_case_begin_1aa1d2478:;
			{
				return nullptr;
			}
		}
		_match_end_1aa1d2423:;
	};
}



inline jule::Ptr<_1a6872c93_FnIns> _1a772a919_fnc(_1a77278d3_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a6872c93_FnIns>>()) {
			_case_begin_1aa1d24de:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1a6872c93_FnIns>();
			}
		}
		else {
			_case_begin_1aa1d317c:;
			{
				return nullptr;
			}
		}
		_match_end_1aa1d3127:;
	};
}



inline jule::Ptr<_1a6836a48_StructIns> _1a772ab7d_strct(_1a77278d3_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a6836a48_StructIns>>()) {
			_case_begin_1aa1d31e3:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1a6836a48_StructIns>();
			}
		}
		else {
			_case_begin_1aa1d3d81:;
			{
				return nullptr;
			}
		}
		_match_end_1aa1d3d2b:;
	};
}



inline jule::Ptr<_1a68d46b7_Trait> _1a772ade2_trt(_1a77278d3_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a68d46b7_Trait>>()) {
			_case_begin_1aa1d3de7:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1a68d46b7_Trait>();
			}
		}
		else {
			_case_begin_1aa1d4a85:;
			{
				return nullptr;
			}
		}
		_match_end_1aa1d4a30:;
	};
}



inline jule::Ptr<_1a7732657_Map> _1a772b156_map(_1a77278d3_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a7732657_Map>>()) {
			_case_begin_1aa1d4aeb:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1a7732657_Map>();
			}
		}
		else {
			_case_begin_1aa1d5789:;
			{
				return nullptr;
			}
		}
		_match_end_1aa1d5734:;
	};
}



inline jule::Ptr<_1a7731a96_Tuple> _1a772b3ba_tup(_1a77278d3_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a7731a96_Tuple>>()) {
			_case_begin_1aa1d5800:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1a7731a96_Tuple>();
			}
		}
		else {
			_case_begin_1aa1d648d:;
			{
				return nullptr;
			}
		}
		_match_end_1aa1d6438:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a77278d3_TypeKind _Src) {
	_Stream << _1a7727c8a_to_str(&_Src);
	return _Stream;
}



inline jule::Bool _1a772bb6d_checked(_1a772b772_TypeSymbol* _self_) {
	return ((*_self_)._field_kind != nullptr);
}



inline void _1a772bd49_remove_kind(_1a772b772_TypeSymbol* _self_) {
	(*_self_)._field_kind=nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1a772b772_TypeSymbol _Src) {
	_Stream << "TypeSymbol{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a772c498_to_str(_1a772c135_Prim* _self_) {
	return (*_self_)._field_kind;
}



inline jule::Bool _1a772c7a6_equals(jule::Ptr<_1a772c135_Prim> _self_, jule::Ptr<_1a77278d3_TypeKind> _34126_other) {
	jule::Ptr<_1a772c135_Prim> _34213_prim = _1a7729990_prim(_34126_other.ptr());;
	if ((_34213_prim == nullptr)) {
		return false;
	};
	return (_self_.get()._field_kind == _34213_prim.get()._field_kind);
}



inline jule::Bool _1a772cc18_is_i8(_1a772c135_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("i8", 2));
}



inline jule::Bool _1a772ce7c_is_i16(_1a772c135_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("i16", 3));
}



inline jule::Bool _1a772d1e1_is_i32(_1a772c135_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("i32", 3));
}



inline jule::Bool _1a772d455_is_i64(_1a772c135_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("i64", 3));
}



inline jule::Bool _1a772d6b9_is_u8(_1a772c135_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("u8", 2));
}



inline jule::Bool _1a772d92d_is_u16(_1a772c135_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("u16", 3));
}



inline jule::Bool _1a772db92_is_u32(_1a772c135_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("u32", 3));
}



inline jule::Bool _1a772de06_is_u64(_1a772c135_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("u64", 3));
}



inline jule::Bool _1a772e16a_is_f32(_1a772c135_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("f32", 3));
}



inline jule::Bool _1a772e3ce_is_f64(_1a772c135_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("f64", 3));
}



inline jule::Bool _1a772e643_is_int(_1a772c135_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("int", 3));
}



inline jule::Bool _1a772e8a7_is_uint(_1a772c135_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("uint", 4));
}



inline jule::Bool _1a772eb1b_is_uintptr(_1a772c135_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("uintptr", 7));
}



inline jule::Bool _1a772ed80_is_bool(_1a772c135_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("bool", 4));
}



inline jule::Bool _1a77300e4_is_str(_1a772c135_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("str", 3));
}



inline jule::Bool _1a7730358_is_any(_1a772c135_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("any", 3));
}







std::ostream &operator<<(std::ostream &_Stream, _1a772c135_Prim _Src) {
	_Stream << _1a772c498_to_str(&_Src);
	return _Stream;
}



inline jule::Str _1a77309a7_to_str(_1a7730644_Sptr* _self_) {
	return (jule::Str("&", 1) + _1a7727c8a_to_str((*_self_)._field_elem.ptr()));
}



inline jule::Bool _1a7730cb5_equals(jule::Ptr<_1a7730644_Sptr> _self_, jule::Ptr<_1a77278d3_TypeKind> _41026_other) {
	jule::Ptr<_1a7730644_Sptr> _41113_sptr = _1a7729c04_sptr(_41026_other.ptr());;
	if ((_41113_sptr == nullptr)) {
		return false;
	};
	return _1a7728098_equals(_self_.get()._field_elem, _41113_sptr.get()._field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, _1a7730644_Sptr _Src) {
	_Stream << _1a77309a7_to_str(&_Src);
	return _Stream;
}



inline jule::Str _1a7731524_to_str(_1a77310a1_Slc* _self_) {
	return (jule::Str("[]", 2) + _1a7727c8a_to_str((*_self_)._field_elem.ptr()));
}



inline jule::Bool _1a7731832_equals(jule::Ptr<_1a77310a1_Slc> _self_, jule::Ptr<_1a77278d3_TypeKind> _42926_other) {
	jule::Ptr<_1a77310a1_Slc> _43013_slc = _1a772a6a5_slc(_42926_other.ptr());;
	if ((_43013_slc == nullptr)) {
		return false;
	};
	return _1a7728098_equals(_self_.get()._field_elem, _43013_slc.get()._field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, _1a77310a1_Slc _Src) {
	_Stream << _1a7731524_to_str(&_Src);
	return _Stream;
}



inline jule::Str _1a7731e92_to_str(_1a7731a96_Tuple* _self_) {
	jule::Str _44617_s = jule::Str("(", 1);;
	_44617_s+=_1a7727c8a_to_str((*_self_)._field_types[0LL].ptr());
	{
		auto expr = (*_self_)._field_types.slice(1LL);
		auto it = expr.begin();
		_iter_begin_1aa1e8d74:;
		if (it != expr.end()) {
			jule::Ptr<_1a77278d3_TypeKind> &_44816_t = *it;
			{
				_44617_s+=jule::Str(",", 1);
				_44617_s+=_1a7727c8a_to_str(_44816_t.ptr());
			}
			_iter_next_1aa1e8d74:;
			++it;
			goto _iter_begin_1aa1e8d74;
		}
		_iter_end_1aa1e8d74:;
	};
	_44617_s+=jule::Str(")", 1);
	return _44617_s;
}



inline jule::Bool _1a77322a0_equals(jule::Ptr<_1a7731a96_Tuple> _self_, jule::Ptr<_1a77278d3_TypeKind> _45726_other) {
	jule::Ptr<_1a7731a96_Tuple> _45813_tup = _1a772b3ba_tup(_45726_other.ptr());;
	if ((_45813_tup == nullptr)) {
		return false;
	};
	if ((_self_.get()._field_types.len() != _45813_tup.get()._field_types.len())) {
		return false;
	};
	jule::I64 _46717_i = 0LL;;
	for (; (_46717_i < _self_.get()._field_types.len()); (_46717_i)++) {
		{
			if ((!(_1a7728098_equals(_self_.get()._field_types[_46717_i], _45813_tup.get()._field_types[_46717_i])))) {
				return false;
			};
		}
	_iter_next_1aa1ebcab:;
	}
	_iter_end_1aa1ebcab:;;
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _1a7731a96_Tuple _Src) {
	_Stream << _1a7731e92_to_str(&_Src);
	return _Stream;
}



inline jule::Str _1a77329ba_to_str(_1a7732657_Map* _self_) {
	jule::Str _48717_s = jule::Str("[", 1);;
	_48717_s+=_1a7727c8a_to_str((*_self_)._field_key.ptr());
	_48717_s+=jule::Str(":", 1);
	_48717_s+=_1a7727c8a_to_str((*_self_)._field_val.ptr());
	_48717_s+=jule::Str("]", 1);
	return _48717_s;
}



inline jule::Bool _1a7732cc8_equals(jule::Ptr<_1a7732657_Map> _self_, jule::Ptr<_1a77278d3_TypeKind> _49626_other) {
	jule::Ptr<_1a7732657_Map> _49713_map = _1a772b156_map(_49626_other.ptr());;
	if ((_49713_map == nullptr)) {
		return false;
	};
	return (_1a7728098_equals(_self_.get()._field_key, _49713_map.get()._field_key) && _1a7728098_equals(_self_.get()._field_val, _49713_map.get()._field_val));
}







std::ostream &operator<<(std::ostream &_Stream, _1a7732657_Map _Src) {
	_Stream << _1a77329ba_to_str(&_Src);
	return _Stream;
}



inline jule::Str _1a77335ae_to_str(_1a773324b_Arr* _self_) {
	jule::Str _51517_s = jule::Str("[", 1);;
	_51517_s+=_1a7538cee_itoa((*_self_)._field_n);
	_51517_s+=jule::Str("]", 1);
	_51517_s+=_1a7727c8a_to_str((*_self_)._field_elem.ptr());
	return _51517_s;
}



inline jule::Bool _1a77338bc_equals(jule::Ptr<_1a773324b_Arr> _self_, jule::Ptr<_1a77278d3_TypeKind> _52326_other) {
	jule::Ptr<_1a773324b_Arr> _52413_arr = _1a772a441_arr(_52326_other.ptr());;
	if ((_52413_arr == nullptr)) {
		return false;
	};
	return ((_self_.get()._field_n == _52413_arr.get()._field_n) && _1a7728098_equals(_self_.get()._field_elem, _52413_arr.get()._field_elem));
}







std::ostream &operator<<(std::ostream &_Stream, _1a773324b_Arr _Src) {
	_Stream << _1a77335ae_to_str(&_Src);
	return _Stream;
}



inline jule::Str _1a773401b_to_str(_1a7733ba8_Ptr* _self_) {
	if (_1a773467b_is_unsafe(&(*_self_))) {
		return jule::Str("*unsafe", 7);
	};
	return (jule::Str("*", 1) + _1a7727c8a_to_str((*_self_)._field_elem.ptr()));
}



inline jule::Bool _1a7734329_equals(jule::Ptr<_1a7733ba8_Ptr> _self_, jule::Ptr<_1a77278d3_TypeKind> _54726_other) {
	jule::Ptr<_1a7733ba8_Ptr> _54813_ptr = _1a7729e68_ptr(_54726_other.ptr());;
	if ((_54813_ptr == nullptr)) {
		return false;
	};
	return _1a7728098_equals(_self_.get()._field_elem, _54813_ptr.get()._field_elem);
}



inline jule::Bool _1a773467b_is_unsafe(_1a7733ba8_Ptr* _self_) {
	return ((*_self_)._field_elem == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1a7733ba8_Ptr _Src) {
	_Stream << _1a773401b_to_str(&_Src);
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a7734aee_Referencer _Src) {
	_Stream << "Referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}



inline void _1a773601d_push_err(_1a7735847_TypeChecker* _self_, jule::Ptr<_1a527737a_Token> _62527_token, jule::Str _62542_fmt, jule::Slice<jule::Any> _62555_args) {
	_1a769063c_push_err((*_self_)._field_s.ptr(), _62527_token,_62542_fmt,jule::Any(_62555_args));
}



inline void _1a77361e9_allow_builtin(_1a7735847_TypeChecker* _self_) {
	(*_self_)._field_dis_builtin=false;
}



inline void _1a77363c5_disallow_builtin(_1a7735847_TypeChecker* _self_) {
	(*_self_)._field_dis_builtin=true;
}



inline jule::Ptr<_1a772c135_Prim> _1a77366d3_build_prim(_1a7735847_TypeChecker* _self_, jule::Ptr<_1a685305e_IdentTypeDecl>& _63730_decl) {
	if ((!(_1a773ea93_is_prim(_63730_decl.get()._field_ident)))) {
		_1a773601d_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_63730_decl.get()._field_generics.len() > 0LL)) {
		_1a773601d_push_err(&(*_self_), _63730_decl.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_63730_decl.get()._field_ident)}));
		return nullptr;
	};
	return _1a773e554_build_prim_type(_63730_decl.get()._field_ident);
}



inline void _1aa248962_push_reference(_1a7735847_TypeChecker* _self_, jule::Ptr<_1a6836a48_StructIns>& _65141_t) {
	if (((*_self_)._field_refers == nullptr)) {
		return;;
	};
	if (_1a9e41627_exist((*_self_)._field_refers.ptr(), _65141_t)) {
		return;;
	};
	_1a68766ae_push((*_self_)._field_refers.ptr(), jule::Any(_65141_t));
}



inline void _1a7736d21_push_cycle_error(_1a7735847_TypeChecker* _self_, jule::Any _66131_def1, jule::Any _66142_def2, jule::Str& _66158_message) {
	;
	jule::Fn<jule::Str(jule::Any&)> _66413_get_ident = jule::Fn<jule::Str(jule::Any&)>([=](jule::Any& _66429_def) mutable -> jule::Str {
		{
			auto &_match_expr{ _66429_def };
			
			if (_match_expr.type_is<jule::Ptr<_1a7726b9b_TypeAlias>>()) {
				_case_begin_1aa210a39:;
				{
					return _66429_def.operator jule::Ptr<_1a7726b9b_TypeAlias>().get()._field_ident;
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1a6826829_Struct>>()) {
				_case_begin_1aa21094b:;
				{
					return _66429_def.operator jule::Ptr<_1a6826829_Struct>().get()._field_ident;
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1a6982435_Enum>>()) {
				_case_begin_1aa2109b2:;
				{
					return _66429_def.operator jule::Ptr<_1a6982435_Enum>().get()._field_ident;
				}
			}
			else {
				_case_begin_1aa21051c:;
				{
					return jule::Str();
				}
			}
			_match_end_1aa2104b7:;
		};
	});;
	jule::Str _67713_def1_ident = _66413_get_ident(_66131_def1);;
	jule::Str _67813_def2_ident = _66413_get_ident(_66142_def2);;
	jule::Str _67913_refers_to = _1a4334e1c_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_67713_def1_ident),jule::Any(_67813_def2_ident)}));;
	(_66158_message).buffer.insert(0, (((_1a4222117_repeat(jule::Str(" ", 1),4LL) + _67913_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _1a77371c8_check_cross_cycle(_1a7735847_TypeChecker* _self_, jule::Any _68332_decl, jule::Str& _68348_message) {
	{
		auto &_match_expr{ _68332_decl };
		
		if (_match_expr.type_is<jule::Ptr<_1a7726b9b_TypeAlias>>()) {
			_case_begin_1aa213db1:;
			{
				jule::Ptr<_1a7726b9b_TypeAlias> _68617_ta = _68332_decl.operator jule::Ptr<_1a7726b9b_TypeAlias>();;
				{
					auto &expr = _68617_ta.get()._field_refers;
					auto it = expr.begin();
					_iter_begin_1aa214b92:;
					if (it != expr.end()) {
						jule::Any &_68720_d = *it;
						{
							{
								
								if ((_68720_d == (*_self_)._field_referencer.get()._field_owner)) {
									_case_begin_1aa215478:;
									{
										_1a7736d21_push_cycle_error(&(*_self_), jule::Any(_68617_ta),jule::Any(_68720_d),_68348_message);
										return false;
									}
								}
								else if ((!(_1a77371c8_check_cross_cycle(&(*_self_), jule::Any(_68720_d),_68348_message)))) {
									_case_begin_1aa215500:;
									{
										_1a7736d21_push_cycle_error(&(*_self_), jule::Any(_68617_ta),jule::Any(_68720_d),_68348_message);
										return false;
									}
								}
								_match_end_1aa215368:;
							};
						}
						_iter_next_1aa214b92:;
						++it;
						goto _iter_begin_1aa214b92;
					}
					_iter_end_1aa214b92:;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6826829_Struct>>()) {
			_case_begin_1aa213e38:;
			{
				jule::Ptr<_1a6826829_Struct> _69817_s = _68332_decl.operator jule::Ptr<_1a6826829_Struct>();;
				{
					auto &expr = _69817_s.get()._field_depends;
					auto it = expr.begin();
					_iter_begin_1aa2150b0:;
					if (it != expr.end()) {
						jule::Ptr<_1a6826829_Struct> &_69920_d = *it;
						{
							{
								
								if (((*_self_)._field_referencer.get()._field_owner == _69920_d)) {
									_case_begin_1aa217c2d:;
									{
										_1a7736d21_push_cycle_error(&(*_self_), jule::Any(_69817_s),jule::Any(_69920_d),_68348_message);
										return false;
									}
								}
								else if ((!(_1a77371c8_check_cross_cycle(&(*_self_), jule::Any(_69920_d),_68348_message)))) {
									_case_begin_1aa217ca5:;
									{
										_1a7736d21_push_cycle_error(&(*_self_), jule::Any(_69817_s),jule::Any(_69920_d),_68348_message);
										return false;
									}
								}
								_match_end_1aa217b1d:;
							};
						}
						_iter_next_1aa2150b0:;
						++it;
						goto _iter_begin_1aa2150b0;
					}
					_iter_end_1aa2150b0:;
				};
			}
		}
		_match_end_1aa213d4a:;
	};
	return true;
}



inline jule::Bool _1a7737580_check_illegal_cycles(_1a7735847_TypeChecker* _self_, jule::Ptr<_1a685305e_IdentTypeDecl>& _71740_ident, jule::Any _71767_decl) {
	jule::Bool _71780_ok = jule::Bool();
	if (((*_self_)._field_referencer == nullptr)) {
		_71780_ok = true;
		return _71780_ok;
	};
	{
		auto &_match_expr{ _71767_decl };
		
		if (_match_expr.type_is<jule::Ptr<_1a6826829_Struct>>()) {
			_case_begin_1aa21a1a3:;
			{
				if (((*_self_)._field_not_plain || _71767_decl.operator jule::Ptr<_1a6826829_Struct>().get()._field_cpp_linked)) {
					_71780_ok = true;
					return _71780_ok;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a7726b9b_TypeAlias>>()) {
			_case_begin_1aa21a219:;
			{
				if (_71767_decl.operator jule::Ptr<_1a7726b9b_TypeAlias>().get()._field_cpp_linked) {
					_71780_ok = true;
					return _71780_ok;
				};
			}
		}
		_match_end_1aa21a4b1:;
	};
	if ((_71767_decl == (*_self_)._field_referencer.get()._field_owner)) {
		_1a773601d_push_err(&(*_self_), _71740_ident.get()._field_token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_referencer.get()._field_ident)}));
		_71780_ok = false;
		return _71780_ok;
	};
	jule::Str _74017_message = jule::Str();;
	if ((!(_1a77371c8_check_cross_cycle(&(*_self_), jule::Any(_71767_decl),_74017_message)))) {
		jule::Str _74321_err_msg = _74017_message;;
		_74017_message=jule::Str();
		_1a7736d21_push_cycle_error(&(*_self_), jule::Any((*_self_)._field_referencer.get()._field_owner),jule::Any(_71767_decl),_74017_message);
		_74321_err_msg=(_74321_err_msg + _74017_message);
		_1a773601d_push_err(&(*_self_), _71740_ident.get()._field_token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>::make({jule::Any(_74321_err_msg)}));
		_71780_ok = false;
		return _71780_ok;
	};
	{
		auto &_match_expr{ (*_self_)._field_referencer.get()._field_owner };
		
		if (_match_expr.type_is<jule::Ptr<_1a7726b9b_TypeAlias>>()) {
			_case_begin_1aa21ebd0:;
			{
				{
					(*((*_self_)._field_referencer.get()._field_refs))=jule::append((*((*_self_)._field_referencer.get()._field_refs)),jule::Slice<jule::Any>::make({jule::Any(_71767_decl)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6826829_Struct>>()) {
			_case_begin_1aa21ec46:;
			{
				{
					auto &_match_expr{ _71767_decl };
					
					if (_match_expr.type_is<jule::Ptr<_1a6826829_Struct>>()) {
						_case_begin_1aa220571:;
						{
							jule::Ptr<_1a6826829_Struct> _75925_s = (*_self_)._field_referencer.get()._field_owner.operator jule::Ptr<_1a6826829_Struct>();;
							_75925_s.get()._field_depends = jule::alloc_for_append(_75925_s.get()._field_depends,1);_75925_s.get()._field_depends.__push(_71767_decl.operator jule::Ptr<_1a6826829_Struct>());;
						}
					}
					_match_end_1aa22051b:;
				};
			}
		}
		_match_end_1aa21ed67:;
	};
	_71780_ok = true;
	return _71780_ok;
}



inline jule::Trait<_1a77274a4_Kind> _1a7737937_from_type_alias(_1a7735847_TypeChecker* _self_, jule::Ptr<_1a685305e_IdentTypeDecl>& _76735_decl, jule::Ptr<_1a7726b9b_TypeAlias>& _76762_ta) {
	if ((!(_1a7690d13_is_accessible_define((*_self_)._field_s.ptr(), _76762_ta.get()._field_public,_76762_ta.get()._field_token)))) {
		_1a773601d_push_err(&(*_self_), _76735_decl.get()._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_76735_decl.get()._field_ident)}));
		return nullptr;
	};
	_76762_ta.get()._field_used=true;
	if ((_76735_decl.get()._field_generics.len() > 0LL)) {
		_1a773601d_push_err(&(*_self_), _76735_decl.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_76735_decl.get()._field_ident)}));
		return nullptr;
	};
	if (((!((*_self_)._field_inscatch)) && ((*_self_)._field_banned_generics != nullptr))) {
		(*_self_)._field_inscatch=true;
		{
			auto &expr = (*_self_)._field_banned_generics;
			auto it = expr.begin();
			_iter_begin_1aa2258a6:;
			if (it != expr.end()) {
				jule::Ptr<_1a7726b9b_TypeAlias> _78420_bg = *it;
				{
					if (((_78420_bg == _76762_ta) || ((_76762_ta.get()._field_kind.get()._field_kind != nullptr) && _1a7728098_equals(_76762_ta.get()._field_kind.get()._field_kind, _78420_bg.get()._field_kind.get()._field_kind)))) {
						(*_self_)._field_inscatch=false;
						goto _iter_end_1aa2258a6;
					};
				}
				_iter_next_1aa2258a6:;
				++it;
				goto _iter_begin_1aa2258a6;
			}
			_iter_end_1aa2258a6:;
		};
	};
	if ((*_self_)._field_inscatch) {
		{
			auto &expr = (*_self_)._field_banned_generics;
			auto it = expr.begin();
			_iter_begin_1aa227710:;
			if (it != expr.end()) {
				jule::Ptr<_1a7726b9b_TypeAlias> _79520_bg = *it;
				{
					if ((_79520_bg == _76762_ta)) {
						_1a773601d_push_err(&(*_self_), _76735_decl.get()._field_token,jule::Str("type declaration causes initiation cycle", 40),jule::Slice<jule::Any>::make({jule::Any(_76735_decl.get()._field_ident)}));
						return nullptr;
					};
					{
						auto &expr = _76762_ta.get()._field_generics;
						auto it = expr.begin();
						_iter_begin_1aa228bea:;
						if (it != expr.end()) {
							jule::Ptr<_1a7726b9b_TypeAlias> _80024_dg = *it;
							{
								if ((_79520_bg == _80024_dg)) {
									_1a773601d_push_err(&(*_self_), _76735_decl.get()._field_token,jule::Str("type declaration causes initiation cycle", 40),jule::Slice<jule::Any>::make({jule::Any(_76735_decl.get()._field_ident)}));
									return nullptr;
								};
							}
							_iter_next_1aa228bea:;
							++it;
							goto _iter_begin_1aa228bea;
						}
						_iter_end_1aa228bea:;
					};
				}
				_iter_next_1aa227710:;
				++it;
				goto _iter_begin_1aa227710;
			}
			_iter_end_1aa227710:;
		};
	};
	jule::Bool _80917_ok = _1a7737580_check_illegal_cycles(&(*_self_), _76735_decl,jule::Any(_76762_ta));;
	if ((!(_80917_ok))) {
		return nullptr;
	};
	_80917_ok=_1a7697aea_check_type_alias_decl_kind((*_self_)._field_s, _76762_ta,(*_self_)._field_lookup);
	if ((!(_80917_ok))) {
		return nullptr;
	};
	if ((_76762_ta.get()._field_generic && ((*_self_)._field_owner_alias != nullptr))) {
		(*_self_)._field_owner_alias.get()._field_generics = jule::alloc_for_append((*_self_)._field_owner_alias.get()._field_generics,1);(*_self_)._field_owner_alias.get()._field_generics.__push(_76762_ta);;
	};
	jule::Ptr<_1a77278d3_TypeKind> _82617_tk = jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_generic=_76762_ta.get()._field_generic, ._field_kind=_76762_ta.get()._field_kind.get()._field_kind.get()._field_kind});;
	if (_76762_ta.get()._field_cpp_linked) {
		_82617_tk.get()._field_cpp_ident=_76762_ta.get()._field_ident;
	} else {
		_82617_tk.get()._field_cpp_ident=_76762_ta.get()._field_kind.get()._field_kind.get()._field_cpp_ident;
	};
	return jule::Trait<_1a77274a4_Kind>(_82617_tk, 4);
}



inline jule::Ptr<_1a6982435_Enum> _1a7737cde_from_enum(_1a7735847_TypeChecker* _self_, jule::Ptr<_1a685305e_IdentTypeDecl>& _83829_decl, jule::Ptr<_1a6982435_Enum>& _83856_e) {
	if ((!(_1a7690d13_is_accessible_define((*_self_)._field_s.ptr(), _83856_e.get()._field_public,_83856_e.get()._field_token)))) {
		_1a773601d_push_err(&(*_self_), _83829_decl.get()._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_83829_decl.get()._field_ident)}));
		return nullptr;
	};
	if ((_83829_decl.get()._field_generics.len() > 0LL)) {
		_1a773601d_push_err(&(*_self_), _83829_decl.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_83829_decl.get()._field_ident)}));
		return nullptr;
	};
	return _83856_e;
}



inline jule::Ptr<_1a68d46b7_Trait> _1a7738196_from_trait(_1a7735847_TypeChecker* _self_, jule::Ptr<_1a685305e_IdentTypeDecl>& _85030_decl, jule::Ptr<_1a68d46b7_Trait>& _85057_t) {
	if ((!(_1a7690d13_is_accessible_define((*_self_)._field_s.ptr(), _85057_t.get()._field_public,_85057_t.get()._field_token)))) {
		_1a773601d_push_err(&(*_self_), _85030_decl.get()._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_85030_decl.get()._field_ident)}));
		return nullptr;
	};
	if ((_85030_decl.get()._field_generics.len() > 0LL)) {
		_1a773601d_push_err(&(*_self_), _85030_decl.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_85030_decl.get()._field_ident)}));
		return nullptr;
	};
	return _85057_t;
}



inline jule::Bool _1a773854d_check_struct_ins(_1a7735847_TypeChecker* _self_, jule::Ptr<_1a6836a48_StructIns>& _86240_ins, jule::Ptr<_1a527737a_Token>& _86258_error_token) {
	jule::Bool _86281_ok = jule::Bool();
	if (_86240_ins.get()._field_checked) {
		_86281_ok = true;
		return _86281_ok;
	};
	__JULE_DEFER({
		_86240_ins.get()._field_checked=true;
	});;
	if ((((*_self_)._field_referencer != nullptr) && ((*_self_)._field_referencer.get()._field_owner == _86240_ins.get()._field_decl))) {
		_86281_ok = true;
		return _86281_ok;
	};
	_1a76a1780_precheck_struct_ins((*_self_)._field_s, _86240_ins);
	if ((_86240_ins.get()._field_generics.len() > 0LL)) {
		_1a76a21ed_check_struct_ins_operators((*_self_)._field_s, _86240_ins);
		_1a76a1a05_check_struct_ins((*_self_)._field_s, _86240_ins);
	};
	_86281_ok = true;
	return _86281_ok;
}



inline void _1a77387e5_append_used_struct_reference(_1a7735847_TypeChecker* _self_, jule::Ptr<_1a6826829_Struct>& _88452_s) {
	if (((*_self_)._field_referencer == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*_self_)._field_referencer.get()._field_owner };
		
		if (_match_expr.type_is<jule::Ptr<_1a6826829_Struct>>()) {
			_case_begin_1aa2383e1:;
			{
				jule::Ptr<_1a6826829_Struct> _89121_ref_s = (*_self_)._field_referencer.get()._field_owner.operator jule::Ptr<_1a6826829_Struct>();;
				if ((!(_1a682b378_is_uses(_89121_ref_s.ptr(), _88452_s)))) {
					_89121_ref_s.get()._field_uses = jule::alloc_for_append(_89121_ref_s.get()._field_uses,1);_89121_ref_s.get()._field_uses.__push(_88452_s);;
				};
			}
		}
		_match_end_1aa23838b:;
	};
}



inline jule::Ptr<_1a6836a48_StructIns> _1a7738bad_build_struct_instance(_1a7735847_TypeChecker* _self_, jule::Ptr<_1a685305e_IdentTypeDecl>& _89845_decl, jule::Ptr<_1a6826829_Struct>& _89872_s) {
	jule::Ptr<_1a7734aee_Referencer> _90017_referencer = (*_self_)._field_referencer;;
	(*_self_)._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_1a7726b9b_TypeAlias>> _90217_banned_generics = (*_self_)._field_banned_generics;;
	if (((*_self_)._field_banned_generics == nullptr)) {
		{
			auto &_match_expr{ (*_self_)._field_lookup };
			
			if (_match_expr.type_is<jule::Ptr<_1a766e374_ScopeChecker>>()) {
				_case_begin_1aa23b702:;
				{
					jule::Ptr<_1a766e374_ScopeChecker> _90925_sc = (*_self_)._field_lookup.operator jule::Ptr<_1a766e374_ScopeChecker>();;
					jule::Ptr<_1a766e374_ScopeChecker> _91025_hard = _1a7671882_get_hard_root(_90925_sc);;
					if (((_91025_hard.get()._field_owner.get()._field_owner == nullptr) || (_91025_hard.get()._field_owner.get()._field_owner.get()._field_decl != _89872_s))) {
						goto _match_end_1aa23b69c;
					};
					jule::I64 _91421_n = (_91025_hard.get()._field_owner.get()._field_generics.len() + _91025_hard.get()._field_owner.get()._field_owner.get()._field_generics.len());;
					(*_self_)._field_banned_generics=_91025_hard.get()._field_table.get()._field_type_aliases.slice(0LL,_91421_n);
				}
			}
			_match_end_1aa23b69c:;
		};
	} else {
		(*_self_)._field_inscatch=true;
	};
	jule::Ptr<_1a6836a48_StructIns> _92417_ins = _1a6829387_instance(_89872_s);;
	_92417_ins.get()._field_generics=jule::Slice<jule::Ptr<_1a77278d3_TypeKind>>::alloc(0LL,_89845_decl.get()._field_generics.len());
	{
		auto &expr = _89845_decl.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1aa2402c7:;
		if (it != expr.end()) {
			jule::Ptr<_1a68529cb_TypeDecl> _92621_g = *it;
			{
				jule::Ptr<_1a77278d3_TypeKind> _92721_kind = _1a773bdd1_build(&(*_self_), _92621_g.get()._field_kind);;
				if ((_92721_kind == nullptr)) {
					return nullptr;
				};
				_92417_ins.get()._field_generics = jule::alloc_for_append(_92417_ins.get()._field_generics,1);_92417_ins.get()._field_generics.__push(_92721_kind);;
			}
			_iter_next_1aa2402c7:;
			++it;
			goto _iter_begin_1aa2402c7;
		}
		_iter_end_1aa2402c7:;
	};
	(*_self_)._field_banned_generics=_90217_banned_generics;
	(*_self_)._field_referencer=_90017_referencer;
	return _92417_ins;
}



inline jule::Ptr<_1a6836a48_StructIns> _1a7739065_from_struct(_1a7735847_TypeChecker* _self_, jule::Ptr<_1a685305e_IdentTypeDecl>& _94135_decl, jule::Ptr<_1a6826829_Struct>& _94162_s) {
	if ((!(_1a7690d13_is_accessible_define((*_self_)._field_s.ptr(), _94162_s.get()._field_public,_94162_s.get()._field_token)))) {
		_1a773601d_push_err(&(*_self_), _94135_decl.get()._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_94135_decl.get()._field_ident)}));
		return nullptr;
	};
	if ((*_self_)._field_selection) {
		if ((_94135_decl.get()._field_generics.len() > 0LL)) {
			_1a773601d_push_err(&(*_self_), _94135_decl.get()._field_token,jule::Str("generics are not allowed in this scope", 38),jule::Slice<jule::Any>());
			return nullptr;
		};
		return jule::new_ptr<_1a6836a48_StructIns>(_1a6836a48_StructIns{._field_decl=_94162_s, });
	};
	jule::Bool _95917_ok = ((*_self_)._field_not_plain || _1a7737580_check_illegal_cycles(&(*_self_), _94135_decl,jule::Any(_94162_s)));;
	if ((!(_95917_ok))) {
		return nullptr;
	};
	_1a77387e5_append_used_struct_reference(&(*_self_), _94162_s);
	jule::Ptr<_1a6836a48_StructIns> _96517_ins = _1a7738bad_build_struct_instance(&(*_self_), _94135_decl,_94162_s);;
	if ((_96517_ins == nullptr)) {
		return nullptr;
	};
	_95917_ok=_1a76919d4_check_generic_quantity((*_self_)._field_s.ptr(), static_cast<jule::I64>(_96517_ins.get()._field_decl.get()._field_generics.len()),static_cast<jule::I64>(_96517_ins.get()._field_generics.len()),_94135_decl.get()._field_token);
	if ((!(_95917_ok))) {
		return nullptr;
	};
	jule::Ptr<_1a6836a48_StructIns> _97517_exist_instance = _1a682984e_append_instance(_94162_s.ptr(), _96517_ins);;
	if ((_97517_exist_instance != nullptr)) {
		_1aa248962_push_reference(&(*_self_), _97517_exist_instance);
		return _97517_exist_instance;
	};
	_95917_ok=_1a773854d_check_struct_ins(&(*_self_), _96517_ins,_94135_decl.get()._field_token);
	if ((!(_95917_ok))) {
		return nullptr;
	};
	_1aa248962_push_reference(&(*_self_), _96517_ins);
	return _96517_ins;
}



inline jule::Trait<_1a77274a4_Kind> _1a773941c_get_def(_1a7735847_TypeChecker* _self_, jule::Trait<_1a7741e19_Lookup> _99926_l, jule::Ptr<_1a685305e_IdentTypeDecl>& _99942_decl) {
	{
		auto &expr = (*_self_)._field_ignore_generics;
		auto it = expr.begin();
		_iter_begin_1aa24cb42:;
		if (it != expr.end()) {
			jule::Ptr<_1a685d960_GenericDecl> _100016_g = *it;
			{
				if ((_100016_g.get()._field_ident == _99942_decl.get()._field_ident)) {
					return jule::Trait<_1a77274a4_Kind>(_1a773e554_build_prim_type(_100016_g.get()._field_ident), 5);
				};
			}
			_iter_next_1aa24cb42:;
			++it;
			goto _iter_begin_1aa24cb42;
		}
		_iter_end_1aa24cb42:;
	};
	{
		auto &expr = (*_self_)._field_use_generics;
		auto it = expr.begin();
		_iter_begin_1aa24d769:;
		if (it != expr.end()) {
			jule::Ptr<_1a7726b9b_TypeAlias> _100621_g = *it;
			{
				if ((_100621_g.get()._field_ident == _99942_decl.get()._field_ident)) {
					jule::Ptr<_1a6836a48_StructIns> _100825_st = _1a772ab7d_strct(_100621_g.get()._field_kind.get()._field_kind.ptr());;
					if ((_100825_st != nullptr)) {
						jule::Bool _101025_ok = _1a7737580_check_illegal_cycles(&(*_self_), _99942_decl,jule::Any(_100825_st.get()._field_decl));;
						if ((!(_101025_ok))) {
							return nullptr;
						};
					};
					return _100621_g.get()._field_kind.get()._field_kind.get()._field_kind;
				};
			}
			_iter_next_1aa24d769:;
			++it;
			goto _iter_begin_1aa24d769;
		}
		_iter_end_1aa24d769:;
	};
	if ((!(_99942_decl.get()._field_cpp_linked))) {
		jule::Ptr<_1a6982435_Enum> _102021_e = _1a7741e19_Lookup_mptr_data[(_99926_l).type_offset]._1a7741cc6_find_enum(_99926_l, _99942_decl.get()._field_ident);;
		if ((_102021_e != nullptr)) {
			return jule::Trait<_1a77274a4_Kind>(_1a7737cde_from_enum(&(*_self_), _99942_decl,_102021_e), 3);
		};
		jule::Ptr<_1a68d46b7_Trait> _102521_t = _1a7741e19_Lookup_mptr_data[(_99926_l).type_offset]._1a77419b8_find_trait(_99926_l, _99942_decl.get()._field_ident);;
		if (((_102521_t == nullptr) && (!((*_self_)._field_dis_builtin)))) {
			_102521_t=_1a774e1e0_find_builtin_trait(_99942_decl.get()._field_ident);
		};
		if ((_102521_t != nullptr)) {
			return jule::Trait<_1a77274a4_Kind>(_1a7738196_from_trait(&(*_self_), _99942_decl,_102521_t), 2);
		};
	} else if ((*_self_)._field_selection) {
		_1a773601d_push_err(&(*_self_), _99942_decl.get()._field_token,jule::Str("cpp-linked definitions are not allowed in this scope", 52),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1a6826829_Struct> _103717_s = _1a7741e19_Lookup_mptr_data[(_99926_l).type_offset]._1a7741303_find_struct(_99926_l, _99942_decl.get()._field_ident,_99942_decl.get()._field_cpp_linked);;
	if ((_103717_s != nullptr)) {
		return jule::Trait<_1a77274a4_Kind>(_1a7739065_from_struct(&(*_self_), _99942_decl,_103717_s), 0);
	};
	jule::Ptr<_1a7726b9b_TypeAlias> _104217_ta = _1a7741e19_Lookup_mptr_data[(_99926_l).type_offset]._1a7740e4b_find_type_alias(_99926_l, _99942_decl.get()._field_ident,_99942_decl.get()._field_cpp_linked);;
	if (((_104217_ta == nullptr) && (!((*_self_)._field_dis_builtin)))) {
		_104217_ta=_1a774cd9d_find_builtin_type_alias(_99942_decl.get()._field_ident);
	};
	if ((_104217_ta != nullptr)) {
		return _1a7737937_from_type_alias(&(*_self_), _99942_decl,_104217_ta);
	};
	_1a773601d_push_err(&(*_self_), _99942_decl.get()._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_99942_decl.get()._field_ident)}));
	return nullptr;
}



inline jule::Trait<_1a77274a4_Kind> _1a773972a_build_ident(_1a7735847_TypeChecker* _self_, jule::Ptr<_1a685305e_IdentTypeDecl> _105434_decl) {
	{
		
		if (_1a773ea93_is_prim(_105434_decl.get()._field_ident)) {
			_case_begin_1aa258895:;
			{
				return jule::Trait<_1a77274a4_Kind>(_1a77366d3_build_prim(&(*_self_), _105434_decl), 5);
			}
		}
		else {
			_case_begin_1aa257be6:;
			{
				return _1a773941c_get_def(&(*_self_), (*_self_)._field_lookup,_105434_decl);
			}
		}
		_match_end_1aa257b2a:;
	};
}



inline jule::Ptr<_1a7730644_Sptr> _1a7739a38_build_sptr_from_type(_1a7735847_TypeChecker* _self_, jule::Ptr<_1a77278d3_TypeKind>& _106344_elem) {
	{
		
		if ((_106344_elem == nullptr)) {
			_case_begin_1aa258c5d:;
			{
				return nullptr;
			}
		}
		else if ((_1a772ab7d_strct(_106344_elem.ptr()) != nullptr)) {
			_case_begin_1aa2592e1:;
			{
				jule::Ptr<_1a6836a48_StructIns> _106917_s = _1a772ab7d_strct(_106344_elem.ptr());;
				if (((_106917_s.get()._field_decl != nullptr) && _106917_s.get()._field_decl.get()._field_cpp_linked)) {
					_1a773601d_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>());
					return nullptr;
				};
			}
		}
		else if (((_1a772a441_arr(_106344_elem.ptr()) != nullptr) && _1a772a441_arr(_106344_elem.ptr()).get()._field_auto)) {
			_case_begin_1aa259357:;
			{
				_1a773601d_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1aa258b4d:;
	};
	return jule::new_ptr<_1a7730644_Sptr>(_1a7730644_Sptr{._field_elem=_106344_elem});
}



inline jule::Ptr<_1a7730644_Sptr> _1a7739d46_build_sptr(_1a7735847_TypeChecker* _self_, jule::Ptr<_1a6853a54_SptrTypeDecl> _108333_decl) {
	jule::Bool _108413_not_plain = (*_self_)._field_not_plain;;
	(*_self_)._field_not_plain=true;
	__JULE_DEFER({
		(*_self_)._field_not_plain=_108413_not_plain;
	});;
	jule::Ptr<_1a77278d3_TypeKind> _108817_elem = _1a773c1de_check_decl(&(*_self_), _108333_decl.get()._field_elem);;
	return _1a7739a38_build_sptr_from_type(&(*_self_), _108817_elem);
}



inline jule::Ptr<_1a7733ba8_Ptr> _1a773a154_build_ptr_from_type(_1a7735847_TypeChecker* _self_, jule::Ptr<_1a77278d3_TypeKind>& _109243_elem) {
	{
		
		if ((_109243_elem == nullptr)) {
			_case_begin_1aa25e99a:;
			{
				return nullptr;
			}
		}
		else if (((_1a772a441_arr(_109243_elem.ptr()) != nullptr) && _1a772a441_arr(_109243_elem.ptr()).get()._field_auto)) {
			_case_begin_1aa25ea22:;
			{
				_1a773601d_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return jule::new_ptr<_1a7733ba8_Ptr>();
			}
		}
		_match_end_1aa25e88a:;
	};
	return jule::new_ptr<_1a7733ba8_Ptr>(_1a7733ba8_Ptr{._field_elem=_109243_elem});
}



inline jule::Ptr<_1a7733ba8_Ptr> _1a773a462_build_ptr(_1a7735847_TypeChecker* _self_, jule::Ptr<_1a68544a0_PtrTypeDecl> _110732_decl) {
	jule::Bool _110813_not_plain = (*_self_)._field_not_plain;;
	(*_self_)._field_not_plain=true;
	__JULE_DEFER({
		(*_self_)._field_not_plain=_110813_not_plain;
	});;
	jule::Ptr<_1a77278d3_TypeKind> _111217_elem = nullptr;;
	if ((!(_1a6854879_is_unsafe(_110732_decl.ptr())))) {
		_111217_elem=_1a773c1de_check_decl(&(*_self_), _110732_decl.get()._field_elem);
		return _1a773a154_build_ptr_from_type(&(*_self_), _111217_elem);
	};
	return jule::new_ptr<_1a7733ba8_Ptr>(_1a7733ba8_Ptr{._field_elem=_111217_elem});
}



inline jule::Ptr<_1a77310a1_Slc> _1a773a770_build_slc(_1a7735847_TypeChecker* _self_, jule::Ptr<_1a6853d40_SlcTypeDecl> _112432_decl) {
	jule::Bool _112513_not_plain = (*_self_)._field_not_plain;;
	(*_self_)._field_not_plain=true;
	__JULE_DEFER({
		(*_self_)._field_not_plain=_112513_not_plain;
	});;
	jule::Ptr<_1a77278d3_TypeKind> _112917_elem = _1a773c1de_check_decl(&(*_self_), _112432_decl.get()._field_elem);;
	{
		
		if ((_112917_elem == nullptr)) {
			_case_begin_1aa2658b3:;
			{
				return nullptr;
			}
		}
		else if (((_1a772a441_arr(_112917_elem.ptr()) != nullptr) && _1a772a441_arr(_112917_elem.ptr()).get()._field_auto)) {
			_case_begin_1aa26593a:;
			{
				_1a773601d_push_err(&(*_self_), _112432_decl.get()._field_elem.get()._field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1aa265808:;
	};
	return jule::new_ptr<_1a77310a1_Slc>(_1a77310a1_Slc{._field_elem=_112917_elem});
}



inline jule::Ptr<_1a773324b_Arr> _1a773aa7d_build_arr(_1a7735847_TypeChecker* _self_, jule::Ptr<_1a6854bed_ArrTypeDecl> _114532_decl) {
	jule::Bool _114613_not_plain = (*_self_)._field_not_plain;;
	(*_self_)._field_not_plain=true;
	__JULE_DEFER({
		(*_self_)._field_not_plain=_114613_not_plain;
	});;
	jule::I64 _115017_n = 0LL;;
	if ((!(_1a6855050_auto_sized(_114532_decl.ptr())))) {
		jule::Ptr<_1a76edda4_Data> _115321_size = _1a771982b_eval_expr(_1a7695444_eval((*_self_)._field_s, (*_self_)._field_lookup), _114532_decl.get()._field_size);;
		if ((_115321_size == nullptr)) {
			return nullptr;
		};
		if ((!(_1a76ee767_is_const(_115321_size.ptr())))) {
			_1a773601d_push_err(&(*_self_), _114532_decl.get()._field_size.get()._field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
			return nullptr;
		} else if (((_1a7729990_prim(_115321_size.get()._field_kind.ptr()) == nullptr) || (!(_1a766bdcc_is_int(_1a7729990_prim(_115321_size.get()._field_kind.ptr()).get()._field_kind))))) {
			_1a773601d_push_err(&(*_self_), _114532_decl.get()._field_size.get()._field_token,jule::Str("array size must be integer", 26),jule::Slice<jule::Any>());
			return nullptr;
		};
		_115017_n=static_cast<jule::I64>(static_cast<jule::I64>(_1a75c51dc_as_i64(_115321_size.get()._field_constant.ptr())));
		if ((_115017_n < 0LL)) {
			_1a773601d_push_err(&(*_self_), _114532_decl.get()._field_elem.get()._field_token,jule::Str("array size must be positive integer", 35),jule::Slice<jule::Any>());
			return nullptr;
		} else if (((_1a76606a6_BIT_SIZE != 64LL) && (static_cast<jule::F64>(_115017_n) > _1a7666932_max(jule::Str("int", 3))))) {
			_1a773601d_push_err(&(*_self_), _114532_decl.get()._field_size.get()._field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
			return nullptr;
		};
	};
	jule::Ptr<_1a77278d3_TypeKind> _117617_elem = _1a773c1de_check_decl(&(*_self_), _114532_decl.get()._field_elem);;
	{
		
		if ((_117617_elem == nullptr)) {
			_case_begin_1aa274ce0:;
			{
				return nullptr;
			}
		}
		else if (((_1a772a441_arr(_117617_elem.ptr()) != nullptr) && _1a772a441_arr(_117617_elem.ptr()).get()._field_auto)) {
			_case_begin_1aa274d56:;
			{
				_1a773601d_push_err(&(*_self_), _114532_decl.get()._field_elem.get()._field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1aa274b14:;
	};
	return jule::new_ptr<_1a773324b_Arr>(_1a773324b_Arr{._field_auto=_1a6855050_auto_sized(_114532_decl.ptr()), ._field_n=_115017_n, ._field_elem=_117617_elem});
}



inline jule::Ptr<_1a7732657_Map> _1a773ad8b_build_map(_1a7735847_TypeChecker* _self_, jule::Ptr<_1a6855407_MapTypeDecl> _119432_decl) {
	jule::Bool _119513_not_plain = (*_self_)._field_not_plain;;
	(*_self_)._field_not_plain=true;
	__JULE_DEFER({
		(*_self_)._field_not_plain=_119513_not_plain;
	});;
	jule::Ptr<_1a77278d3_TypeKind> _119917_key = _1a773c1de_check_decl(&(*_self_), _119432_decl.get()._field_key);;
	if ((_119917_key == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1a77278d3_TypeKind> _120417_val = _1a773c1de_check_decl(&(*_self_), _119432_decl.get()._field_val);;
	if ((_120417_val == nullptr)) {
		return nullptr;
	};
	if ((_1a772a1cc_enm(_120417_val.ptr()) != nullptr)) {
		_1a773601d_push_err(&(*_self_), _119432_decl.get()._field_val.get()._field_token,jule::Str("maps do not support enums as map key type", 41),jule::Slice<jule::Any>());
	};
	return jule::new_ptr<_1a7732657_Map>(_1a7732657_Map{._field_key=_119917_key, ._field_val=_120417_val});
}



inline jule::Ptr<_1a7731a96_Tuple> _1a773b199_build_tuple(_1a7735847_TypeChecker* _self_, jule::Ptr<_1a68541b4_TupleTypeDecl> _121834_decl) {
	jule::Slice<jule::Ptr<_1a77278d3_TypeKind>> _121917_types = jule::Slice<jule::Ptr<_1a77278d3_TypeKind>>::alloc(0LL,_121834_decl.get()._field_types.len());;
	{
		auto &expr = _121834_decl.get()._field_types;
		auto it = expr.begin();
		_iter_begin_1aa27b335:;
		if (it != expr.end()) {
			jule::Ptr<_1a68529cb_TypeDecl> _122021_t = *it;
			{
				jule::Ptr<_1a77278d3_TypeKind> _122121_kind = _1a773c1de_check_decl(&(*_self_), _122021_t);;
				if ((_122121_kind == nullptr)) {
					return nullptr;
				};
				_121917_types = jule::alloc_for_append(_121917_types,1);_121917_types.__push(_122121_kind);;
			}
			_iter_next_1aa27b335:;
			++it;
			goto _iter_begin_1aa27b335;
		}
		_iter_end_1aa27b335:;
	};
	return jule::new_ptr<_1a7731a96_Tuple>(_1a7731a96_Tuple{._field_types=_121917_types});
}



inline jule::Bool _1a773b4a7_check_fn_types(_1a7735847_TypeChecker* _self_, jule::Ptr<_1a6872c93_FnIns>& _123138_f) {
	jule::Bool _123151_ok = jule::Bool();
	{
		auto &expr = _123138_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1aa27d711:;
		if (it != expr.end()) {
			jule::Ptr<_1a6871e07_ParamIns> _123221_p = *it;
			{
				_123221_p.get()._field_kind=_1a773bdd1_build(&(*_self_), _123221_p.get()._field_decl.get()._field_kind.get()._field_decl.get()._field_kind);
				_123151_ok=(_123221_p.get()._field_kind != nullptr);
				if ((!(_123151_ok))) {
					_123151_ok = false;
					return _123151_ok;
				};
			}
			_iter_next_1aa27d711:;
			++it;
			goto _iter_begin_1aa27d711;
		}
		_iter_end_1aa27d711:;
	};
	if ((!(_1a6847eee_is_void(_123138_f.get()._field_decl.ptr())))) {
		_123138_f.get()._field_result=_1a773bdd1_build(&(*_self_), _123138_f.get()._field_decl.get()._field_result.get()._field_kind.get()._field_decl.get()._field_kind);
		_123151_ok = (_123138_f.get()._field_result != nullptr);
		return _123151_ok;
	};
	_123151_ok = true;
	return _123151_ok;
}



inline jule::Ptr<_1a6872c93_FnIns> _1a773b7b5_build_fn(_1a7735847_TypeChecker* _self_, jule::Ptr<_1a6862205_FnDecl> _124831_decl) {
	if ((_124831_decl.get()._field_generics.len() > 0LL)) {
		_1a773601d_push_err(&(*_self_), _124831_decl.get()._field_token,jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1a68709c7_Fn> _125417_f = _1a6878b9a_build_fn(_124831_decl);;
	jule::Ptr<_1a6872c93_FnIns> _125517_ins = _1a68714cd_instance_force(_125417_f);;
	_125517_ins.get()._field_anon=true;
	jule::Bool _125813_ok = _1a773b4a7_check_fn_types(&(*_self_), _125517_ins);;
	if ((!(_125813_ok))) {
		return nullptr;
	};
	return _125517_ins;
}



inline jule::Trait<_1a77274a4_Kind> _1a773bac3_build_by_namespace(_1a7735847_TypeChecker* _self_, jule::Ptr<_1a6853768_NamespaceTypeDecl> _126641_decl) {
	jule::Str _126713_path = _1a773e213_build_link_path_by_tokens(_126641_decl.get()._field_idents);;
	jule::Ptr<_1a7685038_ImportInfo> _126817_imp = _1a7741e19_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1a77406dc_select_package((*_self_)._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1a7685038_ImportInfo>)>([=](jule::Ptr<_1a7685038_ImportInfo> _126853_imp) mutable -> jule::Bool {
		if (((_126641_decl.get()._field_idents.len() == 1LL) && (_126853_imp.get()._field_alias == _126713_path))) {
			return true;
		};
		return ((_126853_imp.get()._field_link_path == _126713_path) && _1a76878ed_is_accessible_via_selection(_126853_imp.ptr()));
	}));;
	if (((_126817_imp == nullptr) || (!(_1a7687359_is_lookupable(_126817_imp.ptr(), jule::Str("self", 4)))))) {
		_1a773601d_push_err(&(*_self_), _126641_decl.get()._field_idents[0LL],jule::Str("undefined namespace: @", 22),jule::Slice<jule::Any>::make({jule::Any(_126713_path)}));
		return nullptr;
	};
	_1a77363c5_disallow_builtin(&(*_self_));
	jule::Trait<_1a77274a4_Kind> _128117_kind = _1a773941c_get_def(&(*_self_), jule::Trait<_1a7741e19_Lookup>(_126817_imp, 1),_126641_decl.get()._field_kind);;
	_1a77361e9_allow_builtin(&(*_self_));
	return _128117_kind;
}



inline jule::Ptr<_1a77278d3_TypeKind> _1a773bdd1_build(_1a7735847_TypeChecker* _self_, jule::Any& _128729_decl_kind) {
	jule::Trait<_1a77274a4_Kind> _128817_kind = nullptr;;
	{
		auto &_match_expr{ _128729_decl_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a685305e_IdentTypeDecl>>()) {
			_case_begin_1aa2893ed:;
			{
				jule::Trait<_1a77274a4_Kind> _129121_t = _1a773972a_build_ident(&(*_self_), _128729_decl_kind.operator jule::Ptr<_1a685305e_IdentTypeDecl>());;
				if ((_129121_t != nullptr)) {
					_128817_kind=_129121_t;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6853a54_SptrTypeDecl>>()) {
			_case_begin_1aa28a2bc:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1a7730644_Sptr> _129721_t = _1a7739d46_build_sptr(&(*_self_), _128729_decl_kind.operator jule::Ptr<_1a6853a54_SptrTypeDecl>());;
				if ((_129721_t != nullptr)) {
					_128817_kind=jule::Trait<_1a77274a4_Kind>(_129721_t, 6);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a68544a0_PtrTypeDecl>>()) {
			_case_begin_1aa28a333:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1a7733ba8_Ptr> _130321_t = _1a773a462_build_ptr(&(*_self_), _128729_decl_kind.operator jule::Ptr<_1a68544a0_PtrTypeDecl>());;
				if ((_130321_t != nullptr)) {
					_128817_kind=jule::Trait<_1a77274a4_Kind>(_130321_t, 11);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6853d40_SlcTypeDecl>>()) {
			_case_begin_1aa28a4a9:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1a77310a1_Slc> _130921_t = _1a773a770_build_slc(&(*_self_), _128729_decl_kind.operator jule::Ptr<_1a6853d40_SlcTypeDecl>());;
				if ((_130921_t != nullptr)) {
					_128817_kind=jule::Trait<_1a77274a4_Kind>(_130921_t, 7);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6854bed_ArrTypeDecl>>()) {
			_case_begin_1aa28a520:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1a773324b_Arr> _131521_t = _1a773aa7d_build_arr(&(*_self_), _128729_decl_kind.operator jule::Ptr<_1a6854bed_ArrTypeDecl>());;
				if ((_131521_t != nullptr)) {
					_128817_kind=jule::Trait<_1a77274a4_Kind>(_131521_t, 10);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6855407_MapTypeDecl>>()) {
			_case_begin_1aa2898a4:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1a7732657_Map> _132121_t = _1a773ad8b_build_map(&(*_self_), _128729_decl_kind.operator jule::Ptr<_1a6855407_MapTypeDecl>());;
				if ((_132121_t != nullptr)) {
					_128817_kind=jule::Trait<_1a77274a4_Kind>(_132121_t, 9);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a68541b4_TupleTypeDecl>>()) {
			_case_begin_1aa28991a:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1a7731a96_Tuple> _132721_t = _1a773b199_build_tuple(&(*_self_), _128729_decl_kind.operator jule::Ptr<_1a68541b4_TupleTypeDecl>());;
				if ((_132721_t != nullptr)) {
					_128817_kind=jule::Trait<_1a77274a4_Kind>(_132721_t, 8);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6862205_FnDecl>>()) {
			_case_begin_1aa289992:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1a6872c93_FnIns> _133321_t = _1a773b7b5_build_fn(&(*_self_), _128729_decl_kind.operator jule::Ptr<_1a6862205_FnDecl>());;
				if ((_133321_t != nullptr)) {
					_128817_kind=jule::Trait<_1a77274a4_Kind>(_133321_t, 1);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6853768_NamespaceTypeDecl>>()) {
			_case_begin_1aa28a597:;
			{
				(*_self_)._field_inscatch=true;
				jule::Trait<_1a77274a4_Kind> _133921_t = _1a773bac3_build_by_namespace(&(*_self_), _128729_decl_kind.operator jule::Ptr<_1a6853768_NamespaceTypeDecl>());;
				if ((_133921_t != nullptr)) {
					_128817_kind=_133921_t;
				};
			}
		}
		else {
			_case_begin_1aa28973e:;
			{
				_1a773601d_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1aa2896d9:;
	};
	if ((_128817_kind == nullptr)) {
		return nullptr;
	};
	{
		auto &_match_expr{ _128817_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a77278d3_TypeKind>>()) {
			_case_begin_1aa296086:;
			{
				return _128817_kind.operator jule::Ptr<_1a77278d3_TypeKind>();
			}
		}
		else {
			_case_begin_1aa29545e:;
			{
				return jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=_128817_kind});
			}
		}
		_match_end_1aa29532c:;
	};
}



inline jule::Ptr<_1a77278d3_TypeKind> _1a773c1de_check_decl(_1a7735847_TypeChecker* _self_, jule::Ptr<_1a68529cb_TypeDecl>& _136034_decl) {
	jule::Ptr<_1a527737a_Token> _136217_error_token = (*_self_)._field_error_token;;
	(*_self_)._field_error_token=_136034_decl.get()._field_token;
	jule::Ptr<_1a77278d3_TypeKind> _136517_kind = _1a773bdd1_build(&(*_self_), _136034_decl.get()._field_kind);;
	(*_self_)._field_error_token=_136217_error_token;
	return _136517_kind;
}



inline void _1a773c464_check(_1a7735847_TypeChecker* _self_, jule::Ptr<_1a772b772_TypeSymbol>& _137129_t) {
	if ((_137129_t.get()._field_decl == nullptr)) {
		return;;
	};
	jule::Ptr<_1a77278d3_TypeKind> _137517_kind = _1a773c1de_check_decl(&(*_self_), _137129_t.get()._field_decl);;
	if ((_137517_kind == nullptr)) {
		_1a772bd49_remove_kind(_137129_t.ptr());
		return;;
	};
	_137129_t.get()._field_kind=_137517_kind;
}







std::ostream &operator<<(std::ostream &_Stream, _1a7735847_TypeChecker _Src) {
	_Stream << "TypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "ignore_generics:" << _Src._field_ignore_generics << ", ";
	_Stream << "use_generics:" << _Src._field_use_generics << ", ";
	_Stream << "not_plain:" << _Src._field_not_plain << ", ";
	_Stream << "dis_builtin:" << _Src._field_dis_builtin << ", ";
	_Stream << "selection:" << _Src._field_selection << ", ";
	_Stream << "owner_alias:" << _Src._field_owner_alias << ", ";
	_Stream << "banned_generics:" << _Src._field_banned_generics << ", ";
	_Stream << "inscatch:" << _Src._field_inscatch;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1a773cab3_exist(jule::Str& _138722_ident, jule::Any& _138735_k) {
	{
		auto &_match_expr{ _138735_k };
		
		if (_match_expr.type_is<jule::Ptr<_1a685305e_IdentTypeDecl>>()) {
			_case_begin_1aa29985e:;
			{
				return (_138735_k.operator jule::Ptr<_1a685305e_IdentTypeDecl>().get()._field_ident == _138722_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6853a54_SptrTypeDecl>>()) {
			_case_begin_1aa299b6c:;
			{
				jule::Ptr<_1a6853a54_SptrTypeDecl> _139217_sptr = _138735_k.operator jule::Ptr<_1a6853a54_SptrTypeDecl>();;
				return static__1a773cab3_exist(_138722_ident,_139217_sptr.get()._field_elem.get()._field_kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a68544a0_PtrTypeDecl>>()) {
			_case_begin_1aa299bd3:;
			{
				jule::Ptr<_1a68544a0_PtrTypeDecl> _139517_ptr = _138735_k.operator jule::Ptr<_1a68544a0_PtrTypeDecl>();;
				return static__1a773cab3_exist(_138722_ident,_139517_ptr.get()._field_elem.get()._field_kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6853d40_SlcTypeDecl>>()) {
			_case_begin_1aa299c49:;
			{
				jule::Ptr<_1a6853d40_SlcTypeDecl> _139817_slc = _138735_k.operator jule::Ptr<_1a6853d40_SlcTypeDecl>();;
				return static__1a773cab3_exist(_138722_ident,_139817_slc.get()._field_elem.get()._field_kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6854bed_ArrTypeDecl>>()) {
			_case_begin_1aa299cb0:;
			{
				jule::Ptr<_1a6854bed_ArrTypeDecl> _140117_arr = _138735_k.operator jule::Ptr<_1a6854bed_ArrTypeDecl>();;
				return static__1a773cab3_exist(_138722_ident,_140117_arr.get()._field_elem.get()._field_kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6855407_MapTypeDecl>>()) {
			_case_begin_1aa299e47:;
			{
				jule::Ptr<_1a6855407_MapTypeDecl> _140417_map = _138735_k.operator jule::Ptr<_1a6855407_MapTypeDecl>();;
				return (static__1a773cab3_exist(_138722_ident,_140417_map.get()._field_key.get()._field_kind) || static__1a773cab3_exist(_138722_ident,_140417_map.get()._field_val.get()._field_kind));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6862205_FnDecl>>()) {
			_case_begin_1aa299ead:;
			{
				jule::Ptr<_1a6862205_FnDecl> _140817_f = _138735_k.operator jule::Ptr<_1a6862205_FnDecl>();;
				{
					auto &expr = _140817_f.get()._field_params;
					auto it = expr.begin();
					_iter_begin_1aa2a06de:;
					if (it != expr.end()) {
						jule::Ptr<_1a6860dd5_ParamDecl> &_140920_p = *it;
						{
							if (_1a6861248_is_self(_140920_p.ptr())) {
								goto _iter_next_1aa2a06de;
							};
							if (static__1a773cab3_exist(_138722_ident,_140920_p.get()._field_kind.get()._field_kind)) {
								return true;
							};
						}
						_iter_next_1aa2a06de:;
						++it;
						goto _iter_begin_1aa2a06de;
					}
					_iter_end_1aa2a06de:;
				};
				if ((_140817_f.get()._field_result != nullptr)) {
					return static__1a773cab3_exist(_138722_ident,_140817_f.get()._field_result.get()._field_kind.get()._field_kind);
				};
				return false;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a68541b4_TupleTypeDecl>>()) {
			_case_begin_1aa29a024:;
			{
				jule::Ptr<_1a68541b4_TupleTypeDecl> _142217_tup = _138735_k.operator jule::Ptr<_1a68541b4_TupleTypeDecl>();;
				{
					auto &expr = _142217_tup.get()._field_types;
					auto it = expr.begin();
					_iter_begin_1aa2a2988:;
					if (it != expr.end()) {
						jule::Ptr<_1a68529cb_TypeDecl> &_142320_t = *it;
						{
							if (static__1a773cab3_exist(_138722_ident,_142320_t.get()._field_kind)) {
								return true;
							};
						}
						_iter_next_1aa2a2988:;
						++it;
						goto _iter_begin_1aa2a2988;
					}
					_iter_end_1aa2a2988:;
				};
				return false;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6853768_NamespaceTypeDecl>>()) {
			_case_begin_1aa29a08a:;
			{
				jule::Ptr<_1a6853768_NamespaceTypeDecl> _143017_ns = _138735_k.operator jule::Ptr<_1a6853768_NamespaceTypeDecl>();;
				return (_143017_ns.get()._field_kind.get()._field_ident == _138722_ident);
			}
		}
		else {
			_case_begin_1aa299a18:;
			{
				return false;
			}
		}
		_match_end_1aa2999b3:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a773c684_IdentTypeLookup _Src) {
	_Stream << "IdentTypeLookup{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a7d89286_FileInfo _Src) {
	_Stream << "FileInfo{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a7dd1575_Stmt _Src) {
	_Stream << "Stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



inline void _1a7dd2532_stop(_1a7dd1da0_ScopeParser* _self_) {
	(*_self_)._field_pos=-1LL;
}



inline jule::Bool _1a7dd2796_stopped(_1a7dd1da0_ScopeParser* _self_) {
	return ((*_self_)._field_pos == -1LL);
}



inline jule::Bool _1a7dd2a0a_finished(_1a7dd1da0_ScopeParser* _self_) {
	return ((*_self_)._field_pos >= (*_self_)._field_stmts.len());
}



inline jule::Bool _1a7dd2c6e_is_last_st(_1a7dd1da0_ScopeParser* _self_) {
	return (((*_self_)._field_pos + 1LL) >= (*_self_)._field_stmts.len());
}



inline void _1a7dd308d_push_err(_1a7dd1da0_ScopeParser* _self_, jule::Ptr<_1a527737a_Token> _18927_token, jule::Str _18942_fmt) {
	_1a7dede88_push_err((*_self_)._field_p.ptr(), _18927_token,_18942_fmt,jule::Slice<jule::Any>());
}



inline void _1a7dd33ac_push_suggestion(_1a7dd1da0_ScopeParser* _self_, jule::Str _19434_fmt, jule::Slice<jule::Any> _19447_args) {
	_1a7dee2a7_push_suggestion((*_self_)._field_p.ptr(), _19434_fmt,jule::Any(_19447_args));
}



inline void _1a7dd3632_insert_as_next(_1a7dd1da0_ScopeParser* _self_, jule::Slice<jule::Ptr<_1a527737a_Token>>& _19838_tokens) {
	(*_self_)._field_stmts=jule::append((*_self_)._field_stmts.slice(0LL,((*_self_)._field_pos + 1LL)),(*_self_)._field_stmts.slice((*_self_)._field_pos));
	(*_self_)._field_stmts[((*_self_)._field_pos + 1LL)]=jule::new_ptr<_1a7dd1575_Stmt>(_1a7dd1575_Stmt{._field_tokens=_19838_tokens, });
}



inline jule::Ptr<_1a7dd1575_Stmt> _1a7dd3896_next(_1a7dd1da0_ScopeParser* _self_) {
	((*_self_)._field_pos)++;
	return (*_self_)._field_stmts[(*_self_)._field_pos];
}



inline jule::Ptr<_1a686070e_ScopeTree> _1a7dd3c4d_build_scope(_1a7dd1da0_ScopeParser* _self_, jule::Slice<jule::Ptr<_1a527737a_Token>>& _20835_tokens, jule::Ptr<_1a527737a_Token> _20857_end) {
	jule::Ptr<_1a686070e_ScopeTree> _20917_s = _1a7dd0453_new_scope();;
	_20917_s.get()._field_parent=(*_self_)._field_s;
	_20917_s.get()._field_end=_20857_end;
	_1a7dd1da0_ScopeParser _21217_ssp = _1a7dd1da0_ScopeParser{._field_p=(*_self_)._field_p, };;
	_1a7ddc8c2_build(&_21217_ssp, _20835_tokens,_20917_s);
	return _20917_s;
}



inline jule::Any _1a7dd405b_build_var_st(_1a7dd1da0_ScopeParser* _self_, jule::Slice<jule::Ptr<_1a527737a_Token>>& _21936_tokens) {
	jule::Ptr<_1a68631d4_VarDecl> _22017_v = _1a7e01a07_build_var((*_self_)._field_p, _21936_tokens);;
	_22017_v.get()._field_scope=(*_self_)._field_s;
	return jule::Any(_22017_v);
}



inline jule::Any _1a7dd4369_build_ret_st(_1a7dd1da0_ScopeParser* _self_, jule::Slice<jule::Ptr<_1a527737a_Token>> _22535_tokens) {
	jule::Ptr<_1a686358b_RetSt> _22617_st = jule::new_ptr<_1a686358b_RetSt>(_1a686358b_RetSt{._field_token=_22535_tokens[0LL], });;
	if ((_22535_tokens.len() > 1LL)) {
		_22535_tokens=_22535_tokens.slice(1LL);
		_22617_st.get()._field_expr=_1a7dee5b5_build_expr((*_self_)._field_p, _22535_tokens);
	};
	return jule::Any(_22617_st);
}



inline jule::Any _1a7dd4677_build_while_next_iter(_1a7dd1da0_ScopeParser* _self_, jule::Ptr<_1a7dd1575_Stmt>& _23645_s) {
	jule::Ptr<_1a6863b0d_Iter> _23717_it = jule::new_ptr<_1a6863b0d_Iter>(_1a6863b0d_Iter{._field_token=_23645_s.get()._field_tokens[0LL], });;
	jule::Slice<jule::Ptr<_1a527737a_Token>> _24017_tokens = _23645_s.get()._field_tokens.slice(1LL);;
	jule::Ptr<_1a68643d3_WhileKind> _24117_kind = jule::new_ptr<_1a68643d3_WhileKind>(_1a68643d3_WhileKind{});;
	if ((_24017_tokens.len() > 0LL)) {
		_24117_kind.get()._field_expr=_1a7dee5b5_build_expr((*_self_)._field_p, _24017_tokens);
	};
	if (_1a7dd2c6e_is_last_st(&(*_self_))) {
		_1a7dd308d_push_err(&(*_self_), _23717_it.get()._field_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	_24017_tokens=_1a7dd3896_next(&(*_self_)).get()._field_tokens;
	jule::Slice<jule::Ptr<_1a527737a_Token>> _25317_st_tokens = _1a7ddddbd_get_block_expr(_24017_tokens);;
	if ((_25317_st_tokens.len() > 0LL)) {
		jule::Ptr<_1a7dd1575_Stmt> _25521_stmt = jule::new_ptr<_1a7dd1575_Stmt>(_1a7dd1575_Stmt{._field_tokens=_25317_st_tokens, ._field_terminated=_23645_s.get()._field_terminated});;
		_24117_kind.get()._field_next_token=_25317_st_tokens[0LL];
		_24117_kind.get()._field_next=jule::Any(_1a7ddc5a3_build_st(&(*_self_), _25521_stmt));
	};
	jule::I64 _26317_i = _25317_st_tokens.len();;
	jule::Slice<jule::Ptr<_1a527737a_Token>> _26417_block_tokens = _1a7debb45_range(_26317_i,jule::Str("{", 1),jule::Str("}", 1),_24017_tokens);;
	if ((_26417_block_tokens == nullptr)) {
		_1a7dd2532_stop(&(*_self_));
		_1a7dd308d_push_err(&(*_self_), _23717_it.get()._field_token,jule::Str("body is not exist", 17));
		_1a7dd33ac_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_26317_i < _24017_tokens.len())) {
		_1a7dd308d_push_err(&(*_self_), _24017_tokens[_26317_i],jule::Str("invalid syntax", 14));
	};
	_23717_it.get()._field_scope=_1a7dd3c4d_build_scope(&(*_self_), _26417_block_tokens,_24017_tokens[(_26317_i - 1LL)]);
	_23717_it.get()._field_kind=jule::Any(_24117_kind);
	return jule::Any(_23717_it);
}



inline jule::Ptr<_1a68643d3_WhileKind> _1a7dd4985_build_while_iter_kind(_1a7dd1da0_ScopeParser* _self_, jule::Slice<jule::Ptr<_1a527737a_Token>>& _28145_tokens) {
	return jule::new_ptr<_1a68643d3_WhileKind>(_1a68643d3_WhileKind{._field_expr=_1a7dee5b5_build_expr((*_self_)._field_p, _28145_tokens), });
}



inline jule::Slice<jule::Slice<jule::Ptr<_1a527737a_Token>>> _1a7dd4cb5_get_range_kind_keys_tokens(_1a7dd1da0_ScopeParser* _self_, jule::Slice<jule::Ptr<_1a527737a_Token>>& _28750_toks) {
	jule::Slice<jule::Slice<jule::Ptr<_1a527737a_Token>>> _28818_vars;;
	jule::Slice<_1a43349cc_Log> _28824_errs;;
	std::tie(_28818_vars,_28824_errs) = _1a7dec31b_parts(_28750_toks,static_cast<jule::U64>(8LLU),true);
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_28824_errs);
	return _28818_vars;
}



inline jule::Ptr<_1a68631d4_VarDecl> _1a7dd50d4_build_range_kind_key(_1a7dd1da0_ScopeParser* _self_, jule::Slice<jule::Ptr<_1a527737a_Token>>& _29344_tokens) {
	if ((_29344_tokens.len() == 0LL)) {
		return nullptr;
	};
	jule::Ptr<_1a68631d4_VarDecl> _29717_key = jule::new_ptr<_1a68631d4_VarDecl>(_1a68631d4_VarDecl{._field_token=_29344_tokens[0LL], });;
	if ((_29717_key.get()._field_token.get()._field_id == static_cast<jule::U64>(36LLU))) {
		_29717_key.get()._field_mutable=true;
		if ((_29344_tokens.len() == 1LL)) {
			_1a7dd308d_push_err(&(*_self_), _29717_key.get()._field_token,jule::Str("invalid syntax", 14));
		};
		_29717_key.get()._field_token=_29344_tokens[1LL];
	} else if ((_29344_tokens.len() > 1LL)) {
		_1a7dd308d_push_err(&(*_self_), _29344_tokens[1LL],jule::Str("invalid syntax", 14));
	};
	if ((_29717_key.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1a7dd308d_push_err(&(*_self_), _29717_key.get()._field_token,jule::Str("invalid syntax", 14));
		_1a7dd33ac_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	};
	_29717_key.get()._field_ident=_29717_key.get()._field_token.get()._field_kind;
	return _29717_key;
}



inline jule::Slice<jule::Ptr<_1a68631d4_VarDecl>> _1a7dd53e2_build_range_kind_keys(_1a7dd1da0_ScopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1a527737a_Token>>>& _31845_parts) {
	jule::Slice<jule::Ptr<_1a68631d4_VarDecl>> _31917_keys = nullptr;;
	{
		auto &expr = _31845_parts;
		auto it = expr.begin();
		_iter_begin_1aa3b9198:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1a527737a_Token>> _32021_tokens = *it;
			{
				_31917_keys = jule::alloc_for_append(_31917_keys,1);_31917_keys.__push(_1a7dd50d4_build_range_kind_key(&(*_self_), _32021_tokens));;
			}
			_iter_next_1aa3b9198:;
			++it;
			goto _iter_begin_1aa3b9198;
		}
		_iter_end_1aa3b9198:;
	};
	return _31917_keys;
}



inline void _1a7dd5733_setup_range_kind_keys_plain(_1a7dd1da0_ScopeParser* _self_, jule::Ptr<_1a6864c74_RangeKind>& _32651_rng, jule::Slice<jule::Ptr<_1a527737a_Token>>& _32673_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1a527737a_Token>>> _32717_key_tokens = _1a7dd4cb5_get_range_kind_keys_tokens(&(*_self_), _32673_tokens);;
	if ((_32717_key_tokens.len() == 0LL)) {
		return;;
	};
	if ((_32717_key_tokens.len() > 2LL)) {
		_1a7dd308d_push_err(&(*_self_), _32651_rng.get()._field_in_token,jule::Str("range variables can be maximum two", 34));
	};
	jule::Slice<jule::Ptr<_1a68631d4_VarDecl>> _33417_keys = _1a7dd53e2_build_range_kind_keys(&(*_self_), _32717_key_tokens);;
	_32651_rng.get()._field_key_a=_33417_keys[0LL];
	if ((_33417_keys.len() > 1LL)) {
		_32651_rng.get()._field_key_b=_33417_keys[1LL];
	};
}



inline void _1a7dd5a85_setup_range_kind_keys_explicit(_1a7dd1da0_ScopeParser* _self_, jule::Ptr<_1a6864c74_RangeKind>& _34154_rng, jule::Slice<jule::Ptr<_1a527737a_Token>>& _34176_tokens) {
	jule::I64 _34217_i = 0LL;;
	jule::Slice<jule::Ptr<_1a527737a_Token>> _34317_rang = _1a7debb45_range(_34217_i,jule::Str("(", 1),jule::Str(")", 1),_34176_tokens);;
	if ((_34217_i < _34176_tokens.len())) {
		_1a7dd308d_push_err(&(*_self_), _34154_rng.get()._field_in_token,jule::Str("invalid syntax", 14));
	};
	_1a7dd5733_setup_range_kind_keys_plain(&(*_self_), _34154_rng,_34317_rang);
}



inline void _1a7dd5db5_setup_range_kind_keys(_1a7dd1da0_ScopeParser* _self_, jule::Ptr<_1a6864c74_RangeKind>& _35045_rng, jule::Slice<jule::Ptr<_1a527737a_Token>>& _35067_tokens) {
	if ((_35067_tokens[0LL].get()._field_id == static_cast<jule::U64>(3LLU))) {
		if ((_35067_tokens[0LL].get()._field_kind != jule::Str("(", 1))) {
			_1a7dd308d_push_err(&(*_self_), _35067_tokens[0LL],jule::Str("invalid syntax", 14));
			return;;
		};
		_1a7dd5a85_setup_range_kind_keys_explicit(&(*_self_), _35045_rng,_35067_tokens);
		return;;
	};
	_1a7dd5733_setup_range_kind_keys_plain(&(*_self_), _35045_rng,_35067_tokens);
}



inline jule::Ptr<_1a6864c74_RangeKind> _1a7dd6316_build_range_iter_kind(_1a7dd1da0_ScopeParser* _self_, jule::Slice<jule::Ptr<_1a527737a_Token>>& _36245_var_tokens, jule::Slice<jule::Ptr<_1a527737a_Token>>& _36314_expr_tokens, jule::Ptr<_1a527737a_Token>& _36342_in_token) {
	jule::Ptr<_1a6864c74_RangeKind> _36417_rng = jule::new_ptr<_1a6864c74_RangeKind>(_1a6864c74_RangeKind{._field_in_token=_36342_in_token, });;
	if ((_36314_expr_tokens.len() == 0LL)) {
		_1a7dd308d_push_err(&(*_self_), _36417_rng.get()._field_in_token,jule::Str("expression missing", 18));
		return _36417_rng;
	};
	_36417_rng.get()._field_expr=_1a7dee5b5_build_expr((*_self_)._field_p, _36314_expr_tokens);
	if ((_36245_var_tokens.len() > 0LL)) {
		_1a7dd5db5_setup_range_kind_keys(&(*_self_), _36417_rng,_36245_var_tokens);
	};
	return _36417_rng;
}



inline jule::Any _1a7dd66bd_build_common_iter_kind(_1a7dd1da0_ScopeParser* _self_, jule::Slice<jule::Ptr<_1a527737a_Token>>& _37846_tokens, jule::Ptr<_1a527737a_Token>& _37865_err_tok) {
	jule::I64 _37917_brace_n = 0LL;;
	{
		auto &expr = _37846_tokens;
		auto it = expr.begin();
		_iter_begin_1aa3ccb29:;
		if (it != expr.end()) {
			jule::I64 _38014_i = it - expr.begin();
			jule::Ptr<_1a527737a_Token> _38021_tok = *it;
			{
				if ((_38021_tok.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _38021_tok.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1aa3ce037:;
							{
								(_37917_brace_n)++;
								goto _iter_next_1aa3ccb29;
							}
						}
						else {
							_case_begin_1aa3cdc29:;
							{
								(_37917_brace_n)--;
							}
						}
						_match_end_1aa3cdb6e:;
					};
				};
				if ((_37917_brace_n != 0LL)) {
					goto _iter_next_1aa3ccb29;
				};
				{
					auto &_match_expr{ _38021_tok.get()._field_id };
					
					if (_match_expr == static_cast<jule::U64>(15LLU)) {
						_case_begin_1aa3ce213:;
						{
							jule::Slice<jule::Ptr<_1a527737a_Token>> _39725_decl_tokens = _37846_tokens.slice(0LL,_38014_i);;
							jule::Slice<jule::Ptr<_1a527737a_Token>> _39825_expr_tokens = _37846_tokens.slice((_38014_i + 1LL));;
							return jule::Any(_1a7dd6316_build_range_iter_kind(&(*_self_), _39725_decl_tokens,_39825_expr_tokens,_38021_tok));
						}
					}
					_match_end_1aa3ce9d8:;
				};
			}
			_iter_next_1aa3ccb29:;
			++it;
			_38014_i++;
			goto _iter_begin_1aa3ccb29;
		}
		_iter_end_1aa3ccb29:;
	};
	return jule::Any(_1a7dd4985_build_while_iter_kind(&(*_self_), _37846_tokens));
}



inline jule::Any _1a7dd69cb_build_common_iter(_1a7dd1da0_ScopeParser* _self_, jule::Slice<jule::Ptr<_1a527737a_Token>> _40540_tokens) {
	jule::Ptr<_1a6863b0d_Iter> _40617_it = jule::new_ptr<_1a6863b0d_Iter>(_1a6863b0d_Iter{._field_token=_40540_tokens[0LL], });;
	_40540_tokens=_40540_tokens.slice(1LL);
	if ((_40540_tokens.len() == 0LL)) {
		_1a7dd2532_stop(&(*_self_));
		_1a7dd308d_push_err(&(*_self_), _40617_it.get()._field_token,jule::Str("body is not exist", 17));
		_1a7dd33ac_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1a527737a_Token>> _41617_expr_tokens = _1a7ddddbd_get_block_expr(_40540_tokens);;
	if ((_41617_expr_tokens.len() > 0LL)) {
		_40617_it.get()._field_kind=jule::Any(_1a7dd66bd_build_common_iter_kind(&(*_self_), _41617_expr_tokens,_40617_it.get()._field_token));
	};
	jule::I64 _42017_i = _41617_expr_tokens.len();;
	jule::Slice<jule::Ptr<_1a527737a_Token>> _42117_scope_tokens = _1a7debb45_range(_42017_i,jule::Str("{", 1),jule::Str("}", 1),_40540_tokens);;
	if ((_42117_scope_tokens == nullptr)) {
		_1a7dd2532_stop(&(*_self_));
		_1a7dd308d_push_err(&(*_self_), _40617_it.get()._field_token,jule::Str("body is not exist", 17));
		_1a7dd33ac_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_42017_i < _40540_tokens.len())) {
		_1a7dd308d_push_err(&(*_self_), _40540_tokens[_42017_i],jule::Str("invalid syntax", 14));
	};
	_40617_it.get()._field_scope=_1a7dd3c4d_build_scope(&(*_self_), _42117_scope_tokens,_40540_tokens[(_42017_i - 1LL)]);
	return jule::Any(_40617_it);
}



inline jule::Any _1a7dd6cd9_build_iter_st(_1a7dd1da0_ScopeParser* _self_, jule::Ptr<_1a7dd1575_Stmt>& _43537_st) {
	if (_43537_st.get()._field_terminated) {
		return jule::Any(_1a7dd4677_build_while_next_iter(&(*_self_), _43537_st));
	};
	return jule::Any(_1a7dd69cb_build_common_iter(&(*_self_), _43537_st.get()._field_tokens));
}



inline jule::Any _1a7dd70e7_build_break_st(_1a7dd1da0_ScopeParser* _self_, jule::Slice<jule::Ptr<_1a527737a_Token>>& _44238_tokens) {
	jule::Ptr<_1a686512b_BreakSt> _44317_brk = jule::new_ptr<_1a686512b_BreakSt>(_1a686512b_BreakSt{._field_token=_44238_tokens[0LL], });;
	if ((_44238_tokens.len() > 1LL)) {
		if ((_44238_tokens[1LL].get()._field_id != static_cast<jule::U64>(2LLU))) {
			_1a7dd308d_push_err(&(*_self_), _44238_tokens[1LL],jule::Str("invalid syntax", 14));
			_1a7dd33ac_push_suggestion(&(*_self_), jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>());
		} else {
			_44317_brk.get()._field_label=_44238_tokens[1LL];
			if ((_44238_tokens.len() > 2LL)) {
				_1a7dd308d_push_err(&(*_self_), _44238_tokens[1LL],jule::Str("invalid syntax", 14));
			};
		};
	};
	return jule::Any(_44317_brk);
}



inline jule::Any _1a7dd7405_build_cont_st(_1a7dd1da0_ScopeParser* _self_, jule::Slice<jule::Ptr<_1a527737a_Token>>& _46037_tokens) {
	jule::Ptr<_1a68654d3_ContSt> _46117_cont = jule::new_ptr<_1a68654d3_ContSt>(_1a68654d3_ContSt{._field_token=_46037_tokens[0LL], });;
	if ((_46037_tokens.len() > 1LL)) {
		if ((_46037_tokens[1LL].get()._field_id != static_cast<jule::U64>(2LLU))) {
			_1a7dd308d_push_err(&(*_self_), _46037_tokens[1LL],jule::Str("invalid syntax", 14));
			_1a7dd33ac_push_suggestion(&(*_self_), jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>());
		} else {
			_46117_cont.get()._field_label=_46037_tokens[1LL];
			if ((_46037_tokens.len() > 2LL)) {
				_1a7dd308d_push_err(&(*_self_), _46037_tokens[1LL],jule::Str("invalid syntax", 14));
			};
		};
	};
	return jule::Any(_46117_cont);
}



inline jule::Ptr<_1a6865956_If> _1a7dd7713_build_if(_1a7dd1da0_ScopeParser* _self_, jule::Slice<jule::Ptr<_1a527737a_Token>>& _47832_tokens) {
	jule::Ptr<_1a6865956_If> _47917_model = jule::new_ptr<_1a6865956_If>(_1a6865956_If{._field_token=_47832_tokens[0LL], });;
	_47832_tokens=_47832_tokens.slice(1LL);
	jule::Slice<jule::Ptr<_1a527737a_Token>> _48317_expr_tokens = _1a7ddddbd_get_block_expr(_47832_tokens);;
	jule::I64 _48417_i = 0LL;;
	if ((_48317_expr_tokens.len() == 0LL)) {
		_1a7dd308d_push_err(&(*_self_), _47917_model.get()._field_token,jule::Str("expression missing", 18));
	} else {
		_48417_i=static_cast<jule::I64>(_48317_expr_tokens.len());
	};
	jule::Slice<jule::Ptr<_1a527737a_Token>> _49017_scope_tokens = _1a7debb45_range(_48417_i,jule::Str("{", 1),jule::Str("}", 1),_47832_tokens);;
	if ((_49017_scope_tokens == nullptr)) {
		_1a7dd2532_stop(&(*_self_));
		_1a7dd308d_push_err(&(*_self_), _47917_model.get()._field_token,jule::Str("body is not exist", 17));
		_1a7dd33ac_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1a527737a_Token> _49717_end = _47832_tokens[(_48417_i - 1LL)];;
	if ((_48417_i < _47832_tokens.len())) {
		if ((_47832_tokens[_48417_i].get()._field_id == static_cast<jule::U64>(17LLU))) {
			_47832_tokens=_47832_tokens.slice(_48417_i);
		} else {
			_1a7dd308d_push_err(&(*_self_), _47832_tokens[_48417_i],jule::Str("invalid syntax", 14));
			_47832_tokens=nullptr;
		};
	};
	_47917_model.get()._field_expr=_1a7dee5b5_build_expr((*_self_)._field_p, _48317_expr_tokens);
	_47917_model.get()._field_scope=_1a7dd3c4d_build_scope(&(*_self_), _49017_scope_tokens,_49717_end);
	return _47917_model;
}



inline jule::Ptr<_1a6865d0d_Else> _1a7dd7a21_build_else(_1a7dd1da0_ScopeParser* _self_, jule::Slice<jule::Ptr<_1a527737a_Token>>& _51134_tokens) {
	jule::Ptr<_1a6865d0d_Else> _51217_els = jule::new_ptr<_1a6865d0d_Else>(_1a6865d0d_Else{._field_token=_51134_tokens[0LL], });;
	_51134_tokens=_51134_tokens.slice(1LL);
	jule::I64 _51617_i = 0LL;;
	jule::Slice<jule::Ptr<_1a527737a_Token>> _51717_scope_tokens = _1a7debb45_range(_51617_i,jule::Str("{", 1),jule::Str("}", 1),_51134_tokens);;
	if ((_51717_scope_tokens == nullptr)) {
		if ((_51617_i < _51134_tokens.len())) {
			_1a7dd308d_push_err(&(*_self_), _51217_els.get()._field_token,jule::Str("else's cannot have any expression", 33));
		} else {
			_1a7dd2532_stop(&(*_self_));
			_1a7dd308d_push_err(&(*_self_), _51217_els.get()._field_token,jule::Str("body is not exist", 17));
			_1a7dd33ac_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		};
		return nullptr;
	};
	if ((_51617_i < _51134_tokens.len())) {
		_1a7dd308d_push_err(&(*_self_), _51134_tokens[_51617_i],jule::Str("invalid syntax", 14));
	};
	_51217_els.get()._field_scope=_1a7dd3c4d_build_scope(&(*_self_), _51717_scope_tokens,_51134_tokens[(_51617_i - 1LL)]);
	return _51217_els;
}



inline jule::Any _1a7dd7d2e_build_if_else_chain(_1a7dd1da0_ScopeParser* _self_, jule::Slice<jule::Ptr<_1a527737a_Token>> _53542_tokens) {
	jule::Ptr<_1a6866281_Conditional> _53617_chain = jule::new_ptr<_1a6866281_Conditional>(_1a6866281_Conditional{._field_head=_1a7dd7713_build_if(&(*_self_), _53542_tokens), });;
	if ((_53617_chain.get()._field_head == nullptr)) {
		return nullptr;
	};
	while ((_53542_tokens.len() != 0LL)) {
		{
			if ((_53542_tokens[0LL].get()._field_id != static_cast<jule::U64>(17LLU))) {
				goto _iter_end_1aa400289;
			};
			if (((_53542_tokens.len() > 1LL) && (_53542_tokens[1LL].get()._field_id == static_cast<jule::U64>(16LLU)))) {
				_53542_tokens=_53542_tokens.slice(1LL);
				jule::Ptr<_1a6865956_If> _54825_elif = _1a7dd7713_build_if(&(*_self_), _53542_tokens);;
				_53617_chain.get()._field_tail = jule::alloc_for_append(_53617_chain.get()._field_tail,1);_53617_chain.get()._field_tail.__push(_54825_elif);;
				goto _iter_next_1aa400289;
			};
			_53617_chain.get()._field_default=_1a7dd7a21_build_else(&(*_self_), _53542_tokens);
			goto _iter_end_1aa400289;
		}
	_iter_next_1aa400289:;
	}
	_iter_end_1aa400289:;;
	return jule::Any(_53617_chain);
}



inline jule::Any _1a7dd813c_build_co_call_st(_1a7dd1da0_ScopeParser* _self_, jule::Slice<jule::Ptr<_1a527737a_Token>> _55839_tokens) {
	jule::Ptr<_1a685766d_CoExpr> _55917_c = jule::new_ptr<_1a685766d_CoExpr>(_1a685766d_CoExpr{._field_token=_55839_tokens[0LL], });;
	_55839_tokens=_55839_tokens.slice(1LL);
	_55917_c.get()._field_expr=_1a7dee5b5_build_expr((*_self_)._field_p, _55839_tokens);
	return jule::Any(_55917_c);
}



inline jule::Any _1a7dd844a_build_goto_st(_1a7dd1da0_ScopeParser* _self_, jule::Slice<jule::Ptr<_1a527737a_Token>>& _56737_tokens) {
	jule::Ptr<_1a685e1be_GotoSt> _56817_gt = jule::new_ptr<_1a685e1be_GotoSt>(_1a685e1be_GotoSt{._field_token=_56737_tokens[0LL], });;
	if ((_56737_tokens.len() == 1LL)) {
		_1a7dd308d_push_err(&(*_self_), _56817_gt.get()._field_token,jule::Str("missing label identifier for goto statement", 43));
		return nullptr;
	} else if ((_56737_tokens.len() > 2LL)) {
		_1a7dd308d_push_err(&(*_self_), _56737_tokens[2LL],jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_1a527737a_Token> _57717_ident_token = _56737_tokens[1LL];;
	if ((_57717_ident_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1a7dd308d_push_err(&(*_self_), _57717_ident_token,jule::Str("invalid syntax", 14));
		_1a7dd33ac_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return jule::Any(_56817_gt);
	};
	_56817_gt.get()._field_label=_57717_ident_token;
	return jule::Any(_56817_gt);
}



inline jule::Any _1a7dd8758_build_fall_st(_1a7dd1da0_ScopeParser* _self_, jule::Slice<jule::Ptr<_1a527737a_Token>>& _58737_tokens) {
	jule::Ptr<_1a685e4aa_FallSt> _58817_fll = jule::new_ptr<_1a685e4aa_FallSt>(_1a685e4aa_FallSt{._field_token=_58737_tokens[0LL]});;
	if ((_58737_tokens.len() > 1LL)) {
		_1a7dd308d_push_err(&(*_self_), _58737_tokens[1LL],jule::Str("invalid syntax", 14));
	};
	return jule::Any(_58817_fll);
}



inline jule::Any _1a7dd8a66_build_type_alias_st(_1a7dd1da0_ScopeParser* _self_, jule::Slice<jule::Ptr<_1a527737a_Token>>& _59743_tokens) {
	jule::Ptr<_1a6866957_TypeAliasDecl> _59817_tad = _1a7e00bb0_build_type_alias_decl((*_self_)._field_p, _59743_tokens);;
	_59817_tad.get()._field_scope=(*_self_)._field_s;
	return jule::Any(_59817_tad);
}



inline void _1a7dd8ec8_push_case_expr(_1a7dd1da0_ScopeParser* _self_, jule::Slice<jule::Ptr<_1a527737a_Token>> _60337_tokens, jule::Ptr<_1a527737a_Token> _60359_token, jule::Bool _6049_type_match, jule::Slice<jule::Ptr<_1a6855e41_Expr>>& _60432_exprs) {
	if ((_60337_tokens.len() == 0LL)) {
		return;;
	};
	if (_6049_type_match) {
		jule::I64 _61021_i = 0LL;;
		jule::Ptr<_1a68529cb_TypeDecl> _61122_t;;
		jule::Bool _61125_ok;;
		std::tie(_61122_t,_61125_ok) = _1a7e008a2_build_type((*_self_)._field_p, _60337_tokens,(&(_61021_i)),true);
		if (_61125_ok) {
			_60432_exprs = jule::alloc_for_append(_60432_exprs,1);_60432_exprs.__push(jule::new_ptr<_1a6855e41_Expr>(_1a6855e41_Expr{._field_token=_60337_tokens[0LL], ._field_kind=jule::Any(_61122_t)}));;
			if ((_61021_i < _60337_tokens.len())) {
				_1a7dd308d_push_err(&(*_self_), _60337_tokens[_61021_i],jule::Str("invalid syntax", 14));
			};
		};
		return;;
	};
	_60432_exprs = jule::alloc_for_append(_60432_exprs,1);_60432_exprs.__push(_1a7dee5b5_build_expr((*_self_)._field_p, _60337_tokens));;
}



inline jule::Slice<jule::Ptr<_1a6855e41_Expr>> _1a7dd9380_build_case_exprs(_1a7dd1da0_ScopeParser* _self_, jule::Slice<jule::Ptr<_1a527737a_Token>>& _62640_tokens, jule::Bool _62658_type_match) {
	jule::Slice<jule::Ptr<_1a6855e41_Expr>> _62717_exprs = jule::Slice<jule::Ptr<_1a6855e41_Expr>>::alloc(0LL,1LL);;
	jule::I64 _62917_brace_n = 0LL;;
	jule::I64 _63017_j = 0LL;;
	{
		auto &expr = _62640_tokens;
		auto it = expr.begin();
		_iter_begin_1aa414622:;
		if (it != expr.end()) {
			jule::I64 _63114_i = it - expr.begin();
			jule::Ptr<_1a527737a_Token> _63121_tok = *it;
			{
				if ((_63121_tok.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _63121_tok.get()._field_kind };
						
						if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
							_case_begin_1aa415975:;
							{
								(_62917_brace_n)++;
							}
						}
						else {
							_case_begin_1aa415667:;
							{
								(_62917_brace_n)--;
							}
						}
						_match_end_1aa4155ac:;
					};
					goto _iter_next_1aa414622;
				} else if ((_62917_brace_n != 0LL)) {
					goto _iter_next_1aa414622;
				};
				{
					
					if (((_63121_tok.get()._field_id == static_cast<jule::U64>(7LLU)) && (_63121_tok.get()._field_kind == jule::Str("|", 1)))) {
						_case_begin_1aa415b51:;
						{
							jule::Slice<jule::Ptr<_1a527737a_Token>> _64721_expr_tokens = _62640_tokens.slice(_63017_j,_63114_i);;
							if ((_64721_expr_tokens.len() == 0LL)) {
								_1a7dd308d_push_err(&(*_self_), _63121_tok,jule::Str("expression missing", 18));
							} else {
								_1a7dd8ec8_push_case_expr(&(*_self_), _62640_tokens.slice(_63017_j,_63114_i),_63121_tok,_62658_type_match,_62717_exprs);
							};
							_63017_j=static_cast<jule::I64>((_63114_i + 1LL));
						}
					}
					else if ((_63121_tok.get()._field_id == static_cast<jule::U64>(11LLU))) {
						_case_begin_1aa4163d2:;
						{
							_1a7dd8ec8_push_case_expr(&(*_self_), _62640_tokens.slice(_63017_j,_63114_i),_63121_tok,_62658_type_match,_62717_exprs);
							_62640_tokens=_62640_tokens.slice((_63114_i + 1LL));
							return _62717_exprs;
						}
					}
					_match_end_1aa415e1a:;
				};
			}
			_iter_next_1aa414622:;
			++it;
			_63114_i++;
			goto _iter_begin_1aa414622;
		}
		_iter_end_1aa414622:;
	};
	_1a7dd308d_push_err(&(*_self_), _62640_tokens[0LL],jule::Str("invalid syntax", 14));
	_62640_tokens=nullptr;
	return nullptr;
}



inline jule::Ptr<_1a686070e_ScopeTree> _1a7dd968d_build_case_scope(_1a7dd1da0_ScopeParser* _self_, jule::Slice<jule::Ptr<_1a527737a_Token>>& _66540_tokens) {
	jule::I64 _66617_n = 0LL;;
	for (;;) {
		{
			jule::I64 _66821_i = 0LL;;
			jule::Slice<jule::Ptr<_1a527737a_Token>> _66922_next;;
			std::tie(_66922_next,std::ignore) = _1a7dd1278_skip_st(_66821_i,_66540_tokens.slice(_66617_n));
			if ((_66922_next.len() == 0LL)) {
				goto _iter_end_1aa41ac44;
			};
			jule::Ptr<_1a527737a_Token> _67317_tok = _66922_next[0LL];;
			if (((_67317_tok.get()._field_id != static_cast<jule::U64>(7LLU)) || (_67317_tok.get()._field_kind != jule::Str("|", 1)))) {
				_66617_n+=_66821_i;
				goto _iter_next_1aa41ac44;
			};
			jule::Slice<jule::Ptr<_1a527737a_Token>> _67821_scope_tokens = _66540_tokens.slice(0LL,_66617_n);;
			jule::Ptr<_1a686070e_ScopeTree> _67921_scope = _1a7dd3c4d_build_scope(&(*_self_), _67821_scope_tokens,_66540_tokens[_66617_n]);;
			_66540_tokens=_66540_tokens.slice(_66617_n);
			return _67921_scope;
		}
	_iter_next_1aa41ac44:;
	}
	_iter_end_1aa41ac44:;;
	jule::Ptr<_1a527737a_Token> _68317_end = jule::Ptr<_1a527737a_Token>();;
	if ((_66540_tokens.len() > 0LL)) {
		_68317_end=_66540_tokens[(_66540_tokens.len() - 1LL)];
	};
	jule::Ptr<_1a686070e_ScopeTree> _68717_scope = _1a7dd3c4d_build_scope(&(*_self_), _66540_tokens,_68317_end);;
	_66540_tokens=nullptr;
	return _68717_scope;
}



inline std::tuple<jule::Ptr<_1a6866dca_Case>,jule::Bool> _1a7dd9a45_build_case(_1a7dd1da0_ScopeParser* _self_, jule::Slice<jule::Ptr<_1a527737a_Token>>& _69234_tokens, jule::Bool _69252_type_match) {
	jule::Ptr<_1a6866dca_Case> _69317_c = jule::new_ptr<_1a6866dca_Case>(_1a6866dca_Case{._field_token=_69234_tokens[0LL], });;
	_69234_tokens=_69234_tokens.slice(1LL);
	_69317_c.get()._field_exprs=_1a7dd9380_build_case_exprs(&(*_self_), _69234_tokens,_69252_type_match);
	_69317_c.get()._field_scope=_1a7dd968d_build_case_scope(&(*_self_), _69234_tokens);
	jule::Bool _69913_is_default = (_69317_c.get()._field_exprs.len() == 0LL);;
	return std::make_tuple(_69317_c,_69913_is_default);
}



inline std::tuple<jule::Slice<jule::Ptr<_1a6866dca_Case>>,jule::Ptr<_1a6865d0d_Else>> _1a7dd9dec_build_cases(_1a7dd1da0_ScopeParser* _self_, jule::Slice<jule::Ptr<_1a527737a_Token>> _70334_tokens, jule::Bool _70352_type_match) {
	jule::Slice<jule::Ptr<_1a6866dca_Case>> _70417_cases = nullptr;;
	jule::Ptr<_1a6865d0d_Else> _70517_def = nullptr;;
	jule::Bool _70617_def_not_last = false;;
	while ((_70334_tokens.len() > 0LL)) {
		{
			jule::Ptr<_1a527737a_Token> _70821_tok = _70334_tokens[0LL];;
			if (((_70821_tok.get()._field_id != static_cast<jule::U64>(7LLU)) || (_70821_tok.get()._field_kind != jule::Str("|", 1)))) {
				_1a7dd308d_push_err(&(*_self_), _70821_tok,jule::Str("invalid syntax", 14));
				goto _iter_end_1aa425204;
			};
			jule::Ptr<_1a6866dca_Case> _71322_c;;
			jule::Bool _71325_is_default;;
			std::tie(_71322_c,_71325_is_default) = _1a7dd9a45_build_case(&(*_self_), _70334_tokens,_70352_type_match);
			if (_71325_is_default) {
				_71322_c.get()._field_token=_70821_tok;
				if ((_70517_def == nullptr)) {
					_70517_def=jule::new_ptr<_1a6865d0d_Else>(_1a6865d0d_Else{._field_token=_71322_c.get()._field_token, ._field_scope=_71322_c.get()._field_scope});
				} else {
					_1a7dd308d_push_err(&(*_self_), _70821_tok,jule::Str("invalid syntax", 14));
				};
			} else {
				_70617_def_not_last=(_70617_def_not_last || (_70517_def != nullptr));
				_70417_cases = jule::alloc_for_append(_70417_cases,1);_70417_cases.__push(_71322_c);;
			};
		}
	_iter_next_1aa425204:;
	}
	_iter_end_1aa425204:;;
	if (_70617_def_not_last) {
		_1a7dd308d_push_err(&(*_self_), _70517_def.get()._field_token,jule::Str("default case should be last case", 32));
	};
	return std::make_tuple(_70417_cases,_70517_def);
}



inline jule::Ptr<_1a68675a1_MatchCase> _1a7dda20a_build_match_case(_1a7dd1da0_ScopeParser* _self_, jule::Slice<jule::Ptr<_1a527737a_Token>> _73739_tokens) {
	jule::Ptr<_1a68675a1_MatchCase> _73817_m = jule::new_ptr<_1a68675a1_MatchCase>(_1a68675a1_MatchCase{._field_token=_73739_tokens[0LL], });;
	_73739_tokens=_73739_tokens.slice(1LL);
	if (((_73739_tokens.len() > 0LL) && (_73739_tokens[0LL].get()._field_id == static_cast<jule::U64>(10LLU)))) {
		_73817_m.get()._field_type_match=true;
		_73739_tokens=_73739_tokens.slice(1LL);
	};
	jule::Slice<jule::Ptr<_1a527737a_Token>> _74817_expr_tokens = _1a7ddddbd_get_block_expr(_73739_tokens);;
	if ((_74817_expr_tokens.len() > 0LL)) {
		_73817_m.get()._field_expr=_1a7dee5b5_build_expr((*_self_)._field_p, _74817_expr_tokens);
	} else if (_73817_m.get()._field_type_match) {
		_1a7dd308d_push_err(&(*_self_), _73817_m.get()._field_token,jule::Str("expression missing", 18));
	};
	jule::I64 _75517_i = _74817_expr_tokens.len();;
	jule::Slice<jule::Ptr<_1a527737a_Token>> _75617_block_toks = _1a7debb45_range(_75517_i,jule::Str("{", 1),jule::Str("}", 1),_73739_tokens);;
	if ((_75617_block_toks == nullptr)) {
		_1a7dd2532_stop(&(*_self_));
		_1a7dd308d_push_err(&(*_self_), _73817_m.get()._field_token,jule::Str("body is not exist", 17));
		_1a7dd33ac_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	} else if ((_75517_i < _73739_tokens.len())) {
		_1a7dd308d_push_err(&(*_self_), _73739_tokens[_75517_i],jule::Str("invalid syntax", 14));
	};
	_73817_m.get()._field_end=_73739_tokens[(_75517_i - 1LL)];
	std::tie(_73817_m.get()._field_cases,_73817_m.get()._field_default) = _1a7dd9dec_build_cases(&(*_self_), _75617_block_toks,_73817_m.get()._field_type_match);
	return _73817_m;
}



inline jule::Ptr<_1a686070e_ScopeTree> _1a7dda518_build_scope_st(_1a7dd1da0_ScopeParser* _self_, jule::Slice<jule::Ptr<_1a527737a_Token>> _77037_tokens) {
	jule::Bool _77117_is_unsafe = false;;
	jule::Bool _77217_is_deferred = false;;
	jule::Ptr<_1a527737a_Token> _77317_token = _77037_tokens[0LL];;
	if ((_77317_token.get()._field_id == static_cast<jule::U64>(35LLU))) {
		_77117_is_unsafe=true;
		_77037_tokens=_77037_tokens.slice(1LL);
		if ((_77037_tokens.len() == 0LL)) {
			_1a7dd308d_push_err(&(*_self_), _77317_token,jule::Str("invalid syntax", 14));
			return nullptr;
		};
		_77317_token=_77037_tokens[0LL];
		if ((_77317_token.get()._field_id == static_cast<jule::U64>(37LLU))) {
			_77217_is_deferred=true;
			_77037_tokens=_77037_tokens.slice(1LL);
			if ((_77037_tokens.len() == 0LL)) {
				_1a7dd308d_push_err(&(*_self_), _77317_token,jule::Str("invalid syntax", 14));
				return nullptr;
			};
		};
	} else if ((_77317_token.get()._field_id == static_cast<jule::U64>(37LLU))) {
		_77217_is_deferred=true;
		_77037_tokens=_77037_tokens.slice(1LL);
		if ((_77037_tokens.len() == 0LL)) {
			_1a7dd308d_push_err(&(*_self_), _77317_token,jule::Str("invalid syntax", 14));
			return nullptr;
		};
	};
	jule::I64 _79917_i = 0LL;;
	jule::Slice<jule::Ptr<_1a527737a_Token>> _80017_scope_tokens = _1a7debb45_range(_79917_i,jule::Str("{", 1),jule::Str("}", 1),_77037_tokens);;
	if ((_80017_scope_tokens == nullptr)) {
		_1a7dd308d_push_err(&(*_self_), _77317_token,jule::Str("invalid syntax", 14));
		return nullptr;
	} else if ((_79917_i < _77037_tokens.len())) {
		_1a7dd308d_push_err(&(*_self_), _77037_tokens[_79917_i],jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_1a686070e_ScopeTree> _80717_scope = _1a7dd3c4d_build_scope(&(*_self_), _80017_scope_tokens,_77037_tokens[(_79917_i - 1LL)]);;
	_80717_scope.get()._field_unsafety=_77117_is_unsafe;
	_80717_scope.get()._field_deferred=_77217_is_deferred;
	return _80717_scope;
}



inline jule::Ptr<_1a685dd17_LabelSt> _1a7dda826_build_label_st(_1a7dd1da0_ScopeParser* _self_, jule::Slice<jule::Ptr<_1a527737a_Token>>& _81338_tokens) {
	jule::Ptr<_1a685dd17_LabelSt> _81417_lbl = jule::new_ptr<_1a685dd17_LabelSt>(_1a685dd17_LabelSt{._field_token=_81338_tokens[0LL], ._field_ident=_81338_tokens[0LL].get()._field_kind});;
	if ((_81338_tokens.len() > 2LL)) {
		_81338_tokens=_81338_tokens.slice(2LL);
		_1a7dd3632_insert_as_next(&(*_self_), _81338_tokens);
	};
	return _81417_lbl;
}



inline std::tuple<jule::Any,jule::Bool> _1a7ddab34_build_id_st(_1a7dd1da0_ScopeParser* _self_, jule::Slice<jule::Ptr<_1a527737a_Token>>& _82835_tokens) {
	jule::Bool _82865_ok = jule::Bool();
	if ((_82835_tokens.len() == 1LL)) {
		return std::make_tuple(jule::Any(),_82865_ok);
	};
	jule::Ptr<_1a527737a_Token> _83317_token = _82835_tokens[1LL];;
	{
		auto &_match_expr{ _83317_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_1aa43d184:;
			{
				_82865_ok = true;
				return std::make_tuple(jule::Any(_1a7dda826_build_label_st(&(*_self_), _82835_tokens)),_82865_ok);
			}
		}
		_match_end_1aa43dc45:;
	};
	return std::make_tuple(jule::Any(),_82865_ok);
}



inline jule::Ptr<_1a7de9eea_AssignInfo> _1a7ddae42_build_assign_info(_1a7dd1da0_ScopeParser* _self_, jule::Slice<jule::Ptr<_1a527737a_Token>>& _84241_tokens) {
	jule::Ptr<_1a7de9eea_AssignInfo> _84317_info = jule::new_ptr<_1a7de9eea_AssignInfo>(_1a7de9eea_AssignInfo{._field_ok=true});;
	jule::I64 _84617_brace_n = 0LL;;
	{
		auto &expr = _84241_tokens;
		auto it = expr.begin();
		_iter_begin_1aa441099:;
		if (it != expr.end()) {
			jule::I64 _84714_i = it - expr.begin();
			jule::Ptr<_1a527737a_Token> _84721_token = *it;
			{
				if ((_84721_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _84721_token.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1aa4424eb:;
							{
								(_84617_brace_n)++;
							}
						}
						else {
							_case_begin_1aa4421dd:;
							{
								(_84617_brace_n)--;
							}
						}
						_match_end_1aa442133:;
					};
				};
				{
					
					if ((_84617_brace_n > 0LL)) {
						_case_begin_1aa44292a:;
						{
							goto _iter_next_1aa441099;
						}
					}
					else if ((_84721_token.get()._field_id != static_cast<jule::U64>(7LLU))) {
						_case_begin_1aa442991:;
						{
							goto _iter_next_1aa441099;
						}
					}
					else if ((!(_1a527bd85_is_assign_op(_84721_token.get()._field_kind)))) {
						_case_begin_1aa442a07:;
						{
							goto _iter_next_1aa441099;
						}
					}
					_match_end_1aa4426c7:;
				};
				_84317_info.get()._field_l=_84241_tokens.slice(0LL,_84714_i);
				if ((_84317_info.get()._field_l.len() == 0LL)) {
					_84317_info.get()._field_ok=false;
				};
				_84317_info.get()._field_setter=_84721_token;
				if (((_84714_i + 1LL) >= _84241_tokens.len())) {
					_84317_info.get()._field_r=nullptr;
					_84317_info.get()._field_ok=_1a527badd_is_postfix_op(_84317_info.get()._field_setter.get()._field_kind);
					goto _iter_end_1aa441099;
				};
				_84317_info.get()._field_r=_84241_tokens.slice((_84714_i + 1LL));
				if (_1a527badd_is_postfix_op(_84317_info.get()._field_setter.get()._field_kind)) {
					if ((_84317_info.get()._field_r.len() > 0LL)) {
						_1a7dd308d_push_err(&(*_self_), _84317_info.get()._field_r[0LL],jule::Str("invalid syntax", 14));
						_84317_info.get()._field_r=nullptr;
					};
				};
				goto _iter_end_1aa441099;
			}
			_iter_next_1aa441099:;
			++it;
			_84714_i++;
			goto _iter_begin_1aa441099;
		}
		_iter_end_1aa441099:;
	};
	return _84317_info;
}



inline jule::Ptr<_1a685eab5_AssignLeft> _1a7ddb250_build_assign_l(_1a7dd1da0_ScopeParser* _self_, jule::Slice<jule::Ptr<_1a527737a_Token>>& _89038_tokens) {
	jule::Ptr<_1a685eab5_AssignLeft> _89117_l = jule::new_ptr<_1a685eab5_AssignLeft>(_1a685eab5_AssignLeft{._field_token=_89038_tokens[0LL], });;
	if ((_89038_tokens[0LL].get()._field_id == static_cast<jule::U64>(2LLU))) {
		_89117_l.get()._field_ident=_89117_l.get()._field_token.get()._field_kind;
	};
	_89117_l.get()._field_expr=_1a7dee5b5_build_expr((*_self_)._field_p, _89038_tokens);
	return _89117_l;
}



inline jule::Slice<jule::Ptr<_1a685eab5_AssignLeft>> _1a7ddb55d_build_assign_ls(_1a7dd1da0_ScopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1a527737a_Token>>>& _90339_parts) {
	jule::Slice<jule::Ptr<_1a685eab5_AssignLeft>> _90417_lefts = nullptr;;
	{
		auto &expr = _90339_parts;
		auto it = expr.begin();
		_iter_begin_1aa44a669:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1a527737a_Token>> _90521_part = *it;
			{
				jule::Ptr<_1a685eab5_AssignLeft> _90621_l = _1a7ddb250_build_assign_l(&(*_self_), _90521_part);;
				_90417_lefts = jule::alloc_for_append(_90417_lefts,1);_90417_lefts.__push(_90621_l);;
			}
			_iter_next_1aa44a669:;
			++it;
			goto _iter_begin_1aa44a669;
		}
		_iter_end_1aa44a669:;
	};
	return _90417_lefts;
}



inline std::tuple<jule::Ptr<_1a6860104_AssignSt>,jule::Bool> _1a7ddb86b_build_plain_assign(_1a7dd1da0_ScopeParser* _self_, jule::Slice<jule::Ptr<_1a527737a_Token>>& _91342_tokens) {
	jule::Ptr<_1a7de9eea_AssignInfo> _91417_info = _1a7ddae42_build_assign_info(&(*_self_), _91342_tokens);;
	if ((!(_91417_info.get()._field_ok))) {
		return std::make_tuple(nullptr,false);
	};
	jule::Ptr<_1a6860104_AssignSt> _91917_assign = jule::new_ptr<_1a6860104_AssignSt>(_1a6860104_AssignSt{._field_setter=_91417_info.get()._field_setter, });;
	jule::Slice<jule::Slice<jule::Ptr<_1a527737a_Token>>> _92318_parts;;
	jule::Slice<_1a43349cc_Log> _92325_errs;;
	std::tie(_92318_parts,_92325_errs) = _1a7dec31b_parts(_91417_info.get()._field_l,static_cast<jule::U64>(8LLU),true);
	if ((_92325_errs.len() > 0LL)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_92325_errs);
		return std::make_tuple(nullptr,false);
	};
	_91917_assign.get()._field_left=_1a7ddb55d_build_assign_ls(&(*_self_), _92318_parts);
	if ((_91417_info.get()._field_r != nullptr)) {
		_91917_assign.get()._field_right=_1a7dee5b5_build_expr((*_self_)._field_p, _91417_info.get()._field_r);
	};
	return std::make_tuple(_91917_assign,true);
}



inline std::tuple<jule::Ptr<_1a6860104_AssignSt>,jule::Bool> _1a7ddbb79_build_decl_assign(_1a7dd1da0_ScopeParser* _self_, jule::Slice<jule::Ptr<_1a527737a_Token>> _93740_tokens) {
	if ((_93740_tokens.len() < 1LL)) {
		return std::make_tuple(nullptr,false);
	};
	_93740_tokens=_93740_tokens.slice(1LL);
	jule::Ptr<_1a527737a_Token> _94317_token = _93740_tokens[0LL];;
	if (((_94317_token.get()._field_id != static_cast<jule::U64>(3LLU)) || (_94317_token.get()._field_kind != jule::Str("(", 1)))) {
		return std::make_tuple(nullptr,false);
	};
	jule::Ptr<_1a6860104_AssignSt> _94817_assign = jule::new_ptr<_1a6860104_AssignSt>(_1a6860104_AssignSt{._field_declarative=true, });;
	jule::I64 _95217_i = 0LL;;
	jule::Slice<jule::Ptr<_1a527737a_Token>> _95317_rang = _1a7debb45_range(_95217_i,jule::Str("(", 1),jule::Str(")", 1),_93740_tokens);;
	if ((_95317_rang == nullptr)) {
		_1a7dd308d_push_err(&(*_self_), _94317_token,jule::Str("invalid syntax", 14));
		return std::make_tuple(nullptr,false);
	} else if (((_95217_i + 1LL) < _93740_tokens.len())) {
		_94817_assign.get()._field_setter=_93740_tokens[_95217_i];
		(_95217_i)++;
		jule::Slice<jule::Ptr<_1a527737a_Token>> _96021_expr_tokens = _93740_tokens.slice(_95217_i);;
		_94817_assign.get()._field_right=_1a7dee5b5_build_expr((*_self_)._field_p, _96021_expr_tokens);
	};
	jule::Slice<jule::Slice<jule::Ptr<_1a527737a_Token>>> _96518_parts;;
	jule::Slice<_1a43349cc_Log> _96525_errs;;
	std::tie(_96518_parts,_96525_errs) = _1a7dec31b_parts(_95317_rang,static_cast<jule::U64>(8LLU),true);
	if ((_96525_errs.len() > 0LL)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_96525_errs);
		return std::make_tuple(nullptr,false);
	};
	{
		auto &expr = _96518_parts;
		auto it = expr.begin();
		_iter_begin_1aa4580e4:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1a527737a_Token>> _97121_part = *it;
			{
				jule::Bool _97221_is_mut = false;;
				jule::Bool _97321_is_ref = false;;
				_94317_token=_97121_part[0LL];
				if ((_94317_token.get()._field_id == static_cast<jule::U64>(36LLU))) {
					_97221_is_mut=true;
					_97121_part=_97121_part.slice(1LL);
					if ((_97121_part.len() == 0LL)) {
						_1a7dd308d_push_err(&(*_self_), _94317_token,jule::Str("invalid syntax", 14));
						goto _iter_next_1aa4580e4;
					};
				};
				if (((_97121_part[0LL].get()._field_id == static_cast<jule::U64>(7LLU)) && (_97121_part[0LL].get()._field_kind == jule::Str("&", 1)))) {
					_97321_is_ref=true;
					_97121_part=_97121_part.slice(1LL);
					if ((_97121_part.len() == 0LL)) {
						_1a7dd308d_push_err(&(*_self_), _94317_token,jule::Str("invalid syntax", 14));
						goto _iter_next_1aa4580e4;
					};
				};
				if ((((_97121_part[0LL].get()._field_id != static_cast<jule::U64>(2LLU)) && (_97121_part[0LL].get()._field_id != static_cast<jule::U64>(3LLU))) && (_97121_part[0LL].get()._field_kind != jule::Str("(", 1)))) {
					_1a7dd308d_push_err(&(*_self_), _94317_token,jule::Str("invalid syntax", 14));
					goto _iter_next_1aa4580e4;
				};
				jule::Ptr<_1a685eab5_AssignLeft> _100121_l = _1a7ddb250_build_assign_l(&(*_self_), _97121_part);;
				_100121_l.get()._field_mutable=_97221_is_mut;
				_100121_l.get()._field_reference=_97321_is_ref;
				_94817_assign.get()._field_left = jule::alloc_for_append(_94817_assign.get()._field_left,1);_94817_assign.get()._field_left.__push(_100121_l);;
			}
			_iter_next_1aa4580e4:;
			++it;
			goto _iter_begin_1aa4580e4;
		}
		_iter_end_1aa4580e4:;
	};
	return std::make_tuple(_94817_assign,true);
}



inline std::tuple<jule::Ptr<_1a6860104_AssignSt>,jule::Bool> _1a7ddbe87_build_assign_st(_1a7dd1da0_ScopeParser* _self_, jule::Slice<jule::Ptr<_1a527737a_Token>>& _101039_tokens) {
	jule::Ptr<_1a6860104_AssignSt> _101059_st = jule::Ptr<_1a6860104_AssignSt>();
	jule::Bool _101074_ok = jule::Bool();
	if ((!(_1a7dea391_check_assign_tokens(_101039_tokens)))) {
		_101059_st = nullptr;
		_101074_ok = false;
		return std::make_tuple(_101059_st,_101074_ok);
	};
	{
		auto &_match_expr{ _101039_tokens[0LL].get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1aa46251b:;
			{
				std::tie(_101059_st,_101074_ok) = _1a7ddbb79_build_decl_assign(&(*_self_), _101039_tokens);
			}
		}
		else {
			_case_begin_1aa4616e6:;
			{
				std::tie(_101059_st,_101074_ok) = _1a7ddb86b_build_plain_assign(&(*_self_), _101039_tokens);
			}
		}
		_match_end_1aa461c79:;
	};
	return std::make_tuple(_101059_st,_101074_ok);
}



inline jule::Any _1a7ddc295_build_use_expr(_1a7dd1da0_ScopeParser* _self_, jule::Slice<jule::Ptr<_1a527737a_Token>>& _102538_tokens) {
	if ((_102538_tokens.len() == 1LL)) {
		_1a7dd308d_push_err(&(*_self_), _102538_tokens[0LL],jule::Str("expression missing", 18));
		return nullptr;
	};
	jule::Ptr<_1a68562e8_UseExpr> _103117_ue = jule::new_ptr<_1a68562e8_UseExpr>(_1a68562e8_UseExpr{._field_token=_102538_tokens[0LL], });;
	_102538_tokens=_102538_tokens.slice(1LL);
	_103117_ue.get()._field_expr=_1a7dee5b5_build_expr((*_self_)._field_p, _102538_tokens);
	return jule::Any(_103117_ue);
}



inline jule::Any _1a7ddc5a3_build_st(_1a7dd1da0_ScopeParser* _self_, jule::Ptr<_1a7dd1575_Stmt>& _104032_st) {
	jule::Ptr<_1a527737a_Token> _104117_token = _104032_st.get()._field_tokens[0LL];;
	if ((_104117_token.get()._field_id == static_cast<jule::U64>(2LLU))) {
		jule::Any _104322_s;;
		jule::Bool _104325_ok;;
		std::tie(_104322_s,_104325_ok) = _1a7ddab34_build_id_st(&(*_self_), _104032_st.get()._field_tokens);
		if (_104325_ok) {
			return jule::Any(_104322_s);
		};
	};
	jule::Ptr<_1a6860104_AssignSt> _104918_s;;
	jule::Bool _104921_ok;;
	std::tie(_104918_s,_104921_ok) = _1a7ddbe87_build_assign_st(&(*_self_), _104032_st.get()._field_tokens);
	if (_104921_ok) {
		return jule::Any(_104918_s);
	};
	{
		auto &_match_expr{ _104117_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1aa467532:;
			{
				return jule::Any(_1a7ddc295_build_use_expr(&(*_self_), _104032_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(38LLU) || _match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(36LLU)) {
			_case_begin_1aa467de5:;
			{
				return jule::Any(_1a7dd405b_build_var_st(&(*_self_), _104032_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(4LLU)) {
			_case_begin_1aa46780c:;
			{
				return jule::Any(_1a7dd4369_build_ret_st(&(*_self_), _104032_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(12LLU)) {
			_case_begin_1aa467873:;
			{
				return jule::Any(_1a7dd6cd9_build_iter_st(&(*_self_), _104032_st));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(13LLU)) {
			_case_begin_1aa4678d9:;
			{
				return jule::Any(_1a7dd70e7_build_break_st(&(*_self_), _104032_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(14LLU)) {
			_case_begin_1aa46805a:;
			{
				return jule::Any(_1a7dd7405_build_cont_st(&(*_self_), _104032_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_1aa4680c1:;
			{
				return jule::Any(_1a7dd7d2e_build_if_else_chain(&(*_self_), _104032_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(26LLU)) {
			_case_begin_1aa468137:;
			{
				return jule::Any(_1a7dd813c_build_co_call_st(&(*_self_), _104032_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_1aa46819d:;
			{
				return jule::Any(_1a7dd844a_build_goto_st(&(*_self_), _104032_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1aa468214:;
			{
				return jule::Any(_1a7dd8758_build_fall_st(&(*_self_), _104032_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1aa46827a:;
			{
				return jule::Any(_1a7dd8a66_build_type_alias_st(&(*_self_), _104032_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1aa4682e1:;
			{
				return jule::Any(_1a7dda20a_build_match_case(&(*_self_), _104032_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(35LLU) || _match_expr == static_cast<jule::U64>(37LLU)) {
			_case_begin_1aa468357:;
			{
				return jule::Any(_1a7dda518_build_scope_st(&(*_self_), _104032_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1aa4683bd:;
			{
				if ((_104117_token.get()._field_kind == jule::Str("{", 1))) {
					return jule::Any(_1a7dda518_build_scope_st(&(*_self_), _104032_st.get()._field_tokens));
				};
			}
		}
		_match_end_1aa467b09:;
	};
	jule::Ptr<_1a6855e41_Expr> _109017_expr = _1a7dee5b5_build_expr((*_self_)._field_p, _104032_st.get()._field_tokens);;
	if ((_109017_expr != nullptr)) {
		return jule::Any(_109017_expr);
	};
	_1a7dd308d_push_err(&(*_self_), _104117_token,jule::Str("invalid syntax", 14));
	return nullptr;
}



inline void _1a7ddc8c2_build(_1a7dd1da0_ScopeParser* _self_, jule::Slice<jule::Ptr<_1a527737a_Token>>& _109829_tokens, jule::Ptr<_1a686070e_ScopeTree>& _109852_s) {
	if ((_109852_s == nullptr)) {
		return;;
	};
	(*_self_)._field_stmts=_1a7dd191b_split_stmts(_109829_tokens);
	(*_self_)._field_pos=-1LL;
	(*_self_)._field_s=_109852_s;
	while (((!(_1a7dd2c6e_is_last_st(&(*_self_)))) && (!(_1a7dd2a0a_finished(&(*_self_)))))) {
		{
			jule::Ptr<_1a7dd1575_Stmt> _110721_st = _1a7dd3896_next(&(*_self_));;
			jule::Any _110821_data = _1a7ddc5a3_build_st(&(*_self_), _110721_st);;
			if ((_110821_data != nullptr)) {
				(*_self_)._field_s.get()._field_stmts = jule::alloc_for_append((*_self_)._field_s.get()._field_stmts,1);(*_self_)._field_s.get()._field_stmts.__push(_1a6821934_Node{._field_token=_110721_st.get()._field_tokens[0LL], ._field_data=jule::Any(_110821_data)});;
			};
			if (_1a7dd2796_stopped(&(*_self_))) {
				goto _iter_end_1aa472bad;
			};
		}
	_iter_next_1aa472bad:;
	}
	_iter_end_1aa472bad:;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a7dd1da0_ScopeParser _Src) {
	_Stream << "ScopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a7ddd76e_CallData _Src) {
	_Stream << "CallData{";
	_Stream << "expr_tokens:" << _Src._field_expr_tokens << ", ";
	_Stream << "args_tokens:" << _Src._field_args_tokens << ", ";
	_Stream << "generics_tokens:" << _Src._field_generics_tokens;
	_Stream << "}";
	return _Stream;
}



inline void _1a7de04b8_push_err(_1a7ddebc1_ExprBuilder* _self_, jule::Ptr<_1a527737a_Token> _21827_token, jule::Str _21842_fmt, jule::Slice<jule::Any> _21855_args) {
	_1a7dede88_push_err((*_self_)._field_p.ptr(), _21827_token,_21842_fmt,jule::Any(_21855_args));
}



inline void _1a7de07d7_push_suggestion(_1a7ddebc1_ExprBuilder* _self_, jule::Str _22334_fmt, jule::Slice<jule::Any> _22347_args) {
	_1a7dee2a7_push_suggestion((*_self_)._field_p.ptr(), _22334_fmt,jule::Any(_22347_args));
}



inline jule::Ptr<_1a68565d4_TupleExpr> _1a7de0ae5_build_tuple(_1a7ddebc1_ExprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_1a527737a_Token>>>& _22735_parts) {
	jule::Ptr<_1a68565d4_TupleExpr> _22817_tuple = jule::new_ptr<_1a68565d4_TupleExpr>(_1a68565d4_TupleExpr{._field_expr=jule::Slice<jule::Ptr<_1a6855e41_Expr>>::alloc(0LL,_22735_parts.len())});;
	{
		auto &expr = _22735_parts;
		auto it = expr.begin();
		_iter_begin_1aa48b6dd:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1a527737a_Token>> _23121_part = *it;
			{
				_22817_tuple.get()._field_expr = jule::alloc_for_append(_22817_tuple.get()._field_expr,1);_22817_tuple.get()._field_expr.__push(_1a7de959e_build_from_tokens(&(*_self_), _23121_part));;
			}
			_iter_next_1aa48b6dd:;
			++it;
			goto _iter_begin_1aa48b6dd;
		}
		_iter_end_1aa48b6dd:;
	};
	return _22817_tuple;
}



inline jule::Ptr<_1a6856aac_LitExpr> _1a7de0e03_build_lit(_1a7ddebc1_ExprBuilder* _self_, jule::Ptr<_1a527737a_Token> _23728_token) {
	return jule::new_ptr<_1a6856aac_LitExpr>(_1a6856aac_LitExpr{._field_token=_23728_token, ._field_value=_23728_token.get()._field_kind});
}



inline jule::Ptr<_1a68529cb_TypeDecl> _1a7de1211_build_primitive_type(_1a7ddebc1_ExprBuilder* _self_, jule::Ptr<_1a527737a_Token>& _24440_token) {
	return _1a7e0d508_build_prim_type(_24440_token);
}



inline jule::Any _1a7de151e_build_single(_1a7ddebc1_ExprBuilder* _self_, jule::Ptr<_1a527737a_Token> _24835_token) {
	{
		auto &_match_expr{ _24835_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1aa48e856:;
			{
				return jule::Any(_1a7de0e03_build_lit(&(*_self_), _24835_token));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1aa48eb86:;
			{
				if ((_24835_token.get()._field_kind == jule::Str("...", 3))) {
					return jule::Any(jule::new_ptr<_1a68586a2_VariadicExpr>(_1a68586a2_VariadicExpr{._field_token=_24835_token, }));
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU) || _match_expr == static_cast<jule::U64>(28LLU) || _match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1aa48ebec:;
			{
				return jule::Any(_1a7dde6e8_build_ident_expr(_24835_token));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1aa48ec63:;
			{
				return jule::Any(_1a7de1211_build_primitive_type(&(*_self_), _24835_token));
			}
		}
		_match_end_1aa48ea54:;
	};
	_1a7de04b8_push_err(&(*_self_), _24835_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;
}



inline jule::Ptr<_1a6857ae1_IdentExpr> _1a7de182c_build_cpp_linked_ident(_1a7ddebc1_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1a527737a_Token>>& _26946_tokens) {
	if ((_26946_tokens[0LL].get()._field_id != static_cast<jule::U64>(31LLU))) {
		return nullptr;
	} else if ((_26946_tokens[1LL].get()._field_id != static_cast<jule::U64>(20LLU))) {
		_1a7de04b8_push_err(&(*_self_), _26946_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1a7de07d7_push_suggestion(&(*_self_), jule::Str("use dot (.) to access cpp-linked defines", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1a527737a_Token> _27717_token = _26946_tokens[2LL];;
	if ((_27717_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1a7de04b8_push_err(&(*_self_), _26946_tokens[2LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1a7de07d7_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1a6857ae1_IdentExpr> _28317_expr = _1a7dde6e8_build_ident_expr(_27717_token);;
	_28317_expr.get()._field_cpp_linked=true;
	return _28317_expr;
}



inline jule::Ptr<_1a68582ea_UnaryExpr> _1a7de1b3a_build_unary(_1a7ddebc1_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1a527737a_Token>> _28834_tokens) {
	jule::Ptr<_1a527737a_Token> _28917_op = _28834_tokens[0LL];;
	if ((_28834_tokens.len() == 1LL)) {
		_1a7de04b8_push_err(&(*_self_), _28917_op,jule::Str("missing expression for unary operator", 37),jule::Slice<jule::Any>());
		return nullptr;
	} else if ((!(_1a5277ab7_is_unary_op(_28917_op.get()._field_kind)))) {
		_1a7de04b8_push_err(&(*_self_), _28917_op,jule::Str("invalid unary operator: @", 25),jule::Slice<jule::Any>::make({jule::Any(_28917_op.get()._field_kind)}));
		return nullptr;
	};
	_28834_tokens=_28834_tokens.slice(1LL);
	return jule::new_ptr<_1a68582ea_UnaryExpr>(_1a68582ea_UnaryExpr{._field_op=_28917_op, ._field_expr=_1a7de959e_build_from_tokens(&(*_self_), _28834_tokens)});
}



inline jule::Ptr<_1a6859384_SubIdentExpr> _1a7de1e48_build_obj_sub_ident(_1a7ddebc1_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1a527737a_Token>> _30942_tokens) {
	jule::I64 _31017_i = (_30942_tokens.len() - 1LL);;
	jule::Ptr<_1a527737a_Token> _31117_ident_token = _30942_tokens[_31017_i];;
	(_31017_i)--;
	_30942_tokens=_30942_tokens.slice(0LL,_31017_i);
	if ((_30942_tokens.len() == 0LL)) {
		_1a7de04b8_push_err(&(*_self_), _31117_ident_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1a6859384_SubIdentExpr>(_1a6859384_SubIdentExpr{._field_expr=_1a7de959e_build_from_tokens(&(*_self_), _30942_tokens), ._field_ident=_31117_ident_token});
}



inline jule::Ptr<_1a6858e11_NsSelectionExpr> _1a7de2256_build_ns_sub_ident(_1a7ddebc1_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1a527737a_Token>>& _32442_tokens) {
	jule::Ptr<_1a6858e11_NsSelectionExpr> _32517_ns = jule::new_ptr<_1a6858e11_NsSelectionExpr>(_1a6858e11_NsSelectionExpr{});;
	{
		auto &expr = _32442_tokens;
		auto it = expr.begin();
		_iter_begin_1aa49d7dd:;
		if (it != expr.end()) {
			jule::I64 _32614_i = it - expr.begin();
			jule::Ptr<_1a527737a_Token> _32621_token = *it;
			{
				if (((_32614_i & 1LL) == 0LL)) {
					if ((_32621_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
						_1a7de04b8_push_err(&(*_self_), _32621_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						_1a7de07d7_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
					};
					_32517_ns.get()._field_ns = jule::alloc_for_append(_32517_ns.get()._field_ns,1);_32517_ns.get()._field_ns.__push(_32621_token);;
				} else if ((_32621_token.get()._field_id != static_cast<jule::U64>(23LLU))) {
					_1a7de04b8_push_err(&(*_self_), _32621_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					_1a7de07d7_push_suggestion(&(*_self_), jule::Str("expected double colon \"::\"", 26),jule::Slice<jule::Any>());
				};
			}
			_iter_next_1aa49d7dd:;
			++it;
			_32614_i++;
			goto _iter_begin_1aa49d7dd;
		}
		_iter_end_1aa49d7dd:;
	};
	_32517_ns.get()._field_ident=_32517_ns.get()._field_ns[(_32517_ns.get()._field_ns.len() - 1LL)];
	_32517_ns.get()._field_ns=_32517_ns.get()._field_ns.slice(0LL,(_32517_ns.get()._field_ns.len() - 1LL));
	return _32517_ns;
}



inline jule::Ptr<_1a68529cb_TypeDecl> _1a7de2564_build_type(_1a7ddebc1_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1a527737a_Token>>& _34334_tokens) {
	jule::I64 _34417_i = 0LL;;
	jule::Ptr<_1a68529cb_TypeDecl> _34518_t;;
	jule::Bool _34521_ok;;
	std::tie(_34518_t,_34521_ok) = _1a7e008a2_build_type((*_self_)._field_p, _34334_tokens,(&(_34417_i)),false);
	if ((!(_34521_ok))) {
		_1a7de04b8_push_err(&(*_self_), _34334_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_34417_i < _34334_tokens.len())) {
		_1a7de04b8_push_err(&(*_self_), _34334_tokens[_34417_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	return _34518_t;
}



inline jule::Any _1a7de2872_build_sub_ident(_1a7ddebc1_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1a527737a_Token>>& _35739_tokens) {
	jule::I64 _35813_i = (_35739_tokens.len() - 2LL);;
	jule::Ptr<_1a527737a_Token> _35913_token = _35739_tokens[_35813_i];;
	{
		auto &_match_expr{ _35913_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(20LLU)) {
			_case_begin_1aa4a66b4:;
			{
				return jule::Any(_1a7de1e48_build_obj_sub_ident(&(*_self_), _35739_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1aa4a7341:;
			{
				return jule::Any(_1a7de2256_build_ns_sub_ident(&(*_self_), _35739_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1aa4a73a7:;
			{
				if ((_35913_token.get()._field_kind == jule::Str("]", 1))) {
					return jule::Any(_1a7de2564_build_type(&(*_self_), _35739_tokens));
				};
			}
		}
		_match_end_1aa4a71ed:;
	};
	_1a7de04b8_push_err(&(*_self_), _35913_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;
}



inline jule::Ptr<_1a68586a2_VariadicExpr> _1a7de2b80_build_variadic(_1a7ddebc1_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1a527737a_Token>> _37537_tokens) {
	jule::Ptr<_1a527737a_Token> _37617_token = _37537_tokens[(_37537_tokens.len() - 1LL)];;
	_37537_tokens=_37537_tokens.slice(0LL,(_37537_tokens.len() - 1LL));
	return jule::new_ptr<_1a68586a2_VariadicExpr>(_1a68586a2_VariadicExpr{._field_token=_37617_token, ._field_expr=_1a7de959e_build_from_tokens(&(*_self_), _37537_tokens)});
}



inline jule::Any _1a7de2e8d_build_op_right(_1a7ddebc1_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1a527737a_Token>>& _38438_tokens) {
	jule::Ptr<_1a527737a_Token> _38517_token = _38438_tokens[(_38438_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ _38517_token.get()._field_kind };
		
		if (_match_expr == jule::Str("!", 1)) {
			_case_begin_1aa4abb1a:;
			{
				_38438_tokens=_38438_tokens.slice(0LL,(_38438_tokens.len() - 1LL));
				jule::Any _38921_d = _1a7de8e83_build(&(*_self_), _38438_tokens);;
				if ((_38921_d == nullptr)) {
					return nullptr;
				};
				{
					auto &_match_expr{ _38921_d };
					
					if (_match_expr.type_is<jule::Ptr<_1a6859e12_FnCallExpr>>()) {
						_case_begin_1aa4adc60:;
						{
							_38921_d.operator jule::Ptr<_1a6859e12_FnCallExpr>().get()._field_exception=jule::new_ptr<_1a686070e_ScopeTree>(_1a686070e_ScopeTree{._field_deferred=true, });
							return jule::Any(_38921_d);
						}
					}
					_match_end_1aa4ae0c3:;
				};
			}
		}
		_match_end_1aa4ac335:;
	};
	_1a7de04b8_push_err(&(*_self_), _38517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;
}



inline jule::Ptr<_1a6855e41_Expr> _1a7de32bd_build_between_parentheses(_1a7ddebc1_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1a527737a_Token>> _40548_tokens) {
	if ((_40548_tokens.len() == 2LL)) {
		_1a7de04b8_push_err(&(*_self_), _40548_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		_1a7de07d7_push_suggestion(&(*_self_), jule::Str("empty parentheses are not valid expression, must include an expression in range", 79),jule::Slice<jule::Any>());
		return nullptr;
	};
	_40548_tokens=_40548_tokens.slice(1LL,(_40548_tokens.len() - 1LL));
	jule::Ptr<_1a6855e41_Expr> _41217_expr = _1a7de959e_build_from_tokens(&(*_self_), _40548_tokens);;
	_41217_expr.get()._field_range=true;
	return _41217_expr;
}



inline jule::Ptr<_1a6858a59_CastExpr> _1a7de35dc_try_build_cast(_1a7ddebc1_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1a527737a_Token>>& _41738_tokens) {
	jule::I64 _41817_range_n = 0LL;;
	{
		auto &expr = _41738_tokens;
		auto it = expr.begin();
		_iter_begin_1aa4b3b11:;
		if (it != expr.end()) {
			jule::I64 _41913_i = it - expr.begin();
			jule::Ptr<_1a527737a_Token> _41916_token = *it;
			{
				if ((_41916_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _41916_token.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1aa4b4e53:;
							{
								(_41817_range_n)++;
								goto _iter_next_1aa4b3b11;
							}
						}
						else {
							_case_begin_1aa4b4b45:;
							{
								(_41817_range_n)--;
							}
						}
						_match_end_1aa4b4a8a:;
					};
				};
				if ((_41817_range_n > 0LL)) {
					goto _iter_next_1aa4b3b11;
				} else if (((_41913_i + 1LL) == _41738_tokens.len())) {
					return nullptr;
				};
				jule::Slice<jule::Ptr<_1a527737a_Token>> _43821_type_tokens = _41738_tokens.slice(0LL,(_41913_i + 1LL));;
				jule::Slice<jule::Ptr<_1a527737a_Token>> _43921_expr_tokens = _41738_tokens.slice((_41913_i + 1LL));;
				if ((_43921_expr_tokens.len() == 0LL)) {
					return nullptr;
				};
				jule::Ptr<_1a527737a_Token> _44617_tok = _43921_expr_tokens[0LL];;
				if (((_44617_tok.get()._field_id != static_cast<jule::U64>(3LLU)) || (_44617_tok.get()._field_kind != jule::Str("(", 1)))) {
					return nullptr;
				};
				jule::Ptr<_1a6858a59_CastExpr> _45121_cast = jule::new_ptr<_1a6858a59_CastExpr>(_1a6858a59_CastExpr{});;
				if ((_43921_expr_tokens.len() == 2LL)) {
					_1a7de04b8_push_err(&(*_self_), _43921_expr_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
					_1a7de07d7_push_suggestion(&(*_self_), jule::Str("give an expression for casting", 30),jule::Slice<jule::Any>());
				};
				if ((_43821_type_tokens.len() == 2LL)) {
					_1a7de04b8_push_err(&(*_self_), _43821_type_tokens[0LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
					_1a7de07d7_push_suggestion(&(*_self_), jule::Str("type declaration expected for casting", 37),jule::Slice<jule::Any>());
				} else {
					_43821_type_tokens=_43821_type_tokens.slice(1LL,(_43821_type_tokens.len() - 1LL));
					jule::I64 _46525_type_index = 0LL;;
					jule::Ptr<_1a68529cb_TypeDecl> _46626_t;;
					jule::Bool _46629_ok;;
					std::tie(_46626_t,_46629_ok) = _1a7e008a2_build_type((*_self_)._field_p, _43821_type_tokens,(&(_46525_type_index)),true);
					if ((_46629_ok && (_46525_type_index < _43821_type_tokens.len()))) {
						_1a7de04b8_push_err(&(*_self_), _43821_type_tokens[_46525_type_index],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					} else if ((!(_46629_ok))) {
						return _45121_cast;
					};
					_45121_cast.get()._field_kind=_46626_t;
					if ((_43921_expr_tokens.len() > 2LL)) {
						jule::I64 _47629_j = 0LL;;
						_1a7debb45_range(_47629_j,jule::Str("(", 1),jule::Str(")", 1),_43921_expr_tokens);
						if ((_47629_j < _43921_expr_tokens.len())) {
							return nullptr;
						};
						_43921_expr_tokens=_43921_expr_tokens.slice(0LL,_47629_j);
						_45121_cast.get()._field_expr=_1a7de959e_build_from_tokens(&(*_self_), _43921_expr_tokens);
					};
				};
				return _45121_cast;
			}
			_iter_next_1aa4b3b11:;
			++it;
			_41913_i++;
			goto _iter_begin_1aa4b3b11;
		}
		_iter_end_1aa4b3b11:;
	};
	return nullptr;
}



inline void _1a7de39a5_push_arg(_1a7ddebc1_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1a6855e41_Expr>>& _49132_args, jule::Slice<jule::Ptr<_1a527737a_Token>> _49151_tokens, jule::Ptr<_1a527737a_Token> _49169_err_token) {
	if ((_49151_tokens.len() == 0LL)) {
		_1a7de04b8_push_err(&(*_self_), _49169_err_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1a7de07d7_push_suggestion(&(*_self_), jule::Str("an expression expected", 22),jule::Slice<jule::Any>());
		return;;
	};
	_49132_args = jule::alloc_for_append(_49132_args,1);_49132_args.__push(_1a7de959e_build_from_tokens(&(*_self_), _49151_tokens));;
}



inline jule::Slice<jule::Ptr<_1a6855e41_Expr>> _1a7de3cb3_build_args(_1a7ddebc1_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1a527737a_Token>> _50033_tokens) {
	if ((_50033_tokens.len() < 2LL)) {
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1a6855e41_Expr>> _50617_args = nullptr;;
	jule::I64 _50717_last = 0LL;;
	jule::I64 _50817_range_n = 0LL;;
	_50033_tokens=_50033_tokens.slice(1LL,(_50033_tokens.len() - 1LL));
	{
		auto &expr = _50033_tokens;
		auto it = expr.begin();
		_iter_begin_1aa4c3eb7:;
		if (it != expr.end()) {
			jule::I64 _51013_i = it - expr.begin();
			jule::Ptr<_1a527737a_Token> _51016_token = *it;
			{
				if ((_51016_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _51016_token.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1aa4c565b:;
							{
								(_50817_range_n)++;
							}
						}
						else {
							_case_begin_1aa4c534d:;
							{
								(_50817_range_n)--;
							}
						}
						_match_end_1aa4c5293:;
					};
				};
				if (((_50817_range_n > 0LL) || (_51016_token.get()._field_id != static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_1aa4c3eb7;
				};
				_1a7de39a5_push_arg(&(*_self_), _50617_args,_50033_tokens.slice(_50717_last,_51013_i),_51016_token);
				_50717_last=static_cast<jule::I64>((_51013_i + 1LL));
			}
			_iter_next_1aa4c3eb7:;
			++it;
			_51013_i++;
			goto _iter_begin_1aa4c3eb7;
		}
		_iter_end_1aa4c3eb7:;
	};
	if ((_50717_last < _50033_tokens.len())) {
		if ((_50717_last == 0LL)) {
			if ((_50033_tokens.len() > 0LL)) {
				_1a7de39a5_push_arg(&(*_self_), _50617_args,_50033_tokens.slice(_50717_last),_50033_tokens[_50717_last]);
			};
		} else {
			_1a7de39a5_push_arg(&(*_self_), _50617_args,_50033_tokens.slice(_50717_last),_50033_tokens[(_50717_last - 1LL)]);
		};
	};
	return _50617_args;
}



inline jule::Slice<jule::Ptr<_1a68529cb_TypeDecl>> _1a7de40c1_build_call_generics(_1a7ddebc1_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1a527737a_Token>> _54242_tokens) {
	if ((_54242_tokens.len() == 0LL)) {
		return nullptr;
	};
	_54242_tokens=_54242_tokens.slice(1LL,(_54242_tokens.len() - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_1a527737a_Token>>> _54818_parts;;
	jule::Slice<_1a43349cc_Log> _54825_errs;;
	std::tie(_54818_parts,_54825_errs) = _1a7dec31b_parts(_54242_tokens,static_cast<jule::U64>(8LLU),true);
	jule::Slice<jule::Ptr<_1a68529cb_TypeDecl>> _54917_generics = jule::Slice<jule::Ptr<_1a68529cb_TypeDecl>>::alloc(0LL,_54818_parts.len());;
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_54825_errs);
	{
		auto &expr = _54818_parts;
		auto it = expr.begin();
		_iter_begin_1aa4cb8b5:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1a527737a_Token>> _55121_part = *it;
			{
				if ((_55121_part.len() == 0LL)) {
					goto _iter_next_1aa4cb8b5;
				};
				jule::I64 _55521_j = 0LL;;
				jule::Ptr<_1a68529cb_TypeDecl> _55622_generic;;
				std::tie(_55622_generic,std::ignore) = _1a7e008a2_build_type((*_self_)._field_p, _55121_part,(&(_55521_j)),true);
				if ((_55521_j < _55121_part.len())) {
					_1a7de04b8_push_err(&(*_self_), _55121_part[_55521_j],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				_54917_generics = jule::alloc_for_append(_54917_generics,1);_54917_generics.__push(_55622_generic);;
			}
			_iter_next_1aa4cb8b5:;
			++it;
			goto _iter_begin_1aa4cb8b5;
		}
		_iter_end_1aa4cb8b5:;
	};
	return _54917_generics;
}



inline jule::Ptr<_1a6859e12_FnCallExpr> _1a7de4478_build_fn_call(_1a7ddebc1_ExprBuilder* _self_, jule::Ptr<_1a527737a_Token>& _56637_token, jule::Ptr<_1a7ddd76e_CallData>& _56657_data) {
	return jule::new_ptr<_1a6859e12_FnCallExpr>(_1a6859e12_FnCallExpr{._field_token=_56637_token, ._field_expr=_1a7de959e_build_from_tokens(&(*_self_), _56657_data.get()._field_expr_tokens), ._field_generics=_1a7de40c1_build_call_generics(&(*_self_), _56657_data.get()._field_generics_tokens), ._field_args=_1a7de3cb3_build_args(&(*_self_), _56657_data.get()._field_args_tokens), });
}



inline jule::Any _1a7de47a8_build_parentheses_range(_1a7ddebc1_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1a527737a_Token>>& _57547_tokens) {
	jule::Ptr<_1a527737a_Token> _57617_token = _57547_tokens[0LL];;
	{
		auto &_match_expr{ _57617_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1aa4d1436:;
			{
				{
					auto &_match_expr{ _57617_token.get()._field_kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1aa4d2316:;
						{
							jule::Ptr<_1a6858a59_CastExpr> _58125_expr = _1a7de35dc_try_build_cast(&(*_self_), _57547_tokens);;
							if ((_58125_expr != nullptr)) {
								return jule::Any(_58125_expr);
							};
						}
					}
					_match_end_1aa4d228e:;
				};
			}
		}
		_match_end_1aa4d1986:;
	};
	jule::Ptr<_1a7ddd76e_CallData> _58817_data = _1a7dddad2_get_call_data(_57547_tokens);;
	if ((_58817_data.get()._field_expr_tokens.len() == 0LL)) {
		return jule::Any(_1a7de32bd_build_between_parentheses(&(*_self_), _58817_data.get()._field_args_tokens));
	};
	return jule::Any(_1a7de4478_build_fn_call(&(*_self_), _57617_token,_58817_data));
}



inline jule::Ptr<_1a68572b6_UnsafeExpr> _1a7de4ac7_build_unsafe_expr(_1a7ddebc1_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1a527737a_Token>> _59940_tokens) {
	jule::Ptr<_1a527737a_Token> _60017_token = _59940_tokens[0LL];;
	_59940_tokens=_59940_tokens.slice(1LL);
	jule::I64 _60217_i = 0LL;;
	jule::Slice<jule::Ptr<_1a527737a_Token>> _60317_range_tokens = _1a7debb45_range(_60217_i,jule::Str("{", 1),jule::Str("}", 1),_59940_tokens);;
	if ((_60317_range_tokens.len() == 0LL)) {
		_1a7de04b8_push_err(&(*_self_), _59940_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1a68572b6_UnsafeExpr>(_1a68572b6_UnsafeExpr{._field_token=_60017_token, ._field_expr=_1a7de959e_build_from_tokens(&(*_self_), _60317_range_tokens)});
}



inline jule::Ptr<_1a6862205_FnDecl> _1a7de4dd5_build_anon_fn(_1a7ddebc1_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1a527737a_Token>>& _61437_tokens) {
	jule::Ptr<_1a6862205_FnDecl> _61517_f = _1a7e04ac6_build_fn((*_self_)._field_p, _61437_tokens,false,false);;
	if ((!(_1a6862557_is_anon(_61517_f.ptr())))) {
		_1a7de04b8_push_err(&(*_self_), _61517_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1a7de07d7_push_suggestion(&(*_self_), jule::Str("anonymous function expected, remove identifier of function", 58),jule::Slice<jule::Any>());
	};
	return _61517_f;
}



inline jule::Any _1a7de51e3_build_unsafe(_1a7ddebc1_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1a527737a_Token>>& _62336_tokens) {
	{
		auto &_match_expr{ _62336_tokens[1LL].get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1aa4dbbd3:;
			{
				return jule::Any(_1a7de4dd5_build_anon_fn(&(*_self_), _62336_tokens));
			}
		}
		else {
			_case_begin_1aa4dac7b:;
			{
				return jule::Any(_1a7de4ac7_build_unsafe_expr(&(*_self_), _62336_tokens));
			}
		}
		_match_end_1aa4db188:;
	};
}



inline void _1a7de55ab_push_range_lit_part(_1a7ddebc1_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1a527737a_Token>> _63342_part, jule::Ptr<_1a527737a_Token> _6349_error_token, jule::Slice<jule::Slice<jule::Ptr<_1a527737a_Token>>>& _63435_parts) {
	if ((_63342_part.len() == 0LL)) {
		_1a7de04b8_push_err(&(*_self_), _6349_error_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1a7de07d7_push_suggestion(&(*_self_), jule::Str("an expression expected", 22),jule::Slice<jule::Any>());
		return;;
	};
	_63435_parts = jule::alloc_for_append(_63435_parts,1);_63435_parts.__push(_63342_part);;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1a527737a_Token>>> _1a7de58db_get_brace_range_lit_expr_parts(_1a7ddebc1_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1a527737a_Token>> _64453_tokens) {
	if ((_64453_tokens.len() < 2LL)) {
		return nullptr;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1a527737a_Token>>> _65017_parts = nullptr;;
	jule::I64 _65217_last = 0LL;;
	jule::I64 _65317_range_n = 0LL;;
	_64453_tokens=_64453_tokens.slice(1LL,(_64453_tokens.len() - 1LL));
	{
		auto &expr = _64453_tokens;
		auto it = expr.begin();
		_iter_begin_1aa4e1666:;
		if (it != expr.end()) {
			jule::I64 _65513_i = it - expr.begin();
			jule::Ptr<_1a527737a_Token> _65516_token = *it;
			{
				if ((_65516_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _65516_token.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1aa4e2d0a:;
							{
								(_65317_range_n)++;
							}
						}
						else {
							_case_begin_1aa4e29ec:;
							{
								(_65317_range_n)--;
							}
						}
						_match_end_1aa4e2942:;
					};
				};
				if (((_65317_range_n > 0LL) || (_65516_token.get()._field_id != static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_1aa4e1666;
				};
				_1a7de55ab_push_range_lit_part(&(*_self_), _64453_tokens.slice(_65217_last,_65513_i),_65516_token,_65017_parts);
				_65217_last=static_cast<jule::I64>((_65513_i + 1LL));
			}
			_iter_next_1aa4e1666:;
			++it;
			_65513_i++;
			goto _iter_begin_1aa4e1666;
		}
		_iter_end_1aa4e1666:;
	};
	if ((_65217_last < _64453_tokens.len())) {
		if ((_65217_last == 0LL)) {
			if ((_64453_tokens.len() > 0LL)) {
				_1a7de55ab_push_range_lit_part(&(*_self_), _64453_tokens.slice(_65217_last),_64453_tokens[_65217_last],_65017_parts);
			};
		} else {
			_1a7de55ab_push_range_lit_part(&(*_self_), _64453_tokens.slice(_65217_last),_64453_tokens[(_65217_last - 1LL)],_65017_parts);
		};
	};
	return _65017_parts;
}



inline jule::Ptr<_1a685a929_FieldExprPair> _1a7de5c0a_build_field_expr_pair(_1a7ddebc1_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1a527737a_Token>> _68644_tokens) {
	if (((_68644_tokens.len() - 2LL) == 0LL)) {
		_1a7de04b8_push_err(&(*_self_), _68644_tokens[1LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1a685a929_FieldExprPair> _69117_pair = jule::new_ptr<_1a685a929_FieldExprPair>(_1a685a929_FieldExprPair{._field_field=_68644_tokens[0LL], });;
	_68644_tokens=_68644_tokens.slice(2LL);
	_69117_pair.get()._field_expr=_1a7de959e_build_from_tokens(&(*_self_), _68644_tokens);
	return _69117_pair;
}



inline jule::Ptr<_1a6855e41_Expr> _1a7de6018_build_struct_lit_expr(_1a7ddebc1_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1a527737a_Token>>& _69945_tokens) {
	jule::Ptr<_1a527737a_Token> _70017_token = _69945_tokens[0LL];;
	if (((_70017_token.get()._field_id == static_cast<jule::U64>(2LLU)) && (_69945_tokens.len() > 1LL))) {
		_70017_token=_69945_tokens[1LL];
		if ((_70017_token.get()._field_id == static_cast<jule::U64>(11LLU))) {
			return jule::new_ptr<_1a6855e41_Expr>(_1a6855e41_Expr{._field_token=_70017_token, ._field_end=_69945_tokens[(_69945_tokens.len() - 1LL)], ._field_kind=jule::Any(_1a7de5c0a_build_field_expr_pair(&(*_self_), _69945_tokens))});
		};
	};
	return _1a7de959e_build_from_tokens(&(*_self_), _69945_tokens);
}



inline jule::Slice<jule::Ptr<_1a6855e41_Expr>> _1a7de6326_build_struct_lit_exprs(_1a7ddebc1_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1a527737a_Token>>& _71446_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1a527737a_Token>>> _71517_parts = _1a7de58db_get_brace_range_lit_expr_parts(&(*_self_), _71446_tokens);;
	if ((_71517_parts.len() == 0LL)) {
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1a6855e41_Expr>> _72017_pairs = jule::Slice<jule::Ptr<_1a6855e41_Expr>>::alloc(0LL,_71517_parts.len());;
	{
		auto &expr = _71517_parts;
		auto it = expr.begin();
		_iter_begin_1aa4ed7b6:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1a527737a_Token>> _72121_part = *it;
			{
				_72017_pairs = jule::alloc_for_append(_72017_pairs,1);_72017_pairs.__push(_1a7de6018_build_struct_lit_expr(&(*_self_), _72121_part));;
			}
			_iter_next_1aa4ed7b6:;
			++it;
			goto _iter_begin_1aa4ed7b6;
		}
		_iter_end_1aa4ed7b6:;
	};
	return _72017_pairs;
}



inline jule::Ptr<_1a685b1ee_StructLit> _1a7de6656_build_typed_struct_literal(_1a7ddebc1_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1a527737a_Token>> _72749_tokens) {
	jule::I64 _72817_i = 0LL;;
	jule::Ptr<_1a68529cb_TypeDecl> _72918_t;;
	jule::Bool _72921_ok;;
	std::tie(_72918_t,_72921_ok) = _1a7e008a2_build_type((*_self_)._field_p, _72749_tokens,(&(_72817_i)),true);
	if ((!(_72921_ok))) {
		return nullptr;
	} else if ((_72817_i >= _72749_tokens.len())) {
		_1a7de04b8_push_err(&(*_self_), _72749_tokens[_72817_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_72749_tokens=_72749_tokens.slice(_72817_i);
	jule::Ptr<_1a527737a_Token> _73813_token = _72749_tokens[0LL];;
	if (((_73813_token.get()._field_id != static_cast<jule::U64>(3LLU)) || (_73813_token.get()._field_kind != jule::Str("{", 1)))) {
		_1a7de04b8_push_err(&(*_self_), _73813_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1a685b1ee_StructLit>(_1a685b1ee_StructLit{._field_end=_72749_tokens[(_72749_tokens.len() - 1LL)], ._field_kind=_72918_t, ._field_exprs=_1a7de6326_build_struct_lit_exprs(&(*_self_), _72749_tokens)});
}



inline jule::Ptr<_1a6855e41_Expr> _1a7de6975_build_brace_lit_part(_1a7ddebc1_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1a527737a_Token>>& _75144_tokens) {
	jule::Slice<jule::Ptr<_1a527737a_Token>> _75218_l;;
	jule::Slice<jule::Ptr<_1a527737a_Token>> _75225_r;;
	std::tie(_75218_l,_75225_r) = _1a7dde165_split_colon(_75144_tokens);
	if ((_75218_l != nullptr)) {
		return jule::new_ptr<_1a6855e41_Expr>(_1a6855e41_Expr{._field_token=_75144_tokens[0LL], ._field_kind=jule::Any(jule::new_ptr<_1a685be47_KeyValPair>(_1a685be47_KeyValPair{._field_key=_1a7de959e_build_from_tokens(&(*_self_), _75218_l), ._field_val=_1a7de959e_build_from_tokens(&(*_self_), _75225_r), ._field_colon=_75144_tokens[_75218_l.len()]}))});
	};
	return _1a7de959e_build_from_tokens(&(*_self_), _75144_tokens);
}



inline jule::Ptr<_1a685b672_BraceLit> _1a7de6c83_build_brace_lit(_1a7ddebc1_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1a527737a_Token>>& _76739_tokens) {
	jule::Ptr<_1a685b672_BraceLit> _76817_lit = jule::new_ptr<_1a685b672_BraceLit>(_1a685b672_BraceLit{._field_token=_76739_tokens[0LL], ._field_end=_76739_tokens[(_76739_tokens.len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_1a527737a_Token>>> _77317_parts = _1a7de58db_get_brace_range_lit_expr_parts(&(*_self_), _76739_tokens);;
	if ((_77317_parts == nullptr)) {
		return _76817_lit;
	};
	_76817_lit.get()._field_exprs=jule::Slice<jule::Ptr<_1a6855e41_Expr>>::alloc(0LL,_77317_parts.len());
	{
		auto &expr = _77317_parts;
		auto it = expr.begin();
		_iter_begin_1aa5087c1:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1a527737a_Token>> _77921_part = *it;
			{
				_76817_lit.get()._field_exprs = jule::alloc_for_append(_76817_lit.get()._field_exprs,1);_76817_lit.get()._field_exprs.__push(_1a7de6975_build_brace_lit_part(&(*_self_), _77921_part));;
			}
			_iter_next_1aa5087c1:;
			++it;
			goto _iter_begin_1aa5087c1;
		}
		_iter_end_1aa5087c1:;
	};
	return _76817_lit;
}



inline jule::Any _1a7de7091_build_brace_range(_1a7ddebc1_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1a527737a_Token>>& _78641_tokens) {
	jule::Slice<jule::Ptr<_1a527737a_Token>> _78718_expr_tokens;;
	jule::I64 _78731_range_n;;
	std::tie(_78718_expr_tokens,_78731_range_n) = _1a7dde990_get_range_expr_tokens(_78641_tokens);
	{
		
		if ((_78718_expr_tokens.len() == 0LL)) {
			_case_begin_1aa50ab03:;
			{
				return jule::Any(_1a7de6c83_build_brace_lit(&(*_self_), _78641_tokens));
			}
		}
		else if ((_78731_range_n > 0LL)) {
			_case_begin_1aa50ab7a:;
			{
				_1a7de04b8_push_err(&(*_self_), _78641_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1aa50aa48:;
	};
	jule::Ptr<_1a527737a_Token> _79813_else_token = _78718_expr_tokens[(_78718_expr_tokens.len() - 1LL)];;
	if ((_78718_expr_tokens[(_78718_expr_tokens.len() - 1LL)].get()._field_id == static_cast<jule::U64>(17LLU))) {
		_78718_expr_tokens=_78718_expr_tokens.slice(0LL,(_78718_expr_tokens.len() - 1LL));
		jule::Any _80121_d = _1a7de8e83_build(&(*_self_), _78718_expr_tokens);;
		if ((_80121_d == nullptr)) {
			return nullptr;
		};
		{
			auto &_match_expr{ _80121_d };
			
			if (_match_expr.type_is<jule::Ptr<_1a6859e12_FnCallExpr>>()) {
				_case_begin_1aa50eb18:;
				{
					_78641_tokens=_78641_tokens.slice((_78718_expr_tokens.len() + 1LL));
					jule::I64 _80825_i = 0LL;;
					jule::Slice<jule::Ptr<_1a527737a_Token>> _80925_range_tokens = _1a7debb45_range(_80825_i,jule::Str("{", 1),jule::Str("}", 1),_78641_tokens);;
					jule::Ptr<_1a6859e12_FnCallExpr> _81025_model = _80121_d.operator jule::Ptr<_1a6859e12_FnCallExpr>();;
					if (_1a685a5e9_ignored(_81025_model.ptr())) {
						_1a7de04b8_push_err(&(*_self_), _79813_else_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						_1a7de07d7_push_suggestion(&(*_self_), jule::Str("just ignore exceptional or handle it but you cannot do both at same time", 72),jule::Slice<jule::Any>());
					};
					_81025_model.get()._field_exception=_1a7e00000_build_scope((*_self_)._field_p, _80925_range_tokens,_78641_tokens[(_80825_i - 1LL)]);
					return jule::Any(_80121_d);
				}
			}
			else {
				_case_begin_1aa50dd9d:;
				{
					_1a7de04b8_push_err(&(*_self_), _78718_expr_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return nullptr;
				}
			}
			_match_end_1aa50dd48:;
		};
	};
	{
		auto &_match_expr{ _78718_expr_tokens[0LL].get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_1aa514a41:;
			{
				return jule::Any(_1a7de51e3_build_unsafe(&(*_self_), _78641_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1aa514942:;
			{
				return jule::Any(_1a7de4dd5_build_anon_fn(&(*_self_), _78641_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1aa5149a8:;
			{
				return jule::Any(_1a7de6656_build_typed_struct_literal(&(*_self_), _78641_tokens));
			}
		}
		else {
			_case_begin_1aa50a97c:;
			{
				_1a7de04b8_push_err(&(*_self_), _78718_expr_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1aa513b83:;
	};
}



inline jule::Slice<jule::Slice<jule::Ptr<_1a527737a_Token>>> _1a7de739e_get_enumerable_parts(_1a7ddebc1_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1a527737a_Token>> _83843_tokens) {
	_83843_tokens=_83843_tokens.slice(1LL,(_83843_tokens.len() - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_1a527737a_Token>>> _84018_parts;;
	jule::Slice<_1a43349cc_Log> _84025_errors;;
	std::tie(_84018_parts,_84025_errors) = _1a7dec31b_parts(_83843_tokens,static_cast<jule::U64>(8LLU),true);
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_84025_errors);
	return _84018_parts;
}



inline jule::Ptr<_1a685c3ba_SliceExpr> _1a7de76ac_build_slice(_1a7ddebc1_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1a527737a_Token>> _84534_tokens) {
	jule::Ptr<_1a685c3ba_SliceExpr> _84617_slc = jule::new_ptr<_1a685c3ba_SliceExpr>(_1a685c3ba_SliceExpr{._field_token=_84534_tokens[0LL], ._field_end=_84534_tokens[(_84534_tokens.len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_1a527737a_Token>>> _85117_parts = _1a7de739e_get_enumerable_parts(&(*_self_), _84534_tokens);;
	if ((_85117_parts.len() == 0LL)) {
		return _84617_slc;
	};
	_84617_slc.get()._field_exprs=jule::Slice<jule::Ptr<_1a6855e41_Expr>>::alloc(0LL,_85117_parts.len());
	{
		auto &expr = _85117_parts;
		auto it = expr.begin();
		_iter_begin_1aa51a481:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1a527737a_Token>> _85721_p = *it;
			{
				if ((_85721_p.len() == 0LL)) {
					goto _iter_next_1aa51a481;
				};
				_84617_slc.get()._field_exprs = jule::alloc_for_append(_84617_slc.get()._field_exprs,1);_84617_slc.get()._field_exprs.__push(_1a7de959e_build_from_tokens(&(*_self_), _85721_p));;
			}
			_iter_next_1aa51a481:;
			++it;
			goto _iter_begin_1aa51a481;
		}
		_iter_end_1aa51a481:;
	};
	return _84617_slc;
}



inline jule::Ptr<_1a685ce9d_IndexingExpr> _1a7de7b0d_build_indexing(_1a7ddebc1_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1a527737a_Token>> _86737_expr_tokens, jule::Slice<jule::Ptr<_1a527737a_Token>> _86813_tokens, jule::Ptr<_1a527737a_Token> _86835_error_token) {
	jule::Ptr<_1a527737a_Token> _86917_end = _86813_tokens[(_86813_tokens.len() - 1LL)];;
	_86813_tokens=_86813_tokens.slice(1LL,(_86813_tokens.len() - 1LL));
	if ((_86813_tokens.len() == 0LL)) {
		_1a7de04b8_push_err(&(*_self_), _86835_error_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1a6855e41_Expr> _87517_expr = _1a7de959e_build_from_tokens(&(*_self_), _86737_expr_tokens);;
	if ((_87517_expr == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1a6855e41_Expr> _87917_index = _1a7de959e_build_from_tokens(&(*_self_), _86813_tokens);;
	if ((_87917_index == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1a685ce9d_IndexingExpr>(_1a685ce9d_IndexingExpr{._field_token=_86835_error_token, ._field_end=_86917_end, ._field_expr=_87517_expr, ._field_index=_87917_index});
}



inline jule::Ptr<_1a685d5a8_SlicingExpr> _1a7de81a2_build_slicing(_1a7ddebc1_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1a527737a_Token>>& _89137_expr_tokens, jule::Slice<jule::Ptr<_1a527737a_Token>>& _89165_slicing_tokens, jule::I64& _89210_colon, jule::Ptr<_1a527737a_Token>& _89227_error_token, jule::Ptr<_1a527737a_Token> _89252_end) {
	jule::Ptr<_1a685d5a8_SlicingExpr> _89317_slc = jule::new_ptr<_1a685d5a8_SlicingExpr>(_1a685d5a8_SlicingExpr{._field_token=_89227_error_token, ._field_end=_89252_end, ._field_expr=_1a7de959e_build_from_tokens(&(*_self_), _89137_expr_tokens), });;
	jule::Slice<jule::Ptr<_1a527737a_Token>> _89917_start_expr_tokens = _89165_slicing_tokens.slice(0LL,_89210_colon);;
	if ((_89917_start_expr_tokens.len() > 0LL)) {
		_89317_slc.get()._field_start=_1a7de959e_build_from_tokens(&(*_self_), _89917_start_expr_tokens);
	};
	jule::Slice<jule::Ptr<_1a527737a_Token>> _90417_to_expr_tokens = _89165_slicing_tokens.slice((_89210_colon + 1LL));;
	if ((_90417_to_expr_tokens.len() > 0LL)) {
		_89317_slc.get()._field_to=_1a7de959e_build_from_tokens(&(*_self_), _90417_to_expr_tokens);
	};
	return _89317_slc;
}



inline jule::Any _1a7de84b0_build_bracket_range(_1a7ddebc1_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1a527737a_Token>> _91242_tokens) {
	jule::Ptr<_1a527737a_Token> _91317_error_token = _91242_tokens[0LL];;
	jule::Slice<jule::Ptr<_1a527737a_Token>> _91418_expr_tokens;;
	jule::I64 _91431_range_n;;
	std::tie(_91418_expr_tokens,_91431_range_n) = _1a7dde990_get_range_expr_tokens(_91242_tokens);
	{
		
		if ((_91418_expr_tokens.len() == 0LL)) {
			_case_begin_1aa526415:;
			{
				return jule::Any(_1a7de76ac_build_slice(&(*_self_), _91242_tokens));
			}
		}
		else if (((_91418_expr_tokens.len() == 0LL) || (_91431_range_n > 0LL))) {
			_case_begin_1aa52648c:;
			{
				_1a7de04b8_push_err(&(*_self_), _91317_error_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1aa52635a:;
	};
	_91242_tokens=_91242_tokens.slice(_91418_expr_tokens.len());
	jule::I64 _93217_i = 0LL;;
	jule::Slice<jule::Ptr<_1a527737a_Token>> _93318_slicing_tokens;;
	jule::I64 _93334_colon;;
	std::tie(_93318_slicing_tokens,_93334_colon) = _1a7e0d849_split_map_range(_91242_tokens,_93217_i);
	if ((_93334_colon != -1LL)) {
		return jule::Any(_1a7de81a2_build_slicing(&(*_self_), _91418_expr_tokens,_93318_slicing_tokens,_93334_colon,_91317_error_token,_91242_tokens[(_91242_tokens.len() - 1LL)]));
	};
	return jule::Any(_1a7de7b0d_build_indexing(&(*_self_), _91418_expr_tokens,_91242_tokens,_91317_error_token));
}



inline jule::Any _1a7de87bd_build_data(_1a7ddebc1_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1a527737a_Token>>& _94034_tokens) {
	{
		auto _match_expr{ _94034_tokens.len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1aa52abde:;
			{
				return nullptr;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1aa52ac55:;
			{
				return jule::Any(_1a7de151e_build_single(&(*_self_), _94034_tokens[0LL]));
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1aa52acbb:;
			{
				if ((_94034_tokens[0LL].get()._field_id == static_cast<jule::U64>(31LLU))) {
					return jule::Any(_1a7de182c_build_cpp_linked_ident(&(*_self_), _94034_tokens));
				};
			}
		}
		_match_end_1aa52a9d0:;
	};
	jule::Ptr<_1a527737a_Token> _95217_token = _94034_tokens[(_94034_tokens.len() - 1LL)];;
	if (((_95217_token.get()._field_id == static_cast<jule::U64>(7LLU)) && (_95217_token.get()._field_kind == jule::Str("...", 3)))) {
		return jule::Any(_1a7de2b80_build_variadic(&(*_self_), _94034_tokens));
	};
	_95217_token=_94034_tokens[0LL];
	{
		auto &_match_expr{ _95217_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1aa52e0dd:;
			{
				if (((_94034_tokens.len() > 1LL) && (_95217_token.get()._field_kind == jule::Str("*", 1)))) {
					_95217_token=_94034_tokens[1LL];
					if (((_95217_token.get()._field_id == static_cast<jule::U64>(1LLU)) || (_95217_token.get()._field_id == static_cast<jule::U64>(35LLU)))) {
						return jule::Any(_1a7de2564_build_type(&(*_self_), _94034_tokens));
					};
				};
				return jule::Any(_1a7de1b3a_build_unary(&(*_self_), _94034_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1aa52e198:;
			{
				if ((_94034_tokens.len() < 3LL)) {
					goto _match_end_1aa52e088;
				};
				if ((_94034_tokens.len() > 3LL)) {
					jule::Ptr<_1a527737a_Token> _97521_t = _94034_tokens[(_94034_tokens.len() - 1LL)];;
					if (((_97521_t.get()._field_id == static_cast<jule::U64>(3LLU)) && (_97521_t.get()._field_kind == jule::Str(")", 1)))) {
						goto _match_end_1aa52e088;
					};
				};
				jule::Ptr<_1a527737a_Token> _98117_next = _94034_tokens[1LL];;
				if (((_98117_next.get()._field_id != static_cast<jule::U64>(3LLU)) || (_98117_next.get()._field_kind != jule::Str("]", 1)))) {
					goto _match_end_1aa52e088;
				};
				return jule::Any(_1a7de2564_build_type(&(*_self_), _94034_tokens));
			}
		}
		_match_end_1aa52e088:;
	};
	_95217_token=_94034_tokens[(_94034_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _95217_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1aa52e20e:;
			{
				return jule::Any(_1a7de2872_build_sub_ident(&(*_self_), _94034_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1aa52e6b5:;
			{
				return jule::Any(_1a7de2564_build_type(&(*_self_), _94034_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1aa5399cd:;
			{
				return jule::Any(_1a7de2e8d_build_op_right(&(*_self_), _94034_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1aa539a44:;
			{
				{
					auto &_match_expr{ _95217_token.get()._field_kind };
					
					if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1aa53b53a:;
						{
							return jule::Any(_1a7de47a8_build_parentheses_range(&(*_self_), _94034_tokens));
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_1aa53b5a1:;
						{
							return jule::Any(_1a7de7091_build_brace_range(&(*_self_), _94034_tokens));
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1aa53b6a0:;
						{
							return jule::Any(_1a7de84b0_build_bracket_range(&(*_self_), _94034_tokens));
						}
					}
					_match_end_1aa53aeda:;
				};
			}
		}
		_match_end_1aa52e660:;
	};
	_1a7de04b8_push_err(&(*_self_), _95217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;
}



inline jule::Ptr<_1a6859807_BinopExpr> _1a7de8b75_build_binop(_1a7ddebc1_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1a527737a_Token>>& _101235_tokens, jule::I64 _101253_i) {
	jule::Slice<jule::Ptr<_1a527737a_Token>> _101317_left_tokens = _101235_tokens.slice(0LL,_101253_i);;
	jule::Slice<jule::Ptr<_1a527737a_Token>> _101417_right_tokens = _101235_tokens.slice((_101253_i + 1LL));;
	if ((_101317_left_tokens.len() == 0LL)) {
		_1a7de04b8_push_err(&(*_self_), _101235_tokens[_101253_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1a7de07d7_push_suggestion(&(*_self_), jule::Str("left operand expected for binary operator", 41),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_101417_right_tokens.len() == 0LL)) {
		_1a7de04b8_push_err(&(*_self_), _101235_tokens[_101253_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1a7de07d7_push_suggestion(&(*_self_), jule::Str("right operand expected for binary operator", 42),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1a6859807_BinopExpr>(_1a6859807_BinopExpr{._field_left=_1a7de959e_build_from_tokens(&(*_self_), _101317_left_tokens), ._field_right=_1a7de959e_build_from_tokens(&(*_self_), _101417_right_tokens), ._field_op=_101235_tokens[_101253_i]});
}



inline jule::Any _1a7de8e83_build(_1a7ddebc1_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1a527737a_Token>>& _103229_tokens) {
	jule::I64 _103313_i = _1a7dde451_find_lowest_prec_op(_103229_tokens);;
	if ((_103313_i == -1LL)) {
		return jule::Any(_1a7de87bd_build_data(&(*_self_), _103229_tokens));
	};
	return jule::Any(_1a7de8b75_build_binop(&(*_self_), _103229_tokens,_103313_i));
}



inline jule::Any _1a7de9291_build_kind(_1a7ddebc1_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1a527737a_Token>>& _104034_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1a527737a_Token>>> _104118_parts;;
	jule::Slice<_1a43349cc_Log> _104125_errors;;
	std::tie(_104118_parts,_104125_errors) = _1a7dec31b_parts(_104034_tokens,static_cast<jule::U64>(8LLU),true);
	if ((_104125_errors != nullptr)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_104125_errors);
		return nullptr;
	} else if ((_104118_parts.len() > 1LL)) {
		return jule::Any(_1a7de0ae5_build_tuple(&(*_self_), _104118_parts));
	};
	return jule::Any(_1a7de8e83_build(&(*_self_), _104034_tokens));
}



inline jule::Ptr<_1a6855e41_Expr> _1a7de959e_build_from_tokens(_1a7ddebc1_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1a527737a_Token>> _105140_tokens) {
	if ((_105140_tokens.len() == 0LL)) {
		return nullptr;
	};
	return jule::new_ptr<_1a6855e41_Expr>(_1a6855e41_Expr{._field_token=_105140_tokens[0LL], ._field_end=_105140_tokens[(_105140_tokens.len() - 1LL)], ._field_kind=jule::Any(_1a7de9291_build_kind(&(*_self_), _105140_tokens))});
}







std::ostream &operator<<(std::ostream &_Stream, _1a7ddebc1_ExprBuilder _Src) {
	_Stream << "ExprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a7de9eea_AssignInfo _Src) {
	_Stream << "AssignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}



inline void _1a7ded85b_stop(_1a7ded52b_Parser* _self_) {
	(*_self_)._field_ast=nullptr;
}



inline jule::Bool _1a7dedac0_stopped(_1a7ded52b_Parser* _self_) {
	return ((*_self_)._field_ast == nullptr);
}



inline void _1a7dede88_push_err(_1a7ded52b_Parser* _self_, jule::Ptr<_1a527737a_Token> _23327_token, jule::Str _23342_fmt, jule::Slice<jule::Any> _23355_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1a7dec9d1_compiler_err(_23327_token,_23342_fmt,jule::Any(_23355_args)));;
}



inline void _1a7dee2a7_push_suggestion(_1a7ded52b_Parser* _self_, jule::Str _23834_fmt, jule::Slice<jule::Any> _23847_args) {
	{
		_1a7decd33_push_suggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_23834_fmt,jule::Any(_23847_args));
	};
}



inline jule::Ptr<_1a6855e41_Expr> _1a7dee5b5_build_expr(jule::Ptr<_1a7ded52b_Parser> _self_, jule::Slice<jule::Ptr<_1a527737a_Token>>& _24235_tokens) {
	jule::Ptr<_1a7ddebc1_ExprBuilder> _24317_ep = jule::new_ptr<_1a7ddebc1_ExprBuilder>(_1a7ddebc1_ExprBuilder{._field_p=_self_});;
	jule::Ptr<_1a6855e41_Expr> _24617_expr = _1a7de959e_build_from_tokens(_24317_ep.ptr(), _24235_tokens);;
	return _24617_expr;
}



inline jule::Ptr<_1a6852525_Directive> _1a7dee8c3_build_directive(_1a7ded52b_Parser* _self_, jule::Slice<jule::Ptr<_1a527737a_Token>> _25038_tokens) {
	if ((_25038_tokens.len() == 1LL)) {
		_1a7dede88_push_err(&(*_self_), _25038_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_25038_tokens[1LL].get()._field_column != (_25038_tokens[0LL].get()._field_column + 1LL))) {
		_1a7dede88_push_err(&(*_self_), _25038_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1a6852525_Directive>(_1a6852525_Directive{._field_tag=_25038_tokens[1LL], ._field_args=_25038_tokens.slice(2LL)});
}



inline void _1a7deeb48_push_directive(_1a7ded52b_Parser* _self_, jule::Ptr<_1a6852525_Directive> _26737_d) {
	if ((_26737_d == nullptr)) {
		return;;
	};
	{
		auto &expr = (*_self_)._field_directives;
		auto it = expr.begin();
		_iter_begin_1aa56acb7:;
		if (it != expr.end()) {
			jule::Ptr<_1a6852525_Directive> _27316_pd = *it;
			{
				if ((_26737_d.get()._field_tag.get()._field_kind == _27316_pd.get()._field_tag.get()._field_kind)) {
					return;;
				};
			}
			_iter_next_1aa56acb7:;
			++it;
			goto _iter_begin_1aa56acb7;
		}
		_iter_end_1aa56acb7:;
	};
	(*_self_)._field_directives = jule::alloc_for_append((*_self_)._field_directives,1);(*_self_)._field_directives.__push(_26737_d);;
}



inline jule::Ptr<_1a686070e_ScopeTree> _1a7e00000_build_scope(jule::Ptr<_1a7ded52b_Parser> _self_, jule::Slice<jule::Ptr<_1a527737a_Token>>& _28136_tokens, jule::Ptr<_1a527737a_Token> _28158_end) {
	jule::Ptr<_1a686070e_ScopeTree> _28217_s = _1a7dd0453_new_scope();;
	_28217_s.get()._field_end=_28158_end;
	_1a7dd1da0_ScopeParser _28417_sp = _1a7dd1da0_ScopeParser{._field_p=_self_, };;
	_1a7ddc8c2_build(&_28417_sp, _28136_tokens,_28217_s);
	return _28217_s;
}



inline std::tuple<jule::Ptr<_1a68529cb_TypeDecl>,jule::Bool> _1a7e00451___build_type(jule::Ptr<_1a7ded52b_Parser> _self_, jule::Slice<jule::Ptr<_1a527737a_Token>>& _29144_tokens, jule::I64* _29213_i, jule::Bool _29222_err) {
	_1a7e0dd22_TypeBuilder _29317_tb = _1a7e0dd22_TypeBuilder{._field_p=_self_, ._field_tokens=_29144_tokens, ._field_i=_29213_i, ._field_err=_29222_err};;
	jule::Ptr<_1a68529cb_TypeDecl> _29918_decl;;
	jule::Bool _29924_ok;;
	std::tie(_29918_decl,_29924_ok) = _1a7e12210_build(&_29317_tb);
	return std::make_tuple(_29918_decl,_29924_ok);
}



inline std::tuple<jule::Ptr<_1a68529cb_TypeDecl>,jule::Bool> _1a7e008a2_build_type(jule::Ptr<_1a7ded52b_Parser> _self_, jule::Slice<jule::Ptr<_1a527737a_Token>>& _30442_tokens, jule::I64* _30513_i, jule::Bool _30522_err) {
	jule::Ptr<_1a527737a_Token> _30613_token = _30442_tokens[(*(_30513_i))];;
	jule::Ptr<_1a68529cb_TypeDecl> _30718_t;;
	jule::Bool _30721_ok;;
	std::tie(_30718_t,_30721_ok) = _1a7e00451___build_type(_self_, _30442_tokens,_30513_i,_30522_err);
	if ((_30522_err && (!(_30721_ok)))) {
		_1a7dede88_push_err(_self_.ptr(), _30613_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
	};
	return std::make_tuple(_30718_t,_30721_ok);
}



inline jule::Ptr<_1a6866957_TypeAliasDecl> _1a7e00bb0_build_type_alias_decl(jule::Ptr<_1a7ded52b_Parser> _self_, jule::Slice<jule::Ptr<_1a527737a_Token>>& _31446_tokens) {
	jule::I64 _31517_i = 1LL;;
	if ((_31517_i >= _31446_tokens.len())) {
		_1a7dede88_push_err(_self_.ptr(), _31446_tokens[(_31517_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1a6866957_TypeAliasDecl> _32017_tad = jule::new_ptr<_1a6866957_TypeAliasDecl>(_1a6866957_TypeAliasDecl{._field_token=_31446_tokens[1LL], ._field_ident=_31446_tokens[1LL].get()._field_kind, });;
	jule::Ptr<_1a527737a_Token> _32417_token = _31446_tokens[_31517_i];;
	if ((_32417_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1a7dede88_push_err(_self_.ptr(), _32417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1a7dee2a7_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	(_31517_i)++;
	if ((_31517_i >= _31446_tokens.len())) {
		_1a7dede88_push_err(_self_.ptr(), _31446_tokens[(_31517_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return _32017_tad;
	};
	_32417_token=_31446_tokens[_31517_i];
	if ((_32417_token.get()._field_id != static_cast<jule::U64>(11LLU))) {
		_1a7dede88_push_err(_self_.ptr(), _31446_tokens[(_31517_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1a7dee2a7_push_suggestion(_self_.ptr(), jule::Str("expected colon \":\"", 18),jule::Slice<jule::Any>());
		return _32017_tad;
	};
	(_31517_i)++;
	if ((_31517_i >= _31446_tokens.len())) {
		_1a7dede88_push_err(_self_.ptr(), _31446_tokens[(_31517_i - 1LL)],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return _32017_tad;
	};
	jule::Ptr<_1a68529cb_TypeDecl> _34518_t;;
	jule::Bool _34521_ok;;
	std::tie(_34518_t,_34521_ok) = _1a7e008a2_build_type(_self_, _31446_tokens,(&(_31517_i)),true);
	_32017_tad.get()._field_kind=_34518_t;
	if ((_34521_ok && (_31517_i < _31446_tokens.len()))) {
		_1a7dede88_push_err(_self_.ptr(), _31446_tokens[_31517_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	return _32017_tad;
}



inline void _1a7e01001_build_var_type_and_expr(jule::Ptr<_1a7ded52b_Parser> _self_, jule::Ptr<_1a68631d4_VarDecl>& _35348_v, jule::Slice<jule::Ptr<_1a527737a_Token>>& _35366_tokens) {
	jule::I64 _35417_i = 0LL;;
	jule::Ptr<_1a527737a_Token> _35517_tok = _35366_tokens[_35417_i];;
	if ((_35517_tok.get()._field_id == static_cast<jule::U64>(11LLU))) {
		(_35417_i)++;
		if (((_35417_i >= _35366_tokens.len()) || ((_35366_tokens[_35417_i].get()._field_id == static_cast<jule::U64>(7LLU)) && (_35366_tokens[_35417_i].get()._field_kind == jule::Str("=", 1))))) {
			_1a7dede88_push_err(_self_.ptr(), _35517_tok,jule::Str("type missing", 12),jule::Slice<jule::Any>());
			return;;
		};
		jule::Ptr<_1a68529cb_TypeDecl> _36322_t;;
		jule::Bool _36325_ok;;
		std::tie(_36322_t,_36325_ok) = _1a7e008a2_build_type(_self_, _35366_tokens,(&(_35417_i)),true);
		if (_36325_ok) {
			_35348_v.get()._field_kind=_36322_t;
			if ((_35417_i >= _35366_tokens.len())) {
				return;;
			};
			_35517_tok=_35366_tokens[_35417_i];
		};
	};
	if ((_35517_tok.get()._field_id == static_cast<jule::U64>(7LLU))) {
		if ((_35517_tok.get()._field_kind != jule::Str("=", 1))) {
			_1a7dede88_push_err(_self_.ptr(), _35517_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return;;
		};
		jule::Slice<jule::Ptr<_1a527737a_Token>> _37821_expr_tokens = _35366_tokens.slice((_35417_i + 1LL));;
		if ((_37821_expr_tokens.len() == 0LL)) {
			_1a7dede88_push_err(_self_.ptr(), _35517_tok,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return;;
		};
		_35348_v.get()._field_expr=_1a7dee5b5_build_expr(_self_, _37821_expr_tokens);
	} else {
		_1a7dede88_push_err(_self_.ptr(), _35517_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1a7e01331_build_var_common(jule::Ptr<_1a7ded52b_Parser> _self_, jule::Ptr<_1a68631d4_VarDecl>& _38941_v, jule::Slice<jule::Ptr<_1a527737a_Token>> _38958_tokens) {
	_38941_v.get()._field_token=_38958_tokens[0LL];
	if ((_38941_v.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1a7dede88_push_err(_self_.ptr(), _38941_v.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1a7dee2a7_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;;
	};
	_38941_v.get()._field_ident=_38941_v.get()._field_token.get()._field_kind;
	_38941_v.get()._field_kind=nullptr;
	if ((_38958_tokens.len() > 1LL)) {
		_38958_tokens=_38958_tokens.slice(1LL);
		_1a7e01001_build_var_type_and_expr(_self_, _38941_v,_38958_tokens);
	};
}



inline void _1a7e016e9_build_var_begin(_1a7ded52b_Parser* _self_, jule::Ptr<_1a68631d4_VarDecl>& _40439_v, jule::Ptr<jule::I64> _40456_i, jule::Slice<jule::Ptr<_1a527737a_Token>>& _40466_tokens) {
	jule::Ptr<_1a527737a_Token> _40513_tok = _40466_tokens[(*(_40456_i))];;
	{
		auto &_match_expr{ _40513_tok.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(38LLU)) {
			_case_begin_1aa589b2c:;
			{
				_40439_v.get()._field_statically=true;
				goto _case_begin_1aa589b93;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1aa589b93:;
			{
				((*(_40456_i)))++;
				if (((*(_40456_i)) >= _40466_tokens.len())) {
					_1a7dede88_push_err(&(*_self_), _40513_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				if ((_40466_tokens[(*(_40456_i))].get()._field_id == static_cast<jule::U64>(36LLU))) {
					_40439_v.get()._field_mutable=true;
					((*(_40456_i)))++;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_1aa589236:;
			{
				((*(_40456_i)))++;
				_40439_v.get()._field_constant=true;
			}
		}
		else {
			_case_begin_1aa588ae8:;
			{
				_1a7dede88_push_err(&(*_self_), _40513_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1aa5890d2:;
	};
	if (((*(_40456_i)) >= _40466_tokens.len())) {
		_1a7dede88_push_err(&(*_self_), _40513_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1a68631d4_VarDecl> _1a7e01a07_build_var(jule::Ptr<_1a7ded52b_Parser> _self_, jule::Slice<jule::Ptr<_1a527737a_Token>> _43533_tokens) {
	jule::Ptr<jule::I64> _43617_i = jule::new_ptr<jule::I64>(0LL);;
	jule::Ptr<_1a68631d4_VarDecl> _43717_v = jule::new_ptr<_1a68631d4_VarDecl>(_1a68631d4_VarDecl{._field_token=_43533_tokens[(*(_43617_i))], });;
	_1a7e016e9_build_var_begin(_self_.ptr(), _43717_v,_43617_i,_43533_tokens);
	if (((*(_43617_i)) >= _43533_tokens.len())) {
		return nullptr;
	};
	_43533_tokens=_43533_tokens.slice((*(_43617_i)));
	if (((_43533_tokens[0LL].get()._field_id == static_cast<jule::U64>(7LLU)) && (_43533_tokens[0LL].get()._field_kind == jule::Str("&", 1)))) {
		_43717_v.get()._field_reference=true;
		if ((_43533_tokens.len() == 1LL)) {
			return nullptr;
		};
		_43533_tokens=_43533_tokens.slice(1LL);
	};
	_1a7e01331_build_var_common(_self_, _43717_v,_43533_tokens);
	return _43717_v;
}



inline jule::Ptr<_1a685d960_GenericDecl> _1a7e01d15_build_generic(_1a7ded52b_Parser* _self_, jule::Slice<jule::Ptr<_1a527737a_Token>>& _45737_tokens) {
	if ((_45737_tokens.len() > 1LL)) {
		_1a7dede88_push_err(&(*_self_), _45737_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a685d960_GenericDecl> _46117_g = jule::new_ptr<_1a685d960_GenericDecl>(_1a685d960_GenericDecl{._field_token=_45737_tokens[0LL], });;
	if ((_46117_g.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1a7dede88_push_err(&(*_self_), _46117_g.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1a7dee2a7_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_46117_g.get()._field_ident=_46117_g.get()._field_token.get()._field_kind;
	return _46117_g;
}



inline jule::Slice<jule::Ptr<_1a685d960_GenericDecl>> _1a7e021bc_build_generics(_1a7ded52b_Parser* _self_, jule::Slice<jule::Ptr<_1a527737a_Token>>& _47238_tokens, jule::Ptr<_1a527737a_Token>& _47257_error_token) {
	if ((_47238_tokens.len() == 0LL)) {
		_1a7dede88_push_err(&(*_self_), _47257_error_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1a527737a_Token>>> _47818_parts;;
	jule::Slice<_1a43349cc_Log> _47825_errors;;
	std::tie(_47818_parts,_47825_errors) = _1a7dec31b_parts(_47238_tokens,static_cast<jule::U64>(8LLU),true);
	if ((_47825_errors.len() > 0LL)) {
		(*_self_)._field_errors=jule::append((*_self_)._field_errors,_47825_errors);
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1a685d960_GenericDecl>> _48417_generics = jule::Slice<jule::Ptr<_1a685d960_GenericDecl>>::alloc(0LL,_47818_parts.len());;
	{
		auto &expr = _47818_parts;
		auto it = expr.begin();
		_iter_begin_1aa598476:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1a527737a_Token>> _48521_part = *it;
			{
				_48417_generics = jule::alloc_for_append(_48417_generics,1);_48417_generics.__push(_1a7e01d15_build_generic(&(*_self_), _48521_part));;
			}
			_iter_next_1aa598476:;
			++it;
			goto _iter_begin_1aa598476;
		}
		_iter_end_1aa598476:;
	};
	return _48417_generics;
}



inline jule::Ptr<_1a6860dd5_ParamDecl> _1a7e024ca_build_self_param(_1a7ded52b_Parser* _self_, jule::Slice<jule::Ptr<_1a527737a_Token>> _49239_tokens) {
	if ((_49239_tokens.len() == 0LL)) {
		return nullptr;
	};
	jule::Ptr<_1a6860dd5_ParamDecl> _49717_param = jule::new_ptr<_1a6860dd5_ParamDecl>();;
	jule::I64 _50017_i = 0LL;;
	if ((_49239_tokens[_50017_i].get()._field_id == static_cast<jule::U64>(36LLU))) {
		_49717_param.get()._field_mutable=true;
		(_50017_i)++;
		if ((_50017_i >= _49239_tokens.len())) {
			_1a7dede88_push_err(&(*_self_), _49239_tokens[(_50017_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
	};
	if ((_49239_tokens[_50017_i].get()._field_kind == jule::Str("&", 1))) {
		_49717_param.get()._field_ident=jule::Str("&", 1);
		(_50017_i)++;
		if ((_50017_i >= _49239_tokens.len())) {
			_1a7dede88_push_err(&(*_self_), _49239_tokens[(_50017_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
	};
	if ((_49239_tokens[_50017_i].get()._field_id == static_cast<jule::U64>(28LLU))) {
		_49717_param.get()._field_ident+=jule::Str("self", 4);
		_49717_param.get()._field_token=_49239_tokens[_50017_i];
		(_50017_i)++;
		if ((_50017_i < _49239_tokens.len())) {
			_1a7dede88_push_err(&(*_self_), _49239_tokens[_50017_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
	};
	return _49717_param;
}



inline void _1a7e02893_param_type_begin(_1a7ded52b_Parser* _self_, jule::Ptr<_1a6860dd5_ParamDecl>& _53140_param, jule::I64& _53164_i, jule::Slice<jule::Ptr<_1a527737a_Token>>& _53173_tokens) {
	for (; (_53164_i < _53173_tokens.len()); (_53164_i)++) {
		{
			jule::Ptr<_1a527737a_Token> _53317_token = _53173_tokens[_53164_i];;
			if ((_53317_token.get()._field_id != static_cast<jule::U64>(7LLU))) {
				return;;
			} else if ((_53317_token.get()._field_kind != jule::Str("...", 3))) {
				return;;
			};
			if (_53140_param.get()._field_variadic) {
				_1a7dede88_push_err(&(*_self_), _53317_token,jule::Str("define is already variadic", 26),jule::Slice<jule::Any>());
				goto _iter_next_1aa5a068c;
			};
			_53140_param.get()._field_variadic=true;
		}
	_iter_next_1aa5a068c:;
	}
	_iter_end_1aa5a068c:;;
}



inline void _1a7e02bb2_build_param_type(jule::Ptr<_1a7ded52b_Parser> _self_, jule::Ptr<_1a6860dd5_ParamDecl>& _54841_param, jule::Slice<jule::Ptr<_1a527737a_Token>>& _54865_tokens) {
	jule::I64 _54917_i = 0LL;;
	_1a7e02893_param_type_begin(_self_.ptr(), _54841_param,_54917_i,_54865_tokens);
	if ((_54917_i >= _54865_tokens.len())) {
		return;;
	};
	std::tie(_54841_param.get()._field_kind,std::ignore) = _1a7e008a2_build_type(_self_, _54865_tokens,(&(_54917_i)),true);
	if ((_54917_i < _54865_tokens.len())) {
		_1a7dede88_push_err(_self_.ptr(), _54865_tokens[_54917_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1a7e0307a_build_param_body(jule::Ptr<_1a7ded52b_Parser> _self_, jule::Ptr<_1a6860dd5_ParamDecl>& _56141_param, jule::Ptr<jule::I64> _56164_i, jule::Slice<jule::Ptr<_1a527737a_Token>> _56177_tokens) {
	jule::Ptr<_1a527737a_Token> _56217_tok = _56177_tokens[(*(_56164_i))];;
	_56141_param.get()._field_ident=_56217_tok.get()._field_kind;
	if ((((*(_56164_i)) + 1LL) >= _56177_tokens.len())) {
		return;;
	} else if ((((_56177_tokens.len() - (*(_56164_i))) - 1LL) < 2LL)) {
		_1a7dede88_push_err(_self_.ptr(), _56217_tok,jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return;;
	};
	_56217_tok=_56177_tokens[((*(_56164_i)) + 1LL)];
	if ((_56217_tok.get()._field_id != static_cast<jule::U64>(11LLU))) {
		_1a7e02bb2_build_param_type(_self_, _56141_param,_56177_tokens);
		return;;
	};
	_56177_tokens=_56177_tokens.slice(((*(_56164_i)) + 2LL));
	_1a7e02bb2_build_param_type(_self_, _56141_param,_56177_tokens);
}



inline jule::Ptr<_1a6860dd5_ParamDecl> _1a7e03388_build_param(jule::Ptr<_1a7ded52b_Parser> _self_, jule::Slice<jule::Ptr<_1a527737a_Token>> _58235_tokens) {
	jule::Ptr<_1a6860dd5_ParamDecl> _58317_param = jule::new_ptr<_1a6860dd5_ParamDecl>(_1a6860dd5_ParamDecl{._field_token=_58235_tokens[0LL], });;
	if ((_58317_param.get()._field_token.get()._field_id == static_cast<jule::U64>(36LLU))) {
		_58317_param.get()._field_mutable=true;
		if ((_58235_tokens.len() == 1LL)) {
			_1a7dede88_push_err(_self_.ptr(), _58235_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_58235_tokens=_58235_tokens.slice(1LL);
		_58317_param.get()._field_token=_58235_tokens[0LL];
	};
	if ((_58235_tokens.len() >= 3LL)) {
		if (((_58317_param.get()._field_token.get()._field_id == static_cast<jule::U64>(7LLU)) && (_58317_param.get()._field_token.get()._field_kind == jule::Str("&", 1)))) {
			if ((_58235_tokens.len() == 1LL)) {
				_1a7dede88_push_err(_self_.ptr(), _58235_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			};
			if (((_58235_tokens[1LL].get()._field_id == static_cast<jule::U64>(2LLU)) && (_58235_tokens[2LL].get()._field_id == static_cast<jule::U64>(11LLU)))) {
				_58317_param.get()._field_reference=true;
				_58235_tokens=_58235_tokens.slice(1LL);
				_58317_param.get()._field_token=_58235_tokens[0LL];
			};
		};
	};
	if ((_58317_param.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_58317_param.get()._field_ident=jule::Str("<anonymous>", 11);
		_1a7e02bb2_build_param_type(_self_, _58317_param,_58235_tokens);
	} else {
		jule::Ptr<jule::I64> _61921_i = jule::new_ptr<jule::I64>(0LL);;
		_1a7e0307a_build_param_body(_self_, _58317_param,_61921_i,_58235_tokens);
	};
	return _58317_param;
}



inline void _1a7e0360d_check_params(_1a7ded52b_Parser* _self_, jule::Slice<jule::Ptr<_1a6860dd5_ParamDecl>>& _62636_params) {
	{
		auto &expr = _62636_params;
		auto it = expr.begin();
		_iter_begin_1aa5b3848:;
		if (it != expr.end()) {
			jule::Ptr<_1a6860dd5_ParamDecl> _62721_param = *it;
			{
				if ((_1a6861248_is_self(_62721_param.ptr()) || (_62721_param.get()._field_kind != nullptr))) {
					goto _iter_next_1aa5b3848;
				};
				if ((_62721_param.get()._field_token == nullptr)) {
					_1a7dede88_push_err(&(*_self_), _62721_param.get()._field_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
				} else {
					_62721_param.get()._field_kind=jule::new_ptr<_1a68529cb_TypeDecl>(_1a68529cb_TypeDecl{._field_token=_62721_param.get()._field_token, ._field_kind=jule::Any(jule::new_ptr<_1a685305e_IdentTypeDecl>(_1a685305e_IdentTypeDecl{._field_token=_62721_param.get()._field_token, ._field_ident=_62721_param.get()._field_token.get()._field_kind, }))});
					_62721_param.get()._field_ident=jule::Str("<anonymous>", 11);
				};
			}
			_iter_next_1aa5b3848:;
			++it;
			goto _iter_begin_1aa5b3848;
		}
		_iter_end_1aa5b3848:;
	};
}



inline jule::Slice<jule::Ptr<_1a6860dd5_ParamDecl>> _1a7e039b5_build_params(jule::Ptr<_1a7ded52b_Parser> _self_, jule::Slice<jule::Ptr<_1a527737a_Token>>& _64637_tokens, jule::Bool _64655_method) {
	jule::Slice<jule::Slice<jule::Ptr<_1a527737a_Token>>> _64718_parts;;
	jule::Slice<_1a43349cc_Log> _64725_errs;;
	std::tie(_64718_parts,_64725_errs) = _1a7dec31b_parts(_64637_tokens,static_cast<jule::U64>(8LLU),true);
	_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_64725_errs);
	if ((_64718_parts.len() == 0LL)) {
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1a6860dd5_ParamDecl>> _65317_params = nullptr;;
	if ((_64655_method && (_64718_parts.len() > 0LL))) {
		jule::Ptr<_1a6860dd5_ParamDecl> _65521_param = _1a7e024ca_build_self_param(_self_.ptr(), _64718_parts[0LL]);;
		if (((_65521_param != nullptr) && _1a6861248_is_self(_65521_param.ptr()))) {
			_65317_params = jule::alloc_for_append(_65317_params,1);_65317_params.__push(_65521_param);;
			_64718_parts=_64718_parts.slice(1LL);
		};
	};
	{
		auto &expr = _64718_parts;
		auto it = expr.begin();
		_iter_begin_1aa5b993c:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1a527737a_Token>> _66221_part = *it;
			{
				jule::Ptr<_1a6860dd5_ParamDecl> _66321_param = _1a7e03388_build_param(_self_, _66221_part);;
				if ((_66321_param != nullptr)) {
					_65317_params = jule::alloc_for_append(_65317_params,1);_65317_params.__push(_66321_param);;
				};
			}
			_iter_next_1aa5b993c:;
			++it;
			goto _iter_begin_1aa5b993c;
		}
		_iter_end_1aa5b993c:;
	};
	_1a7e0360d_check_params(_self_.ptr(), _65317_params);
	return _65317_params;
}



inline std::tuple<jule::Ptr<_1a68557ae_RetTypeDecl>,jule::Bool> _1a7e03d6c_build_multi_ret_type(jule::Ptr<_1a7ded52b_Parser> _self_, jule::Slice<jule::Ptr<_1a527737a_Token>>& _67345_tokens, jule::I64& _67368_i) {
	jule::Ptr<_1a68557ae_RetTypeDecl> _67378_t = jule::Ptr<_1a68557ae_RetTypeDecl>();
	jule::Bool _67395_ok = jule::Bool();
	_67378_t=jule::new_ptr<_1a68557ae_RetTypeDecl>();
	(_67368_i)++;
	if ((_67368_i >= _67345_tokens.len())) {
		(_67368_i)--;
		std::tie(_67378_t.get()._field_kind,_67395_ok) = _1a7e008a2_build_type(_self_, _67345_tokens,(&(_67368_i)),false);
		return std::make_tuple(_67378_t,_67395_ok);
	};
	(_67368_i)--;
	jule::Slice<jule::Ptr<_1a527737a_Token>> _68317_range_tokens = _1a7debb45_range(_67368_i,jule::Str("(", 1),jule::Str(")", 1),_67345_tokens);;
	jule::Slice<jule::Slice<jule::Ptr<_1a527737a_Token>>> _68518_parts;;
	jule::Slice<_1a43349cc_Log> _68525_errs;;
	std::tie(_68518_parts,_68525_errs) = _1a7dec31b_parts(_68317_range_tokens,static_cast<jule::U64>(8LLU),true);
	_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_68525_errs);
	if ((_68518_parts.len() == 0LL)) {
		return std::make_tuple(_67378_t,_67395_ok);
	};
	jule::Slice<jule::Ptr<_1a68529cb_TypeDecl>> _69117_types = jule::Slice<jule::Ptr<_1a68529cb_TypeDecl>>::alloc(0LL,_68518_parts.len());;
	_67378_t.get()._field_idents=jule::Slice<jule::Ptr<_1a527737a_Token>>::alloc(0LL,_68518_parts.len());
	{
		auto &expr = _68518_parts;
		auto it = expr.begin();
		_iter_begin_1aa5c1a21:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1a527737a_Token>> _69321_part = *it;
			{
				jule::Ptr<_1a527737a_Token> _69421_token = _69321_part[0LL];;
				jule::I64 _69521_offset = 0LL;;
				if ((_69321_part.len() > 1LL)) {
					_69421_token=_69321_part[1LL];
					if ((_69421_token.get()._field_id == static_cast<jule::U64>(11LLU))) {
						_69521_offset=2LL;
						if ((_69321_part.len() < 3LL)) {
							_1a7dede88_push_err(_self_.ptr(), _69421_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
							goto _iter_next_1aa5c1a21;
						};
					};
				};
				_69421_token=_69321_part[0LL];
				if ((_69521_offset != 2LL)) {
					jule::Ptr<_1a527737a_Token> _71125_new_token = jule::new_ptr<_1a527737a_Token>((*(_69421_token)));;
					_71125_new_token.get()._field_kind=jule::Str("<anonymous>", 11);
					_67378_t.get()._field_idents = jule::alloc_for_append(_67378_t.get()._field_idents,1);_67378_t.get()._field_idents.__push(_71125_new_token);;
				} else {
					_67378_t.get()._field_idents = jule::alloc_for_append(_67378_t.get()._field_idents,1);_67378_t.get()._field_idents.__push(_69421_token);;
				};
				jule::Ptr<_1a68529cb_TypeDecl> _71822_tk;;
				std::tie(_71822_tk,std::ignore) = _1a7e008a2_build_type(_self_, _69321_part,(&(_69521_offset)),true);
				if ((_69521_offset < _69321_part.len())) {
					_1a7dede88_push_err(_self_.ptr(), _69321_part[_69521_offset],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				_69117_types = jule::alloc_for_append(_69117_types,1);_69117_types.__push(_71822_tk);;
			}
			_iter_next_1aa5c1a21:;
			++it;
			goto _iter_begin_1aa5c1a21;
		}
		_iter_end_1aa5c1a21:;
	};
	if ((_69117_types.len() > 1LL)) {
		_67378_t.get()._field_kind=jule::new_ptr<_1a68529cb_TypeDecl>(_1a68529cb_TypeDecl{._field_token=_67345_tokens[0LL], ._field_kind=jule::Any(jule::new_ptr<_1a68541b4_TupleTypeDecl>(_1a68541b4_TupleTypeDecl{._field_types=_69117_types}))});
	} else {
		_67378_t.get()._field_kind=_69117_types[0LL];
	};
	_67395_ok=true;
	return std::make_tuple(_67378_t,_67395_ok);
}



inline std::tuple<jule::Ptr<_1a68557ae_RetTypeDecl>,jule::Bool> _1a7e04224_build_ret_type(jule::Ptr<_1a7ded52b_Parser> _self_, jule::Slice<jule::Ptr<_1a527737a_Token>>& _74139_tokens, jule::I64& _74162_i) {
	jule::Ptr<_1a68557ae_RetTypeDecl> _74172_t = jule::Ptr<_1a68557ae_RetTypeDecl>();
	jule::Bool _74189_ok = jule::Bool();
	_74172_t=jule::new_ptr<_1a68557ae_RetTypeDecl>();
	if ((_74162_i >= _74139_tokens.len())) {
		return std::make_tuple(_74172_t,_74189_ok);
	};
	jule::Ptr<_1a527737a_Token> _74717_token = _74139_tokens[_74162_i];;
	{
		auto &_match_expr{ _74717_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1aa5ca772:;
			{
				if ((_74717_token.get()._field_kind == jule::Str("{", 1))) {
					return std::make_tuple(_74172_t,_74189_ok);
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1aa5ca82c:;
			{
				if ((_74717_token.get()._field_kind == jule::Str("=", 1))) {
					return std::make_tuple(_74172_t,_74189_ok);
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_1aa5ca893:;
			{
				if (((_74162_i + 1LL) >= _74139_tokens.len())) {
					_1a7dede88_push_err(_self_.ptr(), _74717_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
					return std::make_tuple(_74172_t,_74189_ok);
				};
				(_74162_i)++;
				_74717_token=_74139_tokens[_74162_i];
				if ((_74717_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _74717_token.get()._field_kind };
						
						if (_match_expr == jule::Str("(", 1)) {
							_case_begin_1aa5cd434:;
							{
								std::tie(_74172_t,_74189_ok) = _1a7e03d6c_build_multi_ret_type(_self_, _74139_tokens,_74162_i);
								return std::make_tuple(_74172_t,_74189_ok);
							}
						}
						else if (_match_expr == jule::Str("{", 1)) {
							_case_begin_1aa5cd4bc:;
							{
								_1a7dede88_push_err(_self_.ptr(), _74717_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
								return std::make_tuple(_74172_t,_74189_ok);
							}
						}
						_match_end_1aa5cd3ac:;
					};
				};
				std::tie(_74172_t.get()._field_kind,_74189_ok) = _1a7e008a2_build_type(_self_, _74139_tokens,(&(_74162_i)),true);
				return std::make_tuple(_74172_t,_74189_ok);
			}
		}
		_match_end_1aa5ca71c:;
	};
	(_74162_i)++;
	_1a7dede88_push_err(_self_.ptr(), _74717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return std::make_tuple(_74172_t,_74189_ok);
}



inline jule::Ptr<_1a6862205_FnDecl> _1a7e04675_build_fn_prototype(jule::Ptr<_1a7ded52b_Parser> _self_, jule::Slice<jule::Ptr<_1a527737a_Token>>& _78643_tokens, jule::I64& _78666_i, jule::Bool _78674_method) {
	jule::Ptr<_1a6862205_FnDecl> _78717_f = jule::new_ptr<_1a6862205_FnDecl>(_1a6862205_FnDecl{._field_token=_78643_tokens[_78666_i], });;
	if ((_78717_f.get()._field_token.get()._field_id == static_cast<jule::U64>(38LLU))) {
		_78717_f.get()._field_statically=true;
		(_78666_i)++;
		if ((_78666_i >= _78643_tokens.len())) {
			_1a7dede88_push_err(_self_.ptr(), _78717_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_78717_f.get()._field_token=_78643_tokens[_78666_i];
	};
	if ((_78717_f.get()._field_token.get()._field_id == static_cast<jule::U64>(35LLU))) {
		_78717_f.get()._field_unsafety=true;
		(_78666_i)++;
		if ((_78666_i >= _78643_tokens.len())) {
			_1a7dede88_push_err(_self_.ptr(), _78717_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_78717_f.get()._field_token=_78643_tokens[_78666_i];
	};
	(_78666_i)++;
	if ((_78666_i >= _78643_tokens.len())) {
		_1a7dede88_push_err(_self_.ptr(), _78717_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1a527737a_Token> _82013_tok = _78643_tokens[_78666_i];;
	if ((_82013_tok.get()._field_id == static_cast<jule::U64>(2LLU))) {
		(_78666_i)++;
		if ((_78666_i >= _78643_tokens.len())) {
			_1a7dede88_push_err(_self_.ptr(), _78717_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_78717_f.get()._field_ident=_82013_tok.get()._field_kind;
	} else {
		_78717_f.get()._field_ident=jule::Str("<anonymous>", 11);
	};
	jule::Ptr<_1a527737a_Token> _83213_error_token = _78643_tokens[_78666_i];;
	jule::Slice<jule::Ptr<_1a527737a_Token>> _83317_generics_tokens = _1a7debb45_range(_78666_i,jule::Str("[", 1),jule::Str("]", 1),_78643_tokens);;
	if ((_83317_generics_tokens != nullptr)) {
		_78717_f.get()._field_generics=_1a7e021bc_build_generics(_self_.ptr(), _83317_generics_tokens,_83213_error_token);
	};
	if ((_78643_tokens[_78666_i].get()._field_kind != jule::Str("(", 1))) {
		_1a7dede88_push_err(_self_.ptr(), _78643_tokens[_78666_i],jule::Str("missing function parentheses", 28),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1a527737a_Token>> _84317_params_toks = _1a7debb45_range(_78666_i,jule::Str("(", 1),jule::Str(")", 1),_78643_tokens);;
	if ((_84317_params_toks.len() > 0LL)) {
		_78717_f.get()._field_params=_1a7e039b5_build_params(_self_, _84317_params_toks,_78674_method);
	};
	if ((_78666_i < _78643_tokens.len())) {
		jule::Ptr<_1a527737a_Token> _84917_token = _78643_tokens[_78666_i];;
		if (((_84917_token.get()._field_id == static_cast<jule::U64>(7LLU)) && (_84917_token.get()._field_kind == jule::Str("!", 1)))) {
			_78717_f.get()._field_exceptional=true;
			(_78666_i)++;
		};
	};
	std::tie(_78717_f.get()._field_result,std::ignore) = _1a7e04224_build_ret_type(_self_, _78643_tokens,_78666_i);
	return _78717_f;
}



inline jule::Ptr<_1a6862205_FnDecl> _1a7e04ac6_build_fn(jule::Ptr<_1a7ded52b_Parser> _self_, jule::Slice<jule::Ptr<_1a527737a_Token>>& _86233_tokens, jule::Bool _86251_method, jule::Bool _86265_prototype) {
	jule::I64 _86317_i = 0LL;;
	jule::Ptr<_1a6862205_FnDecl> _86417_f = _1a7e04675_build_fn_prototype(_self_, _86233_tokens,_86317_i,_86251_method);;
	if (_86265_prototype) {
		if ((_86317_i < _86233_tokens.len())) {
			_1a7dede88_push_err(_self_.ptr(), _86233_tokens[(_86317_i + 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
		return _86417_f;
	} else if ((_86417_f == nullptr)) {
		return _86417_f;
	};
	if ((_86317_i >= _86233_tokens.len())) {
		_1a7ded85b_stop(_self_.ptr());
		_1a7dede88_push_err(_self_.ptr(), _86417_f.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1a7dee2a7_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1a527737a_Token>> _88017_block_tokens = _1a7debb45_range(_86317_i,jule::Str("{", 1),jule::Str("}", 1),_86233_tokens);;
	if ((_88017_block_tokens != nullptr)) {
		_86417_f.get()._field_scope=_1a7e00000_build_scope(_self_, _88017_block_tokens,_86233_tokens[(_86317_i - 1LL)]);
		_86417_f.get()._field_scope.get()._field_unsafety=_86417_f.get()._field_unsafety;
		if ((_86317_i < _86233_tokens.len())) {
			_1a7dede88_push_err(_self_.ptr(), _86233_tokens[_86317_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
	} else {
		_1a7ded85b_stop(_self_.ptr());
		_1a7dede88_push_err(_self_.ptr(), _86417_f.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1a7dee2a7_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	return _86417_f;
}



inline jule::Slice<jule::Ptr<_1a527737a_Token>> _1a7e04dd4_get_use_decl_selectors(_1a7ded52b_Parser* _self_, jule::Slice<jule::Ptr<_1a527737a_Token>> _89645_tokens) {
	jule::I64 _89717_i = 0LL;;
	_89645_tokens=_1a7debb45_range(_89717_i,jule::Str("{", 1),jule::Str("}", 1),_89645_tokens);
	jule::Slice<jule::Slice<jule::Ptr<_1a527737a_Token>>> _89918_parts;;
	jule::Slice<_1a43349cc_Log> _89925_errs;;
	std::tie(_89918_parts,_89925_errs) = _1a7dec31b_parts(_89645_tokens,static_cast<jule::U64>(8LLU),true);
	if ((_89925_errs.len() > 0LL)) {
		(*_self_)._field_errors=jule::append((*_self_)._field_errors,_89925_errs);
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1a527737a_Token>> _90517_selectors = jule::Slice<jule::Ptr<_1a527737a_Token>>::alloc(0LL,_89918_parts.len());;
	{
		auto &expr = _89918_parts;
		auto it = expr.begin();
		_iter_begin_1aa5e723e:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1a527737a_Token>> _90621_part = *it;
			{
				if ((_90621_part.len() > 1LL)) {
					_1a7dede88_push_err(&(*_self_), _90621_part[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				jule::Ptr<_1a527737a_Token> _91021_tok = _90621_part[0LL];;
				if (((_91021_tok.get()._field_id != static_cast<jule::U64>(2LLU)) && (_91021_tok.get()._field_id != static_cast<jule::U64>(28LLU)))) {
					_1a7dede88_push_err(&(*_self_), _91021_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					_1a7dee2a7_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
					goto _iter_next_1aa5e723e;
				};
				_90517_selectors = jule::alloc_for_append(_90517_selectors,1);_90517_selectors.__push(_91021_tok);;
			}
			_iter_next_1aa5e723e:;
			++it;
			goto _iter_begin_1aa5e723e;
		}
		_iter_end_1aa5e723e:;
	};
	return _90517_selectors;
}



inline void _1a7e05203_build_cpp_use_decl(_1a7ded52b_Parser* _self_, jule::Ptr<_1a6867d43_UseDecl>& _92142_decl, jule::Slice<jule::Ptr<_1a527737a_Token>>& _92159_tokens) {
	if ((_92159_tokens.len() > 1LL)) {
		_1a7dede88_push_err(&(*_self_), _92159_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a527737a_Token> _92513_token = _92159_tokens[0LL];;
	if (((_92513_token.get()._field_id != static_cast<jule::U64>(6LLU)) || ((_92513_token.get()._field_kind[0LL] != '`') && (_92513_token.get()._field_kind[0LL] != '\"')))) {
		_1a7dede88_push_err(&(*_self_), _92513_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return;;
	};
	_92142_decl.get()._field_cpp_linked=true;
	_92142_decl.get()._field_link_path=_92513_token.get()._field_kind.slice(1LL,(_92513_token.get()._field_kind.len() - 1LL));
}



inline void _1a7e05522_build_std_use_decl(_1a7ded52b_Parser* _self_, jule::Ptr<_1a6867d43_UseDecl>& _93442_decl, jule::Slice<jule::Ptr<_1a527737a_Token>> _93462_tokens) {
	_93442_decl.get()._field_std=true;
	jule::Ptr<_1a527737a_Token> _93717_token = _93462_tokens[0LL];;
	if ((_93462_tokens.len() < 3LL)) {
		_1a7dede88_push_err(&(*_self_), _93717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	_93462_tokens=_93462_tokens.slice(2LL);
	_93717_token=_93462_tokens[(_93462_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _93717_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1aa602689:;
			{
				_1a7dede88_push_err(&(*_self_), _93717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1aa602744:;
			{
				if ((_93717_token.get()._field_kind != jule::Str("}", 1))) {
					_1a7dede88_push_err(&(*_self_), _93717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				jule::Slice<jule::Ptr<_1a527737a_Token>> _95421_selectors = nullptr;;
				std::tie(_93462_tokens,_95421_selectors) = _1a7debddc_range_last(_93462_tokens);
				_93442_decl.get()._field_selected=_1a7e04dd4_get_use_decl_selectors(&(*_self_), _95421_selectors);
				if ((_93462_tokens.len() == 0LL)) {
					_1a7dede88_push_err(&(*_self_), _93717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_93717_token=_93462_tokens[(_93462_tokens.len() - 1LL)];
				if ((_93717_token.get()._field_id != static_cast<jule::U64>(23LLU))) {
					_1a7dede88_push_err(&(*_self_), _93717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_93462_tokens=_93462_tokens.slice(0LL,(_93462_tokens.len() - 1LL));
				if ((_93462_tokens.len() == 0LL)) {
					_1a7dede88_push_err(&(*_self_), _93717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1aa6027aa:;
			{
				if ((_93717_token.get()._field_kind != jule::Str("*", 1))) {
					_1a7dede88_push_err(&(*_self_), _93717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_93462_tokens=_93462_tokens.slice(0LL,(_93462_tokens.len() - 1LL));
				if ((_93462_tokens.len() == 0LL)) {
					_1a7dede88_push_err(&(*_self_), _93717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_93717_token=_93462_tokens[(_93462_tokens.len() - 1LL)];
				if ((_93717_token.get()._field_id != static_cast<jule::U64>(23LLU))) {
					_1a7dede88_push_err(&(*_self_), _93717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_93462_tokens=_93462_tokens.slice(0LL,(_93462_tokens.len() - 1LL));
				if ((_93462_tokens.len() == 0LL)) {
					_1a7dede88_push_err(&(*_self_), _93717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_93442_decl.get()._field_full=true;
			}
		}
		_match_end_1aa602634:;
	};
	_93442_decl.get()._field_link_path=(jule::Str("std::", 5) + _1a7ded163_tokstoa(_93462_tokens));
}



inline void _1a7e05841_build_ident_use_decl(_1a7ded52b_Parser* _self_, jule::Ptr<_1a6867d43_UseDecl>& _99644_decl, jule::Slice<jule::Ptr<_1a527737a_Token>> _99664_tokens) {
	_99644_decl.get()._field_std=false;
	jule::Ptr<_1a527737a_Token> _99917_token = _99664_tokens[(_99664_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ _99917_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1aa60c9a2:;
			{
				_1a7dede88_push_err(&(*_self_), _99917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1aa60d7c7:;
			{
				if ((_99917_token.get()._field_kind != jule::Str("}", 1))) {
					_1a7dede88_push_err(&(*_self_), _99917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				jule::Slice<jule::Ptr<_1a527737a_Token>> _101021_selectors = nullptr;;
				std::tie(_99664_tokens,_101021_selectors) = _1a7debddc_range_last(_99664_tokens);
				_99644_decl.get()._field_selected=_1a7e04dd4_get_use_decl_selectors(&(*_self_), _101021_selectors);
				if ((_99664_tokens.len() == 0LL)) {
					_1a7dede88_push_err(&(*_self_), _99917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_99917_token=_99664_tokens[(_99664_tokens.len() - 1LL)];
				if ((_99917_token.get()._field_id != static_cast<jule::U64>(23LLU))) {
					_1a7dede88_push_err(&(*_self_), _99917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_99664_tokens=_99664_tokens.slice(0LL,(_99664_tokens.len() - 1LL));
				if ((_99664_tokens.len() == 0LL)) {
					_1a7dede88_push_err(&(*_self_), _99917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1aa60d83d:;
			{
				if ((_99917_token.get()._field_kind != jule::Str("*", 1))) {
					_1a7dede88_push_err(&(*_self_), _99917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_99664_tokens=_99664_tokens.slice(0LL,(_99664_tokens.len() - 1LL));
				if ((_99664_tokens.len() == 0LL)) {
					_1a7dede88_push_err(&(*_self_), _99917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_99917_token=_99664_tokens[(_99664_tokens.len() - 1LL)];
				if ((_99917_token.get()._field_id != static_cast<jule::U64>(23LLU))) {
					_1a7dede88_push_err(&(*_self_), _99917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_99664_tokens=_99664_tokens.slice(0LL,(_99664_tokens.len() - 1LL));
				if ((_99664_tokens.len() == 0LL)) {
					_1a7dede88_push_err(&(*_self_), _99917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_99644_decl.get()._field_full=true;
			}
		}
		_match_end_1aa60d684:;
	};
	_99644_decl.get()._field_link_path=_1a7ded163_tokstoa(_99664_tokens);
}



inline void _1a7e05b60_parse_use_decl(_1a7ded52b_Parser* _self_, jule::Ptr<_1a6867d43_UseDecl>& _105938_decl, jule::Slice<jule::Ptr<_1a527737a_Token>> _105958_tokens) {
	if (_105938_decl.get()._field_cpp_linked) {
		_1a7e05203_build_cpp_use_decl(&(*_self_), _105938_decl,_105958_tokens);
		return;;
	};
	jule::Ptr<_1a527737a_Token> _106517_token = _105958_tokens[0LL];;
	if ((_106517_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1a7dede88_push_err(&(*_self_), _106517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1a7dee2a7_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;;
	};
	if (((_105958_tokens.len() > 2LL) && (_105958_tokens[1LL].get()._field_id == static_cast<jule::U64>(12LLU)))) {
		_105938_decl.get()._field_alias=_106517_token.get()._field_kind;
		if ((_105958_tokens[2LL].get()._field_id != static_cast<jule::U64>(2LLU))) {
			_1a7dede88_push_err(&(*_self_), _106517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			_1a7dee2a7_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
			return;;
		};
		_105958_tokens=_105958_tokens.slice(2LL);
		_106517_token=_105958_tokens[0LL];
	};
	;
	{
		
		if ((_106517_token.get()._field_kind == jule::Str("std", 3))) {
			_case_begin_1aa61d661:;
			{
				_1a7e05522_build_std_use_decl(&(*_self_), _105938_decl,_105958_tokens);
			}
		}
		else {
			_case_begin_1aa61d2dc:;
			{
				_1a7e05841_build_ident_use_decl(&(*_self_), _105938_decl,_105958_tokens);
			}
		}
		_match_end_1aa61d265:;
	};
}



inline jule::Ptr<_1a6867d43_UseDecl> _1a7e06017_build_use_decl(_1a7ded52b_Parser* _self_, jule::Slice<jule::Ptr<_1a527737a_Token>> _109337_tokens, jule::Bool _109355_cpp_linked) {
	jule::Ptr<_1a6867d43_UseDecl> _109417_decl = jule::new_ptr<_1a6867d43_UseDecl>(_1a6867d43_UseDecl{._field_token=_109337_tokens[0LL], ._field_cpp_linked=_109355_cpp_linked, });;
	if ((_109337_tokens.len() < 2LL)) {
		_1a7dede88_push_err(&(*_self_), _109417_decl.get()._field_token,jule::Str("missing path of use statement", 29),jule::Slice<jule::Any>());
		return nullptr;
	};
	_109337_tokens=_109337_tokens.slice(1LL);
	_1a7e05b60_parse_use_decl(&(*_self_), _109417_decl,_109337_tokens);
	return _109417_decl;
}



inline jule::Ptr<_1a6855e41_Expr> _1a7e063be_build_enum_item_expr(jule::Ptr<_1a7ded52b_Parser> _self_, jule::Ptr<jule::I64> _110744_i, jule::Slice<jule::Ptr<_1a527737a_Token>>& _110758_tokens) {
	jule::I64 _110817_brace_n = 0LL;;
	jule::I64 _110913_expr_start = (*(_110744_i));;
	for (; ((*(_110744_i)) < _110758_tokens.len()); ((*(_110744_i)))++) {
		{
			jule::Ptr<_1a527737a_Token> _111117_t = _110758_tokens[(*(_110744_i))];;
			if ((_111117_t.get()._field_id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _111117_t.get()._field_kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_1aa624942:;
						{
							(_110817_brace_n)++;
							goto _iter_next_1aa623413;
						}
					}
					else {
						_case_begin_1aa624634:;
						{
							(_110817_brace_n)--;
						}
					}
					_match_end_1aa624579:;
				};
			};
			if ((_110817_brace_n > 0LL)) {
				goto _iter_next_1aa623413;
			};
			if (((_111117_t.get()._field_id == static_cast<jule::U64>(8LLU)) || (((*(_110744_i)) + 1LL) >= _110758_tokens.len()))) {
				jule::Slice<jule::Ptr<_1a527737a_Token>> _112925_expr_tokens = nullptr;;
				if ((_111117_t.get()._field_id == static_cast<jule::U64>(8LLU))) {
					_112925_expr_tokens=_110758_tokens.slice(_110913_expr_start,(*(_110744_i)));
				} else {
					_112925_expr_tokens=_110758_tokens.slice(_110913_expr_start);
				};
				return _1a7dee5b5_build_expr(_self_, _112925_expr_tokens);
			};
		}
	_iter_next_1aa623413:;
	}
	_iter_end_1aa623413:;;
	return nullptr;
}



inline jule::Slice<jule::Ptr<_1a68682b6_EnumItemDecl>> _1a7e066cc_build_enum_items(jule::Ptr<_1a7ded52b_Parser> _self_, jule::Slice<jule::Ptr<_1a527737a_Token>>& _114141_tokens) {
	jule::Slice<jule::Ptr<_1a68682b6_EnumItemDecl>> _114217_items = jule::Slice<jule::Ptr<_1a68682b6_EnumItemDecl>>::alloc(0LL,1LL);;
	jule::Ptr<jule::I64> _114317_i = jule::new_ptr<jule::I64>(0LL);;
	for (; ((*(_114317_i)) < _114141_tokens.len()); ((*(_114317_i)))++) {
		{
			jule::Ptr<_1a527737a_Token> _114521_t = _114141_tokens[(*(_114317_i))];;
			jule::Ptr<_1a68682b6_EnumItemDecl> _114621_item = jule::new_ptr<_1a68682b6_EnumItemDecl>(_1a68682b6_EnumItemDecl{});;
			_114621_item.get()._field_token=_114521_t;
			if ((_114621_item.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
				_1a7dede88_push_err(_self_.ptr(), _114621_item.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				_1a7dee2a7_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
			};
			_114621_item.get()._field_ident=_114621_item.get()._field_token.get()._field_kind;
			if (((((*(_114317_i)) + 1LL) >= _114141_tokens.len()) || (_114141_tokens[((*(_114317_i)) + 1LL)].get()._field_id == static_cast<jule::U64>(8LLU)))) {
				if ((((*(_114317_i)) + 1LL) < _114141_tokens.len())) {
					((*(_114317_i)))++;
				};
				_114217_items = jule::alloc_for_append(_114217_items,1);_114217_items.__push(_114621_item);;
				goto _iter_next_1aa628a34;
			};
			((*(_114317_i)))++;
			_114521_t=_114141_tokens[(*(_114317_i))];
			((*(_114317_i)))++;
			if (((_114521_t.get()._field_id != static_cast<jule::U64>(7LLU)) || (_114521_t.get()._field_kind != jule::Str("=", 1)))) {
				_1a7dede88_push_err(_self_.ptr(), _114521_t,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				_1a7dee2a7_push_suggestion(_self_.ptr(), jule::Str("expected equals \"=\" for assignment", 34),jule::Slice<jule::Any>());
				goto _iter_next_1aa628a34;
			};
			if ((((*(_114317_i)) >= _114141_tokens.len()) || (_114141_tokens[(*(_114317_i))].get()._field_id == static_cast<jule::U64>(8LLU)))) {
				_1a7dede88_push_err(_self_.ptr(), _114521_t,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
				goto _iter_next_1aa628a34;
			};
			_114621_item.get()._field_expr=_1a7e063be_build_enum_item_expr(_self_, _114317_i,_114141_tokens);
			_114217_items = jule::alloc_for_append(_114217_items,1);_114217_items.__push(_114621_item);;
		}
	_iter_next_1aa628a34:;
	}
	_iter_end_1aa628a34:;;
	return _114217_items;
}



inline jule::Ptr<_1a6868e10_EnumDecl> _1a7e069da_build_enum_decl(jule::Ptr<_1a7ded52b_Parser> _self_, jule::Slice<jule::Ptr<_1a527737a_Token>>& _117840_tokens) {
	if (((_117840_tokens.len() < 2LL) || (_117840_tokens.len() < 3LL))) {
		_1a7dede88_push_err(_self_.ptr(), _117840_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1a6868e10_EnumDecl> _118317_e = jule::new_ptr<_1a6868e10_EnumDecl>(_1a6868e10_EnumDecl{._field_token=_117840_tokens[1LL], });;
	if ((_118317_e.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1a7dede88_push_err(_self_.ptr(), _118317_e.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1a7dee2a7_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_118317_e.get()._field_ident=_118317_e.get()._field_token.get()._field_kind;
	jule::I64 _119117_i = 2LL;;
	if ((_117840_tokens[_119117_i].get()._field_id == static_cast<jule::U64>(11LLU))) {
		(_119117_i)++;
		if ((_119117_i >= _117840_tokens.len())) {
			_1a7dede88_push_err(_self_.ptr(), _117840_tokens[(_119117_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return _118317_e;
		};
		std::tie(_118317_e.get()._field_kind,std::ignore) = _1a7e008a2_build_type(_self_, _117840_tokens,(&(_119117_i)),true);
		if ((_119117_i >= _117840_tokens.len())) {
			_1a7ded85b_stop(_self_.ptr());
			_1a7dede88_push_err(_self_.ptr(), _118317_e.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
			_1a7dee2a7_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
			return _118317_e;
		};
	} else {
		_118317_e.get()._field_kind=nullptr;
	};
	jule::Slice<jule::Ptr<_1a527737a_Token>> _120817_item_tokens = _1a7debb45_range(_119117_i,jule::Str("{", 1),jule::Str("}", 1),_117840_tokens);;
	if ((_120817_item_tokens == nullptr)) {
		_1a7ded85b_stop(_self_.ptr());
		_1a7dede88_push_err(_self_.ptr(), _118317_e.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1a7dee2a7_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _118317_e;
	} else if ((_119117_i < _117840_tokens.len())) {
		_1a7dede88_push_err(_self_.ptr(), _117840_tokens[_119117_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_118317_e.get()._field_end=_117840_tokens[(_119117_i - 1LL)];
	_118317_e.get()._field_items=_1a7e066cc_build_enum_items(_self_, _120817_item_tokens);
	return _118317_e;
}



inline jule::Ptr<_1a6869938_FieldDecl> _1a7e06ce8_build_field(jule::Ptr<_1a7ded52b_Parser> _self_, jule::Slice<jule::Ptr<_1a527737a_Token>> _122235_tokens) {
	jule::Ptr<_1a6869938_FieldDecl> _122317_f = jule::new_ptr<_1a6869938_FieldDecl>(_1a6869938_FieldDecl{});;
	_122317_f.get()._field_public=(_122235_tokens[0LL].get()._field_id == static_cast<jule::U64>(21LLU));
	if (_122317_f.get()._field_public) {
		if ((_122235_tokens.len() == 1LL)) {
			_1a7dede88_push_err(_self_.ptr(), _122235_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_122235_tokens=_122235_tokens.slice(1LL);
	};
	_122317_f.get()._field_mutable=(_122235_tokens[0LL].get()._field_id == static_cast<jule::U64>(36LLU));
	if (_122317_f.get()._field_mutable) {
		if ((_122235_tokens.len() == 1LL)) {
			_1a7dede88_push_err(_self_.ptr(), _122235_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_122235_tokens=_122235_tokens.slice(1LL);
	};
	_122317_f.get()._field_token=_122235_tokens[0LL];
	if ((_122317_f.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1a7dede88_push_err(_self_.ptr(), _122317_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1a7dee2a7_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	};
	_122317_f.get()._field_ident=_122317_f.get()._field_token.get()._field_kind;
	if ((_122235_tokens.len() == 1LL)) {
		_1a7dede88_push_err(_self_.ptr(), _122235_tokens[0LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return nullptr;
	} else if ((_122235_tokens[1LL].get()._field_id != static_cast<jule::U64>(11LLU))) {
		_1a7dede88_push_err(_self_.ptr(), _122235_tokens[1LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return nullptr;
	};
	_122235_tokens=_122235_tokens.slice(2LL);
	jule::I64 _126017_i = 0LL;;
	std::tie(_122317_f.get()._field_kind,std::ignore) = _1a7e008a2_build_type(_self_, _122235_tokens,(&(_126017_i)),true);
	if ((_126017_i < _122235_tokens.len())) {
		jule::Ptr<_1a527737a_Token> _126317_token = _122235_tokens[_126017_i];;
		if (((_126317_token.get()._field_id != static_cast<jule::U64>(7LLU)) || (_126317_token.get()._field_kind != jule::Str("=", 1)))) {
			_1a7dede88_push_err(_self_.ptr(), _122235_tokens[_126017_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		(_126017_i)++;
		if ((_126017_i >= _122235_tokens.len())) {
			_1a7dede88_push_err(_self_.ptr(), _126317_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return nullptr;
		};
		_122235_tokens=_122235_tokens.slice(_126017_i);
		_122317_f.get()._field_default=_1a7dee5b5_build_expr(_self_, _122235_tokens);
	};
	return _122317_f;
}



inline jule::Slice<jule::Ptr<_1a6869938_FieldDecl>> _1a7e07128_build_struct_decl_fields(jule::Ptr<_1a7ded52b_Parser> _self_, jule::Slice<jule::Ptr<_1a527737a_Token>> _128048_tokens) {
	jule::Slice<jule::Ptr<_1a6869938_FieldDecl>> _128117_fields = nullptr;;
	jule::Slice<jule::Ptr<_1a7dd1575_Stmt>> _128217_stmts = _1a7dd191b_split_stmts(_128048_tokens);;
	{
		auto &expr = _128217_stmts;
		auto it = expr.begin();
		_iter_begin_1aa6492e6:;
		if (it != expr.end()) {
			jule::Ptr<_1a7dd1575_Stmt> _128321_stmt = *it;
			{
				_128048_tokens=_128321_stmt.get()._field_tokens;
				jule::Ptr<_1a6869938_FieldDecl> _128521_f = _1a7e06ce8_build_field(_self_, _128048_tokens);;
				_128117_fields = jule::alloc_for_append(_128117_fields,1);_128117_fields.__push(_128521_f);;
			}
			_iter_next_1aa6492e6:;
			++it;
			goto _iter_begin_1aa6492e6;
		}
		_iter_end_1aa6492e6:;
	};
	return _128117_fields;
}



inline jule::Ptr<_1a686a296_StructDecl> _1a7e07447_build_struct_decl(jule::Ptr<_1a7ded52b_Parser> _self_, jule::Slice<jule::Ptr<_1a527737a_Token>>& _129142_tokens) {
	if ((_129142_tokens.len() < 3LL)) {
		_1a7dede88_push_err(_self_.ptr(), _129142_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::I64 _129717_i = 1LL;;
	jule::Ptr<_1a686a296_StructDecl> _129817_s = jule::new_ptr<_1a686a296_StructDecl>(_1a686a296_StructDecl{._field_token=_129142_tokens[_129717_i], });;
	if ((_129817_s.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1a7dede88_push_err(_self_.ptr(), _129817_s.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1a7dee2a7_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	(_129717_i)++;
	if ((_129717_i >= _129142_tokens.len())) {
		_1a7dede88_push_err(_self_.ptr(), _129142_tokens[_129717_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return _129817_s;
	};
	_129817_s.get()._field_ident=_129817_s.get()._field_token.get()._field_kind;
	jule::Ptr<_1a527737a_Token> _131213_error_token = _129142_tokens[_129717_i];;
	jule::Slice<jule::Ptr<_1a527737a_Token>> _131317_generics_tokens = _1a7debb45_range(_129717_i,jule::Str("[", 1),jule::Str("]", 1),_129142_tokens);;
	if ((_131317_generics_tokens != nullptr)) {
		_129817_s.get()._field_generics=_1a7e021bc_build_generics(_self_.ptr(), _131317_generics_tokens,_131213_error_token);
	};
	if ((_129717_i >= _129142_tokens.len())) {
		_1a7dede88_push_err(_self_.ptr(), _129142_tokens[(_129717_i - 1LL)],jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1a7dee2a7_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _129817_s;
	};
	jule::Slice<jule::Ptr<_1a527737a_Token>> _132317_body_tokens = _1a7debb45_range(_129717_i,jule::Str("{", 1),jule::Str("}", 1),_129142_tokens);;
	if ((_132317_body_tokens == nullptr)) {
		_1a7ded85b_stop(_self_.ptr());
		_1a7dede88_push_err(_self_.ptr(), _129817_s.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1a7dee2a7_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _129817_s;
	};
	if ((_129717_i < _129142_tokens.len())) {
		_1a7dede88_push_err(_self_.ptr(), _129142_tokens[_129717_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_129817_s.get()._field_fields=_1a7e07128_build_struct_decl_fields(_self_, _132317_body_tokens);
	_129817_s.get()._field_end=_129142_tokens[(_129717_i - 1LL)];
	return _129817_s;
}



inline void _1a7e076bc_check_method_receiver(_1a7ded52b_Parser* _self_, jule::Ptr<_1a6862205_FnDecl>& _133841_f) {
	if (_133841_f.get()._field_statically) {
		if (((_133841_f.get()._field_params.len() > 0LL) && _1a6861248_is_self(_133841_f.get()._field_params[0LL].ptr()))) {
			_1a7dede88_push_err(&(*_self_), _133841_f.get()._field_token,jule::Str("static functions cannot have receiver parameter", 47),jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_133841_f.get()._field_params.len() == 0LL)) {
		_1a7dede88_push_err(&(*_self_), _133841_f.get()._field_token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a6860dd5_ParamDecl> _135113_param = _133841_f.get()._field_params[0LL];;
	if ((!(_1a6861248_is_self(_135113_param.ptr())))) {
		_1a7dede88_push_err(&(*_self_), _133841_f.get()._field_token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>());
		return;;
	};
}



inline jule::Slice<jule::Ptr<_1a6862205_FnDecl>> _1a7e079ca_build_trait_methods(jule::Ptr<_1a7ded52b_Parser> _self_, jule::Slice<jule::Ptr<_1a527737a_Token>> _135843_tokens) {
	jule::Slice<jule::Ptr<_1a6862205_FnDecl>> _135917_methods = nullptr;;
	jule::Slice<jule::Ptr<_1a7dd1575_Stmt>> _136017_stmts = _1a7dd191b_split_stmts(_135843_tokens);;
	{
		auto &expr = _136017_stmts;
		auto it = expr.begin();
		_iter_begin_1aa65aadd:;
		if (it != expr.end()) {
			jule::Ptr<_1a7dd1575_Stmt> _136121_stmt = *it;
			{
				_135843_tokens=_136121_stmt.get()._field_tokens;
				if ((_135843_tokens.len() == 0LL)) {
					goto _iter_next_1aa65aadd;
				};
				jule::Bool _136721_is_pub = false;;
				if ((_135843_tokens[0LL].get()._field_id == static_cast<jule::U64>(21LLU))) {
					_136721_is_pub=true;
					if ((_135843_tokens.len() == 1LL)) {
						_1a7dede88_push_err(_self_.ptr(), _135843_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						goto _iter_next_1aa65aadd;
					};
					_135843_tokens=_135843_tokens.slice(1LL);
				};
				jule::Ptr<_1a6862205_FnDecl> _137721_f = _1a7e04ac6_build_fn(_self_, _135843_tokens,true,true);;
				if ((_137721_f != nullptr)) {
					if (_1a6862557_is_anon(_137721_f.ptr())) {
						_1a7dede88_push_err(_self_.ptr(), _137721_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					};
					_1a7e076bc_check_method_receiver(_self_.ptr(), _137721_f);
					if ((_137721_f.get()._field_generics.len() > 0LL)) {
						_1a7dede88_push_err(_self_.ptr(), _137721_f.get()._field_token,jule::Str("trait methods cannot have generics", 34),jule::Slice<jule::Any>());
					};
					_137721_f.get()._field_public=_136721_is_pub;
					_135917_methods = jule::alloc_for_append(_135917_methods,1);_135917_methods.__push(_137721_f);;
				};
			}
			_iter_next_1aa65aadd:;
			++it;
			goto _iter_begin_1aa65aadd;
		}
		_iter_end_1aa65aadd:;
	};
	return _135917_methods;
}



inline jule::Ptr<_1a686a8a1_TraitDecl> _1a7e07cd8_build_trait_decl(jule::Ptr<_1a7ded52b_Parser> _self_, jule::Slice<jule::Ptr<_1a527737a_Token>>& _139341_tokens) {
	if ((_139341_tokens.len() < 3LL)) {
		_1a7dede88_push_err(_self_.ptr(), _139341_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1a686a8a1_TraitDecl> _139817_t = jule::new_ptr<_1a686a8a1_TraitDecl>(_1a686a8a1_TraitDecl{._field_token=_139341_tokens[1LL], });;
	if ((_139817_t.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1a7dede88_push_err(_self_.ptr(), _139817_t.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1a7dee2a7_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_139817_t.get()._field_ident=_139817_t.get()._field_token.get()._field_kind;
	jule::I64 _140617_i = 2LL;;
	jule::Slice<jule::Ptr<_1a527737a_Token>> _140717_body_tokens = _1a7debb45_range(_140617_i,jule::Str("{", 1),jule::Str("}", 1),_139341_tokens);;
	if ((_140717_body_tokens == nullptr)) {
		_1a7ded85b_stop(_self_.ptr());
		_1a7dede88_push_err(_self_.ptr(), _139817_t.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1a7dee2a7_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_140617_i < _139341_tokens.len())) {
		_1a7dede88_push_err(_self_.ptr(), _139341_tokens[_140617_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_139817_t.get()._field_methods=_1a7e079ca_build_trait_methods(_self_, _140717_body_tokens);
	_139817_t.get()._field_end=_139341_tokens[(_140617_i - 1LL)];
	return _139817_t;
}



inline jule::Ptr<_1a6862205_FnDecl> _1a7e080e6_build_cpp_link_fn(jule::Ptr<_1a7ded52b_Parser> _self_, jule::Slice<jule::Ptr<_1a527737a_Token>> _142241_tokens) {
	_142241_tokens=_142241_tokens.slice(1LL);
	jule::Ptr<_1a6862205_FnDecl> _142417_f = _1a7e04ac6_build_fn(_self_, _142241_tokens,false,true);;
	if ((_142417_f != nullptr)) {
		if (_1a6862557_is_anon(_142417_f.ptr())) {
			_1a7dede88_push_err(_self_.ptr(), _142417_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
		_142417_f.get()._field_cpp_linked=true;
	};
	return _142417_f;
}



inline jule::Ptr<_1a68631d4_VarDecl> _1a7e08404_build_cpp_link_var(jule::Ptr<_1a7ded52b_Parser> _self_, jule::Slice<jule::Ptr<_1a527737a_Token>> _143442_tokens) {
	_143442_tokens=_143442_tokens.slice(1LL);
	jule::Ptr<_1a68631d4_VarDecl> _143617_v = _1a7e01a07_build_var(_self_, _143442_tokens);;
	if ((_143617_v != nullptr)) {
		_143617_v.get()._field_cpp_linked=true;
		if ((_143617_v.get()._field_expr != nullptr)) {
			_1a7dede88_push_err(_self_.ptr(), _143617_v.get()._field_token,jule::Str("cpp linked variables cannot have expression", 43),jule::Slice<jule::Any>());
		};
	};
	return _143617_v;
}



inline jule::Ptr<_1a686a296_StructDecl> _1a7e08712_build_cpp_link_struct(jule::Ptr<_1a7ded52b_Parser> _self_, jule::Slice<jule::Ptr<_1a527737a_Token>> _144645_tokens) {
	_144645_tokens=_144645_tokens.slice(1LL);
	jule::Ptr<_1a686a296_StructDecl> _144817_s = _1a7e07447_build_struct_decl(_self_, _144645_tokens);;
	if ((_144817_s != nullptr)) {
		_144817_s.get()._field_cpp_linked=true;
	};
	return _144817_s;
}



inline jule::Ptr<_1a6866957_TypeAliasDecl> _1a7e08a42_build_cpp_link_type_alias(jule::Ptr<_1a7ded52b_Parser> _self_, jule::Slice<jule::Ptr<_1a527737a_Token>> _145549_tokens) {
	_145549_tokens=_145549_tokens.slice(1LL);
	jule::Ptr<_1a6866957_TypeAliasDecl> _145717_t = _1a7e00bb0_build_type_alias_decl(_self_, _145549_tokens);;
	if ((_145717_t != nullptr)) {
		_145717_t.get()._field_cpp_linked=true;
	};
	return _145717_t;
}



inline jule::Ptr<_1a6867d43_UseDecl> _1a7e08d61_build_cpp_link_use(jule::Ptr<_1a7ded52b_Parser> _self_, jule::Slice<jule::Ptr<_1a527737a_Token>> _146442_tokens) {
	if ((_146442_tokens.len() == 1LL)) {
		_1a7dede88_push_err(_self_.ptr(), _146442_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_146442_tokens=_146442_tokens.slice(1LL);
	;
	return _1a7e06017_build_use_decl(_self_.ptr(), _146442_tokens,true);
}



inline jule::Any _1a7e0916e_build_cpp_link(jule::Ptr<_1a7ded52b_Parser> _self_, jule::Slice<jule::Ptr<_1a527737a_Token>>& _147539_tokens) {
	jule::Ptr<_1a527737a_Token> _147617_token = _147539_tokens[0LL];;
	if ((_147539_tokens.len() == 1LL)) {
		_1a7dede88_push_err(_self_.ptr(), _147617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_147617_token=_147539_tokens[1LL];
	{
		auto &_match_expr{ _147617_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1aa675a92:;
			{
				return jule::Any(_1a7e08d61_build_cpp_link_use(_self_, _147539_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_1aa675b08:;
			{
				return jule::Any(_1a7e080e6_build_cpp_link_fn(_self_, _147539_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1aa675b6e:;
			{
				return jule::Any(_1a7e08404_build_cpp_link_var(_self_, _147539_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(25LLU)) {
			_case_begin_1aa675bd5:;
			{
				return jule::Any(_1a7e08712_build_cpp_link_struct(_self_, _147539_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1aa6764aa:;
			{
				return jule::Any(_1a7e08a42_build_cpp_link_type_alias(_self_, _147539_tokens));
			}
		}
		else {
			_case_begin_1aa675553:;
			{
				_1a7dede88_push_err(_self_.ptr(), _147617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1aa675982:;
	};
	return nullptr;
}



inline jule::Ptr<_1a6862205_FnDecl> _1a7e0947c_get_method(jule::Ptr<_1a7ded52b_Parser> _self_, jule::Slice<jule::Ptr<_1a527737a_Token>>& _150135_tokens) {
	jule::I64 _150217_i = 0LL;;
	jule::Ptr<_1a527737a_Token> _150317_token = _150135_tokens[_150217_i];;
	if ((_150317_token.get()._field_id == static_cast<jule::U64>(38LLU))) {
		if (((_150217_i + 1LL) >= _150135_tokens.len())) {
			_1a7dede88_push_err(_self_.ptr(), _150317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		(_150217_i)++;
		_150317_token=_150135_tokens[_150217_i];
	};
	if ((_150317_token.get()._field_id == static_cast<jule::U64>(35LLU))) {
		if (((_150217_i + 1LL) >= _150135_tokens.len())) {
			_1a7dede88_push_err(_self_.ptr(), _150317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		(_150217_i)++;
		_150317_token=_150135_tokens[_150217_i];
	};
	if ((_150317_token.get()._field_id != static_cast<jule::U64>(33LLU))) {
		_1a7dede88_push_err(_self_.ptr(), _150317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1a6862205_FnDecl> _152717_f = _1a7e04ac6_build_fn(_self_, _150135_tokens,true,false);;
	if (((_152717_f != nullptr) && _1a6862557_is_anon(_152717_f.ptr()))) {
		_1a7dede88_push_err(_self_.ptr(), _152717_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	return _152717_f;
}



inline void _1a7e0979b_parse_impl_body(jule::Ptr<_1a7ded52b_Parser> _self_, jule::Ptr<_1a686aeab_Impl>& _153440_ipl, jule::Slice<jule::Ptr<_1a527737a_Token>>& _153457_tokens) {
	jule::Slice<jule::Ptr<_1a7dd1575_Stmt>> _153517_stmts = _1a7dd191b_split_stmts(_153457_tokens);;
	{
		auto &expr = _153517_stmts;
		auto it = expr.begin();
		_iter_begin_1aa680b57:;
		if (it != expr.end()) {
			jule::Ptr<_1a7dd1575_Stmt> _153621_stmt = *it;
			{
				_153457_tokens=_153621_stmt.get()._field_tokens;
				jule::Ptr<_1a527737a_Token> _153821_token = _153457_tokens[0LL];;
				jule::Bool _153921_is_pub = false;;
				{
					auto &_match_expr{ _153821_token.get()._field_id };
					
					if (_match_expr == static_cast<jule::U64>(39LLU)) {
						_case_begin_1aa6821b9:;
						{
							_1a7deeb48_push_directive(_self_.ptr(), _1a7dee8c3_build_directive(_self_.ptr(), _153457_tokens));
							goto _iter_next_1aa680b57;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(21LLU)) {
						_case_begin_1aa682274:;
						{
							_153921_is_pub=true;
							if ((_153457_tokens.len() == 1LL)) {
								_1a7dede88_push_err(_self_.ptr(), _153457_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
								goto _iter_next_1aa680b57;
							};
							_153457_tokens=_153457_tokens.slice(1LL);
							if ((_153457_tokens.len() > 0LL)) {
								_153821_token=_153457_tokens[0LL];
							};
						}
					}
					_match_end_1aa682164:;
				};
				{
					auto &_match_expr{ _153821_token.get()._field_id };
					
					if (_match_expr == static_cast<jule::U64>(9LLU)) {
						_case_begin_1aa684d48:;
						{
							jule::Ptr<_1a68631d4_VarDecl> _155825_v = _1a7e01a07_build_var(_self_, _153457_tokens);;
							if ((_155825_v != nullptr)) {
								_155825_v.get()._field_public=_153921_is_pub;
								_153440_ipl.get()._field_statics = jule::alloc_for_append(_153440_ipl.get()._field_statics,1);_153440_ipl.get()._field_statics.__push(_155825_v);;
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(38LLU) || _match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(35LLU)) {
						_case_begin_1aa683088:;
						{
							jule::Ptr<_1a6862205_FnDecl> _156625_f = _1a7e0947c_get_method(_self_, _153457_tokens);;
							if ((_156625_f != nullptr)) {
								_1a7e076bc_check_method_receiver(_self_.ptr(), _156625_f);
								_1a7e0a45b_apply_fn_meta(_self_.ptr(), _156625_f,_153921_is_pub);
								_153440_ipl.get()._field_methods = jule::alloc_for_append(_153440_ipl.get()._field_methods,1);_153440_ipl.get()._field_methods.__push(_156625_f);;
							};
						}
					}
					else {
						_case_begin_1aa6822da:;
						{
							_1a7dede88_push_err(_self_.ptr(), _153821_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							goto _iter_next_1aa680b57;
						}
					}
					_match_end_1aa6844a7:;
				};
			}
			_iter_next_1aa680b57:;
			++it;
			goto _iter_begin_1aa680b57;
		}
		_iter_end_1aa680b57:;
	};
}



inline jule::Ptr<_1a686aeab_Impl> _1a7e09aa9_build_impl(jule::Ptr<_1a7ded52b_Parser> _self_, jule::Slice<jule::Ptr<_1a527737a_Token>> _157934_tokens) {
	jule::Ptr<_1a527737a_Token> _158017_token = _157934_tokens[0LL];;
	if ((_157934_tokens.len() < 2LL)) {
		_1a7dede88_push_err(_self_.ptr(), _158017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::I64 _158617_i = 1LL;;
	jule::Ptr<_1a68529cb_TypeDecl> _158818_base;;
	jule::Bool _158828_ok;;
	std::tie(_158818_base,_158828_ok) = _1a7e008a2_build_type(_self_, _157934_tokens,(&(_158617_i)),true);
	if ((!(_158828_ok))) {
		return nullptr;
	};
	if ((_158617_i >= _157934_tokens.len())) {
		_1a7dede88_push_err(_self_.ptr(), _158017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1a686aeab_Impl> _159717_ipl = jule::new_ptr<_1a686aeab_Impl>(_1a686aeab_Impl{._field_base=_158818_base, });;
	_158017_token=_157934_tokens[_158617_i];
	if ((_158017_token.get()._field_id != static_cast<jule::U64>(12LLU))) {
		if (((_158017_token.get()._field_id == static_cast<jule::U64>(3LLU)) && (_158017_token.get()._field_kind == jule::Str("{", 1)))) {
			std::tie(_159717_ipl.get()._field_base,_159717_ipl.get()._field_dest) = std::make_tuple(_159717_ipl.get()._field_dest,_159717_ipl.get()._field_base);
			goto _julec_label_body;
		};
		_1a7ded85b_stop(_self_.ptr());
		_1a7dede88_push_err(_self_.ptr(), _158017_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1a7dee2a7_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	(_158617_i)++;
	if ((_158617_i >= _157934_tokens.len())) {
		_1a7ded85b_stop(_self_.ptr());
		_1a7dede88_push_err(_self_.ptr(), _158017_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1a7dee2a7_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	std::tie(_159717_ipl.get()._field_dest,_158828_ok) = _1a7e008a2_build_type(_self_, _157934_tokens,(&(_158617_i)),true);
	if ((!(_158828_ok))) {
		return nullptr;
	};
	if ((_158617_i >= _157934_tokens.len())) {
		_1a7ded85b_stop(_self_.ptr());
		_1a7dede88_push_err(_self_.ptr(), _158017_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1a7dee2a7_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	_julec_label_body:;
	jule::Slice<jule::Ptr<_1a527737a_Token>> _163717_body_tokens = _1a7debb45_range(_158617_i,jule::Str("{", 1),jule::Str("}", 1),_157934_tokens);;
	if ((_163717_body_tokens == nullptr)) {
		_1a7ded85b_stop(_self_.ptr());
		_1a7dede88_push_err(_self_.ptr(), _158017_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1a7dee2a7_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_158617_i < _157934_tokens.len())) {
		_1a7dede88_push_err(_self_.ptr(), _157934_tokens[_158617_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_159717_ipl.get()._field_end=_157934_tokens[(_158617_i - 1LL)];
	_1a7e0979b_parse_impl_body(_self_, _159717_ipl,_163717_body_tokens);
	return _159717_ipl;
}



inline jule::Any _1a7e09db7_build_node_data(jule::Ptr<_1a7ded52b_Parser> _self_, jule::Slice<jule::Ptr<_1a527737a_Token>>& _165240_tokens) {
	jule::Ptr<_1a527737a_Token> _165317_token = _165240_tokens[0LL];;
	{
		auto &_match_expr{ _165317_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1aa69ce1b:;
			{
				;
				return jule::Any(_1a7e06017_build_use_decl(_self_.ptr(), _165240_tokens,false));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_1aa69d58c:;
			{
				jule::Ptr<_1a6862205_FnDecl> _166021_f = _1a7e04ac6_build_fn(_self_, _165240_tokens,false,false);;
				if ((_166021_f != nullptr)) {
					_166021_f.get()._field_global=true;
					if (_1a6862557_is_anon(_166021_f.ptr())) {
						_1a7dede88_push_err(_self_.ptr(), _166021_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					};
				};
				return jule::Any(_166021_f);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(36LLU) || _match_expr == static_cast<jule::U64>(38LLU)) {
			_case_begin_1aa69d603:;
			{
				return jule::Any(_1a7e01a07_build_var(_self_, _165240_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1aa69d779:;
			{
				return jule::Any(_1a7e00bb0_build_type_alias_decl(_self_, _165240_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(24LLU)) {
			_case_begin_1aa69d7e0:;
			{
				return jule::Any(_1a7e069da_build_enum_decl(_self_, _165240_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(25LLU)) {
			_case_begin_1aa69cb74:;
			{
				return jule::Any(_1a7e07447_build_struct_decl(_self_, _165240_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1aa69cbeb:;
			{
				return jule::Any(_1a7e07cd8_build_trait_decl(_self_, _165240_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1aa69cc73:;
			{
				return jule::Any(_1a7e09aa9_build_impl(_self_, _165240_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1aa69d867:;
			{
				return jule::Any(_1a7e0916e_build_cpp_link(_self_, _165240_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(39LLU)) {
			_case_begin_1aa69d8cd:;
			{
				return jule::Any(_1a7dee8c3_build_directive(_self_.ptr(), _165240_tokens));
			}
		}
		else {
			_case_begin_1aa69c4e2:;
			{
				_1a7dede88_push_err(_self_.ptr(), _165317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1aa69ca64:;
	};
}



inline void _1a7e0a13c_check_directive(_1a7ded52b_Parser* _self_, _1a6821934_Node& _169335_node) {
	if (((*_self_)._field_directives == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _169335_node._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1a6852525_Directive>>()) {
			_case_begin_1aa6a6d04:;
			{
				goto _match_end_1aa6a5a06;
			}
		}
		else {
			_case_begin_1aa6a5a5b:;
			{
				if (((*_self_)._field_directives.len() != 0LL)) {
					_1a7dede88_push_err(&(*_self_), (*_self_)._field_directives[0LL].get()._field_tag,jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75),jule::Slice<jule::Any>());
				};
				(*_self_)._field_directives=nullptr;
			}
		}
		_match_end_1aa6a5a06:;
	};
}



inline void _1a7e0a45b_apply_fn_meta(_1a7ded52b_Parser* _self_, jule::Ptr<_1a6862205_FnDecl>& _171037_f, jule::Bool _171049_is_pub) {
	_171037_f.get()._field_public=_171049_is_pub;
	_171037_f.get()._field_directives=(*_self_)._field_directives;
	(*_self_)._field_directives=nullptr;
}



inline void _1a7e0a77a_apply_meta(_1a7ded52b_Parser* _self_, _1a6821934_Node& _171634_node, jule::Bool _171646_is_pub) {
	{
		auto &_match_expr{ _171634_node._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1a68631d4_VarDecl>>()) {
			_case_begin_1aa6a8de4:;
			{
				jule::Ptr<_1a68631d4_VarDecl> _171921_v = _171634_node._field_data.operator jule::Ptr<_1a68631d4_VarDecl>();;
				if ((_171921_v == nullptr)) {
					return;;
				};
				_171921_v.get()._field_public=_171646_is_pub;
				_171921_v.get()._field_directives=(*_self_)._field_directives;
				(*_self_)._field_directives=nullptr;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6862205_FnDecl>>()) {
			_case_begin_1aa6a8e5a:;
			{
				jule::Ptr<_1a6862205_FnDecl> _172721_f = _171634_node._field_data.operator jule::Ptr<_1a6862205_FnDecl>();;
				if ((_172721_f == nullptr)) {
					return;;
				};
				_1a7e0a45b_apply_fn_meta(&(*_self_), _172721_f,_171646_is_pub);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6866957_TypeAliasDecl>>()) {
			_case_begin_1aa6a8ec1:;
			{
				jule::Ptr<_1a6866957_TypeAliasDecl> _173321_tad = _171634_node._field_data.operator jule::Ptr<_1a6866957_TypeAliasDecl>();;
				if ((_173321_tad == nullptr)) {
					return;;
				};
				_173321_tad.get()._field_public=_171646_is_pub;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6868e10_EnumDecl>>()) {
			_case_begin_1aa6a9037:;
			{
				jule::Ptr<_1a6868e10_EnumDecl> _173921_ed = _171634_node._field_data.operator jule::Ptr<_1a6868e10_EnumDecl>();;
				if ((_173921_ed == nullptr)) {
					return;;
				};
				_173921_ed.get()._field_public=_171646_is_pub;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a686a296_StructDecl>>()) {
			_case_begin_1aa6a9235:;
			{
				jule::Ptr<_1a686a296_StructDecl> _174521_sd = _171634_node._field_data.operator jule::Ptr<_1a686a296_StructDecl>();;
				if ((_174521_sd == nullptr)) {
					return;;
				};
				_174521_sd.get()._field_directives=(*_self_)._field_directives;
				(*_self_)._field_directives=nullptr;
				_174521_sd.get()._field_public=_171646_is_pub;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a686a8a1_TraitDecl>>()) {
			_case_begin_1aa6a929b:;
			{
				jule::Ptr<_1a686a8a1_TraitDecl> _175321_td = _171634_node._field_data.operator jule::Ptr<_1a686a8a1_TraitDecl>();;
				if ((_175321_td == nullptr)) {
					return;;
				};
				_175321_td.get()._field_public=_171646_is_pub;
			}
		}
		else {
			_case_begin_1aa6a8d06:;
			{
				if (_171646_is_pub) {
					_1a7dede88_push_err(&(*_self_), _171634_node._field_token,jule::Str("define is not supports pub modifier", 35),jule::Slice<jule::Any>());
				};
			}
		}
		_match_end_1aa6a8ca1:;
	};
}



inline void _1a7e0aa00_check_use_decl(_1a7ded52b_Parser* _self_, _1a6821934_Node& _176534_node) {
	{
		auto &_match_expr{ _176534_node._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1a6867d43_UseDecl>>()) {
			_case_begin_1aa6b1638:;
			{
				goto _match_end_1aa6b1836;
			}
		}
		else {
			_case_begin_1aa6b188b:;
			{
				return;;
			}
		}
		_match_end_1aa6b1836:;
	};
	if (((*_self_)._field_ast.get()._field_nodes.len() > 0LL)) {
		_1a7dede88_push_err(&(*_self_), _176534_node._field_token,jule::Str("use declarations must declared top of source code", 49),jule::Slice<jule::Any>());
		_1a7dee2a7_push_suggestion(&(*_self_), jule::Str("move this use declaration to top of source file", 47),jule::Slice<jule::Any>());
	};
}



inline std::tuple<jule::Bool,jule::Any> _1a7e0ad30_build_general_scope_node_data(jule::Ptr<_1a7ded52b_Parser> _self_, jule::Slice<jule::Ptr<_1a527737a_Token>> _178053_st) {
	jule::Bool _178069_is_pub = jule::Bool();
	jule::Any _178083_data = jule::Any();
	if ((_178053_st[0LL].get()._field_id == static_cast<jule::U64>(21LLU))) {
		_178069_is_pub=true;
		_178053_st=_178053_st.slice(1LL);
		if ((_178053_st.len() == 0LL)) {
			_1a7dede88_push_err(_self_.ptr(), _178053_st[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return std::make_tuple(_178069_is_pub,_178083_data);
		};
	};
	_178083_data=jule::Any(_1a7e09db7_build_node_data(_self_, _178053_st));
	_178083_data = jule::Any(_178083_data);
	return std::make_tuple(_178069_is_pub,_178083_data);
}



inline _1a6821934_Node _1a7e0b14e_parse_node(jule::Ptr<_1a7ded52b_Parser> _self_, jule::Slice<jule::Ptr<_1a527737a_Token>>& _179535_st) {
	_1a6821934_Node _179617_node = _1a6821934_Node{._field_token=_179535_st[0LL], };;
	jule::Bool _180014_is_pub;;
	jule::Any _180026_data;;
	std::tie(_180014_is_pub,_180026_data) = _1a7e0ad30_build_general_scope_node_data(_self_, _179535_st);
	if ((_180026_data == nullptr)) {
		return _179617_node;
	};
	_179617_node._field_data=jule::Any(_180026_data);
	_1a7e0a77a_apply_meta(_self_.ptr(), _179617_node,_180014_is_pub);
	_1a7e0a13c_check_directive(_self_.ptr(), _179617_node);
	_1a7e0aa00_check_use_decl(_self_.ptr(), _179617_node);
	return _179617_node;
}



inline void _1a7e0b3c4_append_node(jule::Ptr<_1a7ded52b_Parser> _self_, jule::Slice<jule::Ptr<_1a527737a_Token>>& _181336_st) {
	if ((_181336_st.len() == 0LL)) {
		return;;
	};
	_1a6821934_Node _181817_node = _1a7e0b14e_parse_node(_self_, _181336_st);;
	if (((_181817_node._field_data == nullptr) || _1a7dedac0_stopped(_self_.ptr()))) {
		return;;
	};
	{
		
		if (_1a68220b6_is_directive(&_181817_node)) {
			_case_begin_1aa6bb70e:;
			{
				_1a7deeb48_push_directive(_self_.ptr(), _181817_node._field_data.operator jule::Ptr<_1a6852525_Directive>());
			}
		}
		else if (_1a685216d_is_use_decl(&_181817_node)) {
			_case_begin_1aa6bb434:;
			{
				_self_.get()._field_ast.get()._field_use_decls = jule::alloc_for_append(_self_.get()._field_ast.get()._field_use_decls,1);_self_.get()._field_ast.get()._field_use_decls.__push(_181817_node._field_data.operator jule::Ptr<_1a6867d43_UseDecl>());;
			}
		}
		else if ((_1a6821d52_is_decl(&_181817_node) || _1a682232a_is_impl(&_181817_node))) {
			_case_begin_1aa6bb49a:;
			{
				_self_.get()._field_ast.get()._field_nodes = jule::alloc_for_append(_self_.get()._field_ast.get()._field_nodes,1);_self_.get()._field_ast.get()._field_nodes.__push(_181817_node);;
			}
		}
		else {
			_case_begin_1aa6bb3bd:;
			{
				_1a7dede88_push_err(_self_.ptr(), _181817_node._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1aa6bb368:;
	};
}



inline void _1a7e0b836_remove_range(_1a7ded52b_Parser* _self_, jule::I64 _183631_i, jule::Str _183639_kind, jule::Slice<jule::Ptr<_1a527737a_Token>>& _183651_tokens, jule::Slice<jule::I64>& _183674_ranges) {
	jule::Str _183713_close = _1a7dec5d5_get_close_kind_of_brace(_183639_kind);;
	for (; (_183631_i >= 0LL); (_183631_i)--) {
		{
			jule::Ptr<_1a527737a_Token> _183917_tok = _183651_tokens[_183674_ranges[_183631_i]];;
			if ((_183917_tok.get()._field_kind != _183713_close)) {
				goto _iter_next_1aa6c05e2;
			};
			_183674_ranges=jule::append(_183674_ranges.slice(0LL,_183631_i),_183674_ranges.slice((_183631_i + 1LL)));
			goto _iter_end_1aa6c05e2;
		}
	_iter_next_1aa6c05e2:;
	}
	_iter_end_1aa6c05e2:;;
}



inline void _1a7e0bc21_push_wrong_order_close_err(_1a7ded52b_Parser* _self_, jule::Ptr<_1a527737a_Token>& _184846_t, jule::Slice<jule::Ptr<_1a527737a_Token>>& _184858_tokens, jule::Slice<jule::I64>& _184877_ranges) {
	{
		auto &_match_expr{ _184858_tokens[_184877_ranges[(_184877_ranges.len() - 1LL)]].get()._field_kind };
		
		if (_match_expr == jule::Str("(", 1)) {
			_case_begin_1aa6c3370:;
			{
				_1a7dede88_push_err(&(*_self_), _184846_t,jule::Str("was expected parentheses close", 30),jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("{", 1)) {
			_case_begin_1aa6c33d6:;
			{
				_1a7dede88_push_err(&(*_self_), _184846_t,jule::Str("was expected brace close", 24),jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("[", 1)) {
			_case_begin_1aa6c344c:;
			{
				_1a7dede88_push_err(&(*_self_), _184846_t,jule::Str("was expected bracket close", 26),jule::Slice<jule::Any>());
			}
		}
		_match_end_1aa6c32c6:;
	};
}



inline void _1a7e0c194_push_range_close(_1a7ded52b_Parser* _self_, jule::Ptr<_1a527737a_Token> _185935_t, jule::Str _185946_left, jule::Slice<jule::Ptr<_1a527737a_Token>>& _185958_tokens, jule::Slice<jule::I64>& _185981_ranges) {
	jule::I64 _186013_n = _185981_ranges.len();;
	if ((_186013_n == 0LL)) {
		{
			auto &_match_expr{ _185935_t.get()._field_kind };
			
			if (_match_expr == jule::Str("]", 1)) {
				_case_begin_1aa6c69c2:;
				{
					_1a7dede88_push_err(&(*_self_), _185935_t,jule::Str("extra closed brackets", 21),jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str("}", 1)) {
				_case_begin_1aa6c6d02:;
				{
					_1a7dede88_push_err(&(*_self_), _185935_t,jule::Str("extra closed braces", 19),jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str(")", 1)) {
				_case_begin_1aa6c6d68:;
				{
					_1a7dede88_push_err(&(*_self_), _185935_t,jule::Str("extra closed parentheses", 24),jule::Slice<jule::Any>());
				}
			}
			_match_end_1aa6c6bc0:;
		};
		return;;
	} else if ((_185958_tokens[_185981_ranges[(_186013_n - 1LL)]].get()._field_kind != _185946_left)) {
		_1a7e0bc21_push_wrong_order_close_err(&(*_self_), _185935_t,_185958_tokens,_185981_ranges);
	};
	_1a7e0b836_remove_range(&(*_self_), static_cast<jule::I64>((_186013_n - 1LL)),_185935_t.get()._field_kind,_185958_tokens,_185981_ranges);
}



inline void _1a7e0c419_check_ranges(_1a7ded52b_Parser* _self_, jule::Slice<jule::Ptr<_1a527737a_Token>>& _187732_tokens) {
	jule::Slice<jule::I64> _187817_ranges = nullptr;;
	{
		auto &expr = _187732_tokens;
		auto it = expr.begin();
		_iter_begin_1aa6cac07:;
		if (it != expr.end()) {
			jule::I64 _188013_i = it - expr.begin();
			jule::Ptr<_1a527737a_Token> &_188016_token = *it;
			{
				if ((_188016_token.get()._field_id != static_cast<jule::U64>(3LLU))) {
					goto _iter_next_1aa6cac07;
				};
				{
					auto &_match_expr{ _188016_token.get()._field_kind };
					
					if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
						_case_begin_1aa6cb664:;
						{
							_187817_ranges = jule::alloc_for_append(_187817_ranges,1);_187817_ranges.__push(_188013_i);;
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1aa6cb80c:;
						{
							_1a7e0c194_push_range_close(&(*_self_), _188016_token,jule::Str("(", 1),_187732_tokens,_187817_ranges);
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_1aa6cbe06:;
						{
							_1a7e0c194_push_range_close(&(*_self_), _188016_token,jule::Str("{", 1),_187732_tokens,_187817_ranges);
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1aa6cbe6c:;
						{
							_1a7e0c194_push_range_close(&(*_self_), _188016_token,jule::Str("[", 1),_187732_tokens,_187817_ranges);
						}
					}
					_match_end_1aa6cbcb3:;
				};
			}
			_iter_next_1aa6cac07:;
			++it;
			_188013_i++;
			goto _iter_begin_1aa6cac07;
		}
		_iter_end_1aa6cac07:;
	};
	{
		auto &expr = _187817_ranges;
		auto it = expr.begin();
		_iter_begin_1aa6ce3e2:;
		if (it != expr.end()) {
			jule::I64 _189816_i = *it;
			{
				jule::Ptr<_1a527737a_Token> _189917_token = _187732_tokens[_189816_i];;
				{
					auto &_match_expr{ _189917_token.get()._field_kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1aa6ceb84:;
						{
							_1a7dede88_push_err(&(*_self_), _189917_token,jule::Str("parentheses waiting to close", 28),jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("{", 1)) {
						_case_begin_1aa6cebea:;
						{
							_1a7dede88_push_err(&(*_self_), _189917_token,jule::Str("brace waiting to close", 22),jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("[", 1)) {
						_case_begin_1aa6cec61:;
						{
							_1a7dede88_push_err(&(*_self_), _189917_token,jule::Str("bracket are waiting to close", 28),jule::Slice<jule::Any>());
						}
					}
					_match_end_1aa6ceb1d:;
				};
			}
			_iter_next_1aa6ce3e2:;
			++it;
			goto _iter_begin_1aa6ce3e2;
		}
		_iter_end_1aa6ce3e2:;
	};
}



inline void _1a7e0c68e_parse(jule::Ptr<_1a7ded52b_Parser> _self_, jule::Ptr<_1a527c76a_File>& _191130_f) {
	_self_.get()._field_ast=jule::new_ptr<_1a6820cc9_Ast>(_1a6820cc9_Ast{._field_file=_191130_f, });
	_1a7e0c419_check_ranges(_self_.ptr(), _191130_f.get()._field_tokens);
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1a7dd1575_Stmt>> _192117_stmts = _1a7dd191b_split_stmts(_191130_f.get()._field_tokens);;
	jule::I64 _192417_i = 0LL;;
	_julec_label_iter:;
	for (; (_192417_i < _192117_stmts.len()); (_192417_i)++) {
		{
			jule::Ptr<_1a7dd1575_Stmt> _192721_stmt = _192117_stmts[_192417_i];;
			if ((_192721_stmt.get()._field_tokens.len() == 0LL)) {
				return;;
			};
			jule::Any _193225_data;;
			std::tie(std::ignore,_193225_data) = _1a7e0ad30_build_general_scope_node_data(_self_, _192721_stmt.get()._field_tokens);
			if ((_193225_data == nullptr)) {
				goto _iter_end_1aa6d322b;
			};
			if (_1a7dedac0_stopped(_self_.ptr())) {
				return;;
			};
			{
				auto &_match_expr{ _193225_data };
				
				if (_match_expr.type_is<jule::Ptr<_1a6852525_Directive>>()) {
					_case_begin_1aa6d53e8:;
					{
						jule::Ptr<_1a6852525_Directive> _194325_d = _193225_data.operator jule::Ptr<_1a6852525_Directive>();;
						if (((_194325_d != nullptr) && _1a4336825_is_top_directive(_194325_d.get()._field_tag.get()._field_kind))) {
							_self_.get()._field_ast.get()._field_top_directives = jule::alloc_for_append(_self_.get()._field_ast.get()._field_top_directives,1);_self_.get()._field_ast.get()._field_top_directives.__push(_194325_d);;
						} else {
							goto _iter_end_1aa6d322b;
						};
					}
				}
				else {
					_case_begin_1aa6d5261:;
					{
						goto _iter_end_1aa6d322b;
					}
				}
				_match_end_1aa6d50c9:;
			};
		}
	_iter_next_1aa6d322b:;
	}
	_iter_end_1aa6d322b:;;
	_self_.get()._field_errors=nullptr;
	for (; (_192417_i < _192117_stmts.len()); (_192417_i)++) {
		{
			jule::Ptr<_1a7dd1575_Stmt> _195821_stmt = _192117_stmts[_192417_i];;
			_1a7e0b3c4_append_node(_self_, _195821_stmt.get()._field_tokens);
			if (_1a7dedac0_stopped(_self_.ptr())) {
				goto _iter_end_1aa6d48c0;
			};
		}
	_iter_next_1aa6d48c0:;
	}
	_iter_end_1aa6d48c0:;;
	if ((_self_.get()._field_directives.len() != 0LL)) {
		_1a7dede88_push_err(_self_.ptr(), _self_.get()._field_directives[0LL].get()._field_tag,jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75),jule::Slice<jule::Any>());
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a7ded52b_Parser _Src) {
	_Stream << "Parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}



inline void _1a7e0e3e9_push_err(_1a7e0dd22_TypeBuilder* _self_, jule::Ptr<_1a527737a_Token> _7727_token, jule::Str _7742_fmt) {
	if ((*_self_)._field_err) {
		_1a7dede88_push_err((*_self_)._field_p.ptr(), _7727_token,_7742_fmt,jule::Slice<jule::Any>());
	};
}



inline void _1a7e0e718_push_suggestion(_1a7e0dd22_TypeBuilder* _self_, jule::Str _8434_fmt, jule::Slice<jule::Any> _8447_args) {
	if ((*_self_)._field_err) {
		_1a7dee2a7_push_suggestion((*_self_)._field_p.ptr(), _8434_fmt,jule::Any(_8447_args));
	};
}



inline jule::Ptr<_1a68529cb_TypeDecl> _1a7e0e97c_build_prim(_1a7e0dd22_TypeBuilder* _self_) {
	jule::Ptr<_1a68529cb_TypeDecl> _9117_t = _1a7e0d508_build_prim_type((*_self_)._field_tokens[(*((*_self_)._field_i))]);;
	((*((*_self_)._field_i)))++;
	return _9117_t;
}



inline jule::Ptr<_1a68529cb_TypeDecl> _1a7e0ebe1_build_namespace(_1a7e0dd22_TypeBuilder* _self_) {
	jule::Ptr<_1a68529cb_TypeDecl> _9717_t = jule::new_ptr<_1a68529cb_TypeDecl>(_1a68529cb_TypeDecl{._field_token=(*_self_)._field_tokens[(*((*_self_)._field_i))], });;
	jule::Ptr<_1a6853768_NamespaceTypeDecl> _10117_nst = jule::new_ptr<_1a6853768_NamespaceTypeDecl>();;
	jule::I64 _10217_n = 0LL;;
	for (; ((*((*_self_)._field_i)) < (*_self_)._field_tokens.len()); ((*((*_self_)._field_i)))++) {
		{
			jule::Ptr<_1a527737a_Token> _10421_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
			if (((_10217_n & 1LL) == 0LL)) {
				if ((_10421_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
					_1a7e0e3e9_push_err(&(*_self_), _10421_token,jule::Str("invalid syntax", 14));
					_1a7e0e718_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
				};
				_10117_nst.get()._field_idents = jule::alloc_for_append(_10117_nst.get()._field_idents,1);_10117_nst.get()._field_idents.__push(_10421_token);;
			} else if ((_10421_token.get()._field_id != static_cast<jule::U64>(23LLU))) {
				goto _iter_end_1aa7040b5;
			};
			(_10217_n)++;
		}
	_iter_next_1aa7040b5:;
	}
	_iter_end_1aa7040b5:;;
	_10117_nst.get()._field_idents=_10117_nst.get()._field_idents.slice(0LL,(_10117_nst.get()._field_idents.len() - 1LL));
	((*((*_self_)._field_i)))--;
	_10117_nst.get()._field_kind=_1a7e1042d_build_ident(&(*_self_)).get()._field_kind.operator jule::Ptr<_1a685305e_IdentTypeDecl>();
	_9717_t.get()._field_kind=jule::Any(_10117_nst);
	return _9717_t;
}



inline jule::Slice<jule::Ptr<_1a68529cb_TypeDecl>> _1a7e0ee55_build_generics(_1a7e0dd22_TypeBuilder* _self_) {
	if (((*((*_self_)._field_i)) >= (*_self_)._field_tokens.len())) {
		return nullptr;
	};
	jule::Ptr<_1a527737a_Token> _13013_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if (((_13013_token.get()._field_id != static_cast<jule::U64>(3LLU)) || (_13013_token.get()._field_kind != jule::Str("[", 1)))) {
		return nullptr;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1a527737a_Token>>> _13517_parts = _1a7e101b9_ident_generics(&(*_self_));;
	if ((_13517_parts.len() == 0LL)) {
		_1a7e0e3e9_push_err(&(*_self_), _13013_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1a68529cb_TypeDecl>> _14117_types = jule::Slice<jule::Ptr<_1a68529cb_TypeDecl>>::alloc(0LL,_13517_parts.len());;
	{
		auto &expr = _13517_parts;
		auto it = expr.begin();
		_iter_begin_1aa70cde3:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1a527737a_Token>> _14221_part = *it;
			{
				jule::I64 _14321_j = 0LL;;
				jule::Ptr<_1a68529cb_TypeDecl> _14422_t;;
				std::tie(_14422_t,std::ignore) = _1a7e008a2_build_type((*_self_)._field_p, _14221_part,(&(_14321_j)),true);
				if ((_14321_j < _14221_part.len())) {
					_1a7e0e3e9_push_err(&(*_self_), _14221_part[_14321_j],jule::Str("invalid syntax", 14));
				};
				_14117_types = jule::alloc_for_append(_14117_types,1);_14117_types.__push(_14422_t);;
			}
			_iter_next_1aa70cde3:;
			++it;
			goto _iter_begin_1aa70cde3;
		}
		_iter_end_1aa70cde3:;
	};
	return _14117_types;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1a527737a_Token>>> _1a7e101b9_ident_generics(_1a7e0dd22_TypeBuilder* _self_) {
	jule::I64 _15413_first = (*((*_self_)._field_i));;
	jule::I64 _15517_range_n = 0LL;;
	for (; ((*((*_self_)._field_i)) < (*_self_)._field_tokens.len()); ((*((*_self_)._field_i)))++) {
		{
			jule::Ptr<_1a527737a_Token> _15717_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
			if ((_15717_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _15717_token.get()._field_kind };
					
					if (_match_expr == jule::Str("[", 1)) {
						_case_begin_1aa7118a8:;
						{
							(_15517_range_n)++;
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1aa711bd8:;
						{
							(_15517_range_n)--;
						}
					}
					_match_end_1aa711aa6:;
				};
			};
			if ((_15517_range_n == 0LL)) {
				((*((*_self_)._field_i)))++;
				goto _iter_end_1aa710434;
			};
		}
	_iter_next_1aa710434:;
	}
	_iter_end_1aa710434:;;
	jule::Slice<jule::Ptr<_1a527737a_Token>> _17117_tokens = (*_self_)._field_tokens.slice((_15413_first + 1LL),((*((*_self_)._field_i)) - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1a527737a_Token>>> _17218_parts;;
	jule::Slice<_1a43349cc_Log> _17225_errors;;
	std::tie(_17218_parts,_17225_errors) = _1a7dec31b_parts(_17117_tokens,static_cast<jule::U64>(8LLU),true);
	if ((*_self_)._field_err) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_17225_errors);
	};
	return _17218_parts;
}



inline jule::Ptr<_1a68529cb_TypeDecl> _1a7e1042d_build_ident(_1a7e0dd22_TypeBuilder* _self_) {
	if (((((*((*_self_)._field_i)) + 1LL) < (*_self_)._field_tokens.len()) && ((*_self_)._field_tokens[((*((*_self_)._field_i)) + 1LL)].get()._field_id == static_cast<jule::U64>(23LLU)))) {
		return _1a7e0ebe1_build_namespace(&(*_self_));
	};
	jule::Ptr<_1a527737a_Token> _18317_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	jule::Ptr<_1a685305e_IdentTypeDecl> _18417_it = jule::new_ptr<_1a685305e_IdentTypeDecl>(_1a685305e_IdentTypeDecl{._field_token=_18317_token, ._field_ident=_18317_token.get()._field_kind, ._field_cpp_linked=false, });;
	((*((*_self_)._field_i)))++;
	_18417_it.get()._field_generics=_1a7e0ee55_build_generics(&(*_self_));
	return jule::new_ptr<_1a68529cb_TypeDecl>(_1a68529cb_TypeDecl{._field_token=_18317_token, ._field_kind=jule::Any(_18417_it)});
}



inline jule::Ptr<_1a68529cb_TypeDecl> _1a7e10692_build_cpp_link(_1a7e0dd22_TypeBuilder* _self_) {
	if (((((*((*_self_)._field_i)) + 1LL) >= (*_self_)._field_tokens.len()) || ((*_self_)._field_tokens[((*((*_self_)._field_i)) + 1LL)].get()._field_id != static_cast<jule::U64>(20LLU)))) {
		_1a7e0e3e9_push_err(&(*_self_), (*_self_)._field_tokens[(*((*_self_)._field_i))],jule::Str("invalid syntax", 14));
		return nullptr;
	};
	(*((*_self_)._field_i))+=2LL;
	jule::Ptr<_1a68529cb_TypeDecl> _20317_t = _1a7e1042d_build_ident(&(*_self_));;
	_20317_t.get()._field_kind.operator jule::Ptr<_1a685305e_IdentTypeDecl>().get()._field_cpp_linked=true;
	return _20317_t;
}



inline jule::Ptr<_1a68529cb_TypeDecl> _1a7e10906_build_fn(_1a7e0dd22_TypeBuilder* _self_) {
	jule::Ptr<_1a527737a_Token> _20917_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	jule::Ptr<_1a6862205_FnDecl> _21017_f = _1a7e04675_build_fn_prototype((*_self_)._field_p, (*_self_)._field_tokens,(*((*_self_)._field_i)),false);;
	if ((_21017_f == nullptr)) {
		return nullptr;
	};
	if ((!(_1a6862557_is_anon(_21017_f.ptr())))) {
		_1a7e0e3e9_push_err(&(*_self_), _21017_f.get()._field_token,jule::Str("invalid syntax", 14));
	};
	return jule::new_ptr<_1a68529cb_TypeDecl>(_1a68529cb_TypeDecl{._field_token=_20917_token, ._field_kind=jule::Any(_21017_f)});
}



inline jule::Ptr<_1a68529cb_TypeDecl> _1a7e10b6a_build_ptr(_1a7e0dd22_TypeBuilder* _self_) {
	jule::Ptr<_1a527737a_Token> _22417_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if ((((*((*_self_)._field_i)) + 1LL) >= (*_self_)._field_tokens.len())) {
		_1a7e0e3e9_push_err(&(*_self_), _22417_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	((*((*_self_)._field_i)))++;
	if (((*_self_)._field_tokens[(*((*_self_)._field_i))].get()._field_id == static_cast<jule::U64>(35LLU))) {
		((*((*_self_)._field_i)))++;
		return jule::new_ptr<_1a68529cb_TypeDecl>(_1a68529cb_TypeDecl{._field_token=_22417_token, ._field_kind=jule::Any(jule::new_ptr<_1a68544a0_PtrTypeDecl>(_1a68544a0_PtrTypeDecl{._field_elem=nullptr}))});
	};
	jule::Ptr<_1a68529cb_TypeDecl> _24117_elem = _1a7e11e9b_step(&(*_self_));;
	if ((_24117_elem == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1a68529cb_TypeDecl>(_1a68529cb_TypeDecl{._field_token=_22417_token, ._field_kind=jule::Any(jule::new_ptr<_1a68544a0_PtrTypeDecl>(_1a68544a0_PtrTypeDecl{._field_elem=_24117_elem}))});
}



inline jule::Ptr<_1a68529cb_TypeDecl> _1a7e10dce_build_sptr(_1a7e0dd22_TypeBuilder* _self_) {
	jule::Ptr<_1a527737a_Token> _25517_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if ((((*((*_self_)._field_i)) + 1LL) >= (*_self_)._field_tokens.len())) {
		_1a7e0e3e9_push_err(&(*_self_), _25517_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	((*((*_self_)._field_i)))++;
	jule::Ptr<_1a68529cb_TypeDecl> _26217_elem = _1a7e11e9b_step(&(*_self_));;
	if ((_26217_elem == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1a68529cb_TypeDecl>(_1a68529cb_TypeDecl{._field_token=_25517_token, ._field_kind=jule::Any(jule::new_ptr<_1a6853a54_SptrTypeDecl>(_1a6853a54_SptrTypeDecl{._field_elem=_26217_elem}))});
}



inline jule::Ptr<_1a68529cb_TypeDecl> _1a7e11143_build_op(_1a7e0dd22_TypeBuilder* _self_) {
	jule::Ptr<_1a527737a_Token> _27617_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	{
		auto &_match_expr{ _27617_token.get()._field_kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1aa7271b5:;
			{
				return _1a7e10b6a_build_ptr(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1aa72722b:;
			{
				return _1a7e10dce_build_sptr(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1aa726eea:;
			{
				return jule::new_ptr<_1a68529cb_TypeDecl>(_1a68529cb_TypeDecl{._field_kind=jule::Any(jule::new_ptr<_1a6853a54_SptrTypeDecl>(_1a6853a54_SptrTypeDecl{._field_elem=_1a7e10dce_build_sptr(&(*_self_))}))});
			}
		}
		else {
			_case_begin_1aa725db7:;
			{
				_1a7e0e3e9_push_err(&(*_self_), _27617_token,jule::Str("invalid syntax", 14));
				return nullptr;
			}
		}
		_match_end_1aa726549:;
	};
}



inline jule::Ptr<_1a68529cb_TypeDecl> _1a7e113a7_build_slc(_1a7e0dd22_TypeBuilder* _self_) {
	jule::Ptr<_1a527737a_Token> _29517_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	((*((*_self_)._field_i)))++;
	jule::Ptr<_1a68529cb_TypeDecl> _29717_elem = _1a7e11e9b_step(&(*_self_));;
	if ((_29717_elem == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1a68529cb_TypeDecl>(_1a68529cb_TypeDecl{._field_token=_29517_token, ._field_kind=jule::Any(jule::new_ptr<_1a6853d40_SlcTypeDecl>(_1a6853d40_SlcTypeDecl{._field_elem=_29717_elem}))});
}



inline jule::Ptr<_1a68529cb_TypeDecl> _1a7e1161b_build_arr(_1a7e0dd22_TypeBuilder* _self_) {
	if (((*((*_self_)._field_i)) >= (*_self_)._field_tokens.len())) {
		_1a7e0e3e9_push_err(&(*_self_), (*_self_)._field_tokens[((*((*_self_)._field_i)) - 1LL)],jule::Str("type missing", 12));
		return nullptr;
	};
	jule::I64 _31813_expr_delta = (*((*_self_)._field_i));;
	jule::Ptr<_1a68529cb_TypeDecl> _32017_elem = _1a7e11e9b_step(&(*_self_));;
	if ((_32017_elem == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1a6854bed_ArrTypeDecl> _32517_arrt = jule::new_ptr<_1a6854bed_ArrTypeDecl>(_1a6854bed_ArrTypeDecl{._field_elem=_32017_elem, });;
	jule::Slice<jule::Ptr<_1a527737a_Token>> _32917_expr_tokens = (*_self_)._field_tokens.slice(0LL,_31813_expr_delta);;
	std::tie(std::ignore,_32917_expr_tokens) = _1a7debddc_range_last(_32917_expr_tokens);
	_32917_expr_tokens=_32917_expr_tokens.slice(1LL,(_32917_expr_tokens.len() - 1LL));
	jule::Ptr<_1a527737a_Token> _33217_token = _32917_expr_tokens[0LL];;
	if ((((_32917_expr_tokens.len() == 1LL) && (_33217_token.get()._field_id == static_cast<jule::U64>(7LLU))) && (_33217_token.get()._field_kind == jule::Str("...", 3)))) {
	} else {
		_32517_arrt.get()._field_size=_1a7dee5b5_build_expr((*_self_)._field_p, _32917_expr_tokens);
	};
	return jule::new_ptr<_1a68529cb_TypeDecl>(_1a68529cb_TypeDecl{._field_token=_33217_token, ._field_kind=jule::Any(_32517_arrt)});
}



inline jule::Ptr<_1a68529cb_TypeDecl> _1a7e119c3_build_map(_1a7e0dd22_TypeBuilder* _self_, jule::I64 _34528_colon, jule::Slice<jule::Ptr<_1a527737a_Token>>& _34545_tokens) {
	jule::Ptr<_1a527737a_Token> _34617_colon_token = (*_self_)._field_tokens[_34528_colon];;
	if (((_34528_colon == 0LL) || ((_34528_colon + 1LL) >= _34545_tokens.len()))) {
		_1a7e0e3e9_push_err(&(*_self_), _34617_colon_token,jule::Str("type missing", 12));
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1a527737a_Token>> _35117_key_tokens = _34545_tokens.slice(0LL,_34528_colon);;
	jule::Slice<jule::Ptr<_1a527737a_Token>> _35217_val_tokens = _34545_tokens.slice((_34528_colon + 1LL));;
	jule::Ptr<_1a6855407_MapTypeDecl> _35317_mapt = jule::new_ptr<_1a6855407_MapTypeDecl>(_1a6855407_MapTypeDecl{});;
	jule::I64 _35517_j = 0LL;;
	jule::Ptr<_1a68529cb_TypeDecl> _35618_keyt;;
	jule::Bool _35628_ok;;
	std::tie(_35618_keyt,_35628_ok) = _1a7e008a2_build_type((*_self_)._field_p, _35117_key_tokens,(&(_35517_j)),(*_self_)._field_err);
	if ((!(_35628_ok))) {
		return nullptr;
	} else if ((_35517_j < _35117_key_tokens.len())) {
		_1a7e0e3e9_push_err(&(*_self_), _35117_key_tokens[_35517_j],jule::Str("invalid syntax", 14));
	};
	_35317_mapt.get()._field_key=_35618_keyt;
	_35517_j=0LL;
	jule::Ptr<_1a68529cb_TypeDecl> _36518_valt;;
	std::tie(_36518_valt,_35628_ok) = _1a7e008a2_build_type((*_self_)._field_p, _35217_val_tokens,(&(_35517_j)),(*_self_)._field_err);
	if ((!(_35628_ok))) {
		return nullptr;
	} else if ((_35517_j < _35217_val_tokens.len())) {
		_1a7e0e3e9_push_err(&(*_self_), _35217_val_tokens[_35517_j],jule::Str("invalid syntax", 14));
	};
	_35317_mapt.get()._field_val=_36518_valt;
	return jule::new_ptr<_1a68529cb_TypeDecl>(_1a68529cb_TypeDecl{._field_token=_34617_colon_token, ._field_kind=jule::Any(_35317_mapt)});
}



inline jule::Ptr<_1a68529cb_TypeDecl> _1a7e11c37_build_enumerable(_1a7e0dd22_TypeBuilder* _self_) {
	jule::Ptr<_1a527737a_Token> _38017_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if ((((((*((*_self_)._field_i)) + 2LL) >= (*_self_)._field_tokens.len()) || (_38017_token.get()._field_id != static_cast<jule::U64>(3LLU))) || (_38017_token.get()._field_kind != jule::Str("[", 1)))) {
		_1a7e0e3e9_push_err(&(*_self_), _38017_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	((*((*_self_)._field_i)))++;
	_38017_token=(*_self_)._field_tokens[(*((*_self_)._field_i))];
	if (((_38017_token.get()._field_id == static_cast<jule::U64>(3LLU)) && (_38017_token.get()._field_kind == jule::Str("]", 1)))) {
		return _1a7e113a7_build_slc(&(*_self_));
	};
	((*((*_self_)._field_i)))--;
	jule::Slice<jule::Ptr<_1a527737a_Token>> _39418_map_tokens;;
	jule::I64 _39430_colon;;
	std::tie(_39418_map_tokens,_39430_colon) = _1a7e0d849_split_map_range((*_self_)._field_tokens,(*((*_self_)._field_i)));
	((*((*_self_)._field_i)))++;
	if ((_39430_colon == -1LL)) {
		return _1a7e1161b_build_arr(&(*_self_));
	};
	return _1a7e119c3_build_map(&(*_self_), _39430_colon,_39418_map_tokens);
}



inline jule::Ptr<_1a68529cb_TypeDecl> _1a7e11e9b_step(_1a7e0dd22_TypeBuilder* _self_) {
	jule::Ptr<_1a527737a_Token> _40313_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	{
		auto &_match_expr{ _40313_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1aa73e221:;
			{
				return _1a7e0e97c_build_prim(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1aa73dece:;
			{
				return _1a7e1042d_build_ident(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1aa73e045:;
			{
				return _1a7e10692_build_cpp_link(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1aa73e0ab:;
			{
				return _1a7e10906_build_fn(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1aa73d451:;
			{
				return _1a7e11143_build_op(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1aa73d4b7:;
			{
				return _1a7e11c37_build_enumerable(&(*_self_));
			}
		}
		else {
			_case_begin_1aa73beee:;
			{
				((*((*_self_)._field_i)))++;
				_1a7e0e3e9_push_err(&(*_self_), _40313_token,jule::Str("invalid syntax", 14));
				return nullptr;
			}
		}
		_match_end_1aa73d2ec:;
	};
}



inline std::tuple<jule::Ptr<_1a68529cb_TypeDecl>,jule::Bool> _1a7e12210_build(_1a7e0dd22_TypeBuilder* _self_) {
	jule::Bool _42644_ok = jule::Bool();
	jule::Ptr<_1a68529cb_TypeDecl> _42717_root = _1a7e11e9b_step(&(*_self_));;
	if ((_42717_root == nullptr)) {
		_42644_ok = false;
		return std::make_tuple(_1a7e0d2b6_build_void_type(),_42644_ok);
	};
	_42644_ok = true;
	return std::make_tuple(_42717_root,_42644_ok);
}







std::ostream &operator<<(std::ostream &_Stream, _1a7e0dd22_TypeBuilder _Src) {
	_Stream << "TypeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a7817495_CompileInfo _Src) {
	_Stream << "CompileInfo{";
	_Stream << "prod:" << _Src._field_prod << ", ";
	_Stream << "test:" << _Src._field_test << ", ";
	_Stream << "compiler:" << _Src._field_compiler << ", ";
	_Stream << "cpp_std:" << _Src._field_cpp_std;
	_Stream << "}";
	return _Stream;
}



inline void _1a7818e8b_push_err(_1a781893b_DirectiveEval* _self_, jule::Ptr<_1a527737a_Token> _2127_t, jule::Str _2138_fmt, jule::Slice<jule::Any> _2151_args) {
	(*_self_)._field_logs = jule::alloc_for_append((*_self_)._field_logs,1);(*_self_)._field_logs.__push(_1a43349cc_Log{._field_kind=static_cast<jule::I64>(1LL), ._field_row=_2127_t.get()._field_row, ._field_column=_2127_t.get()._field_column, ._field_path=_2127_t.get()._field_file.get()._field_path, ._field_text=_1a4334e1c_logf(_2138_fmt,jule::Any(_2151_args)), });;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1a527737a_Token>>> _1a7819343_split_operans(_1a781893b_DirectiveEval* _self_, jule::Str _3332_op, jule::Slice<jule::Ptr<_1a527737a_Token>>& _3352_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1a527737a_Token>>> _3417_parts = jule::Slice<jule::Slice<jule::Ptr<_1a527737a_Token>>>::alloc(0LL,10LL);;
	jule::I64 _3617_i = 0LL;;
	jule::I64 _3717_range_n = 0LL;;
	jule::I64 _3817_last = 0LL;;
	for (; (_3617_i < (_3352_tokens.len() - 1LL)); (_3617_i)++) {
		{
			jule::Ptr<_1a527737a_Token> _4017_b = _3352_tokens[_3617_i];;
			if ((_4017_b.get()._field_id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _4017_b.get()._field_kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1aa765027:;
						{
							(_3717_range_n)++;
							goto _iter_next_1aa764125;
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1aa76519d:;
						{
							(_3717_range_n)--;
						}
					}
					_match_end_1aa764e6c:;
				};
			};
			if (((_3717_range_n > 0LL) || (_4017_b.get()._field_id != static_cast<jule::U64>(7LLU)))) {
				goto _iter_next_1aa764125;
			};
			if ((_4017_b.get()._field_kind == _3332_op)) {
				_3417_parts = jule::alloc_for_append(_3417_parts,1);_3417_parts.__push(_3352_tokens.slice(_3817_last,_3617_i));;
				_3817_last=static_cast<jule::I64>((_3617_i + 1LL));
			};
		}
	_iter_next_1aa764125:;
	}
	_iter_end_1aa764125:;;
	if ((_3817_last < _3352_tokens.len())) {
		_3417_parts = jule::alloc_for_append(_3417_parts,1);_3417_parts.__push(_3352_tokens.slice(_3817_last));;
	} else {
		_1a7818e8b_push_err(&(*_self_), _3352_tokens[(_3817_last - 1LL)],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	return _3417_parts;
}



inline jule::Bool _1a7819651_eval_directive_ident(_1a781893b_DirectiveEval* _self_, jule::Str _7335_ident) {
	if (_7335_ident.empty()) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_vars;
		auto it = expr.begin();
		_iter_begin_1aa769009:;
		if (it != expr.end()) {
			jule::Str &_7716_var = *it;
			{
				if ((_7716_var == _7335_ident)) {
					return true;
				};
			}
			_iter_next_1aa769009:;
			++it;
			goto _iter_begin_1aa769009;
		}
		_iter_end_1aa769009:;
	};
	return false;
}



inline jule::Bool _1a781995e_eval_directive_part(_1a781893b_DirectiveEval* _self_, jule::Slice<jule::Ptr<_1a527737a_Token>> _8742_part) {
	jule::Bool _8813_logical_not = ((_8742_part[0LL].get()._field_id == static_cast<jule::U64>(7LLU)) && (_8742_part[0LL].get()._field_kind == jule::Str("!", 1)));;
	if (_8813_logical_not) {
		_8742_part=_8742_part.slice(1LL);
	};
	if ((_8742_part.len() > 1LL)) {
		_1a7818e8b_push_err(&(*_self_), _8742_part[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return false;
	};
	jule::Bool _9817_result = _1a7819651_eval_directive_ident(&(*_self_), _8742_part[0LL].get()._field_kind);;
	if (_8813_logical_not) {
		_9817_result=(!(_9817_result));
	};
	return _9817_result;
}



inline jule::Bool _1a7819bc3_eval(_1a781893b_DirectiveEval* _self_) {
	if (((*_self_)._field_d.get()._field_args.len() == 0LL)) {
		_1a7818e8b_push_err(&(*_self_), (*_self_)._field_d.get()._field_tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return false;
	};
	jule::Bool _11117_result = false;;
	jule::Slice<jule::Slice<jule::Ptr<_1a527737a_Token>>> _11317_logical_or_parts = _1a7819343_split_operans(&(*_self_), jule::Str("||", 2),(*_self_)._field_d.get()._field_args);;
	if ((_11317_logical_or_parts == nullptr)) {
		return false;
	};
	{
		auto &expr = _11317_logical_or_parts;
		auto it = expr.begin();
		_iter_begin_1aa77095b:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1a527737a_Token>> _11821_part = *it;
			{
				jule::Bool _11921_and = true;;
				jule::Slice<jule::Slice<jule::Ptr<_1a527737a_Token>>> _12021_logical_and_parts = _1a7819343_split_operans(&(*_self_), jule::Str("&&", 2),_11821_part);;
				if ((_12021_logical_and_parts == nullptr)) {
					return false;
				};
				{
					auto &expr = _12021_logical_and_parts;
					auto it = expr.begin();
					_iter_begin_1aa772133:;
					if (it != expr.end()) {
						jule::Slice<jule::Ptr<_1a527737a_Token>> _12525_and_part = *it;
						{
							jule::Ptr<_1a527737a_Token> _12621_first = _12525_and_part[0LL];;
							if (((_12621_first.get()._field_id == static_cast<jule::U64>(3LLU)) && (_12621_first.get()._field_kind == jule::Str("(", 1)))) {
								jule::Ptr<_1a527737a_Token> _12825_end = _12525_and_part[(_12525_and_part.len() - 1LL)];;
								if (((_12825_end.get()._field_id != static_cast<jule::U64>(3LLU)) || (_12825_end.get()._field_kind != jule::Str(")", 1)))) {
									_1a7818e8b_push_err(&(*_self_), _12621_first,jule::Str("parentheses waiting to close", 28),jule::Slice<jule::Any>());
									return false;
								};
								_12525_and_part=_12525_and_part.slice(1LL,(_12525_and_part.len() - 1LL));
							};
							_11921_and=(_11921_and && _1a781995e_eval_directive_part(&(*_self_), _12525_and_part));
						}
						_iter_next_1aa772133:;
						++it;
						goto _iter_begin_1aa772133;
					}
					_iter_end_1aa772133:;
				};
				_11117_result=(_11117_result || _11921_and);
			}
			_iter_next_1aa77095b:;
			++it;
			goto _iter_begin_1aa77095b;
		}
		_iter_end_1aa77095b:;
	};
	return _11117_result;
}







std::ostream &operator<<(std::ostream &_Stream, _1a781893b_DirectiveEval _Src) {
	_Stream << "DirectiveEval{";
	_Stream << "logs:" << _Src._field_logs << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a7ceea26_JuleImporter> static__1d509ac40_new(_1a7817495_CompileInfo _5823_info) {
	jule::Ptr<_1a7ceea26_JuleImporter> _5917_imp = jule::new_ptr<_1a7ceea26_JuleImporter>(_1a7ceea26_JuleImporter{._field_mods=jule::Slice<jule::Str>::make({_1a43483c5_PATH_STDLIB}), });;
	_1a7817cae_init_vars(_5917_imp.get()._field_vars,_5823_info);
	return _5917_imp;
}



inline jule::Slice<jule::Ptr<_1a7685038_ImportInfo>> _1d50b46a4_all_packages(_1a7ceea26_JuleImporter* _self_) {
	return (*_self_)._field_pkgs;
}



inline void _1d50c54d9_set_mod_path(_1a7ceea26_JuleImporter* _self_, jule::Str _7535_path) {
	(*_self_)._field_mod=_7535_path;
}



inline jule::Str _1d50d3e10_get_mod_path(_1a7ceea26_JuleImporter* _self_) {
	return (*_self_)._field_mod;
}



inline jule::Str _1d50d682a_mod_by_id(_1a7ceea26_JuleImporter* _self_, jule::I64 _8328_id) {
	return (*_self_)._field_mods[_8328_id];
}



inline jule::Ptr<_1a7685038_ImportInfo> _1d5133921_get_import(_1a7ceea26_JuleImporter* _self_, jule::Str _8733_path) {
	{
		auto &expr = (*_self_)._field_pkgs;
		auto it = expr.begin();
		_iter_begin_1aa779b63:;
		if (it != expr.end()) {
			jule::Ptr<_1a7685038_ImportInfo> _8821_p = *it;
			{
				if ((_8821_p.get()._field_path == _8733_path)) {
					return _8821_p;
				};
			}
			_iter_next_1aa779b63:;
			++it;
			goto _iter_begin_1aa779b63;
		}
		_iter_end_1aa779b63:;
	};
	return nullptr;
}



inline std::tuple<jule::Slice<jule::Ptr<_1a6820cc9_Ast>>,jule::Slice<_1a43349cc_Log>> _1a7d14e9d_import_package(_1a7ceea26_JuleImporter* _self_, jule::Str _9637_path, jule::Bool _9648_update_mod) {
	jule::Slice<jule::Ptr<_1d4e9e836_DirEntry>> _9717_dirents = ({
		auto except = static__1a429d9ce_read(_9637_path);
		(except.ok()) ? (except.result) : ({{
			return std::make_tuple(nullptr,jule::Slice<_1a43349cc_Log>::make({_1d508e816_flat_compiler_err((jule::Str("connot read package directory: ", 31) + _9637_path))}));
		} jule::Slice<jule::Ptr<_1d4e9e836_DirEntry>>();});
	});;
	if (_9648_update_mod) {
		jule::Str _10217_new_mod = _1a78290ab_find_module_file_deep(_9637_path);;
		if ((_10217_new_mod != (*_self_)._field_mod)) {
			(*_self_)._field_mod=_10217_new_mod;
			jule::Slice<_1a43349cc_Log> _10525_errs = _1a7829353_check_module_file((*_self_)._field_mod);;
			if ((_10525_errs.len() != 0LL)) {
				return std::make_tuple(nullptr,_10525_errs);
			};
		};
	};
	jule::Slice<jule::Ptr<_1a6820cc9_Ast>> _11217_asts = jule::Slice<jule::Ptr<_1a6820cc9_Ast>>::alloc(0LL,_9717_dirents.len());;
	{
		auto &expr = _9717_dirents;
		auto it = expr.begin();
		_iter_begin_1aa77e6b2:;
		if (it != expr.end()) {
			jule::Ptr<_1d4e9e836_DirEntry> _11316_dirent = *it;
			{
				if ((_1d4ea120b_is_dir(_11316_dirent.get()._field_stat.ptr()) || (!(_1a4294233_has_suffix(_11316_dirent.get()._field_name,jule::Str(".jule", 5)))))) {
					goto _iter_next_1aa77e6b2;
				};
				jule::Str _11917__path = _1a429a811_join(jule::Slice<jule::Str>::make({_9637_path,_11316_dirent.get()._field_name}));;
				jule::Ptr<_1a527c76a_File> _12021_file = _1a527dc99_new_file_set(_11917__path);;
				_1a527cdec_fill(_12021_file.ptr(), _1d508c836_read_buff(_12021_file.get()._field_path));
				jule::Slice<_1a43349cc_Log> _12221_errors = _1a5289612_lex(_12021_file,static_cast<jule::I64>(0LL));;
				if ((_12221_errors.len() > 0LL)) {
					return std::make_tuple(nullptr,_12221_errors);
				};
				jule::Ptr<_1a7d89286_FileInfo> _12721_finfo = _1a7dce188_parse_file(_12021_file);;
				if ((_12721_finfo.get()._field_errors.len() > 0LL)) {
					return std::make_tuple(nullptr,_12721_finfo.get()._field_errors);
				};
				if ((!(_1a78166c5_is_pass_file_annotation(_11316_dirent.get()._field_name)))) {
					goto _iter_next_1aa77e6b2;
				};
				jule::Bool _13718_r;;
				jule::Slice<_1a43349cc_Log> _13725_logs;;
				std::tie(_13718_r,_13725_logs) = _1a7d18446_is_pass_build_directives(&(*_self_), _12721_finfo.get()._field_ast);
				if ((_13725_logs.len() > 0LL)) {
					return std::make_tuple(nullptr,_13725_logs);
				};
				if ((!(_13718_r))) {
					goto _iter_next_1aa77e6b2;
				};
				_11217_asts = jule::alloc_for_append(_11217_asts,1);_11217_asts.__push(_12721_finfo.get()._field_ast);;
			}
			_iter_next_1aa77e6b2:;
			++it;
			goto _iter_begin_1aa77e6b2;
		}
		_iter_end_1aa77e6b2:;
	};
	return std::make_tuple(_11217_asts,nullptr);
}



inline void _1a7d1729c_imported(_1a7ceea26_JuleImporter* _self_, jule::Ptr<_1a7685038_ImportInfo> _15335_imp) {
	{
		auto &expr = (*_self_)._field_pkgs;
		auto it = expr.begin();
		_iter_begin_1aa7865dc:;
		if (it != expr.end()) {
			jule::Ptr<_1a7685038_ImportInfo> _15516_p = *it;
			{
				if (((_15516_p.get()._field_cpp_linked == _15335_imp.get()._field_cpp_linked) && (_15516_p.get()._field_link_path == _15335_imp.get()._field_link_path))) {
					return;;
				};
			}
			_iter_next_1aa7865dc:;
			++it;
			goto _iter_begin_1aa7865dc;
		}
		_iter_end_1aa7865dc:;
	};
	if (((*_self_)._field_mod.len() != 0LL)) {
		{
			auto &expr = (*_self_)._field_mods;
			auto it = expr.begin();
			_iter_begin_1aa787863:;
			if (it != expr.end()) {
				jule::I64 _16217_i = it - expr.begin();
				jule::Str _16220_mod = *it;
				{
					if (((*_self_)._field_mod == _16220_mod)) {
						_15335_imp.get()._field_mod_id=_16217_i;
						goto _julec_label_setted;
					};
				}
				_iter_next_1aa787863:;
				++it;
				_16217_i++;
				goto _iter_begin_1aa787863;
			}
			_iter_end_1aa787863:;
		};
		_15335_imp.get()._field_mod_id=static_cast<jule::I64>((*_self_)._field_mods.len());
		(*_self_)._field_mods = jule::alloc_for_append((*_self_)._field_mods,1);(*_self_)._field_mods.__push((*_self_)._field_mod);;
		_julec_label_setted:;
	};
	(*_self_)._field_pkgs = jule::alloc_for_append((*_self_)._field_pkgs,1);(*_self_)._field_pkgs.__push(_15335_imp);;
}



inline std::tuple<jule::Bool,jule::Slice<_1a43349cc_Log>> _1a7d18446_is_pass_build_directives(_1a7ceea26_JuleImporter* _self_, jule::Ptr<_1a6820cc9_Ast>& _17948_file) {
	{
		auto &expr = _17948_file.get()._field_top_directives;
		auto it = expr.begin();
		_iter_begin_1aa78a998:;
		if (it != expr.end()) {
			jule::Ptr<_1a6852525_Directive> _18021_td = *it;
			{
				if ((_18021_td.get()._field_tag.get()._field_kind != jule::Str("build", 5))) {
					goto _iter_next_1aa78a998;
				};
				_1a781893b_DirectiveEval _18421_de = _1a781893b_DirectiveEval{._field_d=_18021_td, ._field_vars=(*_self_)._field_vars};;
				jule::Bool _18817_result = _1a7819bc3_eval(&_18421_de);;
				if ((_18421_de._field_logs.len() > 0LL)) {
					return std::make_tuple(false,_18421_de._field_logs);
				};
				if ((!(_18817_result))) {
					return std::make_tuple(false,nullptr);
				};
			}
			_iter_next_1aa78a998:;
			++it;
			goto _iter_begin_1aa78a998;
		}
		_iter_end_1aa78a998:;
	};
	return std::make_tuple(true,nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1a7ceea26_JuleImporter _Src) {
	_Stream << "JuleImporter{";
	_Stream << "mods:" << _Src._field_mods << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "pkgs:" << _Src._field_pkgs << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a7dbbcd0_OrderedDefines _Src) {
	_Stream << "OrderedDefines{";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "globals:" << _Src._field_globals;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aa7ad1b3_is_common_ordered(jule::Slice<jule::Ptr<_1a6826829_Struct>>& _1837_s, jule::Ptr<_1a6826829_Struct> _1846_t) {
	jule::Ptr<_1a6826829_Struct>* _1917_p = (&(_1846_t.get()._field_depends[0LL]));;
	jule::Ptr<_1a6826829_Struct>* _2013_end = (_1917_p + _1846_t.get()._field_depends.len());;
	{
		auto &expr = _1837_s;
		auto it = expr.begin();
		_iter_begin_1aa7b10d9:;
		if (it != expr.end()) {
			jule::Ptr<_1a6826829_Struct> &_2116_tt = *it;
			{
				{
					if ((_2116_tt == _1846_t)) {
						goto _iter_end_1aa7b10d9;
					};
					if ((((*(_1917_p)).get()._field_cpp_linked || ((*(_1917_p)).get()._field_depends.len() == 0LL)) || (_2116_tt == (*(_1917_p))))) {
						(_1917_p)++;
						if ((_1917_p == _2013_end)) {
							return true;
						};
					};
				};
			}
			_iter_next_1aa7b10d9:;
			++it;
			goto _iter_begin_1aa7b10d9;
		}
		_iter_end_1aa7b10d9:;
	};
	return false;
}

inline jule::Bool _1aa7b5e13_is_common_ordered(jule::Slice<jule::Ptr<_1a76a7720_Var>>& _1837_s, jule::Ptr<_1a76a7720_Var> _1846_t) {
	jule::Ptr<_1a76a7720_Var>* _1917_p = (&(_1846_t.get()._field_depends[0LL]));;
	jule::Ptr<_1a76a7720_Var>* _2013_end = (_1917_p + _1846_t.get()._field_depends.len());;
	{
		auto &expr = _1837_s;
		auto it = expr.begin();
		_iter_begin_1aa7b8ce5:;
		if (it != expr.end()) {
			jule::Ptr<_1a76a7720_Var> &_2116_tt = *it;
			{
				{
					if ((_2116_tt == _1846_t)) {
						goto _iter_end_1aa7b8ce5;
					};
					if ((((*(_1917_p)).get()._field_cpp_linked || ((*(_1917_p)).get()._field_depends.len() == 0LL)) || (_2116_tt == (*(_1917_p))))) {
						(_1917_p)++;
						if ((_1917_p == _2013_end)) {
							return true;
						};
					};
				};
			}
			_iter_next_1aa7b8ce5:;
			++it;
			goto _iter_begin_1aa7b8ce5;
		}
		_iter_end_1aa7b8ce5:;
	};
	return false;
}



inline void _1aa7a9610_order_common(jule::Slice<jule::Ptr<_1a6826829_Struct>>& _3940_s) {
	jule::I64 _4017_i = 0LL;;
	{
		auto &expr = _3940_s;
		auto it = expr.begin();
		_iter_begin_1aa7aa820:;
		if (it != expr.end()) {
			jule::I64 _4114_j = it - expr.begin();
			jule::Ptr<_1a6826829_Struct> _4121_t = *it;
			{
				if ((_4121_t.get()._field_cpp_linked || (_4121_t.get()._field_depends.len() == 0LL))) {
					_3940_s.swap(_4017_i,_4114_j);
					(_4017_i)++;
				};
			}
			_iter_next_1aa7aa820:;
			++it;
			_4114_j++;
			goto _iter_begin_1aa7aa820;
		}
		_iter_end_1aa7aa820:;
	};
	jule::I64 _4817_j = _4017_i;;
	for (; (_4817_j < _3940_s.len()); (_4817_j)++) {
		{
			jule::I64 _5021_k = _4017_i;;
			for (; (_5021_k < (_3940_s.len() - 1LL)); (_5021_k)++) {
				{
					if ((!(_1aa7ad1b3_is_common_ordered(_3940_s,_3940_s[_5021_k])))) {
						_3940_s.swap(_5021_k,static_cast<jule::I64>((_5021_k + 1LL)));
					};
				}
			_iter_next_1aa7ac976:;
			}
			_iter_end_1aa7ac976:;;
		}
	_iter_next_1aa7aa19e:;
	}
	_iter_end_1aa7aa19e:;;
}

inline void _1aa7acd3e_order_common(jule::Slice<jule::Ptr<_1a76a7720_Var>>& _3940_s) {
	jule::I64 _4017_i = 0LL;;
	{
		auto &expr = _3940_s;
		auto it = expr.begin();
		_iter_begin_1aa7b3570:;
		if (it != expr.end()) {
			jule::I64 _4114_j = it - expr.begin();
			jule::Ptr<_1a76a7720_Var> _4121_t = *it;
			{
				if ((_4121_t.get()._field_cpp_linked || (_4121_t.get()._field_depends.len() == 0LL))) {
					_3940_s.swap(_4017_i,_4114_j);
					(_4017_i)++;
				};
			}
			_iter_next_1aa7b3570:;
			++it;
			_4114_j++;
			goto _iter_begin_1aa7b3570;
		}
		_iter_end_1aa7b3570:;
	};
	jule::I64 _4817_j = _4017_i;;
	for (; (_4817_j < _3940_s.len()); (_4817_j)++) {
		{
			jule::I64 _5021_k = _4017_i;;
			for (; (_5021_k < (_3940_s.len() - 1LL)); (_5021_k)++) {
				{
					if ((!(_1aa7b5e13_is_common_ordered(_3940_s,_3940_s[_5021_k])))) {
						_3940_s.swap(_5021_k,static_cast<jule::I64>((_5021_k + 1LL)));
					};
				}
			_iter_next_1aa7b56c6:;
			}
			_iter_end_1aa7b56c6:;;
		}
	_iter_next_1aa7b188c:;
	}
	_iter_end_1aa7b188c:;;
}



inline void static__1d5166cb7_order_structures(jule::Slice<jule::Ptr<_1a6826829_Struct>>& _6141_structs) {
	_1aa7a9610_order_common(_6141_structs);
}



inline void static__1a7d21817_order_vars(jule::Slice<jule::Ptr<_1a76a7720_Var>>& _6735_vars) {
	_1aa7acd3e_order_common(_6735_vars);
}







std::ostream &operator<<(std::ostream &_Stream, _1a7d8135a_DefineOrderer _Src) {
	_Stream << "DefineOrderer{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a7ed0a1a_LiveTable _Src) {
	_Stream << "LiveTable{";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "fns:" << _Src._field_fns << ", ";
	_Stream << "structs:" << _Src._field_structs;
	_Stream << "}";
	return _Stream;
}



inline void _1a8015478_optimize_child(jule::Ptr<_1a801508d_ScopeDeadCode> _self_, jule::Ptr<_1a7658803_Scope>& _3839_s) {
	jule::Ptr<_1a801508d_ScopeDeadCode> _3917_sdc = jule::new_ptr<_1a801508d_ScopeDeadCode>(_1a801508d_ScopeDeadCode{._field_parent=_self_, ._field_s=_3839_s, ._field_stmts=(&(_3839_s.get()._field_stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos});;
	{
		_1a8017810_optimize_stmts(_3917_sdc);
	};
}



inline void _1a80156ed_optimize_body_child(jule::Ptr<_1a801508d_ScopeDeadCode> _self_, jule::Ptr<_1a7658803_Scope>& _4944_s) {
	jule::Ptr<_1a801508d_ScopeDeadCode> _5017_sdc = jule::new_ptr<_1a801508d_ScopeDeadCode>(_1a801508d_ScopeDeadCode{._field_s=_4944_s, ._field_stmts=(&(_4944_s.get()._field_stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos});;
	{
		_1a8017810_optimize_stmts(_5017_sdc);
	};
}



inline void _1a8015973_optimize_expr_model(jule::Ptr<_1a801508d_ScopeDeadCode> _self_, jule::Any& _5944_model) {
	_1a8018b41_ExprDeadCode _6013_edc = static__1a80196e1_new(_self_);;
	_1a801eb8b_optimize(&_6013_edc, _5944_model);
}



inline void _1a8015b4e_eliminate_followed(_1a801508d_ScopeDeadCode* _self_) {
	if (((*_self_)._field_gotos.get().len() != 0LL)) {
		return;;
	};
	{
		(*((*_self_)._field_stmts))=(*((*_self_)._field_stmts)).slice(0LL,((*_self_)._field_i + 1LL));
	};
	jule::Ptr<_1a801508d_ScopeDeadCode> _7117_parent = (*_self_)._field_parent;;
	while ((_7117_parent != nullptr)) {
		{
			{
				(*(_7117_parent.get()._field_stmts))=(*(_7117_parent.get()._field_stmts)).slice(0LL,(_7117_parent.get()._field_i + 1LL));
			};
			_7117_parent=_7117_parent.get()._field_parent;
		}
	_iter_next_1aa80eed4:;
	}
	_iter_end_1aa80eed4:;;
}



inline void _1a8015dc4_push_goto(jule::Ptr<_1a801508d_ScopeDeadCode> _self_, jule::Ptr<_1a766cc13_GotoSt> _8033_gt) {
	jule::I64 _8117_i = 0LL;;
	for (; (_8117_i < _self_.get()._field_labels.get().len()); (_8117_i)++) {
		{
			if ((_8033_gt.get()._field_ident == (*(_self_.get()._field_labels))[_8117_i].get()._field_ident)) {
				return;;
			};
		}
	_iter_next_1aa812e3d:;
	}
	_iter_end_1aa812e3d:;;
	(*(_self_.get()._field_gotos))=jule::append((*(_self_.get()._field_gotos)),jule::Slice<jule::Ptr<_1a766cc13_GotoSt>>::make({_8033_gt}));
}



inline void _1a8016149_push_label(jule::Ptr<_1a801508d_ScopeDeadCode> _self_, jule::Ptr<_1a766ca26_Label> _9034_l) {
	jule::I64 _9117_i = 0LL;;
	while ((_9117_i < _self_.get()._field_gotos.get().len())) {
		{
			if ((_9034_l.get()._field_ident == (*(_self_.get()._field_gotos))[_9117_i].get()._field_ident)) {
				jule::copy(((*(_self_.get()._field_gotos)).slice(_9117_i)), ((*(_self_.get()._field_gotos)).slice((_9117_i + 1LL))));
				(*(_self_.get()._field_gotos))=(*(_self_.get()._field_gotos)).slice(0LL,(_self_.get()._field_gotos.get().len() - 1LL));
				goto _iter_next_1aa81511b;
			};
			(_9117_i)++;
		}
	_iter_next_1aa81511b:;
	}
	_iter_end_1aa81511b:;;
	(*(_self_.get()._field_labels))=jule::append((*(_self_.get()._field_labels)),jule::Slice<jule::Ptr<_1a766ca26_Label>>::make({_9034_l}));
}



inline void _1a80163be_optimize_range_iter(jule::Ptr<_1a801508d_ScopeDeadCode> _self_, jule::Ptr<_1a7648b23_RangeIter> _10343_it) {
	_1a8015973_optimize_expr_model(_self_, _10343_it.get()._field_expr.get()._field_model);
	_1a80156ed_optimize_body_child(_self_, _10343_it.get()._field_scope);
}



inline void _1a8016644_optimize_while_iter(jule::Ptr<_1a801508d_ScopeDeadCode> _self_, jule::Ptr<_1a761ac7c_WhileIter> _10843_it) {
	_1a8015973_optimize_expr_model(_self_, _10843_it.get()._field_expr);
	if ((_10843_it.get()._field_next != nullptr)) {
		_1a8015973_optimize_expr_model(_self_, _10843_it.get()._field_next);
	};
	_1a80156ed_optimize_body_child(_self_, _10843_it.get()._field_scope);
}



inline void _1a80168b9_optimize_inf_iter(jule::Ptr<_1a801508d_ScopeDeadCode> _self_, jule::Ptr<_1a761aa90_InfIter> _11641_it) {
	_1a80156ed_optimize_body_child(_self_, _11641_it.get()._field_scope);
}



inline void _1a8016b3e_optimize_conditional(jule::Ptr<_1a801508d_ScopeDeadCode> _self_, jule::Ptr<_1a7609e69_Conditional> _12044_c) {
	{
		auto &expr = _12044_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_1aa81c3dc:;
		if (it != expr.end()) {
			jule::Ptr<_1a7660200_If> _12121_case = *it;
			{
				if ((_12121_case != nullptr)) {
					_1a8015973_optimize_expr_model(_self_, _12121_case.get()._field_expr);
					_1a80156ed_optimize_body_child(_self_, _12121_case.get()._field_scope);
				};
			}
			_iter_next_1aa81c3dc:;
			++it;
			goto _iter_begin_1aa81c3dc;
		}
		_iter_end_1aa81c3dc:;
	};
	if ((_12044_c.get()._field_default != nullptr)) {
		if ((_12044_c.get()._field_elifs.len() == 0LL)) {
			_1a8015478_optimize_child(_self_, _12044_c.get()._field_default.get()._field_scope);
		} else {
			_1a80156ed_optimize_body_child(_self_, _12044_c.get()._field_default.get()._field_scope);
		};
	};
}



inline void _1a8016db4_optimize_match(jule::Ptr<_1a801508d_ScopeDeadCode> _self_, jule::Ptr<_1a766d4b6_Match> _13838_m) {
	{
		auto &expr = _13838_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1aa820654:;
		if (it != expr.end()) {
			jule::Ptr<_1a766d8d4_Case> _13921_case = *it;
			{
				{
					auto &expr = _13921_case.get()._field_exprs;
					auto it = expr.begin();
					_iter_begin_1aa820e29:;
					if (it != expr.end()) {
						jule::Ptr<_1a76edda4_Data> _14025_expr = *it;
						{
							_1a8015973_optimize_expr_model(_self_, _14025_expr.get()._field_model);
						}
						_iter_next_1aa820e29:;
						++it;
						goto _iter_begin_1aa820e29;
					}
					_iter_end_1aa820e29:;
				};
				_1a80156ed_optimize_body_child(_self_, _13921_case.get()._field_scope);
			}
			_iter_next_1aa820654:;
			++it;
			goto _iter_begin_1aa820654;
		}
		_iter_end_1aa820654:;
	};
	if ((_13838_m.get()._field_default != nullptr)) {
		if ((_13838_m.get()._field_cases.len() == 0LL)) {
			_1a8015478_optimize_child(_self_, _13838_m.get()._field_default.get()._field_scope);
		} else {
			_1a80156ed_optimize_body_child(_self_, _13838_m.get()._field_default.get()._field_scope);
		};
	};
}



inline void _1a8017139_optimize_assign(jule::Ptr<_1a801508d_ScopeDeadCode> _self_, jule::Ptr<_1a766d0dc_Assign> _15639_assign) {
	_1a8015973_optimize_expr_model(_self_, _15639_assign.get()._field_l.get()._field_model);
	_1a8015973_optimize_expr_model(_self_, _15639_assign.get()._field_r.get()._field_model);
}



inline void _1a80173ae_optimize_multi_assign(jule::Ptr<_1a801508d_ScopeDeadCode> _self_, jule::Ptr<_1a766d2c9_MultiAssign> _16145_assign) {
	{
		auto &expr = _16145_assign.get()._field_l;
		auto it = expr.begin();
		_iter_begin_1aa825170:;
		if (it != expr.end()) {
			jule::Any _16221_l = *it;
			{
				if ((_16221_l != nullptr)) {
					_1a8015973_optimize_expr_model(_self_, _16221_l);
				};
			}
			_iter_next_1aa825170:;
			++it;
			goto _iter_begin_1aa825170;
		}
		_iter_end_1aa825170:;
	};
	_1a8015973_optimize_expr_model(_self_, _16145_assign.get()._field_r);
}



inline void _1a8017634_optimize_stmt(jule::Ptr<_1a801508d_ScopeDeadCode> _self_, jule::Any _17037_st) {
	{
		auto &_match_expr{ _17037_st };
		
		if (_match_expr.type_is<jule::Ptr<_1a7658803_Scope>>()) {
			_case_begin_1aa826ca9:;
			{
				jule::Ptr<_1a7658803_Scope> _17321_scope = _17037_st.operator jule::Ptr<_1a7658803_Scope>();;
				if (_17321_scope.get()._field_deferred) {
					_1a8017aeb_eliminate_dead_code_of_scope(_17321_scope);
				} else {
					_1a8015478_optimize_child(_self_, _17321_scope);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a7648b23_RangeIter>>()) {
			_case_begin_1aa826e1e:;
			{
				_1a80163be_optimize_range_iter(_self_, _17037_st.operator jule::Ptr<_1a7648b23_RangeIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a761ac7c_WhileIter>>()) {
			_case_begin_1aa826e85:;
			{
				_1a8016644_optimize_while_iter(_self_, _17037_st.operator jule::Ptr<_1a761ac7c_WhileIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a761aa90_InfIter>>()) {
			_case_begin_1aa826eeb:;
			{
				_1a80168b9_optimize_inf_iter(_self_, _17037_st.operator jule::Ptr<_1a761aa90_InfIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a7609e69_Conditional>>()) {
			_case_begin_1aa827062:;
			{
				_1a8016b3e_optimize_conditional(_self_, _17037_st.operator jule::Ptr<_1a7609e69_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a766d4b6_Match>>()) {
			_case_begin_1aa8270c8:;
			{
				_1a8016db4_optimize_match(_self_, _17037_st.operator jule::Ptr<_1a766d4b6_Match>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a766d0dc_Assign>>()) {
			_case_begin_1aa827150:;
			{
				_1a8017139_optimize_assign(_self_, _17037_st.operator jule::Ptr<_1a766d0dc_Assign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a766d2c9_MultiAssign>>()) {
			_case_begin_1aa8271c7:;
			{
				_1a80173ae_optimize_multi_assign(_self_, _17037_st.operator jule::Ptr<_1a766d2c9_MultiAssign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a76edda4_Data>>()) {
			_case_begin_1aa82724e:;
			{
				jule::Ptr<_1a76edda4_Data> _19421_d = _17037_st.operator jule::Ptr<_1a76edda4_Data>();;
				{
					auto &_match_expr{ _19421_d.get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1a686e4ed_BuiltinErrorCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1a686da5d_BuiltinPanicCallExprModel>>()) {
						_case_begin_1aa82c595:;
						{
							_1a8015b4e_eliminate_followed(_self_.ptr());
						}
					}
					else {
						_case_begin_1aa82cad4:;
						{
							_1a8015973_optimize_expr_model(_self_, _19421_d.get()._field_model);
						}
					}
					_match_end_1aa82ca7e:;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a766dcad_RetSt>>()) {
			_case_begin_1aa8272c6:;
			{
				_1a8015b4e_eliminate_followed(_self_.ptr());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a766cc13_GotoSt>>()) {
			_case_begin_1aa82734d:;
			{
				_1a8015dc4_push_goto(_self_, _17037_st.operator jule::Ptr<_1a766cc13_GotoSt>());
				_1a8015b4e_eliminate_followed(_self_.ptr());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a766ca26_Label>>()) {
			_case_begin_1aa8273c5:;
			{
				_1a8016149_push_label(_self_, _17037_st.operator jule::Ptr<_1a766ca26_Label>());
			}
		}
		_match_end_1aa826b66:;
	};
}



inline void _1a8017810_optimize_stmts(jule::Ptr<_1a801508d_ScopeDeadCode> _self_) {
	_self_.get()._field_i=0LL;
	for (; (_self_.get()._field_i < _self_.get()._field_stmts->len()); (_self_.get()._field_i)++) {
		{
			_1a8017634_optimize_stmt(_self_, jule::Any((*(_self_.get()._field_stmts))[_self_.get()._field_i]));
		}
	_iter_next_1aa830334:;
	}
	_iter_end_1aa830334:;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a801508d_ScopeDeadCode _Src) {
	_Stream << "ScopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos;
	_Stream << "}";
	return _Stream;
}



inline _1a8018b41_ExprDeadCode static__1a80196e1_new(jule::Ptr<_1a801508d_ScopeDeadCode>& _4724_s) {
	return _1a8018b41_ExprDeadCode{._field_s=_4724_s};
}



inline void _1a8019966_binary(_1a8018b41_ExprDeadCode* _self_, jule::Ptr<_1a684b145_BinopExprModel> _5325_m) {
	_1a801eb8b_optimize(&(*_self_), _5325_m.get()._field_left.get()._field_model);
	_1a801eb8b_optimize(&(*_self_), _5325_m.get()._field_right.get()._field_model);
}



inline void _1a8019bdb_unary(_1a8018b41_ExprDeadCode* _self_, jule::Ptr<_1a6849e79_UnaryExprModel> _5824_m) {
	_1a801eb8b_optimize(&(*_self_), _5824_m.get()._field_expr.get()._field_model);
}



inline void _1a8019e61_structure_lit(_1a8018b41_ExprDeadCode* _self_, jule::Ptr<_1a682b752_StructLitExprModel> _6232_m) {
	{
		auto &expr = _6232_m.get()._field_args;
		auto it = expr.begin();
		_iter_begin_1aa83a592:;
		if (it != expr.end()) {
			jule::Ptr<_1a6827e8a_StructArgExprModel> _6321_arg = *it;
			{
				_1a801eb8b_optimize(&(*_self_), _6321_arg.get()._field_expr);
			}
			_iter_next_1aa83a592:;
			++it;
			goto _iter_begin_1aa83a592;
		}
		_iter_end_1aa83a592:;
	};
}



inline void _1a801a1d6_alloc_structure(_1a8018b41_ExprDeadCode* _self_, jule::Ptr<_1a68225b1_AllocStructLitExprModel> _6834_m) {
	_1a8019e61_structure_lit(&(*_self_), _6834_m.get()._field_lit);
}



inline void _1a801a45b_casting(_1a8018b41_ExprDeadCode* _self_, jule::Ptr<_1a684003a_CastingExprModel> _7226_m) {
	_1a801eb8b_optimize(&(*_self_), _7226_m.get()._field_expr);
}



inline void _1a801a6d1_args(_1a8018b41_ExprDeadCode* _self_, jule::Slice<jule::Any>& _7624_args) {
	{
		auto &expr = _7624_args;
		auto it = expr.begin();
		_iter_begin_1aa83d8c5:;
		if (it != expr.end()) {
			jule::Any _7721_arg = *it;
			{
				_1a801eb8b_optimize(&(*_self_), _7721_arg);
			}
			_iter_next_1aa83d8c5:;
			++it;
			goto _iter_begin_1aa83d8c5;
		}
		_iter_end_1aa83d8c5:;
	};
}



inline void _1a801a956_func_call(_1a8018b41_ExprDeadCode* _self_, jule::Ptr<_1a6845150_FnCallExprModel> _8228_m) {
	_1a801eb8b_optimize(&(*_self_), _8228_m.get()._field_expr);
	_1a801a6d1_args(&(*_self_), _8228_m.get()._field_args);
	if ((_8228_m.get()._field_except != nullptr)) {
		_1a80156ed_optimize_body_child((*_self_)._field_s, _8228_m.get()._field_except);
	};
}



inline void _1a801abcb_slice(_1a8018b41_ExprDeadCode* _self_, jule::Ptr<_1a684533c_SliceExprModel> _9024_m) {
	_1a801a6d1_args(&(*_self_), _9024_m.get()._field_elems);
}



inline void _1a801ae51_array(_1a8018b41_ExprDeadCode* _self_, jule::Ptr<_1a686ca07_ArrayExprModel> _9424_m) {
	if (((_9424_m.get()._field_elems.len() == 2LL) && (_9424_m.get()._field_elems[1LL] == nullptr))) {
		_1a801eb8b_optimize(&(*_self_), _9424_m.get()._field_elems[0LL]);
	};
	_1a801a6d1_args(&(*_self_), _9424_m.get()._field_elems);
}



inline void _1a801b1c6_indexing(_1a8018b41_ExprDeadCode* _self_, jule::Ptr<_1a686b770_IndexingExprModel> _10127_m) {
	_1a801eb8b_optimize(&(*_self_), _10127_m.get()._field_expr.get()._field_model);
	_1a801eb8b_optimize(&(*_self_), _10127_m.get()._field_index.get()._field_model);
}



inline void _1a801b44b_anon_func(_1a8018b41_ExprDeadCode* _self_, jule::Ptr<_1a686b95c_AnonFnExprModel> _10628_m) {
	_1a8017aeb_eliminate_dead_code_of_scope(_10628_m.get()._field_func.get()._field_scope);
}



inline void _1a801b6c1_map(_1a8018b41_ExprDeadCode* _self_, jule::Ptr<_1a686bd36_MapExprModel> _11022_m) {
	{
		auto &expr = _11022_m.get()._field_entries;
		auto it = expr.begin();
		_iter_begin_1aa846aa9:;
		if (it != expr.end()) {
			jule::Ptr<_1a686bb49_KeyValPairExprModel> _11121_pair = *it;
			{
				_1a801eb8b_optimize(&(*_self_), _11121_pair.get()._field_key);
				_1a801eb8b_optimize(&(*_self_), _11121_pair.get()._field_val);
			}
			_iter_next_1aa846aa9:;
			++it;
			goto _iter_begin_1aa846aa9;
		}
		_iter_end_1aa846aa9:;
	};
}



inline void _1a801b946_slicing(_1a8018b41_ExprDeadCode* _self_, jule::Ptr<_1a686c023_SlicingExprModel> _11726_m) {
	_1a801eb8b_optimize(&(*_self_), _11726_m.get()._field_expr);
	_1a801eb8b_optimize(&(*_self_), _11726_m.get()._field_left);
	if ((_11726_m.get()._field_right != nullptr)) {
		_1a801eb8b_optimize(&(*_self_), _11726_m.get()._field_right);
	};
}



inline void _1a801bbbb_trait_sub(_1a8018b41_ExprDeadCode* _self_, jule::Ptr<_1a686c210_TraitSubIdentExprModel> _12528_m) {
	_1a801eb8b_optimize(&(*_self_), _12528_m.get()._field_expr);
}



inline void _1a801be41_structure_sub(_1a8018b41_ExprDeadCode* _self_, jule::Ptr<_1a686c62d_StructSubIdentExprModel> _12932_m) {
	_1a801eb8b_optimize(&(*_self_), _12932_m.get()._field_expr.get()._field_model);
}



inline void _1a801c1b6_common_sub(_1a8018b41_ExprDeadCode* _self_, jule::Ptr<_1a686cdd1_CommonSubIdentExprModel> _13329_m) {
	_1a801eb8b_optimize(&(*_self_), _13329_m.get()._field_expr);
}



inline void _1a801c43b_tuple(_1a8018b41_ExprDeadCode* _self_, jule::Ptr<_1a686d0bd_TupleExprModel> _13724_m) {
	{
		auto &expr = _13724_m.get()._field_datas;
		auto it = expr.begin();
		_iter_begin_1aa84ccbe:;
		if (it != expr.end()) {
			jule::Ptr<_1a76edda4_Data> _13821_d = *it;
			{
				_1a801eb8b_optimize(&(*_self_), _13821_d.get()._field_model);
			}
			_iter_next_1aa84ccbe:;
			++it;
			goto _iter_begin_1aa84ccbe;
		}
		_iter_end_1aa84ccbe:;
	};
}



inline void _1a801c6b1_new_call(_1a8018b41_ExprDeadCode* _self_, jule::Ptr<_1a686d871_BuiltinNewCallExprModel> _14327_m) {
	if ((_14327_m.get()._field_init != nullptr)) {
		_1a801eb8b_optimize(&(*_self_), _14327_m.get()._field_init);
	};
}



inline void _1a801c936_out_call(_1a8018b41_ExprDeadCode* _self_, jule::Ptr<_1a686d2aa_BuiltinOutCallExprModel> _14927_m) {
	_1a801eb8b_optimize(&(*_self_), _14927_m.get()._field_expr);
}



inline void _1a801cbab_outln_call(_1a8018b41_ExprDeadCode* _self_, jule::Ptr<_1a686d497_BuiltinOutlnCallExprModel> _15329_m) {
	_1a801eb8b_optimize(&(*_self_), _15329_m.get()._field_expr);
}



inline void _1a801ce31_panic_call(_1a8018b41_ExprDeadCode* _self_, jule::Ptr<_1a686da5d_BuiltinPanicCallExprModel> _15729_m) {
	_1a801eb8b_optimize(&(*_self_), _15729_m.get()._field_expr);
}



inline void _1a801d1a6_assert_call(_1a8018b41_ExprDeadCode* _self_, jule::Ptr<_1a686dc4a_BuiltinAssertCallExprModel> _16130_m) {
	_1a801eb8b_optimize(&(*_self_), _16130_m.get()._field_expr);
}



inline void _1a801d42b_error_call(_1a8018b41_ExprDeadCode* _self_, jule::Ptr<_1a686e4ed_BuiltinErrorCallExprModel> _16529_m) {
	_1a801eb8b_optimize(&(*_self_), _16529_m.get()._field_err);
}



inline void _1a801d6a1_make_call(_1a8018b41_ExprDeadCode* _self_, jule::Ptr<_1a686de37_BuiltinMakeCallExprModel> _16928_m) {
	if ((_16928_m.get()._field_len != nullptr)) {
		_1a801eb8b_optimize(&(*_self_), _16928_m.get()._field_len);
	};
	if ((_16928_m.get()._field_cap != nullptr)) {
		_1a801eb8b_optimize(&(*_self_), _16928_m.get()._field_cap);
	};
}



inline void _1a801d926_append_call(_1a8018b41_ExprDeadCode* _self_, jule::Ptr<_1a686e124_BuiltinAppendCallExprModel> _17830_m) {
	_1a801eb8b_optimize(&(*_self_), _17830_m.get()._field_dest);
	_1a801eb8b_optimize(&(*_self_), _17830_m.get()._field_elements);
}



inline void _1a801db9b_clone_call(_1a8018b41_ExprDeadCode* _self_, jule::Ptr<_1a686d684_BuiltinCloneCallExprModel> _18329_m) {
	_1a801eb8b_optimize(&(*_self_), _18329_m.get()._field_expr);
}



inline void _1a801de21_sizeof(_1a8018b41_ExprDeadCode* _self_, jule::Ptr<_1a686c3ec_SizeofExprModel> _18725_m) {
	_1a801eb8b_optimize(&(*_self_), _18725_m.get()._field_expr);
}



inline void _1a801e196_alignof(_1a8018b41_ExprDeadCode* _self_, jule::Ptr<_1a686eb5d_AlignofExprModel> _19126_m) {
	_1a801eb8b_optimize(&(*_self_), _19126_m.get()._field_expr);
}



inline void _1a801e41b_integrated_to_str(_1a8018b41_ExprDeadCode* _self_, jule::Ptr<_1a6870037_IntegratedToStrExprModel> _19536_m) {
	_1a801eb8b_optimize(&(*_self_), _19536_m.get()._field_expr);
}



inline void _1a801e691_free(_1a8018b41_ExprDeadCode* _self_, jule::Ptr<_1a6870411_FreeExprModel> _19923_m) {
	_1a801eb8b_optimize(&(*_self_), _19923_m.get()._field_expr);
}



inline void _1a801e916_backend_emit(_1a8018b41_ExprDeadCode* _self_, jule::Ptr<_1a6870224_BackendEmitExprModel> _20331_m) {
	_1a801a6d1_args(&(*_self_), _20331_m.get()._field_exprs);
}



inline void _1a801eb8b_optimize(_1a8018b41_ExprDeadCode* _self_, jule::Any& _20728_model) {
	{
		auto &_match_expr{ _20728_model };
		
		if (_match_expr.type_is<jule::Ptr<_1a76edda4_Data>>()) {
			_case_begin_1aa85d065:;
			{
				jule::Ptr<_1a76edda4_Data> _21021_d = _20728_model.operator jule::Ptr<_1a76edda4_Data>();;
				_1a801eb8b_optimize(&(*_self_), _21021_d.get()._field_model);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a684b145_BinopExprModel>>()) {
			_case_begin_1aa85d0cb:;
			{
				_1a8019966_binary(&(*_self_), _20728_model.operator jule::Ptr<_1a684b145_BinopExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6849e79_UnaryExprModel>>()) {
			_case_begin_1aa85d142:;
			{
				_1a8019bdb_unary(&(*_self_), _20728_model.operator jule::Ptr<_1a6849e79_UnaryExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a682b752_StructLitExprModel>>()) {
			_case_begin_1aa85d50a:;
			{
				_1a8019e61_structure_lit(&(*_self_), _20728_model.operator jule::Ptr<_1a682b752_StructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a68225b1_AllocStructLitExprModel>>()) {
			_case_begin_1aa85d571:;
			{
				_1a801a1d6_alloc_structure(&(*_self_), _20728_model.operator jule::Ptr<_1a68225b1_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a684003a_CastingExprModel>>()) {
			_case_begin_1aa85d5d7:;
			{
				_1a801a45b_casting(&(*_self_), _20728_model.operator jule::Ptr<_1a684003a_CastingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6845150_FnCallExprModel>>()) {
			_case_begin_1aa85d64d:;
			{
				_1a801a956_func_call(&(*_self_), _20728_model.operator jule::Ptr<_1a6845150_FnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a684533c_SliceExprModel>>()) {
			_case_begin_1aa85d6c5:;
			{
				_1a801abcb_slice(&(*_self_), _20728_model.operator jule::Ptr<_1a684533c_SliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a686ca07_ArrayExprModel>>()) {
			_case_begin_1aa85d74c:;
			{
				_1a801ae51_array(&(*_self_), _20728_model.operator jule::Ptr<_1a686ca07_ArrayExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a686b770_IndexingExprModel>>()) {
			_case_begin_1aa85d7c4:;
			{
				_1a801b1c6_indexing(&(*_self_), _20728_model.operator jule::Ptr<_1a686b770_IndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a686b95c_AnonFnExprModel>>()) {
			_case_begin_1aa85d84b:;
			{
				_1a801b44b_anon_func(&(*_self_), _20728_model.operator jule::Ptr<_1a686b95c_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a686bd36_MapExprModel>>()) {
			_case_begin_1aa85d8c3:;
			{
				_1a801b6c1_map(&(*_self_), _20728_model.operator jule::Ptr<_1a686bd36_MapExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a686c023_SlicingExprModel>>()) {
			_case_begin_1aa85d94a:;
			{
				_1a801b946_slicing(&(*_self_), _20728_model.operator jule::Ptr<_1a686c023_SlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a686c210_TraitSubIdentExprModel>>()) {
			_case_begin_1aa85d9c2:;
			{
				_1a801bbbb_trait_sub(&(*_self_), _20728_model.operator jule::Ptr<_1a686c210_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a686c62d_StructSubIdentExprModel>>()) {
			_case_begin_1aa85da49:;
			{
				_1a801be41_structure_sub(&(*_self_), _20728_model.operator jule::Ptr<_1a686c62d_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a686cdd1_CommonSubIdentExprModel>>()) {
			_case_begin_1aa85dac1:;
			{
				_1a801c1b6_common_sub(&(*_self_), _20728_model.operator jule::Ptr<_1a686cdd1_CommonSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a686d0bd_TupleExprModel>>()) {
			_case_begin_1aa85db48:;
			{
				_1a801c43b_tuple(&(*_self_), _20728_model.operator jule::Ptr<_1a686d0bd_TupleExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a686d2aa_BuiltinOutCallExprModel>>()) {
			_case_begin_1aa85dbc0:;
			{
				_1a801c936_out_call(&(*_self_), _20728_model.operator jule::Ptr<_1a686d2aa_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a686d497_BuiltinOutlnCallExprModel>>()) {
			_case_begin_1aa85dc47:;
			{
				_1a801cbab_outln_call(&(*_self_), _20728_model.operator jule::Ptr<_1a686d497_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a686d871_BuiltinNewCallExprModel>>()) {
			_case_begin_1aa85dcbe:;
			{
				_1a801c6b1_new_call(&(*_self_), _20728_model.operator jule::Ptr<_1a686d871_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a686da5d_BuiltinPanicCallExprModel>>()) {
			_case_begin_1aa85dd46:;
			{
				_1a801ce31_panic_call(&(*_self_), _20728_model.operator jule::Ptr<_1a686da5d_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a686dc4a_BuiltinAssertCallExprModel>>()) {
			_case_begin_1aa85ddbd:;
			{
				_1a801d1a6_assert_call(&(*_self_), _20728_model.operator jule::Ptr<_1a686dc4a_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a686e4ed_BuiltinErrorCallExprModel>>()) {
			_case_begin_1aa85de45:;
			{
				_1a801d42b_error_call(&(*_self_), _20728_model.operator jule::Ptr<_1a686e4ed_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a686de37_BuiltinMakeCallExprModel>>()) {
			_case_begin_1aa85debc:;
			{
				_1a801d6a1_make_call(&(*_self_), _20728_model.operator jule::Ptr<_1a686de37_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a686e124_BuiltinAppendCallExprModel>>()) {
			_case_begin_1aa85e044:;
			{
				_1a801d926_append_call(&(*_self_), _20728_model.operator jule::Ptr<_1a686e124_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a686d684_BuiltinCloneCallExprModel>>()) {
			_case_begin_1aa85e0bb:;
			{
				_1a801db9b_clone_call(&(*_self_), _20728_model.operator jule::Ptr<_1a686d684_BuiltinCloneCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a686c3ec_SizeofExprModel>>()) {
			_case_begin_1aa85e143:;
			{
				_1a801de21_sizeof(&(*_self_), _20728_model.operator jule::Ptr<_1a686c3ec_SizeofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a686eb5d_AlignofExprModel>>()) {
			_case_begin_1aa85e1ba:;
			{
				_1a801e196_alignof(&(*_self_), _20728_model.operator jule::Ptr<_1a686eb5d_AlignofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6870037_IntegratedToStrExprModel>>()) {
			_case_begin_1aa85e242:;
			{
				_1a801e41b_integrated_to_str(&(*_self_), _20728_model.operator jule::Ptr<_1a6870037_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6870411_FreeExprModel>>()) {
			_case_begin_1aa85e2b9:;
			{
				_1a801e691_free(&(*_self_), _20728_model.operator jule::Ptr<_1a6870411_FreeExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6870224_BackendEmitExprModel>>()) {
			_case_begin_1aa85e341:;
			{
				_1a801e916_backend_emit(&(*_self_), _20728_model.operator jule::Ptr<_1a6870224_BackendEmitExprModel>());
			}
		}
		_match_end_1aa85d010:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a8018b41_ExprDeadCode _Src) {
	_Stream << "ExprDeadCode{";
	_Stream << "s:" << _Src._field_s;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a52de106_UnsafeBinopExprModel _Src) {
	_Stream << "UnsafeBinopExprModel{";
	_Stream << "node:" << _Src._field_node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a55c5695_UnsafeIndexingExprModel _Src) {
	_Stream << "UnsafeIndexingExprModel{";
	_Stream << "node:" << _Src._field_node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a55c2263_PushToSliceExprModel _Src) {
	_Stream << "PushToSliceExprModel{";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a65b8764_MutSlicingExprModel _Src) {
	_Stream << "MutSlicingExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a534733a_StrInsertBeginExprModel _Src) {
	_Stream << "StrInsertBeginExprModel{";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a55c39a1_ScopeOptimizer> static__1a52ac46a_new(jule::Ptr<_1a7658803_Scope> _4527_scope) {
	return jule::new_ptr<_1a55c39a1_ScopeOptimizer>(_1a55c39a1_ScopeOptimizer{._field_scope=_4527_scope});
}



inline void _1a52aeb10_set_current_stmt(_1a55c39a1_ScopeOptimizer* _self_, jule::Any _5139_stmt) {
	(*_self_)._field_scope.get()._field_stmts[(*_self_)._field_i]=jule::Any(_5139_stmt);
}



inline void _1a52b0c32_optimize_data(_1a55c39a1_ScopeOptimizer* _self_, jule::Ptr<_1a76edda4_Data> _5536_d) {
	{
		auto &_match_expr{ _5536_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1a6845150_FnCallExprModel>>()) {
			_case_begin_1aa87a66a:;
			{
				jule::Ptr<_1a6845150_FnCallExprModel> _5821_m = _5536_d.get()._field_model.operator jule::Ptr<_1a6845150_FnCallExprModel>();;
				if (_1e0ca2c16_PRODUCTION) {
					if (((!(_1a6873a1e_is_builtin(_5821_m.get()._field_func.ptr()))) && _1a53d114e_is_std_package(_5821_m.get()._field_func.get()._field_decl.get()._field_token.get()._field_file.get()._field_path,jule::Str("debug", 5)))) {
						_1a52aeb10_set_current_stmt(&(*_self_), nullptr);
						return;;
					};
				};
			}
		}
		_match_end_1aa87a5d2:;
	};
	static__1a541dac6_optimize(_5536_d.get()._field_model);
}



inline void _1a52b1c99_optimize_var(_1a55c39a1_ScopeOptimizer* _self_, jule::Ptr<_1a76a7720_Var> _7035_v) {
	if ((_7035_v.get()._field_value != nullptr)) {
		static__1a541dac6_optimize(_7035_v.get()._field_value.get()._field_data.get()._field_model);
	};
}



inline void _1a52c11e8_optimize_conditional(_1a55c39a1_ScopeOptimizer* _self_, jule::Ptr<_1a7609e69_Conditional> _7643_c) {
	{
		auto &expr = _7643_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_1aa87e916:;
		if (it != expr.end()) {
			jule::Ptr<_1a7660200_If> _7721_elif = *it;
			{
				static__1a541dac6_optimize(_7721_elif.get()._field_expr);
				_1a532757e_optimize_child(&(*_self_), _7721_elif.get()._field_scope);
			}
			_iter_next_1aa87e916:;
			++it;
			goto _iter_begin_1aa87e916;
		}
		_iter_end_1aa87e916:;
	};
	if ((_7643_c.get()._field_default != nullptr)) {
		_1a532757e_optimize_child(&(*_self_), _7643_c.get()._field_default.get()._field_scope);
	};
	if ((!(_1a532569d_COND))) {
		return;;
	};
	jule::Bool _8917_const_case = false;;
	{
		auto &expr = _7643_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_1aa881e46:;
		if (it != expr.end()) {
			jule::I64 _9214_i = it - expr.begin();
			jule::Ptr<_1a7660200_If> _9221_elif = *it;
			{
				if ((!(_1a53db3e0_is_constant_valid_conditional_case(_9221_elif)))) {
					goto _iter_next_1aa881e46;
				};
				_8917_const_case=true;
				_7643_c.get()._field_elifs=_7643_c.get()._field_elifs.slice(0LL,_9214_i);
				_7643_c.get()._field_default=jule::new_ptr<_1a7609c7c_Else>(_1a7609c7c_Else{._field_scope=_9221_elif.get()._field_scope});
				goto _iter_end_1aa881e46;
			}
			_iter_next_1aa881e46:;
			++it;
			_9214_i++;
			goto _iter_begin_1aa881e46;
		}
		_iter_end_1aa881e46:;
	};
	if ((_7643_c.get()._field_elifs.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1a7660200_If>* _10917_i = (&(_7643_c.get()._field_elifs[0LL]));;
	jule::Ptr<_1a7660200_If>* _11013_end = (&(_7643_c.get()._field_elifs[(_7643_c.get()._field_elifs.len() - 1LL)]));;
	for (; (_10917_i <= _11013_end); (_10917_i)++) {
		{
			{
				if (_1a54150a6_is_unreachable_conditional_case((*(_10917_i)))) {
					(*(_10917_i))=nullptr;
				};
			};
		}
	_iter_next_1aa884dd3:;
	}
	_iter_end_1aa884dd3:;;
	if ((_7643_c.get()._field_elifs.len() == 0LL)) {
		return;;
	};
	if ((!(_8917_const_case))) {
		return;;
	};
	jule::I64 _12817_only = -1LL;;
	{
		auto &expr = _7643_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_1aa8866a9:;
		if (it != expr.end()) {
			jule::I64 _12913_j = it - expr.begin();
			jule::Ptr<_1a7660200_If> _12916_elif = *it;
			{
				if ((_12916_elif != nullptr)) {
					if ((_12817_only != -1LL)) {
						return;;
					};
					_12817_only=_12913_j;
				};
			}
			_iter_next_1aa8866a9:;
			++it;
			_12913_j++;
			goto _iter_begin_1aa8866a9;
		}
		_iter_end_1aa8866a9:;
	};
	if ((_12817_only != -1LL)) {
		_1a52aeb10_set_current_stmt(&(*_self_), jule::Any(_7643_c.get()._field_elifs[_12817_only].get()._field_scope));
	};
}



inline void _1a52c2749_build_default_constat_true_case(_1a55c39a1_ScopeOptimizer* _self_, jule::Ptr<_1a766d8d4_Case> _14554_case, jule::I64& _14572_i, jule::Ptr<_1a766d4b6_Match>& _14585_m) {
	_14554_case.get()._field_exprs=nullptr;
	jule::I64 _14713_start = _14572_i;;
	_julec_label_loop:;
	for (;;) {
		{
			if ((_14554_case.get()._field_scope.get()._field_stmts.len() == 0LL)) {
				goto _iter_end_1aa88936b;
			};
			jule::Any &_15322_stmt = _14554_case.get()._field_scope.get()._field_stmts[(_14554_case.get()._field_scope.get()._field_stmts.len() - 1LL)];;
			{
				auto &_match_expr{ _15322_stmt };
				
				if (_match_expr.type_is<jule::Ptr<_1a766dac1_FallSt>>()) {
					_case_begin_1aa88b208:;
					{
						(_14572_i)++;
						if ((_14572_i >= _14585_m.get()._field_cases.len())) {
							_15322_stmt=jule::Any(_14585_m.get()._field_default.get()._field_scope);
							goto _iter_end_1aa88936b;
						};
						_14554_case=_14585_m.get()._field_cases[_14572_i];
						_15322_stmt=jule::Any(_14554_case.get()._field_scope);
					}
				}
				else {
					_case_begin_1aa88b0a4:;
					{
						goto _iter_end_1aa88936b;
					}
				}
				_match_end_1aa88b04e:;
			};
		}
	_iter_next_1aa88936b:;
	}
	_iter_end_1aa88936b:;;
	_14585_m.get()._field_default=_14585_m.get()._field_cases[_14713_start];
	_14585_m.get()._field_cases=_14585_m.get()._field_cases.slice(0LL,_14713_start);
}



inline void _1a52d950d_optimize_match(_1a55c39a1_ScopeOptimizer* _self_, jule::Ptr<_1a766d4b6_Match> _17137_m) {
	{
		auto &expr = _17137_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1aa88d6e4:;
		if (it != expr.end()) {
			jule::Ptr<_1a766d8d4_Case> _17221_case = *it;
			{
				{
					auto &expr = _17221_case.get()._field_exprs;
					auto it = expr.begin();
					_iter_begin_1aa88deb9:;
					if (it != expr.end()) {
						jule::Ptr<_1a76edda4_Data> _17325_expr = *it;
						{
							static__1a541dac6_optimize(_17325_expr.get()._field_model);
						}
						_iter_next_1aa88deb9:;
						++it;
						goto _iter_begin_1aa88deb9;
					}
					_iter_end_1aa88deb9:;
				};
				_1a532757e_optimize_child(&(*_self_), _17221_case.get()._field_scope);
			}
			_iter_next_1aa88d6e4:;
			++it;
			goto _iter_begin_1aa88d6e4;
		}
		_iter_end_1aa88d6e4:;
	};
	if ((_17137_m.get()._field_default != nullptr)) {
		_1a532757e_optimize_child(&(*_self_), _17137_m.get()._field_default.get()._field_scope);
	};
	if ((!(_1a532569d_COND))) {
		return;;
	};
	jule::Bool _18617_const_case = false;;
	{
		auto &expr = _17137_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1aa890bad:;
		if (it != expr.end()) {
			jule::I64 _18918_i = it - expr.begin();
			jule::Ptr<_1a766d8d4_Case> _18925_case = *it;
			{
				if ((!(_1a54008aa_is_constant_valid_match_case(_18925_case)))) {
					goto _iter_next_1aa890bad;
				};
				_18617_const_case=true;
				_1a52c2749_build_default_constat_true_case(&(*_self_), _18925_case,_18918_i,_17137_m);
				goto _iter_end_1aa890bad;
			}
			_iter_next_1aa890bad:;
			++it;
			_18918_i++;
			goto _iter_begin_1aa890bad;
		}
		_iter_end_1aa890bad:;
	};
	if ((_17137_m.get()._field_cases.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1a766d8d4_Case>* _20317_i = (&(_17137_m.get()._field_cases[0LL]));;
	jule::Ptr<_1a766d8d4_Case>* _20413_end = (&(_17137_m.get()._field_cases[(_17137_m.get()._field_cases.len() - 1LL)]));;
	for (; (_20317_i <= _20413_end); (_20317_i)++) {
		{
			{
				if (_1a541b6ea_is_unreachable_match_case((*(_20317_i)))) {
					(*(_20317_i))=nullptr;
				};
			};
		}
	_iter_next_1aa89381a:;
	}
	_iter_end_1aa89381a:;;
	if ((!(_18617_const_case))) {
		return;;
	};
	jule::I64 _21817_only = -1LL;;
	{
		auto &expr = _17137_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1aa894a5d:;
		if (it != expr.end()) {
			jule::I64 _21913_j = it - expr.begin();
			jule::Ptr<_1a766d8d4_Case> _21916_case = *it;
			{
				if ((_21916_case != nullptr)) {
					if ((_21817_only != -1LL)) {
						return;;
					};
					_21817_only=_21913_j;
				};
			}
			_iter_next_1aa894a5d:;
			++it;
			_21913_j++;
			goto _iter_begin_1aa894a5d;
		}
		_iter_end_1aa894a5d:;
	};
	if ((_21817_only != -1LL)) {
		_1a52aeb10_set_current_stmt(&(*_self_), jule::Any(_17137_m.get()._field_cases[_21817_only].get()._field_scope));
	};
}



inline void _1a52dad4a_optimize_range_iter(_1a55c39a1_ScopeOptimizer* _self_, jule::Ptr<_1a7648b23_RangeIter> _23542_it) {
	static__1a541dac6_optimize(_23542_it.get()._field_expr.get()._field_model);
	_1a532757e_optimize_child(&(*_self_), _23542_it.get()._field_scope);
}



inline void _1a52dd8ca_optimize_while_iter(_1a55c39a1_ScopeOptimizer* _self_, jule::Ptr<_1a761ac7c_WhileIter> _24042_it) {
	static__1a541dac6_optimize(_24042_it.get()._field_expr);
	_1a52e6064_optimize_stmt(&(*_self_), jule::Any(_24042_it.get()._field_next));
	_1a532757e_optimize_child(&(*_self_), _24042_it.get()._field_scope);
}



inline jule::Bool _1a52e035a_substr(_1a55c39a1_ScopeOptimizer* _self_, jule::Ptr<_1a766d0dc_Assign> _24629_a) {
	{
		auto &_match_expr{ _24629_a.get()._field_r.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1a686c023_SlicingExprModel>>()) {
			_case_begin_1aa89a25b:;
			{
				jule::Ptr<_1a686c023_SlicingExprModel> _24921_sem = _24629_a.get()._field_r.get()._field_model.operator jule::Ptr<_1a686c023_SlicingExprModel>();;
				if ((_24921_sem.get()._field_expr == _24629_a.get()._field_l.get()._field_model)) {
					_1a52aeb10_set_current_stmt(&(*_self_), jule::Any(jule::new_ptr<_1a65b8764_MutSlicingExprModel>(_1a65b8764_MutSlicingExprModel{._field_token=_24921_sem.get()._field_token, ._field_expr=jule::Any(_24921_sem.get()._field_expr), ._field_left=jule::Any(_24921_sem.get()._field_left), ._field_right=jule::Any(_24921_sem.get()._field_right)})));
					return true;
				};
			}
		}
		_match_end_1aa89a1c3:;
	};
	return false;
}



inline jule::Bool _1a52e0d94_str_insert(_1a55c39a1_ScopeOptimizer* _self_, jule::Ptr<_1a766d0dc_Assign> _26333_a) {
	{
		auto &_match_expr{ _26333_a.get()._field_r.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1a684b145_BinopExprModel>>()) {
			_case_begin_1aa89ccec:;
			{
				jule::Ptr<_1a684b145_BinopExprModel> _26621_m = _26333_a.get()._field_r.get()._field_model.operator jule::Ptr<_1a684b145_BinopExprModel>();;
				if ((_26621_m.get()._field_right.get()._field_model == _26333_a.get()._field_l.get()._field_model)) {
					_1a52aeb10_set_current_stmt(&(*_self_), jule::Any(jule::new_ptr<_1a534733a_StrInsertBeginExprModel>(_1a534733a_StrInsertBeginExprModel{._field_dest=jule::Any(_26333_a.get()._field_l.get()._field_model), ._field_expr=jule::Any(_26621_m.get()._field_left.get()._field_model)})));
					return true;
				};
			}
		}
		_match_end_1aa89cc64:;
	};
	return false;
}



inline jule::Bool _1a52e1845_str_assign(_1a55c39a1_ScopeOptimizer* _self_, jule::Ptr<_1a766d0dc_Assign> _27833_a) {
	if ((_27833_a.get()._field_op.get()._field_kind != jule::Str("=", 1))) {
		return false;
	};
	jule::Ptr<_1a772c135_Prim> _28213_lp = _1a7729990_prim(_27833_a.get()._field_l.get()._field_kind.ptr());;
	if (((_28213_lp == nullptr) || (!(_1a77300e4_is_str(_28213_lp.ptr()))))) {
		return false;
	};
	{
		
		if (_1a52e035a_substr(&(*_self_), _27833_a) || _1a52e0d94_str_insert(&(*_self_), _27833_a)) {
			_case_begin_1aa8a1c46:;
			{
				return true;
			}
		}
		_match_end_1aa8a1bad:;
	};
	return false;
}



inline void _1a52de898_optimize_assign(_1a55c39a1_ScopeOptimizer* _self_, jule::Ptr<_1a766d0dc_Assign> _29438_assign) {
	if ((_1a52b4c58_COPY && _1a52e1845_str_assign(&(*_self_), _29438_assign))) {
		return;;
	};
	static__1a541dac6_optimize(_29438_assign.get()._field_l.get()._field_model);
	static__1a541dac6_optimize(_29438_assign.get()._field_r.get()._field_model);
	{
		auto &_match_expr{ _29438_assign.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("/=", 2) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_1aa8a34d9:;
			{
				if ((_1a52ba951_MATH && (_1a772ab7d_strct(_29438_assign.get()._field_l.get()._field_kind.ptr()) == nullptr))) {
					_29438_assign.get()._field_op.get()._field_kind=_29438_assign.get()._field_op.get()._field_kind.slice(0LL,(_29438_assign.get()._field_op.get()._field_kind.len() - 1LL));
					jule::Any _30725_model = jule::Any(jule::new_ptr<_1a684b145_BinopExprModel>(_1a684b145_BinopExprModel{._field_left=_29438_assign.get()._field_l, ._field_right=_29438_assign.get()._field_r, ._field_op=_29438_assign.get()._field_op}));;
					static__1a541dac6_optimize(_30725_model);
					{
						auto &_match_expr{ _30725_model };
						
						if (_match_expr.type_is<jule::Ptr<_1a684b145_BinopExprModel>>()) {
							_case_begin_1aa8a6850:;
							{
								_29438_assign.get()._field_r=jule::new_ptr<_1a68382db_OperandExprModel>((*(_29438_assign.get()._field_r)));
								_29438_assign.get()._field_op.get()._field_kind=jule::Str("=", 1);
								_29438_assign.get()._field_r.get()._field_model=jule::Any(_30725_model);
								return;;
							}
						}
						_match_end_1aa8a6674:;
					};
					_29438_assign.get()._field_op.get()._field_kind+=jule::Str("=", 1);
					return;;
				};
			}
		}
		_match_end_1aa8a4364:;
	};
	if (_1a52b7a3b_APPEND) {
		{
			auto &_match_expr{ _29438_assign.get()._field_r.get()._field_model };
			
			if (_match_expr.type_is<jule::Ptr<_1a686e124_BuiltinAppendCallExprModel>>()) {
				_case_begin_1aa8a8467:;
				{
					jule::Ptr<_1a686e124_BuiltinAppendCallExprModel> _32825_m = _29438_assign.get()._field_r.get()._field_model.operator jule::Ptr<_1a686e124_BuiltinAppendCallExprModel>();;
					{
						auto &_match_expr{ _32825_m.get()._field_elements };
						
						if (_match_expr.type_is<jule::Ptr<_1a684533c_SliceExprModel>>()) {
							_case_begin_1aa8a9512:;
							{
								{
									auto &_match_expr{ _32825_m.get()._field_dest };
									
									if (_match_expr.type_is<jule::Ptr<_1a76a7720_Var>>() || _match_expr.type_is<jule::Ptr<_1a686c62d_StructSubIdentExprModel>>()) {
										_case_begin_1aa8a9c93:;
										{
											_1a52aeb10_set_current_stmt(&(*_self_), jule::Any(jule::new_ptr<_1a55c2263_PushToSliceExprModel>(_1a55c2263_PushToSliceExprModel{._field_dest=jule::Any(_32825_m.get()._field_dest), ._field_elems=_32825_m.get()._field_elements.operator jule::Ptr<_1a684533c_SliceExprModel>()})));
										}
									}
									_match_end_1aa8a9c0a:;
								};
							}
						}
						_match_end_1aa8a2593:;
					};
				}
			}
			_match_end_1aa8a83ac:;
		};
	};
}



inline void _1a52deba6_optimize_multi_assign(_1a55c39a1_ScopeOptimizer* _self_, jule::Ptr<_1a766d2c9_MultiAssign> _34444_assign) {
	{
		auto &expr = _34444_assign.get()._field_l;
		auto it = expr.begin();
		_iter_begin_1aa8aa359:;
		if (it != expr.end()) {
			jule::I64 _34514_i = it - expr.begin();
			jule::Any _34521_l = *it;
			{
				if ((_34521_l != nullptr)) {
					static__1a541dac6_optimize(_34521_l);
					_34444_assign.get()._field_l[_34514_i]=jule::Any(_34521_l);
				};
			}
			_iter_next_1aa8aa359:;
			++it;
			_34514_i++;
			goto _iter_begin_1aa8aa359;
		}
		_iter_end_1aa8aa359:;
	};
	static__1a541dac6_optimize(_34444_assign.get()._field_r);
}



inline void _1a52e5805_optimize_ret(_1a55c39a1_ScopeOptimizer* _self_, jule::Ptr<_1a766dcad_RetSt> _35435_r) {
	static__1a541dac6_optimize(_35435_r.get()._field_expr);
}



inline void _1a52e6064_optimize_stmt(_1a55c39a1_ScopeOptimizer* _self_, jule::Any _35836_stmt) {
	{
		auto &_match_expr{ _35836_stmt };
		
		if (_match_expr.type_is<jule::Ptr<_1a7658803_Scope>>()) {
			_case_begin_1aa8ad34b:;
			{
				_1a532757e_optimize_child(&(*_self_), _35836_stmt.operator jule::Ptr<_1a7658803_Scope>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a76edda4_Data>>()) {
			_case_begin_1aa8ad3c3:;
			{
				_1a52b0c32_optimize_data(&(*_self_), _35836_stmt.operator jule::Ptr<_1a76edda4_Data>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a76a7720_Var>>()) {
			_case_begin_1aa8ad439:;
			{
				_1a52b1c99_optimize_var(&(*_self_), _35836_stmt.operator jule::Ptr<_1a76a7720_Var>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a7609e69_Conditional>>()) {
			_case_begin_1aa8ad4a0:;
			{
				_1a52c11e8_optimize_conditional(&(*_self_), _35836_stmt.operator jule::Ptr<_1a7609e69_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a7648b23_RangeIter>>()) {
			_case_begin_1aa8ad527:;
			{
				_1a52dad4a_optimize_range_iter(&(*_self_), _35836_stmt.operator jule::Ptr<_1a7648b23_RangeIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a761ac7c_WhileIter>>()) {
			_case_begin_1aa8ad59e:;
			{
				_1a52dd8ca_optimize_while_iter(&(*_self_), _35836_stmt.operator jule::Ptr<_1a761ac7c_WhileIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a761aa90_InfIter>>()) {
			_case_begin_1aa8ad626:;
			{
				_1a532757e_optimize_child(&(*_self_), _35836_stmt.operator jule::Ptr<_1a761aa90_InfIter>().get()._field_scope);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a766d0dc_Assign>>()) {
			_case_begin_1aa8ad69d:;
			{
				_1a52de898_optimize_assign(&(*_self_), _35836_stmt.operator jule::Ptr<_1a766d0dc_Assign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a766d2c9_MultiAssign>>()) {
			_case_begin_1aa8ad725:;
			{
				_1a52deba6_optimize_multi_assign(&(*_self_), _35836_stmt.operator jule::Ptr<_1a766d2c9_MultiAssign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a766d4b6_Match>>()) {
			_case_begin_1aa8ad79c:;
			{
				_1a52d950d_optimize_match(&(*_self_), _35836_stmt.operator jule::Ptr<_1a766d4b6_Match>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a766dcad_RetSt>>()) {
			_case_begin_1aa8ad824:;
			{
				_1a52e5805_optimize_ret(&(*_self_), _35836_stmt.operator jule::Ptr<_1a766dcad_RetSt>());
			}
		}
		_match_end_1aa8ad219:;
	};
}



inline void _1a532757e_optimize_child(_1a55c39a1_ScopeOptimizer* _self_, jule::Ptr<_1a7658803_Scope> _38537_child) {
	jule::Ptr<_1a55c39a1_ScopeOptimizer> _38617_so = static__1a52ac46a_new(_38537_child);;
	_1a53c9961_optimize(_38617_so.ptr());
}



inline void _1a53c9961_optimize(_1a55c39a1_ScopeOptimizer* _self_) {
	{
		auto &expr = (*_self_)._field_scope.get()._field_stmts;
		auto it = expr.begin();
		_iter_begin_1aa8b5485:;
		if (it != expr.end()) {
			jule::I64 _39214_i = it - expr.begin();
			jule::Any _39221_stmt = *it;
			{
				(*_self_)._field_i=_39214_i;
				_1a52e6064_optimize_stmt(&(*_self_), jule::Any(_39221_stmt));
			}
			_iter_next_1aa8b5485:;
			++it;
			_39214_i++;
			goto _iter_begin_1aa8b5485;
		}
		_iter_end_1aa8b5485:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a55c39a1_ScopeOptimizer _Src) {
	_Stream << "ScopeOptimizer{";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline void static__1a541dac6_optimize(jule::Any& _5533_model) {
	if (_1a7e2b207_expr_enabled) {
		jule::Ptr<_1a5775218_ExprOptimizer> _5821_exop = jule::new_ptr<_1a5775218_ExprOptimizer>(_1a5775218_ExprOptimizer{._field_model=((jule::Ptr<jule::Any>)((&(_5533_model))))});;
		_1a57b1a29_do(_5821_exop.ptr());
	};
}



inline jule::Bool _1a5422e0a_str_cond(_1a5775218_ExprOptimizer* _self_, jule::Ptr<_1a684b145_BinopExprModel> _6527_m) {
	jule::Ptr<_1a772c135_Prim> _6613_lp = _1a7729990_prim(_6527_m.get()._field_left.get()._field_kind.ptr());;
	if (((_6613_lp == nullptr) || (!(_1a77300e4_is_str(_6613_lp.ptr()))))) {
		return false;
	};
	if (((_6527_m.get()._field_op.get()._field_kind != jule::Str("==", 2)) && (_6527_m.get()._field_op.get()._field_kind != jule::Str("!=", 2)))) {
		return false;
	};
	{
		auto &_match_expr{ _6527_m.get()._field_left.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1a75c3251_Const>>()) {
			_case_begin_1aa8c198b:;
			{
				std::tie(_6527_m.get()._field_left,_6527_m.get()._field_right) = std::make_tuple(_6527_m.get()._field_right,_6527_m.get()._field_left);
				goto _julec_label_opt;
			}
		}
		_match_end_1aa8c18d1:;
	};
	{
		auto &_match_expr{ _6527_m.get()._field_right.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1a75c3251_Const>>()) {
			_case_begin_1aa8c10ea:;
			{
				goto _match_end_1aa8c28d2;
			}
		}
		else {
			_case_begin_1aa8c296a:;
			{
				return true;
			}
		}
		_match_end_1aa8c28d2:;
	};
	_julec_label_opt:;
	jule::Ptr<_1a75c3251_Const> _8513_c = _6527_m.get()._field_right.get()._field_model.operator jule::Ptr<_1a75c3251_Const>();;
	if ((!(_1a75c4c14_read_str(_8513_c.ptr()).empty()))) {
		return false;
	};
	{
		auto &_match_expr{ _6527_m.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_1aa8c3c57:;
			{
				(*((*_self_)._field_model))=jule::Any(jule::new_ptr<_1a686cdd1_CommonSubIdentExprModel>(_1a686cdd1_CommonSubIdentExprModel{._field_expr_kind=_6527_m.get()._field_left.get()._field_kind, ._field_expr=jule::Any(_6527_m.get()._field_left.get()._field_model), ._field_ident=jule::Str("empty()", 7)}));
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_1aa8c40cb:;
			{
				jule::Ptr<_1a527737a_Token> _9721_op = _6527_m.get()._field_op;;
				_9721_op.get()._field_kind=jule::Str("!", 1);
				(*((*_self_)._field_model))=jule::Any(jule::new_ptr<_1a6849e79_UnaryExprModel>(_1a6849e79_UnaryExprModel{._field_expr=jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_model=jule::Any(jule::new_ptr<_1a686cdd1_CommonSubIdentExprModel>(_1a686cdd1_CommonSubIdentExprModel{._field_expr_kind=_6527_m.get()._field_left.get()._field_kind, ._field_expr=jule::Any(_6527_m.get()._field_left.get()._field_model), ._field_ident=jule::Str("empty()", 7)})), }), ._field_op=_9721_op}));
			}
		}
		_match_end_1aa8c4032:;
	};
	return true;
}



inline void _1a55b1b48_binary(_1a5775218_ExprOptimizer* _self_, jule::Ptr<_1a684b145_BinopExprModel> _11325_m) {
	static__1a541dac6_optimize(_11325_m.get()._field_left.get()._field_model);
	static__1a541dac6_optimize(_11325_m.get()._field_right.get()._field_model);
	{
		auto &_match_expr{ _11325_m.get()._field_right.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1a75c3251_Const>>()) {
			_case_begin_1aa8c750d:;
			{
				goto _match_end_1aa8c8278;
			}
		}
		else {
			_case_begin_1aa8c8333:;
			{
				return;;
			}
		}
		_match_end_1aa8c8278:;
	};
	if ((_1a532569d_COND && _1a5422e0a_str_cond(&(*_self_), _11325_m))) {
		return;;
	};
	if ((!(_1a52ba951_MATH))) {
		return;;
	};
	{
		auto &_match_expr{ _11325_m.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1aa8c9136:;
			{
				jule::Bool _13318_ok;;
				jule::U64 _13322_x;;
				std::tie(_13318_ok,_13322_x) = _1a59738ab_check_for_bit_shift_opt(_11325_m.get()._field_left,_11325_m.get()._field_right);
				if (_13318_ok) {
					_11325_m.get()._field_op.get()._field_kind=jule::Str("<<", 2);
					jule::Ptr<_1a75c3251_Const> _13625_c = _11325_m.get()._field_right.get()._field_model.operator jule::Ptr<_1a75c3251_Const>();;
					_1a75c5bb0_set_u64(_13625_c.ptr(), _13322_x);
					return;;
				};
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1aa8c9455:;
			{
				jule::Bool _14118_ok;;
				jule::U64 _14122_x;;
				std::tie(_14118_ok,_14122_x) = _1a59738ab_check_for_bit_shift_opt(_11325_m.get()._field_left,_11325_m.get()._field_right);
				if (_14118_ok) {
					_11325_m.get()._field_op.get()._field_kind=jule::Str(">>", 2);
					jule::Ptr<_1a75c3251_Const> _14425_c = _11325_m.get()._field_right.get()._field_model.operator jule::Ptr<_1a75c3251_Const>();;
					_1a75c5bb0_set_u64(_14425_c.ptr(), _14122_x);
					return;;
				};
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1aa8c94bb:;
			{
				jule::Ptr<_1a75c3251_Const> _14921_c = _11325_m.get()._field_right.get()._field_model.operator jule::Ptr<_1a75c3251_Const>();;
				jule::F64 _15017_d = _1a75c56b5_as_f64(_14921_c.ptr());;
				if ((_15017_d == 2LL)) {
					_11325_m.get()._field_op.get()._field_kind=jule::Str("&", 1);
					_1a75c593a_set_i64(_14921_c.ptr(), 1LL);
				};
			}
		}
		_match_end_1aa8c92bd:;
	};
	(*((*_self_)._field_model))=jule::Any(jule::new_ptr<_1a52de106_UnsafeBinopExprModel>(_1a52de106_UnsafeBinopExprModel{._field_node=_11325_m}));
}



inline void _1a55bdaab_unary(_1a5775218_ExprOptimizer* _self_, jule::Ptr<_1a6849e79_UnaryExprModel> _16124_m) {
	static__1a541dac6_optimize(_16124_m.get()._field_expr.get()._field_model);
	if ((_1a532205c_PTR && (_16124_m.get()._field_op.get()._field_kind == jule::Str("*", 1)))) {
		{
			auto &_match_expr{ _16124_m.get()._field_expr.get()._field_model };
			
			if (_match_expr.type_is<jule::Ptr<_1a6849e79_UnaryExprModel>>()) {
				_case_begin_1aa8d147e:;
				{
					jule::Ptr<_1a6849e79_UnaryExprModel> _16625_um = _16124_m.get()._field_expr.get()._field_model.operator jule::Ptr<_1a6849e79_UnaryExprModel>();;
					if ((_16625_um.get()._field_op.get()._field_kind == jule::Str("&", 1))) {
						(*((*_self_)._field_model))=jule::Any(_16625_um.get()._field_expr.get()._field_model);
					};
				}
			}
			_match_end_1aa8d13e6:;
		};
	};
}



inline void _1a55c0c45_structure_lit(_1a5775218_ExprOptimizer* _self_, jule::Ptr<_1a682b752_StructLitExprModel> _17432_m) {
	{
		auto &expr = _17432_m.get()._field_args;
		auto it = expr.begin();
		_iter_begin_1aa8d3629:;
		if (it != expr.end()) {
			jule::Ptr<_1a6827e8a_StructArgExprModel> _17521_arg = *it;
			{
				static__1a541dac6_optimize(_17521_arg.get()._field_expr);
			}
			_iter_next_1aa8d3629:;
			++it;
			goto _iter_begin_1aa8d3629;
		}
		_iter_end_1aa8d3629:;
	};
}



inline void _1a55ad2c6_alloc_structure(_1a5775218_ExprOptimizer* _self_, jule::Ptr<_1a68225b1_AllocStructLitExprModel> _18034_m) {
	_1a55c0c45_structure_lit(&(*_self_), _18034_m.get()._field_lit);
}



inline void _1a55c27e6_casting(_1a5775218_ExprOptimizer* _self_, jule::Ptr<_1a684003a_CastingExprModel> _18426_m) {
	static__1a541dac6_optimize(_18426_m.get()._field_expr);
}



inline void _1a55c30cc_args(_1a5775218_ExprOptimizer* _self_, jule::Slice<jule::Any>& _18824_args) {
	{
		auto &expr = _18824_args;
		auto it = expr.begin();
		_iter_begin_1aa8d6077:;
		if (it != expr.end()) {
			jule::I64 _18914_i = it - expr.begin();
			jule::Any _18921_arg = *it;
			{
				static__1a541dac6_optimize(_18921_arg);
				_18824_args[_18914_i]=jule::Any(_18921_arg);
			}
			_iter_next_1aa8d6077:;
			++it;
			_18914_i++;
			goto _iter_begin_1aa8d6077;
		}
		_iter_end_1aa8d6077:;
	};
}



inline void _1a55c430e_scope(_1a5775218_ExprOptimizer* _self_, jule::Ptr<_1a7658803_Scope>& _19525_s) {
	jule::Ptr<_1a55c39a1_ScopeOptimizer> _19617_scopt = static__1a52ac46a_new(_19525_s);;
	_1a53c9961_optimize(_19617_scopt.ptr());
}



inline void _1a55c5233_func_call(_1a5775218_ExprOptimizer* _self_, jule::Ptr<_1a6845150_FnCallExprModel> _20028_m) {
	static__1a541dac6_optimize(_20028_m.get()._field_expr);
	_1a55c30cc_args(&(*_self_), _20028_m.get()._field_args);
	if ((_20028_m.get()._field_except != nullptr)) {
		_1a55c430e_scope(&(*_self_), _20028_m.get()._field_except);
	};
}



inline void _1a55c8ba4_slice(_1a5775218_ExprOptimizer* _self_, jule::Ptr<_1a684533c_SliceExprModel> _20824_m) {
	_1a55c30cc_args(&(*_self_), _20824_m.get()._field_elems);
}



inline void _1a55d6e9d_array(_1a5775218_ExprOptimizer* _self_, jule::Ptr<_1a686ca07_ArrayExprModel> _21224_m) {
	if (((_21224_m.get()._field_elems.len() == 2LL) && (_21224_m.get()._field_elems[1LL] == nullptr))) {
		jule::Any _21421_elem = _21224_m.get()._field_elems[0LL];;
		static__1a541dac6_optimize(_21421_elem);
		_21224_m.get()._field_elems[0LL]=jule::Any(_21421_elem);
	};
	_1a55c30cc_args(&(*_self_), _21224_m.get()._field_elems);
}



inline void _1a55dc05d_indexing(_1a5775218_ExprOptimizer* _self_, jule::Ptr<_1a686b770_IndexingExprModel> _22127_m) {
	static__1a541dac6_optimize(_22127_m.get()._field_expr.get()._field_model);
	static__1a541dac6_optimize(_22127_m.get()._field_index.get()._field_model);
	if ((!(_1a52db92d_ACCESS))) {
		return;;
	};
	jule::Bool _22713_array = (_1a772a441_arr(_22127_m.get()._field_expr.get()._field_kind.ptr()) != nullptr);;
	if ((_22713_array && _1a76ee767_is_const(_22127_m.get()._field_index.ptr()))) {
		(*((*_self_)._field_model))=jule::Any(jule::new_ptr<_1a55c5695_UnsafeIndexingExprModel>(_1a55c5695_UnsafeIndexingExprModel{._field_node=_22127_m}));
		return;;
	};
	{
		auto &_match_expr{ _22127_m.get()._field_index.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1a76a7720_Var>>()) {
			_case_begin_1aa8e0e50:;
			{
				jule::Ptr<_1a76a7720_Var> _23717_i = _22127_m.get()._field_index.get()._field_model.operator jule::Ptr<_1a76a7720_Var>();;
				if ((_23717_i.get()._field_mutable || (_23717_i.get()._field_iter_relation == nullptr))) {
					goto _match_end_1aa8e0da6;
				};
				{
					auto &_match_expr{ _22127_m.get()._field_expr.get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1a76a7720_Var>>()) {
						_case_begin_1aa8e265a:;
						{
							jule::Ptr<_1a76a7720_Var> _24321_r = _22127_m.get()._field_expr.get()._field_model.operator jule::Ptr<_1a76a7720_Var>();;
							if ((_23717_i.get()._field_iter_relation.get()._field_range == _24321_r)) {
								(*((*_self_)._field_model))=jule::Any(jule::new_ptr<_1a55c5695_UnsafeIndexingExprModel>(_1a55c5695_UnsafeIndexingExprModel{._field_node=_22127_m}));
							};
						}
					}
					_match_end_1aa8e25a0:;
				};
			}
		}
		_match_end_1aa8e0da6:;
	};
}



inline void _1a55e2b79_anon_func(_1a5775218_ExprOptimizer* _self_, jule::Ptr<_1a686b95c_AnonFnExprModel> _25428_m) {
	_1a55c430e_scope(&(*_self_), _25428_m.get()._field_func.get()._field_scope);
}



inline void _1a5621658_map(_1a5775218_ExprOptimizer* _self_, jule::Ptr<_1a686bd36_MapExprModel> _25822_m) {
	{
		auto &expr = _25822_m.get()._field_entries;
		auto it = expr.begin();
		_iter_begin_1aa8e51a7:;
		if (it != expr.end()) {
			jule::Ptr<_1a686bb49_KeyValPairExprModel> _25921_pair = *it;
			{
				static__1a541dac6_optimize(_25921_pair.get()._field_key);
				static__1a541dac6_optimize(_25921_pair.get()._field_val);
			}
			_iter_next_1aa8e51a7:;
			++it;
			goto _iter_begin_1aa8e51a7;
		}
		_iter_end_1aa8e51a7:;
	};
}



inline void _1a562596a_slicing(_1a5775218_ExprOptimizer* _self_, jule::Ptr<_1a686c023_SlicingExprModel> _26526_m) {
	static__1a541dac6_optimize(_26526_m.get()._field_expr);
	static__1a541dac6_optimize(_26526_m.get()._field_left);
	if ((_26526_m.get()._field_right != nullptr)) {
		static__1a541dac6_optimize(_26526_m.get()._field_right);
	};
}



inline void _1a560553d_trait_sub(_1a5775218_ExprOptimizer* _self_, jule::Ptr<_1a686c210_TraitSubIdentExprModel> _27328_m) {
	static__1a541dac6_optimize(_27328_m.get()._field_expr);
}



inline void _1a5661ce7_structure_sub(_1a5775218_ExprOptimizer* _self_, jule::Ptr<_1a686c62d_StructSubIdentExprModel> _27732_m) {
	static__1a541dac6_optimize(_27732_m.get()._field_expr.get()._field_model);
}



inline void _1a569dd45_common_sub(_1a5775218_ExprOptimizer* _self_, jule::Ptr<_1a686cdd1_CommonSubIdentExprModel> _28129_m) {
	static__1a541dac6_optimize(_28129_m.get()._field_expr);
}



inline void _1a56a060a_tuple(_1a5775218_ExprOptimizer* _self_, jule::Ptr<_1a686d0bd_TupleExprModel> _28524_m) {
	{
		auto &expr = _28524_m.get()._field_datas;
		auto it = expr.begin();
		_iter_begin_1aa8ea2cd:;
		if (it != expr.end()) {
			jule::Ptr<_1a76edda4_Data> _28621_d = *it;
			{
				static__1a541dac6_optimize(_28621_d.get()._field_model);
			}
			_iter_next_1aa8ea2cd:;
			++it;
			goto _iter_begin_1aa8ea2cd;
		}
		_iter_end_1aa8ea2cd:;
	};
}



inline void _1a56a1012_new_call(_1a5775218_ExprOptimizer* _self_, jule::Ptr<_1a686d871_BuiltinNewCallExprModel> _29127_m) {
	if ((_29127_m.get()._field_init != nullptr)) {
		static__1a541dac6_optimize(_29127_m.get()._field_init);
	};
}



inline void _1a56b0c58_out_call(_1a5775218_ExprOptimizer* _self_, jule::Ptr<_1a686d2aa_BuiltinOutCallExprModel> _29727_m) {
	static__1a541dac6_optimize(_29727_m.get()._field_expr);
}



inline void _1a56b2485_outln_call(_1a5775218_ExprOptimizer* _self_, jule::Ptr<_1a686d497_BuiltinOutlnCallExprModel> _30129_m) {
	static__1a541dac6_optimize(_30129_m.get()._field_expr);
}



inline void _1a56b6203_panic_call(_1a5775218_ExprOptimizer* _self_, jule::Ptr<_1a686da5d_BuiltinPanicCallExprModel> _30529_m) {
	static__1a541dac6_optimize(_30529_m.get()._field_expr);
}



inline void _1a56ba68b_assert_call(_1a5775218_ExprOptimizer* _self_, jule::Ptr<_1a686dc4a_BuiltinAssertCallExprModel> _30930_m) {
	static__1a541dac6_optimize(_30930_m.get()._field_expr);
}



inline void _1a574abd3_error_call(_1a5775218_ExprOptimizer* _self_, jule::Ptr<_1a686e4ed_BuiltinErrorCallExprModel> _31329_m) {
	static__1a541dac6_optimize(_31329_m.get()._field_err);
}



inline void _1a574d6b9_make_call(_1a5775218_ExprOptimizer* _self_, jule::Ptr<_1a686de37_BuiltinMakeCallExprModel> _31728_m) {
	if ((_31728_m.get()._field_len != nullptr)) {
		static__1a541dac6_optimize(_31728_m.get()._field_len);
	};
	if ((_31728_m.get()._field_cap != nullptr)) {
		static__1a541dac6_optimize(_31728_m.get()._field_cap);
	};
}



inline void _1a5795e5e_append_call(_1a5775218_ExprOptimizer* _self_, jule::Ptr<_1a686e124_BuiltinAppendCallExprModel> _32630_m) {
	static__1a541dac6_optimize(_32630_m.get()._field_dest);
	static__1a541dac6_optimize(_32630_m.get()._field_elements);
}



inline void _1a57992d6_clone_call(_1a5775218_ExprOptimizer* _self_, jule::Ptr<_1a686d684_BuiltinCloneCallExprModel> _33129_m) {
	static__1a541dac6_optimize(_33129_m.get()._field_expr);
}



inline void _1a579c44e_sizeof(_1a5775218_ExprOptimizer* _self_, jule::Ptr<_1a686c3ec_SizeofExprModel> _33525_m) {
	static__1a541dac6_optimize(_33525_m.get()._field_expr);
}



inline void _1a57ae5e8_alignof(_1a5775218_ExprOptimizer* _self_, jule::Ptr<_1a686eb5d_AlignofExprModel> _33926_m) {
	static__1a541dac6_optimize(_33926_m.get()._field_expr);
}



inline void _1a57b061b_integrated_to_str(_1a5775218_ExprOptimizer* _self_, jule::Ptr<_1a6870037_IntegratedToStrExprModel> _34336_m) {
	static__1a541dac6_optimize(_34336_m.get()._field_expr);
}



inline void _1a57b3bc4_free(_1a5775218_ExprOptimizer* _self_, jule::Ptr<_1a6870411_FreeExprModel> _34723_m) {
	static__1a541dac6_optimize(_34723_m.get()._field_expr);
}



inline void _1a57b638b_backend_emit(_1a5775218_ExprOptimizer* _self_, jule::Ptr<_1a6870224_BackendEmitExprModel> _35131_m) {
	_1a55c30cc_args(&(*_self_), _35131_m.get()._field_exprs);
}



inline void _1a57b1a29_do(_1a5775218_ExprOptimizer* _self_) {
	{
		auto &_match_expr{ (*((*_self_)._field_model)) };
		
		if (_match_expr.type_is<jule::Ptr<_1a76edda4_Data>>()) {
			_case_begin_1aa907917:;
			{
				(*((*_self_)._field_model))=jule::Any((*((*_self_)._field_model)).operator jule::Ptr<_1a76edda4_Data>().get()._field_model);
				_1a57b1a29_do(&(*_self_));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a684b145_BinopExprModel>>()) {
			_case_begin_1aa907be2:;
			{
				_1a55b1b48_binary(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a684b145_BinopExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6849e79_UnaryExprModel>>()) {
			_case_begin_1aa907c58:;
			{
				_1a55bdaab_unary(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a6849e79_UnaryExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a682b752_StructLitExprModel>>()) {
			_case_begin_1aa907cd0:;
			{
				_1a55c0c45_structure_lit(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a682b752_StructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a68225b1_AllocStructLitExprModel>>()) {
			_case_begin_1aa907d57:;
			{
				_1a55ad2c6_alloc_structure(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a68225b1_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a684003a_CastingExprModel>>()) {
			_case_begin_1aa907dce:;
			{
				_1a55c27e6_casting(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a684003a_CastingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6845150_FnCallExprModel>>()) {
			_case_begin_1aa907e56:;
			{
				_1a55c5233_func_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a6845150_FnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a684533c_SliceExprModel>>()) {
			_case_begin_1aa907ecd:;
			{
				_1a55c8ba4_slice(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a684533c_SliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a686ca07_ArrayExprModel>>()) {
			_case_begin_1aa908055:;
			{
				_1a55d6e9d_array(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a686ca07_ArrayExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a686b770_IndexingExprModel>>()) {
			_case_begin_1aa9080cc:;
			{
				_1a55dc05d_indexing(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a686b770_IndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a686b95c_AnonFnExprModel>>()) {
			_case_begin_1aa908154:;
			{
				_1a55e2b79_anon_func(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a686b95c_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a686bd36_MapExprModel>>()) {
			_case_begin_1aa9081cb:;
			{
				_1a5621658_map(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a686bd36_MapExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a686c023_SlicingExprModel>>()) {
			_case_begin_1aa908253:;
			{
				_1a562596a_slicing(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a686c023_SlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a686c210_TraitSubIdentExprModel>>()) {
			_case_begin_1aa9082ca:;
			{
				_1a560553d_trait_sub(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a686c210_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a686c62d_StructSubIdentExprModel>>()) {
			_case_begin_1aa908352:;
			{
				_1a5661ce7_structure_sub(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a686c62d_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a686cdd1_CommonSubIdentExprModel>>()) {
			_case_begin_1aa9083c9:;
			{
				_1a569dd45_common_sub(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a686cdd1_CommonSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a686d0bd_TupleExprModel>>()) {
			_case_begin_1aa908451:;
			{
				_1a56a060a_tuple(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a686d0bd_TupleExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a686d2aa_BuiltinOutCallExprModel>>()) {
			_case_begin_1aa9084c8:;
			{
				_1a56b0c58_out_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a686d2aa_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a686d497_BuiltinOutlnCallExprModel>>()) {
			_case_begin_1aa908550:;
			{
				_1a56b2485_outln_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a686d497_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a686d871_BuiltinNewCallExprModel>>()) {
			_case_begin_1aa9085c7:;
			{
				_1a56a1012_new_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a686d871_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a686da5d_BuiltinPanicCallExprModel>>()) {
			_case_begin_1aa90864e:;
			{
				_1a56b6203_panic_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a686da5d_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a686dc4a_BuiltinAssertCallExprModel>>()) {
			_case_begin_1aa9086c6:;
			{
				_1a56ba68b_assert_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a686dc4a_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a686e4ed_BuiltinErrorCallExprModel>>()) {
			_case_begin_1aa90874d:;
			{
				_1a574abd3_error_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a686e4ed_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a686de37_BuiltinMakeCallExprModel>>()) {
			_case_begin_1aa9087c5:;
			{
				_1a574d6b9_make_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a686de37_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a686e124_BuiltinAppendCallExprModel>>()) {
			_case_begin_1aa90884c:;
			{
				_1a5795e5e_append_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a686e124_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a686d684_BuiltinCloneCallExprModel>>()) {
			_case_begin_1aa9088c4:;
			{
				_1a57992d6_clone_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a686d684_BuiltinCloneCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a686c3ec_SizeofExprModel>>()) {
			_case_begin_1aa90894b:;
			{
				_1a579c44e_sizeof(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a686c3ec_SizeofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a686eb5d_AlignofExprModel>>()) {
			_case_begin_1aa9089c3:;
			{
				_1a57ae5e8_alignof(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a686eb5d_AlignofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6870037_IntegratedToStrExprModel>>()) {
			_case_begin_1aa908a4a:;
			{
				_1a57b061b_integrated_to_str(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a6870037_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6870411_FreeExprModel>>()) {
			_case_begin_1aa908ac2:;
			{
				_1a57b3bc4_free(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a6870411_FreeExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6870224_BackendEmitExprModel>>()) {
			_case_begin_1aa908b49:;
			{
				_1a57b638b_backend_emit(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a6870224_BackendEmitExprModel>());
			}
		}
		_match_end_1aa9078b2:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a5775218_ExprOptimizer _Src) {
	_Stream << "ExprOptimizer{";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a7ea9043_Optimizer> static__1a7e54cad_new(jule::Ptr<_1d5090729_IR>& _2528_ir) {
	return jule::new_ptr<_1a7ea9043_Optimizer>(_1a7ea9043_Optimizer{._field_ir=_2528_ir});
}



inline void _1a7e7d512_optimize_global(_1a7ea9043_Optimizer* _self_, jule::Ptr<_1a76a7720_Var>& _3139_v) {
	if ((!(_3139_v.get()._field_cpp_linked))) {
		static__1a541dac6_optimize(_3139_v.get()._field_value.get()._field_data.get()._field_model);
	};
}



inline void _1a7e8a80a_optimize_function(_1a7ea9043_Optimizer* _self_, jule::Ptr<_1a68709c7_Fn>& _3741_func) {
	if (_3741_func.get()._field_cpp_linked) {
		return;;
	};
	{
		auto &expr = _3741_func.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1aa9270c9:;
		if (it != expr.end()) {
			jule::Ptr<_1a6872c93_FnIns> _4121_ins = *it;
			{
				jule::Ptr<_1a55c39a1_ScopeOptimizer> _4221_so = static__1a52ac46a_new(_4121_ins.get()._field_scope);;
				_1a53c9961_optimize(_4221_so.ptr());
			}
			_iter_next_1aa9270c9:;
			++it;
			goto _iter_begin_1aa9270c9;
		}
		_iter_end_1aa9270c9:;
	};
}



inline void _1a7e8ce6c_optimize_struct(_1a7ea9043_Optimizer* _self_, jule::Ptr<_1a6826829_Struct>& _4739_s) {
	if (_4739_s.get()._field_cpp_linked) {
		return;;
	};
	{
		auto &expr = _4739_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1aa928949:;
		if (it != expr.end()) {
			jule::Ptr<_1a6836a48_StructIns> _5121_ins = *it;
			{
				{
					auto &expr = _5121_ins.get()._field_fields;
					auto it = expr.begin();
					_iter_begin_1aa9290ed:;
					if (it != expr.end()) {
						jule::Ptr<_1a6830899_FieldIns> _5225_f = *it;
						{
							if ((_5225_f.get()._field_default != nullptr)) {
								static__1a541dac6_optimize(_5225_f.get()._field_default.get()._field_model);
							};
						}
						_iter_next_1aa9290ed:;
						++it;
						goto _iter_begin_1aa9290ed;
					}
					_iter_end_1aa9290ed:;
				};
				{
					auto &expr = _5121_ins.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_1aa92998e:;
					if (it != expr.end()) {
						jule::Ptr<_1a68709c7_Fn> _5725_m = *it;
						{
							_1a7e8a80a_optimize_function(&(*_self_), _5725_m);
						}
						_iter_next_1aa92998e:;
						++it;
						goto _iter_begin_1aa92998e;
					}
					_iter_end_1aa92998e:;
				};
			}
			_iter_next_1aa928949:;
			++it;
			goto _iter_begin_1aa928949;
		}
		_iter_end_1aa928949:;
	};
}



inline void _1a7e8d104_optimize_globals(_1a7ea9043_Optimizer* _self_, jule::Ptr<_1a7687bea_Package>& _6340_p) {
	{
		auto &expr = _6340_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1aa92ae24:;
		if (it != expr.end()) {
			jule::Ptr<_1a76e8e26_SymbolTable> _6421_f = *it;
			{
				{
					auto &expr = _6421_f.get()._field_vars;
					auto it = expr.begin();
					_iter_begin_1aa92b6e9:;
					if (it != expr.end()) {
						jule::Ptr<_1a76a7720_Var> _6525_v = *it;
						{
							_1a7e7d512_optimize_global(&(*_self_), _6525_v);
						}
						_iter_next_1aa92b6e9:;
						++it;
						goto _iter_begin_1aa92b6e9;
					}
					_iter_end_1aa92b6e9:;
				};
			}
			_iter_next_1aa92ae24:;
			++it;
			goto _iter_begin_1aa92ae24;
		}
		_iter_end_1aa92ae24:;
	};
}



inline void _1a7e913d2_optimize_functions(_1a7ea9043_Optimizer* _self_, jule::Ptr<_1a7687bea_Package>& _7142_p) {
	{
		auto &expr = _7142_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1aa92c6c8:;
		if (it != expr.end()) {
			jule::Ptr<_1a76e8e26_SymbolTable> _7221_f = *it;
			{
				{
					auto &expr = _7221_f.get()._field_funcs;
					auto it = expr.begin();
					_iter_begin_1aa92ce9d:;
					if (it != expr.end()) {
						jule::Ptr<_1a68709c7_Fn> _7325_func = *it;
						{
							_1a7e8a80a_optimize_function(&(*_self_), _7325_func);
						}
						_iter_next_1aa92ce9d:;
						++it;
						goto _iter_begin_1aa92ce9d;
					}
					_iter_end_1aa92ce9d:;
				};
			}
			_iter_next_1aa92c6c8:;
			++it;
			goto _iter_begin_1aa92c6c8;
		}
		_iter_end_1aa92c6c8:;
	};
}



inline void _1a7e94171_optimize_structs(_1a7ea9043_Optimizer* _self_, jule::Ptr<_1a7687bea_Package>& _7940_p) {
	{
		auto &expr = _7940_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1aa92de5a:;
		if (it != expr.end()) {
			jule::Ptr<_1a76e8e26_SymbolTable> _8021_f = *it;
			{
				{
					auto &expr = _8021_f.get()._field_structs;
					auto it = expr.begin();
					_iter_begin_1aa92e730:;
					if (it != expr.end()) {
						jule::Ptr<_1a6826829_Struct> _8125_s = *it;
						{
							_1a7e8ce6c_optimize_struct(&(*_self_), _8125_s);
						}
						_iter_next_1aa92e730:;
						++it;
						goto _iter_begin_1aa92e730;
					}
					_iter_end_1aa92e730:;
				};
			}
			_iter_next_1aa92de5a:;
			++it;
			goto _iter_begin_1aa92de5a;
		}
		_iter_end_1aa92de5a:;
	};
}



inline void _1a7ea0688_optimize_package(_1a7ea9043_Optimizer* _self_, jule::Ptr<_1a7687bea_Package>& _8740_p) {
	_1a7e8d104_optimize_globals(&(*_self_), _8740_p);
	_1a7e913d2_optimize_functions(&(*_self_), _8740_p);
	_1a7e94171_optimize_structs(&(*_self_), _8740_p);
}



inline void _1a7ea4912_optimize(_1a7ea9043_Optimizer* _self_) {
	_1a7edeed0_detect_enabled();
	if (_1a52b78d7_DEADCODE) {
		_1a80140c0_eliminate_defines((*_self_)._field_ir);
	};
	if ((_1a7e2e12d_scope_enabled || _1a7e2b207_expr_enabled)) {
		{
			auto &expr = (*_self_)._field_ir.get()._field_used;
			auto it = expr.begin();
			_iter_begin_1aa932777:;
			if (it != expr.end()) {
				jule::Ptr<_1a7685038_ImportInfo> _10325_u = *it;
				{
					if ((!(_10325_u.get()._field_cpp_linked))) {
						_1a7ea0688_optimize_package(&(*_self_), _10325_u.get()._field_package);
					};
				}
				_iter_next_1aa932777:;
				++it;
				goto _iter_begin_1aa932777;
			}
			_iter_end_1aa932777:;
		};
		_1a7ea0688_optimize_package(&(*_self_), (*_self_)._field_ir.get()._field_main);
	};
	if (_1a52b78d7_DEADCODE) {
		_1a801857a_eliminate_scopes((*_self_)._field_ir);
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a7ea9043_Optimizer _Src) {
	_Stream << "Optimizer{";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline void static__1a8036334_reset(void) {
	jule::out(jule::Str("\033[0m", 4));
}



inline void static__1a8036466_print(jule::Str _1925_escape, jule::Str _1938_text) {
	jule::out(_1925_escape);
	jule::out(_1938_text);
	static__1a8036334_reset();
}







std::ostream &operator<<(std::ostream &_Stream, _1a8036147_AnsiEscape _Src) {
	_Stream << "AnsiEscape{";
	_Stream << "}";
	return _Stream;
}



inline void static__1a8037720_log_flat(_1a43349cc_Log& _1429_l) {
	jule::outln(_1429_l._field_text);
}



inline void static__1a803792e_log_error(_1a43349cc_Log& _1930_l) {
	jule::out(jule::Str("\033[31m", 5));
	jule::out(jule::Str("error: ", 7));
	jule::out(_1930_l._field_text);
	static__1a8036334_reset();
	if ((_1930_l._field_path.len() != 0LL)) {
		jule::out(jule::Str("\n  --> ", 7));
		jule::out(_1930_l._field_path);
	};
	if (((_1930_l._field_row != 0LL) && (_1930_l._field_column != 0LL))) {
		jule::out(jule::Str(":", 1));
		jule::out(_1a7538cee_itoa(_1930_l._field_row));
		jule::out(jule::Str(":", 1));
		jule::out(_1a7538cee_itoa(_1930_l._field_column));
	};
	if ((_1930_l._field_line.len() != 0LL)) {
		jule::Str _3621_line = _1a4297b3d_trim_left(_1930_l._field_line,jule::Str("\r\n\v\b ", 5));;
		jule::I64 _3721_offset = ((_1930_l._field_line.len() - _3621_line.len()) + 1LL);;
		jule::I64 _3821_old_len = _3621_line.len();;
		_3621_line=_1a4297b3d_trim_left(_3621_line,jule::Str("\t", 1));
		if ((_3821_old_len != _3621_line.len())) {
			_3721_offset+=((_3821_old_len - _3621_line.len()) << 3LLU);
		};
		jule::out(jule::Str("\n  ", 3));
		jule::Str _4417_row = _1a7538cee_itoa(_1930_l._field_row);;
		jule::out(_4417_row);
		jule::out(jule::Str(" | ", 3));
		jule::out(_3621_line);
		jule::out(jule::Str("\n  ", 3));
		jule::out(_1a4222117_repeat(jule::Str(" ", 1),static_cast<jule::I64>(_4417_row.len())));
		jule::out(jule::Str(" | ", 3));
		jule::out(_1a4222117_repeat(jule::Str(" ", 1),static_cast<jule::I64>((_1930_l._field_column - _3721_offset))));
		jule::out(jule::Str("^", 1));
		if ((_1930_l._field_suggestion.len() != 0LL)) {
			jule::out(jule::Str("\n  ", 3));
			jule::out(_1a4222117_repeat(jule::Str(" ", 1),static_cast<jule::I64>(_4417_row.len())));
			jule::out(jule::Str(" | ", 3));
			static__1a8036466_print(jule::Str("\033[95m", 5),jule::Str("suggestion: ", 12));
			jule::out(_1930_l._field_suggestion);
		};
	};
	jule::outln(jule::Str("\n", 1));
}



inline void static__1a8037b3d_log(_1a43349cc_Log& _6524_l) {
	{
		auto &_match_expr{ _6524_l._field_kind };
		
		if (_match_expr == static_cast<jule::I64>(0LL)) {
			_case_begin_1aa941e3a:;
			{
				static__1a8037720_log_flat(_6524_l);
			}
		}
		else if (_match_expr == static_cast<jule::I64>(1LL)) {
			_case_begin_1aa942424:;
			{
				static__1a803792e_log_error(_6524_l);
			}
		}
		_match_end_1aa942314:;
	};
}



inline void static__1a8037d4c_print_logs(jule::Slice<_1a43349cc_Log>& _7531_logs) {
	{
		auto &expr = _7531_logs;
		auto it = expr.begin();
		_iter_begin_1aa94217c:;
		if (it != expr.end()) {
			_1a43349cc_Log &_7616_l = *it;
			{
				static__1a8037b3d_log(_7616_l);
			}
			_iter_next_1aa94217c:;
			++it;
			goto _iter_begin_1aa94217c;
		}
		_iter_end_1aa94217c:;
	};
	jule::out(jule::Str("=== ", 4));
	jule::out(_1a7538cee_itoa(static_cast<jule::I64>(_7531_logs.len())));
	jule::outln(jule::Str(" error generated ===", 20));
}







std::ostream &operator<<(std::ostream &_Stream, _1a8037478_Logger _Src) {
	_Stream << "Logger{";
	_Stream << "}";
	return _Stream;
}



inline jule::U64 _1a864cc36_unix(_1a864c84b_AbsTime* _self_) {
	jule::Bool _5617_leap = false;;
	jule::U64 _5717_y = ((*_self_)._field_year - 1900LLU);;
	jule::U64 _5817_m = ((*_self_)._field_month - 1LLU);;
	if (((_5817_m >= 12LLU) || (_5817_m < 0LLU))) {
		jule::U64 _6021_adj = (_5817_m / 12LLU);;
		_5817_m%=12LL;
		if ((_5817_m < 0LLU)) {
			(_6021_adj)--;
			_5817_m+=12LLU;
		};
		_5717_y+=_6021_adj;
	};
	jule::U64 _6817_t = _1a865290b_unix_year_to_seconds(_5717_y,_5617_leap);;
	_6817_t+=_1a8652c91_unix_month_to_seconds(_5817_m,_5617_leap);
	_6817_t+=(86400LLU * ((*_self_)._field_day - 1LLU));
	_6817_t+=(3600LLU * (*_self_)._field_hour);
	_6817_t+=(60LLU * (*_self_)._field_minute);
	_6817_t+=(*_self_)._field_second;
	return _6817_t;
}







std::ostream &operator<<(std::ostream &_Stream, _1a864c84b_AbsTime _Src) {
	_Stream << "AbsTime{";
	_Stream << "day:" << _Src._field_day << ", ";
	_Stream << "week_day:" << _Src._field_week_day << ", ";
	_Stream << "year_day:" << _Src._field_year_day << ", ";
	_Stream << "month:" << _Src._field_month << ", ";
	_Stream << "year:" << _Src._field_year << ", ";
	_Stream << "second:" << _Src._field_second << ", ";
	_Stream << "minute:" << _Src._field_minute << ", ";
	_Stream << "hour:" << _Src._field_hour;
	_Stream << "}";
	return _Stream;
}



inline _1a864d022_Time static__1a864d3b8_unix(jule::U64 _9124_sec) {
	return _1a864d022_Time{._field_sec=_9124_sec};
}



inline _1a864d022_Time static__1a864d5b6_now(void) {
	return static__1a864d3b8_unix(static_cast<jule::U64>(_1a86525ba_unix()));
}



inline jule::U64 _1a864da17_unix(_1a864d022_Time* _self_) {
	return (*_self_)._field_sec;
}



inline jule::U64 _1a864dc7b_day(_1a864d022_Time* _self_) {
	return _1a864ec05_abs(&(*_self_))._field_day;
}



inline jule::U64 _1a864dee0_month(_1a864d022_Time* _self_) {
	return _1a864ec05_abs(&(*_self_))._field_month;
}



inline jule::U64 _1a864e254_year(_1a864d022_Time* _self_) {
	return _1a864ec05_abs(&(*_self_))._field_year;
}



inline jule::U64 _1a864e4b8_second(_1a864d022_Time* _self_) {
	return _1a864ec05_abs(&(*_self_))._field_second;
}



inline jule::U64 _1a864e72c_minute(_1a864d022_Time* _self_) {
	return _1a864ec05_abs(&(*_self_))._field_minute;
}



inline jule::U64 _1a864e991_hour(_1a864d022_Time* _self_) {
	return _1a864ec05_abs(&(*_self_))._field_hour;
}



inline _1a864c84b_AbsTime _1a864ec05_abs(_1a864d022_Time* _self_) {
	jule::U64 _12713_secs = ((*_self_)._field_sec - 951868800LLU);;
	jule::U64 _12817_days = (_12713_secs / 86400LLU);;
	jule::U64 _12917_rem_secs = (_12713_secs % 86400LL);;
	if ((_12917_rem_secs < 0LLU)) {
		_12917_rem_secs+=86400LLU;
		(_12817_days)--;
	};
	jule::U64 _13517_qc_cycles = (_12817_days / 146097LLU);;
	jule::U64 _13617_rem_days = (_12817_days % 146097LL);;
	if ((_13617_rem_days < 0LLU)) {
		_13617_rem_days+=146097LLU;
		(_13517_qc_cycles)--;
	};
	jule::U64 _14217_c_cycles = (_13617_rem_days / 36524LLU);;
	if ((_14217_c_cycles == 4LLU)) {
		(_14217_c_cycles)--;
	};
	_13617_rem_days-=(_14217_c_cycles * 36524LLU);
	jule::U64 _14817_q_cycles = (_13617_rem_days / 1461LLU);;
	if ((_14817_q_cycles == 25LLU)) {
		(_14817_q_cycles)--;
	};
	_13617_rem_days-=(_14817_q_cycles * 1461LLU);
	jule::U64 _15417_rem_years = (_13617_rem_days / 365LLU);;
	if ((_15417_rem_years == 4LLU)) {
		(_15417_rem_years)--;
	};
	_13617_rem_days-=(_15417_rem_years * 365LLU);
	jule::U64 _16017_leap = static_cast<jule::U64>(0LLU);;
	if (((_15417_rem_years == 0LLU) && ((_14817_q_cycles > 0LLU) || (_14217_c_cycles == 0LLU)))) {
		_16017_leap=1LLU;
	};
	jule::U64 _16417_y_day = (((_13617_rem_days + 31LLU) + 28LLU) + _16017_leap);;
	if ((_16417_y_day >= (365LLU + _16017_leap))) {
		_16417_y_day-=(365LLU + _16017_leap);
	};
	jule::U64 _16917_months = 0LLU;;
	for (; (_1a864bd9a_MDAYS[static_cast<jule::I64>(_16917_months)] <= _13617_rem_days); (_16917_months)++) {
		{
			_13617_rem_days-=_1a864bd9a_MDAYS[static_cast<jule::I64>(_16917_months)];
		}
	_iter_next_1aa961993:;
	}
	_iter_end_1aa961993:;;
	_1a864c84b_AbsTime _17417_t = _1a864c84b_AbsTime{};;
	_17417_t._field_year=static_cast<jule::U64>(((((_15417_rem_years + (4LLU * _14817_q_cycles)) + (100LLU * _14217_c_cycles)) + (400LLU * _13517_qc_cycles)) + 100LLU));
	_17417_t._field_month=static_cast<jule::U64>((_16917_months + 2LLU));
	if ((_17417_t._field_month >= 12LLU)) {
		_17417_t._field_month-=12LLU;
		(_17417_t._field_year)++;
	};
	_17417_t._field_month+=1LLU;
	_17417_t._field_year+=1900LLU;
	_17417_t._field_day=static_cast<jule::U64>((_13617_rem_days + 1LLU));
	_17417_t._field_week_day=static_cast<jule::U64>(((3LLU + _12817_days) % 7LL));
	if ((_17417_t._field_week_day < 0LLU)) {
		_17417_t._field_week_day+=7LLU;
	};
	_17417_t._field_year_day=_16417_y_day;
	_17417_t._field_hour=static_cast<jule::U64>((_12917_rem_secs / 3600LLU));
	_17417_t._field_minute=static_cast<jule::U64>(((_12917_rem_secs / 60LLU) % 60LL));
	_17417_t._field_second=static_cast<jule::U64>((_12917_rem_secs % 60LL));
	return _17417_t;
}







std::ostream &operator<<(std::ostream &_Stream, _1a864d022_Time _Src) {
	_Stream << "Time{";
	_Stream << "sec:" << _Src._field_sec;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a85be05e_ScopeCoder> static__1a85be46b_new(jule::Ptr<_1a8615281_ObjectCoder>& _4724_oc) {
	return jule::new_ptr<_1a85be05e_ScopeCoder>(_1a85be05e_ScopeCoder{._field_oc=_4724_oc});
}



inline void _1a85be669_range_index_iter(jule::Ptr<_1a85be05e_ScopeCoder> _self_, jule::Ptr<_1a7648b23_RangeIter>& _5341_it) {
	jule::Str _5413_begin = static__1a85dabe6_iter_begin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_5341_it)));;
	jule::Str _5513_next = static__1a85db235_iter_next(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_5341_it)));;
	_1a861e169_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1a861e90b_add_indent(_self_.get()._field_oc);
	_1a862080d_indent(_self_.get()._field_oc);
	_1a861e169_write(_self_.get()._field_oc, jule::Str("auto ", 5));
	if ((_1a52b4c58_COPY && _1a85c432d_is_copy_optimizable(_5341_it.get()._field_expr))) {
		_1a861e169_write(_self_.get()._field_oc, jule::Str("&", 1));
	};
	_1a861e169_write(_self_.get()._field_oc, jule::Str("expr = ", 7));
	_1a85d214e_model(_self_.get()._field_oc.get()._field_ec, jule::Any(_5341_it.get()._field_expr.get()._field_model));
	_1a861e169_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1a862080d_indent(_self_.get()._field_oc);
	_1a861e169_write(_self_.get()._field_oc, jule::Str("auto it = expr.begin();\n", 24));
	_1a862080d_indent(_self_.get()._field_oc);
	_1a861e169_write(_self_.get()._field_oc, _5413_begin);
	_1a861e169_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1a862080d_indent(_self_.get()._field_oc);
	_1a861e169_write(_self_.get()._field_oc, jule::Str("if (it != expr.end()) {\n", 24));
	_1a861e90b_add_indent(_self_.get()._field_oc);
	_1a862080d_indent(_self_.get()._field_oc);
	if ((_5341_it.get()._field_key_a != nullptr)) {
		_1a8654e4c_var_init_expr(_self_.get()._field_oc, _5341_it.get()._field_key_a,jule::Fn<void(void)>([=](void) mutable -> void {
			_1a861e169_write(_self_.get()._field_oc, jule::Str("it - expr.begin()", 17));
		}));
		_1a861e169_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1a862080d_indent(_self_.get()._field_oc);
	};
	if ((_5341_it.get()._field_key_b != nullptr)) {
		if (_1a52b4c58_COPY) {
			_5341_it.get()._field_key_b.get()._field_reference=_1a85c46d5_is_iter_copy_optimizable(_5341_it.get()._field_expr,_5341_it.get()._field_key_b);
		};
		_1a8654e4c_var_init_expr(_self_.get()._field_oc, _5341_it.get()._field_key_b,jule::Fn<void(void)>([=](void) mutable -> void {
			_1a861e169_write(_self_.get()._field_oc, jule::Str("*it", 3));
		}));
		_1a861e169_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1a862080d_indent(_self_.get()._field_oc);
	};
	_1a85c3c56_scope(_self_, _5341_it.get()._field_scope);
	_1a861e169_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1a862080d_indent(_self_.get()._field_oc);
	_1a861e169_write(_self_.get()._field_oc, _5513_next);
	_1a861e169_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1a862080d_indent(_self_.get()._field_oc);
	_1a861e169_write(_self_.get()._field_oc, jule::Str("++it;\n", 6));
	_1a862080d_indent(_self_.get()._field_oc);
	if ((_5341_it.get()._field_key_a != nullptr)) {
		_1a861e169_write(_self_.get()._field_oc, static__1a85da94e_var(_5341_it.get()._field_key_a));
		_1a861e169_write(_self_.get()._field_oc, jule::Str("++;\n", 4));
		_1a862080d_indent(_self_.get()._field_oc);
	};
	_1a861e169_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1a861e169_write(_self_.get()._field_oc, _5413_begin);
	_1a861e169_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1a86200e3_done_indent(_self_.get()._field_oc);
	_1a862080d_indent(_self_.get()._field_oc);
	_1a861e169_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1a862080d_indent(_self_.get()._field_oc);
	_1a861e169_write(_self_.get()._field_oc, static__1a85dae8d_iter_end(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_5341_it))));
	_1a861e169_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1a86200e3_done_indent(_self_.get()._field_oc);
	_1a862080d_indent(_self_.get()._field_oc);
	_1a861e169_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1a85be8de_range_hashmap_iter(jule::Ptr<_1a85be05e_ScopeCoder> _self_, jule::Ptr<_1a7648b23_RangeIter>& _12143_it) {
	jule::Str _12213_begin = static__1a85dabe6_iter_begin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_12143_it)));;
	jule::Str _12313_next = static__1a85db235_iter_next(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_12143_it)));;
	_1a861e169_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1a861e90b_add_indent(_self_.get()._field_oc);
	_1a862080d_indent(_self_.get()._field_oc);
	_1a861e169_write(_self_.get()._field_oc, jule::Str("auto ", 5));
	if ((_1a52b4c58_COPY && _1a85c432d_is_copy_optimizable(_12143_it.get()._field_expr))) {
		_1a861e169_write(_self_.get()._field_oc, jule::Str("&", 1));
	};
	_1a861e169_write(_self_.get()._field_oc, jule::Str("expr = ", 7));
	_1a85d214e_model(_self_.get()._field_oc.get()._field_ec, jule::Any(_12143_it.get()._field_expr.get()._field_model));
	_1a861e169_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1a862080d_indent(_self_.get()._field_oc);
	_1a861e169_write(_self_.get()._field_oc, jule::Str("auto it = expr.begin();\n", 24));
	_1a862080d_indent(_self_.get()._field_oc);
	_1a861e169_write(_self_.get()._field_oc, _12213_begin);
	_1a861e169_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1a862080d_indent(_self_.get()._field_oc);
	_1a861e169_write(_self_.get()._field_oc, jule::Str("if (it != expr.end()) {\n", 24));
	_1a861e90b_add_indent(_self_.get()._field_oc);
	_1a862080d_indent(_self_.get()._field_oc);
	if ((_12143_it.get()._field_key_a != nullptr)) {
		if (_1a52b4c58_COPY) {
			_12143_it.get()._field_key_a.get()._field_reference=_1a85c46d5_is_iter_copy_optimizable(_12143_it.get()._field_expr,_12143_it.get()._field_key_a);
		};
		_1a8654e4c_var_init_expr(_self_.get()._field_oc, _12143_it.get()._field_key_a,jule::Fn<void(void)>([=](void) mutable -> void {
			_1a861e169_write(_self_.get()._field_oc, jule::Str("it->first", 9));
		}));
		_1a861e169_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1a862080d_indent(_self_.get()._field_oc);
	};
	if ((_12143_it.get()._field_key_b != nullptr)) {
		if (_1a52b4c58_COPY) {
			_12143_it.get()._field_key_b.get()._field_reference=_1a85c46d5_is_iter_copy_optimizable(_12143_it.get()._field_expr,_12143_it.get()._field_key_b);
		};
		_1a8654e4c_var_init_expr(_self_.get()._field_oc, _12143_it.get()._field_key_b,jule::Fn<void(void)>([=](void) mutable -> void {
			_1a861e169_write(_self_.get()._field_oc, jule::Str("it->second", 10));
		}));
		_1a861e169_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1a862080d_indent(_self_.get()._field_oc);
	};
	_1a85c3c56_scope(_self_, _12143_it.get()._field_scope);
	_1a861e169_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1a862080d_indent(_self_.get()._field_oc);
	_1a861e169_write(_self_.get()._field_oc, _12313_next);
	_1a861e169_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1a862080d_indent(_self_.get()._field_oc);
	_1a861e169_write(_self_.get()._field_oc, jule::Str("++it;\n", 6));
	_1a862080d_indent(_self_.get()._field_oc);
	_1a861e169_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1a861e169_write(_self_.get()._field_oc, _12213_begin);
	_1a861e169_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1a86200e3_done_indent(_self_.get()._field_oc);
	_1a862080d_indent(_self_.get()._field_oc);
	_1a861e169_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1a862080d_indent(_self_.get()._field_oc);
	_1a861e169_write(_self_.get()._field_oc, static__1a85dae8d_iter_end(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_12143_it))));
	_1a861e169_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1a86200e3_done_indent(_self_.get()._field_oc);
	_1a862080d_indent(_self_.get()._field_oc);
	_1a861e169_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1a85beb64_if_case(jule::Ptr<_1a85be05e_ScopeCoder> _self_, jule::Ptr<_1a7660200_If> _18731_i) {
	if ((_18731_i.get()._field_expr != nullptr)) {
		_1a861e169_write(_self_.get()._field_oc, jule::Str("if (", 4));
		_1a85d23c4_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_18731_i.get()._field_expr));
		_1a861e169_write(_self_.get()._field_oc, jule::Str(") ", 2));
	};
	_1a85c3c56_scope(_self_, _18731_i.get()._field_scope);
}



inline void _1a85bedd9_conditional(jule::Ptr<_1a85be05e_ScopeCoder> _self_, jule::Ptr<_1a7609e69_Conditional> _19635_c) {
	jule::Bool _19717_writed = false;;
	{
		auto &expr = _19635_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_1aa9b7741:;
		if (it != expr.end()) {
			jule::Ptr<_1a7660200_If> _19821_elif = *it;
			{
				if ((_19821_elif == nullptr)) {
					goto _iter_next_1aa9b7741;
				};
				if (_19717_writed) {
					_1a861e169_write(_self_.get()._field_oc, jule::Str(" else ", 6));
				};
				_19717_writed=true;
				_1a85beb64_if_case(_self_, _19821_elif);
			}
			_iter_next_1aa9b7741:;
			++it;
			goto _iter_begin_1aa9b7741;
		}
		_iter_end_1aa9b7741:;
	};
	if ((_19635_c.get()._field_default != nullptr)) {
		if (_19717_writed) {
			_1a861e169_write(_self_.get()._field_oc, jule::Str(" else ", 6));
		};
		_1a85c3c56_scope(_self_, _19635_c.get()._field_default.get()._field_scope);
	};
}



inline void _1a85c015e_inf_iter(jule::Ptr<_1a85be05e_ScopeCoder> _self_, jule::Ptr<_1a761aa90_InfIter> _21632_it) {
	_1a861e169_write(_self_.get()._field_oc, jule::Str("for (;;) {\n", 11));
	_1a861e90b_add_indent(_self_.get()._field_oc);
	_1a862080d_indent(_self_.get()._field_oc);
	_1a85c3c56_scope(_self_, _21632_it.get()._field_scope);
	_1a86200e3_done_indent(_self_.get()._field_oc);
	_1a861e169_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1a862080d_indent(_self_.get()._field_oc);
	_1a861e169_write(_self_.get()._field_oc, static__1a85db235_iter_next(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_21632_it))));
	_1a861e169_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1a862080d_indent(_self_.get()._field_oc);
	_1a861e169_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1a862080d_indent(_self_.get()._field_oc);
	_1a861e169_write(_self_.get()._field_oc, static__1a85dae8d_iter_end(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_21632_it))));
	_1a861e169_write(_self_.get()._field_oc, jule::Str(":;", 2));
}



inline void _1a85c03d4_while_iter(jule::Ptr<_1a85be05e_ScopeCoder> _self_, jule::Ptr<_1a761ac7c_WhileIter> _23334_it) {
	if (((_23334_it.get()._field_expr != nullptr) && (_23334_it.get()._field_next == nullptr))) {
		_1a861e169_write(_self_.get()._field_oc, jule::Str("while (", 7));
		_1a85d23c4_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_23334_it.get()._field_expr));
		_1a861e169_write(_self_.get()._field_oc, jule::Str(") {\n", 4));
	} else {
		_1a861e169_write(_self_.get()._field_oc, jule::Str("for (; ", 7));
		if ((_23334_it.get()._field_expr != nullptr)) {
			_1a85d23c4_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_23334_it.get()._field_expr));
		};
		_1a861e169_write(_self_.get()._field_oc, jule::Str("; ", 2));
		if ((_23334_it.get()._field_next != nullptr)) {
			_1a85c375b_st(_self_, jule::Any(_23334_it.get()._field_next));
		};
		_1a861e169_write(_self_.get()._field_oc, jule::Str(") {\n", 4));
	};
	_1a861e90b_add_indent(_self_.get()._field_oc);
	_1a862080d_indent(_self_.get()._field_oc);
	_1a85c3c56_scope(_self_, _23334_it.get()._field_scope);
	_1a861e169_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1a86200e3_done_indent(_self_.get()._field_oc);
	_1a862080d_indent(_self_.get()._field_oc);
	_1a861e169_write(_self_.get()._field_oc, static__1a85db235_iter_next(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_23334_it))));
	_1a861e169_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1a862080d_indent(_self_.get()._field_oc);
	_1a861e169_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1a862080d_indent(_self_.get()._field_oc);
	_1a861e169_write(_self_.get()._field_oc, static__1a85dae8d_iter_end(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_23334_it))));
	_1a861e169_write(_self_.get()._field_oc, jule::Str(":;", 2));
}



inline void _1a85c0659_range_iter(jule::Ptr<_1a85be05e_ScopeCoder> _self_, jule::Ptr<_1a7648b23_RangeIter> _26634_it) {
	{
		
		if ((_1a772a6a5_slc(_26634_it.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aa9ca80e:;
			{
				_1a85be669_range_index_iter(_self_, _26634_it);
			}
		}
		else if ((_1a772a441_arr(_26634_it.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aa9ca501:;
			{
				_1a85be669_range_index_iter(_self_, _26634_it);
			}
		}
		else if ((_1a772b156_map(_26634_it.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aa9ca567:;
			{
				_1a85be8de_range_hashmap_iter(_self_, _26634_it);
			}
		}
		else {
			_case_begin_1aa9ca48a:;
			{
				_1a85be669_range_index_iter(_self_, _26634_it);
			}
		}
		_match_end_1aa9ca3be:;
	};
}



inline void _1a85c08ce_cont(jule::Ptr<_1a85be05e_ScopeCoder> _self_, jule::Ptr<_1a7648d10_ContSt> _27924_c) {
	_1a861e169_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1a861e169_write(_self_.get()._field_oc, static__1a85db235_iter_next(_27924_c.get()._field_it));
}



inline void _1a85c0b54_label(jule::Ptr<_1a85be05e_ScopeCoder> _self_, jule::Ptr<_1a766ca26_Label> _28425_l) {
	_1a861e169_write(_self_.get()._field_oc, static__1a85db4cc_label(_28425_l.get()._field_ident));
	_1a861e169_write(_self_.get()._field_oc, jule::Str(":", 1));
}



inline void _1a85c0dc9_goto_st(jule::Ptr<_1a85be05e_ScopeCoder> _self_, jule::Ptr<_1a766cc13_GotoSt> _28927_gt) {
	_1a861e169_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1a861e169_write(_self_.get()._field_oc, static__1a85db4cc_label(_28927_gt.get()._field_ident));
}



inline void _1a85c114e_postfix(jule::Ptr<_1a85be05e_ScopeCoder> _self_, jule::Ptr<_1a766ce00_Postfix> _29431_p) {
	_1a861e169_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1a85d23c4_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_29431_p.get()._field_expr));
	_1a861e169_write(_self_.get()._field_oc, jule::Str(")", 1));
	_1a861e169_write(_self_.get()._field_oc, _29431_p.get()._field_op);
}



inline void _1a85c13c4_assign(jule::Ptr<_1a85be05e_ScopeCoder> _self_, jule::Ptr<_1a766d0dc_Assign> _30130_a) {
	_1a85d23c4_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_30130_a.get()._field_l.get()._field_model));
	_1a861e169_write(_self_.get()._field_oc, _30130_a.get()._field_op.get()._field_kind);
	_1a85d23c4_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_30130_a.get()._field_r.get()._field_model));
}



inline void _1a85c1649_multi_assign(jule::Ptr<_1a85be05e_ScopeCoder> _self_, jule::Ptr<_1a766d2c9_MultiAssign> _30736_a) {
	_1a861e169_write(_self_.get()._field_oc, jule::Str("std::tie(", 9));
	{
		auto &expr = _30736_a.get()._field_l;
		auto it = expr.begin();
		_iter_begin_1aa9d8377:;
		if (it != expr.end()) {
			jule::I64 _30914_i = it - expr.begin();
			jule::Any _30921_l = *it;
			{
				if ((_30921_l == nullptr)) {
					_1a861e169_write(_self_.get()._field_oc, jule::Str("std::ignore", 11));
				} else {
					_1a85d23c4_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_30921_l));
				};
				if (((_30736_a.get()._field_l.len() - _30914_i) > 1LL)) {
					_1a861e169_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1aa9d8377:;
			++it;
			_30914_i++;
			goto _iter_begin_1aa9d8377;
		}
		_iter_end_1aa9d8377:;
	};
	_1a861e169_write(_self_.get()._field_oc, jule::Str(") = ", 4));
	_1a85d23c4_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_30736_a.get()._field_r));
}



inline jule::Fn<void(void)> _1a85c1957_match_expr(jule::Ptr<_1a85be05e_ScopeCoder> _self_, jule::Ptr<_1a766d4b6_Match> _32334_m) {
	if ((!(_1a76ee767_is_const(_32334_m.get()._field_expr.ptr())))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1a861e169_write(_self_.get()._field_oc, jule::Str("_match_expr", 11));
		});
	};
	if (((!(_1a75c6d48_is_bool(_32334_m.get()._field_expr.get()._field_constant.ptr()))) || (!(_1a75c49a0_read_bool(_32334_m.get()._field_expr.get()._field_constant.ptr()))))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1a85d214e_model(_self_.get()._field_oc.get()._field_ec, jule::Any(_32334_m.get()._field_expr.get()._field_model));
		});
	};
	return nullptr;
}



inline void _1a85c1c76_case(jule::Ptr<_1a85be05e_ScopeCoder> _self_, jule::Ptr<_1a766d4b6_Match> _33328_m, jule::Ptr<_1a766d8d4_Case> _33343_c) {
	if (((_33343_c.get()._field_exprs.len() != 0LL) && (!(_1a764a95a_is_generic_type_match(_33328_m.ptr()))))) {
		if (((_33328_m.get()._field_cases.len() > 0LL) && (_33328_m.get()._field_cases[0LL] == _33343_c))) {
			_1a861e169_write(_self_.get()._field_oc, jule::Str("if (", 4));
		} else {
			_1a861e169_write(_self_.get()._field_oc, jule::Str("else if (", 9));
		};
		{
			auto &expr = _33343_c.get()._field_exprs;
			auto it = expr.begin();
			_iter_begin_1aa9e21d8:;
			if (it != expr.end()) {
				jule::I64 _34018_i = it - expr.begin();
				jule::Ptr<_1a76edda4_Data> _34025_expr = *it;
				{
					{
						
						if ((!(_33328_m.get()._field_type_match))) {
							_case_begin_1aa9e364b:;
							{
								jule::Fn<void(void)> _34325_case_expr = _1a85c1957_match_expr(_self_, _33328_m);;
								if (_1a76eea75_good_operand(_33328_m.get()._field_expr.ptr(), _34025_expr)) {
									if ((_34325_case_expr != nullptr)) {
										_34325_case_expr();
										_1a861e169_write(_self_.get()._field_oc, jule::Str(" == ", 4));
									};
									_1a85d23c4_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_34025_expr.get()._field_model));
								} else {
									_1a85d23c4_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_34025_expr.get()._field_model));
									if ((_34325_case_expr != nullptr)) {
										_1a861e169_write(_self_.get()._field_oc, jule::Str(" == ", 4));
										_34325_case_expr();
									};
								};
							}
						}
						else {
							_case_begin_1aa9e32c7:;
							{
								_1a861e169_write(_self_.get()._field_oc, jule::Str("_match_expr", 11));
								_1a861e169_write(_self_.get()._field_oc, jule::Str(".type_is<", 9));
								_1a85d23c4_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_34025_expr.get()._field_model));
								_1a861e169_write(_self_.get()._field_oc, jule::Str(">()", 3));
							}
						}
						_match_end_1aa9e320b:;
					};
					if (((_33343_c.get()._field_exprs.len() - _34018_i) > 1LL)) {
						_1a861e169_write(_self_.get()._field_oc, jule::Str(" || ", 4));
					};
				}
				_iter_next_1aa9e21d8:;
				++it;
				_34018_i++;
				goto _iter_begin_1aa9e21d8;
			}
			_iter_end_1aa9e21d8:;
		};
		_1a861e169_write(_self_.get()._field_oc, jule::Str(") ", 2));
	} else if (((_33328_m.get()._field_default == _33343_c) && (_33328_m.get()._field_cases.len() != 0LL))) {
		_1a862080d_indent(_self_.get()._field_oc);
		_1a861e169_write(_self_.get()._field_oc, jule::Str("else ", 5));
	};
	_1a861e90b_add_indent(_self_.get()._field_oc);
	_1a861e169_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1a862080d_indent(_self_.get()._field_oc);
	_1a861e169_write(_self_.get()._field_oc, static__1a85dba1b_case_begin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_33343_c))));
	_1a861e169_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	if ((_33343_c.get()._field_scope.get()._field_stmts.len() > 0LL)) {
		_1a862080d_indent(_self_.get()._field_oc);
		_1a85c3c56_scope(_self_, _33343_c.get()._field_scope);
		_1a861e169_write(_self_.get()._field_oc, jule::Str("\n", 1));
	};
	_1a86200e3_done_indent(_self_.get()._field_oc);
	_1a862080d_indent(_self_.get()._field_oc);
	_1a861e169_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1a85c1eeb_match_st(jule::Ptr<_1a85be05e_ScopeCoder> _self_, jule::Ptr<_1a766d4b6_Match> _39232_m) {
	if (((_39232_m.get()._field_cases.len() == 0LL) && (_39232_m.get()._field_default == nullptr))) {
		return;;
	};
	jule::Bool _39713_generic_type_match = _1a764a95a_is_generic_type_match(_39232_m.ptr());;
	if ((_39713_generic_type_match && ((_39232_m.get()._field_default == nullptr) || (_39232_m.get()._field_default.get()._field_scope.get()._field_stmts.len() == 0LL)))) {
		return;;
	};
	_1a861e169_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1a861e90b_add_indent(_self_.get()._field_oc);
	_1a862080d_indent(_self_.get()._field_oc);
	if (((!(_39713_generic_type_match)) && (!(_1a76ee767_is_const(_39232_m.get()._field_expr.ptr()))))) {
		if ((_1a52b4c58_COPY && _1a85c432d_is_copy_optimizable(_39232_m.get()._field_expr))) {
			_1a861e169_write(_self_.get()._field_oc, jule::Str("auto &_match_expr{ ", 19));
		} else {
			_1a861e169_write(_self_.get()._field_oc, jule::Str("auto _match_expr{ ", 18));
		};
		_1a85d23c4_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_39232_m.get()._field_expr.get()._field_model));
		_1a861e169_write(_self_.get()._field_oc, jule::Str(" };\n", 4));
		_1a862080d_indent(_self_.get()._field_oc);
	};
	if ((_39232_m.get()._field_cases.len() > 0LL)) {
		{
			auto &expr = _39232_m.get()._field_cases;
			auto it = expr.begin();
			_iter_begin_1aaa06021:;
			if (it != expr.end()) {
				jule::Ptr<_1a766d8d4_Case> _42125_c = *it;
				{
					if ((_42125_c == nullptr)) {
						goto _iter_next_1aaa06021;
					};
					_1a861e169_write(_self_.get()._field_oc, jule::Str("\n", 1));
					_1a862080d_indent(_self_.get()._field_oc);
					_1a85c1c76_case(_self_, _39232_m,_42125_c);
				}
				_iter_next_1aaa06021:;
				++it;
				goto _iter_begin_1aaa06021;
			}
			_iter_end_1aaa06021:;
		};
	};
	if ((_39232_m.get()._field_default != nullptr)) {
		_1a861e169_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1a85c1c76_case(_self_, _39232_m,_39232_m.get()._field_default);
	};
	_1a861e169_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1a862080d_indent(_self_.get()._field_oc);
	_1a861e169_write(_self_.get()._field_oc, static__1a85db774_match_end(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_39232_m))));
	_1a861e169_write(_self_.get()._field_oc, jule::Str(":;", 2));
	_1a861e169_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1a86200e3_done_indent(_self_.get()._field_oc);
	_1a862080d_indent(_self_.get()._field_oc);
	_1a861e169_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1a85c2271_fall_st(jule::Ptr<_1a85be05e_ScopeCoder> _self_, jule::Ptr<_1a766dac1_FallSt> _44827_f) {
	_1a861e169_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1a861e169_write(_self_.get()._field_oc, static__1a85dba1b_case_begin(_44827_f.get()._field_dest_case));
}



inline void _1a85c24e6_break_st(jule::Ptr<_1a85be05e_ScopeCoder> _self_, jule::Ptr<_1a766c839_BreakSt> _45328_b) {
	_1a861e169_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	if ((_45328_b.get()._field_it != 0LLU)) {
		_1a861e169_write(_self_.get()._field_oc, static__1a85dae8d_iter_end(_45328_b.get()._field_it));
	} else {
		_1a861e169_write(_self_.get()._field_oc, static__1a85db774_match_end(_45328_b.get()._field_mtch));
	};
}



inline void _1a85c276b_ret_with_vars(jule::Ptr<_1a85be05e_ScopeCoder> _self_, jule::Ptr<_1a766dcad_RetSt> _46237_r) {
	_1a861e169_write(_self_.get()._field_oc, jule::Str("return ", 7));
	if (_46237_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
		_1a861e169_write(_self_.get()._field_oc, jule::Str("jule::Exceptional<", 18));
		_1a861e169_write(_self_.get()._field_oc, static__1a865d4d8_kind(_46237_r.get()._field_func.get()._field_result));
		_1a861e169_write(_self_.get()._field_oc, jule::Str(">(jule::Any(), ", 15));
	};
	if ((_46237_r.get()._field_vars.len() > 1LL)) {
		_1a861e169_write(_self_.get()._field_oc, jule::Str("std::make_tuple(", 16));
	};
	{
		auto &expr = _46237_r.get()._field_vars;
		auto it = expr.begin();
		_iter_begin_1aaa13dec:;
		if (it != expr.end()) {
			jule::I64 _47214_i = it - expr.begin();
			jule::Ptr<_1a76a7720_Var> _47221_v = *it;
			{
				if (_1a5279aca_is_ignore_ident(_47221_v.get()._field_ident)) {
					_1a85d28be_init_expr(_self_.get()._field_oc.get()._field_ec, _47221_v.get()._field_kind.get()._field_kind);
				} else {
					_1a861e169_write(_self_.get()._field_oc, static__1a85da94e_var(_47221_v));
				};
				if (((_46237_r.get()._field_vars.len() - _47214_i) > 1LL)) {
					_1a861e169_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1aaa13dec:;
			++it;
			_47214_i++;
			goto _iter_begin_1aaa13dec;
		}
		_iter_end_1aaa13dec:;
	};
	if ((_46237_r.get()._field_vars.len() > 1LL)) {
		_1a861e169_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
	if (_46237_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
		_1a861e169_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
}



inline void _1a85c29e1_ret_tuple(jule::Ptr<_1a85be05e_ScopeCoder> _self_, jule::Ptr<_1a766dcad_RetSt> _49233_r) {
	jule::Slice<jule::Ptr<_1a76edda4_Data>> _49317_datas = _49233_r.get()._field_expr.operator jule::Ptr<_1a686d0bd_TupleExprModel>().get()._field_datas;;
	{
		auto &expr = _49233_r.get()._field_vars;
		auto it = expr.begin();
		_iter_begin_1aaa19276:;
		if (it != expr.end()) {
			jule::I64 _49414_i = it - expr.begin();
			jule::Ptr<_1a76a7720_Var> _49421_v = *it;
			{
				if (_1a5279aca_is_ignore_ident(_49421_v.get()._field_ident)) {
					goto _iter_next_1aaa19276;
				};
				jule::Any _49821_model = _49317_datas[_49414_i].get()._field_model;;
				if ((_49821_model == _49421_v)) {
					goto _iter_next_1aaa19276;
				};
				_1a861e169_write(_self_.get()._field_oc, static__1a85da94e_var(_49421_v));
				_1a861e169_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_1a85d23c4_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_49821_model));
				_1a861e169_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				_1a862080d_indent(_self_.get()._field_oc);
			}
			_iter_next_1aaa19276:;
			++it;
			_49414_i++;
			goto _iter_begin_1aaa19276;
		}
		_iter_end_1aaa19276:;
	};
	if (_49233_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
		_1a861e169_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
		_1a861e169_write(_self_.get()._field_oc, static__1a865d4d8_kind(_49233_r.get()._field_func.get()._field_result));
		_1a861e169_write(_self_.get()._field_oc, jule::Str(">(jule::Any(),", 14));
	} else {
		_1a861e169_write(_self_.get()._field_oc, jule::Str("return ", 7));
	};
	_1a861e169_write(_self_.get()._field_oc, jule::Str("std::make_tuple(", 16));
	{
		auto &expr = _49317_datas;
		auto it = expr.begin();
		_iter_begin_1aaa1e6cc:;
		if (it != expr.end()) {
			jule::I64 _51914_i = it - expr.begin();
			jule::Ptr<_1a76edda4_Data> _51921_d = *it;
			{
				jule::Ptr<_1a76a7720_Var> _52021_v = _49233_r.get()._field_vars[_51914_i];;
				if (_1a5279aca_is_ignore_ident(_52021_v.get()._field_ident)) {
					_1a85d23c4_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_51921_d.get()._field_model));
				} else {
					_1a861e169_write(_self_.get()._field_oc, static__1a85da94e_var(_52021_v));
				};
				if (((_49317_datas.len() - _51914_i) > 1LL)) {
					_1a861e169_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1aaa1e6cc:;
			++it;
			_51914_i++;
			goto _iter_begin_1aaa1e6cc;
		}
		_iter_end_1aaa1e6cc:;
	};
	_1a861e169_write(_self_.get()._field_oc, jule::Str(")", 1));
	if (_49233_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
		_1a861e169_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
}



inline void _1a85c2c66_ret_with_exprs(jule::Ptr<_1a85be05e_ScopeCoder> _self_, jule::Ptr<_1a766dcad_RetSt> _53738_r) {
	if ((_53738_r.get()._field_vars.len() > 1LL)) {
		_1a85c29e1_ret_tuple(_self_, _53738_r);
		return;;
	};
	if ((_53738_r.get()._field_vars.len() > 0LL)) {
		jule::Ptr<_1a76a7720_Var> _54521_v = _53738_r.get()._field_vars[0LL];;
		if (((!(_1a5279aca_is_ignore_ident(_54521_v.get()._field_ident))) && (_53738_r.get()._field_expr != _54521_v))) {
			jule::Str _54721_ident = static__1a85da94e_var(_54521_v);;
			_1a861e169_write(_self_.get()._field_oc, _54721_ident);
			_1a861e169_write(_self_.get()._field_oc, jule::Str(" = ", 3));
			_1a85d23c4_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_53738_r.get()._field_expr));
			_1a861e169_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			_1a862080d_indent(_self_.get()._field_oc);
			if (_53738_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
				_1a861e169_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
				_1a861e169_write(_self_.get()._field_oc, static__1a865d4d8_kind(_53738_r.get()._field_func.get()._field_result));
				_1a861e169_write(_self_.get()._field_oc, jule::Str(">(jule::Any(),", 14));
				_1a861e169_write(_self_.get()._field_oc, _54721_ident);
				_1a861e169_write(_self_.get()._field_oc, jule::Str(")", 1));
			} else {
				_1a861e169_write(_self_.get()._field_oc, jule::Str("return ", 7));
				_1a861e169_write(_self_.get()._field_oc, _54721_ident);
			};
			return;;
		};
	};
	if (_53738_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
		_1a861e169_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
		_1a861e169_write(_self_.get()._field_oc, static__1a865d4d8_kind(_53738_r.get()._field_func.get()._field_result));
		_1a861e169_write(_self_.get()._field_oc, jule::Str(">(jule::Any(),", 14));
		_1a85d23c4_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_53738_r.get()._field_expr));
		_1a861e169_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	_1a861e169_write(_self_.get()._field_oc, jule::Str("return ", 7));
	_1a85d23c4_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_53738_r.get()._field_expr));
	return;;
}



inline void _1a85c2edb_ret_st(jule::Ptr<_1a85be05e_ScopeCoder> _self_, jule::Ptr<_1a766dcad_RetSt> _58130_r) {
	if (((_58130_r.get()._field_expr == nullptr) && (_58130_r.get()._field_vars.len() == 0LL))) {
		if (_58130_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
			_1a861e169_write(_self_.get()._field_oc, jule::Str("return jule::VoidExceptional();", 31));
			return;;
		};
		_1a861e169_write(_self_.get()._field_oc, jule::Str("return;", 7));
		return;;
	};
	if ((_58130_r.get()._field_expr == nullptr)) {
		_1a85c276b_ret_with_vars(_self_, _58130_r);
		return;;
	};
	_1a85c2c66_ret_with_exprs(_self_, _58130_r);
}



inline void _1a85c34d6_var(jule::Ptr<_1a85be05e_ScopeCoder> _self_, jule::Ptr<_1a76a7720_Var> _61627_v) {
	if ((!(_61627_v.get()._field_constant))) {
		_1a865507e_var(_self_.get()._field_oc, _61627_v);
	};
}



inline void _1a85c375b_st(jule::Ptr<_1a85be05e_ScopeCoder> _self_, jule::Any _62326_st) {
	if ((_62326_st == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _62326_st };
		
		if (_match_expr.type_is<jule::Ptr<_1a7658803_Scope>>()) {
			_case_begin_1aaa38a37:;
			{
				_1a85c3c56_scope(_self_, _62326_st.operator jule::Ptr<_1a7658803_Scope>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a76a7720_Var>>()) {
			_case_begin_1aaa39560:;
			{
				_1a85c34d6_var(_self_, _62326_st.operator jule::Ptr<_1a76a7720_Var>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a76edda4_Data>>()) {
			_case_begin_1aaa395c6:;
			{
				_1a85d23c4_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_62326_st.operator jule::Ptr<_1a76edda4_Data>()));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a7609e69_Conditional>>()) {
			_case_begin_1aaa3963c:;
			{
				_1a85bedd9_conditional(_self_, _62326_st.operator jule::Ptr<_1a7609e69_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a761aa90_InfIter>>()) {
			_case_begin_1aaa396a3:;
			{
				_1a85c015e_inf_iter(_self_, _62326_st.operator jule::Ptr<_1a761aa90_InfIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a761ac7c_WhileIter>>()) {
			_case_begin_1aaa39719:;
			{
				_1a85c03d4_while_iter(_self_, _62326_st.operator jule::Ptr<_1a761ac7c_WhileIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a7648b23_RangeIter>>()) {
			_case_begin_1aaa39780:;
			{
				_1a85c0659_range_iter(_self_, _62326_st.operator jule::Ptr<_1a7648b23_RangeIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a7648d10_ContSt>>()) {
			_case_begin_1aaa397e6:;
			{
				_1a85c08ce_cont(_self_, _62326_st.operator jule::Ptr<_1a7648d10_ContSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a766ca26_Label>>()) {
			_case_begin_1aaa3985c:;
			{
				_1a85c0b54_label(_self_, _62326_st.operator jule::Ptr<_1a766ca26_Label>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a766cc13_GotoSt>>()) {
			_case_begin_1aaa398c3:;
			{
				_1a85c0dc9_goto_st(_self_, _62326_st.operator jule::Ptr<_1a766cc13_GotoSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a766ce00_Postfix>>()) {
			_case_begin_1aaa39939:;
			{
				_1a85c114e_postfix(_self_, _62326_st.operator jule::Ptr<_1a766ce00_Postfix>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a766d0dc_Assign>>()) {
			_case_begin_1aaa399a0:;
			{
				_1a85c13c4_assign(_self_, _62326_st.operator jule::Ptr<_1a766d0dc_Assign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a766d2c9_MultiAssign>>()) {
			_case_begin_1aaa39a16:;
			{
				_1a85c1649_multi_assign(_self_, _62326_st.operator jule::Ptr<_1a766d2c9_MultiAssign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a766d4b6_Match>>()) {
			_case_begin_1aaa39a7c:;
			{
				_1a85c1eeb_match_st(_self_, _62326_st.operator jule::Ptr<_1a766d4b6_Match>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a766dac1_FallSt>>()) {
			_case_begin_1aaa39b04:;
			{
				_1a85c2271_fall_st(_self_, _62326_st.operator jule::Ptr<_1a766dac1_FallSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a766c839_BreakSt>>()) {
			_case_begin_1aaa39b7b:;
			{
				_1a85c24e6_break_st(_self_, _62326_st.operator jule::Ptr<_1a766c839_BreakSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a766dcad_RetSt>>()) {
			_case_begin_1aaa39c03:;
			{
				_1a85c2edb_ret_st(_self_, _62326_st.operator jule::Ptr<_1a766dcad_RetSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a55c2263_PushToSliceExprModel>>()) {
			_case_begin_1aaa39c7a:;
			{
				_1a85d00d6_push_to_slice(_self_.get()._field_oc.get()._field_ec, _62326_st.operator jule::Ptr<_1a55c2263_PushToSliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a65b8764_MutSlicingExprModel>>()) {
			_case_begin_1aaa39d02:;
			{
				_1a85d1b54_mut_slicing(_self_.get()._field_oc.get()._field_ec, _62326_st.operator jule::Ptr<_1a65b8764_MutSlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a534733a_StrInsertBeginExprModel>>()) {
			_case_begin_1aaa39d79:;
			{
				_1a85d1dc9_str_insert_begin(_self_.get()._field_oc.get()._field_ec, _62326_st.operator jule::Ptr<_1a534733a_StrInsertBeginExprModel>());
			}
		}
		else {
			_case_begin_1aaa38817:;
			{
				_1a861e169_write(_self_.get()._field_oc, jule::Str("<unimplemented_stmt>", 20));
			}
		}
		_match_end_1aaa387b2:;
	};
}



inline void _1a85c39d1_scope_stmts(jule::Ptr<_1a85be05e_ScopeCoder> _self_, jule::Ptr<_1a7658803_Scope>& _67336_s) {
	{
		auto &expr = _67336_s.get()._field_stmts;
		auto it = expr.begin();
		_iter_begin_1aaa474a2:;
		if (it != expr.end()) {
			jule::Any _67421_st = *it;
			{
				_1a862080d_indent(_self_.get()._field_oc);
				_1a85c375b_st(_self_, jule::Any(_67421_st));
				_1a861e169_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			}
			_iter_next_1aaa474a2:;
			++it;
			goto _iter_begin_1aaa474a2;
		}
		_iter_end_1aaa474a2:;
	};
}



inline void _1a85c3c56_scope(jule::Ptr<_1a85be05e_ScopeCoder> _self_, jule::Ptr<_1a7658803_Scope> _68229_s) {
	_1a861e90b_add_indent(_self_.get()._field_oc);
	if (_68229_s.get()._field_deferred) {
		_1a861e169_write(_self_.get()._field_oc, jule::Str("__JULE_DEFER(", 13));
	};
	_1a861e169_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1a85c39d1_scope_stmts(_self_, _68229_s);
	_1a86200e3_done_indent(_self_.get()._field_oc);
	_1a862080d_indent(_self_.get()._field_oc);
	_1a861e169_write(_self_.get()._field_oc, jule::Str("}", 1));
	if (_68229_s.get()._field_deferred) {
		_1a861e169_write(_self_.get()._field_oc, jule::Str(");", 2));
	};
}



inline void _1a85c3ecb_func_scope(jule::Ptr<_1a85be05e_ScopeCoder> _self_, jule::Ptr<_1a6872c93_FnIns> _69834_f) {
	if ((_69834_f.get()._field_scope == nullptr)) {
		return;;
	};
	_1a861e169_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1a861e90b_add_indent(_self_.get()._field_oc);
	if ((!(_1a6847eee_is_void(_69834_f.get()._field_decl.ptr())))) {
		jule::Slice<jule::Ptr<_1a77278d3_TypeKind>> _70521_types = _1a68737aa_types(_69834_f.ptr());;
		{
			auto &expr = _69834_f.get()._field_decl.get()._field_result.get()._field_idents;
			auto it = expr.begin();
			_iter_begin_1aaa4de7b:;
			if (it != expr.end()) {
				jule::I64 _70617_i = it - expr.begin();
				jule::Ptr<_1a527737a_Token> _70620_ident = *it;
				{
					if ((_1a5279aca_is_ignore_ident(_70620_ident.get()._field_kind) || _1a5279d72_is_anon_ident(_70620_ident.get()._field_kind))) {
						goto _iter_next_1aaa4de7b;
					};
					_1a862080d_indent(_self_.get()._field_oc);
					_1a861e169_write(_self_.get()._field_oc, static__1a865d4d8_kind(_70521_types[_70617_i]));
					_1a861e169_write(_self_.get()._field_oc, jule::Str(" ", 1));
					_1a861e169_write(_self_.get()._field_oc, static__1a85d9343_to_local(_70620_ident.get()._field_row,_70620_ident.get()._field_column,_70620_ident.get()._field_kind));
					_1a861e169_write(_self_.get()._field_oc, jule::Str(" = ", 3));
					_1a85d28be_init_expr(_self_.get()._field_oc.get()._field_ec, _70521_types[_70617_i]);
					_1a861e169_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				}
				_iter_next_1aaa4de7b:;
				++it;
				_70617_i++;
				goto _iter_begin_1aaa4de7b;
			}
			_iter_end_1aaa4de7b:;
		};
	};
	_1a85c39d1_scope_stmts(_self_, _69834_f.get()._field_scope);
	if ((_69834_f.get()._field_decl.get()._field_exceptional && _1a6847eee_is_void(_69834_f.get()._field_decl.ptr()))) {
		_1a861e169_write(_self_.get()._field_oc, jule::Str(" return jule::VoidExceptional();\n", 33));
	};
	_1a86200e3_done_indent(_self_.get()._field_oc);
	_1a862080d_indent(_self_.get()._field_oc);
	_1a861e169_write(_self_.get()._field_oc, jule::Str("}", 1));
}







std::ostream &operator<<(std::ostream &_Stream, _1a85be05e_ScopeCoder _Src) {
	_Stream << "ScopeCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a85c6a06_ExprCoder> static__1a85c6e02_new(jule::Ptr<_1a8615281_ObjectCoder>& _9024_oc) {
	return jule::new_ptr<_1a85c6a06_ExprCoder>(_1a85c6a06_ExprCoder{._field_oc=_9024_oc});
}



inline void _1a85c7177_string(jule::Ptr<_1a85c6a06_ExprCoder> _self_, jule::Ptr<_1a75c3251_Const>& _9627_c) {
	jule::Str _9713_content = _1a75c4c14_read_str(_9627_c.ptr());;
	if ((_9713_content.len() == 0LL)) {
		_1a861e169_write(_self_.get()._field_oc, jule::Str("jule::Str()", 11));
		return;;
	};
	jule::Slice<jule::U8> _10213_bytes = static_cast<jule::Slice<jule::U8>>(_9713_content);;
	jule::Str _10313_len = _1a7538bbc_fmt_int(static_cast<jule::I64>(static_cast<jule::I64>(_10213_bytes.len())),10LL);;
	jule::Str _10413_lit = _1a85d3590_cstr_lit(_10213_bytes);;
	_1a861e169_write(_self_.get()._field_oc, jule::Str("jule::Str", 9));
	_1a861e169_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1a861e169_write(_self_.get()._field_oc, _10413_lit);
	_1a861e169_write(_self_.get()._field_oc, jule::Str(", ", 2));
	_1a861e169_write(_self_.get()._field_oc, _10313_len);
	_1a861e169_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a85c73ec_boolean(jule::Ptr<_1a85c6a06_ExprCoder> _self_, jule::Ptr<_1a75c3251_Const>& _11328_c) {
	if (_1a75c49a0_read_bool(_11328_c.ptr())) {
		_1a861e169_write(_self_.get()._field_oc, jule::Str("true", 4));
		return;;
	};
	_1a861e169_write(_self_.get()._field_oc, jule::Str("false", 5));
}



inline void _1a85c75c8_nil_lit(jule::Ptr<_1a85c6a06_ExprCoder> _self_) {
	_1a861e169_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
}



inline jule::Bool _1a85c78d6_ftoa_special_cases(jule::Ptr<_1a85c6a06_ExprCoder> _self_, jule::F64& _12539_x) {
	{
		
		if (_1a746d030_is_nan(_12539_x)) {
			_case_begin_1aaa61686:;
			{
				_1a861e169_write(_self_.get()._field_oc, jule::Str("NAN", 3));
			}
		}
		else if (_1a748033e_is_inf(_12539_x,1LL)) {
			_case_begin_1aaa61763:;
			{
				_1a861e169_write(_self_.get()._field_oc, jule::Str("INFINITY", 8));
			}
		}
		else if (_1a748033e_is_inf(_12539_x,-1LL)) {
			_case_begin_1aaa617c9:;
			{
				_1a861e169_write(_self_.get()._field_oc, jule::Str("-INFINITY", 9));
			}
		}
		else {
			_case_begin_1aaa6106a:;
			{
				return false;
			}
		}
		_match_end_1aaa60e9e:;
	};
	return true;
}



inline void _1a85c7b5b_float32(jule::Ptr<_1a85c6a06_ExprCoder> _self_, jule::Ptr<_1a75c3251_Const>& _13928_c) {
	jule::F64 _14013_x = _1a75c56b5_as_f64(_13928_c.ptr());;
	if (_1a85c78d6_ftoa_special_cases(_self_, _14013_x)) {
		return;;
	};
	{
		
		if ((_14013_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_1aaa64c94:;
			{
				_1a861e169_write(_self_.get()._field_oc, jule::Str("jule::MAX_F32", 13));
			}
		}
		else if ((_14013_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_1aaa649b9:;
			{
				_1a861e169_write(_self_.get()._field_oc, jule::Str("jule::MIN_F32", 13));
			}
		}
		else {
			_case_begin_1aaa64953:;
			{
				_1a861e169_write(_self_.get()._field_oc, _1a85d38d1_ftoa(_14013_x,32LL));
				_1a861e169_write(_self_.get()._field_oc, jule::Str("f", 1));
			}
		}
		_match_end_1aaa64821:;
	};
}



inline void _1a85c7dd1_float64(jule::Ptr<_1a85c6a06_ExprCoder> _self_, jule::Ptr<_1a75c3251_Const>& _15828_c) {
	jule::F64 _15913_x = _1a75c56b5_as_f64(_15828_c.ptr());;
	if (_1a85c78d6_ftoa_special_cases(_self_, _15913_x)) {
		return;;
	};
	{
		
		if ((_15913_x == jule::MAX_F64)) {
			_case_begin_1aaa686e3:;
			{
				_1a861e169_write(_self_.get()._field_oc, jule::Str("jule::MAX_F64", 13));
			}
		}
		else if ((_15913_x == jule::MIN_F64)) {
			_case_begin_1aaa68418:;
			{
				_1a861e169_write(_self_.get()._field_oc, jule::Str("jule::MIN_F64", 13));
			}
		}
		else {
			_case_begin_1aaa683a2:;
			{
				_1a861e169_write(_self_.get()._field_oc, _1a85d38d1_ftoa(_15913_x,64LL));
			}
		}
		_match_end_1aaa68292:;
	};
}



inline void _1a85c8200_constant(jule::Ptr<_1a85c6a06_ExprCoder> _self_, jule::Ptr<_1a75c3251_Const> _17732_c, jule::Bool _17743_fx32) {
	{
		
		if (_1a75c70ac_is_str(_17732_c.ptr())) {
			_case_begin_1aaa6b0b9:;
			{
				_1a85c7177_string(_self_, _17732_c);
			}
		}
		else if (_1a75c6d48_is_bool(_17732_c.ptr())) {
			_case_begin_1aaa6b130:;
			{
				_1a85c73ec_boolean(_self_, _17732_c);
			}
		}
		else if (_1a75c7321_is_f64(_17732_c.ptr())) {
			_case_begin_1aaa6b196:;
			{
				{
					
					if (_17743_fx32) {
						_case_begin_1aaa6d583:;
						{
							_1a85c7b5b_float32(_self_, _17732_c);
						}
					}
					else {
						_case_begin_1aaa6d20e:;
						{
							_1a85c7dd1_float64(_self_, _17732_c);
						}
					}
					_match_end_1aaa6d143:;
				};
			}
		}
		else if (_1a75c6870_is_i64(_17732_c.ptr())) {
			_case_begin_1aaa6b20c:;
			{
				_1a861e169_write(_self_.get()._field_oc, _1a85d3b78_itoa(static_cast<jule::I64>(_1a75c44c7_read_i64(_17732_c.ptr()))));
			}
		}
		else if (_1a75c6ad4_is_u64(_17732_c.ptr())) {
			_case_begin_1aaa6bad1:;
			{
				_1a861e169_write(_self_.get()._field_oc, _1a85d3e20_utoa(static_cast<jule::U64>(_1a75c473b_read_u64(_17732_c.ptr()))));
			}
		}
		else if (_1a75c7585_is_nil(_17732_c.ptr())) {
			_case_begin_1aaa6bb47:;
			{
				_1a85c75c8_nil_lit(_self_);
			}
		}
		else {
			_case_begin_1aaa6b053:;
			{
				_1a861e169_write(_self_.get()._field_oc, jule::Str("<unimplemented_constant_expression>", 35));
			}
		}
		_match_end_1aaa6ae98:;
	};
}



inline void _1a85c85b8_div_by_zero_binary(jule::Ptr<_1a85c6a06_ExprCoder> _self_, jule::Ptr<_1a527737a_Token>& _20139_op, jule::Ptr<_1a68382db_OperandExprModel>& _20156_l, jule::Ptr<_1a68382db_OperandExprModel>& _20183_r) {
	_1a861e169_write(_self_.get()._field_oc, jule::Str("jule::", 6));
	{
		auto &_match_expr{ _20139_op.get()._field_kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("/=", 2)) {
			_case_begin_1aaa72268:;
			{
				_1a861e169_write(_self_.get()._field_oc, jule::Str("div(", 4));
			}
		}
		else if (_match_expr == jule::Str("%", 1) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_1aaa722ce:;
			{
				_1a861e169_write(_self_.get()._field_oc, jule::Str("mod(", 4));
			}
		}
		_match_end_1aaa72202:;
	};
	if ((!(_1e0ca2c16_PRODUCTION))) {
		_1a861e169_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1a8622568_loc_info(_self_.get()._field_oc, _20139_op);
		_1a861e169_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_1a85d23c4_expr(_self_, jule::Any(_20156_l.get()._field_model));
	_1a861e169_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1a85d23c4_expr(_self_, jule::Any(_20183_r.get()._field_model));
	_1a861e169_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a85c883d_unsafe_binary(jule::Ptr<_1a85c6a06_ExprCoder> _self_, jule::Ptr<_1a684b145_BinopExprModel> _22337_m) {
	_1a861e169_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1a85d214e_model(_self_, jule::Any(_22337_m.get()._field_left.get()._field_model));
	_1a861e169_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1a861e169_write(_self_.get()._field_oc, _22337_m.get()._field_op.get()._field_kind);
	_1a861e169_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1a85d214e_model(_self_, jule::Any(_22337_m.get()._field_right.get()._field_model));
	_1a861e169_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a85c8ab3_binary(jule::Ptr<_1a85c6a06_ExprCoder> _self_, jule::Ptr<_1a684b145_BinopExprModel> _23330_m) {
	{
		auto &_match_expr{ _23330_m.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("%", 1)) {
			_case_begin_1aaa7a7c1:;
			{
				if ((_1a772ab7d_strct(_23330_m.get()._field_left.get()._field_kind.ptr()) == nullptr)) {
					_1a85c85b8_div_by_zero_binary(_self_, _23330_m.get()._field_op,_23330_m.get()._field_left,_23330_m.get()._field_right);
					return;;
				};
			}
		}
		_match_end_1aaa7a716:;
	};
	_1a85c883d_unsafe_binary(_self_, _23330_m);
}



inline void _1a85c8d38_var(jule::Ptr<_1a85c6a06_ExprCoder> _self_, jule::Ptr<_1a76a7720_Var> _24527_m) {
	if (_24527_m.get()._field_cpp_linked) {
		jule::Ptr<_1a6852525_Directive> _24717_d = _1a866030e_find_directive(_24527_m.get()._field_directives,jule::Str("namespace", 9));;
		if ((_24717_d != nullptr)) {
			_1a861e169_write(_self_.get()._field_oc, _1a8657966_concat_all_parts(_24717_d.get()._field_args));
			_1a861e169_write(_self_.get()._field_oc, jule::Str("::", 2));
		};
	};
	_1a861e169_write(_self_.get()._field_oc, static__1a85da94e_var(_24527_m));
}



inline void _1a85c90ad_structure(jule::Ptr<_1a85c6a06_ExprCoder> _self_, jule::Ptr<_1a6826829_Struct> _25629_m) {
	_1a861e169_write(_self_.get()._field_oc, static__1a865bb35_structure(_25629_m));
}



inline void _1a85c9333_structure_ins(jule::Ptr<_1a85c6a06_ExprCoder> _self_, jule::Ptr<_1a6836a48_StructIns> _26037_m) {
	_1a861e169_write(_self_.get()._field_oc, static__1a865bdcc_structure_ins(_26037_m));
}



inline void _1a85c95a8_unary(jule::Ptr<_1a85c6a06_ExprCoder> _self_, jule::Ptr<_1a6849e79_UnaryExprModel> _26429_m) {
	{
		auto &_match_expr{ _26429_m.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1aaa838a6:;
			{
				_1a861e169_write(_self_.get()._field_oc, jule::Str("(~(", 3));
				_1a85d23c4_expr(_self_, jule::Any(_26429_m.get()._field_expr.get()._field_model));
				_1a861e169_write(_self_.get()._field_oc, jule::Str("))", 2));
				return;;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1aaa8391c:;
			{
				if ((_1e0ca2c16_PRODUCTION || (_1a7729c04_sptr(_26429_m.get()._field_expr.get()._field_kind.ptr()) == nullptr))) {
					goto _match_end_1aaa837eb;
				};
				_1a85d23c4_expr(_self_, jule::Any(_26429_m.get()._field_expr.get()._field_model));
				_1a861e169_write(_self_.get()._field_oc, jule::Str(".get(\"", 6));
				_1a8622568_loc_info(_self_.get()._field_oc, _26429_m.get()._field_op);
				_1a861e169_write(_self_.get()._field_oc, jule::Str("\")", 2));
				return;;
			}
		}
		_match_end_1aaa837eb:;
	};
	_1a861e169_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1a861e169_write(_self_.get()._field_oc, _26429_m.get()._field_op.get()._field_kind);
	_1a861e169_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1a85d23c4_expr(_self_, jule::Any(_26429_m.get()._field_expr.get()._field_model));
	_1a861e169_write(_self_.get()._field_oc, jule::Str("))", 2));
}



inline void _1a85c982d_structure_lit(jule::Ptr<_1a85c6a06_ExprCoder> _self_, jule::Ptr<_1a682b752_StructLitExprModel> _28837_m) {
	if (_28837_m.get()._field_strct.get()._field_decl.get()._field_cpp_linked) {
		_1a861e169_write(_self_.get()._field_oc, jule::Str("(", 1));
	};
	_1a861e169_write(_self_.get()._field_oc, static__1a85da410_structure_ins(_28837_m.get()._field_strct));
	if (_28837_m.get()._field_strct.get()._field_decl.get()._field_cpp_linked) {
		_1a861e169_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
	_1a861e169_write(_self_.get()._field_oc, jule::Str("{", 1));
	if ((_28837_m.get()._field_args.len() > 0LL)) {
		_julec_label_iter:;
		{
			auto &expr = _28837_m.get()._field_strct.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_1aaa8c86b:;
			if (it != expr.end()) {
				jule::I64 _30117_i = it - expr.begin();
				jule::Ptr<_1a6830899_FieldIns> _30120_f = *it;
				{
					{
						auto &expr = _28837_m.get()._field_args;
						auto it = expr.begin();
						_iter_begin_1aaa8d3d8:;
						if (it != expr.end()) {
							jule::Ptr<_1a6827e8a_StructArgExprModel> _30229_arg = *it;
							{
								if ((_30229_arg.get()._field_field == _30120_f)) {
									_1a861e169_write(_self_.get()._field_oc, jule::Str(".", 1));
									_1a861e169_write(_self_.get()._field_oc, static__1a85da6a7_field(_30229_arg.get()._field_field.get()._field_decl));
									_1a861e169_write(_self_.get()._field_oc, jule::Str("=", 1));
									_1a85d23c4_expr(_self_, jule::Any(_30229_arg.get()._field_expr));
									if (((_28837_m.get()._field_strct.get()._field_fields.len() - _30117_i) > 1LL)) {
										_1a861e169_write(_self_.get()._field_oc, jule::Str(", ", 2));
									};
									goto _iter_next_1aaa8c86b;
								};
							}
							_iter_next_1aaa8d3d8:;
							++it;
							goto _iter_begin_1aaa8d3d8;
						}
						_iter_end_1aaa8d3d8:;
					};
				}
				_iter_next_1aaa8c86b:;
				++it;
				_30117_i++;
				goto _iter_begin_1aaa8c86b;
			}
			_iter_end_1aaa8c86b:;
		};
	};
	_1a861e169_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1a85c9aa3_alloc_structure(jule::Ptr<_1a85c6a06_ExprCoder> _self_, jule::Ptr<_1a68225b1_AllocStructLitExprModel> _31939_m) {
	_1a861e169_write(_self_.get()._field_oc, jule::Str("jule::new_ptr<", 14));
	_1a861e169_write(_self_.get()._field_oc, static__1a85da410_structure_ins(_31939_m.get()._field_lit.get()._field_strct));
	_1a861e169_write(_self_.get()._field_oc, jule::Str(">(", 2));
	_1a85c982d_structure_lit(_self_, _31939_m.get()._field_lit);
	_1a861e169_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a85c9d28_casting(jule::Ptr<_1a85c6a06_ExprCoder> _self_, jule::Ptr<_1a684003a_CastingExprModel> _32731_m) {
	{
		
		if (((_1a7729990_prim(_32731_m.get()._field_kind.ptr()) != nullptr) && _1a7730358_is_any(_1a7729990_prim(_32731_m.get()._field_kind.ptr()).ptr()))) {
			_case_begin_1aaa95a0b:;
			{
				_1a861e169_write(_self_.get()._field_oc, static__1a865d4d8_kind(_32731_m.get()._field_kind));
				_1a861e169_write(_self_.get()._field_oc, jule::Str("(", 1));
				_1a85d214e_model(_self_, jule::Any(_32731_m.get()._field_expr));
				_1a861e169_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		else if ((_1a7729e68_ptr(_32731_m.get()._field_expr_kind.ptr()) != nullptr) || (_1a7729e68_ptr(_32731_m.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aaa956ed:;
			{
				_1a861e169_write(_self_.get()._field_oc, jule::Str("((", 2));
				_1a861e169_write(_self_.get()._field_oc, static__1a865d4d8_kind(_32731_m.get()._field_kind));
				_1a861e169_write(_self_.get()._field_oc, jule::Str(")(", 2));
				_1a85d23c4_expr(_self_, jule::Any(_32731_m.get()._field_expr));
				_1a861e169_write(_self_.get()._field_oc, jule::Str("))", 2));
			}
		}
		else if ((_1a772ade2_trt(_32731_m.get()._field_expr_kind.ptr()) != nullptr) || ((_1a7729990_prim(_32731_m.get()._field_expr_kind.ptr()) != nullptr) && _1a7730358_is_any(_1a7729990_prim(_32731_m.get()._field_expr_kind.ptr()).ptr()))) {
			_case_begin_1aaa95764:;
			{
				_1a85d214e_model(_self_, jule::Any(_32731_m.get()._field_expr));
				_1a861e169_write(_self_.get()._field_oc, jule::Str(".", 1));
				if (_1e0ca2c16_PRODUCTION) {
					_1a861e169_write(_self_.get()._field_oc, jule::Str("operator ", 9));
					_1a861e169_write(_self_.get()._field_oc, static__1a865d4d8_kind(_32731_m.get()._field_kind));
					_1a861e169_write(_self_.get()._field_oc, jule::Str("()", 2));
				} else {
					if (((_1a772ade2_trt(_32731_m.get()._field_expr_kind.ptr()) != nullptr) && (_1a7729c04_sptr(_32731_m.get()._field_kind.ptr()) != nullptr))) {
						_1a861e169_write(_self_.get()._field_oc, jule::Str("cast_ptr<", 9));
						_1a861e169_write(_self_.get()._field_oc, static__1a865d4d8_kind(_1a7729c04_sptr(_32731_m.get()._field_kind.ptr()).get()._field_elem));
					} else {
						_1a861e169_write(_self_.get()._field_oc, jule::Str("cast<", 5));
						_1a861e169_write(_self_.get()._field_oc, static__1a865d4d8_kind(_32731_m.get()._field_kind));
					};
					_1a861e169_write(_self_.get()._field_oc, jule::Str(">(\"", 3));
					_1a8622568_loc_info(_self_.get()._field_oc, _32731_m.get()._field_token);
					_1a861e169_write(_self_.get()._field_oc, jule::Str("\")", 2));
				};
			}
		}
		else if ((_1a772ade2_trt(_32731_m.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aaa957ca:;
			{
				_1a861e169_write(_self_.get()._field_oc, static__1a865d4d8_kind(_32731_m.get()._field_kind));
				_1a861e169_write(_self_.get()._field_oc, jule::Str("(", 1));
				_1a85d23c4_expr(_self_, jule::Any(_32731_m.get()._field_expr));
				_1a861e169_write(_self_.get()._field_oc, jule::Str(", ", 2));
				_1a861e169_write(_self_.get()._field_oc, _1a7538cee_itoa(static_cast<jule::I64>(_1a8621028_find_type_offset(_self_.get()._field_oc.ptr(), _1a772ade2_trt(_32731_m.get()._field_kind.ptr()),_32731_m.get()._field_expr_kind))));
				_1a861e169_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		else {
			_case_begin_1aaa95687:;
			{
				_1a861e169_write(_self_.get()._field_oc, jule::Str("static_cast<", 12));
				_1a861e169_write(_self_.get()._field_oc, static__1a865d4d8_kind(_32731_m.get()._field_kind));
				_1a861e169_write(_self_.get()._field_oc, jule::Str(">(", 2));
				_1a85d23c4_expr(_self_, jule::Any(_32731_m.get()._field_expr));
				_1a861e169_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1aaa955bb:;
	};
}



inline void _1a85ca09d_args(jule::Ptr<_1a85c6a06_ExprCoder> _self_, jule::Slice<jule::Any> _37728_args) {
	if ((_37728_args.len() == 0LL)) {
		return;;
	};
	{
		auto &expr = _37728_args;
		auto it = expr.begin();
		_iter_begin_1aaaa8cc7:;
		if (it != expr.end()) {
			jule::I64 _38114_i = it - expr.begin();
			jule::Any _38121_a = *it;
			{
				_1a85d23c4_expr(_self_, jule::Any(_38121_a));
				if (((_37728_args.len() - _38114_i) > 1LL)) {
					_1a861e169_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1aaaa8cc7:;
			++it;
			_38114_i++;
			goto _iter_begin_1aaaa8cc7;
		}
		_iter_end_1aaaa8cc7:;
	};
}



inline void _1a85ca323_model_for_call(jule::Ptr<_1a85c6a06_ExprCoder> _self_, jule::Any _38938_expr) {
	{
		auto &_match_expr{ _38938_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1a6872c93_FnIns>>()) {
			_case_begin_1aaaaadd9:;
			{
				_1a85cd106_func_ins(_self_, _38938_expr.operator jule::Ptr<_1a6872c93_FnIns>());
				return;;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a686c62d_StructSubIdentExprModel>>()) {
			_case_begin_1aaaaae61:;
			{
				jule::Ptr<_1a686c62d_StructSubIdentExprModel> _39521_ssie = _38938_expr.operator jule::Ptr<_1a686c62d_StructSubIdentExprModel>();;
				if ((_39521_ssie.get()._field_method != nullptr)) {
					_1a85cd106_func_ins(_self_, _39521_ssie.get()._field_method);
					return;;
				};
			}
		}
		_match_end_1aaaaad73:;
	};
	_1a85d214e_model(_self_, jule::Any(_38938_expr));
}



inline void _1a85ca598_push_call_inf(jule::Ptr<_1a85c6a06_ExprCoder> _self_, jule::Ptr<_1a6845150_FnCallExprModel>& _40434_m) {
	if ((_1e0ca2c16_PRODUCTION || ((!(_40434_m.get()._field_func.get()._field_anon)) && (!(_1a85d4519_is_builtin_call_has_debuginf(_40434_m)))))) {
		_1a861e169_write(_self_.get()._field_oc, jule::Str("(", 1));
		return;;
	};
	if (_40434_m.get()._field_func.get()._field_anon) {
		{
			auto &_match_expr{ _40434_m.get()._field_expr };
			
			if (_match_expr.type_is<jule::Ptr<_1a686c62d_StructSubIdentExprModel>>()) {
				_case_begin_1aaab4e9d:;
				{
					if (_40434_m.get()._field_expr.operator jule::Ptr<_1a686c62d_StructSubIdentExprModel>().get()._field_field.get()._field_decl.get()._field_owner.get()._field_cpp_linked) {
						_1a861e169_write(_self_.get()._field_oc, jule::Str("(", 1));
						return;;
					};
					goto _case_begin_1aaab51ce;
				}
			}
			else {
				_case_begin_1aaab51ce:;
				{
					_1a861e169_write(_self_.get()._field_oc, jule::Str(".call", 5));
				}
			}
			_match_end_1aaab5179:;
		};
	};
	_1a861e169_write(_self_.get()._field_oc, jule::Str("(\"", 2));
	_1a8622568_loc_info(_self_.get()._field_oc, _40434_m.get()._field_token);
	_1a861e169_write(_self_.get()._field_oc, jule::Str("\"", 1));
	if ((_40434_m.get()._field_args.len() != 0LL)) {
		_1a861e169_write(_self_.get()._field_oc, jule::Str(",", 1));
	};
}



inline jule::Bool _1a85ca8a6_is_wrapped(jule::Ptr<_1a85c6a06_ExprCoder> _self_, jule::Ptr<_1a6845150_FnCallExprModel>& _42935_m) {
	if ((((!(_1a6873a1e_is_builtin(_42935_m.get()._field_func.ptr()))) && (_42935_m.get()._field_func.get()._field_decl.get()._field_params.len() > 0LL)) && _1a68491ed_is_self(_42935_m.get()._field_func.get()._field_decl.get()._field_params[0LL].ptr()))) {
		{
			auto &_match_expr{ _42935_m.get()._field_expr };
			
			if (_match_expr.type_is<jule::Ptr<_1a686c62d_StructSubIdentExprModel>>()) {
				_case_begin_1aaab9711:;
				{
					jule::Ptr<_1a686c62d_StructSubIdentExprModel> _43325_ssie = _42935_m.get()._field_expr.operator jule::Ptr<_1a686c62d_StructSubIdentExprModel>();;
					{
						
						if (_1a6831ba8_is_ref(_42935_m.get()._field_func.get()._field_decl.get()._field_params[0LL].ptr()) || (_1a7729c04_sptr(_43325_ssie.get()._field_expr_kind.ptr()) != nullptr)) {
							_case_begin_1aaabc604:;
							{
								goto _match_end_1aaaba49d;
							}
						}
						else {
							_case_begin_1aaaba514:;
							{
								if ((_1a772ab7d_strct(_43325_ssie.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
									if ((!(_43325_ssie.get()._field_expr.get()._field_lvalue))) {
										_1a861e169_write(_self_.get()._field_oc, jule::Str("({ auto _wrap_copy = ", 21));
										_1a85d214e_model(_self_, jule::Any(_43325_ssie.get()._field_expr));
										_1a861e169_write(_self_.get()._field_oc, jule::Str("; ", 2));
										return true;
									};
								};
							}
						}
						_match_end_1aaaba49d:;
					};
				}
			}
			_match_end_1aaab9678:;
		};
	};
	return false;
}



inline void _1a85cab2b_pure_func_call(jule::Ptr<_1a85c6a06_ExprCoder> _self_, jule::Ptr<_1a6845150_FnCallExprModel>& _45339_m) {
	jule::Bool _45413_wrapped = _1a85ca8a6_is_wrapped(_self_, _45339_m);;
	if (_45339_m.get()._field_is_co) {
		_1a861e169_write(_self_.get()._field_oc, jule::Str("__JULE_CO(", 10));
	};
	_1a85ca323_model_for_call(_self_, jule::Any(_45339_m.get()._field_expr));
	if ((!(_1a6873a1e_is_builtin(_45339_m.get()._field_func.ptr())))) {
		if ((_45339_m.get()._field_func.get()._field_decl.get()._field_cpp_linked && (_45339_m.get()._field_func.get()._field_generics.len() > 0LL))) {
			if ((!(_1a8660694_has_directive(_45339_m.get()._field_func.get()._field_decl.get()._field_directives,jule::Str("cdef", 4))))) {
				_1a861e169_write(_self_.get()._field_oc, jule::Str("<", 1));
				{
					auto &expr = _45339_m.get()._field_func.get()._field_generics;
					auto it = expr.begin();
					_iter_begin_1aaac240b:;
					if (it != expr.end()) {
						jule::I64 _46326_i = it - expr.begin();
						jule::Ptr<_1a77278d3_TypeKind> _46333_g = *it;
						{
							_1a861e169_write(_self_.get()._field_oc, static__1a865d4d8_kind(_46333_g));
							if (((_45339_m.get()._field_func.get()._field_generics.len() - _46326_i) > 1LL)) {
								_1a861e169_write(_self_.get()._field_oc, jule::Str(",", 1));
							};
						}
						_iter_next_1aaac240b:;
						++it;
						_46326_i++;
						goto _iter_begin_1aaac240b;
					}
					_iter_end_1aaac240b:;
				};
				_1a861e169_write(_self_.get()._field_oc, jule::Str(">", 1));
			};
		};
	};
	_1a85ca598_push_call_inf(_self_, _45339_m);
	jule::Bool _47417_locinfo = false;;
	if ((((!(_1a6873a1e_is_builtin(_45339_m.get()._field_func.ptr()))) && (_45339_m.get()._field_func.get()._field_decl.get()._field_params.len() > 0LL)) && _1a68491ed_is_self(_45339_m.get()._field_func.get()._field_decl.get()._field_params[0LL].ptr()))) {
		{
			auto &_match_expr{ _45339_m.get()._field_expr };
			
			if (_match_expr.type_is<jule::Ptr<_1a686c62d_StructSubIdentExprModel>>()) {
				_case_begin_1aaac5d6b:;
				{
					jule::Ptr<_1a686c62d_StructSubIdentExprModel> _47825_ssie = _45339_m.get()._field_expr.operator jule::Ptr<_1a686c62d_StructSubIdentExprModel>();;
					{
						
						if (_1a6831ba8_is_ref(_45339_m.get()._field_func.get()._field_decl.get()._field_params[0LL].ptr())) {
							_case_begin_1aaac7d29:;
							{
								_1a85d214e_model(_self_, jule::Any(_47825_ssie.get()._field_expr));
							}
						}
						else if ((_1a7729c04_sptr(_47825_ssie.get()._field_expr_kind.ptr()) != nullptr)) {
							_case_begin_1aaac87ca:;
							{
								_1a85d214e_model(_self_, jule::Any(_47825_ssie.get()._field_expr));
								_1a861e169_write(_self_.get()._field_oc, jule::Str(".ptr(", 5));
								if ((!(_1e0ca2c16_PRODUCTION))) {
									_1a861e169_write(_self_.get()._field_oc, jule::Str("\"", 1));
									_1a8622568_loc_info(_self_.get()._field_oc, _45339_m.get()._field_token);
									_1a861e169_write(_self_.get()._field_oc, jule::Str("\"", 1));
								};
								_1a861e169_write(_self_.get()._field_oc, jule::Str(")", 1));
							}
						}
						else {
							_case_begin_1aaac6be6:;
							{
								if ((_1a772ab7d_strct(_47825_ssie.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
									_1a861e169_write(_self_.get()._field_oc, jule::Str("&", 1));
								};
								if (_45413_wrapped) {
									_1a861e169_write(_self_.get()._field_oc, jule::Str("_wrap_copy", 10));
								} else {
									_1a85d214e_model(_self_, jule::Any(_47825_ssie.get()._field_expr));
								};
							}
						}
						_match_end_1aaac6b80:;
					};
					if ((_45339_m.get()._field_args.len() > 0LL)) {
						_1a861e169_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1a686c210_TraitSubIdentExprModel>>()) {
				_case_begin_1aaac5e15:;
				{
					_1a85d214e_model(_self_, jule::Any(_45339_m.get()._field_expr.operator jule::Ptr<_1a686c210_TraitSubIdentExprModel>().get()._field_expr));
					if ((!(_1e0ca2c16_PRODUCTION))) {
						_47417_locinfo=true;
					};
					if ((_45339_m.get()._field_args.len() > 0LL)) {
						_1a861e169_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
			}
			_match_end_1aaac5cc2:;
		};
	};
	_1a85ca09d_args(_self_, _45339_m.get()._field_args);
	if (_47417_locinfo) {
		_1a861e169_write(_self_.get()._field_oc, jule::Str(", \"", 3));
		_1a8622568_loc_info(_self_.get()._field_oc, _45339_m.get()._field_token);
		_1a861e169_write(_self_.get()._field_oc, jule::Str("\"", 1));
	};
	_1a861e169_write(_self_.get()._field_oc, jule::Str(")", 1));
	if (_45413_wrapped) {
		_1a861e169_write(_self_.get()._field_oc, jule::Str("; })", 4));
	};
	if (_45339_m.get()._field_is_co) {
		_1a861e169_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
}



inline void _1a85cada1_func_call(jule::Ptr<_1a85c6a06_ExprCoder> _self_, jule::Ptr<_1a6845150_FnCallExprModel> _53233_m) {
	if (((_1a6873a1e_is_builtin(_53233_m.get()._field_func.ptr()) || (!(_53233_m.get()._field_func.get()._field_decl.get()._field_exceptional))) || ((_53233_m.get()._field_except != nullptr) && (_53233_m.get()._field_except.get()._field_stmts.len() == 0LL)))) {
		_1a85cab2b_pure_func_call(_self_, _53233_m);
		return;;
	};
	_1a861e169_write(_self_.get()._field_oc, jule::Str("({\n", 3));
	_1a861e90b_add_indent(_self_.get()._field_oc);
	_1a862080d_indent(_self_.get()._field_oc);
	_1a861e169_write(_self_.get()._field_oc, jule::Str("auto except = ", 14));
	_1a85cab2b_pure_func_call(_self_, _53233_m);
	_1a861e169_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1a862080d_indent(_self_.get()._field_oc);
	if ((_53233_m.get()._field_except != nullptr)) {
		if (((_53233_m.get()._field_func.get()._field_result == nullptr) || (!(_53233_m.get()._field_assigned)))) {
			_1a861e169_write(_self_.get()._field_oc, jule::Str("if (!except.ok()) ", 18));
			_1a85c3c56_scope(_self_.get()._field_oc.get()._field_sc, _53233_m.get()._field_except);
			_1a861e169_write(_self_.get()._field_oc, jule::Str("\n", 1));
		} else {
			jule::Bool _55421_forwarded = _1a85d4250_is_forwarded(_53233_m.get()._field_except);;
			_1a861e169_write(_self_.get()._field_oc, jule::Str("(except.ok()) ? (except.result) : (", 35));
			if (_55421_forwarded) {
				_1a861e169_write(_self_.get()._field_oc, jule::Str("{", 1));
			};
			_1a85c3c56_scope(_self_.get()._field_oc.get()._field_sc, _53233_m.get()._field_except);
			if (_55421_forwarded) {
				_1a861e169_write(_self_.get()._field_oc, jule::Str(" ", 1));
				_1a85d28be_init_expr(_self_, _53233_m.get()._field_func.get()._field_result);
				_1a861e169_write(_self_.get()._field_oc, jule::Str(";}", 2));
			};
			_1a861e169_write(_self_.get()._field_oc, jule::Str(");\n", 3));
		};
		_1a86200e3_done_indent(_self_.get()._field_oc);
	} else {
		_1a861e169_write(_self_.get()._field_oc, jule::Str("if (!except.ok()) jule::panic(jule::Str(\"unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 139));
		_1a8622568_loc_info(_self_.get()._field_oc, _53233_m.get()._field_token);
		_1a861e169_write(_self_.get()._field_oc, jule::Str("\"));\n", 5));
		if ((!(_1a6847eee_is_void(_53233_m.get()._field_func.get()._field_decl.ptr())))) {
			_1a862080d_indent(_self_.get()._field_oc);
			_1a861e169_write(_self_.get()._field_oc, jule::Str("(except.result);\n", 17));
		};
		_1a86200e3_done_indent(_self_.get()._field_oc);
	};
	_1a862080d_indent(_self_.get()._field_oc);
	_1a861e169_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1a85cb126_slice(jule::Ptr<_1a85c6a06_ExprCoder> _self_, jule::Ptr<_1a684533c_SliceExprModel> _58329_m) {
	if ((_58329_m.get()._field_elems.len() == 0LL)) {
		_1a861e169_write(_self_.get()._field_oc, static__1a865ad10_as_slice(_58329_m.get()._field_elem_kind));
		_1a861e169_write(_self_.get()._field_oc, jule::Str("()", 2));
		return;;
	};
	_1a861e169_write(_self_.get()._field_oc, static__1a865ad10_as_slice(_58329_m.get()._field_elem_kind));
	_1a861e169_write(_self_.get()._field_oc, jule::Str("::make({", 8));
	_1a85ca09d_args(_self_, _58329_m.get()._field_elems);
	_1a861e169_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1a85cb39b_indexing(jule::Ptr<_1a85c6a06_ExprCoder> _self_, jule::Ptr<_1a686b770_IndexingExprModel> _59532_m) {
	_1a85d214e_model(_self_, jule::Any(_59532_m.get()._field_expr.get()._field_model));
	{
		
		if (_1e0ca2c16_PRODUCTION || (_1a7729e68_ptr(_59532_m.get()._field_expr.get()._field_kind.ptr()) != nullptr) || (_1a772b156_map(_59532_m.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aaae5aa0:;
			{
				_1a861e169_write(_self_.get()._field_oc, jule::Str("[", 1));
				_1a85d23c4_expr(_self_, jule::Any(_59532_m.get()._field_index.get()._field_model));
				_1a861e169_write(_self_.get()._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_1aaae572b:;
			{
				_1a861e169_write(_self_.get()._field_oc, jule::Str(".at(\"", 5));
				_1a8622568_loc_info(_self_.get()._field_oc, _59532_m.get()._field_token);
				_1a861e169_write(_self_.get()._field_oc, jule::Str("\",", 2));
				_1a85d23c4_expr(_self_, jule::Any(_59532_m.get()._field_index.get()._field_model));
				_1a861e169_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1aaae56a4:;
	};
}



inline void _1a85cb621_unsafe_indexing(jule::Ptr<_1a85c6a06_ExprCoder> _self_, jule::Ptr<_1a55c5695_UnsafeIndexingExprModel> _61439_m) {
	_1a85d214e_model(_self_, jule::Any(_61439_m.get()._field_node.get()._field_expr.get()._field_model));
	{
		
		if (_1e0ca2c16_PRODUCTION || (_1a7729e68_ptr(_61439_m.get()._field_node.get()._field_expr.get()._field_kind.ptr()) != nullptr) || (_1a772b156_map(_61439_m.get()._field_node.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aaaead19:;
			{
				_1a861e169_write(_self_.get()._field_oc, jule::Str("[", 1));
				_1a85d23c4_expr(_self_, jule::Any(_61439_m.get()._field_node.get()._field_index.get()._field_model));
				_1a861e169_write(_self_.get()._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_1aaaea995:;
			{
				_1a861e169_write(_self_.get()._field_oc, jule::Str(".__at(", 6));
				_1a85d23c4_expr(_self_, jule::Any(_61439_m.get()._field_node.get()._field_index.get()._field_model));
				_1a861e169_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1aaaea91d:;
	};
}



inline void _1a85cb896_anon_func(jule::Ptr<_1a85c6a06_ExprCoder> _self_, jule::Ptr<_1a686b95c_AnonFnExprModel> _63133_m) {
	_1a861e169_write(_self_.get()._field_oc, static__1a865d241_func(_63133_m.get()._field_func));
	_1a861e169_write(_self_.get()._field_oc, jule::Str("([=]", 4));
	_1a8654d1a_params_ins(_self_.get()._field_oc, _63133_m.get()._field_func.get()._field_params);
	_1a861e169_write(_self_.get()._field_oc, jule::Str(" mutable -> ", 12));
	_1a861e169_write(_self_.get()._field_oc, static__1a865cc02_func_ins_result(_63133_m.get()._field_func));
	_1a861e169_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1a85c3ecb_func_scope(_self_.get()._field_oc.get()._field_sc, _63133_m.get()._field_func);
	_1a861e169_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a85cbb1b_map(jule::Ptr<_1a85c6a06_ExprCoder> _self_, jule::Ptr<_1a686bd36_MapExprModel> _64227_m) {
	_1a861e169_write(_self_.get()._field_oc, jule::Str("jule::Map<", 10));
	_1a861e169_write(_self_.get()._field_oc, static__1a865d4d8_kind(_64227_m.get()._field_key_kind));
	_1a861e169_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1a861e169_write(_self_.get()._field_oc, static__1a865d4d8_kind(_64227_m.get()._field_val_kind));
	_1a861e169_write(_self_.get()._field_oc, jule::Str(">({", 3));
	if ((_64227_m.get()._field_entries.len() > 0LL)) {
		{
			auto &expr = _64227_m.get()._field_entries;
			auto it = expr.begin();
			_iter_begin_1aab07276:;
			if (it != expr.end()) {
				jule::I64 _64918_i = it - expr.begin();
				jule::Ptr<_1a686bb49_KeyValPairExprModel> _64925_pair = *it;
				{
					_1a861e169_write(_self_.get()._field_oc, jule::Str("{", 1));
					_1a85d23c4_expr(_self_, jule::Any(_64925_pair.get()._field_key));
					_1a861e169_write(_self_.get()._field_oc, jule::Str(",", 1));
					_1a85d23c4_expr(_self_, jule::Any(_64925_pair.get()._field_val));
					_1a861e169_write(_self_.get()._field_oc, jule::Str("}", 1));
					if (((_64227_m.get()._field_entries.len() - _64918_i) > 1LL)) {
						_1a861e169_write(_self_.get()._field_oc, jule::Str(",", 1));
					};
				}
				_iter_next_1aab07276:;
				++it;
				_64918_i++;
				goto _iter_begin_1aab07276;
			}
			_iter_end_1aab07276:;
		};
	};
	_1a861e169_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1a85cbd91_slicing(jule::Ptr<_1a85c6a06_ExprCoder> _self_, jule::Ptr<_1a686c023_SlicingExprModel> _66331_m) {
	_1a85d214e_model(_self_, jule::Any(_66331_m.get()._field_expr));
	_1a861e169_write(_self_.get()._field_oc, jule::Str(".slice(", 7));
	if ((!(_1e0ca2c16_PRODUCTION))) {
		_1a861e169_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1a8622568_loc_info(_self_.get()._field_oc, _66331_m.get()._field_token);
		_1a861e169_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_1a85d23c4_expr(_self_, jule::Any(_66331_m.get()._field_left));
	if ((_66331_m.get()._field_right != nullptr)) {
		_1a861e169_write(_self_.get()._field_oc, jule::Str(",", 1));
		_1a85d23c4_expr(_self_, jule::Any(_66331_m.get()._field_right));
	};
	_1a861e169_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a85cc116_trait_sub(jule::Ptr<_1a85c6a06_ExprCoder> _self_, jule::Ptr<_1a686c210_TraitSubIdentExprModel> _67933_m) {
	_1a861e169_write(_self_.get()._field_oc, static__1a85d9b29_trait_decl(_67933_m.get()._field_trt));
	_1a861e169_write(_self_.get()._field_oc, jule::Str("_mptr_data", 10));
	_1a861e169_write(_self_.get()._field_oc, jule::Str("[(", 2));
	_1a85d214e_model(_self_, jule::Any(_67933_m.get()._field_expr));
	_1a861e169_write(_self_.get()._field_oc, jule::Str(").type_offset].", 15));
	_1a861e169_write(_self_.get()._field_oc, static__1a85d95da_func(_67933_m.get()._field_method));
}



inline void _1a85cc38b_structure_sub(jule::Ptr<_1a85c6a06_ExprCoder> _self_, jule::Ptr<_1a686c62d_StructSubIdentExprModel> _68837_m) {
	_1a85d214e_model(_self_, jule::Any(_68837_m.get()._field_expr));
	if ((_68837_m.get()._field_field != nullptr)) {
		if ((_1a7729e68_ptr(_68837_m.get()._field_expr_kind.ptr()) != nullptr)) {
			_1a861e169_write(_self_.get()._field_oc, jule::Str("->", 2));
		} else if ((_1a7729c04_sptr(_68837_m.get()._field_expr_kind.ptr()) != nullptr)) {
			_1a861e169_write(_self_.get()._field_oc, jule::Str(".get(", 5));
			if ((!(_1e0ca2c16_PRODUCTION))) {
				_1a861e169_write(_self_.get()._field_oc, jule::Str("\"", 1));
				_1a8622568_loc_info(_self_.get()._field_oc, _68837_m.get()._field_token);
				_1a861e169_write(_self_.get()._field_oc, jule::Str("\"", 1));
			};
			_1a861e169_write(_self_.get()._field_oc, jule::Str(").", 2));
		} else {
			_1a861e169_write(_self_.get()._field_oc, jule::Str(".", 1));
		};
		_1a861e169_write(_self_.get()._field_oc, static__1a85da6a7_field(_68837_m.get()._field_field.get()._field_decl));
	};
}



inline void _1a85cc611_common_ident(jule::Ptr<_1a85c6a06_ExprCoder> _self_, jule::Ptr<_1a686cbe4_CommonIdentExprModel> _70832_m) {
	_1a861e169_write(_self_.get()._field_oc, _70832_m.get()._field_ident);
}



inline void _1a85cc886_common_sub(jule::Ptr<_1a85c6a06_ExprCoder> _self_, jule::Ptr<_1a686cdd1_CommonSubIdentExprModel> _71234_m) {
	_1a85d214e_model(_self_, jule::Any(_71234_m.get()._field_expr));
	{
		
		if ((_1a7729e68_ptr(_71234_m.get()._field_expr_kind.ptr()) != nullptr)) {
			_case_begin_1aab1b08c:;
			{
				_1a861e169_write(_self_.get()._field_oc, jule::Str("->", 2));
			}
		}
		else if ((_1a7729c04_sptr(_71234_m.get()._field_expr_kind.ptr()) != nullptr)) {
			_case_begin_1aab1ac7e:;
			{
				_1a861e169_write(_self_.get()._field_oc, jule::Str(".get(", 5));
				if ((!(_1e0ca2c16_PRODUCTION))) {
					_1a861e169_write(_self_.get()._field_oc, jule::Str("\"", 1));
					_1a8622568_loc_info(_self_.get()._field_oc, _71234_m.get()._field_token);
					_1a861e169_write(_self_.get()._field_oc, jule::Str("\"", 1));
				};
				_1a861e169_write(_self_.get()._field_oc, jule::Str(").", 2));
			}
		}
		else {
			_case_begin_1aab1ac18:;
			{
				_1a861e169_write(_self_.get()._field_oc, jule::Str(".", 1));
			}
		}
		_match_end_1aab1ab91:;
	};
	_1a861e169_write(_self_.get()._field_oc, _71234_m.get()._field_ident);
}



inline void _1a85ccb0b_array(jule::Ptr<_1a85c6a06_ExprCoder> _self_, jule::Ptr<_1a686ca07_ArrayExprModel> _73129_m) {
	_1a861e169_write(_self_.get()._field_oc, static__1a865c174_array(_73129_m.get()._field_kind));
	if ((_73129_m.get()._field_elems.len() == 0LL)) {
		_1a861e169_write(_self_.get()._field_oc, jule::Str("()", 2));
		return;;
	};
	if (((_73129_m.get()._field_elems.len() == 2LL) && (_73129_m.get()._field_elems[1LL] == nullptr))) {
		_1a861e169_write(_self_.get()._field_oc, jule::Str("(", 1));
		_1a85d23c4_expr(_self_, jule::Any(_73129_m.get()._field_elems[0LL]));
		_1a861e169_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	_1a861e169_write(_self_.get()._field_oc, jule::Str("({", 2));
	_1a85ca09d_args(_self_, _73129_m.get()._field_elems);
	_1a861e169_write(_self_.get()._field_oc, jule::Str("})", 2));
	return;;
}



inline void _1a85ccd81_func_ins_common(jule::Ptr<_1a85c6a06_ExprCoder> _self_, jule::Ptr<_1a6872c93_FnIns> _75439_m) {
	_1a861e169_write(_self_.get()._field_oc, static__1a865d241_func(_75439_m));
	_1a861e169_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1a85cd106_func_ins(_self_, _75439_m);
	_1a861e169_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a85cd106_func_ins(jule::Ptr<_1a85c6a06_ExprCoder> _self_, jule::Ptr<_1a6872c93_FnIns> _76132_m) {
	if (((_76132_m.get()._field_decl != nullptr) && _76132_m.get()._field_decl.get()._field_cpp_linked)) {
		jule::Ptr<_1a6852525_Directive> _76317_d = _1a866030e_find_directive(_76132_m.get()._field_decl.get()._field_directives,jule::Str("namespace", 9));;
		if ((_76317_d != nullptr)) {
			_1a861e169_write(_self_.get()._field_oc, _1a8657966_concat_all_parts(_76317_d.get()._field_args));
			_1a861e169_write(_self_.get()._field_oc, jule::Str("::", 2));
		};
	};
	_1a861e169_write(_self_.get()._field_oc, static__1a85d9882_func_ins(_76132_m));
}



inline void _1a85cd37b_tuple(jule::Ptr<_1a85c6a06_ExprCoder> _self_, jule::Ptr<_1a686d0bd_TupleExprModel> _77229_m) {
	_1a861e169_write(_self_.get()._field_oc, jule::Str("std::make_tuple(", 16));
	{
		auto &expr = _77229_m.get()._field_datas;
		auto it = expr.begin();
		_iter_begin_1aab2b663:;
		if (it != expr.end()) {
			jule::I64 _77414_i = it - expr.begin();
			jule::Ptr<_1a76edda4_Data> _77421_d = *it;
			{
				_1a85d23c4_expr(_self_, jule::Any(_77421_d.get()._field_model));
				if (((_77229_m.get()._field_datas.len() - _77414_i) > 1LL)) {
					_1a861e169_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1aab2b663:;
			++it;
			_77414_i++;
			goto _iter_begin_1aab2b663;
		}
		_iter_end_1aab2b663:;
	};
	_1a861e169_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a85cd601_new_call(jule::Ptr<_1a85c6a06_ExprCoder> _self_, jule::Ptr<_1a686d871_BuiltinNewCallExprModel> _78332_m) {
	_1a861e169_write(_self_.get()._field_oc, jule::Str("jule::new_ptr<", 14));
	_1a861e169_write(_self_.get()._field_oc, static__1a865d4d8_kind(_78332_m.get()._field_kind));
	_1a861e169_write(_self_.get()._field_oc, jule::Str(">(", 2));
	if ((_78332_m.get()._field_init != nullptr)) {
		_1a85d23c4_expr(_self_, jule::Any(_78332_m.get()._field_init));
	};
	_1a861e169_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a85cd876_out_call(jule::Ptr<_1a85c6a06_ExprCoder> _self_, jule::Ptr<_1a686d2aa_BuiltinOutCallExprModel> _79332_m) {
	if ((_79332_m.get()._field_debug && _1e0ca2c16_PRODUCTION)) {
		return;;
	};
	_1a861e169_write(_self_.get()._field_oc, jule::Str("jule::out(", 10));
	_1a85d23c4_expr(_self_, jule::Any(_79332_m.get()._field_expr));
	_1a861e169_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a85cdaeb_outln_call(jule::Ptr<_1a85c6a06_ExprCoder> _self_, jule::Ptr<_1a686d497_BuiltinOutlnCallExprModel> _80234_m) {
	if ((_80234_m.get()._field_debug && _1e0ca2c16_PRODUCTION)) {
		return;;
	};
	_1a861e169_write(_self_.get()._field_oc, jule::Str("jule::outln(", 12));
	_1a85d23c4_expr(_self_, jule::Any(_80234_m.get()._field_expr));
	_1a861e169_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a85cdd71_panic_call(jule::Ptr<_1a85c6a06_ExprCoder> _self_, jule::Ptr<_1a686da5d_BuiltinPanicCallExprModel> _81134_m) {
	_1a861e169_write(_self_.get()._field_oc, jule::Str("jule::panic(", 12));
	_1a85d23c4_expr(_self_, jule::Any(_81134_m.get()._field_expr));
	_1a861e169_write(_self_.get()._field_oc, jule::Str(" + jule::Str(\"\\nlocation: ", 26));
	_1a8622568_loc_info(_self_.get()._field_oc, _81134_m.get()._field_token);
	_1a861e169_write(_self_.get()._field_oc, jule::Str("\"));", 4));
}



inline void _1a85ce0e6_assert_call(jule::Ptr<_1a85c6a06_ExprCoder> _self_, jule::Ptr<_1a686dc4a_BuiltinAssertCallExprModel> _81935_m) {
	if (_1e0ca2c16_PRODUCTION) {
		return;;
	};
	_1a861e169_write(_self_.get()._field_oc, jule::Str("if (!(", 6));
	_1a85d23c4_expr(_self_, jule::Any(_81935_m.get()._field_expr));
	_1a861e169_write(_self_.get()._field_oc, jule::Str(")) jule::panic(jule::Str(", 25));
	_1a861e169_write(_self_.get()._field_oc, _1a85d3590_cstr_lit(static_cast<jule::Slice<jule::U8>>(_81935_m.get()._field_log)));
	_1a861e169_write(_self_.get()._field_oc, jule::Str(") + jule::Str(\"\\nlocation: ", 27));
	_1a8622568_loc_info(_self_.get()._field_oc, _81935_m.get()._field_token);
	_1a861e169_write(_self_.get()._field_oc, jule::Str("\"));", 4));
}



inline void _1a85ce36b_error_call(jule::Ptr<_1a85c6a06_ExprCoder> _self_, jule::Ptr<_1a686e4ed_BuiltinErrorCallExprModel> _83234_m) {
	_1a861e169_write(_self_.get()._field_oc, jule::Str("return ", 7));
	if (_1a6847eee_is_void(_83234_m.get()._field_func.get()._field_decl.ptr())) {
		_1a861e169_write(_self_.get()._field_oc, jule::Str("jule::VoidExceptional(", 22));
	} else {
		_1a861e169_write(_self_.get()._field_oc, jule::Str("jule::Exceptional<", 18));
		_1a861e169_write(_self_.get()._field_oc, static__1a865d4d8_kind(_83234_m.get()._field_func.get()._field_result));
		_1a861e169_write(_self_.get()._field_oc, jule::Str(">(", 2));
	};
	_1a85d23c4_expr(_self_, jule::Any(_83234_m.get()._field_err));
	_1a861e169_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a85ce5e1_copy_call(jule::Ptr<_1a85c6a06_ExprCoder> _self_, jule::Ptr<_1a686e311_BuiltinCopyCallExprModel> _84533_m) {
	_1a861e169_write(_self_.get()._field_oc, jule::Str("jule::copy((", 12));
	_1a85d214e_model(_self_, jule::Any(_84533_m.get()._field_dest.get()._field_model));
	_1a861e169_write(_self_.get()._field_oc, jule::Str(")", 1));
	if ((_1a7729990_prim(_84533_m.get()._field_dest.get()._field_kind.ptr()) != nullptr)) {
		_1a861e169_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
	};
	_1a861e169_write(_self_.get()._field_oc, jule::Str(", (", 3));
	_1a85d214e_model(_self_, jule::Any(_84533_m.get()._field_src.get()._field_model));
	_1a861e169_write(_self_.get()._field_oc, jule::Str(")", 1));
	if ((_1a7729990_prim(_84533_m.get()._field_src.get()._field_kind.ptr()) != nullptr)) {
		_1a861e169_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
	};
	_1a861e169_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a85ce866_make_call_slice(jule::Ptr<_1a85c6a06_ExprCoder> _self_, jule::Ptr<_1a686de37_BuiltinMakeCallExprModel>& _86140_m) {
	jule::Ptr<_1a77310a1_Slc> _86217_slice = _1a772a6a5_slc(_86140_m.get()._field_kind.ptr());;
	_1a861e169_write(_self_.get()._field_oc, static__1a865d4d8_kind(_86140_m.get()._field_kind));
	if ((_1a772a1cc_enm(_86217_slice.get()._field_elem.ptr()) != nullptr)) {
		if ((_86140_m.get()._field_cap != nullptr)) {
			_1a861e169_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
		} else {
			_1a861e169_write(_self_.get()._field_oc, jule::Str("::alloc_def(", 12));
		};
	} else {
		_1a861e169_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
	};
	_1a85d23c4_expr(_self_, jule::Any(_86140_m.get()._field_len));
	if ((_86140_m.get()._field_cap != nullptr)) {
		_1a861e169_write(_self_.get()._field_oc, jule::Str(",", 1));
		_1a85d23c4_expr(_self_, jule::Any(_86140_m.get()._field_cap));
	};
	if ((_1a772a1cc_enm(_86217_slice.get()._field_elem.ptr()) != nullptr)) {
		_1a861e169_write(_self_.get()._field_oc, jule::Str(",", 1));
		_1a85d28be_init_expr(_self_, _86217_slice.get()._field_elem);
	};
	_1a861e169_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a85ceadb_make_call_str(jule::Ptr<_1a85c6a06_ExprCoder> _self_, jule::Ptr<_1a686de37_BuiltinMakeCallExprModel>& _88738_m) {
	_1a861e169_write(_self_.get()._field_oc, jule::Str("jule::Str", 9));
	_1a861e169_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
	_1a85d23c4_expr(_self_, jule::Any(_88738_m.get()._field_len));
	_1a861e169_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a85ced61_make_call(jule::Ptr<_1a85c6a06_ExprCoder> _self_, jule::Ptr<_1a686de37_BuiltinMakeCallExprModel> _89433_m) {
	if ((_1a772a6a5_slc(_89433_m.get()._field_kind.ptr()) != nullptr)) {
		_1a85ce866_make_call_slice(_self_, _89433_m);
		return;;
	};
	_1a85ceadb_make_call_str(_self_, _89433_m);
}



inline void _1a85d00d6_push_to_slice(jule::Ptr<_1a85c6a06_ExprCoder> _self_, jule::Ptr<_1a55c2263_PushToSliceExprModel> _90237_m) {
	jule::I64 _90313_n = _self_.get()._field_oc.get()._field_obj.len();;
	_1a85d214e_model(_self_, jule::Any(_90237_m.get()._field_dest));
	jule::Str _90513_dest = _self_.get()._field_oc.get()._field_obj.slice(_90313_n);;
	_1a861e169_write(_self_.get()._field_oc, jule::Str(" = jule::alloc_for_append(", 26));
	_1a861e169_write(_self_.get()._field_oc, _90513_dest);
	_1a861e169_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1a861e169_write(_self_.get()._field_oc, _1a7538cee_itoa(static_cast<jule::I64>(_90237_m.get()._field_elems.get()._field_elems.len())));
	_1a861e169_write(_self_.get()._field_oc, jule::Str(");", 2));
	{
		auto &expr = _90237_m.get()._field_elems.get()._field_elems;
		auto it = expr.begin();
		_iter_begin_1aab52e2b:;
		if (it != expr.end()) {
			jule::Any _91221_e = *it;
			{
				_1a861e169_write(_self_.get()._field_oc, _90513_dest);
				_1a861e169_write(_self_.get()._field_oc, jule::Str(".__push(", 8));
				_1a85d214e_model(_self_, jule::Any(_91221_e));
				_1a861e169_write(_self_.get()._field_oc, jule::Str(");", 2));
			}
			_iter_next_1aab52e2b:;
			++it;
			goto _iter_begin_1aab52e2b;
		}
		_iter_end_1aab52e2b:;
	};
}



inline void _1a85d035b_append_call(jule::Ptr<_1a85c6a06_ExprCoder> _self_, jule::Ptr<_1a686e124_BuiltinAppendCallExprModel> _92135_m) {
	_1a861e169_write(_self_.get()._field_oc, jule::Str("jule::append(", 13));
	_1a85d214e_model(_self_, jule::Any(_92135_m.get()._field_dest));
	_1a861e169_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1a85d214e_model(_self_, jule::Any(_92135_m.get()._field_elements));
	_1a861e169_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a85d05d1_clone_call(jule::Ptr<_1a85c6a06_ExprCoder> _self_, jule::Ptr<_1a686d684_BuiltinCloneCallExprModel> _92934_m) {
	_1a861e169_write(_self_.get()._field_oc, jule::Str("jule::clone(", 12));
	_1a85d214e_model(_self_, jule::Any(_92934_m.get()._field_expr));
	_1a861e169_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a85d0856_sizeof(jule::Ptr<_1a85c6a06_ExprCoder> _self_, jule::Ptr<_1a686c3ec_SizeofExprModel> _93530_m) {
	_1a861e169_write(_self_.get()._field_oc, jule::Str("sizeof(", 7));
	_1a85d214e_model(_self_, jule::Any(_93530_m.get()._field_expr));
	_1a861e169_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a85d0acb_alignof(jule::Ptr<_1a85c6a06_ExprCoder> _self_, jule::Ptr<_1a686eb5d_AlignofExprModel> _94131_m) {
	_1a861e169_write(_self_.get()._field_oc, jule::Str("alignof(", 8));
	_1a85d214e_model(_self_, jule::Any(_94131_m.get()._field_expr));
	_1a861e169_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline jule::Str _1a85d0dd9_rune_lit(jule::Ptr<_1a85c6a06_ExprCoder> _self_, jule::Ptr<_1a686ed4a_RuneExprModel> _94728_m) {
	if ((_94728_m.get()._field_code <= 127LL)) {
		jule::Str _94921_b = _1a85d300c_sbtoa(static_cast<jule::U8>(static_cast<jule::U8>(_94728_m.get()._field_code)));;
		if ((_94921_b == jule::Str("'", 1))) {
			_94921_b=jule::Str("\\'", 2);
		};
		return ((jule::Str("'", 1) + _94921_b) + jule::Str("'", 1));
	};
	return _1a85d3b78_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_94728_m.get()._field_code)));
}



inline void _1a85d115e_structure_static(jule::Ptr<_1a85c6a06_ExprCoder> _self_, jule::Ptr<_1a686c81a_StructStaticIdentExprModel> _95840_m) {
	_1a861e169_write(_self_.get()._field_oc, static__1a85d9882_func_ins(_95840_m.get()._field_method));
}



inline void _1a85d13d4_integrated_to_str(jule::Ptr<_1a85c6a06_ExprCoder> _self_, jule::Ptr<_1a6870037_IntegratedToStrExprModel> _96241_m) {
	_1a861e169_write(_self_.get()._field_oc, jule::Str("jule::to_str(", 13));
	_1a85d214e_model(_self_, jule::Any(_96241_m.get()._field_expr));
	_1a861e169_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a85d1659_backend_emit(jule::Ptr<_1a85c6a06_ExprCoder> _self_, jule::Ptr<_1a6870224_BackendEmitExprModel> _96836_m) {
	if ((_96836_m.get()._field_exprs.len() == 0LL)) {
		_1a861e169_write(_self_.get()._field_oc, _96836_m.get()._field_code);
		return;;
	};
	jule::I64 _97313_n = _self_.get()._field_oc.get()._field_obj.len();;
	{
		auto &expr = _96836_m.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1aab642d3:;
		if (it != expr.end()) {
			jule::I64 _97414_i = it - expr.begin();
			jule::Any _97421_expr = *it;
			{
				_1a85d23c4_expr(_self_, jule::Any(_97421_expr));
				jule::Str _97617_obj = _self_.get()._field_oc.get()._field_obj.slice(_97313_n);;
				_96836_m.get()._field_exprs[_97414_i]=jule::Any(_97617_obj);
				_self_.get()._field_oc.get()._field_obj=_self_.get()._field_oc.get()._field_obj.slice(0LL,_97313_n);
			}
			_iter_next_1aab642d3:;
			++it;
			_97414_i++;
			goto _iter_begin_1aab642d3;
		}
		_iter_end_1aab642d3:;
	};
	_1a861e169_write(_self_.get()._field_oc, _1a77a6126_format(_96836_m.get()._field_code,jule::Any(_96836_m.get()._field_exprs)));
}



inline void _1a85d18ce_free(jule::Ptr<_1a85c6a06_ExprCoder> _self_, jule::Ptr<_1a6870411_FreeExprModel> _98328_m) {
	_1a85d23c4_expr(_self_, jule::Any(_98328_m.get()._field_expr));
	if (_1e0ca26c7_RC) {
		_1a861e169_write(_self_.get()._field_oc, jule::Str(".dealloc()", 10));
		return;;
	};
	_1a861e169_write(_self_.get()._field_oc, jule::Str(".__free()", 9));
}



inline void _1a85d1b54_mut_slicing(jule::Ptr<_1a85c6a06_ExprCoder> _self_, jule::Ptr<_1a65b8764_MutSlicingExprModel> _99235_m) {
	_1a861e169_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1a85d214e_model(_self_, jule::Any(_99235_m.get()._field_expr));
	_1a861e169_write(_self_.get()._field_oc, jule::Str(").mut_slice(", 12));
	if ((!(_1e0ca2c16_PRODUCTION))) {
		_1a861e169_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1a8622568_loc_info(_self_.get()._field_oc, _99235_m.get()._field_token);
		_1a861e169_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_1a85d23c4_expr(_self_, jule::Any(_99235_m.get()._field_left));
	if ((_99235_m.get()._field_right != nullptr)) {
		_1a861e169_write(_self_.get()._field_oc, jule::Str(",", 1));
		_1a85d23c4_expr(_self_, jule::Any(_99235_m.get()._field_right));
	};
	_1a861e169_write(_self_.get()._field_oc, jule::Str(");", 2));
}



inline void _1a85d1dc9_str_insert_begin(jule::Ptr<_1a85c6a06_ExprCoder> _self_, jule::Ptr<_1a534733a_StrInsertBeginExprModel> _100940_m) {
	_1a861e169_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1a85d214e_model(_self_, jule::Any(_100940_m.get()._field_dest));
	_1a861e169_write(_self_.get()._field_oc, jule::Str(").buffer.insert(0, (", 20));
	_1a85d214e_model(_self_, jule::Any(_100940_m.get()._field_expr));
	_1a861e169_write(_self_.get()._field_oc, jule::Str("));", 3));
}



inline void _1a85d214e_model(jule::Ptr<_1a85c6a06_ExprCoder> _self_, jule::Any _101729_m) {
	{
		auto &_match_expr{ _101729_m };
		
		if (_match_expr.type_is<jule::Ptr<_1a76edda4_Data>>()) {
			_case_begin_1aab6ed49:;
			{
				_1a85d214e_model(_self_, jule::Any(_101729_m.operator jule::Ptr<_1a76edda4_Data>().get()._field_model));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a77278d3_TypeKind>>()) {
			_case_begin_1aab70157:;
			{
				_1a861e169_write(_self_.get()._field_oc, static__1a865d4d8_kind(_101729_m.operator jule::Ptr<_1a77278d3_TypeKind>()));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a75c3251_Const>>()) {
			_case_begin_1aab701bd:;
			{
				_1a85c8200_constant(_self_, _101729_m.operator jule::Ptr<_1a75c3251_Const>(),false);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a76a7720_Var>>()) {
			_case_begin_1aab70234:;
			{
				_1a85c8d38_var(_self_, _101729_m.operator jule::Ptr<_1a76a7720_Var>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a68d46b7_Trait>>()) {
			_case_begin_1aab7029a:;
			{
				static__1a85d9b29_trait_decl(_101729_m.operator jule::Ptr<_1a68d46b7_Trait>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6826829_Struct>>()) {
			_case_begin_1aab70d17:;
			{
				_1a85c90ad_structure(_self_, _101729_m.operator jule::Ptr<_1a6826829_Struct>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6836a48_StructIns>>()) {
			_case_begin_1aab70d7d:;
			{
				_1a85c9333_structure_ins(_self_, _101729_m.operator jule::Ptr<_1a6836a48_StructIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6872c93_FnIns>>()) {
			_case_begin_1aab70de4:;
			{
				_1a85ccd81_func_ins_common(_self_, _101729_m.operator jule::Ptr<_1a6872c93_FnIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a52de106_UnsafeBinopExprModel>>()) {
			_case_begin_1aab70e5a:;
			{
				_1a85c883d_unsafe_binary(_self_, _101729_m.operator jule::Ptr<_1a52de106_UnsafeBinopExprModel>().get()._field_node);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a684b145_BinopExprModel>>()) {
			_case_begin_1aab70ec1:;
			{
				_1a85c8ab3_binary(_self_, _101729_m.operator jule::Ptr<_1a684b145_BinopExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6849e79_UnaryExprModel>>()) {
			_case_begin_1aab71037:;
			{
				_1a85c95a8_unary(_self_, _101729_m.operator jule::Ptr<_1a6849e79_UnaryExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a682b752_StructLitExprModel>>()) {
			_case_begin_1aab710ae:;
			{
				_1a85c982d_structure_lit(_self_, _101729_m.operator jule::Ptr<_1a682b752_StructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a68225b1_AllocStructLitExprModel>>()) {
			_case_begin_1aab71136:;
			{
				_1a85c9aa3_alloc_structure(_self_, _101729_m.operator jule::Ptr<_1a68225b1_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a684003a_CastingExprModel>>()) {
			_case_begin_1aab711ad:;
			{
				_1a85c9d28_casting(_self_, _101729_m.operator jule::Ptr<_1a684003a_CastingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6845150_FnCallExprModel>>()) {
			_case_begin_1aab71235:;
			{
				_1a85cada1_func_call(_self_, _101729_m.operator jule::Ptr<_1a6845150_FnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a684533c_SliceExprModel>>()) {
			_case_begin_1aab712ac:;
			{
				_1a85cb126_slice(_self_, _101729_m.operator jule::Ptr<_1a684533c_SliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a686ca07_ArrayExprModel>>()) {
			_case_begin_1aab71334:;
			{
				_1a85ccb0b_array(_self_, _101729_m.operator jule::Ptr<_1a686ca07_ArrayExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a55c5695_UnsafeIndexingExprModel>>()) {
			_case_begin_1aab713ab:;
			{
				_1a85cb621_unsafe_indexing(_self_, _101729_m.operator jule::Ptr<_1a55c5695_UnsafeIndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a686b770_IndexingExprModel>>()) {
			_case_begin_1aab71433:;
			{
				_1a85cb39b_indexing(_self_, _101729_m.operator jule::Ptr<_1a686b770_IndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a686b95c_AnonFnExprModel>>()) {
			_case_begin_1aab714aa:;
			{
				_1a85cb896_anon_func(_self_, _101729_m.operator jule::Ptr<_1a686b95c_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a686bd36_MapExprModel>>()) {
			_case_begin_1aab71532:;
			{
				_1a85cbb1b_map(_self_, _101729_m.operator jule::Ptr<_1a686bd36_MapExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a686c023_SlicingExprModel>>()) {
			_case_begin_1aab715a9:;
			{
				_1a85cbd91_slicing(_self_, _101729_m.operator jule::Ptr<_1a686c023_SlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a686c210_TraitSubIdentExprModel>>()) {
			_case_begin_1aab71631:;
			{
				_1a85cc116_trait_sub(_self_, _101729_m.operator jule::Ptr<_1a686c210_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a686c62d_StructSubIdentExprModel>>()) {
			_case_begin_1aab716a8:;
			{
				_1a85cc38b_structure_sub(_self_, _101729_m.operator jule::Ptr<_1a686c62d_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a686cbe4_CommonIdentExprModel>>()) {
			_case_begin_1aab71730:;
			{
				_1a85cc611_common_ident(_self_, _101729_m.operator jule::Ptr<_1a686cbe4_CommonIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a686cdd1_CommonSubIdentExprModel>>()) {
			_case_begin_1aab717a7:;
			{
				_1a85cc886_common_sub(_self_, _101729_m.operator jule::Ptr<_1a686cdd1_CommonSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a686d0bd_TupleExprModel>>()) {
			_case_begin_1aab7182e:;
			{
				_1a85cd37b_tuple(_self_, _101729_m.operator jule::Ptr<_1a686d0bd_TupleExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a686d2aa_BuiltinOutCallExprModel>>()) {
			_case_begin_1aab718a6:;
			{
				_1a85cd876_out_call(_self_, _101729_m.operator jule::Ptr<_1a686d2aa_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a686d497_BuiltinOutlnCallExprModel>>()) {
			_case_begin_1aab7192d:;
			{
				_1a85cdaeb_outln_call(_self_, _101729_m.operator jule::Ptr<_1a686d497_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a686d871_BuiltinNewCallExprModel>>()) {
			_case_begin_1aab719a5:;
			{
				_1a85cd601_new_call(_self_, _101729_m.operator jule::Ptr<_1a686d871_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a686da5d_BuiltinPanicCallExprModel>>()) {
			_case_begin_1aab71a2c:;
			{
				_1a85cdd71_panic_call(_self_, _101729_m.operator jule::Ptr<_1a686da5d_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a686dc4a_BuiltinAssertCallExprModel>>()) {
			_case_begin_1aab71aa4:;
			{
				_1a85ce0e6_assert_call(_self_, _101729_m.operator jule::Ptr<_1a686dc4a_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a686e4ed_BuiltinErrorCallExprModel>>()) {
			_case_begin_1aab71b2b:;
			{
				_1a85ce36b_error_call(_self_, _101729_m.operator jule::Ptr<_1a686e4ed_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a686de37_BuiltinMakeCallExprModel>>()) {
			_case_begin_1aab71ba3:;
			{
				_1a85ced61_make_call(_self_, _101729_m.operator jule::Ptr<_1a686de37_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a686e124_BuiltinAppendCallExprModel>>()) {
			_case_begin_1aab71c2a:;
			{
				_1a85d035b_append_call(_self_, _101729_m.operator jule::Ptr<_1a686e124_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a686d684_BuiltinCloneCallExprModel>>()) {
			_case_begin_1aab71ca2:;
			{
				_1a85d05d1_clone_call(_self_, _101729_m.operator jule::Ptr<_1a686d684_BuiltinCloneCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a686e311_BuiltinCopyCallExprModel>>()) {
			_case_begin_1aab71d29:;
			{
				_1a85ce5e1_copy_call(_self_, _101729_m.operator jule::Ptr<_1a686e311_BuiltinCopyCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a686c3ec_SizeofExprModel>>()) {
			_case_begin_1aab71da1:;
			{
				_1a85d0856_sizeof(_self_, _101729_m.operator jule::Ptr<_1a686c3ec_SizeofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a686eb5d_AlignofExprModel>>()) {
			_case_begin_1aab71e28:;
			{
				_1a85d0acb_alignof(_self_, _101729_m.operator jule::Ptr<_1a686eb5d_AlignofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a686ed4a_RuneExprModel>>()) {
			_case_begin_1aab71ea0:;
			{
				_1a861e169_write(_self_.get()._field_oc, _1a85d0dd9_rune_lit(_self_, _101729_m.operator jule::Ptr<_1a686ed4a_RuneExprModel>()));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a686c81a_StructStaticIdentExprModel>>()) {
			_case_begin_1aab72027:;
			{
				_1a85d115e_structure_static(_self_, _101729_m.operator jule::Ptr<_1a686c81a_StructStaticIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6870037_IntegratedToStrExprModel>>()) {
			_case_begin_1aab7209e:;
			{
				_1a85d13d4_integrated_to_str(_self_, _101729_m.operator jule::Ptr<_1a6870037_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6870224_BackendEmitExprModel>>()) {
			_case_begin_1aab72126:;
			{
				_1a85d1659_backend_emit(_self_, _101729_m.operator jule::Ptr<_1a6870224_BackendEmitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6870411_FreeExprModel>>()) {
			_case_begin_1aab7219d:;
			{
				_1a85d18ce_free(_self_, _101729_m.operator jule::Ptr<_1a6870411_FreeExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a65b8764_MutSlicingExprModel>>()) {
			_case_begin_1aab72225:;
			{
				_1a85d1b54_mut_slicing(_self_, _101729_m.operator jule::Ptr<_1a65b8764_MutSlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a534733a_StrInsertBeginExprModel>>()) {
			_case_begin_1aab7229c:;
			{
				_1a85d1dc9_str_insert_begin(_self_, _101729_m.operator jule::Ptr<_1a534733a_StrInsertBeginExprModel>());
			}
		}
		else {
			_case_begin_1aab70003:;
			{
				_1a861e169_write(_self_.get()._field_oc, jule::Str("<unimplemented_expression_model>", 32));
			}
		}
		_match_end_1aab6ee9d:;
	};
}



inline void _1a85d23c4_expr(jule::Ptr<_1a85c6a06_ExprCoder> _self_, jule::Any _111628_e) {
	_1a85d214e_model(_self_, jule::Any(_111628_e));
}



inline void _1a85d2649_val(jule::Ptr<_1a85c6a06_ExprCoder> _self_, jule::Ptr<_1a76eee2c_Value> _112027_v) {
	if (_1a76ee767_is_const(_112027_v.get()._field_data.ptr())) {
		_1a85c8200_constant(_self_, _112027_v.get()._field_data.get()._field_constant,((_112027_v.get()._field_data.get()._field_kind != nullptr) && _1a772e16a_is_f32(_1a7729990_prim(_112027_v.get()._field_data.get()._field_kind.ptr()).ptr())));
		return;;
	};
	_1a85d23c4_expr(_self_, jule::Any(_112027_v.get()._field_data.get()._field_model));
}



inline void _1a85d28be_init_expr(jule::Ptr<_1a85c6a06_ExprCoder> _self_, jule::Ptr<_1a77278d3_TypeKind> _112833_t) {
	if ((_1a7729e68_ptr(_112833_t.ptr()) != nullptr)) {
		_1a861e169_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
		return;;
	};
	jule::Ptr<_1a6982435_Enum> _113317_enm = _1a772a1cc_enm(_112833_t.ptr());;
	if ((_113317_enm != nullptr)) {
		_1a85d2649_val(_self_, _113317_enm.get()._field_items[0LL].get()._field_value);
		return;;
	};
	_1a861e169_write(_self_.get()._field_oc, static__1a865d4d8_kind(_112833_t));
	_1a861e169_write(_self_.get()._field_oc, jule::Str("()", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _1a85c6a06_ExprCoder _Src) {
	_Stream << "ExprCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str static__1a85d4e54_clone_func_decl(jule::Ptr<_1a6826829_Struct>& _1032_s) {
	jule::Str _1117_obj = static__1a865bb35_structure(_1032_s);;
	_1117_obj+=jule::Str(" clone(void) const ", 19);
	return _1117_obj;
}



inline jule::Str static__1a85d51eb_clone_func_def(jule::Ptr<_1a6826829_Struct>& _1631_s) {
	jule::Str _1717_obj = static__1a865bb35_structure(_1631_s);;
	_1717_obj+=(jule::Str(" ", 1) + _1717_obj);
	_1717_obj+=jule::Str("::clone(void) const ", 20);
	return _1717_obj;
}







std::ostream &operator<<(std::ostream &_Stream, _1a85d4b02_DeriveCoder _Src) {
	_Stream << "DeriveCoder{";
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a85d61ca_TestCoder> static__1a85d664d_new(jule::Ptr<_1a8615281_ObjectCoder>& _2828_oc) {
	return jule::new_ptr<_1a85d61ca_TestCoder>(_1a85d61ca_TestCoder{._field_oc=_2828_oc});
}



inline jule::Ptr<_1a7685038_ImportInfo> _1a85d68b2_find_testing_package(jule::Ptr<_1a85d61ca_TestCoder> _self_) {
	{
		auto &expr = _self_.get()._field_oc.get()._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1aaba619e:;
		if (it != expr.end()) {
			jule::Ptr<_1a7685038_ImportInfo> _3521_imp = *it;
			{
				if ((_3521_imp.get()._field_link_path == jule::Str("std::testing", 12))) {
					return _3521_imp;
				};
			}
			_iter_next_1aaba619e:;
			++it;
			goto _iter_begin_1aaba619e;
		}
		_iter_end_1aaba619e:;
	};
	return nullptr;
}



inline void _1a85d6b37_append_test(jule::Ptr<_1a85d61ca_TestCoder> _self_, jule::Ptr<_1a6872c93_FnIns> _4335_f) {
	_1a862080d_indent(_self_.get()._field_oc);
	_1a85d72ec_call_tm_reset(_self_);
	_1a861e169_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1a862080d_indent(_self_.get()._field_oc);
	_1a861e169_write(_self_.get()._field_oc, jule::Str("std::cout << \">>> TEST RUNNING: \";\n", 35));
	_1a862080d_indent(_self_.get()._field_oc);
	_1a861e169_write(_self_.get()._field_oc, jule::Str("jule::outln(", 12));
	_1a861e169_write(_self_.get()._field_oc, _1a85d3590_cstr_lit(static_cast<jule::Slice<jule::U8>>(_4335_f.get()._field_decl.get()._field_ident)));
	_1a861e169_write(_self_.get()._field_oc, jule::Str(");\n", 3));
	_1a862080d_indent(_self_.get()._field_oc);
	_1a861e169_write(_self_.get()._field_oc, static__1a85d9882_func_ins(_4335_f));
	_1a861e169_write(_self_.get()._field_oc, jule::Str("(_t);\n", 6));
	_1a862080d_indent(_self_.get()._field_oc);
	_1a861e169_write(_self_.get()._field_oc, jule::Str("post_test();\n", 13));
}



inline void _1a85d6dac_append_package_tests(jule::Ptr<_1a85d61ca_TestCoder> _self_, jule::Ptr<_1a7687bea_Package>& _6045_p) {
	{
		auto &expr = _6045_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1aabad0eb:;
		if (it != expr.end()) {
			jule::Ptr<_1a76e8e26_SymbolTable> _6121_file = *it;
			{
				{
					auto &expr = _6121_file.get()._field_funcs;
					auto it = expr.begin();
					_iter_begin_1aabad8c1:;
					if (it != expr.end()) {
						jule::Ptr<_1a68709c7_Fn> _6225_f = *it;
						{
							if (_1a8660694_has_directive(_6225_f.get()._field_directives,jule::Str("test", 4))) {
								_1a85d6b37_append_test(_self_, _6225_f.get()._field_instances[0LL]);
							};
						}
						_iter_next_1aabad8c1:;
						++it;
						goto _iter_begin_1aabad8c1;
					}
					_iter_end_1aabad8c1:;
				};
			}
			_iter_next_1aabad0eb:;
			++it;
			goto _iter_begin_1aabad0eb;
		}
		_iter_end_1aabad0eb:;
	};
}



inline jule::Bool _1a85d7121_ready_testing_package(jule::Ptr<_1a85d61ca_TestCoder> _self_) {
	jule::Ptr<_1a7685038_ImportInfo> _7117_p = _1a85d68b2_find_testing_package(_self_);;
	if ((_7117_p == nullptr)) {
		return false;
	};
	_self_.get()._field_t=_1a7686468_find_struct(_7117_p.ptr(), jule::Str("T", 1),false).get()._field_instances[0LL];
	_self_.get()._field_tm_reset=_1a6846bbd_find_method(_self_.get()._field_t.ptr(), jule::Str("reset", 5),false);
	_self_.get()._field_tm_failed=_1a6846bbd_find_method(_self_.get()._field_t.ptr(), jule::Str("failed", 6),false);
	_self_.get()._field_tm_skipped=_1a6846bbd_find_method(_self_.get()._field_t.ptr(), jule::Str("skipped", 7),false);
	return true;
}



inline void _1a85d72ec_call_tm_reset(jule::Ptr<_1a85d61ca_TestCoder> _self_) {
	_1a861e169_write(_self_.get()._field_oc, static__1a85d95da_func(_self_.get()._field_tm_reset));
	_1a861e169_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1a85d74c8_call_tm_failed(jule::Ptr<_1a85d61ca_TestCoder> _self_) {
	_1a861e169_write(_self_.get()._field_oc, static__1a85d95da_func(_self_.get()._field_tm_failed));
	_1a861e169_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1a85d76a4_call_tm_skipped(jule::Ptr<_1a85d61ca_TestCoder> _self_) {
	_1a861e169_write(_self_.get()._field_oc, static__1a85d95da_func(_self_.get()._field_tm_skipped));
	_1a861e169_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1a85d7880_serialize(jule::Ptr<_1a85d61ca_TestCoder> _self_) {
	_1a8656e2c_serialize_head(_self_.get()._field_oc);
	__JULE_DEFER({
		_1a8656c51_end(_self_.get()._field_oc);
	});;
	_1a861e169_write(_self_.get()._field_oc, jule::Str("\nvoid test_point(void) {\n", 25));
	_1a861e90b_add_indent(_self_.get()._field_oc);
	_1a862080d_indent(_self_.get()._field_oc);
	if ((!(_1a85d7121_ready_testing_package(_self_)))) {
		_1a861e169_write(_self_.get()._field_oc, jule::Str("}", 1));
		_1a86200e3_done_indent(_self_.get()._field_oc);
		return;;
	};
	_1a861e169_write(_self_.get()._field_oc, static__1a8659eda_as_sptr(static__1a865bdcc_structure_ins(_self_.get()._field_t)));
	_1a861e169_write(_self_.get()._field_oc, jule::Str(" _t = jule::new_ptr<", 20));
	_1a861e169_write(_self_.get()._field_oc, static__1a865bdcc_structure_ins(_self_.get()._field_t));
	_1a861e169_write(_self_.get()._field_oc, jule::Str(">(); _t.ref = nullptr;\n", 23));
	_1a862080d_indent(_self_.get()._field_oc);
	_1a861e169_write(_self_.get()._field_oc, jule::Str("jule::Uint total = 0, failed = 0, skipped = 0;\n", 47));
	_1a862080d_indent(_self_.get()._field_oc);
	_1a861e169_write(_self_.get()._field_oc, jule::Str("auto post_test = [&](void) {\n", 29));
	_1a861e90b_add_indent(_self_.get()._field_oc);
	_1a862080d_indent(_self_.get()._field_oc);
	_1a861e169_write(_self_.get()._field_oc, jule::Str("++total;\n", 9));
	_1a862080d_indent(_self_.get()._field_oc);
	_1a861e169_write(_self_.get()._field_oc, jule::Str("if (", 4));
	_1a85d74c8_call_tm_failed(_self_);
	_1a861e169_write(_self_.get()._field_oc, jule::Str(") { ++failed; std::cout << \"    [*] FAILED\" << std::endl; }\n", 60));
	_1a862080d_indent(_self_.get()._field_oc);
	_1a861e169_write(_self_.get()._field_oc, jule::Str("else if (", 9));
	_1a85d76a4_call_tm_skipped(_self_);
	_1a861e169_write(_self_.get()._field_oc, jule::Str(") { ++skipped; std::cout << \"    [*] SKIPPED\" << std::endl; }\n", 62));
	_1a862080d_indent(_self_.get()._field_oc);
	_1a861e169_write(_self_.get()._field_oc, jule::Str("else { std::cout << \"    [*] PASSED\" << std::endl; }\n", 53));
	_1a86200e3_done_indent(_self_.get()._field_oc);
	_1a862080d_indent(_self_.get()._field_oc);
	_1a861e169_write(_self_.get()._field_oc, jule::Str("};\n", 3));
	_1a85d6dac_append_package_tests(_self_, _self_.get()._field_oc.get()._field_ir.get()._field_main);
	_1a861e169_write(_self_.get()._field_oc, jule::Str("\n\n", 2));
	_1a862080d_indent(_self_.get()._field_oc);
	_1a861e169_write(_self_.get()._field_oc, jule::Str("std::cout << std::endl << \"total tests: \" << total << \" skipped: \" << skipped << \" failed: \" << failed << \" pass: \" << total-failed-skipped << std::endl;\n", 154));
	_1a862080d_indent(_self_.get()._field_oc);
	_1a861e169_write(_self_.get()._field_oc, jule::Str("if (failed != 0) std::exit(1);\n", 31));
	_1a86200e3_done_indent(_self_.get()._field_oc);
	_1a862080d_indent(_self_.get()._field_oc);
	_1a861e169_write(_self_.get()._field_oc, jule::Str("}\n", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _1a85d61ca_TestCoder _Src) {
	_Stream << "TestCoder{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "tm_reset:" << _Src._field_tm_reset << ", ";
	_Stream << "tm_failed:" << _Src._field_tm_failed << ", ";
	_Stream << "tm_skipped:" << _Src._field_tm_skipped << ", ";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str static__1a85d8e58_to_out(jule::Str& _3323_ident, jule::Uintptr _3335_addr) {
	if ((_3335_addr != 0LLU)) {
		jule::Str _3521_obj = jule::Str::alloc(40LL);;
		_3521_obj+=jule::Str("_", 1);
		_3521_obj+=_1a7538a8a_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_3335_addr)),15LL);
		_3521_obj+=jule::Str("_", 1);
		_3521_obj+=_3323_ident;
		return _3521_obj;
	};
	jule::Str _4217_obj = jule::Str::alloc((_3323_ident.len() + 1LL));;
	_4217_obj+=jule::Str("_", 1);
	_4217_obj+=_3323_ident;
	return _4217_obj;
}



inline jule::Str static__1a85d9343_to_local(jule::I64 _5424_row, jule::I64 _5434_col, jule::Str& _5445_ident) {
	jule::Str _5517_obj = jule::Str::alloc(40LL);;
	_5517_obj+=jule::Str("_", 1);
	_5517_obj+=_1a7538cee_itoa(_5424_row);
	_5517_obj+=_1a7538cee_itoa(_5434_col);
	_5517_obj+=jule::Str("_", 1);
	_5517_obj+=_5445_ident;
	return _5517_obj;
}



inline jule::Str static__1a85d95da_func(jule::Ptr<_1a68709c7_Fn>& _6521_f) {
	{
		
		if (_6521_f.get()._field_cpp_linked) {
			_case_begin_1aabcabda:;
			{
				return _6521_f.get()._field_ident;
			}
		}
		else if ((_6521_f.get()._field_ident == jule::Str("main", 4))) {
			_case_begin_1aabca04c:;
			{
				return jule::Str("entry_point", 11);
			}
		}
		else if (_1a684ce27_is_method(_6521_f.ptr())) {
			_case_begin_1aabca0b3:;
			{
				jule::Str _7221_obj = static__1a85d8e58_to_out(_6521_f.get()._field_ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6521_f)));;
				if (_6521_f.get()._field_statically) {
					(_7221_obj).buffer.insert(0, (jule::Str("static_", 7)));;
					return _7221_obj;
				};
				return _7221_obj;
			}
		}
		else {
			_case_begin_1aabc9de8:;
			{
				return static__1a85d8e58_to_out(_6521_f.get()._field_ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6521_f)));
			}
		}
		_match_end_1aabc9d2c:;
	};
}



inline jule::Str static__1a85d9882_func_ins(jule::Ptr<_1a6872c93_FnIns>& _8425_f) {
	if (_1a6873a1e_is_builtin(_8425_f.ptr())) {
		return (jule::Str("jule::", 6) + _8425_f.get()._field_decl.get()._field_ident);
	};
	if ((_8425_f.get()._field_decl.get()._field_cpp_linked || (_8425_f.get()._field_generics.len() == 0LL))) {
		return static__1a85d95da_func(_8425_f.get()._field_decl);
	};
	return static__1a85d8e58_to_out(_8425_f.get()._field_decl.get()._field_ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_8425_f)));
}



inline jule::Str static__1a85d9b29_trait_decl(jule::Ptr<_1a68d46b7_Trait> _9526_t) {
	if (_1a69114a2_is_builtin(_9526_t.ptr())) {
		return (jule::Str("jule::", 6) + _9526_t.get()._field_ident);
	};
	return static__1a85d8e58_to_out(_9526_t.get()._field_ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_9526_t)));
}



inline jule::Str static__1a85d9dc1_param(jule::Ptr<_1a68707da_Param>& _10322_p) {
	if ((_1a5279d72_is_anon_ident(_10322_p.get()._field_ident) || _1a5279aca_is_ignore_ident(_10322_p.get()._field_ident))) {
		return jule::Str();
	};
	if (_1a68491ed_is_self(_10322_p.ptr())) {
		return jule::Str("_self_", 6);
	};
	if ((_10322_p.get()._field_token == nullptr)) {
		return static__1a85d9343_to_local(0LL,0LL,_10322_p.get()._field_ident);
	};
	return static__1a85d9343_to_local(_10322_p.get()._field_token.get()._field_row,_10322_p.get()._field_token.get()._field_column,_10322_p.get()._field_ident);
}



inline jule::Str static__1a85da168_structure(jule::Ptr<_1a6826829_Struct>& _11726_s) {
	if (_11726_s.get()._field_cpp_linked) {
		if (_1a8660694_has_directive(_11726_s.get()._field_directives,jule::Str("typedef", 7))) {
			return _11726_s.get()._field_ident;
		};
		return (jule::Str("struct ", 7) + _11726_s.get()._field_ident);
	};
	return static__1a85d8e58_to_out(_11726_s.get()._field_ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_11726_s)));
}



inline jule::Str static__1a85da410_structure_ins(jule::Ptr<_1a6836a48_StructIns>& _12830_s) {
	if ((_12830_s.get()._field_decl.get()._field_cpp_linked || (_12830_s.get()._field_generics.len() == 0LL))) {
		return static__1a85da168_structure(_12830_s.get()._field_decl);
	};
	return static__1a85d8e58_to_out(_12830_s.get()._field_decl.get()._field_ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_12830_s)));
}



inline jule::Str static__1a85da6a7_field(jule::Ptr<_1a6844a23_Field>& _13622_f) {
	if (_13622_f.get()._field_owner.get()._field_cpp_linked) {
		return _13622_f.get()._field_ident;
	};
	return (jule::Str("_field_", 7) + _13622_f.get()._field_ident);
}



inline jule::Str static__1a85da94e_var(jule::Ptr<_1a76a7720_Var> _14423_v) {
	{
		
		if (_14423_v.get()._field_cpp_linked) {
			_case_begin_1aabd729b:;
			{
				return _14423_v.get()._field_ident;
			}
		}
		else if ((_14423_v.get()._field_ident == jule::Str("error", 5))) {
			_case_begin_1aabd6542:;
			{
				return jule::Str("except.error", 12);
			}
		}
		else if ((_14423_v.get()._field_ident == jule::Str("self", 4))) {
			_case_begin_1aabd65a8:;
			{
				if ((_1a7729c04_sptr(_14423_v.get()._field_kind.get()._field_kind.ptr()) == nullptr)) {
					return jule::Str("(*_self_)", 9);
				};
				return jule::Str("_self_", 6);
			}
		}
		else if ((_14423_v.get()._field_scope != nullptr)) {
			_case_begin_1aabd661e:;
			{
				return static__1a85d9343_to_local(_14423_v.get()._field_token.get()._field_row,_14423_v.get()._field_token.get()._field_column,_14423_v.get()._field_ident);
			}
		}
		else {
			_case_begin_1aabd64cb:;
			{
				return static__1a85d8e58_to_out(_14423_v.get()._field_ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_14423_v)));
			}
		}
		_match_end_1aabd5b7e:;
	};
}



inline jule::Str static__1a85dabe6_iter_begin(jule::Uintptr _16326_it) {
	jule::Str _16417_obj = jule::Str::alloc(30LL);;
	_16417_obj+=jule::Str("_iter_begin_", 12);
	_16417_obj+=_1a7538a8a_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_16326_it)),15LL);
	return _16417_obj;
}



inline jule::Str static__1a85dae8d_iter_end(jule::Uintptr _17124_it) {
	jule::Str _17217_obj = jule::Str::alloc(30LL);;
	_17217_obj+=jule::Str("_iter_end_", 10);
	_17217_obj+=_1a7538a8a_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_17124_it)),15LL);
	return _17217_obj;
}



inline jule::Str static__1a85db235_iter_next(jule::Uintptr _17925_it) {
	jule::Str _18017_obj = jule::Str::alloc(30LL);;
	_18017_obj+=jule::Str("_iter_next_", 11);
	_18017_obj+=_1a7538a8a_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_17925_it)),15LL);
	return _18017_obj;
}



inline jule::Str static__1a85db4cc_label(jule::Str& _18722_ident) {
	jule::Str _18817_obj = jule::Str::alloc(30LL);;
	_18817_obj+=jule::Str("_julec_label_", 13);
	_18817_obj+=_18722_ident;
	return _18817_obj;
}



inline jule::Str static__1a85db774_match_end(jule::Uintptr _19525_m) {
	jule::Str _19617_obj = jule::Str::alloc(30LL);;
	_19617_obj+=jule::Str("_match_end_", 11);
	_19617_obj+=_1a7538a8a_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_19525_m)),15LL);
	return _19617_obj;
}



inline jule::Str static__1a85dba1b_case_begin(jule::Uintptr _20326_c) {
	jule::Str _20417_obj = jule::Str::alloc(30LL);;
	_20417_obj+=jule::Str("_case_begin_", 12);
	_20417_obj+=_1a7538a8a_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_20326_c)),15LL);
	return _20417_obj;
}







std::ostream &operator<<(std::ostream &_Stream, _1a85d894c_IdentCoder _Src) {
	_Stream << "IdentCoder{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8621743_SerializationInfo _Src) {
	_Stream << "SerializationInfo{";
	_Stream << "compiler:" << _Src._field_compiler << ", ";
	_Stream << "compiler_command:" << _Src._field_compiler_command;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8615094_TraitHash _Src) {
	_Stream << "TraitHash{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a8658ba9_to_str(_1a86588bd_CustomType* _self_) {
	return (*_self_)._field_kind;
}



inline jule::Bool _1a8658eb7_equals(jule::Ptr<_1a86588bd_CustomType> _self_, jule::Ptr<_1a77278d3_TypeKind> _3826_k) {
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1a86588bd_CustomType _Src) {
	_Stream << _1a8658ba9_to_str(&_Src);
	return _Stream;
}



inline jule::Str static__1a8659704_to_type(jule::Str _5827_id) {
	if ((_5827_id != jule::Str("uintptr", 7))) {
		_5827_id=_1a7661025_real_kind_of(_5827_id);
	};
	if (((97LL <= _5827_id[0LL]) && (_5827_id[0LL] <= 122LLU))) {
		_5827_id[0LL]-=32LLU;
	};
	return (jule::Str("jule::", 6) + _5827_id);
}



inline jule::Str static__1a865999b_prim(jule::Ptr<_1a772c135_Prim> _6920_p) {
	return static__1a8659704_to_type(_1a772c498_to_str(_6920_p.ptr()));
}



inline jule::Str static__1a8659c43_tuple(jule::Ptr<_1a7731a96_Tuple> _7425_t) {
	jule::Str _7517_obj = jule::Str("std::tuple<", 11);;
	{
		auto &expr = _7425_t.get()._field_types;
		auto it = expr.begin();
		_iter_begin_1aacd6d29:;
		if (it != expr.end()) {
			jule::Ptr<_1a77278d3_TypeKind> _7621_tk = *it;
			{
				_7517_obj+=static__1a865d4d8_kind(_7621_tk);
				_7517_obj+=jule::Str(",", 1);
			}
			_iter_next_1aacd6d29:;
			++it;
			goto _iter_begin_1aacd6d29;
		}
		_iter_end_1aacd6d29:;
	};
	(_7517_obj).mut_slice(0LL,(_7517_obj.len() - 1LL));;
	_7517_obj+=jule::Str(">", 1);
	return _7517_obj;
}



inline jule::Str static__1a8659eda_as_sptr(jule::Str _8623_elem) {
	jule::Str _8717_obj = jule::Str("jule::Ptr<", 10);;
	_8717_obj+=_8623_elem;
	_8717_obj+=jule::Str(">", 1);
	return _8717_obj;
}



inline jule::Str static__1a865a282_as_ptr(jule::Str _9422_elem) {
	return (_9422_elem + jule::Str("*", 1));
}



inline jule::Str static__1a865a529_sptr(jule::Ptr<_1a7730644_Sptr> _9924_sptr) {
	return static__1a8659eda_as_sptr(static__1a865d4d8_kind(_9924_sptr.get()._field_elem));
}



inline jule::Str static__1a865a7c1_ptr(jule::Ptr<_1a7733ba8_Ptr> _10423_p) {
	;
	if (_1a773467b_is_unsafe(_10423_p.ptr())) {
		return jule::Str("void*", 5);
	};
	jule::Str _10917_elem = static__1a865d4d8_kind(_10423_p.get()._field_elem);;
	_10917_elem+=jule::Str("*", 1);
	return _10917_elem;
}



inline jule::Str static__1a865aa68_enum_decl(jule::Ptr<_1a6982435_Enum> _11529_e) {
	return static__1a865d4d8_kind(_11529_e.get()._field_kind.get()._field_kind);
}



inline jule::Str static__1a865ad10_as_slice(jule::Ptr<_1a77278d3_TypeKind> _11928_elem) {
	jule::Str _12017_obj = jule::Str("jule::Slice<", 12);;
	_12017_obj+=static__1a865d4d8_kind(_11928_elem);
	_12017_obj+=jule::Str(">", 1);
	return _12017_obj;
}



inline jule::Str static__1a865b0a7_slice(jule::Ptr<_1a77310a1_Slc> _12725_s) {
	return static__1a865ad10_as_slice(_12725_s.get()._field_elem);
}



inline jule::Str static__1a865b34e_map(jule::Ptr<_1a7732657_Map> _13223_m) {
	jule::Str _13317_obj = jule::Str("jule::Map<", 10);;
	_13317_obj+=static__1a865d4d8_kind(_13223_m.get()._field_key);
	_13317_obj+=jule::Str(",", 1);
	_13317_obj+=static__1a865d4d8_kind(_13223_m.get()._field_val);
	_13317_obj+=jule::Str(">", 1);
	return _13317_obj;
}



inline jule::Str static__1a865b5e6_trait_ident(jule::Str _14127_ident) {
	jule::Str _14217_obj = jule::Str("jule::Trait<", 12);;
	_14217_obj+=_14127_ident;
	_14217_obj+=jule::Str(">", 1);
	return _14217_obj;
}



inline jule::Str static__1a865b88d_trait_decl(jule::Ptr<_1a68d46b7_Trait> _14926_t) {
	return static__1a865b5e6_trait_ident(static__1a85d9b29_trait_decl(_14926_t));
}



inline jule::Str static__1a865bb35_structure(jule::Ptr<_1a6826829_Struct> _15425_s) {
	jule::Str _15517_rep = jule::Str();;
	if ((_15425_s.get()._field_cpp_linked && (!(_1a8660694_has_directive(_15425_s.get()._field_directives,jule::Str("typedef", 7)))))) {
		_15517_rep+=jule::Str("struct ", 7);
	};
	_15517_rep+=static__1a85da168_structure(_15425_s);
	return _15517_rep;
}



inline jule::Str static__1a865bdcc_structure_ins(jule::Ptr<_1a6836a48_StructIns> _16433_s) {
	if (_16433_s.get()._field_decl.get()._field_cpp_linked) {
		jule::Str _16621_ident = static__1a85da410_structure_ins(_16433_s);;
		if ((_16433_s.get()._field_generics.len() > 0LL)) {
			_16621_ident+=jule::Str("<", 1);
			{
				auto &expr = _16433_s.get()._field_generics;
				auto it = expr.begin();
				_iter_begin_1aace40cd:;
				if (it != expr.end()) {
					jule::Ptr<_1a77278d3_TypeKind> _16929_g = *it;
					{
						_16621_ident+=static__1a865d4d8_kind(_16929_g);
						_16621_ident+=jule::Str(",", 1);
					}
					_iter_next_1aace40cd:;
					++it;
					goto _iter_begin_1aace40cd;
				}
				_iter_end_1aace40cd:;
			};
			(_16621_ident).mut_slice(0LL,(_16621_ident.len() - 1LL));;
			_16621_ident+=jule::Str(">", 1);
		};
		jule::Ptr<_1a6852525_Directive> _17617_d = _1a866030e_find_directive(_16433_s.get()._field_decl.get()._field_directives,jule::Str("namespace", 9));;
		if ((_17617_d != nullptr)) {
			(_16621_ident).buffer.insert(0, ((_1a8657966_concat_all_parts(_17617_d.get()._field_args) + jule::Str("::", 2))));;
		};
		return _16621_ident;
	};
	return static__1a85da410_structure_ins(_16433_s);
}



inline jule::Str static__1a865c174_array(jule::Ptr<_1a773324b_Arr> _18625_a) {
	jule::Str _18717_obj = jule::Str("jule::Array<", 12);;
	_18717_obj+=static__1a865d4d8_kind(_18625_a.get()._field_elem);
	_18717_obj+=jule::Str(",", 1);
	_18717_obj+=_1a7538cee_itoa(_18625_a.get()._field_n);
	_18717_obj+=jule::Str(">", 1);
	return _18717_obj;
}



inline jule::Str static__1a865c6b3_param_ins(jule::Ptr<_1a6871e07_ParamIns>& _21230_p) {
	jule::Str _21317_obj = jule::Str();;
	if (_21230_p.get()._field_decl.get()._field_variadic) {
		_21317_obj+=jule::Str("jule::Slice<", 12);
		_21317_obj+=static__1a865d4d8_kind(_21230_p.get()._field_kind);
		_21317_obj+=jule::Str(">", 1);
	} else {
		_21317_obj+=static__1a865d4d8_kind(_21230_p.get()._field_kind);
	};
	if (_21230_p.get()._field_decl.get()._field_reference) {
		_21317_obj+=jule::Str("&", 1);
	};
	return _21317_obj;
}



inline jule::Str static__1a865cc02_func_ins_result(jule::Ptr<_1a6872c93_FnIns>& _24236_f) {
	if (_1a6847eee_is_void(_24236_f.get()._field_decl.ptr())) {
		if (_24236_f.get()._field_decl.get()._field_exceptional) {
			return jule::Str("jule::VoidExceptional", 21);
		};
		return jule::Str("void", 4);
	};
	if (_24236_f.get()._field_decl.get()._field_exceptional) {
		return ((jule::Str("jule::Exceptional<", 18) + static__1a865d4d8_kind(_24236_f.get()._field_result)) + jule::Str(">", 1));
	};
	return static__1a865d4d8_kind(_24236_f.get()._field_result);
}



inline jule::Str static__1a865ce99_anon_func(jule::Ptr<_1a6872c93_FnIns> _25529_f) {
	jule::Str _25617_decl = static__1a865cc02_func_ins_result(_25529_f);;
	_25617_decl+=jule::Str("(", 1);
	if ((_25529_f.get()._field_params.len() > 0LL)) {
		{
			auto &expr = _25529_f.get()._field_params;
			auto it = expr.begin();
			_iter_begin_1aad015a2:;
			if (it != expr.end()) {
				jule::Ptr<_1a6871e07_ParamIns> _25925_param = *it;
				{
					if (_1a68491ed_is_self(_25925_param.get()._field_decl.ptr())) {
						goto _iter_next_1aad015a2;
					};
					_25617_decl+=static__1a865c6b3_param_ins(_25925_param);
					_25617_decl+=jule::Str(",", 1);
				}
				_iter_next_1aad015a2:;
				++it;
				goto _iter_begin_1aad015a2;
			}
			_iter_end_1aad015a2:;
		};
		(_25617_decl).mut_slice(0LL,(_25617_decl.len() - 1LL));;
	} else {
		_25617_decl+=jule::Str("void", 4);
	};
	_25617_decl+=jule::Str(")", 1);
	return _25617_decl;
}



inline jule::Str static__1a865d241_func(jule::Ptr<_1a6872c93_FnIns> _27524_f) {
	jule::Str _27617_obj = jule::Str("jule::Fn<", 9);;
	_27617_obj+=static__1a865ce99_anon_func(_27524_f);
	_27617_obj+=jule::Str(">", 1);
	return _27617_obj;
}



inline jule::Str static__1a865d4d8_kind(jule::Ptr<_1a77278d3_TypeKind> _28324_k) {
	{
		
		if (_1a772853d_cpp_linked(_28324_k.ptr())) {
			_case_begin_1aad03e67:;
			{
				return _28324_k.get()._field_cpp_ident;
			}
		}
		else if ((_1a7729990_prim(_28324_k.ptr()) != nullptr)) {
			_case_begin_1aad03ede:;
			{
				return static__1a865999b_prim(_1a7729990_prim(_28324_k.ptr()));
			}
		}
		else if ((_1a772b3ba_tup(_28324_k.ptr()) != nullptr)) {
			_case_begin_1aad04066:;
			{
				return static__1a8659c43_tuple(_1a772b3ba_tup(_28324_k.ptr()));
			}
		}
		else if ((_1a7729c04_sptr(_28324_k.ptr()) != nullptr)) {
			_case_begin_1aad040dd:;
			{
				return static__1a865a529_sptr(_1a7729c04_sptr(_28324_k.ptr()));
			}
		}
		else if ((_1a7729e68_ptr(_28324_k.ptr()) != nullptr)) {
			_case_begin_1aad04165:;
			{
				return static__1a865a7c1_ptr(_1a7729e68_ptr(_28324_k.ptr()));
			}
		}
		else if ((_1a772a1cc_enm(_28324_k.ptr()) != nullptr)) {
			_case_begin_1aad041dc:;
			{
				return static__1a865aa68_enum_decl(_1a772a1cc_enm(_28324_k.ptr()));
			}
		}
		else if ((_1a772a6a5_slc(_28324_k.ptr()) != nullptr)) {
			_case_begin_1aad04264:;
			{
				return static__1a865b0a7_slice(_1a772a6a5_slc(_28324_k.ptr()));
			}
		}
		else if ((_1a772b156_map(_28324_k.ptr()) != nullptr)) {
			_case_begin_1aad042db:;
			{
				return static__1a865b34e_map(_1a772b156_map(_28324_k.ptr()));
			}
		}
		else if ((_1a772ade2_trt(_28324_k.ptr()) != nullptr)) {
			_case_begin_1aad04363:;
			{
				return static__1a865b88d_trait_decl(_1a772ade2_trt(_28324_k.ptr()));
			}
		}
		else if ((_1a772ab7d_strct(_28324_k.ptr()) != nullptr)) {
			_case_begin_1aad043da:;
			{
				return static__1a865bdcc_structure_ins(_1a772ab7d_strct(_28324_k.ptr()));
			}
		}
		else if ((_1a772a441_arr(_28324_k.ptr()) != nullptr)) {
			_case_begin_1aad04462:;
			{
				return static__1a865c174_array(_1a772a441_arr(_28324_k.ptr()));
			}
		}
		else if ((_1a772a919_fnc(_28324_k.ptr()) != nullptr)) {
			_case_begin_1aad044d9:;
			{
				return static__1a865d241_func(_1a772a919_fnc(_28324_k.ptr()));
			}
		}
		_match_end_1aad03c9c:;
	};
	{
		auto &_match_expr{ _28324_k.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a86588bd_CustomType>>()) {
			_case_begin_1aad0c1a1:;
			{
				return _28324_k.get()._field_kind.operator jule::Ptr<_1a86588bd_CustomType>().get()._field_kind;
			}
		}
		else {
			_case_begin_1aad0abb6:;
			{
				return jule::Str("[<unimplemented_type_kind>]", 27);
			}
		}
		_match_end_1aad0b656:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a86591d7_TypeCoder _Src) {
	_Stream << "TypeCoder{";
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1aad0e318_name(_1aad0e02c_Flag* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _1aad0e45b_what(_1aad0e02c_Flag* _self_) {
	return (*_self_)._field__what;
}



inline void _1aad0e59e_reset(_1aad0e02c_Flag* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _1aad0e6e2_short(_1aad0e02c_Flag* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _1aad0e02c_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1aad1211d_name(_1aad12a8b_Flag* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _1aad12717_what(_1aad12a8b_Flag* _self_) {
	return (*_self_)._field__what;
}



inline void _1aad12d55_reset(_1aad12a8b_Flag* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _1aad12e87_short(_1aad12a8b_Flag* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _1aad12a8b_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1aad156c6_name(_1aad16144_Flag* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _1aad15cc0_what(_1aad16144_Flag* _self_) {
	return (*_self_)._field__what;
}



inline void _1aad1640d_reset(_1aad16144_Flag* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _1aad16540_short(_1aad16144_Flag* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _1aad16144_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1aad18cc3_name(_1aad19741_Flag* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _1aad193bc_what(_1aad19741_Flag* _self_) {
	return (*_self_)._field__what;
}



inline void _1aad19a0a_reset(_1aad19741_Flag* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _1aad19b3c_short(_1aad19741_Flag* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _1aad19741_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1aad1c37b_name(_1aad1cce9_Flag* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _1aad1c975_what(_1aad1cce9_Flag* _self_) {
	return (*_self_)._field__what;
}



inline void _1aad1d0b3_reset(_1aad1cce9_Flag* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _1aad1d1e5_short(_1aad1cce9_Flag* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _1aad1cce9_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a8690680_FlagSet> static__1a869096b_new(void) {
	return jule::new_ptr<_1a8690680_FlagSet>(_1a8690680_FlagSet{._field__flags=jule::Slice<jule::Trait<_1a8588039_CommonFlag>>::alloc(0LL,20LL)});
}



inline jule::Trait<_1a8588039_CommonFlag> _1a8690e33_find_flag(_1a8690680_FlagSet* _self_, jule::Str _7132_name) {
	{
		auto &expr = (*_self_)._field__flags;
		auto it = expr.begin();
		_iter_begin_1aad2454d:;
		if (it != expr.end()) {
			jule::Trait<_1a8588039_CommonFlag> _7221_flag = *it;
			{
				if ((_1a8588039_CommonFlag_mptr_data[(_7221_flag).type_offset]._1a868dc77_name(_7221_flag) == _7132_name)) {
					return _7221_flag;
				};
			}
			_iter_next_1aad2454d:;
			++it;
			goto _iter_begin_1aad2454d;
		}
		_iter_end_1aad2454d:;
	};
	return nullptr;
}



inline jule::Trait<_1a8588039_CommonFlag> _1a8691241_find_flag_short(_1a8690680_FlagSet* _self_, jule::I32 _8138_name) {
	{
		auto &expr = (*_self_)._field__flags;
		auto it = expr.begin();
		_iter_begin_1aad2594a:;
		if (it != expr.end()) {
			jule::Trait<_1a8588039_CommonFlag> _8221_flag = *it;
			{
				if ((_1a8588039_CommonFlag_mptr_data[(_8221_flag).type_offset]._1a868dda9_short(_8221_flag) == _8138_name)) {
					return _8221_flag;
				};
			}
			_iter_next_1aad2594a:;
			++it;
			goto _iter_begin_1aad2594a;
		}
		_iter_end_1aad2594a:;
	};
	return nullptr;
}



inline jule::Slice<jule::Trait<_1a8588039_CommonFlag>> _1a86914a5_flags(_1a8690680_FlagSet* _self_) {
	return (*_self_)._field__flags;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _1a86917b3_parse(_1a8690680_FlagSet* _self_, jule::Slice<jule::Str> _11528_args) {
	_1a8692d8b_ArgParser _11617_ap = _1a8692d8b_ArgParser{._field_set=(*_self_), ._field_args=_11528_args, };;
	({
		auto except = _1a8694277_parse(&_11617_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>(except.error);
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>(jule::Any(),_11617_ap._field_content);
}



inline void _1a869198e_reset(_1a8690680_FlagSet* _self_) {
	{
		auto &expr = (*_self_)._field__flags;
		auto it = expr.begin();
		_iter_begin_1aad29487:;
		if (it != expr.end()) {
			jule::Trait<_1a8588039_CommonFlag> _12616_f = *it;
			{
				_1a8588039_CommonFlag_mptr_data[(_12616_f).type_offset]._1a868e11d_reset(_12616_f);
			}
			_iter_next_1aad29487:;
			++it;
			goto _iter_begin_1aad29487;
		}
		_iter_end_1aad29487:;
	};
}



inline jule::Ptr<_1aad1cce9_Flag> _1aad95107_add_flag_common(_1a8690680_FlagSet* _self_, jule::Str _13141_name, jule::I32 _13152_short, jule::Str _13165_what) {
	{
		
{
			_case_begin_1aad96a65:;
			{
				goto _match_end_1aad96a10;
			}
		}
		_match_end_1aad96a10:;
	};
	if ((_1a8690e33_find_flag(&(*_self_), _13141_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this name: ", 63) + _13141_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13152_short != 0LL) && (_1a8691241_find_flag_short(&(*_self_), _13152_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_13152_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_1aad1cce9_Flag> _14817_flag = jule::new_ptr<_1aad1cce9_Flag>(_1aad1cce9_Flag{._field__name=_13141_name, ._field__short=_13152_short, ._field__what=_13165_what, });;
	(*_self_)._field__flags = jule::alloc_for_append((*_self_)._field__flags,1);(*_self_)._field__flags.__push(jule::Trait<_1a8588039_CommonFlag>(_14817_flag, 4));;
	return _14817_flag;
}

inline jule::Ptr<_1aad19741_Flag> _1aad9e2ba_add_flag_common(_1a8690680_FlagSet* _self_, jule::Str _13141_name, jule::I32 _13152_short, jule::Str _13165_what) {
	{
		
{
			_case_begin_1aada0bd4:;
			{
				goto _match_end_1aada0b7e;
			}
		}
		_match_end_1aada0b7e:;
	};
	if ((_1a8690e33_find_flag(&(*_self_), _13141_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this name: ", 63) + _13141_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13152_short != 0LL) && (_1a8691241_find_flag_short(&(*_self_), _13152_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_13152_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_1aad19741_Flag> _14817_flag = jule::new_ptr<_1aad19741_Flag>(_1aad19741_Flag{._field__name=_13141_name, ._field__short=_13152_short, ._field__what=_13165_what, });;
	(*_self_)._field__flags = jule::alloc_for_append((*_self_)._field__flags,1);(*_self_)._field__flags.__push(jule::Trait<_1a8588039_CommonFlag>(_14817_flag, 3));;
	return _14817_flag;
}



inline void _1aad92962_add_var(_1a8690680_FlagSet* _self_, jule::Ptr<jule::Str> _17537_var, jule::Str _17546_name, jule::I32 _17557_short, jule::Str _17570_what) {
	jule::Ptr<_1aad1cce9_Flag> _17617_flag = _1aad95107_add_flag_common(&(*_self_), _17546_name,_17557_short,_17570_what);;
	_17617_flag.get()._field__default=(*(_17537_var));
	_17617_flag.get()._field__data=_17537_var;
}

inline void _1aad9bb58_add_var(_1a8690680_FlagSet* _self_, jule::Ptr<jule::Bool> _17537_var, jule::Str _17546_name, jule::I32 _17557_short, jule::Str _17570_what) {
	jule::Ptr<_1aad19741_Flag> _17617_flag = _1aad9e2ba_add_flag_common(&(*_self_), _17546_name,_17557_short,_17570_what);;
	_17617_flag.get()._field__default=(*(_17537_var));
	_17617_flag.get()._field__data=_17537_var;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8690680_FlagSet _Src) {
	_Stream << "FlagSet{";
	_Stream << "_flags:" << _Src._field__flags;
	_Stream << "}";
	return _Stream;
}



inline std::tuple<jule::Ptr<_1d5090729_IR>,jule::Slice<_1a43349cc_Log>> static__1a7d2d978_build(jule::Str _2825_path, jule::I64 _2836_flags) {
	jule::Ptr<_1a7ceea26_JuleImporter> _2917_importer = static__1d509ac40_new(_1d5096873_build_compile_info());;
	jule::Slice<jule::Ptr<_1a6820cc9_Ast>> _3018_files;;
	jule::Slice<_1a43349cc_Log> _3029_logs;;
	std::tie(_3018_files,_3029_logs) = _1a7d14e9d_import_package(_2917_importer.ptr(), _2825_path,true);
	if ((_3029_logs.len() > 0LL)) {
		return std::make_tuple(nullptr,_3029_logs);
	};
	jule::Str _3413_root = _2825_path;;
	if ((_3018_files.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	};
	jule::Ptr<_1a7687bea_Package> _4018_pkg;;
	std::tie(_4018_pkg,_3029_logs) = _1a7743305_analyze_package(_3018_files,jule::Trait<_1a7682bc3_Importer>(_2917_importer, 0),_2836_flags);
	if ((_3029_logs.len() > 0LL)) {
		return std::make_tuple(nullptr,_3029_logs);
	};
	jule::Ptr<_1d5090729_IR> _4517_ir = jule::new_ptr<_1d5090729_IR>(_1d5090729_IR{._field_root=_3413_root, ._field_main=_4018_pkg, ._field_used=_1d50b46a4_all_packages(_2917_importer.ptr()), });;
	_4517_ir.get()._field_passes=_1d5083442_get_all_unique_passes(_4517_ir.get()._field_main,_4517_ir.get()._field_used);
	return std::make_tuple(_4517_ir,nullptr);
}



inline void _1a7d81e71_append_structs(_1d5090729_IR* _self_, jule::Ptr<_1a7687bea_Package>& _5734_p, jule::Slice<jule::Ptr<_1a6826829_Struct>>& _5758_buffer) {
	{
		auto &expr = _5734_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1aa798588:;
		if (it != expr.end()) {
			jule::Ptr<_1a76e8e26_SymbolTable> _5821_f = *it;
			{
				{
					auto &expr = _5821_f.get()._field_structs;
					auto it = expr.begin();
					_iter_begin_1aa798d3b:;
					if (it != expr.end()) {
						jule::Ptr<_1a6826829_Struct> _5925_s = *it;
						{
							if ((!(_5925_s.get()._field_cpp_linked))) {
								_5758_buffer = jule::alloc_for_append(_5758_buffer,1);_5758_buffer.__push(_5925_s);;
							};
						}
						_iter_next_1aa798d3b:;
						++it;
						goto _iter_begin_1aa798d3b;
					}
					_iter_end_1aa798d3b:;
				};
			}
			_iter_next_1aa798588:;
			++it;
			goto _iter_begin_1aa798588;
		}
		_iter_end_1aa798588:;
	};
}



inline jule::Slice<jule::Ptr<_1a6826829_Struct>> _1d5113703_get_all_structures(_1d5090729_IR* _self_) {
	jule::Slice<jule::Ptr<_1a6826829_Struct>> _7017_buffer = nullptr;;
	_1a7d81e71_append_structs(&(*_self_), (*_self_)._field_main,_7017_buffer);
	{
		auto &expr = (*_self_)._field_used;
		auto it = expr.begin();
		_iter_begin_1aa79a6bc:;
		if (it != expr.end()) {
			jule::Ptr<_1a7685038_ImportInfo> _7221_u = *it;
			{
				if ((!(_7221_u.get()._field_cpp_linked))) {
					_1a7d81e71_append_structs(&(*_self_), _7221_u.get()._field_package,_7017_buffer);
				};
			}
			_iter_next_1aa79a6bc:;
			++it;
			goto _iter_begin_1aa79a6bc;
		}
		_iter_end_1aa79a6bc:;
	};
	return _7017_buffer;
}



inline void _1a7d83060_append_globals(_1d5090729_IR* _self_, jule::Ptr<_1a7687bea_Package>& _8034_p, jule::Slice<jule::Ptr<_1a76a7720_Var>>& _8058_buffer) {
	{
		auto &expr = _8034_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1aa79c339:;
		if (it != expr.end()) {
			jule::Ptr<_1a76e8e26_SymbolTable> _8121_f = *it;
			{
				{
					auto &expr = _8121_f.get()._field_vars;
					auto it = expr.begin();
					_iter_begin_1aa79cadc:;
					if (it != expr.end()) {
						jule::Ptr<_1a76a7720_Var> _8225_v = *it;
						{
							if ((((_8225_v.get()._field_token != nullptr) && (!(_8225_v.get()._field_cpp_linked))) && (!(_8225_v.get()._field_constant)))) {
								_8058_buffer = jule::alloc_for_append(_8058_buffer,1);_8058_buffer.__push(_8225_v);;
							};
						}
						_iter_next_1aa79cadc:;
						++it;
						goto _iter_begin_1aa79cadc;
					}
					_iter_end_1aa79cadc:;
				};
			}
			_iter_next_1aa79c339:;
			++it;
			goto _iter_begin_1aa79c339;
		}
		_iter_end_1aa79c339:;
	};
}



inline jule::Slice<jule::Ptr<_1a76a7720_Var>> _1d5180000_get_all_globals(_1d5090729_IR* _self_) {
	jule::Slice<jule::Ptr<_1a76a7720_Var>> _9317_buffer = nullptr;;
	_1a7d83060_append_globals(&(*_self_), (*_self_)._field_main,_9317_buffer);
	{
		auto &expr = (*_self_)._field_used;
		auto it = expr.begin();
		_iter_begin_1aa79ea89:;
		if (it != expr.end()) {
			jule::Ptr<_1a7685038_ImportInfo> _9521_u = *it;
			{
				if ((!(_9521_u.get()._field_cpp_linked))) {
					_1a7d83060_append_globals(&(*_self_), _9521_u.get()._field_package,_9317_buffer);
				};
			}
			_iter_next_1aa79ea89:;
			++it;
			goto _iter_begin_1aa79ea89;
		}
		_iter_end_1aa79ea89:;
	};
	return _9317_buffer;
}



inline void _1d519670e_order(_1d5090729_IR* _self_) {
	(*_self_)._field_ordered._field_structs=_1d5113703_get_all_structures(&(*_self_));
	(*_self_)._field_ordered._field_globals=_1d5180000_get_all_globals(&(*_self_));
	static__1d5166cb7_order_structures((*_self_)._field_ordered._field_structs);
	static__1a7d21817_order_vars((*_self_)._field_ordered._field_globals);
}







std::ostream &operator<<(std::ostream &_Stream, _1d5090729_IR _Src) {
	_Stream << "IR{";
	_Stream << "root:" << _Src._field_root << ", ";
	_Stream << "passes:" << _Src._field_passes << ", ";
	_Stream << "main:" << _Src._field_main << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "ordered:" << _Src._field_ordered;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a683ac7d_to_str(_1a6836a48_StructIns* _self_) {
	jule::Str _24317_kind = jule::Str();;
	_24317_kind+=(*_self_)._field_decl.get()._field_ident;
	if (((*_self_)._field_generics.len() > 0LL)) {
		_24317_kind+=jule::Str("[", 1);
		{
			auto &expr = (*_self_)._field_generics;
			auto it = expr.begin();
			_iter_begin_1a973b8d4:;
			if (it != expr.end()) {
				jule::Ptr<_1a77278d3_TypeKind> &_24720_g = *it;
				{
					_24317_kind+=_1a7727c8a_to_str(_24720_g.ptr());
					_24317_kind+=jule::Str(",", 1);
				}
				_iter_next_1a973b8d4:;
				++it;
				goto _iter_begin_1a973b8d4;
			}
			_iter_end_1a973b8d4:;
		};
		(_24317_kind).mut_slice(0LL,(_24317_kind.len() - 1LL));;
		_24317_kind+=jule::Str("]", 1);
	};
	return _24317_kind;
}



inline jule::Bool _1a682a641_equals(jule::Ptr<_1a6836a48_StructIns> _self_, jule::Ptr<_1a77278d3_TypeKind> _25826_other) {
	jule::Ptr<_1a6836a48_StructIns> _25913_s = _1a772ab7d_strct(_25826_other.ptr());;
	if ((_25913_s == nullptr)) {
		return false;
	};
	if ((_self_.get()._field_decl != _25913_s.get()._field_decl)) {
		return false;
	};
	if ((_self_.get()._field_generics.len() != _25913_s.get()._field_generics.len())) {
		return false;
	};
	jule::I64 _27217_i = 0LL;;
	for (; (_27217_i < _self_.get()._field_generics.len()); (_27217_i)++) {
		{
			if ((!(_1a7728098_equals(_self_.get()._field_generics[_27217_i], _25913_s.get()._field_generics[_27217_i])))) {
				return false;
			};
		}
	_iter_next_1a9740c18:;
	}
	_iter_end_1a9740c18:;;
	return true;
}



inline jule::Bool _1a68459ad_same(_1a6836a48_StructIns* _self_, jule::Ptr<_1a6836a48_StructIns> _28623_s) {
	if ((((*_self_)._field_decl != _28623_s.get()._field_decl) || (_28623_s.get()._field_generics.len() != (*_self_)._field_generics.len()))) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_generics;
		auto it = expr.begin();
		_iter_begin_1a974359a:;
		if (it != expr.end()) {
			jule::I64 _29113_i = it - expr.begin();
			jule::Ptr<_1a77278d3_TypeKind> &_29116_g = *it;
			{
				if ((!(_1a7728098_equals(_29116_g, _28623_s.get()._field_generics[_29113_i])))) {
					return false;
				};
			}
			_iter_next_1a974359a:;
			++it;
			_29113_i++;
			goto _iter_begin_1a974359a;
		}
		_iter_end_1a974359a:;
	};
	return true;
}



inline jule::Ptr<_1a68709c7_Fn> _1a6846bbd_find_method(_1a6836a48_StructIns* _self_, jule::Str _30134_ident, jule::Bool _30146_statically) {
	{
		auto &expr = (*_self_)._field_methods;
		auto it = expr.begin();
		_iter_begin_1a9745525:;
		if (it != expr.end()) {
			jule::Ptr<_1a68709c7_Fn> _30221_f = *it;
			{
				if (((_30221_f.get()._field_statically == _30146_statically) && (_30221_f.get()._field_ident == _30134_ident))) {
					return _30221_f;
				};
			}
			_iter_next_1a9745525:;
			++it;
			goto _iter_begin_1a9745525;
		}
		_iter_end_1a9745525:;
	};
	return nullptr;
}



inline jule::Ptr<_1a6830899_FieldIns> _1a6832ea6_find_field(_1a6836a48_StructIns* _self_, jule::Str _31233_ident) {
	{
		auto &expr = (*_self_)._field_fields;
		auto it = expr.begin();
		_iter_begin_1a9746c63:;
		if (it != expr.end()) {
			jule::Ptr<_1a6830899_FieldIns> _31321_f = *it;
			{
				if ((_31321_f.get()._field_decl.get()._field_ident == _31233_ident)) {
					return _31321_f;
				};
			}
			_iter_next_1a9746c63:;
			++it;
			goto _iter_begin_1a9746c63;
		}
		_iter_end_1a9746c63:;
	};
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1a6836a48_StructIns _Src) {
	_Stream << _1a683ac7d_to_str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1a7ed11d0_ObjectDeadCode> static__1a7ed1631_new(jule::Ptr<_1d5090729_IR>& _3124_ir) {
	return jule::new_ptr<_1a7ed11d0_ObjectDeadCode>(_1a7ed11d0_ObjectDeadCode{._field_ir=_3124_ir});
}



inline jule::Bool _1aa7c3728_is_live(jule::Ptr<_1a7ed11d0_ObjectDeadCode> _self_, jule::Ptr<_1a6872c93_FnIns>& _3731_t) {
	jule::Slice<jule::Ptr<_1a6872c93_FnIns>> _3817_live = nullptr;;
	{
		
{
			_case_begin_1aa7c4e99:;
			{
				_3817_live=_self_.get()._field_live._field_fns;
			}
		}
		_match_end_1aa7c4e44:;
	};
	{
		auto &expr = _3817_live;
		auto it = expr.begin();
		_iter_begin_1aa7c5c47:;
		if (it != expr.end()) {
			jule::I64 _4713_i = it - expr.begin();
			{
				if ((_3817_live[_4713_i] == _3731_t)) {
					return true;
				};
			}
			_iter_next_1aa7c5c47:;
			++it;
			_4713_i++;
			goto _iter_begin_1aa7c5c47;
		}
		_iter_end_1aa7c5c47:;
	};
	return false;
}

inline jule::Bool _1aa7c8277_is_live(jule::Ptr<_1a7ed11d0_ObjectDeadCode> _self_, jule::Ptr<_1a6836a48_StructIns>& _3731_t) {
	jule::Slice<jule::Ptr<_1a6836a48_StructIns>> _3817_live = nullptr;;
	{
		
{
			_case_begin_1aa7ca6db:;
			{
				_3817_live=_self_.get()._field_live._field_structs;
			}
		}
		_match_end_1aa7ca466:;
	};
	{
		auto &expr = _3817_live;
		auto it = expr.begin();
		_iter_begin_1aa7cb302:;
		if (it != expr.end()) {
			jule::I64 _4713_i = it - expr.begin();
			{
				if ((_3817_live[_4713_i] == _3731_t)) {
					return true;
				};
			}
			_iter_next_1aa7cb302:;
			++it;
			_4713_i++;
			goto _iter_begin_1aa7cb302;
		}
		_iter_end_1aa7cb302:;
	};
	return false;
}

inline jule::Bool _1aa7d05e2_is_live(jule::Ptr<_1a7ed11d0_ObjectDeadCode> _self_, jule::Ptr<_1a76a7720_Var>& _3731_t) {
	jule::Slice<jule::Ptr<_1a76a7720_Var>> _3817_live = nullptr;;
	{
		
{
			_case_begin_1aa7d1e0c:;
			{
				_3817_live=_self_.get()._field_live._field_vars;
			}
		}
		_match_end_1aa7d1d41:;
	};
	{
		auto &expr = _3817_live;
		auto it = expr.begin();
		_iter_begin_1aa7d1d96:;
		if (it != expr.end()) {
			jule::I64 _4713_i = it - expr.begin();
			{
				if ((_3817_live[_4713_i] == _3731_t)) {
					return true;
				};
			}
			_iter_next_1aa7d1d96:;
			++it;
			_4713_i++;
			goto _iter_begin_1aa7d1d96;
		}
		_iter_end_1aa7d1d96:;
	};
	return false;
}



inline void _1aa7c64a6_push_live(jule::Ptr<_1a7ed11d0_ObjectDeadCode> _self_, jule::Ptr<_1a6836a48_StructIns> _5536_t) {
	if ((!(_1aa7c8277_is_live(_self_, _5536_t)))) {
		{
			
{
				_case_begin_1aa7c84ca:;
				{
					_self_.get()._field_live._field_structs = jule::alloc_for_append(_self_.get()._field_live._field_structs,1);_self_.get()._field_live._field_structs.__push(_5536_t);;
				}
			}
			_match_end_1aa7c8222:;
		};
	};
}

inline void _1aa7cbe18_push_live(jule::Ptr<_1a7ed11d0_ObjectDeadCode> _self_, jule::Ptr<_1a6872c93_FnIns> _5536_t) {
	if ((!(_1aa7c3728_is_live(_self_, _5536_t)))) {
		{
			
{
				_case_begin_1aa7cd7cc:;
				{
					_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_5536_t);;
				}
			}
			_match_end_1aa7cd6bc:;
		};
	};
}

inline void _1aa7d15c1_push_live(jule::Ptr<_1a7ed11d0_ObjectDeadCode> _self_, jule::Ptr<_1a76a7720_Var> _5536_t) {
	if ((!(_1aa7d05e2_is_live(_self_, _5536_t)))) {
		{
			
{
				_case_begin_1aa7d45a2:;
				{
					_self_.get()._field_live._field_vars = jule::alloc_for_append(_self_.get()._field_live._field_vars,1);_self_.get()._field_live._field_vars.__push(_5536_t);;
				}
			}
			_match_end_1aa7d4508:;
		};
	};
}



inline void _1a8012783_set_references_as_live(jule::Ptr<_1a7ed11d0_ObjectDeadCode> _self_, jule::Ptr<_1a6875988_ReferenceStack>& _6847_rs) {
	if ((_6847_rs == nullptr)) {
		return;;
	};
	jule::I64 _7217_i = 0LL;;
	for (; (_7217_i < _1a687612b_len(_6847_rs.ptr())); (_7217_i)++) {
		{
			jule::Any _7421_ref = _1a6876439_at(_6847_rs.ptr(), _7217_i);;
			{
				auto &_match_expr{ _7421_ref };
				
				if (_match_expr.type_is<jule::Ptr<_1a6872c93_FnIns>>()) {
					_case_begin_1aa7c2529:;
					{
						jule::Ptr<_1a6872c93_FnIns> _7725_f = _7421_ref.operator jule::Ptr<_1a6872c93_FnIns>();;
						if (_1aa7c3728_is_live(_self_, _7725_f)) {
							goto _match_end_1aa7c2480;
						};
						if (((_7725_f.get()._field_owner != nullptr) && (!(_7725_f.get()._field_decl.get()._field_statically)))) {
							if ((!(_1aa7c8277_is_live(_self_, _7725_f.get()._field_owner)))) {
								_1aa7c64a6_push_live(_self_, _7725_f.get()._field_owner);
								_1a8012783_set_references_as_live(_self_, _7725_f.get()._field_owner.get()._field_refers);
							};
						};
						_1aa7cbe18_push_live(_self_, _7725_f);
						_1a8012783_set_references_as_live(_self_, _7725_f.get()._field_refers);
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_1a76a7720_Var>>()) {
					_case_begin_1aa7c2590:;
					{
						jule::Ptr<_1a76a7720_Var> _9025_v = _7421_ref.operator jule::Ptr<_1a76a7720_Var>();;
						if (_1aa7d05e2_is_live(_self_, _9025_v)) {
							goto _match_end_1aa7c2480;
						};
						_1aa7d15c1_push_live(_self_, _9025_v);
						_1a8012783_set_references_as_live(_self_, _9025_v.get()._field_refers);
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_1a6836a48_StructIns>>()) {
					_case_begin_1aa7c26a0:;
					{
						jule::Ptr<_1a6836a48_StructIns> _9725_s = _7421_ref.operator jule::Ptr<_1a6836a48_StructIns>();;
						if (_1aa7c8277_is_live(_self_, _9725_s)) {
							goto _match_end_1aa7c2480;
						};
						_1aa7c64a6_push_live(_self_, _9725_s);
						_1a8012783_set_references_as_live(_self_, _9725_s.get()._field_refers);
						{
							auto &expr = _9725_s.get()._field_methods;
							auto it = expr.begin();
							_iter_begin_1aa7d7e68:;
							if (it != expr.end()) {
								jule::Ptr<_1a68709c7_Fn> _10329_ins = *it;
								{
									{
										auto &expr = _10329_ins.get()._field_instances;
										auto it = expr.begin();
										_iter_begin_1aa7d84eb:;
										if (it != expr.end()) {
											jule::Ptr<_1a6872c93_FnIns> _10433_mins = *it;
											{
												if (_1aa7c3728_is_live(_self_, _10433_mins)) {
													goto _iter_next_1aa7d84eb;
												};
												_1aa7cbe18_push_live(_self_, _10433_mins);
												_1a8012783_set_references_as_live(_self_, _10433_mins.get()._field_refers);
											}
											_iter_next_1aa7d84eb:;
											++it;
											goto _iter_begin_1aa7d84eb;
										}
										_iter_end_1aa7d84eb:;
									};
								}
								_iter_next_1aa7d7e68:;
								++it;
								goto _iter_begin_1aa7d7e68;
							}
							_iter_end_1aa7d7e68:;
						};
					}
				}
				_match_end_1aa7c2480:;
			};
		}
	_iter_next_1aa7c0d41:;
	}
	_iter_end_1aa7c0d41:;;
}



inline void _1a8012a08_inits(jule::Ptr<_1a7ed11d0_ObjectDeadCode> _self_, jule::Ptr<_1a7687bea_Package>& _11630_pkg) {
	{
		auto &expr = _11630_pkg.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1aa7c1acd:;
		if (it != expr.end()) {
			jule::Ptr<_1a76e8e26_SymbolTable> _11721_file = *it;
			{
				{
					auto &expr = _11721_file.get()._field_funcs;
					auto it = expr.begin();
					_iter_begin_1aa7db2bd:;
					if (it != expr.end()) {
						jule::Ptr<_1a68709c7_Fn> _11825_f = *it;
						{
							if ((_11825_f.get()._field_ident == jule::Str("init", 4))) {
								jule::Ptr<_1a6872c93_FnIns> _12029_ins = _11825_f.get()._field_instances[0LL];;
								_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_12029_ins);;
								_1a8012783_set_references_as_live(_self_, _12029_ins.get()._field_refers);
							};
						}
						_iter_next_1aa7db2bd:;
						++it;
						goto _iter_begin_1aa7db2bd;
					}
					_iter_end_1aa7db2bd:;
				};
			}
			_iter_next_1aa7c1acd:;
			++it;
			goto _iter_begin_1aa7c1acd;
		}
		_iter_end_1aa7c1acd:;
	};
}



inline void _1a8012bd4_collect_live(jule::Ptr<_1a7ed11d0_ObjectDeadCode> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1aa7db7c9:;
		if (it != expr.end()) {
			jule::Ptr<_1a7685038_ImportInfo> _12921_used = *it;
			{
				if ((!(_12921_used.get()._field_cpp_linked))) {
					_1a8012a08_inits(_self_, _12921_used.get()._field_package);
				};
			}
			_iter_next_1aa7db7c9:;
			++it;
			goto _iter_begin_1aa7db7c9;
		}
		_iter_end_1aa7db7c9:;
	};
	_1a8012a08_inits(_self_, _self_.get()._field_ir.get()._field_main);
	jule::Ptr<_1a68709c7_Fn> _13517_main = _1a768948d_find_fn(_self_.get()._field_ir.get()._field_main.ptr(), jule::Str("main", 4),false);;
	jule::Ptr<_1a6872c93_FnIns> _13617_ins = _13517_main.get()._field_instances[0LL];;
	_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_13617_ins);;
	_1a8012783_set_references_as_live(_self_, _13617_ins.get()._field_refers);
}



inline void _1a8012e59_remove_dead_globals(jule::Ptr<_1a7ed11d0_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a76a7720_Var>>& _14144_vars) {
	jule::I64 _14217_i = 0LL;;
	while ((_14217_i < _14144_vars.len())) {
		{
			jule::Ptr<_1a76a7720_Var> _14417_v = _14144_vars[_14217_i];;
			if (_1aa7d05e2_is_live(_self_, _14417_v)) {
				(_14217_i)++;
				goto _iter_next_1aa7e2082;
			};
			_14144_vars=jule::append(_14144_vars.slice(0LL,_14217_i),_14144_vars.slice((_14217_i + 1LL)));
		}
	_iter_next_1aa7e2082:;
	}
	_iter_end_1aa7e2082:;;
}



inline void _1a80131ce_remove_dead_fns(jule::Ptr<_1a7ed11d0_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a68709c7_Fn>>& _15340_funcs) {
	jule::I64 _15417_i = 0LL;;
	while ((_15417_i < _15340_funcs.len())) {
		{
			jule::Ptr<_1a68709c7_Fn> _15621_f = _15340_funcs[_15417_i];;
			jule::I64 _15721_j = 0LL;;
			while ((_15721_j < _15621_f.get()._field_instances.len())) {
				{
					jule::Ptr<_1a6872c93_FnIns> _15921_ins = _15621_f.get()._field_instances[_15721_j];;
					if (_1aa7c3728_is_live(_self_, _15921_ins)) {
						(_15721_j)++;
						goto _iter_next_1aa7e578e;
					};
					_15621_f.get()._field_instances=jule::append(_15621_f.get()._field_instances.slice(0LL,_15721_j),_15621_f.get()._field_instances.slice((_15721_j + 1LL)));
				}
			_iter_next_1aa7e578e:;
			}
			_iter_end_1aa7e578e:;;
			if ((_15621_f.get()._field_instances.len() == 0LL)) {
				_15340_funcs=jule::append(_15340_funcs.slice(0LL,_15417_i),_15340_funcs.slice((_15417_i + 1LL)));
				goto _iter_next_1aa7e49be;
			};
			(_15417_i)++;
		}
	_iter_next_1aa7e49be:;
	}
	_iter_end_1aa7e49be:;;
}



inline void _1a8013454_remove_dead_structs(jule::Ptr<_1a7ed11d0_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a6826829_Struct>>& _17444_structs) {
	jule::I64 _17517_i = 0LL;;
	while ((_17517_i < _17444_structs.len())) {
		{
			jule::Ptr<_1a6826829_Struct> _17721_s = _17444_structs[_17517_i];;
			jule::I64 _17821_j = 0LL;;
			while ((_17821_j < _17721_s.get()._field_instances.len())) {
				{
					jule::Ptr<_1a6836a48_StructIns> _18025_ins = _17721_s.get()._field_instances[_17821_j];;
					_1a80131ce_remove_dead_fns(_self_, _18025_ins.get()._field_methods);
					if (((_18025_ins.get()._field_methods.len() != 0LL) || _1aa7c8277_is_live(_self_, _18025_ins))) {
						(_17821_j)++;
						goto _iter_next_1aa7eec1b;
					};
					_17721_s.get()._field_instances=jule::append(_17721_s.get()._field_instances.slice(0LL,_17821_j),_17721_s.get()._field_instances.slice((_17821_j + 1LL)));
				}
			_iter_next_1aa7eec1b:;
			}
			_iter_end_1aa7eec1b:;;
			if ((_17721_s.get()._field_instances.len() == 0LL)) {
				_17444_structs=jule::append(_17444_structs.slice(0LL,_17517_i),_17444_structs.slice((_17517_i + 1LL)));
				goto _iter_next_1aa7ede4b;
			};
			(_17517_i)++;
		}
	_iter_next_1aa7ede4b:;
	}
	_iter_end_1aa7ede4b:;;
}



inline void _1a80136c9_remove_deads_file(jule::Ptr<_1a7ed11d0_ObjectDeadCode> _self_, jule::Ptr<_1a76e8e26_SymbolTable>& _19642_file) {
	_1a80131ce_remove_dead_fns(_self_, _19642_file.get()._field_funcs);
	_1a8013454_remove_dead_structs(_self_, _19642_file.get()._field_structs);
	_1a8012e59_remove_dead_globals(_self_, _19642_file.get()._field_vars);
}



inline void _1a801394e_remove_deads_package(jule::Ptr<_1a7ed11d0_ObjectDeadCode> _self_, jule::Ptr<_1a7687bea_Package>& _20245_pkg) {
	{
		auto &expr = _20245_pkg.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1aa80556d:;
		if (it != expr.end()) {
			jule::Ptr<_1a76e8e26_SymbolTable> _20321_file = *it;
			{
				_1a80136c9_remove_deads_file(_self_, _20321_file);
			}
			_iter_next_1aa80556d:;
			++it;
			goto _iter_begin_1aa80556d;
		}
		_iter_end_1aa80556d:;
	};
}



inline void _1a8013b2a_remove_deads(jule::Ptr<_1a7ed11d0_ObjectDeadCode> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1aa8066e5:;
		if (it != expr.end()) {
			jule::Ptr<_1a7685038_ImportInfo> _20921_used = *it;
			{
				if ((!(_20921_used.get()._field_cpp_linked))) {
					_1a801394e_remove_deads_package(_self_, _20921_used.get()._field_package);
				};
			}
			_iter_next_1aa8066e5:;
			++it;
			goto _iter_begin_1aa8066e5;
		}
		_iter_end_1aa8066e5:;
	};
	_1a801394e_remove_deads_package(_self_, _self_.get()._field_ir.get()._field_main);
}



inline void _1a8013d06_elimanate(jule::Ptr<_1a7ed11d0_ObjectDeadCode> _self_) {
	_1a8012bd4_collect_live(_self_);
	_1a8013b2a_remove_deads(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1a7ed11d0_ObjectDeadCode _Src) {
	_Stream << "ObjectDeadCode{";
	_Stream << "live:" << _Src._field_live << ", ";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a8615281_ObjectCoder> static__1a863637e_new(jule::Ptr<_1d5090729_IR>& _7228_ir, _1a8621743_SerializationInfo _7237_info) {
	jule::Ptr<_1a8615281_ObjectCoder> _7317_oc = jule::new_ptr<_1a8615281_ObjectCoder>(_1a8615281_ObjectCoder{._field_ir=_7228_ir, ._field_info=_7237_info, });;
	_7317_oc.get()._field_ec=static__1a85c6e02_new(_7317_oc);
	_7317_oc.get()._field_sc=static__1a85be46b_new(_7317_oc);
	return _7317_oc;
}



inline void _1a861e169_write(jule::Ptr<_1a8615281_ObjectCoder> _self_, jule::Str _8225_s) {
	_self_.get()._field_obj+=_8225_s;
}



inline void _1a861e90b_add_indent(jule::Ptr<_1a8615281_ObjectCoder> _self_) {
	;
	_self_.get()._field_indent_buffer+=jule::Str("\t", 1);
}



inline void _1a86200e3_done_indent(jule::Ptr<_1a8615281_ObjectCoder> _self_) {
	_self_.get()._field_indent_buffer=_self_.get()._field_indent_buffer.slice(0LL,(_self_.get()._field_indent_buffer.len() - 1LL));
}



inline void _1a862080d_indent(jule::Ptr<_1a8615281_ObjectCoder> _self_) {
	_self_.get()._field_obj+=_self_.get()._field_indent_buffer;
}



inline jule::I64 _1a8621028_find_type_offset(_1a8615281_ObjectCoder* _self_, jule::Ptr<_1a68d46b7_Trait> _10231_t, jule::Ptr<_1a77278d3_TypeKind> _10246_k) {
	if ((_10231_t.get()._field_implemented.len() == 0LL)) {
		return 0LL;
	};
	jule::Ptr<_1a6836a48_StructIns> _10617_s = nullptr;;
	if ((_1a7729c04_sptr(_10246_k.ptr()) != nullptr)) {
		_10246_k=_1a7729c04_sptr(_10246_k.ptr()).get()._field_elem;
	};
	if ((_1a772ab7d_strct(_10246_k.ptr()) == nullptr)) {
		return -1LL;
	};
	_10617_s=_1a772ab7d_strct(_10246_k.ptr());
	{
		auto &expr = (*_self_)._field_tmap;
		auto it = expr.begin();
		_iter_begin_1aabe5b28:;
		if (it != expr.end()) {
			jule::Ptr<_1a8615094_TraitHash> &_11416_hash = *it;
			{
				if (((_11416_hash.get()._field_t == _10231_t) && (_11416_hash.get()._field_s == _10617_s))) {
					return _11416_hash.get()._field_i;
				};
			}
			_iter_next_1aabe5b28:;
			++it;
			goto _iter_begin_1aabe5b28;
		}
		_iter_end_1aabe5b28:;
	};
	return -1LL;
}



inline void _1a8622568_loc_info(jule::Ptr<_1a8615281_ObjectCoder> _self_, jule::Ptr<_1a527737a_Token>& _12329_t) {
	jule::Str &_12414_loc = _12329_t.get()._field_file.get()._field_path;;
	if (_1e0ca2c16_PRODUCTION) {
		{
			
			if (_1a4221d2b_has_prefix(_12414_loc,_1a43483c5_PATH_STDLIB)) {
				_case_begin_1aabe8312:;
				{
					_1a861e169_write(_self_, _1a85d32a4_cstr_bytes(static_cast<jule::Slice<jule::U8>>(_12414_loc.slice((_1a429b427_dir(_1a43483c5_PATH_STDLIB).len() + 1LL)))));
				}
			}
			else if (_1a4221d2b_has_prefix(_12414_loc,_self_.get()._field_ir.get()._field_root)) {
				_case_begin_1aabe7b5d:;
				{
					_1a861e169_write(_self_, _1a85d32a4_cstr_bytes(static_cast<jule::Slice<jule::U8>>(_12414_loc.slice((_1a429b427_dir(_self_.get()._field_ir.get()._field_root).len() + 1LL)))));
				}
			}
			else {
				_case_begin_1aabe77d9:;
				{
					_1a861e169_write(_self_, _1a85d32a4_cstr_bytes(static_cast<jule::Slice<jule::U8>>(_12414_loc)));
				}
			}
			_match_end_1aabe771d:;
		};
	} else {
		_1a861e169_write(_self_, _1a85d32a4_cstr_bytes(static_cast<jule::Slice<jule::U8>>(_12414_loc)));
	};
	_1a861e169_write(_self_, jule::Str(":", 1));
	_1a861e169_write(_self_, _1a7538cee_itoa(_12329_t.get()._field_row));
	_1a861e169_write(_self_, jule::Str(":", 1));
	_1a861e169_write(_self_, _1a7538cee_itoa(_12329_t.get()._field_column));
}



inline void _1a862239d_head(jule::Ptr<_1a8615281_ObjectCoder> _self_) {
	_1a864d022_Time _15013_time = static__1a864d5b6_now();;
	_1a864c84b_AbsTime _15113_abs = _1a864ec05_abs(&_15013_time);;
	_1a861e169_write(_self_, jule::Str("// Auto generated by JuleC.\n", 28));
	_1a861e169_write(_self_, jule::Str("// JuleC version: ", 18));
	_1a861e169_write(_self_, jule::Str("jule0.0.11 @master", 18));
	_1a861e169_write(_self_, jule::Str("\n", 1));
	_1a861e169_write(_self_, jule::Str("// Date: ", 9));
	_1a861e169_write(_self_, _1a7538a8a_fmt_uint(_15113_abs._field_day,10LL));
	_1a861e169_write(_self_, jule::Str("/", 1));
	_1a861e169_write(_self_, _1a7538a8a_fmt_uint(_15113_abs._field_month,10LL));
	_1a861e169_write(_self_, jule::Str("/", 1));
	_1a861e169_write(_self_, _1a7538a8a_fmt_uint(_15113_abs._field_year,10LL));
	_1a861e169_write(_self_, jule::Str(" (DD/MM/YYYY) UTC\n//\n// Recomended Compile Command;\n// ", 55));
	_1a861e169_write(_self_, _self_.get()._field_info._field_compiler);
	_1a861e169_write(_self_, jule::Str(" ", 1));
	_1a861e169_write(_self_, _self_.get()._field_info._field_compiler_command);
	_1a861e169_write(_self_, jule::Str("\n\n", 2));
	if (_1e0ca2c16_PRODUCTION) {
		_1a861e169_write(_self_, jule::Str("#define __JULE_ENABLE__PRODUCTION\n", 34));
	};
	if ((!(_1e0ca26c7_RC))) {
		_1a861e169_write(_self_, jule::Str("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43));
	};
	if ((!(_1e0ca29b3_SAFETY))) {
		_1a861e169_write(_self_, jule::Str("#define __JULE_DISABLE__SAFETY\n", 31));
	};
	_1a861e169_write(_self_, jule::Str("\n\n#include \"", 12));
	_1a861e169_write(_self_, _1a43815a6_PATH_API);
	_1a861e169_write(_self_, jule::Str("\"\n\n", 3));
}



inline void _1a8617041_links(jule::Ptr<_1a8615281_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1aac06166:;
		if (it != expr.end()) {
			jule::Ptr<_1a7685038_ImportInfo> _18316_used = *it;
			{
				{
					
					if ((!(_18316_used.get()._field_cpp_linked))) {
						_case_begin_1aac06dd1:;
						{
							goto _iter_next_1aac06166;
						}
					}
					else if (_1a4327e54_is_std_header_path(_18316_used.get()._field_path)) {
						_case_begin_1aac06ac3:;
						{
							_1a861e169_write(_self_, jule::Str("#include ", 9));
							_1a861e169_write(_self_, _18316_used.get()._field_path);
							_1a861e169_write(_self_, jule::Str("\n", 1));
						}
					}
					else {
						_case_begin_1aac06a5c:;
						{
							_1a861e169_write(_self_, jule::Str("#include \"", 10));
							_1a861e169_write(_self_, _18316_used.get()._field_path);
							_1a861e169_write(_self_, jule::Str("\"\n", 2));
						}
					}
					_match_end_1aac06991:;
				};
			}
			_iter_next_1aac06166:;
			++it;
			goto _iter_begin_1aac06166;
		}
		_iter_end_1aac06166:;
	};
}



inline void _1a8637b55_prepare_structures(jule::Ptr<_1a8615281_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_ordered._field_structs;
		auto it = expr.begin();
		_iter_begin_1aac0981d:;
		if (it != expr.end()) {
			jule::Ptr<_1a6826829_Struct> _20021_s = *it;
			{
				if ((_20021_s.get()._field_token != nullptr)) {
					_1a86576be_prepare_structure(_20021_s);
				};
			}
			_iter_next_1aac0981d:;
			++it;
			goto _iter_begin_1aac0981d;
		}
		_iter_end_1aac0981d:;
	};
}



inline void _1a86532ad_iter_packages(jule::Ptr<_1a8615281_ObjectCoder> _self_, jule::Fn<void(jule::Ptr<_1a7687bea_Package>&)> _20733_f) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1aac0b666:;
		if (it != expr.end()) {
			jule::Ptr<_1a7685038_ImportInfo> _20821_used = *it;
			{
				if ((!(_20821_used.get()._field_cpp_linked))) {
					_20733_f(_20821_used.get()._field_package);
				};
			}
			_iter_next_1aac0b666:;
			++it;
			goto _iter_begin_1aac0b666;
		}
		_iter_end_1aac0b666:;
	};
	_20733_f(_self_.get()._field_ir.get()._field_main);
}



inline void _1a86533e0_build_trait_map(jule::Ptr<_1a8615281_ObjectCoder> _self_) {
	_1a86532ad_iter_packages(_self_, jule::Fn<void(jule::Ptr<_1a7687bea_Package>&)>([=](jule::Ptr<_1a7687bea_Package>& _21736_pkg) mutable -> void {
		_1a865746b_iter_files(_21736_pkg,jule::Fn<void(jule::Ptr<_1a76e8e26_SymbolTable>&)>([=](jule::Ptr<_1a76e8e26_SymbolTable>& _21837_file) mutable -> void {
			{
				auto &expr = _21837_file.get()._field_traits;
				auto it = expr.begin();
				_iter_begin_1aac0ed95:;
				if (it != expr.end()) {
					jule::Ptr<_1a68d46b7_Trait> _21929_t = *it;
					{
						if ((_21929_t.get()._field_token == nullptr)) {
							return;;
						};
						if ((_21929_t.get()._field_implemented.len() == 0LL)) {
							_self_.get()._field_tmap = jule::alloc_for_append(_self_.get()._field_tmap,1);_self_.get()._field_tmap.__push(jule::new_ptr<_1a8615094_TraitHash>(_1a8615094_TraitHash{._field_t=_21929_t, ._field_s=nullptr, ._field_i=0LL}));;
							goto _iter_next_1aac0ed95;
						};
						jule::I64 _23129_i = 0LL;;
						{
							auto &expr = _21929_t.get()._field_implemented;
							auto it = expr.begin();
							_iter_begin_1aac11e0d:;
							if (it != expr.end()) {
								jule::Ptr<_1a6826829_Struct> _23233_s = *it;
								{
									{
										auto &expr = _23233_s.get()._field_instances;
										auto it = expr.begin();
										_iter_begin_1aac12491:;
										if (it != expr.end()) {
											jule::Ptr<_1a6836a48_StructIns> _23337_ins = *it;
											{
												_self_.get()._field_tmap = jule::alloc_for_append(_self_.get()._field_tmap,1);_self_.get()._field_tmap.__push(jule::new_ptr<_1a8615094_TraitHash>(_1a8615094_TraitHash{._field_t=_21929_t, ._field_s=_23337_ins, ._field_i=_23129_i}));;
												(_23129_i)++;
											}
											_iter_next_1aac12491:;
											++it;
											goto _iter_begin_1aac12491;
										}
										_iter_end_1aac12491:;
									};
								}
								_iter_next_1aac11e0d:;
								++it;
								goto _iter_begin_1aac11e0d;
							}
							_iter_end_1aac11e0d:;
						};
					}
					_iter_next_1aac0ed95:;
					++it;
					goto _iter_begin_1aac0ed95;
				}
				_iter_end_1aac0ed95:;
			};
		}));
	}));
}



inline void _1a8653522_trait_decls(jule::Ptr<_1a8615281_ObjectCoder> _self_) {
	_1a86532ad_iter_packages(_self_, jule::Fn<void(jule::Ptr<_1a7687bea_Package>&)>([=](jule::Ptr<_1a7687bea_Package>& _24836_pkg) mutable -> void {
		_1a865746b_iter_files(_24836_pkg,jule::Fn<void(jule::Ptr<_1a76e8e26_SymbolTable>&)>([=](jule::Ptr<_1a76e8e26_SymbolTable>& _24937_file) mutable -> void {
			{
				auto &expr = _24937_file.get()._field_traits;
				auto it = expr.begin();
				_iter_begin_1aac14c68:;
				if (it != expr.end()) {
					jule::Ptr<_1a68d46b7_Trait> _25029_t = *it;
					{
						if ((_25029_t.get()._field_token == nullptr)) {
							return;;
						};
						_1a862080d_indent(_self_);
						_1a861e169_write(_self_, jule::Str("struct ", 7));
						_1a861e169_write(_self_, static__1a85d9b29_trait_decl(_25029_t));
						_1a861e169_write(_self_, jule::Str("{};\n", 4));
					}
					_iter_next_1aac14c68:;
					++it;
					goto _iter_begin_1aac14c68;
				}
				_iter_end_1aac14c68:;
			};
		}));
	}));
}



inline void _1a8653654_structure_plain_decl(jule::Ptr<_1a8615281_ObjectCoder> _self_, jule::Ptr<_1a6826829_Struct>& _26345_s) {
	{
		auto &expr = _26345_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1aac1709a:;
		if (it != expr.end()) {
			jule::Ptr<_1a6836a48_StructIns> _26421_ins = *it;
			{
				_1a861e169_write(_self_, jule::Str("struct ", 7));
				_1a861e169_write(_self_, static__1a85da410_structure_ins(_26421_ins));
				_1a861e169_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1aac1709a:;
			++it;
			goto _iter_begin_1aac1709a;
		}
		_iter_end_1aac1709a:;
	};
}



inline void _1a8653786_structure_plain_decls(jule::Ptr<_1a8615281_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_ordered._field_structs;
		auto it = expr.begin();
		_iter_begin_1aac1dc2d:;
		if (it != expr.end()) {
			jule::Ptr<_1a6826829_Struct> _27221_s = *it;
			{
				if ((_27221_s.get()._field_token != nullptr)) {
					_1a8653654_structure_plain_decl(_self_, _27221_s);
				};
			}
			_iter_next_1aac1dc2d:;
			++it;
			goto _iter_begin_1aac1dc2d;
		}
		_iter_end_1aac1dc2d:;
	};
}



inline void _1a86538b8_field_decl(jule::Ptr<_1a8615281_ObjectCoder> _self_, jule::Ptr<_1a6830899_FieldIns>& _27935_f) {
	_1a861e169_write(_self_, static__1a865d4d8_kind(_27935_f.get()._field_kind));
	_1a861e169_write(_self_, jule::Str(" ", 1));
	_1a861e169_write(_self_, static__1a85da6a7_field(_27935_f.get()._field_decl));
	_1a861e169_write(_self_, jule::Str(" = ", 3));
	if ((_27935_f.get()._field_default == nullptr)) {
		_1a85d28be_init_expr(_self_.get()._field_ec, _27935_f.get()._field_kind);
	} else {
		_1a85d23c4_expr(_self_.get()._field_ec, jule::Any(_27935_f.get()._field_default.get()._field_model));
	};
	_1a861e169_write(_self_, jule::Str(";", 1));
}



inline void _1a86539ea_structure_destructor(jule::Ptr<_1a8615281_ObjectCoder> _self_, jule::Ptr<_1a6836a48_StructIns>& _29445_s) {
	;
	jule::Ptr<_1a68709c7_Fn> _29613_dispose_method = _1a6846bbd_find_method(_29445_s.ptr(), jule::Str("dispose", 7),false);;
	jule::Bool _29717_disposed = static__1a76a8897_dispose(_29613_dispose_method);;
	if ((!(_29717_disposed))) {
		return;;
	};
	_1a861e169_write(_self_, jule::Str("~", 1));
	_1a861e169_write(_self_, static__1a85da410_structure_ins(_29445_s));
	_1a861e169_write(_self_, jule::Str("(void) { ", 9));
	_1a861e169_write(_self_, static__1a85d95da_func(_29613_dispose_method));
	_1a861e169_write(_self_, jule::Str("(this); }", 9));
}



inline void _1a8653b2c_structure_derive_defs_decls(jule::Ptr<_1a8615281_ObjectCoder> _self_, jule::Ptr<_1a6836a48_StructIns>& _30948_s) {
	if (_1a68312c3_is_derives(_30948_s.get()._field_decl.ptr(), jule::Str("Clone", 5))) {
		_1a862080d_indent(_self_);
		_1a861e169_write(_self_, static__1a85d4e54_clone_func_decl(_30948_s.get()._field_decl));
		_1a861e169_write(_self_, jule::Str(";\n\n", 3));
	};
}



inline void _1a8653c5e_structure_operator_eq(jule::Ptr<_1a8615281_ObjectCoder> _self_, jule::Str& _31742_ident, jule::Ptr<_1a6836a48_StructIns>& _31759_s) {
	if ((_31759_s.get()._field_operators._field_eq != nullptr)) {
		_1a8653ec3_structure_operator(_self_, _31742_ident,_31759_s.get()._field_operators._field_eq,jule::Str("==", 2));
		return;;
	};
	_1a862080d_indent(_self_);
	if (_1a532149b_INLINE) {
		_1a861e169_write(_self_, jule::Str("inline ", 7));
	};
	_1a861e169_write(_self_, jule::Str("bool operator==(", 16));
	_1a861e169_write(_self_, _31742_ident);
	_1a861e169_write(_self_, jule::Str(" _other) {", 10));
	if ((_31759_s.get()._field_fields.len() > 0LL)) {
		_1a861e90b_add_indent(_self_);
		_1a861e169_write(_self_, jule::Str("\n", 1));
		_1a862080d_indent(_self_);
		_1a861e169_write(_self_, jule::Str("return ", 7));
		_1a861e90b_add_indent(_self_);
		jule::Bool _33721_writed = false;;
		{
			auto &expr = _31759_s.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_1aac2e6bc:;
			if (it != expr.end()) {
				jule::Ptr<_1a6830899_FieldIns> _33825_f = *it;
				{
					jule::Ptr<_1a6836a48_StructIns> _34021_strct = _1a772ab7d_strct(_33825_f.get()._field_kind.ptr());;
					if ((((_34021_strct != nullptr) && (_34021_strct.get()._field_decl != nullptr)) && _34021_strct.get()._field_decl.get()._field_cpp_linked)) {
						goto _iter_next_1aac2e6bc;
					};
					if (_33721_writed) {
						_1a861e169_write(_self_, jule::Str(" &&", 3));
					};
					_33721_writed=true;
					_1a861e169_write(_self_, jule::Str("\n", 1));
					_1a862080d_indent(_self_);
					_1a861e169_write(_self_, jule::Str("this->", 6));
					jule::Str _35221_f_ident = static__1a85da6a7_field(_33825_f.get()._field_decl);;
					_1a861e169_write(_self_, _35221_f_ident);
					_1a861e169_write(_self_, jule::Str(" == _other.", 11));
					_1a861e169_write(_self_, _35221_f_ident);
				}
				_iter_next_1aac2e6bc:;
				++it;
				goto _iter_begin_1aac2e6bc;
			}
			_iter_end_1aac2e6bc:;
		};
		_1a86200e3_done_indent(_self_);
		if ((!(_33721_writed))) {
			_1a861e169_write(_self_, jule::Str("true", 4));
		};
		_1a861e169_write(_self_, jule::Str(";\n", 2));
		_1a86200e3_done_indent(_self_);
		_1a862080d_indent(_self_);
		_1a861e169_write(_self_, jule::Str("}", 1));
	} else {
		_1a861e169_write(_self_, jule::Str(" return true; }", 15));
	};
	_1a861e169_write(_self_, jule::Str("\n\n", 2));
}



inline void _1a8653d91_structure_operator_not_eq(jule::Ptr<_1a8615281_ObjectCoder> _self_, jule::Str& _37146_ident, jule::Ptr<_1a6836a48_StructIns>& _37163_s) {
	_1a862080d_indent(_self_);
	if (_1a532149b_INLINE) {
		_1a861e169_write(_self_, jule::Str("inline ", 7));
	};
	_1a861e169_write(_self_, jule::Str("bool operator!=(", 16));
	_1a861e169_write(_self_, _37146_ident);
	_1a861e169_write(_self_, jule::Str(" _other) { return !this->operator==(_other); }\n\n", 48));
}



inline void _1a8653ec3_structure_operator(jule::Ptr<_1a8615281_ObjectCoder> _self_, jule::Str& _38239_ident, jule::Ptr<_1a6872c93_FnIns>& _38256_f, jule::Str _38267_op) {
	if ((_38256_f == nullptr)) {
		return;;
	};
	jule::Bool _38713_unary = (_38256_f.get()._field_params.len() == 1LL);;
	jule::Bool _38813_assignment = _1a6847eee_is_void(_38256_f.get()._field_decl.ptr());;
	_1a862080d_indent(_self_);
	if (_1a532149b_INLINE) {
		_1a861e169_write(_self_, jule::Str("inline ", 7));
	};
	if (_38813_assignment) {
		_1a861e169_write(_self_, _38239_ident);
		_1a861e169_write(_self_, jule::Str("&", 1));
	} else {
		if ((_1a7729990_prim(_38256_f.get()._field_result.ptr()) == nullptr)) {
			_1a861e169_write(_self_, _38239_ident);
		} else {
			_1a861e169_write(_self_, jule::Str("jule::Bool", 10));
		};
	};
	_1a861e169_write(_self_, jule::Str(" operator", 9));
	_1a861e169_write(_self_, _38267_op);
	_1a861e169_write(_self_, jule::Str("(", 1));
	if ((!(_38713_unary))) {
		jule::Ptr<_1a6871e07_ParamIns> _41021_p = _38256_f.get()._field_params[1LL];;
		_1a861e169_write(_self_, static__1a865c6b3_param_ins(_41021_p));
		_1a861e169_write(_self_, jule::Str(" _other", 7));
	};
	_1a861e169_write(_self_, jule::Str(") { ", 4));
	if ((!(_38813_assignment))) {
		_1a861e169_write(_self_, jule::Str("return ", 7));
	};
	_1a861e169_write(_self_, static__1a85d9882_func_ins(_38256_f));
	if ((!(_38713_unary))) {
		_1a861e169_write(_self_, jule::Str("(this, _other); ", 16));
		if (_38813_assignment) {
			_1a861e169_write(_self_, jule::Str("return *this; ", 14));
		};
		_1a861e169_write(_self_, jule::Str("}", 1));
	} else {
		_1a861e169_write(_self_, jule::Str("(this); }", 9));
	};
	_1a861e169_write(_self_, jule::Str("\n\n", 2));
}



inline void _1a8654105_structure_operators(jule::Ptr<_1a8615281_ObjectCoder> _self_, jule::Ptr<_1a6836a48_StructIns>& _43144_s) {
	jule::Str _43213_ident = static__1a85da410_structure_ins(_43144_s);;
	_1a8653c5e_structure_operator_eq(_self_, _43213_ident,_43144_s);
	_1a8653d91_structure_operator_not_eq(_self_, _43213_ident,_43144_s);
	_1a8653ec3_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_gt,jule::Str(">", 1));
	_1a8653ec3_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_gt_eq,jule::Str(">=", 2));
	_1a8653ec3_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_lt,jule::Str("<", 1));
	_1a8653ec3_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_lt_eq,jule::Str("<=", 2));
	_1a8653ec3_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_shl,jule::Str("<<", 2));
	_1a8653ec3_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_shr,jule::Str(">>", 2));
	_1a8653ec3_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_add,jule::Str("+", 1));
	_1a8653ec3_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_sub,jule::Str("-", 1));
	_1a8653ec3_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_div,jule::Str("/", 1));
	_1a8653ec3_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_mul,jule::Str("*", 1));
	_1a8653ec3_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_mod,jule::Str("%", 1));
	_1a8653ec3_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_bit_and,jule::Str("&", 1));
	_1a8653ec3_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_bit_or,jule::Str("|", 1));
	_1a8653ec3_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_bit_xor,jule::Str("^", 1));
	_1a8653ec3_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_neg,jule::Str("-", 1));
	_1a8653ec3_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_pos,jule::Str("+", 1));
	_1a8653ec3_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_bit_not,jule::Str("~", 1));
	_1a8653ec3_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_add_assign,jule::Str("+=", 2));
	_1a8653ec3_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_sub_assign,jule::Str("-=", 2));
	_1a8653ec3_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_div_assign,jule::Str("/=", 2));
	_1a8653ec3_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_mul_assign,jule::Str("*=", 2));
	_1a8653ec3_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_mod_assign,jule::Str("%=", 2));
	_1a8653ec3_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_shl_assign,jule::Str("<<=", 3));
	_1a8653ec3_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_shr_assign,jule::Str(">>=", 3));
	_1a8653ec3_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_bit_or_assign,jule::Str("|=", 2));
	_1a8653ec3_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_bit_and_assign,jule::Str("&=", 2));
	_1a8653ec3_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_bit_xor_assign,jule::Str("^=", 2));
}



inline void _1a8654237_structure_ins_decl(jule::Ptr<_1a8615281_ObjectCoder> _self_, jule::Ptr<_1a6836a48_StructIns>& _47043_s) {
	if ((_47043_s.get()._field_methods.len() > 0LL)) {
		{
			auto &expr = _47043_s.get()._field_methods;
			auto it = expr.begin();
			_iter_begin_1aac53081:;
			if (it != expr.end()) {
				jule::Ptr<_1a68709c7_Fn> _47225_m = *it;
				{
					_1a8654842_func_decl(_self_, _47225_m,false);
				}
				_iter_next_1aac53081:;
				++it;
				goto _iter_begin_1aac53081;
			}
			_iter_end_1aac53081:;
		};
	};
	_1a861e169_write(_self_, jule::Str("struct ", 7));
	jule::Str _47813_out_ident = static__1a85da410_structure_ins(_47043_s);;
	_1a861e169_write(_self_, _47813_out_ident);
	_1a861e169_write(_self_, jule::Str(" {\n", 3));
	_1a861e90b_add_indent(_self_);
	{
		auto &expr = _47043_s.get()._field_fields;
		auto it = expr.begin();
		_iter_begin_1aac55913:;
		if (it != expr.end()) {
			jule::Ptr<_1a6830899_FieldIns> _48421_f = *it;
			{
				_1a862080d_indent(_self_);
				_1a86538b8_field_decl(_self_, _48421_f);
				_1a861e169_write(_self_, jule::Str("\n", 1));
			}
			_iter_next_1aac55913:;
			++it;
			goto _iter_begin_1aac55913;
		}
		_iter_end_1aac55913:;
	};
	_1a862080d_indent(_self_);
	_1a86539ea_structure_destructor(_self_, _47043_s);
	_1a861e169_write(_self_, jule::Str("\n\n", 2));
	_1a862080d_indent(_self_);
	_1a861e169_write(_self_, _47813_out_ident);
	_1a861e169_write(_self_, jule::Str("(void) = default;\n\n", 19));
	_1a8653b2c_structure_derive_defs_decls(_self_, _47043_s);
	_1a8654105_structure_operators(_self_, _47043_s);
	_1a861e169_write(_self_, jule::Str("\n", 1));
	_1a86200e3_done_indent(_self_);
	_1a862080d_indent(_self_);
	_1a861e169_write(_self_, jule::Str("};", 2));
}



inline void _1a8654369_structure_decl(jule::Ptr<_1a8615281_ObjectCoder> _self_, jule::Ptr<_1a6826829_Struct>& _50939_s) {
	{
		auto &expr = _50939_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1aac5a572:;
		if (it != expr.end()) {
			jule::Ptr<_1a6836a48_StructIns> _51021_ins = *it;
			{
				_1a8654237_structure_ins_decl(_self_, _51021_ins);
			}
			_iter_next_1aac5a572:;
			++it;
			goto _iter_begin_1aac5a572;
		}
		_iter_end_1aac5a572:;
	};
}



inline void _1a865449b_structure_decls(jule::Ptr<_1a8615281_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_ordered._field_structs;
		auto it = expr.begin();
		_iter_begin_1aac5b7c6:;
		if (it != expr.end()) {
			jule::Ptr<_1a6826829_Struct> _51621_s = *it;
			{
				if ((_51621_s.get()._field_token != nullptr)) {
					_1a8654369_structure_decl(_self_, _51621_s);
					_1a861e169_write(_self_, jule::Str("\n", 1));
				};
			}
			_iter_next_1aac5b7c6:;
			++it;
			goto _iter_begin_1aac5b7c6;
		}
		_iter_end_1aac5b7c6:;
	};
}



inline void _1a86545cd_params_decls(jule::Ptr<_1a8615281_ObjectCoder> _self_, jule::Slice<jule::Ptr<_1a6871e07_ParamIns>>& _52437_params) {
	if ((_52437_params.len() == 0LL)) {
		_1a861e169_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_1a861e169_write(_self_, jule::Str("(", 1));
	{
		auto &expr = _52437_params;
		auto it = expr.begin();
		_iter_begin_1aac5e015:;
		if (it != expr.end()) {
			jule::I64 _53114_i = it - expr.begin();
			jule::Ptr<_1a6871e07_ParamIns> _53121_p = *it;
			{
				_1a861e169_write(_self_, static__1a865c6b3_param_ins(_53121_p));
				if (((_52437_params.len() - _53114_i) > 1LL)) {
					_1a861e169_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_1aac5e015:;
			++it;
			_53114_i++;
			goto _iter_begin_1aac5e015;
		}
		_iter_end_1aac5e015:;
	};
	_1a861e169_write(_self_, jule::Str(")", 1));
}



inline void _1a8654710_func_head(jule::Ptr<_1a8615281_ObjectCoder> _self_, jule::Ptr<_1a6872c93_FnIns>& _54134_f, jule::Bool _54145_ptr) {
	if ((((!(_54145_ptr)) && _1a532149b_INLINE) && (!(_1a6844209_is_entry_point(_54134_f.get()._field_decl.ptr()))))) {
		_1a861e169_write(_self_, jule::Str("inline ", 7));
	};
	_1a861e169_write(_self_, static__1a865cc02_func_ins_result(_54134_f));
	if (_54145_ptr) {
		_1a861e169_write(_self_, jule::Str("(*", 2));
		_1a861e169_write(_self_, static__1a85d9882_func_ins(_54134_f));
		_1a861e169_write(_self_, jule::Str(")", 1));
	} else {
		_1a861e169_write(_self_, jule::Str(" ", 1));
		_1a861e169_write(_self_, static__1a85d9882_func_ins(_54134_f));
	};
}



inline void _1a8654842_func_decl(jule::Ptr<_1a8615281_ObjectCoder> _self_, jule::Ptr<_1a68709c7_Fn>& _55634_f, jule::Bool _55642_ptr) {
	{
		auto &expr = _55634_f.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1aac6557c:;
		if (it != expr.end()) {
			jule::Ptr<_1a6872c93_FnIns> _55721_c = *it;
			{
				_1a862080d_indent(_self_);
				_1a8654710_func_head(_self_, _55721_c,_55642_ptr);
				_1a86545cd_params_decls(_self_, _55721_c.get()._field_params);
				_1a861e169_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1aac6557c:;
			++it;
			goto _iter_begin_1aac6557c;
		}
		_iter_end_1aac6557c:;
	};
}



inline void _1a8654974_func_decls(jule::Ptr<_1a8615281_ObjectCoder> _self_) {
	_1a86532ad_iter_packages(_self_, jule::Fn<void(jule::Ptr<_1a7687bea_Package>&)>([=](jule::Ptr<_1a7687bea_Package>& _56636_pkg) mutable -> void {
		_1a865746b_iter_files(_56636_pkg,jule::Fn<void(jule::Ptr<_1a76e8e26_SymbolTable>&)>([=](jule::Ptr<_1a76e8e26_SymbolTable>& _56737_file) mutable -> void {
			{
				auto &expr = _56737_file.get()._field_funcs;
				auto it = expr.begin();
				_iter_begin_1aac690ec:;
				if (it != expr.end()) {
					jule::Ptr<_1a68709c7_Fn> _56829_f = *it;
					{
						if (((!(_56829_f.get()._field_cpp_linked)) && (_56829_f.get()._field_token != nullptr))) {
							_1a8654842_func_decl(_self_, _56829_f,false);
						};
					}
					_iter_next_1aac690ec:;
					++it;
					goto _iter_begin_1aac690ec;
				}
				_iter_end_1aac690ec:;
			};
		}));
	}));
}



inline void _1a8654aa6_trait_data_types(jule::Ptr<_1a8615281_ObjectCoder> _self_) {
	_1a86532ad_iter_packages(_self_, jule::Fn<void(jule::Ptr<_1a7687bea_Package>&)>([=](jule::Ptr<_1a7687bea_Package>& _57836_pkg) mutable -> void {
		_1a865746b_iter_files(_57836_pkg,jule::Fn<void(jule::Ptr<_1a76e8e26_SymbolTable>&)>([=](jule::Ptr<_1a76e8e26_SymbolTable>& _57937_file) mutable -> void {
			{
				auto &expr = _57937_file.get()._field_traits;
				auto it = expr.begin();
				_iter_begin_1aac6c441:;
				if (it != expr.end()) {
					jule::Ptr<_1a68d46b7_Trait> _58029_t = *it;
					{
						if ((_58029_t.get()._field_token == nullptr)) {
							return;;
						};
						_1a861e169_write(_self_, jule::Str("struct ", 7));
						_1a861e169_write(_self_, static__1a85d9b29_trait_decl(_58029_t));
						_1a861e169_write(_self_, jule::Str("MptrData", 8));
						_1a861e169_write(_self_, jule::Str(" {\n", 3));
						_1a861e90b_add_indent(_self_);
						{
							auto &expr = _58029_t.get()._field_methods;
							auto it = expr.begin();
							_iter_begin_1aac6e883:;
							if (it != expr.end()) {
								jule::Ptr<_1a68709c7_Fn> _58933_m = *it;
								{
									jule::Ptr<_1a6872c93_FnIns> _59033_ins = _58933_m.get()._field_instances[0LL];;
									jule::Ptr<_1a6871e07_ParamIns> _59133_p = _59033_ins.get()._field_params[0LL];;
									_59133_p.get()._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_58029_t, 2)});
									{
										auto expr = _59033_ins.get()._field_params.slice(1LL);
										auto it = expr.begin();
										_iter_begin_1aac714cd:;
										if (it != expr.end()) {
											jule::I64 _59530_i = it - expr.begin();
											jule::Ptr<_1a6871e07_ParamIns> _59537_ip = *it;
											{
												if (_1a5279d72_is_anon_ident(_59537_ip.get()._field_decl.get()._field_ident)) {
													_59537_ip.get()._field_decl.get()._field_ident=(jule::Str("_", 1) + _1a7538cee_itoa(_59530_i));
												};
											}
											_iter_next_1aac714cd:;
											++it;
											_59530_i++;
											goto _iter_begin_1aac714cd;
										}
										_iter_end_1aac714cd:;
									};
									if ((!(_1e0ca2c16_PRODUCTION))) {
										_59033_ins.get()._field_params = jule::alloc_for_append(_59033_ins.get()._field_params,1);_59033_ins.get()._field_params.__push(jule::new_ptr<_1a6871e07_ParamIns>(_1a6871e07_ParamIns{._field_decl=jule::new_ptr<_1a68707da_Param>(_1a68707da_Param{._field_ident=jule::Str("__file", 6)}), ._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(jule::new_ptr<_1a86588bd_CustomType>(_1a86588bd_CustomType{._field_kind=jule::Str("const char*", 11)}), 12)})}));;
									};
									_1a8654842_func_decl(_self_, _58933_m,true);
								}
								_iter_next_1aac6e883:;
								++it;
								goto _iter_begin_1aac6e883;
							}
							_iter_end_1aac6e883:;
						};
						_1a86200e3_done_indent(_self_);
						_1a862080d_indent(_self_);
						_1a861e169_write(_self_, jule::Str("};\n\n", 4));
					}
					_iter_next_1aac6c441:;
					++it;
					goto _iter_begin_1aac6c441;
				}
				_iter_end_1aac6c441:;
			};
		}));
	}));
}



inline void _1a8654bd8_param_ins(jule::Ptr<_1a8615281_ObjectCoder> _self_, jule::Ptr<_1a6871e07_ParamIns>& _62234_p) {
	_1a861e169_write(_self_, static__1a865c6b3_param_ins(_62234_p));
	_1a861e169_write(_self_, jule::Str(" ", 1));
	_1a861e169_write(_self_, static__1a85d9dc1_param(_62234_p.get()._field_decl));
}



inline void _1a8654d1a_params_ins(jule::Ptr<_1a8615281_ObjectCoder> _self_, jule::Slice<jule::Ptr<_1a6871e07_ParamIns>>& _62835_params) {
	if ((_62835_params.len() == 0LL)) {
		_1a861e169_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_1a861e169_write(_self_, jule::Str("(", 1));
	{
		auto &expr = _62835_params;
		auto it = expr.begin();
		_iter_begin_1aac76956:;
		if (it != expr.end()) {
			jule::I64 _63414_i = it - expr.begin();
			jule::Ptr<_1a6871e07_ParamIns> _63421_p = *it;
			{
				_1a8654bd8_param_ins(_self_, _63421_p);
				if (((_62835_params.len() - _63414_i) > 1LL)) {
					_1a861e169_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_1aac76956:;
			++it;
			_63414_i++;
			goto _iter_begin_1aac76956;
		}
		_iter_end_1aac76956:;
	};
	_1a861e169_write(_self_, jule::Str(")", 1));
}



inline void _1a8654e4c_var_init_expr(jule::Ptr<_1a8615281_ObjectCoder> _self_, jule::Ptr<_1a76a7720_Var>& _64338_v, jule::Fn<void(void)> _64347_init) {
	if (_64338_v.get()._field_statically) {
		_1a861e169_write(_self_, jule::Str("static ", 7));
	};
	_1a861e169_write(_self_, static__1a865d4d8_kind(_64338_v.get()._field_kind.get()._field_kind));
	_1a861e169_write(_self_, jule::Str(" ", 1));
	if (_64338_v.get()._field_reference) {
		_1a861e169_write(_self_, jule::Str("&", 1));
	};
	_1a861e169_write(_self_, static__1a85da94e_var(_64338_v));
	if ((_64347_init != nullptr)) {
		_1a861e169_write(_self_, jule::Str(" = ", 3));
		_64347_init();
	};
	_1a861e169_write(_self_, jule::Str(";", 1));
}



inline void _1a865507e_var(jule::Ptr<_1a8615281_ObjectCoder> _self_, jule::Ptr<_1a76a7720_Var> _66127_v) {
	if (_1a5279aca_is_ignore_ident(_66127_v.get()._field_ident)) {
		return;;
	};
	if (((_66127_v.get()._field_value != nullptr) && (_66127_v.get()._field_value.get()._field_expr != nullptr))) {
		if ((_66127_v.get()._field_value.get()._field_data.get()._field_model != nullptr)) {
			_1a8654e4c_var_init_expr(_self_, _66127_v,jule::Fn<void(void)>([=](void) mutable -> void {
				_1a85d2649_val(_self_.get()._field_ec, _66127_v.get()._field_value);
			}));
			return;;
		};
		_1a8654e4c_var_init_expr(_self_, _66127_v,nullptr);
		return;;
	};
	_1a8654e4c_var_init_expr(_self_, _66127_v,jule::Fn<void(void)>([=](void) mutable -> void {
		_1a85d28be_init_expr(_self_.get()._field_ec, _66127_v.get()._field_kind.get()._field_kind);
	}));
}



inline void _1a86551b1_func(jule::Ptr<_1a8615281_ObjectCoder> _self_, jule::Ptr<_1a68709c7_Fn>& _67629_f) {
	{
		auto &expr = _67629_f.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1aac81ab5:;
		if (it != expr.end()) {
			jule::Ptr<_1a6872c93_FnIns> _67721_ins = *it;
			{
				_1a8654710_func_head(_self_, _67721_ins,false);
				_1a8654d1a_params_ins(_self_, _67721_ins.get()._field_params);
				_1a861e169_write(_self_, jule::Str(" ", 1));
				_1a85c3ecb_func_scope(_self_.get()._field_sc, _67721_ins);
				if ((_67721_ins.get()._field_scope != nullptr)) {
					_1a861e169_write(_self_, jule::Str("\n\n", 2));
				};
			}
			_iter_next_1aac81ab5:;
			++it;
			goto _iter_begin_1aac81ab5;
		}
		_iter_end_1aac81ab5:;
	};
}



inline void _1a86552e3_trait_wrappers(jule::Ptr<_1a8615281_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_tmap;
		auto it = expr.begin();
		_iter_begin_1aac8447a:;
		if (it != expr.end()) {
			jule::Ptr<_1a8615094_TraitHash> _68921_hash = *it;
			{
				{
					auto &expr = _68921_hash.get()._field_t.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_1aac84d1b:;
					if (it != expr.end()) {
						jule::Ptr<_1a68709c7_Fn> _69025_m = *it;
						{
							jule::Str _69121_ident = _69025_m.get()._field_ident;;
							_69025_m.get()._field_instances[0LL].get()._field_scope=nullptr;
							_69025_m.get()._field_ident=((_69121_ident + jule::Str("_", 1)) + _1a7538cee_itoa(_68921_hash.get()._field_i));
							_1a86551b1_func(_self_, _69025_m);
							_69025_m.get()._field_ident=_69121_ident;
							if ((_68921_hash.get()._field_s == nullptr)) {
								if (_1e0ca2c16_PRODUCTION) {
									_1a861e169_write(_self_, jule::Str(" { jule::panic(__JULE_ERROR__INVALID_MEMORY); }\n", 48));
								} else {
									_1a861e169_write(_self_, jule::Str(" { jule::panic(jule::Str(__JULE_ERROR__INVALID_MEMORY \"\\nlocation: \") + jule::Str(_00___file)); }\n", 98));
								};
								goto _iter_next_1aac84d1b;
							};
							jule::Bool _70721_ptr = (!(_1a6831ba8_is_ref(_69025_m.get()._field_params[0LL].ptr())));;
							jule::Ptr<_1a68709c7_Fn> _70925_sm = _1a6846bbd_find_method(_68921_hash.get()._field_s.ptr(), _69025_m.get()._field_ident,false);;
							if (((_70925_sm == nullptr) || (_70925_sm.get()._field_instances.len() == 0LL))) {
								goto _iter_next_1aac84d1b;
							};
							_1a861e90b_add_indent(_self_);
							_1a861e169_write(_self_, jule::Str("{\n", 2));
							_1a862080d_indent(_self_);
							if ((!(_1a6847eee_is_void(_70925_sm.ptr())))) {
								_1a861e169_write(_self_, jule::Str("return ", 7));
							};
							_1a861e169_write(_self_, static__1a85d95da_func(_70925_sm));
							_1a861e169_write(_self_, jule::Str("(", 1));
							if (_70721_ptr) {
								_1a861e169_write(_self_, jule::Str("_self_.safe_ptr<", 16));
								_1a861e169_write(_self_, static__1a865bdcc_structure_ins(_68921_hash.get()._field_s));
								_1a861e169_write(_self_, jule::Str(">(", 2));
								if ((!(_1e0ca2c16_PRODUCTION))) {
									_1a861e169_write(_self_, jule::Str("_00___file", 10));
								};
								_1a861e169_write(_self_, jule::Str(")", 1));
							} else {
								_1a861e169_write(_self_, jule::Str("_self_.data.as<", 15));
								_1a861e169_write(_self_, static__1a865bb35_structure(_70925_sm.get()._field_owner));
								_1a861e169_write(_self_, jule::Str(">()", 3));
							};
							{
								auto expr = _69025_m.get()._field_params.slice(1LL);
								auto it = expr.begin();
								_iter_begin_1aac88836:;
								if (it != expr.end()) {
									jule::Ptr<_1a68707da_Param> _73524_mp = *it;
									{
										_1a861e169_write(_self_, jule::Str(", ", 2));
										_1a861e169_write(_self_, static__1a85d9dc1_param(_73524_mp));
									}
									_iter_next_1aac88836:;
									++it;
									goto _iter_begin_1aac88836;
								}
								_iter_end_1aac88836:;
							};
							_1a861e169_write(_self_, jule::Str(");\n}\n", 5));
							_1a86200e3_done_indent(_self_);
						}
						_iter_next_1aac84d1b:;
						++it;
						goto _iter_begin_1aac84d1b;
					}
					_iter_end_1aac84d1b:;
				};
			}
			_iter_next_1aac8447a:;
			++it;
			goto _iter_begin_1aac8447a;
		}
		_iter_end_1aac8447a:;
	};
}



inline void _1a8655425_trait_datas(jule::Ptr<_1a8615281_ObjectCoder> _self_) {
	jule::Ptr<_1a68d46b7_Trait> _74617_old = nullptr;;
	{
		auto &expr = _self_.get()._field_tmap;
		auto it = expr.begin();
		_iter_begin_1aac917a6:;
		if (it != expr.end()) {
			jule::Ptr<_1a8615094_TraitHash> _74721_hash = *it;
			{
				jule::Str _74817_ident = static__1a85d9b29_trait_decl(_74721_hash.get()._field_t);;
				if ((_74721_hash.get()._field_t != _74617_old)) {
					if ((_74617_old != nullptr)) {
						_1a86200e3_done_indent(_self_);
						_1a862080d_indent(_self_);
						_1a861e169_write(_self_, jule::Str("};\n", 3));
					};
					_1a861e169_write(_self_, jule::Str("static ", 7));
					_1a861e169_write(_self_, _74817_ident);
					_1a861e169_write(_self_, jule::Str("MptrData ", 9));
					_1a861e169_write(_self_, _74817_ident);
					_1a861e169_write(_self_, jule::Str("_mptr_data[] = {\n", 17));
					_74617_old=_74721_hash.get()._field_t;
					_1a861e90b_add_indent(_self_);
				};
				_1a862080d_indent(_self_);
				_1a861e169_write(_self_, jule::Str("{\n", 2));
				_1a861e90b_add_indent(_self_);
				{
					auto &expr = _74721_hash.get()._field_t.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_1aac95e4d:;
					if (it != expr.end()) {
						jule::Ptr<_1a68709c7_Fn> _76625_m = *it;
						{
							jule::Str _76721_m_ident = static__1a85d95da_func(_76625_m);;
							_1a862080d_indent(_self_);
							_1a861e169_write(_self_, jule::Str(".", 1));
							_1a861e169_write(_self_, _76721_m_ident);
							_1a861e169_write(_self_, jule::Str("=", 1));
							_1a861e169_write(_self_, _76721_m_ident);
							_1a861e169_write(_self_, jule::Str("_", 1));
							_1a861e169_write(_self_, _1a7538cee_itoa(_74721_hash.get()._field_i));
							_1a861e169_write(_self_, jule::Str(",\n", 2));
						}
						_iter_next_1aac95e4d:;
						++it;
						goto _iter_begin_1aac95e4d;
					}
					_iter_end_1aac95e4d:;
				};
				_1a86200e3_done_indent(_self_);
				_1a862080d_indent(_self_);
				_1a861e169_write(_self_, jule::Str("},\n", 3));
			}
			_iter_next_1aac917a6:;
			++it;
			goto _iter_begin_1aac917a6;
		}
		_iter_end_1aac917a6:;
	};
	if ((_74617_old != nullptr)) {
		_1a86200e3_done_indent(_self_);
		_1a862080d_indent(_self_);
		_1a861e169_write(_self_, jule::Str("};\n", 3));
	};
}



inline void _1a8655557_globals(jule::Ptr<_1a8615281_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_ordered._field_globals;
		auto it = expr.begin();
		_iter_begin_1aac9ad98:;
		if (it != expr.end()) {
			jule::Ptr<_1a76a7720_Var> _78921_v = *it;
			{
				_1a861e169_write(_self_, static__1a865d4d8_kind(_78921_v.get()._field_kind.get()._field_kind));
				_1a861e169_write(_self_, jule::Str(" ", 1));
				if (_78921_v.get()._field_reference) {
					_1a861e169_write(_self_, jule::Str("&", 1));
				};
				_1a861e169_write(_self_, static__1a85da94e_var(_78921_v));
				_1a861e169_write(_self_, jule::Str(" = ", 3));
				_1a85d2649_val(_self_.get()._field_ec, _78921_v.get()._field_value);
				_1a861e169_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1aac9ad98:;
			++it;
			goto _iter_begin_1aac9ad98;
		}
		_iter_end_1aac9ad98:;
	};
}



inline void _1a8655689_decls(jule::Ptr<_1a8615281_ObjectCoder> _self_) {
	_1a8653522_trait_decls(_self_);
	_1a8653786_structure_plain_decls(_self_);
	_1a865449b_structure_decls(_self_);
	_1a8654974_func_decls(_self_);
	_1a861e169_write(_self_, jule::Str("\n\n", 2));
	_1a8654aa6_trait_data_types(_self_);
	_1a861e169_write(_self_, jule::Str("\n\n", 2));
	_1a86552e3_trait_wrappers(_self_);
	_1a861e169_write(_self_, jule::Str("\n\n", 2));
	_1a8655425_trait_datas(_self_);
	_1a861e169_write(_self_, jule::Str("\n\n", 2));
	_1a8655557_globals(_self_);
}



inline void _1a86557bb_structure_methods(jule::Ptr<_1a8615281_ObjectCoder> _self_, jule::Ptr<_1a6836a48_StructIns>& _81742_s) {
	{
		auto &expr = _81742_s.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1aaca2c18:;
		if (it != expr.end()) {
			jule::Ptr<_1a68709c7_Fn> _81821_f = *it;
			{
				_1a86551b1_func(_self_, _81821_f);
				_1a861e169_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_1aaca2c18:;
			++it;
			goto _iter_begin_1aaca2c18;
		}
		_iter_end_1aaca2c18:;
	};
}



inline void _1a86559ec_structure_derive_defs(jule::Ptr<_1a8615281_ObjectCoder> _self_, jule::Ptr<_1a6836a48_StructIns>& _82446_s) {
	if (_1a68312c3_is_derives(_82446_s.get()._field_decl.ptr(), jule::Str("Clone", 5))) {
		_1a861e169_write(_self_, static__1a85d51eb_clone_func_def(_82446_s.get()._field_decl));
		_1a861e169_write(_self_, jule::Str("{\n", 2));
		_1a861e90b_add_indent(_self_);
		_1a862080d_indent(_self_);
		_1a861e169_write(_self_, static__1a865bdcc_structure_ins(_82446_s));
		_1a861e169_write(_self_, jule::Str(" clone;\n", 8));
		{
			auto &expr = _82446_s.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_1aaca6667:;
			if (it != expr.end()) {
				jule::Ptr<_1a6830899_FieldIns> _83220_f = *it;
				{
					jule::Str _83321_ident = static__1a85da6a7_field(_83220_f.get()._field_decl);;
					_1a862080d_indent(_self_);
					_1a861e169_write(_self_, jule::Str("clone.", 6));
					_1a861e169_write(_self_, _83321_ident);
					_1a861e169_write(_self_, jule::Str(" = jule::clone(this->", 21));
					_1a861e169_write(_self_, _83321_ident);
					_1a861e169_write(_self_, jule::Str(");\n", 3));
				}
				_iter_next_1aaca6667:;
				++it;
				goto _iter_begin_1aaca6667;
			}
			_iter_end_1aaca6667:;
		};
		_1a862080d_indent(_self_);
		_1a861e169_write(_self_, jule::Str("return clone;\n", 14));
		_1a86200e3_done_indent(_self_);
		_1a861e169_write(_self_, jule::Str("}", 1));
	};
}



inline void _1a8655c72_structure_ostream(jule::Ptr<_1a8615281_ObjectCoder> _self_, jule::Ptr<_1a6836a48_StructIns>& _84842_s) {
	_1a862080d_indent(_self_);
	_1a861e169_write(_self_, jule::Str("std::ostream &operator<<(std::ostream &_Stream, ", 48));
	_1a861e169_write(_self_, static__1a85da410_structure_ins(_84842_s));
	_1a861e169_write(_self_, jule::Str(" _Src) {\n", 9));
	_1a861e90b_add_indent(_self_);
	_1a862080d_indent(_self_);
	jule::Ptr<_1a68709c7_Fn> _85617_fts = _1a6846bbd_find_method(_84842_s.ptr(), jule::Str("to_str", 6),false);;
	if (static__1a76a8b3e_to_str(_85617_fts)) {
		_1a861e169_write(_self_, jule::Str("_Stream << ", 11));
		_1a861e169_write(_self_, static__1a85d95da_func(_85617_fts));
		_1a861e169_write(_self_, jule::Str("(&_Src);\n", 9));
	} else {
		_1a861e169_write(_self_, jule::Str("_Stream << \"", 12));
		_1a861e169_write(_self_, _84842_s.get()._field_decl.get()._field_ident);
		_1a861e169_write(_self_, jule::Str("{\";\n", 4));
		{
			auto &expr = _84842_s.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_1aacb03a7:;
			if (it != expr.end()) {
				jule::I64 _86618_i = it - expr.begin();
				jule::Ptr<_1a6830899_FieldIns> _86625_f = *it;
				{
					_1a862080d_indent(_self_);
					_1a861e169_write(_self_, jule::Str("_Stream << \"", 12));
					_1a861e169_write(_self_, _86625_f.get()._field_decl.get()._field_ident);
					_1a861e169_write(_self_, jule::Str(":", 1));
					jule::Ptr<_1a6836a48_StructIns> _87321_strct = _1a772ab7d_strct(_86625_f.get()._field_kind.ptr());;
					if ((((_87321_strct != nullptr) && (_87321_strct.get()._field_decl != nullptr)) && _87321_strct.get()._field_decl.get()._field_cpp_linked)) {
						_1a861e169_write(_self_, jule::Str(" cpp.", 5));
						_1a861e169_write(_self_, static__1a85da6a7_field(_86625_f.get()._field_decl));
						_1a861e169_write(_self_, jule::Str("\"", 1));
					} else {
						_1a861e169_write(_self_, jule::Str("\" << _Src.", 10));
						_1a861e169_write(_self_, static__1a85da6a7_field(_86625_f.get()._field_decl));
					};
					if (((_86618_i + 1LL) < _84842_s.get()._field_fields.len())) {
						_1a861e169_write(_self_, jule::Str(" << \", \"", 8));
					};
					_1a861e169_write(_self_, jule::Str(";\n", 2));
				}
				_iter_next_1aacb03a7:;
				++it;
				_86618_i++;
				goto _iter_begin_1aacb03a7;
			}
			_iter_end_1aacb03a7:;
		};
		_1a862080d_indent(_self_);
		_1a861e169_write(_self_, jule::Str("_Stream << \"}\";\n", 16));
	};
	_1a862080d_indent(_self_);
	_1a861e169_write(_self_, jule::Str("return _Stream;\n", 16));
	_1a86200e3_done_indent(_self_);
	_1a861e169_write(_self_, jule::Str("}", 1));
}



inline void _1a8655ee7_structure_ins(jule::Ptr<_1a8615281_ObjectCoder> _self_, jule::Ptr<_1a6836a48_StructIns>& _89938_s) {
	_1a86557bb_structure_methods(_self_, _89938_s);
	_1a861e169_write(_self_, jule::Str("\n\n", 2));
	_1a86559ec_structure_derive_defs(_self_, _89938_s);
	_1a861e169_write(_self_, jule::Str("\n\n", 2));
	_1a8655c72_structure_ostream(_self_, _89938_s);
}



inline void _1a865626c_structure(jule::Ptr<_1a8615281_ObjectCoder> _self_, jule::Ptr<_1a6826829_Struct>& _90734_s) {
	{
		auto &expr = _90734_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1aacb9889:;
		if (it != expr.end()) {
			jule::Ptr<_1a6836a48_StructIns> _90821_ins = *it;
			{
				_1a8655ee7_structure_ins(_self_, _90821_ins);
				_1a861e169_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_1aacb9889:;
			++it;
			goto _iter_begin_1aacb9889;
		}
		_iter_end_1aacb9889:;
	};
}



inline void _1a8656448_structures(jule::Ptr<_1a8615281_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_ordered._field_structs;
		auto it = expr.begin();
		_iter_begin_1aacbb061:;
		if (it != expr.end()) {
			jule::Ptr<_1a6826829_Struct> _91521_s = *it;
			{
				if ((_91521_s.get()._field_token != nullptr)) {
					_1a865626c_structure(_self_, _91521_s);
					_1a861e169_write(_self_, jule::Str("\n\n", 2));
				};
			}
			_iter_next_1aacbb061:;
			++it;
			goto _iter_begin_1aacbb061;
		}
		_iter_end_1aacbb061:;
	};
}



inline void _1a8656624_funcs(jule::Ptr<_1a8615281_ObjectCoder> _self_) {
	_1a86532ad_iter_packages(_self_, jule::Fn<void(jule::Ptr<_1a7687bea_Package>&)>([=](jule::Ptr<_1a7687bea_Package>& _92436_pkg) mutable -> void {
		_1a865746b_iter_files(_92436_pkg,jule::Fn<void(jule::Ptr<_1a76e8e26_SymbolTable>&)>([=](jule::Ptr<_1a76e8e26_SymbolTable>& _92537_file) mutable -> void {
			{
				auto &expr = _92537_file.get()._field_funcs;
				auto it = expr.begin();
				_iter_begin_1aacbe7e5:;
				if (it != expr.end()) {
					jule::Ptr<_1a68709c7_Fn> _92629_f = *it;
					{
						if (((!(_1e0ca24b8_TEST)) && _1a8660694_has_directive(_92629_f.get()._field_directives,jule::Str("test", 4)))) {
							goto _iter_next_1aacbe7e5;
						};
						if (((!(_92629_f.get()._field_cpp_linked)) && (_92629_f.get()._field_token != nullptr))) {
							_1a86551b1_func(_self_, _92629_f);
							_1a861e169_write(_self_, jule::Str("\n\n", 2));
						};
					}
					_iter_next_1aacbe7e5:;
					++it;
					goto _iter_begin_1aacbe7e5;
				}
				_iter_end_1aacbe7e5:;
			};
		}));
	}));
}



inline void _1a8656899_push_init(jule::Ptr<_1a8615281_ObjectCoder> _self_, jule::Ptr<_1a7687bea_Package>& _93934_pkg) {
	_1a865746b_iter_files(_93934_pkg,jule::Fn<void(jule::Ptr<_1a76e8e26_SymbolTable>&)>([=](jule::Ptr<_1a76e8e26_SymbolTable>& _94033_file) mutable -> void {
		{
			auto &expr = _94033_file.get()._field_funcs;
			auto it = expr.begin();
			_iter_begin_1aacc2a5c:;
			if (it != expr.end()) {
				jule::Ptr<_1a68709c7_Fn> _94120_f = *it;
				{
					if ((_94120_f.get()._field_ident == jule::Str("init", 4))) {
						_1a862080d_indent(_self_);
						_1a861e169_write(_self_, static__1a85d95da_func(_94120_f));
						_1a861e169_write(_self_, jule::Str("();\n", 4));
					};
				}
				_iter_next_1aacc2a5c:;
				++it;
				goto _iter_begin_1aacc2a5c;
			}
			_iter_end_1aacc2a5c:;
		};
	}));
}



inline void _1a8656a75_init_caller(jule::Ptr<_1a8615281_ObjectCoder> _self_) {
	_1a861e169_write(_self_, jule::Str("void __jule_call_initializers(void) {\n", 38));
	_1a861e90b_add_indent(_self_);
	_1a86532ad_iter_packages(_self_, jule::Fn<void(jule::Ptr<_1a7687bea_Package>&)>([=](jule::Ptr<_1a7687bea_Package>& _95436_pkg) mutable -> void {
		_1a8656899_push_init(_self_, _95436_pkg);
	}));
	_1a86200e3_done_indent(_self_);
	_1a861e169_write(_self_, jule::Str("\n}", 2));
}



inline void _1a8656c51_end(jule::Ptr<_1a8615281_ObjectCoder> _self_) {
	_1a861e169_write(_self_, jule::Str("int main(int argc, char *argv[], char *envp[]) {\n    jule::setup_argv(argc, argv);\n    jule::setup_envp(envp);\n\n    __jule_call_initializers();\n    ", 148));
	if (_1e0ca24b8_TEST) {
		_1a861e169_write(_self_, jule::Str("test_point();", 13));
	} else {
		_1a861e169_write(_self_, jule::Str("entry_point();", 14));
	};
	_1a861e169_write(_self_, jule::Str("\n\n    return EXIT_SUCCESS;\n}", 28));
}



inline void _1a8656e2c_serialize_head(jule::Ptr<_1a8615281_ObjectCoder> _self_) {
	_1a8637b55_prepare_structures(_self_);
	_1a86533e0_build_trait_map(_self_);
	_1a862239d_head(_self_);
	_1a8617041_links(_self_);
	_1a861e169_write(_self_, jule::Str("\n", 1));
	_1a8655689_decls(_self_);
	_1a861e169_write(_self_, jule::Str("\n", 1));
	_1a8656448_structures(_self_);
	_1a8656624_funcs(_self_);
	_1a8656a75_init_caller(_self_);
	_1a861e169_write(_self_, jule::Str("\n\n", 2));
}



inline void _1a8657108_serialize(jule::Ptr<_1a8615281_ObjectCoder> _self_) {
	_1a8656e2c_serialize_head(_self_);
	_1a8656c51_end(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1a8615281_ObjectCoder _Src) {
	_Stream << "ObjectCoder{";
	_Stream << "obj:" << _Src._field_obj << ", ";
	_Stream << "ir:" << _Src._field_ir << ", ";
	_Stream << "info:" << _Src._field_info << ", ";
	_Stream << "tmap:" << _Src._field_tmap << ", ";
	_Stream << "indent_buffer:" << _Src._field_indent_buffer << ", ";
	_Stream << "ec:" << _Src._field_ec << ", ";
	_Stream << "sc:" << _Src._field_sc;
	_Stream << "}";
	return _Stream;
}



inline std::tuple<jule::I64,jule::Bool> _1aad2e7bc_parse_integer(_1a8692d8b_ArgParser* _self_, jule::Str& _19032_s, jule::Fn<std::tuple<jule::I64,jule::Bool>(jule::Str,jule::I64)> _19040_parser) {
	jule::I64 _19084_x = jule::I64();
	jule::Bool _19090_ok = jule::Bool();
	{
		
		if (_19032_s.empty()) {
			_case_begin_1aad3463a:;
			{
				_19084_x = 0LL;
				_19090_ok = false;
				return std::make_tuple(_19084_x,_19090_ok);
			}
		}
		else if (_1a4221d2b_has_prefix(_19032_s,jule::Str("0x", 2))) {
			_case_begin_1aad346a1:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),16LL);
			}
		}
		else if (_1a4221d2b_has_prefix(_19032_s,jule::Str("0b", 2))) {
			_case_begin_1aad3441a:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),2LL);
			}
		}
		else if (_1a4221d2b_has_prefix(_19032_s,jule::Str("0o", 2))) {
			_case_begin_1aad34481:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),8LL);
			}
		}
		else if ((_19032_s[0LL] == '0')) {
			_case_begin_1aad33a46:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(1LL),8LL);
			}
		}
		else {
			_case_begin_1aad339d0:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s,10LL);
			}
		}
		_match_end_1aad33914:;
	};
	return std::make_tuple(_19084_x,_19090_ok);
}

inline std::tuple<jule::U64,jule::Bool> _1aad38100_parse_integer(_1a8692d8b_ArgParser* _self_, jule::Str& _19032_s, jule::Fn<std::tuple<jule::U64,jule::Bool>(jule::Str,jule::I64)> _19040_parser) {
	jule::U64 _19084_x = jule::U64();
	jule::Bool _19090_ok = jule::Bool();
	{
		
		if (_19032_s.empty()) {
			_case_begin_1aad3cd3b:;
			{
				_19084_x = 0LLU;
				_19090_ok = false;
				return std::make_tuple(_19084_x,_19090_ok);
			}
		}
		else if (_1a4221d2b_has_prefix(_19032_s,jule::Str("0x", 2))) {
			_case_begin_1aad3cda2:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),16LL);
			}
		}
		else if (_1a4221d2b_has_prefix(_19032_s,jule::Str("0b", 2))) {
			_case_begin_1aad3cb1b:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),2LL);
			}
		}
		else if (_1a4221d2b_has_prefix(_19032_s,jule::Str("0o", 2))) {
			_case_begin_1aad3cb82:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),8LL);
			}
		}
		else if ((_19032_s[0LL] == '0')) {
			_case_begin_1aad3c247:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(1LL),8LL);
			}
		}
		else {
			_case_begin_1aad3c1d1:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s,10LL);
			}
		}
		_match_end_1aad3c115:;
	};
	return std::make_tuple(_19084_x,_19090_ok);
}



inline jule::Str _1a8693650_get_data(_1a8692d8b_ArgParser* _self_) {
	if ((((*_self_)._field_i + 1LL) >= (*_self_)._field_args.len())) {
		return jule::Str();
	};
	((*_self_)._field_i)++;
	return (*_self_)._field_args[(*_self_)._field_i];
}



inline jule::VoidExceptional _1a86938c5_process_flag(_1a8692d8b_ArgParser* _self_, jule::Trait<_1a8588039_CommonFlag>& _21736_flag) {
	{
		auto &_match_expr{ _21736_flag };
		
		if (_match_expr.type_is<jule::Ptr<_1aad19741_Flag>>()) {
			_case_begin_1aad2ba83:;
			{
				jule::Ptr<_1aad19741_Flag> _22021_bf = _21736_flag.operator jule::Ptr<_1aad19741_Flag>();;
				(*(_22021_bf.get()._field__data))=(!(_22021_bf.get()._field__default));
				return jule::VoidExceptional();;
			}
		}
		_match_end_1aad2b9ea:;
	};
	jule::Str _22513_data = _1a8693650_get_data(&(*_self_));;
	if (_22513_data.empty()) {
		return jule::VoidExceptional(((jule::Str("--", 2) + _1a8588039_CommonFlag_mptr_data[(_21736_flag).type_offset]._1a868dc77_name(_21736_flag)) + jule::Str(": expression missing", 20)));
	};
	{
		auto &_match_expr{ _21736_flag };
		
		if (_match_expr.type_is<jule::Ptr<_1aad0e02c_Flag>>()) {
			_case_begin_1aad2d986:;
			{
				jule::Ptr<_1aad0e02c_Flag> _23221_intf = _21736_flag.operator jule::Ptr<_1aad0e02c_Flag>();;
				jule::Bool _23333_ok;;
				std::tie((*(_23221_intf.get()._field__data)),_23333_ok) = _1aad2e7bc_parse_integer(&(*_self_), _22513_data,jule::Fn<std::tuple<jule::I64,jule::Bool>(jule::Str,jule::I64)>([=](jule::Str _23372_s, jule::I64 _23380_base) mutable -> std::tuple<jule::I64,jule::Bool> {
					return std::make_tuple(static_cast<jule::I64>(({
						auto except = _1a6e009a2_parse_int(_23372_s,_23380_base,64LL);
						(except.ok()) ? (except.result) : ({{
							return std::make_tuple(0LL,false);
						} jule::I64();});
					})),true);
				}));
				if ((!(_23333_ok))) {
					return jule::VoidExceptional(((jule::Str("--", 2) + _1a8588039_CommonFlag_mptr_data[(_21736_flag).type_offset]._1a868dc77_name(_21736_flag)) + jule::Str(": expression must be valid signed integer", 41)));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aad12a8b_Flag>>()) {
			_case_begin_1aad2d9ec:;
			{
				jule::Ptr<_1aad12a8b_Flag> _24021_uintf = _21736_flag.operator jule::Ptr<_1aad12a8b_Flag>();;
				jule::Bool _24134_ok;;
				std::tie((*(_24021_uintf.get()._field__data)),_24134_ok) = _1aad38100_parse_integer(&(*_self_), _22513_data,jule::Fn<std::tuple<jule::U64,jule::Bool>(jule::Str,jule::I64)>([=](jule::Str _24173_s, jule::I64 _24181_base) mutable -> std::tuple<jule::U64,jule::Bool> {
					return std::make_tuple(static_cast<jule::U64>(({
						auto except = _1a6dbe0e1_parse_uint(_24173_s,_24181_base,64LL);
						(except.ok()) ? (except.result) : ({{
							return std::make_tuple(0LLU,false);
						} jule::U64();});
					})),true);
				}));
				if ((!(_24134_ok))) {
					return jule::VoidExceptional(((jule::Str("--", 2) + _1a8588039_CommonFlag_mptr_data[(_21736_flag).type_offset]._1a868dc77_name(_21736_flag)) + jule::Str(": expression must be valid unsigned integer", 43)));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aad16144_Flag>>()) {
			_case_begin_1aad2da63:;
			{
				jule::Ptr<_1aad16144_Flag> _24821_ff = _21736_flag.operator jule::Ptr<_1aad16144_Flag>();;
				(*(_24821_ff.get()._field__data))=static_cast<jule::F64>(({
					auto except = _1a7010672_parse_float(_22513_data,64LL);
					(except.ok()) ? (except.result) : ({{
						return jule::VoidExceptional(((jule::Str("--", 2) + _1a8588039_CommonFlag_mptr_data[(_21736_flag).type_offset]._1a868dc77_name(_21736_flag)) + jule::Str(": expression must be valid floating-point", 41)));
					} jule::F64();});
				}));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aad1cce9_Flag>>()) {
			_case_begin_1aad2dac9:;
			{
				(*(_21736_flag.operator jule::Ptr<_1aad1cce9_Flag>().get()._field__data))=_22513_data;
			}
		}
		_match_end_1aad2cec4:;
	};
 return jule::VoidExceptional();
}



inline jule::VoidExceptional _1a8693b4a_single_dash(_1a8692d8b_ArgParser* _self_, jule::Str& _25731_arg) {
	if ((_25731_arg.len() == 1LL)) {
		return jule::VoidExceptional((_25731_arg + jule::Str(": missing argument", 18)));
	};
	jule::Slice<jule::I32> _26113_rarg = static_cast<jule::Slice<jule::I32>>(_25731_arg).slice(1LL);;
	{
		auto &expr = _26113_rarg;
		auto it = expr.begin();
		_iter_begin_1aad43da8:;
		if (it != expr.end()) {
			jule::I32 &_26216_r = *it;
			{
				jule::Trait<_1a8588039_CommonFlag> _26321_flag = _1a8691241_find_flag_short(&(*_self_)._field_set, _26216_r);;
				if ((_26321_flag == nullptr)) {
					return jule::VoidExceptional(((_25731_arg + jule::Str(": flag is not exist: ", 21)) + static_cast<jule::Str>(_26216_r)));
				};
				({
					auto except = _1a86938c5_process_flag(&(*_self_), _26321_flag);
					if (!except.ok()) {
						return jule::VoidExceptional(except.error);
					}
				});
			}
			_iter_next_1aad43da8:;
			++it;
			goto _iter_begin_1aad43da8;
		}
		_iter_end_1aad43da8:;
	};
 return jule::VoidExceptional();
}



inline jule::VoidExceptional _1a8693dc0_double_dash(_1a8692d8b_ArgParser* _self_, jule::Str& _27231_arg) {
	if ((_27231_arg.len() == 2LL)) {
		return jule::VoidExceptional((_27231_arg + jule::Str(": missing argument", 18)));
	};
	jule::Trait<_1a8588039_CommonFlag> _27617_flag = _1a8690e33_find_flag(&(*_self_)._field_set, _27231_arg.slice(2LL));;
	if ((_27617_flag == nullptr)) {
		return jule::VoidExceptional((_27231_arg + jule::Str(": flag is not exist", 19)));
	};
	({
		auto except = _1a86938c5_process_flag(&(*_self_), _27617_flag);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
 return jule::VoidExceptional();
}



inline jule::VoidExceptional _1a869409b_try_arg(_1a8692d8b_ArgParser* _self_) {
	jule::Str _28513_arg = (*_self_)._field_args[(*_self_)._field_i];;
	if (((*_self_)._field_args.len() == 0LL)) {
		return jule::VoidExceptional();;
	};
	if ((_28513_arg[0LL] == '-')) {
		if (((_28513_arg.len() > 1LL) && (_28513_arg[1LL] == '-'))) {
			({
				auto except = _1a8693dc0_double_dash(&(*_self_), _28513_arg);
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
			return jule::VoidExceptional();;
		};
		({
			auto except = _1a8693b4a_single_dash(&(*_self_), _28513_arg);
			if (!except.ok()) {
				return jule::VoidExceptional(except.error);
			}
		});
		return jule::VoidExceptional();;
	};
	(*_self_)._field_content = jule::alloc_for_append((*_self_)._field_content,1);(*_self_)._field_content.__push(_28513_arg);;
 return jule::VoidExceptional();
}



inline jule::VoidExceptional _1a8694277_parse(_1a8692d8b_ArgParser* _self_) {
	for (; ((*_self_)._field_i < (*_self_)._field_args.len()); ((*_self_)._field_i)++) {
		{
			({
				auto except = _1a869409b_try_arg(&(*_self_));
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
		}
	_iter_next_1aad4b93d:;
	}
	_iter_end_1aad4b93d:;;
 return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _1a8692d8b_ArgParser _Src) {
	_Stream << "ArgParser{";
	_Stream << "set:" << _Src._field_set << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "content:" << _Src._field_content << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _1d4e50b8e_free(void* _4524_ptr) {
	free(_4524_ptr);
}



inline jule::Str _1d4e7084b_byte_ptr_to_str(jule::U8* _6931_s) {
	if ((_6931_s == nullptr)) {
		return jule::Str();
	};
	{
		return static_cast<jule::Str>(_6931_s);
	};
}



inline jule::I64 _1d4e264a0_get_last_errno(void) {
	return errno;
}



inline jule::I64 _1d4e7ae83_stat(jule::U8* _3920_path, struct stat* _3937_stat) {
	return static_cast<jule::I64>(stat(((char*)(_3920_path)), _3937_stat));
}



inline jule::I64 _1d4e7b0b5_open(jule::U8* _4420_path, jule::I64 _4433_flag, jule::I64 _4444_mode) {
	return static_cast<jule::I64>(open(((char*)(_4420_path)),_4433_flag,_4444_mode));
}



inline jule::U8* _1d4e7b1e7_getcwd(jule::U8* _5022_buff, jule::U64 _5035_bufflen) {
	return ((jule::U8*)(getcwd(((char*)(_5022_buff)),_5035_bufflen)));
}



inline DIR* _1d4e7b329_opendir(jule::U8* _5523_path) {
	return opendir(((char*)(_5523_path)));
}



inline struct dirent* _1d4e7b45b_readdir(DIR* _5827_dir) {
	return readdir(_5827_dir);
}



inline jule::I64 _1d4e7b7be_closedir(DIR* _6128_dir) {
	return static_cast<jule::I64>(closedir(_6128_dir));
}



inline jule::I64 _1d4e7bb65_mkdir(jule::U8* _7021_path, jule::I64 _7034_mode) {
	return static_cast<jule::I64>(mkdir(((char*)(_7021_path)),_7034_mode));
}



inline jule::I64 _1d4e7bc97_rmdir(jule::U8* _7521_path) {
	return static_cast<jule::I64>(rmdir(((char*)(_7521_path))));
}



inline jule::I64 _1d4e7bdc9_unlink(jule::U8* _7822_path) {
	return static_cast<jule::I64>(unlink(((char*)(_7822_path))));
}



inline jule::I64 _1d4e7db12_seek(jule::I64 _2613_handle, jule::I64 _2626_offset, jule::I64 _2639_origin) {
	return static_cast<jule::I64>(lseek(_2613_handle,_2626_offset,_2639_origin));
}



inline jule::I64 _1d4e7deec_read(jule::I64 _3120_handle, void* _3137_buff, jule::U64 _3152_n) {
	return static_cast<jule::I64>(read(_3120_handle,_3137_buff,_3152_n));
}



inline jule::I64 _1d4e7e32c_close(jule::I64 _3614_handle) {
	return static_cast<jule::I64>(close(_3614_handle));
}



inline jule::I64 _1d4e7e717_write(jule::I64 _3921_handle, void* _3934_buff, jule::U64 _3949_n) {
	return static_cast<jule::I64>(write(_3921_handle,_3934_buff,_3949_n));
}



inline void _1d4e7e926_exit(jule::I64 _4413_code) {
	exit(_4413_code);
}



inline jule::I64 _1d502b93a_get_last_os_error(void) {
	jule::I64 _309_err = _1d4e264a0_get_last_errno();;
	{
		auto &_match_expr{ _309_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1a86ed8a8:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1a86ed91e:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		else if (_match_expr == 40LL) {
			_case_begin_1a86ed985:;
			{
				return static_cast<jule::I64>(2LL);
			}
		}
		else if (_match_expr == 36LL) {
			_case_begin_1a86ed9eb:;
			{
				return static_cast<jule::I64>(3LL);
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1a86edb61:;
			{
				return static_cast<jule::I64>(4LL);
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1a86edbc7:;
			{
				return static_cast<jule::I64>(5LL);
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1a86edc3d:;
			{
				return static_cast<jule::I64>(6LL);
			}
		}
		else {
			_case_begin_1a86ed3be:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		_match_end_1a86ed688:;
	};
}



inline jule::Slice<jule::Str> _1d504d6b5_args(void) {
	return jule::args();
}



inline jule::Exceptional<jule::Str> _1d504db05_working_dir(void) {
	return jule::Exceptional<jule::Str>(jule::Any(),({
		auto except = _1d504e4b8___getwd();
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Str>(except.error);
		} jule::Str();});
	}));
}



inline jule::Exceptional<jule::Str> _1d504e4b8___getwd(void) {
	jule::U8* _1113_buff = _1d4e7b1e7_getcwd(nullptr,0LLU);;
	if ((_1113_buff == nullptr)) {
		return jule::Exceptional<jule::Str>(_1d502b93a_get_last_os_error());
	};
	jule::Str _159_pwd = _1d4e7084b_byte_ptr_to_str(_1113_buff);;
	{
		_1d4e50b8e_free(_1113_buff);
	};
	return jule::Exceptional<jule::Str>(jule::Any(),_159_pwd);
}



inline jule::Slice<jule::U8> _1d5248a25_stobs(jule::Str& _1315_s) {
	return _1315_s.fake_slice();
}



inline jule::Bool _1a4171550_is_letter(jule::I32 _7618_r) {
	if ((static_cast<jule::U32>(_7618_r) <= 255LLU)) {
		return ((_1a41c2c88__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_7618_r))] & 96LLU) != 0LLU);
	};
	return _1a41ca521_is_excluding_latin(_1a41793d2_LETTER,_7618_r);
}



inline jule::Bool _1a41c99b5_is16(jule::Slice<_1a41c7d7b_Range16> _1919_ranges, jule::U16 _19128_r) {
	if (((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU))) {
		{
			auto &expr = _1919_ranges;
			auto it = expr.begin();
			_iter_begin_1a8c43529:;
			if (it != expr.end()) {
				jule::I64 _19313_i = it - expr.begin();
				{
					_1a41c7d7b_Range16* _19417_range = (&(_1919_ranges[_19313_i]));;
					{
						if ((_19128_r < _19417_range->_field_lo)) {
							return false;
						};
						if ((_19128_r <= _19417_range->_field_hi)) {
							return ((_19417_range->_field_stride == 1LLU) || (jule::mod((_19128_r - _19417_range->_field_lo),_19417_range->_field_stride) == 0LLU));
						};
					};
				}
				_iter_next_1a8c43529:;
				++it;
				_19313_i++;
				goto _iter_begin_1a8c43529;
			}
			_iter_end_1a8c43529:;
		};
		return false;
	};
	jule::I64 _20813_lo = 0LL;;
	jule::I64 _20913_hi = _1919_ranges.len();;
	while ((_20813_lo < _20913_hi)) {
		{
			jule::I64 _21113_m = (_20813_lo + ((_20913_hi - _20813_lo) >> 1LLU));;
			_1a41c7d7b_Range16* _21213_range = (&(_1919_ranges[_21113_m]));;
			{
				if (((_21213_range->_field_lo <= _19128_r) && (_19128_r <= _21213_range->_field_hi))) {
					return ((_21213_range->_field_stride == 1LLU) || (jule::mod((_19128_r - _21213_range->_field_lo),_21213_range->_field_stride) == 0LLU));
				};
				if ((_19128_r < _21213_range->_field_lo)) {
					_20913_hi=_21113_m;
				} else {
					_20813_lo=static_cast<jule::I64>((_21113_m + 1LL));
				};
			};
		}
	_iter_next_1a8c42e74:;
	}
	_iter_end_1a8c42e74:;;
	return false;
}



inline jule::Bool _1a41c9d06_is32(jule::Slice<_1a41c8343_Range32> _2289_ranges, jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto &expr = _2289_ranges;
			auto it = expr.begin();
			_iter_begin_1a8c495da:;
			if (it != expr.end()) {
				jule::I64 _23013_i = it - expr.begin();
				{
					_1a41c8343_Range32* _23117_range = (&(_2289_ranges[_23013_i]));;
					{
						if ((_22828_r < _23117_range->_field_lo)) {
							return false;
						};
						if ((_22828_r <= _23117_range->_field_hi)) {
							return ((_23117_range->_field_stride == 1LLU) || (jule::mod((_22828_r - _23117_range->_field_lo),_23117_range->_field_stride) == 0LLU));
						};
					};
				}
				_iter_next_1a8c495da:;
				++it;
				_23013_i++;
				goto _iter_begin_1a8c495da;
			}
			_iter_end_1a8c495da:;
		};
		return false;
	};
	jule::I64 _24513_lo = 0LL;;
	jule::I64 _24613_hi = _2289_ranges.len();;
	while ((_24513_lo < _24613_hi)) {
		{
			jule::I64 _24813_m = (_24513_lo + ((_24613_hi - _24513_lo) >> 1LLU));;
			_1a41c8343_Range32* _24913_range = (&(_2289_ranges[_24813_m]));;
			{
				if (((_24913_range->_field_lo <= _22828_r) && (_22828_r <= _24913_range->_field_hi))) {
					return ((_24913_range->_field_stride == 1LLU) || (jule::mod((_22828_r - _24913_range->_field_lo),_24913_range->_field_stride) == 0LLU));
				};
				if ((_22828_r < _24913_range->_field_lo)) {
					_24613_hi=_24813_m;
				} else {
					_24513_lo=static_cast<jule::I64>((_24813_m + 1LL));
				};
			};
		}
	_iter_next_1a8c48d26:;
	}
	_iter_end_1a8c48d26:;;
	return false;
}



inline jule::Bool _1a41ca521_is_excluding_latin(jule::Ptr<_1a41c87b6_RangeTable> _27823_range_tab, jule::I32 _27847_r) {
	{
		jule::Slice<_1a41c7d7b_Range16> &_28014_r16 = _27823_range_tab.get()._field_r16;;
		jule::I64 _28213_off = _27823_range_tab.get()._field_latin_offset;;
		if (((_28014_r16.len() > _28213_off) && (static_cast<jule::U32>(_27847_r) <= static_cast<jule::U32>(_28014_r16[(_28014_r16.len() - 1LL)]._field_hi)))) {
			return _1a41c99b5_is16(_28014_r16.slice(_28213_off),static_cast<jule::U16>(static_cast<jule::U16>(_27847_r)));
		};
	};
	jule::Slice<_1a41c8343_Range32> &_28710_r32 = _27823_range_tab.get()._field_r32;;
	if (((_28710_r32.len() > 0LL) && (_27847_r >= static_cast<jule::I32>(_28710_r32[0LL]._field_lo)))) {
		return _1a41c9d06_is32(_28710_r32,static_cast<jule::U32>(static_cast<jule::U32>(_27847_r)));
	};
	return false;
}



inline std::tuple<jule::I32,jule::I64> _1a4291670_decode_rune(jule::Slice<jule::U8> _18220_p) {
	jule::I32 _18233_r = jule::I32();
	jule::I64 _18242_size = jule::I64();
	if ((_18220_p.len() < 1LL)) {
		_18233_r = 65533LL;
		_18242_size = 0LL;
		return std::make_tuple(_18233_r,_18242_size);
	};
	jule::U8 _1869_p0 = _18220_p[0LL];;
	jule::U8 _1879_x = _1a42904b5_FIRST[static_cast<jule::I64>(_1869_p0)];;
	if ((_1879_x >= 240LLU)) {
		jule::I32 _19213_mask = static_cast<jule::I32>(((_1879_x << 31LLU) >> 31LLU));;
		_18233_r = static_cast<jule::I32>(((static_cast<jule::I32>(_18220_p[0LL]) & (~(_19213_mask))) | (65533LL & _19213_mask)));
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	};
	jule::I64 _1959_sz = static_cast<jule::I64>((_1879_x & 7LLU));;
	_1a4290a37_accept_range _1969_accept = _1a4290d89_ACCEPT_RANGES[static_cast<jule::I64>((_1879_x >> 4LLU))];;
	if ((_18220_p.len() < _1959_sz)) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	};
	jule::U8 _2009_b1 = _18220_p[1LL];;
	if (((_2009_b1 < _1969_accept._field_lo) || (_1969_accept._field_hi < _2009_b1))) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	};
	if ((_1959_sz <= 2LL)) {
		_18233_r = static_cast<jule::I32>(((static_cast<jule::I32>((_1869_p0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2009_b1 & 63LLU))));
		_18242_size = 2LL;
		return std::make_tuple(_18233_r,_18242_size);
	};
	jule::U8 _2079_b2 = _18220_p[2LL];;
	if (((_2079_b2 < 128LLU) || (191LL < _2079_b2))) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	};
	if ((_1959_sz <= 3LL)) {
		_18233_r = static_cast<jule::I32>((((static_cast<jule::I32>((_1869_p0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2079_b2 & 63LLU))));
		_18242_size = 3LL;
		return std::make_tuple(_18233_r,_18242_size);
	};
	jule::U8 _2149_b3 = _18220_p[3LL];;
	if (((_2149_b3 < 128LLU) || (191LL < _2149_b3))) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	};
	_18233_r = static_cast<jule::I32>(((((static_cast<jule::I32>((_1869_p0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2079_b2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2149_b3 & 63LLU))));
	_18242_size = 4LL;
	return std::make_tuple(_18233_r,_18242_size);
}



inline std::tuple<jule::I32,jule::I64> _1a4291c03_decode_last_rune(jule::Slice<jule::U8> _27625_p) {
	jule::I32 _27638_r = jule::I32();
	jule::I64 _27647_size = jule::I64();
	if ((_27625_p.len() == 0LL)) {
		_27638_r = 65533LL;
		_27647_size = 0LL;
		return std::make_tuple(_27638_r,_27647_size);
	};
	jule::I64 _2809_end = _27625_p.len();;
	jule::I64 _28113_start = (_2809_end - 1LL);;
	_27638_r=static_cast<jule::I32>(static_cast<jule::I32>(_27625_p[_28113_start]));
	if ((_27638_r < 128LL)) {
		_27647_size = 1LL;
		return std::make_tuple(_27638_r,_27647_size);
	};
	jule::I64 _28913_lim = (_2809_end - 4LL);;
	if ((_28913_lim < 0LL)) {
		_28913_lim=0LL;
	};
	(_28113_start)--;
	for (; (_28113_start >= _28913_lim); (_28113_start)--) {
		{
			if (_1a4293584_rune_start(_27625_p[_28113_start])) {
				goto _iter_end_1a8c8b143;
			};
		}
	_iter_next_1a8c8b143:;
	}
	_iter_end_1a8c8b143:;;
	if ((_28113_start < 0LL)) {
		_28113_start=0LL;
	};
	std::tie(_27638_r,_27647_size) = _1a4291670_decode_rune(_27625_p.slice(_28113_start,_2809_end));
	if (((_28113_start + _27647_size) != _2809_end)) {
		_27638_r = 65533LL;
		_27647_size = 1LL;
		return std::make_tuple(_27638_r,_27647_size);
	};
	return std::make_tuple(_27638_r,_27647_size);
}



inline jule::Slice<jule::U8> _1a429295c_append_rune(jule::Slice<jule::U8> _40524_p, jule::I32 _40535_r) {
	if ((_40535_r <= 127LL)) {
		return jule::append(_40524_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_40535_r))}));
	};
	return _1a4292c9d_append_rune_non_ascii(_40524_p,_40535_r);
}



inline jule::Slice<jule::U8> _1a4292c9d_append_rune_non_ascii(jule::Slice<jule::U8> _41230_p, jule::I32 _41245_r) {
	jule::U32 _4149_i = static_cast<jule::U32>(_41245_r);;
	{
		
		if ((_4149_i <= 2047LLU)) {
			_case_begin_1a8ca0e05:;
			{
				return jule::append(_41230_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((192LLU | static_cast<jule::U8>((_41245_r >> 6LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41245_r) & 63LLU)))}));
			}
		}
		else if ((_4149_i > 1114111LLU) || ((55296LL <= _4149_i) && (_4149_i <= 57343LLU))) {
			_case_begin_1a8c9dc49:;
			{
				_41245_r=65533LL;
				goto _case_begin_1a8c9dcb0;
			}
		}
		else if ((_4149_i <= 65535LLU)) {
			_case_begin_1a8c9dcb0:;
			{
				return jule::append(_41230_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((224LLU | static_cast<jule::U8>((_41245_r >> 12LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41245_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41245_r) & 63LLU)))}));
			}
		}
		else {
			_case_begin_1a8c9dbd3:;
			{
				return jule::append(_41230_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((240LLU | static_cast<jule::U8>((_41245_r >> 18LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41245_r >> 12LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41245_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41245_r) & 63LLU)))}));
			}
		}
		_match_end_1a8c9db39:;
	};
}



inline jule::I64 _1a42932dc_rune_count_str(jule::Str _47323_s) {
	jule::I64 _47333_n = jule::I64();
	jule::I64 _47413_i = 0LL;;
	for (; (_47413_i < _47323_s.len()); (_47333_n)++) {
		{
			jule::U8 _47617_c = _47323_s[_47413_i];;
			if ((_47617_c < 128LLU)) {
				(_47413_i)++;
				goto _iter_next_1a8ca9dcb;
			};
			jule::U8 _48213_x = _1a42904b5_FIRST[static_cast<jule::I64>(_47617_c)];;
			if ((_48213_x == 241LLU)) {
				(_47413_i)++;
				goto _iter_next_1a8ca9dcb;
			};
			jule::I64 _48717_size = static_cast<jule::I64>((_48213_x & 7LLU));;
			if (((_47413_i + _48717_size) > _47323_s.len())) {
				(_47413_i)++;
				goto _iter_next_1a8ca9dcb;
			};
			_1a4290a37_accept_range _49213_accept = _1a4290d89_ACCEPT_RANGES[static_cast<jule::I64>((_48213_x >> 4LLU))];;
			_47617_c=_47323_s[(_47413_i + 1LL)];
			if (((_47617_c < _49213_accept._field_lo) || (_49213_accept._field_hi < _47617_c))) {
				_48717_size=1LL;
			} else if ((_48717_size == 2LL)) {
			} else {
				_47617_c=_47323_s[(_47413_i + 2LL)];
				if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
					_48717_size=1LL;
				} else if ((_48717_size == 3LL)) {
				} else {
					_47617_c=_47323_s[(_47413_i + 3LL)];
					if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
						_48717_size=1LL;
					};
				};
			};
			_47413_i+=_48717_size;
		}
	_iter_next_1a8ca9dcb:;
	}
	_iter_end_1a8ca9dcb:;;
	return _47333_n;
}



inline jule::Bool _1a4293584_rune_start(jule::U8 _51719_b) {
	return ((_51719_b & 192LLU) != 128LLU);
}



inline jule::Str _1a4222117_repeat(jule::Str _1415_s, jule::I64 _1427_n) {
	if ((_1427_n <= 0LL)) {
		return jule::Str();
	};
	if ((_1415_s.len() > jule::div(jule::MAX_I64,_1427_n))) {
		jule::panic(jule::Str("std::strings: repeat: integer buffer size overflow", 50) + jule::Str("\nlocation: std/strings/strings.jule:19:9"));;
	};
	jule::Str _2213_ss = jule::Str::alloc((_1415_s.len() * _1427_n));;
	for (; (_1427_n > 0LL); (_1427_n)--) {
		{
			_2213_ss+=_1415_s;
		}
	_iter_next_1a8cd8d83:;
	}
	_iter_end_1a8cd8d83:;;
	return _2213_ss;
}



inline jule::Bool _1a4255414__has_prefix(jule::Str& _2917_s, jule::Str& _2926_sub, jule::I64 _2940_start) {
	if (((_2926_sub.len() == 0LL) || ((_2917_s.len() - _2940_start) < _2926_sub.len()))) {
		return false;
	};
	jule::I64 _3413_i = 0LL;;
	for (; (_3413_i < _2926_sub.len()); std::tie(_3413_i,_2940_start) = std::make_tuple(static_cast<jule::I64>((_3413_i + 1LL)),static_cast<jule::I64>((_2940_start + 1LL)))) {
		{
			if ((_2917_s[_2940_start] != _2926_sub[_3413_i])) {
				return false;
			};
		}
	_iter_next_1a8cdbe0d:;
	}
	_iter_end_1a8cdbe0d:;;
	return true;
}



inline jule::Bool _1a4221d2b_has_prefix(jule::Str _4419_s, jule::Str _4427_sub) {
	return _1a4255414__has_prefix(_4419_s,_4427_sub,0LL);
}



inline jule::Bool _1a4294101__has_suffix(jule::Str& _4817_s, jule::Str& _4826_sub, jule::I64 _4840_start) {
	if (((_4826_sub.len() == 0LL) || ((_4817_s.len() - _4840_start) < _4826_sub.len()))) {
		return false;
	};
	_4840_start=static_cast<jule::I64>((_4817_s.len() - _4840_start));
	jule::I64 _5413_i = 0LL;;
	for (; (_5413_i < _4826_sub.len()); (_5413_i)++) {
		{
			if ((_4817_s[((_4840_start - _5413_i) - 1LL)] != _4826_sub[((_4826_sub.len() - _5413_i) - 1LL)])) {
				return false;
			};
		}
	_iter_next_1a8cdd99d:;
	}
	_iter_end_1a8cdd99d:;;
	return true;
}



inline jule::Bool _1a4294233_has_suffix(jule::Str _6419_s, jule::Str _6427_sub) {
	return _1a4294101__has_suffix(_6419_s,_6427_sub,0LL);
}



inline jule::I64 _1a4294365_find_at(jule::Str _7216_s, jule::Str _7224_sub, jule::I64 _7238_i) {
	if ((((_7238_i < 0LL) || (_7216_s.len() < _7224_sub.len())) || (_7224_sub.len() == 0LL))) {
		return -1LL;
	};
	for (; (_7238_i < _7216_s.len()); (_7238_i)++) {
		{
			if (_1a4255414__has_prefix(_7216_s,_7224_sub,_7238_i)) {
				return _7238_i;
			};
		}
	_iter_next_1a8ce274e:;
	}
	_iter_end_1a8ce274e:;;
	return -1LL;
}



inline jule::I64 _1a42946d9_find_last_at(jule::Str _9521_s, jule::Str _9529_sub, jule::I64 _9539_i) {
	jule::I64 _9613_j = ((_9539_i - _9529_sub.len()) + 1LL);;
	if (((((_9529_sub.len() == 0LL) || (_9539_i < 0LL)) || (_9539_i >= _9521_s.len())) || (_9613_j < 0LL))) {
		return -1LL;
	};
	_julec_label_loop:;
	for (; (_9613_j >= 0LL); (_9613_j)--) {
		{
			jule::I64 _10217_k = _9613_j;;
			jule::I64 _10317_z = 0LL;;
			for (; (_10317_z < _9529_sub.len()); std::tie(_10217_k,_10317_z) = std::make_tuple(static_cast<jule::I64>((_10217_k + 1LL)),static_cast<jule::I64>((_10317_z + 1LL)))) {
				{
					if ((_9521_s[_10217_k] != _9529_sub[_10317_z])) {
						goto _iter_next_1a8ce62d0;
					};
				}
			_iter_next_1a8ce6e18:;
			}
			_iter_end_1a8ce6e18:;;
			return _9613_j;
		}
	_iter_next_1a8ce62d0:;
	}
	_iter_end_1a8ce62d0:;;
	return -1LL;
}



inline jule::I64 _1a429481b_find_last(jule::Str _11718_s, jule::Str _11726_sub) {
	return static_cast<jule::I64>(_1a42946d9_find_last_at(_11718_s,_11726_sub,static_cast<jule::I64>((_11718_s.len() - 1LL))));
}



inline jule::I64 _1a4294e26__find_rune(jule::Slice<jule::U8>& _17316_s, jule::I32 _17327_r) {
	jule::I64 _17413_i = 0LL;;
	while ((_17413_i < _17316_s.len())) {
		{
			jule::I32 _17614_br;;
			jule::I64 _17618_n;;
			std::tie(_17614_br,_17618_n) = _1a4291670_decode_rune(_17316_s.slice(_17413_i));
			if ((_17327_r == _17614_br)) {
				return _17413_i;
			};
			_17413_i+=_17618_n;
		}
	_iter_next_1a8d0020c:;
	}
	_iter_end_1a8d0020c:;;
	return -1LL;
}



inline jule::I64 _1a42953bb_find_last_byte(jule::Str _20023_s, jule::U8 _20031_b) {
	jule::I64 _20113_i = (_20023_s.len() - 1LL);;
	for (; (_20113_i >= 0LL); (_20113_i)--) {
		{
			if ((_20023_s[_20113_i] == _20031_b)) {
				return _20113_i;
			};
		}
	_iter_next_1a8d02ce2:;
	}
	_iter_end_1a8d02ce2:;;
	return -1LL;
}



inline jule::I64 _1a4295894_find_any(jule::Str _24117_s, jule::Str _24125_runes) {
	jule::Slice<jule::U8> _2429_sb = _1d5248a25_stobs(_24117_s);;
	jule::Slice<jule::U8> _24313_rb = _1d5248a25_stobs(_24125_runes);;
	jule::I64 _24413_i = 0LL;;
	while ((_24413_i < _2429_sb.len())) {
		{
			jule::I32 _24614_r;;
			jule::I64 _24617_n;;
			std::tie(_24614_r,_24617_n) = _1a4291670_decode_rune(_2429_sb.slice(_24413_i));
			if ((_1a4294e26__find_rune(_24313_rb,_24614_r) != -1LL)) {
				return _24413_i;
			};
			_24413_i+=_24617_n;
		}
	_iter_next_1a8d07d5d:;
	}
	_iter_end_1a8d07d5d:;;
	return -1LL;
}



inline jule::Slice<jule::Str> _1a4295b08_split(jule::Str _27514_s, jule::Str _27522_sub, jule::I64 _27536_n) {
	jule::I64 _27613_cap = _27536_n;;
	if ((_27536_n < 0LL)) {
		_27613_cap=16LL;
	};
	jule::Slice<jule::Str> _28013_parts = jule::Slice<jule::Str>::alloc(0LL,_27613_cap);;
	if ((_27536_n == 0LL)) {
		return _28013_parts;
	};
	if ((_27536_n < 0LL)) {
		_27536_n=static_cast<jule::I64>(_27514_s.len());
	};
	jule::I64 _28713_i = 0LL;;
	for (; (_27536_n > 0LL); (_27536_n)--) {
		{
			jule::I64 _28913_j = _1a4294365_find_at(_27514_s,_27522_sub,_28713_i);;
			if ((_28913_j == -1LL)) {
				goto _iter_end_1a8d0dc32;
			};
			_28013_parts = jule::alloc_for_append(_28013_parts,1);_28013_parts.__push(_27514_s.slice(_28713_i,_28913_j));;
			_28713_i=static_cast<jule::I64>((_28913_j + _27522_sub.len()));
		}
	_iter_next_1a8d0dc32:;
	}
	_iter_end_1a8d0dc32:;;
	if (((_27536_n > 0LL) && (_28713_i < _27514_s.len()))) {
		_28013_parts = jule::alloc_for_append(_28013_parts,1);_28013_parts.__push(_27514_s.slice(_28713_i));;
	};
	return _28013_parts;
}



inline jule::Bool _1a4295c3a_contains(jule::Str _30317_s, jule::Str _30325_sub) {
	return (_1a4294365_find_at(_30317_s,_30325_sub,0LL) != -1LL);
}



inline jule::Bool _1a429619c_contains_any(jule::Str _31921_s, jule::Str _31929_runes) {
	return (_1a4295894_find_any(_31921_s,_31929_runes) != -1LL);
}



inline jule::Str _1a4296972_replace(jule::Str _34516_s, jule::Str _34524_sub, jule::Str _34534_new, jule::I64 _34548_n) {
	if (((_34548_n == 0LL) || (_34524_sub == _34534_new))) {
		return _34516_s;
	};
	if ((_34548_n < 0LL)) {
		_34548_n=static_cast<jule::I64>(_34516_s.len());
	};
	jule::Str _35413_ss = jule::Str::alloc(_34516_s.len());;
	jule::I64 _35513_i = 0LL;;
	for (; (_34548_n > 0LL); (_34548_n)--) {
		{
			jule::I64 _35713_j = _1a4294365_find_at(_34516_s,_34524_sub,_35513_i);;
			if ((_35713_j == -1LL)) {
				goto _iter_end_1a8d17730;
			};
			_35413_ss+=_34516_s.slice(_35513_i,_35713_j);
			_35413_ss+=_34534_new;
			_35513_i=static_cast<jule::I64>((_35713_j + _34524_sub.len()));
		}
	_iter_next_1a8d17730:;
	}
	_iter_end_1a8d17730:;;
	_35413_ss+=_34516_s.slice(_35513_i);
	return _35413_ss;
}



inline void _1a42978b8__trim_left(jule::Slice<jule::U8>& _39720_s, jule::Slice<jule::U8>& _39732_cutset) {
	jule::I64 _39813_i = 0LL;;
	while ((_39813_i < _39720_s.len())) {
		{
			jule::I32 _40014_r;;
			jule::I64 _40017_n;;
			std::tie(_40014_r,_40017_n) = _1a4291670_decode_rune(_39720_s.slice(_39813_i));
			if ((_1a4294e26__find_rune(_39732_cutset,_40014_r) == -1LL)) {
				_39720_s=_39720_s.slice(_39813_i);
				return;;
			};
			_39813_i+=_40017_n;
		}
	_iter_next_1a8d22718:;
	}
	_iter_end_1a8d22718:;;
	_39720_s=nullptr;
}



inline jule::Str _1a4297b3d_trim_left(jule::Str _41218_s, jule::Str _41226_cutset) {
	jule::Slice<jule::U8> _41313_bytes = _1d5248a25_stobs(_41218_s);;
	jule::Slice<jule::U8> _4149_bcutset = _1d5248a25_stobs(_41226_cutset);;
	_1a42978b8__trim_left(_41313_bytes,_4149_bcutset);
	return static_cast<jule::Str>(_41313_bytes);
}



inline void _1a4297de6__trim_right(jule::Slice<jule::U8>& _41921_s, jule::Slice<jule::U8>& _41933_cutset) {
	jule::I64 _42013_i = _41921_s.len();;
	while ((_42013_i > 0LL)) {
		{
			jule::I32 _42214_r;;
			jule::I64 _42217_n;;
			std::tie(_42214_r,_42217_n) = _1a4291c03_decode_last_rune(_41921_s.slice(0LL,_42013_i));
			if ((_1a4294e26__find_rune(_41933_cutset,_42214_r) == -1LL)) {
				_41921_s=_41921_s.slice(0LL,_42013_i);
				return;;
			};
			_42013_i-=_42217_n;
		}
	_iter_next_1a8d258e7:;
	}
	_iter_end_1a8d258e7:;;
	_41921_s=nullptr;
}



inline jule::Str _1a4298578_trim(jule::Str _44313_s, jule::Str _44321_cutset) {
	jule::Slice<jule::U8> _44413_bytes = _1d5248a25_stobs(_44313_s);;
	jule::Slice<jule::U8> _4459_bcutset = _1d5248a25_stobs(_44321_cutset);;
	_1a42978b8__trim_left(_44413_bytes,_4459_bcutset);
	_1a4297de6__trim_right(_44413_bytes,_4459_bcutset);
	return static_cast<jule::Str>(_44413_bytes);
}



inline jule::Str _1a4299e92_clean(jule::Str _10818_path) {
	jule::Str _1099_original_path = _10818_path;;
	jule::I64 _1109_vol_len = _1a429ca77_volume_name_len(_10818_path);;
	(_10818_path).mut_slice(_1109_vol_len);;
	if (_10818_path.empty()) {
		if ((((_1109_vol_len > 1LL) && _1a429c4e4_is_path_sep(_1099_original_path[0LL])) && _1a429c4e4_is_path_sep(_1099_original_path[1LL]))) {
			return _1a429a525_from_slash(_1099_original_path);
		};
		return (_1099_original_path + jule::Str(".", 1));
	};
	jule::Bool _1199_rooted = _1a429c4e4_is_path_sep(_10818_path[0LL]);;
	jule::I64 _1269_n = _10818_path.len();;
	_1a42991d3_LazyBuff _12713_out = _1a42991d3_LazyBuff{._field_path=_10818_path, ._field_vol_and_path=_1099_original_path, ._field_vol_len=_1109_vol_len};;
	jule::I64 _13214_r = 0LL;;
	jule::I64 _13221_dotdot = 0LL;;
	std::tie(_13214_r,_13221_dotdot) = std::make_tuple(0LL,0LL);
	if (_1199_rooted) {
		_1a42998cb_append(&_12713_out, 47LLU);
		std::tie(_13214_r,_13221_dotdot) = std::make_tuple(1LL,1LL);
	};
	while ((_13214_r < _1269_n)) {
		{
			{
				
				if (_1a429c4e4_is_path_sep(_10818_path[_13214_r])) {
					_case_begin_1a8d41968:;
					{
						(_13214_r)++;
					}
				}
				else if (((_10818_path[_13214_r] == '.') && (((_13214_r + 1LL) == _1269_n) || _1a429c4e4_is_path_sep(_10818_path[(_13214_r + 1LL)])))) {
					_case_begin_1a8d424b3:;
					{
						(_13214_r)++;
					}
				}
				else if ((((_10818_path[_13214_r] == '.') && (_10818_path[(_13214_r + 1LL)] == '.')) && (((_13214_r + 2LL) == _1269_n) || _1a429c4e4_is_path_sep(_10818_path[(_13214_r + 2LL)])))) {
					_case_begin_1a8d42529:;
					{
						_13214_r+=2LL;
						{
							
							if ((_12713_out._field_w > _13221_dotdot)) {
								_case_begin_1a8d4562b:;
								{
									(_12713_out._field_w)--;
									while (((_12713_out._field_w > _13221_dotdot) && (!(_1a429c4e4_is_path_sep(static_cast<jule::U8>(_1a4299656_index(&_12713_out, _12713_out._field_w))))))) {
										{
											(_12713_out._field_w)--;
										}
									_iter_next_1a8d45e67:;
									}
									_iter_end_1a8d45e67:;;
								}
							}
							else if ((!(_1199_rooted))) {
								_case_begin_1a8d456a3:;
								{
									if ((_12713_out._field_w > 0LL)) {
										_1a42998cb_append(&_12713_out, 47LLU);
									};
									_1a42998cb_append(&_12713_out, '.');
									_1a42998cb_append(&_12713_out, '.');
									_13221_dotdot=_12713_out._field_w;
								}
							}
							_match_end_1a8d45593:;
						};
					}
				}
				else {
					_case_begin_1a8d3c7ee:;
					{
						if (((_1199_rooted && (_12713_out._field_w != 1LL)) || ((!(_1199_rooted)) && (_12713_out._field_w != 0LL)))) {
							_1a42998cb_append(&_12713_out, 47LLU);
						};
						;
						for (; ((_13214_r < _1269_n) && (!(_1a429c4e4_is_path_sep(_10818_path[_13214_r])))); (_13214_r)++) {
							{
								_1a42998cb_append(&_12713_out, _10818_path[_13214_r]);
							}
						_iter_next_1a8d3de71:;
						}
						_iter_end_1a8d3de71:;;
					}
				}
				_match_end_1a8d3c744:;
			};
		}
	_iter_next_1a8d3c5ac:;
	}
	_iter_end_1a8d3c5ac:;;
	if ((_12713_out._field_w == 0LL)) {
		_1a42998cb_append(&_12713_out, '.');
	};
	return _1a429a525_from_slash(_1a4299b40_string(&_12713_out));
}



inline jule::Str _1a429a525_from_slash(jule::Str _21119_path) {
	if ((47LL == '/')) {
		return _21119_path;
	};
	return _1a4296972_replace(_21119_path,jule::Str("/", 1),static_cast<jule::Str>(47LL),-1LL);
}



inline jule::Str _1a429a811_join(jule::Slice<jule::Str> _22513_elem) {
	return _1a429d44b___join(_22513_elem);
}



inline jule::Str _1a429aaa8_ext(jule::Str _23012_path) {
	jule::I64 _23113_i = (_23012_path.len() - 1LL);;
	for (; ((_23113_i >= 0LL) && (!(_1a429c4e4_is_path_sep(_23012_path[_23113_i])))); (_23113_i)--) {
		{
			if ((_23012_path[_23113_i] == '.')) {
				return _23012_path.slice(_23113_i);
			};
		}
	_iter_next_1a8d4abc5:;
	}
	_iter_end_1a8d4abc5:;;
	return jule::Str();
}



inline std::tuple<jule::Str,jule::Bool> _1a429ad50_abs(jule::Str _24512_path) {
	jule::Str _24610_abs_path;;
	jule::Bool _24620_ok;;
	std::tie(_24610_abs_path,_24620_ok) = _1a429cd63___abs(_24512_path);
	return std::make_tuple(_24610_abs_path,_24620_ok);
}



inline jule::Str _1a429b0e7_base(jule::Str _25417_path) {
	if (_25417_path.empty()) {
		return jule::Str(".", 1);
	};
	while (((_25417_path.len() > 0LL) && _1a429c4e4_is_path_sep(_25417_path[(_25417_path.len() - 1LL)]))) {
		{
			(_25417_path).mut_slice(0LL,(_25417_path.len() - 1LL));;
		}
	_iter_next_1a8d4d645:;
	}
	_iter_end_1a8d4d645:;;
	(_25417_path).mut_slice(_1a429b6be_volume_name(_25417_path).len());;
	jule::I64 _26513_i = (_25417_path.len() - 1LL);;
	while (((_26513_i >= 0LL) && (!(_1a429c4e4_is_path_sep(_25417_path[_26513_i]))))) {
		{
			(_26513_i)--;
		}
	_iter_next_1a8d4eb96:;
	}
	_iter_end_1a8d4eb96:;;
	if ((_26513_i >= 0LL)) {
		(_25417_path).mut_slice((_26513_i + 1LL));;
	};
	if (_25417_path.empty()) {
		return static_cast<jule::Str>(47LL);
	};
	return _25417_path;
}



inline jule::Str _1a429b427_dir(jule::Str _28512_path) {
	jule::Str _2869_vol = _1a429b6be_volume_name(_28512_path);;
	jule::I64 _28713_i = (_28512_path.len() - 1LL);;
	while (((_28713_i >= _2869_vol.len()) && (!(_1a429c4e4_is_path_sep(_28512_path[_28713_i]))))) {
		{
			(_28713_i)--;
		}
	_iter_next_1a8d517d0:;
	}
	_iter_end_1a8d517d0:;;
	jule::Str _2919_dir = _1a4299e92_clean(_28512_path.slice(_2869_vol.len(),(_28713_i + 1LL)));;
	if (((_2919_dir == jule::Str(".", 1)) && (_2869_vol.len() > 2LL))) {
		return _2869_vol;
	};
	return (_2869_vol + _2919_dir);
}



inline jule::Str _1a429b6be_volume_name(jule::Str _30320_path) {
	return _1a429a525_from_slash(_30320_path.slice(0LL,_1a429ca77_volume_name_len(_30320_path)));
}



inline jule::Bool _1a429c4e4_is_path_sep(jule::U8 _4820_c) {
	return (47LL == _4820_c);
}



inline jule::Bool _1a429c7d0_is_abs(jule::Str _5315_path) {
	return _1a4221d2b_has_prefix(_5315_path,jule::Str("/", 1));
}



inline jule::I64 _1a429ca77_volume_name_len(jule::Str _5920_path) {
	return 0LL;
}



inline std::tuple<jule::Str,jule::Bool> _1a429cd63___abs(jule::Str _6310_path) {
	jule::Bool _6328_ok = jule::Bool();
	if (_1a429c7d0_is_abs(_6310_path)) {
		_6328_ok = true;
		return std::make_tuple(_1a4299e92_clean(_6310_path),_6328_ok);
	};
	jule::Str _679_wd = ({
		auto except = _1d504db05_working_dir();
		(except.ok()) ? (except.result) : ({{
			_6328_ok = false;
			return std::make_tuple(jule::Str(),_6328_ok);
		} jule::Str();});
	});;
	_6328_ok = true;
	return std::make_tuple(_1a429d44b___join(jule::Slice<jule::Str>::make({_679_wd,_6310_path})),_6328_ok);
}



inline jule::Str _1a429d1a4_str_join(jule::Slice<jule::Str> _7313_elems, jule::Str _7327_sep) {
	{
		auto _match_expr{ _7313_elems.len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1a8d5771a:;
			{
				return jule::Str();
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1a8d57781:;
			{
				return _7313_elems[0LL];
			}
		}
		_match_end_1a8d57671:;
	};
	jule::Str _8113_s = _7313_elems[0LL];;
	{
		auto expr = _7313_elems.slice(1LL);
		auto it = expr.begin();
		_iter_begin_1a8d56593:;
		if (it != expr.end()) {
			jule::Str &_8212_elem = *it;
			{
				_8113_s+=(_7327_sep + _8212_elem);
			}
			_iter_next_1a8d56593:;
			++it;
			goto _iter_begin_1a8d56593;
		}
		_iter_end_1a8d56593:;
	};
	return _8113_s;
}



inline jule::Str _1a429d44b___join(jule::Slice<jule::Str> _8811_elem) {
	{
		auto &expr = _8811_elem;
		auto it = expr.begin();
		_iter_begin_1a8d58c8d:;
		if (it != expr.end()) {
			jule::I64 _899_i = it - expr.begin();
			jule::Str &_8912_e = *it;
			{
				if ((!(_8912_e.empty()))) {
					return _1a4299e92_clean(_1a429d1a4_str_join(_8811_elem.slice(_899_i),static_cast<jule::Str>(47LL)));
				};
			}
			_iter_next_1a8d58c8d:;
			++it;
			_899_i++;
			goto _iter_begin_1a8d58c8d;
		}
		_iter_end_1a8d58c8d:;
	};
	return jule::Str();
}



inline jule::I64 _1d4e243d2_get_last_fs_error(void) {
	jule::I64 _729_err = _1d4e264a0_get_last_errno();;
	{
		auto &_match_expr{ _729_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1a8d604ae:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1a8d5ee70:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		else if (_match_expr == 40LL) {
			_case_begin_1a8d5eed6:;
			{
				return static_cast<jule::I64>(2LL);
			}
		}
		else if (_match_expr == 36LL) {
			_case_begin_1a8d6004c:;
			{
				return static_cast<jule::I64>(3LL);
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1a8d600b3:;
			{
				return static_cast<jule::I64>(4LL);
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1a8d606ce:;
			{
				return static_cast<jule::I64>(5LL);
			}
		}
		else if (_match_expr == 75LL) {
			_case_begin_1a8d60745:;
			{
				return static_cast<jule::I64>(6LL);
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1a8d607ab:;
			{
				return static_cast<jule::I64>(7LL);
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_1a8d60822:;
			{
				return static_cast<jule::I64>(8LL);
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_1a8d60888:;
			{
				return static_cast<jule::I64>(9LL);
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1a8d608ee:;
			{
				return static_cast<jule::I64>(10LL);
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_1a8d60965:;
			{
				return static_cast<jule::I64>(11LL);
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1a8d609cb:;
			{
				return static_cast<jule::I64>(12LL);
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1a8d60a42:;
			{
				return static_cast<jule::I64>(13LL);
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1a8d60aa8:;
			{
				return static_cast<jule::I64>(14LL);
			}
		}
		else if (_match_expr == 63LL) {
			_case_begin_1a8d60b1e:;
			{
				return static_cast<jule::I64>(15LL);
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_1a8d60b85:;
			{
				return static_cast<jule::I64>(16LL);
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1a8d60beb:;
			{
				return static_cast<jule::I64>(17LL);
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_1a8d60c73:;
			{
				return static_cast<jule::I64>(18LL);
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1a8d60cea:;
			{
				return static_cast<jule::I64>(19LL);
			}
		}
		else if (_match_expr == 26LL || _match_expr == 16LL) {
			_case_begin_1a8d60d72:;
			{
				return static_cast<jule::I64>(20LL);
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_1a8d60de9:;
			{
				return static_cast<jule::I64>(21LL);
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1a8d60e71:;
			{
				return static_cast<jule::I64>(22LL);
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_1a8d60ee8:;
			{
				return static_cast<jule::I64>(23LL);
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_1a8d61070:;
			{
				return static_cast<jule::I64>(24LL);
			}
		}
		else if (_match_expr == 105LL) {
			_case_begin_1a8d610e7:;
			{
				return static_cast<jule::I64>(25LL);
			}
		}
		else if (_match_expr == 74LL) {
			_case_begin_1a8d6116e:;
			{
				return static_cast<jule::I64>(26LL);
			}
		}
		else if (_match_expr == 39LL) {
			_case_begin_1a8d611e6:;
			{
				return static_cast<jule::I64>(27LL);
			}
		}
		else {
			_case_begin_1a8d5e9a8:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		_match_end_1a8d5ec50:;
	};
}



inline jule::I64 _1a43819a2_get_last_process_error(void) {
	jule::I64 _429_err = _1d4e264a0_get_last_errno();;
	{
		auto &_match_expr{ _429_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1a8d8c4db:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		else if (_match_expr == 40LL) {
			_case_begin_1a8d8be9c:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		else if (_match_expr == 36LL) {
			_case_begin_1a8d8c013:;
			{
				return static_cast<jule::I64>(2LL);
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1a8d8c079:;
			{
				return static_cast<jule::I64>(3LL);
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1a8d8c0e0:;
			{
				return static_cast<jule::I64>(4LL);
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1a8d8c255:;
			{
				return static_cast<jule::I64>(5LL);
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1a8d8c2bb:;
			{
				return static_cast<jule::I64>(6LL);
			}
		}
		else if (_match_expr == 26LL || _match_expr == 16LL) {
			_case_begin_1a8d8c332:;
			{
				return static_cast<jule::I64>(7LL);
			}
		}
		else if (_match_expr == 8LL) {
			_case_begin_1a8d8c398:;
			{
				return static_cast<jule::I64>(9LL);
			}
		}
		else if (_match_expr == 67LL) {
			_case_begin_1a8d8c40e:;
			{
				return static_cast<jule::I64>(10LL);
			}
		}
		else if (_match_expr == 7LL) {
			_case_begin_1a8d8c70b:;
			{
				return static_cast<jule::I64>(11LL);
			}
		}
		else {
			_case_begin_1a8d8b9d5:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		_match_end_1a8d8bc8d:;
	};
}



inline jule::Slice<char*> _1a4384a71_str_slice_to_cstr_slice(jule::Slice<jule::Str> _2028_s) {
	jule::Slice<char*> _2113_cs = jule::Slice<char*>::alloc(0LL,(_2028_s.len() + 1LL));;
	{
		auto &expr = _2028_s;
		auto it = expr.begin();
		_iter_begin_1a8d99817:;
		if (it != expr.end()) {
			jule::I64 _229_i = it - expr.begin();
			{
				_2113_cs = jule::alloc_for_append(_2113_cs,1);_2113_cs.__push(((char*)((&(_2028_s[_229_i][0LL])))));;
			}
			_iter_next_1a8d99817:;
			++it;
			_229_i++;
			goto _iter_begin_1a8d99817;
		}
		_iter_end_1a8d99817:;
	};
	_2113_cs = jule::alloc_for_append(_2113_cs,1);_2113_cs.__push(nullptr);;
	return _2113_cs;
}



inline jule::I64 _1a4384e5b_execvp(jule::Str _2911_file, jule::Slice<jule::Str> _2922_argv) {
	jule::Slice<char*> _309_cargv = _1a4384a71_str_slice_to_cstr_slice(_2922_argv);;
	{
		return static_cast<jule::I64>(execvp(((char*)((&(_2911_file[0LL])))), (char*const*)(&(_309_cargv[0LL]))));
	};
}



inline jule::I64 _1a4385346_execve(jule::Str _3611_file, jule::Slice<jule::Str> _3622_argv, jule::Slice<jule::Str> _3635_env) {
	jule::Slice<char*> _379_cargv = _1a4384a71_str_slice_to_cstr_slice(_3622_argv);;
	jule::Slice<char*> _389_cenv = _1a4384a71_str_slice_to_cstr_slice(_3635_env);;
	{
		return static_cast<jule::I64>(execve(((char*)((&(_3611_file[0LL])))), (char*const*)(&(_379_cargv[0LL])), (char*const*)((&(_389_cenv[0LL])))));
	};
}



inline void _1a4385eb2_exit(jule::I64 _1213_code) {
	_1d4e7e926_exit(_1213_code);
}



inline jule::Str _1a43861b0_executable(void) {
	return jule::executable();
}



inline jule::Bool _1a4327e54_is_std_header_path(jule::Str _2627_p) {
	return ((_2627_p[0LL] == '<') && (_2627_p[(_2627_p.len() - 1LL)] == '>'));
}



inline jule::Bool _1a4328240_is_valid_header_ext(jule::Str _3128_ext) {
	{
		auto &expr = _1a429ea79_CPP_HEADER_EXTS;
		auto it = expr.begin();
		_iter_begin_1a8dc8b54:;
		if (it != expr.end()) {
			jule::Str &_3212_valid_ext = *it;
			{
				if ((_3128_ext == _3212_valid_ext)) {
					return true;
				};
			}
			_iter_next_1a8dc8b54:;
			++it;
			goto _iter_begin_1a8dc8b54;
		}
		_iter_end_1a8dc8b54:;
	};
	return false;
}



inline jule::Bool _1a43284d7_is_valid_cpp_ext(jule::Str _4225_ext) {
	if ((_4225_ext == jule::Str(".c", 2))) {
		return true;
	};
	{
		auto &expr = _1a4326518_CPP_EXTS;
		auto it = expr.begin();
		_iter_begin_1a8dcb44d:;
		if (it != expr.end()) {
			jule::Str &_4712_e = *it;
			{
				if ((_4225_ext == _4712_e)) {
					return true;
				};
			}
			_iter_next_1a8dcb44d:;
			++it;
			goto _iter_begin_1a8dcb44d;
		}
		_iter_end_1a8dcb44d:;
	};
	{
		auto &expr = _1a42a06c3_OBJECTIVE_CPP_EXTS;
		auto it = expr.begin();
		_iter_begin_1a8dcbe87:;
		if (it != expr.end()) {
			jule::Str &_5312_e = *it;
			{
				if ((_4225_ext == _5312_e)) {
					return true;
				};
			}
			_iter_next_1a8dcbe87:;
			++it;
			goto _iter_begin_1a8dcbe87;
		}
		_iter_end_1a8dcbe87:;
	};
	return false;
}



inline jule::Str _1a4334e1c_logf(jule::Str _29113_fmt, jule::Slice<jule::Any> _29126_args) {
	return _1a4335835_apply_fmt(_29113_fmt,jule::Any(_29126_args));
}



inline jule::Str _1a4335208_arg_to_str(jule::Any _29515_arg) {
	{
		auto &_match_expr{ _29515_arg };
		
		if (_match_expr.type_is<jule::Str>()) {
			_case_begin_1a8dcd3ea:;
			{
				return _29515_arg.operator jule::Str();
			}
		}
		else if (_match_expr.type_is<jule::U8>()) {
			_case_begin_1a8dcd30c:;
			{
				return static_cast<jule::Str>(_29515_arg.operator jule::U8());
			}
		}
		else if (_match_expr.type_is<jule::I32>()) {
			_case_begin_1a8dcd373:;
			{
				return static_cast<jule::Str>(_29515_arg.operator jule::I32());
			}
		}
		else {
			_case_begin_1a8dcc262:;
			{
				return jule::Str("<fmt?>", 6);
			}
		}
		_match_end_1a8dcceee:;
	};
}



inline jule::I64 _1a43354a0_find_next_fmt(jule::Str _30818_fmt) {
	{
		auto &expr = _30818_fmt;
		auto it = expr.begin();
		_iter_begin_1a8dcd97d:;
		if (it != expr.end()) {
			jule::I64 _3099_i = it - expr.begin();
			jule::U8 &_30912_b = *it;
			{
				if ((_30912_b == '@')) {
					return _3099_i;
				};
			}
			_iter_next_1a8dcd97d:;
			++it;
			_3099_i++;
			goto _iter_begin_1a8dcd97d;
		}
		_iter_end_1a8dcd97d:;
	};
	return -1LL;
}



inline jule::Str _1a4335835_apply_fmt(jule::Str _31718_fmt, jule::Slice<jule::Any> _31728_args) {
	jule::Str _31813_s = jule::Str();;
	{
		auto &expr = _31728_args;
		auto it = expr.begin();
		_iter_begin_1a8dd0919:;
		if (it != expr.end()) {
			jule::Any &_32012_arg = *it;
			{
				jule::I64 _32113_i = _1a43354a0_find_next_fmt(_31718_fmt);;
				if ((_32113_i == -1LL)) {
					goto _iter_end_1a8dd0919;
				};
				_31813_s+=_31718_fmt.slice(0LL,_32113_i);
				_31813_s+=_1a4335208_arg_to_str(jule::Any(_32012_arg));
				(_31718_fmt).mut_slice((_32113_i + 1LL));;
			}
			_iter_next_1a8dd0919:;
			++it;
			goto _iter_begin_1a8dd0919;
		}
		_iter_end_1a8dd0919:;
	};
	_31813_s+=_31718_fmt;
	return _31813_s;
}



inline jule::Bool _1a4336825_is_top_directive(jule::Str _2825_directive) {
	return ((_2825_directive == jule::Str("pass", 4)) || (_2825_directive == jule::Str("build", 5)));
}



inline jule::Bool _1a4338261_is_windows(jule::Str _5119_os) {
	return (_5119_os == jule::Str("windows", 7));
}



inline jule::Bool _1a433854c_is_darwin(jule::Str _5418_os) {
	return (_5418_os == jule::Str("darwin", 6));
}



inline jule::Bool _1a43387e4_is_linux(jule::Str _5717_os) {
	return (_5717_os == jule::Str("linux", 5));
}



inline jule::Bool _1a4338ad0_is_i386(jule::Str _6016_arch) {
	return (_6016_arch == jule::Str("i386", 4));
}



inline jule::Bool _1a4338d77_is_amd64(jule::Str _6317_arch) {
	return (_6317_arch == jule::Str("amd64", 5));
}



inline jule::Bool _1a433911e_is_arm64(jule::Str _6617_arch) {
	return (_6617_arch == jule::Str("arm64", 5));
}



inline jule::Bool _1a43393b6_is_unix(jule::Str _6916_os) {
	return (_1a433854c_is_darwin(_6916_os) || _1a43387e4_is_linux(_6916_os));
}



inline jule::Bool _1a43396e6_is_32bit(jule::Str _7217_arch) {
	return _1a4338ad0_is_i386(_7217_arch);
}



inline jule::Bool _1a433998d_is_64bit(jule::Str _7517_arch) {
	return (_1a4338d77_is_amd64(_7517_arch) || _1a433911e_is_arm64(_7517_arch));
}



inline void _1a4375a2e_init(void) {
	jule::Str _2513_path = _1a43861b0_executable();;
	if (_2513_path.empty()) {
		jule::panic(jule::Str("std::jule::build: executable file cannot found", 46) + jule::Str("\nlocation: std/jule/build/env.jule:27:9"));;
	};
	jule::Str _309_pwd = ({
		auto except = _1d504db05_working_dir();
		(except.ok()) ? (except.result) : ({{
			jule::panic(jule::Str("std::jule::build: working directory path cannot found", 53) + jule::Str("\nlocation: std/jule/build/env.jule:31:9"));;
			return;;
		} jule::Str();});
	});;
	jule::Str _359_path_exec = _1a429b427_dir(_2513_path);;
	_2513_path=_1a429a811_join(jule::Slice<jule::Str>::make({_359_path_exec,jule::Str("..", 2)}));
	{
		_1a436ea06_PATH_WD=_309_pwd;
		_1a434776a_PATH_EXEC=_359_path_exec;
		_1a43483c5_PATH_STDLIB=_1a429a811_join(jule::Slice<jule::Str>::make({_2513_path,jule::Str("std", 3)}));
		_1a43815a6_PATH_API=_1a429a811_join(jule::Slice<jule::Str>::make({_1a434776a_PATH_EXEC,jule::Str("..", 2)}));
		_1a43815a6_PATH_API=_1a429a811_join(jule::Slice<jule::Str>::make({_1a43815a6_PATH_API,jule::Str("api", 3)}));
		_1a43815a6_PATH_API=_1a429a811_join(jule::Slice<jule::Str>::make({_1a43815a6_PATH_API,jule::Str("jule.hpp", 8)}));
	};
}



inline jule::Bool _1a5277ab7_is_unary_op(jule::Str _31320_kind) {
	{
		auto &expr = _1a51c3eec_UNARY_OPS;
		auto it = expr.begin();
		_iter_begin_1a8e210ca:;
		if (it != expr.end()) {
			jule::Str &_31412_op = *it;
			{
				if ((_31320_kind == _31412_op)) {
					return true;
				};
			}
			_iter_next_1a8e210ca:;
			++it;
			goto _iter_begin_1a8e210ca;
		}
		_iter_end_1a8e210ca:;
	};
	return false;
}



inline jule::Bool _1a5277da3_is_bin_op(jule::Str _32418_kind) {
	{
		auto &expr = _1a51c4272_BIN_OPS;
		auto it = expr.begin();
		_iter_begin_1a8e228e5:;
		if (it != expr.end()) {
			jule::Str &_32512_op = *it;
			{
				if ((_32418_kind == _32512_op)) {
					return true;
				};
			}
			_iter_next_1a8e228e5:;
			++it;
			goto _iter_begin_1a8e228e5;
		}
		_iter_end_1a8e228e5:;
	};
	return false;
}



inline jule::Bool _1a5278436_is_str(jule::Str _34615_k) {
	return ((!(_34615_k.empty())) && ((_34615_k[0LL] == '\"') || _1a52786cd_is_raw_str(_34615_k)));
}



inline jule::Bool _1a52786cd_is_raw_str(jule::Str _34919_k) {
	return ((!(_34919_k.empty())) && (_34919_k[0LL] == '`'));
}



inline jule::Bool _1a5278975_is_rune(jule::Str _35316_k) {
	return ((!(_35316_k.empty())) && (_35316_k[0LL] == '\''));
}



inline jule::Bool _1a527904c_is_bool(jule::Str _35916_k) {
	return ((_35916_k == jule::Str("true", 4)) || (_35916_k == jule::Str("false", 5)));
}



inline jule::Bool _1a52792e4_is_float(jule::Str _36217_k) {
	if (_1a4221d2b_has_prefix(_36217_k,jule::Str("0x", 2))) {
		return _1a429619c_contains_any(_36217_k,jule::Str(".pP", 3));
	};
	return _1a429619c_contains_any(_36217_k,jule::Str(".eE", 3));
}



inline jule::Bool _1a527958b_is_num(jule::Str _37015_k) {
	if (_37015_k.empty()) {
		return false;
	};
	jule::U8 _3759_b = _37015_k[0LL];;
	return ((_3759_b == '.') || (('0' <= _3759_b) && (_3759_b <= '9')));
}



inline jule::Bool _1a5279aca_is_ignore_ident(jule::Str _38524_ident) {
	return (_38524_ident == jule::Str("_", 1));
}



inline jule::Bool _1a5279d72_is_anon_ident(jule::Str _38822_ident) {
	return (_38822_ident == jule::Str("<anonymous>", 11));
}



inline jule::Bool _1a527a3b1_is_space(jule::I32 _40217_r) {
	{
		auto &expr = _1a51c3d43_SPACES;
		auto it = expr.begin();
		_iter_begin_1a8e2b778:;
		if (it != expr.end()) {
			jule::I32 &_40312_cr = *it;
			{
				if ((_40217_r == _40312_cr)) {
					return true;
				};
			}
			_iter_next_1a8e2b778:;
			++it;
			goto _iter_begin_1a8e2b778;
		}
		_iter_end_1a8e2b778:;
	};
	return false;
}



inline jule::Bool _1a527a779_is_letter(jule::I32 _41318_r) {
	return _1a4171550_is_letter(_41318_r);
}



inline jule::Bool _1a527acb8_is_decimal(jule::U8 _43519_b) {
	return (('0' <= _43519_b) && (_43519_b <= '9'));
}



inline jule::Bool _1a527b060_is_binary(jule::U8 _43818_b) {
	return ((_43818_b == '0') || (_43818_b == '1'));
}



inline jule::Bool _1a527b307_is_octal(jule::U8 _44117_b) {
	return (('0' <= _44117_b) && (_44117_b <= '7'));
}



inline jule::Bool _1a527b59e_is_hex(jule::U8 _44415_b) {
	{
		
		if ((('0' <= _44415_b) && (_44415_b <= '9'))) {
			_case_begin_1a8e312a5:;
			{
				return true;
			}
		}
		else if ((('a' <= _44415_b) && (_44415_b <= 'f'))) {
			_case_begin_1a8e31382:;
			{
				return true;
			}
		}
		else if ((('A' <= _44415_b) && (_44415_b <= 'F'))) {
			_case_begin_1a8e313e8:;
			{
				return true;
			}
		}
		else {
			_case_begin_1a8e30b89:;
			{
				return false;
			}
		}
		_match_end_1a8e2eaab:;
	};
}



inline jule::Bool _1a527b846_is_assign(jule::U64 _45918_id) {
	return (((((((_45918_id == static_cast<jule::U64>(2LLU)) || (_45918_id == static_cast<jule::U64>(31LLU))) || (_45918_id == static_cast<jule::U64>(34LLU))) || (_45918_id == static_cast<jule::U64>(20LLU))) || (_45918_id == static_cast<jule::U64>(28LLU))) || (_45918_id == static_cast<jule::U64>(3LLU))) || (_45918_id == static_cast<jule::U64>(7LLU)));
}



inline jule::Bool _1a527badd_is_postfix_op(jule::Str _47022_kind) {
	{
		auto &expr = _1a527194b_POSTFIX_OPS;
		auto it = expr.begin();
		_iter_begin_1a8e32be1:;
		if (it != expr.end()) {
			jule::Str &_47112_op = *it;
			{
				if ((_47022_kind == _47112_op)) {
					return true;
				};
			}
			_iter_next_1a8e32be1:;
			++it;
			goto _iter_begin_1a8e32be1;
		}
		_iter_end_1a8e32be1:;
	};
	return false;
}



inline jule::Bool _1a527bd85_is_assign_op(jule::Str _48121_kind) {
	if (_1a527badd_is_postfix_op(_48121_kind)) {
		return true;
	};
	{
		auto &expr = _1a5271bc1_ASSING_OPS;
		auto it = expr.begin();
		_iter_begin_1a8e3495c:;
		if (it != expr.end()) {
			jule::Str &_48612_op = *it;
			{
				if ((_48121_kind == _48612_op)) {
					return true;
				};
			}
			_iter_next_1a8e3495c:;
			++it;
			goto _iter_begin_1a8e3495c;
		}
		_iter_end_1a8e3495c:;
	};
	return false;
}



inline jule::Ptr<_1a527c76a_File> _1a527dc99_new_file_set(jule::Str _6321_path) {
	return jule::new_ptr<_1a527c76a_File>(_1a527c76a_File{._field_path=_6321_path, });
}



inline _1a43349cc_Log _1a52804c6_make_err(jule::I64 _11113_row, jule::I64 _11123_col, jule::Ptr<_1a527c76a_File>& _11134_f, jule::Str _11144_fmt, jule::Slice<jule::Any> _11157_args) {
	return _1a43349cc_Log{._field_kind=static_cast<jule::I64>(1LL), ._field_row=_11113_row, ._field_column=_11123_col, ._field_path=_11134_f.get()._field_path, ._field_text=_1a4334e1c_logf(_11144_fmt,jule::Any(_11157_args)), };
}



inline jule::Bool _1a528085b_bytes_has_prefix(jule::Slice<jule::U8>& _12122_bytes, jule::Str _12137_prefix) {
	if ((_12122_bytes.len() < _12137_prefix.len())) {
		return false;
	};
	{
		auto &expr = _12137_prefix;
		auto it = expr.begin();
		_iter_begin_1a8e8ae14:;
		if (it != expr.end()) {
			jule::I64 _1259_i = it - expr.begin();
			{
				if ((_12122_bytes[_1259_i] != _12137_prefix[_1259_i])) {
					return false;
				};
			}
			_iter_next_1a8e8ae14:;
			++it;
			_1259_i++;
			goto _iter_begin_1a8e8ae14;
		}
		_iter_end_1a8e8ae14:;
	};
	return true;
}



inline jule::Str _1a5280b9c_float_fmt_e(jule::Slice<jule::U8>& _13317_txt, jule::I64 _13334_i) {
	jule::Str _13344_lit = jule::Str();
	(_13334_i)++;
	if ((_13334_i >= _13317_txt.len())) {
		return _13344_lit;
	};
	jule::U8 _13913_b = _13317_txt[_13334_i];;
	if ((_13913_b == '_')) {
		return _13344_lit;
	};
	if (((_13913_b == '+') || (_13913_b == '-'))) {
		(_13334_i)++;
		if ((_13334_i >= _13317_txt.len())) {
			return _13344_lit;
		};
		if ((_13317_txt[_13334_i] == '_')) {
			return _13344_lit;
		};
	};
	jule::I64 _1539_first = _13334_i;;
	for (; (_13334_i < _13317_txt.len()); (_13334_i)++) {
		{
			_13913_b=_13317_txt[_13334_i];
			if (((_13913_b != '_') && (!(_1a527acb8_is_decimal(_13913_b))))) {
				goto _iter_end_1a8e8e313;
			};
		}
	_iter_next_1a8e8e313:;
	}
	_iter_end_1a8e8e313:;;
	if ((_13334_i == _1539_first)) {
		_13344_lit = jule::Str();
		return _13344_lit;
	};
	_13344_lit = static_cast<jule::Str>(_13317_txt.slice(0LL,_13334_i));
	return _13344_lit;
}



inline jule::Str _1a5281032_float_fmt_p(jule::Slice<jule::U8>& _16717_txt, jule::I64 _16730_i) {
	return _1a5280b9c_float_fmt_e(_16717_txt,_16730_i);
}



inline jule::Str _1a5281373_float_fmt_dotnp(jule::Slice<jule::U8>& _17121_txt, jule::I64 _17138_i) {
	if ((_17121_txt[_17138_i] != '.')) {
		return jule::Str();
	};
	(_17138_i)++;
	_julec_label_loop:;
	for (; (_17138_i < _17121_txt.len()); (_17138_i)++) {
		{
			jule::U8 _17913_b = _17121_txt[_17138_i];;
			{
				
				if ((_17913_b == '_') || _1a527acb8_is_decimal(_17913_b)) {
					_case_begin_1a8e92503:;
					{
						goto _iter_next_1a8e91997;
					}
				}
				else if (_1a5282aa0_is_float_fmt_p(_17913_b,_17138_i)) {
					_case_begin_1a8e9257a:;
					{
						return _1a5281032_float_fmt_p(_17121_txt,_17138_i);
					}
				}
				else {
					_case_begin_1a8e92459:;
					{
						goto _iter_end_1a8e91997;
					}
				}
				_match_end_1a8e923d2:;
			};
		}
	_iter_next_1a8e91997:;
	}
	_iter_end_1a8e91997:;;
	return jule::Str();
}



inline jule::Str _1a52816b4_float_fmt_dotfp(jule::Slice<jule::U8>& _19221_txt, jule::I64 _19238_i) {
	_19238_i+=2LL;
	return _1a5280b9c_float_fmt_e(_19221_txt,_19238_i);
}



inline jule::Str _1a5281a05_float_fmt_dotp(jule::Slice<jule::U8>& _19720_txt, jule::I64 _19737_i) {
	(_19737_i)++;
	return _1a5280b9c_float_fmt_e(_19720_txt,_19737_i);
}



inline jule::Str _1a5281dce_float_num(jule::Slice<jule::U8>& _20215_txt, jule::I64 _20232_i) {
	jule::Str _20242_lit = jule::Str();
	(_20232_i)++;
	if ((_20232_i >= _20215_txt.len())) {
		_20242_lit = static_cast<jule::Str>(_20215_txt);
		return _20242_lit;
	};
	if ((_20215_txt[_20232_i] == '_')) {
		(_20232_i)--;
		_20242_lit = static_cast<jule::Str>(_20215_txt.slice(0LL,_20232_i));
		return _20242_lit;
	};
	for (; (_20232_i < _20215_txt.len()); (_20232_i)++) {
		{
			jule::U8 _21213_b = _20215_txt[_20232_i];;
			if (((_20232_i > 1LL) && ((_21213_b == 'e') || (_21213_b == 'E')))) {
				_20242_lit = _1a5280b9c_float_fmt_e(_20215_txt,_20232_i);
				return _20242_lit;
			};
			if (((_21213_b != '_') && (!(_1a527acb8_is_decimal(_21213_b))))) {
				goto _iter_end_1a8e95acd;
			};
		}
	_iter_next_1a8e95acd:;
	}
	_iter_end_1a8e95acd:;;
	if ((_20232_i == 1LL)) {
		return _20242_lit;
	};
	_20242_lit = static_cast<jule::Str>(_20215_txt.slice(0LL,_20232_i));
	return _20242_lit;
}



inline jule::Str _1a5282176_common_num(jule::Slice<jule::U8>& _22716_txt) {
	jule::Str _22731_lit = jule::Str();
	jule::I64 _22813_i = 0LL;;
	_julec_label_loop:;
	for (; (_22813_i < _22716_txt.len()); (_22813_i)++) {
		{
			jule::U8 _23113_b = _22716_txt[_22813_i];;
			{
				
				if ((_23113_b == '.')) {
					_case_begin_1a8e996a3:;
					{
						_22731_lit = _1a5281dce_float_num(_22716_txt,_22813_i);
						return _22731_lit;
					}
				}
				else if ((_23113_b == '_')) {
					_case_begin_1a8e9972a:;
					{
						goto _iter_next_1a8e98ae2;
					}
				}
				else if (_1a528275e_is_float_fmt_e(_23113_b,_22813_i)) {
					_case_begin_1a8e997a2:;
					{
						_22731_lit = _1a5280b9c_float_fmt_e(_22716_txt,_22813_i);
						return _22731_lit;
					}
				}
				else if ((!(_1a527acb8_is_decimal(_23113_b)))) {
					_case_begin_1a8e99829:;
					{
						goto _iter_end_1a8e98ae2;
					}
				}
				_match_end_1a8e995c6:;
			};
		}
	_iter_next_1a8e98ae2:;
	}
	_iter_end_1a8e98ae2:;;
	if ((_22813_i == 0LL)) {
		return _22731_lit;
	};
	_22731_lit = static_cast<jule::Str>(_22716_txt.slice(0LL,_22813_i));
	return _22731_lit;
}



inline jule::Str _1a528241d_binary_num(jule::Slice<jule::U8>& _25016_txt) {
	jule::Str _25031_lit = jule::Str();
	if ((!(_1a528085b_bytes_has_prefix(_25016_txt,jule::Str("0b", 2))))) {
		_25031_lit = jule::Str();
		return _25031_lit;
	};
	if ((_25016_txt.len() < 2LL)) {
		return _25031_lit;
	};
	;
	jule::I64 _25913_i = 2LL;;
	for (; (_25913_i < _25016_txt.len()); (_25913_i)++) {
		{
			if (((_25016_txt[_25913_i] != '_') && (!(_1a527b060_is_binary(_25016_txt[_25913_i]))))) {
				goto _iter_end_1a8e9d07a;
			};
		}
	_iter_next_1a8e9d07a:;
	}
	_iter_end_1a8e9d07a:;;
	if ((_25913_i == 2LL)) {
		return _25031_lit;
	};
	_25031_lit = static_cast<jule::Str>(_25016_txt.slice(0LL,_25913_i));
	return _25031_lit;
}



inline jule::Bool _1a528275e_is_float_fmt_e(jule::U8 _27219_b, jule::I64 _27228_i) {
	return ((_27228_i > 0LL) && ((_27219_b == 'e') || (_27219_b == 'E')));
}



inline jule::Bool _1a5282aa0_is_float_fmt_p(jule::U8 _27619_b, jule::I64 _27628_i) {
	return ((_27628_i > 0LL) && ((_27619_b == 'p') || (_27619_b == 'P')));
}



inline jule::Bool _1a5282de1_is_float_fmt_dotnp(jule::Slice<jule::U8>& _28024_txt, jule::I64 _28041_i) {
	if ((_28024_txt[_28041_i] != '.')) {
		return false;
	};
	(_28041_i)++;
	_julec_label_loop:;
	for (; (_28041_i < _28024_txt.len()); (_28041_i)++) {
		{
			jule::U8 _28713_b = _28024_txt[_28041_i];;
			{
				
				if ((_28713_b == '_') || _1a527acb8_is_decimal(_28713_b)) {
					_case_begin_1a8ea2865:;
					{
						goto _iter_next_1a8e9e2ac;
					}
				}
				else if (_1a5282aa0_is_float_fmt_p(_28713_b,_28041_i)) {
					_case_begin_1a8ea28dc:;
					{
						return true;
					}
				}
				else {
					_case_begin_1a8ea27bb:;
					{
						goto _iter_end_1a8e9e2ac;
					}
				}
				_match_end_1a8ea2744:;
			};
		}
	_iter_next_1a8e9e2ac:;
	}
	_iter_end_1a8e9e2ac:;;
	return false;
}



inline jule::Bool _1a5283232_is_float_fmt_dotp(jule::Slice<jule::U8>& _30123_txt, jule::I64 _30136_i) {
	{
		
		if ((_30123_txt.len() < 3LL)) {
			_case_begin_1a8ea45e2:;
			{
				goto _case_begin_1a8ea46be;
			}
		}
		else if ((_30123_txt[_30136_i] != '.')) {
			_case_begin_1a8ea46be:;
			{
				goto _case_begin_1a8ea4735;
			}
		}
		else if (((_30123_txt[(_30136_i + 1LL)] != 'p') && (_30123_txt[(_30136_i + 1LL)] != 'P'))) {
			_case_begin_1a8ea4735:;
			{
				return false;
			}
		}
		else {
			_case_begin_1a8ea3ec6:;
			{
				return true;
			}
		}
		_match_end_1a8ea3e0a:;
	};
}



inline jule::Bool _1a5283573_is_float_fmt_dotfp(jule::Slice<jule::U8>& _31424_txt, jule::I64 _31437_i) {
	{
		
		if ((_31424_txt.len() < 4LL)) {
			_case_begin_1a8ea67e2:;
			{
				goto _case_begin_1a8ea68ad;
			}
		}
		else if ((_31424_txt[_31437_i] != '.')) {
			_case_begin_1a8ea68ad:;
			{
				goto _case_begin_1a8ea6924;
			}
		}
		else if (((_31424_txt[(_31437_i + 1LL)] != 'f') && (_31424_txt[(_31437_i + 1LL)] != 'F'))) {
			_case_begin_1a8ea6924:;
			{
				goto _case_begin_1a8ea6627;
			}
		}
		else if (((_31424_txt[(_31437_i + 2LL)] != 'p') && (_31424_txt[(_31437_i + 1LL)] != 'P'))) {
			_case_begin_1a8ea6627:;
			{
				return false;
			}
		}
		else {
			_case_begin_1a8ea5cb9:;
			{
				return true;
			}
		}
		_match_end_1a8ea5bed:;
	};
}



inline jule::Str _1a528393b_octal_num(jule::Slice<jule::U8>& _32915_txt) {
	jule::Str _32930_lit = jule::Str();
	if ((_32915_txt[0LL] != '0')) {
		_32930_lit = jule::Str();
		return _32930_lit;
	};
	if ((_32915_txt.len() < 2LL)) {
		return _32930_lit;
	};
	jule::I64 _33713_octal_start = 1LL;;
	jule::Bool _33913_o = false;;
	if ((_32915_txt[1LL] == 'o')) {
		if ((_32915_txt.len() < 3LL)) {
			return _32930_lit;
		};
		(_33713_octal_start)++;
		_33913_o=true;
	};
	jule::I64 _34813_i = _33713_octal_start;;
	for (; (_34813_i < _32915_txt.len()); (_34813_i)++) {
		{
			jule::U8 _35013_b = _32915_txt[_34813_i];;
			if ((_35013_b == '.')) {
				if (_33913_o) {
					_32930_lit = jule::Str();
					return _32930_lit;
				};
				_32930_lit = _1a5281dce_float_num(_32915_txt,_34813_i);
				return _32930_lit;
			};
			if (_1a528275e_is_float_fmt_e(_35013_b,_34813_i)) {
				_32930_lit = _1a5280b9c_float_fmt_e(_32915_txt,_34813_i);
				return _32930_lit;
			};
			if (((_35013_b != '_') && (!(_1a527b307_is_octal(_35013_b))))) {
				goto _iter_end_1a8eaacd0;
			};
		}
	_iter_next_1a8eaacd0:;
	}
	_iter_end_1a8eaacd0:;;
	if ((_34813_i == _33713_octal_start)) {
		return _32930_lit;
	};
	_32930_lit = static_cast<jule::Str>(_32915_txt.slice(0LL,_34813_i));
	return _32930_lit;
}



inline jule::Str _1a5283bd3_hex_num(jule::Slice<jule::U8>& _37113_txt) {
	jule::Str _37128_lit = jule::Str();
	if ((_37113_txt.len() < 3LL)) {
		return _37128_lit;
	};
	if (((_37113_txt[0LL] != '0') || ((_37113_txt[1LL] != 'x') && (_37113_txt[1LL] != 'X')))) {
		return _37128_lit;
	};
	;
	jule::I64 _38013_i = 2LL;;
	_julec_label_loop:;
	for (; (_38013_i < _37113_txt.len()); (_38013_i)++) {
		{
			jule::U8 _38313_b = _37113_txt[_38013_i];;
			{
				
				if (_1a5283232_is_float_fmt_dotp(_37113_txt,_38013_i)) {
					_case_begin_1a8eb1b82:;
					{
						_37128_lit = _1a5281a05_float_fmt_dotp(_37113_txt,_38013_i);
						return _37128_lit;
					}
				}
				else if (_1a5283573_is_float_fmt_dotfp(_37113_txt,_38013_i)) {
					_case_begin_1a8eb1c09:;
					{
						_37128_lit = _1a52816b4_float_fmt_dotfp(_37113_txt,_38013_i);
						return _37128_lit;
					}
				}
				else if (_1a5282aa0_is_float_fmt_p(_38313_b,_38013_i)) {
					_case_begin_1a8eb1c81:;
					{
						_37128_lit = _1a5281032_float_fmt_p(_37113_txt,_38013_i);
						return _37128_lit;
					}
				}
				else if (_1a5282de1_is_float_fmt_dotnp(_37113_txt,_38013_i)) {
					_case_begin_1a8eb1d08:;
					{
						_37128_lit = _1a5281373_float_fmt_dotnp(_37113_txt,_38013_i);
						return _37128_lit;
					}
				}
				else if (((_38313_b != '_') && (!(_1a527b59e_is_hex(_38313_b))))) {
					_case_begin_1a8eb1d80:;
					{
						goto _iter_end_1a8eb1115;
					}
				}
				_match_end_1a8eb1a83:;
			};
		}
	_iter_next_1a8eb1115:;
	}
	_iter_end_1a8eb1115:;;
	if ((_38013_i == 2LL)) {
		return _37128_lit;
	};
	_37128_lit = static_cast<jule::Str>(_37113_txt.slice(0LL,_38013_i));
	return _37128_lit;
}



inline jule::Str _1a5284024_hex_escape(jule::Slice<jule::U8>& _40416_txt, jule::I64 _40429_n) {
	jule::Str _40439_seq = jule::Str();
	if ((_40416_txt.len() < _40429_n)) {
		return _40439_seq;
	};
	;
	jule::I64 _41013_i = 2LL;;
	for (; (_41013_i < _40429_n); (_41013_i)++) {
		{
			if ((!(_1a527b59e_is_hex(_40416_txt[_41013_i])))) {
				return _40439_seq;
			};
		}
	_iter_next_1a8eb4b1e:;
	}
	_iter_end_1a8eb4b1e:;;
	_40439_seq=static_cast<jule::Str>(_40416_txt.slice(0LL,_40429_n));
	return _40439_seq;
}



inline jule::Str _1a52842dd_big_unicode_point_escape(jule::Slice<jule::U8>& _42230_txt) {
	return _1a5284024_hex_escape(_42230_txt,10LL);
}



inline jule::Str _1a52845b8_little_unicode_point_escape(jule::Slice<jule::U8>& _42733_txt) {
	return _1a5284024_hex_escape(_42733_txt,6LL);
}



inline jule::Str _1a5284871_hex_byte_escape(jule::Slice<jule::U8>& _43221_txt) {
	return _1a5284024_hex_escape(_43221_txt,4LL);
}



inline jule::Str _1a5284b18_byte_escape(jule::Slice<jule::U8>& _43717_txt) {
	jule::Str _43732_seq = jule::Str();
	if ((_43717_txt.len() < 4LL)) {
		return _43732_seq;
	};
	if ((((!(_1a527b307_is_octal(_43717_txt[1LL]))) || (!(_1a527b307_is_octal(_43717_txt[2LL])))) || (!(_1a527b307_is_octal(_43717_txt[3LL]))))) {
		return _43732_seq;
	};
	_43732_seq = static_cast<jule::Str>(_43717_txt.slice(0LL,4LL));
	return _43732_seq;
}



inline jule::Slice<_1a43349cc_Log> _1a5289612_lex(jule::Ptr<_1a527c76a_File> _83216_f, jule::I64 _83226_mode) {
	if ((_83216_f == nullptr)) {
		return nullptr;
	};
	_1a5285300_Lex _83713_lex = _1a5285300_Lex{._field_mode=_83226_mode, ._field_file=_83216_f, ._field_pos=0LL, ._field_row=-1LL, };;
	_1a5287d91_new_line(&_83713_lex);
	_1a5285d8e_lex(&_83713_lex);
	if ((_83713_lex._field_errors.len() > 0LL)) {
		return _83713_lex._field_errors;
	};
	_83216_f.get()._field_tokens=_83713_lex._field_tokens;
	return nullptr;
}



inline jule::I64 _1a7501811_leading_zeros64(jule::U64 _6124_x) {
	return static_cast<jule::I64>((64LL - _1a75088e5_len64(_6124_x)));
}



inline jule::I64 _1a75025c0_trailing_zeros(jule::U64 _8323_x) {
	;
	return static_cast<jule::I64>(_1a75031d6_trailing_zeros64(static_cast<jule::U64>(static_cast<jule::U64>(_8323_x))));
}



inline jule::I64 _1a7502e3e_trailing_zeros32(jule::U32 _10525_x) {
	if ((_10525_x == 0LLU)) {
		return 32LL;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_1a7501d83_DE_BRUIJN32_TAB[static_cast<jule::I64>((((_10525_x & (-(_10525_x))) * 125613361LLU) >> 27LLU))]));
}



inline jule::I64 _1a75031d6_trailing_zeros64(jule::U64 _11425_x) {
	if ((_11425_x == 0LLU)) {
		return 64LL;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_1a750236c_DE_BRUIJN64_TAB[static_cast<jule::I64>((((_11425_x & (-(_11425_x))) * 285870213051353865LLU) >> 58LLU))]));
}



inline jule::I64 _1a750864d_len32(jule::U32 _35218_x) {
	jule::I64 _35228_n = jule::I64();
	if ((_35218_x >= 65536LLU)) {
		_35218_x>>=16LLU;
		_35228_n=16LL;
	};
	if ((_35218_x >= 256LLU)) {
		_35218_x>>=8LLU;
		_35228_n+=8LL;
	};
	_35228_n = static_cast<jule::I64>((_35228_n + static_cast<jule::I64>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_35218_x)])));
	return _35228_n;
}



inline jule::I64 _1a75088e5_len64(jule::U64 _36618_x) {
	jule::I64 _36628_n = jule::I64();
	if ((_36618_x >= 4294967296LLU)) {
		_36618_x>>=32LLU;
		_36628_n=32LL;
	};
	if ((_36618_x >= 65536LLU)) {
		_36618_x>>=16LLU;
		_36628_n+=16LL;
	};
	if ((_36618_x >= 256LLU)) {
		_36618_x>>=8LLU;
		_36628_n+=8LL;
	};
	_36628_n = static_cast<jule::I64>((_36628_n + static_cast<jule::I64>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_36618_x)])));
	return _36628_n;
}



inline std::tuple<jule::U64,jule::U64> _1a75095a5_add64(jule::U64 _41514_x, jule::U64 _41522_y, jule::U64 _41530_carry) {
	jule::U64 _41544_sum = jule::U64();
	jule::U64 _41554_carryout = jule::U64();
	_41544_sum=static_cast<jule::U64>(((_41514_x + _41522_y) + _41530_carry));
	_41554_carryout=static_cast<jule::U64>((((_41514_x & _41522_y) | ((_41514_x | _41522_y) & (~(_41544_sum)))) >> 63LLU));
	return std::make_tuple(_41544_sum,_41554_carryout);
}



inline std::tuple<jule::U64,jule::U64> _1a750ac38_mul64(jule::U64 _49914_x, jule::U64 _49922_y) {
	jule::U64 _49932_hi = jule::U64();
	jule::U64 _49941_lo = jule::U64();
	;
	jule::U64 _5019_x0 = (_49914_x & 4294967295LLU);;
	jule::U64 _5029_x1 = (_49914_x >> 32LLU);;
	jule::U64 _5039_y0 = (_49922_y & 4294967295LLU);;
	jule::U64 _5049_y1 = (_49922_y >> 32LLU);;
	jule::U64 _5059_w0 = (_5019_x0 * _5039_y0);;
	jule::U64 _5069_t = ((_5029_x1 * _5039_y0) + (_5059_w0 >> 32LLU));;
	jule::U64 _50713_w1 = (_5069_t & 4294967295LLU);;
	jule::U64 _5089_w2 = (_5069_t >> 32LLU);;
	_50713_w1+=(_5019_x0 * _5049_y1);
	_49932_hi=static_cast<jule::U64>((((_5029_x1 * _5049_y1) + _5089_w2) + (_50713_w1 >> 32LLU)));
	_49941_lo=static_cast<jule::U64>((_49914_x * _49922_y));
	return std::make_tuple(_49932_hi,_49941_lo);
}



inline jule::U32 _1a741e025_f32_bits(jule::F32 _4117_f) {
	return (*(((jule::U32*)((&(_4117_f))))));
}



inline jule::F32 _1a741e311_f32_from_bits(jule::U32 _4722_b) {
	return (*(((jule::F32*)((&(_4722_b))))));
}



inline jule::U64 _1a741e5a8_f64_bits(jule::F64 _5217_f) {
	return (*(((jule::U64*)((&(_5217_f))))));
}



inline jule::F64 _1a741e894_f64_from_bits(jule::U64 _5822_b) {
	return (*(((jule::F64*)((&(_5822_b))))));
}



inline std::tuple<jule::F64,jule::I64> _1a7421b71_frexp(jule::F64 _4718_f) {
	jule::F64 _4728_frac = jule::F64();
	jule::I64 _4739_exp = jule::I64();
	{
		
		if ((_4718_f == 0LL)) {
			_case_begin_1a90e5546:;
			{
				_4728_frac = _4718_f;
				_4739_exp = 0LL;
				return std::make_tuple(_4728_frac,_4739_exp);
			}
		}
		else if (_1a748033e_is_inf(_4718_f,0LL) || _1a746d030_is_nan(_4718_f)) {
			_case_begin_1a90e55bd:;
			{
				_4728_frac = _4718_f;
				_4739_exp = 0LL;
				return std::make_tuple(_4728_frac,_4739_exp);
			}
		}
		_match_end_1a90e5447:;
	};
	std::tie(_4718_f,_4739_exp) = _1a74a5d9d_normalize(_4718_f);
	jule::U64 _5613_x = _1a741e5a8_f64_bits(_4718_f);;
	_4739_exp+=((static_cast<jule::I64>(((_5613_x >> 52LLU) & 2047LLU)) - 1023LL) + 1LL);
	_5613_x=static_cast<jule::U64>((_5613_x & 9227875636482146303LLU));
	_5613_x|=4602678819172646912LLU;
	_4728_frac=static_cast<jule::F64>(_1a741e894_f64_from_bits(_5613_x));
	return std::make_tuple(_4728_frac,_4739_exp);
}



inline jule::F64 _1a7494c6b_nan(void) {
	return static_cast<jule::F64>(_1a741e894_f64_from_bits(9221120237041090561LLU));
}



inline jule::Bool _1a746d030_is_nan(jule::F64 _5215_f) {
	return (_5215_f != _5215_f);
}



inline jule::F64 _1a746ea6a_inf(jule::I64 _6112_sign) {
	if ((_6112_sign >= 0LL)) {
		return static_cast<jule::F64>(_1a741e894_f64_from_bits(9218868437227405312LLU));
	};
	return static_cast<jule::F64>(_1a741e894_f64_from_bits(18442240474082181120LLU));
}



inline jule::Bool _1a748033e_is_inf(jule::F64 _7215_f, jule::I64 _7223_sign) {
	return (((_7223_sign >= 0LL) && (_7215_f > jule::MAX_F64)) || ((_7223_sign <= 0LL) && (_7215_f < jule::MIN_F64)));
}



inline std::tuple<jule::F64,jule::I64> _1a74a5d9d_normalize(jule::F64 _8214_x) {
	jule::F64 _8224_y = jule::F64();
	jule::I64 _8232_exp = jule::I64();
	;
	if ((_1a75101d2_abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		_8224_y = static_cast<jule::F64>((_8214_x * 4503599627370496LL));
		_8232_exp = -52LL;
		return std::make_tuple(_8224_y,_8232_exp);
	};
	_8224_y = _8214_x;
	_8232_exp = 0LL;
	return std::make_tuple(_8224_y,_8232_exp);
}



inline jule::F64 _1a750eb0a_log(jule::F64 _11112_x) {
	;
	;
	;
	;
	;
	;
	;
	;
	;
	{
		
		if (_1a746d030_is_nan(_11112_x) || _1a748033e_is_inf(_11112_x,1LL)) {
			_case_begin_1a91398cb:;
			{
				return _11112_x;
			}
		}
		else if ((_11112_x < 0LL)) {
			_case_begin_1a9139953:;
			{
				return static_cast<jule::F64>(_1a7494c6b_nan());
			}
		}
		else if ((_11112_x == 0LL)) {
			_case_begin_1a91399ca:;
			{
				return static_cast<jule::F64>(_1a746ea6a_inf(-1LL));
			}
		}
		_match_end_1a91397ee:;
	};
	jule::F64 _13314_f1;;
	jule::I64 _13322_ki;;
	std::tie(_13314_f1,_13322_ki) = _1a7421b71_frexp(_11112_x);
	if ((_13314_f1 < 0.7071067811865476)) {
		_13314_f1*=2LL;
		(_13322_ki)--;
	};
	jule::F64 _1389_f = (_13314_f1 - 1LL);;
	jule::F64 _1399_k = static_cast<jule::F64>(_13322_ki);;
	jule::F64 _1429_s = jule::div(_1389_f,(2LL + _1389_f));;
	jule::F64 _1439_s2 = (_1429_s * _1429_s);;
	jule::F64 _1449_s4 = (_1439_s2 * _1439_s2);;
	jule::F64 _1459_t1 = (_1439_s2 * (0.6666666666666735 + (_1449_s4 * (0.2857142874366239 + (_1449_s4 * (0.1818357216161805 + (_1449_s4 * 0.14798198605116586)))))));;
	jule::F64 _1469_t2 = (_1449_s4 * (0.3999999999940942 + (_1449_s4 * (0.22222198432149784 + (_1449_s4 * 0.15313837699209373)))));;
	jule::F64 _1479_R = (_1459_t1 + _1469_t2);;
	jule::F64 _1489_hfsq = ((0.5 * _1389_f) * _1389_f);;
	return static_cast<jule::F64>(((_1399_k * 0.6931471803691238) - ((_1489_hfsq - ((_1429_s * (_1489_hfsq + _1479_R)) + (_1399_k * 0.00000000019082149292705877))) - _1389_f)));
}



inline jule::F64 _1a75101d2_abs(jule::F64 _4312_x) {
	return static_cast<jule::F64>(_1a741e894_f64_from_bits(static_cast<jule::U64>((_1a741e5a8_f64_bits(_4312_x) & 9223372036854775807LLU))));
}



inline std::tuple<jule::F64,jule::F64> _1a75128dd_modf(jule::F64 _4413_f) {
	jule::F64 _4423_integer = jule::F64();
	jule::F64 _4437_frac = jule::F64();
	;
	jule::F64 _469_abs_f = _1a75101d2_abs(_4413_f);;
	jule::F64 _4713_i = 0LL;;
	if ((_469_abs_f > 4503599627370496LL)) {
		_4713_i=_4413_f;
	} else {
		_4713_i=static_cast<jule::F64>((_469_abs_f + 4503599627370496LL));
		_4713_i-=4503599627370496LL;
		while ((_4713_i > _469_abs_f)) {
			{
				(_4713_i)--;
			}
		_iter_next_1a91a3e84:;
		}
		_iter_end_1a91a3e84:;;
		if ((_4413_f < 0LL)) {
			_4713_i=static_cast<jule::F64>((-(_4713_i)));
		};
	};
	_4423_integer = _4713_i;
	_4437_frac = static_cast<jule::F64>((_4413_f - _4713_i));
	return std::make_tuple(_4423_integer,_4437_frac);
}



inline jule::F64 _1a7512e0a_log2(jule::F64 _4413_x) {
	jule::F64 _4510_frac;;
	jule::I64 _4516_exp;;
	std::tie(_4510_frac,_4516_exp) = _1a7421b71_frexp(_4413_x);
	if ((_4510_frac == 0.5)) {
		return static_cast<jule::F64>(static_cast<jule::F64>((_4516_exp - 1LL)));
	};
	return static_cast<jule::F64>(((_1a750eb0a_log(_4510_frac) * 1.4426950408889634) + static_cast<jule::F64>(_4516_exp)));
}



inline jule::Str _1a6d3c290_fmt_float(jule::F64 _7818_f, jule::U8 _7826_fmt, jule::I64 _7837_prec, jule::I64 _7848_bit_size) {
	return static_cast<jule::Str>(_1a6d611e8_generic_ftoa(jule::Slice<jule::U8>::alloc(0LL,_1a72b6791_max(static_cast<jule::I64>((_7837_prec + 4LL)),24LL)),_7818_f,_7826_fmt,_7837_prec,_7848_bit_size));
}



inline jule::Slice<jule::U8> _1a6d611e8_generic_ftoa(jule::Slice<jule::U8> _8221_dst, jule::F64 _8234_val, jule::U8 _8244_fmt, jule::I64 _8259_prec, jule::I64 _8270_bit_size) {
	jule::U64 _8313_bits = 0LLU;;
	jule::Ptr<_1a72b4cde_FloatInfo> _8413_flt = nullptr;;
	{
		auto &_match_expr{ _8270_bit_size };
		
		if (_match_expr == 32LL) {
			_case_begin_1a939c215:;
			{
				_8313_bits=static_cast<jule::U64>(static_cast<jule::U64>(_1a741e025_f32_bits(static_cast<jule::F32>(static_cast<jule::F32>(_8234_val)))));
				_8413_flt=((jule::Ptr<_1a72b4cde_FloatInfo>)((&(_1a6d119e5_F32_INFO))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1a939beb2:;
			{
				_8313_bits=static_cast<jule::U64>(_1a741e5a8_f64_bits(_8234_val));
				_8413_flt=((jule::Ptr<_1a72b4cde_FloatInfo>)((&(_1a6d26983_F64_INFO))));
			}
		}
		else {
			_case_begin_1a9395c36:;
			{
				jule::panic(jule::Str("std::conv: illegal bit_size", 27) + jule::Str("\nlocation: std/conv/ftoa.jule:93:9"));;
			}
		}
		_match_end_1a939bb0a:;
	};
	jule::Bool _969_neg = ((_8313_bits >> (_8413_flt.get()._field_expbits + _8413_flt.get()._field_mantbits)) != 0LLU);;
	jule::I64 _9713_exp = (static_cast<jule::I64>((_8313_bits >> _8413_flt.get()._field_mantbits)) & static_cast<jule::I64>(((1LL << _8413_flt.get()._field_expbits) - 1LL)));;
	jule::U64 _9813_mant = (_8313_bits & ((static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits) - 1LLU));;
	{
		auto &_match_expr{ _9713_exp };
		
		if (_match_expr == static_cast<jule::I64>(static_cast<jule::I64>(((1LL << _8413_flt.get()._field_expbits) - 1LL)))) {
			_case_begin_1a93a0c0d:;
			{
				{
					
					if ((_9813_mant != 0LLU)) {
						_case_begin_1a93a2b22:;
						{
							return jule::append(_8221_dst,jule::Slice<jule::U8>::make({'n','a','n'}));
						}
					}
					else if (_969_neg) {
						_case_begin_1a93a2d31:;
						{
							return jule::append(_8221_dst,jule::Slice<jule::U8>::make({'-','i','n','f'}));
						}
					}
					else {
						_case_begin_1a93a1a33:;
						{
							return jule::append(_8221_dst,jule::Slice<jule::U8>::make({'+','i','n','f'}));
						}
					}
					_match_end_1a93a1967:;
				};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1a93a0a21:;
			{
				(_9713_exp)++;
			}
		}
		else {
			_case_begin_1a939ed3e:;
			{
				_9813_mant|=(static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits);
			}
		}
		_match_end_1a93a05e2:;
	};
	_9713_exp+=_8413_flt.get()._field_bias;
	if ((_8244_fmt == 'b')) {
		return _1a706a6aa_fmt_b(_8221_dst,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	};
	if (((_8244_fmt == 'x') || (_8244_fmt == 'X'))) {
		return _1a70d9d45_fmt_x(_8221_dst,_8259_prec,_8244_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	};
	;
	_1a6d11bc1_DecimalSlice _13213_digs = _1a6d11bc1_DecimalSlice{};;
	jule::Bool _13313_ok = false;;
	jule::Bool _1359_shortest = (_8259_prec < 0LL);;
	if (_1359_shortest) {
		_13213_digs._field_d=jule::Slice<jule::U8>::alloc(32LL);
		_1a75366ae_ryu_ftoa_shortest(_13213_digs,_9813_mant,static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))),(*(_8413_flt)));
		_13313_ok=true;
		{
			auto &_match_expr{ _8244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1a93a7286:;
				{
					_8259_prec=static_cast<jule::I64>(_1a72b6791_max(static_cast<jule::I64>((_13213_digs._field_nd - 1LL)),0LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1a93a72ec:;
				{
					_8259_prec=static_cast<jule::I64>(_1a72b6791_max(static_cast<jule::I64>((_13213_digs._field_nd - _13213_digs._field_dp)),0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1a93a73a7:;
				{
					_8259_prec=_13213_digs._field_nd;
				}
			}
			_match_end_1a93a70ee:;
		};
	} else if ((_8244_fmt != 'f')) {
		jule::I64 _15217_digits = _8259_prec;;
		{
			auto &_match_expr{ _8244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1a93a980a:;
				{
					(_15217_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1a93a9871:;
				{
					if ((_8259_prec == 0LL)) {
						_8259_prec=1LL;
					};
					_15217_digits=_8259_prec;
				}
			}
			else {
				_case_begin_1a93a919a:;
				{
					_15217_digits=1LL;
				}
			}
			_match_end_1a93a9145:;
		};
		if (((_8270_bit_size == 32LL) && (_15217_digits <= 9LL))) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL);
			_1a70e658d_ryu_ftoa_fixed32(_13213_digs,static_cast<jule::U32>(static_cast<jule::U32>(_9813_mant)),static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))),_15217_digits);
			_13313_ok=true;
		} else if ((_15217_digits <= 18LL)) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL);
			_1a70e66c0_ryu_ftoa_fixed64(_13213_digs,_9813_mant,static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))),_15217_digits);
			_13313_ok=true;
		};
	};
	if ((!(_13313_ok))) {
		return _1a6d70449_big_ftoa(_8221_dst,_8259_prec,_8244_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	};
	return _1a6e02dc2_fmt_digits(_8221_dst,_1359_shortest,_969_neg,_13213_digs,_8259_prec,_8244_fmt);
}



inline jule::Slice<jule::U8> _1a6d70449_big_ftoa(jule::Slice<jule::U8> _18217_dst, jule::I64 _18234_prec, jule::U8 _18245_fmt, jule::Bool _18256_neg, jule::U64 _1835_mant, jule::I64 _18316_exp, _1a72b4cde_FloatInfo& _18327_flt) {
	_1a753776a_Decimal _18413_d = _1a753776a_Decimal{};;
	_1a7537957_assign(&_18413_d, _1835_mant);
	_1a7537a89_shift(&_18413_d, static_cast<jule::I64>((_18316_exp - static_cast<jule::I64>(_18327_flt._field_mantbits))));
	_1a6d11bc1_DecimalSlice _18713_digs = _1a6d11bc1_DecimalSlice{};;
	jule::Bool _1889_shortest = (_18234_prec < 0LL);;
	if (_1889_shortest) {
		_1a70035dd_round_shortest(_18413_d,_1835_mant,_18316_exp,_18327_flt);
		_18713_digs=_1a6d11bc1_DecimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp, };
		{
			auto &_match_expr{ _18245_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1a93b3380:;
				{
					_18234_prec=static_cast<jule::I64>((_18713_digs._field_nd - 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1a93b2406:;
				{
					_18234_prec=static_cast<jule::I64>(_1a72b6791_max(static_cast<jule::I64>((_18713_digs._field_nd - _18713_digs._field_dp)),0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1a93b3407:;
				{
					_18234_prec=_18713_digs._field_nd;
				}
			}
			_match_end_1a93b32a3:;
		};
	} else {
		{
			auto &_match_expr{ _18245_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1a93b21a3:;
				{
					_1a7537e30_round(&_18413_d, static_cast<jule::I64>((_18234_prec + 1LL)));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1a93b2219:;
				{
					_1a7537e30_round(&_18413_d, static_cast<jule::I64>((_18413_d._field_dp + _18234_prec)));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1a93b2280:;
				{
					if ((_18234_prec == 0LL)) {
						_18234_prec=1LL;
					};
					_1a7537e30_round(&_18413_d, _18234_prec);
				}
			}
			_match_end_1a93b4cdd:;
		};
		_18713_digs=_1a6d11bc1_DecimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp, };
	};
	return _1a6e02dc2_fmt_digits(_18217_dst,_1889_shortest,_18256_neg,_18713_digs,_18234_prec,_18245_fmt);
}



inline jule::Slice<jule::U8> _1a6e02dc2_fmt_digits(jule::Slice<jule::U8> _21919_dst, jule::Bool _21932_shortest, jule::Bool _21948_neg, _1a6d11bc1_DecimalSlice _2205_digs, jule::I64 _22029_prec, jule::U8 _22040_fmt) {
	{
		auto &_match_expr{ _22040_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_1a93b8a5b:;
			{
				return _1a70382c1_fmt_e(_21919_dst,_21948_neg,_2205_digs,_22029_prec,_22040_fmt);
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1a93b8ac2:;
			{
				return _1a703a081_fmt_f(_21919_dst,_21948_neg,_2205_digs,_22029_prec);
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_1a93b8b38:;
			{
				jule::I64 _22817_eprec = _22029_prec;;
				if (((_22817_eprec > _2205_digs._field_nd) && (_2205_digs._field_nd >= _2205_digs._field_dp))) {
					_22817_eprec=_2205_digs._field_nd;
				};
				if (_21932_shortest) {
					_22817_eprec=6LL;
				};
				jule::I64 _23813_exp = (_2205_digs._field_dp - 1LL);;
				if (((_23813_exp < -4LL) || (_23813_exp >= _22817_eprec))) {
					if ((_22029_prec > _2205_digs._field_nd)) {
						_22029_prec=_2205_digs._field_nd;
					};
					return _1a70382c1_fmt_e(_21919_dst,_21948_neg,_2205_digs,static_cast<jule::I64>((_22029_prec - 1LL)),static_cast<jule::U8>(((_22040_fmt + 'e') - 'g')));
				};
				if ((_22029_prec > _2205_digs._field_dp)) {
					_22029_prec=_2205_digs._field_nd;
				};
				return _1a703a081_fmt_f(_21919_dst,_21948_neg,_2205_digs,static_cast<jule::I64>(_1a72b6791_max(static_cast<jule::I64>((_22029_prec - _2205_digs._field_dp)),0LL)));
			}
		}
		_match_end_1a93b8a06:;
	};
	return jule::append(_21919_dst,jule::Slice<jule::U8>::make({'%',_22040_fmt}));
}



inline void _1a70035dd_round_shortest(_1a753776a_Decimal& _25724_d, jule::U64 _25736_mant, jule::I64 _25747_exp, _1a72b4cde_FloatInfo& _25758_flt) {
	if ((_25736_mant == 0LLU)) {
		_25724_d._field_nd=0LL;
		return;;
	};
	jule::I64 _2789_minexp = (_25758_flt._field_bias + 1LL);;
	if (((_25747_exp > _2789_minexp) && ((332LL * (_25724_d._field_dp - _25724_d._field_nd)) >= (100LL * (_25747_exp - static_cast<jule::I64>(_25758_flt._field_mantbits)))))) {
		return;;
	};
	_1a753776a_Decimal _28713_upper = _1a753776a_Decimal{};;
	_1a7537957_assign(&_28713_upper, static_cast<jule::U64>(((_25736_mant << 1LLU) + 1LLU)));
	_1a7537a89_shift(&_28713_upper, static_cast<jule::I64>(((_25747_exp - static_cast<jule::I64>(_25758_flt._field_mantbits)) - 1LL)));
	jule::U64 _29713_mantlo = 0LLU;;
	jule::I64 _29813_explo = 0LL;;
	if (((_25736_mant > (1LLU << _25758_flt._field_mantbits)) || (_25747_exp == _2789_minexp))) {
		_29713_mantlo=static_cast<jule::U64>((_25736_mant - 1LLU));
		_29813_explo=_25747_exp;
	} else {
		_29713_mantlo=static_cast<jule::U64>(((_25736_mant << 1LLU) - 1LLU));
		_29813_explo=static_cast<jule::I64>((_25747_exp - 1LL));
	};
	_1a753776a_Decimal _30613_lower = _1a753776a_Decimal{};;
	_1a7537957_assign(&_30613_lower, static_cast<jule::U64>(((_29713_mantlo << 1LLU) + 1LLU)));
	_1a7537a89_shift(&_30613_lower, static_cast<jule::I64>(((_29813_explo - static_cast<jule::I64>(_25758_flt._field_mantbits)) - 1LL)));
	jule::Bool _3139_inclusive = ((_25736_mant & 1LL) == 0LLU);;
	jule::U8 _32613_upperdelta = 0LLU;;
	jule::I64 _33013_ui = 0LL;;
	for (; ; (_33013_ui)++) {
		{
			jule::I64 _33513_mi = ((_33013_ui - _28713_upper._field_dp) + _25724_d._field_dp);;
			if ((_33513_mi >= _25724_d._field_nd)) {
				goto _iter_end_1a93c2b53;
			};
			jule::I64 _33913_li = ((_33013_ui - _28713_upper._field_dp) + _30613_lower._field_dp);;
			jule::U8 _34017_l = static_cast<jule::U8>(48LLU);;
			if (((_33913_li >= 0LL) && (_33913_li < _30613_lower._field_nd))) {
				_34017_l=_30613_lower._field_d[_33913_li];
			};
			jule::U8 _34417_m = static_cast<jule::U8>(48LLU);;
			if ((_33513_mi >= 0LL)) {
				_34417_m=_25724_d._field_d[_33513_mi];
			};
			jule::U8 _34817_u = static_cast<jule::U8>(48LLU);;
			if ((_33013_ui < _28713_upper._field_nd)) {
				_34817_u=_28713_upper._field_d[_33013_ui];
			};
			jule::Bool _35613_okdown = ((_34017_l != _34417_m) || (_3139_inclusive && ((_33913_li + 1LL) == _30613_lower._field_nd)));;
			{
				
				if (((_32613_upperdelta == 0LLU) && ((_34417_m + 1LLU) < _34817_u))) {
					_case_begin_1a93cb8e8:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				else if (((_32613_upperdelta == 0LLU) && (_34417_m != _34817_u))) {
					_case_begin_1a93cb970:;
					{
						_32613_upperdelta=1LLU;
					}
				}
				else if (((_32613_upperdelta == 1LLU) && ((_34417_m != '9') || (_34817_u != '0')))) {
					_case_begin_1a93cb9e7:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				_match_end_1a93cb82c:;
			};
			jule::Bool _37713_okup = ((_32613_upperdelta > 0LLU) && ((_3139_inclusive || (_32613_upperdelta > 1LLU)) || ((_33013_ui + 1LL) < _28713_upper._field_nd)));;
			{
				
				if ((_35613_okdown && _37713_okup)) {
					_case_begin_1a93ce951:;
					{
						_1a7537e30_round(&_25724_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_35613_okdown) {
					_case_begin_1a93ce9c8:;
					{
						_1a7537bbb_round_down(&_25724_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_37713_okup) {
					_case_begin_1a93cea50:;
					{
						_1a7537ced_round_up(&_25724_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				_match_end_1a93ce8a7:;
			};
		}
	_iter_next_1a93c2b53:;
	}
	_iter_end_1a93c2b53:;;
}



inline jule::Slice<jule::U8> _1a70382c1_fmt_e(jule::Slice<jule::U8> _39614_dst, jule::Bool _39627_neg, _1a6d11bc1_DecimalSlice _39638_d, jule::I64 _39655_prec, jule::U8 _39666_fmt) {
	if (_39627_neg) {
		_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push('-');;
	};
	jule::U8 _40313_ch = '0';;
	if ((_39638_d._field_nd != 0LL)) {
		_40313_ch=_39638_d._field_d[0LL];
	};
	_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push(_40313_ch);;
	if ((_39655_prec > 0LL)) {
		_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push('.');;
		jule::I64 _41217_i = 1LL;;
		jule::I64 _41313_m = _1a71a2bee_min(_39638_d._field_nd,static_cast<jule::I64>((_39655_prec + 1LL)));;
		if ((_41217_i < _41313_m)) {
			_39614_dst=jule::append(_39614_dst,_39638_d._field_d.slice(_41217_i,_41313_m));
			_41217_i=_41313_m;
		};
		for (; (_41217_i <= _39655_prec); (_41217_i)++) {
			{
				_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push('0');;
			}
		_iter_next_1a93d5308:;
		}
		_iter_end_1a93d5308:;;
	};
	_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push(_39666_fmt);;
	jule::I64 _42513_exp = (_39638_d._field_dp - 1LL);;
	if ((_39638_d._field_nd == 0LL)) {
		_42513_exp=0LL;
	};
	if ((_42513_exp < 0LL)) {
		_40313_ch='-';
		_42513_exp=static_cast<jule::I64>((-(_42513_exp)));
	} else {
		_40313_ch='+';
	};
	_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push(_40313_ch);;
	{
		
		if ((_42513_exp < 10LL)) {
			_case_begin_1a93d7470:;
			{
				_39614_dst = jule::alloc_for_append(_39614_dst,2);_39614_dst.__push('0');_39614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(_42513_exp) + '0')));;
			}
		}
		else if ((_42513_exp < 100LL)) {
			_case_begin_1a93d74d6:;
			{
				_39614_dst = jule::alloc_for_append(_39614_dst,2);_39614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 10LL)) + '0')));_39614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0')));;
			}
		}
		else {
			_case_begin_1a93d7b46:;
			{
				_39614_dst = jule::alloc_for_append(_39614_dst,3);_39614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 100LL)) + '0')));_39614_dst.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_42513_exp / 10LL)) % 10LL) + '0')));_39614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0')));;
			}
		}
		_match_end_1a93d6c77:;
	};
	return _39614_dst;
}



inline jule::Slice<jule::U8> _1a703a081_fmt_f(jule::Slice<jule::U8> _45114_dst, jule::Bool _45127_neg, _1a6d11bc1_DecimalSlice _45138_d, jule::I64 _45155_prec) {
	if (_45127_neg) {
		_45114_dst = jule::alloc_for_append(_45114_dst,1);_45114_dst.__push('-');;
	};
	if ((_45138_d._field_dp > 0LL)) {
		jule::I64 _45917_m = _1a71a2bee_min(_45138_d._field_nd,_45138_d._field_dp);;
		_45114_dst=jule::append(_45114_dst,_45138_d._field_d.slice(0LL,_45917_m));
		for (; (_45917_m < _45138_d._field_dp); (_45917_m)++) {
			{
				_45114_dst = jule::alloc_for_append(_45114_dst,1);_45114_dst.__push('0');;
			}
		_iter_next_1a93dc7a5:;
		}
		_iter_end_1a93dc7a5:;;
	} else {
		_45114_dst = jule::alloc_for_append(_45114_dst,1);_45114_dst.__push('0');;
	};
	if ((_45155_prec > 0LL)) {
		_45114_dst = jule::alloc_for_append(_45114_dst,1);_45114_dst.__push('.');;
		jule::I64 _47017_i = 0LL;;
		for (; (_47017_i < _45155_prec); (_47017_i)++) {
			{
				jule::U8 _47221_ch = static_cast<jule::U8>(48LLU);;
				jule::I64 _47317_j = (_45138_d._field_dp + _47017_i);;
				if (((0LL <= _47317_j) && (_47317_j < _45138_d._field_nd))) {
					_47221_ch=_45138_d._field_d[_47317_j];
				};
				_45114_dst = jule::alloc_for_append(_45114_dst,1);_45114_dst.__push(_47221_ch);;
			}
		_iter_next_1a93dd71d:;
		}
		_iter_end_1a93dd71d:;;
	};
	return _45114_dst;
}



inline jule::Slice<jule::U8> _1a706a6aa_fmt_b(jule::Slice<jule::U8> _48414_dst, jule::Bool _48427_neg, jule::U64 _48438_mant, jule::I64 _48453_exp, _1a72b4cde_FloatInfo& _48464_flt) {
	if (_48427_neg) {
		_48414_dst = jule::alloc_for_append(_48414_dst,1);_48414_dst.__push('-');;
	};
	std::tie(_48414_dst,std::ignore) = _1a7539195_fmt_bits(_48414_dst,_48438_mant,10LL,false,true);
	_48414_dst = jule::alloc_for_append(_48414_dst,1);_48414_dst.__push('p');;
	_48453_exp-=static_cast<jule::I64>(_48464_flt._field_mantbits);
	if ((_48453_exp >= 0LL)) {
		_48414_dst = jule::alloc_for_append(_48414_dst,1);_48414_dst.__push('+');;
	};
	std::tie(_48414_dst,std::ignore) = _1a7539195_fmt_bits(_48414_dst,static_cast<jule::U64>(static_cast<jule::U64>(_48453_exp)),10LL,(_48453_exp < 0LL),true);
	return _48414_dst;
}



inline jule::Slice<jule::U8> _1a70d9d45_fmt_x(jule::Slice<jule::U8> _50614_dst, jule::I64 _50627_prec, jule::U8 _50638_fmt, jule::Bool _50649_neg, jule::U64 _5079_mant, jule::I64 _50724_exp, _1a72b4cde_FloatInfo& _50735_flt) {
	if ((_5079_mant == 0LLU)) {
		_50724_exp=0LL;
	};
	_5079_mant<<=(60LLU - _50735_flt._field_mantbits);
	while (((_5079_mant != 0LLU) && ((_5079_mant & 1152921504606846976LLU) == 0LLU))) {
		{
			_5079_mant<<=1LLU;
			(_50724_exp)--;
		}
	_iter_next_1a93e424b:;
	}
	_iter_end_1a93e424b:;;
	if (((_50627_prec >= 0LL) && (_50627_prec < 15LL))) {
		jule::U64 _52113_shift = static_cast<jule::U64>((_50627_prec << 2LLU));;
		jule::U64 _52213_extra = ((_5079_mant << _52113_shift) & 1152921504606846975LLU);;
		_5079_mant>>=(60LLU - _52113_shift);
		if (((_52213_extra | (_5079_mant & 1LLU)) > 576460752303423488LLU)) {
			(_5079_mant)++;
		};
		_5079_mant<<=(60LLU - _52113_shift);
		if (((_5079_mant & 2305843009213693952LLU) != 0LLU)) {
			_5079_mant>>=1LLU;
			(_50724_exp)++;
		};
	};
	jule::Str _53513_hex = jule::Str();;
	if ((_50638_fmt == 'X')) {
		_53513_hex=jule::Str("0123456789ABCDEF", 16);
	} else {
		_53513_hex=jule::Str("0123456789abcdef", 16);
	};
	if (_50649_neg) {
		_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push('-');;
	};
	_50614_dst = jule::alloc_for_append(_50614_dst,3);_50614_dst.__push('0');_50614_dst.__push(_50638_fmt);_50614_dst.__push(static_cast<jule::U8>(('0' + static_cast<jule::U8>(((_5079_mant >> 60LLU) & 1LLU)))));;
	_5079_mant<<=4LLU;
	if (((_50627_prec < 0LL) && (_5079_mant != 0LLU))) {
		_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push('.');;
		while ((_5079_mant != 0LLU)) {
			{
				_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push(_53513_hex[static_cast<jule::I64>(((_5079_mant >> 60LLU) & 15LLU))]);;
				_5079_mant<<=4LLU;
			}
		_iter_next_1a93e9e88:;
		}
		_iter_end_1a93e9e88:;;
	} else if ((_50627_prec > 0LL)) {
		_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push('.');;
		jule::I64 _55817_i = 0LL;;
		for (; (_55817_i < _50627_prec); (_55817_i)++) {
			{
				_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push(_53513_hex[static_cast<jule::I64>(((_5079_mant >> 60LLU) & 15LLU))]);;
				_5079_mant<<=4LLU;
			}
		_iter_next_1a93eb41d:;
		}
		_iter_end_1a93eb41d:;;
	};
	jule::U8 _56613_ch = static_cast<jule::U8>(80LLU);;
	if ((_50638_fmt == _1a7306b99_lower(_50638_fmt))) {
		_56613_ch='p';
	};
	_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push(_56613_ch);;
	if ((_50724_exp < 0LL)) {
		_56613_ch='-';
		_50724_exp=static_cast<jule::I64>((-(_50724_exp)));
	} else {
		_56613_ch='+';
	};
	_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push(_56613_ch);;
	{
		
		if ((_50724_exp < 100LL)) {
			_case_begin_1a940109e:;
			{
				_50614_dst = jule::alloc_for_append(_50614_dst,2);_50614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 10LL)) + '0')));_50614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		else if ((_50724_exp < 1000LL)) {
			_case_begin_1a93e8409:;
			{
				_50614_dst = jule::alloc_for_append(_50614_dst,3);_50614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 100LL)) + '0')));_50614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0')));_50614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		else {
			_case_begin_1a93e8393:;
			{
				_50614_dst = jule::alloc_for_append(_50614_dst,4);_50614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 1000LL)) + '0')));_50614_dst.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_50724_exp / 100LL)) % 10LL) + '0')));_50614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0')));_50614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		_match_end_1a93ecd6a:;
	};
	return _50614_dst;
}



inline jule::I64 _1a71a2bee_min(jule::I64 _5918_a, jule::I64 _59116_b) {
	if ((_5918_a < _59116_b)) {
		return _5918_a;
	};
	return _59116_b;
}



inline jule::I64 _1a72b6791_max(jule::I64 _5988_a, jule::I64 _59816_b) {
	if ((_5988_a > _59816_b)) {
		return _5988_a;
	};
	return _59816_b;
}



inline jule::U8 _1a7306b99_lower(jule::U8 _4710_c) {
	return static_cast<jule::U8>((_4710_c | ('x' - 'X')));
}



inline std::tuple<jule::U64,jule::I64> _1a7403647___parse_uint(jule::Str _5121_s, jule::I64 _5133_base, jule::I64 _5148_bit_size) {
	if (_5121_s.empty()) {
		return std::make_tuple(0LLU,static_cast<jule::I64>(2LL));
	};
	{
		
		if (((2LL <= _5133_base) && (_5133_base <= 36LL))) {
			_case_begin_1a9405b42:;
		}
		else if ((_5133_base == 0LL)) {
			_case_begin_1a9405a10:;
			{
				_5133_base=10LL;
				if ((_5121_s[0LL] == '0')) {
					{
						
						if (((_5121_s.len() >= 3LL) && (_1a7306b99_lower(_5121_s[1LL]) == 'b'))) {
							_case_begin_1a94075d3:;
							{
								_5133_base=2LL;
								(_5121_s).mut_slice(2LL);;
							}
						}
						else if (((_5121_s.len() >= 3LL) && (_1a7306b99_lower(_5121_s[1LL]) == 'o'))) {
							_case_begin_1a9407649:;
							{
								_5133_base=8LL;
								(_5121_s).mut_slice(2LL);;
							}
						}
						else if (((_5121_s.len() >= 3LL) && (_1a7306b99_lower(_5121_s[1LL]) == 'x'))) {
							_case_begin_1a94072c5:;
							{
								_5133_base=16LL;
								(_5121_s).mut_slice(2LL);;
							}
						}
						else {
							_case_begin_1a940725e:;
							{
								_5133_base=8LL;
								(_5121_s).mut_slice(1LL);;
							}
						}
						_match_end_1a9407193:;
					};
				};
			}
		}
		else {
			_case_begin_1a9404ca6:;
			{
				return std::make_tuple(0LLU,static_cast<jule::I64>(3LL));
			}
		}
		_match_end_1a9404c51:;
	};
	if ((_5148_bit_size == 0LL)) {
		_5148_bit_size=64LL;
	} else if (((_5148_bit_size < 0LL) || (_5148_bit_size > 64LL))) {
		return std::make_tuple(0LLU,static_cast<jule::I64>(4LL));
	};
	jule::U64 _9013_cutoff = 0LLU;;
	{
		auto &_match_expr{ _5133_base };
		
		if (_match_expr == 10LL) {
			_case_begin_1a940c30d:;
			{
				_9013_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1a940c110:;
			{
				_9013_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_1a940ba27:;
			{
				_9013_cutoff=static_cast<jule::U64>((jule::div(jule::MAX_U64,static_cast<jule::U64>(_5133_base)) + 1LLU));
			}
		}
		_match_end_1a940bd79:;
	};
	jule::U64 _10013_max_val = 0LLU;;
	{
		auto &_match_expr{ _5148_bit_size };
		
		if (_match_expr == 32LL) {
			_case_begin_1a940ce57:;
			{
				_10013_max_val=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1a940d397:;
			{
				_10013_max_val=jule::MAX_U64;
			}
		}
		_match_end_1a940c808:;
	};
	jule::U64 _10813_n = 0LLU;;
	{
		auto &expr = _5121_s;
		auto it = expr.begin();
		_iter_begin_1a940e310:;
		if (it != expr.end()) {
			jule::U8 _10912_c = *it;
			{
				jule::U8 _11017_d = 0LLU;;
				{
					
					if ((('0' <= _10912_c) && (_10912_c <= '9'))) {
						_case_begin_1a94105ca:;
						{
							_11017_d=static_cast<jule::U8>((_10912_c - '0'));
						}
					}
					else if ((('a' <= _1a7306b99_lower(_10912_c)) && (_1a7306b99_lower(_10912_c) <= 'z'))) {
						_case_begin_1a9410498:;
						{
							_11017_d=static_cast<jule::U8>(((_1a7306b99_lower(_10912_c) - 'a') + 10LLU));
						}
					}
					else if ((_10912_c == '_')) {
						_case_begin_1a941050e:;
						{
							goto _iter_next_1a940e310;
						}
					}
					else {
						_case_begin_1a9410036:;
						{
							return std::make_tuple(0LLU,static_cast<jule::I64>(2LL));
						}
					}
					_match_end_1a940eeae:;
				};
				if ((_11017_d >= static_cast<jule::U8>(_5133_base))) {
					return std::make_tuple(0LLU,static_cast<jule::I64>(2LL));
				};
				if ((_10813_n >= _9013_cutoff)) {
					return std::make_tuple(_10013_max_val,static_cast<jule::I64>(1LL));
				};
				_10813_n*=static_cast<jule::U64>(_5133_base);
				jule::U64 _13213_n1 = (_10813_n + static_cast<jule::U64>(_11017_d));;
				if (((_13213_n1 < _10813_n) || (_13213_n1 > _10013_max_val))) {
					return std::make_tuple(_10013_max_val,static_cast<jule::I64>(1LL));
				};
				_10813_n=_13213_n1;
			}
			_iter_next_1a940e310:;
			++it;
			goto _iter_begin_1a940e310;
		}
		_iter_end_1a940e310:;
	};
	return std::make_tuple(_10813_n,static_cast<jule::I64>(0LL));
}



inline jule::Exceptional<jule::U64> _1a6dbe0e1_parse_uint(jule::Str _14623_s, jule::I64 _14635_base, jule::I64 _14650_bit_size) {
	jule::U64 _14710_un;;
	jule::I64 _14714_err;;
	std::tie(_14710_un,_14714_err) = _1a7403647___parse_uint(_14623_s,_14635_base,_14650_bit_size);
	if ((_14714_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::U64>(_14714_err);
	};
	return jule::Exceptional<jule::U64>(jule::Any(),_14710_un);
}



inline jule::Exceptional<jule::I64> _1a6e009a2_parse_int(jule::Str _17222_s, jule::I64 _17230_base, jule::I64 _17245_bit_size) {
	if (_17222_s.empty()) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(2LL));
	};
	jule::Bool _17813_neg = false;;
	if ((_17222_s[0LL] == '+')) {
		(_17222_s).mut_slice(1LL);;
	} else if ((_17222_s[0LL] == '-')) {
		_17813_neg=true;
		(_17222_s).mut_slice(1LL);;
	};
	jule::U64 _18714_un;;
	jule::I64 _18718_err;;
	std::tie(_18714_un,_18718_err) = _1a7403647___parse_uint(_17222_s,_17230_base,_17245_bit_size);
	if (((_18718_err != static_cast<jule::I64>(0LL)) && (_18718_err != static_cast<jule::I64>(1LL)))) {
		return jule::Exceptional<jule::I64>(_18718_err);
	};
	if ((_17245_bit_size == 0LL)) {
		_17245_bit_size=64LL;
	};
	jule::U64 _1969_cutoff = static_cast<jule::U64>((1LL << static_cast<jule::U64>((_17245_bit_size - 1LL))));;
	if (((!(_17813_neg)) && (_18714_un >= _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(1LL));
	};
	if ((_17813_neg && (_18714_un > _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(1LL));
	};
	jule::I64 _20313_n = static_cast<jule::I64>(_18714_un);;
	if (_17813_neg) {
		_20313_n=static_cast<jule::I64>((-(_20313_n)));
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_20313_n);
}



inline std::tuple<jule::F64,jule::Bool> _1a7306858_eisel_lemire64(jule::U64 _4123_man, jule::I64 _4133_exp10, jule::Bool _4145_neg) {
	jule::F64 _4158_f = jule::F64();
	jule::Bool _4166_ok = jule::Bool();
	if ((_4123_man == 0LLU)) {
		if (_4145_neg) {
			_4158_f=static_cast<jule::F64>(_1a741e894_f64_from_bits(9223372036854775808LLU));
		};
		_4166_ok = true;
		return std::make_tuple(_4158_f,_4166_ok);
	};
	if (((_4133_exp10 < -348LL) || (347LL < _4133_exp10))) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	};
	jule::I64 _579_clz = _1a7501811_leading_zeros64(_4123_man);;
	_4123_man<<=static_cast<jule::U64>(_579_clz);
	;
	jule::U64 _6013_ret_exp2 = (static_cast<jule::U64>(((((217706LL * _4133_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(_579_clz));;
	jule::U64 _6314_x_hi;;
	jule::U64 _6324_x_lo;;
	std::tie(_6314_x_hi,_6324_x_lo) = _1a750ac38_mul64(_4123_man,_1a6d9c18a_DETAILED_POWS_OF_TEN[(_4133_exp10 - -348LL)][1LL]);
	if ((((_6314_x_hi & 511LLU) == 511LLU) && ((_6324_x_lo + _4123_man) < _4123_man))) {
		jule::U64 _6714_y_hi;;
		jule::U64 _6720_y_lo;;
		std::tie(_6714_y_hi,_6720_y_lo) = _1a750ac38_mul64(_4123_man,_1a6d9c18a_DETAILED_POWS_OF_TEN[(_4133_exp10 - -348LL)][0LL]);
		jule::U64 _6818_merged_hi = _6314_x_hi;;
		jule::U64 _6829_merged_lo = (_6324_x_lo + _6714_y_hi);;
		std::tie(_6818_merged_hi,_6829_merged_lo) = std::make_tuple(_6314_x_hi,(_6324_x_lo + _6714_y_hi));
		if ((_6829_merged_lo < _6324_x_lo)) {
			(_6818_merged_hi)++;
		};
		if (((((_6818_merged_hi & 511LLU) == 511LLU) && ((_6829_merged_lo + 1LLU) == 0LLU)) && ((_6720_y_lo + _4123_man) < _4123_man))) {
			_4158_f = 0LL;
			_4166_ok = false;
			return std::make_tuple(_4158_f,_4166_ok);
		};
		std::tie(_6314_x_hi,_6324_x_lo) = std::make_tuple(_6818_merged_hi,_6829_merged_lo);
	};
	jule::U64 _799_msb = (_6314_x_hi >> 63LLU);;
	jule::U64 _8013_ret_mantissa = (_6314_x_hi >> (_799_msb + 9LLU));;
	_6013_ret_exp2-=(1LLU ^ _799_msb);
	if ((((_6324_x_lo == 0LLU) && ((_6314_x_hi & 511LLU) == 0LLU)) && ((_8013_ret_mantissa & 3LLU) == 1LLU))) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	};
	_8013_ret_mantissa+=(_8013_ret_mantissa & 1LLU);
	_8013_ret_mantissa>>=1LLU;
	if (((_8013_ret_mantissa >> 53LLU) > 0LLU)) {
		_8013_ret_mantissa>>=1LLU;
		_6013_ret_exp2+=1LLU;
	};
	if (((_6013_ret_exp2 - 1LLU) >= 2046LLU)) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	};
	jule::U64 _10313_ret_bits = ((_6013_ret_exp2 << 52LLU) | (_8013_ret_mantissa & 4503599627370495LLU));;
	if (_4145_neg) {
		_10313_ret_bits|=9223372036854775808LLU;
	};
	_4158_f = static_cast<jule::F64>(_1a741e894_f64_from_bits(_10313_ret_bits));
	_4166_ok = true;
	return std::make_tuple(_4158_f,_4166_ok);
}



inline std::tuple<jule::F32,jule::Bool> _1a6e38db4_eisel_lemire32(jule::U64 _11023_man, jule::I64 _11033_exp10, jule::Bool _11045_neg) {
	jule::F32 _11058_f = jule::F32();
	jule::Bool _11066_ok = jule::Bool();
	if ((_11023_man == 0LLU)) {
		if (_11045_neg) {
			_11058_f=static_cast<jule::F32>(_1a741e311_f32_from_bits(2147483648LLU));
		};
		_11066_ok = true;
		return std::make_tuple(_11058_f,_11066_ok);
	};
	if (((_11033_exp10 < -348LL) || (347LL < _11033_exp10))) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	};
	jule::I64 _1329_clz = _1a7501811_leading_zeros64(_11023_man);;
	_11023_man<<=static_cast<jule::U64>(_1329_clz);
	;
	jule::U64 _13513_ret_exp2 = (static_cast<jule::U64>(((((217706LL * _11033_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(_1329_clz));;
	jule::U64 _13814_x_hi;;
	jule::U64 _13824_x_lo;;
	std::tie(_13814_x_hi,_13824_x_lo) = _1a750ac38_mul64(_11023_man,_1a6d9c18a_DETAILED_POWS_OF_TEN[(_11033_exp10 - -348LL)][1LL]);
	if ((((_13814_x_hi & 274877906943LLU) == 274877906943LLU) && ((_13824_x_lo + _11023_man) < _11023_man))) {
		jule::U64 _14214_y_hi;;
		jule::U64 _14220_y_lo;;
		std::tie(_14214_y_hi,_14220_y_lo) = _1a750ac38_mul64(_11023_man,_1a6d9c18a_DETAILED_POWS_OF_TEN[(_11033_exp10 - -348LL)][0LL]);
		jule::U64 _14318_merged_hi = _13814_x_hi;;
		jule::U64 _14329_merged_lo = (_13824_x_lo + _14214_y_hi);;
		std::tie(_14318_merged_hi,_14329_merged_lo) = std::make_tuple(_13814_x_hi,(_13824_x_lo + _14214_y_hi));
		if ((_14329_merged_lo < _13824_x_lo)) {
			(_14318_merged_hi)++;
		};
		if (((((_14318_merged_hi & 274877906943LLU) == 274877906943LLU) && ((_14329_merged_lo + 1LLU) == 0LLU)) && ((_14220_y_lo + _11023_man) < _11023_man))) {
			_11058_f = 0LL;
			_11066_ok = false;
			return std::make_tuple(_11058_f,_11066_ok);
		};
		std::tie(_13814_x_hi,_13824_x_lo) = std::make_tuple(_14318_merged_hi,_14329_merged_lo);
	};
	jule::U64 _1549_msb = (_13814_x_hi >> 63LLU);;
	jule::U64 _15513_ret_mantissa = (_13814_x_hi >> (_1549_msb + 38LLU));;
	_13513_ret_exp2-=(1LLU ^ _1549_msb);
	if ((((_13824_x_lo == 0LLU) && ((_13814_x_hi & 274877906943LLU) == 0LLU)) && ((_15513_ret_mantissa & 3LLU) == 1LLU))) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	};
	_15513_ret_mantissa+=(_15513_ret_mantissa & 1LLU);
	_15513_ret_mantissa>>=1LLU;
	if (((_15513_ret_mantissa >> 24LLU) > 0LLU)) {
		_15513_ret_mantissa>>=1LLU;
		_13513_ret_exp2+=1LLU;
	};
	if (((_13513_ret_exp2 - 1LLU) >= 254LLU)) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	};
	jule::U64 _17813_ret_bits = ((_13513_ret_exp2 << 23LLU) | (_15513_ret_mantissa & 8388607LLU));;
	if (_11045_neg) {
		_17813_ret_bits|=2147483648LLU;
	};
	_11058_f = static_cast<jule::F32>(_1a741e311_f32_from_bits(static_cast<jule::U32>(static_cast<jule::U32>(_17813_ret_bits))));
	_11066_ok = true;
	return std::make_tuple(_11058_f,_11066_ok);
}



inline jule::I64 _1a7106cc9_common_prefix_len_ignore_case(jule::Str _4534_s, jule::Str _4542_prefix) {
	jule::I64 _4613_n = _4542_prefix.len();;
	if ((_4613_n > _4534_s.len())) {
		_4613_n=static_cast<jule::I64>(_4534_s.len());
	};
	jule::I64 _5013_i = 0LL;;
	for (; (_5013_i < _4613_n); (_5013_i)++) {
		{
			jule::U8 _5217_c = _4534_s[_5013_i];;
			if ((('A' <= _5217_c) && (_5217_c <= 'Z'))) {
				_5217_c+=('a' - 'A');
			};
			if ((_5217_c != _4542_prefix[_5013_i])) {
				return _5013_i;
			};
		}
	_iter_next_1a9436304:;
	}
	_iter_end_1a9436304:;;
	return _4613_n;
}



inline std::tuple<jule::F64,jule::I64,jule::Bool> _1a71ce9b7_special(jule::Str _6816_s) {
	jule::F64 _6826_f = jule::F64();
	jule::I64 _6834_n = jule::I64();
	jule::Bool _6842_ok = jule::Bool();
	if (_6816_s.empty()) {
		_6826_f = 0LL;
		_6834_n = 0LL;
		_6842_ok = false;
		return std::make_tuple(_6826_f,_6834_n,_6842_ok);
	};
	jule::I64 _7213_sign = 1LL;;
	jule::I64 _7313_nsign = 0LL;;
	{
		auto &_match_expr{ _6816_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_1a943aea7:;
			{
				if ((_6816_s[0LL] == '-')) {
					_7213_sign=-1LL;
				};
				_7313_nsign=1LL;
				(_6816_s).mut_slice(1LL);;
				goto _case_begin_1a943b01d;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_1a943b01d:;
			{
				jule::I64 _8317_case_n = _1a7106cc9_common_prefix_len_ignore_case(_6816_s,jule::Str("infinity", 8));;
				if (((3LL < _8317_case_n) && (_8317_case_n < 8LL))) {
					_8317_case_n=3LL;
				};
				if (((_8317_case_n == 3LL) || (_8317_case_n == 8LL))) {
					_6826_f = static_cast<jule::F64>(_1a746ea6a_inf(_7213_sign));
					_6834_n = static_cast<jule::I64>((_7313_nsign + _6834_n));
					_6842_ok = true;
					return std::make_tuple(_6826_f,_6834_n,_6842_ok);
				};
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_1a943b084:;
			{
				if ((_1a7106cc9_common_prefix_len_ignore_case(_6816_s,jule::Str("nan", 3)) == 3LL)) {
					_6826_f = static_cast<jule::F64>(_1a7494c6b_nan());
					_6834_n = 3LL;
					_6842_ok = true;
					return std::make_tuple(_6826_f,_6834_n,_6842_ok);
				};
			}
		}
		_match_end_1a943ae52:;
	};
	_6826_f = 0LL;
	_6834_n = 0LL;
	_6842_ok = false;
	return std::make_tuple(_6826_f,_6834_n,_6842_ok);
}



inline std::tuple<jule::U64,jule::I64,jule::Bool,jule::Bool,jule::Bool,jule::I64,jule::Bool> _1a7039921_read_float(jule::Str _10315_s) {
	jule::U64 _10325_mantissa = jule::U64();
	jule::I64 _10340_exp = jule::I64();
	jule::Bool _10350_neg = jule::Bool();
	jule::Bool _10361_trunc = jule::Bool();
	jule::Bool _10374_hex = jule::Bool();
	jule::I64 _10385_i = jule::I64();
	jule::Bool _10393_ok = jule::Bool();
	if ((_10385_i >= _10315_s.len())) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10361_trunc,_10374_hex,_10385_i,_10393_ok);
	};
	{
		
		if ((_10315_s[_10385_i] == '+')) {
			_case_begin_1a9441d9d:;
			{
				(_10385_i)++;
			}
		}
		else if ((_10315_s[_10385_i] == '-')) {
			_case_begin_1a9442123:;
			{
				_10350_neg=true;
				(_10385_i)++;
			}
		}
		_match_end_1a9441a07:;
	};
	jule::U64 _11713_base = 10LLU;;
	jule::I64 _11813_max_mant_digits = 19LL;;
	jule::U8 _11913_exp_char = 'e';;
	if (((((_10385_i + 2LL) < _10315_s.len()) && (_10315_s[_10385_i] == '0')) && (_1a7306b99_lower(_10315_s[(_10385_i + 1LL)]) == 'x'))) {
		_11713_base=16LLU;
		_11813_max_mant_digits=16LL;
		_10385_i+=2LL;
		_11913_exp_char='p';
		_10374_hex=true;
	};
	jule::Bool _12713_sawdot = false;;
	jule::Bool _12813_sawdigits = false;;
	jule::I64 _12913_nd = 0LL;;
	jule::I64 _13013_nd_mant = 0LL;;
	jule::I64 _13113_dp = 0LL;;
	for (; (_10385_i < _10315_s.len()); (_10385_i)++) {
		{
			jule::U8 _13313_c = _10315_s[_10385_i];;
			{
				
				if ((_13313_c == '_')) {
					_case_begin_1a9447c0b:;
					{
						goto _iter_next_1a944717d;
					}
				}
				else if ((_13313_c == '.')) {
					_case_begin_1a9447c83:;
					{
						if (_12713_sawdot) {
							goto _julec_label_loop_end;
						};
						_12713_sawdot=true;
						_13113_dp=_12913_nd;
						goto _iter_next_1a944717d;
					}
				}
				else if ((('0' <= _13313_c) && (_13313_c <= '9'))) {
					_case_begin_1a9447d0a:;
					{
						_12813_sawdigits=true;
						if (((_13313_c == '0') && (_12913_nd == 0LL))) {
							(_13113_dp)--;
							goto _iter_next_1a944717d;
						};
						(_12913_nd)++;
						if ((_13013_nd_mant < _11813_max_mant_digits)) {
							_10325_mantissa*=_11713_base;
							_10325_mantissa+=static_cast<jule::U64>((_13313_c - '0'));
							(_13013_nd_mant)++;
						} else if ((_13313_c != '0')) {
							_10361_trunc=true;
						};
						goto _iter_next_1a944717d;
					}
				}
				else if ((((_11713_base == 16LLU) && ('a' <= _1a7306b99_lower(_13313_c))) && (_1a7306b99_lower(_13313_c) <= 'f'))) {
					_case_begin_1a9447d82:;
					{
						_12813_sawdigits=true;
						(_12913_nd)++;
						if ((_13013_nd_mant < _11813_max_mant_digits)) {
							_10325_mantissa*=16LLU;
							_10325_mantissa+=static_cast<jule::U64>(((_1a7306b99_lower(_13313_c) - 'a') + 10LLU));
							(_13013_nd_mant)++;
						} else {
							_10361_trunc=true;
						};
						goto _iter_next_1a944717d;
					}
				}
				_match_end_1a9447b1d:;
			};
			goto _iter_end_1a944717d;
		}
	_iter_next_1a944717d:;
	}
	_iter_end_1a944717d:;;
	_julec_label_loop_end:;
	if ((!(_12813_sawdigits))) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10361_trunc,_10374_hex,_10385_i,_10393_ok);
	};
	if ((!(_12713_sawdot))) {
		_13113_dp=_12913_nd;
	};
	if ((_11713_base == 16LLU)) {
		_13113_dp*=4LL;
		_13013_nd_mant*=4LL;
	};
	if (((_10385_i < _10315_s.len()) && (_1a7306b99_lower(_10315_s[_10385_i]) == _11913_exp_char))) {
		(_10385_i)++;
		if ((_10385_i >= _10315_s.len())) {
			return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10361_trunc,_10374_hex,_10385_i,_10393_ok);
		};
		jule::I64 _19617_esign = 1LL;;
		if ((_10315_s[_10385_i] == '+')) {
			(_10385_i)++;
		} else if ((_10315_s[_10385_i] == '-')) {
			(_10385_i)++;
			_19617_esign=-1LL;
		};
		if ((((_10385_i >= _10315_s.len()) || (_10315_s[_10385_i] < '0')) || (_10315_s[_10385_i] > '9'))) {
			return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10361_trunc,_10374_hex,_10385_i,_10393_ok);
		};
		jule::I64 _20617_e = 0LL;;
		for (; ((_10385_i < _10315_s.len()) && ((('0' <= _10315_s[_10385_i]) && (_10315_s[_10385_i] <= '9')) || (_10315_s[_10385_i] == '_'))); (_10385_i)++) {
			{
				if ((_10315_s[_10385_i] == '_')) {
					goto _iter_next_1a94524c9;
				};
				if ((_20617_e < 10000LL)) {
					_20617_e=static_cast<jule::I64>((((_20617_e * 10LL) + static_cast<jule::I64>(_10315_s[_10385_i])) - '0'));
				};
			}
		_iter_next_1a94524c9:;
		}
		_iter_end_1a94524c9:;;
		_13113_dp+=(_20617_e * _19617_esign);
	} else if ((_11713_base == 16LLU)) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10361_trunc,_10374_hex,_10385_i,_10393_ok);
	};
	if ((_10325_mantissa != 0LLU)) {
		_10340_exp=static_cast<jule::I64>((_13113_dp - _13013_nd_mant));
	};
	_10393_ok=true;
	return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10361_trunc,_10374_hex,_10385_i,_10393_ok);
}



inline std::tuple<jule::F64,jule::Bool> _1a7159777_atof64exact(jule::U64 _48116_mantissa, jule::I64 _48135_exp, jule::Bool _48145_neg) {
	jule::F64 _48158_f = jule::F64();
	jule::Bool _48166_ok = jule::Bool();
	if (((_48116_mantissa >> _1a6d26983_F64_INFO._field_mantbits) != 0LLU)) {
		return std::make_tuple(_48158_f,_48166_ok);
	};
	_48158_f=static_cast<jule::F64>(static_cast<jule::F64>(_48116_mantissa));
	if (_48145_neg) {
		_48158_f=static_cast<jule::F64>((-(_48158_f)));
	};
	{
		
		if ((_48135_exp == 0LL)) {
			_case_begin_1a945c5c2:;
			{
				_48166_ok = true;
				return std::make_tuple(_48158_f,_48166_ok);
			}
		}
		else if (((_48135_exp > 0LL) && (_48135_exp <= 37LL))) {
			_case_begin_1a945c638:;
			{
				if ((_48135_exp > 22LL)) {
					_48158_f*=_1a6de0970_F64_POW10[(_48135_exp - 22LL)];
					_48135_exp=22LL;
				};
				if (((_48158_f > 1000000000000000LL) || (_48158_f < -1000000000000000LL))) {
					return std::make_tuple(_48158_f,_48166_ok);
				};
				_48158_f = static_cast<jule::F64>((_48158_f * _1a6de0970_F64_POW10[_48135_exp]));
				_48166_ok = true;
				return std::make_tuple(_48158_f,_48166_ok);
			}
		}
		else if (((_48135_exp < 0LL) && (_48135_exp >= -22LL))) {
			_case_begin_1a945c69e:;
			{
				_48158_f = static_cast<jule::F64>(jule::div(_48158_f,_1a6de0970_F64_POW10[(-(_48135_exp))]));
				_48166_ok = true;
				return std::make_tuple(_48158_f,_48166_ok);
			}
		}
		_match_end_1a945c490:;
	};
	return std::make_tuple(_48158_f,_48166_ok);
}



inline std::tuple<jule::F32,jule::Bool> _1a71598a9_atof32exact(jule::U64 _51516_mantissa, jule::I64 _51535_exp, jule::Bool _51549_neg) {
	jule::F32 _51562_f = jule::F32();
	jule::Bool _51570_ok = jule::Bool();
	if (((_51516_mantissa >> _1a6d119e5_F32_INFO._field_mantbits) != 0LLU)) {
		return std::make_tuple(_51562_f,_51570_ok);
	};
	_51562_f=static_cast<jule::F32>(static_cast<jule::F32>(_51516_mantissa));
	if (_51549_neg) {
		_51562_f=static_cast<jule::F32>((-(_51562_f)));
	};
	{
		
		if ((_51535_exp == 0LL)) {
			_case_begin_1a946240c:;
			{
				_51570_ok = true;
				return std::make_tuple(_51562_f,_51570_ok);
			}
		}
		else if (((_51535_exp > 0LL) && (_51535_exp <= 17LL))) {
			_case_begin_1a9462473:;
			{
				if ((_51535_exp > 10LL)) {
					_51562_f*=_1a6e00353_F32_POW10[(_51535_exp - 10LL)];
					_51535_exp=10LL;
				};
				if (((_51562_f > 10000000LL) || (_51562_f < -10000000LL))) {
					return std::make_tuple(_51562_f,_51570_ok);
				};
				_51562_f = static_cast<jule::F32>((_51562_f * _1a6e00353_F32_POW10[_51535_exp]));
				_51570_ok = true;
				return std::make_tuple(_51562_f,_51570_ok);
			}
		}
		else if (((_51535_exp < 0LL) && (_51535_exp >= -10LL))) {
			_case_begin_1a94624d9:;
			{
				_51562_f = static_cast<jule::F32>(jule::div(_51562_f,_1a6e00353_F32_POW10[(-(_51535_exp))]));
				_51570_ok = true;
				return std::make_tuple(_51562_f,_51570_ok);
			}
		}
		_match_end_1a94622ca:;
	};
	return std::make_tuple(_51562_f,_51570_ok);
}



inline std::tuple<jule::F64,jule::I64> _1a6d0d5d5_atof_hex(jule::Str _55113_s, _1a72b4cde_FloatInfo& _55122_flt, jule::U64 _55142_mantissa, jule::I64 _55161_exp, jule::Bool _55171_neg, jule::Bool _55182_trunc) {
	jule::I64 _5529_max_exp = ((static_cast<jule::I64>((1LL << _55122_flt._field_expbits)) + _55122_flt._field_bias) - 2LL);;
	jule::I64 _5539_min_exp = (_55122_flt._field_bias + 1LL);;
	_55161_exp+=static_cast<jule::I64>(_55122_flt._field_mantbits);
	while (((_55142_mantissa != 0LLU) && ((_55142_mantissa >> (_55122_flt._field_mantbits + 2LLU)) == 0LLU))) {
		{
			_55142_mantissa<<=1LLU;
			(_55161_exp)--;
		}
	_iter_next_1a9467ae9:;
	}
	_iter_end_1a9467ae9:;;
	if (_55182_trunc) {
		_55142_mantissa|=1LLU;
	};
	while (((_55142_mantissa >> ((1LLU + _55122_flt._field_mantbits) + 2LLU)) != 0LLU)) {
		{
			_55142_mantissa=static_cast<jule::U64>(((_55142_mantissa >> 1LLU) | (_55142_mantissa & 1LLU)));
			(_55161_exp)++;
		}
	_iter_next_1a946904b:;
	}
	_iter_end_1a946904b:;;
	while (((_55142_mantissa > 1LLU) && (_55161_exp < (_5539_min_exp - 2LL)))) {
		{
			_55142_mantissa=static_cast<jule::U64>(((_55142_mantissa >> 1LLU) | (_55142_mantissa & 1LLU)));
			(_55161_exp)++;
		}
	_iter_next_1a9469b62:;
	}
	_iter_end_1a9469b62:;;
	jule::U64 _58313_round = (_55142_mantissa & 3LLU);;
	_55142_mantissa>>=2LLU;
	_58313_round|=(_55142_mantissa & 1LLU);
	_55161_exp+=2LL;
	if ((_58313_round == 3LLU)) {
		(_55142_mantissa)++;
		if ((_55142_mantissa == (1LLU << (1LLU + _55122_flt._field_mantbits)))) {
			_55142_mantissa>>=1LLU;
			(_55161_exp)++;
		};
	};
	if (((_55142_mantissa >> _55122_flt._field_mantbits) == 0LLU)) {
		_55161_exp=_55122_flt._field_bias;
	};
	jule::I64 _59813_err = static_cast<jule::I64>(0LL);;
	if ((_55161_exp > _5529_max_exp)) {
		_55142_mantissa=static_cast<jule::U64>(static_cast<jule::U64>((1LL << _55122_flt._field_mantbits)));
		_55161_exp=static_cast<jule::I64>((_5529_max_exp + 1LL));
		_59813_err=static_cast<jule::I64>(1LL);
	};
	jule::U64 _60513_bits = (_55142_mantissa & ((1LLU << _55122_flt._field_mantbits) - 1LLU));;
	_60513_bits|=(static_cast<jule::U64>(((_55161_exp - _55122_flt._field_bias) & static_cast<jule::I64>(((1LL << _55122_flt._field_expbits) - 1LL)))) << _55122_flt._field_mantbits);
	if (_55171_neg) {
		_60513_bits|=((1LLU << _55122_flt._field_mantbits) << _55122_flt._field_expbits);
	};
	if ((_55122_flt == _1a6d119e5_F32_INFO)) {
		return std::make_tuple(static_cast<jule::F64>(static_cast<jule::F64>(_1a741e311_f32_from_bits(static_cast<jule::U32>(static_cast<jule::U32>(_60513_bits))))),_59813_err);
	};
	return std::make_tuple(static_cast<jule::F64>(_1a741e894_f64_from_bits(_60513_bits)),_59813_err);
}



inline std::tuple<jule::F32,jule::I64,jule::I64> _1a6d0d717_atof32(jule::Str _61611_s) {
	jule::F32 _61621_f = jule::F32();
	jule::I64 _61629_n = jule::I64();
	jule::I64 _61637_err = 0LL;
	{
		jule::F64 _61814_val;;
		jule::I64 _61819__n;;
		jule::Bool _61823_ok;;
		std::tie(_61814_val,_61819__n,_61823_ok) = _1a71ce9b7_special(_61611_s);
		if (_61823_ok) {
			_61621_f = static_cast<jule::F32>(static_cast<jule::F32>(_61814_val));
			_61629_n = _61819__n;
			_61637_err = static_cast<jule::I64>(0LL);
			return std::make_tuple(_61621_f,_61629_n,_61637_err);
		};
	};
	jule::U64 _62410_mantissa;;
	jule::I64 _62420_exp;;
	jule::Bool _62425_neg;;
	jule::Bool _62430_trunc;;
	jule::Bool _62437_hex;;
	jule::I64 _62442__n;;
	jule::Bool _62450_ok;;
	std::tie(_62410_mantissa,_62420_exp,_62425_neg,_62430_trunc,_62437_hex,_62442__n,_62450_ok) = _1a7039921_read_float(_61611_s);
	_61629_n=_62442__n;
	if ((!(_62450_ok))) {
		_61621_f = 0LL;
		_61637_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_61621_f,_61629_n,_61637_err);
	};
	if (_62437_hex) {
		jule::F64 _63117_ff = 0LL;;
		std::tie(_63117_ff,_61637_err) = _1a6d0d5d5_atof_hex(_61611_s.slice(0LL,_61629_n),_1a6d119e5_F32_INFO,_62410_mantissa,_62420_exp,_62425_neg,_62430_trunc);
		_61621_f = static_cast<jule::F32>(static_cast<jule::F32>(_63117_ff));
		return std::make_tuple(_61621_f,_61629_n,_61637_err);
	};
	{
		if ((!(_62430_trunc))) {
			std::tie(_61621_f,_62450_ok) = _1a71598a9_atof32exact(_62410_mantissa,_62420_exp,_62425_neg);
			if (_62450_ok) {
				_61637_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_61621_f,_61629_n,_61637_err);
			};
		};
		std::tie(_61621_f,_62450_ok) = _1a6e38db4_eisel_lemire32(_62410_mantissa,_62420_exp,_62425_neg);
		if (_62450_ok) {
			if ((!(_62430_trunc))) {
				_61637_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_61621_f,_61629_n,_61637_err);
			};
			jule::F32 _65321_f_up = 0LL;;
			std::tie(_65321_f_up,_62450_ok) = _1a6e38db4_eisel_lemire32(static_cast<jule::U64>((_62410_mantissa + 1LLU)),_62420_exp,_62425_neg);
			if ((_62450_ok && (_61621_f == _65321_f_up))) {
				_61637_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_61621_f,_61629_n,_61637_err);
			};
		};
	};
	_1a753776a_Decimal _66213_d = _1a753776a_Decimal{};;
	if ((!(_1a7303756_set(&_66213_d, _61611_s.slice(0LL,_61629_n))))) {
		_61621_f = 0LL;
		_61637_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_61621_f,_61629_n,_61637_err);
	};
	jule::U64 _66610_b;;
	jule::Bool _66613_ovf;;
	std::tie(_66610_b,_66613_ovf) = _1a715606a_float_bits(&_66213_d, _1a6d119e5_F32_INFO);
	_61621_f=static_cast<jule::F32>(_1a741e311_f32_from_bits(static_cast<jule::U32>(static_cast<jule::U32>(_66610_b))));
	if (_66613_ovf) {
		_61637_err=static_cast<jule::I64>(1LL);
	};
	return std::make_tuple(_61621_f,_61629_n,_61637_err);
}



inline std::tuple<jule::F64,jule::I64,jule::I64> _1a6d0d849_atof64(jule::Str _67411_s) {
	jule::F64 _67421_f = jule::F64();
	jule::I64 _67429_n = jule::I64();
	jule::I64 _67437_err = 0LL;
	{
		jule::F64 _67614_val;;
		jule::I64 _67619__n;;
		jule::Bool _67623_ok;;
		std::tie(_67614_val,_67619__n,_67623_ok) = _1a71ce9b7_special(_67411_s);
		if (_67623_ok) {
			_67421_f = _67614_val;
			_67429_n = _67619__n;
			_67437_err = static_cast<jule::I64>(0LL);
			return std::make_tuple(_67421_f,_67429_n,_67437_err);
		};
	};
	jule::U64 _68210_mantissa;;
	jule::I64 _68220_exp;;
	jule::Bool _68225_neg;;
	jule::Bool _68230_trunc;;
	jule::Bool _68237_hex;;
	jule::I64 _68242__n;;
	jule::Bool _68250_ok;;
	std::tie(_68210_mantissa,_68220_exp,_68225_neg,_68230_trunc,_68237_hex,_68242__n,_68250_ok) = _1a7039921_read_float(_67411_s);
	_67429_n=_68242__n;
	if ((!(_68250_ok))) {
		_67421_f = 0LL;
		_67437_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_67421_f,_67429_n,_67437_err);
	};
	if (_68237_hex) {
		std::tie(_67421_f,_67437_err) = _1a6d0d5d5_atof_hex(_67411_s.slice(0LL,_67429_n),_1a6d26983_F64_INFO,_68210_mantissa,_68220_exp,_68225_neg,_68230_trunc);
		return std::make_tuple(_67421_f,_67429_n,_67437_err);
	};
	{
		if ((!(_68230_trunc))) {
			std::tie(_67421_f,_68250_ok) = _1a7159777_atof64exact(_68210_mantissa,_68220_exp,_68225_neg);
			if (_68250_ok) {
				_67437_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_67421_f,_67429_n,_67437_err);
			};
		};
		std::tie(_67421_f,_68250_ok) = _1a7306858_eisel_lemire64(_68210_mantissa,_68220_exp,_68225_neg);
		if (_68250_ok) {
			if ((!(_68230_trunc))) {
				_67437_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_67421_f,_67429_n,_67437_err);
			};
			jule::F64 _71021_f_up = 0LL;;
			std::tie(_71021_f_up,_68250_ok) = _1a7306858_eisel_lemire64(static_cast<jule::U64>((_68210_mantissa + 1LLU)),_68220_exp,_68225_neg);
			if ((_68250_ok && (_67421_f == _71021_f_up))) {
				_67437_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_67421_f,_67429_n,_67437_err);
			};
		};
	};
	_1a753776a_Decimal _71913_d = _1a753776a_Decimal{};;
	if ((!(_1a7303756_set(&_71913_d, _67411_s.slice(0LL,_67429_n))))) {
		_67421_f = 0LL;
		_67437_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_67421_f,_67429_n,_67437_err);
	};
	jule::U64 _72310_b;;
	jule::Bool _72313_ovf;;
	std::tie(_72310_b,_72313_ovf) = _1a715606a_float_bits(&_71913_d, _1a6d26983_F64_INFO);
	_67421_f=static_cast<jule::F64>(_1a741e894_f64_from_bits(_72310_b));
	if (_72313_ovf) {
		_67437_err=static_cast<jule::I64>(1LL);
	};
	return std::make_tuple(_67421_f,_67429_n,_67437_err);
}



inline std::tuple<jule::F64,jule::I64,jule::I64> _1a7010540_parse_float_prefix(jule::Str _73123_s, jule::I64 _73131_bit_size) {
	if ((_73131_bit_size == 32LL)) {
		jule::F32 _73314_f;;
		jule::I64 _73317_n;;
		jule::I64 _73320_err;;
		std::tie(_73314_f,_73317_n,_73320_err) = _1a6d0d717_atof32(_73123_s);
		return std::make_tuple(static_cast<jule::F64>(static_cast<jule::F64>(_73314_f)),_73317_n,_73320_err);
	};
	jule::F64 _73710_f;;
	jule::I64 _73713_n;;
	jule::I64 _73716_err;;
	std::tie(_73710_f,_73713_n,_73716_err) = _1a6d0d849_atof64(_73123_s);
	return std::make_tuple(_73710_f,_73713_n,_73716_err);
}



inline jule::Exceptional<jule::F64> _1a7010672_parse_float(jule::Str _76520_s, jule::I64 _76528_bit_size) {
	jule::F64 _76610_f;;
	jule::I64 _76613_n;;
	jule::I64 _76616_err;;
	std::tie(_76610_f,_76613_n,_76616_err) = _1a7010540_parse_float_prefix(_76520_s,_76528_bit_size);
	if (((_76613_n != _76520_s.len()) && ((_76616_err == static_cast<jule::I64>(0LL)) || (_76616_err != static_cast<jule::I64>(2LL))))) {
		return jule::Exceptional<jule::F64>(static_cast<jule::I64>(2LL));
	};
	if ((_76616_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::F64>(_76616_err);
	};
	return jule::Exceptional<jule::F64>(jule::Any(),_76610_f);
}



inline void _1a70e658d_ryu_ftoa_fixed32(_1a6d11bc1_DecimalSlice& _4926_d, jule::U32 _4947_mant, jule::I64 _4958_exp, jule::I64 _4968_prec) {
	if ((_4968_prec < 0LL)) {
		jule::panic(jule::Str("ryu_ftoa_fixed32 called with negative prec", 42) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:9"));;
	};
	if ((_4968_prec > 9LL)) {
		jule::panic(jule::Str("ryu_ftoa_fixed32 called with prec > 9", 37) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:9"));;
	};
	if ((_4947_mant == 0LLU)) {
		std::tie(_4926_d._field_nd,_4926_d._field_dp) = std::make_tuple(0LL,0LL);
		return;;
	};
	jule::I64 _6213_e2 = _4958_exp;;
	jule::I64 _639_b = _1a750864d_len32(_4947_mant);;
	if ((_639_b < 25LL)) {
		_4947_mant<<=static_cast<jule::U64>((25LL - _639_b));
		_6213_e2+=(static_cast<jule::I64>(_639_b) - 25LL);
	};
	jule::I64 _749_q = (((-(_1a75367e1_mul_by_log2_log10(static_cast<jule::I64>((_6213_e2 + 24LL))))) + _4968_prec) - 1LL);;
	jule::Bool _7913_exact = ((_749_q <= 27LL) && (_749_q >= 0LL));;
	jule::U32 _8114_di;;
	jule::I64 _8118_dexp2;;
	jule::Bool _8129_d0;;
	std::tie(_8114_di,_8118_dexp2,_8129_d0) = _1a7536deb_mult64bit_pow10(_4947_mant,_6213_e2,_749_q);
	if ((_8118_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult64bit_pow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:9"));;
	};
	if ((((_749_q < 0LL) && (_749_q >= -10LL)) && _1a7537160_divisible_by_pow5(static_cast<jule::U64>(static_cast<jule::U64>(_4947_mant)),static_cast<jule::I64>((-(_749_q)))))) {
		_7913_exact=true;
		_8129_d0=true;
	};
	jule::U64 _949_extra = static_cast<jule::U64>((-(_8118_dexp2)));;
	jule::U32 _959_extra_mask = static_cast<jule::U32>(((1LL << _949_extra) - 1LL));;
	jule::U32 _9713_dfrac = 0LLU;;
	std::tie(_8114_di,_9713_dfrac) = std::make_tuple(static_cast<jule::U32>((_8114_di >> _949_extra)),static_cast<jule::U32>((_8114_di & _959_extra_mask)));
	jule::Bool _9913_round_up = false;;
	if (_7913_exact) {
		_9913_round_up=(((_9713_dfrac > (1LLU << (_949_extra - 1LLU))) || ((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && (!(_8129_d0)))) || (((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && _8129_d0) && ((_8114_di & 1LLU) == 1LLU)));
	} else {
		_9913_round_up=((_9713_dfrac >> (_949_extra - 1LLU)) == 1LLU);
	};
	if ((_9713_dfrac != 0LLU)) {
		_8129_d0=false;
	};
	_1a70e6802_format_decimal(_4926_d,static_cast<jule::U64>(static_cast<jule::U64>(_8114_di)),(!(_8129_d0)),_9913_round_up,_4968_prec);
	_4926_d._field_dp-=_749_q;
}



inline void _1a70e66c0_ryu_ftoa_fixed64(_1a6d11bc1_DecimalSlice& _12126_d, jule::U64 _12147_mant, jule::I64 _12158_exp, jule::I64 _12168_prec) {
	if ((_12168_prec > 18LL)) {
		jule::panic(jule::Str("ryu_ftoa_fixed64 called with prec > 18", 38) + jule::Str("\nlocation: std/conv/ftoaryu.jule:123:9"));;
	};
	if ((_12147_mant == 0LLU)) {
		std::tie(_12126_d._field_nd,_12126_d._field_dp) = std::make_tuple(0LL,0LL);
		return;;
	};
	jule::I64 _13113_e2 = _12158_exp;;
	jule::I64 _1329_b = _1a75088e5_len64(_12147_mant);;
	if ((_1329_b < 55LL)) {
		_12147_mant=static_cast<jule::U64>((_12147_mant << static_cast<jule::U64>((55LL - _1329_b))));
		_13113_e2+=(static_cast<jule::I64>(_1329_b) - 55LL);
	};
	jule::I64 _1469_q = (((-(_1a75367e1_mul_by_log2_log10(static_cast<jule::I64>((_13113_e2 + 54LL))))) + _12168_prec) - 1LL);;
	jule::Bool _15113_exact = ((_1469_q <= 55LL) && (_1469_q >= 0LL));;
	jule::U64 _15314_di;;
	jule::I64 _15318_dexp2;;
	jule::Bool _15329_d0;;
	std::tie(_15314_di,_15318_dexp2,_15329_d0) = _1a753702d_mult128bit_pow10(_12147_mant,_13113_e2,_1469_q);
	if ((_15318_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bit_pow10", 50) + jule::Str("\nlocation: std/conv/ftoaryu.jule:155:9"));;
	};
	if ((((_1469_q < 0LL) && (_1469_q >= -22LL)) && _1a7537160_divisible_by_pow5(_12147_mant,static_cast<jule::I64>((-(_1469_q)))))) {
		_15113_exact=true;
		_15329_d0=true;
	};
	jule::U64 _1669_extra = static_cast<jule::U64>((-(_15318_dexp2)));;
	jule::U64 _1679_extra_mask = static_cast<jule::U64>(((1LL << _1669_extra) - 1LL));;
	jule::U64 _16913_dfrac = 0LLU;;
	std::tie(_15314_di,_16913_dfrac) = std::make_tuple(static_cast<jule::U64>((_15314_di >> _1669_extra)),static_cast<jule::U64>((_15314_di & _1679_extra_mask)));
	jule::Bool _17113_round_up = false;;
	if (_15113_exact) {
		_17113_round_up=(((_16913_dfrac > (1LLU << (_1669_extra - 1LLU))) || ((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && (!(_15329_d0)))) || (((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && _15329_d0) && ((_15314_di & 1LLU) == 1LLU)));
	} else {
		_17113_round_up=((_16913_dfrac >> (_1669_extra - 1LLU)) == 1LLU);
	};
	if ((_16913_dfrac != 0LLU)) {
		_15329_d0=false;
	};
	_1a70e6802_format_decimal(_12126_d,_15314_di,(!(_15329_d0)),_17113_round_up,_12168_prec);
	_12126_d._field_dp-=_1469_q;
}



inline void _1a70e6802_format_decimal(_1a6d11bc1_DecimalSlice& _20024_d, jule::U64 _20045_m, jule::Bool _20057_trunc, jule::Bool _20074_round_up, jule::I64 _20090_prec) {
	jule::U64 _2019_max = _1a6e37357_U64_POW10[_20090_prec];;
	jule::I64 _20213_trimmed = 0LL;;
	while ((_20045_m >= _2019_max)) {
		{
			jule::U64 _20414_a = (_20045_m / 10LLU);;
			jule::U64 _20417_b = (_20045_m % 10LL);;
			std::tie(_20414_a,_20417_b) = std::make_tuple((_20045_m / 10LLU),(_20045_m % 10LL));
			_20045_m=_20414_a;
			(_20213_trimmed)++;
			if ((_20417_b > 5LLU)) {
				_20074_round_up=true;
			} else if ((_20417_b < 5LLU)) {
				_20074_round_up=false;
			} else {
				_20074_round_up=(_20057_trunc || ((_20045_m & 1LLU) == 1LLU));
			};
			if ((_20417_b != 0LLU)) {
				_20057_trunc=true;
			};
		}
	_iter_next_1a94a2e0e:;
	}
	_iter_end_1a94a2e0e:;;
	if (_20074_round_up) {
		(_20045_m)++;
	};
	if ((_20045_m >= _2019_max)) {
		_20045_m/=10LLU;
		(_20213_trimmed)++;
	};
	jule::U64 _22913_n = static_cast<jule::U64>(_20090_prec);;
	_20024_d._field_nd=static_cast<jule::I64>(static_cast<jule::I64>(_20090_prec));
	jule::U64 _23113_v = _20045_m;;
	while ((_23113_v >= 100LLU)) {
		{
			jule::U64 _23317_v1 = 0LLU;;
			jule::U64 _23417_v2 = 0LLU;;
			if (((_23113_v >> 32LLU) == 0LLU)) {
				std::tie(_23317_v1,_23417_v2) = std::make_tuple(static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) / 100LLU))),static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) % 100LL))));
			} else {
				std::tie(_23317_v1,_23417_v2) = std::make_tuple(static_cast<jule::U64>((_23113_v / 100LLU)),static_cast<jule::U64>((_23113_v % 100LL)));
			};
			_22913_n-=2LLU;
			_20024_d._field_d[static_cast<jule::I64>((_22913_n + 1LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23417_v2) + 1LLU))]);
			_20024_d._field_d[static_cast<jule::I64>((_22913_n + 0LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23417_v2) + 0LLU))]);
			_23113_v=_23317_v1;
		}
	_iter_next_1a94a5818:;
	}
	_iter_end_1a94a5818:;;
	if ((_23113_v > 0LLU)) {
		(_22913_n)--;
		_20024_d._field_d[static_cast<jule::I64>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23113_v) + 1LLU))]);
	};
	if ((_23113_v >= 10LLU)) {
		(_22913_n)--;
		_20024_d._field_d[static_cast<jule::I64>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((2LL * _23113_v))]);
	};
	while ((_20024_d._field_d[(_20024_d._field_nd - 1LL)] == '0')) {
		{
			(_20024_d._field_nd)--;
			(_20213_trimmed)++;
		}
	_iter_next_1a94abc1a:;
	}
	_iter_end_1a94abc1a:;;
	_20024_d._field_dp=static_cast<jule::I64>((_20024_d._field_nd + _20213_trimmed));
}



inline void _1a75366ae_ryu_ftoa_shortest(_1a6d11bc1_DecimalSlice& _26127_d, jule::U64 _26148_mant, jule::I64 _26159_exp, _1a72b4cde_FloatInfo& _26170_flt) {
	if ((_26148_mant == 0LLU)) {
		std::tie(_26127_d._field_nd,_26127_d._field_dp) = std::make_tuple(0LL,0LL);
		return;;
	};
	if (((_26159_exp <= 0LL) && (_1a75031d6_trailing_zeros64(_26148_mant) >= (-(_26159_exp))))) {
		_26148_mant>>=static_cast<jule::U64>((-(_26159_exp)));
		_1a7536b87_ryu_digits(_26127_d,_26148_mant,_26148_mant,_26148_mant,true,false);
		return;;
	};
	jule::U64 _27310_ml;;
	jule::U64 _27314_mc;;
	jule::U64 _27318_mu;;
	jule::I64 _27326_e2;;
	std::tie(_27310_ml,_27314_mc,_27318_mu,_27326_e2) = _1a7536a55_compute_bounds(_26148_mant,_26159_exp,_26170_flt);
	if ((_27326_e2 == 0LL)) {
		_1a7536b87_ryu_digits(_26127_d,_27310_ml,_27314_mc,_27318_mu,true,false);
		return;;
	};
	jule::I64 _2799_q = (_1a75367e1_mul_by_log2_log10(static_cast<jule::I64>((-(_27326_e2)))) + 1LL);;
	jule::U64 _28313_dl = 0LLU;;
	jule::U64 _28413_dc = 0LLU;;
	jule::U64 _28513_du = 0LLU;;
	jule::Bool _28613_dl0 = false;;
	jule::Bool _28713_dc0 = false;;
	jule::Bool _28813_du0 = false;;
	if ((_26170_flt == _1a6d119e5_F32_INFO)) {
		jule::U32 _29017_dl32 = 0LLU;;
		jule::U32 _29117_dc32 = 0LLU;;
		jule::U32 _29217_du32 = 0LLU;;
		std::tie(_29017_dl32,std::ignore,_28613_dl0) = _1a7536deb_mult64bit_pow10(static_cast<jule::U32>(static_cast<jule::U32>(_27310_ml)),_27326_e2,_2799_q);
		std::tie(_29117_dc32,std::ignore,_28713_dc0) = _1a7536deb_mult64bit_pow10(static_cast<jule::U32>(static_cast<jule::U32>(_27314_mc)),_27326_e2,_2799_q);
		std::tie(_29217_du32,_27326_e2,_28813_du0) = _1a7536deb_mult64bit_pow10(static_cast<jule::U32>(static_cast<jule::U32>(_27318_mu)),_27326_e2,_2799_q);
		std::tie(_28313_dl,_28413_dc,_28513_du) = std::make_tuple(static_cast<jule::U64>(static_cast<jule::U64>(_29017_dl32)),static_cast<jule::U64>(static_cast<jule::U64>(_29117_dc32)),static_cast<jule::U64>(static_cast<jule::U64>(_29217_du32)));
	} else {
		std::tie(_28313_dl,std::ignore,_28613_dl0) = _1a753702d_mult128bit_pow10(_27310_ml,_27326_e2,_2799_q);
		std::tie(_28413_dc,std::ignore,_28713_dc0) = _1a753702d_mult128bit_pow10(_27314_mc,_27326_e2,_2799_q);
		std::tie(_28513_du,_27326_e2,_28813_du0) = _1a753702d_mult128bit_pow10(_27318_mu,_27326_e2,_2799_q);
	};
	if ((_27326_e2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bit_pow10", 50) + jule::Str("\nlocation: std/conv/ftoaryu.jule:303:9"));;
	};
	if ((_2799_q > 55LL)) {
		std::tie(_28613_dl0,_28713_dc0,_28813_du0) = std::make_tuple(false,false,false);
	};
	if (((_2799_q < 0LL) && (_2799_q >= -24LL))) {
		if (_1a7537160_divisible_by_pow5(_27310_ml,static_cast<jule::I64>((-(_2799_q))))) {
			_28613_dl0=true;
		};
		if (_1a7537160_divisible_by_pow5(_27314_mc,static_cast<jule::I64>((-(_2799_q))))) {
			_28713_dc0=true;
		};
		if (_1a7537160_divisible_by_pow5(_27318_mu,static_cast<jule::I64>((-(_2799_q))))) {
			_28813_du0=true;
		};
	};
	jule::U64 _3259_extra = static_cast<jule::U64>((-(_27326_e2)));;
	jule::U64 _3269_extra_mask = static_cast<jule::U64>(((1LL << _3259_extra) - 1LL));;
	jule::U64 _32813_fracl = 0LLU;;
	std::tie(_28313_dl,_32813_fracl) = std::make_tuple(static_cast<jule::U64>((_28313_dl >> _3259_extra)),static_cast<jule::U64>((_28313_dl & _3269_extra_mask)));
	jule::U64 _33013_fracc = 0LLU;;
	std::tie(_28413_dc,_33013_fracc) = std::make_tuple(static_cast<jule::U64>((_28413_dc >> _3259_extra)),static_cast<jule::U64>((_28413_dc & _3269_extra_mask)));
	jule::U64 _33213_fracu = 0LLU;;
	std::tie(_28513_du,_33213_fracu) = std::make_tuple(static_cast<jule::U64>((_28513_du >> _3259_extra)),static_cast<jule::U64>((_28513_du & _3269_extra_mask)));
	jule::Bool _33813_uok = ((!(_28813_du0)) || (_33213_fracu > 0LLU));;
	if ((_28813_du0 && (_33213_fracu == 0LLU))) {
		_33813_uok=((_26148_mant & 1LLU) == 0LLU);
	};
	if ((!(_33813_uok))) {
		(_28513_du)--;
	};
	jule::Bool _34713_cup = false;;
	if (_28713_dc0) {
		_34713_cup=((_33013_fracc > (1LLU << (_3259_extra - 1LLU))) || ((_33013_fracc == (1LLU << (_3259_extra - 1LLU))) && ((_28413_dc & 1LLU) == 1LLU)));
	} else {
		_34713_cup=((_33013_fracc >> (_3259_extra - 1LLU)) == 1LLU);
	};
	jule::Bool _3619_lok = ((_28613_dl0 && (_32813_fracl == 0LLU)) && ((_26148_mant & 1LLU) == 0LLU));;
	if ((!(_3619_lok))) {
		(_28313_dl)++;
	};
	jule::Bool _3669_c0 = (_28713_dc0 && (_33013_fracc == 0LLU));;
	_1a7536b87_ryu_digits(_26127_d,_28313_dl,_28413_dc,_28513_du,_3669_c0,_34713_cup);
	_26127_d._field_dp-=_2799_q;
}



inline jule::I64 _1a75367e1_mul_by_log2_log10(jule::I64 _37722_x) {
	return static_cast<jule::I64>(((_37722_x * 78913LL) >> 18LL));
}



inline jule::I64 _1a7536923_mul_by_log10_log2(jule::I64 _38722_x) {
	return static_cast<jule::I64>(((_38722_x * 108853LL) >> 15LL));
}



inline std::tuple<jule::U64,jule::U64,jule::U64,jule::I64> _1a7536a55_compute_bounds(jule::U64 _39519_mant, jule::I64 _39530_exp, _1a72b4cde_FloatInfo& _3966_flt) {
	jule::U64 _39624_lower = jule::U64();
	jule::U64 _39636_central = jule::U64();
	jule::U64 _39650_upper = jule::U64();
	jule::I64 _39662_e2 = jule::I64();
	if (((_39519_mant != (1LLU << _3966_flt._field_mantbits)) || (_39530_exp == ((_3966_flt._field_bias + 1LL) - static_cast<jule::I64>(_3966_flt._field_mantbits))))) {
		std::tie(_39624_lower,_39636_central,_39650_upper) = std::make_tuple(static_cast<jule::U64>(((2LLU * _39519_mant) - 1LLU)),static_cast<jule::U64>((2LLU * _39519_mant)),static_cast<jule::U64>(((2LLU * _39519_mant) + 1LLU)));
		_39662_e2=static_cast<jule::I64>((_39530_exp - 1LL));
	} else {
		std::tie(_39624_lower,_39636_central,_39650_upper) = std::make_tuple(static_cast<jule::U64>(((4LLU * _39519_mant) - 1LLU)),static_cast<jule::U64>((4LLU * _39519_mant)),static_cast<jule::U64>(((4LLU * _39519_mant) + 2LLU)));
		_39662_e2=static_cast<jule::I64>((_39530_exp - 2LL));
	};
	return std::make_tuple(_39624_lower,_39636_central,_39650_upper,_39662_e2);
}



inline void _1a7536b87_ryu_digits(_1a6d11bc1_DecimalSlice& _40920_d, jule::U64 _40937_lower, jule::U64 _40949_central, jule::U64 _40963_upper, jule::Bool _40979_c0, jule::Bool _40993_cup) {
	jule::U32 _41014_lhi;;
	jule::U32 _41019_llo;;
	std::tie(_41014_lhi,_41019_llo) = _1a7537292_divmod1e9(_40937_lower);
	jule::U32 _41110_chi;;
	jule::U32 _41115_clo;;
	std::tie(_41110_chi,_41115_clo) = _1a7537292_divmod1e9(_40949_central);
	jule::U32 _41210_uhi;;
	jule::U32 _41215_ulo;;
	std::tie(_41210_uhi,_41215_ulo) = _1a7537292_divmod1e9(_40963_upper);
	if ((_41210_uhi == 0LLU)) {
		_1a7536cb9_ryu_digits32(_40920_d,_41019_llo,_41115_clo,_41215_ulo,_40979_c0,_40993_cup,8LL);
	} else if ((_41014_lhi < _41210_uhi)) {
		if ((_41019_llo != 0LLU)) {
			(_41014_lhi)++;
		};
		_40979_c0=(_40979_c0 && (_41115_clo == 0LLU));
		_40993_cup=((_41115_clo > 500000000LL) || ((_41115_clo == 500000000LL) && _40993_cup));
		_1a7536cb9_ryu_digits32(_40920_d,_41014_lhi,_41110_chi,_41210_uhi,_40979_c0,_40993_cup,8LL);
		_40920_d._field_dp+=9LL;
	} else {
		_40920_d._field_nd=0LL;
		jule::U64 _42817_n = static_cast<jule::U64>(9LLU);;
		jule::U32 _42917_v = _41110_chi;;
		while ((_42917_v > 0LLU)) {
			{
				jule::U32 _43118_v1 = (_42917_v / 10LLU);;
				jule::U32 _43122_v2 = (_42917_v % 10LL);;
				std::tie(_43118_v1,_43122_v2) = std::make_tuple((_42917_v / 10LLU),(_42917_v % 10LL));
				_42917_v=_43118_v1;
				(_42817_n)--;
				_40920_d._field_d[static_cast<jule::I64>(_42817_n)]=static_cast<jule::U8>(static_cast<jule::U8>((_43122_v2 + '0')));
			}
		_iter_next_1a94cd016:;
		}
		_iter_end_1a94cd016:;;
		_40920_d._field_d=_40920_d._field_d.slice(static_cast<jule::I64>(_42817_n));
		_40920_d._field_nd=static_cast<jule::I64>(static_cast<jule::I64>((9LL - _42817_n)));
		_1a7536cb9_ryu_digits32(_40920_d,_41019_llo,_41115_clo,_41215_ulo,_40979_c0,_40993_cup,static_cast<jule::I64>((_40920_d._field_nd + 8LL)));
	};
	while (((_40920_d._field_nd > 0LL) && (_40920_d._field_d[(_40920_d._field_nd - 1LL)] == '0'))) {
		{
			(_40920_d._field_nd)--;
		}
	_iter_next_1a94cd830:;
	}
	_iter_end_1a94cd830:;;
	while (((_40920_d._field_nd > 0LL) && (_40920_d._field_d[0LL] == '0'))) {
		{
			(_40920_d._field_nd)--;
			(_40920_d._field_dp)--;
			_40920_d._field_d=_40920_d._field_d.slice(1LL);
		}
	_iter_next_1a94d1b41:;
	}
	_iter_end_1a94d1b41:;;
}



inline void _1a7536cb9_ryu_digits32(_1a6d11bc1_DecimalSlice& _45422_d, jule::U32 _45443_lower, jule::U32 _45459_central, jule::U32 _4559_upper, jule::Bool _45525_c0, jule::Bool _45539_cup, jule::I64 _45554_endindex) {
	if ((_4559_upper == 0LLU)) {
		_45422_d._field_dp=static_cast<jule::I64>((_45554_endindex + 1LL));
		return;;
	};
	jule::I64 _46013_trimmed = 0LL;;
	jule::I64 _46313_c_next_digit = 0LL;;
	while ((_4559_upper > 0LLU)) {
		{
			jule::U32 _47013_l = ((_45443_lower + 9LLU) / 10LLU);;
			jule::U32 _47118_c = (_45459_central / 10LLU);;
			jule::U32 _47125_cdigit = (_45459_central % 10LL);;
			std::tie(_47118_c,_47125_cdigit) = std::make_tuple((_45459_central / 10LLU),(_45459_central % 10LL));
			jule::U32 _47213_u = (_4559_upper / 10LLU);;
			if ((_47013_l > _47213_u)) {
				goto _iter_end_1a94d4a89;
			};
			if (((_47013_l == (_47118_c + 1LLU)) && (_47118_c < _47213_u))) {
				(_47118_c)++;
				_47125_cdigit=0LLU;
				_45539_cup=false;
			};
			(_46013_trimmed)++;
			_45525_c0=(_45525_c0 && (_46313_c_next_digit == 0LL));
			_46313_c_next_digit=static_cast<jule::I64>(static_cast<jule::I64>(_47125_cdigit));
			std::tie(_45443_lower,_45459_central,_4559_upper) = std::make_tuple(_47013_l,_47118_c,_47213_u);
		}
	_iter_next_1a94d4a89:;
	}
	_iter_end_1a94d4a89:;;
	if ((_46013_trimmed > 0LL)) {
		_45539_cup=(((_46313_c_next_digit > 5LL) || ((_46313_c_next_digit == 5LL) && (!(_45525_c0)))) || (((_46313_c_next_digit == 5LL) && _45525_c0) && ((_45459_central & 1LLU) == 1LLU)));
	};
	if (((_45459_central < _4559_upper) && _45539_cup)) {
		(_45459_central)++;
	};
	_45554_endindex-=_46013_trimmed;
	jule::U32 _50913_v = _45459_central;;
	jule::I64 _51013_n = _45554_endindex;;
	while ((_51013_n > _45422_d._field_nd)) {
		{
			jule::U32 _51214_v1 = (_50913_v / 100LLU);;
			jule::U32 _51218_v2 = (_50913_v % 100LL);;
			std::tie(_51214_v1,_51218_v2) = std::make_tuple((_50913_v / 100LLU),(_50913_v % 100LL));
			_45422_d._field_d[_51013_n]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _51218_v2) + 1LLU))]);
			_45422_d._field_d[(_51013_n - 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _51218_v2) + 0LLU))]);
			_51013_n-=2LL;
			_50913_v=_51214_v1;
		}
	_iter_next_1a94d98a2:;
	}
	_iter_end_1a94d98a2:;;
	if ((_51013_n == _45422_d._field_nd)) {
		_45422_d._field_d[_51013_n]=static_cast<jule::U8>(static_cast<jule::U8>((_50913_v + '0')));
	};
	_45422_d._field_nd=static_cast<jule::I64>((_45554_endindex + 1LL));
	_45422_d._field_dp=static_cast<jule::I64>((_45422_d._field_nd + _46013_trimmed));
}



inline std::tuple<jule::U32,jule::I64,jule::Bool> _1a7536deb_mult64bit_pow10(jule::U32 _53420_m, jule::I64 _53432_e2, jule::I64 _53441_q) {
	jule::U32 _53451_resM = jule::U32();
	jule::I64 _53462_resE = jule::I64();
	jule::Bool _53473_exact = jule::Bool();
	if ((_53441_q == 0LL)) {
		_53451_resM = static_cast<jule::U32>((_53420_m << 6LLU));
		_53462_resE = static_cast<jule::I64>((_53432_e2 - 6LL));
		_53473_exact = true;
		return std::make_tuple(_53451_resM,_53462_resE,_53473_exact);
	};
	if (((_53441_q < -348LL) || (347LL < _53441_q))) {
		jule::panic(jule::Str("mult64bit_pow10: power of 10 is out of range", 44) + jule::Str("\nlocation: std/conv/ftoaryu.jule:541:9"));;
	};
	jule::U64 _54313_pow = _1a6d9c18a_DETAILED_POWS_OF_TEN[(_53441_q - -348LL)][1LL];;
	if ((_53441_q < 0LL)) {
		_54313_pow+=1LLU;
	};
	jule::U64 _54810_hi;;
	jule::U64 _54814_lo;;
	std::tie(_54810_hi,_54814_lo) = _1a750ac38_mul64(static_cast<jule::U64>(static_cast<jule::U64>(_53420_m)),_54313_pow);
	_53432_e2+=((_1a7536923_mul_by_log10_log2(_53441_q) - 63LL) + 57LL);
	_53451_resM = static_cast<jule::U32>(static_cast<jule::U32>(((_54810_hi << 7LLU) | (_54814_lo >> 57LLU))));
	_53462_resE = _53432_e2;
	_53473_exact = ((_54814_lo << 7LLU) == 0LLU);
	return std::make_tuple(_53451_resM,_53462_resE,_53473_exact);
}



inline std::tuple<jule::U64,jule::I64,jule::Bool> _1a753702d_mult128bit_pow10(jule::U64 _56221_m, jule::I64 _56233_e2, jule::I64 _56242_q) {
	jule::U64 _56252_resM = jule::U64();
	jule::I64 _56263_resE = jule::I64();
	jule::Bool _56274_exact = jule::Bool();
	if ((_56242_q == 0LL)) {
		_56252_resM = static_cast<jule::U64>((_56221_m << 8LLU));
		_56263_resE = static_cast<jule::I64>((_56233_e2 - 8LL));
		_56274_exact = true;
		return std::make_tuple(_56252_resM,_56263_resE,_56274_exact);
	};
	if (((_56242_q < -348LL) || (347LL < _56242_q))) {
		jule::panic(jule::Str("mult128bit_pow10: power of 10 is out of range", 45) + jule::Str("\nlocation: std/conv/ftoaryu.jule:569:9"));;
	};
	jule::Array<jule::U64,2> _57113_pow = _1a6d9c18a_DETAILED_POWS_OF_TEN[(_56242_q - -348LL)];;
	if ((_56242_q < 0LL)) {
		_57113_pow[0LL]+=1LLU;
	};
	_56233_e2+=((_1a7536923_mul_by_log10_log2(_56242_q) - 127LL) + 119LL);
	jule::U64 _57910_l1;;
	jule::U64 _57914_l0;;
	std::tie(_57910_l1,_57914_l0) = _1a750ac38_mul64(_56221_m,_57113_pow[0LL]);
	jule::U64 _58014_h1;;
	jule::U64 _58018_h0;;
	std::tie(_58014_h1,_58018_h0) = _1a750ac38_mul64(_56221_m,_57113_pow[1LL]);
	jule::U64 _58110_mid;;
	jule::U64 _58115_carry;;
	std::tie(_58110_mid,_58115_carry) = _1a75095a5_add64(_57910_l1,_58018_h0,0LLU);
	_58014_h1+=_58115_carry;
	_56252_resM = static_cast<jule::U64>(((_58014_h1 << 9LLU) | (_58110_mid >> 55LLU)));
	_56263_resE = _56233_e2;
	_56274_exact = (((_58110_mid << 9LLU) == 0LLU) && (_57914_l0 == 0LLU));
	return std::make_tuple(_56252_resM,_56263_resE,_56274_exact);
}



inline jule::Bool _1a7537160_divisible_by_pow5(jule::U64 _58626_m, jule::I64 _58634_k) {
	if ((_58626_m == 0LLU)) {
		return true;
	};
	jule::I64 _59013_i = 0LL;;
	for (; (_59013_i < _58634_k); (_59013_i)++) {
		{
			if (((_58626_m % 5LL) != 0LLU)) {
				return false;
			};
			_58626_m/=5LLU;
		}
	_iter_next_1a94e700d:;
	}
	_iter_end_1a94e700d:;;
	return true;
}



inline std::tuple<jule::U32,jule::U32> _1a7537292_divmod1e9(jule::U64 _60214_x) {
	{
		return std::make_tuple(static_cast<jule::U32>(static_cast<jule::U32>((_60214_x / 1000000000LL))),static_cast<jule::U32>(static_cast<jule::U32>((_60214_x % 1000000000LL))));
	};
}



inline void _1a75382c6_trim(_1a753776a_Decimal& _33314_a) {
	while (((_33314_a._field_nd > 0LL) && (_33314_a._field_d[(_33314_a._field_nd - 1LL)] == '0'))) {
		{
			(_33314_a._field_nd)--;
		}
	_iter_next_1a9532840:;
	}
	_iter_end_1a9532840:;;
	if ((_33314_a._field_nd == 0LL)) {
		_33314_a._field_dp=0LL;
	};
}



inline void _1a7538408_right_shift(_1a753776a_Decimal& _34321_a, jule::U64 _34333_k) {
	jule::I64 _34413_r = 0LL;;
	jule::I64 _34513_w = 0LL;;
	jule::U64 _34813_n = 0LLU;;
	for (; ((_34813_n >> _34333_k) == 0LLU); (_34413_r)++) {
		{
			if ((_34413_r >= _34321_a._field_nd)) {
				if ((_34813_n == 0LLU)) {
					_34321_a._field_nd=0LL;
					return;;
				};
				while (((_34813_n >> _34333_k) == 0LLU)) {
					{
						_34813_n=static_cast<jule::U64>((_34813_n * 10LLU));
						(_34413_r)++;
					}
				_iter_next_1a953627d:;
				}
				_iter_end_1a953627d:;;
				goto _iter_end_1a9534039;
			};
			jule::U64 _36213_c = static_cast<jule::U64>(_34321_a._field_d[_34413_r]);;
			_34813_n=static_cast<jule::U64>((((_34813_n * 10LLU) + _36213_c) - '0'));
		}
	_iter_next_1a9534039:;
	}
	_iter_end_1a9534039:;;
	_34321_a._field_dp-=(_34413_r - 1LL);
	jule::U64 _3679_mask = static_cast<jule::U64>((static_cast<jule::U64>((1LL << _34333_k)) - 1LLU));;
	for (; (_34413_r < _34321_a._field_nd); (_34413_r)++) {
		{
			jule::U64 _37113_c = static_cast<jule::U64>(_34321_a._field_d[_34413_r]);;
			jule::U64 _37213_dig = (_34813_n >> _34333_k);;
			_34813_n&=_3679_mask;
			_34321_a._field_d[_34513_w]=static_cast<jule::U8>(static_cast<jule::U8>((_37213_dig + '0')));
			(_34513_w)++;
			_34813_n=static_cast<jule::U64>((((_34813_n * 10LLU) + _37113_c) - '0'));
		}
	_iter_next_1a95380d7:;
	}
	_iter_end_1a95380d7:;;
	while ((_34813_n > 0LLU)) {
		{
			jule::U64 _38113_dig = (_34813_n >> _34333_k);;
			_34813_n&=_3679_mask;
			if ((_34513_w < 800LL)) {
				_34321_a._field_d[_34513_w]=static_cast<jule::U8>(static_cast<jule::U8>((_38113_dig + '0')));
				(_34513_w)++;
			} else if ((_38113_dig > 0LLU)) {
				_34321_a._field_trunc=true;
			};
			_34813_n=static_cast<jule::U64>((_34813_n * 10LLU));
		}
	_iter_next_1a953a392:;
	}
	_iter_end_1a953a392:;;
	_34321_a._field_nd=_34513_w;
	_1a75382c6_trim(_34321_a);
}



inline jule::Bool _1a753853a_prefix_is_less_than(jule::Array<jule::U8,800> _39724_b, jule::I64 _39738_end, jule::Str _39748_s) {
	jule::I64 _39813_i = 0LL;;
	for (; (_39813_i < _39748_s.len()); (_39813_i)++) {
		{
			if ((_39813_i >= _39738_end)) {
				return true;
			};
			if ((_39724_b[_39813_i] != _39748_s[_39813_i])) {
				return (_39724_b[_39813_i] < _39748_s[_39813_i]);
			};
		}
	_iter_next_1a953c96b:;
	}
	_iter_end_1a953c96b:;;
	return false;
}



inline void _1a753866c_left_shift(_1a753776a_Decimal& _41120_a, jule::U64 _41132_k) {
	jule::I64 _41213_delta = _1a7013257_LEFTCHEATS[static_cast<jule::I64>(_41132_k)]._field_delta;;
	if (_1a753853a_prefix_is_less_than(_41120_a._field_d,_41120_a._field_nd,_1a7013257_LEFTCHEATS[static_cast<jule::I64>(_41132_k)]._field_cutoff)) {
		(_41213_delta)--;
	};
	jule::I64 _41713_r = _41120_a._field_nd;;
	jule::I64 _41813_w = (_41120_a._field_nd + _41213_delta);;
	jule::U64 _42113_n = 0LLU;;
	(_41713_r)--;
	for (; (_41713_r >= 0LL); (_41713_r)--) {
		{
			_42113_n+=((static_cast<jule::U64>(_41120_a._field_d[_41713_r]) - '0') << _41132_k);
			jule::U64 _42513_quo = (_42113_n / 10LLU);;
			jule::U64 _42613_rem = (_42113_n - (10LLU * _42513_quo));;
			(_41813_w)--;
			if ((_41813_w < 800LL)) {
				_41120_a._field_d[_41813_w]=static_cast<jule::U8>(static_cast<jule::U8>((_42613_rem + '0')));
			} else if ((_42613_rem != 0LLU)) {
				_41120_a._field_trunc=true;
			};
			_42113_n=_42513_quo;
		}
	_iter_next_1a9541376:;
	}
	_iter_end_1a9541376:;;
	while ((_42113_n > 0LLU)) {
		{
			jule::U64 _43813_quo = (_42113_n / 10LLU);;
			jule::U64 _43913_rem = (_42113_n - (10LLU * _43813_quo));;
			(_41813_w)--;
			if ((_41813_w < 800LL)) {
				_41120_a._field_d[_41813_w]=static_cast<jule::U8>(static_cast<jule::U8>((_43913_rem + '0')));
			} else if ((_43913_rem != 0LLU)) {
				_41120_a._field_trunc=true;
			};
			_42113_n=_43813_quo;
		}
	_iter_next_1a954151e:;
	}
	_iter_end_1a954151e:;;
	_41120_a._field_nd+=_41213_delta;
	if ((_41120_a._field_nd >= 800LL)) {
		_41120_a._field_nd=800LL;
	};
	_41120_a._field_dp+=_41213_delta;
	_1a75382c6_trim(_41120_a);
}



inline jule::Bool _1a753879e_should_round_up(_1a753776a_Decimal& _45821_a, jule::I64 _45833_nd) {
	if (((_45833_nd < 0LL) || (_45833_nd >= _45821_a._field_nd))) {
		return false;
	};
	if (((_45821_a._field_d[_45833_nd] == '5') && ((_45833_nd + 1LL) == _45821_a._field_nd))) {
		if (_45821_a._field_trunc) {
			return true;
		};
		return ((_45833_nd > 0LL) && (((_45821_a._field_d[(_45833_nd - 1LL)] - '0') & 1LL) != 0LLU));
	};
	return (_45821_a._field_d[_45833_nd] >= '5');
}



inline jule::Str _1a7538a8a_fmt_uint(jule::U64 _6017_i, jule::I64 _6025_base) {
	if (((true && (_6017_i < 100LLU)) && (_6025_base == 10LL))) {
		return _1a7538e31_small(static_cast<jule::I64>(static_cast<jule::I64>(_6017_i)));
	};
	jule::Str _6413_s;;
	std::tie(std::ignore,_6413_s) = _1a7539195_fmt_bits(nullptr,_6017_i,_6025_base,false,false);
	return _6413_s;
}



inline jule::Str _1a7538bbc_fmt_int(jule::I64 _7116_i, jule::I64 _7124_base) {
	if ((((true && (0LL <= _7116_i)) && (_7116_i < 100LL)) && (_7124_base == 10LL))) {
		return _1a7538e31_small(static_cast<jule::I64>(static_cast<jule::I64>(_7116_i)));
	};
	jule::Str _7513_s;;
	std::tie(std::ignore,_7513_s) = _1a7539195_fmt_bits(nullptr,static_cast<jule::U64>(static_cast<jule::U64>(_7116_i)),_7124_base,(_7116_i < 0LL),false);
	return _7513_s;
}



inline jule::Str _1a7538cee_itoa(jule::I64 _8013_i) {
	return _1a7538bbc_fmt_int(static_cast<jule::I64>(static_cast<jule::I64>(_8013_i)),10LL);
}



inline jule::Str _1a7538e31_small(jule::I64 _8510_i) {
	if ((_8510_i < 10LL)) {
		return jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36).slice(_8510_i,(_8510_i + 1LL));
	};
	return jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200).slice((_8510_i << 1LLU),((_8510_i << 1LLU) + 2LL));
}



inline jule::Bool _1a7539063_is_power_of_two(jule::I64 _9220_x) {
	return ((_9220_x & (_9220_x - 1LL)) == 0LL);
}



inline std::tuple<jule::Slice<jule::U8>,jule::Str> _1a7539195_fmt_bits(jule::Slice<jule::U8> _10117_dst, jule::U64 _10134_u, jule::I64 _10142_base, jule::Bool _10153_neg, jule::Bool _10164_append_) {
	jule::Slice<jule::U8> _10181_d = jule::Slice<jule::U8>();
	jule::Str _10192_s = jule::Str();
	if (((_10142_base < 2LL) || (_10142_base > 36LL))) {
		jule::panic(jule::Str("std::conv: illegal base", 23) + jule::Str("\nlocation: std/conv/itoa.jule:103:9"));;
	};
	jule::Slice<jule::U8> _10713_a = jule::Slice<jule::U8>::alloc(65LL);;
	jule::I64 _10813_i = _10713_a.len();;
	if (_10153_neg) {
		_10134_u=static_cast<jule::U64>((-(_10134_u)));
	};
	if ((_10142_base == 10LL)) {
		;
		jule::U64 _14917_us = static_cast<jule::U64>(_10134_u);;
		while ((_14917_us >= 100LLU)) {
			{
				jule::U64 _15117_is = ((_14917_us % 100LL) << 1LLU);;
				_14917_us/=100LLU;
				_10813_i-=2LL;
				_10713_a[(_10813_i + 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15117_is + 1LLU))]);
				_10713_a[(_10813_i + 0LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15117_is + 0LLU))]);
			}
		_iter_next_1a9553eb0:;
		}
		_iter_end_1a9553eb0:;;
		jule::U64 _15913_is = (_14917_us << 1LLU);;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15913_is + 1LLU))]);
		if ((_14917_us >= 10LLU)) {
			(_10813_i)--;
			_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(_15913_is)]);
		};
	} else if (_1a7539063_is_power_of_two(_10142_base)) {
		jule::U64 _17413_shift = (static_cast<jule::U64>(_1a75025c0_trailing_zeros(static_cast<jule::U64>(static_cast<jule::U64>(_10142_base)))) & 7LLU);;
		jule::U64 _17513_b = static_cast<jule::U64>(_10142_base);;
		jule::U64 _17613_m = (static_cast<jule::U64>(_10142_base) - 1LLU);;
		while ((_10134_u >= _17513_b)) {
			{
				(_10813_i)--;
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>((static_cast<jule::U64>(_10134_u) & _17613_m))]);
				_10134_u>>=_17413_shift;
			}
		_iter_next_1a955b803:;
		}
		_iter_end_1a955b803:;;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10134_u))]);
	} else {
		jule::U64 _18713_b = static_cast<jule::U64>(_10142_base);;
		while ((_10134_u >= _18713_b)) {
			{
				(_10813_i)--;
				jule::U64 _19317_q = jule::div(_10134_u,_18713_b);;
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>((_10134_u - (_19317_q * _18713_b))))]);
				_10134_u=_19317_q;
			}
		_iter_next_1a955db02:;
		}
		_iter_end_1a955db02:;;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10134_u))]);
	};
	if (_10153_neg) {
		(_10813_i)--;
		_10713_a[_10813_i]='-';
	};
	if (_10164_append_) {
		_10181_d=jule::append(_10117_dst,_10713_a.slice(_10813_i));
		return std::make_tuple(_10181_d,_10192_s);
	};
	_10192_s=static_cast<jule::Str>(_10713_a.slice(_10813_i));
	return std::make_tuple(_10181_d,_10192_s);
}



inline void _1a75cb402_lshift_unsig(_1a75c3251_Const& _58722_c, _1a75c3251_Const& _58733_x) {
	jule::U64 _5889_l = _1a75c5451_as_u64(&_58722_c);;
	jule::U64 _5899_r = _1a75c5451_as_u64(&_58733_x);;
	_1a75c5bb0_set_u64(&_58722_c, static_cast<jule::U64>((_5889_l << _5899_r)));
}



inline void _1a75cb6ee_rshift_unsig(_1a75c3251_Const& _59322_c, _1a75c3251_Const& _59333_x) {
	jule::U64 _5949_l = _1a75c5451_as_u64(&_59322_c);;
	jule::U64 _5959_r = _1a75c5451_as_u64(&_59333_x);;
	_1a75c5bb0_set_u64(&_59322_c, static_cast<jule::U64>((_5949_l >> _5959_r)));
}



inline jule::Str _1a7661025_real_kind_of(jule::Str _4521_kind) {
	{
		auto &_match_expr{ _4521_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1a95d8451:;
			{
				return _1a7660860_SYS_INT;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1a95d84b7:;
			{
				return _1a7660a19_SYS_UINT;
			}
		}
		else {
			_case_begin_1a95d83da:;
			{
				return _4521_kind;
			}
		}
		_match_end_1a95d8385:;
	};
}



inline jule::I64 _1a76612bc_bitsize_of(jule::Str _5919_k) {
	{
		auto &_match_expr{ _5919_k };
		
		if (_match_expr == jule::Str("i8", 2) || _match_expr == jule::Str("u8", 2)) {
			_case_begin_1a95d950c:;
			{
				return 8LL;
			}
		}
		else if (_match_expr == jule::Str("i16", 3) || _match_expr == jule::Str("u16", 3)) {
			_case_begin_1a95d930e:;
			{
				return 16LL;
			}
		}
		else if (_match_expr == jule::Str("i32", 3) || _match_expr == jule::Str("u32", 3) || _match_expr == jule::Str("f32", 3)) {
			_case_begin_1a95d9375:;
			{
				return 32LL;
			}
		}
		else if (_match_expr == jule::Str("i64", 3) || _match_expr == jule::Str("u64", 3) || _match_expr == jule::Str("f64", 3)) {
			_case_begin_1a95d93db:;
			{
				return 64LL;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("int", 3)) {
			_case_begin_1a95d9188:;
			{
				return _1a76606a6_BIT_SIZE;
			}
		}
		else {
			_case_begin_1a95d3517:;
			{
				return -1LL;
			}
		}
		_match_end_1a95d3627:;
	};
}



inline jule::Str _1a76615a8_int_from_bits(jule::I64 _8622_bits) {
	{
		auto &_match_expr{ _8622_bits };
		
		if (_match_expr == 8LL) {
			_case_begin_1a95db4ba:;
			{
				return jule::Str("i8", 2);
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1a95da662:;
			{
				return jule::Str("i16", 3);
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1a95da6c8:;
			{
				return jule::Str("i32", 3);
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1a95da73e:;
			{
				return jule::Str("i64", 3);
			}
		}
		else {
			_case_begin_1a95dab90:;
			{
				return jule::Str();
			}
		}
		_match_end_1a95dac7d:;
	};
}



inline jule::Str _1a7661850_uint_from_bits(jule::I64 _10423_bits) {
	{
		auto &_match_expr{ _10423_bits };
		
		if (_match_expr == 8LL) {
			_case_begin_1a95dc92d:;
			{
				return jule::Str("u8", 2);
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1a95db5b9:;
			{
				return jule::Str("u16", 3);
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1a95db630:;
			{
				return jule::Str("u32", 3);
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1a95db696:;
			{
				return jule::Str("u64", 3);
			}
		}
		else {
			_case_begin_1a95dc246:;
			{
				return jule::Str();
			}
		}
		_match_end_1a95dc1ad:;
	};
}



inline jule::Str _1a7661ae7_float_from_bits(jule::I64 _12224_bits) {
	{
		auto &_match_expr{ _12224_bits };
		
		if (_match_expr == 32LL) {
			_case_begin_1a95ddd6e:;
			{
				return jule::Str("f32", 3);
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1a95dca2c:;
			{
				return jule::Str("f64", 3);
			}
		}
		else {
			_case_begin_1a95dd2d0:;
			{
				return jule::Str();
			}
		}
		_match_end_1a95dd621:;
	};
}



inline jule::Bool _1a7662653_check_bit_float(jule::Str _15024_val, jule::I64 _15034_bit) {
	({
		auto except = _1a7010672_parse_float(_15024_val,_15034_bit);
		(except.ok()) ? (except.result) : ({{
			return false;
		} jule::F64();});
	});
	return true;
}



inline jule::I64 _1a76628ea_bitsize_of_float(jule::F64 _16025_x) {
	{
		
		if (((-340282346638528860000000000000000000000.0 <= _16025_x) && (_16025_x <= 340282346638528860000000000000000000000.0))) {
			_case_begin_1a95e41d7:;
			{
				return 32LL;
			}
		}
		else {
			_case_begin_1a95e334b:;
			{
				return 64LL;
			}
		}
		_match_end_1a95e3dc9:;
	};
}



inline jule::I64 _1a7662b92_bitsize_of_int(jule::I64 _17623_x) {
	{
		
		if (((-128LL <= _17623_x) && (_17623_x <= 127LL))) {
			_case_begin_1a95e5073:;
			{
				return 8LL;
			}
		}
		else if (((-32768LL <= _17623_x) && (_17623_x <= 32767LL))) {
			_case_begin_1a95e50d9:;
			{
				return 16LL;
			}
		}
		else if (((-2147483648LL <= _17623_x) && (_17623_x <= 2147483647LL))) {
			_case_begin_1a95e5194:;
			{
				return 32LL;
			}
		}
		else {
			_case_begin_1a95e4d42:;
			{
				return 64LL;
			}
		}
		_match_end_1a95e4acd:;
	};
}



inline jule::I64 _1a7662e39_bitsize_of_uint(jule::U64 _19624_x) {
	{
		
		if ((_19624_x <= 255LLU)) {
			_case_begin_1a95e7042:;
			{
				return 8LL;
			}
		}
		else if ((_19624_x <= 65535LLU)) {
			_case_begin_1a95e70a8:;
			{
				return 16LL;
			}
		}
		else if ((_19624_x <= 4294967295LLU)) {
			_case_begin_1a95e6d77:;
			{
				return 32LL;
			}
		}
		else {
			_case_begin_1a95e6c34:;
			{
				return 64LL;
			}
		}
		_match_end_1a95e6b68:;
	};
}



inline void _1a766309e_update_target(void) {
	{
		{
			auto &_match_expr{ _1a4346cb9_ARCH };
			
			if (_match_expr == jule::Str("arm64", 5) || _match_expr == jule::Str("amd64", 5)) {
				_case_begin_1a95e8098:;
				{
					_1a76606a6_BIT_SIZE=64LL;
					_1a7660860_SYS_INT=jule::Str("i64", 3);
					_1a7660a19_SYS_UINT=jule::Str("u64", 3);
				}
			}
			else if (_match_expr == jule::Str("i386", 4)) {
				_case_begin_1a95e810e:;
				{
					_1a76606a6_BIT_SIZE=32LL;
					_1a7660860_SYS_INT=jule::Str("i32", 3);
					_1a7660a19_SYS_UINT=jule::Str("u32", 3);
				}
			}
			_match_end_1a95e8395:;
		};
	};
}



inline void _1a7663214_init(void) {
	_1a766309e_update_target();
}



inline jule::F64 _1a7666646_min(jule::Str _6116_k) {
	_6116_k=_1a7661025_real_kind_of(_6116_k);
	{
		auto &_match_expr{ _6116_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1a95eac38:;
			{
				return -128LL;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1a95eaa4b:;
			{
				return -32768LL;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1a95eaab2:;
			{
				return -2147483648LL;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1a95ea8c5:;
			{
				return jule::MIN_I64;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1a95ea93b:;
			{
				return -340282346638528860000000000000000000000.0;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1a95ea9a2:;
			{
				return jule::MIN_F64;
			}
		}
		else {
			_case_begin_1a95e84c7:;
			{
				return 0LL;
			}
		}
		_match_end_1a95e863c:;
	};
}



inline jule::F64 _1a7666932_max(jule::Str _8316_k) {
	_8316_k=_1a7661025_real_kind_of(_8316_k);
	{
		auto &_match_expr{ _8316_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1a95ec861:;
			{
				return 127LL;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1a95ec8c7:;
			{
				return 32767LL;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1a95ec6da:;
			{
				return 2147483647LL;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1a95ec751:;
			{
				return jule::MAX_I64;
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1a95ec7b7:;
			{
				return 255LL;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1a95ec377:;
			{
				return 65535LL;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1a95ec3dd:;
			{
				return 4294967295LL;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1a95ec454:;
			{
				return jule::MAX_U64;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1a95ec4ba:;
			{
				return 340282346638528860000000000000000000000.0;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1a95ecad6:;
			{
				return jule::MAX_F64;
			}
		}
		else {
			_case_begin_1a95ea6a5:;
			{
				return 0LL;
			}
		}
		_match_end_1a95ec322:;
	};
}



inline jule::Bool _1a7666d94_is_i8_compatible(jule::Str _629_k) {
	return (_629_k == jule::Str("i8", 2));
}



inline jule::Bool _1a7667180_is_i16_compatible(jule::Str _1130_k) {
	return ((_1130_k == jule::Str("i8", 2)) || (_1130_k == jule::Str("i16", 3)));
}



inline jule::Bool _1a7667427_is_i32_compatible(jule::Str _1730_k) {
	return ((((_1730_k == jule::Str("i8", 2)) || (_1730_k == jule::Str("i16", 3))) || (_1730_k == jule::Str("i32", 3))) || (_1730_k == jule::Str("u8", 2)));
}



inline jule::Bool _1a7667713_is_i64_compatible(jule::Str _2530_k) {
	return ((((_2530_k == jule::Str("i8", 2)) || (_2530_k == jule::Str("i16", 3))) || (_2530_k == jule::Str("i32", 3))) || (_2530_k == jule::Str("i64", 3)));
}



inline jule::Bool _1a76679aa_is_u8_compatible(jule::Str _3329_k) {
	return (_3329_k == jule::Str("u8", 2));
}



inline jule::Bool _1a7667c52_is_u16_compatible(jule::Str _3830_k) {
	return ((_3830_k == jule::Str("u8", 2)) || (_3830_k == jule::Str("u16", 3)));
}



inline jule::Bool _1a7667ee9_is_u32_compatible(jule::Str _4330_k) {
	return (((_4330_k == jule::Str("u8", 2)) || (_4330_k == jule::Str("u16", 3))) || (_4330_k == jule::Str("u32", 3)));
}



inline jule::Bool _1a7668329_is_u64_compatible(jule::Str _5030_k) {
	return ((((_5030_k == jule::Str("u8", 2)) || (_5030_k == jule::Str("u16", 3))) || (_5030_k == jule::Str("u32", 3))) || (_5030_k == jule::Str("u64", 3)));
}



inline jule::Bool _1a76685c1_is_f32_compatible(jule::Str _5830_k) {
	return (_5830_k == jule::Str("f32", 3));
}



inline jule::Bool _1a7668868_is_f64_compatible(jule::Str _6330_k) {
	return (_6330_k == jule::Str("f64", 3));
}



inline jule::Bool _1a7668ba9_types_are_compatible(jule::Str _7033_k1, jule::Str _7042_k2) {
	{
		auto &_match_expr{ _7033_k1 };
		
		if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1a9606172:;
			{
				return true;
			}
		}
		else if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1a96061d8:;
			{
				return (_7042_k2 == jule::Str("int", 3));
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1a9606293:;
			{
				return (_7042_k2 == jule::Str("uintptr", 7));
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1a9606309:;
			{
				return (_7042_k2 == jule::Str("uint", 4));
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1a9605c65:;
			{
				return _1a7666d94_is_i8_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1a9605ccb:;
			{
				return _1a7667180_is_i16_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1a9605d42:;
			{
				return _1a7667427_is_i32_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1a9605da8:;
			{
				return _1a7667713_is_i64_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1a96063a3:;
			{
				return _1a76679aa_is_u8_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1a960642a:;
			{
				return _1a7667c52_is_u16_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1a96064a2:;
			{
				return _1a7667ee9_is_u32_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1a9606529:;
			{
				return _1a7668329_is_u64_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1a96065a1:;
			{
				return _1a76685c1_is_f32_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1a9606628:;
			{
				return _1a7668868_is_f64_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("bool", 4)) {
			_case_begin_1a96066a0:;
			{
				return (_7042_k2 == jule::Str("bool", 4));
			}
		}
		else if (_match_expr == jule::Str("str", 3)) {
			_case_begin_1a9606727:;
			{
				return (_7042_k2 == jule::Str("str", 3));
			}
		}
		else {
			_case_begin_1a95eee6d:;
			{
				return false;
			}
		}
		_match_end_1a95c9d9e:;
	};
}



inline jule::Bool _1a7668e51_is_i16_greater(jule::Str _11027_k) {
	return (_11027_k == jule::Str("i8", 2));
}



inline jule::Bool _1a76691e8_is_i32_greater(jule::Str _11527_k) {
	return ((_11527_k == jule::Str("i8", 2)) || (_11527_k == jule::Str("i16", 3)));
}



inline jule::Bool _1a7669490_is_i64_greater(jule::Str _12027_k) {
	return (((_12027_k == jule::Str("i8", 2)) || (_12027_k == jule::Str("i16", 3))) || (_12027_k == jule::Str("i32", 3)));
}



inline jule::Bool _1a7669737_is_u16_greater(jule::Str _12727_k) {
	return (_12727_k == jule::Str("u8", 2));
}



inline jule::Bool _1a7669b00_is_u32_greater(jule::Str _13227_k) {
	return ((_13227_k == jule::Str("u8", 2)) || (_13227_k == jule::Str("u16", 3)));
}



inline jule::Bool _1a7669d97_is_u64_greater(jule::Str _13827_k) {
	return (((_13827_k == jule::Str("u8", 2)) || (_13827_k == jule::Str("u16", 3))) || (_13827_k == jule::Str("u32", 3)));
}



inline jule::Bool _1a766a13e_is_f32_greater(jule::Str _14523_k) {
	return (_14523_k != jule::Str("f64", 3));
}



inline jule::Bool _1a766a3d6_is_f64_greater(jule::Str _15023_k) {
	return true;
}



inline jule::Bool _1a766a727_is_greater(jule::Str _15523_k1, jule::Str _15532_k2) {
	{
		auto &_match_expr{ _15523_k1 };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1a9610269:;
			{
				return _1a766b849_is_sig_int(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1a96102d0:;
			{
				return _1a766bb35_is_unsig_int(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1a960eed3:;
			{
				return _1a766bb35_is_unsig_int(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1a9610049:;
			{
				return _1a7668e51_is_i16_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1a96100b0:;
			{
				return _1a76691e8_is_i32_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1a960ec6e:;
			{
				return _1a7669490_is_i64_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1a960ecd5:;
			{
				return _1a7669737_is_u16_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1a960ed5c:;
			{
				return _1a7669b00_is_u32_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1a9610379:;
			{
				return _1a7669d97_is_u64_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1a96103e0:;
			{
				return _1a766a13e_is_f32_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1a9610456:;
			{
				return _1a766a3d6_is_f64_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1a96104bc:;
			{
				return true;
			}
		}
		else {
			_case_begin_1a960e8d9:;
			{
				return false;
			}
		}
		_match_end_1a9606b12:;
	};
}



inline jule::Bool _1a766b849_is_sig_int(jule::Str _2723_k) {
	return (((((_2723_k == jule::Str("i8", 2)) || (_2723_k == jule::Str("i16", 3))) || (_2723_k == jule::Str("i32", 3))) || (_2723_k == jule::Str("i64", 3))) || (_2723_k == jule::Str("int", 3)));
}



inline jule::Bool _1a766bb35_is_unsig_int(jule::Str _3625_k) {
	return ((((((_3625_k == jule::Str("u8", 2)) || (_3625_k == jule::Str("u16", 3))) || (_3625_k == jule::Str("u32", 3))) || (_3625_k == jule::Str("u64", 3))) || (_3625_k == jule::Str("uint", 4))) || (_3625_k == jule::Str("uintptr", 7)));
}



inline jule::Bool _1a766bdcc_is_int(jule::Str _4615_k) {
	return (_1a766b849_is_sig_int(_4615_k) || _1a766bb35_is_unsig_int(_4615_k));
}



inline jule::Bool _1a766c1b8_is_float(jule::Str _5117_k) {
	return ((_5117_k == jule::Str("f32", 3)) || (_5117_k == jule::Str("f64", 3)));
}



inline jule::Bool _1a766c460_is_num(jule::Str _5615_k) {
	return (_1a766bdcc_is_int(_5615_k) || _1a766c1b8_is_float(_5615_k));
}



inline jule::Bool _1a76d7244_is_ascii(jule::I32 _1017_r) {
	;
	return (_1017_r <= 127LL);
}



inline jule::I32 _1a76d8c18_to_rune(jule::Slice<jule::U8> _1816_bytes) {
	if ((_1816_bytes.len() == 0LL)) {
		return 0LL;
	};
	jule::I32 _2313_r = 0LL;;
	if (((_1816_bytes[0LL] == '\\') && (_1816_bytes.len() > 1LL))) {
		jule::I64 _2517_i = 0LL;;
		_2313_r=static_cast<jule::I32>(_1a76d96b9_rune_from_esq_seq(_1816_bytes,_2517_i));
	} else {
		std::tie(_2313_r,std::ignore) = _1a4291670_decode_rune(_1816_bytes);
	};
	return _2313_r;
}



inline jule::Str _1a76d8d4a_to_raw_str(jule::Slice<jule::U8> _3719_bytes) {
	return static_cast<jule::Str>(_3719_bytes);
}



inline jule::Str _1a76d90d1_to_str(jule::Slice<jule::U8> _4215_bytes) {
	if ((_4215_bytes.len() == 0LL)) {
		return jule::Str();
	};
	jule::Slice<jule::U8> _4713_s = jule::Slice<jule::U8>::alloc(0LL,_4215_bytes.len());;
	jule::I64 _4813_i = 0LL;;
	while ((_4813_i < _4215_bytes.len())) {
		{
			jule::U8 _5013_b = _4215_bytes[_4813_i];;
			if ((_5013_b == '\\')) {
				_4713_s=jule::append(_4713_s,_1a76d9a0a_str_esq_seq(_4215_bytes,_4813_i));
			} else {
				jule::I32 _5418_r;;
				jule::I64 _5421_size;;
				std::tie(_5418_r,_5421_size) = _1a4291670_decode_rune(_4215_bytes.slice(_4813_i));
				_4813_i+=_5421_size;
				_4713_s=_1a429295c_append_rune(_4713_s,_5418_r);
			};
		}
	_iter_next_1a961d1bc:;
	}
	_iter_end_1a961d1bc:;;
	return static_cast<jule::Str>(_4713_s);
}



inline std::tuple<jule::U8,jule::Bool> _1a76d9378_try_btoa_common_esq(jule::Slice<jule::U8> _6224_bytes) {
	jule::U8 _6241_seq = jule::U8();
	jule::Bool _6252_ok = jule::Bool();
	if (((_6224_bytes.len() < 2LL) || (_6224_bytes[0LL] != '\\'))) {
		return std::make_tuple(_6241_seq,_6252_ok);
	};
	{
		auto &_match_expr{ _6224_bytes[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_1a96223be:;
			{
				_6241_seq='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1a9622e6e:;
			{
				_6241_seq='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1a9622ed5:;
			{
				_6241_seq='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_1a962304b:;
			{
				_6241_seq='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_1a96230c3:;
			{
				_6241_seq='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1a962314a:;
			{
				_6241_seq='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_1a96231c2:;
			{
				_6241_seq='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_1a9623249:;
			{
				_6241_seq='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_1a96232c1:;
			{
				_6241_seq='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_1a9623348:;
			{
				_6241_seq='\v';
			}
		}
		_match_end_1a9622d2b:;
	};
	_6252_ok=(_6241_seq != 0LLU);
	return std::make_tuple(_6241_seq,_6252_ok);
}



inline jule::I32 _1a76d96b9_rune_from_esq_seq(jule::Slice<jule::U8> _9422_bytes, jule::I64& _9442_i) {
	jule::U8 _9510_b;;
	jule::Bool _9513_ok;;
	std::tie(_9510_b,_9513_ok) = _1a76d9378_try_btoa_common_esq(_9422_bytes.slice(_9442_i));
	(_9442_i)++;
	if (_9513_ok) {
		(_9442_i)++;
		return static_cast<jule::I32>(static_cast<jule::I32>(_9510_b));
	};
	{
		auto &_match_expr{ _9422_bytes[_9442_i] };
		
		if (_match_expr == 'u') {
			_case_begin_1a9628914:;
			{
				;
				jule::I32 _10513_r = static_cast<jule::I32>(({
					auto except = _1a6dbe0e1_parse_uint(static_cast<jule::Str>(_9422_bytes.slice((_9442_i + 1LL),(_9442_i + 5LL))),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:105:22"));
					(except.result);
				}));;
				_9442_i+=5LL;
				return _10513_r;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1a96285d4:;
			{
				;
				jule::I32 _11013_r = static_cast<jule::I32>(({
					auto except = _1a6dbe0e1_parse_uint(static_cast<jule::Str>(_9422_bytes.slice((_9442_i + 1LL),(_9442_i + 9LL))),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:110:22"));
					(except.result);
				}));;
				_9442_i+=9LL;
				return _11013_r;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1a962864a:;
			{
				;
				jule::Slice<jule::U8> _11513_seq = _9422_bytes.slice((_9442_i + 1LL),(_9442_i + 3LL));;
				_9442_i+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _1a6dbe0e1_parse_uint(static_cast<jule::Str>(_11513_seq),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:117:18"));
					(except.result);
				})));
			}
		}
		else {
			_case_begin_1a962766b:;
			{
				;
				jule::Slice<jule::U8> _12013_seq = _9422_bytes.slice(_9442_i,(_9442_i + 3LL));;
				_9442_i+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _1a6dbe0e1_parse_uint(static_cast<jule::Str>(_12013_seq.slice(1LL)),8LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:122:18"));
					(except.result);
				})));
			}
		}
		_match_end_1a962745c:;
	};
}



inline jule::Slice<jule::U8> _1a76d9a0a_str_esq_seq(jule::Slice<jule::U8> _12616_bytes, jule::I64& _12636_i) {
	jule::I32 _1279_r = _1a76d96b9_rune_from_esq_seq(_12616_bytes,_12636_i);;
	if ((_1279_r <= 255LL)) {
		return jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_1279_r))});
	};
	return static_cast<jule::Slice<jule::U8>>(static_cast<jule::Str>(_1279_r));
}



inline jule::I64 _1a77c9bb6_find_format_prefix(jule::Slice<jule::U8>& _924_bytes, jule::I64& _940_start) {
	jule::I64 _1013_i = _940_start;;
	while ((_1013_i < _924_bytes.len())) {
		{
			jule::I32 _1214_r;;
			jule::I64 _1217_size;;
			std::tie(_1214_r,_1217_size) = _1a4291670_decode_rune(_924_bytes.slice(_1013_i));
			if ((_1214_r == '{')) {
				return _1013_i;
			};
			_1013_i+=_1217_size;
		}
	_iter_next_1a9666787:;
	}
	_iter_end_1a9666787:;;
	return -1LL;
}



inline jule::Slice<jule::U8> _1a77c63dd_get_format_range(jule::I64& _2630_i, jule::Slice<jule::U8>& _2643_bytes) {
	jule::I64 _279_start = _2630_i;;
	jule::I64 _2813_braces = 0LL;;
	while ((_2630_i < _2643_bytes.len())) {
		{
			jule::I32 _3014_r;;
			jule::I64 _3017_size;;
			std::tie(_3014_r,_3017_size) = _1a4291670_decode_rune(_2643_bytes.slice(_2630_i));
			_2630_i+=_3017_size;
			{
				auto &_match_expr{ _3014_r };
				
				if (_match_expr == '{') {
					_case_begin_1a9669e50:;
					{
						(_2813_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_1a9669eb6:;
					{
						(_2813_braces)--;
						if ((_2813_braces == 0LL)) {
							return _2643_bytes.slice(_279_start,_2630_i);
						};
					}
				}
				_match_end_1a9669dea:;
			};
		}
	_iter_next_1a96690b4:;
	}
	_iter_end_1a96690b4:;;
	return nullptr;
}



inline jule::Slice<jule::U8> _1a7795a94_fmt_by_default(jule::Any& _4520_arg) {
	if ((_4520_arg == nullptr)) {
		return jule::Slice<jule::U8>::make({'<','n','i','l','>'});
	};
	{
		auto &_match_expr{ _4520_arg };
		
		if (_match_expr.type_is<jule::F32>()) {
			_case_begin_1a966be1e:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1a6d3c290_fmt_float(static_cast<jule::F64>(static_cast<jule::F64>(_4520_arg.operator jule::F32())),'g',-1LL,32LL));
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1a966ba67:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1a6d3c290_fmt_float(static_cast<jule::F64>(_4520_arg.operator jule::F64()),'g',-1LL,64LL));
			}
		}
		else if (_match_expr.type_is<jule::I8>()) {
			_case_begin_1a966a219:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1a7538bbc_fmt_int(static_cast<jule::I64>(_4520_arg.operator jule::I8()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::I16>()) {
			_case_begin_1a966b759:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1a7538bbc_fmt_int(static_cast<jule::I64>(_4520_arg.operator jule::I16()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::I32>()) {
			_case_begin_1a966b7c0:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1a7538bbc_fmt_int(static_cast<jule::I64>(_4520_arg.operator jule::I32()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1a966b847:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1a7538bbc_fmt_int(static_cast<jule::I64>(_4520_arg.operator jule::I64()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U8>()) {
			_case_begin_1a966b8ad:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1a7538a8a_fmt_uint(static_cast<jule::U64>(_4520_arg.operator jule::U8()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U16>()) {
			_case_begin_1a9669108:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1a7538a8a_fmt_uint(static_cast<jule::U64>(_4520_arg.operator jule::U16()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U32>()) {
			_case_begin_1a966916e:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1a7538a8a_fmt_uint(static_cast<jule::U64>(_4520_arg.operator jule::U32()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1a96691d5:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1a7538a8a_fmt_uint(static_cast<jule::U64>(_4520_arg.operator jule::U64()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::Str>()) {
			_case_begin_1a966924b:;
			{
				return static_cast<jule::Slice<jule::U8>>(_4520_arg.operator jule::Str());
			}
		}
		else if (_match_expr.type_is<jule::Bool>()) {
			_case_begin_1a966beb8:;
			{
				if (_4520_arg.operator jule::Bool()) {
					return jule::Slice<jule::U8>::make({'t','r','u','e'});
				};
				return jule::Slice<jule::U8>::make({'f','a','l','s','e'});
			}
		}
		else {
			_case_begin_1a966b182:;
			{
				return static_cast<jule::Slice<jule::U8>>(jule::to_str(_4520_arg));
			}
		}
		_match_end_1a966a2a2:;
	};
}



inline jule::Slice<jule::U8> _1a77ad826_apply_fmt_by_default(jule::I64& _8330_j, jule::Slice<jule::Any>& _8339_args) {
	jule::Any _849_arg = _8339_args[_8330_j];;
	(_8330_j)++;
	return _1a7795a94_fmt_by_default(_849_arg);
}



inline jule::Slice<jule::U8> _1a4298a95_apply_fmt(jule::Slice<jule::U8>& _9119_fmt, jule::I64& _9137_j, jule::Slice<jule::Any>& _9146_args) {
	if ((_9119_fmt.len() == 2LL)) {
		return _1a77ad826_apply_fmt_by_default(_9137_j,_9146_args);
	};
	if (((_9119_fmt.len() == 4LL) && (_9119_fmt == jule::Slice<jule::U8>::make({'{','{','}','}'})))) {
		return jule::Slice<jule::U8>::make({'{','}'});
	};
	return _9119_fmt;
}



inline jule::Slice<jule::U8> _1a77a5ee4_format_bytes(jule::Str _10517_fmt, jule::Slice<jule::Any> _10527_args) {
	jule::Slice<jule::U8> _10613_fmt_bytes = static_cast<jule::Slice<jule::U8>>(_10517_fmt);;
	if ((_10527_args.len() == 0LL)) {
		return _10613_fmt_bytes;
	};
	jule::Slice<jule::U8> _11213_bytes = jule::Slice<jule::U8>::alloc(0LL,_10517_fmt.len());;
	jule::I64 _11413_j = 0LL;;
	jule::I64 _11513_last = 0LL;;
	jule::I64 _11613_i = _1a77c9bb6_find_format_prefix(_10613_fmt_bytes,_11513_last);;
	for (; (_11613_i != -1LL); _11613_i=static_cast<jule::I64>(_1a77c9bb6_find_format_prefix(_10613_fmt_bytes,_11613_i))) {
		{
			_11213_bytes=jule::append(_11213_bytes,_10613_fmt_bytes.slice(_11513_last,_11613_i));
			jule::Slice<jule::U8> _11917_format = _1a77c63dd_get_format_range(_11613_i,_10613_fmt_bytes);;
			if ((_11917_format == nullptr)) {
				goto _iter_next_1a9678733;
			};
			_11213_bytes=jule::append(_11213_bytes,_1a4298a95_apply_fmt(_11917_format,_11413_j,_10527_args));
			if ((_11413_j >= _10527_args.len())) {
				_11213_bytes=jule::append(_11213_bytes,_10613_fmt_bytes.slice(_11613_i));
				_11513_last=static_cast<jule::I64>(_10613_fmt_bytes.len());
				goto _iter_end_1a9678733;
			};
			_11513_last=_11613_i;
		}
	_iter_next_1a9678733:;
	}
	_iter_end_1a9678733:;;
	if ((_11513_last < _10613_fmt_bytes.len())) {
		_11213_bytes=jule::append(_11213_bytes,_10613_fmt_bytes.slice(_11513_last));
	};
	return _11213_bytes;
}



inline jule::Str _1a77a6126_format(jule::Str _16515_fmt, jule::Slice<jule::Any> _16525_args) {
	return static_cast<jule::Str>(_1a77a5ee4_format_bytes(_16515_fmt,jule::Any(_16525_args)));
}



inline jule::Bool _1a68747bc_parameter_uses_generics(jule::Ptr<_1a68707da_Param>& _39329_p, jule::Slice<jule::Ptr<_1a685d960_GenericDecl>>& _39341_generics) {
	if (_1a68491ed_is_self(_39329_p.ptr())) {
		return false;
	};
	return _1a773ceae_kind_uses_generics(_39329_p.get()._field_kind.get()._field_decl.get()._field_kind,_39341_generics);
}



inline jule::Ptr<_1a772b772_TypeSymbol> _1a68771c6_build_type(jule::Ptr<_1a68529cb_TypeDecl> _8619_t) {
	if ((_8619_t == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1a772b772_TypeSymbol>(_1a772b772_TypeSymbol{._field_decl=_8619_t, });
}



inline jule::Ptr<_1a76eee2c_Value> _1a68774b2_build_expr(jule::Ptr<_1a6855e41_Expr> _9519_expr) {
	if ((_9519_expr == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1a76eee2c_Value>(_1a76eee2c_Value{._field_expr=_9519_expr, });
}



inline jule::Ptr<_1a7726b9b_TypeAlias> _1a6877759_build_type_alias(jule::Ptr<_1a6866957_TypeAliasDecl> _10425_decl) {
	return jule::new_ptr<_1a7726b9b_TypeAlias>(_1a7726b9b_TypeAlias{._field_scope=_10425_decl.get()._field_scope, ._field_public=_10425_decl.get()._field_public, ._field_cpp_linked=_10425_decl.get()._field_cpp_linked, ._field_token=_10425_decl.get()._field_token, ._field_ident=_10425_decl.get()._field_ident, ._field_kind=_1a68771c6_build_type(_10425_decl.get()._field_kind), });
}



inline jule::Ptr<_1a6844a23_Field> _1a6877a45_build_field(jule::Ptr<_1a6869938_FieldDecl> _11520_decl) {
	return jule::new_ptr<_1a6844a23_Field>(_1a6844a23_Field{._field_token=_11520_decl.get()._field_token, ._field_public=_11520_decl.get()._field_public, ._field_mutable=_11520_decl.get()._field_mutable, ._field_ident=_11520_decl.get()._field_ident, ._field_kind=_1a68771c6_build_type(_11520_decl.get()._field_kind), ._field_default=_11520_decl.get()._field_default});
}



inline jule::Slice<jule::Ptr<_1a6844a23_Field>> _1a6877cdc_build_fields(jule::Slice<jule::Ptr<_1a6869938_FieldDecl>>& _12622_decls) {
	jule::Slice<jule::Ptr<_1a6844a23_Field>> _12713_fields = jule::Slice<jule::Ptr<_1a6844a23_Field>>::alloc(0LL,_12622_decls.len());;
	{
		auto &expr = _12622_decls;
		auto it = expr.begin();
		_iter_begin_1a97e3150:;
		if (it != expr.end()) {
			jule::Ptr<_1a6869938_FieldDecl> _12817_decl = *it;
			{
				_12713_fields = jule::alloc_for_append(_12713_fields,1);_12713_fields.__push(_1a6877a45_build_field(_12817_decl));;
			}
			_iter_next_1a97e3150:;
			++it;
			goto _iter_begin_1a97e3150;
		}
		_iter_end_1a97e3150:;
	};
	return _12713_fields;
}



inline jule::Ptr<_1a6826829_Struct> _1a6878084_build_struct(jule::Ptr<_1a686a296_StructDecl> _13421_decl) {
	return jule::new_ptr<_1a6826829_Struct>(_1a6826829_Struct{._field_token=_13421_decl.get()._field_token, ._field_ident=_13421_decl.get()._field_ident, ._field_fields=_1a6877cdc_build_fields(_13421_decl.get()._field_fields), ._field_public=_13421_decl.get()._field_public, ._field_cpp_linked=_13421_decl.get()._field_cpp_linked, ._field_directives=_13421_decl.get()._field_directives, ._field_generics=_13421_decl.get()._field_generics, });
}



inline jule::Ptr<_1a68707da_Param> _1a687832b_build_param(jule::Ptr<_1a6860dd5_ParamDecl> _14620_decl) {
	return jule::new_ptr<_1a68707da_Param>(_1a68707da_Param{._field_token=_14620_decl.get()._field_token, ._field_mutable=_14620_decl.get()._field_mutable, ._field_variadic=_14620_decl.get()._field_variadic, ._field_reference=_14620_decl.get()._field_reference, ._field_kind=_1a68771c6_build_type(_14620_decl.get()._field_kind), ._field_ident=_14620_decl.get()._field_ident});
}



inline jule::Slice<jule::Ptr<_1a68707da_Param>> _1a687865b_build_params(jule::Slice<jule::Ptr<_1a6860dd5_ParamDecl>>& _15722_decls) {
	jule::Slice<jule::Ptr<_1a68707da_Param>> _15813_params = jule::Slice<jule::Ptr<_1a68707da_Param>>::alloc(0LL,_15722_decls.len());;
	{
		auto &expr = _15722_decls;
		auto it = expr.begin();
		_iter_begin_1a97e5e55:;
		if (it != expr.end()) {
			jule::Ptr<_1a6860dd5_ParamDecl> _15917_decl = *it;
			{
				_15813_params = jule::alloc_for_append(_15813_params,1);_15813_params.__push(_1a687832b_build_param(_15917_decl));;
			}
			_iter_next_1a97e5e55:;
			++it;
			goto _iter_begin_1a97e5e55;
		}
		_iter_end_1a97e5e55:;
	};
	return _15813_params;
}



inline jule::Ptr<_1a68705ed_RetType> _1a6878903_build_ret_type(jule::Ptr<_1a68557ae_RetTypeDecl> _16523_decl) {
	if (((_16523_decl.get()._field_idents == nullptr) && (_16523_decl.get()._field_kind == nullptr))) {
		return nullptr;
	};
	return jule::new_ptr<_1a68705ed_RetType>(_1a68705ed_RetType{._field_kind=_1a68771c6_build_type(_16523_decl.get()._field_kind), ._field_idents=_16523_decl.get()._field_idents});
}



inline jule::Ptr<_1a68709c7_Fn> _1a6878b9a_build_fn(jule::Ptr<_1a6862205_FnDecl> _17517_decl) {
	return jule::new_ptr<_1a68709c7_Fn>(_1a68709c7_Fn{._field_token=_17517_decl.get()._field_token, ._field_global=_17517_decl.get()._field_global, ._field_unsafety=_17517_decl.get()._field_unsafety, ._field_public=_17517_decl.get()._field_public, ._field_cpp_linked=_17517_decl.get()._field_cpp_linked, ._field_statically=_17517_decl.get()._field_statically, ._field_exceptional=_17517_decl.get()._field_exceptional, ._field_ident=_17517_decl.get()._field_ident, ._field_directives=_17517_decl.get()._field_directives, ._field_scope=_17517_decl.get()._field_scope, ._field_generics=_17517_decl.get()._field_generics, ._field_result=_1a6878903_build_ret_type(_17517_decl.get()._field_result), ._field_params=_1a687865b_build_params(_17517_decl.get()._field_params), });
}



inline jule::Slice<jule::Ptr<_1a68709c7_Fn>> _1a6878e42_build_methods(jule::Slice<jule::Ptr<_1a6862205_FnDecl>>& _19323_decls) {
	jule::Slice<jule::Ptr<_1a68709c7_Fn>> _19413_methods = jule::Slice<jule::Ptr<_1a68709c7_Fn>>::alloc(0LL,_19323_decls.len());;
	{
		auto &expr = _19323_decls;
		auto it = expr.begin();
		_iter_begin_1a97e9a08:;
		if (it != expr.end()) {
			jule::Ptr<_1a6862205_FnDecl> _19517_decl = *it;
			{
				_19413_methods = jule::alloc_for_append(_19413_methods,1);_19413_methods.__push(_1a6878b9a_build_fn(_19517_decl));;
			}
			_iter_next_1a97e9a08:;
			++it;
			goto _iter_begin_1a97e9a08;
		}
		_iter_end_1a97e9a08:;
	};
	return _19413_methods;
}



inline jule::Ptr<_1a68d46b7_Trait> _1a68791d9_build_trait(jule::Ptr<_1a686a8a1_TraitDecl> _20120_decl) {
	return jule::new_ptr<_1a68d46b7_Trait>(_1a68d46b7_Trait{._field_token=_20120_decl.get()._field_token, ._field_ident=_20120_decl.get()._field_ident, ._field_public=_20120_decl.get()._field_public, ._field_methods=_1a6878e42_build_methods(_20120_decl.get()._field_methods), });
}



inline jule::Ptr<_1a693b6b9_EnumItem> _1a6879481_build_enum_item(jule::Ptr<_1a68682b6_EnumItemDecl> _21024_decl) {
	return jule::new_ptr<_1a693b6b9_EnumItem>(_1a693b6b9_EnumItem{._field_token=_21024_decl.get()._field_token, ._field_ident=_21024_decl.get()._field_ident, ._field_value=_1a68774b2_build_expr(_21024_decl.get()._field_expr)});
}



inline jule::Slice<jule::Ptr<_1a693b6b9_EnumItem>> _1a6879728_build_enum_items(jule::Slice<jule::Ptr<_1a68682b6_EnumItemDecl>>& _21826_decls) {
	jule::Slice<jule::Ptr<_1a693b6b9_EnumItem>> _21913_items = jule::Slice<jule::Ptr<_1a693b6b9_EnumItem>>::alloc(0LL,_21826_decls.len());;
	{
		auto &expr = _21826_decls;
		auto it = expr.begin();
		_iter_begin_1a97ec225:;
		if (it != expr.end()) {
			jule::Ptr<_1a68682b6_EnumItemDecl> _22017_decl = *it;
			{
				_21913_items = jule::alloc_for_append(_21913_items,1);_21913_items.__push(_1a6879481_build_enum_item(_22017_decl));;
			}
			_iter_next_1a97ec225:;
			++it;
			goto _iter_begin_1a97ec225;
		}
		_iter_end_1a97ec225:;
	};
	return _21913_items;
}



inline jule::Ptr<_1a6982435_Enum> _1a68799c0_build_enum(jule::Ptr<_1a6868e10_EnumDecl> _22619_decl) {
	return jule::new_ptr<_1a6982435_Enum>(_1a6982435_Enum{._field_token=_22619_decl.get()._field_token, ._field_public=_22619_decl.get()._field_public, ._field_ident=_22619_decl.get()._field_ident, ._field_kind=_1a68771c6_build_type(_22619_decl.get()._field_kind), ._field_items=_1a6879728_build_enum_items(_22619_decl.get()._field_items)});
}



inline jule::Ptr<_1a76a7720_Var> _1a6879d88_build_var(jule::Ptr<_1a68631d4_VarDecl> _23618_decl) {
	return jule::new_ptr<_1a76a7720_Var>(_1a76a7720_Var{._field_token=_23618_decl.get()._field_token, ._field_ident=_23618_decl.get()._field_ident, ._field_cpp_linked=_23618_decl.get()._field_cpp_linked, ._field_constant=_23618_decl.get()._field_constant, ._field_mutable=_23618_decl.get()._field_mutable, ._field_public=_23618_decl.get()._field_public, ._field_statically=_23618_decl.get()._field_statically, ._field_reference=_23618_decl.get()._field_reference, ._field_kind=_1a68771c6_build_type(_23618_decl.get()._field_kind), ._field_value=_1a68774b2_build_expr(_23618_decl.get()._field_expr), ._field_refers=static__1a6875c96_new(), ._field_directives=_23618_decl.get()._field_directives, });
}



inline jule::Slice<jule::Ptr<_1a76a7720_Var>> _1a687a130_build_vars(jule::Slice<jule::Ptr<_1a68631d4_VarDecl>> _25319_decls) {
	jule::Slice<jule::Ptr<_1a76a7720_Var>> _25413_vars = jule::Slice<jule::Ptr<_1a76a7720_Var>>::alloc(0LL,_25319_decls.len());;
	{
		auto &expr = _25319_decls;
		auto it = expr.begin();
		_iter_begin_1a980068a:;
		if (it != expr.end()) {
			jule::Ptr<_1a68631d4_VarDecl> _25517_decl = *it;
			{
				_25413_vars = jule::alloc_for_append(_25413_vars,1);_25413_vars.__push(_1a6879d88_build_var(_25517_decl));;
			}
			_iter_next_1a980068a:;
			++it;
			goto _iter_begin_1a980068a;
		}
		_iter_end_1a980068a:;
	};
	return _25413_vars;
}



inline jule::Ptr<_1a6c31b02_Impl> _1a687a3c7_build_impl(jule::Ptr<_1a686aeab_Impl> _26119_decl) {
	return jule::new_ptr<_1a6c31b02_Impl>(_1a6c31b02_Impl{._field_base=_26119_decl.get()._field_base, ._field_dest=_26119_decl.get()._field_dest, ._field_methods=_1a6878e42_build_methods(_26119_decl.get()._field_methods), ._field_statics=_1a687a130_build_vars(_26119_decl.get()._field_statics)});
}



inline jule::Ptr<_1a766e374_ScopeChecker> _1a75dc116_new_scope_checker_base(jule::Ptr<_1a768cc22_Sema>& _4032_s, jule::Ptr<_1a6872c93_FnIns> _4046_owner) {
	return jule::new_ptr<_1a766e374_ScopeChecker>(_1a766e374_ScopeChecker{._field_s=_4032_s, ._field_owner=_4046_owner, ._field_table=jule::new_ptr<_1a76e8e26_SymbolTable>(), });
}



inline jule::Ptr<_1a766e374_ScopeChecker> _1a75e3826_new_scope_checker(jule::Ptr<_1a768cc22_Sema>& _4827_s, jule::Ptr<_1a6872c93_FnIns> _4841_owner) {
	jule::Ptr<_1a766e374_ScopeChecker> _4913_base = _1a75dc116_new_scope_checker_base(_4827_s,_4841_owner);;
	_4913_base.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1a766de9a_ScopeLabel>>>(nullptr);
	_4913_base.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1a766e187_ScopeGoto>>>(nullptr);
	return _4913_base;
}



inline jule::Ptr<_1a766de9a_ScopeLabel> _1a7636ea7_find_label_parent(jule::Str _5822_ident, jule::Ptr<_1a766e374_ScopeChecker> _5838_scope) {
	jule::Ptr<_1a766de9a_ScopeLabel> _5913_label = _1a7671e9d_find_label_scope(_5838_scope, _5822_ident);;
	while ((_5913_label == nullptr)) {
		{
			if (((_5838_scope.get()._field_parent == nullptr) || (_5838_scope.get()._field_owner != nullptr))) {
				return nullptr;
			};
			_5838_scope=_5838_scope.get()._field_parent;
			_5913_label=_1a7671e9d_find_label_scope(_5838_scope, _5822_ident);
		}
	_iter_next_1a9981013:;
	}
	_iter_end_1a9981013:;;
	return _5913_label;
}



inline jule::Bool _1a76396c4_model_is_goto_scope(jule::Any& _7225_model, jule::Ptr<_1a7658803_Scope>& _7238_sc) {
	{
		auto &_match_expr{ _7225_model };
		
		if (_match_expr.type_is<jule::Ptr<_1a6845150_FnCallExprModel>>()) {
			_case_begin_1a9982971:;
			{
				jule::Ptr<_1a6845150_FnCallExprModel> _7513_fcem = _7225_model.operator jule::Ptr<_1a6845150_FnCallExprModel>();;
				if ((_7513_fcem.get()._field_except == _7238_sc)) {
					return true;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a76edda4_Data>>()) {
			_case_begin_1a99829e8:;
			{
				jule::Ptr<_1a76edda4_Data> _8013_d = _7225_model.operator jule::Ptr<_1a76edda4_Data>();;
				return _1a76396c4_model_is_goto_scope(_8013_d.get()._field_model,_7238_sc);
			}
		}
		_match_end_1a998290a:;
	};
	return false;
}



inline jule::Bool _1a7639e55_stmt_is_goto_scope(jule::Any& _8624_stmt, jule::Ptr<_1a7658803_Scope>& _8636_sc) {
	{
		auto &_match_expr{ _8624_stmt };
		
		if (_match_expr.type_is<jule::Ptr<_1a7658803_Scope>>()) {
			_case_begin_1a9984e6d:;
			{
				return (_8624_stmt.operator jule::Ptr<_1a7658803_Scope>() == _8636_sc);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a761aa90_InfIter>>()) {
			_case_begin_1a9984335:;
			{
				return (_8624_stmt.operator jule::Ptr<_1a761aa90_InfIter>().get()._field_scope == _8636_sc);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a7648b23_RangeIter>>()) {
			_case_begin_1a9984962:;
			{
				jule::Ptr<_1a7648b23_RangeIter> _9313_it = _8624_stmt.operator jule::Ptr<_1a7648b23_RangeIter>();;
				return ((_9313_it.get()._field_scope == _8636_sc) || _1a76396c4_model_is_goto_scope(_9313_it.get()._field_expr.get()._field_model,_8636_sc));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a761ac7c_WhileIter>>()) {
			_case_begin_1a99849c8:;
			{
				jule::Ptr<_1a761ac7c_WhileIter> _9613_it = _8624_stmt.operator jule::Ptr<_1a761ac7c_WhileIter>();;
				return (((_9613_it.get()._field_scope == _8636_sc) || _1a76396c4_model_is_goto_scope(_9613_it.get()._field_expr,_8636_sc)) || _1a76396c4_model_is_goto_scope(_9613_it.get()._field_next,_8636_sc));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a766d4b6_Match>>()) {
			_case_begin_1a9984a3e:;
			{
				jule::Ptr<_1a766d4b6_Match> _10113_m = _8624_stmt.operator jule::Ptr<_1a766d4b6_Match>();;
				{
					auto &expr = _10113_m.get()._field_cases;
					auto it = expr.begin();
					_iter_begin_1a9988812:;
					if (it != expr.end()) {
						jule::Ptr<_1a766d8d4_Case> &_10216_c = *it;
						{
							if ((_10216_c.get()._field_scope == _8636_sc)) {
								return true;
							};
							{
								auto &expr = _10216_c.get()._field_exprs;
								auto it = expr.begin();
								_iter_begin_1a9989538:;
								if (it != expr.end()) {
									jule::Ptr<_1a76edda4_Data> &_10620_expr = *it;
									{
										if (_1a76396c4_model_is_goto_scope(_10620_expr.get()._field_model,_8636_sc)) {
											return true;
										};
									}
									_iter_next_1a9989538:;
									++it;
									goto _iter_begin_1a9989538;
								}
								_iter_end_1a9989538:;
							};
						}
						_iter_next_1a9988812:;
						++it;
						goto _iter_begin_1a9988812;
					}
					_iter_end_1a9988812:;
				};
				return ((_10113_m.get()._field_default != nullptr) && (_10113_m.get()._field_default.get()._field_scope == _8636_sc));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a7609e69_Conditional>>()) {
			_case_begin_1a9984bd7:;
			{
				jule::Ptr<_1a7609e69_Conditional> _11413_c = _8624_stmt.operator jule::Ptr<_1a7609e69_Conditional>();;
				{
					auto &expr = _11413_c.get()._field_elifs;
					auto it = expr.begin();
					_iter_begin_1a998ab77:;
					if (it != expr.end()) {
						jule::Ptr<_1a7660200_If> &_11516_elif = *it;
						{
							if (((_11516_elif.get()._field_scope == _8636_sc) || _1a76396c4_model_is_goto_scope(_11516_elif.get()._field_expr,_8636_sc))) {
								return true;
							};
						}
						_iter_next_1a998ab77:;
						++it;
						goto _iter_begin_1a998ab77;
					}
					_iter_end_1a998ab77:;
				};
				return ((_11413_c.get()._field_default != nullptr) && (_11413_c.get()._field_default.get()._field_scope == _8636_sc));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a76edda4_Data>>()) {
			_case_begin_1a9984c4d:;
			{
				jule::Ptr<_1a76edda4_Data> _12213_d = _8624_stmt.operator jule::Ptr<_1a76edda4_Data>();;
				return _1a76396c4_model_is_goto_scope(_12213_d.get()._field_model,_8636_sc);
			}
		}
		else {
			_case_begin_1a9982d4a:;
			{
				return false;
			}
		}
		_match_end_1a9982ce5:;
	};
}



inline jule::I64 _1a763aa8d_count_match_type(jule::Ptr<_1a766d4b6_Match>& _12922_m, jule::Ptr<_1a77278d3_TypeKind>& _12934_t) {
	jule::I64 _13013_n = 0LL;;
	jule::Str _1319_kind = _1a7727c8a_to_str(_12934_t.ptr());;
	_julec_label_loop:;
	{
		auto &expr = _12922_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1a998d949:;
		if (it != expr.end()) {
			jule::Ptr<_1a766d8d4_Case> &_13312_c = *it;
			{
				if ((_13312_c == nullptr)) {
					goto _iter_next_1a998d949;
				};
				{
					auto &expr = _13312_c.get()._field_exprs;
					auto it = expr.begin();
					_iter_begin_1a998e5b5:;
					if (it != expr.end()) {
						jule::Ptr<_1a76edda4_Data> &_13816_expr = *it;
						{
							if ((_13816_expr == nullptr)) {
								goto _iter_end_1a998d949;
							};
							if ((_1319_kind == _1a7727c8a_to_str(_13816_expr.get()._field_model.operator jule::Ptr<_1a77278d3_TypeKind>().ptr()))) {
								(_13013_n)++;
							};
						}
						_iter_next_1a998e5b5:;
						++it;
						goto _iter_begin_1a998e5b5;
					}
					_iter_end_1a998e5b5:;
				};
			}
			_iter_next_1a998d949:;
			++it;
			goto _iter_begin_1a998d949;
		}
		_iter_end_1a998d949:;
	};
	return _13013_n;
}



inline jule::Slice<jule::Ptr<_1a76edda4_Data>> _1a763cead_get_datas_from_tuple_data(jule::Ptr<_1a76edda4_Data>& _15335_d) {
	if ((_1a772b3ba_tup(_15335_d.get()._field_kind.ptr()) != nullptr)) {
		{
			auto &_match_expr{ _15335_d.get()._field_model };
			
			if (_match_expr.type_is<jule::Ptr<_1a686d0bd_TupleExprModel>>()) {
				_case_begin_1a9992772:;
				{
					return _15335_d.get()._field_model.operator jule::Ptr<_1a686d0bd_TupleExprModel>().get()._field_datas;
				}
			}
			else {
				_case_begin_1a9990c6a:;
				{
					jule::Ptr<_1a7731a96_Tuple> _15921_t = _1a772b3ba_tup(_15335_d.get()._field_kind.ptr());;
					jule::Slice<jule::Ptr<_1a76edda4_Data>> _16021_r = jule::Slice<jule::Ptr<_1a76edda4_Data>>::alloc(0LL,_15921_t.get()._field_types.len());;
					{
						auto &expr = _15921_t.get()._field_types;
						auto it = expr.begin();
						_iter_begin_1a99918d6:;
						if (it != expr.end()) {
							jule::Ptr<_1a77278d3_TypeKind> _16125_kind = *it;
							{
								_16021_r = jule::alloc_for_append(_16021_r,1);_16021_r.__push(jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_kind=_16125_kind, ._field_mutable=true, }));;
							}
							_iter_next_1a99918d6:;
							++it;
							goto _iter_begin_1a99918d6;
						}
						_iter_end_1a99918d6:;
					};
					return _16021_r;
				}
			}
			_match_end_1a9990c15:;
		};
	} else {
		return jule::Slice<jule::Ptr<_1a76edda4_Data>>::make({_15335_d});
	};
}



inline jule::Slice<jule::Any> _1a763d73e_get_expr_models(jule::Any& _17425_m) {
	{
		auto &_match_expr{ _17425_m };
		
		if (_match_expr.type_is<jule::Ptr<_1a68565d4_TupleExpr>>()) {
			_case_begin_1a9993a5e:;
			{
				jule::Ptr<_1a68565d4_TupleExpr> _17717_tup = _17425_m.operator jule::Ptr<_1a68565d4_TupleExpr>();;
				jule::Slice<jule::Any> _17817_models = jule::Slice<jule::Any>::alloc(0LL,_17717_tup.get()._field_expr.len());;
				{
					auto &expr = _17717_tup.get()._field_expr;
					auto it = expr.begin();
					_iter_begin_1a99944bb:;
					if (it != expr.end()) {
						jule::Ptr<_1a6855e41_Expr> _17921_expr = *it;
						{
							_17817_models = jule::alloc_for_append(_17817_models,1);_17817_models.__push(jule::Any(_17921_expr.get()._field_kind));;
						}
						_iter_next_1a99944bb:;
						++it;
						goto _iter_begin_1a99944bb;
					}
					_iter_end_1a99944bb:;
				};
				return _17817_models;
			}
		}
		else {
			_case_begin_1a99936a7:;
			{
				return jule::Slice<jule::Any>::make({jule::Any(_17425_m)});
			}
		}
		_match_end_1a9993652:;
	};
}



inline jule::Bool _1a763ded1_check_mut(jule::Ptr<_1a768cc22_Sema>& _18819_s, jule::Ptr<_1a76edda4_Data>& _18830_left, jule::Ptr<_1a76edda4_Data> _18847_right, jule::Ptr<_1a527737a_Token> _18861_op) {
	jule::Bool _18875_ok = jule::Bool();
	{
		
		if ((!(_18830_left.get()._field_mutable))) {
			_case_begin_1a99961d2:;
			{
				_1a769063c_push_err(_18819_s.ptr(), _18861_op,jule::Str("cannot assign to immutable storage", 34),jule::Slice<jule::Any>());
				_18875_ok = false;
				return _18875_ok;
			}
		}
		else if ((((_18847_right != nullptr) && (!(_18847_right.get()._field_mutable))) && _1a7728c7a_mutable(_18847_right.get()._field_kind.ptr()))) {
			_case_begin_1a999629d:;
			{
				if (((_18861_op.get()._field_kind != jule::Str("=", 1)) && (_1a772ab7d_strct(_18847_right.get()._field_kind.ptr()) != nullptr))) {
					_18875_ok = true;
					return _18875_ok;
				};
				_1a769063c_push_err(_18819_s.ptr(), _18861_op,jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82),jule::Slice<jule::Any>::make({jule::Any(_1a7727c8a_to_str(_18847_right.get()._field_kind.ptr()))}));
				_18875_ok = false;
				return _18875_ok;
			}
		}
		else {
			_case_begin_1a9995aa5:;
			{
				_18875_ok = true;
				return _18875_ok;
			}
		}
		_match_end_1a99955bb:;
	};
}



inline jule::Bool _1a7646060_check_assign(jule::Ptr<_1a768cc22_Sema>& _20722_s, jule::Ptr<_1a76edda4_Data>& _20737_left, jule::Ptr<_1a76edda4_Data> _20754_right, jule::Ptr<_1a527737a_Token> _20768_op) {
	jule::Bool _20782_ok = jule::Bool();
	jule::Ptr<_1a6872c93_FnIns> _2089_f = _1a772a919_fnc(_20737_left.get()._field_kind.ptr());;
	if ((((_2089_f != nullptr) && (_2089_f.get()._field_decl != nullptr)) && _2089_f.get()._field_decl.get()._field_global)) {
		_1a769063c_push_err(_20722_s.ptr(), _20768_op,jule::Str("type is not support assignment", 30),jule::Slice<jule::Any>());
		_20782_ok = false;
		return _20782_ok;
	};
	{
		
		if (_1a76ee767_is_const(_20737_left.ptr())) {
			_case_begin_1a999b517:;
			{
				_1a769063c_push_err(_20722_s.ptr(), _20768_op,jule::Str("constants is can't assign", 25),jule::Slice<jule::Any>());
				_1a769095b_push_suggestion(_20722_s.ptr(), jule::Str("remove constant qualifer if you need to assign", 46),jule::Slice<jule::Any>());
				_20782_ok = false;
				return _20782_ok;
			}
		}
		else if ((!(_20737_left.get()._field_lvalue))) {
			_case_begin_1a999b5c2:;
			{
				_1a769063c_push_err(_20722_s.ptr(), _20768_op,jule::Str("invalid expression: expected lvalue for assignment", 50),jule::Slice<jule::Any>());
				_20782_ok = false;
				return _20782_ok;
			}
		}
		else if ((!(_1a763ded1_check_mut(_20722_s,_20737_left,_20754_right,_20768_op)))) {
			_case_begin_1a999b638:;
			{
				_20782_ok = false;
				return _20782_ok;
			}
		}
		else {
			_case_begin_1a999adda:;
			{
				_20782_ok = true;
				return _20782_ok;
			}
		}
		_match_end_1a999acec:;
	};
}



inline jule::Bool _1a764679c_is_valid_ast_st_for_next_st(jule::Any& _22937_n) {
	{
		auto &_match_expr{ _22937_n };
		
		if (_match_expr.type_is<jule::Ptr<_1a6860104_AssignSt>>()) {
			_case_begin_1a999e2ea:;
			{
				return (!(_22937_n.operator jule::Ptr<_1a6860104_AssignSt>().get()._field_declarative));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6859e12_FnCallExpr>>() || _match_expr.type_is<jule::Ptr<_1a6855e41_Expr>>()) {
			_case_begin_1a999e361:;
			{
				return true;
			}
		}
		else {
			_case_begin_1a999bccb:;
			{
				return false;
			}
		}
		_match_end_1a999bc76:;
	};
}



inline jule::Bool _1a76473d5_is_valid_st_for_next_st(jule::Any& _24129_st) {
	{
		auto &_match_expr{ _24129_st };
		
		if (_match_expr.type_is<jule::Ptr<_1a6845150_FnCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1a766ce00_Postfix>>() || _match_expr.type_is<jule::Ptr<_1a766d0dc_Assign>>() || _match_expr.type_is<jule::Ptr<_1a766d2c9_MultiAssign>>()) {
			_case_begin_1a99a0483:;
			{
				return true;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a76edda4_Data>>()) {
			_case_begin_1a99a04e9:;
			{
				{
					auto &_match_expr{ _24129_st.operator jule::Ptr<_1a76edda4_Data>().get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1a6845150_FnCallExprModel>>()) {
						_case_begin_1a99a0b6a:;
						{
							return true;
						}
					}
					else {
						_case_begin_1a99a1264:;
						{
							return false;
						}
					}
					_match_end_1a99a120e:;
				};
			}
		}
		else {
			_case_begin_1a999e65d:;
			{
				return false;
			}
		}
		_match_end_1a999e608:;
	};
}



inline jule::Bool _1a7648392_st_is_def(jule::Any& _26015_st) {
	{
		auto &_match_expr{ _26015_st };
		
		if (_match_expr.type_is<jule::Ptr<_1a76a7720_Var>>()) {
			_case_begin_1a99a1e79:;
			{
				return true;
			}
		}
		else {
			_case_begin_1a99a141d:;
			{
				return false;
			}
		}
		_match_end_1a99a13b8:;
	};
}



inline jule::Ptr<_1a76a7720_Var> _1a7683058_find_var_in_package(jule::Slice<jule::Ptr<_1a76e8e26_SymbolTable>>& _4629_files, jule::Str _4652_ident, jule::Bool _4664_cpp_linked) {
	{
		auto &expr = _4629_files;
		auto it = expr.begin();
		_iter_begin_1a99e70ac:;
		if (it != expr.end()) {
			jule::Ptr<_1a76e8e26_SymbolTable> _4717_f = *it;
			{
				jule::Ptr<_1a76a7720_Var> _4817_v = _1a76e9ae7_find_var(_4717_f.ptr(), _4652_ident,_4664_cpp_linked);;
				if ((_4817_v != nullptr)) {
					return _4817_v;
				};
			}
			_iter_next_1a99e70ac:;
			++it;
			goto _iter_begin_1a99e70ac;
		}
		_iter_end_1a99e70ac:;
	};
	return nullptr;
}



inline jule::Ptr<_1a7726b9b_TypeAlias> _1a76834a9_find_type_alias_in_package(jule::Slice<jule::Ptr<_1a76e8e26_SymbolTable>>& _5836_files, jule::Str _5859_ident, jule::Bool _5871_cpp_linked) {
	{
		auto &expr = _5836_files;
		auto it = expr.begin();
		_iter_begin_1a99e8dc2:;
		if (it != expr.end()) {
			jule::Ptr<_1a76e8e26_SymbolTable> _5917_f = *it;
			{
				jule::Ptr<_1a7726b9b_TypeAlias> _6017_ta = _1a76e9e9e_find_type_alias(_5917_f.ptr(), _5859_ident,_5871_cpp_linked);;
				if ((_6017_ta != nullptr)) {
					return _6017_ta;
				};
			}
			_iter_next_1a99e8dc2:;
			++it;
			goto _iter_begin_1a99e8dc2;
		}
		_iter_end_1a99e8dc2:;
	};
	return nullptr;
}



inline jule::Ptr<_1a6826829_Struct> _1a76838a5_find_struct_in_package(jule::Slice<jule::Ptr<_1a76e8e26_SymbolTable>>& _7032_files, jule::Str _7055_ident, jule::Bool _7067_cpp_linked) {
	{
		auto &expr = _7032_files;
		auto it = expr.begin();
		_iter_begin_1a99eaae9:;
		if (it != expr.end()) {
			jule::Ptr<_1a76e8e26_SymbolTable> _7117_f = *it;
			{
				jule::Ptr<_1a6826829_Struct> _7217_s = _1a76ea356_find_struct(_7117_f.ptr(), _7055_ident,_7067_cpp_linked);;
				if ((_7217_s != nullptr)) {
					return _7217_s;
				};
			}
			_iter_next_1a99eaae9:;
			++it;
			goto _iter_begin_1a99eaae9;
		}
		_iter_end_1a99eaae9:;
	};
	return nullptr;
}



inline jule::Ptr<_1a68709c7_Fn> _1a7683cd4_find_fn_in_package(jule::Slice<jule::Ptr<_1a76e8e26_SymbolTable>>& _8228_files, jule::Str _8251_ident, jule::Bool _8263_cpp_linked) {
	{
		auto &expr = _8228_files;
		auto it = expr.begin();
		_iter_begin_1a99ec7bb:;
		if (it != expr.end()) {
			jule::Ptr<_1a76e8e26_SymbolTable> _8317_file = *it;
			{
				jule::Ptr<_1a68709c7_Fn> _8417_f = _1a76ea70d_find_fn(_8317_file.ptr(), _8251_ident,_8263_cpp_linked);;
				if ((_8417_f != nullptr)) {
					return _8417_f;
				};
			}
			_iter_next_1a99ec7bb:;
			++it;
			goto _iter_begin_1a99ec7bb;
		}
		_iter_end_1a99ec7bb:;
	};
	return nullptr;
}



inline jule::Ptr<_1a68d46b7_Trait> _1a7684125_find_trait_in_package(jule::Slice<jule::Ptr<_1a76e8e26_SymbolTable>>& _9431_files, jule::Str _9454_ident) {
	{
		auto &expr = _9431_files;
		auto it = expr.begin();
		_iter_begin_1a99ee02b:;
		if (it != expr.end()) {
			jule::Ptr<_1a76e8e26_SymbolTable> _9517_f = *it;
			{
				jule::Ptr<_1a68d46b7_Trait> _9617_t = _1a76eaa1b_find_trait(_9517_f.ptr(), _9454_ident);;
				if ((_9617_t != nullptr)) {
					return _9617_t;
				};
			}
			_iter_next_1a99ee02b:;
			++it;
			goto _iter_begin_1a99ee02b;
		}
		_iter_end_1a99ee02b:;
	};
	return nullptr;
}



inline jule::Ptr<_1a6982435_Enum> _1a7684466_find_enum_in_package(jule::Slice<jule::Ptr<_1a76e8e26_SymbolTable>>& _10630_files, jule::Str _10653_ident) {
	{
		auto &expr = _10630_files;
		auto it = expr.begin();
		_iter_begin_1a99edd72:;
		if (it != expr.end()) {
			jule::Ptr<_1a76e8e26_SymbolTable> _10717_f = *it;
			{
				jule::Ptr<_1a6982435_Enum> _10817_e = _1a76ead29_find_enum(_10717_f.ptr(), _10653_ident);;
				if ((_10817_e != nullptr)) {
					return _10817_e;
				};
			}
			_iter_next_1a99edd72:;
			++it;
			goto _iter_begin_1a99edd72;
		}
		_iter_end_1a99edd72:;
	};
	return nullptr;
}



inline jule::Bool _1a7689ea5_is_std_package(jule::Str _32719_f, jule::Str _32727_p) {
	return _1a4221d2b_has_prefix(_32719_f,_1a429a811_join(jule::Slice<jule::Str>::make({_1a43483c5_PATH_STDLIB,_32727_p})));
}



inline jule::Bool _1a768adda_is_valid_model_for_ref(jule::Any& _1232_m) {
	{
		auto &_match_expr{ _1232_m };
		
		if (_match_expr.type_is<jule::Ptr<_1a76a7720_Var>>()) {
			_case_begin_1a9bda7ab:;
			{
				return true;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a686c62d_StructSubIdentExprModel>>()) {
			_case_begin_1a9bda822:;
			{
				jule::Ptr<_1a686c62d_StructSubIdentExprModel> _1717_model = _1232_m.operator jule::Ptr<_1a686c62d_StructSubIdentExprModel>();;
				return _1a768adda_is_valid_model_for_ref(_1717_model.get()._field_expr.get()._field_model);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a686c210_TraitSubIdentExprModel>>()) {
			_case_begin_1a9bda338:;
			{
				jule::Ptr<_1a686c210_TraitSubIdentExprModel> _2017_model = _1232_m.operator jule::Ptr<_1a686c210_TraitSubIdentExprModel>();;
				return _1a768adda_is_valid_model_for_ref(_2017_model.get()._field_expr);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6849e79_UnaryExprModel>>()) {
			_case_begin_1a9bda39e:;
			{
				jule::Ptr<_1a6849e79_UnaryExprModel> _2317_unary = _1232_m.operator jule::Ptr<_1a6849e79_UnaryExprModel>();;
				if ((_2317_unary.get()._field_op.get()._field_kind != jule::Str("*", 1))) {
					return false;
				};
				if ((_1a7729e68_ptr(_2317_unary.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
					return true;
				};
				if ((_1a7729c04_sptr(_2317_unary.get()._field_expr.get()._field_kind.ptr()) == nullptr)) {
					return false;
				};
				return _1a768adda_is_valid_model_for_ref(_2317_unary.get()._field_expr.get()._field_model);
			}
		}
		else {
			_case_begin_1a9bd4244:;
			{
				return false;
			}
		}
		_match_end_1a9bd41de:;
	};
}



inline _1a43349cc_Log _1a768b380_compiler_err(jule::Ptr<_1a527737a_Token>& _4118_token, jule::Bool _4133_line, jule::Str _4145_fmt, jule::Slice<jule::Any> _4158_args) {
	_1a43349cc_Log _4213_log = _1a43349cc_Log{._field_kind=static_cast<jule::I64>(1LL), ._field_row=_4118_token.get()._field_row, ._field_column=_4118_token.get()._field_column, ._field_path=_4118_token.get()._field_file.get()._field_path, ._field_text=_1a4334e1c_logf(_4145_fmt,jule::Any(_4158_args)), };;
	if (_4133_line) {
		_4213_log._field_line=_1a527d947_get_row(_4118_token.get()._field_file.ptr(), _4118_token.get()._field_row);
	};
	return _4213_log;
}



inline jule::Bool _1a768b6c1_imp_is_lookupable(jule::Ptr<_1a7685038_ImportInfo>& _5523_i, jule::Str _5539_ident) {
	if (_5523_i.get()._field_cpp_linked) {
		return false;
	};
	if ((!(_5523_i.get()._field_import_all))) {
		if ((_5523_i.get()._field_selected.len() > 0LL)) {
			return _1a7687667_exist_ident(_5523_i.ptr(), _5539_ident);
		};
	};
	return _5523_i.get()._field_import_all;
}



inline void _1a768b9bd_append_ret_vars(jule::Slice<jule::Ptr<_1a76a7720_Var>>& _6825_dest, jule::Ptr<_1a6872c93_FnIns>& _6844_f) {
	if ((_1a6847eee_is_void(_6844_f.get()._field_decl.ptr()) || (_6844_f.get()._field_result == nullptr))) {
		return;;
	};
	jule::Slice<jule::Ptr<_1a77278d3_TypeKind>> _7313_types = _1a68737aa_types(_6844_f.ptr());;
	{
		auto &expr = _6844_f.get()._field_decl.get()._field_result.get()._field_idents;
		auto it = expr.begin();
		_iter_begin_1a9be8951:;
		if (it != expr.end()) {
			jule::I64 _7410_i = it - expr.begin();
			jule::Ptr<_1a527737a_Token> _7417_ident = *it;
			{
				if ((_1a5279aca_is_ignore_ident(_7417_ident.get()._field_kind) || _1a5279d72_is_anon_ident(_7417_ident.get()._field_kind))) {
					goto _iter_next_1a9be8951;
				};
				_6825_dest = jule::alloc_for_append(_6825_dest,1);_6825_dest.__push(jule::new_ptr<_1a76a7720_Var>(_1a76a7720_Var{._field_scope=_6844_f.get()._field_scope, ._field_token=_7417_ident, ._field_ident=_7417_ident.get()._field_kind, ._field_mutable=true, ._field_used=true, ._field_kind=jule::new_ptr<_1a772b772_TypeSymbol>(_1a772b772_TypeSymbol{._field_kind=_7313_types[_7410_i]}), ._field_value=jule::new_ptr<_1a76eee2c_Value>(_1a76eee2c_Value{._field_data=jule::new_ptr<_1a76edda4_Data>()}), }));;
			}
			_iter_next_1a9be8951:;
			++it;
			_7410_i++;
			goto _iter_begin_1a9be8951;
		}
		_iter_end_1a9be8951:;
	};
}



inline void _1a768bc76_append_param_vars(jule::Slice<jule::Ptr<_1a76a7720_Var>>& _9427_dest, jule::Ptr<_1a6872c93_FnIns>& _9446_f) {
	if ((_9446_f.get()._field_params.len() == 0LL)) {
		return;;
	};
	{
		auto &expr = _9446_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1a9beb16d:;
		if (it != expr.end()) {
			jule::Ptr<_1a6871e07_ParamIns> _9917_p = *it;
			{
				if ((_1a5279aca_is_ignore_ident(_9917_p.get()._field_decl.get()._field_ident) || _1a5279d72_is_anon_ident(_9917_p.get()._field_decl.get()._field_ident))) {
					goto _iter_next_1a9beb16d;
				};
				jule::Ptr<_1a76a7720_Var> _10417_v = jule::new_ptr<_1a76a7720_Var>(_1a76a7720_Var{._field_scope=_9446_f.get()._field_scope, ._field_token=_9917_p.get()._field_decl.get()._field_token, ._field_ident=_9917_p.get()._field_decl.get()._field_ident, ._field_mutable=_9917_p.get()._field_decl.get()._field_mutable, ._field_used=true, ._field_reference=_9917_p.get()._field_decl.get()._field_reference, ._field_kind=jule::new_ptr<_1a772b772_TypeSymbol>(), ._field_value=jule::new_ptr<_1a76eee2c_Value>(_1a76eee2c_Value{._field_data=jule::new_ptr<_1a76edda4_Data>()}), });;
				{
					
					if (_1a68491ed_is_self(_9917_p.get()._field_decl.ptr())) {
						_case_begin_1a9bedb32:;
						{
							_10417_v.get()._field_kind.get()._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_variadic=false, ._field_kind=jule::Trait<_1a77274a4_Kind>(_9446_f.get()._field_owner, 0)});
							_10417_v.get()._field_reference=(!(_1a6831ba8_is_ref(_9917_p.get()._field_decl.ptr())));
							if (_1a6831ba8_is_ref(_9917_p.get()._field_decl.ptr())) {
								_10417_v.get()._field_ident=_10417_v.get()._field_ident.slice(1LL);
								_10417_v.get()._field_kind.get()._field_kind.get()._field_kind=jule::Trait<_1a77274a4_Kind>(jule::new_ptr<_1a7730644_Sptr>(_1a7730644_Sptr{._field_elem=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_cpp_ident=_10417_v.get()._field_kind.get()._field_kind.get()._field_cpp_ident, ._field_kind=_10417_v.get()._field_kind.get()._field_kind.get()._field_kind})}), 6);
							};
						}
					}
					else if (_9917_p.get()._field_decl.get()._field_variadic) {
						_case_begin_1a9bed857:;
						{
							_10417_v.get()._field_kind.get()._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_variadic=false, ._field_kind=jule::Trait<_1a77274a4_Kind>(jule::new_ptr<_1a77310a1_Slc>(_1a77310a1_Slc{._field_elem=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_cpp_ident=_9917_p.get()._field_kind.get()._field_cpp_ident, ._field_kind=_9917_p.get()._field_kind.get()._field_kind})}), 7)});
						}
					}
					else {
						_case_begin_1a9bed7e1:;
						{
							_10417_v.get()._field_kind.get()._field_kind=_9917_p.get()._field_kind;
						}
					}
					_match_end_1a9bed6d1:;
				};
				_9427_dest = jule::alloc_for_append(_9427_dest,1);_9427_dest.__push(_10417_v);;
			}
			_iter_next_1a9beb16d:;
			++it;
			goto _iter_begin_1a9beb16d;
		}
		_iter_end_1a9beb16d:;
	};
}



inline void _1a768c051_append_generic_type_aliases(jule::Slice<jule::Ptr<_1a7726b9b_TypeAlias>>& _15437_dest, jule::Ptr<_1a6872c93_FnIns>& _15462_f) {
	jule::I64 _15513_size = _15462_f.get()._field_generics.len();;
	if ((_15462_f.get()._field_decl.get()._field_owner != nullptr)) {
		_15513_size+=_15462_f.get()._field_decl.get()._field_owner.get()._field_generics.len();
	};
	if ((_15513_size == 0LL)) {
		return;;
	};
	{
		auto &expr = _15462_f.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1a9c03d57:;
		if (it != expr.end()) {
			jule::I64 _16410_i = it - expr.begin();
			jule::Ptr<_1a77278d3_TypeKind> _16417_g = *it;
			{
				jule::Ptr<_1a685d960_GenericDecl> _16517_decl = _15462_f.get()._field_decl.get()._field_generics[_16410_i];;
				_15437_dest = jule::alloc_for_append(_15437_dest,1);_15437_dest.__push(jule::new_ptr<_1a7726b9b_TypeAlias>(_1a7726b9b_TypeAlias{._field_scope=_15462_f.get()._field_decl.get()._field_scope, ._field_used=true, ._field_generic=true, ._field_token=_16517_decl.get()._field_token, ._field_ident=_16517_decl.get()._field_ident, ._field_kind=jule::new_ptr<_1a772b772_TypeSymbol>(_1a772b772_TypeSymbol{._field_kind=_16417_g}), }));;
			}
			_iter_next_1a9c03d57:;
			++it;
			_16410_i++;
			goto _iter_begin_1a9c03d57;
		}
		_iter_end_1a9c03d57:;
	};
	if ((_15462_f.get()._field_decl.get()._field_owner != nullptr)) {
		jule::Ptr<_1a6836a48_StructIns> _17917_owner = _15462_f.get()._field_owner;;
		{
			auto &expr = _17917_owner.get()._field_generics;
			auto it = expr.begin();
			_iter_begin_1a9c04770:;
			if (it != expr.end()) {
				jule::I64 _18014_i = it - expr.begin();
				jule::Ptr<_1a77278d3_TypeKind> _18021_g = *it;
				{
					jule::Ptr<_1a685d960_GenericDecl> _18121_decl = _17917_owner.get()._field_decl.get()._field_generics[_18014_i];;
					_15437_dest = jule::alloc_for_append(_15437_dest,1);_15437_dest.__push(jule::new_ptr<_1a7726b9b_TypeAlias>(_1a7726b9b_TypeAlias{._field_scope=_15462_f.get()._field_decl.get()._field_scope, ._field_used=true, ._field_generic=true, ._field_token=_18121_decl.get()._field_token, ._field_ident=_18121_decl.get()._field_ident, ._field_kind=jule::new_ptr<_1a772b772_TypeSymbol>(_1a772b772_TypeSymbol{._field_kind=_18021_g}), }));;
				}
				_iter_next_1a9c04770:;
				++it;
				_18014_i++;
				goto _iter_begin_1a9c04770;
			}
			_iter_end_1a9c04770:;
		};
	};
}



inline jule::Ptr<_1a76e8e26_SymbolTable> _1a768c3a3_find_file(jule::Slice<jule::Ptr<_1a76e8e26_SymbolTable>>& _19619_files, jule::Ptr<_1a527c76a_File>& _19643_handler) {
	{
		auto &expr = _19619_files;
		auto it = expr.begin();
		_iter_begin_1a9c073aa:;
		if (it != expr.end()) {
			jule::Ptr<_1a76e8e26_SymbolTable> _19717_fl = *it;
			{
				if ((_19717_fl.get()._field_file == _19643_handler)) {
					return _19717_fl;
				};
			}
			_iter_next_1a9c073aa:;
			++it;
			goto _iter_begin_1a9c073aa;
		}
		_iter_end_1a9c073aa:;
	};
	return nullptr;
}



inline void _1a768c78d_push_suggestion(_1a43349cc_Log* _20531_log, jule::Str _20542_fmt, jule::Slice<jule::Any> _20555_args) {
	_20531_log->_field_suggestion=_1a4334e1c_logf(_20542_fmt,jule::Any(_20555_args));
}



inline jule::Bool _1a76d8a09_trait_has_reference_receiver(jule::Ptr<_1a68d46b7_Trait>& _2634_t) {
	{
		auto &expr = _2634_t.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1a9d114a3:;
		if (it != expr.end()) {
			jule::Ptr<_1a68709c7_Fn> &_2712_f = *it;
			{
				if (_2712_f.get()._field_statically) {
					goto _iter_next_1a9d114a3;
				};
				jule::Ptr<_1a68707da_Param> _3313_p = _2712_f.get()._field_params[0LL];;
				if ((_1a6831ba8_is_ref(_3313_p.ptr()) && _1a68491ed_is_self(_3313_p.ptr()))) {
					return true;
				};
			}
			_iter_next_1a9d114a3:;
			++it;
			goto _iter_begin_1a9d114a3;
		}
		_iter_end_1a9d114a3:;
	};
	return false;
}



inline jule::Bool _1a76c100d_float_assignable(jule::Str _4121_kind, jule::Ptr<_1a76edda4_Data>& _4133_d) {
	jule::Str _429_value = _1a6d3c290_fmt_float(static_cast<jule::F64>(_1a75c56b5_as_f64(_4133_d.get()._field_constant.ptr())),'g',-1LL,64LL);;
	return _1a7662653_check_bit_float(_429_value,static_cast<jule::I64>(_1a76612bc_bitsize_of(_4121_kind)));
}



inline jule::Bool _1a76d9c5d_sig_assignable(jule::Str _4619_kind, jule::Ptr<_1a76edda4_Data>& _4631_d) {
	jule::F64 _479_min = _1a7666646_min(_4619_kind);;
	jule::F64 _489_max = _1a7666932_max(_4619_kind);;
	{
		
		if (_1a75c7321_is_f64(_4631_d.get()._field_constant.ptr())) {
			_case_begin_1a9d150ab:;
			{
				jule::F64 _5113_x = _1a75c4e78_read_f64(_4631_d.get()._field_constant.ptr());;
				jule::F64 _5214_i;;
				jule::F64 _5217_frac;;
				std::tie(_5214_i,_5217_frac) = _1a75128dd_modf(_5113_x);
				if ((_5217_frac != 0LL)) {
					return false;
				};
				return ((_5214_i >= _479_min) && (_5214_i <= _489_max));
			}
		}
		else if (_1a75c6ad4_is_u64(_4631_d.get()._field_constant.ptr())) {
			_case_begin_1a9d15122:;
			{
				jule::F64 _5813_x = _1a75c56b5_as_f64(_4631_d.get()._field_constant.ptr());;
				if ((_5813_x <= _489_max)) {
					return true;
				};
			}
		}
		else if (_1a75c6870_is_i64(_4631_d.get()._field_constant.ptr())) {
			_case_begin_1a9d15188:;
			{
				jule::F64 _6313_x = _1a75c56b5_as_f64(_4631_d.get()._field_constant.ptr());;
				return ((_479_min <= _6313_x) && (_6313_x <= _489_max));
			}
		}
		_match_end_1a9d14e57:;
	};
	return false;
}



inline jule::Bool _1a76d9d90_unsig_assignable(jule::Str _6921_kind, jule::Ptr<_1a76edda4_Data>& _6933_d) {
	jule::F64 _709_max = _1a7666932_max(_6921_kind);;
	if ((_6933_d.get()._field_is_rune && (_6921_kind == jule::Str("u8", 2)))) {
		return _1a76d7244_is_ascii(static_cast<jule::I32>(static_cast<jule::I32>(_1a75c44c7_read_i64(_6933_d.get()._field_constant.ptr()))));
	};
	{
		
		if (_1a75c7321_is_f64(_6933_d.get()._field_constant.ptr())) {
			_case_begin_1a9d1a248:;
			{
				jule::F64 _7713_x = _1a75c4e78_read_f64(_6933_d.get()._field_constant.ptr());;
				if ((_7713_x < 0LL)) {
					return false;
				};
				jule::F64 _8114_i;;
				jule::F64 _8117_frac;;
				std::tie(_8114_i,_8117_frac) = _1a75128dd_modf(_7713_x);
				if ((_8117_frac != 0LL)) {
					return false;
				};
				return (_8114_i <= _709_max);
			}
		}
		else if (_1a75c6ad4_is_u64(_6933_d.get()._field_constant.ptr())) {
			_case_begin_1a9d1a2ae:;
			{
				jule::F64 _8713_x = _1a75c56b5_as_f64(_6933_d.get()._field_constant.ptr());;
				if ((_8713_x <= _709_max)) {
					return true;
				};
			}
		}
		else if (_1a75c6870_is_i64(_6933_d.get()._field_constant.ptr())) {
			_case_begin_1a9d1a325:;
			{
				jule::F64 _9213_x = _1a75c56b5_as_f64(_6933_d.get()._field_constant.ptr());;
				return ((0LL <= _9213_x) && (_9213_x <= _709_max));
			}
		}
		_match_end_1a9d19a61:;
	};
	return false;
}



inline jule::Bool _1a76d9ec2_int_assignable(jule::Str _9819_kind, jule::Ptr<_1a76edda4_Data>& _9831_d) {
	{
		
		if (_1a766b849_is_sig_int(_9819_kind)) {
			_case_begin_1a9d1e956:;
			{
				return _1a76d9c5d_sig_assignable(_9819_kind,_9831_d);
			}
		}
		else if (_1a766bb35_is_unsig_int(_9819_kind)) {
			_case_begin_1a9d1ea44:;
			{
				return _1a76d9d90_unsig_assignable(_9819_kind,_9831_d);
			}
		}
		else {
			_case_begin_1a9d1a8db:;
			{
				return false;
			}
		}
		_match_end_1a9d1a820:;
	};
}



inline jule::Ptr<_1a6852525_Directive> _1a77225c0_find_directive(jule::Slice<jule::Ptr<_1a6852525_Directive>>& _409224_directives, jule::Str _409266_d) {
	{
		auto &expr = _409224_directives;
		auto it = expr.begin();
		_iter_begin_1aa190326:;
		if (it != expr.end()) {
			jule::Ptr<_1a6852525_Directive> _409317_dr = *it;
			{
				if ((_409317_dr.get()._field_tag.get()._field_kind == _409266_d)) {
					return _409317_dr;
				};
			}
			_iter_next_1aa190326:;
			++it;
			goto _iter_begin_1aa190326;
		}
		_iter_end_1aa190326:;
	};
	return nullptr;
}



inline jule::Any _1a7722955_find_builtins_import(jule::Str _410125_ident, jule::Ptr<_1a7685038_ImportInfo> _410137_imp) {
	return jule::Any(_1a776c3a6_find_package_builtin_def(_410137_imp.get()._field_link_path,_410125_ident));
}



inline void _1a7722b64_fit_bitsize(jule::Ptr<_1a76edda4_Data>& _410821_d) {
	jule::Ptr<_1a772c135_Prim> _410913_prim = _1a7729990_prim(_410821_d.get()._field_kind.ptr());;
	jule::I64 _41109_z = _1a76612bc_bitsize_of(_1a772c498_to_str(_410913_prim.ptr()));;
	if ((_41109_z == 64LL)) {
		return;;
	};
	jule::I64 _411513_k = 0LL;;
	{
		
		if (_1a75c6870_is_i64(_410821_d.get()._field_constant.ptr())) {
			_case_begin_1aa192e72:;
			{
				_411513_k=static_cast<jule::I64>(_1a7662b92_bitsize_of_int(static_cast<jule::I64>(_1a75c44c7_read_i64(_410821_d.get()._field_constant.ptr()))));
				if ((_411513_k > _41109_z)) {
					_410913_prim.get()._field_kind=_1a76615a8_int_from_bits(_411513_k);
				};
			}
		}
		else if (_1a75c6ad4_is_u64(_410821_d.get()._field_constant.ptr())) {
			_case_begin_1aa192ee9:;
			{
				_411513_k=static_cast<jule::I64>(_1a7662e39_bitsize_of_uint(static_cast<jule::U64>(_1a75c473b_read_u64(_410821_d.get()._field_constant.ptr()))));
				if ((_411513_k > _41109_z)) {
					_410913_prim.get()._field_kind=_1a7661850_uint_from_bits(_411513_k);
				};
			}
		}
		else if (_1a75c7321_is_f64(_410821_d.get()._field_constant.ptr())) {
			_case_begin_1aa193071:;
			{
				_411513_k=static_cast<jule::I64>(_1a76628ea_bitsize_of_float(static_cast<jule::F64>(_1a75c4e78_read_f64(_410821_d.get()._field_constant.ptr()))));
				if ((_411513_k > _41109_z)) {
					_410913_prim.get()._field_kind=_1a7661ae7_float_from_bits(_411513_k);
				};
			}
		}
		_match_end_1aa192d95:;
	};
}



inline void _1a7722e61_make_struct_lit_alloc(jule::Ptr<_1a76edda4_Data>& _413531_d, jule::Ptr<_1a682b752_StructLitExprModel>& _413546_lit) {
	_413531_d.get()._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(jule::new_ptr<_1a7730644_Sptr>(_1a7730644_Sptr{._field_elem=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_413546_lit.get()._field_strct, 0)})}), 6)});
	_413531_d.get()._field_model=jule::Any(jule::new_ptr<_1a68225b1_AllocStructLitExprModel>(_1a68225b1_AllocStructLitExprModel{._field_lit=_413546_lit}));
}



inline jule::Ptr<_1a76a7720_Var> _1a77232a2_build_error_var(jule::Ptr<_1a7658803_Scope>& _414625_s, jule::Ptr<_1a6859e12_FnCallExpr>& _414641_fc) {
	return jule::new_ptr<_1a76a7720_Var>(_1a76a7720_Var{._field_scope=_414625_s, ._field_token=_414641_fc.get()._field_token, ._field_ident=jule::Str("error", 5), ._field_mutable=true, ._field_used=true, ._field_reference=false, ._field_kind=jule::new_ptr<_1a772b772_TypeSymbol>(_1a772b772_TypeSymbol{._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_1a773e554_build_prim_type(jule::Str("any", 3)), 5)})}), ._field_value=jule::new_ptr<_1a76eee2c_Value>(_1a76eee2c_Value{._field_data=jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{})}), });
}



inline jule::Any _1a77235e3_find_builtins_sema(jule::Str _416523_ident, jule::Ptr<_1a768cc22_Sema> _416539_s) {
	{
		auto &expr = _416539_s.get()._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1aa198e34:;
		if (it != expr.end()) {
			jule::Ptr<_1a7685038_ImportInfo> _416617_imp = *it;
			{
				if ((_416617_imp.get()._field_import_all || _1a7687667_exist_ident(_416617_imp.ptr(), _416523_ident))) {
					jule::Any _416821_def = _1a7722955_find_builtins_import(_416523_ident,_416617_imp);;
					if ((_416821_def != nullptr)) {
						return jule::Any(_416821_def);
					};
				};
			}
			_iter_next_1aa198e34:;
			++it;
			goto _iter_begin_1aa198e34;
		}
		_iter_end_1aa198e34:;
	};
	jule::Str _417613_ppath = _1a527d161_dir(_416539_s.get()._field_file.get()._field_file.ptr());;
	if (_1a4221d2b_has_prefix(_417613_ppath,_1a43483c5_PATH_STDLIB)) {
		(_417613_ppath).mut_slice(_1a43483c5_PATH_STDLIB.len());;
		_417613_ppath=(jule::Str("std", 3) + _1a4296972_replace(_417613_ppath,static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL));
		return jule::Any(_1a776c3a6_find_package_builtin_def(_417613_ppath,_416523_ident));
	};
	return nullptr;
}



inline jule::Bool _1a772388a_is_ok_for_shifting(jule::Ptr<_1a76edda4_Data>& _419028_d) {
	if (_1a76ee767_is_const(_419028_d.ptr())) {
		{
			
			if (_1a75c6870_is_i64(_419028_d.get()._field_constant.ptr())) {
				_case_begin_1aa19cc6d:;
				{
					return (_1a75c44c7_read_i64(_419028_d.get()._field_constant.ptr()) >= 0LL);
				}
			}
			else if (_1a75c6ad4_is_u64(_419028_d.get()._field_constant.ptr())) {
				_case_begin_1aa19cd4a:;
				{
					return true;
				}
			}
			else if (_1a75c7321_is_f64(_419028_d.get()._field_constant.ptr())) {
				_case_begin_1aa19cdb1:;
				{
					return (_1a75c4e78_read_f64(_419028_d.get()._field_constant.ptr()) >= 0LL);
				}
			}
			else {
				_case_begin_1aa19c652:;
				{
					return false;
				}
			}
			_match_end_1aa19c586:;
		};
	};
	jule::Ptr<_1a772c135_Prim> _42039_prim = _1a7729990_prim(_419028_d.get()._field_kind.ptr());;
	return ((_42039_prim != nullptr) && _1a766bdcc_is_int(_1a772c498_to_str(_42039_prim.ptr())));
}



inline jule::Bool _1a7723bba_is_instanced_struct(jule::Ptr<_1a6836a48_StructIns> _420724_s) {
	return (_420724_s.get()._field_decl.get()._field_generics.len() == _420724_s.get()._field_generics.len());
}



inline jule::Bool _1a7723e95_is_ptr_arithmetic_compatible_int(jule::Ptr<_1a76edda4_Data>& _421142_d) {
	if (_1a76ee767_is_const(_421142_d.ptr())) {
		return _1a76d9ec2_int_assignable(jule::Str("int", 3),_421142_d);
	};
	_1a76da104_TypeCompatibilityChecker _421513_tcc = _1a76da104_TypeCompatibilityChecker{._field_dest=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_1a773e554_build_prim_type(jule::Str("int", 3)), 5)}), ._field_src=_421142_d.get()._field_kind, };;
	return _1a76dae6d_check(&_421513_tcc);
}



inline void _1a772424d_apply_cast_kind_model(jule::Ptr<_1a76edda4_Data>& _422431_d, jule::Ptr<_1a77278d3_TypeKind>& _422446_t) {
	_422431_d.get()._field_model=jule::Any(jule::new_ptr<_1a684003a_CastingExprModel>(_1a684003a_CastingExprModel{._field_expr=jule::Any(_422431_d.get()._field_model), ._field_kind=_422446_t, ._field_expr_kind=_422431_d.get()._field_kind}));
}



inline void _1a7724506_apply_cast_kind(jule::Ptr<_1a76edda4_Data>& _423225_d, jule::Ptr<_1a77278d3_TypeKind>& _423240_t) {
	_1a772424d_apply_cast_kind_model(_423225_d,_423240_t);
	_423225_d.get()._field_kind=_423240_t;
}



inline jule::Ptr<_1a76edda4_Data> _1a7724704_build_void_data(void) {
	return jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_1a773e554_build_prim_type(jule::Str("void", 4)), 5)}), ._field_mutable=false, ._field_lvalue=false, ._field_decl=false, });
}



inline jule::Str _1a77249bd_check_data_for_integer_indexing(jule::Ptr<_1a76edda4_Data>& _424841_d) {
	jule::Str _424853_err_fmt = jule::Str();
	if ((_424841_d == nullptr)) {
		_424853_err_fmt = jule::Str();
		return _424853_err_fmt;
	};
	{
		
		if ((_1a7729990_prim(_424841_d.get()._field_kind.ptr()) == nullptr)) {
			_case_begin_1aa1a40c6:;
			{
				_424853_err_fmt = jule::Str("type @ is invalid for indexing", 30);
				return _424853_err_fmt;
			}
		}
		else if ((!(_1a766bdcc_is_int(_1a772c498_to_str(_1a7729990_prim(_424841_d.get()._field_kind.ptr()).ptr()))))) {
			_case_begin_1aa1a413c:;
			{
				_424853_err_fmt = jule::Str("type @ is invalid for indexing", 30);
				return _424853_err_fmt;
			}
		}
		else if (_1a76ee767_is_const(_424841_d.ptr())) {
			_case_begin_1aa1a41a3:;
			{
				if ((_1a75c56b5_as_f64(_424841_d.get()._field_constant.ptr()) < 0LL)) {
					_424853_err_fmt = jule::Str("overflow the limit of data-type", 31);
					return _424853_err_fmt;
				};
			}
		}
		else if ((_1a7729990_prim(_424841_d.get()._field_kind.ptr()) == nullptr) || _1a76ee767_is_const(_424841_d.ptr()) || (_1a7661025_real_kind_of(_1a772c498_to_str(_1a7729990_prim(_424841_d.get()._field_kind.ptr()).ptr())) != _1a7661025_real_kind_of(jule::Str("int", 3)))) {
			_case_begin_1aa1a4219:;
			{
				jule::Ptr<_1a77278d3_TypeKind> _426517_t = jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_1a773e554_build_prim_type(jule::Str("int", 3)), 5)});;
				_1a7724506_apply_cast_kind(_424841_d,_426517_t);
			}
		}
		_match_end_1aa1a479c:;
	};
	_424853_err_fmt = jule::Str();
	return _424853_err_fmt;
}



inline void _1a7724ca9_apply_cast_model_by_enum(jule::Ptr<_1a76edda4_Data>& _427434_d, jule::Ptr<_1a6982435_Enum> _427448_e) {
	if ((_427448_e == nullptr)) {
		return;;
	};
	jule::Ptr<_1a772c135_Prim> _42789_p = _1a7729990_prim(_427448_e.get()._field_kind.get()._field_kind.ptr());;
	if (_1a77300e4_is_str(_42789_p.ptr())) {
		return;;
	};
	_1a772424d_apply_cast_kind_model(_427434_d,_427448_e.get()._field_kind.get()._field_kind);
}



inline void _1a7725073_cast_const_by_type(jule::Str& _428524_t, jule::Ptr<_1a76edda4_Data>& _428537_d) {
	{
		
		if (_1a766b849_is_sig_int(_428524_t)) {
			_case_begin_1aa1aa3b8:;
			{
				{
					auto _match_expr{ _1a76612bc_bitsize_of(_1a7661025_real_kind_of(_428524_t)) };
					
					if (_match_expr == 64LL) {
						_case_begin_1aa1ab177:;
						{
							_1a75c593a_set_i64(_428537_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1a75c51dc_as_i64(_428537_d.get()._field_constant.ptr())));
						}
					}
					else if (_match_expr == 32LL) {
						_case_begin_1aa1ab1dd:;
						{
							_1a75c593a_set_i64(_428537_d.get()._field_constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I32>(_1a75c51dc_as_i64(_428537_d.get()._field_constant.ptr())))));
						}
					}
					else if (_match_expr == 16LL) {
						_case_begin_1aa1ab254:;
						{
							_1a75c593a_set_i64(_428537_d.get()._field_constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I16>(_1a75c51dc_as_i64(_428537_d.get()._field_constant.ptr())))));
						}
					}
					else if (_match_expr == 8LL) {
						_case_begin_1aa1ab2ba:;
						{
							_1a75c593a_set_i64(_428537_d.get()._field_constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I8>(_1a75c51dc_as_i64(_428537_d.get()._field_constant.ptr())))));
						}
					}
					_match_end_1aa1aac8c:;
				};
			}
		}
		else if (_1a766bb35_is_unsig_int(_428524_t)) {
			_case_begin_1aa1aa440:;
			{
				{
					auto _match_expr{ _1a76612bc_bitsize_of(_1a7661025_real_kind_of(_428524_t)) };
					
					if (_match_expr == 64LL) {
						_case_begin_1aa1ae972:;
						{
							_1a75c5bb0_set_u64(_428537_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1a75c5451_as_u64(_428537_d.get()._field_constant.ptr())));
						}
					}
					else if (_match_expr == 32LL) {
						_case_begin_1aa1ae9d8:;
						{
							_1a75c5bb0_set_u64(_428537_d.get()._field_constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U32>(_1a75c5451_as_u64(_428537_d.get()._field_constant.ptr())))));
						}
					}
					else if (_match_expr == 16LL) {
						_case_begin_1aa1aea4e:;
						{
							_1a75c5bb0_set_u64(_428537_d.get()._field_constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U16>(_1a75c5451_as_u64(_428537_d.get()._field_constant.ptr())))));
						}
					}
					else if (_match_expr == 8LL) {
						_case_begin_1aa1aeab5:;
						{
							_1a75c5bb0_set_u64(_428537_d.get()._field_constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U8>(_1a75c5451_as_u64(_428537_d.get()._field_constant.ptr())))));
						}
					}
					_match_end_1aa1aaa7d:;
				};
			}
		}
		else if (_1a766c1b8_is_float(_428524_t)) {
			_case_begin_1aa1aa4b7:;
			{
				{
					auto _match_expr{ _1a76612bc_bitsize_of(_1a7661025_real_kind_of(_428524_t)) };
					
					if (_match_expr == 64LL) {
						_case_begin_1aa1b3349:;
						{
							_1a75c6430_set_f64(_428537_d.get()._field_constant.ptr(), static_cast<jule::F64>(_1a75c56b5_as_f64(_428537_d.get()._field_constant.ptr())));
						}
					}
					else if (_match_expr == 32LL) {
						_case_begin_1aa1b33b0:;
						{
							_1a75c6430_set_f64(_428537_d.get()._field_constant.ptr(), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F32>(_1a75c56b5_as_f64(_428537_d.get()._field_constant.ptr())))));
						}
					}
					_match_end_1aa1b0137:;
				};
			}
		}
		_match_end_1aa1aa297:;
	};
}



inline void _1a772546e_update_model_to_generic_ins(jule::Ptr<_1a6845150_FnCallExprModel>& _431937_m, jule::Ptr<_1a6872c93_FnIns>& _431963_f) {
	{
		auto &_match_expr{ _431937_m.get()._field_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1a6872c93_FnIns>>()) {
			_case_begin_1aa1ab892:;
			{
				_431937_m.get()._field_expr=jule::Any(_431963_f);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a686c62d_StructSubIdentExprModel>>()) {
			_case_begin_1aa1b42a1:;
			{
				_431937_m.get()._field_expr.operator jule::Ptr<_1a686c62d_StructSubIdentExprModel>().get()._field_method=_431963_f;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a686c81a_StructStaticIdentExprModel>>()) {
			_case_begin_1aa1b4317:;
			{
				_431937_m.get()._field_expr.operator jule::Ptr<_1a686c81a_StructStaticIdentExprModel>().get()._field_method=_431963_f;
			}
		}
		_match_end_1aa1b3965:;
	};
}



inline jule::Bool _1a773ceae_kind_uses_generics(jule::Any& _143824_k, jule::Slice<jule::Ptr<_1a685d960_GenericDecl>>& _143842_generics) {
	{
		auto &expr = _143842_generics;
		auto it = expr.begin();
		_iter_begin_1aa2a42c5:;
		if (it != expr.end()) {
			jule::Ptr<_1a685d960_GenericDecl> &_143912_g = *it;
			{
				if (static__1a773cab3_exist(_143912_g.get()._field_ident,_143824_k)) {
					return true;
				};
			}
			_iter_next_1aa2a42c5:;
			++it;
			goto _iter_begin_1aa2a42c5;
		}
		_iter_end_1aa2a42c5:;
	};
	return false;
}



inline jule::Bool _1a773d344_has_directive(jule::Slice<jule::Ptr<_1a6852525_Directive>>& _144823_directives, jule::Str _144854_tag) {
	{
		auto &expr = _144823_directives;
		auto it = expr.begin();
		_iter_begin_1aa2a456c:;
		if (it != expr.end()) {
			jule::Ptr<_1a6852525_Directive> _144917_dr = *it;
			{
				if ((_144917_dr.get()._field_tag.get()._field_kind == _144854_tag)) {
					return true;
				};
			}
			_iter_next_1aa2a456c:;
			++it;
			goto _iter_begin_1aa2a456c;
		}
		_iter_end_1aa2a456c:;
	};
	return false;
}



inline jule::Bool _1a773d5db_can_get_ptr(jule::Ptr<_1a76edda4_Data>& _145721_d) {
	if (((!(_145721_d.get()._field_lvalue)) || _1a76ee767_is_const(_145721_d.ptr()))) {
		return false;
	};
	{
		
		if (((_1a772a919_fnc(_145721_d.get()._field_kind.ptr()) != nullptr) || (_1a772a1cc_enm(_145721_d.get()._field_kind.ptr()) != nullptr))) {
			_case_begin_1aa2a698c:;
			{
				return false;
			}
		}
		else {
			_case_begin_1aa2a6393:;
			{
				return true;
			}
		}
		_match_end_1aa2a6173:;
	};
}



inline jule::Bool _1a773d8c7_is_valid_for_sptr_type(jule::Ptr<_1a77278d3_TypeKind>& _147132_t) {
	jule::Ptr<_1a6836a48_StructIns> _147213_s = _1a772ab7d_strct(_147132_t.ptr());;
	if ((((_147213_s != nullptr) && (_147213_s.get()._field_decl != nullptr)) && _147213_s.get()._field_decl.get()._field_cpp_linked)) {
		return false;
	};
	return true;
}



inline jule::Bool _1a773db6e_is_valid_for_ref(jule::Ptr<_1a77278d3_TypeKind>& _148026_t) {
	return (_1a772a919_fnc(_148026_t.ptr()) == nullptr);
}



inline jule::Bool _1a773de38_is_builtin_str_convertable(jule::Ptr<_1a77278d3_TypeKind>& _148336_t) {
	return (((!(_1a7728a16_void(_148336_t.ptr()))) && (_1a772a919_fnc(_148336_t.ptr()) == nullptr)) && (_1a772b3ba_tup(_148336_t.ptr()) == nullptr));
}



inline jule::Str _1a773e213_build_link_path_by_tokens(jule::Slice<jule::Ptr<_1a527737a_Token>>& _148731_tokens) {
	jule::Str _148813_s = _148731_tokens[0LL].get()._field_kind;;
	{
		auto expr = _148731_tokens.slice(1LL);
		auto it = expr.begin();
		_iter_begin_1aa2aa562:;
		if (it != expr.end()) {
			jule::Ptr<_1a527737a_Token> &_148912_token = *it;
			{
				_148813_s+=jule::Str("::", 2);
				_148813_s+=_148912_token.get()._field_kind;
			}
			_iter_next_1aa2aa562:;
			++it;
			goto _iter_begin_1aa2aa562;
		}
		_iter_end_1aa2aa562:;
	};
	return _148813_s;
}



inline jule::Ptr<_1a772c135_Prim> _1a773e554_build_prim_type(jule::Str _149620_kind) {
	return jule::new_ptr<_1a772c135_Prim>(_1a772c135_Prim{._field_kind=_149620_kind});
}



inline jule::Ptr<_1a6826829_Struct> _1a773e7eb_get_struct_from_kind(jule::Ptr<_1a77278d3_TypeKind> _150229_k) {
	{
		
		if ((_150229_k == nullptr)) {
			_case_begin_1aa2abd6b:;
			{
				return nullptr;
			}
		}
		else if ((_1a772ab7d_strct(_150229_k.ptr()) != nullptr)) {
			_case_begin_1aa2abdd2:;
			{
				return _1a772ab7d_strct(_150229_k.ptr()).get()._field_decl;
			}
		}
		else if ((_1a7729c04_sptr(_150229_k.ptr()) != nullptr)) {
			_case_begin_1aa2abb07:;
			{
				return _1a773e7eb_get_struct_from_kind(_1a7729c04_sptr(_150229_k.ptr()).get()._field_elem);
			}
		}
		else if ((_1a772a6a5_slc(_150229_k.ptr()) != nullptr)) {
			_case_begin_1aa2abb6d:;
			{
				return _1a773e7eb_get_struct_from_kind(_1a772a6a5_slc(_150229_k.ptr()).get()._field_elem);
			}
		}
		else if ((_1a772a441_arr(_150229_k.ptr()) != nullptr)) {
			_case_begin_1aa2abbd4:;
			{
				return _1a773e7eb_get_struct_from_kind(_1a772a441_arr(_150229_k.ptr()).get()._field_elem);
			}
		}
		else if ((_1a7729e68_ptr(_150229_k.ptr()) != nullptr)) {
			_case_begin_1aa2ab72d:;
			{
				return nullptr;
			}
		}
		else {
			_case_begin_1aa2aab7d:;
			{
				return nullptr;
			}
		}
		_match_end_1aa2aaab2:;
	};
}



inline jule::Bool _1a773ea93_is_prim(jule::Str _152512_kind) {
	return ((((((((((((((((_152512_kind == jule::Str("i8", 2)) || (_152512_kind == jule::Str("i16", 3))) || (_152512_kind == jule::Str("i32", 3))) || (_152512_kind == jule::Str("i64", 3))) || (_152512_kind == jule::Str("u8", 2))) || (_152512_kind == jule::Str("u16", 3))) || (_152512_kind == jule::Str("u32", 3))) || (_152512_kind == jule::Str("u64", 3))) || (_152512_kind == jule::Str("f32", 3))) || (_152512_kind == jule::Str("f64", 3))) || (_152512_kind == jule::Str("int", 3))) || (_152512_kind == jule::Str("uint", 4))) || (_152512_kind == jule::Str("uintptr", 7))) || (_152512_kind == jule::Str("bool", 4))) || (_152512_kind == jule::Str("str", 3))) || (_152512_kind == jule::Str("any", 3)));
}



inline void _1a773ed4b_apply_implicit_cast(jule::Ptr<_1a77278d3_TypeKind>& _154429_dest, jule::Ptr<_1a76edda4_Data>& _154451_d) {
	if (_1a77287a2_is_nil(_154451_d.get()._field_kind.ptr())) {
		return;;
	};
	jule::Ptr<_1a772c135_Prim> _15499_dest_prim = _1a7729990_prim(_154429_dest.ptr());;
	jule::Ptr<_1a772c135_Prim> _15509_prim = _1a7729990_prim(_154451_d.get()._field_kind.ptr());;
	if ((_15499_dest_prim != nullptr)) {
		if (_1a7730358_is_any(_15499_dest_prim.ptr())) {
			_1a7724506_apply_cast_kind(_154451_d,_154429_dest);
			return;;
		};
		if (((((((!(_1a772853d_cpp_linked(_154451_d.get()._field_kind.ptr()))) && (!(_154451_d.get()._field_kind.get()._field_variadic))) && (!(_154451_d.get()._field_lvalue))) && (!(_1a76ee767_is_const(_154451_d.ptr())))) && (_15509_prim != nullptr)) && _1a766c460_is_num(_15509_prim.get()._field_kind))) {
			_1a7724506_apply_cast_kind(_154451_d,_154429_dest);
		};
		return;;
	};
	if (((_1a772ade2_trt(_154429_dest.ptr()) != nullptr) && (_1a772ade2_trt(_154451_d.get()._field_kind.ptr()) == nullptr))) {
		_1a772424d_apply_cast_kind_model(_154451_d,_154429_dest);
	};
}



inline std::tuple<jule::Ptr<_1a76e8e26_SymbolTable>,jule::Slice<_1a43349cc_Log>> _1a77429db_build_symbols(jule::Ptr<_1a6820cc9_Ast>& _1523_ast, jule::Trait<_1a7682bc3_Importer>& _1539_importer, jule::Ptr<_1a687a927_SymbolBuilder> _1563_owner) {
	jule::Ptr<_1a687a927_SymbolBuilder> _1613_sb = jule::new_ptr<_1a687a927_SymbolBuilder>(_1a687a927_SymbolBuilder{._field_owner=_1563_owner, ._field_importer=_1539_importer, ._field_ast=_1523_ast, });;
	_1a6880a81_build(_1613_sb);
	if ((_1613_sb.get()._field_errors.len() == 0LL)) {
		return std::make_tuple(_1613_sb.get()._field_table,nullptr);
	};
	return std::make_tuple(nullptr,_1613_sb.get()._field_errors);
}



inline std::tuple<jule::Ptr<_1a7687bea_Package>,jule::Slice<_1a43349cc_Log>> _1a7742e1a___analyze_package(jule::Slice<jule::Ptr<_1a6820cc9_Ast>>& _2927_files, jule::Trait<_1a7682bc3_Importer>& _2947_importer, jule::I64& _2968_flags) {
	jule::Slice<jule::Ptr<_1a76e8e26_SymbolTable>> _3113_tables = jule::Slice<jule::Ptr<_1a76e8e26_SymbolTable>>::alloc(0LL,_2927_files.len());;
	{
		auto &expr = _2927_files;
		auto it = expr.begin();
		_iter_begin_1aa2ba5c7:;
		if (it != expr.end()) {
			jule::Ptr<_1a6820cc9_Ast> _3217_f = *it;
			{
				jule::Ptr<_1a76e8e26_SymbolTable> _3318_table;;
				jule::Slice<_1a43349cc_Log> _3329_errors;;
				std::tie(_3318_table,_3329_errors) = _1a77429db_build_symbols(_3217_f,_2947_importer,nullptr);
				if ((_3329_errors.len() > 0LL)) {
					return std::make_tuple(nullptr,_3329_errors);
				};
				_3113_tables = jule::alloc_for_append(_3113_tables,1);_3113_tables.__push(_3318_table);;
			}
			_iter_next_1aa2ba5c7:;
			++it;
			goto _iter_begin_1aa2ba5c7;
		}
		_iter_end_1aa2ba5c7:;
	};
	jule::Ptr<_1a768cc22_Sema> _4013_sema = jule::new_ptr<_1a768cc22_Sema>(_1a768cc22_Sema{._field_flags=_2968_flags});;
	_1a76a46c8_check(_4013_sema, _3113_tables);
	if ((_4013_sema.get()._field_errors.len() > 0LL)) {
		return std::make_tuple(nullptr,_4013_sema.get()._field_errors);
	};
	jule::Ptr<_1a7687bea_Package> _4813_pkg = jule::new_ptr<_1a7687bea_Package>(_1a7687bea_Package{._field_files=_4013_sema.get()._field_files});;
	return std::make_tuple(_4813_pkg,nullptr);
}



inline std::tuple<jule::Ptr<_1a7687bea_Package>,jule::Slice<_1a43349cc_Log>> _1a7743305_analyze_package(jule::Slice<jule::Ptr<_1a6820cc9_Ast>> _7228_files, jule::Trait<_1a7682bc3_Importer> _7247_importer, jule::I64 _7267_flags) {
	if ((_7228_files.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	};
	jule::Ptr<_1a7687bea_Package> _7714_package;;
	jule::Slice<_1a43349cc_Log> _7727_logs;;
	std::tie(_7714_package,_7727_logs) = _1a7742e1a___analyze_package(_7228_files,_7247_importer,_7267_flags);
	return std::make_tuple(_7714_package,_7727_logs);
}



inline jule::Ptr<_1a6872c93_FnIns> _1a774c012_find_builtin_fn(jule::Str _2120_ident) {
	{
		auto &_match_expr{ _2120_ident };
		
		if (_match_expr == jule::Str("out", 3)) {
			_case_begin_1aa2c336b:;
			{
				static jule::Ptr<_1a6872c93_FnIns> _2420_f = jule::new_ptr<_1a6872c93_FnIns>(_1a6872c93_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a76edda4_Data>(jule::Ptr<_1a7700922_Eval>&,jule::Ptr<_1a6859e12_FnCallExpr>&,jule::Ptr<_1a76edda4_Data>&)>(_1a77a66cb_builtin_caller_out), });;
				return _2420_f;
			}
		}
		else if (_match_expr == jule::Str("outln", 5)) {
			_case_begin_1aa2c33d2:;
			{
				static jule::Ptr<_1a6872c93_FnIns> _2720_f = jule::new_ptr<_1a6872c93_FnIns>(_1a6872c93_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a76edda4_Data>(jule::Ptr<_1a7700922_Eval>&,jule::Ptr<_1a6859e12_FnCallExpr>&,jule::Ptr<_1a76edda4_Data>&)>(_1a77a680d_builtin_caller_outln), });;
				return _2720_f;
			}
		}
		else if (_match_expr == jule::Str("new", 3)) {
			_case_begin_1aa2c3107:;
			{
				static jule::Ptr<_1a6872c93_FnIns> _3020_f = jule::new_ptr<_1a6872c93_FnIns>(_1a6872c93_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a76edda4_Data>(jule::Ptr<_1a7700922_Eval>&,jule::Ptr<_1a6859e12_FnCallExpr>&,jule::Ptr<_1a76edda4_Data>&)>(_1a77a6940_builtin_caller_new), });;
				return _3020_f;
			}
		}
		else if (_match_expr == jule::Str("panic", 5)) {
			_case_begin_1aa2c316d:;
			{
				static jule::Ptr<_1a6872c93_FnIns> _3320_f = jule::new_ptr<_1a6872c93_FnIns>(_1a6872c93_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a76edda4_Data>(jule::Ptr<_1a7700922_Eval>&,jule::Ptr<_1a6859e12_FnCallExpr>&,jule::Ptr<_1a76edda4_Data>&)>(_1a77d7179_builtin_caller_panic), });;
				return _3320_f;
			}
		}
		else if (_match_expr == jule::Str("make", 4)) {
			_case_begin_1aa2c31e5:;
			{
				static jule::Ptr<_1a6872c93_FnIns> _3620_f = jule::new_ptr<_1a6872c93_FnIns>(_1a6872c93_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a76edda4_Data>(jule::Ptr<_1a7700922_Eval>&,jule::Ptr<_1a6859e12_FnCallExpr>&,jule::Ptr<_1a76edda4_Data>&)>(_1a77d72ab_builtin_caller_make), });;
				return _3620_f;
			}
		}
		else if (_match_expr == jule::Str("append", 6)) {
			_case_begin_1aa2c2d60:;
			{
				static jule::Ptr<_1a6872c93_FnIns> _3920_f = jule::new_ptr<_1a6872c93_FnIns>(_1a6872c93_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a76edda4_Data>(jule::Ptr<_1a7700922_Eval>&,jule::Ptr<_1a6859e12_FnCallExpr>&,jule::Ptr<_1a76edda4_Data>&)>(_1a77d73dd_builtin_caller_append), });;
				return _3920_f;
			}
		}
		else if (_match_expr == jule::Str("copy", 4)) {
			_case_begin_1aa2c2dd7:;
			{
				static jule::Ptr<_1a6872c93_FnIns> _4220_f = jule::new_ptr<_1a6872c93_FnIns>(_1a6872c93_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a76edda4_Data>(jule::Ptr<_1a7700922_Eval>&,jule::Ptr<_1a6859e12_FnCallExpr>&,jule::Ptr<_1a76edda4_Data>&)>(_1a77d7784_builtin_caller_copy), });;
				return _4220_f;
			}
		}
		else if (_match_expr == jule::Str("clone", 5)) {
			_case_begin_1aa2c2e5e:;
			{
				static jule::Ptr<_1a6872c93_FnIns> _4520_f = jule::new_ptr<_1a6872c93_FnIns>(_1a6872c93_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a76edda4_Data>(jule::Ptr<_1a7700922_Eval>&,jule::Ptr<_1a6859e12_FnCallExpr>&,jule::Ptr<_1a76edda4_Data>&)>(_1a77d78b6_builtin_caller_clone), });;
				return _4520_f;
			}
		}
		else if (_match_expr == jule::Str("assert", 6)) {
			_case_begin_1aa2c3459:;
			{
				static jule::Ptr<_1a6872c93_FnIns> _4820_f = jule::new_ptr<_1a6872c93_FnIns>(_1a6872c93_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a76edda4_Data>(jule::Ptr<_1a7700922_Eval>&,jule::Ptr<_1a6859e12_FnCallExpr>&,jule::Ptr<_1a76edda4_Data>&)>(_1a77d79e8_builtin_caller_assert), });;
				return _4820_f;
			}
		}
		else {
			_case_begin_1aa2c2810:;
			{
				return nullptr;
			}
		}
		_match_end_1aa2c2ba6:;
	};
}



inline jule::Ptr<_1a7726b9b_TypeAlias> _1a774cd9d_find_builtin_type_alias(jule::Str _5528_ident) {
	{
		auto &_match_expr{ _5528_ident };
		
		if (_match_expr == jule::Str("byte", 4)) {
			_case_begin_1aa2c898c:;
			{
				static jule::Ptr<_1a7726b9b_TypeAlias> _5820_t = jule::new_ptr<_1a7726b9b_TypeAlias>(_1a7726b9b_TypeAlias{._field_public=true, ._field_kind=jule::new_ptr<_1a772b772_TypeSymbol>(_1a772b772_TypeSymbol{._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_1a773e554_build_prim_type(jule::Str("u8", 2)), 5)})}), });;
				return _5820_t;
			}
		}
		else if (_match_expr == jule::Str("rune", 4)) {
			_case_begin_1aa2c8bbd:;
			{
				static jule::Ptr<_1a7726b9b_TypeAlias> _6820_t = jule::new_ptr<_1a7726b9b_TypeAlias>(_1a7726b9b_TypeAlias{._field_public=true, ._field_kind=jule::new_ptr<_1a772b772_TypeSymbol>(_1a772b772_TypeSymbol{._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_1a773e554_build_prim_type(jule::Str("i32", 3)), 5)})}), });;
				return _6820_t;
			}
		}
		else {
			_case_begin_1aa2c7c77:;
			{
				return nullptr;
			}
		}
		_match_end_1aa2c8580:;
	};
}



inline jule::Ptr<_1a68d46b7_Trait> _1a774e1e0_find_builtin_trait(jule::Str _8223_ident) {
	return nullptr;
}



inline jule::Any _1a7780c6b_find_builtin_def(jule::Str _8621_ident) {
	jule::Ptr<_1a6872c93_FnIns> _8713_f = _1a774c012_find_builtin_fn(_8621_ident);;
	if ((_8713_f != nullptr)) {
		return jule::Any(_8713_f);
	};
	jule::Ptr<_1a7726b9b_TypeAlias> _9213_ta = _1a774cd9d_find_builtin_type_alias(_8621_ident);;
	if ((_9213_ta != nullptr)) {
		return jule::Any(_9213_ta);
	};
	jule::Ptr<_1a68d46b7_Trait> _9713_t = _1a774e1e0_find_builtin_trait(_8621_ident);;
	if ((_9713_t != nullptr)) {
		return jule::Any(_9713_t);
	};
	return nullptr;
}



inline jule::Any _1a774a9a0_find_builtin_def_std_debug(jule::Str _10531_ident) {
	{
		auto &_match_expr{ _10531_ident };
		
		if (_match_expr == jule::Str("out", 3)) {
			_case_begin_1aa2ccebe:;
			{
				static jule::Ptr<_1a6872c93_FnIns> _10820_f = jule::new_ptr<_1a6872c93_FnIns>(_1a6872c93_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a76edda4_Data>(jule::Ptr<_1a7700922_Eval>&,jule::Ptr<_1a6859e12_FnCallExpr>&,jule::Ptr<_1a76edda4_Data>&)>(_1a77d85ed_builtin_caller_std_debug_out), });;
				return jule::Any(_10820_f);
			}
		}
		else if (_match_expr == jule::Str("outln", 5)) {
			_case_begin_1aa2cd079:;
			{
				static jule::Ptr<_1a6872c93_FnIns> _11120_f = jule::new_ptr<_1a6872c93_FnIns>(_1a6872c93_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a76edda4_Data>(jule::Ptr<_1a7700922_Eval>&,jule::Ptr<_1a6859e12_FnCallExpr>&,jule::Ptr<_1a76edda4_Data>&)>(_1a77d8a1b_builtin_caller_std_debug_outln), });;
				return jule::Any(_11120_f);
			}
		}
		else {
			_case_begin_1aa2cae23:;
			{
				return nullptr;
			}
		}
		_match_end_1aa2cca29:;
	};
}



inline jule::Any _1a7753139_find_builtin_def_std_mem(jule::Str _11829_ident) {
	{
		auto &_match_expr{ _11829_ident };
		
		if (_match_expr == jule::Str("size_of", 7)) {
			_case_begin_1aa2ce7b7:;
			{
				static jule::Ptr<_1a6872c93_FnIns> _12120_f = jule::new_ptr<_1a6872c93_FnIns>(_1a6872c93_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a76edda4_Data>(jule::Ptr<_1a7700922_Eval>&,jule::Ptr<_1a6859e12_FnCallExpr>&,jule::Ptr<_1a76edda4_Data>&)>(_1a77d7b2a_builtin_caller_std_mem_size_of), });;
				return jule::Any(_12120_f);
			}
		}
		else if (_match_expr == jule::Str("align_of", 8)) {
			_case_begin_1aa2ce8a5:;
			{
				static jule::Ptr<_1a6872c93_FnIns> _12420_f = jule::new_ptr<_1a6872c93_FnIns>(_1a6872c93_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a76edda4_Data>(jule::Ptr<_1a7700922_Eval>&,jule::Ptr<_1a6859e12_FnCallExpr>&,jule::Ptr<_1a76edda4_Data>&)>(_1a77d7c5c_builtin_caller_std_mem_align_of), });;
				return jule::Any(_12420_f);
			}
		}
		else if (_match_expr == jule::Str("free", 4)) {
			_case_begin_1aa2ce91b:;
			{
				static jule::Ptr<_1a6872c93_FnIns> _12720_f = jule::new_ptr<_1a6872c93_FnIns>(_1a6872c93_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a76edda4_Data>(jule::Ptr<_1a7700922_Eval>&,jule::Ptr<_1a6859e12_FnCallExpr>&,jule::Ptr<_1a76edda4_Data>&)>(_1a77d7d8e_builtin_caller_std_mem_free), });;
				return jule::Any(_12720_f);
			}
		}
		else {
			_case_begin_1aa2ccd15:;
			{
				return nullptr;
			}
		}
		_match_end_1aa2cdd5a:;
	};
}



inline jule::Any _1a778a1c6_find_builtin_def_std_jule_integrated(jule::Str _13441_ident) {
	{
		auto &_match_expr{ _13441_ident };
		
		if (_match_expr == jule::Str("to_str", 6)) {
			_case_begin_1aa2d19ea:;
			{
				static jule::Ptr<_1a6872c93_FnIns> _13720_f = jule::new_ptr<_1a6872c93_FnIns>(_1a6872c93_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a76edda4_Data>(jule::Ptr<_1a7700922_Eval>&,jule::Ptr<_1a6859e12_FnCallExpr>&,jule::Ptr<_1a76edda4_Data>&)>(_1a77d7ec1_builtin_caller_std_jule_integrated_to_str), });;
				return jule::Any(_13720_f);
			}
		}
		else if (_match_expr == jule::Str("emit", 4)) {
			_case_begin_1aa2d1ad8:;
			{
				static jule::Ptr<_1a6872c93_FnIns> _14020_f = jule::new_ptr<_1a6872c93_FnIns>(_1a6872c93_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a76edda4_Data>(jule::Ptr<_1a7700922_Eval>&,jule::Ptr<_1a6859e12_FnCallExpr>&,jule::Ptr<_1a76edda4_Data>&)>(_1a77d81e1_builtin_caller_std_jule_integrated_emit), });;
				return jule::Any(_14020_f);
			}
		}
		else {
			_case_begin_1aa2ce696:;
			{
				return nullptr;
			}
		}
		_match_end_1aa2d108d:;
	};
}



inline jule::Any _1a776c3a6_find_package_builtin_def(jule::Str _14729_link_path, jule::Str _14745_ident) {
	{
		auto &_match_expr{ _14729_link_path };
		
		if (_match_expr == jule::Str("std::debug", 10)) {
			_case_begin_1aa2d3535:;
			{
				return jule::Any(_1a774a9a0_find_builtin_def_std_debug(_14745_ident));
			}
		}
		else if (_match_expr == jule::Str("std::mem", 8)) {
			_case_begin_1aa2d35ce:;
			{
				return jule::Any(_1a7753139_find_builtin_def_std_mem(_14745_ident));
			}
		}
		else if (_match_expr == jule::Str("std::jule::integrated", 21)) {
			_case_begin_1aa2d3645:;
			{
				return jule::Any(_1a778a1c6_find_builtin_def_std_jule_integrated(_14745_ident));
			}
		}
		else {
			_case_begin_1aa2d18c9:;
			{
				return nullptr;
			}
		}
		_match_end_1aa2d31a0:;
	};
}



inline jule::Ptr<_1a76edda4_Data> _1a776c4d8_builtin_caller_common_plain(jule::Ptr<_1a7700922_Eval>& _16037_e, jule::Ptr<_1a6859e12_FnCallExpr>& _16052_fc, jule::Ptr<_1a76edda4_Data>& _16074_d) {
	jule::Ptr<_1a6872c93_FnIns> _16113_f = _1a772a919_fnc(_16074_d.get()._field_kind.ptr());;
	_1a76e0abb_FnCallArgChecker _16313_fcac = _1a76e0abb_FnCallArgChecker{._field_e=_16037_e, ._field_args=_16052_fc.get()._field_args, ._field_error_token=_16052_fc.get()._field_token, ._field_f=_16113_f, ._field_dynamic_annotation=false, };;
	if ((!(_1a76e2e86_check(&_16313_fcac)))) {
		return nullptr;
	};
	jule::Ptr<_1a6845150_FnCallExprModel> _17413_model = jule::new_ptr<_1a6845150_FnCallExprModel>(_1a6845150_FnCallExprModel{._field_token=_16052_fc.get()._field_token, ._field_func=_16113_f, ._field_expr=jule::Any(_16074_d.get()._field_model), ._field_args=_16313_fcac._field_arg_models, });;
	if ((_16113_f.get()._field_result == nullptr)) {
		_16074_d=_1a7724704_build_void_data();
	} else {
		_16074_d=jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_kind=_16113_f.get()._field_result, });
	};
	_16074_d.get()._field_model=jule::Any(_17413_model);
	return _16074_d;
}



inline jule::Ptr<_1a76edda4_Data> _1a77a570d_builtin_caller_common(jule::Ptr<_1a7700922_Eval>& _19331_e, jule::Ptr<_1a6859e12_FnCallExpr>& _19346_fc, jule::Ptr<_1a76edda4_Data>& _19368_d) {
	if ((_19346_fc.get()._field_generics.len() > 0LL)) {
		_1a7700dea_push_err(_19331_e.ptr(), _19346_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	return _1a776c4d8_builtin_caller_common_plain(_19331_e,_19346_fc,_19368_d);
}



inline jule::Ptr<_1a76edda4_Data> _1a77a5840_builtin_caller_common_mut(jule::Ptr<_1a7700922_Eval>& _20135_e, jule::Ptr<_1a6859e12_FnCallExpr>& _20150_fc, jule::Ptr<_1a76edda4_Data>& _20172_d) {
	if ((!(_20172_d.get()._field_mutable))) {
		_1a7700dea_push_err(_20135_e.ptr(), _20150_fc.get()._field_token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	return _1a77a570d_builtin_caller_common(_20135_e,_20150_fc,_20172_d);
}



inline jule::Ptr<_1a76edda4_Data> _1a77a5972_builtin_caller_error(jule::Ptr<_1a7700922_Eval>& _20830_e, jule::Ptr<_1a6859e12_FnCallExpr>& _20845_fc) {
	if ((_20845_fc.get()._field_generics.len() > 0LL)) {
		_1a7700dea_push_err(_20830_e.ptr(), _20845_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_20845_fc.get()._field_args.len() < 1LL)) {
		_1a7700dea_push_err(_20830_e.ptr(), _20845_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("err", 3))}));
		return nullptr;
	};
	if ((_20845_fc.get()._field_args.len() > 1LL)) {
		_1a7700dea_push_err(_20830_e.ptr(), _20845_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a76edda4_Data> _21913_expr = _1a771982b_eval_expr(_20830_e, _20845_fc.get()._field_args[0LL]);;
	if ((_21913_expr == nullptr)) {
		return nullptr;
	};
	if (_1a76ee28e_is_nil(_21913_expr.ptr())) {
		_1a7700dea_push_err(_20830_e.ptr(), _20845_fc.get()._field_args[0LL].get()._field_token,jule::Str("you cannot call error function with nil", 39),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a76edda4_Data> _22813_d = _1a7724704_build_void_data();;
	_22813_d.get()._field_model=jule::Any(jule::new_ptr<_1a686e4ed_BuiltinErrorCallExprModel>(_1a686e4ed_BuiltinErrorCallExprModel{._field_err=jule::Any(_21913_expr.get()._field_model)}));
	return _22813_d;
}



inline jule::Ptr<_1a76edda4_Data> _1a77a66cb_builtin_caller_out(jule::Ptr<_1a7700922_Eval>& _23628_e, jule::Ptr<_1a6859e12_FnCallExpr>& _23643_fc, jule::Ptr<_1a76edda4_Data>& ) {
	if ((_23643_fc.get()._field_generics.len() > 0LL)) {
		_1a7700dea_push_err(_23628_e.ptr(), _23643_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_23643_fc.get()._field_args.len() < 1LL)) {
		_1a7700dea_push_err(_23628_e.ptr(), _23643_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1))}));
		return nullptr;
	};
	if ((_23643_fc.get()._field_args.len() > 1LL)) {
		_1a7700dea_push_err(_23628_e.ptr(), _23643_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a76edda4_Data> _24813_expr = _1a771982b_eval_expr(_23628_e, _23643_fc.get()._field_args[0LL]);;
	if ((_24813_expr == nullptr)) {
		return nullptr;
	};
	if ((!(_1a773de38_is_builtin_str_convertable(_24813_expr.get()._field_kind)))) {
		_1a7700dea_push_err(_23628_e.ptr(), _23643_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1a76edda4_Data> _25813_d = _1a7724704_build_void_data();;
	_25813_d.get()._field_model=jule::Any(jule::new_ptr<_1a686d2aa_BuiltinOutCallExprModel>(_1a686d2aa_BuiltinOutCallExprModel{._field_expr=jule::Any(_24813_expr.get()._field_model), }));
	return _25813_d;
}



inline jule::Ptr<_1a76edda4_Data> _1a77a680d_builtin_caller_outln(jule::Ptr<_1a7700922_Eval>& _26330_e, jule::Ptr<_1a6859e12_FnCallExpr>& _26345_fc, jule::Ptr<_1a76edda4_Data>& _26367_d) {
	_26367_d=_1a77a66cb_builtin_caller_out(_26330_e,_26345_fc,_26367_d);
	if ((_26367_d == nullptr)) {
		return nullptr;
	};
	_26367_d.get()._field_model=jule::Any(jule::new_ptr<_1a686d497_BuiltinOutlnCallExprModel>(_1a686d497_BuiltinOutlnCallExprModel{._field_expr=jule::Any(_26367_d.get()._field_model.operator jule::Ptr<_1a686d2aa_BuiltinOutCallExprModel>().get()._field_expr), }));
	return _26367_d;
}



inline jule::Ptr<_1a76edda4_Data> _1a77a6940_builtin_caller_new(jule::Ptr<_1a7700922_Eval>& _27528_e, jule::Ptr<_1a6859e12_FnCallExpr>& _27543_fc, jule::Ptr<_1a76edda4_Data>& _27565_d) {
	if ((_27543_fc.get()._field_generics.len() > 0LL)) {
		_1a7700dea_push_err(_27528_e.ptr(), _27543_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_27543_fc.get()._field_args.len() < 1LL)) {
		_1a7700dea_push_err(_27528_e.ptr(), _27543_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type", 4))}));
		return nullptr;
	};
	if ((_27543_fc.get()._field_args.len() > 2LL)) {
		_1a7700dea_push_err(_27528_e.ptr(), _27543_fc.get()._field_args[2LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a76edda4_Data> _28713_t = _1a7719210_eval_expr_kind(_27528_e, jule::Any(_27543_fc.get()._field_args[0LL].get()._field_kind));;
	if ((_28713_t == nullptr)) {
		return nullptr;
	};
	if ((!(_28713_t.get()._field_decl))) {
		_1a7700dea_push_err(_27528_e.ptr(), _27543_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((!(_1a773d8c7_is_valid_for_sptr_type(_28713_t.get()._field_kind)))) {
		jule::Ptr<_1a6836a48_StructIns> _29817_s = _1a772ab7d_strct(_28713_t.get()._field_kind.ptr());;
		if ((((_29817_s != nullptr) && (_29817_s.get()._field_decl != nullptr)) && _29817_s.get()._field_decl.get()._field_cpp_linked)) {
			_1a7700dea_push_err(_27528_e.ptr(), _27543_fc.get()._field_args[0LL].get()._field_token,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>());
		};
		return nullptr;
	};
	_27565_d.get()._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(jule::new_ptr<_1a7730644_Sptr>(_1a7730644_Sptr{._field_elem=_28713_t.get()._field_kind}), 6)});
	if ((_27543_fc.get()._field_args.len() == 2LL)) {
		jule::Ptr<_1a77278d3_TypeKind> _31217_old = _27528_e.get()._field_prefix;;
		_27528_e.get()._field_prefix=_28713_t.get()._field_kind;
		jule::Ptr<_1a76edda4_Data> _31517_init = _1a771982b_eval_expr(_27528_e, _27543_fc.get()._field_args[1LL]);;
		_27528_e.get()._field_prefix=_31217_old;
		if ((_31517_init != nullptr)) {
			jule::Ptr<_1a527737a_Token> _32021_token = _27543_fc.get()._field_args[1LL].get()._field_token;;
			;
			_1a7697743_check_validity_for_init_expr(_27528_e.get()._field_s, (!(_27528_e.get()._field_immutable)),false,_28713_t.get()._field_kind,_31517_init,_32021_token);
			_1a769593e_check_assign_type(_27528_e.get()._field_s, false,_28713_t.get()._field_kind,_31517_init,_32021_token);
			_27565_d.get()._field_model=jule::Any(jule::new_ptr<_1a686d871_BuiltinNewCallExprModel>(_1a686d871_BuiltinNewCallExprModel{._field_kind=_28713_t.get()._field_kind, ._field_init=jule::Any(_31517_init.get()._field_model)}));
		};
	} else {
		_27565_d.get()._field_model=jule::Any(jule::new_ptr<_1a686d871_BuiltinNewCallExprModel>(_1a686d871_BuiltinNewCallExprModel{._field_kind=_28713_t.get()._field_kind, }));
	};
	return _27565_d;
}



inline jule::Ptr<_1a76edda4_Data> _1a77d7179_builtin_caller_panic(jule::Ptr<_1a7700922_Eval>& _34030_e, jule::Ptr<_1a6859e12_FnCallExpr>& _34045_fc, jule::Ptr<_1a76edda4_Data>& ) {
	if ((_34045_fc.get()._field_generics.len() > 0LL)) {
		_1a7700dea_push_err(_34030_e.ptr(), _34045_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_34045_fc.get()._field_args.len() < 1LL)) {
		_1a7700dea_push_err(_34030_e.ptr(), _34045_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("message", 7))}));
		return nullptr;
	};
	if ((_34045_fc.get()._field_args.len() > 1LL)) {
		_1a7700dea_push_err(_34030_e.ptr(), _34045_fc.get()._field_args[2LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a76edda4_Data> _35213_expr = _1a771982b_eval_expr(_34030_e, _34045_fc.get()._field_args[0LL]);;
	if ((_35213_expr == nullptr)) {
		return nullptr;
	};
	if (((_1a7729990_prim(_35213_expr.get()._field_kind.ptr()) == nullptr) || (!(_1a77300e4_is_str(_1a7729990_prim(_35213_expr.get()._field_kind.ptr()).ptr()))))) {
		_1a7700dea_push_err(_34030_e.ptr(), _34045_fc.get()._field_token,jule::Str("panic function only accepts strings", 35),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a76edda4_Data> _36113_d = _1a7724704_build_void_data();;
	_36113_d.get()._field_model=jule::Any(jule::new_ptr<_1a686da5d_BuiltinPanicCallExprModel>(_1a686da5d_BuiltinPanicCallExprModel{._field_token=_34045_fc.get()._field_token, ._field_expr=jule::Any(_35213_expr.get()._field_model)}));
	return _36113_d;
}



inline jule::Ptr<_1a76edda4_Data> _1a77d72ab_builtin_caller_make(jule::Ptr<_1a7700922_Eval>& _36929_e, jule::Ptr<_1a6859e12_FnCallExpr>& _36944_fc, jule::Ptr<_1a76edda4_Data>& _36966_d) {
	if ((_36944_fc.get()._field_generics.len() > 0LL)) {
		_1a7700dea_push_err(_36929_e.ptr(), _36944_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_36944_fc.get()._field_args.len() < 2LL)) {
		if ((_36944_fc.get()._field_args.len() == 1LL)) {
			_1a7700dea_push_err(_36929_e.ptr(), _36944_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("size", 4))}));
			return nullptr;
		};
		_1a7700dea_push_err(_36929_e.ptr(), _36944_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type, size", 10))}));
		return nullptr;
	};
	jule::Ptr<_1a76edda4_Data> _38213_t = _1a7719210_eval_expr_kind(_36929_e, jule::Any(_36944_fc.get()._field_args[0LL].get()._field_kind));;
	if ((_38213_t == nullptr)) {
		return nullptr;
	};
	{
		
		if ((!(_38213_t.get()._field_decl))) {
			_case_begin_1aa30dc8b:;
			{
				goto _match_end_1aa30e044;
			}
		}
		else if ((_1a772a6a5_slc(_38213_t.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aa30dd02:;
			{
				if ((_36944_fc.get()._field_args.len() > 3LL)) {
					_1a7700dea_push_err(_36929_e.ptr(), _36944_fc.get()._field_args[3LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
				};
				goto _julec_label_cont;
			}
		}
		else if (((_1a7729990_prim(_38213_t.get()._field_kind.ptr()) != nullptr) && _1a77300e4_is_str(_1a7729990_prim(_38213_t.get()._field_kind.ptr()).ptr()))) {
			_case_begin_1aa30dd68:;
			{
				if ((_36944_fc.get()._field_args.len() > 2LL)) {
					_1a7700dea_push_err(_36929_e.ptr(), _36944_fc.get()._field_args[2LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
				};
				goto _julec_label_cont;
			}
		}
		_match_end_1aa30e044:;
	};
	_1a7700dea_push_err(_36929_e.ptr(), _36944_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
	return nullptr;
	_julec_label_cont:;
	_36966_d.get()._field_kind=_38213_t.get()._field_kind;
	jule::Ptr<_1a76edda4_Data> _40613_len = _1a771982b_eval_expr(_1a7695136_evalp(_36929_e.get()._field_s, _36929_e.get()._field_lookup,_38213_t.get()._field_kind), _36944_fc.get()._field_args[1LL]);;
	if ((_40613_len == nullptr)) {
		return nullptr;
	};
	_1a7708ce3_check_integer_indexing_by_data(_36929_e.ptr(), _40613_len,_36944_fc.get()._field_args[1LL].get()._field_token);
	jule::Ptr<_1a686de37_BuiltinMakeCallExprModel> _41313_model = jule::new_ptr<_1a686de37_BuiltinMakeCallExprModel>(_1a686de37_BuiltinMakeCallExprModel{._field_kind=_38213_t.get()._field_kind, ._field_len=jule::Any(_40613_len.get()._field_model), });;
	_36966_d.get()._field_model=jule::Any(_41313_model);
	if ((_36944_fc.get()._field_args.len() == 3LL)) {
		jule::Ptr<_1a76edda4_Data> _41917_cap = _1a771982b_eval_expr(_1a7695136_evalp(_36929_e.get()._field_s, _36929_e.get()._field_lookup,_38213_t.get()._field_kind), _36944_fc.get()._field_args[2LL]);;
		if ((_41917_cap == nullptr)) {
			return _36966_d;
		};
		_1a7708ce3_check_integer_indexing_by_data(_36929_e.ptr(), _41917_cap,_36944_fc.get()._field_args[2LL].get()._field_token);
		_41313_model.get()._field_cap=jule::Any(_41917_cap.get()._field_model);
	};
	return _36966_d;
}



inline jule::Ptr<_1a76edda4_Data> _1a77d73dd_builtin_caller_append(jule::Ptr<_1a7700922_Eval>& _42931_e, jule::Ptr<_1a6859e12_FnCallExpr>& _42946_fc, jule::Ptr<_1a76edda4_Data>& _42968_d) {
	if ((_42946_fc.get()._field_generics.len() > 0LL)) {
		_1a7700dea_push_err(_42931_e.ptr(), _42946_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_42946_fc.get()._field_args.len() < 2LL)) {
		if ((_42946_fc.get()._field_args.len() == 1LL)) {
			_1a7700dea_push_err(_42931_e.ptr(), _42946_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3))}));
			return nullptr;
		};
		_1a7700dea_push_err(_42931_e.ptr(), _42946_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11))}));
		return nullptr;
	};
	jule::Ptr<_1a76edda4_Data> _44213_t = _1a771982b_eval_expr(_42931_e, _42946_fc.get()._field_args[0LL]);;
	if ((_44213_t == nullptr)) {
		return nullptr;
	};
	if ((_1a772a6a5_slc(_44213_t.get()._field_kind.ptr()) == nullptr)) {
		_1a7700dea_push_err(_42931_e.ptr(), _42946_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1a6872c93_FnIns> _45213_f = jule::new_ptr<_1a6872c93_FnIns>(_1a6872c93_FnIns{._field_params=jule::Slice<jule::Ptr<_1a6871e07_ParamIns>>::make({jule::new_ptr<_1a6871e07_ParamIns>(_1a6871e07_ParamIns{._field_decl=jule::new_ptr<_1a68707da_Param>(_1a68707da_Param{._field_mutable=true, }), ._field_kind=_44213_t.get()._field_kind}),jule::new_ptr<_1a6871e07_ParamIns>(_1a6871e07_ParamIns{._field_decl=jule::new_ptr<_1a68707da_Param>(_1a68707da_Param{._field_mutable=true, ._field_variadic=true, }), ._field_kind=_1a772a6a5_slc(_44213_t.get()._field_kind.ptr()).get()._field_elem})}), ._field_result=_44213_t.get()._field_kind, ._field_caller=jule::Fn<jule::Ptr<_1a76edda4_Data>(jule::Ptr<_1a7700922_Eval>&,jule::Ptr<_1a6859e12_FnCallExpr>&,jule::Ptr<_1a76edda4_Data>&)>(_1a776c4d8_builtin_caller_common_plain), });;
	_42968_d.get()._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_45213_f, 1)});
	_42968_d.get()._field_model=jule::Any(jule::new_ptr<_1a686cbe4_CommonIdentExprModel>(_1a686cbe4_CommonIdentExprModel{._field_ident=jule::Str("append", 6)}));
	_42968_d=_1a776c4d8_builtin_caller_common_plain(_42931_e,_42946_fc,_42968_d);
	if ((_42968_d != nullptr)) {
		jule::Ptr<_1a6845150_FnCallExprModel> _48017_model = _42968_d.get()._field_model.operator jule::Ptr<_1a6845150_FnCallExprModel>();;
		_42968_d.get()._field_model=jule::Any(jule::new_ptr<_1a686e124_BuiltinAppendCallExprModel>(_1a686e124_BuiltinAppendCallExprModel{._field_dest=jule::Any(_48017_model.get()._field_args[0LL]), ._field_elements=jule::Any(_48017_model.get()._field_args[1LL])}));
	};
	return _42968_d;
}



inline jule::Ptr<_1a76edda4_Data> _1a77d7520_caller_copy_slice(jule::Ptr<_1a76edda4_Data>& _48927_dest, jule::Ptr<_1a7700922_Eval>& _48945_e, jule::Ptr<_1a6859e12_FnCallExpr>& _48960_fc, jule::Ptr<_1a76edda4_Data>& _48982_d) {
	if ((!(_48927_dest.get()._field_mutable))) {
		_1a7700dea_push_err(_48945_e.ptr(), _48960_fc.get()._field_args[0LL].get()._field_token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a76edda4_Data> _49413_src = _1a771982b_eval_expr(_48945_e, _48960_fc.get()._field_args[1LL]);;
	if ((_49413_src == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1a77310a1_Slc> _49813_slc = _1a772a6a5_slc(_49413_src.get()._field_kind.ptr());;
	if ((_49813_slc != nullptr)) {
		if (((!(_49413_src.get()._field_mutable)) && _1a7728c7a_mutable(_49813_slc.get()._field_elem.ptr()))) {
			_1a7700dea_push_err(_48945_e.ptr(), _48960_fc.get()._field_args[1LL].get()._field_token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
		};
		if ((!(_1a7728098_equals(_48927_dest.get()._field_kind, _49413_src.get()._field_kind)))) {
			_1a7700dea_push_err(_48945_e.ptr(), _48960_fc.get()._field_args[1LL].get()._field_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1a7727c8a_to_str(_48927_dest.get()._field_kind.ptr())),jule::Any(_1a7727c8a_to_str(_49413_src.get()._field_kind.ptr()))}));
		};
	} else {
		jule::Ptr<_1a772c135_Prim> _50813_dest_prim = _1a7729990_prim(_1a772a6a5_slc(_48927_dest.get()._field_kind.ptr()).get()._field_elem.ptr());;
		jule::Ptr<_1a772c135_Prim> _50913_prim = _1a7729990_prim(_49413_src.get()._field_kind.ptr());;
		if (((((_50813_dest_prim == nullptr) || (_50913_prim == nullptr)) || (!(_1a77300e4_is_str(_50913_prim.ptr())))) || (!(_1a772d6b9_is_u8(_50813_dest_prim.ptr()))))) {
			_1a7700dea_push_err(_48945_e.ptr(), _48960_fc.get()._field_args[1LL].get()._field_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1a7727c8a_to_str(_48927_dest.get()._field_kind.ptr())),jule::Any(_1a7727c8a_to_str(_49413_src.get()._field_kind.ptr()))}));
		};
	};
	_48982_d.get()._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_1a773e554_build_prim_type(jule::Str("int", 3)), 5)});
	_48982_d.get()._field_model=jule::Any(jule::new_ptr<_1a686e311_BuiltinCopyCallExprModel>(_1a686e311_BuiltinCopyCallExprModel{._field_dest=_48927_dest, ._field_src=_49413_src}));
	return _48982_d;
}



inline jule::Ptr<_1a76edda4_Data> _1a77d7652_caller_copy_str(jule::Ptr<_1a76edda4_Data>& _52325_dest, jule::Ptr<_1a7700922_Eval>& _52343_e, jule::Ptr<_1a6859e12_FnCallExpr>& _52358_fc, jule::Ptr<_1a76edda4_Data>& _52380_d) {
	if ((!(_52325_dest.get()._field_mutable))) {
		_1a7700dea_push_err(_52343_e.ptr(), _52358_fc.get()._field_args[0LL].get()._field_token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a76edda4_Data> _52813_src = _1a771982b_eval_expr(_52343_e, _52358_fc.get()._field_args[1LL]);;
	if ((_52813_src == nullptr)) {
		return nullptr;
	};
	{
		
		if ((_1a7729990_prim(_52813_src.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aa32d44d:;
			{
				if (_1a77300e4_is_str(_1a7729990_prim(_52813_src.get()._field_kind.ptr()).ptr())) {
					goto _julec_label_end;
				};
			}
		}
		else if ((_1a772a6a5_slc(_52813_src.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aa32d4b4:;
			{
				jule::Ptr<_1a77310a1_Slc> _53817_slc = _1a772a6a5_slc(_52813_src.get()._field_kind.ptr());;
				if (((_1a7729990_prim(_53817_slc.get()._field_elem.ptr()) != nullptr) && _1a772d6b9_is_u8(_1a7729990_prim(_53817_slc.get()._field_elem.ptr()).ptr()))) {
					goto _julec_label_end;
				};
			}
		}
		_match_end_1aa32d7a0:;
	};
	_1a7700dea_push_err(_52343_e.ptr(), _52358_fc.get()._field_args[1LL].get()._field_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1a7727c8a_to_str(_52325_dest.get()._field_kind.ptr())),jule::Any(_1a7727c8a_to_str(_52813_src.get()._field_kind.ptr()))}));
	_julec_label_end:;
	_52380_d.get()._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_1a773e554_build_prim_type(jule::Str("int", 3)), 5)});
	_52380_d.get()._field_model=jule::Any(jule::new_ptr<_1a686e311_BuiltinCopyCallExprModel>(_1a686e311_BuiltinCopyCallExprModel{._field_dest=_52325_dest, ._field_src=_52813_src}));
	return _52380_d;
}



inline jule::Ptr<_1a76edda4_Data> _1a77d7784_builtin_caller_copy(jule::Ptr<_1a7700922_Eval>& _55329_e, jule::Ptr<_1a6859e12_FnCallExpr>& _55344_fc, jule::Ptr<_1a76edda4_Data>& _55366_d) {
	if ((_55344_fc.get()._field_generics.len() > 0LL)) {
		_1a7700dea_push_err(_55329_e.ptr(), _55344_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_55344_fc.get()._field_args.len() < 2LL)) {
		if ((_55344_fc.get()._field_args.len() == 1LL)) {
			_1a7700dea_push_err(_55329_e.ptr(), _55344_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3))}));
			return nullptr;
		};
		_1a7700dea_push_err(_55329_e.ptr(), _55344_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11))}));
		return nullptr;
	};
	if ((_55344_fc.get()._field_args.len() > 2LL)) {
		_1a7700dea_push_err(_55329_e.ptr(), _55344_fc.get()._field_args[2LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a76edda4_Data> _56913_dest = _1a771982b_eval_expr(_55329_e, _55344_fc.get()._field_args[0LL]);;
	{
		
		if ((_56913_dest == nullptr)) {
			_case_begin_1aa3399cb:;
			{
				return nullptr;
			}
		}
		else if ((_1a772a6a5_slc(_56913_dest.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aa3398cc:;
			{
				return _1a77d7520_caller_copy_slice(_56913_dest,_55329_e,_55344_fc,_55366_d);
			}
		}
		else if (((_1a7729990_prim(_56913_dest.get()._field_kind.ptr()) != nullptr) && _1a77300e4_is_str(_1a7729990_prim(_56913_dest.get()._field_kind.ptr()).ptr()))) {
			_case_begin_1aa339943:;
			{
				return _1a77d7652_caller_copy_str(_56913_dest,_55329_e,_55344_fc,_55366_d);
			}
		}
		else {
			_case_begin_1aa3389ca:;
			{
				_1a7700dea_push_err(_55329_e.ptr(), _55344_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1aa338953:;
	};
}



inline jule::Ptr<_1a76edda4_Data> _1a77d78b6_builtin_caller_clone(jule::Ptr<_1a7700922_Eval>& _58330_e, jule::Ptr<_1a6859e12_FnCallExpr>& _58345_fc, jule::Ptr<_1a76edda4_Data>& ) {
	if ((_58345_fc.get()._field_generics.len() > 0LL)) {
		_1a7700dea_push_err(_58330_e.ptr(), _58345_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_58345_fc.get()._field_args.len() < 1LL)) {
		_1a7700dea_push_err(_58330_e.ptr(), _58345_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	};
	if ((_58345_fc.get()._field_args.len() > 1LL)) {
		_1a7700dea_push_err(_58330_e.ptr(), _58345_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a76edda4_Data> _59613_d = _1a7719210_eval_expr_kind(_58330_e, jule::Any(_58345_fc.get()._field_args[0LL].get()._field_kind));;
	if ((_59613_d == nullptr)) {
		return nullptr;
	};
	if ((!(_1a77294b7_supports_cloning(_59613_d.get()._field_kind.ptr())))) {
		{
			
			if ((_1a772a6a5_slc(_59613_d.get()._field_kind.ptr()) != nullptr) || (_1a772b156_map(_59613_d.get()._field_kind.ptr()) != nullptr) || (_1a772a441_arr(_59613_d.get()._field_kind.ptr()) != nullptr) || (_1a7729c04_sptr(_59613_d.get()._field_kind.ptr()) != nullptr)) {
				_case_begin_1aa341263:;
				{
					{
						_1a7700dea_push_err(_58330_e.ptr(), _58345_fc.get()._field_args[0LL].get()._field_token,jule::Str("type @ has internally types which is not supports cloning", 57),jule::Slice<jule::Any>::make({jule::Any(_1a7727c8a_to_str(_59613_d.get()._field_kind.ptr()))}));
					};
				}
			}
			else if ((_1a772ab7d_strct(_59613_d.get()._field_kind.ptr()) != nullptr)) {
				_case_begin_1aa340b36:;
				{
					{
						_1a7700dea_push_err(_58330_e.ptr(), _58345_fc.get()._field_args[0LL].get()._field_token,jule::Str("type @ is not derives @", 23),jule::Slice<jule::Any>::make({jule::Any(_1a7727c8a_to_str(_59613_d.get()._field_kind.ptr())),jule::Any(jule::Str("Clone", 5))}));
					};
				}
			}
			else {
				_case_begin_1aa340ac0:;
				{
					{
						_1a7700dea_push_err(_58330_e.ptr(), _58345_fc.get()._field_args[0LL].get()._field_token,jule::Str("type @ is not support cloning", 29),jule::Slice<jule::Any>::make({jule::Any(_1a7727c8a_to_str(_59613_d.get()._field_kind.ptr())),jule::Any(jule::Str("Clone", 5))}));
					};
				}
			}
			_match_end_1aa340a04:;
		};
	};
	_59613_d.get()._field_mutable=true;
	_59613_d.get()._field_model=jule::Any(jule::new_ptr<_1a686d684_BuiltinCloneCallExprModel>(_1a686d684_BuiltinCloneCallExprModel{._field_expr=jule::Any(_59613_d.get()._field_model)}));
	return _59613_d;
}



inline jule::Ptr<_1a76edda4_Data> _1a77d79e8_builtin_caller_assert(jule::Ptr<_1a7700922_Eval>& _62931_e, jule::Ptr<_1a6859e12_FnCallExpr>& _62946_fc, jule::Ptr<_1a76edda4_Data>& ) {
	if ((_62946_fc.get()._field_generics.len() > 0LL)) {
		_1a7700dea_push_err(_62931_e.ptr(), _62946_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_62946_fc.get()._field_args.len() < 1LL)) {
		_1a7700dea_push_err(_62931_e.ptr(), _62946_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	};
	if ((_62946_fc.get()._field_args.len() > 2LL)) {
		_1a7700dea_push_err(_62931_e.ptr(), _62946_fc.get()._field_args[2LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a76edda4_Data> _64113_expr = _1a771982b_eval_expr(_62931_e, _62946_fc.get()._field_args[0LL]);;
	if ((_64113_expr == nullptr)) {
		return nullptr;
	};
	if (((_1a7729990_prim(_64113_expr.get()._field_kind.ptr()) == nullptr) || (!(_1a772ed80_is_bool(_1a7729990_prim(_64113_expr.get()._field_kind.ptr()).ptr()))))) {
		_1a7700dea_push_err(_62931_e.ptr(), _62946_fc.get()._field_token,jule::Str("assertion requires boolean expression", 37),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a686dc4a_BuiltinAssertCallExprModel> _65013_model = jule::new_ptr<_1a686dc4a_BuiltinAssertCallExprModel>(_1a686dc4a_BuiltinAssertCallExprModel{._field_token=_62946_fc.get()._field_token, ._field_expr=jule::Any(_64113_expr.get()._field_model), ._field_log=jule::Str("assertion failed", 16)});;
	if ((_62946_fc.get()._field_args.len() == 2LL)) {
		jule::Ptr<_1a76edda4_Data> _65817_log = _1a771982b_eval_expr(_62931_e, _62946_fc.get()._field_args[1LL]);;
		if ((_65817_log == nullptr)) {
			return nullptr;
		};
		if ((((!(_1a76ee767_is_const(_65817_log.ptr()))) || (_1a7729990_prim(_65817_log.get()._field_kind.ptr()) == nullptr)) || (!(_1a77300e4_is_str(_1a7729990_prim(_65817_log.get()._field_kind.ptr()).ptr()))))) {
			_1a7700dea_push_err(_62931_e.ptr(), _62946_fc.get()._field_args[1LL].get()._field_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("const str", 9)),jule::Any(_1a7727c8a_to_str(_65817_log.get()._field_kind.ptr()))}));
			return nullptr;
		};
		_65013_model.get()._field_log=_1a75c4c14_read_str(_65817_log.get()._field_constant.ptr());
	};
	jule::Ptr<_1a76edda4_Data> _67113_d = _1a7724704_build_void_data();;
	_67113_d.get()._field_model=jule::Any(_65013_model);
	return _67113_d;
}



inline jule::Ptr<_1a76edda4_Data> _1a77d7b2a_builtin_caller_std_mem_size_of(jule::Ptr<_1a7700922_Eval>& _67640_e, jule::Ptr<_1a6859e12_FnCallExpr>& _67655_fc, jule::Ptr<_1a76edda4_Data>& ) {
	if ((_67655_fc.get()._field_generics.len() > 0LL)) {
		_1a7700dea_push_err(_67640_e.ptr(), _67655_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a76edda4_Data> _68013_result = jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_1a773e554_build_prim_type(jule::Str("uint", 4)), 5)}), });;
	if ((_67655_fc.get()._field_args.len() < 1LL)) {
		_1a7700dea_push_err(_67640_e.ptr(), _67655_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9))}));
		return _68013_result;
	};
	if ((_67655_fc.get()._field_args.len() > 1LL)) {
		_1a7700dea_push_err(_67640_e.ptr(), _67655_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a76edda4_Data> _69213_d = _1a7719210_eval_expr_kind(_67640_e, jule::Any(_67655_fc.get()._field_args[0LL].get()._field_kind));;
	if ((_69213_d == nullptr)) {
		return _68013_result;
	};
	_68013_result.get()._field_model=jule::Any(jule::new_ptr<_1a686c3ec_SizeofExprModel>(_1a686c3ec_SizeofExprModel{._field_expr=jule::Any(_69213_d.get()._field_model)}));
	return _68013_result;
}



inline jule::Ptr<_1a76edda4_Data> _1a77d7c5c_builtin_caller_std_mem_align_of(jule::Ptr<_1a7700922_Eval>& _70141_e, jule::Ptr<_1a6859e12_FnCallExpr>& _70156_fc, jule::Ptr<_1a76edda4_Data>& ) {
	if ((_70156_fc.get()._field_generics.len() > 0LL)) {
		_1a7700dea_push_err(_70141_e.ptr(), _70156_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a76edda4_Data> _70513_result = jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_1a773e554_build_prim_type(jule::Str("uint", 4)), 5)}), });;
	if ((_70156_fc.get()._field_args.len() < 1LL)) {
		_1a7700dea_push_err(_70141_e.ptr(), _70156_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9))}));
		return _70513_result;
	};
	if ((_70156_fc.get()._field_args.len() > 1LL)) {
		_1a7700dea_push_err(_70141_e.ptr(), _70156_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a76edda4_Data> _71713_d = _1a7719210_eval_expr_kind(_70141_e, jule::Any(_70156_fc.get()._field_args[0LL].get()._field_kind));;
	if ((_71713_d == nullptr)) {
		return _70513_result;
	};
	_70513_result.get()._field_model=jule::Any(jule::new_ptr<_1a686eb5d_AlignofExprModel>(_1a686eb5d_AlignofExprModel{._field_expr=jule::Any(_71713_d.get()._field_model)}));
	return _70513_result;
}



inline jule::Ptr<_1a76edda4_Data> _1a77d7d8e_builtin_caller_std_mem_free(jule::Ptr<_1a7700922_Eval>& _72637_e, jule::Ptr<_1a6859e12_FnCallExpr>& _72652_fc, jule::Ptr<_1a76edda4_Data>& ) {
	if ((_72652_fc.get()._field_generics.len() > 0LL)) {
		_1a7700dea_push_err(_72637_e.ptr(), _72652_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_72652_fc.get()._field_args.len() < 1LL)) {
		_1a7700dea_push_err(_72637_e.ptr(), _72652_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("h", 1))}));
		return nullptr;
	};
	if ((_72652_fc.get()._field_args.len() > 1LL)) {
		_1a7700dea_push_err(_72637_e.ptr(), _72652_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a76edda4_Data> _73913_d = _1a7719210_eval_expr_kind(_72637_e, jule::Any(_72652_fc.get()._field_args[0LL].get()._field_kind));;
	if ((_73913_d == nullptr)) {
		return nullptr;
	};
	if ((!(_1a7729253_performs_rc(_73913_d.get()._field_kind.ptr())))) {
		_1a7700dea_push_err(_72637_e.ptr(), _72652_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a76edda4_Data> _74813_result = _1a7724704_build_void_data();;
	_74813_result.get()._field_model=jule::Any(jule::new_ptr<_1a6870411_FreeExprModel>(_1a6870411_FreeExprModel{._field_expr=jule::Any(_73913_d.get()._field_model)}));
	return _74813_result;
}



inline jule::Ptr<_1a76edda4_Data> _1a77d7ec1_builtin_caller_std_jule_integrated_to_str(jule::Ptr<_1a7700922_Eval>& _75351_e, jule::Ptr<_1a6859e12_FnCallExpr>& _75366_fc, jule::Ptr<_1a76edda4_Data>& ) {
	if ((_75366_fc.get()._field_generics.len() > 0LL)) {
		_1a7700dea_push_err(_75351_e.ptr(), _75366_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_75366_fc.get()._field_args.len() < 1LL)) {
		_1a7700dea_push_err(_75351_e.ptr(), _75366_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	};
	if ((_75366_fc.get()._field_args.len() > 1LL)) {
		_1a7700dea_push_err(_75351_e.ptr(), _75366_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a76edda4_Data> _76613_d = _1a7719210_eval_expr_kind(_75351_e, jule::Any(_75366_fc.get()._field_args[0LL].get()._field_kind));;
	if ((_76613_d == nullptr)) {
		return nullptr;
	};
	if ((!(_1a773de38_is_builtin_str_convertable(_76613_d.get()._field_kind)))) {
		_1a7700dea_push_err(_75351_e.ptr(), _75366_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1a76edda4_Data>(_1a76edda4_Data{._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(_1a773e554_build_prim_type(jule::Str("str", 3)), 5)}), ._field_model=jule::Any(jule::new_ptr<_1a6870037_IntegratedToStrExprModel>(_1a6870037_IntegratedToStrExprModel{._field_expr=jule::Any(_76613_d.get()._field_model)})), });
}



inline jule::Ptr<_1a76edda4_Data> _1a77d81e1_builtin_caller_std_jule_integrated_emit(jule::Ptr<_1a7700922_Eval>& _78449_e, jule::Ptr<_1a6859e12_FnCallExpr>& _78464_fc, jule::Ptr<_1a76edda4_Data>& ) {
	if ((!(_1a7701835_is_unsafe(_78449_e.ptr())))) {
		_1a7700dea_push_err(_78449_e.ptr(), _78464_fc.get()._field_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
	};
	if ((_78464_fc.get()._field_args.len() < 1LL)) {
		_1a7700dea_push_err(_78449_e.ptr(), _78464_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("code", 4))}));
		return nullptr;
	};
	jule::Ptr<_1a76edda4_Data> _79413_d = _1a771982b_eval_expr(_78449_e, _78464_fc.get()._field_args[0LL]);;
	if ((_79413_d == nullptr)) {
		return nullptr;
	};
	if (((_1a7729990_prim(_79413_d.get()._field_kind.ptr()) == nullptr) || (!(_1a77300e4_is_str(_1a7729990_prim(_79413_d.get()._field_kind.ptr()).ptr()))))) {
		_1a7700dea_push_err(_78449_e.ptr(), _78464_fc.get()._field_args[0LL].get()._field_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_1a7727c8a_to_str(_79413_d.get()._field_kind.ptr()))}));
		return nullptr;
	};
	if (((!(_1a76ee767_is_const(_79413_d.ptr()))) || (!(_1a75c70ac_is_str(_79413_d.get()._field_constant.ptr()))))) {
		_1a7700dea_push_err(_78449_e.ptr(), _78464_fc.get()._field_args[0LL].get()._field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1a76edda4_Data> _80913_r = _1a7724704_build_void_data();;
	if ((_78464_fc.get()._field_generics.len() != 0LL)) {
		if ((!(_1a76919d4_check_generic_quantity(_78449_e.get()._field_s.ptr(), 1LL,static_cast<jule::I64>(_78464_fc.get()._field_generics.len()),_78464_fc.get()._field_token)))) {
			return nullptr;
		};
		jule::Ptr<_1a772b772_TypeSymbol> _81517_k = _1a68771c6_build_type(_78464_fc.get()._field_generics[0LL]);;
		if ((!(_1a7693c7d_check_type(_78449_e.get()._field_s, _81517_k,_78449_e.get()._field_lookup)))) {
			return nullptr;
		};
		_80913_r.get()._field_kind=_81517_k.get()._field_kind;
	};
	jule::Ptr<_1a6870224_BackendEmitExprModel> _82213_model = jule::new_ptr<_1a6870224_BackendEmitExprModel>(_1a6870224_BackendEmitExprModel{._field_code=_1a75c4c14_read_str(_79413_d.get()._field_constant.ptr()), });;
	if ((_78464_fc.get()._field_args.len() > 1LL)) {
		_82213_model.get()._field_exprs=jule::Slice<jule::Any>::alloc(0LL,(_78464_fc.get()._field_args.len() - 1LL));
		{
			auto expr = _78464_fc.get()._field_args.slice(1LL);
			auto it = expr.begin();
			_iter_begin_1aa37164a:;
			if (it != expr.end()) {
				jule::Ptr<_1a6855e41_Expr> _82821_arg = *it;
				{
					jule::Ptr<_1a76edda4_Data> _82921_argd = _1a7719210_eval_expr_kind(_78449_e, jule::Any(_82821_arg.get()._field_kind));;
					if ((_82921_argd == nullptr)) {
						return nullptr;
					};
					_82213_model.get()._field_exprs = jule::alloc_for_append(_82213_model.get()._field_exprs,1);_82213_model.get()._field_exprs.__push(jule::Any(_82921_argd.get()._field_model));;
				}
				_iter_next_1aa37164a:;
				++it;
				goto _iter_begin_1aa37164a;
			}
			_iter_end_1aa37164a:;
		};
	};
	_80913_r.get()._field_model=jule::Any(_82213_model);
	return _80913_r;
}



inline jule::Ptr<_1a76edda4_Data> _1a77d85ed_builtin_caller_std_debug_out(jule::Ptr<_1a7700922_Eval>& _84138_e, jule::Ptr<_1a6859e12_FnCallExpr>& _84153_fc, jule::Ptr<_1a76edda4_Data>& _84175_d) {
	_84175_d=_1a77a66cb_builtin_caller_out(_84138_e,_84153_fc,_84175_d);
	if ((_84175_d == nullptr)) {
		return nullptr;
	};
	_84175_d.get()._field_model.operator jule::Ptr<_1a686d2aa_BuiltinOutCallExprModel>().get()._field_debug=true;
	return _84175_d;
}



inline jule::Ptr<_1a76edda4_Data> _1a77d8a1b_builtin_caller_std_debug_outln(jule::Ptr<_1a7700922_Eval>& _85140_e, jule::Ptr<_1a6859e12_FnCallExpr>& _85155_fc, jule::Ptr<_1a76edda4_Data>& _85177_d) {
	_85177_d=_1a77a680d_builtin_caller_outln(_85140_e,_85155_fc,_85177_d);
	if ((_85177_d == nullptr)) {
		return nullptr;
	};
	_85177_d.get()._field_model.operator jule::Ptr<_1a686d497_BuiltinOutlnCallExprModel>().get()._field_debug=true;
	return _85177_d;
}



inline jule::Bool _1a7828d14_find_module_file(jule::Slice<jule::Ptr<_1d4e9e836_DirEntry>>& _1226_dirents) {
	{
		auto &expr = _1226_dirents;
		auto it = expr.begin();
		_iter_begin_1aa376e9c:;
		if (it != expr.end()) {
			jule::Ptr<_1d4e9e836_DirEntry> &_1312_d = *it;
			{
				if (((!(_1d4ea120b_is_dir(_1312_d.get()._field_stat.ptr()))) && (_1312_d.get()._field_name == jule::Str("jule.mod", 8)))) {
					return true;
				};
			}
			_iter_next_1aa376e9c:;
			++it;
			goto _iter_begin_1aa376e9c;
		}
		_iter_end_1aa376e9c:;
	};
	return false;
}



inline jule::Str _1a78290ab_find_module_file_deep(jule::Str _2434_path) {
	for (;;) {
		{
			jule::Slice<jule::Ptr<_1d4e9e836_DirEntry>> _2617_dirents = ({
				auto except = static__1a429d9ce_read(_2434_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_1aa376595;
				} jule::Slice<jule::Ptr<_1d4e9e836_DirEntry>>();});
			});;
			jule::Bool _3013_exist = _1a7828d14_find_module_file(_2617_dirents);;
			if (_3013_exist) {
				return _2434_path;
			};
			jule::I64 _3513_n = _2434_path.len();;
			_2434_path=_1a429b427_dir(_2434_path);
			if ((_2434_path.len() == _3513_n)) {
				goto _iter_end_1aa376595;
			};
		}
	_iter_next_1aa376595:;
	}
	_iter_end_1aa376595:;;
	return jule::Str();
}



inline jule::Slice<_1a43349cc_Log> _1a7829353_check_module_file(jule::Str _4626_path) {
	jule::Slice<jule::U8> _479_bytes = ({
		auto except = static__1d4ea07b0_read(_1a429a811_join(jule::Slice<jule::Str>::make({_4626_path,jule::Str("jule.mod", 8)})));
		(except.ok()) ? (except.result) : ({{
			return jule::Slice<_1a43349cc_Log>::make({_1a43349cc_Log{._field_kind=static_cast<jule::I64>(0LL), ._field_text=jule::Str("module file could not checked because of a problem", 50), }});
		} jule::Slice<jule::U8>();});
	});;
	jule::Str _549_s = _1a4298578_trim(static_cast<jule::Str>(_479_bytes),jule::Str(" \n\r\t\v", 5));;
	if ((_549_s.len() != 0LL)) {
		return jule::Slice<_1a43349cc_Log>::make({_1a43349cc_Log{._field_kind=static_cast<jule::I64>(0LL), ._field_text=jule::Str("module file has syntax error(s)", 31), }});
	};
	return nullptr;
}



inline jule::Ptr<_1a7d89286_FileInfo> _1a7dce188_parse_file(jule::Ptr<_1a527c76a_File> _2323_f) {
	if ((_2323_f == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1a7d89286_FileInfo> _2813_finf = jule::new_ptr<_1a7d89286_FileInfo>(_1a7d89286_FileInfo{});;
	std::tie(_2813_finf.get()._field_ast,_2813_finf.get()._field_errors) = _1a7dce71b_parse_fileset(_2323_f);
	if ((_2813_finf.get()._field_errors.len() > 0LL)) {
		_2813_finf.get()._field_ast=nullptr;
	};
	return _2813_finf;
}



inline std::tuple<jule::Ptr<_1a6820cc9_Ast>,jule::Slice<_1a43349cc_Log>> _1a7dce71b_parse_fileset(jule::Ptr<_1a527c76a_File> _6022_f) {
	jule::Ptr<_1a7ded52b_Parser> _6113_p = jule::new_ptr<_1a7ded52b_Parser>(_1a7ded52b_Parser{});;
	_1a7e0c68e_parse(_6113_p, _6022_f);
	return std::make_tuple(_6113_p.get()._field_ast,_6113_p.get()._field_errors);
}



inline jule::Ptr<_1a686070e_ScopeTree> _1a7dd0453_new_scope(void) {
	return jule::new_ptr<_1a686070e_ScopeTree>();
}



inline std::tuple<jule::Bool,jule::Bool> _1a7dd072d_is_st(jule::Ptr<_1a527737a_Token> _4710_current, jule::Ptr<_1a527737a_Token> _4727_prev) {
	jule::Bool _4743_ok = jule::Bool();
	jule::Bool _4753_terminated = jule::Bool();
	_4743_ok=((_4710_current.get()._field_id == static_cast<jule::U64>(5LLU)) || (_4727_prev.get()._field_row < _4710_current.get()._field_row));
	_4753_terminated=(_4710_current.get()._field_id == static_cast<jule::U64>(5LLU));
	return std::make_tuple(_4743_ok,_4753_terminated);
}



inline jule::Bool _1a7dd0a91_prev_is_incomplete_expr(jule::Slice<jule::Ptr<_1a527737a_Token>>& _5329_tokens, jule::I64& _5348_i) {
	if (((_5348_i > 1LL) && (_5329_tokens[(_5348_i - 2LL)].get()._field_id == static_cast<jule::U64>(23LLU)))) {
		return false;
	};
	{
		jule::Ptr<_1a527737a_Token> _5913_prev = _5329_tokens[(_5348_i - 1LL)];;
		return ((_5913_prev.get()._field_id == static_cast<jule::U64>(20LLU)) || (((_5913_prev.get()._field_id == static_cast<jule::U64>(7LLU)) && _1a5277da3_is_bin_op(_5913_prev.get()._field_kind)) && (_5913_prev.get()._field_row < _5329_tokens[_5348_i].get()._field_row)));
	};
}



inline std::tuple<jule::I64,jule::Bool> _1a7dd0e37_next_st_pos(jule::Slice<jule::Ptr<_1a527737a_Token>>& _6817_tokens, jule::I64 _6835_start) {
	jule::I64 _6913_brace_n = 0LL;;
	jule::I64 _7013_i = _6835_start;;
	for (; (_7013_i < _6817_tokens.len()); (_7013_i)++) {
		{
			jule::Bool _7217_ok = false;;
			jule::Bool _7317_terminated = false;;
			jule::Ptr<_1a527737a_Token> _7413_tok = _6817_tokens[_7013_i];;
			{
				auto &_match_expr{ _7413_tok.get()._field_id };
				
				if (_match_expr == static_cast<jule::U64>(3LLU)) {
					_case_begin_1aa47b17d:;
					{
						{
							auto &_match_expr{ _7413_tok.get()._field_kind };
							
							if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
								_case_begin_1aa47d0d6:;
								{
									if (((_6913_brace_n == 0LL) && (_7013_i > _6835_start))) {
										if ((!(_1a7dd0a91_prev_is_incomplete_expr(_6817_tokens,_7013_i)))) {
											std::tie(_7217_ok,_7317_terminated) = _1a7dd072d_is_st(_7413_tok,_6817_tokens[(_7013_i - 1LL)]);
											if (_7217_ok) {
												goto _julec_label_return;
											};
										};
									};
									(_6913_brace_n)++;
								}
							}
							else {
								_case_begin_1aa47b942:;
								{
									(_6913_brace_n)--;
									if (((_6913_brace_n == 0LL) && ((_7013_i + 1LL) < _6817_tokens.len()))) {
										std::tie(_7217_ok,_7317_terminated) = _1a7dd072d_is_st(_6817_tokens[(_7013_i + 1LL)],_7413_tok);
										if (_7217_ok) {
											(_7013_i)++;
											goto _julec_label_return;
										};
									};
								}
							}
							_match_end_1aa47bb0c:;
						};
						goto _iter_next_1aa479bd7;
					}
				}
				_match_end_1aa47b304:;
			};
			if ((_6913_brace_n != 0LL)) {
				goto _iter_next_1aa479bd7;
			};
			if ((_7013_i > _6835_start)) {
				if (_1a7dd0a91_prev_is_incomplete_expr(_6817_tokens,_7013_i)) {
					goto _iter_next_1aa479bd7;
				};
				std::tie(_7217_ok,_7317_terminated) = _1a7dd072d_is_st(_7413_tok,_6817_tokens[(_7013_i - 1LL)]);
			} else {
				std::tie(_7217_ok,_7317_terminated) = _1a7dd072d_is_st(_7413_tok,_7413_tok);
			};
			if ((!(_7217_ok))) {
				goto _iter_next_1aa479bd7;
			};
			_julec_label_return:;
			if (_7317_terminated) {
				(_7013_i)++;
			};
			return std::make_tuple(_7013_i,_7317_terminated);
		}
	_iter_next_1aa479bd7:;
	}
	_iter_end_1aa479bd7:;;
	return std::make_tuple(_7013_i,false);
}



inline std::tuple<jule::Slice<jule::Ptr<_1a527737a_Token>>,jule::Bool> _1a7dd1278_skip_st(jule::I64& _13017_i, jule::Slice<jule::Ptr<_1a527737a_Token>> _13029_tokens) {
	jule::I64 _1319_start = _13017_i;;
	jule::Bool _13213_terminated = false;;
	std::tie(_13017_i,_13213_terminated) = _1a7dd0e37_next_st_pos(_13029_tokens,_1319_start);
	jule::Slice<jule::Ptr<_1a527737a_Token>> _13413_st_tokens = _13029_tokens.slice(_1319_start,_13017_i);;
	if (_13213_terminated) {
		if ((_13413_st_tokens.len() == 1LL)) {
			std::tie(_13413_st_tokens,_13213_terminated) = _1a7dd1278_skip_st(_13017_i,_13029_tokens);
			return std::make_tuple(_13413_st_tokens,_13213_terminated);
		};
		_13413_st_tokens=_13413_st_tokens.slice(0LL,(_13413_st_tokens.len() - 1LL));
	};
	return std::make_tuple(_13413_st_tokens,_13213_terminated);
}



inline jule::Slice<jule::Ptr<_1a7dd1575_Stmt>> _1a7dd191b_split_stmts(jule::Slice<jule::Ptr<_1a527737a_Token>>& _15221_tokens) {
	jule::Slice<jule::Ptr<_1a7dd1575_Stmt>> _15313_stmts = nullptr;;
	jule::I64 _15413_pos = 0LL;;
	while ((_15413_pos < _15221_tokens.len())) {
		{
			jule::Slice<jule::Ptr<_1a527737a_Token>> _15618_stmt;;
			jule::Bool _15624_terminated;;
			std::tie(_15618_stmt,_15624_terminated) = _1a7dd1278_skip_st(_15413_pos,_15221_tokens);
			_15313_stmts = jule::alloc_for_append(_15313_stmts,1);_15313_stmts.__push(jule::new_ptr<_1a7dd1575_Stmt>(_1a7dd1575_Stmt{._field_tokens=_15618_stmt, ._field_terminated=_15624_terminated}));;
		}
	_iter_next_1aa483a15:;
	}
	_iter_end_1aa483a15:;;
	return _15313_stmts;
}



inline jule::Ptr<_1a7ddd76e_CallData> _1a7dddad2_get_call_data(jule::Slice<jule::Ptr<_1a527737a_Token>>& _4423_tokens) {
	jule::Ptr<_1a7ddd76e_CallData> _4513_data = jule::new_ptr<_1a7ddd76e_CallData>();;
	std::tie(_4513_data.get()._field_expr_tokens,_4513_data.get()._field_args_tokens) = _1a7debddc_range_last(_4423_tokens);
	if ((_4513_data.get()._field_expr_tokens.len() == 0LL)) {
		return _4513_data;
	};
	jule::Ptr<_1a527737a_Token> _529_token = _4513_data.get()._field_expr_tokens[(_4513_data.get()._field_expr_tokens.len() - 1LL)];;
	if (((_529_token.get()._field_id == static_cast<jule::U64>(3LLU)) && (_529_token.get()._field_kind == jule::Str("]", 1)))) {
		std::tie(_4513_data.get()._field_expr_tokens,_4513_data.get()._field_generics_tokens) = _1a7debddc_range_last(_4513_data.get()._field_expr_tokens);
	};
	return _4513_data;
}



inline jule::Slice<jule::Ptr<_1a527737a_Token>> _1a7ddddbd_get_block_expr(jule::Slice<jule::Ptr<_1a527737a_Token>>& _6024_tokens) {
	jule::I64 _6113_brace_n = 0LL;;
	jule::I64 _6213_skip_to_next_brace_close = 0LL;;
	{
		auto &expr = _6024_tokens;
		auto it = expr.begin();
		_iter_begin_1aa54adc9:;
		if (it != expr.end()) {
			jule::I64 _639_i = it - expr.begin();
			jule::Ptr<_1a527737a_Token> _6312_tok = *it;
			{
				{
					auto &_match_expr{ _6312_tok.get()._field_id };
					
					if (_match_expr == static_cast<jule::U64>(16LLU) || _match_expr == static_cast<jule::U64>(17LLU) || _match_expr == static_cast<jule::U64>(35LLU)) {
						_case_begin_1aa54b78c:;
						{
							(_6213_skip_to_next_brace_close)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(3LLU)) {
						_case_begin_1aa54babc:;
						{
							{
								auto &_match_expr{ _6312_tok.get()._field_kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_1aa54cd32:;
									{
										if (((_6113_brace_n > 0LL) || (_6213_skip_to_next_brace_close > 0LL))) {
											if ((_6213_skip_to_next_brace_close > 0LL)) {
												(_6213_skip_to_next_brace_close)--;
											};
											(_6113_brace_n)++;
											goto _match_end_1aa54c958;
										};
										return _6024_tokens.slice(0LL,_639_i);
									}
								}
								else if (_match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_1aa54ceec:;
									{
										(_6113_brace_n)++;
									}
								}
								else {
									_case_begin_1aa54c66c:;
									{
										(_6113_brace_n)--;
									}
								}
								_match_end_1aa54c958:;
							};
						}
					}
					_match_end_1aa54b98a:;
				};
			}
			_iter_next_1aa54adc9:;
			++it;
			_639_i++;
			goto _iter_begin_1aa54adc9;
		}
		_iter_end_1aa54adc9:;
	};
	return nullptr;
}



inline std::tuple<jule::Slice<jule::Ptr<_1a527737a_Token>>,jule::Slice<jule::Ptr<_1a527737a_Token>>> _1a7dde165_split_colon(jule::Slice<jule::Ptr<_1a527737a_Token>>& _9121_tokens) {
	jule::I64 _9213_range_n = 0LL;;
	{
		auto &expr = _9121_tokens;
		auto it = expr.begin();
		_iter_begin_1aa54c34d:;
		if (it != expr.end()) {
			jule::I64 _939_i = it - expr.begin();
			jule::Ptr<_1a527737a_Token> _9312_token = *it;
			{
				{
					auto &_match_expr{ _9312_token.get()._field_id };
					
					if (_match_expr == static_cast<jule::U64>(3LLU)) {
						_case_begin_1aa54ea48:;
						{
							{
								auto &_match_expr{ _9312_token.get()._field_kind };
								
								if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_1aa5509e4:;
									{
										(_9213_range_n)++;
										goto _iter_next_1aa54c34d;
									}
								}
								else {
									_case_begin_1aa550483:;
									{
										(_9213_range_n)--;
									}
								}
								_match_end_1aa55064d:;
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(11LLU)) {
						_case_begin_1aa54ed78:;
						{
							if ((_9213_range_n < 1LL)) {
								jule::Slice<jule::Ptr<_1a527737a_Token>> _10725_l = _9121_tokens.slice(0LL,_939_i);;
								jule::Slice<jule::Ptr<_1a527737a_Token>> _10825_r = _9121_tokens.slice((_939_i + 1LL));;
								return std::make_tuple(_10725_l,_10825_r);
							};
						}
					}
					_match_end_1aa54ec46:;
				};
			}
			_iter_next_1aa54c34d:;
			++it;
			_939_i++;
			goto _iter_begin_1aa54c34d;
		}
		_iter_end_1aa54c34d:;
	};
	return std::make_tuple(nullptr,nullptr);
}



inline jule::I64 _1a7dde451_find_lowest_prec_op(jule::Slice<jule::Ptr<_1a527737a_Token>>& _11825_tokens) {
	jule::U8 _12313_prec = 255LLU;;
	jule::I64 _12413_prec_pos = -1LL;;
	jule::I64 _12613_brace_n = 0LL;;
	jule::Bool _12713_skip_to_next_brace_open = false;;
	{
		auto &expr = _11825_tokens;
		auto it = expr.begin();
		_iter_begin_1aa55319a:;
		if (it != expr.end()) {
			jule::I64 _1289_i = it - expr.begin();
			jule::Ptr<_1a527737a_Token> &_12812_token = *it;
			{
				{
					
					if ((_12812_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
						_case_begin_1aa553d7c:;
						{
							{
								auto &_match_expr{ _12812_token.get()._field_kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_1aa555048:;
									{
										_12713_skip_to_next_brace_open=false;
										goto _case_begin_1aa5551e1;
									}
								}
								else if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("[", 1)) {
									_case_begin_1aa5551e1:;
									{
										(_12613_brace_n)++;
									}
								}
								else {
									_case_begin_1aa5549d7:;
									{
										(_12613_brace_n)--;
									}
								}
								_match_end_1aa554b5d:;
							};
							goto _iter_next_1aa55319a;
						}
					}
					else if (_12713_skip_to_next_brace_open) {
						_case_begin_1aa553e04:;
						{
							goto _iter_next_1aa55319a;
						}
					}
					else if ((_12812_token.get()._field_id == static_cast<jule::U64>(16LLU))) {
						_case_begin_1aa553e7b:;
						{
							_12713_skip_to_next_brace_open=true;
							goto _iter_next_1aa55319a;
						}
					}
					else if ((_1289_i == 0LL)) {
						_case_begin_1aa554003:;
						{
							goto _iter_next_1aa55319a;
						}
					}
					else if ((_12812_token.get()._field_id != static_cast<jule::U64>(7LLU))) {
						_case_begin_1aa55407a:;
						{
							goto _iter_next_1aa55319a;
						}
					}
					else if ((_12613_brace_n > 0LL)) {
						_case_begin_1aa554102:;
						{
							goto _iter_next_1aa55319a;
						}
					}
					_match_end_1aa553c28:;
				};
				jule::Ptr<_1a527737a_Token> _15513_left = _11825_tokens[(_1289_i - 1LL)];;
				if (((_15513_left.get()._field_id == static_cast<jule::U64>(7LLU)) || (_15513_left.get()._field_id == static_cast<jule::U64>(11LLU)))) {
					goto _iter_next_1aa55319a;
				};
				if ((((_1289_i > 1LL) && (_15513_left.get()._field_id == static_cast<jule::U64>(3LLU))) && (_15513_left.get()._field_kind == jule::Str("]", 1)))) {
					jule::Ptr<_1a527737a_Token> _16317_lleft = _11825_tokens[(_1289_i - 2LL)];;
					if (((_16317_lleft.get()._field_id == static_cast<jule::U64>(3LLU)) && (_16317_lleft.get()._field_kind == jule::Str("[", 1)))) {
						if (((_12812_token.get()._field_kind == jule::Str("&", 1)) || (_12812_token.get()._field_kind == jule::Str("*", 1)))) {
							goto _iter_next_1aa55319a;
						};
					};
				};
				jule::U8 _17213_p = _1a5277765_prec(_12812_token.ptr());;
				if (((_17213_p != 0LLU) && (_17213_p <= _12313_prec))) {
					_12313_prec=_17213_p;
					_12413_prec_pos=_1289_i;
				};
			}
			_iter_next_1aa55319a:;
			++it;
			_1289_i++;
			goto _iter_begin_1aa55319a;
		}
		_iter_end_1aa55319a:;
	};
	return _12413_prec_pos;
}



inline jule::Ptr<_1a6857ae1_IdentExpr> _1a7dde6e8_build_ident_expr(jule::Ptr<_1a527737a_Token>& _18226_token) {
	return jule::new_ptr<_1a6857ae1_IdentExpr>(_1a6857ae1_IdentExpr{._field_token=_18226_token, ._field_ident=_18226_token.get()._field_kind, ._field_cpp_linked=false});
}



inline std::tuple<jule::Slice<jule::Ptr<_1a527737a_Token>>,jule::I64> _1a7dde990_get_range_expr_tokens(jule::Slice<jule::Ptr<_1a527737a_Token>>& _19031_tokens) {
	jule::I64 _19113_range_n = 0LL;;
	jule::I64 _19213_i = (_19031_tokens.len() - 1LL);;
	for (; (_19213_i >= 0LL); (_19213_i)--) {
		{
			jule::Ptr<_1a527737a_Token> _19413_tok = _19031_tokens[_19213_i];;
			if ((_19413_tok.get()._field_id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _19413_tok.get()._field_kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_1aa55d1d8:;
						{
							(_19113_range_n)++;
						}
					}
					else {
						_case_begin_1aa55cdca:;
						{
							(_19113_range_n)--;
						}
					}
					_match_end_1aa55cd20:;
				};
			};
			if ((_19113_range_n == 0LL)) {
				return std::make_tuple(_19031_tokens.slice(0LL,_19213_i),_19113_range_n);
			};
		}
	_iter_next_1aa557149:;
	}
	_iter_end_1aa557149:;;
	return std::make_tuple(nullptr,_19113_range_n);
}



inline jule::Bool _1a7dea391_check_assign_tokens(jule::Slice<jule::Ptr<_1a527737a_Token>>& _1625_tokens) {
	if (((_1625_tokens.len() == 0LL) || (!(_1a527b846_is_assign(_1625_tokens[0LL].get()._field_id))))) {
		return false;
	};
	jule::I64 _2013_brace_n = 0LL;;
	{
		auto &expr = _1625_tokens;
		auto it = expr.begin();
		_iter_begin_1aa560152:;
		if (it != expr.end()) {
			jule::Ptr<_1a527737a_Token> &_2112_t = *it;
			{
				if ((_2112_t.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _2112_t.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1aa561274:;
							{
								(_2013_brace_n)++;
							}
						}
						else {
							_case_begin_1aa560e66:;
							{
								(_2013_brace_n)--;
							}
						}
						_match_end_1aa560dab:;
					};
				};
				if ((_2013_brace_n < 0LL)) {
					return false;
				} else if ((_2013_brace_n > 0LL)) {
					goto _iter_next_1aa560152;
				} else if (((_2112_t.get()._field_id == static_cast<jule::U64>(7LLU)) && _1a527bd85_is_assign_op(_2112_t.get()._field_kind))) {
					return true;
				};
			}
			_iter_next_1aa560152:;
			++it;
			goto _iter_begin_1aa560152;
		}
		_iter_end_1aa560152:;
	};
	return false;
}



inline _1a43349cc_Log _1a7deb6a0_make_err(jule::I64 _4913_row, jule::I64 _4923_col, jule::Ptr<_1a527c76a_File>& _4934_f, jule::Str _4944_fmt, jule::Slice<jule::Any> _4957_args) {
	return _1a43349cc_Log{._field_kind=static_cast<jule::I64>(1LL), ._field_row=_4913_row, ._field_column=_4923_col, ._field_path=_4934_f.get()._field_path, ._field_text=_1a4334e1c_logf(_4944_fmt,jule::Any(_4957_args)), };
}



inline jule::Slice<jule::Ptr<_1a527737a_Token>> _1a7debb45_range(jule::I64& _6815_i, jule::Str _6823_open, jule::Str _6840_close, jule::Slice<jule::Ptr<_1a527737a_Token>>& _6863_tokens) {
	if ((_6815_i >= _6863_tokens.len())) {
		return nullptr;
	};
	jule::Ptr<_1a527737a_Token> _739_tok = _6863_tokens[_6815_i];;
	if (((_739_tok.get()._field_id != static_cast<jule::U64>(3LLU)) || (_739_tok.get()._field_kind != _6823_open))) {
		return nullptr;
	};
	(_6815_i)++;
	jule::I64 _7913_range_n = 1LL;;
	jule::I64 _809_start = _6815_i;;
	for (; ((_7913_range_n != 0LL) && (_6815_i < _6863_tokens.len())); (_6815_i)++) {
		{
			jule::Ptr<_1a527737a_Token> _8213_token = _6863_tokens[_6815_i];;
			if ((_8213_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _8213_token.get()._field_kind };
					
					if (_match_expr == _6823_open) {
						_case_begin_1aa6dd632:;
						{
							(_7913_range_n)++;
						}
					}
					else if (_match_expr == _6840_close) {
						_case_begin_1aa6dd940:;
						{
							(_7913_range_n)--;
						}
					}
					_match_end_1aa6dd80d:;
				};
			};
		}
	_iter_next_1aa6d9e69:;
	}
	_iter_end_1aa6d9e69:;;
	return _6863_tokens.slice(_809_start,(_6815_i - 1LL));
}



inline std::tuple<jule::Slice<jule::Ptr<_1a527737a_Token>>,jule::Slice<jule::Ptr<_1a527737a_Token>>> _1a7debddc_range_last(jule::Slice<jule::Ptr<_1a527737a_Token>>& _10320_tokens) {
	jule::Slice<jule::Ptr<_1a527737a_Token>> _10340_cutted = jule::Slice<jule::Ptr<_1a527737a_Token>>();
	jule::Slice<jule::Ptr<_1a527737a_Token>> _10358_cut = jule::Slice<jule::Ptr<_1a527737a_Token>>();
	if ((_10320_tokens.len() == 0LL)) {
		_10340_cutted = _10320_tokens;
		_10358_cut = nullptr;
		return std::make_tuple(_10340_cutted,_10358_cut);
	} else if ((_10320_tokens[(_10320_tokens.len() - 1LL)].get()._field_id != static_cast<jule::U64>(3LLU))) {
		_10340_cutted = _10320_tokens;
		_10358_cut = nullptr;
		return std::make_tuple(_10340_cutted,_10358_cut);
	};
	jule::I64 _11013_brace_n = 0LL;;
	jule::I64 _11113_i = (_10320_tokens.len() - 1LL);;
	for (; (_11113_i >= 0LL); (_11113_i)--) {
		{
			jule::Ptr<_1a527737a_Token> _11313_token = _10320_tokens[_11113_i];;
			if ((_11313_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _11313_token.get()._field_kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_1aa6e2955:;
						{
							(_11013_brace_n)++;
							goto _iter_next_1aa6de116;
						}
					}
					else {
						_case_begin_1aa6e2647:;
						{
							(_11013_brace_n)--;
						}
					}
					_match_end_1aa6e258c:;
				};
			};
			if ((_11013_brace_n == 0LL)) {
				_10340_cutted = _10320_tokens.slice(0LL,_11113_i);
				_10358_cut = _10320_tokens.slice(_11113_i);
				return std::make_tuple(_10340_cutted,_10358_cut);
			};
		}
	_iter_next_1aa6de116:;
	}
	_iter_end_1aa6de116:;;
	_10340_cutted = _10320_tokens;
	_10358_cut = nullptr;
	return std::make_tuple(_10340_cutted,_10358_cut);
}



inline std::tuple<jule::Slice<jule::Slice<jule::Ptr<_1a527737a_Token>>>,jule::Slice<_1a43349cc_Log>> _1a7dec31b_parts(jule::Slice<jule::Ptr<_1a527737a_Token>>& _14015_tokens, jule::U64 _14033_id, jule::Bool _14046_expr_must) {
	if ((_14015_tokens.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	};
	jule::Slice<jule::Slice<jule::Ptr<_1a527737a_Token>>> _14513_parts = nullptr;;
	jule::Slice<_1a43349cc_Log> _14613_errors = nullptr;;
	jule::I64 _14813_range_n = 0LL;;
	jule::I64 _14913_last = 0LL;;
	{
		auto &expr = _14015_tokens;
		auto it = expr.begin();
		_iter_begin_1aa6e5925:;
		if (it != expr.end()) {
			jule::I64 _1509_i = it - expr.begin();
			jule::Ptr<_1a527737a_Token> _15012_token = *it;
			{
				if ((_15012_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _15012_token.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1aa6e6daa:;
							{
								(_14813_range_n)++;
								goto _iter_next_1aa6e5925;
							}
						}
						else {
							_case_begin_1aa6e6a9c:;
							{
								(_14813_range_n)--;
							}
						}
						_match_end_1aa6e69e2:;
					};
				};
				if ((_14813_range_n > 0LL)) {
					goto _iter_next_1aa6e5925;
				};
				if ((_15012_token.get()._field_id == _14033_id)) {
					if ((_14046_expr_must && ((_1509_i - _14913_last) <= 0LL))) {
						_1a43349cc_Log _16921_err = _1a7deb6a0_make_err(_15012_token.get()._field_row,_15012_token.get()._field_column,_15012_token.get()._field_file,jule::Str("expression missing", 18),jule::Slice<jule::Any>());;
						_14613_errors = jule::alloc_for_append(_14613_errors,1);_14613_errors.__push(_16921_err);;
					};
					_14513_parts = jule::alloc_for_append(_14513_parts,1);_14513_parts.__push(_14015_tokens.slice(_14913_last,_1509_i));;
					_14913_last=static_cast<jule::I64>((_1509_i + 1LL));
				};
			}
			_iter_next_1aa6e5925:;
			++it;
			_1509_i++;
			goto _iter_begin_1aa6e5925;
		}
		_iter_end_1aa6e5925:;
	};
	if ((_14913_last < _14015_tokens.len())) {
		_14513_parts = jule::alloc_for_append(_14513_parts,1);_14513_parts.__push(_14015_tokens.slice(_14913_last));;
	} else if ((!(_14046_expr_must))) {
		_14513_parts = jule::alloc_for_append(_14513_parts,1);_14513_parts.__push(jule::Slice<jule::Ptr<_1a527737a_Token>>());;
	};
	return std::make_tuple(_14513_parts,_14613_errors);
}



inline jule::Str _1a7dec5d5_get_close_kind_of_brace(jule::Str _18628_left) {
	{
		auto &_match_expr{ _18628_left };
		
		if (_match_expr == jule::Str(")", 1)) {
			_case_begin_1aa6eaa3a:;
			{
				return jule::Str("(", 1);
			}
		}
		else if (_match_expr == jule::Str("}", 1)) {
			_case_begin_1aa6e9a17:;
			{
				return jule::Str("{", 1);
			}
		}
		else if (_match_expr == jule::Str("]", 1)) {
			_case_begin_1aa6e9a7d:;
			{
				return jule::Str("[", 1);
			}
		}
		else {
			_case_begin_1aa6ea122:;
			{
				return jule::Str();
			}
		}
		_match_end_1aa6e623e:;
	};
}



inline _1a43349cc_Log _1a7dec9d1_compiler_err(jule::Ptr<_1a527737a_Token>& _19918_token, jule::Str& _19934_fmt, jule::Slice<jule::Any> _19947_args) {
	return _1a43349cc_Log{._field_kind=static_cast<jule::I64>(1LL), ._field_row=_19918_token.get()._field_row, ._field_column=_19918_token.get()._field_column, ._field_path=_19918_token.get()._field_file.get()._field_path, ._field_text=_1a4334e1c_logf(_19934_fmt,jule::Any(_19947_args)), ._field_line=_1a527d947_get_row(_19918_token.get()._field_file.ptr(), _19918_token.get()._field_row), };
}



inline void _1a7decd33_push_suggestion(_1a43349cc_Log* _21031_log, jule::Str _21042_fmt, jule::Slice<jule::Any> _21055_args) {
	_21031_log->_field_suggestion=_1a4334e1c_logf(_21042_fmt,jule::Any(_21055_args));
}



inline jule::Str _1a7ded163_tokstoa(jule::Slice<jule::Ptr<_1a527737a_Token>>& _21413_tokens) {
	jule::Str _21513_s = jule::Str();;
	{
		auto &expr = _21413_tokens;
		auto it = expr.begin();
		_iter_begin_1aa6ed9d8:;
		if (it != expr.end()) {
			jule::Ptr<_1a527737a_Token> &_21612_token = *it;
			{
				_21513_s+=_21612_token.get()._field_kind;
			}
			_iter_next_1aa6ed9d8:;
			++it;
			goto _iter_begin_1aa6ed9d8;
		}
		_iter_end_1aa6ed9d8:;
	};
	return _21513_s;
}



inline jule::Ptr<_1a68529cb_TypeDecl> _1a7e0d2b6_build_void_type(void) {
	return jule::new_ptr<_1a68529cb_TypeDecl>();
}



inline jule::Ptr<_1a68529cb_TypeDecl> _1a7e0d508_build_prim_type(jule::Ptr<_1a527737a_Token> _2224_t) {
	return jule::new_ptr<_1a68529cb_TypeDecl>(_1a68529cb_TypeDecl{._field_token=_2224_t, ._field_kind=jule::Any(jule::new_ptr<_1a685305e_IdentTypeDecl>(_1a685305e_IdentTypeDecl{._field_token=_2224_t, ._field_ident=_2224_t.get()._field_kind, }))});
}



inline std::tuple<jule::Slice<jule::Ptr<_1a527737a_Token>>,jule::I64> _1a7e0d849_split_map_range(jule::Slice<jule::Ptr<_1a527737a_Token>>& _3525_tokens, jule::I64& _3548_i) {
	jule::Slice<jule::Ptr<_1a527737a_Token>> _3558_range_tokens = jule::Slice<jule::Ptr<_1a527737a_Token>>();
	jule::I64 _3582_colon = jule::I64();
	_3582_colon=-1LL;
	jule::I64 _3713_range_n = 0LL;;
	jule::I64 _389_start = _3548_i;;
	for (; (_3548_i < _3525_tokens.len()); (_3548_i)++) {
		{
			jule::Ptr<_1a527737a_Token> _4013_token = _3525_tokens[_3548_i];;
			if ((_4013_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _4013_token.get()._field_kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_1aa7453e2:;
						{
							(_3713_range_n)++;
							goto _iter_next_1aa7438c9;
						}
					}
					else {
						_case_begin_1aa7450d4:;
						{
							(_3713_range_n)--;
						}
					}
					_match_end_1aa745029:;
				};
			};
			if ((_3713_range_n == 0LL)) {
				if (((_389_start + 1LL) > _3548_i)) {
					return std::make_tuple(_3558_range_tokens,_3582_colon);
				};
				_3558_range_tokens=_3525_tokens.slice((_389_start + 1LL),_3548_i);
				goto _iter_end_1aa7438c9;
			} else if ((_3713_range_n != 1LL)) {
				goto _iter_next_1aa7438c9;
			};
			if (((_3582_colon == -1LL) && (_4013_token.get()._field_id == static_cast<jule::U64>(11LLU)))) {
				_3582_colon=static_cast<jule::I64>(((_3548_i - _389_start) - 1LL));
			};
		}
	_iter_next_1aa7438c9:;
	}
	_iter_end_1aa7438c9:;;
	return std::make_tuple(_3558_range_tokens,_3582_colon);
}



inline std::tuple<jule::Bool,jule::Bool> _1a77ec0d4_check_os(jule::Str _913_arg) {
	jule::Bool _925_ok = jule::Bool();
	jule::Bool _935_exist = jule::Bool();
	_925_ok=false;
	_935_exist=true;
	{
		auto &_match_expr{ _913_arg };
		
		if (_match_expr == jule::Str("windows", 7)) {
			_case_begin_1aa74d7a2:;
			{
				_925_ok=_1a4338261_is_windows(_1a4380770_OS);
			}
		}
		else if (_match_expr == jule::Str("darwin", 6)) {
			_case_begin_1aa74d818:;
			{
				_925_ok=_1a433854c_is_darwin(_1a4380770_OS);
			}
		}
		else if (_match_expr == jule::Str("linux", 5)) {
			_case_begin_1aa74d593:;
			{
				_925_ok=_1a43387e4_is_linux(_1a4380770_OS);
			}
		}
		else if (_match_expr == jule::Str("unix", 4)) {
			_case_begin_1aa74d609:;
			{
				_925_ok=_1a43393b6_is_unix(_1a4380770_OS);
			}
		}
		else {
			_case_begin_1aa74cd78:;
			{
				_925_ok=true;
				_935_exist=false;
			}
		}
		_match_end_1aa74d3c8:;
	};
	return std::make_tuple(_925_ok,_935_exist);
}



inline std::tuple<jule::Bool,jule::Bool> _1a7816593_check_arch(jule::Str _3015_arg) {
	jule::Bool _3027_ok = jule::Bool();
	jule::Bool _3037_exist = jule::Bool();
	_3027_ok=false;
	_3037_exist=true;
	{
		auto &_match_expr{ _3015_arg };
		
		if (_match_expr == jule::Str("i386", 4)) {
			_case_begin_1aa750e69:;
			{
				_3027_ok=_1a4338ad0_is_i386(_1a4346cb9_ARCH);
			}
		}
		else if (_match_expr == jule::Str("amd64", 5)) {
			_case_begin_1aa750ed0:;
			{
				_3027_ok=_1a4338d77_is_amd64(_1a4346cb9_ARCH);
			}
		}
		else if (_match_expr == jule::Str("arm64", 5)) {
			_case_begin_1aa750c5a:;
			{
				_3027_ok=_1a433911e_is_arm64(_1a4346cb9_ARCH);
			}
		}
		else if (_match_expr == jule::Str("x64", 3)) {
			_case_begin_1aa750cc1:;
			{
				_3027_ok=_1a433998d_is_64bit(_1a4346cb9_ARCH);
			}
		}
		else if (_match_expr == jule::Str("x32", 3)) {
			_case_begin_1aa750d37:;
			{
				_3027_ok=_1a43396e6_is_32bit(_1a4346cb9_ARCH);
			}
		}
		else {
			_case_begin_1aa750551:;
			{
				_3027_ok=true;
				_3037_exist=false;
			}
		}
		_match_end_1aa750a90:;
	};
	return std::make_tuple(_3027_ok,_3037_exist);
}



inline jule::Bool _1a78166c5_is_pass_file_annotation(jule::Str _5432_p) {
	_5432_p=_1a429b0e7_base(_5432_p);
	jule::I64 _569_n = _5432_p.len();;
	(_5432_p).mut_slice(0LL,(_569_n - _1a429aaa8_ext(_5432_p).len()));;
	jule::Str _6213_a1 = jule::Str();;
	jule::Str _6513_a2 = jule::Str();;
	jule::I64 _6813_i = _1a42953bb_find_last_byte(_5432_p,'_');;
	if ((_6813_i == -1LL)) {
		jule::Bool _7118_ok;;
		jule::Bool _7126_exist;;
		std::tie(_7118_ok,_7126_exist) = _1a77ec0d4_check_os(_5432_p);
		if (_7126_exist) {
			return _7118_ok;
		};
		std::tie(_7118_ok,_7126_exist) = _1a7816593_check_arch(_5432_p);
		return ((!(_7126_exist)) || _7118_ok);
	};
	if (((_6813_i + 1LL) >= _569_n)) {
		return true;
	};
	_6213_a1=_5432_p.slice((_6813_i + 1LL));
	(_5432_p).mut_slice(0LL,_6813_i);;
	_6813_i=static_cast<jule::I64>(_1a42953bb_find_last_byte(_5432_p,'_'));
	if ((_6813_i != -1LL)) {
		_6513_a2=_5432_p.slice((_6813_i + 1LL));
	};
	if (_6513_a2.empty()) {
		jule::Bool _9218_ok;;
		jule::Bool _9226_exist;;
		std::tie(_9218_ok,_9226_exist) = _1a77ec0d4_check_os(_6213_a1);
		if (_9226_exist) {
			return _9218_ok;
		};
		std::tie(_9218_ok,_9226_exist) = _1a7816593_check_arch(_6213_a1);
		return ((!(_9226_exist)) || _9218_ok);
	};
	jule::Bool _10014_ok;;
	jule::Bool _10022_exist;;
	std::tie(_10014_ok,_10022_exist) = _1a7816593_check_arch(_6213_a1);
	if (_10022_exist) {
		if ((!(_10014_ok))) {
			return false;
		};
		std::tie(_10014_ok,_10022_exist) = _1a77ec0d4_check_os(_6513_a2);
		return ((!(_10022_exist)) || _10014_ok);
	};
	std::tie(_10014_ok,_10022_exist) = _1a77ec0d4_check_os(_6213_a1);
	return ((!(_10022_exist)) || _10014_ok);
}



inline void _1a78177a3_set_os_vars(jule::Slice<jule::Str>& _3621_vars) {
	_3621_vars = jule::alloc_for_append(_3621_vars,1);_3621_vars.__push(_1a4380770_OS);;
	if (_1a43393b6_is_unix(_1a4380770_OS)) {
		_3621_vars = jule::alloc_for_append(_3621_vars,1);_3621_vars.__push(jule::Str("unix", 4));;
	};
}



inline void _1a7817a06_set_arch_vars(jule::Slice<jule::Str>& _4423_vars) {
	_4423_vars = jule::alloc_for_append(_4423_vars,1);_4423_vars.__push(_1a4346cb9_ARCH);;
	if (_1a433998d_is_64bit(_1a4346cb9_ARCH)) {
		_4423_vars = jule::alloc_for_append(_4423_vars,1);_4423_vars.__push(jule::Str("x64", 3));;
	};
	if (_1a43396e6_is_32bit(_1a4346cb9_ARCH)) {
		_4423_vars = jule::alloc_for_append(_4423_vars,1);_4423_vars.__push(jule::Str("x32", 3));;
	};
}



inline void _1a7817cae_init_vars(jule::Slice<jule::Str>& _5519_vars, _1a7817495_CompileInfo& _5533_info) {
	_1a78177a3_set_os_vars(_5519_vars);
	_1a7817a06_set_arch_vars(_5519_vars);
	if (_5533_info._field_prod) {
		_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("production", 10));;
	};
	if (_5533_info._field_test) {
		_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("test", 4));;
	};
	{
		auto &_match_expr{ _5533_info._field_compiler };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1aa75d3d8:;
			{
				_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("clang", 5));;
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1aa75cecb:;
			{
				_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("gcc", 3));;
			}
		}
		_match_end_1aa75d152:;
	};
	{
		auto &_match_expr{ _5533_info._field_cpp_std };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1aa75d042:;
			{
				_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("cpp14", 5));;
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1aa75dc9b:;
			{
				_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("cpp17", 5));;
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1aa75dd12:;
			{
				_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("cpp20", 5));;
			}
		}
		_match_end_1aa75e252:;
	};
}



inline jule::Slice<jule::U8> _1d508c836_read_buff(jule::Str _3014_path) {
	return ({
		auto except = static__1d4ea07b0_read(_3014_path);
		(except.ok()) ? (except.result) : ({{
			jule::outln(jule::Str("error: file cannot read", 23));
			;
			_1a4385eb2_exit(1LL);
			return nullptr;
		} jule::Slice<jule::U8>();});
	});
}



inline _1a43349cc_Log _1d508e816_flat_compiler_err(jule::Str _4122_text) {
	return _1a43349cc_Log{._field_kind=static_cast<jule::I64>(1LL), ._field_text=_4122_text, };
}



inline void _1a7db0ec2_push_passes(jule::Ptr<_1a7687bea_Package>& _11221_p, jule::Slice<jule::Str>& _11245_passes) {
	{
		auto &expr = _11221_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1aa7a3241:;
		if (it != expr.end()) {
			jule::Ptr<_1a76e8e26_SymbolTable> _11317_f = *it;
			{
				_julec_label_push:;
				{
					auto &expr = _11317_f.get()._field_passes;
					auto it = expr.begin();
					_iter_begin_1aa7a3b48:;
					if (it != expr.end()) {
						_1a6876d74_Pass _11516_pass = *it;
						{
							if (_11516_pass._field_text.empty()) {
								goto _iter_next_1aa7a3b48;
							};
							{
								auto &expr = _11245_passes;
								auto it = expr.begin();
								_iter_begin_1aa7a4709:;
								if (it != expr.end()) {
									jule::Str _11920_cpass = *it;
									{
										if ((_11920_cpass == _11516_pass._field_text)) {
											goto _iter_next_1aa7a3b48;
										};
									}
									_iter_next_1aa7a4709:;
									++it;
									goto _iter_begin_1aa7a4709;
								}
								_iter_end_1aa7a4709:;
							};
							_11245_passes = jule::alloc_for_append(_11245_passes,1);_11245_passes.__push(_11516_pass._field_text);;
						}
						_iter_next_1aa7a3b48:;
						++it;
						goto _iter_begin_1aa7a3b48;
					}
					_iter_end_1aa7a3b48:;
				};
			}
			_iter_next_1aa7a3241:;
			++it;
			goto _iter_begin_1aa7a3241;
		}
		_iter_end_1aa7a3241:;
	};
}



inline jule::Slice<jule::Str> _1d5083442_get_all_unique_passes(jule::Ptr<_1a7687bea_Package>& _12931_pkg, jule::Slice<jule::Ptr<_1a7685038_ImportInfo>> _12956_uses) {
	jule::Slice<jule::Str> _13013_passes = nullptr;;
	_1a7db0ec2_push_passes(_12931_pkg,_13013_passes);
	{
		auto &expr = _12956_uses;
		auto it = expr.begin();
		_iter_begin_1aa7a5d59:;
		if (it != expr.end()) {
			jule::Ptr<_1a7685038_ImportInfo> _13317_u = *it;
			{
				if ((!(_13317_u.get()._field_cpp_linked))) {
					_1a7db0ec2_push_passes(_13317_u.get()._field_package,_13013_passes);
				};
			}
			_iter_next_1aa7a5d59:;
			++it;
			goto _iter_begin_1aa7a5d59;
		}
		_iter_end_1aa7a5d59:;
	};
	return _13013_passes;
}



inline _1a7817495_CompileInfo _1d5096873_build_compile_info(void) {
	_1a7817495_CompileInfo _14313_info = _1a7817495_CompileInfo{._field_prod=_1e0ca2c16_PRODUCTION, ._field_test=_1e0ca24b8_TEST, };;
	{
		auto &_match_expr{ _1e0ca1b38_COMPILER };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1aa7a6a6e:;
			{
				_14313_info._field_compiler=jule::Str("clang", 5);
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1aa7a7454:;
			{
				_14313_info._field_compiler=jule::Str("gcc", 3);
			}
		}
		_match_end_1aa7a73ee:;
	};
	{
		auto &_match_expr{ _1e0ca1e9b_CPP_STD };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1aa7a7ec1:;
			{
				_14313_info._field_compiler=jule::Str("cpp14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1aa7a8037:;
			{
				_14313_info._field_compiler=jule::Str("cpp17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1aa7a7861:;
			{
				_14313_info._field_compiler=jule::Str("cpp20", 5);
			}
		}
		_match_end_1aa7a7de4:;
	};
	return _14313_info;
}



inline void _1a80140c0_eliminate_defines(jule::Ptr<_1d5090729_IR>& _22331_ir) {
	jule::Ptr<_1a7ed11d0_ObjectDeadCode> _22413_ocd = static__1a7ed1631_new(_22331_ir);;
	_1a8013d06_elimanate(_22413_ocd);
}



inline void _1a8017aeb_eliminate_dead_code_of_scope(jule::Ptr<_1a7658803_Scope> _22637_s) {
	jule::Slice<jule::Ptr<_1a766ca26_Label>> _2279_labels = jule::Slice<jule::Ptr<_1a766ca26_Label>>::alloc(0LL,16LL);;
	jule::Slice<jule::Ptr<_1a766cc13_GotoSt>> _2289_gotos = jule::Slice<jule::Ptr<_1a766cc13_GotoSt>>::alloc(0LL,16LL);;
	jule::Ptr<_1a801508d_ScopeDeadCode> _22913_sdc = jule::new_ptr<_1a801508d_ScopeDeadCode>(_1a801508d_ScopeDeadCode{._field_s=_22637_s, ._field_stmts=(&(_22637_s.get()._field_stmts)), ._field_labels=((jule::Ptr<jule::Slice<jule::Ptr<_1a766ca26_Label>>>)((&(_2279_labels)))), ._field_gotos=((jule::Ptr<jule::Slice<jule::Ptr<_1a766cc13_GotoSt>>>)((&(_2289_gotos))))});;
	{
		_1a8017810_optimize_stmts(_22913_sdc);
	};
}



inline void _1a8017d82_eliminate_scope_functions(jule::Slice<jule::Ptr<_1a68709c7_Fn>>& _23935_funcs) {
	{
		auto &expr = _23935_funcs;
		auto it = expr.begin();
		_iter_begin_1aa832325:;
		if (it != expr.end()) {
			jule::Ptr<_1a68709c7_Fn> _24017_func = *it;
			{
				{
					auto &expr = _24017_func.get()._field_instances;
					auto it = expr.begin();
					_iter_begin_1aa833eb4:;
					if (it != expr.end()) {
						jule::Ptr<_1a6872c93_FnIns> _24121_ins = *it;
						{
							_1a8017aeb_eliminate_dead_code_of_scope(_24121_ins.get()._field_scope);
						}
						_iter_next_1aa833eb4:;
						++it;
						goto _iter_begin_1aa833eb4;
					}
					_iter_end_1aa833eb4:;
				};
			}
			_iter_next_1aa832325:;
			++it;
			goto _iter_begin_1aa832325;
		}
		_iter_end_1aa832325:;
	};
}



inline void _1a80180d5_eliminate_functions_scope_package(jule::Ptr<_1a7687bea_Package>& _24743_pkg) {
	{
		auto &expr = _24743_pkg.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1aa83439e:;
		if (it != expr.end()) {
			jule::Ptr<_1a76e8e26_SymbolTable> _24817_f = *it;
			{
				_1a8017d82_eliminate_scope_functions(_24817_f.get()._field_funcs);
			}
			_iter_next_1aa83439e:;
			++it;
			goto _iter_begin_1aa83439e;
		}
		_iter_end_1aa83439e:;
	};
}



inline void _1a801835a_eliminate_scope_package(jule::Ptr<_1a7687bea_Package>& _25333_pkg) {
	_1a80180d5_eliminate_functions_scope_package(_25333_pkg);
}



inline void _1a801857a_eliminate_scopes(jule::Ptr<_1d5090729_IR>& _25830_ir) {
	jule::I64 _25913_i = (_25830_ir.get()._field_used.len() - 1LL);;
	for (; (_25913_i >= 0LL); (_25913_i)--) {
		{
			jule::Ptr<_1a7685038_ImportInfo> _26117_u = _25830_ir.get()._field_used[_25913_i];;
			if ((!(_26117_u.get()._field_cpp_linked))) {
				_1a801835a_eliminate_scope_package(_26117_u.get()._field_package);
			};
		}
	_iter_next_1aa8358cd:;
	}
	_iter_end_1aa8358cd:;;
	_1a801835a_eliminate_scope_package(_25830_ir.get()._field_main);
}



inline jule::Bool _1a53d114e_is_std_package(jule::Str _39919_f, jule::Str _39927_p) {
	return _1a4221d2b_has_prefix(_39919_f,_1a429a811_join(jule::Slice<jule::Str>::make({_1a43483c5_PATH_STDLIB,_39927_p})));
}



inline jule::Bool _1a53db3e0_is_constant_valid_conditional_case(jule::Ptr<_1a7660200_If>& _40340_i) {
	{
		auto &_match_expr{ _40340_i.get()._field_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1a75c3251_Const>>()) {
			_case_begin_1aa8b7025:;
			{
				jule::Ptr<_1a75c3251_Const> _40613_c = _40340_i.get()._field_expr.operator jule::Ptr<_1a75c3251_Const>();;
				return (_1a75c6d48_is_bool(_40613_c.ptr()) && _1a75c49a0_read_bool(_40613_c.ptr()));
			}
		}
		_match_end_1aa8b6ec0:;
	};
	return false;
}



inline jule::Bool _1a53e3d43_is_unreachable_expr(jule::Any& _41225_expr) {
	{
		auto &_match_expr{ _41225_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1a75c3251_Const>>()) {
			_case_begin_1aa8b72cd:;
			{
				jule::Ptr<_1a75c3251_Const> _41513_c = _41225_expr.operator jule::Ptr<_1a75c3251_Const>();;
				return (_1a75c6d48_is_bool(_41513_c.ptr()) && (!(_1a75c49a0_read_bool(_41513_c.ptr()))));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a684b145_BinopExprModel>>()) {
			_case_begin_1aa8b7344:;
			{
				jule::Ptr<_1a684b145_BinopExprModel> _41813_m = _41225_expr.operator jule::Ptr<_1a684b145_BinopExprModel>();;
				if ((_41813_m.get()._field_op.get()._field_kind == jule::Str("&&", 2))) {
					return (_1a53e3d43_is_unreachable_expr(_41813_m.get()._field_left.get()._field_model) || _1a53e3d43_is_unreachable_expr(_41813_m.get()._field_right.get()._field_model));
				};
			}
		}
		_match_end_1aa8b7278:;
	};
	return false;
}



inline jule::Bool _1a54008aa_is_constant_valid_match_case(jule::Ptr<_1a766d8d4_Case>& _42634_case) {
	{
		auto &expr = _42634_case.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1aa8b8565:;
		if (it != expr.end()) {
			jule::Ptr<_1a76edda4_Data> &_42712_expr = *it;
			{
				if (((_1a76ee767_is_const(_42712_expr.ptr()) && _1a75c6d48_is_bool(_42712_expr.get()._field_constant.ptr())) && _1a75c49a0_read_bool(_42712_expr.get()._field_constant.ptr()))) {
					return true;
				};
			}
			_iter_next_1aa8b8565:;
			++it;
			goto _iter_begin_1aa8b8565;
		}
		_iter_end_1aa8b8565:;
	};
	return false;
}



inline jule::Bool _1a54150a6_is_unreachable_conditional_case(jule::Ptr<_1a7660200_If>& _43537_i) {
	return _1a53e3d43_is_unreachable_expr(_43537_i.get()._field_expr);
}



inline jule::Bool _1a541b6ea_is_unreachable_match_case(jule::Ptr<_1a766d8d4_Case>& _43931_case) {
	{
		auto &expr = _43931_case.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1aa8bc28e:;
		if (it != expr.end()) {
			jule::Ptr<_1a76edda4_Data> &_44012_expr = *it;
			{
				if ((!(_1a53e3d43_is_unreachable_expr(_44012_expr.get()._field_model)))) {
					return false;
				};
			}
			_iter_next_1aa8bc28e:;
			++it;
			goto _iter_begin_1aa8bc28e;
		}
		_iter_end_1aa8bc28e:;
	};
	return true;
}



inline std::tuple<jule::Bool,jule::U64> _1a59738ab_check_for_bit_shift_opt(jule::Ptr<_1a68382db_OperandExprModel>& _43329_l, jule::Ptr<_1a68382db_OperandExprModel>& _43352_r) {
	jule::Bool _43376_ok = jule::Bool();
	jule::U64 _43386_x = jule::U64();
	if (((!(_1a766bdcc_is_int(_1a7727c8a_to_str(_43329_l.get()._field_kind.ptr())))) || (!(_1a766bdcc_is_int(_1a7727c8a_to_str(_43352_r.get()._field_kind.ptr())))))) {
		_43376_ok = false;
		_43386_x = 0LLU;
		return std::make_tuple(_43376_ok,_43386_x);
	};
	{
		auto &_match_expr{ _43352_r.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1a75c3251_Const>>()) {
			_case_begin_1aa91e830:;
			{
				goto _match_end_1aa91e29c;
			}
		}
		else {
			_case_begin_1aa91e302:;
			{
				_43376_ok = false;
				_43386_x = 0LLU;
				return std::make_tuple(_43376_ok,_43386_x);
			}
		}
		_match_end_1aa91e29c:;
	};
	_43386_x=static_cast<jule::U64>(_1a75c5451_as_u64(_43352_r.get()._field_model.operator jule::Ptr<_1a75c3251_Const>().ptr()));
	if (((_43386_x == 0LLU) || ((_43386_x & 1LL) != 0LLU))) {
		_43376_ok = false;
		_43386_x = 0LLU;
		return std::make_tuple(_43376_ok,_43386_x);
	};
	jule::F64 _4479_j = _1a7512e0a_log2(static_cast<jule::F64>(static_cast<jule::F64>(_43386_x)));;
	jule::U64 _4489_z = static_cast<jule::U64>(_4479_j);;
	if ((static_cast<jule::F64>(_4489_z) != _4479_j)) {
		_43376_ok = false;
		_43386_x = 0LLU;
		return std::make_tuple(_43376_ok,_43386_x);
	};
	_43376_ok = true;
	_43386_x = _4489_z;
	return std::make_tuple(_43376_ok,_43386_x);
}



inline void _1a5975ec9_push_opt_level(jule::I64 _3223_level) {
	_1a52b4c58_COPY=(_3223_level >= static_cast<jule::I64>(1LL));
	_1a52b78d7_DEADCODE=(_3223_level >= static_cast<jule::I64>(1LL));
	_1a52b7a3b_APPEND=(_3223_level >= static_cast<jule::I64>(1LL));
	_1a52ba951_MATH=(_3223_level >= static_cast<jule::I64>(1LL));
	_1a52db92d_ACCESS=(_3223_level >= static_cast<jule::I64>(1LL));
	_1a532149b_INLINE=(_3223_level >= static_cast<jule::I64>(1LL));
	_1a532205c_PTR=(_3223_level >= static_cast<jule::I64>(1LL));
	_1a532569d_COND=(_3223_level >= static_cast<jule::I64>(1LL));
}



inline void _1a7edeed0_detect_enabled(void) {
	_1a7e2b207_expr_enabled=(((_1a532205c_PTR || _1a52ba951_MATH) || _1a52db92d_ACCESS) || _1a532569d_COND);
	_1a7e2e12d_scope_enabled=((_1a532569d_COND || _1a52b7a3b_APPEND) || _1a52b4c58_COPY);
}



inline void _1a80386dd_throw(jule::Str _914_msg) {
	jule::outln(_914_msg);
	_1a4385eb2_exit(1LL);
}



inline jule::U64 _1a86525ba_unix(void) {
	return static_cast<jule::U64>(static_cast<jule::U64>(time(nullptr)));
}



inline jule::U64 _1a865290b_unix_year_to_seconds(jule::U64 _26225_y, jule::Bool& _26243_leap) {
	if (((_26225_y - 2LLU) <= 136LLU)) {
		jule::U64 _26417_leaps = ((_26225_y - 68LLU) >> 2LLU);;
		_26243_leap=(((_26225_y - 68LLU) & 3LLU) == 0LLU);
		if (_26243_leap) {
			(_26417_leaps)--;
		};
		return static_cast<jule::U64>(((31536000LLU * (_26225_y - 70LLU)) + (86400LLU * _26417_leaps)));
	};
	jule::U64 _27213_leaps = 0LLU;;
	jule::U64 _27313_centuries = 0LLU;;
	jule::U64 _27413_cycles = ((_26225_y - 100LLU) / 400LLU);;
	jule::U64 _27513_rem = ((_26225_y - 100LLU) % 400LL);;
	if ((_27513_rem < 0LLU)) {
		(_27413_cycles)--;
		_27513_rem+=400LLU;
	};
	if ((_27513_rem == 0LLU)) {
		_26243_leap=true;
		_27313_centuries=0LLU;
		_27213_leaps=0LLU;
	} else {
		if ((_27513_rem >= 200LLU)) {
			if ((_27513_rem >= 300LLU)) {
				_27313_centuries=3LLU;
				_27513_rem-=300LLU;
			} else {
				_27313_centuries=2LLU;
				_27513_rem-=200LLU;
			};
		} else {
			if ((_27513_rem >= 100LLU)) {
				_27313_centuries=1LLU;
				_27513_rem-=100LLU;
			} else {
				_27313_centuries=0LLU;
			};
		};
		if ((_27513_rem == 0LLU)) {
			_26243_leap=false;
			_27213_leaps=0LLU;
		} else {
			_27213_leaps=static_cast<jule::U64>((_27513_rem >> 2LLU));
			_27513_rem%=4LL;
			_26243_leap=(_27513_rem == 0LLU);
		};
	};
	_27213_leaps+=((97LLU * _27413_cycles) + (24LLU * _27313_centuries));
	if (_26243_leap) {
		(_27213_leaps)++;
	};
	return static_cast<jule::U64>((((((_26225_y - 100LLU) * 31536000LLU) + (_27213_leaps * 86400LLU)) + 946684800LLU) + 86400LLU));
}



inline jule::U64 _1a8652c91_unix_month_to_seconds(jule::U64 _31926_m, jule::Bool _31939_leap) {
	jule::U64 _32113_t = 0LLU;;
	{
		auto &_match_expr{ _31926_m };
		
		if (_match_expr == 1LL) {
			_case_begin_1aa973e6c:;
			{
				_32113_t=2678400LLU;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1aa9743ce:;
			{
				_32113_t=5097600LLU;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1aa974445:;
			{
				_32113_t=7776000LLU;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1aa9744ab:;
			{
				_32113_t=10368000LLU;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1aa974522:;
			{
				_32113_t=13046400LLU;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1aa974588:;
			{
				_32113_t=15638400LLU;
			}
		}
		else if (_match_expr == 7LL) {
			_case_begin_1aa974610:;
			{
				_32113_t=18316800LLU;
			}
		}
		else if (_match_expr == 8LL) {
			_case_begin_1aa974687:;
			{
				_32113_t=20995200LLU;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1aa97470e:;
			{
				_32113_t=23587200LLU;
			}
		}
		else if (_match_expr == 10LL) {
			_case_begin_1aa974786:;
			{
				_32113_t=26265600LLU;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1aa97480d:;
			{
				_32113_t=28857600LLU;
			}
		}
		_match_end_1aa9741c0:;
	};
	if ((_31939_leap && (_31926_m >= 2LLU))) {
		_32113_t+=86400LLU;
	};
	return _32113_t;
}



inline jule::Bool _1a85c432d_is_copy_optimizable(jule::Ptr<_1a76edda4_Data>& _73325_expr) {
	if ((!(_73325_expr.get()._field_lvalue))) {
		return false;
	};
	{
		auto &_match_expr{ _73325_expr.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1a686c023_SlicingExprModel>>()) {
			_case_begin_1aaa55779:;
			{
				return false;
			}
		}
		_match_end_1aaa556e1:;
	};
	return true;
}



inline jule::Bool _1a85c46d5_is_iter_copy_optimizable(jule::Ptr<_1a76edda4_Data>& _74430_expr, jule::Ptr<_1a76a7720_Var>& _74444_v) {
	if (((!(_74430_expr.get()._field_lvalue)) && (!(_1a7728c7a_mutable(_74430_expr.get()._field_kind.ptr()))))) {
		return true;
	};
	return ((!(_74444_v.get()._field_mutable)) && (!(_74430_expr.get()._field_mutable)));
}



inline jule::Str _1a85d2c21_decompose_common_esq(jule::U8 _114325_b) {
	{
		auto &_match_expr{ _114325_b };
		
		if (_match_expr == '\\') {
			_case_begin_1aab9171c:;
			{
				return jule::Str("\\\\", 2);
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1aab91783:;
			{
				return jule::Str("'", 1);
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1aab917e9:;
			{
				return jule::Str("\\\"", 2);
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_1aab91860:;
			{
				return jule::Str("\\a", 2);
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_1aab919b4:;
			{
				return jule::Str("\\b", 2);
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_1aab91a2a:;
			{
				return jule::Str("\\f", 2);
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_1aab91a91:;
			{
				return jule::Str("\\n", 2);
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_1aab91b18:;
			{
				return jule::Str("\\r", 2);
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_1aab91b90:;
			{
				return jule::Str("\\t", 2);
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_1aab91d7c:;
			{
				return jule::Str("\\v", 2);
			}
		}
		else {
			_case_begin_1aab907a4:;
			{
				return jule::Str();
			}
		}
		_match_end_1aab91563:;
	};
}



inline jule::Str _1a85d300c_sbtoa(jule::U8 _117010_b) {
	if ((_117010_b == 0LLU)) {
		return jule::Str("\\x00", 4);
	};
	if ((_117010_b < 128LLU)) {
		jule::Str _117513_seq = _1a85d2c21_decompose_common_esq(_117010_b);;
		if ((!(_117513_seq.empty()))) {
			return _117513_seq;
		};
		if (((32LL <= _117010_b) && (_117010_b <= 126LLU))) {
			return static_cast<jule::Str>(_117010_b);
		};
	};
	jule::Str _11839_seq = _1a7538a8a_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_117010_b)),8LL);;
	if ((_11839_seq.len() == 2LL)) {
		return (jule::Str("\\0", 2) + _11839_seq);
	};
	return (jule::Str("\\", 1) + _11839_seq);
}



inline jule::Str _1a85d32a4_cstr_bytes(jule::Slice<jule::U8> _119015_bytes) {
	jule::Str _119113_lit = jule::Str();;
	{
		auto &expr = _119015_bytes;
		auto it = expr.begin();
		_iter_begin_1aab97448:;
		if (it != expr.end()) {
			jule::U8 &_119212_b = *it;
			{
				_119113_lit+=_1a85d300c_sbtoa(_119212_b);
			}
			_iter_next_1aab97448:;
			++it;
			goto _iter_begin_1aab97448;
		}
		_iter_end_1aab97448:;
	};
	return _119113_lit;
}



inline jule::Str _1a85d3590_cstr_lit(jule::Slice<jule::U8> _119813_bytes) {
	return ((jule::Str("\"", 1) + _1a85d32a4_cstr_bytes(_119813_bytes)) + jule::Str("\"", 1));
}



inline jule::Str _1a85d38d1_ftoa(jule::F64 _12029_f, jule::I64 _120217_bitsize) {
	if ((_120217_bitsize != 32LL)) {
		if ((_12029_f == static_cast<jule::F64>(static_cast<jule::I64>(_12029_f)))) {
			return _1a85d3b78_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_12029_f)));
		};
		if ((_12029_f == static_cast<jule::F64>(static_cast<jule::U64>(_12029_f)))) {
			return _1a85d3e20_utoa(static_cast<jule::U64>(static_cast<jule::U64>(_12029_f)));
		};
	};
	jule::Str _121113_m = _1a6d3c290_fmt_float(_12029_f,'f',-1LL,_120217_bitsize);;
	if ((!(_1a4295c3a_contains(_121113_m,jule::Str(".", 1))))) {
		_121113_m+=jule::Str(".0", 2);
	};
	return _121113_m;
}



inline jule::Str _1a85d3b78_itoa(jule::I64 _12189_x) {
	{
		
		if ((_12189_x == jule::MAX_I64)) {
			_case_begin_1aab9b293:;
			{
				return jule::Str("jule::MAX_I64", 13);
			}
		}
		else if ((_12189_x == jule::MIN_I64)) {
			_case_begin_1aab9b35e:;
			{
				return jule::Str("jule::MIN_I64", 13);
			}
		}
		_match_end_1aab9b183:;
	};
	jule::Str _12269_fmt = _1a7538bbc_fmt_int(_12189_x,10LL);;
	if (_1a433998d_is_64bit(jule::Str("arm64", 5))) {
		return (_12269_fmt + jule::Str("LL", 2));
	};
	return (_12269_fmt + jule::Str("L", 1));
}



inline jule::Str _1a85d3e20_utoa(jule::U64 _12339_x) {
	{
		
		if ((_12339_x == jule::MAX_U64)) {
			_case_begin_1aab9d0a8:;
			{
				return jule::Str("jule::MAX_U64", 13);
			}
		}
		_match_end_1aab9cedc:;
	};
	jule::Str _12399_fmt = _1a7538a8a_fmt_uint(_12339_x,10LL);;
	if (_1a433998d_is_64bit(jule::Str("arm64", 5))) {
		return (_12399_fmt + jule::Str("LLU", 3));
	};
	return (_12399_fmt + jule::Str("LU", 2));
}



inline jule::Bool _1a85d4250_is_forwarded(jule::Ptr<_1a7658803_Scope>& _124618_s) {
	jule::Any _12479_last = _124618_s.get()._field_stmts[(_124618_s.get()._field_stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _12479_last };
		
		if (_match_expr.type_is<jule::Ptr<_1a76edda4_Data>>()) {
			_case_begin_1aab9e917:;
			{
				{
					auto &_match_expr{ _12479_last.operator jule::Ptr<_1a76edda4_Data>().get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1a686e4ed_BuiltinErrorCallExprModel>>()) {
						_case_begin_1aaba1496:;
						{
							return true;
						}
					}
					else {
						_case_begin_1aaba0d69:;
						{
							return false;
						}
					}
					_match_end_1aaba0d14:;
				};
			}
		}
		else {
			_case_begin_1aaba0242:;
			{
				return true;
			}
		}
		_match_end_1aaba01dc:;
	};
}



inline jule::Bool _1a85d4519_is_builtin_call_has_debuginf(jule::Ptr<_1a6845150_FnCallExprModel>& _126134_m) {
	if ((!(_1a6873a1e_is_builtin(_126134_m.get()._field_func.ptr())))) {
		return false;
	};
	{
		auto &_match_expr{ _126134_m.get()._field_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1a686cdd1_CommonSubIdentExprModel>>()) {
			_case_begin_1aaba219a:;
			{
				jule::Ptr<_1a686cdd1_CommonSubIdentExprModel> _126713_csie = _126134_m.get()._field_expr.operator jule::Ptr<_1a686cdd1_CommonSubIdentExprModel>();;
				return (_126713_csie.get()._field_ident == jule::Str("swap", 4));
			}
		}
		else {
			_case_begin_1aaba1001:;
			{
				return false;
			}
		}
		_match_end_1aaba1ae5:;
	};
}



inline void _1a865746b_iter_files(jule::Ptr<_1a7687bea_Package>& _100120_pkg, jule::Fn<void(jule::Ptr<_1a76e8e26_SymbolTable>&)> _100135_f) {
	{
		auto &expr = _100120_pkg.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1aaccc01c:;
		if (it != expr.end()) {
			jule::Ptr<_1a76e8e26_SymbolTable> _100217_file = *it;
			{
				_100135_f(_100217_file);
			}
			_iter_next_1aaccc01c:;
			++it;
			goto _iter_begin_1aaccc01c;
		}
		_iter_end_1aaccc01c:;
	};
}



inline void _1a86576be_prepare_structure(jule::Ptr<_1a6826829_Struct>& _100727_s) {
	{
		auto &expr = _100727_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1aaccc616:;
		if (it != expr.end()) {
			jule::Ptr<_1a6836a48_StructIns> _100817_ins = *it;
			{
				{
					auto &expr = _100817_ins.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_1aaccd2e8:;
					if (it != expr.end()) {
						jule::Ptr<_1a68709c7_Fn> _100921_m = *it;
						{
							if (_100921_m.get()._field_statically) {
								goto _iter_next_1aaccd2e8;
							};
							{
								auto &expr = _100921_m.get()._field_instances;
								auto it = expr.begin();
								_iter_begin_1aaccdb67:;
								if (it != expr.end()) {
									jule::Ptr<_1a6872c93_FnIns> _101325_mins = *it;
									{
										jule::Ptr<_1a6871e07_ParamIns> _101425_p = _101325_mins.get()._field_params[0LL];;
										if ((!(_1a6831ba8_is_ref(_101425_p.get()._field_decl.ptr())))) {
											_101425_p.get()._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(jule::new_ptr<_1a86588bd_CustomType>(_1a86588bd_CustomType{._field_kind=static__1a865a282_as_ptr(static__1a865d4d8_kind(_101425_p.get()._field_kind))}), 12)});
										} else {
											_101425_p.get()._field_kind=jule::new_ptr<_1a77278d3_TypeKind>(_1a77278d3_TypeKind{._field_kind=jule::Trait<_1a77274a4_Kind>(jule::new_ptr<_1a86588bd_CustomType>(_1a86588bd_CustomType{._field_kind=static__1a865d4d8_kind(_101425_p.get()._field_kind)}), 12)});
										};
									}
									_iter_next_1aaccdb67:;
									++it;
									goto _iter_begin_1aaccdb67;
								}
								_iter_end_1aaccdb67:;
							};
						}
						_iter_next_1aaccd2e8:;
						++it;
						goto _iter_begin_1aaccd2e8;
					}
					_iter_end_1aaccd2e8:;
				};
			}
			_iter_next_1aaccc616:;
			++it;
			goto _iter_begin_1aaccc616;
		}
		_iter_end_1aaccc616:;
	};
}



inline jule::Str _1a8657966_concat_all_parts(jule::Slice<jule::Ptr<_1a527737a_Token>> _103421_parts) {
	jule::Str _103513_s = jule::Str();;
	{
		auto &expr = _103421_parts;
		auto it = expr.begin();
		_iter_begin_1aaccd12d:;
		if (it != expr.end()) {
			jule::Ptr<_1a527737a_Token> &_103612_p = *it;
			{
				_103513_s+=_103612_p.get()._field_kind;
			}
			_iter_next_1aaccd12d:;
			++it;
			goto _iter_begin_1aaccd12d;
		}
		_iter_end_1aaccd12d:;
	};
	return _103513_s;
}



inline jule::Ptr<_1a6852525_Directive> _1a866030e_find_directive(jule::Slice<jule::Ptr<_1a6852525_Directive>>& _32024_directives, jule::Str _32055_tag) {
	{
		auto &expr = _32024_directives;
		auto it = expr.begin();
		_iter_begin_1aad0c28e:;
		if (it != expr.end()) {
			jule::Ptr<_1a6852525_Directive> _32117_dr = *it;
			{
				if ((_32117_dr.get()._field_tag.get()._field_kind == _32055_tag)) {
					return _32117_dr;
				};
			}
			_iter_next_1aad0c28e:;
			++it;
			goto _iter_begin_1aad0c28e;
		}
		_iter_end_1aad0c28e:;
	};
	return nullptr;
}



inline jule::Bool _1a8660694_has_directive(jule::Slice<jule::Ptr<_1a6852525_Directive>>& _33019_directives, jule::Str _33050_tag) {
	return (_1a866030e_find_directive(_33019_directives,_33050_tag) != nullptr);
}



inline void _1a42aba53_print_error_message(jule::Str _3024_msg) {
	jule::outln(_3024_msg);
}



inline void _1a4301614_help(jule::Slice<jule::Str>& _3510_args) {
	if ((_3510_args.len() > 2LL)) {
		_1a42aba53_print_error_message((jule::Str("invalid command: ", 17) + _3510_args[2LL]));
		return;;
	};
	jule::I64 _4113_max = _1a4307ab0_HELP_MAP[0LL][0LL].len();;
	{
		auto &expr = _1a4307ab0_HELP_MAP;
		auto it = expr.begin();
		_iter_begin_1aad59d9c:;
		if (it != expr.end()) {
			jule::Array<jule::Str,2> &_4212_k = *it;
			{
				jule::I64 _4313_n = _4212_k[0LL].len();;
				if ((_4313_n > _4113_max)) {
					_4113_max=_4313_n;
				};
			}
			_iter_next_1aad59d9c:;
			++it;
			goto _iter_begin_1aad59d9c;
		}
		_iter_end_1aad59d9c:;
	};
	jule::Str _4913_s = jule::Str();;
	;
	{
		auto &expr = _1a4307ab0_HELP_MAP;
		auto it = expr.begin();
		_iter_begin_1aad5b6c8:;
		if (it != expr.end()) {
			jule::I64 _519_i = it - expr.begin();
			jule::Array<jule::Str,2> &_5112_part = *it;
			{
				_4913_s+=_5112_part[0LL];
				_4913_s+=_1a4222117_repeat(jule::Str(" ", 1),static_cast<jule::I64>(((_4113_max - _5112_part[0LL].len()) + 5LL)));
				_4913_s+=_5112_part[1LL];
				if (((_519_i + 1LL) < 5LL)) {
					_4913_s+=jule::Str("\n", 1);
				};
			}
			_iter_next_1aad5b6c8:;
			++it;
			_519_i++;
			goto _iter_begin_1aad5b6c8;
		}
		_iter_end_1aad5b6c8:;
	};
	jule::outln(_4913_s);
}



inline void _1a4313cec_version(jule::Slice<jule::Str>& _6313_args) {
	if ((_6313_args.len() > 2LL)) {
		_1a42aba53_print_error_message((jule::Str("invalid command: ", 17) + _6313_args[2LL]));
		return;;
	};
	jule::outln(jule::Str("jule0.0.11 @master", 18));
}



inline void _1a43153e7_tool_distos(void) {
	jule::out(jule::Str("supported operating systems:\n ", 30));
	{
		auto &expr = _1a4337c33_DISTOS;
		auto it = expr.begin();
		_iter_begin_1aad5e984:;
		if (it != expr.end()) {
			jule::Str &_7412_os = *it;
			{
				jule::out(_7412_os);
				jule::out(jule::Str(" ", 1));
			}
			_iter_next_1aad5e984:;
			++it;
			goto _iter_begin_1aad5e984;
		}
		_iter_end_1aad5e984:;
	};
	jule::outln(jule::Str());
}



inline void _1a4315b89_tool_distarch(void) {
	jule::out(jule::Str("supported architects:\n ", 23));
	{
		auto &expr = _1a433800d_DISTARCH;
		auto it = expr.begin();
		_iter_begin_1aad60259:;
		if (it != expr.end()) {
			jule::Str &_8412_arch = *it;
			{
				jule::out(_8412_arch);
				jule::out(jule::Str(" ", 1));
			}
			_iter_next_1aad60259:;
			++it;
			goto _iter_begin_1aad60259;
		}
		_iter_end_1aad60259:;
	};
	jule::outln(jule::Str());
}



inline void _1a431642b_tool(jule::Slice<jule::Str>& _9210_args) {
	if ((_9210_args.len() == 2LL)) {
		jule::outln(jule::Str("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;;
	} else if ((_9210_args.len() > 3LL)) {
		_1a42aba53_print_error_message((jule::Str("invalid command: ", 17) + _9210_args[3LL]));
		return;;
	};
	jule::Str _1039_cmd = _9210_args[2LL];;
	{
		auto &_match_expr{ _1039_cmd };
		
		if (_match_expr == jule::Str("distos", 6)) {
			_case_begin_1aad6315d:;
			{
				_1a43153e7_tool_distos();
			}
		}
		else if (_match_expr == jule::Str("distarch", 8)) {
			_case_begin_1aad62dc7:;
			{
				_1a4315b89_tool_distarch();
			}
		}
		else {
			_case_begin_1aad61e4d:;
			{
				_1a42aba53_print_error_message((jule::Str("undefined command: ", 19) + _1039_cmd));
			}
		}
		_match_end_1aad62b96:;
	};
}



inline void _1a4316bbd_julenv(jule::Slice<jule::Str>& _11512_args) {
	if ((_11512_args.len() > 2LL)) {
		_1a42aba53_print_error_message((jule::Str("invalid command: ", 17) + _11512_args[2LL]));
		return;;
	};
	jule::outln(jule::Str("julec version: jule0.0.11 @master", 33));
	jule::outln(jule::Str("architecture: arm64", 19));
	jule::outln(jule::Str("operating system: linux", 23));
	jule::outln((jule::Str("default compiler: ", 18) + _1e0ca1b38_COMPILER));
	jule::outln((jule::Str("default C++ standard: ", 22) + _1e0ca1e9b_CPP_STD));
}



inline void _1a4317460_mod(jule::Slice<jule::Str>& _1289_args) {
	if ((_1289_args.len() == 2LL)) {
		jule::outln(jule::Str("command is not given, try julec mod init", 40));
		return;;
	};
	if ((_1289_args.len() > 3LL)) {
		_1a42aba53_print_error_message((jule::Str("invalid command: ", 17) + _1289_args[3LL]));
		return;;
	};
	{
		auto &_match_expr{ _1289_args[2LL] };
		
		if (_match_expr == jule::Str("init", 4)) {
			_case_begin_1aad6754c:;
			{
				({
					auto except = static__1d4ea08e2_write(jule::Str("jule.mod", 8),jule::Slice<jule::U8>(),432LL);
					if (!except.ok()) {
						_1a42aba53_print_error_message(jule::Str("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_1aad66628:;
			{
				_1a42aba53_print_error_message((jule::Str("invalid command: ", 17) + _1289_args[2LL]));
			}
		}
		_match_end_1aad67195:;
	};
}



inline jule::Bool _1a432721c_process_command(jule::Slice<jule::Str>& _15121_args) {
	{
		auto &_match_expr{ _15121_args[1LL] };
		
		if (_match_expr == jule::Str("help", 4)) {
			_case_begin_1aad68ce0:;
			{
				_1a4301614_help(_15121_args);
			}
		}
		else if (_match_expr == jule::Str("version", 7)) {
			_case_begin_1aad68d56:;
			{
				_1a4313cec_version(_15121_args);
			}
		}
		else if (_match_expr == jule::Str("tool", 4)) {
			_case_begin_1aad693c8:;
			{
				_1a431642b_tool(_15121_args);
			}
		}
		else if (_match_expr == jule::Str("julenv", 6)) {
			_case_begin_1aad6943e:;
			{
				_1a4316bbd_julenv(_15121_args);
			}
		}
		else if (_match_expr == jule::Str("mod", 3)) {
			_case_begin_1aad694e9:;
			{
				_1a4317460_mod(_15121_args);
			}
		}
		else {
			_case_begin_1aad67dcc:;
			{
				return false;
			}
		}
		_match_end_1aad6886c:;
	};
	return true;
}



inline void _1a42eda84_show_info(void) {
	jule::outln(jule::Str("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help,\n    version       Show version,\n    tool          Tools for effective Jule,\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 310));
}



void entry_point(void) {
	jule::Slice<jule::Str> _18713_args = _1d504d6b5_args();;
	if ((_18713_args.len() < 2LL)) {
		_1a42eda84_show_info();
		return;;
	};
	if (_1a432721c_process_command(_18713_args)) {
		return;;
	};
	_1a8694e15_compile_command(_18713_args);
}



inline void _1a850db80_init(void) {
	_1e0ca1b38_COMPILER=jule::Str("clang", 5);
}



inline jule::Ptr<_1d4ea035e_File> _1a8388b2b_open_output(jule::Str& _4817_path) {
	jule::Str _499_dir = _1a429b427_dir(_4817_path);;
	({
		auto except = static__1d4e9edb9_of(_499_dir);
		if (!except.ok()) {
			({
				auto except = static__1a429dbdd_create(_499_dir);
				if (!except.ok()) {
					_1a80386dd_throw(jule::Str("a problem occurs when code generation", 37));
				}
			});
		}
	});
	return ({
		auto except = static__1d4ea067d_create(_4817_path);
		(except.ok()) ? (except.result) : ({
			_1a80386dd_throw(jule::Str("a problem occurs when code generation", 37));
			nullptr;
		});
	});
}



inline void _1a8483b8d_clear_objects(void) {
	({
		auto except = static__1d4e061a5_remove(_1a8661d05_get_compile_path());
		if (!except.ok()) {
			jule::outln(jule::Str("a problem occurs when object cleaning", 37));
			return;;
		}
	});
	static__1a429ddec_remove(_1a8665545_OUT_DIR);
}



inline void _1a8667d1c_compile_ir(jule::Str _7715_compiler, jule::Str _7730_compiler_cmd) {
	jule::Ptr<_1a4382211_Cmd> _7813_cmd = static__1a4382640_new(_7715_compiler);;
	_7813_cmd.get()._field_args=jule::Slice<jule::Str>::make({_7715_compiler});
	_7813_cmd.get()._field_args=jule::append(_7813_cmd.get()._field_args,_1a4295b08_split(_7730_compiler_cmd,jule::Str(" ", 1),-1LL));
	jule::I64 _819_status = ({
		auto except = _1a43828a4_spawn(_7813_cmd.ptr());
		(except.ok()) ? (except.result) : ({
			{
				auto &_match_expr{ except.error };
				
				if (jule::Any(static_cast<jule::I64>(12LL)) == _match_expr) {
					_case_begin_1aad724be:;
					{
						static__1a8036466_print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of fork problem", 56));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(3LL)) == _match_expr) {
					_case_begin_1aad722b0:;
					{
						static__1a8036466_print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(9LL)) == _match_expr) {
					_case_begin_1aad72326:;
					{
						static__1a8036466_print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of compiler path is not in the proper format", 85));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(0LL)) == _match_expr) {
					_case_begin_1aad7238c:;
					{
						static__1a8036466_print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_1aad72007:;
					{
						static__1a8036466_print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of unkown problem", 58));
					}
				}
				_match_end_1aad72090:;
			};
			_1a80386dd_throw(jule::Str());
			0LL;
		});
	});;
	if ((_819_status != 0LL)) {
		jule::Str _9813_error_message = ((jule::Str("\n>>> your backend compiler (", 28) + _1e0ca1b38_COMPILER) + jule::Str(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149));;
		static__1a8036466_print(jule::Str("\033[31m", 5),_9813_error_message);
		_1a80386dd_throw(jule::Str());
	};
	_1a8483b8d_clear_objects();
}



inline jule::Bool _1a8676d4d_is_cpp_source_file(jule::Str _10923_path) {
	jule::I64 _1109_offset = _1a42953bb_find_last_byte(_10923_path,'.');;
	if ((_1109_offset == -1LL)) {
		return false;
	};
	return _1a43284d7_is_valid_cpp_ext(_10923_path.slice(_1109_offset));
}



inline void _1a8664335_push_comp_cmd_clang(jule::Str& _11729_cmd) {
	_11729_cmd+=jule::Str("-Wno-everything ", 16);
	_11729_cmd+=jule::Str("--std=", 6);
	{
		auto &_match_expr{ _1e0ca1e9b_CPP_STD };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1aad7ca4b:;
			{
				_11729_cmd+=jule::Str("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1aad7cab2:;
			{
				_11729_cmd+=jule::Str("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1aad7cb28:;
			{
				_11729_cmd+=jule::Str("c++20", 5);
			}
		}
		_match_end_1aad7c94c:;
	};
	_11729_cmd+=jule::Str(" ", 1);
	if (_1e0ca2c16_PRODUCTION) {
		_11729_cmd+=jule::Str("-O3 ", 4);
		_11729_cmd+=jule::Str("-flto ", 6);
		_11729_cmd+=jule::Str("-DNDEBUG ", 9);
		_11729_cmd+=jule::Str("-fomit-frame-pointer ", 21);
	} else {
		_11729_cmd+=jule::Str("-O0 ", 4);
	};
}



inline void _1a866e1a8_push_comp_cmd_gcc(jule::Str& _14327_cmd) {
	_14327_cmd+=jule::Str("-w ", 3);
	_14327_cmd+=jule::Str("--std=", 6);
	{
		auto &_match_expr{ _1e0ca1e9b_CPP_STD };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1aad7de04:;
			{
				_14327_cmd+=jule::Str("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1aad80037:;
			{
				_14327_cmd+=jule::Str("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1aad8009d:;
			{
				_14327_cmd+=jule::Str("c++20", 5);
			}
		}
		_match_end_1aad7ee38:;
	};
	_14327_cmd+=jule::Str(" ", 1);
	if (_1e0ca2c16_PRODUCTION) {
		_14327_cmd+=jule::Str("-O3 ", 4);
		_14327_cmd+=jule::Str("-DNDEBUG ", 9);
		_14327_cmd+=jule::Str("-fomit-frame-pointer ", 21);
	} else {
		_14327_cmd+=jule::Str("-O0 ", 4);
	};
}



inline std::tuple<jule::Str,jule::Str> _1a850dd28_gen_compile_cmd(jule::Str _16920_source_path, jule::Ptr<_1d5090729_IR>& _16939_ir) {
	jule::Str &_17010_compiler = _1e0ca1ce2_COMPILER_PATH;;
	jule::Str _17113_cmd = jule::Str();;
	{
		auto &_match_expr{ _1e0ca1b38_COMPILER };
		
		if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1aad824ce:;
			{
				_1a866e1a8_push_comp_cmd_gcc(_17113_cmd);
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1aad82864:;
			{
				_1a8664335_push_comp_cmd_clang(_17113_cmd);
			}
		}
		_match_end_1aad826bb:;
	};
	{
		auto &expr = _16939_ir.get()._field_passes;
		auto it = expr.begin();
		_iter_begin_1aad83469:;
		if (it != expr.end()) {
			jule::Str &_18112_pass = *it;
			{
				_17113_cmd+=_18112_pass;
				_17113_cmd+=jule::Str(" ", 1);
			}
			_iter_next_1aad83469:;
			++it;
			goto _iter_begin_1aad83469;
		}
		_iter_end_1aad83469:;
	};
	{
		auto &expr = _16939_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1aad838ba:;
		if (it != expr.end()) {
			jule::Ptr<_1a7685038_ImportInfo> &_18712_u = *it;
			{
				if ((_18712_u.get()._field_cpp_linked && _1a8676d4d_is_cpp_source_file(_18712_u.get()._field_path))) {
					_17113_cmd+=_18712_u.get()._field_path;
					_17113_cmd+=jule::Str(" ", 1);
				};
			}
			_iter_next_1aad838ba:;
			++it;
			goto _iter_begin_1aad838ba;
		}
		_iter_end_1aad838ba:;
	};
	if ((!(_1a866e8b2_OUT.empty()))) {
		_17113_cmd+=jule::Str("-o ", 3);
		_17113_cmd+=_1a866e8b2_OUT;
		_17113_cmd+=jule::Str(" ", 1);
	};
	_17113_cmd+=_16920_source_path;
	return std::make_tuple(_17010_compiler,_17113_cmd);
}



inline jule::Str _1a8661d05_get_compile_path(void) {
	return _1a429a811_join(jule::Slice<jule::Str>::make({_1a8665545_OUT_DIR,_1a866cd99_OUT_NAME}));
}



inline void _1a8587be8_apply_target_independent_optimizations(jule::Ptr<_1d5090729_IR>& _21448_ir) {
	jule::Ptr<_1a7ea9043_Optimizer> _21613_opt = static__1a7e54cad_new(_21448_ir);;
	_1a7ea4912_optimize(_21613_opt.ptr());
}



inline void _1a8665a84_check_compiler_flag(void) {
	{
		auto &_match_expr{ _1e0ca1b38_COMPILER };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1aad86b10:;
			{
				_1a80386dd_throw(jule::Str("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1aad86835:;
			{
				if (_1e0ca1ce2_COMPILER_PATH.empty()) {
					_1e0ca1ce2_COMPILER_PATH=jule::Str("clang++", 7);
				};
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1aad8689b:;
			{
				if (_1e0ca1ce2_COMPILER_PATH.empty()) {
					_1e0ca1ce2_COMPILER_PATH=jule::Str("g++", 3);
				};
			}
		}
		else {
			_case_begin_1aad85a54:;
			{
				_1a80386dd_throw((jule::Str("invalid option value for --compiler: ", 37) + _1e0ca1b38_COMPILER));
			}
		}
		_match_end_1aad867d0:;
	};
}



inline void _1a866119a_check_target_arch(jule::Str _23722_arch) {
	{
		auto &expr = _1a433800d_DISTARCH;
		auto it = expr.begin();
		_iter_begin_1aad87d0e:;
		if (it != expr.end()) {
			jule::Str &_23812_distarch = *it;
			{
				if ((_23722_arch == _23812_distarch)) {
					return;;
				};
			}
			_iter_next_1aad87d0e:;
			++it;
			goto _iter_begin_1aad87d0e;
		}
		_iter_end_1aad87d0e:;
	};
	_1a80386dd_throw((jule::Str("--target: unsupported/undefined architecture: ", 46) + _23722_arch));
}



inline void _1a86612cc_check_target_os(jule::Str _24620_os) {
	{
		auto &expr = _1a4337c33_DISTOS;
		auto it = expr.begin();
		_iter_begin_1aad89739:;
		if (it != expr.end()) {
			jule::Str &_24712_distos = *it;
			{
				if ((_24620_os == _24712_distos)) {
					return;;
				};
			}
			_iter_next_1aad89739:;
			++it;
			goto _iter_begin_1aad89739;
		}
		_iter_end_1aad89739:;
	};
	_1a80386dd_throw((jule::Str("--target: unsupported/undefined operating system: ", 50) + _24620_os));
}



inline void _1a8694497_check_target_flag(jule::Str& _25523_target) {
	if (_25523_target.empty()) {
		_1a80386dd_throw(jule::Str("missing option value: --target", 30));
	};
	jule::Slice<jule::Str> _2609_parts = _1a4295b08_split(_25523_target,jule::Str("-", 1),-1LL);;
	if ((_2609_parts.len() != 2LL)) {
		_1a80386dd_throw((jule::Str("--target: undefined platform target format: ", 44) + _25523_target));
	};
	jule::Str _26510_os = _2609_parts[0LL];;
	jule::Str _26514_arch = _2609_parts[1LL];;
	std::tie(_26510_os,_26514_arch) = std::make_tuple(_2609_parts[0LL],_2609_parts[1LL]);
	if ((_26510_os != jule::Str("native", 6))) {
		_1a86612cc_check_target_os(_26510_os);
		_1a4380770_OS=_26510_os;
	};
	if ((_26514_arch != jule::Str("native", 6))) {
		_1a866119a_check_target_arch(_26514_arch);
		_1a4346cb9_ARCH=_26514_arch;
	};
	_1a766309e_update_target();
}



inline void _1a86945c9_check_opt_flag(jule::Str& _27820_opt) {
	if (_27820_opt.empty()) {
		_1a80386dd_throw(jule::Str("missing option value: --opt", 27));
	};
	{
		auto &_match_expr{ _27820_opt };
		
		if (_match_expr == jule::Str("L0", 2)) {
			_case_begin_1aad8eb3a:;
		}
		else if (_match_expr == jule::Str("L1", 2)) {
			_case_begin_1aad8e8e8:;
			{
				_1a5975ec9_push_opt_level(static_cast<jule::I64>(1LL));
			}
		}
		else {
			_case_begin_1aad8e277:;
			{
				_1a80386dd_throw((jule::Str("--opt: invalid optimization level: ", 35) + _27820_opt));
			}
		}
		_match_end_1aad8e871:;
	};
}



inline void _1a869493c_check_cpp_std_flag(void) {
	{
		auto &_match_expr{ _1e0ca1e9b_CPP_STD };
		
		if (_match_expr == jule::Str("cpp14", 5) || _match_expr == jule::Str("cpp17", 5) || _match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1aad90c5c:;
			{
				goto _match_end_1aad90344;
			}
		}
		else {
			_case_begin_1aad8e95e:;
			{
				_1a80386dd_throw((jule::Str("--cppstd: invalid optimization level: ", 38) + _1e0ca1e9b_CPP_STD));
			}
		}
		_match_end_1aad90344:;
	};
}



inline jule::Slice<jule::Str> _1a8694a6e_check_flags(jule::Slice<jule::Str>& _30317_args) {
	jule::Str _30413_opt = jule::Str("L0", 2);;
	jule::Str _30513_target = jule::Str("native-native", 13);;
	jule::Ptr<_1a8690680_FlagSet> _30713_fs = static__1a869096b_new();;
	_1aad92962_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_30413_opt)))),jule::Str("opt", 3),0LL,jule::Str("Optimization level", 18));
	_1aad92962_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_30513_target)))),jule::Str("target", 6),0LL,jule::Str("Target system", 13));
	_1aad92962_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1a866e8b2_OUT)))),jule::Str("out", 3),'o',jule::Str("Output identifier", 17));
	_1aad9bb58_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1e0ca2155_SHADOWING)))),jule::Str("shadowing", 9),0LL,jule::Str("Allow shadowing", 15));
	_1aad9bb58_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1e0ca230e_TRANSPILATION)))),jule::Str("transpile", 9),'t',jule::Str("Transpile code", 14));
	_1aad92962_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1e0ca1b38_COMPILER)))),jule::Str("compiler", 8),0LL,jule::Str("Backend compiler", 16));
	_1aad92962_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1e0ca1ce2_COMPILER_PATH)))),jule::Str("compiler-path", 13),0LL,jule::Str("Path of backend compiler", 24));
	_1aad9bb58_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1e0ca2c16_PRODUCTION)))),jule::Str("production", 10),'p',jule::Str("Compile for production", 22));
	_1aad9bb58_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1e0ca26c7_RC)))),jule::Str("disable-rc", 10),0LL,jule::Str("Disable reference counting", 26));
	_1aad9bb58_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1e0ca29b3_SAFETY)))),jule::Str("disable-safety", 14),0LL,jule::Str("Disable safety", 14));
	_1aad92962_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1e0ca1e9b_CPP_STD)))),jule::Str("cppstd", 6),0LL,jule::Str("C++ standard", 12));
	_1aad9bb58_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1a52b4c58_COPY)))),jule::Str("opt-copy", 8),0LL,jule::Str("Copy optimization", 17));
	_1aad9bb58_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1a52b78d7_DEADCODE)))),jule::Str("opt-deadcode", 12),0LL,jule::Str("Deadcode optimization", 21));
	_1aad9bb58_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1a52b7a3b_APPEND)))),jule::Str("opt-append", 10),0LL,jule::Str("Append optimization", 19));
	_1aad9bb58_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1a52ba951_MATH)))),jule::Str("opt-math", 8),0LL,jule::Str("Math optimization", 17));
	_1aad9bb58_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1a52db92d_ACCESS)))),jule::Str("opt-access", 10),0LL,jule::Str("Access optimization", 19));
	_1aad9bb58_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1a532149b_INLINE)))),jule::Str("opt-inline", 10),0LL,jule::Str("Inline optimization", 19));
	_1aad9bb58_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1a532205c_PTR)))),jule::Str("opt-ptr", 7),0LL,jule::Str("Pointer optimizations", 21));
	_1aad9bb58_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1a532569d_COND)))),jule::Str("opt-cond", 8),0LL,jule::Str("Conditional optimizations", 25));
	jule::Slice<jule::Str> _32913_content = ({
		auto except = _1a86917b3_parse(_30713_fs.ptr(), _30317_args);
		(except.ok()) ? (except.result) : ({
			_1a80386dd_throw(except.error.operator jule::Str());
			nullptr;
		});
	});;
	_1a8665a84_check_compiler_flag();
	_1a869493c_check_cpp_std_flag();
	_1a8694497_check_target_flag(_30513_target);
	_1a86945c9_check_opt_flag(_30413_opt);
	return _32913_content;
}



inline void _1a8694ba1_setup_sema_flags(jule::I64& _34226_flags) {
	if (_1e0ca2155_SHADOWING) {
		_34226_flags|=static_cast<jule::I64>(1LL);
	};
}



inline jule::Ptr<_1d5090729_IR> _1a8694cd3_build_ir(jule::Slice<jule::Str>& _34814_args) {
	jule::Slice<jule::Str> _3499_content = _1a8694a6e_check_flags(_34814_args);;
	jule::I64 _35113_sema_flags = static_cast<jule::I64>(0LL);;
	_1a8694ba1_setup_sema_flags(_35113_sema_flags);
	if ((_3499_content.len() == 0LL)) {
		_1a80386dd_throw(_1a4334e1c_logf(jule::Str("missing compile path", 20),jule::Slice<jule::Any>()));
	} else if ((_3499_content.len() > 1LL)) {
		_1a80386dd_throw((jule::Str("undefined content: ", 19) + _3499_content[1LL]));
	};
	jule::Str _35914_path;;
	jule::Bool _35920_ok;;
	std::tie(_35914_path,_35920_ok) = _1a429ad50_abs(_3499_content[0LL]);
	if ((!(_35920_ok))) {
		_1a80386dd_throw(jule::Str("compile path could not processed because of a problem", 53));
	};
	jule::Ptr<_1d4ea101e_Status> _3659_inf = ({
		auto except = static__1d4e9edb9_of(_1a43483c5_PATH_STDLIB);
		(except.ok()) ? (except.result) : ({{
			_1a80386dd_throw(_1a4334e1c_logf(jule::Str("standard library directory not found", 36),jule::Slice<jule::Any>()));
			return nullptr;
		} jule::Ptr<_1d4ea101e_Status>();});
	});;
	if ((!(_1d4ea120b_is_dir(_3659_inf.ptr())))) {
		_1a80386dd_throw(_1a4334e1c_logf(jule::Str("standard library directory not found", 36),jule::Slice<jule::Any>()));
	};
	jule::Ptr<_1d5090729_IR> _37314_ir;;
	jule::Slice<_1a43349cc_Log> _37318_logs;;
	std::tie(_37314_ir,_37318_logs) = static__1a7d2d978_build(_35914_path,_35113_sema_flags);
	if (((_37314_ir == nullptr) && (_37318_logs == nullptr))) {
		_1a80386dd_throw(_1a4334e1c_logf(jule::Str("there is no Jule source code in package: @", 42),jule::Slice<jule::Any>::make({jule::Any(_35914_path)})));
	};
	if ((_37318_logs != nullptr)) {
		static__1a8037d4c_print_logs(_37318_logs);
		_1a80386dd_throw(jule::Str());
	};
	return _37314_ir;
}



inline void _1a8694e15_compile_command(jule::Slice<jule::Str>& _38825_args) {
	_38825_args=_38825_args.slice(1LL);
	if ((_38825_args[0LL] == jule::Str("test", 4))) {
		_1e0ca24b8_TEST=true;
		_38825_args=_38825_args.slice(1LL);
	};
	jule::Ptr<_1d5090729_IR> _39413_ir = _1a8694cd3_build_ir(_38825_args);;
	;
	if ((!(_1e0ca24b8_TEST))) {
		jule::Ptr<_1a68709c7_Fn> _39917_main = _1a768948d_find_fn(_39413_ir.get()._field_main.ptr(), jule::Str("main", 4),false);;
		if ((_39917_main == nullptr)) {
			_1a80386dd_throw(_1a4334e1c_logf(jule::Str("missing entry point: entry point (main) function is not defined", 63),jule::Slice<jule::Any>()));
		};
	};
	_1a8587be8_apply_target_independent_optimizations(_39413_ir);
	_1d519670e_order(_39413_ir.ptr());
	jule::Str _41010_compiler;;
	jule::Str _41020_compiler_cmd;;
	std::tie(_41010_compiler,_41020_compiler_cmd) = _1a850dd28_gen_compile_cmd(_1a8661d05_get_compile_path(),_39413_ir);
	jule::Ptr<_1a8615281_ObjectCoder> _41213_oc = static__1a863637e_new(_39413_ir,_1a8621743_SerializationInfo{._field_compiler=_41010_compiler, ._field_compiler_command=_41020_compiler_cmd});;
	if (_1e0ca24b8_TEST) {
		jule::Ptr<_1a85d61ca_TestCoder> _41717_tc = static__1a85d664d_new(_41213_oc);;
		_1a85d7880_serialize(_41717_tc);
	} else {
		_1a8657108_serialize(_41213_oc);
	};
	jule::Str _4239_path = _1a8661d05_get_compile_path();;
	jule::Ptr<_1d4ea035e_File> _42413_file = _1a8388b2b_open_output(_4239_path);;
	({
		auto except = _1d4e24d61_write(_42413_file.ptr(), static_cast<jule::Slice<jule::U8>>(_41213_oc.get()._field_obj));
		if (!except.ok()) {
			_1a80386dd_throw(jule::Str("object code could not write", 27));
		}
	});
	({
		auto except = _1d4ea0b56_close(_42413_file.ptr());
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:428:5"));
	});
	if ((!(_1e0ca230e_TRANSPILATION))) {
		_1a8667d1c_compile_ir(_41010_compiler,_41020_compiler_cmd);
	};
}



void __jule_call_initializers(void) {
	_1a4375a2e_init();
	_1a7663214_init();
	_1a850db80_init();

}

int main(int argc, char *argv[], char *envp[]) {
    jule::setup_argv(argc, argv);
    jule::setup_envp(envp);

    __jule_call_initializers();
    entry_point();

    return EXIT_SUCCESS;
}